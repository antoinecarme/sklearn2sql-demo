-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2018

-- This SQL code can contain one or more statements, to be executed in the order they appear in this file.



-- Model deployment code

WITH "DT_node_lookup" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_8" <= -0.005612778477370739) THEN CASE WHEN ("ADS"."Feature_2" <= 0.0061888848431408405) THEN CASE WHEN ("ADS"."Feature_8" <= -0.04327875375747681) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_6" <= -0.061809033155441284) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_2" <= 0.06654636561870575) THEN CASE WHEN ("ADS"."Feature_2" <= -0.00782267190515995) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_5" <= 0.02671290934085846) THEN 13 ELSE 14 END END END AS node_id_2 
FROM diabetes AS "ADS"), 
"DT_node_data" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 45 AS count, 3 AS depth, 2 AS parent_id, 76.73333333333333 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 89 AS count, 3 AS depth, 2 AS parent_id, 106.52808988764045 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 2 AS count, 3 AS depth, 5 AS parent_id, 244.0 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 27 AS count, 3 AS depth, 5 AS parent_id, 155.5185185185185 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 60 AS count, 3 AS depth, 9 AS parent_id, 155.5 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 105 AS count, 3 AS depth, 9 AS parent_id, 198.71428571428572 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 19 AS count, 3 AS depth, 12 AS parent_id, 297.3157894736842 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 6 AS count, 3 AS depth, 12 AS parent_id, 223.5 AS "Estimator") AS "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".node_id AS node_id, "DT_node_data".feature AS feature, "DT_node_data".threshold AS threshold, "DT_node_data".count AS count, "DT_node_data".depth AS depth, "DT_node_data".parent_id AS parent_id, "DT_node_data"."Estimator" AS "Estimator" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".node_id), 
"AdaBoost_Estim_0" AS 
(SELECT "DT_Output"."KEY" AS "KEY", "DT_Output"."Estimator" AS "Estimator", 0.1150198392581745 AS "Weight", 0 AS est_index 
FROM "DT_Output"), 
"DT_node_lookup_1" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_3" <= 0.03679146245121956) THEN CASE WHEN ("ADS"."Feature_7" <= 0.03135676681995392) THEN CASE WHEN ("ADS"."Feature_2" <= 0.07247433066368103) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_3" <= -0.04182075336575508) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_6" <= 0.021027816459536552) THEN CASE WHEN ("ADS"."Feature_2" <= 0.07894119620323181) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_8" <= 0.03883656859397888) THEN 13 ELSE 14 END END END AS node_id_2 
FROM diabetes AS "ADS"), 
"DT_node_data_1" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 179 AS count, 3 AS depth, 2 AS parent_id, 106.35754189944134 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 6 AS count, 3 AS depth, 2 AS parent_id, 219.66666666666666 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 15 AS count, 3 AS depth, 5 AS parent_id, 131.06666666666666 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 49 AS count, 3 AS depth, 5 AS parent_id, 197.14285714285714 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 77 AS count, 3 AS depth, 9 AS parent_id, 218.5064935064935 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 15 AS count, 3 AS depth, 9 AS parent_id, 291.26666666666665 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 10 AS count, 3 AS depth, 12 AS parent_id, 103.8 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 2 AS count, 3 AS depth, 12 AS parent_id, 201.0 AS "Estimator") AS "Values"), 
"DT_Output_1" AS 
(SELECT "DT_node_lookup_1"."KEY" AS "KEY", "DT_node_lookup_1".node_id_2 AS node_id_2, "DT_node_data_1".node_id AS node_id, "DT_node_data_1".feature AS feature, "DT_node_data_1".threshold AS threshold, "DT_node_data_1".count AS count, "DT_node_data_1".depth AS depth, "DT_node_data_1".parent_id AS parent_id, "DT_node_data_1"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_1" LEFT OUTER JOIN "DT_node_data_1" ON "DT_node_lookup_1".node_id_2 = "DT_node_data_1".node_id), 
"AdaBoost_Estim_1" AS 
(SELECT "DT_Output_1"."KEY" AS "KEY", "DT_Output_1"."Estimator" AS "Estimator", 0.10008342787417404 AS "Weight", 1 AS est_index 
FROM "DT_Output_1"), 
"DT_node_lookup_2" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_8" <= -0.019742898643016815) THEN CASE WHEN ("ADS"."Feature_3" <= 0.06835110485553741) THEN CASE WHEN ("ADS"."Feature_2" <= 0.00996122695505619) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_1" <= 0.003019241616129875) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_2" <= 0.06977979838848114) THEN CASE WHEN ("ADS"."Feature_3" <= 0.03679146245121956) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_5" <= 0.020136792212724686) THEN 13 ELSE 14 END END END AS node_id_2 
FROM diabetes AS "ADS"), 
"DT_node_data_2" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 90 AS count, 3 AS depth, 2 AS parent_id, 95.83333333333333 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 18 AS count, 3 AS depth, 2 AS parent_id, 136.88888888888889 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 8 AS count, 3 AS depth, 5 AS parent_id, 235.25 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 2 AS count, 3 AS depth, 5 AS parent_id, 150.5 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 155 AS count, 3 AS depth, 9 AS parent_id, 162.04516129032257 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 51 AS count, 3 AS depth, 9 AS parent_id, 221.15686274509804 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 18 AS count, 3 AS depth, 12 AS parent_id, 298.1666666666667 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 11 AS count, 3 AS depth, 12 AS parent_id, 217.54545454545453 AS "Estimator") AS "Values"), 
"DT_Output_2" AS 
(SELECT "DT_node_lookup_2"."KEY" AS "KEY", "DT_node_lookup_2".node_id_2 AS node_id_2, "DT_node_data_2".node_id AS node_id, "DT_node_data_2".feature AS feature, "DT_node_data_2".threshold AS threshold, "DT_node_data_2".count AS count, "DT_node_data_2".depth AS depth, "DT_node_data_2".parent_id AS parent_id, "DT_node_data_2"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_2" LEFT OUTER JOIN "DT_node_data_2" ON "DT_node_lookup_2".node_id_2 = "DT_node_data_2".node_id), 
"AdaBoost_Estim_2" AS 
(SELECT "DT_Output_2"."KEY" AS "KEY", "DT_Output_2"."Estimator" AS "Estimator", 0.0656540990304207 AS "Weight", 2 AS est_index 
FROM "DT_Output_2"), 
"DT_node_lookup_3" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_8" <= 0.00026727162185125053) THEN CASE WHEN ("ADS"."Feature_2" <= 0.004033260513097048) THEN CASE WHEN ("ADS"."Feature_5" <= 0.11267216503620148) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_0" <= -0.07634904980659485) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_5" <= 0.06663933396339417) THEN CASE WHEN ("ADS"."Feature_0" <= -0.029126055538654327) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_8" <= 0.05185259133577347) THEN 13 ELSE 14 END END END AS node_id_2 
FROM diabetes AS "ADS"), 
"DT_node_data_3" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 130 AS count, 3 AS depth, 2 AS parent_id, 100.7 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 3 AS count, 3 AS depth, 2 AS parent_id, 253.0 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 5 AS count, 3 AS depth, 5 AS parent_id, 302.0 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 45 AS count, 3 AS depth, 5 AS parent_id, 158.17777777777778 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 34 AS count, 3 AS depth, 9 AS parent_id, 162.41176470588235 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 106 AS count, 3 AS depth, 9 AS parent_id, 232.24528301886792 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 24 AS count, 3 AS depth, 12 AS parent_id, 110.70833333333333 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 6 AS count, 3 AS depth, 12 AS parent_id, 246.66666666666666 AS "Estimator") AS "Values"), 
"DT_Output_3" AS 
(SELECT "DT_node_lookup_3"."KEY" AS "KEY", "DT_node_lookup_3".node_id_2 AS node_id_2, "DT_node_data_3".node_id AS node_id, "DT_node_data_3".feature AS feature, "DT_node_data_3".threshold AS threshold, "DT_node_data_3".count AS count, "DT_node_data_3".depth AS depth, "DT_node_data_3".parent_id AS parent_id, "DT_node_data_3"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_3" LEFT OUTER JOIN "DT_node_data_3" ON "DT_node_lookup_3".node_id_2 = "DT_node_data_3".node_id), 
"AdaBoost_Estim_3" AS 
(SELECT "DT_Output_3"."KEY" AS "KEY", "DT_Output_3"."Estimator" AS "Estimator", 0.07733009241708044 AS "Weight", 3 AS est_index 
FROM "DT_Output_3"), 
"DT_node_lookup_4" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" <= 0.04552902653813362) THEN CASE WHEN ("ADS"."Feature_8" <= -0.009924227371811867) THEN CASE WHEN ("ADS"."Feature_5" <= 0.10531317442655563) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_9" <= 0.0009933558758348227) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_9" <= -0.025930337607860565) THEN CASE WHEN ("ADS"."Feature_3" <= -0.010834917426109314) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_3" <= -0.059035107493400574) THEN 13 ELSE 14 END END END AS node_id_2 
FROM diabetes AS "ADS"), 
"DT_node_data_4" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 120 AS count, 3 AS depth, 2 AS parent_id, 104.24166666666666 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 3 AS count, 3 AS depth, 2 AS parent_id, 253.0 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 57 AS count, 3 AS depth, 5 AS parent_id, 192.66666666666666 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 97 AS count, 3 AS depth, 5 AS parent_id, 146.61855670103094 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 4 AS count, 3 AS depth, 9 AS parent_id, 68.0 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 1 AS count, 3 AS depth, 9 AS parent_id, 221.0 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 5 AS count, 3 AS depth, 12 AS parent_id, 146.4 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 66 AS count, 3 AS depth, 12 AS parent_id, 276.9848484848485 AS "Estimator") AS "Values"), 
"DT_Output_4" AS 
(SELECT "DT_node_lookup_4"."KEY" AS "KEY", "DT_node_lookup_4".node_id_2 AS node_id_2, "DT_node_data_4".node_id AS node_id, "DT_node_data_4".feature AS feature, "DT_node_data_4".threshold AS threshold, "DT_node_data_4".count AS count, "DT_node_data_4".depth AS depth, "DT_node_data_4".parent_id AS parent_id, "DT_node_data_4"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_4" LEFT OUTER JOIN "DT_node_data_4" ON "DT_node_lookup_4".node_id_2 = "DT_node_data_4".node_id), 
"AdaBoost_Estim_4" AS 
(SELECT "DT_Output_4"."KEY" AS "KEY", "DT_Output_4"."Estimator" AS "Estimator", 0.07374464329551364 AS "Weight", 4 AS est_index 
FROM "DT_Output_4"), 
"DT_node_lookup_5" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_8" <= 0.01293455995619297) THEN CASE WHEN ("ADS"."Feature_6" <= -0.024992655962705612) THEN CASE WHEN ("ADS"."Feature_6" <= -0.04156002774834633) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_0" <= -0.08361412584781647) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_2" <= -0.02291204035282135) THEN CASE WHEN ("ADS"."Feature_2" <= -0.033151254057884216) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_2" <= 0.09349165856838226) THEN 13 ELSE 14 END END END AS node_id_2 
FROM diabetes AS "ADS"), 
"DT_node_data_5" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 19 AS count, 3 AS depth, 2 AS parent_id, 141.0 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 19 AS count, 3 AS depth, 2 AS parent_id, 218.10526315789474 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 12 AS count, 3 AS depth, 5 AS parent_id, 183.91666666666666 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 131 AS count, 3 AS depth, 5 AS parent_id, 113.04580152671755 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 9 AS count, 3 AS depth, 9 AS parent_id, 176.88888888888889 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 13 AS count, 3 AS depth, 9 AS parent_id, 87.84615384615384 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 130 AS count, 3 AS depth, 12 AS parent_id, 216.8230769230769 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 20 AS count, 3 AS depth, 12 AS parent_id, 301.4 AS "Estimator") AS "Values"), 
"DT_Output_5" AS 
(SELECT "DT_node_lookup_5"."KEY" AS "KEY", "DT_node_lookup_5".node_id_2 AS node_id_2, "DT_node_data_5".node_id AS node_id, "DT_node_data_5".feature AS feature, "DT_node_data_5".threshold AS threshold, "DT_node_data_5".count AS count, "DT_node_data_5".depth AS depth, "DT_node_data_5".parent_id AS parent_id, "DT_node_data_5"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_5" LEFT OUTER JOIN "DT_node_data_5" ON "DT_node_lookup_5".node_id_2 = "DT_node_data_5".node_id), 
"AdaBoost_Estim_5" AS 
(SELECT "DT_Output_5"."KEY" AS "KEY", "DT_Output_5"."Estimator" AS "Estimator", 0.053981577575733124 AS "Weight", 5 AS est_index 
FROM "DT_Output_5"), 
"DT_node_lookup_6" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" <= 0.005111072678118944) THEN CASE WHEN ("ADS"."Feature_8" <= 0.02200143411755562) THEN CASE WHEN ("ADS"."Feature_6" <= 0.021027816459536552) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_6" <= 0.026550274342298508) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_9" <= 0.03413021191954613) THEN CASE WHEN ("ADS"."Feature_2" <= 0.1376819610595703) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_0" <= -0.05092128366231918) THEN 13 ELSE 14 END END END AS node_id_2 
FROM diabetes AS "ADS"), 
"DT_node_data_6" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 90 AS count, 3 AS depth, 2 AS parent_id, 124.71111111111111 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 47 AS count, 3 AS depth, 2 AS parent_id, 78.91489361702128 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 28 AS count, 3 AS depth, 5 AS parent_id, 230.82142857142858 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 11 AS count, 3 AS depth, 5 AS parent_id, 120.27272727272727 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 108 AS count, 3 AS depth, 9 AS parent_id, 173.36111111111111 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 5 AS count, 3 AS depth, 9 AS parent_id, 346.0 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 4 AS count, 3 AS depth, 12 AS parent_id, 128.0 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 60 AS count, 3 AS depth, 12 AS parent_id, 265.68333333333334 AS "Estimator") AS "Values"), 
"DT_Output_6" AS 
(SELECT "DT_node_lookup_6"."KEY" AS "KEY", "DT_node_lookup_6".node_id_2 AS node_id_2, "DT_node_data_6".node_id AS node_id, "DT_node_data_6".feature AS feature, "DT_node_data_6".threshold AS threshold, "DT_node_data_6".count AS count, "DT_node_data_6".depth AS depth, "DT_node_data_6".parent_id AS parent_id, "DT_node_data_6"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_6" LEFT OUTER JOIN "DT_node_data_6" ON "DT_node_lookup_6".node_id_2 = "DT_node_data_6".node_id), 
"AdaBoost_Estim_6" AS 
(SELECT "DT_Output_6"."KEY" AS "KEY", "DT_Output_6"."Estimator" AS "Estimator", 0.07001474719339128 AS "Weight", 6 AS est_index 
FROM "DT_Output_6"), 
"DT_node_lookup_7" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_9" <= -0.015575071796774864) THEN CASE WHEN ("ADS"."Feature_3" <= 0.05917011946439743) THEN CASE WHEN ("ADS"."Feature_8" <= -0.04914000630378723) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_3" <= 0.07179398089647293) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_2" <= 0.005111072678118944) THEN CASE WHEN ("ADS"."Feature_7" <= 0.03061874583363533) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_4" <= 0.05553308129310608) THEN 13 ELSE 14 END END END AS node_id_2 
FROM diabetes AS "ADS"), 
"DT_node_data_7" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 30 AS count, 3 AS depth, 2 AS parent_id, 77.53333333333333 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 68 AS count, 3 AS depth, 2 AS parent_id, 119.72058823529412 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 6 AS count, 3 AS depth, 5 AS parent_id, 262.6666666666667 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 4 AS count, 3 AS depth, 5 AS parent_id, 204.75 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 79 AS count, 3 AS depth, 9 AS parent_id, 118.73417721518987 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 48 AS count, 3 AS depth, 9 AS parent_id, 192.41666666666666 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 91 AS count, 3 AS depth, 12 AS parent_id, 252.05494505494505 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 27 AS count, 3 AS depth, 12 AS parent_id, 142.40740740740742 AS "Estimator") AS "Values"), 
"DT_Output_7" AS 
(SELECT "DT_node_lookup_7"."KEY" AS "KEY", "DT_node_lookup_7".node_id_2 AS node_id_2, "DT_node_data_7".node_id AS node_id, "DT_node_data_7".feature AS feature, "DT_node_data_7".threshold AS threshold, "DT_node_data_7".count AS count, "DT_node_data_7".depth AS depth, "DT_node_data_7".parent_id AS parent_id, "DT_node_data_7"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_7" LEFT OUTER JOIN "DT_node_data_7" ON "DT_node_lookup_7".node_id_2 = "DT_node_data_7".node_id), 
"AdaBoost_Estim_7" AS 
(SELECT "DT_Output_7"."KEY" AS "KEY", "DT_Output_7"."Estimator" AS "Estimator", 0.06066527207490734 AS "Weight", 7 AS est_index 
FROM "DT_Output_7"), 
"DT_node_lookup_8" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" <= 0.047145746648311615) THEN CASE WHEN ("ADS"."Feature_8" <= -0.009431487880647182) THEN CASE WHEN ("ADS"."Feature_6" <= 0.021027816459536552) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_0" <= 0.03625963628292084) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_3" <= -0.05042792856693268) THEN CASE WHEN ("ADS"."Feature_8" <= 0.01786671206355095) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_0" <= -0.052737556397914886) THEN 13 ELSE 14 END END END AS node_id_2 
FROM diabetes AS "ADS"), 
"DT_node_data_8" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 61 AS count, 3 AS depth, 2 AS parent_id, 130.54098360655738 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 38 AS count, 3 AS depth, 2 AS parent_id, 78.84210526315789 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 131 AS count, 3 AS depth, 5 AS parent_id, 149.10687022900763 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 55 AS count, 3 AS depth, 5 AS parent_id, 216.78181818181818 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 10 AS count, 3 AS depth, 9 AS parent_id, 85.9 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 3 AS count, 3 AS depth, 9 AS parent_id, 192.0 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 2 AS count, 3 AS depth, 12 AS parent_id, 98.0 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 53 AS count, 3 AS depth, 12 AS parent_id, 272.33962264150944 AS "Estimator") AS "Values"), 
"DT_Output_8" AS 
(SELECT "DT_node_lookup_8"."KEY" AS "KEY", "DT_node_lookup_8".node_id_2 AS node_id_2, "DT_node_data_8".node_id AS node_id, "DT_node_data_8".feature AS feature, "DT_node_data_8".threshold AS threshold, "DT_node_data_8".count AS count, "DT_node_data_8".depth AS depth, "DT_node_data_8".parent_id AS parent_id, "DT_node_data_8"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_8" LEFT OUTER JOIN "DT_node_data_8" ON "DT_node_lookup_8".node_id_2 = "DT_node_data_8".node_id), 
"AdaBoost_Estim_8" AS 
(SELECT "DT_Output_8"."KEY" AS "KEY", "DT_Output_8"."Estimator" AS "Estimator", 0.050221228613875284 AS "Weight", 8 AS est_index 
FROM "DT_Output_8"), 
"DT_node_lookup_9" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_9" <= 0.03827231749892235) THEN CASE WHEN ("ADS"."Feature_2" <= 0.06924089789390564) THEN CASE WHEN ("ADS"."Feature_0" <= -0.08906293660402298) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_0" <= -0.03820740059018135) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_2" <= -0.007283765822649002) THEN CASE WHEN ("ADS"."Feature_0" <= 0.012648137286305428) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_4" <= 0.038333673030138016) THEN 13 ELSE 14 END END END AS node_id_2 
FROM diabetes AS "ADS"), 
"DT_node_data_9" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 20 AS count, 3 AS depth, 2 AS parent_id, 226.05 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 249 AS count, 3 AS depth, 2 AS parent_id, 134.34939759036143 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 2 AS count, 3 AS depth, 5 AS parent_id, 346.0 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 11 AS count, 3 AS depth, 5 AS parent_id, 275.90909090909093 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 4 AS count, 3 AS depth, 9 AS parent_id, 86.5 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 8 AS count, 3 AS depth, 9 AS parent_id, 183.375 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 48 AS count, 3 AS depth, 12 AS parent_id, 275.0833333333333 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 11 AS count, 3 AS depth, 12 AS parent_id, 213.27272727272728 AS "Estimator") AS "Values"), 
"DT_Output_9" AS 
(SELECT "DT_node_lookup_9"."KEY" AS "KEY", "DT_node_lookup_9".node_id_2 AS node_id_2, "DT_node_data_9".node_id AS node_id, "DT_node_data_9".feature AS feature, "DT_node_data_9".threshold AS threshold, "DT_node_data_9".count AS count, "DT_node_data_9".depth AS depth, "DT_node_data_9".parent_id AS parent_id, "DT_node_data_9"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_9" LEFT OUTER JOIN "DT_node_data_9" ON "DT_node_lookup_9".node_id_2 = "DT_node_data_9".node_id), 
"AdaBoost_Estim_9" AS 
(SELECT "DT_Output_9"."KEY" AS "KEY", "DT_Output_9"."Estimator" AS "Estimator", 0.04220668596379268 AS "Weight", 9 AS est_index 
FROM "DT_Output_9"), 
"DT_node_lookup_10" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" <= -0.02237313613295555) THEN CASE WHEN ("ADS"."Feature_6" <= -0.019470199942588806) THEN CASE WHEN ("ADS"."Feature_3" <= 0.035643838346004486) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_3" <= -0.07280658930540085) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_9" <= -0.011432964354753494) THEN CASE WHEN ("ADS"."Feature_5" <= -0.022607972845435143) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_6" <= 0.05968501418828964) THEN 13 ELSE 14 END END END AS node_id_2 
FROM diabetes AS "ADS"), 
"DT_node_data_10" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 10 AS count, 3 AS depth, 2 AS parent_id, 140.2 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 6 AS count, 3 AS depth, 2 AS parent_id, 252.66666666666666 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 8 AS count, 3 AS depth, 5 AS parent_id, 148.875 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 56 AS count, 3 AS depth, 5 AS parent_id, 88.66071428571429 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 36 AS count, 3 AS depth, 9 AS parent_id, 90.72222222222223 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 36 AS count, 3 AS depth, 9 AS parent_id, 175.05555555555554 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 188 AS count, 3 AS depth, 12 AS parent_id, 207.4468085106383 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 13 AS count, 3 AS depth, 12 AS parent_id, 75.76923076923077 AS "Estimator") AS "Values"), 
"DT_Output_10" AS 
(SELECT "DT_node_lookup_10"."KEY" AS "KEY", "DT_node_lookup_10".node_id_2 AS node_id_2, "DT_node_data_10".node_id AS node_id, "DT_node_data_10".feature AS feature, "DT_node_data_10".threshold AS threshold, "DT_node_data_10".count AS count, "DT_node_data_10".depth AS depth, "DT_node_data_10".parent_id AS parent_id, "DT_node_data_10"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_10" LEFT OUTER JOIN "DT_node_data_10" ON "DT_node_lookup_10".node_id_2 = "DT_node_data_10".node_id), 
"AdaBoost_Estim_10" AS 
(SELECT "DT_Output_10"."KEY" AS "KEY", "DT_Output_10"."Estimator" AS "Estimator", 0.02380284469479391 AS "Weight", 10 AS est_index 
FROM "DT_Output_10"), 
"DT_node_lookup_11" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" <= -0.02291204035282135) THEN CASE WHEN ("ADS"."Feature_4" <= -0.05247921496629715) THEN CASE WHEN ("ADS"."Feature_5" <= -0.06942366808652878) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_0" <= -0.09451174736022949) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_6" <= -0.045241665095090866) THEN CASE WHEN ("ADS"."Feature_1" <= 0.003019241616129875) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_0" <= -0.08361412584781647) THEN 13 ELSE 14 END END END AS node_id_2 
FROM diabetes AS "ADS"), 
"DT_node_data_11" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 8 AS count, 3 AS depth, 2 AS parent_id, 104.5 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 8 AS count, 3 AS depth, 2 AS parent_id, 205.75 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 4 AS count, 3 AS depth, 5 AS parent_id, 189.5 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 56 AS count, 3 AS depth, 5 AS parent_id, 93.21428571428571 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 25 AS count, 3 AS depth, 9 AS parent_id, 304.28 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 32 AS count, 3 AS depth, 9 AS parent_id, 190.65625 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 12 AS count, 3 AS depth, 12 AS parent_id, 285.0 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 208 AS count, 3 AS depth, 12 AS parent_id, 160.20673076923077 AS "Estimator") AS "Values"), 
"DT_Output_11" AS 
(SELECT "DT_node_lookup_11"."KEY" AS "KEY", "DT_node_lookup_11".node_id_2 AS node_id_2, "DT_node_data_11".node_id AS node_id, "DT_node_data_11".feature AS feature, "DT_node_data_11".threshold AS threshold, "DT_node_data_11".count AS count, "DT_node_data_11".depth AS depth, "DT_node_data_11".parent_id AS parent_id, "DT_node_data_11"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_11" LEFT OUTER JOIN "DT_node_data_11" ON "DT_node_lookup_11".node_id_2 = "DT_node_data_11".node_id), 
"AdaBoost_Estim_11" AS 
(SELECT "DT_Output_11"."KEY" AS "KEY", "DT_Output_11"."Estimator" AS "Estimator", 0.06835178949640038 AS "Weight", 11 AS est_index 
FROM "DT_Output_11"), 
"DT_node_lookup_12" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_3" <= 0.02359379082918167) THEN CASE WHEN ("ADS"."Feature_9" <= -0.007290857844054699) THEN CASE WHEN ("ADS"."Feature_2" <= 0.026128407567739487) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_2" <= -0.006744860205799341) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_2" <= 0.047684650868177414) THEN CASE WHEN ("ADS"."Feature_9" <= 0.05069863796234131) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_0" <= 0.05442233011126518) THEN 13 ELSE 14 END END END AS node_id_2 
FROM diabetes AS "ADS"), 
"DT_node_data_12" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 88 AS count, 3 AS depth, 2 AS parent_id, 136.22727272727272 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 27 AS count, 3 AS depth, 2 AS parent_id, 63.851851851851855 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 33 AS count, 3 AS depth, 5 AS parent_id, 119.93939393939394 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 93 AS count, 3 AS depth, 5 AS parent_id, 200.98924731182797 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 50 AS count, 3 AS depth, 9 AS parent_id, 158.18 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 24 AS count, 3 AS depth, 9 AS parent_id, 271.3333333333333 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 30 AS count, 3 AS depth, 12 AS parent_id, 277.23333333333335 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 8 AS count, 3 AS depth, 12 AS parent_id, 321.125 AS "Estimator") AS "Values"), 
"DT_Output_12" AS 
(SELECT "DT_node_lookup_12"."KEY" AS "KEY", "DT_node_lookup_12".node_id_2 AS node_id_2, "DT_node_data_12".node_id AS node_id, "DT_node_data_12".feature AS feature, "DT_node_data_12".threshold AS threshold, "DT_node_data_12".count AS count, "DT_node_data_12".depth AS depth, "DT_node_data_12".parent_id AS parent_id, "DT_node_data_12"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_12" LEFT OUTER JOIN "DT_node_data_12" ON "DT_node_lookup_12".node_id_2 = "DT_node_data_12".node_id), 
"AdaBoost_Estim_12" AS 
(SELECT "DT_Output_12"."KEY" AS "KEY", "DT_Output_12"."Estimator" AS "Estimator", 0.055774703092207105 AS "Weight", 12 AS est_index 
FROM "DT_Output_12"), 
"DT_node_lookup_13" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_9" <= 0.03413021191954613) THEN CASE WHEN ("ADS"."Feature_2" <= 0.06870198249816895) THEN CASE WHEN ("ADS"."Feature_0" <= -0.09087920188903809) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_6" <= -0.0029028295539319515) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_0" <= 0.03262709826231003) THEN CASE WHEN ("ADS"."Feature_9" <= 0.09626181423664093) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_2" <= -0.010517202317714691) THEN 13 ELSE 14 END END END AS node_id_2 
FROM diabetes AS "ADS"), 
"DT_node_data_13" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 13 AS count, 3 AS depth, 2 AS parent_id, 246.84615384615384 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 238 AS count, 3 AS depth, 2 AS parent_id, 146.9453781512605 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 12 AS count, 3 AS depth, 5 AS parent_id, 315.6666666666667 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 4 AS count, 3 AS depth, 5 AS parent_id, 211.0 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 41 AS count, 3 AS depth, 9 AS parent_id, 178.8780487804878 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 9 AS count, 3 AS depth, 9 AS parent_id, 287.1111111111111 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 8 AS count, 3 AS depth, 12 AS parent_id, 206.75 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 28 AS count, 3 AS depth, 12 AS parent_id, 305.07142857142856 AS "Estimator") AS "Values"), 
"DT_Output_13" AS 
(SELECT "DT_node_lookup_13"."KEY" AS "KEY", "DT_node_lookup_13".node_id_2 AS node_id_2, "DT_node_data_13".node_id AS node_id, "DT_node_data_13".feature AS feature, "DT_node_data_13".threshold AS threshold, "DT_node_data_13".count AS count, "DT_node_data_13".depth AS depth, "DT_node_data_13".parent_id AS parent_id, "DT_node_data_13"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_13" LEFT OUTER JOIN "DT_node_data_13" ON "DT_node_lookup_13".node_id_2 = "DT_node_data_13".node_id), 
"AdaBoost_Estim_13" AS 
(SELECT "DT_Output_13"."KEY" AS "KEY", "DT_Output_13"."Estimator" AS "Estimator", 0.038685900415162254 AS "Weight", 13 AS est_index 
FROM "DT_Output_13"), 
"DT_node_lookup_14" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_8" <= -0.02772444486618042) THEN CASE WHEN ("ADS"."Feature_8" <= -0.04327875375747681) THEN CASE WHEN ("ADS"."Feature_9" <= -0.007290857844054699) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_1" <= 0.003019241616129875) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_3" <= 0.016708049923181534) THEN CASE WHEN ("ADS"."Feature_8" <= -0.018657658249139786) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_2" <= 0.012116851285099983) THEN 13 ELSE 14 END END END AS node_id_2 
FROM diabetes AS "ADS"), 
"DT_node_data_14" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 29 AS count, 3 AS depth, 2 AS parent_id, 59.41379310344828 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 14 AS count, 3 AS depth, 2 AS parent_id, 121.0 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 12 AS count, 3 AS depth, 5 AS parent_id, 164.83333333333334 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 11 AS count, 3 AS depth, 5 AS parent_id, 84.81818181818181 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 12 AS count, 3 AS depth, 9 AS parent_id, 40.75 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 149 AS count, 3 AS depth, 9 AS parent_id, 161.78523489932886 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 72 AS count, 3 AS depth, 12 AS parent_id, 182.04166666666666 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 54 AS count, 3 AS depth, 12 AS parent_id, 269.74074074074076 AS "Estimator") AS "Values"), 
"DT_Output_14" AS 
(SELECT "DT_node_lookup_14"."KEY" AS "KEY", "DT_node_lookup_14".node_id_2 AS node_id_2, "DT_node_data_14".node_id AS node_id, "DT_node_data_14".feature AS feature, "DT_node_data_14".threshold AS threshold, "DT_node_data_14".count AS count, "DT_node_data_14".depth AS depth, "DT_node_data_14".parent_id AS parent_id, "DT_node_data_14"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_14" LEFT OUTER JOIN "DT_node_data_14" ON "DT_node_lookup_14".node_id_2 = "DT_node_data_14".node_id), 
"AdaBoost_Estim_14" AS 
(SELECT "DT_Output_14"."KEY" AS "KEY", "DT_Output_14"."Estimator" AS "Estimator", 0.0579441216436929 AS "Weight", 14 AS est_index 
FROM "DT_Output_14"), 
"DT_node_lookup_15" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" <= 0.06924089789390564) THEN CASE WHEN ("ADS"."Feature_9" <= 0.03413021191954613) THEN CASE WHEN ("ADS"."Feature_9" <= 0.0009933558758348227) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_3" <= 0.018429484218358994) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_0" <= -0.052737556397914886) THEN 9 ELSE CASE WHEN ("ADS"."Feature_6" <= -0.012106924317777157) THEN 11 ELSE 12 END END END AS node_id_2 
FROM diabetes AS "ADS"), 
"DT_node_data_15" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 162 AS count, 3 AS depth, 2 AS parent_id, 154.99382716049382 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 90 AS count, 3 AS depth, 2 AS parent_id, 100.74444444444444 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 23 AS count, 3 AS depth, 5 AS parent_id, 158.30434782608697 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 32 AS count, 3 AS depth, 5 AS parent_id, 263.34375 AS "Estimator" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 8 AS count, 2 AS depth, 8 AS parent_id, 128.0 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 33 AS count, 3 AS depth, 10 AS parent_id, 310.6060606060606 AS "Estimator" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 5 AS count, 3 AS depth, 10 AS parent_id, 180.2 AS "Estimator") AS "Values"), 
"DT_Output_15" AS 
(SELECT "DT_node_lookup_15"."KEY" AS "KEY", "DT_node_lookup_15".node_id_2 AS node_id_2, "DT_node_data_15".node_id AS node_id, "DT_node_data_15".feature AS feature, "DT_node_data_15".threshold AS threshold, "DT_node_data_15".count AS count, "DT_node_data_15".depth AS depth, "DT_node_data_15".parent_id AS parent_id, "DT_node_data_15"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_15" LEFT OUTER JOIN "DT_node_data_15" ON "DT_node_lookup_15".node_id_2 = "DT_node_data_15".node_id), 
"AdaBoost_Estim_15" AS 
(SELECT "DT_Output_15"."KEY" AS "KEY", "DT_Output_15"."Estimator" AS "Estimator", 0.046519027360680365 AS "Weight", 15 AS est_index 
FROM "DT_Output_15"), 
"WeightedEstimators" AS 
(SELECT ensemble_score_union."KEY" AS "KEY", ensemble_score_union."Estimator" AS "Estimator", ensemble_score_union."Weight" AS "Weight", ensemble_score_union.est_index AS est_index 
FROM (SELECT "AdaBoost_Estim_0"."KEY" AS "KEY", "AdaBoost_Estim_0"."Estimator" AS "Estimator", "AdaBoost_Estim_0"."Weight" AS "Weight", "AdaBoost_Estim_0".est_index AS est_index 
FROM "AdaBoost_Estim_0" UNION ALL SELECT "AdaBoost_Estim_1"."KEY" AS "KEY", "AdaBoost_Estim_1"."Estimator" AS "Estimator", "AdaBoost_Estim_1"."Weight" AS "Weight", "AdaBoost_Estim_1".est_index AS est_index 
FROM "AdaBoost_Estim_1" UNION ALL SELECT "AdaBoost_Estim_2"."KEY" AS "KEY", "AdaBoost_Estim_2"."Estimator" AS "Estimator", "AdaBoost_Estim_2"."Weight" AS "Weight", "AdaBoost_Estim_2".est_index AS est_index 
FROM "AdaBoost_Estim_2" UNION ALL SELECT "AdaBoost_Estim_3"."KEY" AS "KEY", "AdaBoost_Estim_3"."Estimator" AS "Estimator", "AdaBoost_Estim_3"."Weight" AS "Weight", "AdaBoost_Estim_3".est_index AS est_index 
FROM "AdaBoost_Estim_3" UNION ALL SELECT "AdaBoost_Estim_4"."KEY" AS "KEY", "AdaBoost_Estim_4"."Estimator" AS "Estimator", "AdaBoost_Estim_4"."Weight" AS "Weight", "AdaBoost_Estim_4".est_index AS est_index 
FROM "AdaBoost_Estim_4" UNION ALL SELECT "AdaBoost_Estim_5"."KEY" AS "KEY", "AdaBoost_Estim_5"."Estimator" AS "Estimator", "AdaBoost_Estim_5"."Weight" AS "Weight", "AdaBoost_Estim_5".est_index AS est_index 
FROM "AdaBoost_Estim_5" UNION ALL SELECT "AdaBoost_Estim_6"."KEY" AS "KEY", "AdaBoost_Estim_6"."Estimator" AS "Estimator", "AdaBoost_Estim_6"."Weight" AS "Weight", "AdaBoost_Estim_6".est_index AS est_index 
FROM "AdaBoost_Estim_6" UNION ALL SELECT "AdaBoost_Estim_7"."KEY" AS "KEY", "AdaBoost_Estim_7"."Estimator" AS "Estimator", "AdaBoost_Estim_7"."Weight" AS "Weight", "AdaBoost_Estim_7".est_index AS est_index 
FROM "AdaBoost_Estim_7" UNION ALL SELECT "AdaBoost_Estim_8"."KEY" AS "KEY", "AdaBoost_Estim_8"."Estimator" AS "Estimator", "AdaBoost_Estim_8"."Weight" AS "Weight", "AdaBoost_Estim_8".est_index AS est_index 
FROM "AdaBoost_Estim_8" UNION ALL SELECT "AdaBoost_Estim_9"."KEY" AS "KEY", "AdaBoost_Estim_9"."Estimator" AS "Estimator", "AdaBoost_Estim_9"."Weight" AS "Weight", "AdaBoost_Estim_9".est_index AS est_index 
FROM "AdaBoost_Estim_9" UNION ALL SELECT "AdaBoost_Estim_10"."KEY" AS "KEY", "AdaBoost_Estim_10"."Estimator" AS "Estimator", "AdaBoost_Estim_10"."Weight" AS "Weight", "AdaBoost_Estim_10".est_index AS est_index 
FROM "AdaBoost_Estim_10" UNION ALL SELECT "AdaBoost_Estim_11"."KEY" AS "KEY", "AdaBoost_Estim_11"."Estimator" AS "Estimator", "AdaBoost_Estim_11"."Weight" AS "Weight", "AdaBoost_Estim_11".est_index AS est_index 
FROM "AdaBoost_Estim_11" UNION ALL SELECT "AdaBoost_Estim_12"."KEY" AS "KEY", "AdaBoost_Estim_12"."Estimator" AS "Estimator", "AdaBoost_Estim_12"."Weight" AS "Weight", "AdaBoost_Estim_12".est_index AS est_index 
FROM "AdaBoost_Estim_12" UNION ALL SELECT "AdaBoost_Estim_13"."KEY" AS "KEY", "AdaBoost_Estim_13"."Estimator" AS "Estimator", "AdaBoost_Estim_13"."Weight" AS "Weight", "AdaBoost_Estim_13".est_index AS est_index 
FROM "AdaBoost_Estim_13" UNION ALL SELECT "AdaBoost_Estim_14"."KEY" AS "KEY", "AdaBoost_Estim_14"."Estimator" AS "Estimator", "AdaBoost_Estim_14"."Weight" AS "Weight", "AdaBoost_Estim_14".est_index AS est_index 
FROM "AdaBoost_Estim_14" UNION ALL SELECT "AdaBoost_Estim_15"."KEY" AS "KEY", "AdaBoost_Estim_15"."Estimator" AS "Estimator", "AdaBoost_Estim_15"."Weight" AS "Weight", "AdaBoost_Estim_15".est_index AS est_index 
FROM "AdaBoost_Estim_15") AS ensemble_score_union), 
"Cumulative_Frequencies" AS 
(SELECT "CW"."KEY" AS "KEY", "CW"."Estimator" AS "Estimator", "CW"."Weight" AS "Weight", "CW".est_index AS est_index, "CW".cum_weight AS cum_weight 
FROM (SELECT u1."KEY" AS "KEY", u1."Estimator" AS "Estimator", u1."Weight" AS "Weight", u1.est_index AS est_index, sum(u2."Weight") AS cum_weight 
FROM "WeightedEstimators" AS u1, "WeightedEstimators" AS u2 
WHERE u1."Estimator" >= u2."Estimator" AND u1."KEY" = u2."KEY" GROUP BY u1."KEY", u1.est_index, u1."Estimator", u1."Weight") AS "CW"), 
"Quantiles" AS 
(SELECT "CW2"."KEY" AS "KEY", "CW2"."Quantile" AS "Quantile" 
FROM (SELECT "Cumulative_Frequencies"."KEY" AS "KEY", min("Cumulative_Frequencies"."Estimator") AS "Quantile" 
FROM "Cumulative_Frequencies" 
WHERE "Cumulative_Frequencies".cum_weight >= 0.5 GROUP BY "Cumulative_Frequencies"."KEY") AS "CW2")
 SELECT "Quantiles"."KEY" AS "KEY", "Quantiles"."Quantile" AS "Estimator" 
FROM "Quantiles"