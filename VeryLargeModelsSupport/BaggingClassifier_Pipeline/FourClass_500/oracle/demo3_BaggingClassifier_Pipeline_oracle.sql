-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2018

-- This SQL code can contain one or more statements, to be executed in the order they appear in this file.


-- Code For temporary table 33322_QWFB6F_ADS_IMP_1_OUT part 1/2. Create 


CREATE GLOBAL TEMPORARY TABLE "33322_QWFB6F_ADS_IMP_1_OUT" (
	"KEY" NUMBER(19), 
	impter_2 BINARY_DOUBLE, 
	impter_3 BINARY_DOUBLE, 
	impter_4 BINARY_DOUBLE, 
	impter_5 BINARY_DOUBLE, 
	impter_6 BINARY_DOUBLE, 
	impter_7 BINARY_DOUBLE, 
	impter_8 BINARY_DOUBLE, 
	impter_9 BINARY_DOUBLE, 
	impter_10 BINARY_DOUBLE, 
	impter_11 BINARY_DOUBLE, 
	impter_12 BINARY_DOUBLE, 
	impter_13 BINARY_DOUBLE, 
	impter_14 BINARY_DOUBLE, 
	impter_15 BINARY_DOUBLE, 
	impter_16 BINARY_DOUBLE, 
	impter_17 BINARY_DOUBLE, 
	impter_18 BINARY_DOUBLE, 
	impter_19 BINARY_DOUBLE, 
	impter_20 BINARY_DOUBLE, 
	impter_21 BINARY_DOUBLE, 
	impter_22 BINARY_DOUBLE, 
	impter_23 BINARY_DOUBLE, 
	impter_24 BINARY_DOUBLE, 
	impter_25 BINARY_DOUBLE, 
	impter_26 BINARY_DOUBLE, 
	impter_27 BINARY_DOUBLE, 
	impter_28 BINARY_DOUBLE, 
	impter_29 BINARY_DOUBLE, 
	impter_30 BINARY_DOUBLE, 
	impter_31 BINARY_DOUBLE, 
	impter_32 BINARY_DOUBLE, 
	impter_33 BINARY_DOUBLE, 
	impter_34 BINARY_DOUBLE, 
	impter_35 BINARY_DOUBLE, 
	impter_36 BINARY_DOUBLE, 
	impter_37 BINARY_DOUBLE, 
	impter_38 BINARY_DOUBLE, 
	impter_39 BINARY_DOUBLE, 
	impter_40 BINARY_DOUBLE, 
	impter_41 BINARY_DOUBLE, 
	impter_42 BINARY_DOUBLE, 
	impter_43 BINARY_DOUBLE, 
	impter_44 BINARY_DOUBLE, 
	impter_45 BINARY_DOUBLE, 
	impter_46 BINARY_DOUBLE, 
	impter_47 BINARY_DOUBLE, 
	impter_48 BINARY_DOUBLE, 
	impter_49 BINARY_DOUBLE, 
	impter_50 BINARY_DOUBLE, 
	impter_51 BINARY_DOUBLE, 
	impter_52 BINARY_DOUBLE, 
	impter_53 BINARY_DOUBLE, 
	impter_54 BINARY_DOUBLE, 
	impter_55 BINARY_DOUBLE, 
	impter_56 BINARY_DOUBLE, 
	impter_57 BINARY_DOUBLE, 
	impter_58 BINARY_DOUBLE, 
	impter_59 BINARY_DOUBLE, 
	impter_60 BINARY_DOUBLE, 
	impter_61 BINARY_DOUBLE, 
	impter_62 BINARY_DOUBLE, 
	impter_63 BINARY_DOUBLE, 
	impter_64 BINARY_DOUBLE, 
	impter_65 BINARY_DOUBLE, 
	impter_66 BINARY_DOUBLE, 
	impter_67 BINARY_DOUBLE, 
	impter_68 BINARY_DOUBLE, 
	impter_69 BINARY_DOUBLE, 
	impter_70 BINARY_DOUBLE, 
	impter_71 BINARY_DOUBLE, 
	impter_72 BINARY_DOUBLE, 
	impter_73 BINARY_DOUBLE, 
	impter_74 BINARY_DOUBLE, 
	impter_75 BINARY_DOUBLE, 
	impter_76 BINARY_DOUBLE, 
	impter_77 BINARY_DOUBLE, 
	impter_78 BINARY_DOUBLE, 
	impter_79 BINARY_DOUBLE, 
	impter_80 BINARY_DOUBLE, 
	impter_81 BINARY_DOUBLE, 
	impter_82 BINARY_DOUBLE, 
	impter_83 BINARY_DOUBLE, 
	impter_84 BINARY_DOUBLE, 
	impter_85 BINARY_DOUBLE, 
	impter_86 BINARY_DOUBLE, 
	impter_87 BINARY_DOUBLE, 
	impter_88 BINARY_DOUBLE, 
	impter_89 BINARY_DOUBLE, 
	impter_90 BINARY_DOUBLE, 
	impter_91 BINARY_DOUBLE, 
	impter_92 BINARY_DOUBLE, 
	impter_93 BINARY_DOUBLE, 
	impter_94 BINARY_DOUBLE, 
	impter_95 BINARY_DOUBLE, 
	impter_96 BINARY_DOUBLE, 
	impter_97 BINARY_DOUBLE, 
	impter_98 BINARY_DOUBLE, 
	impter_99 BINARY_DOUBLE, 
	impter_100 BINARY_DOUBLE, 
	impter_101 BINARY_DOUBLE, 
	impter_102 BINARY_DOUBLE, 
	impter_103 BINARY_DOUBLE, 
	impter_104 BINARY_DOUBLE, 
	impter_105 BINARY_DOUBLE, 
	impter_106 BINARY_DOUBLE, 
	impter_107 BINARY_DOUBLE, 
	impter_108 BINARY_DOUBLE, 
	impter_109 BINARY_DOUBLE, 
	impter_110 BINARY_DOUBLE, 
	impter_111 BINARY_DOUBLE, 
	impter_112 BINARY_DOUBLE, 
	impter_113 BINARY_DOUBLE, 
	impter_114 BINARY_DOUBLE, 
	impter_115 BINARY_DOUBLE, 
	impter_116 BINARY_DOUBLE, 
	impter_117 BINARY_DOUBLE, 
	impter_118 BINARY_DOUBLE, 
	impter_119 BINARY_DOUBLE, 
	impter_120 BINARY_DOUBLE, 
	impter_121 BINARY_DOUBLE, 
	impter_122 BINARY_DOUBLE, 
	impter_123 BINARY_DOUBLE, 
	impter_124 BINARY_DOUBLE, 
	impter_125 BINARY_DOUBLE, 
	impter_126 BINARY_DOUBLE, 
	impter_127 BINARY_DOUBLE, 
	impter_128 BINARY_DOUBLE, 
	impter_129 BINARY_DOUBLE, 
	impter_130 BINARY_DOUBLE, 
	impter_131 BINARY_DOUBLE, 
	impter_132 BINARY_DOUBLE, 
	impter_133 BINARY_DOUBLE, 
	impter_134 BINARY_DOUBLE, 
	impter_135 BINARY_DOUBLE, 
	impter_136 BINARY_DOUBLE, 
	impter_137 BINARY_DOUBLE, 
	impter_138 BINARY_DOUBLE, 
	impter_139 BINARY_DOUBLE, 
	impter_140 BINARY_DOUBLE, 
	impter_141 BINARY_DOUBLE, 
	impter_142 BINARY_DOUBLE, 
	impter_143 BINARY_DOUBLE, 
	impter_144 BINARY_DOUBLE, 
	impter_145 BINARY_DOUBLE, 
	impter_146 BINARY_DOUBLE, 
	impter_147 BINARY_DOUBLE, 
	impter_148 BINARY_DOUBLE, 
	impter_149 BINARY_DOUBLE, 
	impter_150 BINARY_DOUBLE, 
	impter_151 BINARY_DOUBLE, 
	impter_152 BINARY_DOUBLE, 
	impter_153 BINARY_DOUBLE, 
	impter_154 BINARY_DOUBLE, 
	impter_155 BINARY_DOUBLE, 
	impter_156 BINARY_DOUBLE, 
	impter_157 BINARY_DOUBLE, 
	impter_158 BINARY_DOUBLE, 
	impter_159 BINARY_DOUBLE, 
	impter_160 BINARY_DOUBLE, 
	impter_161 BINARY_DOUBLE, 
	impter_162 BINARY_DOUBLE, 
	impter_163 BINARY_DOUBLE, 
	impter_164 BINARY_DOUBLE, 
	impter_165 BINARY_DOUBLE, 
	impter_166 BINARY_DOUBLE, 
	impter_167 BINARY_DOUBLE, 
	impter_168 BINARY_DOUBLE, 
	impter_169 BINARY_DOUBLE, 
	impter_170 BINARY_DOUBLE, 
	impter_171 BINARY_DOUBLE, 
	impter_172 BINARY_DOUBLE, 
	impter_173 BINARY_DOUBLE, 
	impter_174 BINARY_DOUBLE, 
	impter_175 BINARY_DOUBLE, 
	impter_176 BINARY_DOUBLE, 
	impter_177 BINARY_DOUBLE, 
	impter_178 BINARY_DOUBLE, 
	impter_179 BINARY_DOUBLE, 
	impter_180 BINARY_DOUBLE, 
	impter_181 BINARY_DOUBLE, 
	impter_182 BINARY_DOUBLE, 
	impter_183 BINARY_DOUBLE, 
	impter_184 BINARY_DOUBLE, 
	impter_185 BINARY_DOUBLE, 
	impter_186 BINARY_DOUBLE, 
	impter_187 BINARY_DOUBLE, 
	impter_188 BINARY_DOUBLE, 
	impter_189 BINARY_DOUBLE, 
	impter_190 BINARY_DOUBLE, 
	impter_191 BINARY_DOUBLE, 
	impter_192 BINARY_DOUBLE, 
	impter_193 BINARY_DOUBLE, 
	impter_194 BINARY_DOUBLE, 
	impter_195 BINARY_DOUBLE, 
	impter_196 BINARY_DOUBLE, 
	impter_197 BINARY_DOUBLE, 
	impter_198 BINARY_DOUBLE, 
	impter_199 BINARY_DOUBLE, 
	impter_200 BINARY_DOUBLE, 
	impter_201 BINARY_DOUBLE, 
	impter_202 BINARY_DOUBLE, 
	impter_203 BINARY_DOUBLE, 
	impter_204 BINARY_DOUBLE, 
	impter_205 BINARY_DOUBLE, 
	impter_206 BINARY_DOUBLE, 
	impter_207 BINARY_DOUBLE, 
	impter_208 BINARY_DOUBLE, 
	impter_209 BINARY_DOUBLE, 
	impter_210 BINARY_DOUBLE, 
	impter_211 BINARY_DOUBLE, 
	impter_212 BINARY_DOUBLE, 
	impter_213 BINARY_DOUBLE, 
	impter_214 BINARY_DOUBLE, 
	impter_215 BINARY_DOUBLE, 
	impter_216 BINARY_DOUBLE, 
	impter_217 BINARY_DOUBLE, 
	impter_218 BINARY_DOUBLE, 
	impter_219 BINARY_DOUBLE, 
	impter_220 BINARY_DOUBLE, 
	impter_221 BINARY_DOUBLE, 
	impter_222 BINARY_DOUBLE, 
	impter_223 BINARY_DOUBLE, 
	impter_224 BINARY_DOUBLE, 
	impter_225 BINARY_DOUBLE, 
	impter_226 BINARY_DOUBLE, 
	impter_227 BINARY_DOUBLE, 
	impter_228 BINARY_DOUBLE, 
	impter_229 BINARY_DOUBLE, 
	impter_230 BINARY_DOUBLE, 
	impter_231 BINARY_DOUBLE, 
	impter_232 BINARY_DOUBLE, 
	impter_233 BINARY_DOUBLE, 
	impter_234 BINARY_DOUBLE, 
	impter_235 BINARY_DOUBLE, 
	impter_236 BINARY_DOUBLE, 
	impter_237 BINARY_DOUBLE, 
	impter_238 BINARY_DOUBLE, 
	impter_239 BINARY_DOUBLE, 
	impter_240 BINARY_DOUBLE, 
	impter_241 BINARY_DOUBLE, 
	impter_242 BINARY_DOUBLE, 
	impter_243 BINARY_DOUBLE, 
	impter_244 BINARY_DOUBLE, 
	impter_245 BINARY_DOUBLE, 
	impter_246 BINARY_DOUBLE, 
	impter_247 BINARY_DOUBLE, 
	impter_248 BINARY_DOUBLE, 
	impter_249 BINARY_DOUBLE, 
	impter_250 BINARY_DOUBLE, 
	impter_251 BINARY_DOUBLE, 
	impter_252 BINARY_DOUBLE, 
	impter_253 BINARY_DOUBLE, 
	impter_254 BINARY_DOUBLE, 
	impter_255 BINARY_DOUBLE, 
	impter_256 BINARY_DOUBLE, 
	impter_257 BINARY_DOUBLE, 
	impter_258 BINARY_DOUBLE, 
	impter_259 BINARY_DOUBLE, 
	impter_260 BINARY_DOUBLE, 
	impter_261 BINARY_DOUBLE, 
	impter_262 BINARY_DOUBLE, 
	impter_263 BINARY_DOUBLE, 
	impter_264 BINARY_DOUBLE, 
	impter_265 BINARY_DOUBLE, 
	impter_266 BINARY_DOUBLE, 
	impter_267 BINARY_DOUBLE, 
	impter_268 BINARY_DOUBLE, 
	impter_269 BINARY_DOUBLE, 
	impter_270 BINARY_DOUBLE, 
	impter_271 BINARY_DOUBLE, 
	impter_272 BINARY_DOUBLE, 
	impter_273 BINARY_DOUBLE, 
	impter_274 BINARY_DOUBLE, 
	impter_275 BINARY_DOUBLE, 
	impter_276 BINARY_DOUBLE, 
	impter_277 BINARY_DOUBLE, 
	impter_278 BINARY_DOUBLE, 
	impter_279 BINARY_DOUBLE, 
	impter_280 BINARY_DOUBLE, 
	impter_281 BINARY_DOUBLE, 
	impter_282 BINARY_DOUBLE, 
	impter_283 BINARY_DOUBLE, 
	impter_284 BINARY_DOUBLE, 
	impter_285 BINARY_DOUBLE, 
	impter_286 BINARY_DOUBLE, 
	impter_287 BINARY_DOUBLE, 
	impter_288 BINARY_DOUBLE, 
	impter_289 BINARY_DOUBLE, 
	impter_290 BINARY_DOUBLE, 
	impter_291 BINARY_DOUBLE, 
	impter_292 BINARY_DOUBLE, 
	impter_293 BINARY_DOUBLE, 
	impter_294 BINARY_DOUBLE, 
	impter_295 BINARY_DOUBLE, 
	impter_296 BINARY_DOUBLE, 
	impter_297 BINARY_DOUBLE, 
	impter_298 BINARY_DOUBLE, 
	impter_299 BINARY_DOUBLE, 
	impter_300 BINARY_DOUBLE, 
	impter_301 BINARY_DOUBLE, 
	impter_302 BINARY_DOUBLE, 
	impter_303 BINARY_DOUBLE, 
	impter_304 BINARY_DOUBLE, 
	impter_305 BINARY_DOUBLE, 
	impter_306 BINARY_DOUBLE, 
	impter_307 BINARY_DOUBLE, 
	impter_308 BINARY_DOUBLE, 
	impter_309 BINARY_DOUBLE, 
	impter_310 BINARY_DOUBLE, 
	impter_311 BINARY_DOUBLE, 
	impter_312 BINARY_DOUBLE, 
	impter_313 BINARY_DOUBLE, 
	impter_314 BINARY_DOUBLE, 
	impter_315 BINARY_DOUBLE, 
	impter_316 BINARY_DOUBLE, 
	impter_317 BINARY_DOUBLE, 
	impter_318 BINARY_DOUBLE, 
	impter_319 BINARY_DOUBLE, 
	impter_320 BINARY_DOUBLE, 
	impter_321 BINARY_DOUBLE, 
	impter_322 BINARY_DOUBLE, 
	impter_323 BINARY_DOUBLE, 
	impter_324 BINARY_DOUBLE, 
	impter_325 BINARY_DOUBLE, 
	impter_326 BINARY_DOUBLE, 
	impter_327 BINARY_DOUBLE, 
	impter_328 BINARY_DOUBLE, 
	impter_329 BINARY_DOUBLE, 
	impter_330 BINARY_DOUBLE, 
	impter_331 BINARY_DOUBLE, 
	impter_332 BINARY_DOUBLE, 
	impter_333 BINARY_DOUBLE, 
	impter_334 BINARY_DOUBLE, 
	impter_335 BINARY_DOUBLE, 
	impter_336 BINARY_DOUBLE, 
	impter_337 BINARY_DOUBLE, 
	impter_338 BINARY_DOUBLE, 
	impter_339 BINARY_DOUBLE, 
	impter_340 BINARY_DOUBLE, 
	impter_341 BINARY_DOUBLE, 
	impter_342 BINARY_DOUBLE, 
	impter_343 BINARY_DOUBLE, 
	impter_344 BINARY_DOUBLE, 
	impter_345 BINARY_DOUBLE, 
	impter_346 BINARY_DOUBLE, 
	impter_347 BINARY_DOUBLE, 
	impter_348 BINARY_DOUBLE, 
	impter_349 BINARY_DOUBLE, 
	impter_350 BINARY_DOUBLE, 
	impter_351 BINARY_DOUBLE, 
	impter_352 BINARY_DOUBLE, 
	impter_353 BINARY_DOUBLE, 
	impter_354 BINARY_DOUBLE, 
	impter_355 BINARY_DOUBLE, 
	impter_356 BINARY_DOUBLE, 
	impter_357 BINARY_DOUBLE, 
	impter_358 BINARY_DOUBLE, 
	impter_359 BINARY_DOUBLE, 
	impter_360 BINARY_DOUBLE, 
	impter_361 BINARY_DOUBLE, 
	impter_362 BINARY_DOUBLE, 
	impter_363 BINARY_DOUBLE, 
	impter_364 BINARY_DOUBLE, 
	impter_365 BINARY_DOUBLE, 
	impter_366 BINARY_DOUBLE, 
	impter_367 BINARY_DOUBLE, 
	impter_368 BINARY_DOUBLE, 
	impter_369 BINARY_DOUBLE, 
	impter_370 BINARY_DOUBLE, 
	impter_371 BINARY_DOUBLE, 
	impter_372 BINARY_DOUBLE, 
	impter_373 BINARY_DOUBLE, 
	impter_374 BINARY_DOUBLE, 
	impter_375 BINARY_DOUBLE, 
	impter_376 BINARY_DOUBLE, 
	impter_377 BINARY_DOUBLE, 
	impter_378 BINARY_DOUBLE, 
	impter_379 BINARY_DOUBLE, 
	impter_380 BINARY_DOUBLE, 
	impter_381 BINARY_DOUBLE, 
	impter_382 BINARY_DOUBLE, 
	impter_383 BINARY_DOUBLE, 
	impter_384 BINARY_DOUBLE, 
	impter_385 BINARY_DOUBLE, 
	impter_386 BINARY_DOUBLE, 
	impter_387 BINARY_DOUBLE, 
	impter_388 BINARY_DOUBLE, 
	impter_389 BINARY_DOUBLE, 
	impter_390 BINARY_DOUBLE, 
	impter_391 BINARY_DOUBLE, 
	impter_392 BINARY_DOUBLE, 
	impter_393 BINARY_DOUBLE, 
	impter_394 BINARY_DOUBLE, 
	impter_395 BINARY_DOUBLE, 
	impter_396 BINARY_DOUBLE, 
	impter_397 BINARY_DOUBLE, 
	impter_398 BINARY_DOUBLE, 
	impter_399 BINARY_DOUBLE, 
	impter_400 BINARY_DOUBLE, 
	impter_401 BINARY_DOUBLE, 
	impter_402 BINARY_DOUBLE, 
	impter_403 BINARY_DOUBLE, 
	impter_404 BINARY_DOUBLE, 
	impter_405 BINARY_DOUBLE, 
	impter_406 BINARY_DOUBLE, 
	impter_407 BINARY_DOUBLE, 
	impter_408 BINARY_DOUBLE, 
	impter_409 BINARY_DOUBLE, 
	impter_410 BINARY_DOUBLE, 
	impter_411 BINARY_DOUBLE, 
	impter_412 BINARY_DOUBLE, 
	impter_413 BINARY_DOUBLE, 
	impter_414 BINARY_DOUBLE, 
	impter_415 BINARY_DOUBLE, 
	impter_416 BINARY_DOUBLE, 
	impter_417 BINARY_DOUBLE, 
	impter_418 BINARY_DOUBLE, 
	impter_419 BINARY_DOUBLE, 
	impter_420 BINARY_DOUBLE, 
	impter_421 BINARY_DOUBLE, 
	impter_422 BINARY_DOUBLE, 
	impter_423 BINARY_DOUBLE, 
	impter_424 BINARY_DOUBLE, 
	impter_425 BINARY_DOUBLE, 
	impter_426 BINARY_DOUBLE, 
	impter_427 BINARY_DOUBLE, 
	impter_428 BINARY_DOUBLE, 
	impter_429 BINARY_DOUBLE, 
	impter_430 BINARY_DOUBLE, 
	impter_431 BINARY_DOUBLE, 
	impter_432 BINARY_DOUBLE, 
	impter_433 BINARY_DOUBLE, 
	impter_434 BINARY_DOUBLE, 
	impter_435 BINARY_DOUBLE, 
	impter_436 BINARY_DOUBLE, 
	impter_437 BINARY_DOUBLE, 
	impter_438 BINARY_DOUBLE, 
	impter_439 BINARY_DOUBLE, 
	impter_440 BINARY_DOUBLE, 
	impter_441 BINARY_DOUBLE, 
	impter_442 BINARY_DOUBLE, 
	impter_443 BINARY_DOUBLE, 
	impter_444 BINARY_DOUBLE, 
	impter_445 BINARY_DOUBLE, 
	impter_446 BINARY_DOUBLE, 
	impter_447 BINARY_DOUBLE, 
	impter_448 BINARY_DOUBLE, 
	impter_449 BINARY_DOUBLE, 
	impter_450 BINARY_DOUBLE, 
	impter_451 BINARY_DOUBLE, 
	impter_452 BINARY_DOUBLE, 
	impter_453 BINARY_DOUBLE, 
	impter_454 BINARY_DOUBLE, 
	impter_455 BINARY_DOUBLE, 
	impter_456 BINARY_DOUBLE, 
	impter_457 BINARY_DOUBLE, 
	impter_458 BINARY_DOUBLE, 
	impter_459 BINARY_DOUBLE, 
	impter_460 BINARY_DOUBLE, 
	impter_461 BINARY_DOUBLE, 
	impter_462 BINARY_DOUBLE, 
	impter_463 BINARY_DOUBLE, 
	impter_464 BINARY_DOUBLE, 
	impter_465 BINARY_DOUBLE, 
	impter_466 BINARY_DOUBLE, 
	impter_467 BINARY_DOUBLE, 
	impter_468 BINARY_DOUBLE, 
	impter_469 BINARY_DOUBLE, 
	impter_470 BINARY_DOUBLE, 
	impter_471 BINARY_DOUBLE, 
	impter_472 BINARY_DOUBLE, 
	impter_473 BINARY_DOUBLE, 
	impter_474 BINARY_DOUBLE, 
	impter_475 BINARY_DOUBLE, 
	impter_476 BINARY_DOUBLE, 
	impter_477 BINARY_DOUBLE, 
	impter_478 BINARY_DOUBLE, 
	impter_479 BINARY_DOUBLE, 
	impter_480 BINARY_DOUBLE, 
	impter_481 BINARY_DOUBLE, 
	impter_482 BINARY_DOUBLE, 
	impter_483 BINARY_DOUBLE, 
	impter_484 BINARY_DOUBLE, 
	impter_485 BINARY_DOUBLE, 
	impter_486 BINARY_DOUBLE, 
	impter_487 BINARY_DOUBLE, 
	impter_488 BINARY_DOUBLE, 
	impter_489 BINARY_DOUBLE, 
	impter_490 BINARY_DOUBLE, 
	impter_491 BINARY_DOUBLE, 
	impter_492 BINARY_DOUBLE, 
	impter_493 BINARY_DOUBLE, 
	impter_494 BINARY_DOUBLE, 
	impter_495 BINARY_DOUBLE, 
	impter_496 BINARY_DOUBLE, 
	impter_497 BINARY_DOUBLE, 
	impter_498 BINARY_DOUBLE, 
	impter_499 BINARY_DOUBLE, 
	impter_500 BINARY_DOUBLE, 
	impter_501 BINARY_DOUBLE
)

 ON COMMIT PRESERVE ROWS
-- Code For temporary table 33322_QWFB6F_ADS_IMP_1_OUT part 2/2. Populate

INSERT INTO "33322_QWFB6F_ADS_IMP_1_OUT" ("KEY", impter_2, impter_3, impter_4, impter_5, impter_6, impter_7, impter_8, impter_9, impter_10, impter_11, impter_12, impter_13, impter_14, impter_15, impter_16, impter_17, impter_18, impter_19, impter_20, impter_21, impter_22, impter_23, impter_24, impter_25, impter_26, impter_27, impter_28, impter_29, impter_30, impter_31, impter_32, impter_33, impter_34, impter_35, impter_36, impter_37, impter_38, impter_39, impter_40, impter_41, impter_42, impter_43, impter_44, impter_45, impter_46, impter_47, impter_48, impter_49, impter_50, impter_51, impter_52, impter_53, impter_54, impter_55, impter_56, impter_57, impter_58, impter_59, impter_60, impter_61, impter_62, impter_63, impter_64, impter_65, impter_66, impter_67, impter_68, impter_69, impter_70, impter_71, impter_72, impter_73, impter_74, impter_75, impter_76, impter_77, impter_78, impter_79, impter_80, impter_81, impter_82, impter_83, impter_84, impter_85, impter_86, impter_87, impter_88, impter_89, impter_90, impter_91, impter_92, impter_93, impter_94, impter_95, impter_96, impter_97, impter_98, impter_99, impter_100, impter_101, impter_102, impter_103, impter_104, impter_105, impter_106, impter_107, impter_108, impter_109, impter_110, impter_111, impter_112, impter_113, impter_114, impter_115, impter_116, impter_117, impter_118, impter_119, impter_120, impter_121, impter_122, impter_123, impter_124, impter_125, impter_126, impter_127, impter_128, impter_129, impter_130, impter_131, impter_132, impter_133, impter_134, impter_135, impter_136, impter_137, impter_138, impter_139, impter_140, impter_141, impter_142, impter_143, impter_144, impter_145, impter_146, impter_147, impter_148, impter_149, impter_150, impter_151, impter_152, impter_153, impter_154, impter_155, impter_156, impter_157, impter_158, impter_159, impter_160, impter_161, impter_162, impter_163, impter_164, impter_165, impter_166, impter_167, impter_168, impter_169, impter_170, impter_171, impter_172, impter_173, impter_174, impter_175, impter_176, impter_177, impter_178, impter_179, impter_180, impter_181, impter_182, impter_183, impter_184, impter_185, impter_186, impter_187, impter_188, impter_189, impter_190, impter_191, impter_192, impter_193, impter_194, impter_195, impter_196, impter_197, impter_198, impter_199, impter_200, impter_201, impter_202, impter_203, impter_204, impter_205, impter_206, impter_207, impter_208, impter_209, impter_210, impter_211, impter_212, impter_213, impter_214, impter_215, impter_216, impter_217, impter_218, impter_219, impter_220, impter_221, impter_222, impter_223, impter_224, impter_225, impter_226, impter_227, impter_228, impter_229, impter_230, impter_231, impter_232, impter_233, impter_234, impter_235, impter_236, impter_237, impter_238, impter_239, impter_240, impter_241, impter_242, impter_243, impter_244, impter_245, impter_246, impter_247, impter_248, impter_249, impter_250, impter_251, impter_252, impter_253, impter_254, impter_255, impter_256, impter_257, impter_258, impter_259, impter_260, impter_261, impter_262, impter_263, impter_264, impter_265, impter_266, impter_267, impter_268, impter_269, impter_270, impter_271, impter_272, impter_273, impter_274, impter_275, impter_276, impter_277, impter_278, impter_279, impter_280, impter_281, impter_282, impter_283, impter_284, impter_285, impter_286, impter_287, impter_288, impter_289, impter_290, impter_291, impter_292, impter_293, impter_294, impter_295, impter_296, impter_297, impter_298, impter_299, impter_300, impter_301, impter_302, impter_303, impter_304, impter_305, impter_306, impter_307, impter_308, impter_309, impter_310, impter_311, impter_312, impter_313, impter_314, impter_315, impter_316, impter_317, impter_318, impter_319, impter_320, impter_321, impter_322, impter_323, impter_324, impter_325, impter_326, impter_327, impter_328, impter_329, impter_330, impter_331, impter_332, impter_333, impter_334, impter_335, impter_336, impter_337, impter_338, impter_339, impter_340, impter_341, impter_342, impter_343, impter_344, impter_345, impter_346, impter_347, impter_348, impter_349, impter_350, impter_351, impter_352, impter_353, impter_354, impter_355, impter_356, impter_357, impter_358, impter_359, impter_360, impter_361, impter_362, impter_363, impter_364, impter_365, impter_366, impter_367, impter_368, impter_369, impter_370, impter_371, impter_372, impter_373, impter_374, impter_375, impter_376, impter_377, impter_378, impter_379, impter_380, impter_381, impter_382, impter_383, impter_384, impter_385, impter_386, impter_387, impter_388, impter_389, impter_390, impter_391, impter_392, impter_393, impter_394, impter_395, impter_396, impter_397, impter_398, impter_399, impter_400, impter_401, impter_402, impter_403, impter_404, impter_405, impter_406, impter_407, impter_408, impter_409, impter_410, impter_411, impter_412, impter_413, impter_414, impter_415, impter_416, impter_417, impter_418, impter_419, impter_420, impter_421, impter_422, impter_423, impter_424, impter_425, impter_426, impter_427, impter_428, impter_429, impter_430, impter_431, impter_432, impter_433, impter_434, impter_435, impter_436, impter_437, impter_438, impter_439, impter_440, impter_441, impter_442, impter_443, impter_444, impter_445, impter_446, impter_447, impter_448, impter_449, impter_450, impter_451, impter_452, impter_453, impter_454, impter_455, impter_456, impter_457, impter_458, impter_459, impter_460, impter_461, impter_462, impter_463, impter_464, impter_465, impter_466, impter_467, impter_468, impter_469, impter_470, impter_471, impter_472, impter_473, impter_474, impter_475, impter_476, impter_477, impter_478, impter_479, impter_480, impter_481, impter_482, impter_483, impter_484, impter_485, impter_486, impter_487, impter_488, impter_489, impter_490, impter_491, impter_492, impter_493, impter_494, impter_495, impter_496, impter_497, impter_498, impter_499, impter_500, impter_501) SELECT "U"."KEY", "U".impter_2, "U".impter_3, "U".impter_4, "U".impter_5, "U".impter_6, "U".impter_7, "U".impter_8, "U".impter_9, "U".impter_10, "U".impter_11, "U".impter_12, "U".impter_13, "U".impter_14, "U".impter_15, "U".impter_16, "U".impter_17, "U".impter_18, "U".impter_19, "U".impter_20, "U".impter_21, "U".impter_22, "U".impter_23, "U".impter_24, "U".impter_25, "U".impter_26, "U".impter_27, "U".impter_28, "U".impter_29, "U".impter_30, "U".impter_31, "U".impter_32, "U".impter_33, "U".impter_34, "U".impter_35, "U".impter_36, "U".impter_37, "U".impter_38, "U".impter_39, "U".impter_40, "U".impter_41, "U".impter_42, "U".impter_43, "U".impter_44, "U".impter_45, "U".impter_46, "U".impter_47, "U".impter_48, "U".impter_49, "U".impter_50, "U".impter_51, "U".impter_52, "U".impter_53, "U".impter_54, "U".impter_55, "U".impter_56, "U".impter_57, "U".impter_58, "U".impter_59, "U".impter_60, "U".impter_61, "U".impter_62, "U".impter_63, "U".impter_64, "U".impter_65, "U".impter_66, "U".impter_67, "U".impter_68, "U".impter_69, "U".impter_70, "U".impter_71, "U".impter_72, "U".impter_73, "U".impter_74, "U".impter_75, "U".impter_76, "U".impter_77, "U".impter_78, "U".impter_79, "U".impter_80, "U".impter_81, "U".impter_82, "U".impter_83, "U".impter_84, "U".impter_85, "U".impter_86, "U".impter_87, "U".impter_88, "U".impter_89, "U".impter_90, "U".impter_91, "U".impter_92, "U".impter_93, "U".impter_94, "U".impter_95, "U".impter_96, "U".impter_97, "U".impter_98, "U".impter_99, "U".impter_100, "U".impter_101, "U".impter_102, "U".impter_103, "U".impter_104, "U".impter_105, "U".impter_106, "U".impter_107, "U".impter_108, "U".impter_109, "U".impter_110, "U".impter_111, "U".impter_112, "U".impter_113, "U".impter_114, "U".impter_115, "U".impter_116, "U".impter_117, "U".impter_118, "U".impter_119, "U".impter_120, "U".impter_121, "U".impter_122, "U".impter_123, "U".impter_124, "U".impter_125, "U".impter_126, "U".impter_127, "U".impter_128, "U".impter_129, "U".impter_130, "U".impter_131, "U".impter_132, "U".impter_133, "U".impter_134, "U".impter_135, "U".impter_136, "U".impter_137, "U".impter_138, "U".impter_139, "U".impter_140, "U".impter_141, "U".impter_142, "U".impter_143, "U".impter_144, "U".impter_145, "U".impter_146, "U".impter_147, "U".impter_148, "U".impter_149, "U".impter_150, "U".impter_151, "U".impter_152, "U".impter_153, "U".impter_154, "U".impter_155, "U".impter_156, "U".impter_157, "U".impter_158, "U".impter_159, "U".impter_160, "U".impter_161, "U".impter_162, "U".impter_163, "U".impter_164, "U".impter_165, "U".impter_166, "U".impter_167, "U".impter_168, "U".impter_169, "U".impter_170, "U".impter_171, "U".impter_172, "U".impter_173, "U".impter_174, "U".impter_175, "U".impter_176, "U".impter_177, "U".impter_178, "U".impter_179, "U".impter_180, "U".impter_181, "U".impter_182, "U".impter_183, "U".impter_184, "U".impter_185, "U".impter_186, "U".impter_187, "U".impter_188, "U".impter_189, "U".impter_190, "U".impter_191, "U".impter_192, "U".impter_193, "U".impter_194, "U".impter_195, "U".impter_196, "U".impter_197, "U".impter_198, "U".impter_199, "U".impter_200, "U".impter_201, "U".impter_202, "U".impter_203, "U".impter_204, "U".impter_205, "U".impter_206, "U".impter_207, "U".impter_208, "U".impter_209, "U".impter_210, "U".impter_211, "U".impter_212, "U".impter_213, "U".impter_214, "U".impter_215, "U".impter_216, "U".impter_217, "U".impter_218, "U".impter_219, "U".impter_220, "U".impter_221, "U".impter_222, "U".impter_223, "U".impter_224, "U".impter_225, "U".impter_226, "U".impter_227, "U".impter_228, "U".impter_229, "U".impter_230, "U".impter_231, "U".impter_232, "U".impter_233, "U".impter_234, "U".impter_235, "U".impter_236, "U".impter_237, "U".impter_238, "U".impter_239, "U".impter_240, "U".impter_241, "U".impter_242, "U".impter_243, "U".impter_244, "U".impter_245, "U".impter_246, "U".impter_247, "U".impter_248, "U".impter_249, "U".impter_250, "U".impter_251, "U".impter_252, "U".impter_253, "U".impter_254, "U".impter_255, "U".impter_256, "U".impter_257, "U".impter_258, "U".impter_259, "U".impter_260, "U".impter_261, "U".impter_262, "U".impter_263, "U".impter_264, "U".impter_265, "U".impter_266, "U".impter_267, "U".impter_268, "U".impter_269, "U".impter_270, "U".impter_271, "U".impter_272, "U".impter_273, "U".impter_274, "U".impter_275, "U".impter_276, "U".impter_277, "U".impter_278, "U".impter_279, "U".impter_280, "U".impter_281, "U".impter_282, "U".impter_283, "U".impter_284, "U".impter_285, "U".impter_286, "U".impter_287, "U".impter_288, "U".impter_289, "U".impter_290, "U".impter_291, "U".impter_292, "U".impter_293, "U".impter_294, "U".impter_295, "U".impter_296, "U".impter_297, "U".impter_298, "U".impter_299, "U".impter_300, "U".impter_301, "U".impter_302, "U".impter_303, "U".impter_304, "U".impter_305, "U".impter_306, "U".impter_307, "U".impter_308, "U".impter_309, "U".impter_310, "U".impter_311, "U".impter_312, "U".impter_313, "U".impter_314, "U".impter_315, "U".impter_316, "U".impter_317, "U".impter_318, "U".impter_319, "U".impter_320, "U".impter_321, "U".impter_322, "U".impter_323, "U".impter_324, "U".impter_325, "U".impter_326, "U".impter_327, "U".impter_328, "U".impter_329, "U".impter_330, "U".impter_331, "U".impter_332, "U".impter_333, "U".impter_334, "U".impter_335, "U".impter_336, "U".impter_337, "U".impter_338, "U".impter_339, "U".impter_340, "U".impter_341, "U".impter_342, "U".impter_343, "U".impter_344, "U".impter_345, "U".impter_346, "U".impter_347, "U".impter_348, "U".impter_349, "U".impter_350, "U".impter_351, "U".impter_352, "U".impter_353, "U".impter_354, "U".impter_355, "U".impter_356, "U".impter_357, "U".impter_358, "U".impter_359, "U".impter_360, "U".impter_361, "U".impter_362, "U".impter_363, "U".impter_364, "U".impter_365, "U".impter_366, "U".impter_367, "U".impter_368, "U".impter_369, "U".impter_370, "U".impter_371, "U".impter_372, "U".impter_373, "U".impter_374, "U".impter_375, "U".impter_376, "U".impter_377, "U".impter_378, "U".impter_379, "U".impter_380, "U".impter_381, "U".impter_382, "U".impter_383, "U".impter_384, "U".impter_385, "U".impter_386, "U".impter_387, "U".impter_388, "U".impter_389, "U".impter_390, "U".impter_391, "U".impter_392, "U".impter_393, "U".impter_394, "U".impter_395, "U".impter_396, "U".impter_397, "U".impter_398, "U".impter_399, "U".impter_400, "U".impter_401, "U".impter_402, "U".impter_403, "U".impter_404, "U".impter_405, "U".impter_406, "U".impter_407, "U".impter_408, "U".impter_409, "U".impter_410, "U".impter_411, "U".impter_412, "U".impter_413, "U".impter_414, "U".impter_415, "U".impter_416, "U".impter_417, "U".impter_418, "U".impter_419, "U".impter_420, "U".impter_421, "U".impter_422, "U".impter_423, "U".impter_424, "U".impter_425, "U".impter_426, "U".impter_427, "U".impter_428, "U".impter_429, "U".impter_430, "U".impter_431, "U".impter_432, "U".impter_433, "U".impter_434, "U".impter_435, "U".impter_436, "U".impter_437, "U".impter_438, "U".impter_439, "U".impter_440, "U".impter_441, "U".impter_442, "U".impter_443, "U".impter_444, "U".impter_445, "U".impter_446, "U".impter_447, "U".impter_448, "U".impter_449, "U".impter_450, "U".impter_451, "U".impter_452, "U".impter_453, "U".impter_454, "U".impter_455, "U".impter_456, "U".impter_457, "U".impter_458, "U".impter_459, "U".impter_460, "U".impter_461, "U".impter_462, "U".impter_463, "U".impter_464, "U".impter_465, "U".impter_466, "U".impter_467, "U".impter_468, "U".impter_469, "U".impter_470, "U".impter_471, "U".impter_472, "U".impter_473, "U".impter_474, "U".impter_475, "U".impter_476, "U".impter_477, "U".impter_478, "U".impter_479, "U".impter_480, "U".impter_481, "U".impter_482, "U".impter_483, "U".impter_484, "U".impter_485, "U".impter_486, "U".impter_487, "U".impter_488, "U".impter_489, "U".impter_490, "U".impter_491, "U".impter_492, "U".impter_493, "U".impter_494, "U".impter_495, "U".impter_496, "U".impter_497, "U".impter_498, "U".impter_499, "U".impter_500, "U".impter_501 
FROM (SELECT "ADS_imp_1_OUT"."KEY", "ADS_imp_1_OUT".impter_2, "ADS_imp_1_OUT".impter_3, "ADS_imp_1_OUT".impter_4, "ADS_imp_1_OUT".impter_5, "ADS_imp_1_OUT".impter_6, "ADS_imp_1_OUT".impter_7, "ADS_imp_1_OUT".impter_8, "ADS_imp_1_OUT".impter_9, "ADS_imp_1_OUT".impter_10, "ADS_imp_1_OUT".impter_11, "ADS_imp_1_OUT".impter_12, "ADS_imp_1_OUT".impter_13, "ADS_imp_1_OUT".impter_14, "ADS_imp_1_OUT".impter_15, "ADS_imp_1_OUT".impter_16, "ADS_imp_1_OUT".impter_17, "ADS_imp_1_OUT".impter_18, "ADS_imp_1_OUT".impter_19, "ADS_imp_1_OUT".impter_20, "ADS_imp_1_OUT".impter_21, "ADS_imp_1_OUT".impter_22, "ADS_imp_1_OUT".impter_23, "ADS_imp_1_OUT".impter_24, "ADS_imp_1_OUT".impter_25, "ADS_imp_1_OUT".impter_26, "ADS_imp_1_OUT".impter_27, "ADS_imp_1_OUT".impter_28, "ADS_imp_1_OUT".impter_29, "ADS_imp_1_OUT".impter_30, "ADS_imp_1_OUT".impter_31, "ADS_imp_1_OUT".impter_32, "ADS_imp_1_OUT".impter_33, "ADS_imp_1_OUT".impter_34, "ADS_imp_1_OUT".impter_35, "ADS_imp_1_OUT".impter_36, "ADS_imp_1_OUT".impter_37, "ADS_imp_1_OUT".impter_38, "ADS_imp_1_OUT".impter_39, "ADS_imp_1_OUT".impter_40, "ADS_imp_1_OUT".impter_41, "ADS_imp_1_OUT".impter_42, "ADS_imp_1_OUT".impter_43, "ADS_imp_1_OUT".impter_44, "ADS_imp_1_OUT".impter_45, "ADS_imp_1_OUT".impter_46, "ADS_imp_1_OUT".impter_47, "ADS_imp_1_OUT".impter_48, "ADS_imp_1_OUT".impter_49, "ADS_imp_1_OUT".impter_50, "ADS_imp_1_OUT".impter_51, "ADS_imp_1_OUT".impter_52, "ADS_imp_1_OUT".impter_53, "ADS_imp_1_OUT".impter_54, "ADS_imp_1_OUT".impter_55, "ADS_imp_1_OUT".impter_56, "ADS_imp_1_OUT".impter_57, "ADS_imp_1_OUT".impter_58, "ADS_imp_1_OUT".impter_59, "ADS_imp_1_OUT".impter_60, "ADS_imp_1_OUT".impter_61, "ADS_imp_1_OUT".impter_62, "ADS_imp_1_OUT".impter_63, "ADS_imp_1_OUT".impter_64, "ADS_imp_1_OUT".impter_65, "ADS_imp_1_OUT".impter_66, "ADS_imp_1_OUT".impter_67, "ADS_imp_1_OUT".impter_68, "ADS_imp_1_OUT".impter_69, "ADS_imp_1_OUT".impter_70, "ADS_imp_1_OUT".impter_71, "ADS_imp_1_OUT".impter_72, "ADS_imp_1_OUT".impter_73, "ADS_imp_1_OUT".impter_74, "ADS_imp_1_OUT".impter_75, "ADS_imp_1_OUT".impter_76, "ADS_imp_1_OUT".impter_77, "ADS_imp_1_OUT".impter_78, "ADS_imp_1_OUT".impter_79, "ADS_imp_1_OUT".impter_80, "ADS_imp_1_OUT".impter_81, "ADS_imp_1_OUT".impter_82, "ADS_imp_1_OUT".impter_83, "ADS_imp_1_OUT".impter_84, "ADS_imp_1_OUT".impter_85, "ADS_imp_1_OUT".impter_86, "ADS_imp_1_OUT".impter_87, "ADS_imp_1_OUT".impter_88, "ADS_imp_1_OUT".impter_89, "ADS_imp_1_OUT".impter_90, "ADS_imp_1_OUT".impter_91, "ADS_imp_1_OUT".impter_92, "ADS_imp_1_OUT".impter_93, "ADS_imp_1_OUT".impter_94, "ADS_imp_1_OUT".impter_95, "ADS_imp_1_OUT".impter_96, "ADS_imp_1_OUT".impter_97, "ADS_imp_1_OUT".impter_98, "ADS_imp_1_OUT".impter_99, "ADS_imp_1_OUT".impter_100, "ADS_imp_1_OUT".impter_101, "ADS_imp_1_OUT".impter_102, "ADS_imp_1_OUT".impter_103, "ADS_imp_1_OUT".impter_104, "ADS_imp_1_OUT".impter_105, "ADS_imp_1_OUT".impter_106, "ADS_imp_1_OUT".impter_107, "ADS_imp_1_OUT".impter_108, "ADS_imp_1_OUT".impter_109, "ADS_imp_1_OUT".impter_110, "ADS_imp_1_OUT".impter_111, "ADS_imp_1_OUT".impter_112, "ADS_imp_1_OUT".impter_113, "ADS_imp_1_OUT".impter_114, "ADS_imp_1_OUT".impter_115, "ADS_imp_1_OUT".impter_116, "ADS_imp_1_OUT".impter_117, "ADS_imp_1_OUT".impter_118, "ADS_imp_1_OUT".impter_119, "ADS_imp_1_OUT".impter_120, "ADS_imp_1_OUT".impter_121, "ADS_imp_1_OUT".impter_122, "ADS_imp_1_OUT".impter_123, "ADS_imp_1_OUT".impter_124, "ADS_imp_1_OUT".impter_125, "ADS_imp_1_OUT".impter_126, "ADS_imp_1_OUT".impter_127, "ADS_imp_1_OUT".impter_128, "ADS_imp_1_OUT".impter_129, "ADS_imp_1_OUT".impter_130, "ADS_imp_1_OUT".impter_131, "ADS_imp_1_OUT".impter_132, "ADS_imp_1_OUT".impter_133, "ADS_imp_1_OUT".impter_134, "ADS_imp_1_OUT".impter_135, "ADS_imp_1_OUT".impter_136, "ADS_imp_1_OUT".impter_137, "ADS_imp_1_OUT".impter_138, "ADS_imp_1_OUT".impter_139, "ADS_imp_1_OUT".impter_140, "ADS_imp_1_OUT".impter_141, "ADS_imp_1_OUT".impter_142, "ADS_imp_1_OUT".impter_143, "ADS_imp_1_OUT".impter_144, "ADS_imp_1_OUT".impter_145, "ADS_imp_1_OUT".impter_146, "ADS_imp_1_OUT".impter_147, "ADS_imp_1_OUT".impter_148, "ADS_imp_1_OUT".impter_149, "ADS_imp_1_OUT".impter_150, "ADS_imp_1_OUT".impter_151, "ADS_imp_1_OUT".impter_152, "ADS_imp_1_OUT".impter_153, "ADS_imp_1_OUT".impter_154, "ADS_imp_1_OUT".impter_155, "ADS_imp_1_OUT".impter_156, "ADS_imp_1_OUT".impter_157, "ADS_imp_1_OUT".impter_158, "ADS_imp_1_OUT".impter_159, "ADS_imp_1_OUT".impter_160, "ADS_imp_1_OUT".impter_161, "ADS_imp_1_OUT".impter_162, "ADS_imp_1_OUT".impter_163, "ADS_imp_1_OUT".impter_164, "ADS_imp_1_OUT".impter_165, "ADS_imp_1_OUT".impter_166, "ADS_imp_1_OUT".impter_167, "ADS_imp_1_OUT".impter_168, "ADS_imp_1_OUT".impter_169, "ADS_imp_1_OUT".impter_170, "ADS_imp_1_OUT".impter_171, "ADS_imp_1_OUT".impter_172, "ADS_imp_1_OUT".impter_173, "ADS_imp_1_OUT".impter_174, "ADS_imp_1_OUT".impter_175, "ADS_imp_1_OUT".impter_176, "ADS_imp_1_OUT".impter_177, "ADS_imp_1_OUT".impter_178, "ADS_imp_1_OUT".impter_179, "ADS_imp_1_OUT".impter_180, "ADS_imp_1_OUT".impter_181, "ADS_imp_1_OUT".impter_182, "ADS_imp_1_OUT".impter_183, "ADS_imp_1_OUT".impter_184, "ADS_imp_1_OUT".impter_185, "ADS_imp_1_OUT".impter_186, "ADS_imp_1_OUT".impter_187, "ADS_imp_1_OUT".impter_188, "ADS_imp_1_OUT".impter_189, "ADS_imp_1_OUT".impter_190, "ADS_imp_1_OUT".impter_191, "ADS_imp_1_OUT".impter_192, "ADS_imp_1_OUT".impter_193, "ADS_imp_1_OUT".impter_194, "ADS_imp_1_OUT".impter_195, "ADS_imp_1_OUT".impter_196, "ADS_imp_1_OUT".impter_197, "ADS_imp_1_OUT".impter_198, "ADS_imp_1_OUT".impter_199, "ADS_imp_1_OUT".impter_200, "ADS_imp_1_OUT".impter_201, "ADS_imp_1_OUT".impter_202, "ADS_imp_1_OUT".impter_203, "ADS_imp_1_OUT".impter_204, "ADS_imp_1_OUT".impter_205, "ADS_imp_1_OUT".impter_206, "ADS_imp_1_OUT".impter_207, "ADS_imp_1_OUT".impter_208, "ADS_imp_1_OUT".impter_209, "ADS_imp_1_OUT".impter_210, "ADS_imp_1_OUT".impter_211, "ADS_imp_1_OUT".impter_212, "ADS_imp_1_OUT".impter_213, "ADS_imp_1_OUT".impter_214, "ADS_imp_1_OUT".impter_215, "ADS_imp_1_OUT".impter_216, "ADS_imp_1_OUT".impter_217, "ADS_imp_1_OUT".impter_218, "ADS_imp_1_OUT".impter_219, "ADS_imp_1_OUT".impter_220, "ADS_imp_1_OUT".impter_221, "ADS_imp_1_OUT".impter_222, "ADS_imp_1_OUT".impter_223, "ADS_imp_1_OUT".impter_224, "ADS_imp_1_OUT".impter_225, "ADS_imp_1_OUT".impter_226, "ADS_imp_1_OUT".impter_227, "ADS_imp_1_OUT".impter_228, "ADS_imp_1_OUT".impter_229, "ADS_imp_1_OUT".impter_230, "ADS_imp_1_OUT".impter_231, "ADS_imp_1_OUT".impter_232, "ADS_imp_1_OUT".impter_233, "ADS_imp_1_OUT".impter_234, "ADS_imp_1_OUT".impter_235, "ADS_imp_1_OUT".impter_236, "ADS_imp_1_OUT".impter_237, "ADS_imp_1_OUT".impter_238, "ADS_imp_1_OUT".impter_239, "ADS_imp_1_OUT".impter_240, "ADS_imp_1_OUT".impter_241, "ADS_imp_1_OUT".impter_242, "ADS_imp_1_OUT".impter_243, "ADS_imp_1_OUT".impter_244, "ADS_imp_1_OUT".impter_245, "ADS_imp_1_OUT".impter_246, "ADS_imp_1_OUT".impter_247, "ADS_imp_1_OUT".impter_248, "ADS_imp_1_OUT".impter_249, "ADS_imp_1_OUT".impter_250, "ADS_imp_1_OUT".impter_251, "ADS_imp_1_OUT".impter_252, "ADS_imp_1_OUT".impter_253, "ADS_imp_1_OUT".impter_254, "ADS_imp_1_OUT".impter_255, "ADS_imp_1_OUT".impter_256, "ADS_imp_1_OUT".impter_257, "ADS_imp_1_OUT".impter_258, "ADS_imp_1_OUT".impter_259, "ADS_imp_1_OUT".impter_260, "ADS_imp_1_OUT".impter_261, "ADS_imp_1_OUT".impter_262, "ADS_imp_1_OUT".impter_263, "ADS_imp_1_OUT".impter_264, "ADS_imp_1_OUT".impter_265, "ADS_imp_1_OUT".impter_266, "ADS_imp_1_OUT".impter_267, "ADS_imp_1_OUT".impter_268, "ADS_imp_1_OUT".impter_269, "ADS_imp_1_OUT".impter_270, "ADS_imp_1_OUT".impter_271, "ADS_imp_1_OUT".impter_272, "ADS_imp_1_OUT".impter_273, "ADS_imp_1_OUT".impter_274, "ADS_imp_1_OUT".impter_275, "ADS_imp_1_OUT".impter_276, "ADS_imp_1_OUT".impter_277, "ADS_imp_1_OUT".impter_278, "ADS_imp_1_OUT".impter_279, "ADS_imp_1_OUT".impter_280, "ADS_imp_1_OUT".impter_281, "ADS_imp_1_OUT".impter_282, "ADS_imp_1_OUT".impter_283, "ADS_imp_1_OUT".impter_284, "ADS_imp_1_OUT".impter_285, "ADS_imp_1_OUT".impter_286, "ADS_imp_1_OUT".impter_287, "ADS_imp_1_OUT".impter_288, "ADS_imp_1_OUT".impter_289, "ADS_imp_1_OUT".impter_290, "ADS_imp_1_OUT".impter_291, "ADS_imp_1_OUT".impter_292, "ADS_imp_1_OUT".impter_293, "ADS_imp_1_OUT".impter_294, "ADS_imp_1_OUT".impter_295, "ADS_imp_1_OUT".impter_296, "ADS_imp_1_OUT".impter_297, "ADS_imp_1_OUT".impter_298, "ADS_imp_1_OUT".impter_299, "ADS_imp_1_OUT".impter_300, "ADS_imp_1_OUT".impter_301, "ADS_imp_1_OUT".impter_302, "ADS_imp_1_OUT".impter_303, "ADS_imp_1_OUT".impter_304, "ADS_imp_1_OUT".impter_305, "ADS_imp_1_OUT".impter_306, "ADS_imp_1_OUT".impter_307, "ADS_imp_1_OUT".impter_308, "ADS_imp_1_OUT".impter_309, "ADS_imp_1_OUT".impter_310, "ADS_imp_1_OUT".impter_311, "ADS_imp_1_OUT".impter_312, "ADS_imp_1_OUT".impter_313, "ADS_imp_1_OUT".impter_314, "ADS_imp_1_OUT".impter_315, "ADS_imp_1_OUT".impter_316, "ADS_imp_1_OUT".impter_317, "ADS_imp_1_OUT".impter_318, "ADS_imp_1_OUT".impter_319, "ADS_imp_1_OUT".impter_320, "ADS_imp_1_OUT".impter_321, "ADS_imp_1_OUT".impter_322, "ADS_imp_1_OUT".impter_323, "ADS_imp_1_OUT".impter_324, "ADS_imp_1_OUT".impter_325, "ADS_imp_1_OUT".impter_326, "ADS_imp_1_OUT".impter_327, "ADS_imp_1_OUT".impter_328, "ADS_imp_1_OUT".impter_329, "ADS_imp_1_OUT".impter_330, "ADS_imp_1_OUT".impter_331, "ADS_imp_1_OUT".impter_332, "ADS_imp_1_OUT".impter_333, "ADS_imp_1_OUT".impter_334, "ADS_imp_1_OUT".impter_335, "ADS_imp_1_OUT".impter_336, "ADS_imp_1_OUT".impter_337, "ADS_imp_1_OUT".impter_338, "ADS_imp_1_OUT".impter_339, "ADS_imp_1_OUT".impter_340, "ADS_imp_1_OUT".impter_341, "ADS_imp_1_OUT".impter_342, "ADS_imp_1_OUT".impter_343, "ADS_imp_1_OUT".impter_344, "ADS_imp_1_OUT".impter_345, "ADS_imp_1_OUT".impter_346, "ADS_imp_1_OUT".impter_347, "ADS_imp_1_OUT".impter_348, "ADS_imp_1_OUT".impter_349, "ADS_imp_1_OUT".impter_350, "ADS_imp_1_OUT".impter_351, "ADS_imp_1_OUT".impter_352, "ADS_imp_1_OUT".impter_353, "ADS_imp_1_OUT".impter_354, "ADS_imp_1_OUT".impter_355, "ADS_imp_1_OUT".impter_356, "ADS_imp_1_OUT".impter_357, "ADS_imp_1_OUT".impter_358, "ADS_imp_1_OUT".impter_359, "ADS_imp_1_OUT".impter_360, "ADS_imp_1_OUT".impter_361, "ADS_imp_1_OUT".impter_362, "ADS_imp_1_OUT".impter_363, "ADS_imp_1_OUT".impter_364, "ADS_imp_1_OUT".impter_365, "ADS_imp_1_OUT".impter_366, "ADS_imp_1_OUT".impter_367, "ADS_imp_1_OUT".impter_368, "ADS_imp_1_OUT".impter_369, "ADS_imp_1_OUT".impter_370, "ADS_imp_1_OUT".impter_371, "ADS_imp_1_OUT".impter_372, "ADS_imp_1_OUT".impter_373, "ADS_imp_1_OUT".impter_374, "ADS_imp_1_OUT".impter_375, "ADS_imp_1_OUT".impter_376, "ADS_imp_1_OUT".impter_377, "ADS_imp_1_OUT".impter_378, "ADS_imp_1_OUT".impter_379, "ADS_imp_1_OUT".impter_380, "ADS_imp_1_OUT".impter_381, "ADS_imp_1_OUT".impter_382, "ADS_imp_1_OUT".impter_383, "ADS_imp_1_OUT".impter_384, "ADS_imp_1_OUT".impter_385, "ADS_imp_1_OUT".impter_386, "ADS_imp_1_OUT".impter_387, "ADS_imp_1_OUT".impter_388, "ADS_imp_1_OUT".impter_389, "ADS_imp_1_OUT".impter_390, "ADS_imp_1_OUT".impter_391, "ADS_imp_1_OUT".impter_392, "ADS_imp_1_OUT".impter_393, "ADS_imp_1_OUT".impter_394, "ADS_imp_1_OUT".impter_395, "ADS_imp_1_OUT".impter_396, "ADS_imp_1_OUT".impter_397, "ADS_imp_1_OUT".impter_398, "ADS_imp_1_OUT".impter_399, "ADS_imp_1_OUT".impter_400, "ADS_imp_1_OUT".impter_401, "ADS_imp_1_OUT".impter_402, "ADS_imp_1_OUT".impter_403, "ADS_imp_1_OUT".impter_404, "ADS_imp_1_OUT".impter_405, "ADS_imp_1_OUT".impter_406, "ADS_imp_1_OUT".impter_407, "ADS_imp_1_OUT".impter_408, "ADS_imp_1_OUT".impter_409, "ADS_imp_1_OUT".impter_410, "ADS_imp_1_OUT".impter_411, "ADS_imp_1_OUT".impter_412, "ADS_imp_1_OUT".impter_413, "ADS_imp_1_OUT".impter_414, "ADS_imp_1_OUT".impter_415, "ADS_imp_1_OUT".impter_416, "ADS_imp_1_OUT".impter_417, "ADS_imp_1_OUT".impter_418, "ADS_imp_1_OUT".impter_419, "ADS_imp_1_OUT".impter_420, "ADS_imp_1_OUT".impter_421, "ADS_imp_1_OUT".impter_422, "ADS_imp_1_OUT".impter_423, "ADS_imp_1_OUT".impter_424, "ADS_imp_1_OUT".impter_425, "ADS_imp_1_OUT".impter_426, "ADS_imp_1_OUT".impter_427, "ADS_imp_1_OUT".impter_428, "ADS_imp_1_OUT".impter_429, "ADS_imp_1_OUT".impter_430, "ADS_imp_1_OUT".impter_431, "ADS_imp_1_OUT".impter_432, "ADS_imp_1_OUT".impter_433, "ADS_imp_1_OUT".impter_434, "ADS_imp_1_OUT".impter_435, "ADS_imp_1_OUT".impter_436, "ADS_imp_1_OUT".impter_437, "ADS_imp_1_OUT".impter_438, "ADS_imp_1_OUT".impter_439, "ADS_imp_1_OUT".impter_440, "ADS_imp_1_OUT".impter_441, "ADS_imp_1_OUT".impter_442, "ADS_imp_1_OUT".impter_443, "ADS_imp_1_OUT".impter_444, "ADS_imp_1_OUT".impter_445, "ADS_imp_1_OUT".impter_446, "ADS_imp_1_OUT".impter_447, "ADS_imp_1_OUT".impter_448, "ADS_imp_1_OUT".impter_449, "ADS_imp_1_OUT".impter_450, "ADS_imp_1_OUT".impter_451, "ADS_imp_1_OUT".impter_452, "ADS_imp_1_OUT".impter_453, "ADS_imp_1_OUT".impter_454, "ADS_imp_1_OUT".impter_455, "ADS_imp_1_OUT".impter_456, "ADS_imp_1_OUT".impter_457, "ADS_imp_1_OUT".impter_458, "ADS_imp_1_OUT".impter_459, "ADS_imp_1_OUT".impter_460, "ADS_imp_1_OUT".impter_461, "ADS_imp_1_OUT".impter_462, "ADS_imp_1_OUT".impter_463, "ADS_imp_1_OUT".impter_464, "ADS_imp_1_OUT".impter_465, "ADS_imp_1_OUT".impter_466, "ADS_imp_1_OUT".impter_467, "ADS_imp_1_OUT".impter_468, "ADS_imp_1_OUT".impter_469, "ADS_imp_1_OUT".impter_470, "ADS_imp_1_OUT".impter_471, "ADS_imp_1_OUT".impter_472, "ADS_imp_1_OUT".impter_473, "ADS_imp_1_OUT".impter_474, "ADS_imp_1_OUT".impter_475, "ADS_imp_1_OUT".impter_476, "ADS_imp_1_OUT".impter_477, "ADS_imp_1_OUT".impter_478, "ADS_imp_1_OUT".impter_479, "ADS_imp_1_OUT".impter_480, "ADS_imp_1_OUT".impter_481, "ADS_imp_1_OUT".impter_482, "ADS_imp_1_OUT".impter_483, "ADS_imp_1_OUT".impter_484, "ADS_imp_1_OUT".impter_485, "ADS_imp_1_OUT".impter_486, "ADS_imp_1_OUT".impter_487, "ADS_imp_1_OUT".impter_488, "ADS_imp_1_OUT".impter_489, "ADS_imp_1_OUT".impter_490, "ADS_imp_1_OUT".impter_491, "ADS_imp_1_OUT".impter_492, "ADS_imp_1_OUT".impter_493, "ADS_imp_1_OUT".impter_494, "ADS_imp_1_OUT".impter_495, "ADS_imp_1_OUT".impter_496, "ADS_imp_1_OUT".impter_497, "ADS_imp_1_OUT".impter_498, "ADS_imp_1_OUT".impter_499, "ADS_imp_1_OUT".impter_500, "ADS_imp_1_OUT".impter_501 
FROM (SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" IS NULL) THEN 0.10810245375646362 ELSE "ADS"."Feature_0" END AS impter_2, CASE WHEN ("ADS"."Feature_1" IS NULL) THEN 0.040042372892287084 ELSE "ADS"."Feature_1" END AS impter_3, CASE WHEN ("ADS"."Feature_2" IS NULL) THEN -0.07667364732662786 ELSE "ADS"."Feature_2" END AS impter_4, CASE WHEN ("ADS"."Feature_3" IS NULL) THEN 0.17588592419877258 ELSE "ADS"."Feature_3" END AS impter_5, CASE WHEN ("ADS"."Feature_4" IS NULL) THEN 0.02926169026463611 ELSE "ADS"."Feature_4" END AS impter_6, CASE WHEN ("ADS"."Feature_5" IS NULL) THEN -0.00904400654098767 ELSE "ADS"."Feature_5" END AS impter_7, CASE WHEN ("ADS"."Feature_6" IS NULL) THEN 0.02021641814123045 ELSE "ADS"."Feature_6" END AS impter_8, CASE WHEN ("ADS"."Feature_7" IS NULL) THEN -0.021740866363558604 ELSE "ADS"."Feature_7" END AS impter_9, CASE WHEN ("ADS"."Feature_8" IS NULL) THEN 0.12136863686872651 ELSE "ADS"."Feature_8" END AS impter_10, CASE WHEN ("ADS"."Feature_9" IS NULL) THEN -0.009621207715304118 ELSE "ADS"."Feature_9" END AS impter_11, CASE WHEN ("ADS"."Feature_10" IS NULL) THEN -0.0017282210866736356 ELSE "ADS"."Feature_10" END AS impter_12, CASE WHEN ("ADS"."Feature_11" IS NULL) THEN -0.017782065935332218 ELSE "ADS"."Feature_11" END AS impter_13, CASE WHEN ("ADS"."Feature_12" IS NULL) THEN 0.03226275015550329 ELSE "ADS"."Feature_12" END AS impter_14, CASE WHEN ("ADS"."Feature_13" IS NULL) THEN -0.0014825533746410664 ELSE "ADS"."Feature_13" END AS impter_15, CASE WHEN ("ADS"."Feature_14" IS NULL) THEN 0.06164712316198218 ELSE "ADS"."Feature_14" END AS impter_16, CASE WHEN ("ADS"."Feature_15" IS NULL) THEN 0.02754670267716649 ELSE "ADS"."Feature_15" END AS impter_17, CASE WHEN ("ADS"."Feature_16" IS NULL) THEN 0.08064319713194991 ELSE "ADS"."Feature_16" END AS impter_18, CASE WHEN ("ADS"."Feature_17" IS NULL) THEN -0.011498650117894155 ELSE "ADS"."Feature_17" END AS impter_19, CASE WHEN ("ADS"."Feature_18" IS NULL) THEN 0.31890266993969374 ELSE "ADS"."Feature_18" END AS impter_20, CASE WHEN ("ADS"."Feature_19" IS NULL) THEN -0.00022777424626326773 ELSE "ADS"."Feature_19" END AS impter_21, CASE WHEN ("ADS"."Feature_20" IS NULL) THEN 0.24588258651573852 ELSE "ADS"."Feature_20" END AS impter_22, CASE WHEN ("ADS"."Feature_21" IS NULL) THEN -0.008717075180818528 ELSE "ADS"."Feature_21" END AS impter_23, CASE WHEN ("ADS"."Feature_22" IS NULL) THEN 0.0053072366770978985 ELSE "ADS"."Feature_22" END AS impter_24, CASE WHEN ("ADS"."Feature_23" IS NULL) THEN -0.014763237855175493 ELSE "ADS"."Feature_23" END AS impter_25, CASE WHEN ("ADS"."Feature_24" IS NULL) THEN -0.023154438774995047 ELSE "ADS"."Feature_24" END AS impter_26, CASE WHEN ("ADS"."Feature_25" IS NULL) THEN -0.12239207011675045 ELSE "ADS"."Feature_25" END AS impter_27, CASE WHEN ("ADS"."Feature_26" IS NULL) THEN 0.020535611934405496 ELSE "ADS"."Feature_26" END AS impter_28, CASE WHEN ("ADS"."Feature_27" IS NULL) THEN 0.006055843023249926 ELSE "ADS"."Feature_27" END AS impter_29, CASE WHEN ("ADS"."Feature_28" IS NULL) THEN -0.02283750315483421 ELSE "ADS"."Feature_28" END AS impter_30, CASE WHEN ("ADS"."Feature_29" IS NULL) THEN 0.023985609638350506 ELSE "ADS"."Feature_29" END AS impter_31, CASE WHEN ("ADS"."Feature_30" IS NULL) THEN 0.008119293552803313 ELSE "ADS"."Feature_30" END AS impter_32, CASE WHEN ("ADS"."Feature_31" IS NULL) THEN 0.027089596569202946 ELSE "ADS"."Feature_31" END AS impter_33, CASE WHEN ("ADS"."Feature_32" IS NULL) THEN -0.06055225058050742 ELSE "ADS"."Feature_32" END AS impter_34, CASE WHEN ("ADS"."Feature_33" IS NULL) THEN -0.024424868791331697 ELSE "ADS"."Feature_33" END AS impter_35, CASE WHEN ("ADS"."Feature_34" IS NULL) THEN 0.012336464422653204 ELSE "ADS"."Feature_34" END AS impter_36, CASE WHEN ("ADS"."Feature_35" IS NULL) THEN -0.03733185453369615 ELSE "ADS"."Feature_35" END AS impter_37, CASE WHEN ("ADS"."Feature_36" IS NULL) THEN -0.01163301006213858 ELSE "ADS"."Feature_36" END AS impter_38, CASE WHEN ("ADS"."Feature_37" IS NULL) THEN -0.05102972508859019 ELSE "ADS"."Feature_37" END AS impter_39, CASE WHEN ("ADS"."Feature_38" IS NULL) THEN 0.0724619853931901 ELSE "ADS"."Feature_38" END AS impter_40, CASE WHEN ("ADS"."Feature_39" IS NULL) THEN 0.02873322955169374 ELSE "ADS"."Feature_39" END AS impter_41, CASE WHEN ("ADS"."Feature_40" IS NULL) THEN -0.0468030521847972 ELSE "ADS"."Feature_40" END AS impter_42, CASE WHEN ("ADS"."Feature_41" IS NULL) THEN 0.024222315050048744 ELSE "ADS"."Feature_41" END AS impter_43, CASE WHEN ("ADS"."Feature_42" IS NULL) THEN 0.01149556673107005 ELSE "ADS"."Feature_42" END AS impter_44, CASE WHEN ("ADS"."Feature_43" IS NULL) THEN -0.46581882386282575 ELSE "ADS"."Feature_43" END AS impter_45, CASE WHEN ("ADS"."Feature_44" IS NULL) THEN -0.0013382860297555803 ELSE "ADS"."Feature_44" END AS impter_46, CASE WHEN ("ADS"."Feature_45" IS NULL) THEN -0.008602411981840778 ELSE "ADS"."Feature_45" END AS impter_47, CASE WHEN ("ADS"."Feature_46" IS NULL) THEN -0.009965212302201201 ELSE "ADS"."Feature_46" END AS impter_48, CASE WHEN ("ADS"."Feature_47" IS NULL) THEN -0.03978485158208147 ELSE "ADS"."Feature_47" END AS impter_49, CASE WHEN ("ADS"."Feature_48" IS NULL) THEN 0.007027179196660041 ELSE "ADS"."Feature_48" END AS impter_50, CASE WHEN ("ADS"."Feature_49" IS NULL) THEN -0.01982980508470468 ELSE "ADS"."Feature_49" END AS impter_51, CASE WHEN ("ADS"."Feature_50" IS NULL) THEN -0.04505595017989205 ELSE "ADS"."Feature_50" END AS impter_52, CASE WHEN ("ADS"."Feature_51" IS NULL) THEN -0.045447760217128444 ELSE "ADS"."Feature_51" END AS impter_53, CASE WHEN ("ADS"."Feature_52" IS NULL) THEN 0.037832771618739616 ELSE "ADS"."Feature_52" END AS impter_54, CASE WHEN ("ADS"."Feature_53" IS NULL) THEN -0.061624599074911364 ELSE "ADS"."Feature_53" END AS impter_55, CASE WHEN ("ADS"."Feature_54" IS NULL) THEN 0.07625111583055796 ELSE "ADS"."Feature_54" END AS impter_56, CASE WHEN ("ADS"."Feature_55" IS NULL) THEN -0.027271537635613834 ELSE "ADS"."Feature_55" END AS impter_57, CASE WHEN ("ADS"."Feature_56" IS NULL) THEN 0.08658875419996898 ELSE "ADS"."Feature_56" END AS impter_58, CASE WHEN ("ADS"."Feature_57" IS NULL) THEN 0.0999871472844467 ELSE "ADS"."Feature_57" END AS impter_59, CASE WHEN ("ADS"."Feature_58" IS NULL) THEN -0.007447998234187981 ELSE "ADS"."Feature_58" END AS impter_60, CASE WHEN ("ADS"."Feature_59" IS NULL) THEN 0.0005691476004520007 ELSE "ADS"."Feature_59" END AS impter_61, CASE WHEN ("ADS"."Feature_60" IS NULL) THEN 0.007052612183486737 ELSE "ADS"."Feature_60" END AS impter_62, CASE WHEN ("ADS"."Feature_61" IS NULL) THEN -0.07298857610906591 ELSE "ADS"."Feature_61" END AS impter_63, CASE WHEN ("ADS"."Feature_62" IS NULL) THEN 0.007257283737326912 ELSE "ADS"."Feature_62" END AS impter_64, CASE WHEN ("ADS"."Feature_63" IS NULL) THEN -0.01499281527733551 ELSE "ADS"."Feature_63" END AS impter_65, CASE WHEN ("ADS"."Feature_64" IS NULL) THEN 0.1504932184478646 ELSE "ADS"."Feature_64" END AS impter_66, CASE WHEN ("ADS"."Feature_65" IS NULL) THEN -0.34139964395628075 ELSE "ADS"."Feature_65" END AS impter_67, CASE WHEN ("ADS"."Feature_66" IS NULL) THEN 0.044769898693156215 ELSE "ADS"."Feature_66" END AS impter_68, CASE WHEN ("ADS"."Feature_67" IS NULL) THEN -0.06740805909718733 ELSE "ADS"."Feature_67" END AS impter_69, CASE WHEN ("ADS"."Feature_68" IS NULL) THEN 0.011827724290967036 ELSE "ADS"."Feature_68" END AS impter_70, CASE WHEN ("ADS"."Feature_69" IS NULL) THEN 0.04511965476174756 ELSE "ADS"."Feature_69" END AS impter_71, CASE WHEN ("ADS"."Feature_70" IS NULL) THEN -0.005725960546688403 ELSE "ADS"."Feature_70" END AS impter_72, CASE WHEN ("ADS"."Feature_71" IS NULL) THEN -0.45906874360950467 ELSE "ADS"."Feature_71" END AS impter_73, CASE WHEN ("ADS"."Feature_72" IS NULL) THEN -0.4029233461203958 ELSE "ADS"."Feature_72" END AS impter_74, CASE WHEN ("ADS"."Feature_73" IS NULL) THEN -0.01983348240532154 ELSE "ADS"."Feature_73" END AS impter_75, CASE WHEN ("ADS"."Feature_74" IS NULL) THEN -0.03762876790351029 ELSE "ADS"."Feature_74" END AS impter_76, CASE WHEN ("ADS"."Feature_75" IS NULL) THEN 0.0014482025177064296 ELSE "ADS"."Feature_75" END AS impter_77, CASE WHEN ("ADS"."Feature_76" IS NULL) THEN -0.009126373209438378 ELSE "ADS"."Feature_76" END AS impter_78, CASE WHEN ("ADS"."Feature_77" IS NULL) THEN -0.004847879746676399 ELSE "ADS"."Feature_77" END AS impter_79, CASE WHEN ("ADS"."Feature_78" IS NULL) THEN 0.0003242960082649739 ELSE "ADS"."Feature_78" END AS impter_80, CASE WHEN ("ADS"."Feature_79" IS NULL) THEN -0.030222670037465243 ELSE "ADS"."Feature_79" END AS impter_81, CASE WHEN ("ADS"."Feature_80" IS NULL) THEN 0.00597438906398475 ELSE "ADS"."Feature_80" END AS impter_82, CASE WHEN ("ADS"."Feature_81" IS NULL) THEN 0.006442151047769896 ELSE "ADS"."Feature_81" END AS impter_83, CASE WHEN ("ADS"."Feature_82" IS NULL) THEN 0.06674583942705845 ELSE "ADS"."Feature_82" END AS impter_84, CASE WHEN ("ADS"."Feature_83" IS NULL) THEN 0.07788312942179253 ELSE "ADS"."Feature_83" END AS impter_85, CASE WHEN ("ADS"."Feature_84" IS NULL) THEN 0.04734384734963352 ELSE "ADS"."Feature_84" END AS impter_86, CASE WHEN ("ADS"."Feature_85" IS NULL) THEN -0.008706507745982245 ELSE "ADS"."Feature_85" END AS impter_87, CASE WHEN ("ADS"."Feature_86" IS NULL) THEN 0.048010462132819065 ELSE "ADS"."Feature_86" END AS impter_88, CASE WHEN ("ADS"."Feature_87" IS NULL) THEN -0.015721233574226466 ELSE "ADS"."Feature_87" END AS impter_89, CASE WHEN ("ADS"."Feature_88" IS NULL) THEN 0.029859590983661574 ELSE "ADS"."Feature_88" END AS impter_90, CASE WHEN ("ADS"."Feature_89" IS NULL) THEN 0.05432072236762381 ELSE "ADS"."Feature_89" END AS impter_91, CASE WHEN ("ADS"."Feature_90" IS NULL) THEN -0.01029209788232909 ELSE "ADS"."Feature_90" END AS impter_92, CASE WHEN ("ADS"."Feature_91" IS NULL) THEN -0.057667586642934685 ELSE "ADS"."Feature_91" END AS impter_93, CASE WHEN ("ADS"."Feature_92" IS NULL) THEN 0.010705496096094396 ELSE "ADS"."Feature_92" END AS impter_94, CASE WHEN ("ADS"."Feature_93" IS NULL) THEN 0.07155562158168 ELSE "ADS"."Feature_93" END AS impter_95, CASE WHEN ("ADS"."Feature_94" IS NULL) THEN 0.012567881232469623 ELSE "ADS"."Feature_94" END AS impter_96, CASE WHEN ("ADS"."Feature_95" IS NULL) THEN 0.013515801306018876 ELSE "ADS"."Feature_95" END AS impter_97, CASE WHEN ("ADS"."Feature_96" IS NULL) THEN -0.03144133874056725 ELSE "ADS"."Feature_96" END AS impter_98, CASE WHEN ("ADS"."Feature_97" IS NULL) THEN 0.04347042885615023 ELSE "ADS"."Feature_97" END AS impter_99, CASE WHEN ("ADS"."Feature_98" IS NULL) THEN 0.06271561958724896 ELSE "ADS"."Feature_98" END AS impter_100, CASE WHEN ("ADS"."Feature_99" IS NULL) THEN 0.05756441101485498 ELSE "ADS"."Feature_99" END AS impter_101, CASE WHEN ("ADS"."Feature_100" IS NULL) THEN 0.08328088835981105 ELSE "ADS"."Feature_100" END AS impter_102, CASE WHEN ("ADS"."Feature_101" IS NULL) THEN 0.027342821102590696 ELSE "ADS"."Feature_101" END AS impter_103, CASE WHEN ("ADS"."Feature_102" IS NULL) THEN -0.45823161485829694 ELSE "ADS"."Feature_102" END AS impter_104, CASE WHEN ("ADS"."Feature_103" IS NULL) THEN -0.0574871655764397 ELSE "ADS"."Feature_103" END AS impter_105, CASE WHEN ("ADS"."Feature_104" IS NULL) THEN -0.04439086595851878 ELSE "ADS"."Feature_104" END AS impter_106, CASE WHEN ("ADS"."Feature_105" IS NULL) THEN 0.02144592469206838 ELSE "ADS"."Feature_105" END AS impter_107, CASE WHEN ("ADS"."Feature_106" IS NULL) THEN 0.11209373860993643 ELSE "ADS"."Feature_106" END AS impter_108, CASE WHEN ("ADS"."Feature_107" IS NULL) THEN 0.020021880427962078 ELSE "ADS"."Feature_107" END AS impter_109, CASE WHEN ("ADS"."Feature_108" IS NULL) THEN -0.009743329217515511 ELSE "ADS"."Feature_108" END AS impter_110, CASE WHEN ("ADS"."Feature_109" IS NULL) THEN 0.4786622270719938 ELSE "ADS"."Feature_109" END AS impter_111, CASE WHEN ("ADS"."Feature_110" IS NULL) THEN 0.02944493462807616 ELSE "ADS"."Feature_110" END AS impter_112, CASE WHEN ("ADS"."Feature_111" IS NULL) THEN -0.00310096676730144 ELSE "ADS"."Feature_111" END AS impter_113, CASE WHEN ("ADS"."Feature_112" IS NULL) THEN 0.0231371409575344 ELSE "ADS"."Feature_112" END AS impter_114, CASE WHEN ("ADS"."Feature_113" IS NULL) THEN -0.04815066967587055 ELSE "ADS"."Feature_113" END AS impter_115, CASE WHEN ("ADS"."Feature_114" IS NULL) THEN 0.025111413866439537 ELSE "ADS"."Feature_114" END AS impter_116, CASE WHEN ("ADS"."Feature_115" IS NULL) THEN 0.0021133311116955213 ELSE "ADS"."Feature_115" END AS impter_117, CASE WHEN ("ADS"."Feature_116" IS NULL) THEN 0.034947174142157644 ELSE "ADS"."Feature_116" END AS impter_118, CASE WHEN ("ADS"."Feature_117" IS NULL) THEN -0.05606347652620213 ELSE "ADS"."Feature_117" END AS impter_119, CASE WHEN ("ADS"."Feature_118" IS NULL) THEN -0.023812528369921485 ELSE "ADS"."Feature_118" END AS impter_120, CASE WHEN ("ADS"."Feature_119" IS NULL) THEN -0.042073637845818246 ELSE "ADS"."Feature_119" END AS impter_121, CASE WHEN ("ADS"."Feature_120" IS NULL) THEN 0.007882510288965947 ELSE "ADS"."Feature_120" END AS impter_122, CASE WHEN ("ADS"."Feature_121" IS NULL) THEN -0.02733468989970973 ELSE "ADS"."Feature_121" END AS impter_123, CASE WHEN ("ADS"."Feature_122" IS NULL) THEN -0.6701750904403835 ELSE "ADS"."Feature_122" END AS impter_124, CASE WHEN ("ADS"."Feature_123" IS NULL) THEN -0.04044317104909807 ELSE "ADS"."Feature_123" END AS impter_125, CASE WHEN ("ADS"."Feature_124" IS NULL) THEN -0.00837516585592746 ELSE "ADS"."Feature_124" END AS impter_126, CASE WHEN ("ADS"."Feature_125" IS NULL) THEN -0.005344367193538407 ELSE "ADS"."Feature_125" END AS impter_127, CASE WHEN ("ADS"."Feature_126" IS NULL) THEN -0.009191225939401346 ELSE "ADS"."Feature_126" END AS impter_128, CASE WHEN ("ADS"."Feature_127" IS NULL) THEN -0.004068573508204202 ELSE "ADS"."Feature_127" END AS impter_129, CASE WHEN ("ADS"."Feature_128" IS NULL) THEN -0.030267877751773992 ELSE "ADS"."Feature_128" END AS impter_130, CASE WHEN ("ADS"."Feature_129" IS NULL) THEN 0.17410306271063888 ELSE "ADS"."Feature_129" END AS impter_131, CASE WHEN ("ADS"."Feature_130" IS NULL) THEN -0.012642941998284607 ELSE "ADS"."Feature_130" END AS impter_132, CASE WHEN ("ADS"."Feature_131" IS NULL) THEN 0.01749739797543971 ELSE "ADS"."Feature_131" END AS impter_133, CASE WHEN ("ADS"."Feature_132" IS NULL) THEN 0.5426783595611434 ELSE "ADS"."Feature_132" END AS impter_134, CASE WHEN ("ADS"."Feature_133" IS NULL) THEN -0.5946970819130108 ELSE "ADS"."Feature_133" END AS impter_135, CASE WHEN ("ADS"."Feature_134" IS NULL) THEN -0.02934504234656094 ELSE "ADS"."Feature_134" END AS impter_136, CASE WHEN ("ADS"."Feature_135" IS NULL) THEN 0.06552557763413538 ELSE "ADS"."Feature_135" END AS impter_137, CASE WHEN ("ADS"."Feature_136" IS NULL) THEN -0.05569025110062092 ELSE "ADS"."Feature_136" END AS impter_138, CASE WHEN ("ADS"."Feature_137" IS NULL) THEN 0.023191171882599493 ELSE "ADS"."Feature_137" END AS impter_139, CASE WHEN ("ADS"."Feature_138" IS NULL) THEN -0.05295059390165566 ELSE "ADS"."Feature_138" END AS impter_140, CASE WHEN ("ADS"."Feature_139" IS NULL) THEN 0.033509246297397904 ELSE "ADS"."Feature_139" END AS impter_141, CASE WHEN ("ADS"."Feature_140" IS NULL) THEN -0.04155471151345872 ELSE "ADS"."Feature_140" END AS impter_142, CASE WHEN ("ADS"."Feature_141" IS NULL) THEN -0.6634336506604639 ELSE "ADS"."Feature_141" END AS impter_143, CASE WHEN ("ADS"."Feature_142" IS NULL) THEN -0.5573588681497673 ELSE "ADS"."Feature_142" END AS impter_144, CASE WHEN ("ADS"."Feature_143" IS NULL) THEN 0.0441240830479543 ELSE "ADS"."Feature_143" END AS impter_145, CASE WHEN ("ADS"."Feature_144" IS NULL) THEN -0.0032026430582909036 ELSE "ADS"."Feature_144" END AS impter_146, CASE WHEN ("ADS"."Feature_145" IS NULL) THEN 0.0547961032530105 ELSE "ADS"."Feature_145" END AS impter_147, CASE WHEN ("ADS"."Feature_146" IS NULL) THEN -0.0570190089317311 ELSE "ADS"."Feature_146" END AS impter_148, CASE WHEN ("ADS"."Feature_147" IS NULL) THEN -0.05068123758307288 ELSE "ADS"."Feature_147" END AS impter_149, CASE WHEN ("ADS"."Feature_148" IS NULL) THEN 0.04963772213165472 ELSE "ADS"."Feature_148" END AS impter_150, CASE WHEN ("ADS"."Feature_149" IS NULL) THEN -0.0053902063922270736 ELSE "ADS"."Feature_149" END AS impter_151, CASE WHEN ("ADS"."Feature_150" IS NULL) THEN -0.06888968948833549 ELSE "ADS"."Feature_150" END AS impter_152, CASE WHEN ("ADS"."Feature_151" IS NULL) THEN -0.016131263076271454 ELSE "ADS"."Feature_151" END AS impter_153, CASE WHEN ("ADS"."Feature_152" IS NULL) THEN -0.3673160108448531 ELSE "ADS"."Feature_152" END AS impter_154, CASE WHEN ("ADS"."Feature_153" IS NULL) THEN 0.055182003778661885 ELSE "ADS"."Feature_153" END AS impter_155, CASE WHEN ("ADS"."Feature_154" IS NULL) THEN 0.03906491494486876 ELSE "ADS"."Feature_154" END AS impter_156, CASE WHEN ("ADS"."Feature_155" IS NULL) THEN -0.018774913038090556 ELSE "ADS"."Feature_155" END AS impter_157, CASE WHEN ("ADS"."Feature_156" IS NULL) THEN 0.04167563251378332 ELSE "ADS"."Feature_156" END AS impter_158, CASE WHEN ("ADS"."Feature_157" IS NULL) THEN -0.014464200228668327 ELSE "ADS"."Feature_157" END AS impter_159, CASE WHEN ("ADS"."Feature_158" IS NULL) THEN 0.001498972159727102 ELSE "ADS"."Feature_158" END AS impter_160, CASE WHEN ("ADS"."Feature_159" IS NULL) THEN -0.018229772297973595 ELSE "ADS"."Feature_159" END AS impter_161, CASE WHEN ("ADS"."Feature_160" IS NULL) THEN -0.044371023327894055 ELSE "ADS"."Feature_160" END AS impter_162, CASE WHEN ("ADS"."Feature_161" IS NULL) THEN 0.003260044680277718 ELSE "ADS"."Feature_161" END AS impter_163, CASE WHEN ("ADS"."Feature_162" IS NULL) THEN 0.04743398414161841 ELSE "ADS"."Feature_162" END AS impter_164, CASE WHEN ("ADS"."Feature_163" IS NULL) THEN 0.02952107505742563 ELSE "ADS"."Feature_163" END AS impter_165, CASE WHEN ("ADS"."Feature_164" IS NULL) THEN 0.039029822514854 ELSE "ADS"."Feature_164" END AS impter_166, CASE WHEN ("ADS"."Feature_165" IS NULL) THEN 0.33233879962749624 ELSE "ADS"."Feature_165" END AS impter_167, CASE WHEN ("ADS"."Feature_166" IS NULL) THEN -0.030838711525630415 ELSE "ADS"."Feature_166" END AS impter_168, CASE WHEN ("ADS"."Feature_167" IS NULL) THEN 0.053457495179036106 ELSE "ADS"."Feature_167" END AS impter_169, CASE WHEN ("ADS"."Feature_168" IS NULL) THEN 0.06334783178164666 ELSE "ADS"."Feature_168" END AS impter_170, CASE WHEN ("ADS"."Feature_169" IS NULL) THEN -0.015185631962267647 ELSE "ADS"."Feature_169" END AS impter_171, CASE WHEN ("ADS"."Feature_170" IS NULL) THEN -0.0373186897788836 ELSE "ADS"."Feature_170" END AS impter_172, CASE WHEN ("ADS"."Feature_171" IS NULL) THEN 0.058926161621590305 ELSE "ADS"."Feature_171" END AS impter_173, CASE WHEN ("ADS"."Feature_172" IS NULL) THEN 9.69895410212665e-05 ELSE "ADS"."Feature_172" END AS impter_174, CASE WHEN ("ADS"."Feature_173" IS NULL) THEN 0.023780298476686824 ELSE "ADS"."Feature_173" END AS impter_175, CASE WHEN ("ADS"."Feature_174" IS NULL) THEN 0.021640308005590803 ELSE "ADS"."Feature_174" END AS impter_176, CASE WHEN ("ADS"."Feature_175" IS NULL) THEN 0.02609411025064558 ELSE "ADS"."Feature_175" END AS impter_177, CASE WHEN ("ADS"."Feature_176" IS NULL) THEN 0.053659812775327234 ELSE "ADS"."Feature_176" END AS impter_178, CASE WHEN ("ADS"."Feature_177" IS NULL) THEN 0.02312075671447861 ELSE "ADS"."Feature_177" END AS impter_179, CASE WHEN ("ADS"."Feature_178" IS NULL) THEN 0.08189652549389312 ELSE "ADS"."Feature_178" END AS impter_180, CASE WHEN ("ADS"."Feature_179" IS NULL) THEN -0.28662694866746835 ELSE "ADS"."Feature_179" END AS impter_181, CASE WHEN ("ADS"."Feature_180" IS NULL) THEN -0.06816976745830143 ELSE "ADS"."Feature_180" END AS impter_182, CASE WHEN ("ADS"."Feature_181" IS NULL) THEN -0.0288394136395886 ELSE "ADS"."Feature_181" END AS impter_183, CASE WHEN ("ADS"."Feature_182" IS NULL) THEN 0.030475929720363698 ELSE "ADS"."Feature_182" END AS impter_184, CASE WHEN ("ADS"."Feature_183" IS NULL) THEN -0.9321092506061046 ELSE "ADS"."Feature_183" END AS impter_185, CASE WHEN ("ADS"."Feature_184" IS NULL) THEN -0.005783297854668443 ELSE "ADS"."Feature_184" END AS impter_186, CASE WHEN ("ADS"."Feature_185" IS NULL) THEN -0.6842779545480162 ELSE "ADS"."Feature_185" END AS impter_187, CASE WHEN ("ADS"."Feature_186" IS NULL) THEN -0.035868681753580677 ELSE "ADS"."Feature_186" END AS impter_188, CASE WHEN ("ADS"."Feature_187" IS NULL) THEN 0.37446820466554537 ELSE "ADS"."Feature_187" END AS impter_189, CASE WHEN ("ADS"."Feature_188" IS NULL) THEN 0.03710250301413846 ELSE "ADS"."Feature_188" END AS impter_190, CASE WHEN ("ADS"."Feature_189" IS NULL) THEN -0.1405646996029281 ELSE "ADS"."Feature_189" END AS impter_191, CASE WHEN ("ADS"."Feature_190" IS NULL) THEN -0.008242263620478222 ELSE "ADS"."Feature_190" END AS impter_192, CASE WHEN ("ADS"."Feature_191" IS NULL) THEN 0.23469193009627595 ELSE "ADS"."Feature_191" END AS impter_193, CASE WHEN ("ADS"."Feature_192" IS NULL) THEN -0.04853360559010945 ELSE "ADS"."Feature_192" END AS impter_194, CASE WHEN ("ADS"."Feature_193" IS NULL) THEN -0.29107017412914993 ELSE "ADS"."Feature_193" END AS impter_195, CASE WHEN ("ADS"."Feature_194" IS NULL) THEN 0.06554945522577102 ELSE "ADS"."Feature_194" END AS impter_196, CASE WHEN ("ADS"."Feature_195" IS NULL) THEN 0.03415746968907192 ELSE "ADS"."Feature_195" END AS impter_197, CASE WHEN ("ADS"."Feature_196" IS NULL) THEN -1.0112490880861227 ELSE "ADS"."Feature_196" END AS impter_198, CASE WHEN ("ADS"."Feature_197" IS NULL) THEN 0.4496849630728245 ELSE "ADS"."Feature_197" END AS impter_199, CASE WHEN ("ADS"."Feature_198" IS NULL) THEN 0.032026535978956015 ELSE "ADS"."Feature_198" END AS impter_200, CASE WHEN ("ADS"."Feature_199" IS NULL) THEN 0.000929134812353008 ELSE "ADS"."Feature_199" END AS impter_201, CASE WHEN ("ADS"."Feature_200" IS NULL) THEN 0.013717912018418882 ELSE "ADS"."Feature_200" END AS impter_202, CASE WHEN ("ADS"."Feature_201" IS NULL) THEN -0.025517677160104602 ELSE "ADS"."Feature_201" END AS impter_203, CASE WHEN ("ADS"."Feature_202" IS NULL) THEN 0.008684033616587546 ELSE "ADS"."Feature_202" END AS impter_204, CASE WHEN ("ADS"."Feature_203" IS NULL) THEN 0.013537249806385316 ELSE "ADS"."Feature_203" END AS impter_205, CASE WHEN ("ADS"."Feature_204" IS NULL) THEN -0.0230268828473152 ELSE "ADS"."Feature_204" END AS impter_206, CASE WHEN ("ADS"."Feature_205" IS NULL) THEN 0.03589117923846176 ELSE "ADS"."Feature_205" END AS impter_207, CASE WHEN ("ADS"."Feature_206" IS NULL) THEN -0.011430934569701108 ELSE "ADS"."Feature_206" END AS impter_208, CASE WHEN ("ADS"."Feature_207" IS NULL) THEN -0.03231136300980085 ELSE "ADS"."Feature_207" END AS impter_209, CASE WHEN ("ADS"."Feature_208" IS NULL) THEN -0.03420275223278265 ELSE "ADS"."Feature_208" END AS impter_210, CASE WHEN ("ADS"."Feature_209" IS NULL) THEN 0.23377425435020424 ELSE "ADS"."Feature_209" END AS impter_211, CASE WHEN ("ADS"."Feature_210" IS NULL) THEN 0.06340248702486702 ELSE "ADS"."Feature_210" END AS impter_212, CASE WHEN ("ADS"."Feature_211" IS NULL) THEN -0.031763897397096605 ELSE "ADS"."Feature_211" END AS impter_213, CASE WHEN ("ADS"."Feature_212" IS NULL) THEN 0.004392749210234481 ELSE "ADS"."Feature_212" END AS impter_214, CASE WHEN ("ADS"."Feature_213" IS NULL) THEN -0.007220451377103457 ELSE "ADS"."Feature_213" END AS impter_215, CASE WHEN ("ADS"."Feature_214" IS NULL) THEN 0.001039454428951527 ELSE "ADS"."Feature_214" END AS impter_216, CASE WHEN ("ADS"."Feature_215" IS NULL) THEN 0.255416687811933 ELSE "ADS"."Feature_215" END AS impter_217, CASE WHEN ("ADS"."Feature_216" IS NULL) THEN -0.1279428512452052 ELSE "ADS"."Feature_216" END AS impter_218, CASE WHEN ("ADS"."Feature_217" IS NULL) THEN 0.11623077388873257 ELSE "ADS"."Feature_217" END AS impter_219, CASE WHEN ("ADS"."Feature_218" IS NULL) THEN 0.04461217703505275 ELSE "ADS"."Feature_218" END AS impter_220, CASE WHEN ("ADS"."Feature_219" IS NULL) THEN -0.03146418763016053 ELSE "ADS"."Feature_219" END AS impter_221, CASE WHEN ("ADS"."Feature_220" IS NULL) THEN 0.03437191123539599 ELSE "ADS"."Feature_220" END AS impter_222, CASE WHEN ("ADS"."Feature_221" IS NULL) THEN 0.02811765018111002 ELSE "ADS"."Feature_221" END AS impter_223, CASE WHEN ("ADS"."Feature_222" IS NULL) THEN -0.008115500982846469 ELSE "ADS"."Feature_222" END AS impter_224, CASE WHEN ("ADS"."Feature_223" IS NULL) THEN 0.0346610159959258 ELSE "ADS"."Feature_223" END AS impter_225, CASE WHEN ("ADS"."Feature_224" IS NULL) THEN 0.04873411944524845 ELSE "ADS"."Feature_224" END AS impter_226, CASE WHEN ("ADS"."Feature_225" IS NULL) THEN 4.894869923178419e-05 ELSE "ADS"."Feature_225" END AS impter_227, CASE WHEN ("ADS"."Feature_226" IS NULL) THEN 0.018209676154939517 ELSE "ADS"."Feature_226" END AS impter_228, CASE WHEN ("ADS"."Feature_227" IS NULL) THEN 0.026610576357411958 ELSE "ADS"."Feature_227" END AS impter_229, CASE WHEN ("ADS"."Feature_228" IS NULL) THEN -0.18927414463099612 ELSE "ADS"."Feature_228" END AS impter_230, CASE WHEN ("ADS"."Feature_229" IS NULL) THEN 0.7485324016005227 ELSE "ADS"."Feature_229" END AS impter_231, CASE WHEN ("ADS"."Feature_230" IS NULL) THEN 0.0487697431569858 ELSE "ADS"."Feature_230" END AS impter_232, CASE WHEN ("ADS"."Feature_231" IS NULL) THEN -0.05674203944761021 ELSE "ADS"."Feature_231" END AS impter_233, CASE WHEN ("ADS"."Feature_232" IS NULL) THEN -0.016772355037112788 ELSE "ADS"."Feature_232" END AS impter_234, CASE WHEN ("ADS"."Feature_233" IS NULL) THEN 0.021959192758732798 ELSE "ADS"."Feature_233" END AS impter_235, CASE WHEN ("ADS"."Feature_234" IS NULL) THEN 0.009017510252386856 ELSE "ADS"."Feature_234" END AS impter_236, CASE WHEN ("ADS"."Feature_235" IS NULL) THEN 0.01719604397851632 ELSE "ADS"."Feature_235" END AS impter_237, CASE WHEN ("ADS"."Feature_236" IS NULL) THEN 0.04752740880676183 ELSE "ADS"."Feature_236" END AS impter_238, CASE WHEN ("ADS"."Feature_237" IS NULL) THEN -0.6655794242164356 ELSE "ADS"."Feature_237" END AS impter_239, CASE WHEN ("ADS"."Feature_238" IS NULL) THEN 0.040740002170661385 ELSE "ADS"."Feature_238" END AS impter_240, CASE WHEN ("ADS"."Feature_239" IS NULL) THEN -0.06790575667026853 ELSE "ADS"."Feature_239" END AS impter_241, CASE WHEN ("ADS"."Feature_240" IS NULL) THEN 0.00892920073818756 ELSE "ADS"."Feature_240" END AS impter_242, CASE WHEN ("ADS"."Feature_241" IS NULL) THEN -0.05642200650387437 ELSE "ADS"."Feature_241" END AS impter_243, CASE WHEN ("ADS"."Feature_242" IS NULL) THEN 0.020080371219515784 ELSE "ADS"."Feature_242" END AS impter_244, CASE WHEN ("ADS"."Feature_243" IS NULL) THEN -0.08127236320512923 ELSE "ADS"."Feature_243" END AS impter_245, CASE WHEN ("ADS"."Feature_244" IS NULL) THEN 0.013048668554363934 ELSE "ADS"."Feature_244" END AS impter_246, CASE WHEN ("ADS"."Feature_245" IS NULL) THEN 0.018841776335809746 ELSE "ADS"."Feature_245" END AS impter_247, CASE WHEN ("ADS"."Feature_246" IS NULL) THEN -0.005693217051300183 ELSE "ADS"."Feature_246" END AS impter_248, CASE WHEN ("ADS"."Feature_247" IS NULL) THEN -0.20394320931579465 ELSE "ADS"."Feature_247" END AS impter_249, CASE WHEN ("ADS"."Feature_248" IS NULL) THEN -0.022446042990387664 ELSE "ADS"."Feature_248" END AS impter_250, CASE WHEN ("ADS"."Feature_249" IS NULL) THEN -4.076861252102798 ELSE "ADS"."Feature_249" END AS impter_251, CASE WHEN ("ADS"."Feature_250" IS NULL) THEN -0.008817990550602733 ELSE "ADS"."Feature_250" END AS impter_252, CASE WHEN ("ADS"."Feature_251" IS NULL) THEN 0.07233780023230166 ELSE "ADS"."Feature_251" END AS impter_253, CASE WHEN ("ADS"."Feature_252" IS NULL) THEN 0.1138593990290942 ELSE "ADS"."Feature_252" END AS impter_254, CASE WHEN ("ADS"."Feature_253" IS NULL) THEN -0.014123411384636636 ELSE "ADS"."Feature_253" END AS impter_255, CASE WHEN ("ADS"."Feature_254" IS NULL) THEN 0.014692128598930085 ELSE "ADS"."Feature_254" END AS impter_256, CASE WHEN ("ADS"."Feature_255" IS NULL) THEN 0.04595744723507997 ELSE "ADS"."Feature_255" END AS impter_257, CASE WHEN ("ADS"."Feature_256" IS NULL) THEN 0.015847884802623332 ELSE "ADS"."Feature_256" END AS impter_258, CASE WHEN ("ADS"."Feature_257" IS NULL) THEN 0.029322592909880204 ELSE "ADS"."Feature_257" END AS impter_259, CASE WHEN ("ADS"."Feature_258" IS NULL) THEN -0.03535258574843743 ELSE "ADS"."Feature_258" END AS impter_260, CASE WHEN ("ADS"."Feature_259" IS NULL) THEN -0.00650490190973122 ELSE "ADS"."Feature_259" END AS impter_261, CASE WHEN ("ADS"."Feature_260" IS NULL) THEN -0.03690470759934596 ELSE "ADS"."Feature_260" END AS impter_262, CASE WHEN ("ADS"."Feature_261" IS NULL) THEN -0.003181913166654664 ELSE "ADS"."Feature_261" END AS impter_263, CASE WHEN ("ADS"."Feature_262" IS NULL) THEN -0.0018035463835158838 ELSE "ADS"."Feature_262" END AS impter_264, CASE WHEN ("ADS"."Feature_263" IS NULL) THEN -0.004968061346310874 ELSE "ADS"."Feature_263" END AS impter_265, CASE WHEN ("ADS"."Feature_264" IS NULL) THEN -0.45419983150371857 ELSE "ADS"."Feature_264" END AS impter_266, CASE WHEN ("ADS"."Feature_265" IS NULL) THEN 0.033791499419119894 ELSE "ADS"."Feature_265" END AS impter_267, CASE WHEN ("ADS"."Feature_266" IS NULL) THEN -0.40319293830766156 ELSE "ADS"."Feature_266" END AS impter_268, CASE WHEN ("ADS"."Feature_267" IS NULL) THEN 0.6187460938207908 ELSE "ADS"."Feature_267" END AS impter_269, CASE WHEN ("ADS"."Feature_268" IS NULL) THEN 0.622898951615882 ELSE "ADS"."Feature_268" END AS impter_270, CASE WHEN ("ADS"."Feature_269" IS NULL) THEN -0.018232408103028765 ELSE "ADS"."Feature_269" END AS impter_271, CASE WHEN ("ADS"."Feature_270" IS NULL) THEN 0.01765800846800944 ELSE "ADS"."Feature_270" END AS impter_272, CASE WHEN ("ADS"."Feature_271" IS NULL) THEN -0.7754580279730494 ELSE "ADS"."Feature_271" END AS impter_273, CASE WHEN ("ADS"."Feature_272" IS NULL) THEN -0.008494942988361138 ELSE "ADS"."Feature_272" END AS impter_274, CASE WHEN ("ADS"."Feature_273" IS NULL) THEN 0.06500802952263218 ELSE "ADS"."Feature_273" END AS impter_275, CASE WHEN ("ADS"."Feature_274" IS NULL) THEN 0.004846639297532018 ELSE "ADS"."Feature_274" END AS impter_276, CASE WHEN ("ADS"."Feature_275" IS NULL) THEN 0.31959901606775876 ELSE "ADS"."Feature_275" END AS impter_277, CASE WHEN ("ADS"."Feature_276" IS NULL) THEN 0.06335285521269475 ELSE "ADS"."Feature_276" END AS impter_278, CASE WHEN ("ADS"."Feature_277" IS NULL) THEN 0.05639859786390925 ELSE "ADS"."Feature_277" END AS impter_279, CASE WHEN ("ADS"."Feature_278" IS NULL) THEN -0.016826126115809636 ELSE "ADS"."Feature_278" END AS impter_280, CASE WHEN ("ADS"."Feature_279" IS NULL) THEN -0.035868631202668005 ELSE "ADS"."Feature_279" END AS impter_281, CASE WHEN ("ADS"."Feature_280" IS NULL) THEN 0.5939567726507027 ELSE "ADS"."Feature_280" END AS impter_282, CASE WHEN ("ADS"."Feature_281" IS NULL) THEN -0.018499482983219337 ELSE "ADS"."Feature_281" END AS impter_283, CASE WHEN ("ADS"."Feature_282" IS NULL) THEN -0.002126060350638963 ELSE "ADS"."Feature_282" END AS impter_284, CASE WHEN ("ADS"."Feature_283" IS NULL) THEN 0.43749055924133856 ELSE "ADS"."Feature_283" END AS impter_285, CASE WHEN ("ADS"."Feature_284" IS NULL) THEN -0.002792990485326514 ELSE "ADS"."Feature_284" END AS impter_286, CASE WHEN ("ADS"."Feature_285" IS NULL) THEN 0.05111067471537181 ELSE "ADS"."Feature_285" END AS impter_287, CASE WHEN ("ADS"."Feature_286" IS NULL) THEN 0.01652404135719371 ELSE "ADS"."Feature_286" END AS impter_288, CASE WHEN ("ADS"."Feature_287" IS NULL) THEN 0.046881980038056 ELSE "ADS"."Feature_287" END AS impter_289, CASE WHEN ("ADS"."Feature_288" IS NULL) THEN -0.21093566587728044 ELSE "ADS"."Feature_288" END AS impter_290, CASE WHEN ("ADS"."Feature_289" IS NULL) THEN -0.38235732593808275 ELSE "ADS"."Feature_289" END AS impter_291, CASE WHEN ("ADS"."Feature_290" IS NULL) THEN 0.07184577295054764 ELSE "ADS"."Feature_290" END AS impter_292, CASE WHEN ("ADS"."Feature_291" IS NULL) THEN 0.04617448263239929 ELSE "ADS"."Feature_291" END AS impter_293, CASE WHEN ("ADS"."Feature_292" IS NULL) THEN -0.08558825454913567 ELSE "ADS"."Feature_292" END AS impter_294, CASE WHEN ("ADS"."Feature_293" IS NULL) THEN 0.03845417409897625 ELSE "ADS"."Feature_293" END AS impter_295, CASE WHEN ("ADS"."Feature_294" IS NULL) THEN 0.0010861389762425358 ELSE "ADS"."Feature_294" END AS impter_296, CASE WHEN ("ADS"."Feature_295" IS NULL) THEN 0.0013036543004699376 ELSE "ADS"."Feature_295" END AS impter_297, CASE WHEN ("ADS"."Feature_296" IS NULL) THEN -0.04572115009336087 ELSE "ADS"."Feature_296" END AS impter_298, CASE WHEN ("ADS"."Feature_297" IS NULL) THEN 0.109011335964655 ELSE "ADS"."Feature_297" END AS impter_299, CASE WHEN ("ADS"."Feature_298" IS NULL) THEN 0.059388745922670474 ELSE "ADS"."Feature_298" END AS impter_300, CASE WHEN ("ADS"."Feature_299" IS NULL) THEN 0.02796049502507793 ELSE "ADS"."Feature_299" END AS impter_301, CASE WHEN ("ADS"."Feature_300" IS NULL) THEN 0.06765588611224771 ELSE "ADS"."Feature_300" END AS impter_302, CASE WHEN ("ADS"."Feature_301" IS NULL) THEN 0.42516463145086364 ELSE "ADS"."Feature_301" END AS impter_303, CASE WHEN ("ADS"."Feature_302" IS NULL) THEN -0.025755583751806005 ELSE "ADS"."Feature_302" END AS impter_304, CASE WHEN ("ADS"."Feature_303" IS NULL) THEN 0.05983631292026072 ELSE "ADS"."Feature_303" END AS impter_305, CASE WHEN ("ADS"."Feature_304" IS NULL) THEN -0.022966826151323574 ELSE "ADS"."Feature_304" END AS impter_306, CASE WHEN ("ADS"."Feature_305" IS NULL) THEN -0.025059373911550786 ELSE "ADS"."Feature_305" END AS impter_307, CASE WHEN ("ADS"."Feature_306" IS NULL) THEN -0.07477780703395227 ELSE "ADS"."Feature_306" END AS impter_308, CASE WHEN ("ADS"."Feature_307" IS NULL) THEN 0.005214344538572354 ELSE "ADS"."Feature_307" END AS impter_309, CASE WHEN ("ADS"."Feature_308" IS NULL) THEN 0.15069860934029664 ELSE "ADS"."Feature_308" END AS impter_310, CASE WHEN ("ADS"."Feature_309" IS NULL) THEN 0.0920648545309688 ELSE "ADS"."Feature_309" END AS impter_311, CASE WHEN ("ADS"."Feature_310" IS NULL) THEN 0.02872039649838287 ELSE "ADS"."Feature_310" END AS impter_312, CASE WHEN ("ADS"."Feature_311" IS NULL) THEN 0.027206434346339497 ELSE "ADS"."Feature_311" END AS impter_313, CASE WHEN ("ADS"."Feature_312" IS NULL) THEN 0.006348743003703792 ELSE "ADS"."Feature_312" END AS impter_314, CASE WHEN ("ADS"."Feature_313" IS NULL) THEN -0.05402460092901892 ELSE "ADS"."Feature_313" END AS impter_315, CASE WHEN ("ADS"."Feature_314" IS NULL) THEN 0.027029051133963092 ELSE "ADS"."Feature_314" END AS impter_316, CASE WHEN ("ADS"."Feature_315" IS NULL) THEN -0.0064650471205589975 ELSE "ADS"."Feature_315" END AS impter_317, CASE WHEN ("ADS"."Feature_316" IS NULL) THEN -0.043335487666484804 ELSE "ADS"."Feature_316" END AS impter_318, CASE WHEN ("ADS"."Feature_317" IS NULL) THEN 0.04481518768554344 ELSE "ADS"."Feature_317" END AS impter_319, CASE WHEN ("ADS"."Feature_318" IS NULL) THEN 0.004584500412058787 ELSE "ADS"."Feature_318" END AS impter_320, CASE WHEN ("ADS"."Feature_319" IS NULL) THEN -0.001027021710811342 ELSE "ADS"."Feature_319" END AS impter_321, CASE WHEN ("ADS"."Feature_320" IS NULL) THEN -0.03706762371695285 ELSE "ADS"."Feature_320" END AS impter_322, CASE WHEN ("ADS"."Feature_321" IS NULL) THEN -0.01578014654880059 ELSE "ADS"."Feature_321" END AS impter_323, CASE WHEN ("ADS"."Feature_322" IS NULL) THEN -0.06476010801389685 ELSE "ADS"."Feature_322" END AS impter_324, CASE WHEN ("ADS"."Feature_323" IS NULL) THEN 0.013158594346038825 ELSE "ADS"."Feature_323" END AS impter_325, CASE WHEN ("ADS"."Feature_324" IS NULL) THEN -0.6909561374047029 ELSE "ADS"."Feature_324" END AS impter_326, CASE WHEN ("ADS"."Feature_325" IS NULL) THEN -0.032307395882269586 ELSE "ADS"."Feature_325" END AS impter_327, CASE WHEN ("ADS"."Feature_326" IS NULL) THEN 0.001871548534192734 ELSE "ADS"."Feature_326" END AS impter_328, CASE WHEN ("ADS"."Feature_327" IS NULL) THEN 0.009014081196377208 ELSE "ADS"."Feature_327" END AS impter_329, CASE WHEN ("ADS"."Feature_328" IS NULL) THEN 0.08432204289520576 ELSE "ADS"."Feature_328" END AS impter_330, CASE WHEN ("ADS"."Feature_329" IS NULL) THEN 0.03098818000424445 ELSE "ADS"."Feature_329" END AS impter_331, CASE WHEN ("ADS"."Feature_330" IS NULL) THEN 0.017842106547205465 ELSE "ADS"."Feature_330" END AS impter_332, CASE WHEN ("ADS"."Feature_331" IS NULL) THEN 0.009830954519062886 ELSE "ADS"."Feature_331" END AS impter_333, CASE WHEN ("ADS"."Feature_332" IS NULL) THEN 0.018857904928326345 ELSE "ADS"."Feature_332" END AS impter_334, CASE WHEN ("ADS"."Feature_333" IS NULL) THEN -0.09041919658309759 ELSE "ADS"."Feature_333" END AS impter_335, CASE WHEN ("ADS"."Feature_334" IS NULL) THEN -0.0030938413689644926 ELSE "ADS"."Feature_334" END AS impter_336, CASE WHEN ("ADS"."Feature_335" IS NULL) THEN 0.06013463236860367 ELSE "ADS"."Feature_335" END AS impter_337, CASE WHEN ("ADS"."Feature_336" IS NULL) THEN -0.006783134159713595 ELSE "ADS"."Feature_336" END AS impter_338, CASE WHEN ("ADS"."Feature_337" IS NULL) THEN -0.022505432033342578 ELSE "ADS"."Feature_337" END AS impter_339, CASE WHEN ("ADS"."Feature_338" IS NULL) THEN 0.012902527459674764 ELSE "ADS"."Feature_338" END AS impter_340, CASE WHEN ("ADS"."Feature_339" IS NULL) THEN -0.03249915020429405 ELSE "ADS"."Feature_339" END AS impter_341, CASE WHEN ("ADS"."Feature_340" IS NULL) THEN -0.03379268322494926 ELSE "ADS"."Feature_340" END AS impter_342, CASE WHEN ("ADS"."Feature_341" IS NULL) THEN 0.006926122620280751 ELSE "ADS"."Feature_341" END AS impter_343, CASE WHEN ("ADS"."Feature_342" IS NULL) THEN -0.03319669654598365 ELSE "ADS"."Feature_342" END AS impter_344, CASE WHEN ("ADS"."Feature_343" IS NULL) THEN 2.7390190345202456 ELSE "ADS"."Feature_343" END AS impter_345, CASE WHEN ("ADS"."Feature_344" IS NULL) THEN -0.0075319633963496155 ELSE "ADS"."Feature_344" END AS impter_346, CASE WHEN ("ADS"."Feature_345" IS NULL) THEN 0.022124363701982737 ELSE "ADS"."Feature_345" END AS impter_347, CASE WHEN ("ADS"."Feature_346" IS NULL) THEN -0.023653773851870237 ELSE "ADS"."Feature_346" END AS impter_348, CASE WHEN ("ADS"."Feature_347" IS NULL) THEN -0.01620635032677563 ELSE "ADS"."Feature_347" END AS impter_349, CASE WHEN ("ADS"."Feature_348" IS NULL) THEN -0.021142104441251273 ELSE "ADS"."Feature_348" END AS impter_350, CASE WHEN ("ADS"."Feature_349" IS NULL) THEN -0.06890676984297263 ELSE "ADS"."Feature_349" END AS impter_351, CASE WHEN ("ADS"."Feature_350" IS NULL) THEN 0.006174673936264955 ELSE "ADS"."Feature_350" END AS impter_352, CASE WHEN ("ADS"."Feature_351" IS NULL) THEN -0.018480727521201546 ELSE "ADS"."Feature_351" END AS impter_353, CASE WHEN ("ADS"."Feature_352" IS NULL) THEN 0.01892387185297041 ELSE "ADS"."Feature_352" END AS impter_354, CASE WHEN ("ADS"."Feature_353" IS NULL) THEN 0.02727917887836492 ELSE "ADS"."Feature_353" END AS impter_355, CASE WHEN ("ADS"."Feature_354" IS NULL) THEN -0.012823623960695998 ELSE "ADS"."Feature_354" END AS impter_356, CASE WHEN ("ADS"."Feature_355" IS NULL) THEN -0.013271487823414667 ELSE "ADS"."Feature_355" END AS impter_357, CASE WHEN ("ADS"."Feature_356" IS NULL) THEN -0.03395939012664646 ELSE "ADS"."Feature_356" END AS impter_358, CASE WHEN ("ADS"."Feature_357" IS NULL) THEN 0.03223004938335937 ELSE "ADS"."Feature_357" END AS impter_359, CASE WHEN ("ADS"."Feature_358" IS NULL) THEN -0.0016017230909337308 ELSE "ADS"."Feature_358" END AS impter_360, CASE WHEN ("ADS"."Feature_359" IS NULL) THEN -0.03321899170282454 ELSE "ADS"."Feature_359" END AS impter_361, CASE WHEN ("ADS"."Feature_360" IS NULL) THEN -0.0016618588765567152 ELSE "ADS"."Feature_360" END AS impter_362, CASE WHEN ("ADS"."Feature_361" IS NULL) THEN 0.04573989570209914 ELSE "ADS"."Feature_361" END AS impter_363, CASE WHEN ("ADS"."Feature_362" IS NULL) THEN -0.021293175937165 ELSE "ADS"."Feature_362" END AS impter_364, CASE WHEN ("ADS"."Feature_363" IS NULL) THEN -0.011255144611449622 ELSE "ADS"."Feature_363" END AS impter_365, CASE WHEN ("ADS"."Feature_364" IS NULL) THEN -0.02563865782710232 ELSE "ADS"."Feature_364" END AS impter_366, CASE WHEN ("ADS"."Feature_365" IS NULL) THEN -0.015167083011311294 ELSE "ADS"."Feature_365" END AS impter_367, CASE WHEN ("ADS"."Feature_366" IS NULL) THEN 0.0010959755571049432 ELSE "ADS"."Feature_366" END AS impter_368, CASE WHEN ("ADS"."Feature_367" IS NULL) THEN 0.25830160330800345 ELSE "ADS"."Feature_367" END AS impter_369, CASE WHEN ("ADS"."Feature_368" IS NULL) THEN -0.02512420755881165 ELSE "ADS"."Feature_368" END AS impter_370, CASE WHEN ("ADS"."Feature_369" IS NULL) THEN -0.5588992061400131 ELSE "ADS"."Feature_369" END AS impter_371, CASE WHEN ("ADS"."Feature_370" IS NULL) THEN 0.04500746078257995 ELSE "ADS"."Feature_370" END AS impter_372, CASE WHEN ("ADS"."Feature_371" IS NULL) THEN -0.03582268471853405 ELSE "ADS"."Feature_371" END AS impter_373, CASE WHEN ("ADS"."Feature_372" IS NULL) THEN -0.0238194811504848 ELSE "ADS"."Feature_372" END AS impter_374, CASE WHEN ("ADS"."Feature_373" IS NULL) THEN 0.00870068158455398 ELSE "ADS"."Feature_373" END AS impter_375, CASE WHEN ("ADS"."Feature_374" IS NULL) THEN 0.41206876337723863 ELSE "ADS"."Feature_374" END AS impter_376, CASE WHEN ("ADS"."Feature_375" IS NULL) THEN -0.00883623214870824 ELSE "ADS"."Feature_375" END AS impter_377, CASE WHEN ("ADS"."Feature_376" IS NULL) THEN -0.047673712853857325 ELSE "ADS"."Feature_376" END AS impter_378, CASE WHEN ("ADS"."Feature_377" IS NULL) THEN 0.39808785261614416 ELSE "ADS"."Feature_377" END AS impter_379, CASE WHEN ("ADS"."Feature_378" IS NULL) THEN 0.014874268925561847 ELSE "ADS"."Feature_378" END AS impter_380, CASE WHEN ("ADS"."Feature_379" IS NULL) THEN -0.01355994466429737 ELSE "ADS"."Feature_379" END AS impter_381, CASE WHEN ("ADS"."Feature_380" IS NULL) THEN 0.06549584301442803 ELSE "ADS"."Feature_380" END AS impter_382, CASE WHEN ("ADS"."Feature_381" IS NULL) THEN -0.07523712848824068 ELSE "ADS"."Feature_381" END AS impter_383, CASE WHEN ("ADS"."Feature_382" IS NULL) THEN -0.020246425764404403 ELSE "ADS"."Feature_382" END AS impter_384, CASE WHEN ("ADS"."Feature_383" IS NULL) THEN -0.06505456712739689 ELSE "ADS"."Feature_383" END AS impter_385, CASE WHEN ("ADS"."Feature_384" IS NULL) THEN 0.040682923885247455 ELSE "ADS"."Feature_384" END AS impter_386, CASE WHEN ("ADS"."Feature_385" IS NULL) THEN 0.5036509170142887 ELSE "ADS"."Feature_385" END AS impter_387, CASE WHEN ("ADS"."Feature_386" IS NULL) THEN -0.01984269915156025 ELSE "ADS"."Feature_386" END AS impter_388, CASE WHEN ("ADS"."Feature_387" IS NULL) THEN -0.029975294309893395 ELSE "ADS"."Feature_387" END AS impter_389, CASE WHEN ("ADS"."Feature_388" IS NULL) THEN -0.023935150902407186 ELSE "ADS"."Feature_388" END AS impter_390, CASE WHEN ("ADS"."Feature_389" IS NULL) THEN 0.003487379328156493 ELSE "ADS"."Feature_389" END AS impter_391, CASE WHEN ("ADS"."Feature_390" IS NULL) THEN -0.006836589678473769 ELSE "ADS"."Feature_390" END AS impter_392, CASE WHEN ("ADS"."Feature_391" IS NULL) THEN -0.023001043810177268 ELSE "ADS"."Feature_391" END AS impter_393, CASE WHEN ("ADS"."Feature_392" IS NULL) THEN 0.026433076987905132 ELSE "ADS"."Feature_392" END AS impter_394, CASE WHEN ("ADS"."Feature_393" IS NULL) THEN 0.03869392603237684 ELSE "ADS"."Feature_393" END AS impter_395, CASE WHEN ("ADS"."Feature_394" IS NULL) THEN 0.007166160812626991 ELSE "ADS"."Feature_394" END AS impter_396, CASE WHEN ("ADS"."Feature_395" IS NULL) THEN -0.31652297140011876 ELSE "ADS"."Feature_395" END AS impter_397, CASE WHEN ("ADS"."Feature_396" IS NULL) THEN 0.352192927636602 ELSE "ADS"."Feature_396" END AS impter_398, CASE WHEN ("ADS"."Feature_397" IS NULL) THEN 0.2418343422011388 ELSE "ADS"."Feature_397" END AS impter_399, CASE WHEN ("ADS"."Feature_398" IS NULL) THEN 0.23681058627355728 ELSE "ADS"."Feature_398" END AS impter_400, CASE WHEN ("ADS"."Feature_399" IS NULL) THEN -0.011935061221661204 ELSE "ADS"."Feature_399" END AS impter_401, CASE WHEN ("ADS"."Feature_400" IS NULL) THEN -0.23225071389385885 ELSE "ADS"."Feature_400" END AS impter_402, CASE WHEN ("ADS"."Feature_401" IS NULL) THEN 0.027478547688853303 ELSE "ADS"."Feature_401" END AS impter_403, CASE WHEN ("ADS"."Feature_402" IS NULL) THEN -0.2835956440898274 ELSE "ADS"."Feature_402" END AS impter_404, CASE WHEN ("ADS"."Feature_403" IS NULL) THEN -0.026966778578135772 ELSE "ADS"."Feature_403" END AS impter_405, CASE WHEN ("ADS"."Feature_404" IS NULL) THEN -0.004329268838175945 ELSE "ADS"."Feature_404" END AS impter_406, CASE WHEN ("ADS"."Feature_405" IS NULL) THEN 0.0774540554940731 ELSE "ADS"."Feature_405" END AS impter_407, CASE WHEN ("ADS"."Feature_406" IS NULL) THEN -0.6052203464446785 ELSE "ADS"."Feature_406" END AS impter_408, CASE WHEN ("ADS"."Feature_407" IS NULL) THEN 0.0338701304693192 ELSE "ADS"."Feature_407" END AS impter_409, CASE WHEN ("ADS"."Feature_408" IS NULL) THEN -0.05044305753803302 ELSE "ADS"."Feature_408" END AS impter_410, CASE WHEN ("ADS"."Feature_409" IS NULL) THEN 0.008805453357057883 ELSE "ADS"."Feature_409" END AS impter_411, CASE WHEN ("ADS"."Feature_410" IS NULL) THEN -0.05374724915468808 ELSE "ADS"."Feature_410" END AS impter_412, CASE WHEN ("ADS"."Feature_411" IS NULL) THEN -0.004957359515296269 ELSE "ADS"."Feature_411" END AS impter_413, CASE WHEN ("ADS"."Feature_412" IS NULL) THEN 0.12039061456156476 ELSE "ADS"."Feature_412" END AS impter_414, CASE WHEN ("ADS"."Feature_413" IS NULL) THEN -0.005732424778663252 ELSE "ADS"."Feature_413" END AS impter_415, CASE WHEN ("ADS"."Feature_414" IS NULL) THEN -0.4286478678045208 ELSE "ADS"."Feature_414" END AS impter_416, CASE WHEN ("ADS"."Feature_415" IS NULL) THEN -0.028516293632594378 ELSE "ADS"."Feature_415" END AS impter_417, CASE WHEN ("ADS"."Feature_416" IS NULL) THEN 0.052380333284906204 ELSE "ADS"."Feature_416" END AS impter_418, CASE WHEN ("ADS"."Feature_417" IS NULL) THEN -0.028497248319907256 ELSE "ADS"."Feature_417" END AS impter_419, CASE WHEN ("ADS"."Feature_418" IS NULL) THEN -0.012190751471044496 ELSE "ADS"."Feature_418" END AS impter_420, CASE WHEN ("ADS"."Feature_419" IS NULL) THEN 0.014464401907681581 ELSE "ADS"."Feature_419" END AS impter_421, CASE WHEN ("ADS"."Feature_420" IS NULL) THEN -0.17428872440122373 ELSE "ADS"."Feature_420" END AS impter_422, CASE WHEN ("ADS"."Feature_421" IS NULL) THEN -0.01773365620191358 ELSE "ADS"."Feature_421" END AS impter_423, CASE WHEN ("ADS"."Feature_422" IS NULL) THEN 0.40558807090091853 ELSE "ADS"."Feature_422" END AS impter_424, CASE WHEN ("ADS"."Feature_423" IS NULL) THEN -0.0009022771635855167 ELSE "ADS"."Feature_423" END AS impter_425, CASE WHEN ("ADS"."Feature_424" IS NULL) THEN 0.05739992787057724 ELSE "ADS"."Feature_424" END AS impter_426, CASE WHEN ("ADS"."Feature_425" IS NULL) THEN 0.04850780446682892 ELSE "ADS"."Feature_425" END AS impter_427, CASE WHEN ("ADS"."Feature_426" IS NULL) THEN 0.04555082643401923 ELSE "ADS"."Feature_426" END AS impter_428, CASE WHEN ("ADS"."Feature_427" IS NULL) THEN -0.013088017894457874 ELSE "ADS"."Feature_427" END AS impter_429, CASE WHEN ("ADS"."Feature_428" IS NULL) THEN 0.7622987596243614 ELSE "ADS"."Feature_428" END AS impter_430, CASE WHEN ("ADS"."Feature_429" IS NULL) THEN 0.06277381315317203 ELSE "ADS"."Feature_429" END AS impter_431, CASE WHEN ("ADS"."Feature_430" IS NULL) THEN -0.00595076348043327 ELSE "ADS"."Feature_430" END AS impter_432, CASE WHEN ("ADS"."Feature_431" IS NULL) THEN -0.019782980673704004 ELSE "ADS"."Feature_431" END AS impter_433, CASE WHEN ("ADS"."Feature_432" IS NULL) THEN 0.03813782436434927 ELSE "ADS"."Feature_432" END AS impter_434, CASE WHEN ("ADS"."Feature_433" IS NULL) THEN -0.03361997654906546 ELSE "ADS"."Feature_433" END AS impter_435, CASE WHEN ("ADS"."Feature_434" IS NULL) THEN -0.015449063685126078 ELSE "ADS"."Feature_434" END AS impter_436, CASE WHEN ("ADS"."Feature_435" IS NULL) THEN -0.05083199732740015 ELSE "ADS"."Feature_435" END AS impter_437, CASE WHEN ("ADS"."Feature_436" IS NULL) THEN 0.12294390238132996 ELSE "ADS"."Feature_436" END AS impter_438, CASE WHEN ("ADS"."Feature_437" IS NULL) THEN 0.008273480374725027 ELSE "ADS"."Feature_437" END AS impter_439, CASE WHEN ("ADS"."Feature_438" IS NULL) THEN 0.04577021563207708 ELSE "ADS"."Feature_438" END AS impter_440, CASE WHEN ("ADS"."Feature_439" IS NULL) THEN -0.004739394213399075 ELSE "ADS"."Feature_439" END AS impter_441, CASE WHEN ("ADS"."Feature_440" IS NULL) THEN -0.025074465350024163 ELSE "ADS"."Feature_440" END AS impter_442, CASE WHEN ("ADS"."Feature_441" IS NULL) THEN 0.050774082486299194 ELSE "ADS"."Feature_441" END AS impter_443, CASE WHEN ("ADS"."Feature_442" IS NULL) THEN -0.0967069255496831 ELSE "ADS"."Feature_442" END AS impter_444, CASE WHEN ("ADS"."Feature_443" IS NULL) THEN -0.007206652069868864 ELSE "ADS"."Feature_443" END AS impter_445, CASE WHEN ("ADS"."Feature_444" IS NULL) THEN 0.03506859491861105 ELSE "ADS"."Feature_444" END AS impter_446, CASE WHEN ("ADS"."Feature_445" IS NULL) THEN -0.00905435452775923 ELSE "ADS"."Feature_445" END AS impter_447, CASE WHEN ("ADS"."Feature_446" IS NULL) THEN -0.012006634151227604 ELSE "ADS"."Feature_446" END AS impter_448, CASE WHEN ("ADS"."Feature_447" IS NULL) THEN 0.03145627491797305 ELSE "ADS"."Feature_447" END AS impter_449, CASE WHEN ("ADS"."Feature_448" IS NULL) THEN 0.02517699513431471 ELSE "ADS"."Feature_448" END AS impter_450, CASE WHEN ("ADS"."Feature_449" IS NULL) THEN 0.005640015529596338 ELSE "ADS"."Feature_449" END AS impter_451, CASE WHEN ("ADS"."Feature_450" IS NULL) THEN -0.010608619203966895 ELSE "ADS"."Feature_450" END AS impter_452, CASE WHEN ("ADS"."Feature_451" IS NULL) THEN -0.062079998204146586 ELSE "ADS"."Feature_451" END AS impter_453, CASE WHEN ("ADS"."Feature_452" IS NULL) THEN -0.0876770647950911 ELSE "ADS"."Feature_452" END AS impter_454, CASE WHEN ("ADS"."Feature_453" IS NULL) THEN 0.012143657983602962 ELSE "ADS"."Feature_453" END AS impter_455, CASE WHEN ("ADS"."Feature_454" IS NULL) THEN 0.03448739220055286 ELSE "ADS"."Feature_454" END AS impter_456, CASE WHEN ("ADS"."Feature_455" IS NULL) THEN 0.006839876969520017 ELSE "ADS"."Feature_455" END AS impter_457, CASE WHEN ("ADS"."Feature_456" IS NULL) THEN -0.1589087203718216 ELSE "ADS"."Feature_456" END AS impter_458, CASE WHEN ("ADS"."Feature_457" IS NULL) THEN 0.45343491151894105 ELSE "ADS"."Feature_457" END AS impter_459, CASE WHEN ("ADS"."Feature_458" IS NULL) THEN -0.007482014986002762 ELSE "ADS"."Feature_458" END AS impter_460, CASE WHEN ("ADS"."Feature_459" IS NULL) THEN -0.0538045349045037 ELSE "ADS"."Feature_459" END AS impter_461, CASE WHEN ("ADS"."Feature_460" IS NULL) THEN 0.006517329526108785 ELSE "ADS"."Feature_460" END AS impter_462, CASE WHEN ("ADS"."Feature_461" IS NULL) THEN -0.3201406707449883 ELSE "ADS"."Feature_461" END AS impter_463, CASE WHEN ("ADS"."Feature_462" IS NULL) THEN 0.03164463472773337 ELSE "ADS"."Feature_462" END AS impter_464, CASE WHEN ("ADS"."Feature_463" IS NULL) THEN -0.031827670383012555 ELSE "ADS"."Feature_463" END AS impter_465, CASE WHEN ("ADS"."Feature_464" IS NULL) THEN -0.02220263625319023 ELSE "ADS"."Feature_464" END AS impter_466, CASE WHEN ("ADS"."Feature_465" IS NULL) THEN 0.04918588699743021 ELSE "ADS"."Feature_465" END AS impter_467, CASE WHEN ("ADS"."Feature_466" IS NULL) THEN 0.013873407999629129 ELSE "ADS"."Feature_466" END AS impter_468, CASE WHEN ("ADS"."Feature_467" IS NULL) THEN -0.054844779309353775 ELSE "ADS"."Feature_467" END AS impter_469, CASE WHEN ("ADS"."Feature_468" IS NULL) THEN 0.05947169339023267 ELSE "ADS"."Feature_468" END AS impter_470, CASE WHEN ("ADS"."Feature_469" IS NULL) THEN -0.007061332655546885 ELSE "ADS"."Feature_469" END AS impter_471, CASE WHEN ("ADS"."Feature_470" IS NULL) THEN 0.0009227758698022626 ELSE "ADS"."Feature_470" END AS impter_472, CASE WHEN ("ADS"."Feature_471" IS NULL) THEN -0.014955268248566689 ELSE "ADS"."Feature_471" END AS impter_473, CASE WHEN ("ADS"."Feature_472" IS NULL) THEN -0.00997364389328803 ELSE "ADS"."Feature_472" END AS impter_474, CASE WHEN ("ADS"."Feature_473" IS NULL) THEN 0.044011886118274696 ELSE "ADS"."Feature_473" END AS impter_475, CASE WHEN ("ADS"."Feature_474" IS NULL) THEN 0.03204255595840591 ELSE "ADS"."Feature_474" END AS impter_476, CASE WHEN ("ADS"."Feature_475" IS NULL) THEN -0.028511291715894678 ELSE "ADS"."Feature_475" END AS impter_477, CASE WHEN ("ADS"."Feature_476" IS NULL) THEN 0.05235198939025461 ELSE "ADS"."Feature_476" END AS impter_478, CASE WHEN ("ADS"."Feature_477" IS NULL) THEN 0.4442463067830223 ELSE "ADS"."Feature_477" END AS impter_479, CASE WHEN ("ADS"."Feature_478" IS NULL) THEN -0.0421220588184719 ELSE "ADS"."Feature_478" END AS impter_480, CASE WHEN ("ADS"."Feature_479" IS NULL) THEN -0.06375683381469409 ELSE "ADS"."Feature_479" END AS impter_481, CASE WHEN ("ADS"."Feature_480" IS NULL) THEN 0.09016412133268503 ELSE "ADS"."Feature_480" END AS impter_482, CASE WHEN ("ADS"."Feature_481" IS NULL) THEN -0.021181166332863134 ELSE "ADS"."Feature_481" END AS impter_483, CASE WHEN ("ADS"."Feature_482" IS NULL) THEN 0.015134427562764584 ELSE "ADS"."Feature_482" END AS impter_484, CASE WHEN ("ADS"."Feature_483" IS NULL) THEN 0.1458909634165245 ELSE "ADS"."Feature_483" END AS impter_485, CASE WHEN ("ADS"."Feature_484" IS NULL) THEN -0.0964936751824616 ELSE "ADS"."Feature_484" END AS impter_486, CASE WHEN ("ADS"."Feature_485" IS NULL) THEN -0.0007661343328348244 ELSE "ADS"."Feature_485" END AS impter_487, CASE WHEN ("ADS"."Feature_486" IS NULL) THEN 0.007424472006137845 ELSE "ADS"."Feature_486" END AS impter_488, CASE WHEN ("ADS"."Feature_487" IS NULL) THEN 0.007776565305072426 ELSE "ADS"."Feature_487" END AS impter_489, CASE WHEN ("ADS"."Feature_488" IS NULL) THEN -0.02972669445658546 ELSE "ADS"."Feature_488" END AS impter_490, CASE WHEN ("ADS"."Feature_489" IS NULL) THEN -0.020022098906708034 ELSE "ADS"."Feature_489" END AS impter_491, CASE WHEN ("ADS"."Feature_490" IS NULL) THEN -0.03689120776576418 ELSE "ADS"."Feature_490" END AS impter_492, CASE WHEN ("ADS"."Feature_491" IS NULL) THEN 0.02342654499679442 ELSE "ADS"."Feature_491" END AS impter_493, CASE WHEN ("ADS"."Feature_492" IS NULL) THEN 0.06047072800386204 ELSE "ADS"."Feature_492" END AS impter_494, CASE WHEN ("ADS"."Feature_493" IS NULL) THEN 0.02457996835763847 ELSE "ADS"."Feature_493" END AS impter_495, CASE WHEN ("ADS"."Feature_494" IS NULL) THEN -0.0053128065642532255 ELSE "ADS"."Feature_494" END AS impter_496, CASE WHEN ("ADS"."Feature_495" IS NULL) THEN -0.050025880514262516 ELSE "ADS"."Feature_495" END AS impter_497, CASE WHEN ("ADS"."Feature_496" IS NULL) THEN -0.055008136401580685 ELSE "ADS"."Feature_496" END AS impter_498, CASE WHEN ("ADS"."Feature_497" IS NULL) THEN -0.46514935213874503 ELSE "ADS"."Feature_497" END AS impter_499, CASE WHEN ("ADS"."Feature_498" IS NULL) THEN -0.037847190400891 ELSE "ADS"."Feature_498" END AS impter_500, CASE WHEN ("ADS"."Feature_499" IS NULL) THEN 0.028703608331041793 ELSE "ADS"."Feature_499" END AS impter_501 
FROM "FOURCLASS_500" "ADS") "ADS_imp_1_OUT") "U"
-- Code For temporary table 33322_J2367X_ADS_SCA_2_OUT part 1/2. Create 


CREATE GLOBAL TEMPORARY TABLE "33322_J2367X_ADS_SCA_2_OUT" (
	"KEY" NUMBER(19), 
	scaler_2 BINARY_DOUBLE, 
	scaler_3 BINARY_DOUBLE, 
	scaler_4 BINARY_DOUBLE, 
	scaler_5 BINARY_DOUBLE, 
	scaler_6 BINARY_DOUBLE, 
	scaler_7 BINARY_DOUBLE, 
	scaler_8 BINARY_DOUBLE, 
	scaler_9 BINARY_DOUBLE, 
	scaler_10 BINARY_DOUBLE, 
	scaler_11 BINARY_DOUBLE, 
	scaler_12 BINARY_DOUBLE, 
	scaler_13 BINARY_DOUBLE, 
	scaler_14 BINARY_DOUBLE, 
	scaler_15 BINARY_DOUBLE, 
	scaler_16 BINARY_DOUBLE, 
	scaler_17 BINARY_DOUBLE, 
	scaler_18 BINARY_DOUBLE, 
	scaler_19 BINARY_DOUBLE, 
	scaler_20 BINARY_DOUBLE, 
	scaler_21 BINARY_DOUBLE, 
	scaler_22 BINARY_DOUBLE, 
	scaler_23 BINARY_DOUBLE, 
	scaler_24 BINARY_DOUBLE, 
	scaler_25 BINARY_DOUBLE, 
	scaler_26 BINARY_DOUBLE, 
	scaler_27 BINARY_DOUBLE, 
	scaler_28 BINARY_DOUBLE, 
	scaler_29 BINARY_DOUBLE, 
	scaler_30 BINARY_DOUBLE, 
	scaler_31 BINARY_DOUBLE, 
	scaler_32 BINARY_DOUBLE, 
	scaler_33 BINARY_DOUBLE, 
	scaler_34 BINARY_DOUBLE, 
	scaler_35 BINARY_DOUBLE, 
	scaler_36 BINARY_DOUBLE, 
	scaler_37 BINARY_DOUBLE, 
	scaler_38 BINARY_DOUBLE, 
	scaler_39 BINARY_DOUBLE, 
	scaler_40 BINARY_DOUBLE, 
	scaler_41 BINARY_DOUBLE, 
	scaler_42 BINARY_DOUBLE, 
	scaler_43 BINARY_DOUBLE, 
	scaler_44 BINARY_DOUBLE, 
	scaler_45 BINARY_DOUBLE, 
	scaler_46 BINARY_DOUBLE, 
	scaler_47 BINARY_DOUBLE, 
	scaler_48 BINARY_DOUBLE, 
	scaler_49 BINARY_DOUBLE, 
	scaler_50 BINARY_DOUBLE, 
	scaler_51 BINARY_DOUBLE, 
	scaler_52 BINARY_DOUBLE, 
	scaler_53 BINARY_DOUBLE, 
	scaler_54 BINARY_DOUBLE, 
	scaler_55 BINARY_DOUBLE, 
	scaler_56 BINARY_DOUBLE, 
	scaler_57 BINARY_DOUBLE, 
	scaler_58 BINARY_DOUBLE, 
	scaler_59 BINARY_DOUBLE, 
	scaler_60 BINARY_DOUBLE, 
	scaler_61 BINARY_DOUBLE, 
	scaler_62 BINARY_DOUBLE, 
	scaler_63 BINARY_DOUBLE, 
	scaler_64 BINARY_DOUBLE, 
	scaler_65 BINARY_DOUBLE, 
	scaler_66 BINARY_DOUBLE, 
	scaler_67 BINARY_DOUBLE, 
	scaler_68 BINARY_DOUBLE, 
	scaler_69 BINARY_DOUBLE, 
	scaler_70 BINARY_DOUBLE, 
	scaler_71 BINARY_DOUBLE, 
	scaler_72 BINARY_DOUBLE, 
	scaler_73 BINARY_DOUBLE, 
	scaler_74 BINARY_DOUBLE, 
	scaler_75 BINARY_DOUBLE, 
	scaler_76 BINARY_DOUBLE, 
	scaler_77 BINARY_DOUBLE, 
	scaler_78 BINARY_DOUBLE, 
	scaler_79 BINARY_DOUBLE, 
	scaler_80 BINARY_DOUBLE, 
	scaler_81 BINARY_DOUBLE, 
	scaler_82 BINARY_DOUBLE, 
	scaler_83 BINARY_DOUBLE, 
	scaler_84 BINARY_DOUBLE, 
	scaler_85 BINARY_DOUBLE, 
	scaler_86 BINARY_DOUBLE, 
	scaler_87 BINARY_DOUBLE, 
	scaler_88 BINARY_DOUBLE, 
	scaler_89 BINARY_DOUBLE, 
	scaler_90 BINARY_DOUBLE, 
	scaler_91 BINARY_DOUBLE, 
	scaler_92 BINARY_DOUBLE, 
	scaler_93 BINARY_DOUBLE, 
	scaler_94 BINARY_DOUBLE, 
	scaler_95 BINARY_DOUBLE, 
	scaler_96 BINARY_DOUBLE, 
	scaler_97 BINARY_DOUBLE, 
	scaler_98 BINARY_DOUBLE, 
	scaler_99 BINARY_DOUBLE, 
	scaler_100 BINARY_DOUBLE, 
	scaler_101 BINARY_DOUBLE, 
	scaler_102 BINARY_DOUBLE, 
	scaler_103 BINARY_DOUBLE, 
	scaler_104 BINARY_DOUBLE, 
	scaler_105 BINARY_DOUBLE, 
	scaler_106 BINARY_DOUBLE, 
	scaler_107 BINARY_DOUBLE, 
	scaler_108 BINARY_DOUBLE, 
	scaler_109 BINARY_DOUBLE, 
	scaler_110 BINARY_DOUBLE, 
	scaler_111 BINARY_DOUBLE, 
	scaler_112 BINARY_DOUBLE, 
	scaler_113 BINARY_DOUBLE, 
	scaler_114 BINARY_DOUBLE, 
	scaler_115 BINARY_DOUBLE, 
	scaler_116 BINARY_DOUBLE, 
	scaler_117 BINARY_DOUBLE, 
	scaler_118 BINARY_DOUBLE, 
	scaler_119 BINARY_DOUBLE, 
	scaler_120 BINARY_DOUBLE, 
	scaler_121 BINARY_DOUBLE, 
	scaler_122 BINARY_DOUBLE, 
	scaler_123 BINARY_DOUBLE, 
	scaler_124 BINARY_DOUBLE, 
	scaler_125 BINARY_DOUBLE, 
	scaler_126 BINARY_DOUBLE, 
	scaler_127 BINARY_DOUBLE, 
	scaler_128 BINARY_DOUBLE, 
	scaler_129 BINARY_DOUBLE, 
	scaler_130 BINARY_DOUBLE, 
	scaler_131 BINARY_DOUBLE, 
	scaler_132 BINARY_DOUBLE, 
	scaler_133 BINARY_DOUBLE, 
	scaler_134 BINARY_DOUBLE, 
	scaler_135 BINARY_DOUBLE, 
	scaler_136 BINARY_DOUBLE, 
	scaler_137 BINARY_DOUBLE, 
	scaler_138 BINARY_DOUBLE, 
	scaler_139 BINARY_DOUBLE, 
	scaler_140 BINARY_DOUBLE, 
	scaler_141 BINARY_DOUBLE, 
	scaler_142 BINARY_DOUBLE, 
	scaler_143 BINARY_DOUBLE, 
	scaler_144 BINARY_DOUBLE, 
	scaler_145 BINARY_DOUBLE, 
	scaler_146 BINARY_DOUBLE, 
	scaler_147 BINARY_DOUBLE, 
	scaler_148 BINARY_DOUBLE, 
	scaler_149 BINARY_DOUBLE, 
	scaler_150 BINARY_DOUBLE, 
	scaler_151 BINARY_DOUBLE, 
	scaler_152 BINARY_DOUBLE, 
	scaler_153 BINARY_DOUBLE, 
	scaler_154 BINARY_DOUBLE, 
	scaler_155 BINARY_DOUBLE, 
	scaler_156 BINARY_DOUBLE, 
	scaler_157 BINARY_DOUBLE, 
	scaler_158 BINARY_DOUBLE, 
	scaler_159 BINARY_DOUBLE, 
	scaler_160 BINARY_DOUBLE, 
	scaler_161 BINARY_DOUBLE, 
	scaler_162 BINARY_DOUBLE, 
	scaler_163 BINARY_DOUBLE, 
	scaler_164 BINARY_DOUBLE, 
	scaler_165 BINARY_DOUBLE, 
	scaler_166 BINARY_DOUBLE, 
	scaler_167 BINARY_DOUBLE, 
	scaler_168 BINARY_DOUBLE, 
	scaler_169 BINARY_DOUBLE, 
	scaler_170 BINARY_DOUBLE, 
	scaler_171 BINARY_DOUBLE, 
	scaler_172 BINARY_DOUBLE, 
	scaler_173 BINARY_DOUBLE, 
	scaler_174 BINARY_DOUBLE, 
	scaler_175 BINARY_DOUBLE, 
	scaler_176 BINARY_DOUBLE, 
	scaler_177 BINARY_DOUBLE, 
	scaler_178 BINARY_DOUBLE, 
	scaler_179 BINARY_DOUBLE, 
	scaler_180 BINARY_DOUBLE, 
	scaler_181 BINARY_DOUBLE, 
	scaler_182 BINARY_DOUBLE, 
	scaler_183 BINARY_DOUBLE, 
	scaler_184 BINARY_DOUBLE, 
	scaler_185 BINARY_DOUBLE, 
	scaler_186 BINARY_DOUBLE, 
	scaler_187 BINARY_DOUBLE, 
	scaler_188 BINARY_DOUBLE, 
	scaler_189 BINARY_DOUBLE, 
	scaler_190 BINARY_DOUBLE, 
	scaler_191 BINARY_DOUBLE, 
	scaler_192 BINARY_DOUBLE, 
	scaler_193 BINARY_DOUBLE, 
	scaler_194 BINARY_DOUBLE, 
	scaler_195 BINARY_DOUBLE, 
	scaler_196 BINARY_DOUBLE, 
	scaler_197 BINARY_DOUBLE, 
	scaler_198 BINARY_DOUBLE, 
	scaler_199 BINARY_DOUBLE, 
	scaler_200 BINARY_DOUBLE, 
	scaler_201 BINARY_DOUBLE, 
	scaler_202 BINARY_DOUBLE, 
	scaler_203 BINARY_DOUBLE, 
	scaler_204 BINARY_DOUBLE, 
	scaler_205 BINARY_DOUBLE, 
	scaler_206 BINARY_DOUBLE, 
	scaler_207 BINARY_DOUBLE, 
	scaler_208 BINARY_DOUBLE, 
	scaler_209 BINARY_DOUBLE, 
	scaler_210 BINARY_DOUBLE, 
	scaler_211 BINARY_DOUBLE, 
	scaler_212 BINARY_DOUBLE, 
	scaler_213 BINARY_DOUBLE, 
	scaler_214 BINARY_DOUBLE, 
	scaler_215 BINARY_DOUBLE, 
	scaler_216 BINARY_DOUBLE, 
	scaler_217 BINARY_DOUBLE, 
	scaler_218 BINARY_DOUBLE, 
	scaler_219 BINARY_DOUBLE, 
	scaler_220 BINARY_DOUBLE, 
	scaler_221 BINARY_DOUBLE, 
	scaler_222 BINARY_DOUBLE, 
	scaler_223 BINARY_DOUBLE, 
	scaler_224 BINARY_DOUBLE, 
	scaler_225 BINARY_DOUBLE, 
	scaler_226 BINARY_DOUBLE, 
	scaler_227 BINARY_DOUBLE, 
	scaler_228 BINARY_DOUBLE, 
	scaler_229 BINARY_DOUBLE, 
	scaler_230 BINARY_DOUBLE, 
	scaler_231 BINARY_DOUBLE, 
	scaler_232 BINARY_DOUBLE, 
	scaler_233 BINARY_DOUBLE, 
	scaler_234 BINARY_DOUBLE, 
	scaler_235 BINARY_DOUBLE, 
	scaler_236 BINARY_DOUBLE, 
	scaler_237 BINARY_DOUBLE, 
	scaler_238 BINARY_DOUBLE, 
	scaler_239 BINARY_DOUBLE, 
	scaler_240 BINARY_DOUBLE, 
	scaler_241 BINARY_DOUBLE, 
	scaler_242 BINARY_DOUBLE, 
	scaler_243 BINARY_DOUBLE, 
	scaler_244 BINARY_DOUBLE, 
	scaler_245 BINARY_DOUBLE, 
	scaler_246 BINARY_DOUBLE, 
	scaler_247 BINARY_DOUBLE, 
	scaler_248 BINARY_DOUBLE, 
	scaler_249 BINARY_DOUBLE, 
	scaler_250 BINARY_DOUBLE, 
	scaler_251 BINARY_DOUBLE, 
	scaler_252 BINARY_DOUBLE, 
	scaler_253 BINARY_DOUBLE, 
	scaler_254 BINARY_DOUBLE, 
	scaler_255 BINARY_DOUBLE, 
	scaler_256 BINARY_DOUBLE, 
	scaler_257 BINARY_DOUBLE, 
	scaler_258 BINARY_DOUBLE, 
	scaler_259 BINARY_DOUBLE, 
	scaler_260 BINARY_DOUBLE, 
	scaler_261 BINARY_DOUBLE, 
	scaler_262 BINARY_DOUBLE, 
	scaler_263 BINARY_DOUBLE, 
	scaler_264 BINARY_DOUBLE, 
	scaler_265 BINARY_DOUBLE, 
	scaler_266 BINARY_DOUBLE, 
	scaler_267 BINARY_DOUBLE, 
	scaler_268 BINARY_DOUBLE, 
	scaler_269 BINARY_DOUBLE, 
	scaler_270 BINARY_DOUBLE, 
	scaler_271 BINARY_DOUBLE, 
	scaler_272 BINARY_DOUBLE, 
	scaler_273 BINARY_DOUBLE, 
	scaler_274 BINARY_DOUBLE, 
	scaler_275 BINARY_DOUBLE, 
	scaler_276 BINARY_DOUBLE, 
	scaler_277 BINARY_DOUBLE, 
	scaler_278 BINARY_DOUBLE, 
	scaler_279 BINARY_DOUBLE, 
	scaler_280 BINARY_DOUBLE, 
	scaler_281 BINARY_DOUBLE, 
	scaler_282 BINARY_DOUBLE, 
	scaler_283 BINARY_DOUBLE, 
	scaler_284 BINARY_DOUBLE, 
	scaler_285 BINARY_DOUBLE, 
	scaler_286 BINARY_DOUBLE, 
	scaler_287 BINARY_DOUBLE, 
	scaler_288 BINARY_DOUBLE, 
	scaler_289 BINARY_DOUBLE, 
	scaler_290 BINARY_DOUBLE, 
	scaler_291 BINARY_DOUBLE, 
	scaler_292 BINARY_DOUBLE, 
	scaler_293 BINARY_DOUBLE, 
	scaler_294 BINARY_DOUBLE, 
	scaler_295 BINARY_DOUBLE, 
	scaler_296 BINARY_DOUBLE, 
	scaler_297 BINARY_DOUBLE, 
	scaler_298 BINARY_DOUBLE, 
	scaler_299 BINARY_DOUBLE, 
	scaler_300 BINARY_DOUBLE, 
	scaler_301 BINARY_DOUBLE, 
	scaler_302 BINARY_DOUBLE, 
	scaler_303 BINARY_DOUBLE, 
	scaler_304 BINARY_DOUBLE, 
	scaler_305 BINARY_DOUBLE, 
	scaler_306 BINARY_DOUBLE, 
	scaler_307 BINARY_DOUBLE, 
	scaler_308 BINARY_DOUBLE, 
	scaler_309 BINARY_DOUBLE, 
	scaler_310 BINARY_DOUBLE, 
	scaler_311 BINARY_DOUBLE, 
	scaler_312 BINARY_DOUBLE, 
	scaler_313 BINARY_DOUBLE, 
	scaler_314 BINARY_DOUBLE, 
	scaler_315 BINARY_DOUBLE, 
	scaler_316 BINARY_DOUBLE, 
	scaler_317 BINARY_DOUBLE, 
	scaler_318 BINARY_DOUBLE, 
	scaler_319 BINARY_DOUBLE, 
	scaler_320 BINARY_DOUBLE, 
	scaler_321 BINARY_DOUBLE, 
	scaler_322 BINARY_DOUBLE, 
	scaler_323 BINARY_DOUBLE, 
	scaler_324 BINARY_DOUBLE, 
	scaler_325 BINARY_DOUBLE, 
	scaler_326 BINARY_DOUBLE, 
	scaler_327 BINARY_DOUBLE, 
	scaler_328 BINARY_DOUBLE, 
	scaler_329 BINARY_DOUBLE, 
	scaler_330 BINARY_DOUBLE, 
	scaler_331 BINARY_DOUBLE, 
	scaler_332 BINARY_DOUBLE, 
	scaler_333 BINARY_DOUBLE, 
	scaler_334 BINARY_DOUBLE, 
	scaler_335 BINARY_DOUBLE, 
	scaler_336 BINARY_DOUBLE, 
	scaler_337 BINARY_DOUBLE, 
	scaler_338 BINARY_DOUBLE, 
	scaler_339 BINARY_DOUBLE, 
	scaler_340 BINARY_DOUBLE, 
	scaler_341 BINARY_DOUBLE, 
	scaler_342 BINARY_DOUBLE, 
	scaler_343 BINARY_DOUBLE, 
	scaler_344 BINARY_DOUBLE, 
	scaler_345 BINARY_DOUBLE, 
	scaler_346 BINARY_DOUBLE, 
	scaler_347 BINARY_DOUBLE, 
	scaler_348 BINARY_DOUBLE, 
	scaler_349 BINARY_DOUBLE, 
	scaler_350 BINARY_DOUBLE, 
	scaler_351 BINARY_DOUBLE, 
	scaler_352 BINARY_DOUBLE, 
	scaler_353 BINARY_DOUBLE, 
	scaler_354 BINARY_DOUBLE, 
	scaler_355 BINARY_DOUBLE, 
	scaler_356 BINARY_DOUBLE, 
	scaler_357 BINARY_DOUBLE, 
	scaler_358 BINARY_DOUBLE, 
	scaler_359 BINARY_DOUBLE, 
	scaler_360 BINARY_DOUBLE, 
	scaler_361 BINARY_DOUBLE, 
	scaler_362 BINARY_DOUBLE, 
	scaler_363 BINARY_DOUBLE, 
	scaler_364 BINARY_DOUBLE, 
	scaler_365 BINARY_DOUBLE, 
	scaler_366 BINARY_DOUBLE, 
	scaler_367 BINARY_DOUBLE, 
	scaler_368 BINARY_DOUBLE, 
	scaler_369 BINARY_DOUBLE, 
	scaler_370 BINARY_DOUBLE, 
	scaler_371 BINARY_DOUBLE, 
	scaler_372 BINARY_DOUBLE, 
	scaler_373 BINARY_DOUBLE, 
	scaler_374 BINARY_DOUBLE, 
	scaler_375 BINARY_DOUBLE, 
	scaler_376 BINARY_DOUBLE, 
	scaler_377 BINARY_DOUBLE, 
	scaler_378 BINARY_DOUBLE, 
	scaler_379 BINARY_DOUBLE, 
	scaler_380 BINARY_DOUBLE, 
	scaler_381 BINARY_DOUBLE, 
	scaler_382 BINARY_DOUBLE, 
	scaler_383 BINARY_DOUBLE, 
	scaler_384 BINARY_DOUBLE, 
	scaler_385 BINARY_DOUBLE, 
	scaler_386 BINARY_DOUBLE, 
	scaler_387 BINARY_DOUBLE, 
	scaler_388 BINARY_DOUBLE, 
	scaler_389 BINARY_DOUBLE, 
	scaler_390 BINARY_DOUBLE, 
	scaler_391 BINARY_DOUBLE, 
	scaler_392 BINARY_DOUBLE, 
	scaler_393 BINARY_DOUBLE, 
	scaler_394 BINARY_DOUBLE, 
	scaler_395 BINARY_DOUBLE, 
	scaler_396 BINARY_DOUBLE, 
	scaler_397 BINARY_DOUBLE, 
	scaler_398 BINARY_DOUBLE, 
	scaler_399 BINARY_DOUBLE, 
	scaler_400 BINARY_DOUBLE, 
	scaler_401 BINARY_DOUBLE, 
	scaler_402 BINARY_DOUBLE, 
	scaler_403 BINARY_DOUBLE, 
	scaler_404 BINARY_DOUBLE, 
	scaler_405 BINARY_DOUBLE, 
	scaler_406 BINARY_DOUBLE, 
	scaler_407 BINARY_DOUBLE, 
	scaler_408 BINARY_DOUBLE, 
	scaler_409 BINARY_DOUBLE, 
	scaler_410 BINARY_DOUBLE, 
	scaler_411 BINARY_DOUBLE, 
	scaler_412 BINARY_DOUBLE, 
	scaler_413 BINARY_DOUBLE, 
	scaler_414 BINARY_DOUBLE, 
	scaler_415 BINARY_DOUBLE, 
	scaler_416 BINARY_DOUBLE, 
	scaler_417 BINARY_DOUBLE, 
	scaler_418 BINARY_DOUBLE, 
	scaler_419 BINARY_DOUBLE, 
	scaler_420 BINARY_DOUBLE, 
	scaler_421 BINARY_DOUBLE, 
	scaler_422 BINARY_DOUBLE, 
	scaler_423 BINARY_DOUBLE, 
	scaler_424 BINARY_DOUBLE, 
	scaler_425 BINARY_DOUBLE, 
	scaler_426 BINARY_DOUBLE, 
	scaler_427 BINARY_DOUBLE, 
	scaler_428 BINARY_DOUBLE, 
	scaler_429 BINARY_DOUBLE, 
	scaler_430 BINARY_DOUBLE, 
	scaler_431 BINARY_DOUBLE, 
	scaler_432 BINARY_DOUBLE, 
	scaler_433 BINARY_DOUBLE, 
	scaler_434 BINARY_DOUBLE, 
	scaler_435 BINARY_DOUBLE, 
	scaler_436 BINARY_DOUBLE, 
	scaler_437 BINARY_DOUBLE, 
	scaler_438 BINARY_DOUBLE, 
	scaler_439 BINARY_DOUBLE, 
	scaler_440 BINARY_DOUBLE, 
	scaler_441 BINARY_DOUBLE, 
	scaler_442 BINARY_DOUBLE, 
	scaler_443 BINARY_DOUBLE, 
	scaler_444 BINARY_DOUBLE, 
	scaler_445 BINARY_DOUBLE, 
	scaler_446 BINARY_DOUBLE, 
	scaler_447 BINARY_DOUBLE, 
	scaler_448 BINARY_DOUBLE, 
	scaler_449 BINARY_DOUBLE, 
	scaler_450 BINARY_DOUBLE, 
	scaler_451 BINARY_DOUBLE, 
	scaler_452 BINARY_DOUBLE, 
	scaler_453 BINARY_DOUBLE, 
	scaler_454 BINARY_DOUBLE, 
	scaler_455 BINARY_DOUBLE, 
	scaler_456 BINARY_DOUBLE, 
	scaler_457 BINARY_DOUBLE, 
	scaler_458 BINARY_DOUBLE, 
	scaler_459 BINARY_DOUBLE, 
	scaler_460 BINARY_DOUBLE, 
	scaler_461 BINARY_DOUBLE, 
	scaler_462 BINARY_DOUBLE, 
	scaler_463 BINARY_DOUBLE, 
	scaler_464 BINARY_DOUBLE, 
	scaler_465 BINARY_DOUBLE, 
	scaler_466 BINARY_DOUBLE, 
	scaler_467 BINARY_DOUBLE, 
	scaler_468 BINARY_DOUBLE, 
	scaler_469 BINARY_DOUBLE, 
	scaler_470 BINARY_DOUBLE, 
	scaler_471 BINARY_DOUBLE, 
	scaler_472 BINARY_DOUBLE, 
	scaler_473 BINARY_DOUBLE, 
	scaler_474 BINARY_DOUBLE, 
	scaler_475 BINARY_DOUBLE, 
	scaler_476 BINARY_DOUBLE, 
	scaler_477 BINARY_DOUBLE, 
	scaler_478 BINARY_DOUBLE, 
	scaler_479 BINARY_DOUBLE, 
	scaler_480 BINARY_DOUBLE, 
	scaler_481 BINARY_DOUBLE, 
	scaler_482 BINARY_DOUBLE, 
	scaler_483 BINARY_DOUBLE, 
	scaler_484 BINARY_DOUBLE, 
	scaler_485 BINARY_DOUBLE, 
	scaler_486 BINARY_DOUBLE, 
	scaler_487 BINARY_DOUBLE, 
	scaler_488 BINARY_DOUBLE, 
	scaler_489 BINARY_DOUBLE, 
	scaler_490 BINARY_DOUBLE, 
	scaler_491 BINARY_DOUBLE, 
	scaler_492 BINARY_DOUBLE, 
	scaler_493 BINARY_DOUBLE, 
	scaler_494 BINARY_DOUBLE, 
	scaler_495 BINARY_DOUBLE, 
	scaler_496 BINARY_DOUBLE, 
	scaler_497 BINARY_DOUBLE, 
	scaler_498 BINARY_DOUBLE, 
	scaler_499 BINARY_DOUBLE, 
	scaler_500 BINARY_DOUBLE, 
	scaler_501 BINARY_DOUBLE
)

 ON COMMIT PRESERVE ROWS
-- Code For temporary table 33322_J2367X_ADS_SCA_2_OUT part 2/2. Populate

INSERT INTO "33322_J2367X_ADS_SCA_2_OUT" ("KEY", scaler_2, scaler_3, scaler_4, scaler_5, scaler_6, scaler_7, scaler_8, scaler_9, scaler_10, scaler_11, scaler_12, scaler_13, scaler_14, scaler_15, scaler_16, scaler_17, scaler_18, scaler_19, scaler_20, scaler_21, scaler_22, scaler_23, scaler_24, scaler_25, scaler_26, scaler_27, scaler_28, scaler_29, scaler_30, scaler_31, scaler_32, scaler_33, scaler_34, scaler_35, scaler_36, scaler_37, scaler_38, scaler_39, scaler_40, scaler_41, scaler_42, scaler_43, scaler_44, scaler_45, scaler_46, scaler_47, scaler_48, scaler_49, scaler_50, scaler_51, scaler_52, scaler_53, scaler_54, scaler_55, scaler_56, scaler_57, scaler_58, scaler_59, scaler_60, scaler_61, scaler_62, scaler_63, scaler_64, scaler_65, scaler_66, scaler_67, scaler_68, scaler_69, scaler_70, scaler_71, scaler_72, scaler_73, scaler_74, scaler_75, scaler_76, scaler_77, scaler_78, scaler_79, scaler_80, scaler_81, scaler_82, scaler_83, scaler_84, scaler_85, scaler_86, scaler_87, scaler_88, scaler_89, scaler_90, scaler_91, scaler_92, scaler_93, scaler_94, scaler_95, scaler_96, scaler_97, scaler_98, scaler_99, scaler_100, scaler_101, scaler_102, scaler_103, scaler_104, scaler_105, scaler_106, scaler_107, scaler_108, scaler_109, scaler_110, scaler_111, scaler_112, scaler_113, scaler_114, scaler_115, scaler_116, scaler_117, scaler_118, scaler_119, scaler_120, scaler_121, scaler_122, scaler_123, scaler_124, scaler_125, scaler_126, scaler_127, scaler_128, scaler_129, scaler_130, scaler_131, scaler_132, scaler_133, scaler_134, scaler_135, scaler_136, scaler_137, scaler_138, scaler_139, scaler_140, scaler_141, scaler_142, scaler_143, scaler_144, scaler_145, scaler_146, scaler_147, scaler_148, scaler_149, scaler_150, scaler_151, scaler_152, scaler_153, scaler_154, scaler_155, scaler_156, scaler_157, scaler_158, scaler_159, scaler_160, scaler_161, scaler_162, scaler_163, scaler_164, scaler_165, scaler_166, scaler_167, scaler_168, scaler_169, scaler_170, scaler_171, scaler_172, scaler_173, scaler_174, scaler_175, scaler_176, scaler_177, scaler_178, scaler_179, scaler_180, scaler_181, scaler_182, scaler_183, scaler_184, scaler_185, scaler_186, scaler_187, scaler_188, scaler_189, scaler_190, scaler_191, scaler_192, scaler_193, scaler_194, scaler_195, scaler_196, scaler_197, scaler_198, scaler_199, scaler_200, scaler_201, scaler_202, scaler_203, scaler_204, scaler_205, scaler_206, scaler_207, scaler_208, scaler_209, scaler_210, scaler_211, scaler_212, scaler_213, scaler_214, scaler_215, scaler_216, scaler_217, scaler_218, scaler_219, scaler_220, scaler_221, scaler_222, scaler_223, scaler_224, scaler_225, scaler_226, scaler_227, scaler_228, scaler_229, scaler_230, scaler_231, scaler_232, scaler_233, scaler_234, scaler_235, scaler_236, scaler_237, scaler_238, scaler_239, scaler_240, scaler_241, scaler_242, scaler_243, scaler_244, scaler_245, scaler_246, scaler_247, scaler_248, scaler_249, scaler_250, scaler_251, scaler_252, scaler_253, scaler_254, scaler_255, scaler_256, scaler_257, scaler_258, scaler_259, scaler_260, scaler_261, scaler_262, scaler_263, scaler_264, scaler_265, scaler_266, scaler_267, scaler_268, scaler_269, scaler_270, scaler_271, scaler_272, scaler_273, scaler_274, scaler_275, scaler_276, scaler_277, scaler_278, scaler_279, scaler_280, scaler_281, scaler_282, scaler_283, scaler_284, scaler_285, scaler_286, scaler_287, scaler_288, scaler_289, scaler_290, scaler_291, scaler_292, scaler_293, scaler_294, scaler_295, scaler_296, scaler_297, scaler_298, scaler_299, scaler_300, scaler_301, scaler_302, scaler_303, scaler_304, scaler_305, scaler_306, scaler_307, scaler_308, scaler_309, scaler_310, scaler_311, scaler_312, scaler_313, scaler_314, scaler_315, scaler_316, scaler_317, scaler_318, scaler_319, scaler_320, scaler_321, scaler_322, scaler_323, scaler_324, scaler_325, scaler_326, scaler_327, scaler_328, scaler_329, scaler_330, scaler_331, scaler_332, scaler_333, scaler_334, scaler_335, scaler_336, scaler_337, scaler_338, scaler_339, scaler_340, scaler_341, scaler_342, scaler_343, scaler_344, scaler_345, scaler_346, scaler_347, scaler_348, scaler_349, scaler_350, scaler_351, scaler_352, scaler_353, scaler_354, scaler_355, scaler_356, scaler_357, scaler_358, scaler_359, scaler_360, scaler_361, scaler_362, scaler_363, scaler_364, scaler_365, scaler_366, scaler_367, scaler_368, scaler_369, scaler_370, scaler_371, scaler_372, scaler_373, scaler_374, scaler_375, scaler_376, scaler_377, scaler_378, scaler_379, scaler_380, scaler_381, scaler_382, scaler_383, scaler_384, scaler_385, scaler_386, scaler_387, scaler_388, scaler_389, scaler_390, scaler_391, scaler_392, scaler_393, scaler_394, scaler_395, scaler_396, scaler_397, scaler_398, scaler_399, scaler_400, scaler_401, scaler_402, scaler_403, scaler_404, scaler_405, scaler_406, scaler_407, scaler_408, scaler_409, scaler_410, scaler_411, scaler_412, scaler_413, scaler_414, scaler_415, scaler_416, scaler_417, scaler_418, scaler_419, scaler_420, scaler_421, scaler_422, scaler_423, scaler_424, scaler_425, scaler_426, scaler_427, scaler_428, scaler_429, scaler_430, scaler_431, scaler_432, scaler_433, scaler_434, scaler_435, scaler_436, scaler_437, scaler_438, scaler_439, scaler_440, scaler_441, scaler_442, scaler_443, scaler_444, scaler_445, scaler_446, scaler_447, scaler_448, scaler_449, scaler_450, scaler_451, scaler_452, scaler_453, scaler_454, scaler_455, scaler_456, scaler_457, scaler_458, scaler_459, scaler_460, scaler_461, scaler_462, scaler_463, scaler_464, scaler_465, scaler_466, scaler_467, scaler_468, scaler_469, scaler_470, scaler_471, scaler_472, scaler_473, scaler_474, scaler_475, scaler_476, scaler_477, scaler_478, scaler_479, scaler_480, scaler_481, scaler_482, scaler_483, scaler_484, scaler_485, scaler_486, scaler_487, scaler_488, scaler_489, scaler_490, scaler_491, scaler_492, scaler_493, scaler_494, scaler_495, scaler_496, scaler_497, scaler_498, scaler_499, scaler_500, scaler_501) SELECT "U"."KEY", "U".scaler_2, "U".scaler_3, "U".scaler_4, "U".scaler_5, "U".scaler_6, "U".scaler_7, "U".scaler_8, "U".scaler_9, "U".scaler_10, "U".scaler_11, "U".scaler_12, "U".scaler_13, "U".scaler_14, "U".scaler_15, "U".scaler_16, "U".scaler_17, "U".scaler_18, "U".scaler_19, "U".scaler_20, "U".scaler_21, "U".scaler_22, "U".scaler_23, "U".scaler_24, "U".scaler_25, "U".scaler_26, "U".scaler_27, "U".scaler_28, "U".scaler_29, "U".scaler_30, "U".scaler_31, "U".scaler_32, "U".scaler_33, "U".scaler_34, "U".scaler_35, "U".scaler_36, "U".scaler_37, "U".scaler_38, "U".scaler_39, "U".scaler_40, "U".scaler_41, "U".scaler_42, "U".scaler_43, "U".scaler_44, "U".scaler_45, "U".scaler_46, "U".scaler_47, "U".scaler_48, "U".scaler_49, "U".scaler_50, "U".scaler_51, "U".scaler_52, "U".scaler_53, "U".scaler_54, "U".scaler_55, "U".scaler_56, "U".scaler_57, "U".scaler_58, "U".scaler_59, "U".scaler_60, "U".scaler_61, "U".scaler_62, "U".scaler_63, "U".scaler_64, "U".scaler_65, "U".scaler_66, "U".scaler_67, "U".scaler_68, "U".scaler_69, "U".scaler_70, "U".scaler_71, "U".scaler_72, "U".scaler_73, "U".scaler_74, "U".scaler_75, "U".scaler_76, "U".scaler_77, "U".scaler_78, "U".scaler_79, "U".scaler_80, "U".scaler_81, "U".scaler_82, "U".scaler_83, "U".scaler_84, "U".scaler_85, "U".scaler_86, "U".scaler_87, "U".scaler_88, "U".scaler_89, "U".scaler_90, "U".scaler_91, "U".scaler_92, "U".scaler_93, "U".scaler_94, "U".scaler_95, "U".scaler_96, "U".scaler_97, "U".scaler_98, "U".scaler_99, "U".scaler_100, "U".scaler_101, "U".scaler_102, "U".scaler_103, "U".scaler_104, "U".scaler_105, "U".scaler_106, "U".scaler_107, "U".scaler_108, "U".scaler_109, "U".scaler_110, "U".scaler_111, "U".scaler_112, "U".scaler_113, "U".scaler_114, "U".scaler_115, "U".scaler_116, "U".scaler_117, "U".scaler_118, "U".scaler_119, "U".scaler_120, "U".scaler_121, "U".scaler_122, "U".scaler_123, "U".scaler_124, "U".scaler_125, "U".scaler_126, "U".scaler_127, "U".scaler_128, "U".scaler_129, "U".scaler_130, "U".scaler_131, "U".scaler_132, "U".scaler_133, "U".scaler_134, "U".scaler_135, "U".scaler_136, "U".scaler_137, "U".scaler_138, "U".scaler_139, "U".scaler_140, "U".scaler_141, "U".scaler_142, "U".scaler_143, "U".scaler_144, "U".scaler_145, "U".scaler_146, "U".scaler_147, "U".scaler_148, "U".scaler_149, "U".scaler_150, "U".scaler_151, "U".scaler_152, "U".scaler_153, "U".scaler_154, "U".scaler_155, "U".scaler_156, "U".scaler_157, "U".scaler_158, "U".scaler_159, "U".scaler_160, "U".scaler_161, "U".scaler_162, "U".scaler_163, "U".scaler_164, "U".scaler_165, "U".scaler_166, "U".scaler_167, "U".scaler_168, "U".scaler_169, "U".scaler_170, "U".scaler_171, "U".scaler_172, "U".scaler_173, "U".scaler_174, "U".scaler_175, "U".scaler_176, "U".scaler_177, "U".scaler_178, "U".scaler_179, "U".scaler_180, "U".scaler_181, "U".scaler_182, "U".scaler_183, "U".scaler_184, "U".scaler_185, "U".scaler_186, "U".scaler_187, "U".scaler_188, "U".scaler_189, "U".scaler_190, "U".scaler_191, "U".scaler_192, "U".scaler_193, "U".scaler_194, "U".scaler_195, "U".scaler_196, "U".scaler_197, "U".scaler_198, "U".scaler_199, "U".scaler_200, "U".scaler_201, "U".scaler_202, "U".scaler_203, "U".scaler_204, "U".scaler_205, "U".scaler_206, "U".scaler_207, "U".scaler_208, "U".scaler_209, "U".scaler_210, "U".scaler_211, "U".scaler_212, "U".scaler_213, "U".scaler_214, "U".scaler_215, "U".scaler_216, "U".scaler_217, "U".scaler_218, "U".scaler_219, "U".scaler_220, "U".scaler_221, "U".scaler_222, "U".scaler_223, "U".scaler_224, "U".scaler_225, "U".scaler_226, "U".scaler_227, "U".scaler_228, "U".scaler_229, "U".scaler_230, "U".scaler_231, "U".scaler_232, "U".scaler_233, "U".scaler_234, "U".scaler_235, "U".scaler_236, "U".scaler_237, "U".scaler_238, "U".scaler_239, "U".scaler_240, "U".scaler_241, "U".scaler_242, "U".scaler_243, "U".scaler_244, "U".scaler_245, "U".scaler_246, "U".scaler_247, "U".scaler_248, "U".scaler_249, "U".scaler_250, "U".scaler_251, "U".scaler_252, "U".scaler_253, "U".scaler_254, "U".scaler_255, "U".scaler_256, "U".scaler_257, "U".scaler_258, "U".scaler_259, "U".scaler_260, "U".scaler_261, "U".scaler_262, "U".scaler_263, "U".scaler_264, "U".scaler_265, "U".scaler_266, "U".scaler_267, "U".scaler_268, "U".scaler_269, "U".scaler_270, "U".scaler_271, "U".scaler_272, "U".scaler_273, "U".scaler_274, "U".scaler_275, "U".scaler_276, "U".scaler_277, "U".scaler_278, "U".scaler_279, "U".scaler_280, "U".scaler_281, "U".scaler_282, "U".scaler_283, "U".scaler_284, "U".scaler_285, "U".scaler_286, "U".scaler_287, "U".scaler_288, "U".scaler_289, "U".scaler_290, "U".scaler_291, "U".scaler_292, "U".scaler_293, "U".scaler_294, "U".scaler_295, "U".scaler_296, "U".scaler_297, "U".scaler_298, "U".scaler_299, "U".scaler_300, "U".scaler_301, "U".scaler_302, "U".scaler_303, "U".scaler_304, "U".scaler_305, "U".scaler_306, "U".scaler_307, "U".scaler_308, "U".scaler_309, "U".scaler_310, "U".scaler_311, "U".scaler_312, "U".scaler_313, "U".scaler_314, "U".scaler_315, "U".scaler_316, "U".scaler_317, "U".scaler_318, "U".scaler_319, "U".scaler_320, "U".scaler_321, "U".scaler_322, "U".scaler_323, "U".scaler_324, "U".scaler_325, "U".scaler_326, "U".scaler_327, "U".scaler_328, "U".scaler_329, "U".scaler_330, "U".scaler_331, "U".scaler_332, "U".scaler_333, "U".scaler_334, "U".scaler_335, "U".scaler_336, "U".scaler_337, "U".scaler_338, "U".scaler_339, "U".scaler_340, "U".scaler_341, "U".scaler_342, "U".scaler_343, "U".scaler_344, "U".scaler_345, "U".scaler_346, "U".scaler_347, "U".scaler_348, "U".scaler_349, "U".scaler_350, "U".scaler_351, "U".scaler_352, "U".scaler_353, "U".scaler_354, "U".scaler_355, "U".scaler_356, "U".scaler_357, "U".scaler_358, "U".scaler_359, "U".scaler_360, "U".scaler_361, "U".scaler_362, "U".scaler_363, "U".scaler_364, "U".scaler_365, "U".scaler_366, "U".scaler_367, "U".scaler_368, "U".scaler_369, "U".scaler_370, "U".scaler_371, "U".scaler_372, "U".scaler_373, "U".scaler_374, "U".scaler_375, "U".scaler_376, "U".scaler_377, "U".scaler_378, "U".scaler_379, "U".scaler_380, "U".scaler_381, "U".scaler_382, "U".scaler_383, "U".scaler_384, "U".scaler_385, "U".scaler_386, "U".scaler_387, "U".scaler_388, "U".scaler_389, "U".scaler_390, "U".scaler_391, "U".scaler_392, "U".scaler_393, "U".scaler_394, "U".scaler_395, "U".scaler_396, "U".scaler_397, "U".scaler_398, "U".scaler_399, "U".scaler_400, "U".scaler_401, "U".scaler_402, "U".scaler_403, "U".scaler_404, "U".scaler_405, "U".scaler_406, "U".scaler_407, "U".scaler_408, "U".scaler_409, "U".scaler_410, "U".scaler_411, "U".scaler_412, "U".scaler_413, "U".scaler_414, "U".scaler_415, "U".scaler_416, "U".scaler_417, "U".scaler_418, "U".scaler_419, "U".scaler_420, "U".scaler_421, "U".scaler_422, "U".scaler_423, "U".scaler_424, "U".scaler_425, "U".scaler_426, "U".scaler_427, "U".scaler_428, "U".scaler_429, "U".scaler_430, "U".scaler_431, "U".scaler_432, "U".scaler_433, "U".scaler_434, "U".scaler_435, "U".scaler_436, "U".scaler_437, "U".scaler_438, "U".scaler_439, "U".scaler_440, "U".scaler_441, "U".scaler_442, "U".scaler_443, "U".scaler_444, "U".scaler_445, "U".scaler_446, "U".scaler_447, "U".scaler_448, "U".scaler_449, "U".scaler_450, "U".scaler_451, "U".scaler_452, "U".scaler_453, "U".scaler_454, "U".scaler_455, "U".scaler_456, "U".scaler_457, "U".scaler_458, "U".scaler_459, "U".scaler_460, "U".scaler_461, "U".scaler_462, "U".scaler_463, "U".scaler_464, "U".scaler_465, "U".scaler_466, "U".scaler_467, "U".scaler_468, "U".scaler_469, "U".scaler_470, "U".scaler_471, "U".scaler_472, "U".scaler_473, "U".scaler_474, "U".scaler_475, "U".scaler_476, "U".scaler_477, "U".scaler_478, "U".scaler_479, "U".scaler_480, "U".scaler_481, "U".scaler_482, "U".scaler_483, "U".scaler_484, "U".scaler_485, "U".scaler_486, "U".scaler_487, "U".scaler_488, "U".scaler_489, "U".scaler_490, "U".scaler_491, "U".scaler_492, "U".scaler_493, "U".scaler_494, "U".scaler_495, "U".scaler_496, "U".scaler_497, "U".scaler_498, "U".scaler_499, "U".scaler_500, "U".scaler_501 
FROM (SELECT "ADS_sca_2_OUT"."KEY", "ADS_sca_2_OUT".scaler_2, "ADS_sca_2_OUT".scaler_3, "ADS_sca_2_OUT".scaler_4, "ADS_sca_2_OUT".scaler_5, "ADS_sca_2_OUT".scaler_6, "ADS_sca_2_OUT".scaler_7, "ADS_sca_2_OUT".scaler_8, "ADS_sca_2_OUT".scaler_9, "ADS_sca_2_OUT".scaler_10, "ADS_sca_2_OUT".scaler_11, "ADS_sca_2_OUT".scaler_12, "ADS_sca_2_OUT".scaler_13, "ADS_sca_2_OUT".scaler_14, "ADS_sca_2_OUT".scaler_15, "ADS_sca_2_OUT".scaler_16, "ADS_sca_2_OUT".scaler_17, "ADS_sca_2_OUT".scaler_18, "ADS_sca_2_OUT".scaler_19, "ADS_sca_2_OUT".scaler_20, "ADS_sca_2_OUT".scaler_21, "ADS_sca_2_OUT".scaler_22, "ADS_sca_2_OUT".scaler_23, "ADS_sca_2_OUT".scaler_24, "ADS_sca_2_OUT".scaler_25, "ADS_sca_2_OUT".scaler_26, "ADS_sca_2_OUT".scaler_27, "ADS_sca_2_OUT".scaler_28, "ADS_sca_2_OUT".scaler_29, "ADS_sca_2_OUT".scaler_30, "ADS_sca_2_OUT".scaler_31, "ADS_sca_2_OUT".scaler_32, "ADS_sca_2_OUT".scaler_33, "ADS_sca_2_OUT".scaler_34, "ADS_sca_2_OUT".scaler_35, "ADS_sca_2_OUT".scaler_36, "ADS_sca_2_OUT".scaler_37, "ADS_sca_2_OUT".scaler_38, "ADS_sca_2_OUT".scaler_39, "ADS_sca_2_OUT".scaler_40, "ADS_sca_2_OUT".scaler_41, "ADS_sca_2_OUT".scaler_42, "ADS_sca_2_OUT".scaler_43, "ADS_sca_2_OUT".scaler_44, "ADS_sca_2_OUT".scaler_45, "ADS_sca_2_OUT".scaler_46, "ADS_sca_2_OUT".scaler_47, "ADS_sca_2_OUT".scaler_48, "ADS_sca_2_OUT".scaler_49, "ADS_sca_2_OUT".scaler_50, "ADS_sca_2_OUT".scaler_51, "ADS_sca_2_OUT".scaler_52, "ADS_sca_2_OUT".scaler_53, "ADS_sca_2_OUT".scaler_54, "ADS_sca_2_OUT".scaler_55, "ADS_sca_2_OUT".scaler_56, "ADS_sca_2_OUT".scaler_57, "ADS_sca_2_OUT".scaler_58, "ADS_sca_2_OUT".scaler_59, "ADS_sca_2_OUT".scaler_60, "ADS_sca_2_OUT".scaler_61, "ADS_sca_2_OUT".scaler_62, "ADS_sca_2_OUT".scaler_63, "ADS_sca_2_OUT".scaler_64, "ADS_sca_2_OUT".scaler_65, "ADS_sca_2_OUT".scaler_66, "ADS_sca_2_OUT".scaler_67, "ADS_sca_2_OUT".scaler_68, "ADS_sca_2_OUT".scaler_69, "ADS_sca_2_OUT".scaler_70, "ADS_sca_2_OUT".scaler_71, "ADS_sca_2_OUT".scaler_72, "ADS_sca_2_OUT".scaler_73, "ADS_sca_2_OUT".scaler_74, "ADS_sca_2_OUT".scaler_75, "ADS_sca_2_OUT".scaler_76, "ADS_sca_2_OUT".scaler_77, "ADS_sca_2_OUT".scaler_78, "ADS_sca_2_OUT".scaler_79, "ADS_sca_2_OUT".scaler_80, "ADS_sca_2_OUT".scaler_81, "ADS_sca_2_OUT".scaler_82, "ADS_sca_2_OUT".scaler_83, "ADS_sca_2_OUT".scaler_84, "ADS_sca_2_OUT".scaler_85, "ADS_sca_2_OUT".scaler_86, "ADS_sca_2_OUT".scaler_87, "ADS_sca_2_OUT".scaler_88, "ADS_sca_2_OUT".scaler_89, "ADS_sca_2_OUT".scaler_90, "ADS_sca_2_OUT".scaler_91, "ADS_sca_2_OUT".scaler_92, "ADS_sca_2_OUT".scaler_93, "ADS_sca_2_OUT".scaler_94, "ADS_sca_2_OUT".scaler_95, "ADS_sca_2_OUT".scaler_96, "ADS_sca_2_OUT".scaler_97, "ADS_sca_2_OUT".scaler_98, "ADS_sca_2_OUT".scaler_99, "ADS_sca_2_OUT".scaler_100, "ADS_sca_2_OUT".scaler_101, "ADS_sca_2_OUT".scaler_102, "ADS_sca_2_OUT".scaler_103, "ADS_sca_2_OUT".scaler_104, "ADS_sca_2_OUT".scaler_105, "ADS_sca_2_OUT".scaler_106, "ADS_sca_2_OUT".scaler_107, "ADS_sca_2_OUT".scaler_108, "ADS_sca_2_OUT".scaler_109, "ADS_sca_2_OUT".scaler_110, "ADS_sca_2_OUT".scaler_111, "ADS_sca_2_OUT".scaler_112, "ADS_sca_2_OUT".scaler_113, "ADS_sca_2_OUT".scaler_114, "ADS_sca_2_OUT".scaler_115, "ADS_sca_2_OUT".scaler_116, "ADS_sca_2_OUT".scaler_117, "ADS_sca_2_OUT".scaler_118, "ADS_sca_2_OUT".scaler_119, "ADS_sca_2_OUT".scaler_120, "ADS_sca_2_OUT".scaler_121, "ADS_sca_2_OUT".scaler_122, "ADS_sca_2_OUT".scaler_123, "ADS_sca_2_OUT".scaler_124, "ADS_sca_2_OUT".scaler_125, "ADS_sca_2_OUT".scaler_126, "ADS_sca_2_OUT".scaler_127, "ADS_sca_2_OUT".scaler_128, "ADS_sca_2_OUT".scaler_129, "ADS_sca_2_OUT".scaler_130, "ADS_sca_2_OUT".scaler_131, "ADS_sca_2_OUT".scaler_132, "ADS_sca_2_OUT".scaler_133, "ADS_sca_2_OUT".scaler_134, "ADS_sca_2_OUT".scaler_135, "ADS_sca_2_OUT".scaler_136, "ADS_sca_2_OUT".scaler_137, "ADS_sca_2_OUT".scaler_138, "ADS_sca_2_OUT".scaler_139, "ADS_sca_2_OUT".scaler_140, "ADS_sca_2_OUT".scaler_141, "ADS_sca_2_OUT".scaler_142, "ADS_sca_2_OUT".scaler_143, "ADS_sca_2_OUT".scaler_144, "ADS_sca_2_OUT".scaler_145, "ADS_sca_2_OUT".scaler_146, "ADS_sca_2_OUT".scaler_147, "ADS_sca_2_OUT".scaler_148, "ADS_sca_2_OUT".scaler_149, "ADS_sca_2_OUT".scaler_150, "ADS_sca_2_OUT".scaler_151, "ADS_sca_2_OUT".scaler_152, "ADS_sca_2_OUT".scaler_153, "ADS_sca_2_OUT".scaler_154, "ADS_sca_2_OUT".scaler_155, "ADS_sca_2_OUT".scaler_156, "ADS_sca_2_OUT".scaler_157, "ADS_sca_2_OUT".scaler_158, "ADS_sca_2_OUT".scaler_159, "ADS_sca_2_OUT".scaler_160, "ADS_sca_2_OUT".scaler_161, "ADS_sca_2_OUT".scaler_162, "ADS_sca_2_OUT".scaler_163, "ADS_sca_2_OUT".scaler_164, "ADS_sca_2_OUT".scaler_165, "ADS_sca_2_OUT".scaler_166, "ADS_sca_2_OUT".scaler_167, "ADS_sca_2_OUT".scaler_168, "ADS_sca_2_OUT".scaler_169, "ADS_sca_2_OUT".scaler_170, "ADS_sca_2_OUT".scaler_171, "ADS_sca_2_OUT".scaler_172, "ADS_sca_2_OUT".scaler_173, "ADS_sca_2_OUT".scaler_174, "ADS_sca_2_OUT".scaler_175, "ADS_sca_2_OUT".scaler_176, "ADS_sca_2_OUT".scaler_177, "ADS_sca_2_OUT".scaler_178, "ADS_sca_2_OUT".scaler_179, "ADS_sca_2_OUT".scaler_180, "ADS_sca_2_OUT".scaler_181, "ADS_sca_2_OUT".scaler_182, "ADS_sca_2_OUT".scaler_183, "ADS_sca_2_OUT".scaler_184, "ADS_sca_2_OUT".scaler_185, "ADS_sca_2_OUT".scaler_186, "ADS_sca_2_OUT".scaler_187, "ADS_sca_2_OUT".scaler_188, "ADS_sca_2_OUT".scaler_189, "ADS_sca_2_OUT".scaler_190, "ADS_sca_2_OUT".scaler_191, "ADS_sca_2_OUT".scaler_192, "ADS_sca_2_OUT".scaler_193, "ADS_sca_2_OUT".scaler_194, "ADS_sca_2_OUT".scaler_195, "ADS_sca_2_OUT".scaler_196, "ADS_sca_2_OUT".scaler_197, "ADS_sca_2_OUT".scaler_198, "ADS_sca_2_OUT".scaler_199, "ADS_sca_2_OUT".scaler_200, "ADS_sca_2_OUT".scaler_201, "ADS_sca_2_OUT".scaler_202, "ADS_sca_2_OUT".scaler_203, "ADS_sca_2_OUT".scaler_204, "ADS_sca_2_OUT".scaler_205, "ADS_sca_2_OUT".scaler_206, "ADS_sca_2_OUT".scaler_207, "ADS_sca_2_OUT".scaler_208, "ADS_sca_2_OUT".scaler_209, "ADS_sca_2_OUT".scaler_210, "ADS_sca_2_OUT".scaler_211, "ADS_sca_2_OUT".scaler_212, "ADS_sca_2_OUT".scaler_213, "ADS_sca_2_OUT".scaler_214, "ADS_sca_2_OUT".scaler_215, "ADS_sca_2_OUT".scaler_216, "ADS_sca_2_OUT".scaler_217, "ADS_sca_2_OUT".scaler_218, "ADS_sca_2_OUT".scaler_219, "ADS_sca_2_OUT".scaler_220, "ADS_sca_2_OUT".scaler_221, "ADS_sca_2_OUT".scaler_222, "ADS_sca_2_OUT".scaler_223, "ADS_sca_2_OUT".scaler_224, "ADS_sca_2_OUT".scaler_225, "ADS_sca_2_OUT".scaler_226, "ADS_sca_2_OUT".scaler_227, "ADS_sca_2_OUT".scaler_228, "ADS_sca_2_OUT".scaler_229, "ADS_sca_2_OUT".scaler_230, "ADS_sca_2_OUT".scaler_231, "ADS_sca_2_OUT".scaler_232, "ADS_sca_2_OUT".scaler_233, "ADS_sca_2_OUT".scaler_234, "ADS_sca_2_OUT".scaler_235, "ADS_sca_2_OUT".scaler_236, "ADS_sca_2_OUT".scaler_237, "ADS_sca_2_OUT".scaler_238, "ADS_sca_2_OUT".scaler_239, "ADS_sca_2_OUT".scaler_240, "ADS_sca_2_OUT".scaler_241, "ADS_sca_2_OUT".scaler_242, "ADS_sca_2_OUT".scaler_243, "ADS_sca_2_OUT".scaler_244, "ADS_sca_2_OUT".scaler_245, "ADS_sca_2_OUT".scaler_246, "ADS_sca_2_OUT".scaler_247, "ADS_sca_2_OUT".scaler_248, "ADS_sca_2_OUT".scaler_249, "ADS_sca_2_OUT".scaler_250, "ADS_sca_2_OUT".scaler_251, "ADS_sca_2_OUT".scaler_252, "ADS_sca_2_OUT".scaler_253, "ADS_sca_2_OUT".scaler_254, "ADS_sca_2_OUT".scaler_255, "ADS_sca_2_OUT".scaler_256, "ADS_sca_2_OUT".scaler_257, "ADS_sca_2_OUT".scaler_258, "ADS_sca_2_OUT".scaler_259, "ADS_sca_2_OUT".scaler_260, "ADS_sca_2_OUT".scaler_261, "ADS_sca_2_OUT".scaler_262, "ADS_sca_2_OUT".scaler_263, "ADS_sca_2_OUT".scaler_264, "ADS_sca_2_OUT".scaler_265, "ADS_sca_2_OUT".scaler_266, "ADS_sca_2_OUT".scaler_267, "ADS_sca_2_OUT".scaler_268, "ADS_sca_2_OUT".scaler_269, "ADS_sca_2_OUT".scaler_270, "ADS_sca_2_OUT".scaler_271, "ADS_sca_2_OUT".scaler_272, "ADS_sca_2_OUT".scaler_273, "ADS_sca_2_OUT".scaler_274, "ADS_sca_2_OUT".scaler_275, "ADS_sca_2_OUT".scaler_276, "ADS_sca_2_OUT".scaler_277, "ADS_sca_2_OUT".scaler_278, "ADS_sca_2_OUT".scaler_279, "ADS_sca_2_OUT".scaler_280, "ADS_sca_2_OUT".scaler_281, "ADS_sca_2_OUT".scaler_282, "ADS_sca_2_OUT".scaler_283, "ADS_sca_2_OUT".scaler_284, "ADS_sca_2_OUT".scaler_285, "ADS_sca_2_OUT".scaler_286, "ADS_sca_2_OUT".scaler_287, "ADS_sca_2_OUT".scaler_288, "ADS_sca_2_OUT".scaler_289, "ADS_sca_2_OUT".scaler_290, "ADS_sca_2_OUT".scaler_291, "ADS_sca_2_OUT".scaler_292, "ADS_sca_2_OUT".scaler_293, "ADS_sca_2_OUT".scaler_294, "ADS_sca_2_OUT".scaler_295, "ADS_sca_2_OUT".scaler_296, "ADS_sca_2_OUT".scaler_297, "ADS_sca_2_OUT".scaler_298, "ADS_sca_2_OUT".scaler_299, "ADS_sca_2_OUT".scaler_300, "ADS_sca_2_OUT".scaler_301, "ADS_sca_2_OUT".scaler_302, "ADS_sca_2_OUT".scaler_303, "ADS_sca_2_OUT".scaler_304, "ADS_sca_2_OUT".scaler_305, "ADS_sca_2_OUT".scaler_306, "ADS_sca_2_OUT".scaler_307, "ADS_sca_2_OUT".scaler_308, "ADS_sca_2_OUT".scaler_309, "ADS_sca_2_OUT".scaler_310, "ADS_sca_2_OUT".scaler_311, "ADS_sca_2_OUT".scaler_312, "ADS_sca_2_OUT".scaler_313, "ADS_sca_2_OUT".scaler_314, "ADS_sca_2_OUT".scaler_315, "ADS_sca_2_OUT".scaler_316, "ADS_sca_2_OUT".scaler_317, "ADS_sca_2_OUT".scaler_318, "ADS_sca_2_OUT".scaler_319, "ADS_sca_2_OUT".scaler_320, "ADS_sca_2_OUT".scaler_321, "ADS_sca_2_OUT".scaler_322, "ADS_sca_2_OUT".scaler_323, "ADS_sca_2_OUT".scaler_324, "ADS_sca_2_OUT".scaler_325, "ADS_sca_2_OUT".scaler_326, "ADS_sca_2_OUT".scaler_327, "ADS_sca_2_OUT".scaler_328, "ADS_sca_2_OUT".scaler_329, "ADS_sca_2_OUT".scaler_330, "ADS_sca_2_OUT".scaler_331, "ADS_sca_2_OUT".scaler_332, "ADS_sca_2_OUT".scaler_333, "ADS_sca_2_OUT".scaler_334, "ADS_sca_2_OUT".scaler_335, "ADS_sca_2_OUT".scaler_336, "ADS_sca_2_OUT".scaler_337, "ADS_sca_2_OUT".scaler_338, "ADS_sca_2_OUT".scaler_339, "ADS_sca_2_OUT".scaler_340, "ADS_sca_2_OUT".scaler_341, "ADS_sca_2_OUT".scaler_342, "ADS_sca_2_OUT".scaler_343, "ADS_sca_2_OUT".scaler_344, "ADS_sca_2_OUT".scaler_345, "ADS_sca_2_OUT".scaler_346, "ADS_sca_2_OUT".scaler_347, "ADS_sca_2_OUT".scaler_348, "ADS_sca_2_OUT".scaler_349, "ADS_sca_2_OUT".scaler_350, "ADS_sca_2_OUT".scaler_351, "ADS_sca_2_OUT".scaler_352, "ADS_sca_2_OUT".scaler_353, "ADS_sca_2_OUT".scaler_354, "ADS_sca_2_OUT".scaler_355, "ADS_sca_2_OUT".scaler_356, "ADS_sca_2_OUT".scaler_357, "ADS_sca_2_OUT".scaler_358, "ADS_sca_2_OUT".scaler_359, "ADS_sca_2_OUT".scaler_360, "ADS_sca_2_OUT".scaler_361, "ADS_sca_2_OUT".scaler_362, "ADS_sca_2_OUT".scaler_363, "ADS_sca_2_OUT".scaler_364, "ADS_sca_2_OUT".scaler_365, "ADS_sca_2_OUT".scaler_366, "ADS_sca_2_OUT".scaler_367, "ADS_sca_2_OUT".scaler_368, "ADS_sca_2_OUT".scaler_369, "ADS_sca_2_OUT".scaler_370, "ADS_sca_2_OUT".scaler_371, "ADS_sca_2_OUT".scaler_372, "ADS_sca_2_OUT".scaler_373, "ADS_sca_2_OUT".scaler_374, "ADS_sca_2_OUT".scaler_375, "ADS_sca_2_OUT".scaler_376, "ADS_sca_2_OUT".scaler_377, "ADS_sca_2_OUT".scaler_378, "ADS_sca_2_OUT".scaler_379, "ADS_sca_2_OUT".scaler_380, "ADS_sca_2_OUT".scaler_381, "ADS_sca_2_OUT".scaler_382, "ADS_sca_2_OUT".scaler_383, "ADS_sca_2_OUT".scaler_384, "ADS_sca_2_OUT".scaler_385, "ADS_sca_2_OUT".scaler_386, "ADS_sca_2_OUT".scaler_387, "ADS_sca_2_OUT".scaler_388, "ADS_sca_2_OUT".scaler_389, "ADS_sca_2_OUT".scaler_390, "ADS_sca_2_OUT".scaler_391, "ADS_sca_2_OUT".scaler_392, "ADS_sca_2_OUT".scaler_393, "ADS_sca_2_OUT".scaler_394, "ADS_sca_2_OUT".scaler_395, "ADS_sca_2_OUT".scaler_396, "ADS_sca_2_OUT".scaler_397, "ADS_sca_2_OUT".scaler_398, "ADS_sca_2_OUT".scaler_399, "ADS_sca_2_OUT".scaler_400, "ADS_sca_2_OUT".scaler_401, "ADS_sca_2_OUT".scaler_402, "ADS_sca_2_OUT".scaler_403, "ADS_sca_2_OUT".scaler_404, "ADS_sca_2_OUT".scaler_405, "ADS_sca_2_OUT".scaler_406, "ADS_sca_2_OUT".scaler_407, "ADS_sca_2_OUT".scaler_408, "ADS_sca_2_OUT".scaler_409, "ADS_sca_2_OUT".scaler_410, "ADS_sca_2_OUT".scaler_411, "ADS_sca_2_OUT".scaler_412, "ADS_sca_2_OUT".scaler_413, "ADS_sca_2_OUT".scaler_414, "ADS_sca_2_OUT".scaler_415, "ADS_sca_2_OUT".scaler_416, "ADS_sca_2_OUT".scaler_417, "ADS_sca_2_OUT".scaler_418, "ADS_sca_2_OUT".scaler_419, "ADS_sca_2_OUT".scaler_420, "ADS_sca_2_OUT".scaler_421, "ADS_sca_2_OUT".scaler_422, "ADS_sca_2_OUT".scaler_423, "ADS_sca_2_OUT".scaler_424, "ADS_sca_2_OUT".scaler_425, "ADS_sca_2_OUT".scaler_426, "ADS_sca_2_OUT".scaler_427, "ADS_sca_2_OUT".scaler_428, "ADS_sca_2_OUT".scaler_429, "ADS_sca_2_OUT".scaler_430, "ADS_sca_2_OUT".scaler_431, "ADS_sca_2_OUT".scaler_432, "ADS_sca_2_OUT".scaler_433, "ADS_sca_2_OUT".scaler_434, "ADS_sca_2_OUT".scaler_435, "ADS_sca_2_OUT".scaler_436, "ADS_sca_2_OUT".scaler_437, "ADS_sca_2_OUT".scaler_438, "ADS_sca_2_OUT".scaler_439, "ADS_sca_2_OUT".scaler_440, "ADS_sca_2_OUT".scaler_441, "ADS_sca_2_OUT".scaler_442, "ADS_sca_2_OUT".scaler_443, "ADS_sca_2_OUT".scaler_444, "ADS_sca_2_OUT".scaler_445, "ADS_sca_2_OUT".scaler_446, "ADS_sca_2_OUT".scaler_447, "ADS_sca_2_OUT".scaler_448, "ADS_sca_2_OUT".scaler_449, "ADS_sca_2_OUT".scaler_450, "ADS_sca_2_OUT".scaler_451, "ADS_sca_2_OUT".scaler_452, "ADS_sca_2_OUT".scaler_453, "ADS_sca_2_OUT".scaler_454, "ADS_sca_2_OUT".scaler_455, "ADS_sca_2_OUT".scaler_456, "ADS_sca_2_OUT".scaler_457, "ADS_sca_2_OUT".scaler_458, "ADS_sca_2_OUT".scaler_459, "ADS_sca_2_OUT".scaler_460, "ADS_sca_2_OUT".scaler_461, "ADS_sca_2_OUT".scaler_462, "ADS_sca_2_OUT".scaler_463, "ADS_sca_2_OUT".scaler_464, "ADS_sca_2_OUT".scaler_465, "ADS_sca_2_OUT".scaler_466, "ADS_sca_2_OUT".scaler_467, "ADS_sca_2_OUT".scaler_468, "ADS_sca_2_OUT".scaler_469, "ADS_sca_2_OUT".scaler_470, "ADS_sca_2_OUT".scaler_471, "ADS_sca_2_OUT".scaler_472, "ADS_sca_2_OUT".scaler_473, "ADS_sca_2_OUT".scaler_474, "ADS_sca_2_OUT".scaler_475, "ADS_sca_2_OUT".scaler_476, "ADS_sca_2_OUT".scaler_477, "ADS_sca_2_OUT".scaler_478, "ADS_sca_2_OUT".scaler_479, "ADS_sca_2_OUT".scaler_480, "ADS_sca_2_OUT".scaler_481, "ADS_sca_2_OUT".scaler_482, "ADS_sca_2_OUT".scaler_483, "ADS_sca_2_OUT".scaler_484, "ADS_sca_2_OUT".scaler_485, "ADS_sca_2_OUT".scaler_486, "ADS_sca_2_OUT".scaler_487, "ADS_sca_2_OUT".scaler_488, "ADS_sca_2_OUT".scaler_489, "ADS_sca_2_OUT".scaler_490, "ADS_sca_2_OUT".scaler_491, "ADS_sca_2_OUT".scaler_492, "ADS_sca_2_OUT".scaler_493, "ADS_sca_2_OUT".scaler_494, "ADS_sca_2_OUT".scaler_495, "ADS_sca_2_OUT".scaler_496, "ADS_sca_2_OUT".scaler_497, "ADS_sca_2_OUT".scaler_498, "ADS_sca_2_OUT".scaler_499, "ADS_sca_2_OUT".scaler_500, "ADS_sca_2_OUT".scaler_501 
FROM (SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", (CAST("ADS_imp_1_OUT".impter_2 AS BINARY_DOUBLE) - 0.10810245375646362) / 0.9793817679782103 AS scaler_2, (CAST("ADS_imp_1_OUT".impter_3 AS BINARY_DOUBLE) - 0.040042372892287084) / 1.0023891813162529 AS scaler_3, (CAST("ADS_imp_1_OUT".impter_4 AS BINARY_DOUBLE) - -0.07667364732662786) / 0.9900776238894332 AS scaler_4, (CAST("ADS_imp_1_OUT".impter_5 AS BINARY_DOUBLE) - 0.17588592419877258) / 5.560255893599715 AS scaler_5, (CAST("ADS_imp_1_OUT".impter_6 AS BINARY_DOUBLE) - 0.02926169026463611) / 1.0394964701962466 AS scaler_6, (CAST("ADS_imp_1_OUT".impter_7 AS BINARY_DOUBLE) - -0.00904400654098767) / 0.9961880424548265 AS scaler_7, (CAST("ADS_imp_1_OUT".impter_8 AS BINARY_DOUBLE) - 0.02021641814123045) / 1.0128701222372198 AS scaler_8, (CAST("ADS_imp_1_OUT".impter_9 AS BINARY_DOUBLE) - -0.021740866363558604) / 0.9982204224505042 AS scaler_9, (CAST("ADS_imp_1_OUT".impter_10 AS BINARY_DOUBLE) - 0.12136863686872651) / 5.9946377958756045 AS scaler_10, (CAST("ADS_imp_1_OUT".impter_11 AS BINARY_DOUBLE) - -0.009621207715304118) / 1.0301565996554682 AS scaler_11, (CAST("ADS_imp_1_OUT".impter_12 AS BINARY_DOUBLE) - -0.0017282210866736356) / 0.981399050431275 AS scaler_12, (CAST("ADS_imp_1_OUT".impter_13 AS BINARY_DOUBLE) - -0.017782065935332218) / 1.0111944630304806 AS scaler_13, (CAST("ADS_imp_1_OUT".impter_14 AS BINARY_DOUBLE) - 0.03226275015550329) / 0.979628929805027 AS scaler_14, (CAST("ADS_imp_1_OUT".impter_15 AS BINARY_DOUBLE) - -0.0014825533746410664) / 0.9934430866044156 AS scaler_15, (CAST("ADS_imp_1_OUT".impter_16 AS BINARY_DOUBLE) - 0.06164712316198218) / 1.0212164409644986 AS scaler_16, (CAST("ADS_imp_1_OUT".impter_17 AS BINARY_DOUBLE) - 0.02754670267716649) / 1.0166324015399968 AS scaler_17, (CAST("ADS_imp_1_OUT".impter_18 AS BINARY_DOUBLE) - 0.08064319713194991) / 5.771736825789889 AS scaler_18, (CAST("ADS_imp_1_OUT".impter_19 AS BINARY_DOUBLE) - -0.011498650117894155) / 1.0134290863495095 AS scaler_19, (CAST("ADS_imp_1_OUT".impter_20 AS BINARY_DOUBLE) - 0.31890266993969374) / 5.708228988759961 AS scaler_20, (CAST("ADS_imp_1_OUT".impter_21 AS BINARY_DOUBLE) - -0.00022777424626326773) / 0.9933278547260863 AS scaler_21, (CAST("ADS_imp_1_OUT".impter_22 AS BINARY_DOUBLE) - 0.24588258651573852) / 6.039060090290538 AS scaler_22, (CAST("ADS_imp_1_OUT".impter_23 AS BINARY_DOUBLE) - -0.008717075180818528) / 0.9761125096364057 AS scaler_23, (CAST("ADS_imp_1_OUT".impter_24 AS BINARY_DOUBLE) - 0.0053072366770978985) / 0.9683216012472358 AS scaler_24, (CAST("ADS_imp_1_OUT".impter_25 AS BINARY_DOUBLE) - -0.014763237855175493) / 0.9851551177343002 AS scaler_25, (CAST("ADS_imp_1_OUT".impter_26 AS BINARY_DOUBLE) - -0.023154438774995047) / 1.0034590713202722 AS scaler_26, (CAST("ADS_imp_1_OUT".impter_27 AS BINARY_DOUBLE) - -0.12239207011675045) / 5.777017450648698 AS scaler_27, (CAST("ADS_imp_1_OUT".impter_28 AS BINARY_DOUBLE) - 0.020535611934405496) / 0.9878048079305166 AS scaler_28, (CAST("ADS_imp_1_OUT".impter_29 AS BINARY_DOUBLE) - 0.006055843023249926) / 0.9973455621257931 AS scaler_29, (CAST("ADS_imp_1_OUT".impter_30 AS BINARY_DOUBLE) - -0.02283750315483421) / 0.9862507261223278 AS scaler_30, (CAST("ADS_imp_1_OUT".impter_31 AS BINARY_DOUBLE) - 0.023985609638350506) / 0.9937627841184585 AS scaler_31, (CAST("ADS_imp_1_OUT".impter_32 AS BINARY_DOUBLE) - 0.008119293552803313) / 0.9954522177860405 AS scaler_32, (CAST("ADS_imp_1_OUT".impter_33 AS BINARY_DOUBLE) - 0.027089596569202946) / 1.0239371071038705 AS scaler_33, (CAST("ADS_imp_1_OUT".impter_34 AS BINARY_DOUBLE) - -0.06055225058050742) / 1.0104633173004076 AS scaler_34, (CAST("ADS_imp_1_OUT".impter_35 AS BINARY_DOUBLE) - -0.024424868791331697) / 0.9733566902991094 AS scaler_35, (CAST("ADS_imp_1_OUT".impter_36 AS BINARY_DOUBLE) - 0.012336464422653204) / 0.9893886329833442 AS scaler_36, (CAST("ADS_imp_1_OUT".impter_37 AS BINARY_DOUBLE) - -0.03733185453369615) / 0.9891003655260362 AS scaler_37, (CAST("ADS_imp_1_OUT".impter_38 AS BINARY_DOUBLE) - -0.01163301006213858) / 0.9677509701652444 AS scaler_38, (CAST("ADS_imp_1_OUT".impter_39 AS BINARY_DOUBLE) - -0.05102972508859019) / 1.0446002285287346 AS scaler_39, (CAST("ADS_imp_1_OUT".impter_40 AS BINARY_DOUBLE) - 0.0724619853931901) / 0.9433887406048981 AS scaler_40, (CAST("ADS_imp_1_OUT".impter_41 AS BINARY_DOUBLE) - 0.02873322955169374) / 0.9997034238642181 AS scaler_41, (CAST("ADS_imp_1_OUT".impter_42 AS BINARY_DOUBLE) - -0.0468030521847972) / 0.9799565417954935 AS scaler_42, (CAST("ADS_imp_1_OUT".impter_43 AS BINARY_DOUBLE) - 0.024222315050048744) / 0.977961503101405 AS scaler_43, (CAST("ADS_imp_1_OUT".impter_44 AS BINARY_DOUBLE) - 0.01149556673107005) / 5.54835190391683 AS scaler_44, (CAST("ADS_imp_1_OUT".impter_45 AS BINARY_DOUBLE) - -0.46581882386282575) / 5.894617213165279 AS scaler_45, (CAST("ADS_imp_1_OUT".impter_46 AS BINARY_DOUBLE) - -0.0013382860297555803) / 1.0219544648922987 AS scaler_46, (CAST("ADS_imp_1_OUT".impter_47 AS BINARY_DOUBLE) - -0.008602411981840778) / 0.931663415098126 AS scaler_47, (CAST("ADS_imp_1_OUT".impter_48 AS BINARY_DOUBLE) - -0.009965212302201201) / 1.0168312431071238 AS scaler_48, (CAST("ADS_imp_1_OUT".impter_49 AS BINARY_DOUBLE) - -0.03978485158208147) / 0.9423447496201277 AS scaler_49, (CAST("ADS_imp_1_OUT".impter_50 AS BINARY_DOUBLE) - 0.007027179196660041) / 1.0312559989326386 AS scaler_50, (CAST("ADS_imp_1_OUT".impter_51 AS BINARY_DOUBLE) - -0.01982980508470468) / 0.9800172715083906 AS scaler_51, (CAST("ADS_imp_1_OUT".impter_52 AS BINARY_DOUBLE) - -0.04505595017989205) / 1.006703914399541 AS scaler_52, (CAST("ADS_imp_1_OUT".impter_53 AS BINARY_DOUBLE) - -0.045447760217128444) / 1.0007330092630027 AS scaler_53, (CAST("ADS_imp_1_OUT".impter_54 AS BINARY_DOUBLE) - 0.037832771618739616) / 1.0202020707470842 AS scaler_54, (CAST("ADS_imp_1_OUT".impter_55 AS BINARY_DOUBLE) - -0.061624599074911364) / 0.9839597841021345 AS scaler_55, (CAST("ADS_imp_1_OUT".impter_56 AS BINARY_DOUBLE) - 0.07625111583055796) / 1.0202381673398924 AS scaler_56, (CAST("ADS_imp_1_OUT".impter_57 AS BINARY_DOUBLE) - -0.027271537635613834) / 0.9901971057770143 AS scaler_57, (CAST("ADS_imp_1_OUT".impter_58 AS BINARY_DOUBLE) - 0.08658875419996898) / 1.0341490471974248 AS scaler_58, (CAST("ADS_imp_1_OUT".impter_59 AS BINARY_DOUBLE) - 0.0999871472844467) / 1.0320762955753215 AS scaler_59, (CAST("ADS_imp_1_OUT".impter_60 AS BINARY_DOUBLE) - -0.007447998234187981) / 0.98028942569617 AS scaler_60, (CAST("ADS_imp_1_OUT".impter_61 AS BINARY_DOUBLE) - 0.0005691476004520007) / 0.962499434030872 AS scaler_61, (CAST("ADS_imp_1_OUT".impter_62 AS BINARY_DOUBLE) - 0.007052612183486737) / 0.9952316581074087 AS scaler_62, (CAST("ADS_imp_1_OUT".impter_63 AS BINARY_DOUBLE) - -0.07298857610906591) / 1.0117239365465656 AS scaler_63, (CAST("ADS_imp_1_OUT".impter_64 AS BINARY_DOUBLE) - 0.007257283737326912) / 0.9614049921549974 AS scaler_64, (CAST("ADS_imp_1_OUT".impter_65 AS BINARY_DOUBLE) - -0.01499281527733551) / 0.9856230299709878 AS scaler_65, (CAST("ADS_imp_1_OUT".impter_66 AS BINARY_DOUBLE) - 0.1504932184478646) / 6.139566226432819 AS scaler_66, (CAST("ADS_imp_1_OUT".impter_67 AS BINARY_DOUBLE) - -0.34139964395628075) / 5.589924447035164 AS scaler_67, (CAST("ADS_imp_1_OUT".impter_68 AS BINARY_DOUBLE) - 0.044769898693156215) / 0.9858338717221913 AS scaler_68, (CAST("ADS_imp_1_OUT".impter_69 AS BINARY_DOUBLE) - -0.06740805909718733) / 1.0160492930707818 AS scaler_69, (CAST("ADS_imp_1_OUT".impter_70 AS BINARY_DOUBLE) - 0.011827724290967036) / 0.9920309378976953 AS scaler_70, (CAST("ADS_imp_1_OUT".impter_71 AS BINARY_DOUBLE) - 0.04511965476174756) / 1.0134689242858836 AS scaler_71, (CAST("ADS_imp_1_OUT".impter_72 AS BINARY_DOUBLE) - -0.005725960546688403) / 0.9742042745897078 AS scaler_72, (CAST("ADS_imp_1_OUT".impter_73 AS BINARY_DOUBLE) - -0.45906874360950467) / 6.052269381209856 AS scaler_73, (CAST("ADS_imp_1_OUT".impter_74 AS BINARY_DOUBLE) - -0.4029233461203958) / 5.771992694521305 AS scaler_74, (CAST("ADS_imp_1_OUT".impter_75 AS BINARY_DOUBLE) - -0.01983348240532154) / 0.9849514335826905 AS scaler_75, (CAST("ADS_imp_1_OUT".impter_76 AS BINARY_DOUBLE) - -0.03762876790351029) / 0.9982596731767271 AS scaler_76, (CAST("ADS_imp_1_OUT".impter_77 AS BINARY_DOUBLE) - 0.0014482025177064296) / 0.9781075851188674 AS scaler_77, (CAST("ADS_imp_1_OUT".impter_78 AS BINARY_DOUBLE) - -0.009126373209438378) / 0.9875838602657921 AS scaler_78, (CAST("ADS_imp_1_OUT".impter_79 AS BINARY_DOUBLE) - -0.004847879746676399) / 1.0007261707872959 AS scaler_79, (CAST("ADS_imp_1_OUT".impter_80 AS BINARY_DOUBLE) - 0.0003242960082649739) / 1.0081288330481553 AS scaler_80, (CAST("ADS_imp_1_OUT".impter_81 AS BINARY_DOUBLE) - -0.030222670037465243) / 1.0126353893899334 AS scaler_81, (CAST("ADS_imp_1_OUT".impter_82 AS BINARY_DOUBLE) - 0.00597438906398475) / 0.997574121799789 AS scaler_82, (CAST("ADS_imp_1_OUT".impter_83 AS BINARY_DOUBLE) - 0.006442151047769896) / 0.9692977412695478 AS scaler_83, (CAST("ADS_imp_1_OUT".impter_84 AS BINARY_DOUBLE) - 0.06674583942705845) / 0.9650616611467926 AS scaler_84, (CAST("ADS_imp_1_OUT".impter_85 AS BINARY_DOUBLE) - 0.07788312942179253) / 1.0502476441331448 AS scaler_85, (CAST("ADS_imp_1_OUT".impter_86 AS BINARY_DOUBLE) - 0.04734384734963352) / 0.9922221019778982 AS scaler_86, (CAST("ADS_imp_1_OUT".impter_87 AS BINARY_DOUBLE) - -0.008706507745982245) / 1.0281463379538616 AS scaler_87, (CAST("ADS_imp_1_OUT".impter_88 AS BINARY_DOUBLE) - 0.048010462132819065) / 1.0219516364531134 AS scaler_88, (CAST("ADS_imp_1_OUT".impter_89 AS BINARY_DOUBLE) - -0.015721233574226466) / 0.986060770131844 AS scaler_89, (CAST("ADS_imp_1_OUT".impter_90 AS BINARY_DOUBLE) - 0.029859590983661574) / 0.9917320004086767 AS scaler_90, (CAST("ADS_imp_1_OUT".impter_91 AS BINARY_DOUBLE) - 0.05432072236762381) / 1.0137096750823185 AS scaler_91, (CAST("ADS_imp_1_OUT".impter_92 AS BINARY_DOUBLE) - -0.01029209788232909) / 1.000757192176457 AS scaler_92, (CAST("ADS_imp_1_OUT".impter_93 AS BINARY_DOUBLE) - -0.057667586642934685) / 5.94408516351358 AS scaler_93, (CAST("ADS_imp_1_OUT".impter_94 AS BINARY_DOUBLE) - 0.010705496096094396) / 1.0092360847471284 AS scaler_94, (CAST("ADS_imp_1_OUT".impter_95 AS BINARY_DOUBLE) - 0.07155562158168) / 0.983479044147119 AS scaler_95, (CAST("ADS_imp_1_OUT".impter_96 AS BINARY_DOUBLE) - 0.012567881232469623) / 1.0041791065815686 AS scaler_96, (CAST("ADS_imp_1_OUT".impter_97 AS BINARY_DOUBLE) - 0.013515801306018876) / 1.0171521249734952 AS scaler_97, (CAST("ADS_imp_1_OUT".impter_98 AS BINARY_DOUBLE) - -0.03144133874056725) / 0.9643293110743213 AS scaler_98, (CAST("ADS_imp_1_OUT".impter_99 AS BINARY_DOUBLE) - 0.04347042885615023) / 1.0350471688640486 AS scaler_99, (CAST("ADS_imp_1_OUT".impter_100 AS BINARY_DOUBLE) - 0.06271561958724896) / 0.9582071956389678 AS scaler_100, (CAST("ADS_imp_1_OUT".impter_101 AS BINARY_DOUBLE) - 0.05756441101485498) / 1.016873068211695 AS scaler_101, (CAST("ADS_imp_1_OUT".impter_102 AS BINARY_DOUBLE) - 0.08328088835981105) / 5.923497571865014 AS scaler_102, (CAST("ADS_imp_1_OUT".impter_103 AS BINARY_DOUBLE) - 0.027342821102590696) / 1.009759865874761 AS scaler_103, (CAST("ADS_imp_1_OUT".impter_104 AS BINARY_DOUBLE) - -0.45823161485829694) / 5.947446910796636 AS scaler_104, (CAST("ADS_imp_1_OUT".impter_105 AS BINARY_DOUBLE) - -0.0574871655764397) / 0.9558665112492322 AS scaler_105, (CAST("ADS_imp_1_OUT".impter_106 AS BINARY_DOUBLE) - -0.04439086595851878) / 1.0257189382967924 AS scaler_106, (CAST("ADS_imp_1_OUT".impter_107 AS BINARY_DOUBLE) - 0.02144592469206838) / 0.9895401881723541 AS scaler_107, (CAST("ADS_imp_1_OUT".impter_108 AS BINARY_DOUBLE) - 0.11209373860993643) / 5.749503930446186 AS scaler_108, (CAST("ADS_imp_1_OUT".impter_109 AS BINARY_DOUBLE) - 0.020021880427962078) / 1.003919278192992 AS scaler_109, (CAST("ADS_imp_1_OUT".impter_110 AS BINARY_DOUBLE) - -0.009743329217515511) / 0.9919583243676908 AS scaler_110, (CAST("ADS_imp_1_OUT".impter_111 AS BINARY_DOUBLE) - 0.4786622270719938) / 5.58775739405435 AS scaler_111, (CAST("ADS_imp_1_OUT".impter_112 AS BINARY_DOUBLE) - 0.02944493462807616) / 1.0248871232604297 AS scaler_112, (CAST("ADS_imp_1_OUT".impter_113 AS BINARY_DOUBLE) - -0.00310096676730144) / 1.0254001437004343 AS scaler_113, (CAST("ADS_imp_1_OUT".impter_114 AS BINARY_DOUBLE) - 0.0231371409575344) / 1.0664587771246052 AS scaler_114, (CAST("ADS_imp_1_OUT".impter_115 AS BINARY_DOUBLE) - -0.04815066967587055) / 1.018510444629956 AS scaler_115, (CAST("ADS_imp_1_OUT".impter_116 AS BINARY_DOUBLE) - 0.025111413866439537) / 1.0045413648024208 AS scaler_116, (CAST("ADS_imp_1_OUT".impter_117 AS BINARY_DOUBLE) - 0.0021133311116955213) / 0.9757575746423808 AS scaler_117, (CAST("ADS_imp_1_OUT".impter_118 AS BINARY_DOUBLE) - 0.034947174142157644) / 0.9975889189566856 AS scaler_118, (CAST("ADS_imp_1_OUT".impter_119 AS BINARY_DOUBLE) - -0.05606347652620213) / 0.9928987912016847 AS scaler_119, (CAST("ADS_imp_1_OUT".impter_120 AS BINARY_DOUBLE) - -0.023812528369921485) / 1.0013009070011438 AS scaler_120, (CAST("ADS_imp_1_OUT".impter_121 AS BINARY_DOUBLE) - -0.042073637845818246) / 0.9912144880843266 AS scaler_121, (CAST("ADS_imp_1_OUT".impter_122 AS BINARY_DOUBLE) - 0.007882510288965947) / 1.0172369989511076 AS scaler_122, (CAST("ADS_imp_1_OUT".impter_123 AS BINARY_DOUBLE) - -0.02733468989970973) / 1.01392267981462 AS scaler_123, (CAST("ADS_imp_1_OUT".impter_124 AS BINARY_DOUBLE) - -0.6701750904403835) / 6.145313938495119 AS scaler_124, (CAST("ADS_imp_1_OUT".impter_125 AS BINARY_DOUBLE) - -0.04044317104909807) / 0.9609996023909663 AS scaler_125, (CAST("ADS_imp_1_OUT".impter_126 AS BINARY_DOUBLE) - -0.00837516585592746) / 0.9754352444783934 AS scaler_126, (CAST("ADS_imp_1_OUT".impter_127 AS BINARY_DOUBLE) - -0.005344367193538407) / 1.0148601448564643 AS scaler_127, (CAST("ADS_imp_1_OUT".impter_128 AS BINARY_DOUBLE) - -0.009191225939401346) / 0.982128874729729 AS scaler_128, (CAST("ADS_imp_1_OUT".impter_129 AS BINARY_DOUBLE) - -0.004068573508204202) / 0.9971242820519521 AS scaler_129, (CAST("ADS_imp_1_OUT".impter_130 AS BINARY_DOUBLE) - -0.030267877751773992) / 0.96864155853453 AS scaler_130, (CAST("ADS_imp_1_OUT".impter_131 AS BINARY_DOUBLE) - 0.17410306271063888) / 5.789756786227785 AS scaler_131, (CAST("ADS_imp_1_OUT".impter_132 AS BINARY_DOUBLE) - -0.012642941998284607) / 0.9922148064395657 AS scaler_132, (CAST("ADS_imp_1_OUT".impter_133 AS BINARY_DOUBLE) - 0.01749739797543971) / 0.9787286398774294 AS scaler_133, (CAST("ADS_imp_1_OUT".impter_134 AS BINARY_DOUBLE) - 0.5426783595611434) / 5.907808207908198 AS scaler_134, (CAST("ADS_imp_1_OUT".impter_135 AS BINARY_DOUBLE) - -0.5946970819130108) / 6.0784028515757305 AS scaler_135, (CAST("ADS_imp_1_OUT".impter_136 AS BINARY_DOUBLE) - -0.02934504234656094) / 1.0091339941012132 AS scaler_136, (CAST("ADS_imp_1_OUT".impter_137 AS BINARY_DOUBLE) - 0.06552557763413538) / 6.095951331803264 AS scaler_137, (CAST("ADS_imp_1_OUT".impter_138 AS BINARY_DOUBLE) - -0.05569025110062092) / 0.9610638640494519 AS scaler_138, (CAST("ADS_imp_1_OUT".impter_139 AS BINARY_DOUBLE) - 0.023191171882599493) / 1.0128603239940146 AS scaler_139, (CAST("ADS_imp_1_OUT".impter_140 AS BINARY_DOUBLE) - -0.05295059390165566) / 0.9704481251340982 AS scaler_140, (CAST("ADS_imp_1_OUT".impter_141 AS BINARY_DOUBLE) - 0.033509246297397904) / 1.0152086117159598 AS scaler_141, (CAST("ADS_imp_1_OUT".impter_142 AS BINARY_DOUBLE) - -0.04155471151345872) / 1.0275865673837457 AS scaler_142, (CAST("ADS_imp_1_OUT".impter_143 AS BINARY_DOUBLE) - -0.6634336506604639) / 5.8591587401192315 AS scaler_143, (CAST("ADS_imp_1_OUT".impter_144 AS BINARY_DOUBLE) - -0.5573588681497673) / 5.822804930738725 AS scaler_144, (CAST("ADS_imp_1_OUT".impter_145 AS BINARY_DOUBLE) - 0.0441240830479543) / 0.9942937489948139 AS scaler_145, (CAST("ADS_imp_1_OUT".impter_146 AS BINARY_DOUBLE) - -0.0032026430582909036) / 1.0088252648820826 AS scaler_146, (CAST("ADS_imp_1_OUT".impter_147 AS BINARY_DOUBLE) - 0.0547961032530105) / 1.0250292567069976 AS scaler_147, (CAST("ADS_imp_1_OUT".impter_148 AS BINARY_DOUBLE) - -0.0570190089317311) / 1.0233221648265598 AS scaler_148, (CAST("ADS_imp_1_OUT".impter_149 AS BINARY_DOUBLE) - -0.05068123758307288) / 1.0059501057644102 AS scaler_149, (CAST("ADS_imp_1_OUT".impter_150 AS BINARY_DOUBLE) - 0.04963772213165472) / 5.707884171857318 AS scaler_150, (CAST("ADS_imp_1_OUT".impter_151 AS BINARY_DOUBLE) - -0.0053902063922270736) / 0.9733282006907008 AS scaler_151, (CAST("ADS_imp_1_OUT".impter_152 AS BINARY_DOUBLE) - -0.06888968948833549) / 1.0357034285112359 AS scaler_152, (CAST("ADS_imp_1_OUT".impter_153 AS BINARY_DOUBLE) - -0.016131263076271454) / 1.0352933940220925 AS scaler_153, (CAST("ADS_imp_1_OUT".impter_154 AS BINARY_DOUBLE) - -0.3673160108448531) / 5.831014219549596 AS scaler_154, (CAST("ADS_imp_1_OUT".impter_155 AS BINARY_DOUBLE) - 0.055182003778661885) / 5.684243359483168 AS scaler_155, (CAST("ADS_imp_1_OUT".impter_156 AS BINARY_DOUBLE) - 0.03906491494486876) / 0.9983722576273872 AS scaler_156, (CAST("ADS_imp_1_OUT".impter_157 AS BINARY_DOUBLE) - -0.018774913038090556) / 0.981565987462681 AS scaler_157, (CAST("ADS_imp_1_OUT".impter_158 AS BINARY_DOUBLE) - 0.04167563251378332) / 5.5897226143974885 AS scaler_158, (CAST("ADS_imp_1_OUT".impter_159 AS BINARY_DOUBLE) - -0.014464200228668327) / 1.0647700745180197 AS scaler_159, (CAST("ADS_imp_1_OUT".impter_160 AS BINARY_DOUBLE) - 0.001498972159727102) / 1.0346863623514742 AS scaler_160, (CAST("ADS_imp_1_OUT".impter_161 AS BINARY_DOUBLE) - -0.018229772297973595) / 1.0422072170743273 AS scaler_161, (CAST("ADS_imp_1_OUT".impter_162 AS BINARY_DOUBLE) - -0.044371023327894055) / 1.0176258203618869 AS scaler_162, (CAST("ADS_imp_1_OUT".impter_163 AS BINARY_DOUBLE) - 0.003260044680277718) / 1.0389488041486905 AS scaler_163, (CAST("ADS_imp_1_OUT".impter_164 AS BINARY_DOUBLE) - 0.04743398414161841) / 0.9782204833572162 AS scaler_164, (CAST("ADS_imp_1_OUT".impter_165 AS BINARY_DOUBLE) - 0.02952107505742563) / 1.0089690347262386 AS scaler_165, (CAST("ADS_imp_1_OUT".impter_166 AS BINARY_DOUBLE) - 0.039029822514854) / 1.0121176151207434 AS scaler_166, (CAST("ADS_imp_1_OUT".impter_167 AS BINARY_DOUBLE) - 0.33233879962749624) / 5.744346296798411 AS scaler_167, (CAST("ADS_imp_1_OUT".impter_168 AS BINARY_DOUBLE) - -0.030838711525630415) / 0.9705290180206547 AS scaler_168, (CAST("ADS_imp_1_OUT".impter_169 AS BINARY_DOUBLE) - 0.053457495179036106) / 1.0248755705105466 AS scaler_169, (CAST("ADS_imp_1_OUT".impter_170 AS BINARY_DOUBLE) - 0.06334783178164666) / 0.9775079956110175 AS scaler_170, (CAST("ADS_imp_1_OUT".impter_171 AS BINARY_DOUBLE) - -0.015185631962267647) / 0.9717858688863088 AS scaler_171, (CAST("ADS_imp_1_OUT".impter_172 AS BINARY_DOUBLE) - -0.0373186897788836) / 0.999257264463164 AS scaler_172, (CAST("ADS_imp_1_OUT".impter_173 AS BINARY_DOUBLE) - 0.058926161621590305) / 0.9602458384408017 AS scaler_173, (CAST("ADS_imp_1_OUT".impter_174 AS BINARY_DOUBLE) - 9.69895410212665e-05) / 1.0063812902851987 AS scaler_174, (CAST("ADS_imp_1_OUT".impter_175 AS BINARY_DOUBLE) - 0.023780298476686824) / 1.0186861099526499 AS scaler_175, (CAST("ADS_imp_1_OUT".impter_176 AS BINARY_DOUBLE) - 0.021640308005590803) / 0.967390860423614 AS scaler_176, (CAST("ADS_imp_1_OUT".impter_177 AS BINARY_DOUBLE) - 0.02609411025064558) / 1.019952052097139 AS scaler_177, (CAST("ADS_imp_1_OUT".impter_178 AS BINARY_DOUBLE) - 0.053659812775327234) / 1.0317585905842375 AS scaler_178, (CAST("ADS_imp_1_OUT".impter_179 AS BINARY_DOUBLE) - 0.02312075671447861) / 0.9624262389790543 AS scaler_179, (CAST("ADS_imp_1_OUT".impter_180 AS BINARY_DOUBLE) - 0.08189652549389312) / 1.008828045220763 AS scaler_180, (CAST("ADS_imp_1_OUT".impter_181 AS BINARY_DOUBLE) - -0.28662694866746835) / 6.172920864518475 AS scaler_181, (CAST("ADS_imp_1_OUT".impter_182 AS BINARY_DOUBLE) - -0.06816976745830143) / 1.006696859076202 AS scaler_182, (CAST("ADS_imp_1_OUT".impter_183 AS BINARY_DOUBLE) - -0.0288394136395886) / 1.0123612493717167 AS scaler_183, (CAST("ADS_imp_1_OUT".impter_184 AS BINARY_DOUBLE) - 0.030475929720363698) / 0.971249477659825 AS scaler_184, (CAST("ADS_imp_1_OUT".impter_185 AS BINARY_DOUBLE) - -0.9321092506061046) / 5.959856975617778 AS scaler_185, (CAST("ADS_imp_1_OUT".impter_186 AS BINARY_DOUBLE) - -0.005783297854668443) / 0.9729868220424777 AS scaler_186, (CAST("ADS_imp_1_OUT".impter_187 AS BINARY_DOUBLE) - -0.6842779545480162) / 5.6462061209635666 AS scaler_187, (CAST("ADS_imp_1_OUT".impter_188 AS BINARY_DOUBLE) - -0.035868681753580677) / 0.9515600028160798 AS scaler_188, (CAST("ADS_imp_1_OUT".impter_189 AS BINARY_DOUBLE) - 0.37446820466554537) / 6.045200162892497 AS scaler_189, (CAST("ADS_imp_1_OUT".impter_190 AS BINARY_DOUBLE) - 0.03710250301413846) / 1.0283479885398354 AS scaler_190, (CAST("ADS_imp_1_OUT".impter_191 AS BINARY_DOUBLE) - -0.1405646996029281) / 6.021540164862222 AS scaler_191, (CAST("ADS_imp_1_OUT".impter_192 AS BINARY_DOUBLE) - -0.008242263620478222) / 1.016675618095213 AS scaler_192, (CAST("ADS_imp_1_OUT".impter_193 AS BINARY_DOUBLE) - 0.23469193009627595) / 5.601102541825846 AS scaler_193, (CAST("ADS_imp_1_OUT".impter_194 AS BINARY_DOUBLE) - -0.04853360559010945) / 0.9850160080809853 AS scaler_194, (CAST("ADS_imp_1_OUT".impter_195 AS BINARY_DOUBLE) - -0.29107017412914993) / 5.586860950904685 AS scaler_195, (CAST("ADS_imp_1_OUT".impter_196 AS BINARY_DOUBLE) - 0.06554945522577102) / 0.9914300814275504 AS scaler_196, (CAST("ADS_imp_1_OUT".impter_197 AS BINARY_DOUBLE) - 0.03415746968907192) / 0.9939759564479547 AS scaler_197, (CAST("ADS_imp_1_OUT".impter_198 AS BINARY_DOUBLE) - -1.0112490880861227) / 5.782797574194705 AS scaler_198, (CAST("ADS_imp_1_OUT".impter_199 AS BINARY_DOUBLE) - 0.4496849630728245) / 5.837154258847168 AS scaler_199, (CAST("ADS_imp_1_OUT".impter_200 AS BINARY_DOUBLE) - 0.032026535978956015) / 0.9803145829814145 AS scaler_200, (CAST("ADS_imp_1_OUT".impter_201 AS BINARY_DOUBLE) - 0.000929134812353008) / 0.9966914430821684 AS scaler_201, (CAST("ADS_imp_1_OUT".impter_202 AS BINARY_DOUBLE) - 0.013717912018418882) / 1.0042933647333387 AS scaler_202, (CAST("ADS_imp_1_OUT".impter_203 AS BINARY_DOUBLE) - -0.025517677160104602) / 1.023007838139583 AS scaler_203, (CAST("ADS_imp_1_OUT".impter_204 AS BINARY_DOUBLE) - 0.008684033616587546) / 1.0055749498115065 AS scaler_204, (CAST("ADS_imp_1_OUT".impter_205 AS BINARY_DOUBLE) - 0.013537249806385316) / 0.9615196489451362 AS scaler_205, (CAST("ADS_imp_1_OUT".impter_206 AS BINARY_DOUBLE) - -0.0230268828473152) / 0.9775483835928382 AS scaler_206, (CAST("ADS_imp_1_OUT".impter_207 AS BINARY_DOUBLE) - 0.03589117923846176) / 0.9863064503789496 AS scaler_207, (CAST("ADS_imp_1_OUT".impter_208 AS BINARY_DOUBLE) - -0.011430934569701108) / 1.0568818033144645 AS scaler_208, (CAST("ADS_imp_1_OUT".impter_209 AS BINARY_DOUBLE) - -0.03231136300980085) / 1.0373910812235252 AS scaler_209, (CAST("ADS_imp_1_OUT".impter_210 AS BINARY_DOUBLE) - -0.03420275223278265) / 5.894903068982469 AS scaler_210, (CAST("ADS_imp_1_OUT".impter_211 AS BINARY_DOUBLE) - 0.23377425435020424) / 5.7466656009400365 AS scaler_211, (CAST("ADS_imp_1_OUT".impter_212 AS BINARY_DOUBLE) - 0.06340248702486702) / 5.640777044308502 AS scaler_212, (CAST("ADS_imp_1_OUT".impter_213 AS BINARY_DOUBLE) - -0.031763897397096605) / 1.0147599704147603 AS scaler_213, (CAST("ADS_imp_1_OUT".impter_214 AS BINARY_DOUBLE) - 0.004392749210234481) / 0.9750450927968857 AS scaler_214, (CAST("ADS_imp_1_OUT".impter_215 AS BINARY_DOUBLE) - -0.007220451377103457) / 0.998695256241697 AS scaler_215, (CAST("ADS_imp_1_OUT".impter_216 AS BINARY_DOUBLE) - 0.001039454428951527) / 0.9929801222993039 AS scaler_216, (CAST("ADS_imp_1_OUT".impter_217 AS BINARY_DOUBLE) - 0.255416687811933) / 5.606442450480165 AS scaler_217, (CAST("ADS_imp_1_OUT".impter_218 AS BINARY_DOUBLE) - -0.1279428512452052) / 6.183297227558894 AS scaler_218, (CAST("ADS_imp_1_OUT".impter_219 AS BINARY_DOUBLE) - 0.11623077388873257) / 5.860568084583105 AS scaler_219, (CAST("ADS_imp_1_OUT".impter_220 AS BINARY_DOUBLE) - 0.04461217703505275) / 5.83606925311369 AS scaler_220, (CAST("ADS_imp_1_OUT".impter_221 AS BINARY_DOUBLE) - -0.03146418763016053) / 1.009842922203672 AS scaler_221, (CAST("ADS_imp_1_OUT".impter_222 AS BINARY_DOUBLE) - 0.03437191123539599) / 0.9618546894792044 AS scaler_222, (CAST("ADS_imp_1_OUT".impter_223 AS BINARY_DOUBLE) - 0.02811765018111002) / 1.0234543094708461 AS scaler_223, (CAST("ADS_imp_1_OUT".impter_224 AS BINARY_DOUBLE) - -0.008115500982846469) / 0.9582255125846887 AS scaler_224, (CAST("ADS_imp_1_OUT".impter_225 AS BINARY_DOUBLE) - 0.0346610159959258) / 0.9382932228802465 AS scaler_225, (CAST("ADS_imp_1_OUT".impter_226 AS BINARY_DOUBLE) - 0.04873411944524845) / 0.9681071054529649 AS scaler_226, (CAST("ADS_imp_1_OUT".impter_227 AS BINARY_DOUBLE) - 4.894869923178419e-05) / 0.9711882273762723 AS scaler_227, (CAST("ADS_imp_1_OUT".impter_228 AS BINARY_DOUBLE) - 0.018209676154939517) / 0.9795446917047469 AS scaler_228, (CAST("ADS_imp_1_OUT".impter_229 AS BINARY_DOUBLE) - 0.026610576357411958) / 1.020416620612885 AS scaler_229, (CAST("ADS_imp_1_OUT".impter_230 AS BINARY_DOUBLE) - -0.18927414463099612) / 6.1290712879929945 AS scaler_230, (CAST("ADS_imp_1_OUT".impter_231 AS BINARY_DOUBLE) - 0.7485324016005227) / 5.734450284809372 AS scaler_231, (CAST("ADS_imp_1_OUT".impter_232 AS BINARY_DOUBLE) - 0.0487697431569858) / 1.0362121875167394 AS scaler_232, (CAST("ADS_imp_1_OUT".impter_233 AS BINARY_DOUBLE) - -0.05674203944761021) / 1.0094733416405102 AS scaler_233, (CAST("ADS_imp_1_OUT".impter_234 AS BINARY_DOUBLE) - -0.016772355037112788) / 0.9819007689885811 AS scaler_234, (CAST("ADS_imp_1_OUT".impter_235 AS BINARY_DOUBLE) - 0.021959192758732798) / 0.987918747045171 AS scaler_235, (CAST("ADS_imp_1_OUT".impter_236 AS BINARY_DOUBLE) - 0.009017510252386856) / 0.9874581776631882 AS scaler_236, (CAST("ADS_imp_1_OUT".impter_237 AS BINARY_DOUBLE) - 0.01719604397851632) / 0.992097179565061 AS scaler_237, (CAST("ADS_imp_1_OUT".impter_238 AS BINARY_DOUBLE) - 0.04752740880676183) / 0.9503833389031566 AS scaler_238, (CAST("ADS_imp_1_OUT".impter_239 AS BINARY_DOUBLE) - -0.6655794242164356) / 5.840051151687372 AS scaler_239, (CAST("ADS_imp_1_OUT".impter_240 AS BINARY_DOUBLE) - 0.040740002170661385) / 0.9668784340640053 AS scaler_240, (CAST("ADS_imp_1_OUT".impter_241 AS BINARY_DOUBLE) - -0.06790575667026853) / 0.9921903875597816 AS scaler_241, (CAST("ADS_imp_1_OUT".impter_242 AS BINARY_DOUBLE) - 0.00892920073818756) / 0.9953681335039088 AS scaler_242, (CAST("ADS_imp_1_OUT".impter_243 AS BINARY_DOUBLE) - -0.05642200650387437) / 1.080975513720933 AS scaler_243, (CAST("ADS_imp_1_OUT".impter_244 AS BINARY_DOUBLE) - 0.020080371219515784) / 1.0268320872033798 AS scaler_244, (CAST("ADS_imp_1_OUT".impter_245 AS BINARY_DOUBLE) - -0.08127236320512923) / 5.713688044684489 AS scaler_245, (CAST("ADS_imp_1_OUT".impter_246 AS BINARY_DOUBLE) - 0.013048668554363934) / 0.9840522233556672 AS scaler_246, (CAST("ADS_imp_1_OUT".impter_247 AS BINARY_DOUBLE) - 0.018841776335809746) / 0.9955454249138418 AS scaler_247, (CAST("ADS_imp_1_OUT".impter_248 AS BINARY_DOUBLE) - -0.005693217051300183) / 0.9944510267281536 AS scaler_248, (CAST("ADS_imp_1_OUT".impter_249 AS BINARY_DOUBLE) - -0.20394320931579465) / 5.772507892550791 AS scaler_249, (CAST("ADS_imp_1_OUT".impter_250 AS BINARY_DOUBLE) - -0.022446042990387664) / 1.0021361970741969 AS scaler_250, (CAST("ADS_imp_1_OUT".impter_251 AS BINARY_DOUBLE) - -4.076861252102798) / 34.2608991859537 AS scaler_251, (CAST("ADS_imp_1_OUT".impter_252 AS BINARY_DOUBLE) - -0.008817990550602733) / 1.0009581126868368 AS scaler_252, (CAST("ADS_imp_1_OUT".impter_253 AS BINARY_DOUBLE) - 0.07233780023230166) / 1.0333507786448697 AS scaler_253, (CAST("ADS_imp_1_OUT".impter_254 AS BINARY_DOUBLE) - 0.1138593990290942) / 5.886028350311137 AS scaler_254, (CAST("ADS_imp_1_OUT".impter_255 AS BINARY_DOUBLE) - -0.014123411384636636) / 0.9733196343517111 AS scaler_255, (CAST("ADS_imp_1_OUT".impter_256 AS BINARY_DOUBLE) - 0.014692128598930085) / 0.9620465679496903 AS scaler_256, (CAST("ADS_imp_1_OUT".impter_257 AS BINARY_DOUBLE) - 0.04595744723507997) / 0.9944842107666862 AS scaler_257, (CAST("ADS_imp_1_OUT".impter_258 AS BINARY_DOUBLE) - 0.015847884802623332) / 0.9910298990373428 AS scaler_258, (CAST("ADS_imp_1_OUT".impter_259 AS BINARY_DOUBLE) - 0.029322592909880204) / 1.0351113561261698 AS scaler_259, (CAST("ADS_imp_1_OUT".impter_260 AS BINARY_DOUBLE) - -0.03535258574843743) / 0.9316972257033983 AS scaler_260, (CAST("ADS_imp_1_OUT".impter_261 AS BINARY_DOUBLE) - -0.00650490190973122) / 0.9882615820765778 AS scaler_261, (CAST("ADS_imp_1_OUT".impter_262 AS BINARY_DOUBLE) - -0.03690470759934596) / 0.9949501210533109 AS scaler_262, (CAST("ADS_imp_1_OUT".impter_263 AS BINARY_DOUBLE) - -0.003181913166654664) / 0.9608914472397853 AS scaler_263, (CAST("ADS_imp_1_OUT".impter_264 AS BINARY_DOUBLE) - -0.0018035463835158838) / 0.9594115161166091 AS scaler_264, (CAST("ADS_imp_1_OUT".impter_265 AS BINARY_DOUBLE) - -0.004968061346310874) / 0.9841069876999591 AS scaler_265, (CAST("ADS_imp_1_OUT".impter_266 AS BINARY_DOUBLE) - -0.45419983150371857) / 5.83691454179742 AS scaler_266, (CAST("ADS_imp_1_OUT".impter_267 AS BINARY_DOUBLE) - 0.033791499419119894) / 0.9623098813915759 AS scaler_267, (CAST("ADS_imp_1_OUT".impter_268 AS BINARY_DOUBLE) - -0.40319293830766156) / 6.005116172706997 AS scaler_268, (CAST("ADS_imp_1_OUT".impter_269 AS BINARY_DOUBLE) - 0.6187460938207908) / 5.740858978880372 AS scaler_269, (CAST("ADS_imp_1_OUT".impter_270 AS BINARY_DOUBLE) - 0.622898951615882) / 5.837149612935237 AS scaler_270, (CAST("ADS_imp_1_OUT".impter_271 AS BINARY_DOUBLE) - -0.018232408103028765) / 1.0237582924270276 AS scaler_271, (CAST("ADS_imp_1_OUT".impter_272 AS BINARY_DOUBLE) - 0.01765800846800944) / 1.0369091422036907 AS scaler_272, (CAST("ADS_imp_1_OUT".impter_273 AS BINARY_DOUBLE) - -0.7754580279730494) / 5.650111104165515 AS scaler_273, (CAST("ADS_imp_1_OUT".impter_274 AS BINARY_DOUBLE) - -0.008494942988361138) / 0.9876490295553434 AS scaler_274, (CAST("ADS_imp_1_OUT".impter_275 AS BINARY_DOUBLE) - 0.06500802952263218) / 0.9938061896804096 AS scaler_275, (CAST("ADS_imp_1_OUT".impter_276 AS BINARY_DOUBLE) - 0.004846639297532018) / 0.9815019873684769 AS scaler_276, (CAST("ADS_imp_1_OUT".impter_277 AS BINARY_DOUBLE) - 0.31959901606775876) / 6.04265682063885 AS scaler_277, (CAST("ADS_imp_1_OUT".impter_278 AS BINARY_DOUBLE) - 0.06335285521269475) / 1.030255161135722 AS scaler_278, (CAST("ADS_imp_1_OUT".impter_279 AS BINARY_DOUBLE) - 0.05639859786390925) / 0.9704986281233102 AS scaler_279, (CAST("ADS_imp_1_OUT".impter_280 AS BINARY_DOUBLE) - -0.016826126115809636) / 0.9158313868217967 AS scaler_280, (CAST("ADS_imp_1_OUT".impter_281 AS BINARY_DOUBLE) - -0.035868631202668005) / 1.0109275682906786 AS scaler_281, (CAST("ADS_imp_1_OUT".impter_282 AS BINARY_DOUBLE) - 0.5939567726507027) / 6.134862342485855 AS scaler_282, (CAST("ADS_imp_1_OUT".impter_283 AS BINARY_DOUBLE) - -0.018499482983219337) / 0.9944840357762763 AS scaler_283, (CAST("ADS_imp_1_OUT".impter_284 AS BINARY_DOUBLE) - -0.002126060350638963) / 0.9778447419013441 AS scaler_284, (CAST("ADS_imp_1_OUT".impter_285 AS BINARY_DOUBLE) - 0.43749055924133856) / 5.851416241071843 AS scaler_285, (CAST("ADS_imp_1_OUT".impter_286 AS BINARY_DOUBLE) - -0.002792990485326514) / 1.0100816164740944 AS scaler_286, (CAST("ADS_imp_1_OUT".impter_287 AS BINARY_DOUBLE) - 0.05111067471537181) / 1.0268046765512155 AS scaler_287, (CAST("ADS_imp_1_OUT".impter_288 AS BINARY_DOUBLE) - 0.01652404135719371) / 1.0028252297771558 AS scaler_288, (CAST("ADS_imp_1_OUT".impter_289 AS BINARY_DOUBLE) - 0.046881980038056) / 0.9760255592175245 AS scaler_289, (CAST("ADS_imp_1_OUT".impter_290 AS BINARY_DOUBLE) - -0.21093566587728044) / 5.894017797300676 AS scaler_290, (CAST("ADS_imp_1_OUT".impter_291 AS BINARY_DOUBLE) - -0.38235732593808275) / 6.050957848475724 AS scaler_291, (CAST("ADS_imp_1_OUT".impter_292 AS BINARY_DOUBLE) - 0.07184577295054764) / 1.0317735699072899 AS scaler_292, (CAST("ADS_imp_1_OUT".impter_293 AS BINARY_DOUBLE) - 0.04617448263239929) / 1.008695230198085 AS scaler_293, (CAST("ADS_imp_1_OUT".impter_294 AS BINARY_DOUBLE) - -0.08558825454913567) / 0.9612556638919216 AS scaler_294, (CAST("ADS_imp_1_OUT".impter_295 AS BINARY_DOUBLE) - 0.03845417409897625) / 0.9634658509822347 AS scaler_295, (CAST("ADS_imp_1_OUT".impter_296 AS BINARY_DOUBLE) - 0.0010861389762425358) / 0.9878011845177224 AS scaler_296, (CAST("ADS_imp_1_OUT".impter_297 AS BINARY_DOUBLE) - 0.0013036543004699376) / 0.9802325604692824 AS scaler_297, (CAST("ADS_imp_1_OUT".impter_298 AS BINARY_DOUBLE) - -0.04572115009336087) / 0.9966809765564838 AS scaler_298, (CAST("ADS_imp_1_OUT".impter_299 AS BINARY_DOUBLE) - 0.109011335964655) / 5.862835709214262 AS scaler_299, (CAST("ADS_imp_1_OUT".impter_300 AS BINARY_DOUBLE) - 0.059388745922670474) / 1.0279151786530831 AS scaler_300, (CAST("ADS_imp_1_OUT".impter_301 AS BINARY_DOUBLE) - 0.02796049502507793) / 1.0196445533826572 AS scaler_301, (CAST("ADS_imp_1_OUT".impter_302 AS BINARY_DOUBLE) - 0.06765588611224771) / 0.996907552648703 AS scaler_302, (CAST("ADS_imp_1_OUT".impter_303 AS BINARY_DOUBLE) - 0.42516463145086364) / 6.021798926740255 AS scaler_303, (CAST("ADS_imp_1_OUT".impter_304 AS BINARY_DOUBLE) - -0.025755583751806005) / 0.9677777967417204 AS scaler_304, (CAST("ADS_imp_1_OUT".impter_305 AS BINARY_DOUBLE) - 0.05983631292026072) / 0.9714721805811518 AS scaler_305, (CAST("ADS_imp_1_OUT".impter_306 AS BINARY_DOUBLE) - -0.022966826151323574) / 0.9944894903866501 AS scaler_306, (CAST("ADS_imp_1_OUT".impter_307 AS BINARY_DOUBLE) - -0.025059373911550786) / 1.0097409585083836 AS scaler_307, (CAST("ADS_imp_1_OUT".impter_308 AS BINARY_DOUBLE) - -0.07477780703395227) / 1.0100566533671511 AS scaler_308, (CAST("ADS_imp_1_OUT".impter_309 AS BINARY_DOUBLE) - 0.005214344538572354) / 0.9837893167281717 AS scaler_309, (CAST("ADS_imp_1_OUT".impter_310 AS BINARY_DOUBLE) - 0.15069860934029664) / 5.735011156781238 AS scaler_310, (CAST("ADS_imp_1_OUT".impter_311 AS BINARY_DOUBLE) - 0.0920648545309688) / 1.0065402771379437 AS scaler_311, (CAST("ADS_imp_1_OUT".impter_312 AS BINARY_DOUBLE) - 0.02872039649838287) / 0.9784906033450759 AS scaler_312, (CAST("ADS_imp_1_OUT".impter_313 AS BINARY_DOUBLE) - 0.027206434346339497) / 0.9991615732109751 AS scaler_313, (CAST("ADS_imp_1_OUT".impter_314 AS BINARY_DOUBLE) - 0.006348743003703792) / 0.963185353898001 AS scaler_314, (CAST("ADS_imp_1_OUT".impter_315 AS BINARY_DOUBLE) - -0.05402460092901892) / 1.0519822785818902 AS scaler_315, (CAST("ADS_imp_1_OUT".impter_316 AS BINARY_DOUBLE) - 0.027029051133963092) / 0.9775996545554246 AS scaler_316, (CAST("ADS_imp_1_OUT".impter_317 AS BINARY_DOUBLE) - -0.0064650471205589975) / 1.0402075183971329 AS scaler_317, (CAST("ADS_imp_1_OUT".impter_318 AS BINARY_DOUBLE) - -0.043335487666484804) / 1.0011278238556536 AS scaler_318, (CAST("ADS_imp_1_OUT".impter_319 AS BINARY_DOUBLE) - 0.04481518768554344) / 0.9722446609062138 AS scaler_319, (CAST("ADS_imp_1_OUT".impter_320 AS BINARY_DOUBLE) - 0.004584500412058787) / 1.0262858605349432 AS scaler_320, (CAST("ADS_imp_1_OUT".impter_321 AS BINARY_DOUBLE) - -0.001027021710811342) / 0.9919602897367665 AS scaler_321, (CAST("ADS_imp_1_OUT".impter_322 AS BINARY_DOUBLE) - -0.03706762371695285) / 0.9474832242940362 AS scaler_322, (CAST("ADS_imp_1_OUT".impter_323 AS BINARY_DOUBLE) - -0.01578014654880059) / 0.9898649027094482 AS scaler_323, (CAST("ADS_imp_1_OUT".impter_324 AS BINARY_DOUBLE) - -0.06476010801389685) / 0.9782346350213528 AS scaler_324, (CAST("ADS_imp_1_OUT".impter_325 AS BINARY_DOUBLE) - 0.013158594346038825) / 1.0495582938116077 AS scaler_325, (CAST("ADS_imp_1_OUT".impter_326 AS BINARY_DOUBLE) - -0.6909561374047029) / 5.746508659742815 AS scaler_326, (CAST("ADS_imp_1_OUT".impter_327 AS BINARY_DOUBLE) - -0.032307395882269586) / 0.9535832586619137 AS scaler_327, (CAST("ADS_imp_1_OUT".impter_328 AS BINARY_DOUBLE) - 0.001871548534192734) / 0.9815964798775456 AS scaler_328, (CAST("ADS_imp_1_OUT".impter_329 AS BINARY_DOUBLE) - 0.009014081196377208) / 0.9660287896470228 AS scaler_329, (CAST("ADS_imp_1_OUT".impter_330 AS BINARY_DOUBLE) - 0.08432204289520576) / 1.0097164483499368 AS scaler_330, (CAST("ADS_imp_1_OUT".impter_331 AS BINARY_DOUBLE) - 0.03098818000424445) / 1.0130270342045389 AS scaler_331, (CAST("ADS_imp_1_OUT".impter_332 AS BINARY_DOUBLE) - 0.017842106547205465) / 0.993655606972685 AS scaler_332, (CAST("ADS_imp_1_OUT".impter_333 AS BINARY_DOUBLE) - 0.009830954519062886) / 5.92553450726784 AS scaler_333, (CAST("ADS_imp_1_OUT".impter_334 AS BINARY_DOUBLE) - 0.018857904928326345) / 0.9911886384867388 AS scaler_334, (CAST("ADS_imp_1_OUT".impter_335 AS BINARY_DOUBLE) - -0.09041919658309759) / 6.294466825822825 AS scaler_335, (CAST("ADS_imp_1_OUT".impter_336 AS BINARY_DOUBLE) - -0.0030938413689644926) / 0.9761716888106455 AS scaler_336, (CAST("ADS_imp_1_OUT".impter_337 AS BINARY_DOUBLE) - 0.06013463236860367) / 1.0011483068873699 AS scaler_337, (CAST("ADS_imp_1_OUT".impter_338 AS BINARY_DOUBLE) - -0.006783134159713595) / 0.9722970432848048 AS scaler_338, (CAST("ADS_imp_1_OUT".impter_339 AS BINARY_DOUBLE) - -0.022505432033342578) / 1.0089265011933541 AS scaler_339, (CAST("ADS_imp_1_OUT".impter_340 AS BINARY_DOUBLE) - 0.012902527459674764) / 5.731240866243183 AS scaler_340, (CAST("ADS_imp_1_OUT".impter_341 AS BINARY_DOUBLE) - -0.03249915020429405) / 1.044475101185332 AS scaler_341, (CAST("ADS_imp_1_OUT".impter_342 AS BINARY_DOUBLE) - -0.03379268322494926) / 0.9927711788351935 AS scaler_342, (CAST("ADS_imp_1_OUT".impter_343 AS BINARY_DOUBLE) - 0.006926122620280751) / 0.9801721512833292 AS scaler_343, (CAST("ADS_imp_1_OUT".impter_344 AS BINARY_DOUBLE) - -0.03319669654598365) / 1.0182345234275731 AS scaler_344, (CAST("ADS_imp_1_OUT".impter_345 AS BINARY_DOUBLE) - 2.7390190345202456) / 34.667875391393046 AS scaler_345, (CAST("ADS_imp_1_OUT".impter_346 AS BINARY_DOUBLE) - -0.0075319633963496155) / 0.9979191708443869 AS scaler_346, (CAST("ADS_imp_1_OUT".impter_347 AS BINARY_DOUBLE) - 0.022124363701982737) / 0.9808099368402478 AS scaler_347, (CAST("ADS_imp_1_OUT".impter_348 AS BINARY_DOUBLE) - -0.023653773851870237) / 1.0003846372052088 AS scaler_348, (CAST("ADS_imp_1_OUT".impter_349 AS BINARY_DOUBLE) - -0.01620635032677563) / 1.0105995254781748 AS scaler_349, (CAST("ADS_imp_1_OUT".impter_350 AS BINARY_DOUBLE) - -0.021142104441251273) / 1.0221080104646578 AS scaler_350, (CAST("ADS_imp_1_OUT".impter_351 AS BINARY_DOUBLE) - -0.06890676984297263) / 1.0082431727106027 AS scaler_351, (CAST("ADS_imp_1_OUT".impter_352 AS BINARY_DOUBLE) - 0.006174673936264955) / 1.014439751019311 AS scaler_352, (CAST("ADS_imp_1_OUT".impter_353 AS BINARY_DOUBLE) - -0.018480727521201546) / 0.9701951933455762 AS scaler_353, (CAST("ADS_imp_1_OUT".impter_354 AS BINARY_DOUBLE) - 0.01892387185297041) / 0.9808278094926718 AS scaler_354, (CAST("ADS_imp_1_OUT".impter_355 AS BINARY_DOUBLE) - 0.02727917887836492) / 1.026160540912389 AS scaler_355, (CAST("ADS_imp_1_OUT".impter_356 AS BINARY_DOUBLE) - -0.012823623960695998) / 0.9999639298811288 AS scaler_356, (CAST("ADS_imp_1_OUT".impter_357 AS BINARY_DOUBLE) - -0.013271487823414667) / 0.9888293309407856 AS scaler_357, (CAST("ADS_imp_1_OUT".impter_358 AS BINARY_DOUBLE) - -0.03395939012664646) / 0.9838454170841583 AS scaler_358, (CAST("ADS_imp_1_OUT".impter_359 AS BINARY_DOUBLE) - 0.03223004938335937) / 1.0311477237988198 AS scaler_359, (CAST("ADS_imp_1_OUT".impter_360 AS BINARY_DOUBLE) - -0.0016017230909337308) / 0.9977131054043721 AS scaler_360, (CAST("ADS_imp_1_OUT".impter_361 AS BINARY_DOUBLE) - -0.03321899170282454) / 0.9865478214908777 AS scaler_361, (CAST("ADS_imp_1_OUT".impter_362 AS BINARY_DOUBLE) - -0.0016618588765567152) / 0.9890613942697071 AS scaler_362, (CAST("ADS_imp_1_OUT".impter_363 AS BINARY_DOUBLE) - 0.04573989570209914) / 1.0180765967750773 AS scaler_363, (CAST("ADS_imp_1_OUT".impter_364 AS BINARY_DOUBLE) - -0.021293175937165) / 0.978862030082048 AS scaler_364, (CAST("ADS_imp_1_OUT".impter_365 AS BINARY_DOUBLE) - -0.011255144611449622) / 1.0085669156865533 AS scaler_365, (CAST("ADS_imp_1_OUT".impter_366 AS BINARY_DOUBLE) - -0.02563865782710232) / 1.0300081363336124 AS scaler_366, (CAST("ADS_imp_1_OUT".impter_367 AS BINARY_DOUBLE) - -0.015167083011311294) / 0.9899050483960369 AS scaler_367, (CAST("ADS_imp_1_OUT".impter_368 AS BINARY_DOUBLE) - 0.0010959755571049432) / 1.0362907152513867 AS scaler_368, (CAST("ADS_imp_1_OUT".impter_369 AS BINARY_DOUBLE) - 0.25830160330800345) / 5.815383768143437 AS scaler_369, (CAST("ADS_imp_1_OUT".impter_370 AS BINARY_DOUBLE) - -0.02512420755881165) / 1.0004687101039538 AS scaler_370, (CAST("ADS_imp_1_OUT".impter_371 AS BINARY_DOUBLE) - -0.5588992061400131) / 5.788250773541592 AS scaler_371, (CAST("ADS_imp_1_OUT".impter_372 AS BINARY_DOUBLE) - 0.04500746078257995) / 1.0086593860246837 AS scaler_372, (CAST("ADS_imp_1_OUT".impter_373 AS BINARY_DOUBLE) - -0.03582268471853405) / 1.0018148995353613 AS scaler_373, (CAST("ADS_imp_1_OUT".impter_374 AS BINARY_DOUBLE) - -0.0238194811504848) / 1.0251776661707117 AS scaler_374, (CAST("ADS_imp_1_OUT".impter_375 AS BINARY_DOUBLE) - 0.00870068158455398) / 1.0334836529068854 AS scaler_375, (CAST("ADS_imp_1_OUT".impter_376 AS BINARY_DOUBLE) - 0.41206876337723863) / 5.954218215874292 AS scaler_376, (CAST("ADS_imp_1_OUT".impter_377 AS BINARY_DOUBLE) - -0.00883623214870824) / 0.9659875346877604 AS scaler_377, (CAST("ADS_imp_1_OUT".impter_378 AS BINARY_DOUBLE) - -0.047673712853857325) / 0.9682385986144871 AS scaler_378, (CAST("ADS_imp_1_OUT".impter_379 AS BINARY_DOUBLE) - 0.39808785261614416) / 6.09008828409793 AS scaler_379, (CAST("ADS_imp_1_OUT".impter_380 AS BINARY_DOUBLE) - 0.014874268925561847) / 0.9655591180277953 AS scaler_380, (CAST("ADS_imp_1_OUT".impter_381 AS BINARY_DOUBLE) - -0.01355994466429737) / 1.0067469722911915 AS scaler_381, (CAST("ADS_imp_1_OUT".impter_382 AS BINARY_DOUBLE) - 0.06549584301442803) / 1.0522361938897125 AS scaler_382, (CAST("ADS_imp_1_OUT".impter_383 AS BINARY_DOUBLE) - -0.07523712848824068) / 1.0400455118176228 AS scaler_383, (CAST("ADS_imp_1_OUT".impter_384 AS BINARY_DOUBLE) - -0.020246425764404403) / 0.99550805592098 AS scaler_384, (CAST("ADS_imp_1_OUT".impter_385 AS BINARY_DOUBLE) - -0.06505456712739689) / 1.00815114883143 AS scaler_385, (CAST("ADS_imp_1_OUT".impter_386 AS BINARY_DOUBLE) - 0.040682923885247455) / 0.9675621093776584 AS scaler_386, (CAST("ADS_imp_1_OUT".impter_387 AS BINARY_DOUBLE) - 0.5036509170142887) / 6.055498495136896 AS scaler_387, (CAST("ADS_imp_1_OUT".impter_388 AS BINARY_DOUBLE) - -0.01984269915156025) / 0.9900740889033433 AS scaler_388, (CAST("ADS_imp_1_OUT".impter_389 AS BINARY_DOUBLE) - -0.029975294309893395) / 0.9997397749932063 AS scaler_389, (CAST("ADS_imp_1_OUT".impter_390 AS BINARY_DOUBLE) - -0.023935150902407186) / 1.00798921844037 AS scaler_390, (CAST("ADS_imp_1_OUT".impter_391 AS BINARY_DOUBLE) - 0.003487379328156493) / 1.0044645097371014 AS scaler_391, (CAST("ADS_imp_1_OUT".impter_392 AS BINARY_DOUBLE) - -0.006836589678473769) / 0.9763905812172375 AS scaler_392, (CAST("ADS_imp_1_OUT".impter_393 AS BINARY_DOUBLE) - -0.023001043810177268) / 0.9698402164080443 AS scaler_393, (CAST("ADS_imp_1_OUT".impter_394 AS BINARY_DOUBLE) - 0.026433076987905132) / 1.0299294878585217 AS scaler_394, (CAST("ADS_imp_1_OUT".impter_395 AS BINARY_DOUBLE) - 0.03869392603237684) / 1.0186157804435945 AS scaler_395, (CAST("ADS_imp_1_OUT".impter_396 AS BINARY_DOUBLE) - 0.007166160812626991) / 0.9843737579570186 AS scaler_396, (CAST("ADS_imp_1_OUT".impter_397 AS BINARY_DOUBLE) - -0.31652297140011876) / 6.070605480686376 AS scaler_397, (CAST("ADS_imp_1_OUT".impter_398 AS BINARY_DOUBLE) - 0.352192927636602) / 6.099135476868029 AS scaler_398, (CAST("ADS_imp_1_OUT".impter_399 AS BINARY_DOUBLE) - 0.2418343422011388) / 5.947824293275464 AS scaler_399, (CAST("ADS_imp_1_OUT".impter_400 AS BINARY_DOUBLE) - 0.23681058627355728) / 5.851504662987678 AS scaler_400, (CAST("ADS_imp_1_OUT".impter_401 AS BINARY_DOUBLE) - -0.011935061221661204) / 0.9960811072647195 AS scaler_401, (CAST("ADS_imp_1_OUT".impter_402 AS BINARY_DOUBLE) - -0.23225071389385885) / 5.877913338764821 AS scaler_402, (CAST("ADS_imp_1_OUT".impter_403 AS BINARY_DOUBLE) - 0.027478547688853303) / 0.9788713733340856 AS scaler_403, (CAST("ADS_imp_1_OUT".impter_404 AS BINARY_DOUBLE) - -0.2835956440898274) / 5.678310355351206 AS scaler_404, (CAST("ADS_imp_1_OUT".impter_405 AS BINARY_DOUBLE) - -0.026966778578135772) / 1.0011958124193499 AS scaler_405, (CAST("ADS_imp_1_OUT".impter_406 AS BINARY_DOUBLE) - -0.004329268838175945) / 5.946384673713921 AS scaler_406, (CAST("ADS_imp_1_OUT".impter_407 AS BINARY_DOUBLE) - 0.0774540554940731) / 0.9793348754271206 AS scaler_407, (CAST("ADS_imp_1_OUT".impter_408 AS BINARY_DOUBLE) - -0.6052203464446785) / 5.817154006812937 AS scaler_408, (CAST("ADS_imp_1_OUT".impter_409 AS BINARY_DOUBLE) - 0.0338701304693192) / 0.960463407901455 AS scaler_409, (CAST("ADS_imp_1_OUT".impter_410 AS BINARY_DOUBLE) - -0.05044305753803302) / 5.810222734574313 AS scaler_410, (CAST("ADS_imp_1_OUT".impter_411 AS BINARY_DOUBLE) - 0.008805453357057883) / 0.9798841614686381 AS scaler_411, (CAST("ADS_imp_1_OUT".impter_412 AS BINARY_DOUBLE) - -0.05374724915468808) / 0.9725143886399855 AS scaler_412, (CAST("ADS_imp_1_OUT".impter_413 AS BINARY_DOUBLE) - -0.004957359515296269) / 0.9748727609121598 AS scaler_413, (CAST("ADS_imp_1_OUT".impter_414 AS BINARY_DOUBLE) - 0.12039061456156476) / 5.880042099618977 AS scaler_414, (CAST("ADS_imp_1_OUT".impter_415 AS BINARY_DOUBLE) - -0.005732424778663252) / 1.0091331017994325 AS scaler_415, (CAST("ADS_imp_1_OUT".impter_416 AS BINARY_DOUBLE) - -0.4286478678045208) / 5.973293156925994 AS scaler_416, (CAST("ADS_imp_1_OUT".impter_417 AS BINARY_DOUBLE) - -0.028516293632594378) / 1.0152913842776887 AS scaler_417, (CAST("ADS_imp_1_OUT".impter_418 AS BINARY_DOUBLE) - 0.052380333284906204) / 1.01817218649359 AS scaler_418, (CAST("ADS_imp_1_OUT".impter_419 AS BINARY_DOUBLE) - -0.028497248319907256) / 5.847011203913571 AS scaler_419, (CAST("ADS_imp_1_OUT".impter_420 AS BINARY_DOUBLE) - -0.012190751471044496) / 1.0251203403698526 AS scaler_420, (CAST("ADS_imp_1_OUT".impter_421 AS BINARY_DOUBLE) - 0.014464401907681581) / 1.0492676826138123 AS scaler_421, (CAST("ADS_imp_1_OUT".impter_422 AS BINARY_DOUBLE) - -0.17428872440122373) / 5.904567530979285 AS scaler_422, (CAST("ADS_imp_1_OUT".impter_423 AS BINARY_DOUBLE) - -0.01773365620191358) / 1.0254922074959463 AS scaler_423, (CAST("ADS_imp_1_OUT".impter_424 AS BINARY_DOUBLE) - 0.40558807090091853) / 5.537078097301127 AS scaler_424, (CAST("ADS_imp_1_OUT".impter_425 AS BINARY_DOUBLE) - -0.0009022771635855167) / 0.9868008921623722 AS scaler_425, (CAST("ADS_imp_1_OUT".impter_426 AS BINARY_DOUBLE) - 0.05739992787057724) / 0.9696129618812115 AS scaler_426, (CAST("ADS_imp_1_OUT".impter_427 AS BINARY_DOUBLE) - 0.04850780446682892) / 0.9347455059647907 AS scaler_427, (CAST("ADS_imp_1_OUT".impter_428 AS BINARY_DOUBLE) - 0.04555082643401923) / 0.9795902806725212 AS scaler_428, (CAST("ADS_imp_1_OUT".impter_429 AS BINARY_DOUBLE) - -0.013088017894457874) / 5.853516696500564 AS scaler_429, (CAST("ADS_imp_1_OUT".impter_430 AS BINARY_DOUBLE) - 0.7622987596243614) / 5.976914501060202 AS scaler_430, (CAST("ADS_imp_1_OUT".impter_431 AS BINARY_DOUBLE) - 0.06277381315317203) / 1.0530187925965664 AS scaler_431, (CAST("ADS_imp_1_OUT".impter_432 AS BINARY_DOUBLE) - -0.00595076348043327) / 5.8761809381575265 AS scaler_432, (CAST("ADS_imp_1_OUT".impter_433 AS BINARY_DOUBLE) - -0.019782980673704004) / 1.016060957904549 AS scaler_433, (CAST("ADS_imp_1_OUT".impter_434 AS BINARY_DOUBLE) - 0.03813782436434927) / 0.9897709857222856 AS scaler_434, (CAST("ADS_imp_1_OUT".impter_435 AS BINARY_DOUBLE) - -0.03361997654906546) / 1.0108026015018525 AS scaler_435, (CAST("ADS_imp_1_OUT".impter_436 AS BINARY_DOUBLE) - -0.015449063685126078) / 0.9717326567278565 AS scaler_436, (CAST("ADS_imp_1_OUT".impter_437 AS BINARY_DOUBLE) - -0.05083199732740015) / 0.9791071943300053 AS scaler_437, (CAST("ADS_imp_1_OUT".impter_438 AS BINARY_DOUBLE) - 0.12294390238132996) / 5.80532595725793 AS scaler_438, (CAST("ADS_imp_1_OUT".impter_439 AS BINARY_DOUBLE) - 0.008273480374725027) / 1.0023549695531735 AS scaler_439, (CAST("ADS_imp_1_OUT".impter_440 AS BINARY_DOUBLE) - 0.04577021563207708) / 0.9948251301427953 AS scaler_440, (CAST("ADS_imp_1_OUT".impter_441 AS BINARY_DOUBLE) - -0.004739394213399075) / 0.9866453331207407 AS scaler_441, (CAST("ADS_imp_1_OUT".impter_442 AS BINARY_DOUBLE) - -0.025074465350024163) / 1.0215515668408335 AS scaler_442, (CAST("ADS_imp_1_OUT".impter_443 AS BINARY_DOUBLE) - 0.050774082486299194) / 0.9690110808898585 AS scaler_443, (CAST("ADS_imp_1_OUT".impter_444 AS BINARY_DOUBLE) - -0.0967069255496831) / 5.631254555346854 AS scaler_444, (CAST("ADS_imp_1_OUT".impter_445 AS BINARY_DOUBLE) - -0.007206652069868864) / 0.9728674931147712 AS scaler_445, (CAST("ADS_imp_1_OUT".impter_446 AS BINARY_DOUBLE) - 0.03506859491861105) / 1.0282750135426344 AS scaler_446, (CAST("ADS_imp_1_OUT".impter_447 AS BINARY_DOUBLE) - -0.00905435452775923) / 1.035287499798065 AS scaler_447, (CAST("ADS_imp_1_OUT".impter_448 AS BINARY_DOUBLE) - -0.012006634151227604) / 1.0200794266710214 AS scaler_448, (CAST("ADS_imp_1_OUT".impter_449 AS BINARY_DOUBLE) - 0.03145627491797305) / 0.9937879772736924 AS scaler_449, (CAST("ADS_imp_1_OUT".impter_450 AS BINARY_DOUBLE) - 0.02517699513431471) / 0.9684040296079491 AS scaler_450, (CAST("ADS_imp_1_OUT".impter_451 AS BINARY_DOUBLE) - 0.005640015529596338) / 1.015421580688403 AS scaler_451, (CAST("ADS_imp_1_OUT".impter_452 AS BINARY_DOUBLE) - -0.010608619203966895) / 1.0246613022268378 AS scaler_452, (CAST("ADS_imp_1_OUT".impter_453 AS BINARY_DOUBLE) - -0.062079998204146586) / 0.9869504608282007 AS scaler_453, (CAST("ADS_imp_1_OUT".impter_454 AS BINARY_DOUBLE) - -0.0876770647950911) / 1.0029750629720398 AS scaler_454, (CAST("ADS_imp_1_OUT".impter_455 AS BINARY_DOUBLE) - 0.012143657983602962) / 0.9744995952331035 AS scaler_455, (CAST("ADS_imp_1_OUT".impter_456 AS BINARY_DOUBLE) - 0.03448739220055286) / 1.0176699342790378 AS scaler_456, (CAST("ADS_imp_1_OUT".impter_457 AS BINARY_DOUBLE) - 0.006839876969520017) / 0.987127462042404 AS scaler_457, (CAST("ADS_imp_1_OUT".impter_458 AS BINARY_DOUBLE) - -0.1589087203718216) / 5.5807038713007335 AS scaler_458, (CAST("ADS_imp_1_OUT".impter_459 AS BINARY_DOUBLE) - 0.45343491151894105) / 5.6176560152403745 AS scaler_459, (CAST("ADS_imp_1_OUT".impter_460 AS BINARY_DOUBLE) - -0.007482014986002762) / 1.0334253515710414 AS scaler_460, (CAST("ADS_imp_1_OUT".impter_461 AS BINARY_DOUBLE) - -0.0538045349045037) / 0.9960348345876942 AS scaler_461, (CAST("ADS_imp_1_OUT".impter_462 AS BINARY_DOUBLE) - 0.006517329526108785) / 1.0021131774599925 AS scaler_462, (CAST("ADS_imp_1_OUT".impter_463 AS BINARY_DOUBLE) - -0.3201406707449883) / 5.716416507315997 AS scaler_463, (CAST("ADS_imp_1_OUT".impter_464 AS BINARY_DOUBLE) - 0.03164463472773337) / 0.9726515882520317 AS scaler_464, (CAST("ADS_imp_1_OUT".impter_465 AS BINARY_DOUBLE) - -0.031827670383012555) / 0.9812532959822754 AS scaler_465, (CAST("ADS_imp_1_OUT".impter_466 AS BINARY_DOUBLE) - -0.02220263625319023) / 1.0370390821341966 AS scaler_466, (CAST("ADS_imp_1_OUT".impter_467 AS BINARY_DOUBLE) - 0.04918588699743021) / 1.0206054749154756 AS scaler_467, (CAST("ADS_imp_1_OUT".impter_468 AS BINARY_DOUBLE) - 0.013873407999629129) / 0.987246490028904 AS scaler_468, (CAST("ADS_imp_1_OUT".impter_469 AS BINARY_DOUBLE) - -0.054844779309353775) / 0.9876262037314543 AS scaler_469, (CAST("ADS_imp_1_OUT".impter_470 AS BINARY_DOUBLE) - 0.05947169339023267) / 1.0092122222358388 AS scaler_470, (CAST("ADS_imp_1_OUT".impter_471 AS BINARY_DOUBLE) - -0.007061332655546885) / 1.0113339937552548 AS scaler_471, (CAST("ADS_imp_1_OUT".impter_472 AS BINARY_DOUBLE) - 0.0009227758698022626) / 1.020330749267979 AS scaler_472, (CAST("ADS_imp_1_OUT".impter_473 AS BINARY_DOUBLE) - -0.014955268248566689) / 1.0413119364682566 AS scaler_473, (CAST("ADS_imp_1_OUT".impter_474 AS BINARY_DOUBLE) - -0.00997364389328803) / 0.9793415870167274 AS scaler_474, (CAST("ADS_imp_1_OUT".impter_475 AS BINARY_DOUBLE) - 0.044011886118274696) / 1.0007453076824555 AS scaler_475, (CAST("ADS_imp_1_OUT".impter_476 AS BINARY_DOUBLE) - 0.03204255595840591) / 0.988499862882957 AS scaler_476, (CAST("ADS_imp_1_OUT".impter_477 AS BINARY_DOUBLE) - -0.028511291715894678) / 1.018673434822483 AS scaler_477, (CAST("ADS_imp_1_OUT".impter_478 AS BINARY_DOUBLE) - 0.05235198939025461) / 1.030225026137767 AS scaler_478, (CAST("ADS_imp_1_OUT".impter_479 AS BINARY_DOUBLE) - 0.4442463067830223) / 5.635010414681324 AS scaler_479, (CAST("ADS_imp_1_OUT".impter_480 AS BINARY_DOUBLE) - -0.0421220588184719) / 0.9772881180874626 AS scaler_480, (CAST("ADS_imp_1_OUT".impter_481 AS BINARY_DOUBLE) - -0.06375683381469409) / 0.9807772043168697 AS scaler_481, (CAST("ADS_imp_1_OUT".impter_482 AS BINARY_DOUBLE) - 0.09016412133268503) / 5.8772408365208255 AS scaler_482, (CAST("ADS_imp_1_OUT".impter_483 AS BINARY_DOUBLE) - -0.021181166332863134) / 1.050621089425892 AS scaler_483, (CAST("ADS_imp_1_OUT".impter_484 AS BINARY_DOUBLE) - 0.015134427562764584) / 1.0181907514344235 AS scaler_484, (CAST("ADS_imp_1_OUT".impter_485 AS BINARY_DOUBLE) - 0.1458909634165245) / 5.950692941207097 AS scaler_485, (CAST("ADS_imp_1_OUT".impter_486 AS BINARY_DOUBLE) - -0.0964936751824616) / 1.025397566101771 AS scaler_486, (CAST("ADS_imp_1_OUT".impter_487 AS BINARY_DOUBLE) - -0.0007661343328348244) / 1.0327977666221848 AS scaler_487, (CAST("ADS_imp_1_OUT".impter_488 AS BINARY_DOUBLE) - 0.007424472006137845) / 1.0131319009223352 AS scaler_488, (CAST("ADS_imp_1_OUT".impter_489 AS BINARY_DOUBLE) - 0.007776565305072426) / 0.9660414885523543 AS scaler_489, (CAST("ADS_imp_1_OUT".impter_490 AS BINARY_DOUBLE) - -0.02972669445658546) / 0.9816148436418729 AS scaler_490, (CAST("ADS_imp_1_OUT".impter_491 AS BINARY_DOUBLE) - -0.020022098906708034) / 1.0376883862584318 AS scaler_491, (CAST("ADS_imp_1_OUT".impter_492 AS BINARY_DOUBLE) - -0.03689120776576418) / 1.0350273972331128 AS scaler_492, (CAST("ADS_imp_1_OUT".impter_493 AS BINARY_DOUBLE) - 0.02342654499679442) / 0.9963841480580575 AS scaler_493, (CAST("ADS_imp_1_OUT".impter_494 AS BINARY_DOUBLE) - 0.06047072800386204) / 1.013712584435496 AS scaler_494, (CAST("ADS_imp_1_OUT".impter_495 AS BINARY_DOUBLE) - 0.02457996835763847) / 1.0206669115005262 AS scaler_495, (CAST("ADS_imp_1_OUT".impter_496 AS BINARY_DOUBLE) - -0.0053128065642532255) / 1.0066954008984852 AS scaler_496, (CAST("ADS_imp_1_OUT".impter_497 AS BINARY_DOUBLE) - -0.050025880514262516) / 5.692164744670064 AS scaler_497, (CAST("ADS_imp_1_OUT".impter_498 AS BINARY_DOUBLE) - -0.055008136401580685) / 0.9868440376092616 AS scaler_498, (CAST("ADS_imp_1_OUT".impter_499 AS BINARY_DOUBLE) - -0.46514935213874503) / 5.739355619460631 AS scaler_499, (CAST("ADS_imp_1_OUT".impter_500 AS BINARY_DOUBLE) - -0.037847190400891) / 0.9980592109563712 AS scaler_500, (CAST("ADS_imp_1_OUT".impter_501 AS BINARY_DOUBLE) - 0.028703608331041793) / 0.9938711909999083 AS scaler_501 
FROM "33322_QWFB6F_ADS_IMP_1_OUT" "ADS_imp_1_OUT") "ADS_sca_2_OUT") "U"
-- Code For temporary table 29233323_PORPBH_BAG_AVG_B0 part 1/2. Create 


CREATE GLOBAL TEMPORARY TABLE "29233323_PORPBH_BAG_AVG_B0" (
	"KEY" NUMBER(19), 
	"Score_0" BINARY_DOUBLE, 
	"Proba_0" BINARY_DOUBLE, 
	"LogProba_0" BINARY_DOUBLE, 
	"Score_1" BINARY_DOUBLE, 
	"Proba_1" BINARY_DOUBLE, 
	"LogProba_1" BINARY_DOUBLE, 
	"Score_2" BINARY_DOUBLE, 
	"Proba_2" BINARY_DOUBLE, 
	"LogProba_2" BINARY_DOUBLE, 
	"Score_3" BINARY_DOUBLE, 
	"Proba_3" BINARY_DOUBLE, 
	"LogProba_3" BINARY_DOUBLE
)

 ON COMMIT PRESERVE ROWS
-- Code For temporary table 29233323_PORPBH_BAG_AVG_B0 part 2/2. Populate

INSERT INTO "29233323_PORPBH_BAG_AVG_B0" ("KEY", "Score_0", "Proba_0", "LogProba_0", "Score_1", "Proba_1", "LogProba_1", "Score_2", "Proba_2", "LogProba_2", "Score_3", "Proba_3", "LogProba_3") SELECT "U"."KEY", "U"."Score_0", "U"."Proba_0", "U"."LogProba_0", "U"."Score_1", "U"."Proba_1", "U"."LogProba_1", "U"."Score_2", "U"."Proba_2", "U"."LogProba_2", "U"."Score_3", "U"."Proba_3", "U"."LogProba_3" 
FROM (WITH "DT_node_lookup" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_345 <= 0.466702401638031) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_252 <= -0.4418279826641083) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= -0.6586676836013794) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_131 <= -0.556926965713501) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_274 <= -0.9863739013671875) THEN 5 ELSE 6 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_393 <= 1.061076045036316) THEN 8 ELSE 9 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_278 <= 1.3222808837890625) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_449 <= 0.1280997097492218) THEN 12 ELSE 13 END ELSE 14 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_499 <= -0.92238450050354) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_287 <= -1.1373093128204346) THEN 17 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_381 <= -1.418312907218933) THEN 19 ELSE 20 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_173 <= 0.24681344628334045) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= 1.3136074542999268) THEN 23 ELSE 24 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_345 <= -0.36612066626548767) THEN 26 ELSE 27 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_27 <= -0.1889592409133911) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_40 <= 1.334503412246704) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_254 <= 0.5697075128555298) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_307 <= -1.2449188232421875) THEN 32 ELSE 33 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_387 <= 0.07866217941045761) THEN 35 ELSE 36 END END ELSE 37 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_179 <= -0.6500486135482788) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_165 <= 0.2254524677991867) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_14 <= -0.4992733299732208) THEN 41 ELSE 42 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_393 <= 0.7282619476318359) THEN 44 ELSE 45 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_471 <= 0.9100965261459351) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_181 <= -0.640133798122406) THEN 48 ELSE 49 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_418 <= -0.16365990042686462) THEN 51 ELSE 52 END END END END END AS node_id_2 
FROM "33322_J2367X_ADS_SCA_2_OUT" "ADS_sca_2_OUT"), 
"DT_node_data" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Proba_2" AS "Proba_2", "Values"."LogProba_2" AS "LogProba_2", "Values"."Proba_3" AS "Proba_3", "Values"."LogProba_3" AS "LogProba_3", "Values"."Decision" AS "Decision", "Values"."DecisionProba" AS "DecisionProba" 
FROM (SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 5 AS depth, 4 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 2 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 5 AS depth, 4 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 1 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 19 AS count, 5 AS depth, 7 AS parent_id, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 5 AS depth, 7 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 0.5 AS "Proba_1", -0.6931471805599453 AS "LogProba_1", 0.5 AS "Proba_2", -0.6931471805599453 AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 1 AS "Decision", 0.5 AS "DecisionProba" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 41 AS count, 5 AS depth, 11 AS parent_id, 0.07936507936507936 AS "Proba_0", -2.5336968139574325 AS "LogProba_0", 0.7142857142857143 AS "Proba_1", -0.3364722366212129 AS "LogProba_1", 0.14285714285714285 AS "Proba_2", -1.9459101490553135 AS "LogProba_2", 0.06349206349206349 AS "Proba_3", -2.7568403652716422 AS "LogProba_3", 1 AS "Decision", 0.7142857142857143 AS "DecisionProba" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 47 AS count, 5 AS depth, 11 AS parent_id, 0.3380281690140845 AS "Proba_0", -1.08462604669337 AS "LogProba_0", 0.30985915492957744 AS "Proba_1", -1.1716374236829996 AS "LogProba_1", 0.14084507042253522 AS "Proba_2", -1.9600947840472698 AS "LogProba_2", 0.2112676056338028 AS "Proba_3", -1.5546296759391054 AS "LogProba_3", 0 AS "Decision", 0.3380281690140845 AS "DecisionProba" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 7 AS count, 4 AS depth, 10 AS parent_id, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 4 AS depth, 16 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 1 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 5 AS depth, 18 AS parent_id, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 32 AS count, 5 AS depth, 18 AS parent_id, 0.05263157894736842 AS "Proba_0", -2.9444389791664407 AS "LogProba_0", 0.017543859649122806 AS "Proba_1", -4.04305126783455 AS "LogProba_1", 0.7894736842105263 AS "Proba_2", -0.2363887780642304 AS "LogProba_2", 0.14035087719298245 AS "Proba_3", -1.9636097261547143 AS "LogProba_3", 2 AS "Decision", 0.7894736842105263 AS "DecisionProba" FROM DUAL UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 111 AS count, 5 AS depth, 22 AS parent_id, 0.2682926829268293 AS "Proba_0", -1.3156767939059373 AS "LogProba_0", 0.11585365853658537 AS "Proba_1", -2.155427448657758 AS "LogProba_1", 0.3231707317073171 AS "Proba_2", -1.1295745142720766 AS "LogProba_2", 0.2926829268292683 AS "Proba_3", -1.2286654169163076 AS "LogProba_3", 2 AS "Decision", 0.3231707317073171 AS "DecisionProba" FROM DUAL UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 17 AS count, 5 AS depth, 22 AS parent_id, 0.037037037037037035 AS "Proba_0", -3.295836866004329 AS "LogProba_0", 0.6666666666666666 AS "Proba_1", -0.40546510810816444 AS "LogProba_1", 0.07407407407407407 AS "Proba_2", -2.6026896854443837 AS "LogProba_2", 0.2222222222222222 AS "Proba_3", -1.5040773967762742 AS "LogProba_3", 1 AS "Decision", 0.6666666666666666 AS "DecisionProba" FROM DUAL UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 38 AS count, 5 AS depth, 25 AS parent_id, 0.07936507936507936 AS "Proba_0", -2.5336968139574325 AS "LogProba_0", 0.7142857142857143 AS "Proba_1", -0.3364722366212129 AS "LogProba_1", 0.15873015873015872 AS "Proba_2", -1.8405496333974871 AS "LogProba_2", 0.047619047619047616 AS "Proba_3", -3.044522437723423 AS "LogProba_3", 1 AS "Decision", 0.7142857142857143 AS "DecisionProba" FROM DUAL UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 34 AS count, 5 AS depth, 25 AS parent_id, 0.15217391304347827 AS "Proba_0", -1.8827312474337816 AS "LogProba_0", 0.30434782608695654 AS "Proba_1", -1.1895840668738362 AS "LogProba_1", 0.13043478260869565 AS "Proba_2", -2.03688192726104 AS "LogProba_2", 0.41304347826086957 AS "Proba_3", -0.8842024173226546 AS "LogProba_3", 3 AS "Decision", 0.41304347826086957 AS "DecisionProba" FROM DUAL UNION ALL SELECT 32 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 5 AS depth, 31 AS parent_id, 0.7142857142857143 AS "Proba_0", -0.3364722366212129 AS "LogProba_0", 0.2857142857142857 AS "Proba_1", -1.252762968495368 AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 0 AS "Decision", 0.7142857142857143 AS "DecisionProba" FROM DUAL UNION ALL SELECT 33 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 36 AS count, 5 AS depth, 31 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 0.08333333333333333 AS "Proba_1", -2.4849066497880004 AS "LogProba_1", 0.06666666666666667 AS "Proba_2", -2.70805020110221 AS "LogProba_2", 0.85 AS "Proba_3", -0.16251892949777494 AS "LogProba_3", 3 AS "Decision", 0.85 AS "DecisionProba" FROM DUAL UNION ALL SELECT 35 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 7 AS count, 5 AS depth, 34 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 0.125 AS "Proba_1", -2.0794415416798357 AS "LogProba_1", 0.125 AS "Proba_2", -2.0794415416798357 AS "LogProba_2", 0.75 AS "Proba_3", -0.2876820724517809 AS "LogProba_3", 3 AS "Decision", 0.75 AS "DecisionProba" FROM DUAL UNION ALL SELECT 36 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 9 AS count, 5 AS depth, 34 AS parent_id, 0.08333333333333333 AS "Proba_0", -2.4849066497880004 AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 0.9166666666666666 AS "Proba_2", -0.08701137698962981 AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 2 AS "Decision", 0.9166666666666666 AS "DecisionProba" FROM DUAL UNION ALL SELECT 37 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 3 AS depth, 29 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 2 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 41 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 5 AS depth, 40 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 0.3333333333333333 AS "Proba_1", -1.0986122886681098 AS "LogProba_1", 0.3333333333333333 AS "Proba_2", -1.0986122886681098 AS "LogProba_2", 0.3333333333333333 AS "Proba_3", -1.0986122886681098 AS "LogProba_3", 1 AS "Decision", 0.3333333333333333 AS "DecisionProba" FROM DUAL UNION ALL SELECT 42 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 16 AS count, 5 AS depth, 40 AS parent_id, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 44 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 5 AS depth, 43 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 1 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 45 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 5 AS depth, 43 AS parent_id, 0.25 AS "Proba_0", -1.3862943611198906 AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 0.5 AS "Proba_2", -0.6931471805599453 AS "LogProba_2", 0.25 AS "Proba_3", -1.3862943611198906 AS "LogProba_3", 2 AS "Decision", 0.5 AS "DecisionProba" FROM DUAL UNION ALL SELECT 48 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 11 AS count, 5 AS depth, 47 AS parent_id, 0.16666666666666666 AS "Proba_0", -1.791759469228055 AS "LogProba_0", 0.05555555555555555 AS "Proba_1", -2.890371757896165 AS "LogProba_1", 0.7222222222222222 AS "Proba_2", -0.325422400434628 AS "LogProba_2", 0.05555555555555555 AS "Proba_3", -2.890371757896165 AS "LogProba_3", 2 AS "Decision", 0.7222222222222222 AS "DecisionProba" FROM DUAL UNION ALL SELECT 49 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 45 AS count, 5 AS depth, 47 AS parent_id, 0.1774193548387097 AS "Proba_0", -1.729239112246721 AS "LogProba_0", 0.0967741935483871 AS "Proba_1", -2.3353749158170367 AS "LogProba_1", 0.06451612903225806 AS "Proba_2", -2.740840023925201 AS "LogProba_2", 0.6612903225806451 AS "Proba_3", -0.4135623183407838 AS "LogProba_3", 3 AS "Decision", 0.6612903225806451 AS "DecisionProba" FROM DUAL UNION ALL SELECT 51 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 5 AS depth, 50 AS parent_id, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 52 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 7 AS count, 5 AS depth, 50 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 1 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL) "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".node_id AS node_id, "DT_node_data".feature AS feature, "DT_node_data".threshold AS threshold, "DT_node_data".count AS count, "DT_node_data".depth AS depth, "DT_node_data".parent_id AS parent_id, "DT_node_data"."Proba_0" AS "Proba_0", "DT_node_data"."LogProba_0" AS "LogProba_0", "DT_node_data"."Proba_1" AS "Proba_1", "DT_node_data"."LogProba_1" AS "LogProba_1", "DT_node_data"."Proba_2" AS "Proba_2", "DT_node_data"."LogProba_2" AS "LogProba_2", "DT_node_data"."Proba_3" AS "Proba_3", "DT_node_data"."LogProba_3" AS "LogProba_3", "DT_node_data"."Decision" AS "Decision", "DT_node_data"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".node_id), 
"BAG_Tree_0" AS 
(SELECT "DT_Output"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output"."Proba_0" AS "Proba_0", "DT_Output"."LogProba_0" AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output"."Proba_1" AS "Proba_1", "DT_Output"."LogProba_1" AS "LogProba_1", CAST(NULL AS BINARY_DOUBLE) AS "Score_2", "DT_Output"."Proba_2" AS "Proba_2", "DT_Output"."LogProba_2" AS "LogProba_2", CAST(NULL AS BINARY_DOUBLE) AS "Score_3", "DT_Output"."Proba_3" AS "Proba_3", "DT_Output"."LogProba_3" AS "LogProba_3" 
FROM "DT_Output"), 
"DT_node_lookup_1" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_20 <= 0.5855041146278381) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_379 <= -0.7869102954864502) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_248 <= -1.082827091217041) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_266 <= 0.24551808834075928) THEN 4 ELSE 5 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_438 <= 1.2099682092666626) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_208 <= 0.5881165266036987) THEN 8 ELSE 9 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_237 <= 1.716711401939392) THEN 11 ELSE 12 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_193 <= 0.585051953792572) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_445 <= -0.12649914622306824) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_211 <= 0.2350127249956131) THEN 16 ELSE 17 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_488 <= 0.856252908706665) THEN 19 ELSE 20 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_398 <= -0.7139865159988403) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_15 <= -1.0342562198638916) THEN 23 ELSE 24 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_309 <= -1.3104711771011353) THEN 26 ELSE 27 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_230 <= 0.5449466109275818) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_485 <= -0.42033612728118896) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_108 <= 0.43254899978637695) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_118 <= 1.5060703754425049) THEN 32 ELSE 33 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_57 <= -1.4663735628128052) THEN 35 ELSE 36 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_340 <= -1.124168038368225) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_422 <= 0.8270207047462463) THEN 39 ELSE 40 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_175 <= 0.41531550884246826) THEN 42 ELSE 43 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_390 <= -1.2506768703460693) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_399 <= 0.4747009575366974) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_257 <= -0.2878456115722656) THEN 47 ELSE 48 END ELSE 49 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_227 <= -1.7795319557189941) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= -0.24169844388961792) THEN 52 ELSE 53 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_472 <= -1.4921197891235352) THEN 55 ELSE 56 END END END END END AS node_id_2 
FROM "33322_J2367X_ADS_SCA_2_OUT" "ADS_sca_2_OUT"), 
"DT_node_data_1" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Proba_2" AS "Proba_2", "Values"."LogProba_2" AS "LogProba_2", "Values"."Proba_3" AS "Proba_3", "Values"."LogProba_3" AS "LogProba_3", "Values"."Decision" AS "Decision", "Values"."DecisionProba" AS "DecisionProba" 
FROM (SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 4 AS depth, 3 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 1.0 AS "Proba_3", 0.0 AS "LogProba_3", 3 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 7 AS count, 4 AS depth, 3 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 1 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 34 AS count, 5 AS depth, 7 AS parent_id, 0.034482758620689655 AS "Proba_0", -3.367295829986474 AS "LogProba_0", 0.034482758620689655 AS "Proba_1", -3.367295829986474 AS "LogProba_1", 0.8793103448275862 AS "Proba_2", -0.1286173778220936 AS "LogProba_2", 0.05172413793103448 AS "Proba_3", -2.9618307218783095 AS "LogProba_3", 2 AS "Decision", 0.8793103448275862 AS "DecisionProba" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 14 AS count, 5 AS depth, 7 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 0.47058823529411764 AS "Proba_1", -0.7537718023763802 AS "LogProba_1", 0.29411764705882354 AS "Proba_2", -1.2237754316221157 AS "LogProba_2", 0.23529411764705882 AS "Proba_3", -1.4469189829363254 AS "LogProba_3", 1 AS "Decision", 0.47058823529411764 AS "DecisionProba" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 6 AS count, 5 AS depth, 10 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 1 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 5 AS depth, 10 AS parent_id, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 54 AS count, 5 AS depth, 15 AS parent_id, 0.13793103448275862 AS "Proba_0", -1.9810014688665833 AS "LogProba_0", 0.16091954022988506 AS "Proba_1", -1.826850789039325 AS "LogProba_1", 0.5287356321839081 AS "Proba_2", -0.6372667221654886 AS "LogProba_2", 0.1724137931034483 AS "Proba_3", -1.7578579175523736 AS "LogProba_3", 2 AS "Decision", 0.5287356321839081 AS "DecisionProba" FROM DUAL UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 48 AS count, 5 AS depth, 15 AS parent_id, 0.2597402597402597 AS "Proba_0", -1.348073148299693 AS "LogProba_0", 0.35064935064935066 AS "Proba_1", -1.0479685558493548 AS "LogProba_1", 0.09090909090909091 AS "Proba_2", -2.3978952727983707 AS "LogProba_2", 0.2987012987012987 AS "Proba_3", -1.2083112059245342 AS "LogProba_3", 1 AS "Decision", 0.35064935064935066 AS "DecisionProba" FROM DUAL UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 80 AS count, 5 AS depth, 18 AS parent_id, 0.3464566929133858 AS "Proba_0", -1.0599974525403302 AS "LogProba_0", 0.3228346456692913 AS "Proba_1", -1.1306150197542835 AS "LogProba_1", 0.06299212598425197 AS "Proba_2", -2.7647455447787554 AS "LogProba_2", 0.2677165354330709 AS "Proba_3", -1.3178265618424299 AS "LogProba_3", 0 AS "Decision", 0.3464566929133858 AS "DecisionProba" FROM DUAL UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 32 AS count, 5 AS depth, 18 AS parent_id, 0.7903225806451613 AS "Proba_0", -0.23531408693446498 AS "LogProba_0", 0.06451612903225806 AS "Proba_1", -2.740840023925201 AS "LogProba_1", 0.11290322580645161 AS "Proba_2", -2.181224235989778 AS "LogProba_2", 0.03225806451612903 AS "Proba_3", -3.4339872044851463 AS "LogProba_3", 0 AS "Decision", 0.7903225806451613 AS "DecisionProba" FROM DUAL UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 8 AS count, 5 AS depth, 22 AS parent_id, 0.4444444444444444 AS "Proba_0", -0.8109302162163288 AS "LogProba_0", 0.5 AS "Proba_1", -0.6931471805599453 AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 0.05555555555555555 AS "Proba_3", -2.890371757896165 AS "LogProba_3", 1 AS "Decision", 0.5 AS "DecisionProba" FROM DUAL UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 11 AS count, 5 AS depth, 22 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 1.0 AS "Proba_3", 0.0 AS "LogProba_3", 3 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 8 AS count, 5 AS depth, 25 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 0.9166666666666666 AS "Proba_1", -0.08701137698962981 AS "LogProba_1", 0.08333333333333333 AS "Proba_2", -2.4849066497880004 AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 1 AS "Decision", 0.9166666666666666 AS "DecisionProba" FROM DUAL UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 58 AS count, 5 AS depth, 25 AS parent_id, 0.011235955056179775 AS "Proba_0", -4.48863636973214 AS "LogProba_0", 0.20224719101123595 AS "Proba_1", -1.5982646118359751 AS "LogProba_1", 0.5842696629213483 AS "Proba_2", -0.5373926511507126 AS "LogProba_2", 0.20224719101123595 AS "Proba_3", -1.5982646118359751 AS "LogProba_3", 2 AS "Decision", 0.5842696629213483 AS "DecisionProba" FROM DUAL UNION ALL SELECT 32 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 15 AS count, 5 AS depth, 31 AS parent_id, 0.3333333333333333 AS "Proba_0", -1.0986122886681098 AS "LogProba_0", 0.2222222222222222 AS "Proba_1", -1.5040773967762742 AS "LogProba_1", 0.4444444444444444 AS "Proba_2", -0.8109302162163288 AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 2 AS "Decision", 0.4444444444444444 AS "DecisionProba" FROM DUAL UNION ALL SELECT 33 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 5 AS depth, 31 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 1.0 AS "Proba_3", 0.0 AS "LogProba_3", 3 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 35 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 5 AS depth, 34 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 2 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 36 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 14 AS count, 5 AS depth, 34 AS parent_id, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 39 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 7 AS count, 5 AS depth, 38 AS parent_id, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 40 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 5 AS depth, 38 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 0.8 AS "Proba_1", -0.2231435513142097 AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 0.2 AS "Proba_3", -1.6094379124341003 AS "LogProba_3", 1 AS "Decision", 0.8 AS "DecisionProba" FROM DUAL UNION ALL SELECT 42 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 38 AS count, 5 AS depth, 41 AS parent_id, 0.09433962264150944 AS "Proba_0", -2.3608540011180215 AS "LogProba_0", 0.11320754716981132 AS "Proba_1", -2.178532444324067 AS "LogProba_1", 0.11320754716981132 AS "Proba_2", -2.178532444324067 AS "LogProba_2", 0.6792452830188679 AS "Proba_3", -0.3867729750960119 AS "LogProba_3", 3 AS "Decision", 0.6792452830188679 AS "DecisionProba" FROM DUAL UNION ALL SELECT 43 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 26 AS count, 5 AS depth, 41 AS parent_id, 0.11764705882352941 AS "Proba_0", -2.1400661634962708 AS "LogProba_0", 0.14705882352941177 AS "Proba_1", -1.916922612182061 AS "LogProba_1", 0.5294117647058824 AS "Proba_2", -0.6359887667199967 AS "LogProba_2", 0.20588235294117646 AS "Proba_3", -1.580450375560848 AS "LogProba_3", 2 AS "Decision", 0.5294117647058824 AS "DecisionProba" FROM DUAL UNION ALL SELECT 47 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 5 AS depth, 46 AS parent_id, 0.5 AS "Proba_0", -0.6931471805599453 AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 0.5 AS "Proba_3", -0.6931471805599453 AS "LogProba_3", 0 AS "Decision", 0.5 AS "DecisionProba" FROM DUAL UNION ALL SELECT 48 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 5 AS depth, 46 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 1 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 49 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 4 AS depth, 45 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 2 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 52 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 5 AS depth, 51 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 1 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 53 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 5 AS depth, 51 AS parent_id, 0.5 AS "Proba_0", -0.6931471805599453 AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 0.5 AS "Proba_2", -0.6931471805599453 AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 0 AS "Decision", 0.5 AS "DecisionProba" FROM DUAL UNION ALL SELECT 55 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 5 AS depth, 54 AS parent_id, 0.5 AS "Proba_0", -0.6931471805599453 AS "LogProba_0", 0.5 AS "Proba_1", -0.6931471805599453 AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 0 AS "Decision", 0.5 AS "DecisionProba" FROM DUAL UNION ALL SELECT 56 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 24 AS count, 5 AS depth, 54 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 1.0 AS "Proba_3", 0.0 AS "LogProba_3", 3 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL) "Values"), 
"DT_Output_1" AS 
(SELECT "DT_node_lookup_1"."KEY" AS "KEY", "DT_node_lookup_1".node_id_2 AS node_id_2, "DT_node_data_1".node_id AS node_id, "DT_node_data_1".feature AS feature, "DT_node_data_1".threshold AS threshold, "DT_node_data_1".count AS count, "DT_node_data_1".depth AS depth, "DT_node_data_1".parent_id AS parent_id, "DT_node_data_1"."Proba_0" AS "Proba_0", "DT_node_data_1"."LogProba_0" AS "LogProba_0", "DT_node_data_1"."Proba_1" AS "Proba_1", "DT_node_data_1"."LogProba_1" AS "LogProba_1", "DT_node_data_1"."Proba_2" AS "Proba_2", "DT_node_data_1"."LogProba_2" AS "LogProba_2", "DT_node_data_1"."Proba_3" AS "Proba_3", "DT_node_data_1"."LogProba_3" AS "LogProba_3", "DT_node_data_1"."Decision" AS "Decision", "DT_node_data_1"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup_1" LEFT OUTER JOIN "DT_node_data_1" ON "DT_node_lookup_1".node_id_2 = "DT_node_data_1".node_id), 
"BAG_Tree_1" AS 
(SELECT "DT_Output_1"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output_1"."Proba_0" AS "Proba_0", "DT_Output_1"."LogProba_0" AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output_1"."Proba_1" AS "Proba_1", "DT_Output_1"."LogProba_1" AS "LogProba_1", CAST(NULL AS BINARY_DOUBLE) AS "Score_2", "DT_Output_1"."Proba_2" AS "Proba_2", "DT_Output_1"."LogProba_2" AS "LogProba_2", CAST(NULL AS BINARY_DOUBLE) AS "Score_3", "DT_Output_1"."Proba_3" AS "Proba_3", "DT_Output_1"."LogProba_3" AS "LogProba_3" 
FROM "DT_Output_1"), 
"DT_node_lookup_2" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_20 <= 0.8958176374435425) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_497 <= -0.7584229707717896) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_340 <= 0.8478966951370239) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_130 <= -0.8380715847015381) THEN 4 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_116 <= 0.13519656658172607) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_252 <= -0.4913465678691864) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_425 <= -1.3210102319717407) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_133 <= -0.35365667939186096) THEN 13 ELSE 14 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_217 <= 1.351211428642273) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_27 <= 0.6070070266723633) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_144 <= 0.42267972230911255) THEN 18 ELSE 19 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_250 <= -0.20352166891098022) THEN 21 ELSE 22 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_428 <= 0.4709654152393341) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_484 <= -0.8645098209381104) THEN 25 ELSE 26 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_329 <= 0.29053807258605957) THEN 28 ELSE 29 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_254 <= 0.5216294527053833) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_241 <= -1.1761568784713745) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_295 <= -0.14721715450286865) THEN 33 ELSE 34 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_78 <= 1.7315070629119873) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_202 <= -1.0111117362976074) THEN 37 ELSE 38 END ELSE 39 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_104 <= -0.16478249430656433) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_65 <= 0.33622145652770996) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_158 <= 0.4545435905456543) THEN 43 ELSE 44 END ELSE 45 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_108 <= -0.15374061465263367) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_133 <= 0.19058531522750854) THEN 48 ELSE 49 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_154 <= -1.085737943649292) THEN 51 ELSE 52 END END END END END AS node_id_2 
FROM "33322_J2367X_ADS_SCA_2_OUT" "ADS_sca_2_OUT"), 
"DT_node_data_2" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Proba_2" AS "Proba_2", "Values"."LogProba_2" AS "LogProba_2", "Values"."Proba_3" AS "Proba_3", "Values"."LogProba_3" AS "LogProba_3", "Values"."Decision" AS "Decision", "Values"."DecisionProba" AS "DecisionProba" 
FROM (SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 4 AS depth, 3 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 1.0 AS "Proba_3", 0.0 AS "LogProba_3", 3 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 35 AS count, 5 AS depth, 5 AS parent_id, 0.8620689655172413 AS "Proba_0", -0.14842000511827333 AS "LogProba_0", 0.06896551724137931 AS "Proba_1", -2.6741486494265287 AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 0.06896551724137931 AS "Proba_3", -2.6741486494265287 AS "LogProba_3", 0 AS "Decision", 0.8620689655172413 AS "DecisionProba" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 26 AS count, 5 AS depth, 5 AS parent_id, 0.325 AS "Proba_0", -1.1239300966523995 AS "LogProba_0", 0.1 AS "Proba_1", -2.3025850929940455 AS "LogProba_1", 0.475 AS "Proba_2", -0.7444404749474959 AS "LogProba_2", 0.1 AS "Proba_3", -2.3025850929940455 AS "LogProba_3", 2 AS "Decision", 0.475 AS "DecisionProba" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 5 AS depth, 9 AS parent_id, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 5 AS depth, 9 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 1.0 AS "Proba_3", 0.0 AS "LogProba_3", 3 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 5 AS depth, 12 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 1.0 AS "Proba_3", 0.0 AS "LogProba_3", 3 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 12 AS count, 5 AS depth, 12 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 2 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 147 AS count, 5 AS depth, 17 AS parent_id, 0.14042553191489363 AS "Proba_0", -1.9630779526776787 AS "LogProba_0", 0.3404255319148936 AS "Proba_1", -1.0775588794702773 AS "LogProba_1", 0.3404255319148936 AS "Proba_2", -1.0775588794702773 AS "LogProba_2", 0.17872340425531916 AS "Proba_3", -1.7219158958607905 AS "LogProba_3", 1 AS "Decision", 0.3404255319148936 AS "DecisionProba" FROM DUAL UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 63 AS count, 5 AS depth, 17 AS parent_id, 0.08108108108108109 AS "Proba_0", -2.512305623976115 AS "LogProba_0", 0.18018018018018017 AS "Proba_1", -1.7137979277583433 AS "LogProba_1", 0.1981981981981982 AS "Proba_2", -1.6184877479540183 AS "LogProba_2", 0.5405405405405406 AS "Proba_3", -0.6151856390902334 AS "LogProba_3", 3 AS "Decision", 0.5405405405405406 AS "DecisionProba" FROM DUAL UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 28 AS count, 5 AS depth, 20 AS parent_id, 0.5681818181818182 AS "Proba_0", -0.5653138090500603 AS "LogProba_0", 0.1590909090909091 AS "Proba_1", -1.8382794848629478 AS "LogProba_1", 0.2727272727272727 AS "Proba_2", -1.2992829841302609 AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 0 AS "Decision", 0.5681818181818182 AS "DecisionProba" FROM DUAL UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 50 AS count, 5 AS depth, 20 AS parent_id, 0.12 AS "Proba_0", -2.120263536200091 AS "LogProba_0", 0.6933333333333334 AS "Proba_1", -0.36624439495488303 AS "LogProba_1", 0.05333333333333334 AS "Proba_2", -2.9311937524164198 AS "LogProba_2", 0.13333333333333333 AS "Proba_3", -2.0149030205422647 AS "LogProba_3", 1 AS "Decision", 0.6933333333333334 AS "DecisionProba" FROM DUAL UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 5 AS depth, 24 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 1.0 AS "Proba_3", 0.0 AS "LogProba_3", 3 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 20 AS count, 5 AS depth, 24 AS parent_id, 0.96875 AS "Proba_0", -0.0317486983145803 AS "LogProba_0", 0.03125 AS "Proba_1", -3.4657359027997265 AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 0 AS "Decision", 0.96875 AS "DecisionProba" FROM DUAL UNION ALL SELECT 28 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 8 AS count, 5 AS depth, 27 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 0.8888888888888888 AS "Proba_1", -0.11778303565638351 AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 0.1111111111111111 AS "Proba_3", -2.1972245773362196 AS "LogProba_3", 1 AS "Decision", 0.8888888888888888 AS "DecisionProba" FROM DUAL UNION ALL SELECT 29 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 5 AS depth, 27 AS parent_id, 0.2727272727272727 AS "Proba_0", -1.2992829841302609 AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 0.45454545454545453 AS "Proba_2", -0.7884573603642702 AS "LogProba_2", 0.2727272727272727 AS "Proba_3", -1.2992829841302609 AS "LogProba_3", 2 AS "Decision", 0.45454545454545453 AS "DecisionProba" FROM DUAL UNION ALL SELECT 33 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 4 AS depth, 32 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 2 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 34 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 4 AS depth, 32 AS parent_id, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 37 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 11 AS count, 5 AS depth, 36 AS parent_id, 0.42857142857142855 AS "Proba_0", -0.8472978603872037 AS "LogProba_0", 0.14285714285714285 AS "Proba_1", -1.9459101490553135 AS "LogProba_1", 0.07142857142857142 AS "Proba_2", -2.639057329615259 AS "LogProba_2", 0.35714285714285715 AS "Proba_3", -1.0296194171811581 AS "LogProba_3", 0 AS "Decision", 0.42857142857142855 AS "DecisionProba" FROM DUAL UNION ALL SELECT 38 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 40 AS count, 5 AS depth, 36 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 0.015625 AS "Proba_1", -4.1588830833596715 AS "LogProba_1", 0.078125 AS "Proba_2", -2.5494451709255714 AS "LogProba_2", 0.90625 AS "Proba_3", -0.09844007281325252 AS "LogProba_3", 3 AS "Decision", 0.90625 AS "DecisionProba" FROM DUAL UNION ALL SELECT 39 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 4 AS depth, 35 AS parent_id, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 43 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 5 AS depth, 42 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 2 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 44 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 5 AS depth, 42 AS parent_id, 0.6666666666666666 AS "Proba_0", -0.40546510810816444 AS "LogProba_0", 0.3333333333333333 AS "Proba_1", -1.0986122886681098 AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 0 AS "Decision", 0.6666666666666666 AS "DecisionProba" FROM DUAL UNION ALL SELECT 45 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 6 AS count, 4 AS depth, 41 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 1.0 AS "Proba_3", 0.0 AS "LogProba_3", 3 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 48 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 5 AS depth, 47 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 1 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 49 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 5 AS depth, 47 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 2 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 51 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 5 AS depth, 50 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 1 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 52 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 11 AS count, 5 AS depth, 50 AS parent_id, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL) "Values"), 
"DT_Output_2" AS 
(SELECT "DT_node_lookup_2"."KEY" AS "KEY", "DT_node_lookup_2".node_id_2 AS node_id_2, "DT_node_data_2".node_id AS node_id, "DT_node_data_2".feature AS feature, "DT_node_data_2".threshold AS threshold, "DT_node_data_2".count AS count, "DT_node_data_2".depth AS depth, "DT_node_data_2".parent_id AS parent_id, "DT_node_data_2"."Proba_0" AS "Proba_0", "DT_node_data_2"."LogProba_0" AS "LogProba_0", "DT_node_data_2"."Proba_1" AS "Proba_1", "DT_node_data_2"."LogProba_1" AS "LogProba_1", "DT_node_data_2"."Proba_2" AS "Proba_2", "DT_node_data_2"."LogProba_2" AS "LogProba_2", "DT_node_data_2"."Proba_3" AS "Proba_3", "DT_node_data_2"."LogProba_3" AS "LogProba_3", "DT_node_data_2"."Decision" AS "Decision", "DT_node_data_2"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup_2" LEFT OUTER JOIN "DT_node_data_2" ON "DT_node_lookup_2".node_id_2 = "DT_node_data_2".node_id), 
"BAG_Tree_2" AS 
(SELECT "DT_Output_2"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output_2"."Proba_0" AS "Proba_0", "DT_Output_2"."LogProba_0" AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output_2"."Proba_1" AS "Proba_1", "DT_Output_2"."LogProba_1" AS "LogProba_1", CAST(NULL AS BINARY_DOUBLE) AS "Score_2", "DT_Output_2"."Proba_2" AS "Proba_2", "DT_Output_2"."LogProba_2" AS "LogProba_2", CAST(NULL AS BINARY_DOUBLE) AS "Score_3", "DT_Output_2"."Proba_3" AS "Proba_3", "DT_Output_2"."LogProba_3" AS "LogProba_3" 
FROM "DT_Output_2"), 
"DT_node_lookup_3" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_268 <= 0.5288784503936768) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_270 <= 1.8688602447509766) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_333 <= -1.265142560005188) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_438 <= -0.3783906400203705) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_238 <= 0.04861898347735405) THEN 5 ELSE 6 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_279 <= 1.4903478622436523) THEN 8 ELSE 9 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_246 <= 0.1848047971725464) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_195 <= -0.1694035828113556) THEN 12 ELSE 13 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_285 <= 0.4999768137931824) THEN 15 ELSE 16 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_307 <= 2.431281566619873) THEN 18 ELSE 19 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_401 <= 0.4903871417045593) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_270 <= 1.388758659362793) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_340 <= -0.476382851600647) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_440 <= -1.3599958419799805) THEN 24 ELSE 25 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_161 <= -0.5378142595291138) THEN 27 ELSE 28 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_264 <= -1.3689221143722534) THEN 30 ELSE 31 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_46 <= -0.1472373604774475) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_282 <= -0.27556806802749634) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_458 <= -0.025598865002393723) THEN 35 ELSE 36 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_216 <= -0.6520801782608032) THEN 38 ELSE 39 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_192 <= -0.8514524698257446) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_421 <= -0.010484784841537476) THEN 42 ELSE 43 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_419 <= 0.9602382183074951) THEN 45 ELSE 46 END END END END END AS node_id_2 
FROM "33322_J2367X_ADS_SCA_2_OUT" "ADS_sca_2_OUT"), 
"DT_node_data_3" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Proba_2" AS "Proba_2", "Values"."LogProba_2" AS "LogProba_2", "Values"."Proba_3" AS "Proba_3", "Values"."LogProba_3" AS "LogProba_3", "Values"."Decision" AS "Decision", "Values"."DecisionProba" AS "DecisionProba" 
FROM (SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 11 AS count, 5 AS depth, 4 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 0.4 AS "Proba_1", -0.916290731874155 AS "LogProba_1", 0.4 AS "Proba_2", -0.916290731874155 AS "LogProba_2", 0.2 AS "Proba_3", -1.6094379124341003 AS "LogProba_3", 1 AS "Decision", 0.4 AS "DecisionProba" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 5 AS depth, 4 AS parent_id, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 17 AS count, 5 AS depth, 7 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 1.0 AS "Proba_3", 0.0 AS "LogProba_3", 3 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 5 AS depth, 7 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 2 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 70 AS count, 5 AS depth, 11 AS parent_id, 0.10743801652892562 AS "Proba_0", -2.230841188135204 AS "LogProba_0", 0.5785123966942148 AS "Proba_1", -0.5472953035473822 AS "LogProba_1", 0.2066115702479339 AS "Proba_2", -1.5769147207285403 AS "LogProba_2", 0.10743801652892562 AS "Proba_3", -2.230841188135204 AS "LogProba_3", 1 AS "Decision", 0.5785123966942148 AS "DecisionProba" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 103 AS count, 5 AS depth, 11 AS parent_id, 0.23030303030303031 AS "Proba_0", -1.4683593141741949 AS "LogProba_0", 0.24848484848484848 AS "Proba_1", -1.3923734071962728 AS "LogProba_1", 0.11515151515151516 AS "Proba_2", -2.16150649473414 AS "LogProba_2", 0.40606060606060607 AS "Proba_3", -0.9012528545096146 AS "LogProba_3", 3 AS "Decision", 0.40606060606060607 AS "DecisionProba" FROM DUAL UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 83 AS count, 5 AS depth, 14 AS parent_id, 0.0916030534351145 AS "Proba_0", -2.3902906734131513 AS "LogProba_0", 0.1984732824427481 AS "Proba_1", -1.6171007851796695 AS "LogProba_1", 0.5877862595419847 AS "Proba_2", -0.5313919013474677 AS "LogProba_2", 0.12213740458015267 AS "Proba_3", -2.1026086009613705 AS "LogProba_3", 2 AS "Decision", 0.5877862595419847 AS "DecisionProba" FROM DUAL UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 44 AS count, 5 AS depth, 14 AS parent_id, 0.27419354838709675 AS "Proba_0", -1.2939210409888755 AS "LogProba_0", 0.3548387096774194 AS "Proba_1", -1.0360919316867756 AS "LogProba_1", 0.11290322580645161 AS "Proba_2", -2.181224235989778 AS "LogProba_2", 0.25806451612903225 AS "Proba_3", -1.3545456628053103 AS "LogProba_3", 1 AS "Decision", 0.3548387096774194 AS "DecisionProba" FROM DUAL UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 14 AS count, 3 AS depth, 17 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 2 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 3 AS depth, 17 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 1 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 5 AS depth, 23 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 0.3333333333333333 AS "Proba_1", -1.0986122886681098 AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 0.6666666666666666 AS "Proba_3", -0.40546510810816444 AS "LogProba_3", 3 AS "Decision", 0.6666666666666666 AS "DecisionProba" FROM DUAL UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 30 AS count, 5 AS depth, 23 AS parent_id, 0.9411764705882353 AS "Proba_0", -0.060624621816434854 AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 0.0196078431372549 AS "Proba_2", -3.9318256327243257 AS "LogProba_2", 0.0392156862745098 AS "Proba_3", -3.2386784521643803 AS "LogProba_3", 0 AS "Decision", 0.9411764705882353 AS "DecisionProba" FROM DUAL UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 17 AS count, 5 AS depth, 26 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 0.14814814814814814 AS "Proba_1", -1.9095425048844386 AS "LogProba_1", 0.37037037037037035 AS "Proba_2", -0.9932517730102834 AS "LogProba_2", 0.48148148148148145 AS "Proba_3", -0.7308875085427924 AS "LogProba_3", 3 AS "Decision", 0.48148148148148145 AS "DecisionProba" FROM DUAL UNION ALL SELECT 28 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 46 AS count, 5 AS depth, 26 AS parent_id, 0.5797101449275363 AS "Proba_0", -0.5452270504833231 AS "LogProba_0", 0.08695652173913043 AS "Proba_1", -2.4423470353692043 AS "LogProba_1", 0.08695652173913043 AS "Proba_2", -2.4423470353692043 AS "LogProba_2", 0.2463768115942029 AS "Proba_3", -1.4008931605410433 AS "LogProba_3", 0 AS "Decision", 0.5797101449275363 AS "DecisionProba" FROM DUAL UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 4 AS depth, 29 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 1.0 AS "Proba_3", 0.0 AS "LogProba_3", 3 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 31 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 7 AS count, 4 AS depth, 29 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 1 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 35 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 5 AS depth, 34 AS parent_id, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 36 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 5 AS depth, 34 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 0.2727272727272727 AS "Proba_2", -1.2992829841302609 AS "LogProba_2", 0.7272727272727273 AS "Proba_3", -0.3184537311185346 AS "LogProba_3", 3 AS "Decision", 0.7272727272727273 AS "DecisionProba" FROM DUAL UNION ALL SELECT 38 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 6 AS count, 5 AS depth, 37 AS parent_id, 0.14285714285714285 AS "Proba_0", -1.9459101490553135 AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 0.7142857142857143 AS "Proba_2", -0.3364722366212129 AS "LogProba_2", 0.14285714285714285 AS "Proba_3", -1.9459101490553135 AS "LogProba_3", 2 AS "Decision", 0.7142857142857143 AS "DecisionProba" FROM DUAL UNION ALL SELECT 39 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 9 AS count, 5 AS depth, 37 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 1 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 42 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 5 AS depth, 41 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 1 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 43 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 5 AS depth, 41 AS parent_id, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 45 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 15 AS count, 5 AS depth, 44 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 2 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 46 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 5 AS depth, 44 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 1 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL) "Values"), 
"DT_Output_3" AS 
(SELECT "DT_node_lookup_3"."KEY" AS "KEY", "DT_node_lookup_3".node_id_2 AS node_id_2, "DT_node_data_3".node_id AS node_id, "DT_node_data_3".feature AS feature, "DT_node_data_3".threshold AS threshold, "DT_node_data_3".count AS count, "DT_node_data_3".depth AS depth, "DT_node_data_3".parent_id AS parent_id, "DT_node_data_3"."Proba_0" AS "Proba_0", "DT_node_data_3"."LogProba_0" AS "LogProba_0", "DT_node_data_3"."Proba_1" AS "Proba_1", "DT_node_data_3"."LogProba_1" AS "LogProba_1", "DT_node_data_3"."Proba_2" AS "Proba_2", "DT_node_data_3"."LogProba_2" AS "LogProba_2", "DT_node_data_3"."Proba_3" AS "Proba_3", "DT_node_data_3"."LogProba_3" AS "LogProba_3", "DT_node_data_3"."Decision" AS "Decision", "DT_node_data_3"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup_3" LEFT OUTER JOIN "DT_node_data_3" ON "DT_node_lookup_3".node_id_2 = "DT_node_data_3".node_id), 
"BAG_Tree_3" AS 
(SELECT "DT_Output_3"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output_3"."Proba_0" AS "Proba_0", "DT_Output_3"."LogProba_0" AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output_3"."Proba_1" AS "Proba_1", "DT_Output_3"."LogProba_1" AS "LogProba_1", CAST(NULL AS BINARY_DOUBLE) AS "Score_2", "DT_Output_3"."Proba_2" AS "Proba_2", "DT_Output_3"."LogProba_2" AS "LogProba_2", CAST(NULL AS BINARY_DOUBLE) AS "Score_3", "DT_Output_3"."Proba_3" AS "Proba_3", "DT_Output_3"."LogProba_3" AS "LogProba_3" 
FROM "DT_Output_3"), 
"DT_node_lookup_4" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_102 <= -1.5063667297363281) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_237 <= -0.3652583360671997) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_399 <= 1.0859882831573486) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_66 <= -0.6668537855148315) THEN 4 ELSE 5 END ELSE 6 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_311 <= -0.9191741943359375) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_131 <= -0.19748139381408691) THEN 9 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_360 <= -0.287247896194458) THEN 11 ELSE 12 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_488 <= -1.5567193031311035) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= 0.25079742074012756) THEN 15 ELSE 16 END ELSE 17 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_23 <= -1.2744064331054688) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_461 <= 0.8886592388153076) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_195 <= 0.982140302658081) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_24 <= -1.0167384147644043) THEN 22 ELSE 23 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_421 <= -1.6384475231170654) THEN 25 ELSE 26 END END ELSE 27 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_144 <= 0.5224064588546753) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_266 <= -0.607884407043457) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_394 <= 0.8713260293006897) THEN 31 ELSE 32 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_131 <= -1.1180822849273682) THEN 34 ELSE 35 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_21 <= 0.20438560843467712) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_116 <= 1.1935675144195557) THEN 38 ELSE 39 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_194 <= 0.3408706486225128) THEN 41 ELSE 42 END END END END END AS node_id_2 
FROM "33322_J2367X_ADS_SCA_2_OUT" "ADS_sca_2_OUT"), 
"DT_node_data_4" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Proba_2" AS "Proba_2", "Values"."LogProba_2" AS "LogProba_2", "Values"."Proba_3" AS "Proba_3", "Values"."LogProba_3" AS "LogProba_3", "Values"."Decision" AS "Decision", "Values"."DecisionProba" AS "DecisionProba" 
FROM (SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 4 AS depth, 3 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 1.0 AS "Proba_3", 0.0 AS "LogProba_3", 3 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 4 AS depth, 3 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 1 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 3 AS depth, 2 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 2 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 4 AS depth, 8 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 2 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 5 AS depth, 10 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 1.0 AS "Proba_3", 0.0 AS "LogProba_3", 3 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 5 AS depth, 10 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 1 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 5 AS depth, 14 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 1 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 5 AS depth, 14 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 1.0 AS "Proba_3", 0.0 AS "LogProba_3", 3 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 20 AS count, 4 AS depth, 13 AS parent_id, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 8 AS count, 5 AS depth, 21 AS parent_id, 0.2 AS "Proba_0", -1.6094379124341003 AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 0.3 AS "Proba_2", -1.2039728043259361 AS "LogProba_2", 0.5 AS "Proba_3", -0.6931471805599453 AS "LogProba_3", 3 AS "Decision", 0.5 AS "DecisionProba" FROM DUAL UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 35 AS count, 5 AS depth, 21 AS parent_id, 0.06349206349206349 AS "Proba_0", -2.7568403652716422 AS "LogProba_0", 0.873015873015873 AS "Proba_1", -0.13580154115906176 AS "LogProba_1", 0.047619047619047616 AS "Proba_2", -3.044522437723423 AS "LogProba_2", 0.015873015873015872 AS "Proba_3", -4.143134726391533 AS "LogProba_3", 1 AS "Decision", 0.873015873015873 AS "DecisionProba" FROM DUAL UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 5 AS depth, 24 AS parent_id, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 5 AS depth, 24 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 1.0 AS "Proba_3", 0.0 AS "LogProba_3", 3 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 3 AS depth, 19 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 2 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 31 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 70 AS count, 5 AS depth, 30 AS parent_id, 0.34545454545454546 AS "Proba_0", -1.0628942060660305 AS "LogProba_0", 0.12727272727272726 AS "Proba_1", -2.0614230361771577 AS "LogProba_1", 0.23636363636363636 AS "Proba_2", -1.4423838277709342 AS "LogProba_2", 0.2909090909090909 AS "Proba_3", -1.2347444629926898 AS "LogProba_3", 0 AS "Decision", 0.34545454545454546 AS "DecisionProba" FROM DUAL UNION ALL SELECT 32 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 15 AS count, 5 AS depth, 30 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 0.041666666666666664 AS "Proba_1", -3.1780538303479458 AS "LogProba_1", 0.041666666666666664 AS "Proba_2", -3.1780538303479458 AS "LogProba_2", 0.9166666666666666 AS "Proba_3", -0.08701137698962981 AS "LogProba_3", 3 AS "Decision", 0.9166666666666666 AS "DecisionProba" FROM DUAL UNION ALL SELECT 34 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 30 AS count, 5 AS depth, 33 AS parent_id, 0.04081632653061224 AS "Proba_0", -3.1986731175506815 AS "LogProba_0", 0.7142857142857143 AS "Proba_1", -0.3364722366212129 AS "LogProba_1", 0.08163265306122448 AS "Proba_2", -2.505525936990736 AS "LogProba_2", 0.16326530612244897 AS "Proba_3", -1.8123787564307907 AS "LogProba_3", 1 AS "Decision", 0.7142857142857143 AS "DecisionProba" FROM DUAL UNION ALL SELECT 35 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 171 AS count, 5 AS depth, 33 AS parent_id, 0.1984732824427481 AS "Proba_0", -1.6171007851796695 AS "LogProba_0", 0.2862595419847328 AS "Proba_1", -1.2508563902247865 AS "LogProba_1", 0.3549618320610687 AS "Proba_2", -1.035745010607841 AS "LogProba_2", 0.16030534351145037 AS "Proba_3", -1.8306748854777286 AS "LogProba_3", 2 AS "Decision", 0.3549618320610687 AS "DecisionProba" FROM DUAL UNION ALL SELECT 38 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 58 AS count, 5 AS depth, 37 AS parent_id, 0.25287356321839083 AS "Proba_0", -1.3748656652962679 AS "LogProba_0", 0.21839080459770116 AS "Proba_1", -1.5214691394881432 AS "LogProba_1", 0.3103448275862069 AS "Proba_2", -1.1700712526502546 AS "LogProba_2", 0.21839080459770116 AS "Proba_3", -1.5214691394881432 AS "LogProba_3", 2 AS "Decision", 0.3103448275862069 AS "DecisionProba" FROM DUAL UNION ALL SELECT 39 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 8 AS count, 5 AS depth, 37 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 1.0 AS "Proba_3", 0.0 AS "LogProba_3", 3 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 41 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 43 AS count, 5 AS depth, 40 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 0.1044776119402985 AS "Proba_1", -2.2587824703356527 AS "LogProba_1", 0.05970149253731343 AS "Proba_2", -2.8183982582710754 AS "LogProba_2", 0.835820895522388 AS "Proba_3", -0.17934092865581686 AS "LogProba_3", 3 AS "Decision", 0.835820895522388 AS "DecisionProba" FROM DUAL UNION ALL SELECT 42 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 18 AS count, 5 AS depth, 40 AS parent_id, 0.34615384615384615 AS "Proba_0", -1.0608719606852628 AS "LogProba_0", 0.11538461538461539 AS "Proba_1", -2.159484249353372 AS "LogProba_1", 0.19230769230769232 AS "Proba_2", -1.6486586255873816 AS "LogProba_2", 0.34615384615384615 AS "Proba_3", -1.0608719606852628 AS "LogProba_3", 0 AS "Decision", 0.34615384615384615 AS "DecisionProba" FROM DUAL) "Values"), 
"DT_Output_4" AS 
(SELECT "DT_node_lookup_4"."KEY" AS "KEY", "DT_node_lookup_4".node_id_2 AS node_id_2, "DT_node_data_4".node_id AS node_id, "DT_node_data_4".feature AS feature, "DT_node_data_4".threshold AS threshold, "DT_node_data_4".count AS count, "DT_node_data_4".depth AS depth, "DT_node_data_4".parent_id AS parent_id, "DT_node_data_4"."Proba_0" AS "Proba_0", "DT_node_data_4"."LogProba_0" AS "LogProba_0", "DT_node_data_4"."Proba_1" AS "Proba_1", "DT_node_data_4"."LogProba_1" AS "LogProba_1", "DT_node_data_4"."Proba_2" AS "Proba_2", "DT_node_data_4"."LogProba_2" AS "LogProba_2", "DT_node_data_4"."Proba_3" AS "Proba_3", "DT_node_data_4"."LogProba_3" AS "LogProba_3", "DT_node_data_4"."Decision" AS "Decision", "DT_node_data_4"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup_4" LEFT OUTER JOIN "DT_node_data_4" ON "DT_node_lookup_4".node_id_2 = "DT_node_data_4".node_id), 
"BAG_Tree_4" AS 
(SELECT "DT_Output_4"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output_4"."Proba_0" AS "Proba_0", "DT_Output_4"."LogProba_0" AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output_4"."Proba_1" AS "Proba_1", "DT_Output_4"."LogProba_1" AS "LogProba_1", CAST(NULL AS BINARY_DOUBLE) AS "Score_2", "DT_Output_4"."Proba_2" AS "Proba_2", "DT_Output_4"."LogProba_2" AS "LogProba_2", CAST(NULL AS BINARY_DOUBLE) AS "Score_3", "DT_Output_4"."Proba_3" AS "Proba_3", "DT_Output_4"."LogProba_3" AS "LogProba_3" 
FROM "DT_Output_4"), 
"DT_node_lookup_5" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_340 <= 0.5953606963157654) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_251 <= 0.22236959636211395) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_252 <= -1.2253612279891968) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_295 <= 1.0158708095550537) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_117 <= 0.14949563145637512) THEN 5 ELSE 6 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_474 <= -1.2248913049697876) THEN 8 ELSE 9 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_397 <= 0.935488224029541) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_479 <= -0.14959995448589325) THEN 12 ELSE 13 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_192 <= -0.36336246132850647) THEN 15 ELSE 16 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_53 <= -0.0688726156949997) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_146 <= -0.46469950675964355) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_193 <= 0.48472532629966736) THEN 20 ELSE 21 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_250 <= -0.6359644532203674) THEN 23 ELSE 24 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_463 <= 0.6136484146118164) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_295 <= -1.5554320812225342) THEN 27 ELSE 28 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_286 <= 0.024901561439037323) THEN 30 ELSE 31 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_485 <= 0.6717743277549744) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_231 <= 0.3588266968727112) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_119 <= -1.1696679592132568) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_183 <= -0.7005794644355774) THEN 36 ELSE 37 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_494 <= -1.7256970405578613) THEN 39 ELSE 40 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_203 <= 0.25687462091445923) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_214 <= -0.9582093358039856) THEN 43 ELSE 44 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_78 <= 0.3648730516433716) THEN 46 ELSE 47 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_491 <= -0.369758665561676) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_84 <= 0.6763198971748352) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_164 <= -0.8336032629013062) THEN 51 ELSE 52 END ELSE 53 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_205 <= -1.7377750873565674) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_391 <= 0.10099858045578003) THEN 56 ELSE 57 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_466 <= 0.9975316524505615) THEN 59 ELSE 60 END END END END END AS node_id_2 
FROM "33322_J2367X_ADS_SCA_2_OUT" "ADS_sca_2_OUT"), 
"DT_node_data_5" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Proba_2" AS "Proba_2", "Values"."LogProba_2" AS "LogProba_2", "Values"."Proba_3" AS "Proba_3", "Values"."LogProba_3" AS "LogProba_3", "Values"."Decision" AS "Decision", "Values"."DecisionProba" AS "DecisionProba" 
FROM (SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 17 AS count, 5 AS depth, 4 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 0.9666666666666667 AS "Proba_1", -0.03390155167568134 AS "LogProba_1", 0.03333333333333333 AS "Proba_2", -3.4011973816621555 AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 1 AS "Decision", 0.9666666666666667 AS "DecisionProba" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 5 AS depth, 4 AS parent_id, 0.3333333333333333 AS "Proba_0", -1.0986122886681098 AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 0.6666666666666666 AS "Proba_3", -0.40546510810816444 AS "LogProba_3", 3 AS "Decision", 0.6666666666666666 AS "DecisionProba" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 5 AS depth, 7 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 1.0 AS "Proba_3", 0.0 AS "LogProba_3", 3 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 5 AS depth, 7 AS parent_id, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 66 AS count, 5 AS depth, 11 AS parent_id, 0.08547008547008547 AS "Proba_0", -2.4595888418037104 AS "LogProba_0", 0.5042735042735043 AS "Proba_1", -0.6846364908920367 AS "LogProba_1", 0.19658119658119658 AS "Proba_2", -1.6266797188686064 AS "LogProba_2", 0.21367521367521367 AS "Proba_3", -1.5432981099295555 AS "LogProba_3", 1 AS "Decision", 0.5042735042735043 AS "DecisionProba" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 92 AS count, 5 AS depth, 11 AS parent_id, 0.3237410071942446 AS "Proba_0", -1.127811443360372 AS "LogProba_0", 0.17266187050359713 AS "Proba_1", -1.7564201027827462 AS "LogProba_1", 0.2446043165467626 AS "Proba_2", -1.4081134085145304 AS "LogProba_2", 0.2589928057553957 AS "Proba_3", -1.3509549946745818 AS "LogProba_3", 0 AS "Decision", 0.3237410071942446 AS "DecisionProba" FROM DUAL UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 17 AS count, 5 AS depth, 14 AS parent_id, 0.027777777777777776 AS "Proba_0", -3.58351893845611 AS "LogProba_0", 0.027777777777777776 AS "Proba_1", -3.58351893845611 AS "LogProba_1", 0.9166666666666666 AS "Proba_2", -0.08701137698962981 AS "LogProba_2", 0.027777777777777776 AS "Proba_3", -3.58351893845611 AS "LogProba_3", 2 AS "Decision", 0.9166666666666666 AS "DecisionProba" FROM DUAL UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 22 AS count, 5 AS depth, 14 AS parent_id, 0.3870967741935484 AS "Proba_0", -0.9490805546971459 AS "LogProba_0", 0.1935483870967742 AS "Proba_1", -1.6422277352570913 AS "LogProba_1", 0.22580645161290322 AS "Proba_2", -1.488077055429833 AS "LogProba_2", 0.1935483870967742 AS "Proba_3", -1.6422277352570913 AS "LogProba_3", 0 AS "Decision", 0.3870967741935484 AS "DecisionProba" FROM DUAL UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 12 AS count, 5 AS depth, 19 AS parent_id, 0.9090909090909091 AS "Proba_0", -0.0953101798043249 AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 0.09090909090909091 AS "Proba_2", -2.3978952727983707 AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 0 AS "Decision", 0.9090909090909091 AS "DecisionProba" FROM DUAL UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 5 AS depth, 19 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 0.8571428571428571 AS "Proba_1", -0.15415067982725836 AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 0.14285714285714285 AS "Proba_3", -1.9459101490553135 AS "LogProba_3", 1 AS "Decision", 0.8571428571428571 AS "DecisionProba" FROM DUAL UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 17 AS count, 5 AS depth, 22 AS parent_id, 0.13793103448275862 AS "Proba_0", -1.9810014688665833 AS "LogProba_0", 0.6551724137931034 AS "Proba_1", -0.4228568508200336 AS "LogProba_1", 0.10344827586206896 AS "Proba_2", -2.268683541318364 AS "LogProba_2", 0.10344827586206896 AS "Proba_3", -2.268683541318364 AS "LogProba_3", 1 AS "Decision", 0.6551724137931034 AS "DecisionProba" FROM DUAL UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 33 AS count, 5 AS depth, 22 AS parent_id, 0.09803921568627451 AS "Proba_0", -2.322387720290225 AS "LogProba_0", 0.0784313725490196 AS "Proba_1", -2.5455312716044354 AS "LogProba_1", 0.13725490196078433 AS "Proba_2", -1.9859154836690123 AS "LogProba_2", 0.6862745098039216 AS "Proba_3", -0.3764775712349121 AS "LogProba_3", 3 AS "Decision", 0.6862745098039216 AS "DecisionProba" FROM DUAL UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 6 AS count, 5 AS depth, 26 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 0.5555555555555556 AS "Proba_2", -0.587786664902119 AS "LogProba_2", 0.4444444444444444 AS "Proba_3", -0.8109302162163288 AS "LogProba_3", 2 AS "Decision", 0.5555555555555556 AS "DecisionProba" FROM DUAL UNION ALL SELECT 28 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 46 AS count, 5 AS depth, 26 AS parent_id, 0.8181818181818182 AS "Proba_0", -0.2006706954621511 AS "LogProba_0", 0.03896103896103896 AS "Proba_1", -3.245193133185574 AS "LogProba_1", 0.1038961038961039 AS "Proba_2", -2.264363880173848 AS "LogProba_2", 0.03896103896103896 AS "Proba_3", -3.245193133185574 AS "LogProba_3", 0 AS "Decision", 0.8181818181818182 AS "DecisionProba" FROM DUAL UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 7 AS count, 5 AS depth, 29 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 0.07692307692307693 AS "Proba_2", -2.5649493574615367 AS "LogProba_2", 0.9230769230769231 AS "Proba_3", -0.08004270767353637 AS "LogProba_3", 3 AS "Decision", 0.9230769230769231 AS "DecisionProba" FROM DUAL UNION ALL SELECT 31 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 9 AS count, 5 AS depth, 29 AS parent_id, 0.09090909090909091 AS "Proba_0", -2.3978952727983707 AS "LogProba_0", 0.2727272727272727 AS "Proba_1", -1.2992829841302609 AS "LogProba_1", 0.6363636363636364 AS "Proba_2", -0.45198512374305727 AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 2 AS "Decision", 0.6363636363636364 AS "DecisionProba" FROM DUAL UNION ALL SELECT 36 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 5 AS depth, 35 AS parent_id, 0.4 AS "Proba_0", -0.916290731874155 AS "LogProba_0", 0.6 AS "Proba_1", -0.5108256237659907 AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 1 AS "Decision", 0.6 AS "DecisionProba" FROM DUAL UNION ALL SELECT 37 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 5 AS depth, 35 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 1.0 AS "Proba_3", 0.0 AS "LogProba_3", 3 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 39 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 5 AS depth, 38 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 1.0 AS "Proba_3", 0.0 AS "LogProba_3", 3 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 40 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 52 AS count, 5 AS depth, 38 AS parent_id, 0.03614457831325301 AS "Proba_0", -3.3202283191284883 AS "LogProba_0", 0.04819277108433735 AS "Proba_1", -3.0325462466767075 AS "LogProba_1", 0.8554216867469879 AS "Proba_2", -0.15616073075528253 AS "LogProba_2", 0.060240963855421686 AS "Proba_3", -2.8094026953624978 AS "LogProba_3", 2 AS "Decision", 0.8554216867469879 AS "DecisionProba" FROM DUAL UNION ALL SELECT 43 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 5 AS depth, 42 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 1 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 44 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 17 AS count, 5 AS depth, 42 AS parent_id, 0.1111111111111111 AS "Proba_0", -2.1972245773362196 AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 0.07407407407407407 AS "Proba_2", -2.6026896854443837 AS "LogProba_2", 0.8148148148148148 AS "Proba_3", -0.20479441264601328 AS "LogProba_3", 3 AS "Decision", 0.8148148148148148 AS "DecisionProba" FROM DUAL UNION ALL SELECT 46 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 9 AS count, 5 AS depth, 45 AS parent_id, 0.5 AS "Proba_0", -0.6931471805599453 AS "LogProba_0", 0.5 AS "Proba_1", -0.6931471805599453 AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 0 AS "Decision", 0.5 AS "DecisionProba" FROM DUAL UNION ALL SELECT 47 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 8 AS count, 5 AS depth, 45 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 0.09090909090909091 AS "Proba_1", -2.3978952727983707 AS "LogProba_1", 0.9090909090909091 AS "Proba_2", -0.0953101798043249 AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 2 AS "Decision", 0.9090909090909091 AS "DecisionProba" FROM DUAL UNION ALL SELECT 51 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 5 AS depth, 50 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 2 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 52 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 7 AS count, 5 AS depth, 50 AS parent_id, 0.375 AS "Proba_0", -0.9808292530117262 AS "LogProba_0", 0.125 AS "Proba_1", -2.0794415416798357 AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 0.5 AS "Proba_3", -0.6931471805599453 AS "LogProba_3", 3 AS "Decision", 0.5 AS "DecisionProba" FROM DUAL UNION ALL SELECT 53 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 4 AS depth, 49 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 1 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 56 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 5 AS depth, 55 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 2 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 57 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 5 AS depth, 55 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 1 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 59 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 18 AS count, 5 AS depth, 58 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 1.0 AS "Proba_3", 0.0 AS "LogProba_3", 3 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 60 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 5 AS depth, 58 AS parent_id, 0.5 AS "Proba_0", -0.6931471805599453 AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 0.5 AS "Proba_2", -0.6931471805599453 AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 0 AS "Decision", 0.5 AS "DecisionProba" FROM DUAL) "Values"), 
"DT_Output_5" AS 
(SELECT "DT_node_lookup_5"."KEY" AS "KEY", "DT_node_lookup_5".node_id_2 AS node_id_2, "DT_node_data_5".node_id AS node_id, "DT_node_data_5".feature AS feature, "DT_node_data_5".threshold AS threshold, "DT_node_data_5".count AS count, "DT_node_data_5".depth AS depth, "DT_node_data_5".parent_id AS parent_id, "DT_node_data_5"."Proba_0" AS "Proba_0", "DT_node_data_5"."LogProba_0" AS "LogProba_0", "DT_node_data_5"."Proba_1" AS "Proba_1", "DT_node_data_5"."LogProba_1" AS "LogProba_1", "DT_node_data_5"."Proba_2" AS "Proba_2", "DT_node_data_5"."LogProba_2" AS "LogProba_2", "DT_node_data_5"."Proba_3" AS "Proba_3", "DT_node_data_5"."LogProba_3" AS "LogProba_3", "DT_node_data_5"."Decision" AS "Decision", "DT_node_data_5"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup_5" LEFT OUTER JOIN "DT_node_data_5" ON "DT_node_lookup_5".node_id_2 = "DT_node_data_5".node_id), 
"BAG_Tree_5" AS 
(SELECT "DT_Output_5"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output_5"."Proba_0" AS "Proba_0", "DT_Output_5"."LogProba_0" AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output_5"."Proba_1" AS "Proba_1", "DT_Output_5"."LogProba_1" AS "LogProba_1", CAST(NULL AS BINARY_DOUBLE) AS "Score_2", "DT_Output_5"."Proba_2" AS "Proba_2", "DT_Output_5"."LogProba_2" AS "LogProba_2", CAST(NULL AS BINARY_DOUBLE) AS "Score_3", "DT_Output_5"."Proba_3" AS "Proba_3", "DT_Output_5"."LogProba_3" AS "LogProba_3" 
FROM "DT_Output_5"), 
"DT_node_lookup_6" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_458 <= -0.6362473964691162) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_27 <= -0.22554951906204224) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_20 <= 0.9928295612335205) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_195 <= 0.8777227997779846) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_459 <= -1.3095849752426147) THEN 5 ELSE 6 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_209 <= 0.27796921133995056) THEN 8 ELSE 9 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_396 <= 0.1407921314239502) THEN 11 ELSE 12 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_144 <= -0.5705590844154358) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_488 <= -0.7999206185340881) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_470 <= 0.6959801316261292) THEN 16 ELSE 17 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_140 <= -0.7058979272842407) THEN 19 ELSE 20 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_338 <= 0.22392314672470093) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_188 <= -0.40797314047813416) THEN 23 ELSE 24 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_462 <= -0.7257570624351501) THEN 26 ELSE 27 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_131 <= 0.6094825863838196) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_402 <= 0.9788148999214172) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_181 <= 0.0744013711810112) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_342 <= 0.057810794562101364) THEN 32 ELSE 33 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_284 <= -0.9258670806884766) THEN 35 ELSE 36 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_396 <= 1.11039400100708) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_96 <= 0.4413415193557739) THEN 39 ELSE 40 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_379 <= 0.31439322233200073) THEN 42 ELSE 43 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_26 <= 1.4714345932006836) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_491 <= -0.06871852278709412) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_499 <= 0.5266686081886292) THEN 47 ELSE 48 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_456 <= 0.8317491412162781) THEN 50 ELSE 51 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_15 <= 1.4892278909683228) THEN 53 ELSE 54 END END END END AS node_id_2 
FROM "33322_J2367X_ADS_SCA_2_OUT" "ADS_sca_2_OUT"), 
"DT_node_data_6" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Proba_2" AS "Proba_2", "Values"."LogProba_2" AS "LogProba_2", "Values"."Proba_3" AS "Proba_3", "Values"."LogProba_3" AS "LogProba_3", "Values"."Decision" AS "Decision", "Values"."DecisionProba" AS "DecisionProba" 
FROM (SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 5 AS depth, 4 AS parent_id, 0.6666666666666666 AS "Proba_0", -0.40546510810816444 AS "LogProba_0", 0.3333333333333333 AS "Proba_1", -1.0986122886681098 AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 0 AS "Decision", 0.6666666666666666 AS "DecisionProba" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 29 AS count, 5 AS depth, 4 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 0.018518518518518517 AS "Proba_1", -3.9889840465642745 AS "LogProba_1", 0.9629629629629629 AS "Proba_2", -0.037740327982847086 AS "LogProba_2", 0.018518518518518517 AS "Proba_3", -3.9889840465642745 AS "LogProba_3", 2 AS "Decision", 0.9629629629629629 AS "DecisionProba" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 5 AS depth, 7 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 1.0 AS "Proba_3", 0.0 AS "LogProba_3", 3 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 5 AS depth, 7 AS parent_id, 0.6 AS "Proba_0", -0.5108256237659907 AS "LogProba_0", 0.2 AS "Proba_1", -1.6094379124341003 AS "LogProba_1", 0.2 AS "Proba_2", -1.6094379124341003 AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 0 AS "Decision", 0.6 AS "DecisionProba" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 6 AS count, 4 AS depth, 10 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 1.0 AS "Proba_3", 0.0 AS "LogProba_3", 3 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 4 AS depth, 10 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 2 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 5 AS depth, 15 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 1 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 5 AS depth, 15 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 2 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 5 AS depth, 18 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 0.5 AS "Proba_1", -0.6931471805599453 AS "LogProba_1", 0.5 AS "Proba_2", -0.6931471805599453 AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 1 AS "Decision", 0.5 AS "DecisionProba" FROM DUAL UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 12 AS count, 5 AS depth, 18 AS parent_id, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 10 AS count, 5 AS depth, 22 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 0.875 AS "Proba_1", -0.13353139262452263 AS "LogProba_1", 0.0625 AS "Proba_2", -2.772588722239781 AS "LogProba_2", 0.0625 AS "Proba_3", -2.772588722239781 AS "LogProba_3", 1 AS "Decision", 0.875 AS "DecisionProba" FROM DUAL UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 25 AS count, 5 AS depth, 22 AS parent_id, 0.4166666666666667 AS "Proba_0", -0.8754687373538999 AS "LogProba_0", 0.16666666666666666 AS "Proba_1", -1.791759469228055 AS "LogProba_1", 0.1388888888888889 AS "Proba_2", -1.9740810260220096 AS "LogProba_2", 0.2777777777777778 AS "Proba_3", -1.2809338454620642 AS "LogProba_3", 0 AS "Decision", 0.4166666666666667 AS "DecisionProba" FROM DUAL UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 5 AS depth, 25 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 0.25 AS "Proba_1", -1.3862943611198906 AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 0.75 AS "Proba_3", -0.2876820724517809 AS "LogProba_3", 3 AS "Decision", 0.75 AS "DecisionProba" FROM DUAL UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 17 AS count, 5 AS depth, 25 AS parent_id, 0.09090909090909091 AS "Proba_0", -2.3978952727983707 AS "LogProba_0", 0.045454545454545456 AS "Proba_1", -3.0910424533583156 AS "LogProba_1", 0.8636363636363636 AS "Proba_2", -0.1466034741918754 AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 2 AS "Decision", 0.8636363636363636 AS "DecisionProba" FROM DUAL UNION ALL SELECT 32 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 72 AS count, 5 AS depth, 31 AS parent_id, 0.22115384615384615 AS "Proba_0", -1.508896683212223 AS "LogProba_0", 0.2980769230769231 AS "Proba_1", -1.2104036946562264 AS "LogProba_1", 0.15384615384615385 AS "Proba_2", -1.8718021769015913 AS "LogProba_2", 0.3269230769230769 AS "Proba_3", -1.1180303745252114 AS "LogProba_3", 3 AS "Decision", 0.3269230769230769 AS "DecisionProba" FROM DUAL UNION ALL SELECT 33 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 71 AS count, 5 AS depth, 31 AS parent_id, 0.08547008547008547 AS "Proba_0", -2.4595888418037104 AS "LogProba_0", 0.6666666666666666 AS "Proba_1", -0.40546510810816444 AS "LogProba_1", 0.1452991452991453 AS "Proba_2", -1.92896059074154 AS "LogProba_2", 0.10256410256410256 AS "Proba_3", -2.277267285009756 AS "LogProba_3", 1 AS "Decision", 0.6666666666666666 AS "DecisionProba" FROM DUAL UNION ALL SELECT 35 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 19 AS count, 5 AS depth, 34 AS parent_id, 0.8 AS "Proba_0", -0.2231435513142097 AS "LogProba_0", 0.08571428571428572 AS "Proba_1", -2.456735772821304 AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 0.11428571428571428 AS "Proba_3", -2.169053700369523 AS "LogProba_3", 0 AS "Decision", 0.8 AS "DecisionProba" FROM DUAL UNION ALL SELECT 36 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 93 AS count, 5 AS depth, 34 AS parent_id, 0.24489795918367346 AS "Proba_0", -1.4069136483226263 AS "LogProba_0", 0.2789115646258503 AS "Proba_1", -1.2768605200744285 AS "LogProba_1", 0.14285714285714285 AS "Proba_2", -1.9459101490553135 AS "LogProba_2", 0.3333333333333333 AS "Proba_3", -1.0986122886681098 AS "LogProba_3", 3 AS "Decision", 0.3333333333333333 AS "DecisionProba" FROM DUAL UNION ALL SELECT 39 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 30 AS count, 5 AS depth, 38 AS parent_id, 0.06382978723404255 AS "Proba_0", -2.751535313041949 AS "LogProba_0", 0.06382978723404255 AS "Proba_1", -2.751535313041949 AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 0.8723404255319149 AS "Proba_3", -0.13657553500575073 AS "LogProba_3", 3 AS "Decision", 0.8723404255319149 AS "DecisionProba" FROM DUAL UNION ALL SELECT 40 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 8 AS count, 5 AS depth, 38 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 0.6 AS "Proba_1", -0.5108256237659907 AS "LogProba_1", 0.2 AS "Proba_2", -1.6094379124341003 AS "LogProba_2", 0.2 AS "Proba_3", -1.6094379124341003 AS "LogProba_3", 1 AS "Decision", 0.6 AS "DecisionProba" FROM DUAL UNION ALL SELECT 42 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 7 AS count, 5 AS depth, 41 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 2 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 43 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 5 AS depth, 41 AS parent_id, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 47 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 26 AS count, 5 AS depth, 46 AS parent_id, 0.25 AS "Proba_0", -1.3862943611198906 AS "LogProba_0", 0.2777777777777778 AS "Proba_1", -1.2809338454620642 AS "LogProba_1", 0.2777777777777778 AS "Proba_2", -1.2809338454620642 AS "LogProba_2", 0.19444444444444445 AS "Proba_3", -1.6376087894007967 AS "LogProba_3", 1 AS "Decision", 0.2777777777777778 AS "DecisionProba" FROM DUAL UNION ALL SELECT 48 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 8 AS count, 5 AS depth, 46 AS parent_id, 0.05555555555555555 AS "Proba_0", -2.890371757896165 AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 0.9444444444444444 AS "Proba_3", -0.05715841383994864 AS "LogProba_3", 3 AS "Decision", 0.9444444444444444 AS "DecisionProba" FROM DUAL UNION ALL SELECT 50 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 35 AS count, 5 AS depth, 49 AS parent_id, 0.10714285714285714 AS "Proba_0", -2.2335922215070942 AS "LogProba_0", 0.07142857142857142 AS "Proba_1", -2.639057329615259 AS "LogProba_1", 0.7321428571428571 AS "Proba_2", -0.3117796240308415 AS "LogProba_2", 0.08928571428571429 AS "Proba_3", -2.4159137783010487 AS "LogProba_3", 2 AS "Decision", 0.7321428571428571 AS "DecisionProba" FROM DUAL UNION ALL SELECT 51 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 7 AS count, 5 AS depth, 49 AS parent_id, 0.9 AS "Proba_0", -0.10536051565782628 AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 0.1 AS "Proba_2", -2.3025850929940455 AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 0 AS "Decision", 0.9 AS "DecisionProba" FROM DUAL UNION ALL SELECT 53 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 9 AS count, 4 AS depth, 52 AS parent_id, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 54 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 4 AS depth, 52 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 1 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL) "Values"), 
"DT_Output_6" AS 
(SELECT "DT_node_lookup_6"."KEY" AS "KEY", "DT_node_lookup_6".node_id_2 AS node_id_2, "DT_node_data_6".node_id AS node_id, "DT_node_data_6".feature AS feature, "DT_node_data_6".threshold AS threshold, "DT_node_data_6".count AS count, "DT_node_data_6".depth AS depth, "DT_node_data_6".parent_id AS parent_id, "DT_node_data_6"."Proba_0" AS "Proba_0", "DT_node_data_6"."LogProba_0" AS "LogProba_0", "DT_node_data_6"."Proba_1" AS "Proba_1", "DT_node_data_6"."LogProba_1" AS "LogProba_1", "DT_node_data_6"."Proba_2" AS "Proba_2", "DT_node_data_6"."LogProba_2" AS "LogProba_2", "DT_node_data_6"."Proba_3" AS "Proba_3", "DT_node_data_6"."LogProba_3" AS "LogProba_3", "DT_node_data_6"."Decision" AS "Decision", "DT_node_data_6"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup_6" LEFT OUTER JOIN "DT_node_data_6" ON "DT_node_lookup_6".node_id_2 = "DT_node_data_6".node_id), 
"BAG_Tree_6" AS 
(SELECT "DT_Output_6"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output_6"."Proba_0" AS "Proba_0", "DT_Output_6"."LogProba_0" AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output_6"."Proba_1" AS "Proba_1", "DT_Output_6"."LogProba_1" AS "LogProba_1", CAST(NULL AS BINARY_DOUBLE) AS "Score_2", "DT_Output_6"."Proba_2" AS "Proba_2", "DT_Output_6"."LogProba_2" AS "LogProba_2", CAST(NULL AS BINARY_DOUBLE) AS "Score_3", "DT_Output_6"."Proba_3" AS "Proba_3", "DT_Output_6"."LogProba_3" AS "LogProba_3" 
FROM "DT_Output_6"), 
"DT_node_lookup_7" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_131 <= 0.6005011796951294) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_254 <= -1.0745344161987305) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_290 <= 0.5573098659515381) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_485 <= -0.3220023214817047) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_409 <= 0.13084667921066284) THEN 5 ELSE 6 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_252 <= -1.5300328731536865) THEN 8 ELSE 9 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_368 <= 0.665542721748352) THEN 11 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_393 <= 0.2217358499765396) THEN 13 ELSE 14 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_210 <= 0.5740450620651245) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_45 <= 0.02714523673057556) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_337 <= -0.923484206199646) THEN 18 ELSE 19 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_188 <= -0.3934827446937561) THEN 21 ELSE 22 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_429 <= 0.1570304036140442) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_416 <= -0.8503880500793457) THEN 25 ELSE 26 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_417 <= 0.43512585759162903) THEN 28 ELSE 29 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_27 <= -0.8606176376342773) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_21 <= -0.9896326661109924) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_395 <= 0.48727190494537354) THEN 33 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_447 <= -1.6710834503173828) THEN 35 ELSE 36 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_17 <= -1.161782145500183) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_170 <= 0.9717633724212646) THEN 39 ELSE 40 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_19 <= -1.2590415477752686) THEN 42 ELSE 43 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_408 <= 1.446225643157959) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_488 <= 1.0073564052581787) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_460 <= 1.0325196981430054) THEN 47 ELSE 48 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_329 <= 1.1606566905975342) THEN 50 ELSE 51 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_346 <= -0.19729748368263245) THEN 53 ELSE 54 END END END END AS node_id_2 
FROM "33322_J2367X_ADS_SCA_2_OUT" "ADS_sca_2_OUT"), 
"DT_node_data_7" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Proba_2" AS "Proba_2", "Values"."LogProba_2" AS "LogProba_2", "Values"."Proba_3" AS "Proba_3", "Values"."LogProba_3" AS "LogProba_3", "Values"."Decision" AS "Decision", "Values"."DecisionProba" AS "DecisionProba" 
FROM (SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 5 AS depth, 4 AS parent_id, 0.6 AS "Proba_0", -0.5108256237659907 AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 0.4 AS "Proba_2", -0.916290731874155 AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 0 AS "Decision", 0.6 AS "DecisionProba" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 5 AS depth, 4 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 1 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 5 AS depth, 7 AS parent_id, 0.6666666666666666 AS "Proba_0", -0.40546510810816444 AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 0.3333333333333333 AS "Proba_2", -1.0986122886681098 AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 0 AS "Decision", 0.6666666666666666 AS "DecisionProba" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 28 AS count, 5 AS depth, 7 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 0.0392156862745098 AS "Proba_1", -3.2386784521643803 AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 0.9607843137254902 AS "Proba_3", -0.04000533461369913 AS "LogProba_3", 3 AS "Decision", 0.9607843137254902 AS "DecisionProba" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 8 AS count, 4 AS depth, 10 AS parent_id, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 5 AS depth, 12 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 2 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 5 AS depth, 12 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 0.6 AS "Proba_1", -0.5108256237659907 AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 0.4 AS "Proba_3", -0.916290731874155 AS "LogProba_3", 1 AS "Decision", 0.6 AS "DecisionProba" FROM DUAL UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 16 AS count, 5 AS depth, 17 AS parent_id, 0.045454545454545456 AS "Proba_0", -3.0910424533583156 AS "LogProba_0", 0.045454545454545456 AS "Proba_1", -3.0910424533583156 AS "LogProba_1", 0.3181818181818182 AS "Proba_2", -1.1451323043030026 AS "LogProba_2", 0.5909090909090909 AS "Proba_3", -0.5260930958967791 AS "LogProba_3", 3 AS "Decision", 0.5909090909090909 AS "DecisionProba" FROM DUAL UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 110 AS count, 5 AS depth, 17 AS parent_id, 0.08383233532934131 AS "Proba_0", -2.4789364828014966 AS "LogProba_0", 0.6167664670658682 AS "Proba_1", -0.48326482418711936 AS "LogProba_1", 0.19760479041916168 AS "Proba_2", -1.6214862509502748 AS "LogProba_2", 0.10179640718562874 AS "Proba_3", -2.284780468360539 AS "LogProba_3", 1 AS "Decision", 0.6167664670658682 AS "DecisionProba" FROM DUAL UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 37 AS count, 5 AS depth, 20 AS parent_id, 0.24193548387096775 AS "Proba_0", -1.4190841839428814 AS "LogProba_0", 0.532258064516129 AS "Proba_1", -0.6306268235786113 AS "LogProba_1", 0.1774193548387097 AS "Proba_2", -1.729239112246721 AS "LogProba_2", 0.04838709677419355 AS "Proba_3", -3.028522096376982 AS "LogProba_3", 1 AS "Decision", 0.532258064516129 AS "DecisionProba" FROM DUAL UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 71 AS count, 5 AS depth, 20 AS parent_id, 0.3018867924528302 AS "Proba_0", -1.1977031913123406 AS "LogProba_0", 0.09433962264150944 AS "Proba_1", -2.3608540011180215 AS "LogProba_1", 0.2830188679245283 AS "Proba_2", -1.262241712449912 AS "LogProba_2", 0.32075471698113206 AS "Proba_3", -1.1370785694959058 AS "LogProba_3", 3 AS "Decision", 0.32075471698113206 AS "DecisionProba" FROM DUAL UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 12 AS count, 5 AS depth, 24 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 0.08333333333333333 AS "Proba_1", -2.4849066497880004 AS "LogProba_1", 0.7916666666666666 AS "Proba_2", -0.2336148511815052 AS "LogProba_2", 0.125 AS "Proba_3", -2.0794415416798357 AS "LogProba_3", 2 AS "Decision", 0.7916666666666666 AS "DecisionProba" FROM DUAL UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 39 AS count, 5 AS depth, 24 AS parent_id, 0.576271186440678 AS "Proba_0", -0.551176919289558 AS "LogProba_0", 0.03389830508474576 AS "Proba_1", -3.3843902633457743 AS "LogProba_1", 0.1864406779661017 AS "Proba_2", -1.6796421711073488 AS "LogProba_2", 0.2033898305084746 AS "Proba_3", -1.5926307941177191 AS "LogProba_3", 0 AS "Decision", 0.576271186440678 AS "DecisionProba" FROM DUAL UNION ALL SELECT 28 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 31 AS count, 5 AS depth, 27 AS parent_id, 0.09090909090909091 AS "Proba_0", -2.3978952727983707 AS "LogProba_0", 0.1590909090909091 AS "Proba_1", -1.8382794848629478 AS "LogProba_1", 0.022727272727272728 AS "Proba_2", -3.784189633918261 AS "LogProba_2", 0.7272727272727273 AS "Proba_3", -0.3184537311185346 AS "LogProba_3", 3 AS "Decision", 0.7272727272727273 AS "DecisionProba" FROM DUAL UNION ALL SELECT 29 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 13 AS count, 5 AS depth, 27 AS parent_id, 0.15 AS "Proba_0", -1.8971199848858813 AS "LogProba_0", 0.4 AS "Proba_1", -0.916290731874155 AS "LogProba_1", 0.4 AS "Proba_2", -0.916290731874155 AS "LogProba_2", 0.05 AS "Proba_3", -2.995732273553991 AS "LogProba_3", 1 AS "Decision", 0.4 AS "DecisionProba" FROM DUAL UNION ALL SELECT 33 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 4 AS depth, 32 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 1.0 AS "Proba_3", 0.0 AS "LogProba_3", 3 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 35 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 5 AS depth, 34 AS parent_id, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 36 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 5 AS depth, 34 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 1 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 39 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 5 AS depth, 38 AS parent_id, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 40 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 5 AS depth, 38 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 1 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 42 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 5 AS depth, 41 AS parent_id, 0.5 AS "Proba_0", -0.6931471805599453 AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 0.5 AS "Proba_3", -0.6931471805599453 AS "LogProba_3", 0 AS "Decision", 0.5 AS "DecisionProba" FROM DUAL UNION ALL SELECT 43 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 23 AS count, 5 AS depth, 41 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 2 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 47 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 68 AS count, 5 AS depth, 46 AS parent_id, 0.31313131313131315 AS "Proba_0", -1.1611326456494435 AS "LogProba_0", 0.23232323232323232 AS "Proba_1", -1.4596256342054403 AS "LogProba_1", 0.2727272727272727 AS "Proba_2", -1.2992829841302609 AS "LogProba_2", 0.18181818181818182 AS "Proba_3", -1.7047480922384253 AS "LogProba_3", 0 AS "Decision", 0.31313131313131315 AS "DecisionProba" FROM DUAL UNION ALL SELECT 48 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 7 AS count, 5 AS depth, 46 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 1.0 AS "Proba_3", 0.0 AS "LogProba_3", 3 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 50 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 11 AS count, 5 AS depth, 49 AS parent_id, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 51 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 5 AS depth, 49 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 2 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 53 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 4 AS depth, 52 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 1.0 AS "Proba_3", 0.0 AS "LogProba_3", 3 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 54 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 8 AS count, 4 AS depth, 52 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 2 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL) "Values"), 
"DT_Output_7" AS 
(SELECT "DT_node_lookup_7"."KEY" AS "KEY", "DT_node_lookup_7".node_id_2 AS node_id_2, "DT_node_data_7".node_id AS node_id, "DT_node_data_7".feature AS feature, "DT_node_data_7".threshold AS threshold, "DT_node_data_7".count AS count, "DT_node_data_7".depth AS depth, "DT_node_data_7".parent_id AS parent_id, "DT_node_data_7"."Proba_0" AS "Proba_0", "DT_node_data_7"."LogProba_0" AS "LogProba_0", "DT_node_data_7"."Proba_1" AS "Proba_1", "DT_node_data_7"."LogProba_1" AS "LogProba_1", "DT_node_data_7"."Proba_2" AS "Proba_2", "DT_node_data_7"."LogProba_2" AS "LogProba_2", "DT_node_data_7"."Proba_3" AS "Proba_3", "DT_node_data_7"."LogProba_3" AS "LogProba_3", "DT_node_data_7"."Decision" AS "Decision", "DT_node_data_7"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup_7" LEFT OUTER JOIN "DT_node_data_7" ON "DT_node_lookup_7".node_id_2 = "DT_node_data_7".node_id), 
"BAG_Tree_7" AS 
(SELECT "DT_Output_7"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output_7"."Proba_0" AS "Proba_0", "DT_Output_7"."LogProba_0" AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output_7"."Proba_1" AS "Proba_1", "DT_Output_7"."LogProba_1" AS "LogProba_1", CAST(NULL AS BINARY_DOUBLE) AS "Score_2", "DT_Output_7"."Proba_2" AS "Proba_2", "DT_Output_7"."LogProba_2" AS "LogProba_2", CAST(NULL AS BINARY_DOUBLE) AS "Score_3", "DT_Output_7"."Proba_3" AS "Proba_3", "DT_Output_7"."LogProba_3" AS "LogProba_3" 
FROM "DT_Output_7"), 
"DT_node_lookup_8" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_251 <= -0.028307560831308365) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_326 <= -0.4012008011341095) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_242 <= -0.0805954709649086) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_345 <= 0.5358797907829285) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_240 <= -0.1993316411972046) THEN 5 ELSE 6 END ELSE 7 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_174 <= 1.7669775485992432) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_211 <= 0.9334349632263184) THEN 10 ELSE 11 END ELSE 12 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_273 <= 0.060956262052059174) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_55 <= 1.397324562072754) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_249 <= 0.012529047206044197) THEN 16 ELSE 17 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_444 <= -1.371682047843933) THEN 19 ELSE 20 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_331 <= 1.1977945566177368) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_284 <= -1.545041561126709) THEN 23 ELSE 24 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_24 <= -0.449167937040329) THEN 26 ELSE 27 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_340 <= -0.42554613947868347) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_451 <= 0.184255450963974) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_408 <= 0.5046404600143433) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_495 <= -0.7066348791122437) THEN 32 ELSE 33 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_211 <= -0.37768787145614624) THEN 35 ELSE 36 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_463 <= -0.9205257892608643) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_130 <= 0.48322853446006775) THEN 39 ELSE 40 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_19 <= -1.3647029399871826) THEN 42 ELSE 43 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_499 <= -1.3330178260803223) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_241 <= 0.0502462163567543) THEN 46 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_307 <= -0.02390451729297638) THEN 48 ELSE 49 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_64 <= -0.41636043787002563) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_46 <= 0.649948000907898) THEN 52 ELSE 53 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_339 <= -0.4234299063682556) THEN 55 ELSE 56 END END END END END AS node_id_2 
FROM "33322_J2367X_ADS_SCA_2_OUT" "ADS_sca_2_OUT"), 
"DT_node_data_8" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Proba_2" AS "Proba_2", "Values"."LogProba_2" AS "LogProba_2", "Values"."Proba_3" AS "Proba_3", "Values"."LogProba_3" AS "LogProba_3", "Values"."Decision" AS "Decision", "Values"."DecisionProba" AS "DecisionProba" 
FROM (SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 8 AS count, 5 AS depth, 4 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 0.6153846153846154 AS "Proba_2", -0.48550781578170077 AS "LogProba_2", 0.38461538461538464 AS "Proba_3", -0.9555114450274363 AS "LogProba_3", 2 AS "Decision", 0.6153846153846154 AS "DecisionProba" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 17 AS count, 5 AS depth, 4 AS parent_id, 0.28 AS "Proba_0", -1.2729656758128873 AS "LogProba_0", 0.64 AS "Proba_1", -0.4462871026284195 AS "LogProba_1", 0.04 AS "Proba_2", -3.2188758248682006 AS "LogProba_2", 0.04 AS "Proba_3", -3.2188758248682006 AS "LogProba_3", 1 AS "Decision", 0.64 AS "DecisionProba" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 9 AS count, 4 AS depth, 3 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 1.0 AS "Proba_3", 0.0 AS "LogProba_3", 3 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 33 AS count, 5 AS depth, 9 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 0.034482758620689655 AS "Proba_1", -3.367295829986474 AS "LogProba_1", 0.9137931034482759 AS "Proba_2", -0.09015109699429745 AS "LogProba_2", 0.05172413793103448 AS "Proba_3", -2.9618307218783095 AS "LogProba_3", 2 AS "Decision", 0.9137931034482759 AS "DecisionProba" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 8 AS count, 5 AS depth, 9 AS parent_id, 0.18181818181818182 AS "Proba_0", -1.7047480922384253 AS "LogProba_0", 0.6363636363636364 AS "Proba_1", -0.45198512374305727 AS "LogProba_1", 0.18181818181818182 AS "Proba_2", -1.7047480922384253 AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 1 AS "Decision", 0.6363636363636364 AS "DecisionProba" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 4 AS depth, 8 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 1.0 AS "Proba_3", 0.0 AS "LogProba_3", 3 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 37 AS count, 5 AS depth, 15 AS parent_id, 0.03076923076923077 AS "Proba_0", -3.481240089335692 AS "LogProba_0", 0.1076923076923077 AS "Proba_1", -2.228477120840324 AS "LogProba_1", 0.4461538461538462 AS "Proba_2", -0.807091439909163 AS "LogProba_2", 0.4153846153846154 AS "Proba_3", -0.878550403891308 AS "LogProba_3", 2 AS "Decision", 0.4461538461538462 AS "DecisionProba" FROM DUAL UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 49 AS count, 5 AS depth, 15 AS parent_id, 0.25 AS "Proba_0", -1.3862943611198906 AS "LogProba_0", 0.4166666666666667 AS "Proba_1", -0.8754687373538999 AS "LogProba_1", 0.1388888888888889 AS "Proba_2", -1.9740810260220096 AS "LogProba_2", 0.19444444444444445 AS "Proba_3", -1.6376087894007967 AS "LogProba_3", 1 AS "Decision", 0.4166666666666667 AS "DecisionProba" FROM DUAL UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 5 AS depth, 18 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 0.5 AS "Proba_1", -0.6931471805599453 AS "LogProba_1", 0.5 AS "Proba_2", -0.6931471805599453 AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 1 AS "Decision", 0.5 AS "DecisionProba" FROM DUAL UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 6 AS count, 5 AS depth, 18 AS parent_id, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 5 AS depth, 22 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 1.0 AS "Proba_3", 0.0 AS "LogProba_3", 3 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 62 AS count, 5 AS depth, 22 AS parent_id, 0.102803738317757 AS "Proba_0", -2.2749335616635356 AS "LogProba_0", 0.719626168224299 AS "Proba_1", -0.3290234126082224 AS "LogProba_1", 0.09345794392523364 AS "Proba_2", -2.3702437414678603 AS "LogProba_2", 0.08411214953271028 AS "Proba_3", -2.4756042571256867 AS "LogProba_3", 1 AS "Decision", 0.719626168224299 AS "DecisionProba" FROM DUAL UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 5 AS depth, 25 AS parent_id, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 6 AS count, 5 AS depth, 25 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 0.8571428571428571 AS "Proba_2", -0.15415067982725836 AS "LogProba_2", 0.14285714285714285 AS "Proba_3", -1.9459101490553135 AS "LogProba_3", 2 AS "Decision", 0.8571428571428571 AS "DecisionProba" FROM DUAL UNION ALL SELECT 32 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 11 AS count, 5 AS depth, 31 AS parent_id, 0.8571428571428571 AS "Proba_0", -0.15415067982725836 AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 0.07142857142857142 AS "Proba_2", -2.639057329615259 AS "LogProba_2", 0.07142857142857142 AS "Proba_3", -2.639057329615259 AS "LogProba_3", 0 AS "Decision", 0.8571428571428571 AS "DecisionProba" FROM DUAL UNION ALL SELECT 33 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 17 AS count, 5 AS depth, 31 AS parent_id, 0.17391304347826086 AS "Proba_0", -1.749199854809259 AS "LogProba_0", 0.6086956521739131 AS "Proba_1", -0.496436886313891 AS "LogProba_1", 0.13043478260869565 AS "Proba_2", -2.03688192726104 AS "LogProba_2", 0.08695652173913043 AS "Proba_3", -2.4423470353692043 AS "LogProba_3", 1 AS "Decision", 0.6086956521739131 AS "DecisionProba" FROM DUAL UNION ALL SELECT 35 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 10 AS count, 5 AS depth, 34 AS parent_id, 0.07142857142857142 AS "Proba_0", -2.639057329615259 AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 0.8571428571428571 AS "Proba_2", -0.15415067982725836 AS "LogProba_2", 0.07142857142857142 AS "Proba_3", -2.639057329615259 AS "LogProba_3", 2 AS "Decision", 0.8571428571428571 AS "DecisionProba" FROM DUAL UNION ALL SELECT 36 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 14 AS count, 5 AS depth, 34 AS parent_id, 0.08333333333333333 AS "Proba_0", -2.4849066497880004 AS "LogProba_0", 0.125 AS "Proba_1", -2.0794415416798357 AS "LogProba_1", 0.08333333333333333 AS "Proba_2", -2.4849066497880004 AS "LogProba_2", 0.7083333333333334 AS "Proba_3", -0.3448404862917295 AS "LogProba_3", 3 AS "Decision", 0.7083333333333334 AS "DecisionProba" FROM DUAL UNION ALL SELECT 39 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 5 AS depth, 38 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 2 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 40 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 5 AS depth, 38 AS parent_id, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 42 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 5 AS depth, 41 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 0.2 AS "Proba_1", -1.6094379124341003 AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 0.8 AS "Proba_3", -0.2231435513142097 AS "LogProba_3", 3 AS "Decision", 0.8 AS "DecisionProba" FROM DUAL UNION ALL SELECT 43 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 31 AS count, 5 AS depth, 41 AS parent_id, 0.9245283018867925 AS "Proba_0", -0.07847161544149521 AS "LogProba_0", 0.07547169811320754 AS "Proba_1", -2.583997552432231 AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 0 AS "Decision", 0.9245283018867925 AS "DecisionProba" FROM DUAL UNION ALL SELECT 46 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 11 AS count, 4 AS depth, 45 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 2 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 48 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 5 AS depth, 47 AS parent_id, 0.3333333333333333 AS "Proba_0", -1.0986122886681098 AS "LogProba_0", 0.3333333333333333 AS "Proba_1", -1.0986122886681098 AS "LogProba_1", 0.3333333333333333 AS "Proba_2", -1.0986122886681098 AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 0 AS "Decision", 0.3333333333333333 AS "DecisionProba" FROM DUAL UNION ALL SELECT 49 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 5 AS depth, 47 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 1.0 AS "Proba_3", 0.0 AS "LogProba_3", 3 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 52 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 38 AS count, 5 AS depth, 51 AS parent_id, 0.11267605633802817 AS "Proba_0", -2.1832383353614793 AS "LogProba_0", 0.014084507042253521 AS "Proba_1", -4.2626798770413155 AS "LogProba_1", 0.014084507042253521 AS "Proba_2", -4.2626798770413155 AS "LogProba_2", 0.8591549295774648 AS "Proba_3", -0.15180601286800421 AS "LogProba_3", 3 AS "Decision", 0.8591549295774648 AS "DecisionProba" FROM DUAL UNION ALL SELECT 53 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 13 AS count, 5 AS depth, 51 AS parent_id, 0.13636363636363635 AS "Proba_0", -1.9924301646902063 AS "LogProba_0", 0.22727272727272727 AS "Proba_1", -1.4816045409242156 AS "LogProba_1", 0.4090909090909091 AS "Proba_2", -0.8938178760220964 AS "LogProba_2", 0.22727272727272727 AS "Proba_3", -1.4816045409242156 AS "LogProba_3", 2 AS "Decision", 0.4090909090909091 AS "DecisionProba" FROM DUAL UNION ALL SELECT 55 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 27 AS count, 5 AS depth, 54 AS parent_id, 0.6052631578947368 AS "Proba_0", -0.5020919437972361 AS "LogProba_0", 0.10526315789473684 AS "Proba_1", -2.2512917986064953 AS "LogProba_1", 0.18421052631578946 AS "Proba_2", -1.6916760106710724 AS "LogProba_2", 0.10526315789473684 AS "Proba_3", -2.2512917986064953 AS "LogProba_3", 0 AS "Decision", 0.6052631578947368 AS "DecisionProba" FROM DUAL UNION ALL SELECT 56 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 65 AS count, 5 AS depth, 54 AS parent_id, 0.16666666666666666 AS "Proba_0", -1.791759469228055 AS "LogProba_0", 0.16666666666666666 AS "Proba_1", -1.791759469228055 AS "LogProba_1", 0.23333333333333334 AS "Proba_2", -1.455287232606842 AS "LogProba_2", 0.43333333333333335 AS "Proba_3", -0.8362480242006186 AS "LogProba_3", 3 AS "Decision", 0.43333333333333335 AS "DecisionProba" FROM DUAL) "Values"), 
"DT_Output_8" AS 
(SELECT "DT_node_lookup_8"."KEY" AS "KEY", "DT_node_lookup_8".node_id_2 AS node_id_2, "DT_node_data_8".node_id AS node_id, "DT_node_data_8".feature AS feature, "DT_node_data_8".threshold AS threshold, "DT_node_data_8".count AS count, "DT_node_data_8".depth AS depth, "DT_node_data_8".parent_id AS parent_id, "DT_node_data_8"."Proba_0" AS "Proba_0", "DT_node_data_8"."LogProba_0" AS "LogProba_0", "DT_node_data_8"."Proba_1" AS "Proba_1", "DT_node_data_8"."LogProba_1" AS "LogProba_1", "DT_node_data_8"."Proba_2" AS "Proba_2", "DT_node_data_8"."LogProba_2" AS "LogProba_2", "DT_node_data_8"."Proba_3" AS "Proba_3", "DT_node_data_8"."LogProba_3" AS "LogProba_3", "DT_node_data_8"."Decision" AS "Decision", "DT_node_data_8"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup_8" LEFT OUTER JOIN "DT_node_data_8" ON "DT_node_lookup_8".node_id_2 = "DT_node_data_8".node_id), 
"BAG_Tree_8" AS 
(SELECT "DT_Output_8"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output_8"."Proba_0" AS "Proba_0", "DT_Output_8"."LogProba_0" AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output_8"."Proba_1" AS "Proba_1", "DT_Output_8"."LogProba_1" AS "LogProba_1", CAST(NULL AS BINARY_DOUBLE) AS "Score_2", "DT_Output_8"."Proba_2" AS "Proba_2", "DT_Output_8"."LogProba_2" AS "LogProba_2", CAST(NULL AS BINARY_DOUBLE) AS "Score_3", "DT_Output_8"."Proba_3" AS "Proba_3", "DT_Output_8"."LogProba_3" AS "LogProba_3" 
FROM "DT_Output_8"), 
"DT_node_lookup_9" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_251 <= 0.05405142530798912) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_73 <= -0.09998384118080139) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_112 <= 1.2477164268493652) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_497 <= -0.2095116376876831) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_104 <= -1.4847261905670166) THEN 5 ELSE 6 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_20 <= 0.7335059642791748) THEN 8 ELSE 9 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_397 <= 0.07630465179681778) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_474 <= -0.22225341200828552) THEN 12 ELSE 13 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_316 <= -1.4182446002960205) THEN 15 ELSE 16 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_269 <= -1.0562160015106201) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_212 <= -1.477931261062622) THEN 19 ELSE 20 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_332 <= -0.7376354336738586) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_294 <= -0.08804140985012054) THEN 23 ELSE 24 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_379 <= -0.31353291869163513) THEN 26 ELSE 27 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_20 <= 0.764344334602356) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_239 <= -1.295942783355713) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_412 <= -0.5547397136688232) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_268 <= -0.13722793757915497) THEN 32 ELSE 33 END ELSE 34 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_198 <= -0.6172899007797241) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_398 <= 0.6776720285415649) THEN 37 ELSE 38 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_112 <= 0.5311894416809082) THEN 40 ELSE 41 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_491 <= 1.518703579902649) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_87 <= -0.41155150532722473) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_241 <= -1.395930528640747) THEN 45 ELSE 46 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_233 <= -0.9398543834686279) THEN 48 ELSE 49 END END ELSE 50 END END END AS node_id_2 
FROM "33322_J2367X_ADS_SCA_2_OUT" "ADS_sca_2_OUT"), 
"DT_node_data_9" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Proba_2" AS "Proba_2", "Values"."LogProba_2" AS "LogProba_2", "Values"."Proba_3" AS "Proba_3", "Values"."LogProba_3" AS "LogProba_3", "Values"."Decision" AS "Decision", "Values"."DecisionProba" AS "DecisionProba" 
FROM (SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 6 AS count, 5 AS depth, 4 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 0.9090909090909091 AS "Proba_1", -0.0953101798043249 AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 0.09090909090909091 AS "Proba_3", -2.3978952727983707 AS "LogProba_3", 1 AS "Decision", 0.9090909090909091 AS "DecisionProba" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 41 AS count, 5 AS depth, 4 AS parent_id, 0.5862068965517241 AS "Proba_0", -0.534082485930258 AS "LogProba_0", 0.10344827586206896 AS "Proba_1", -2.268683541318364 AS "LogProba_1", 0.1724137931034483 AS "Proba_2", -1.7578579175523736 AS "LogProba_2", 0.13793103448275862 AS "Proba_3", -1.9810014688665833 AS "LogProba_3", 0 AS "Decision", 0.5862068965517241 AS "DecisionProba" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 58 AS count, 5 AS depth, 7 AS parent_id, 0.10989010989010989 AS "Proba_0", -2.2082744135228043 AS "LogProba_0", 0.7252747252747253 AS "Proba_1", -0.3212047644904245 AS "LogProba_1", 0.07692307692307693 AS "Proba_2", -2.5649493574615367 AS "LogProba_2", 0.08791208791208792 AS "Proba_3", -2.431417964837014 AS "LogProba_3", 1 AS "Decision", 0.7252747252747253 AS "DecisionProba" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 12 AS count, 5 AS depth, 7 AS parent_id, 0.25 AS "Proba_0", -1.3862943611198906 AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 0.25 AS "Proba_2", -1.3862943611198906 AS "LogProba_2", 0.5 AS "Proba_3", -0.6931471805599453 AS "LogProba_3", 3 AS "Decision", 0.5 AS "DecisionProba" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 5 AS depth, 11 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 1 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 5 AS depth, 11 AS parent_id, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 5 AS depth, 14 AS parent_id, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 10 AS count, 5 AS depth, 14 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 2 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 4 AS depth, 18 AS parent_id, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 16 AS count, 4 AS depth, 18 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 2 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 11 AS count, 5 AS depth, 22 AS parent_id, 0.08333333333333333 AS "Proba_0", -2.4849066497880004 AS "LogProba_0", 0.08333333333333333 AS "Proba_1", -2.4849066497880004 AS "LogProba_1", 0.4166666666666667 AS "Proba_2", -0.8754687373538999 AS "LogProba_2", 0.4166666666666667 AS "Proba_3", -0.8754687373538999 AS "LogProba_3", 2 AS "Decision", 0.4166666666666667 AS "DecisionProba" FROM DUAL UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 14 AS count, 5 AS depth, 22 AS parent_id, 0.07407407407407407 AS "Proba_0", -2.6026896854443837 AS "LogProba_0", 0.9259259259259259 AS "Proba_1", -0.07696104113612832 AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 1 AS "Decision", 0.9259259259259259 AS "DecisionProba" FROM DUAL UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 39 AS count, 5 AS depth, 25 AS parent_id, 0.05 AS "Proba_0", -2.995732273553991 AS "LogProba_0", 0.13333333333333333 AS "Proba_1", -2.0149030205422647 AS "LogProba_1", 0.65 AS "Proba_2", -0.4307829160924542 AS "LogProba_2", 0.16666666666666666 AS "Proba_3", -1.791759469228055 AS "LogProba_3", 2 AS "Decision", 0.65 AS "DecisionProba" FROM DUAL UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 59 AS count, 5 AS depth, 25 AS parent_id, 0.20454545454545456 AS "Proba_0", -1.5869650565820417 AS "LogProba_0", 0.25 AS "Proba_1", -1.3862943611198906 AS "LogProba_1", 0.19318181818181818 AS "Proba_2", -1.6441234704219905 AS "LogProba_2", 0.3522727272727273 AS "Proba_3", -1.0433496099930601 AS "LogProba_3", 3 AS "Decision", 0.3522727272727273 AS "DecisionProba" FROM DUAL UNION ALL SELECT 32 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 5 AS depth, 31 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 1.0 AS "Proba_3", 0.0 AS "LogProba_3", 3 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 33 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 5 AS depth, 31 AS parent_id, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 34 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 9 AS count, 4 AS depth, 30 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 1 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 37 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 31 AS count, 5 AS depth, 36 AS parent_id, 0.8163265306122449 AS "Proba_0", -0.2029408439966903 AS "LogProba_0", 0.08163265306122448 AS "Proba_1", -2.505525936990736 AS "LogProba_1", 0.04081632653061224 AS "Proba_2", -3.1986731175506815 AS "LogProba_2", 0.061224489795918366 AS "Proba_3", -2.793208009442517 AS "LogProba_3", 0 AS "Decision", 0.8163265306122449 AS "DecisionProba" FROM DUAL UNION ALL SELECT 38 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 8 AS count, 5 AS depth, 36 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 0.2 AS "Proba_1", -1.6094379124341003 AS "LogProba_1", 0.2 AS "Proba_2", -1.6094379124341003 AS "LogProba_2", 0.6 AS "Proba_3", -0.5108256237659907 AS "LogProba_3", 3 AS "Decision", 0.6 AS "DecisionProba" FROM DUAL UNION ALL SELECT 40 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 83 AS count, 5 AS depth, 39 AS parent_id, 0.29457364341085274 AS "Proba_0", -1.2222262446352863 AS "LogProba_0", 0.13178294573643412 AS "Proba_1", -2.026599060305456 AS "LogProba_1", 0.18604651162790697 AS "Proba_2", -1.6817585740137264 AS "LogProba_2", 0.3875968992248062 AS "Proba_3", -0.947789398933526 AS "LogProba_3", 3 AS "Decision", 0.3875968992248062 AS "DecisionProba" FROM DUAL UNION ALL SELECT 41 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 35 AS count, 5 AS depth, 39 AS parent_id, 0.1320754716981132 AS "Proba_0", -2.0243817644968085 AS "LogProba_0", 0.09433962264150944 AS "Proba_1", -2.3608540011180215 AS "LogProba_1", 0.660377358490566 AS "Proba_2", -0.41494385206270823 AS "LogProba_2", 0.11320754716981132 AS "Proba_3", -2.178532444324067 AS "LogProba_3", 2 AS "Decision", 0.660377358490566 AS "DecisionProba" FROM DUAL UNION ALL SELECT 45 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 5 AS depth, 44 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 2 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 46 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 13 AS count, 5 AS depth, 44 AS parent_id, 0.5238095238095238 AS "Proba_0", -0.6466271649250525 AS "LogProba_0", 0.19047619047619047 AS "Proba_1", -1.6582280766035324 AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 0.2857142857142857 AS "Proba_3", -1.252762968495368 AS "LogProba_3", 0 AS "Decision", 0.5238095238095238 AS "DecisionProba" FROM DUAL UNION ALL SELECT 48 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 7 AS count, 5 AS depth, 47 AS parent_id, 0.7 AS "Proba_0", -0.35667494393873245 AS "LogProba_0", 0.1 AS "Proba_1", -2.3025850929940455 AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 0.2 AS "Proba_3", -1.6094379124341003 AS "LogProba_3", 0 AS "Decision", 0.7 AS "DecisionProba" FROM DUAL UNION ALL SELECT 49 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 39 AS count, 5 AS depth, 47 AS parent_id, 0.014925373134328358 AS "Proba_0", -4.204692619390966 AS "LogProba_0", 0.029850746268656716 AS "Proba_1", -3.5115454388310208 AS "LogProba_1", 0.07462686567164178 AS "Proba_2", -2.5952547069568657 AS "LogProba_2", 0.8805970149253731 AS "Proba_3", -0.12715517548524663 AS "LogProba_3", 3 AS "Decision", 0.8805970149253731 AS "DecisionProba" FROM DUAL UNION ALL SELECT 50 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 3 AS depth, 42 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 1 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL) "Values"), 
"DT_Output_9" AS 
(SELECT "DT_node_lookup_9"."KEY" AS "KEY", "DT_node_lookup_9".node_id_2 AS node_id_2, "DT_node_data_9".node_id AS node_id, "DT_node_data_9".feature AS feature, "DT_node_data_9".threshold AS threshold, "DT_node_data_9".count AS count, "DT_node_data_9".depth AS depth, "DT_node_data_9".parent_id AS parent_id, "DT_node_data_9"."Proba_0" AS "Proba_0", "DT_node_data_9"."LogProba_0" AS "LogProba_0", "DT_node_data_9"."Proba_1" AS "Proba_1", "DT_node_data_9"."LogProba_1" AS "LogProba_1", "DT_node_data_9"."Proba_2" AS "Proba_2", "DT_node_data_9"."LogProba_2" AS "LogProba_2", "DT_node_data_9"."Proba_3" AS "Proba_3", "DT_node_data_9"."LogProba_3" AS "LogProba_3", "DT_node_data_9"."Decision" AS "Decision", "DT_node_data_9"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup_9" LEFT OUTER JOIN "DT_node_data_9" ON "DT_node_lookup_9".node_id_2 = "DT_node_data_9".node_id), 
"BAG_Tree_9" AS 
(SELECT "DT_Output_9"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output_9"."Proba_0" AS "Proba_0", "DT_Output_9"."LogProba_0" AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output_9"."Proba_1" AS "Proba_1", "DT_Output_9"."LogProba_1" AS "LogProba_1", CAST(NULL AS BINARY_DOUBLE) AS "Score_2", "DT_Output_9"."Proba_2" AS "Proba_2", "DT_Output_9"."LogProba_2" AS "LogProba_2", CAST(NULL AS BINARY_DOUBLE) AS "Score_3", "DT_Output_9"."Proba_3" AS "Proba_3", "DT_Output_9"."LogProba_3" AS "LogProba_3" 
FROM "DT_Output_9")
 SELECT "BAG_AVG_B0"."KEY", "BAG_AVG_B0"."Score_0", "BAG_AVG_B0"."Proba_0", "BAG_AVG_B0"."LogProba_0", "BAG_AVG_B0"."Score_1", "BAG_AVG_B0"."Proba_1", "BAG_AVG_B0"."LogProba_1", "BAG_AVG_B0"."Score_2", "BAG_AVG_B0"."Proba_2", "BAG_AVG_B0"."LogProba_2", "BAG_AVG_B0"."Score_3", "BAG_AVG_B0"."Proba_3", "BAG_AVG_B0"."LogProba_3" 
FROM (SELECT "BAG_AVG_esu_0"."KEY" AS "KEY", "BAG_AVG_esu_0"."Score_0" AS "Score_0", "BAG_AVG_esu_0"."Proba_0" AS "Proba_0", "BAG_AVG_esu_0"."LogProba_0" AS "LogProba_0", "BAG_AVG_esu_0"."Score_1" AS "Score_1", "BAG_AVG_esu_0"."Proba_1" AS "Proba_1", "BAG_AVG_esu_0"."LogProba_1" AS "LogProba_1", "BAG_AVG_esu_0"."Score_2" AS "Score_2", "BAG_AVG_esu_0"."Proba_2" AS "Proba_2", "BAG_AVG_esu_0"."LogProba_2" AS "LogProba_2", "BAG_AVG_esu_0"."Score_3" AS "Score_3", "BAG_AVG_esu_0"."Proba_3" AS "Proba_3", "BAG_AVG_esu_0"."LogProba_3" AS "LogProba_3" 
FROM (SELECT "BAG_Tree_0"."KEY" AS "KEY", "BAG_Tree_0"."Score_0" AS "Score_0", "BAG_Tree_0"."Proba_0" AS "Proba_0", "BAG_Tree_0"."LogProba_0" AS "LogProba_0", "BAG_Tree_0"."Score_1" AS "Score_1", "BAG_Tree_0"."Proba_1" AS "Proba_1", "BAG_Tree_0"."LogProba_1" AS "LogProba_1", "BAG_Tree_0"."Score_2" AS "Score_2", "BAG_Tree_0"."Proba_2" AS "Proba_2", "BAG_Tree_0"."LogProba_2" AS "LogProba_2", "BAG_Tree_0"."Score_3" AS "Score_3", "BAG_Tree_0"."Proba_3" AS "Proba_3", "BAG_Tree_0"."LogProba_3" AS "LogProba_3" 
FROM "BAG_Tree_0" UNION ALL SELECT "BAG_Tree_1"."KEY" AS "KEY", "BAG_Tree_1"."Score_0" AS "Score_0", "BAG_Tree_1"."Proba_0" AS "Proba_0", "BAG_Tree_1"."LogProba_0" AS "LogProba_0", "BAG_Tree_1"."Score_1" AS "Score_1", "BAG_Tree_1"."Proba_1" AS "Proba_1", "BAG_Tree_1"."LogProba_1" AS "LogProba_1", "BAG_Tree_1"."Score_2" AS "Score_2", "BAG_Tree_1"."Proba_2" AS "Proba_2", "BAG_Tree_1"."LogProba_2" AS "LogProba_2", "BAG_Tree_1"."Score_3" AS "Score_3", "BAG_Tree_1"."Proba_3" AS "Proba_3", "BAG_Tree_1"."LogProba_3" AS "LogProba_3" 
FROM "BAG_Tree_1" UNION ALL SELECT "BAG_Tree_2"."KEY" AS "KEY", "BAG_Tree_2"."Score_0" AS "Score_0", "BAG_Tree_2"."Proba_0" AS "Proba_0", "BAG_Tree_2"."LogProba_0" AS "LogProba_0", "BAG_Tree_2"."Score_1" AS "Score_1", "BAG_Tree_2"."Proba_1" AS "Proba_1", "BAG_Tree_2"."LogProba_1" AS "LogProba_1", "BAG_Tree_2"."Score_2" AS "Score_2", "BAG_Tree_2"."Proba_2" AS "Proba_2", "BAG_Tree_2"."LogProba_2" AS "LogProba_2", "BAG_Tree_2"."Score_3" AS "Score_3", "BAG_Tree_2"."Proba_3" AS "Proba_3", "BAG_Tree_2"."LogProba_3" AS "LogProba_3" 
FROM "BAG_Tree_2" UNION ALL SELECT "BAG_Tree_3"."KEY" AS "KEY", "BAG_Tree_3"."Score_0" AS "Score_0", "BAG_Tree_3"."Proba_0" AS "Proba_0", "BAG_Tree_3"."LogProba_0" AS "LogProba_0", "BAG_Tree_3"."Score_1" AS "Score_1", "BAG_Tree_3"."Proba_1" AS "Proba_1", "BAG_Tree_3"."LogProba_1" AS "LogProba_1", "BAG_Tree_3"."Score_2" AS "Score_2", "BAG_Tree_3"."Proba_2" AS "Proba_2", "BAG_Tree_3"."LogProba_2" AS "LogProba_2", "BAG_Tree_3"."Score_3" AS "Score_3", "BAG_Tree_3"."Proba_3" AS "Proba_3", "BAG_Tree_3"."LogProba_3" AS "LogProba_3" 
FROM "BAG_Tree_3" UNION ALL SELECT "BAG_Tree_4"."KEY" AS "KEY", "BAG_Tree_4"."Score_0" AS "Score_0", "BAG_Tree_4"."Proba_0" AS "Proba_0", "BAG_Tree_4"."LogProba_0" AS "LogProba_0", "BAG_Tree_4"."Score_1" AS "Score_1", "BAG_Tree_4"."Proba_1" AS "Proba_1", "BAG_Tree_4"."LogProba_1" AS "LogProba_1", "BAG_Tree_4"."Score_2" AS "Score_2", "BAG_Tree_4"."Proba_2" AS "Proba_2", "BAG_Tree_4"."LogProba_2" AS "LogProba_2", "BAG_Tree_4"."Score_3" AS "Score_3", "BAG_Tree_4"."Proba_3" AS "Proba_3", "BAG_Tree_4"."LogProba_3" AS "LogProba_3" 
FROM "BAG_Tree_4" UNION ALL SELECT "BAG_Tree_5"."KEY" AS "KEY", "BAG_Tree_5"."Score_0" AS "Score_0", "BAG_Tree_5"."Proba_0" AS "Proba_0", "BAG_Tree_5"."LogProba_0" AS "LogProba_0", "BAG_Tree_5"."Score_1" AS "Score_1", "BAG_Tree_5"."Proba_1" AS "Proba_1", "BAG_Tree_5"."LogProba_1" AS "LogProba_1", "BAG_Tree_5"."Score_2" AS "Score_2", "BAG_Tree_5"."Proba_2" AS "Proba_2", "BAG_Tree_5"."LogProba_2" AS "LogProba_2", "BAG_Tree_5"."Score_3" AS "Score_3", "BAG_Tree_5"."Proba_3" AS "Proba_3", "BAG_Tree_5"."LogProba_3" AS "LogProba_3" 
FROM "BAG_Tree_5" UNION ALL SELECT "BAG_Tree_6"."KEY" AS "KEY", "BAG_Tree_6"."Score_0" AS "Score_0", "BAG_Tree_6"."Proba_0" AS "Proba_0", "BAG_Tree_6"."LogProba_0" AS "LogProba_0", "BAG_Tree_6"."Score_1" AS "Score_1", "BAG_Tree_6"."Proba_1" AS "Proba_1", "BAG_Tree_6"."LogProba_1" AS "LogProba_1", "BAG_Tree_6"."Score_2" AS "Score_2", "BAG_Tree_6"."Proba_2" AS "Proba_2", "BAG_Tree_6"."LogProba_2" AS "LogProba_2", "BAG_Tree_6"."Score_3" AS "Score_3", "BAG_Tree_6"."Proba_3" AS "Proba_3", "BAG_Tree_6"."LogProba_3" AS "LogProba_3" 
FROM "BAG_Tree_6" UNION ALL SELECT "BAG_Tree_7"."KEY" AS "KEY", "BAG_Tree_7"."Score_0" AS "Score_0", "BAG_Tree_7"."Proba_0" AS "Proba_0", "BAG_Tree_7"."LogProba_0" AS "LogProba_0", "BAG_Tree_7"."Score_1" AS "Score_1", "BAG_Tree_7"."Proba_1" AS "Proba_1", "BAG_Tree_7"."LogProba_1" AS "LogProba_1", "BAG_Tree_7"."Score_2" AS "Score_2", "BAG_Tree_7"."Proba_2" AS "Proba_2", "BAG_Tree_7"."LogProba_2" AS "LogProba_2", "BAG_Tree_7"."Score_3" AS "Score_3", "BAG_Tree_7"."Proba_3" AS "Proba_3", "BAG_Tree_7"."LogProba_3" AS "LogProba_3" 
FROM "BAG_Tree_7" UNION ALL SELECT "BAG_Tree_8"."KEY" AS "KEY", "BAG_Tree_8"."Score_0" AS "Score_0", "BAG_Tree_8"."Proba_0" AS "Proba_0", "BAG_Tree_8"."LogProba_0" AS "LogProba_0", "BAG_Tree_8"."Score_1" AS "Score_1", "BAG_Tree_8"."Proba_1" AS "Proba_1", "BAG_Tree_8"."LogProba_1" AS "LogProba_1", "BAG_Tree_8"."Score_2" AS "Score_2", "BAG_Tree_8"."Proba_2" AS "Proba_2", "BAG_Tree_8"."LogProba_2" AS "LogProba_2", "BAG_Tree_8"."Score_3" AS "Score_3", "BAG_Tree_8"."Proba_3" AS "Proba_3", "BAG_Tree_8"."LogProba_3" AS "LogProba_3" 
FROM "BAG_Tree_8" UNION ALL SELECT "BAG_Tree_9"."KEY" AS "KEY", "BAG_Tree_9"."Score_0" AS "Score_0", "BAG_Tree_9"."Proba_0" AS "Proba_0", "BAG_Tree_9"."LogProba_0" AS "LogProba_0", "BAG_Tree_9"."Score_1" AS "Score_1", "BAG_Tree_9"."Proba_1" AS "Proba_1", "BAG_Tree_9"."LogProba_1" AS "LogProba_1", "BAG_Tree_9"."Score_2" AS "Score_2", "BAG_Tree_9"."Proba_2" AS "Proba_2", "BAG_Tree_9"."LogProba_2" AS "LogProba_2", "BAG_Tree_9"."Score_3" AS "Score_3", "BAG_Tree_9"."Proba_3" AS "Proba_3", "BAG_Tree_9"."LogProba_3" AS "LogProba_3" 
FROM "BAG_Tree_9") "BAG_AVG_esu_0") "BAG_AVG_B0") "U"
-- Code For temporary table 29233323_UWKI7F_BAG_AVG_B1 part 1/2. Create 


CREATE GLOBAL TEMPORARY TABLE "29233323_UWKI7F_BAG_AVG_B1" (
	"KEY" NUMBER(19), 
	"Score_0" BINARY_DOUBLE, 
	"Proba_0" BINARY_DOUBLE, 
	"LogProba_0" BINARY_DOUBLE, 
	"Score_1" BINARY_DOUBLE, 
	"Proba_1" BINARY_DOUBLE, 
	"LogProba_1" BINARY_DOUBLE, 
	"Score_2" BINARY_DOUBLE, 
	"Proba_2" BINARY_DOUBLE, 
	"LogProba_2" BINARY_DOUBLE, 
	"Score_3" BINARY_DOUBLE, 
	"Proba_3" BINARY_DOUBLE, 
	"LogProba_3" BINARY_DOUBLE
)

 ON COMMIT PRESERVE ROWS
-- Code For temporary table 29233323_UWKI7F_BAG_AVG_B1 part 2/2. Populate

INSERT INTO "29233323_UWKI7F_BAG_AVG_B1" ("KEY", "Score_0", "Proba_0", "LogProba_0", "Score_1", "Proba_1", "LogProba_1", "Score_2", "Proba_2", "LogProba_2", "Score_3", "Proba_3", "LogProba_3") SELECT "U"."KEY", "U"."Score_0", "U"."Proba_0", "U"."LogProba_0", "U"."Score_1", "U"."Proba_1", "U"."LogProba_1", "U"."Score_2", "U"."Proba_2", "U"."LogProba_2", "U"."Score_3", "U"."Proba_3", "U"."LogProba_3" 
FROM (WITH "DT_node_lookup_10" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_251 <= 0.2026970535516739) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_458 <= 0.23628419637680054) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_345 <= 1.147458791732788) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_404 <= -0.30576181411743164) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_268 <= 0.6504755020141602) THEN 5 ELSE 6 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_410 <= -0.7167567610740662) THEN 8 ELSE 9 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_339 <= -0.6368741393089294) THEN 11 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_29 <= -1.8266258239746094) THEN 13 ELSE 14 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_181 <= 0.8396978974342346) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_368 <= 1.6635596752166748) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_294 <= -0.9116361141204834) THEN 18 ELSE 19 END ELSE 20 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_289 <= -0.3499346375465393) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= -0.08921028673648834) THEN 23 ELSE 24 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_24 <= -0.6692943572998047) THEN 26 ELSE 27 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_499 <= -0.13027003407478333) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_439 <= 0.7846384048461914) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_111 <= -0.5399195551872253) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_36 <= 0.6011301279067993) THEN 32 ELSE 33 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_276 <= 0.8510631918907166) THEN 35 ELSE 36 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_340 <= 0.7816162109375) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_380 <= -1.4366652965545654) THEN 39 ELSE 40 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_242 <= -0.40875765681266785) THEN 42 ELSE 43 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_137 <= 1.3839538097381592) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_220 <= 0.6592687964439392) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_244 <= -1.0330778360366821) THEN 47 ELSE 48 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_172 <= -0.773321270942688) THEN 50 ELSE 51 END END ELSE 52 END END END AS node_id_2 
FROM "33322_J2367X_ADS_SCA_2_OUT" "ADS_sca_2_OUT"), 
"DT_node_data_10" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Proba_2" AS "Proba_2", "Values"."LogProba_2" AS "LogProba_2", "Values"."Proba_3" AS "Proba_3", "Values"."LogProba_3" AS "LogProba_3", "Values"."Decision" AS "Decision", "Values"."DecisionProba" AS "DecisionProba" 
FROM (SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 43 AS count, 5 AS depth, 4 AS parent_id, 0.11594202898550725 AS "Proba_0", -2.1546649629174235 AS "LogProba_0", 0.37681159420289856 AS "Proba_1", -0.9760099665757773 AS "LogProba_1", 0.15942028985507245 AS "Proba_2", -1.836211231798889 AS "LogProba_2", 0.34782608695652173 AS "Proba_3", -1.0560526742493137 AS "LogProba_3", 1 AS "Decision", 0.37681159420289856 AS "DecisionProba" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 19 AS count, 5 AS depth, 4 AS parent_id, 0.7352941176470589 AS "Proba_0", -0.30748469974796055 AS "LogProba_0", 0.20588235294117646 AS "Proba_1", -1.580450375560848 AS "LogProba_1", 0.058823529411764705 AS "Proba_2", -2.833213344056216 AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 0 AS "Decision", 0.7352941176470589 AS "DecisionProba" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 21 AS count, 5 AS depth, 7 AS parent_id, 0.48484848484848486 AS "Proba_0", -0.723918839226699 AS "LogProba_0", 0.15151515151515152 AS "Proba_1", -1.8870696490323797 AS "LogProba_1", 0.12121212121212122 AS "Proba_2", -2.1102132003465894 AS "LogProba_2", 0.24242424242424243 AS "Proba_3", -1.4170660197866443 AS "LogProba_3", 0 AS "Decision", 0.48484848484848486 AS "DecisionProba" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 81 AS count, 5 AS depth, 7 AS parent_id, 0.1452991452991453 AS "Proba_0", -1.92896059074154 AS "LogProba_0", 0.1452991452991453 AS "Proba_1", -1.92896059074154 AS "LogProba_1", 0.6495726495726496 AS "Proba_2", -0.431440594511425 AS "LogProba_2", 0.05982905982905983 AS "Proba_3", -2.816263785742443 AS "LogProba_3", 2 AS "Decision", 0.6495726495726496 AS "DecisionProba" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 4 AS depth, 10 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 1 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 5 AS depth, 12 AS parent_id, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 18 AS count, 5 AS depth, 12 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 0.08 AS "Proba_1", -2.5257286443082556 AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 0.92 AS "Proba_3", -0.08338160893905101 AS "LogProba_3", 3 AS "Decision", 0.92 AS "DecisionProba" FROM DUAL UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 18 AS count, 5 AS depth, 17 AS parent_id, 0.25 AS "Proba_0", -1.3862943611198906 AS "LogProba_0", 0.2857142857142857 AS "Proba_1", -1.252762968495368 AS "LogProba_1", 0.10714285714285714 AS "Proba_2", -2.2335922215070942 AS "LogProba_2", 0.35714285714285715 AS "Proba_3", -1.0296194171811581 AS "LogProba_3", 3 AS "Decision", 0.35714285714285715 AS "DecisionProba" FROM DUAL UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 64 AS count, 5 AS depth, 17 AS parent_id, 0.041237113402061855 AS "Proba_0", -3.188416617383492 AS "LogProba_0", 0.8041237113402062 AS "Proba_1", -0.21800215181379104 AS "LogProba_1", 0.08247422680412371 AS "Proba_2", -2.495269436823547 AS "LogProba_2", 0.07216494845360824 AS "Proba_3", -2.62880082944807 AS "LogProba_3", 1 AS "Decision", 0.8041237113402062 AS "DecisionProba" FROM DUAL UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 4 AS depth, 16 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 2 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 6 AS count, 5 AS depth, 22 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 0.8571428571428571 AS "Proba_1", -0.15415067982725836 AS "LogProba_1", 0.14285714285714285 AS "Proba_2", -1.9459101490553135 AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 1 AS "Decision", 0.8571428571428571 AS "DecisionProba" FROM DUAL UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 7 AS count, 5 AS depth, 22 AS parent_id, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 5 AS depth, 25 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 1.0 AS "Proba_3", 0.0 AS "LogProba_3", 3 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 10 AS count, 5 AS depth, 25 AS parent_id, 0.14285714285714285 AS "Proba_0", -1.9459101490553135 AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 0.7142857142857143 AS "Proba_2", -0.3364722366212129 AS "LogProba_2", 0.14285714285714285 AS "Proba_3", -1.9459101490553135 AS "LogProba_3", 2 AS "Decision", 0.7142857142857143 AS "DecisionProba" FROM DUAL UNION ALL SELECT 32 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 22 AS count, 5 AS depth, 31 AS parent_id, 0.023809523809523808 AS "Proba_0", -3.7376696182833684 AS "LogProba_0", 0.07142857142857142 AS "Proba_1", -2.639057329615259 AS "LogProba_1", 0.9047619047619048 AS "Proba_2", -0.10008345855698253 AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 2 AS "Decision", 0.9047619047619048 AS "DecisionProba" FROM DUAL UNION ALL SELECT 33 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 8 AS count, 5 AS depth, 31 AS parent_id, 0.46153846153846156 AS "Proba_0", -0.7731898882334817 AS "LogProba_0", 0.23076923076923078 AS "Proba_1", -1.466337068793427 AS "LogProba_1", 0.07692307692307693 AS "Proba_2", -2.5649493574615367 AS "LogProba_2", 0.23076923076923078 AS "Proba_3", -1.466337068793427 AS "LogProba_3", 0 AS "Decision", 0.46153846153846156 AS "DecisionProba" FROM DUAL UNION ALL SELECT 35 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 39 AS count, 5 AS depth, 34 AS parent_id, 0.1206896551724138 AS "Proba_0", -2.114532861491106 AS "LogProba_0", 0.15517241379310345 AS "Proba_1", -1.8632184332102 AS "LogProba_1", 0.25862068965517243 AS "Proba_2", -1.3523928094442093 AS "LogProba_2", 0.46551724137931033 AS "Proba_3", -0.7646061445420903 AS "LogProba_3", 3 AS "Decision", 0.46551724137931033 AS "DecisionProba" FROM DUAL UNION ALL SELECT 36 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 12 AS count, 5 AS depth, 34 AS parent_id, 0.8571428571428571 AS "Proba_0", -0.15415067982725836 AS "LogProba_0", 0.07142857142857142 AS "Proba_1", -2.639057329615259 AS "LogProba_1", 0.07142857142857142 AS "Proba_2", -2.639057329615259 AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 0 AS "Decision", 0.8571428571428571 AS "DecisionProba" FROM DUAL UNION ALL SELECT 39 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 5 AS depth, 38 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 1 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 40 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 20 AS count, 5 AS depth, 38 AS parent_id, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 42 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 5 AS depth, 41 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 2 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 43 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 5 AS depth, 41 AS parent_id, 0.2 AS "Proba_0", -1.6094379124341003 AS "LogProba_0", 0.2 AS "Proba_1", -1.6094379124341003 AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 0.6 AS "Proba_3", -0.5108256237659907 AS "LogProba_3", 3 AS "Decision", 0.6 AS "DecisionProba" FROM DUAL UNION ALL SELECT 47 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 12 AS count, 5 AS depth, 46 AS parent_id, 0.6 AS "Proba_0", -0.5108256237659907 AS "LogProba_0", 0.2 AS "Proba_1", -1.6094379124341003 AS "LogProba_1", 0.13333333333333333 AS "Proba_2", -2.0149030205422647 AS "LogProba_2", 0.06666666666666667 AS "Proba_3", -2.70805020110221 AS "LogProba_3", 0 AS "Decision", 0.6 AS "DecisionProba" FROM DUAL UNION ALL SELECT 48 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 60 AS count, 5 AS depth, 46 AS parent_id, 0.10101010101010101 AS "Proba_0", -2.2925347571405443 AS "LogProba_0", 0.09090909090909091 AS "Proba_1", -2.3978952727983707 AS "LogProba_1", 0.050505050505050504 AS "Proba_2", -2.9856819377004897 AS "LogProba_2", 0.7575757575757576 AS "Proba_3", -0.2776317365982795 AS "LogProba_3", 3 AS "Decision", 0.7575757575757576 AS "DecisionProba" FROM DUAL UNION ALL SELECT 50 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 8 AS count, 5 AS depth, 49 AS parent_id, 0.45454545454545453 AS "Proba_0", -0.7884573603642702 AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 0.36363636363636365 AS "Proba_2", -1.0116009116784799 AS "LogProba_2", 0.18181818181818182 AS "Proba_3", -1.7047480922384253 AS "LogProba_3", 0 AS "Decision", 0.45454545454545453 AS "DecisionProba" FROM DUAL UNION ALL SELECT 51 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 12 AS count, 5 AS depth, 49 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 0.85 AS "Proba_1", -0.16251892949777494 AS "LogProba_1", 0.05 AS "Proba_2", -2.995732273553991 AS "LogProba_2", 0.1 AS "Proba_3", -2.3025850929940455 AS "LogProba_3", 1 AS "Decision", 0.85 AS "DecisionProba" FROM DUAL UNION ALL SELECT 52 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 10 AS count, 3 AS depth, 44 AS parent_id, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL) "Values"), 
"DT_Output_10" AS 
(SELECT "DT_node_lookup_10"."KEY" AS "KEY", "DT_node_lookup_10".node_id_2 AS node_id_2, "DT_node_data_10".node_id AS node_id, "DT_node_data_10".feature AS feature, "DT_node_data_10".threshold AS threshold, "DT_node_data_10".count AS count, "DT_node_data_10".depth AS depth, "DT_node_data_10".parent_id AS parent_id, "DT_node_data_10"."Proba_0" AS "Proba_0", "DT_node_data_10"."LogProba_0" AS "LogProba_0", "DT_node_data_10"."Proba_1" AS "Proba_1", "DT_node_data_10"."LogProba_1" AS "LogProba_1", "DT_node_data_10"."Proba_2" AS "Proba_2", "DT_node_data_10"."LogProba_2" AS "LogProba_2", "DT_node_data_10"."Proba_3" AS "Proba_3", "DT_node_data_10"."LogProba_3" AS "LogProba_3", "DT_node_data_10"."Decision" AS "Decision", "DT_node_data_10"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup_10" LEFT OUTER JOIN "DT_node_data_10" ON "DT_node_lookup_10".node_id_2 = "DT_node_data_10".node_id), 
"BAG_Tree_10" AS 
(SELECT "DT_Output_10"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output_10"."Proba_0" AS "Proba_0", "DT_Output_10"."LogProba_0" AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output_10"."Proba_1" AS "Proba_1", "DT_Output_10"."LogProba_1" AS "LogProba_1", CAST(NULL AS BINARY_DOUBLE) AS "Score_2", "DT_Output_10"."Proba_2" AS "Proba_2", "DT_Output_10"."LogProba_2" AS "LogProba_2", CAST(NULL AS BINARY_DOUBLE) AS "Score_3", "DT_Output_10"."Proba_3" AS "Proba_3", "DT_Output_10"."LogProba_3" AS "LogProba_3" 
FROM "DT_Output_10"), 
"DT_node_lookup_11" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_20 <= 0.24405133724212646) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_211 <= -0.8404719829559326) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= 0.829639732837677) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_284 <= -0.7357319593429565) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_341 <= -0.044625841081142426) THEN 5 ELSE 6 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_325 <= 1.4181761741638184) THEN 8 ELSE 9 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_124 <= -0.44098135828971863) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_332 <= 0.41710159182548523) THEN 12 ELSE 13 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_450 <= -1.6058318614959717) THEN 15 ELSE 16 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_251 <= 0.35576897859573364) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_209 <= -0.9975380897521973) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_419 <= 0.28932440280914307) THEN 20 ELSE 21 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_497 <= -0.5940566062927246) THEN 23 ELSE 24 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_363 <= 1.011099934577942) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_217 <= 1.0140565633773804) THEN 27 ELSE 28 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_218 <= 1.5635902881622314) THEN 30 ELSE 31 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_75 <= -1.3165242671966553) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_152 <= 0.8032119274139404) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_58 <= -1.5377660989761353) THEN 35 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_31 <= -1.1441365480422974) THEN 37 ELSE 38 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_361 <= 0.8898534774780273) THEN 40 ELSE 41 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_364 <= 0.6063549518585205) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_430 <= -0.3443247079849243) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_108 <= -0.39407968521118164) THEN 45 ELSE 46 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_386 <= -1.359100580215454) THEN 48 ELSE 49 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_368 <= -0.5996207594871521) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_465 <= -1.147792935371399) THEN 52 ELSE 53 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_398 <= -1.5759336948394775) THEN 55 ELSE 56 END END END END END AS node_id_2 
FROM "33322_J2367X_ADS_SCA_2_OUT" "ADS_sca_2_OUT"), 
"DT_node_data_11" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Proba_2" AS "Proba_2", "Values"."LogProba_2" AS "LogProba_2", "Values"."Proba_3" AS "Proba_3", "Values"."LogProba_3" AS "LogProba_3", "Values"."Decision" AS "Decision", "Values"."DecisionProba" AS "DecisionProba" 
FROM (SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 5 AS depth, 4 AS parent_id, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 5 AS depth, 4 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 0.3333333333333333 AS "Proba_1", -1.0986122886681098 AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 0.6666666666666666 AS "Proba_3", -0.40546510810816444 AS "LogProba_3", 3 AS "Decision", 0.6666666666666666 AS "DecisionProba" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 32 AS count, 5 AS depth, 7 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 0.03571428571428571 AS "Proba_1", -3.332204510175204 AS "LogProba_1", 0.9642857142857143 AS "Proba_2", -0.03636764417087483 AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 2 AS "Decision", 0.9642857142857143 AS "DecisionProba" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 5 AS depth, 7 AS parent_id, 0.6666666666666666 AS "Proba_0", -0.40546510810816444 AS "LogProba_0", 0.3333333333333333 AS "Proba_1", -1.0986122886681098 AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 0 AS "Decision", 0.6666666666666666 AS "DecisionProba" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 5 AS depth, 11 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 0.8 AS "Proba_2", -0.2231435513142097 AS "LogProba_2", 0.2 AS "Proba_3", -1.6094379124341003 AS "LogProba_3", 2 AS "Decision", 0.8 AS "DecisionProba" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 5 AS depth, 11 AS parent_id, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 5 AS depth, 14 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 1.0 AS "Proba_3", 0.0 AS "LogProba_3", 3 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 7 AS count, 5 AS depth, 14 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 1 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 16 AS count, 5 AS depth, 19 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 0.4782608695652174 AS "Proba_1", -0.7375989431307791 AS "LogProba_1", 0.2608695652173913 AS "Proba_2", -1.3437347467010947 AS "LogProba_2", 0.2608695652173913 AS "Proba_3", -1.3437347467010947 AS "LogProba_3", 1 AS "Decision", 0.4782608695652174 AS "DecisionProba" FROM DUAL UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 13 AS count, 5 AS depth, 19 AS parent_id, 0.034482758620689655 AS "Proba_0", -3.367295829986474 AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 0.9655172413793104 AS "Proba_2", -0.03509131981127006 AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 2 AS "Decision", 0.9655172413793104 AS "DecisionProba" FROM DUAL UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 44 AS count, 5 AS depth, 22 AS parent_id, 0.3389830508474576 AS "Proba_0", -1.0818051703517284 AS "LogProba_0", 0.15254237288135594 AS "Proba_1", -1.8803128665695 AS "LogProba_1", 0.1864406779661017 AS "Proba_2", -1.6796421711073488 AS "LogProba_2", 0.3220338983050847 AS "Proba_3", -1.133098464739279 AS "LogProba_3", 0 AS "Decision", 0.3389830508474576 AS "DecisionProba" FROM DUAL UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 102 AS count, 5 AS depth, 22 AS parent_id, 0.13291139240506328 AS "Proba_0", -2.018072595303544 AS "LogProba_0", 0.5506329113924051 AS "Proba_1", -0.596686914372383 AS "LogProba_1", 0.16455696202531644 AS "Proba_2", -1.8044984950054848 AS "LogProba_2", 0.1518987341772152 AS "Proba_3", -1.8845412026790211 AS "LogProba_3", 1 AS "Decision", 0.5506329113924051 AS "DecisionProba" FROM DUAL UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 52 AS count, 5 AS depth, 26 AS parent_id, 0.14084507042253522 AS "Proba_0", -1.9600947840472698 AS "LogProba_0", 0.18309859154929578 AS "Proba_1", -1.6977305195797787 AS "LogProba_1", 0.2676056338028169 AS "Proba_2", -1.318240897874875 AS "LogProba_2", 0.4084507042253521 AS "Proba_3", -0.8953840470548413 AS "LogProba_3", 3 AS "Decision", 0.4084507042253521 AS "DecisionProba" FROM DUAL UNION ALL SELECT 28 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 13 AS count, 5 AS depth, 26 AS parent_id, 0.7777777777777778 AS "Proba_0", -0.25131442828090605 AS "LogProba_0", 0.05555555555555555 AS "Proba_1", -2.890371757896165 AS "LogProba_1", 0.1111111111111111 AS "Proba_2", -2.1972245773362196 AS "LogProba_2", 0.05555555555555555 AS "Proba_3", -2.890371757896165 AS "LogProba_3", 0 AS "Decision", 0.7777777777777778 AS "DecisionProba" FROM DUAL UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 11 AS count, 5 AS depth, 29 AS parent_id, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 31 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 5 AS depth, 29 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 1.0 AS "Proba_3", 0.0 AS "LogProba_3", 3 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 35 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 4 AS depth, 34 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 1.0 AS "Proba_3", 0.0 AS "LogProba_3", 3 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 37 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 5 AS depth, 36 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 0.3333333333333333 AS "Proba_1", -1.0986122886681098 AS "LogProba_1", 0.3333333333333333 AS "Proba_2", -1.0986122886681098 AS "LogProba_2", 0.3333333333333333 AS "Proba_3", -1.0986122886681098 AS "LogProba_3", 1 AS "Decision", 0.3333333333333333 AS "DecisionProba" FROM DUAL UNION ALL SELECT 38 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 16 AS count, 5 AS depth, 36 AS parent_id, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 40 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 4 AS depth, 39 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 2 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 41 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 4 AS depth, 39 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 1 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 45 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 11 AS count, 5 AS depth, 44 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 0.13333333333333333 AS "Proba_1", -2.0149030205422647 AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 0.8666666666666667 AS "Proba_3", -0.1431008436406733 AS "LogProba_3", 3 AS "Decision", 0.8666666666666667 AS "DecisionProba" FROM DUAL UNION ALL SELECT 46 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 29 AS count, 5 AS depth, 44 AS parent_id, 0.6511627906976745 AS "Proba_0", -0.4289956055183584 AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 0.09302325581395349 AS "Proba_2", -2.374905754573672 AS "LogProba_2", 0.2558139534883721 AS "Proba_3", -1.363304842895192 AS "LogProba_3", 0 AS "Decision", 0.6511627906976745 AS "DecisionProba" FROM DUAL UNION ALL SELECT 48 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 7 AS count, 5 AS depth, 47 AS parent_id, 0.15384615384615385 AS "Proba_0", -1.8718021769015913 AS "LogProba_0", 0.8461538461538461 AS "Proba_1", -0.1670540846631662 AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 1 AS "Decision", 0.8461538461538461 AS "DecisionProba" FROM DUAL UNION ALL SELECT 49 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 76 AS count, 5 AS depth, 47 AS parent_id, 0.15384615384615385 AS "Proba_0", -1.8718021769015913 AS "LogProba_0", 0.11965811965811966 AS "Proba_1", -2.1231166051824975 AS "LogProba_1", 0.46153846153846156 AS "Proba_2", -0.7731898882334817 AS "LogProba_2", 0.26495726495726496 AS "Proba_3", -1.3281867303126098 AS "LogProba_3", 2 AS "Decision", 0.46153846153846156 AS "DecisionProba" FROM DUAL UNION ALL SELECT 52 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 5 AS depth, 51 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 1.0 AS "Proba_3", 0.0 AS "LogProba_3", 3 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 53 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 12 AS count, 5 AS depth, 51 AS parent_id, 0.6666666666666666 AS "Proba_0", -0.40546510810816444 AS "LogProba_0", 0.26666666666666666 AS "Proba_1", -1.3217558399823195 AS "LogProba_1", 0.06666666666666667 AS "Proba_2", -2.70805020110221 AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 0 AS "Decision", 0.6666666666666666 AS "DecisionProba" FROM DUAL UNION ALL SELECT 55 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 5 AS depth, 54 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 2 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 56 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 37 AS count, 5 AS depth, 54 AS parent_id, 0.043478260869565216 AS "Proba_0", -3.1354942159291497 AS "LogProba_0", 0.07246376811594203 AS "Proba_1", -2.624668592163159 AS "LogProba_1", 0.028985507246376812 AS "Proba_2", -3.5409593240373143 AS "LogProba_2", 0.855072463768116 AS "Proba_3", -0.15656906069153992 AS "LogProba_3", 3 AS "Decision", 0.855072463768116 AS "DecisionProba" FROM DUAL) "Values"), 
"DT_Output_11" AS 
(SELECT "DT_node_lookup_11"."KEY" AS "KEY", "DT_node_lookup_11".node_id_2 AS node_id_2, "DT_node_data_11".node_id AS node_id, "DT_node_data_11".feature AS feature, "DT_node_data_11".threshold AS threshold, "DT_node_data_11".count AS count, "DT_node_data_11".depth AS depth, "DT_node_data_11".parent_id AS parent_id, "DT_node_data_11"."Proba_0" AS "Proba_0", "DT_node_data_11"."LogProba_0" AS "LogProba_0", "DT_node_data_11"."Proba_1" AS "Proba_1", "DT_node_data_11"."LogProba_1" AS "LogProba_1", "DT_node_data_11"."Proba_2" AS "Proba_2", "DT_node_data_11"."LogProba_2" AS "LogProba_2", "DT_node_data_11"."Proba_3" AS "Proba_3", "DT_node_data_11"."LogProba_3" AS "LogProba_3", "DT_node_data_11"."Decision" AS "Decision", "DT_node_data_11"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup_11" LEFT OUTER JOIN "DT_node_data_11" ON "DT_node_lookup_11".node_id_2 = "DT_node_data_11".node_id), 
"BAG_Tree_11" AS 
(SELECT "DT_Output_11"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output_11"."Proba_0" AS "Proba_0", "DT_Output_11"."LogProba_0" AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output_11"."Proba_1" AS "Proba_1", "DT_Output_11"."LogProba_1" AS "LogProba_1", CAST(NULL AS BINARY_DOUBLE) AS "Score_2", "DT_Output_11"."Proba_2" AS "Proba_2", "DT_Output_11"."LogProba_2" AS "LogProba_2", CAST(NULL AS BINARY_DOUBLE) AS "Score_3", "DT_Output_11"."Proba_3" AS "Proba_3", "DT_Output_11"."LogProba_3" AS "LogProba_3" 
FROM "DT_Output_11"), 
"DT_node_lookup_12" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_239 <= 2.159379482269287) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_20 <= -0.8170969486236572) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_429 <= -1.2855570316314697) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_424 <= -0.25132763385772705) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_364 <= -0.2772020101547241) THEN 5 ELSE 6 END ELSE 7 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_73 <= 0.7554501891136169) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_343 <= 0.21924929320812225) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_446 <= -1.068354606628418) THEN 13 ELSE 14 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_459 <= -0.755807638168335) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_186 <= 1.9771640300750732) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_416 <= -0.20439773797988892) THEN 18 ELSE 19 END ELSE 20 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_307 <= -1.3417919874191284) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_288 <= -0.37117475271224976) THEN 23 ELSE 24 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_155 <= 0.3345566987991333) THEN 26 ELSE 27 END END END END ELSE 28 END AS node_id_2 
FROM "33322_J2367X_ADS_SCA_2_OUT" "ADS_sca_2_OUT"), 
"DT_node_data_12" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Proba_2" AS "Proba_2", "Values"."LogProba_2" AS "LogProba_2", "Values"."Proba_3" AS "Proba_3", "Values"."LogProba_3" AS "LogProba_3", "Values"."Decision" AS "Decision", "Values"."DecisionProba" AS "DecisionProba" 
FROM (SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 5 AS depth, 4 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 2 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 5 AS depth, 4 AS parent_id, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 9 AS count, 4 AS depth, 3 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 1.0 AS "Proba_3", 0.0 AS "LogProba_3", 3 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 36 AS count, 5 AS depth, 9 AS parent_id, 0.1896551724137931 AS "Proba_0", -1.6625477377480489 AS "LogProba_0", 0.1724137931034483 AS "Proba_1", -1.7578579175523736 AS "LogProba_1", 0.5172413793103449 AS "Proba_2", -0.6592456288842639 AS "LogProba_2", 0.1206896551724138 AS "Proba_3", -2.114532861491106 AS "LogProba_3", 2 AS "Decision", 0.5172413793103449 AS "DecisionProba" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 34 AS count, 5 AS depth, 9 AS parent_id, 0.1276595744680851 AS "Proba_0", -2.0583881324820035 AS "LogProba_0", 0.7021276595744681 AS "Proba_1", -0.3536400402435783 AS "LogProba_1", 0.14893617021276595 AS "Proba_2", -1.9042374526547454 AS "LogProba_2", 0.02127659574468085 AS "Proba_3", -3.8501476017100584 AS "LogProba_3", 1 AS "Decision", 0.7021276595744681 AS "DecisionProba" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 5 AS depth, 12 AS parent_id, 0.2 AS "Proba_0", -1.6094379124341003 AS "LogProba_0", 0.2 AS "Proba_1", -1.6094379124341003 AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 0.6 AS "Proba_3", -0.5108256237659907 AS "LogProba_3", 3 AS "Decision", 0.6 AS "DecisionProba" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 17 AS count, 5 AS depth, 12 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 0.03225806451612903 AS "Proba_1", -3.4339872044851463 AS "LogProba_1", 0.967741935483871 AS "Proba_2", -0.03278982282299084 AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 2 AS "Decision", 0.967741935483871 AS "DecisionProba" FROM DUAL UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 40 AS count, 5 AS depth, 17 AS parent_id, 0.23214285714285715 AS "Proba_0", -1.4604023332736125 AS "LogProba_0", 0.30357142857142855 AS "Proba_1", -1.1921383466789333 AS "LogProba_1", 0.30357142857142855 AS "Proba_2", -1.1921383466789333 AS "LogProba_2", 0.16071428571428573 AS "Proba_3", -1.8281271133989299 AS "LogProba_3", 1 AS "Decision", 0.30357142857142855 AS "DecisionProba" FROM DUAL UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 45 AS count, 5 AS depth, 17 AS parent_id, 0.7162162162162162 AS "Proba_0", -0.3337731796520479 AS "LogProba_0", 0.08108108108108109 AS "Proba_1", -2.512305623976115 AS "LogProba_1", 0.04054054054054054 AS "Proba_2", -3.20545280453606 AS "LogProba_2", 0.16216216216216217 AS "Proba_3", -1.8191584434161694 AS "LogProba_3", 0 AS "Decision", 0.7162162162162162 AS "DecisionProba" FROM DUAL UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 4 AS depth, 16 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 1 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 11 AS count, 5 AS depth, 22 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 0.045454545454545456 AS "Proba_1", -3.0910424533583156 AS "LogProba_1", 0.9090909090909091 AS "Proba_2", -0.0953101798043249 AS "LogProba_2", 0.045454545454545456 AS "Proba_3", -3.0910424533583156 AS "LogProba_3", 2 AS "Decision", 0.9090909090909091 AS "DecisionProba" FROM DUAL UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 20 AS count, 5 AS depth, 22 AS parent_id, 0.0967741935483871 AS "Proba_0", -2.3353749158170367 AS "LogProba_0", 0.6451612903225806 AS "Proba_1", -0.4382549309311553 AS "LogProba_1", 0.22580645161290322 AS "Proba_2", -1.488077055429833 AS "LogProba_2", 0.03225806451612903 AS "Proba_3", -3.4339872044851463 AS "LogProba_3", 1 AS "Decision", 0.6451612903225806 AS "DecisionProba" FROM DUAL UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 183 AS count, 5 AS depth, 25 AS parent_id, 0.16 AS "Proba_0", -1.8325814637483102 AS "LogProba_0", 0.18666666666666668 AS "Proba_1", -1.6784307839210517 AS "LogProba_1", 0.16333333333333333 AS "Proba_2", -1.8119621765455745 AS "LogProba_2", 0.49 AS "Proba_3", -0.7133498878774648 AS "LogProba_3", 3 AS "Decision", 0.49 AS "DecisionProba" FROM DUAL UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 95 AS count, 5 AS depth, 25 AS parent_id, 0.3181818181818182 AS "Proba_0", -1.1451323043030026 AS "LogProba_0", 0.2878787878787879 AS "Proba_1", -1.245215762859985 AS "LogProba_1", 0.20454545454545456 AS "Proba_2", -1.5869650565820417 AS "LogProba_2", 0.1893939393939394 AS "Proba_3", -1.66392609771817 AS "LogProba_3", 0 AS "Decision", 0.3181818181818182 AS "DecisionProba" FROM DUAL UNION ALL SELECT 28 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 8 AS count, 1 AS depth, 0 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 2 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL) "Values"), 
"DT_Output_12" AS 
(SELECT "DT_node_lookup_12"."KEY" AS "KEY", "DT_node_lookup_12".node_id_2 AS node_id_2, "DT_node_data_12".node_id AS node_id, "DT_node_data_12".feature AS feature, "DT_node_data_12".threshold AS threshold, "DT_node_data_12".count AS count, "DT_node_data_12".depth AS depth, "DT_node_data_12".parent_id AS parent_id, "DT_node_data_12"."Proba_0" AS "Proba_0", "DT_node_data_12"."LogProba_0" AS "LogProba_0", "DT_node_data_12"."Proba_1" AS "Proba_1", "DT_node_data_12"."LogProba_1" AS "LogProba_1", "DT_node_data_12"."Proba_2" AS "Proba_2", "DT_node_data_12"."LogProba_2" AS "LogProba_2", "DT_node_data_12"."Proba_3" AS "Proba_3", "DT_node_data_12"."LogProba_3" AS "LogProba_3", "DT_node_data_12"."Decision" AS "Decision", "DT_node_data_12"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup_12" LEFT OUTER JOIN "DT_node_data_12" ON "DT_node_lookup_12".node_id_2 = "DT_node_data_12".node_id), 
"BAG_Tree_12" AS 
(SELECT "DT_Output_12"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output_12"."Proba_0" AS "Proba_0", "DT_Output_12"."LogProba_0" AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output_12"."Proba_1" AS "Proba_1", "DT_Output_12"."LogProba_1" AS "LogProba_1", CAST(NULL AS BINARY_DOUBLE) AS "Score_2", "DT_Output_12"."Proba_2" AS "Proba_2", "DT_Output_12"."LogProba_2" AS "LogProba_2", CAST(NULL AS BINARY_DOUBLE) AS "Score_3", "DT_Output_12"."Proba_3" AS "Proba_3", "DT_Output_12"."LogProba_3" AS "LogProba_3" 
FROM "DT_Output_12"), 
"DT_node_lookup_13" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_340 <= -0.31521958112716675) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_268 <= 0.5799548625946045) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_311 <= 1.1350364685058594) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_381 <= -0.28305554389953613) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_125 <= 0.10171099007129669) THEN 5 ELSE 6 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_33 <= -0.1126897856593132) THEN 8 ELSE 9 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_93 <= -0.7303383350372314) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_38 <= 0.3282931447029114) THEN 12 ELSE 13 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_288 <= -1.6134681701660156) THEN 15 ELSE 16 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_190 <= 1.0131103992462158) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_426 <= -0.7440463304519653) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_352 <= -1.1172614097595215) THEN 20 ELSE 21 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_384 <= 0.6640560626983643) THEN 23 ELSE 24 END END ELSE 25 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_379 <= 1.3657450675964355) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_230 <= -0.8845865726470947) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_198 <= 0.6369315385818481) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_215 <= -1.0671062469482422) THEN 30 ELSE 31 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_446 <= -0.2903737723827362) THEN 33 ELSE 34 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_499 <= 0.7333589792251587) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_448 <= 0.727265477180481) THEN 37 ELSE 38 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_214 <= -0.09698228538036346) THEN 40 ELSE 41 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_280 <= -1.0279791355133057) THEN 43 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_435 <= 1.6215425729751587) THEN 45 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_78 <= -0.36277836561203003) THEN 47 ELSE 48 END END END END END AS node_id_2 
FROM "33322_J2367X_ADS_SCA_2_OUT" "ADS_sca_2_OUT"), 
"DT_node_data_13" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Proba_2" AS "Proba_2", "Values"."LogProba_2" AS "LogProba_2", "Values"."Proba_3" AS "Proba_3", "Values"."LogProba_3" AS "LogProba_3", "Values"."Decision" AS "Decision", "Values"."DecisionProba" AS "DecisionProba" 
FROM (SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 22 AS count, 5 AS depth, 4 AS parent_id, 0.28125 AS "Proba_0", -1.2685113254635072 AS "LogProba_0", 0.28125 AS "Proba_1", -1.2685113254635072 AS "LogProba_1", 0.25 AS "Proba_2", -1.3862943611198906 AS "LogProba_2", 0.1875 AS "Proba_3", -1.6739764335716716 AS "LogProba_3", 0 AS "Decision", 0.28125 AS "DecisionProba" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 15 AS count, 5 AS depth, 4 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 0.03571428571428571 AS "Proba_1", -3.332204510175204 AS "LogProba_1", 0.9285714285714286 AS "Proba_2", -0.07410797215372185 AS "LogProba_2", 0.03571428571428571 AS "Proba_3", -3.332204510175204 AS "LogProba_3", 2 AS "Decision", 0.9285714285714286 AS "DecisionProba" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 33 AS count, 5 AS depth, 7 AS parent_id, 0.4375 AS "Proba_0", -0.8266785731844679 AS "LogProba_0", 0.4791666666666667 AS "Proba_1", -0.7357067949787413 AS "LogProba_1", 0.041666666666666664 AS "Proba_2", -3.1780538303479458 AS "LogProba_2", 0.041666666666666664 AS "Proba_3", -3.1780538303479458 AS "LogProba_3", 1 AS "Decision", 0.4791666666666667 AS "DecisionProba" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 43 AS count, 5 AS depth, 7 AS parent_id, 0.2786885245901639 AS "Proba_0", -1.2776605201170952 AS "LogProba_0", 0.11475409836065574 AS "Proba_1", -2.164963715117998 AS "LogProba_1", 0.21311475409836064 AS "Proba_2", -1.5459245067117746 AS "LogProba_2", 0.39344262295081966 AS "Proba_3", -0.9328200338253656 AS "LogProba_3", 3 AS "Decision", 0.39344262295081966 AS "DecisionProba" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 5 AS depth, 11 AS parent_id, 0.5 AS "Proba_0", -0.6931471805599453 AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 0.5 AS "Proba_3", -0.6931471805599453 AS "LogProba_3", 0 AS "Decision", 0.5 AS "DecisionProba" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 5 AS depth, 11 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 2 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 5 AS depth, 14 AS parent_id, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 15 AS count, 5 AS depth, 14 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 1 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 5 AS depth, 19 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 1 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 7 AS count, 5 AS depth, 19 AS parent_id, 0.4444444444444444 AS "Proba_0", -0.8109302162163288 AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 0.1111111111111111 AS "Proba_2", -2.1972245773362196 AS "LogProba_2", 0.4444444444444444 AS "Proba_3", -0.8109302162163288 AS "LogProba_3", 0 AS "Decision", 0.4444444444444444 AS "DecisionProba" FROM DUAL UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 28 AS count, 5 AS depth, 22 AS parent_id, 0.9649122807017544 AS "Proba_0", -0.03571808260207923 AS "LogProba_0", 0.017543859649122806 AS "Proba_1", -4.04305126783455 AS "LogProba_1", 0.017543859649122806 AS "Proba_2", -4.04305126783455 AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 0 AS "Decision", 0.9649122807017544 AS "DecisionProba" FROM DUAL UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 9 AS count, 5 AS depth, 22 AS parent_id, 0.2222222222222222 AS "Proba_0", -1.5040773967762742 AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 0.4444444444444444 AS "Proba_2", -0.8109302162163288 AS "LogProba_2", 0.3333333333333333 AS "Proba_3", -1.0986122886681098 AS "LogProba_3", 2 AS "Decision", 0.4444444444444444 AS "DecisionProba" FROM DUAL UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 7 AS count, 3 AS depth, 17 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 1 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 10 AS count, 5 AS depth, 29 AS parent_id, 0.4375 AS "Proba_0", -0.8266785731844679 AS "LogProba_0", 0.0625 AS "Proba_1", -2.772588722239781 AS "LogProba_1", 0.5 AS "Proba_2", -0.6931471805599453 AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 2 AS "Decision", 0.5 AS "DecisionProba" FROM DUAL UNION ALL SELECT 31 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 22 AS count, 5 AS depth, 29 AS parent_id, 0.02857142857142857 AS "Proba_0", -3.5553480614894135 AS "LogProba_0", 0.8 AS "Proba_1", -0.2231435513142097 AS "LogProba_1", 0.08571428571428572 AS "Proba_2", -2.456735772821304 AS "LogProba_2", 0.08571428571428572 AS "Proba_3", -2.456735772821304 AS "LogProba_3", 1 AS "Decision", 0.8 AS "DecisionProba" FROM DUAL UNION ALL SELECT 33 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 5 AS depth, 32 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 2 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 34 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 13 AS count, 5 AS depth, 32 AS parent_id, 0.88 AS "Proba_0", -0.12783337150988489 AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 0.08 AS "Proba_2", -2.5257286443082556 AS "LogProba_2", 0.04 AS "Proba_3", -3.2188758248682006 AS "LogProba_3", 0 AS "Decision", 0.88 AS "DecisionProba" FROM DUAL UNION ALL SELECT 37 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 137 AS count, 5 AS depth, 36 AS parent_id, 0.14977973568281938 AS "Proba_0", -1.8985894928652414 AS "LogProba_0", 0.14977973568281938 AS "Proba_1", -1.8985894928652414 AS "LogProba_1", 0.4933920704845815 AS "Proba_2", -0.7064511461863081 AS "LogProba_2", 0.20704845814977973 AS "Proba_3", -1.574802415771344 AS "LogProba_3", 2 AS "Decision", 0.4933920704845815 AS "DecisionProba" FROM DUAL UNION ALL SELECT 38 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 48 AS count, 5 AS depth, 36 AS parent_id, 0.22666666666666666 AS "Proba_0", -1.4842747694800944 AS "LogProba_0", 0.32 AS "Proba_1", -1.1394342831883648 AS "LogProba_1", 0.06666666666666667 AS "Proba_2", -2.70805020110221 AS "LogProba_2", 0.38666666666666666 AS "Proba_3", -0.9501922835498364 AS "LogProba_3", 3 AS "Decision", 0.38666666666666666 AS "DecisionProba" FROM DUAL UNION ALL SELECT 40 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 29 AS count, 5 AS depth, 39 AS parent_id, 0.0425531914893617 AS "Proba_0", -3.1570004211501135 AS "LogProba_0", 0.02127659574468085 AS "Proba_1", -3.8501476017100584 AS "LogProba_1", 0.06382978723404255 AS "Proba_2", -2.751535313041949 AS "LogProba_2", 0.8723404255319149 AS "Proba_3", -0.13657553500575073 AS "LogProba_3", 3 AS "Decision", 0.8723404255319149 AS "DecisionProba" FROM DUAL UNION ALL SELECT 41 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 22 AS count, 5 AS depth, 39 AS parent_id, 0.14285714285714285 AS "Proba_0", -1.9459101490553135 AS "LogProba_0", 0.14285714285714285 AS "Proba_1", -1.9459101490553135 AS "LogProba_1", 0.45714285714285713 AS "Proba_2", -0.7827593392496325 AS "LogProba_2", 0.2571428571428571 AS "Proba_3", -1.3581234841531944 AS "LogProba_3", 2 AS "Decision", 0.45714285714285713 AS "DecisionProba" FROM DUAL UNION ALL SELECT 43 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 3 AS depth, 42 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 1 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 45 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 16 AS count, 4 AS depth, 44 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 1.0 AS "Proba_3", 0.0 AS "LogProba_3", 3 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 47 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 5 AS depth, 46 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 1 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 48 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 5 AS depth, 46 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 2 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL) "Values"), 
"DT_Output_13" AS 
(SELECT "DT_node_lookup_13"."KEY" AS "KEY", "DT_node_lookup_13".node_id_2 AS node_id_2, "DT_node_data_13".node_id AS node_id, "DT_node_data_13".feature AS feature, "DT_node_data_13".threshold AS threshold, "DT_node_data_13".count AS count, "DT_node_data_13".depth AS depth, "DT_node_data_13".parent_id AS parent_id, "DT_node_data_13"."Proba_0" AS "Proba_0", "DT_node_data_13"."LogProba_0" AS "LogProba_0", "DT_node_data_13"."Proba_1" AS "Proba_1", "DT_node_data_13"."LogProba_1" AS "LogProba_1", "DT_node_data_13"."Proba_2" AS "Proba_2", "DT_node_data_13"."LogProba_2" AS "LogProba_2", "DT_node_data_13"."Proba_3" AS "Proba_3", "DT_node_data_13"."LogProba_3" AS "LogProba_3", "DT_node_data_13"."Decision" AS "Decision", "DT_node_data_13"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup_13" LEFT OUTER JOIN "DT_node_data_13" ON "DT_node_lookup_13".node_id_2 = "DT_node_data_13".node_id), 
"BAG_Tree_13" AS 
(SELECT "DT_Output_13"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output_13"."Proba_0" AS "Proba_0", "DT_Output_13"."LogProba_0" AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output_13"."Proba_1" AS "Proba_1", "DT_Output_13"."LogProba_1" AS "LogProba_1", CAST(NULL AS BINARY_DOUBLE) AS "Score_2", "DT_Output_13"."Proba_2" AS "Proba_2", "DT_Output_13"."LogProba_2" AS "LogProba_2", CAST(NULL AS BINARY_DOUBLE) AS "Score_3", "DT_Output_13"."Proba_3" AS "Proba_3", "DT_Output_13"."LogProba_3" AS "LogProba_3" 
FROM "DT_Output_13"), 
"DT_node_lookup_14" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_340 <= -0.3027721047401428) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_270 <= -0.3726305663585663) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_67 <= -0.4347037672996521) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_432 <= 0.08675815165042877) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_308 <= -0.5829599499702454) THEN 5 ELSE 6 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_394 <= 0.23554997146129608) THEN 8 ELSE 9 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_182 <= -0.9304208159446716) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_185 <= -1.100338101387024) THEN 12 ELSE 13 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_268 <= -0.5968868136405945) THEN 15 ELSE 16 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_344 <= 0.0699082463979721) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_371 <= -1.2411987781524658) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_90 <= -0.17660419642925262) THEN 20 ELSE 21 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_482 <= 0.19400227069854736) THEN 23 ELSE 24 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_116 <= 0.6290539503097534) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_399 <= -1.2150070667266846) THEN 27 ELSE 28 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_343 <= 0.36427274346351624) THEN 30 ELSE 31 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_74 <= 0.1407196819782257) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_291 <= -0.014256750233471394) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_252 <= -0.36655765771865845) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_255 <= 0.5278019905090332) THEN 36 ELSE 37 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_379 <= 1.059051275253296) THEN 39 ELSE 40 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_303 <= -1.3256652355194092) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_381 <= 1.4517344236373901) THEN 43 ELSE 44 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_398 <= 0.680446207523346) THEN 46 ELSE 47 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_137 <= -0.1563093662261963) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_191 <= 1.0487446784973145) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_133 <= 0.8788511157035828) THEN 51 ELSE 52 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_241 <= -0.6717650890350342) THEN 54 ELSE 55 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_227 <= -0.17202527821063995) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= 0.3451792597770691) THEN 58 ELSE 59 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_194 <= 0.5762828588485718) THEN 61 ELSE 62 END END END END END AS node_id_2 
FROM "33322_J2367X_ADS_SCA_2_OUT" "ADS_sca_2_OUT"), 
"DT_node_data_14" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Proba_2" AS "Proba_2", "Values"."LogProba_2" AS "LogProba_2", "Values"."Proba_3" AS "Proba_3", "Values"."LogProba_3" AS "LogProba_3", "Values"."Decision" AS "Decision", "Values"."DecisionProba" AS "DecisionProba" 
FROM (SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 5 AS depth, 4 AS parent_id, 0.8 AS "Proba_0", -0.2231435513142097 AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 0.2 AS "Proba_2", -1.6094379124341003 AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 0 AS "Decision", 0.8 AS "DecisionProba" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 10 AS count, 5 AS depth, 4 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 2 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 6 AS count, 5 AS depth, 7 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 1.0 AS "Proba_3", 0.0 AS "LogProba_3", 3 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 5 AS depth, 7 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 0.6 AS "Proba_1", -0.5108256237659907 AS "LogProba_1", 0.4 AS "Proba_2", -0.916290731874155 AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 1 AS "Decision", 0.6 AS "DecisionProba" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 5 AS depth, 11 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 1 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 7 AS count, 5 AS depth, 11 AS parent_id, 0.18181818181818182 AS "Proba_0", -1.7047480922384253 AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 0.45454545454545453 AS "Proba_2", -0.7884573603642702 AS "LogProba_2", 0.36363636363636365 AS "Proba_3", -1.0116009116784799 AS "LogProba_3", 2 AS "Decision", 0.45454545454545453 AS "DecisionProba" FROM DUAL UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 9 AS count, 5 AS depth, 14 AS parent_id, 0.2222222222222222 AS "Proba_0", -1.5040773967762742 AS "LogProba_0", 0.2222222222222222 AS "Proba_1", -1.5040773967762742 AS "LogProba_1", 0.3333333333333333 AS "Proba_2", -1.0986122886681098 AS "LogProba_2", 0.2222222222222222 AS "Proba_3", -1.5040773967762742 AS "LogProba_3", 2 AS "Decision", 0.3333333333333333 AS "DecisionProba" FROM DUAL UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 33 AS count, 5 AS depth, 14 AS parent_id, 0.9433962264150944 AS "Proba_0", -0.05826890812397576 AS "LogProba_0", 0.03773584905660377 AS "Proba_1", -3.2771447329921766 AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 0.018867924528301886 AS "Proba_3", -3.970291913552122 AS "LogProba_3", 0 AS "Decision", 0.9433962264150944 AS "DecisionProba" FROM DUAL UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 6 AS count, 5 AS depth, 19 AS parent_id, 0.5454545454545454 AS "Proba_0", -0.6061358035703156 AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 0.45454545454545453 AS "Proba_3", -0.7884573603642702 AS "LogProba_3", 0 AS "Decision", 0.5454545454545454 AS "DecisionProba" FROM DUAL UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 5 AS depth, 19 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 2 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 40 AS count, 5 AS depth, 22 AS parent_id, 0.09722222222222222 AS "Proba_0", -2.330755969960742 AS "LogProba_0", 0.8194444444444444 AS "Proba_1", -0.19912867511033588 AS "LogProba_1", 0.041666666666666664 AS "Proba_2", -3.1780538303479458 AS "LogProba_2", 0.041666666666666664 AS "Proba_3", -3.1780538303479458 AS "LogProba_3", 1 AS "Decision", 0.8194444444444444 AS "DecisionProba" FROM DUAL UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 26 AS count, 5 AS depth, 22 AS parent_id, 0.14705882352941177 AS "Proba_0", -1.916922612182061 AS "LogProba_0", 0.35294117647058826 AS "Proba_1", -1.041453874828161 AS "LogProba_1", 0.11764705882352941 AS "Proba_2", -2.1400661634962708 AS "LogProba_2", 0.38235294117647056 AS "Proba_3", -0.9614111671546247 AS "LogProba_3", 3 AS "Decision", 0.38235294117647056 AS "DecisionProba" FROM DUAL UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 5 AS depth, 26 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 1 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 28 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 38 AS count, 5 AS depth, 26 AS parent_id, 0.5882352941176471 AS "Proba_0", -0.5306282510621704 AS "LogProba_0", 0.1568627450980392 AS "Proba_1", -1.8523840910444898 AS "LogProba_1", 0.0784313725490196 AS "Proba_2", -2.5455312716044354 AS "LogProba_2", 0.17647058823529413 AS "Proba_3", -1.7346010553881064 AS "LogProba_3", 0 AS "Decision", 0.5882352941176471 AS "DecisionProba" FROM DUAL UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 13 AS count, 5 AS depth, 29 AS parent_id, 0.08333333333333333 AS "Proba_0", -2.4849066497880004 AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 0.9166666666666666 AS "Proba_2", -0.08701137698962981 AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 2 AS "Decision", 0.9166666666666666 AS "DecisionProba" FROM DUAL UNION ALL SELECT 31 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 7 AS count, 5 AS depth, 29 AS parent_id, 0.375 AS "Proba_0", -0.9808292530117262 AS "LogProba_0", 0.625 AS "Proba_1", -0.4700036292457356 AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 1 AS "Decision", 0.625 AS "DecisionProba" FROM DUAL UNION ALL SELECT 36 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 23 AS count, 5 AS depth, 35 AS parent_id, 0.125 AS "Proba_0", -2.0794415416798357 AS "LogProba_0", 0.15625 AS "Proba_1", -1.8562979903656263 AS "LogProba_1", 0.375 AS "Proba_2", -0.9808292530117262 AS "LogProba_2", 0.34375 AS "Proba_3", -1.067840630001356 AS "LogProba_3", 2 AS "Decision", 0.375 AS "DecisionProba" FROM DUAL UNION ALL SELECT 37 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 8 AS count, 5 AS depth, 35 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 1 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 39 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 57 AS count, 5 AS depth, 38 AS parent_id, 0.11363636363636363 AS "Proba_0", -2.174751721484161 AS "LogProba_0", 0.06818181818181818 AS "Proba_1", -2.6855773452501515 AS "LogProba_1", 0.7272727272727273 AS "Proba_2", -0.3184537311185346 AS "LogProba_2", 0.09090909090909091 AS "Proba_3", -2.3978952727983707 AS "LogProba_3", 2 AS "Decision", 0.7272727272727273 AS "DecisionProba" FROM DUAL UNION ALL SELECT 40 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 5 AS depth, 38 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 1.0 AS "Proba_3", 0.0 AS "LogProba_3", 3 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 43 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 11 AS count, 5 AS depth, 42 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 1.0 AS "Proba_3", 0.0 AS "LogProba_3", 3 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 44 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 5 AS depth, 42 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 1 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 46 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 65 AS count, 5 AS depth, 45 AS parent_id, 0.5346534653465347 AS "Proba_0", -0.626136470276985 AS "LogProba_0", 0.2079207920792079 AS "Proba_1", -1.5705980791178364 AS "LogProba_1", 0.1485148514851485 AS "Proba_2", -1.9070703157390494 AS "LogProba_2", 0.10891089108910891 AS "Proba_3", -2.217225244042889 AS "LogProba_3", 0 AS "Decision", 0.5346534653465347 AS "DecisionProba" FROM DUAL UNION ALL SELECT 47 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 14 AS count, 5 AS depth, 45 AS parent_id, 0.041666666666666664 AS "Proba_0", -3.1780538303479458 AS "LogProba_0", 0.08333333333333333 AS "Proba_1", -2.4849066497880004 AS "LogProba_1", 0.7083333333333334 AS "Proba_2", -0.3448404862917295 AS "LogProba_2", 0.16666666666666666 AS "Proba_3", -1.791759469228055 AS "LogProba_3", 2 AS "Decision", 0.7083333333333334 AS "DecisionProba" FROM DUAL UNION ALL SELECT 51 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 41 AS count, 5 AS depth, 50 AS parent_id, 0.029850746268656716 AS "Proba_0", -3.5115454388310208 AS "LogProba_0", 0.05970149253731343 AS "Proba_1", -2.8183982582710754 AS "LogProba_1", 0.029850746268656716 AS "Proba_2", -3.5115454388310208 AS "LogProba_2", 0.8805970149253731 AS "Proba_3", -0.12715517548524663 AS "LogProba_3", 3 AS "Decision", 0.8805970149253731 AS "DecisionProba" FROM DUAL UNION ALL SELECT 52 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 7 AS count, 5 AS depth, 50 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 0.5555555555555556 AS "Proba_1", -0.587786664902119 AS "LogProba_1", 0.3333333333333333 AS "Proba_2", -1.0986122886681098 AS "LogProba_2", 0.1111111111111111 AS "Proba_3", -2.1972245773362196 AS "LogProba_3", 1 AS "Decision", 0.5555555555555556 AS "DecisionProba" FROM DUAL UNION ALL SELECT 54 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 5 AS depth, 53 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 2 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 55 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 7 AS count, 5 AS depth, 53 AS parent_id, 0.625 AS "Proba_0", -0.4700036292457356 AS "LogProba_0", 0.25 AS "Proba_1", -1.3862943611198906 AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 0.125 AS "Proba_3", -2.0794415416798357 AS "LogProba_3", 0 AS "Decision", 0.625 AS "DecisionProba" FROM DUAL UNION ALL SELECT 58 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 12 AS count, 5 AS depth, 57 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 1 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 59 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 5 AS depth, 57 AS parent_id, 0.2857142857142857 AS "Proba_0", -1.252762968495368 AS "LogProba_0", 0.14285714285714285 AS "Proba_1", -1.9459101490553135 AS "LogProba_1", 0.5714285714285714 AS "Proba_2", -0.5596157879354228 AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 2 AS "Decision", 0.5714285714285714 AS "DecisionProba" FROM DUAL UNION ALL SELECT 61 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 29 AS count, 5 AS depth, 60 AS parent_id, 0.10638297872340426 AS "Proba_0", -2.2407096892759584 AS "LogProba_0", 0.2127659574468085 AS "Proba_1", -1.547562508716013 AS "LogProba_1", 0.14893617021276595 AS "Proba_2", -1.9042374526547454 AS "LogProba_2", 0.5319148936170213 AS "Proba_3", -0.6312717768418579 AS "LogProba_3", 3 AS "Decision", 0.5319148936170213 AS "DecisionProba" FROM DUAL UNION ALL SELECT 62 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 13 AS count, 5 AS depth, 60 AS parent_id, 0.06666666666666667 AS "Proba_0", -2.70805020110221 AS "LogProba_0", 0.06666666666666667 AS "Proba_1", -2.70805020110221 AS "LogProba_1", 0.8666666666666667 AS "Proba_2", -0.1431008436406733 AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 2 AS "Decision", 0.8666666666666667 AS "DecisionProba" FROM DUAL) "Values"), 
"DT_Output_14" AS 
(SELECT "DT_node_lookup_14"."KEY" AS "KEY", "DT_node_lookup_14".node_id_2 AS node_id_2, "DT_node_data_14".node_id AS node_id, "DT_node_data_14".feature AS feature, "DT_node_data_14".threshold AS threshold, "DT_node_data_14".count AS count, "DT_node_data_14".depth AS depth, "DT_node_data_14".parent_id AS parent_id, "DT_node_data_14"."Proba_0" AS "Proba_0", "DT_node_data_14"."LogProba_0" AS "LogProba_0", "DT_node_data_14"."Proba_1" AS "Proba_1", "DT_node_data_14"."LogProba_1" AS "LogProba_1", "DT_node_data_14"."Proba_2" AS "Proba_2", "DT_node_data_14"."LogProba_2" AS "LogProba_2", "DT_node_data_14"."Proba_3" AS "Proba_3", "DT_node_data_14"."LogProba_3" AS "LogProba_3", "DT_node_data_14"."Decision" AS "Decision", "DT_node_data_14"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup_14" LEFT OUTER JOIN "DT_node_data_14" ON "DT_node_lookup_14".node_id_2 = "DT_node_data_14".node_id), 
"BAG_Tree_14" AS 
(SELECT "DT_Output_14"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output_14"."Proba_0" AS "Proba_0", "DT_Output_14"."LogProba_0" AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output_14"."Proba_1" AS "Proba_1", "DT_Output_14"."LogProba_1" AS "LogProba_1", CAST(NULL AS BINARY_DOUBLE) AS "Score_2", "DT_Output_14"."Proba_2" AS "Proba_2", "DT_Output_14"."LogProba_2" AS "LogProba_2", CAST(NULL AS BINARY_DOUBLE) AS "Score_3", "DT_Output_14"."Proba_3" AS "Proba_3", "DT_Output_14"."LogProba_3" AS "LogProba_3" 
FROM "DT_Output_14"), 
"DT_node_lookup_15" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_164 <= -1.9797751903533936) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_485 <= 1.2047375440597534) THEN 2 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_27 <= -0.3232736885547638) THEN 4 ELSE 5 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_251 <= 0.2197045385837555) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_107 <= -1.5547627210617065) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_170 <= 0.027915144339203835) THEN 9 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_53 <= -0.11666122823953629) THEN 11 ELSE 12 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_97 <= 1.9706287384033203) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_471 <= 1.984795331954956) THEN 15 ELSE 16 END ELSE 17 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_150 <= -0.21495942771434784) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_260 <= -0.8276776671409607) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_29 <= 0.9617186784744263) THEN 21 ELSE 22 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_485 <= -0.35203588008880615) THEN 24 ELSE 25 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_372 <= -0.434814989566803) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_322 <= -0.6120380163192749) THEN 28 ELSE 29 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_475 <= 0.9407423734664917) THEN 31 ELSE 32 END END END END END AS node_id_2 
FROM "33322_J2367X_ADS_SCA_2_OUT" "ADS_sca_2_OUT"), 
"DT_node_data_15" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Proba_2" AS "Proba_2", "Values"."LogProba_2" AS "LogProba_2", "Values"."Proba_3" AS "Proba_3", "Values"."LogProba_3" AS "LogProba_3", "Values"."Decision" AS "Decision", "Values"."DecisionProba" AS "DecisionProba" 
FROM (SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 10 AS count, 2 AS depth, 1 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 1.0 AS "Proba_3", 0.0 AS "LogProba_3", 3 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 3 AS depth, 3 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 2 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 3 AS depth, 3 AS parent_id, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 9 AS count, 4 AS depth, 8 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 1.0 AS "Proba_3", 0.0 AS "LogProba_3", 3 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 5 AS depth, 10 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 2 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 5 AS depth, 10 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 0.6666666666666666 AS "Proba_1", -0.40546510810816444 AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 0.3333333333333333 AS "Proba_3", -1.0986122886681098 AS "LogProba_3", 1 AS "Decision", 0.6666666666666666 AS "DecisionProba" FROM DUAL UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 275 AS count, 5 AS depth, 14 AS parent_id, 0.1951219512195122 AS "Proba_0", -1.6341305250244718 AS "LogProba_0", 0.2804878048780488 AS "Proba_1", -1.2712250313351032 AS "LogProba_1", 0.32926829268292684 AS "Proba_2", -1.110882381259924 AS "LogProba_2", 0.1951219512195122 AS "Proba_3", -1.6341305250244718 AS "LogProba_3", 2 AS "Decision", 0.32926829268292684 AS "DecisionProba" FROM DUAL UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 10 AS count, 5 AS depth, 14 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 0.8636363636363636 AS "Proba_1", -0.1466034741918754 AS "LogProba_1", 0.045454545454545456 AS "Proba_2", -3.0910424533583156 AS "LogProba_2", 0.09090909090909091 AS "Proba_3", -2.3978952727983707 AS "LogProba_3", 1 AS "Decision", 0.8636363636363636 AS "DecisionProba" FROM DUAL UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 8 AS count, 4 AS depth, 13 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 1 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 16 AS count, 5 AS depth, 20 AS parent_id, 0.0 AS "Proba_0", -BINARY_DOUBLE_INFINITY AS "LogProba_0", 0.375 AS "Proba_1", -0.9808292530117262 AS "LogProba_1", 0.625 AS "Proba_2", -0.4700036292457356 AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 2 AS "Decision", 0.625 AS "DecisionProba" FROM DUAL UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 5 AS depth, 20 AS parent_id, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_DOUBLE_INFINITY AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_DOUBLE_INFINITY AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 19 AS count, 5 AS depth, 23 AS parent_id, 0.07407407407407407 AS "Proba_0", -2.6026896854443837 AS "LogProba_0", 0.37037037037037035 AS "Proba_1", -0.9932517730102834 AS "LogProba_1", 0.37037037037037035 AS "Proba_2", -0.9932517730102834 AS "LogProba_2", 0.18518518518518517 AS "Proba_3", -1.6863989535702288 AS "LogProba_3", 1 AS "Decision", 0.37037037037037035 AS "DecisionProba" FROM DUAL UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 35 AS count, 5 AS depth, 23 AS parent_id, 0.06896551724137931 AS "Proba_0", -2.6741486494265287 AS "LogProba_0", 0.017241379310344827 AS "Proba_1", -4.060443010546419 AS "LogProba_1", 0.13793103448275862 AS "Proba_2", -1.9810014688665833 AS "LogProba_2", 0.7758620689655172 AS "Proba_3", -0.2537805207760996 AS "LogProba_3", 3 AS "Decision", 0.7758620689655172 AS "DecisionProba" FROM DUAL UNION ALL SELECT 28 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 10 AS count, 5 AS depth, 27 AS parent_id, 0.05263157894736842 AS "Proba_0", -2.9444389791664407 AS "LogProba_0", 0.10526315789473684 AS "Proba_1", -2.2512917986064953 AS "LogProba_1", 0.8421052631578947 AS "Proba_2", -0.17185025692665928 AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_DOUBLE_INFINITY AS "LogProba_3", 2 AS "Decision", 0.8421052631578947 AS "DecisionProba" FROM DUAL UNION ALL SELECT 29 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 30 AS count, 5 AS depth, 27 AS parent_id, 0.15 AS "Proba_0", -1.8971199848858813 AS "LogProba_0", 0.25 AS "Proba_1", -1.3862943611198906 AS "LogProba_1", 0.175 AS "Proba_2", -1.742969305058623 AS "LogProba_2", 0.425 AS "Proba_3", -0.8556661100577202 AS "LogProba_3", 3 AS "Decision", 0.425 AS "DecisionProba" FROM DUAL UNION ALL SELECT 31 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 68 AS count, 5 AS depth, 30 AS parent_id, 0.7019230769230769 AS "Proba_0", -0.3539314579929816 AS "LogProba_0", 0.07692307692307693 AS "Proba_1", -2.5649493574615367 AS "LogProba_1", 0.08653846153846154 AS "Proba_2", -2.4471663218051534 AS "LogProba_2", 0.1346153846153846 AS "Proba_3", -2.005333569526114 AS "LogProba_3", 0 AS "Decision", 0.7019230769230769 AS "DecisionProba" FROM DUAL UNION ALL SELECT 32 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 16 AS count, 5 AS depth, 30 AS parent_id, 0.125 AS "Proba_0", -2.0794415416798357 AS "LogProba_0", 0.041666666666666664 AS "Proba_1", -3.1780538303479458 AS "LogProba_1", 0.20833333333333334 AS "Proba_2", -1.5686159179138452 AS "LogProba_2", 0.625 AS "Proba_3", -0.4700036292457356 AS "LogProba_3", 3 AS "Decision", 0.625 AS "DecisionProba" FROM DUAL) "Values"), 
"DT_Output_15" AS 
(SELECT "DT_node_lookup_15"."KEY" AS "KEY", "DT_node_lookup_15".node_id_2 AS node_id_2, "DT_node_data_15".node_id AS node_id, "DT_node_data_15".feature AS feature, "DT_node_data_15".threshold AS threshold, "DT_node_data_15".count AS count, "DT_node_data_15".depth AS depth, "DT_node_data_15".parent_id AS parent_id, "DT_node_data_15"."Proba_0" AS "Proba_0", "DT_node_data_15"."LogProba_0" AS "LogProba_0", "DT_node_data_15"."Proba_1" AS "Proba_1", "DT_node_data_15"."LogProba_1" AS "LogProba_1", "DT_node_data_15"."Proba_2" AS "Proba_2", "DT_node_data_15"."LogProba_2" AS "LogProba_2", "DT_node_data_15"."Proba_3" AS "Proba_3", "DT_node_data_15"."LogProba_3" AS "LogProba_3", "DT_node_data_15"."Decision" AS "Decision", "DT_node_data_15"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup_15" LEFT OUTER JOIN "DT_node_data_15" ON "DT_node_lookup_15".node_id_2 = "DT_node_data_15".node_id), 
"BAG_Tree_15" AS 
(SELECT "DT_Output_15"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output_15"."Proba_0" AS "Proba_0", "DT_Output_15"."LogProba_0" AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output_15"."Proba_1" AS "Proba_1", "DT_Output_15"."LogProba_1" AS "LogProba_1", CAST(NULL AS BINARY_DOUBLE) AS "Score_2", "DT_Output_15"."Proba_2" AS "Proba_2", "DT_Output_15"."LogProba_2" AS "LogProba_2", CAST(NULL AS BINARY_DOUBLE) AS "Score_3", "DT_Output_15"."Proba_3" AS "Proba_3", "DT_Output_15"."LogProba_3" AS "LogProba_3" 
FROM "DT_Output_15")
 SELECT "BAG_AVG_B1"."KEY", "BAG_AVG_B1"."Score_0", "BAG_AVG_B1"."Proba_0", "BAG_AVG_B1"."LogProba_0", "BAG_AVG_B1"."Score_1", "BAG_AVG_B1"."Proba_1", "BAG_AVG_B1"."LogProba_1", "BAG_AVG_B1"."Score_2", "BAG_AVG_B1"."Proba_2", "BAG_AVG_B1"."LogProba_2", "BAG_AVG_B1"."Score_3", "BAG_AVG_B1"."Proba_3", "BAG_AVG_B1"."LogProba_3" 
FROM (SELECT "BAG_AVG_esu_1"."KEY" AS "KEY", "BAG_AVG_esu_1"."Score_0" AS "Score_0", "BAG_AVG_esu_1"."Proba_0" AS "Proba_0", "BAG_AVG_esu_1"."LogProba_0" AS "LogProba_0", "BAG_AVG_esu_1"."Score_1" AS "Score_1", "BAG_AVG_esu_1"."Proba_1" AS "Proba_1", "BAG_AVG_esu_1"."LogProba_1" AS "LogProba_1", "BAG_AVG_esu_1"."Score_2" AS "Score_2", "BAG_AVG_esu_1"."Proba_2" AS "Proba_2", "BAG_AVG_esu_1"."LogProba_2" AS "LogProba_2", "BAG_AVG_esu_1"."Score_3" AS "Score_3", "BAG_AVG_esu_1"."Proba_3" AS "Proba_3", "BAG_AVG_esu_1"."LogProba_3" AS "LogProba_3" 
FROM (SELECT "BAG_Tree_10"."KEY" AS "KEY", "BAG_Tree_10"."Score_0" AS "Score_0", "BAG_Tree_10"."Proba_0" AS "Proba_0", "BAG_Tree_10"."LogProba_0" AS "LogProba_0", "BAG_Tree_10"."Score_1" AS "Score_1", "BAG_Tree_10"."Proba_1" AS "Proba_1", "BAG_Tree_10"."LogProba_1" AS "LogProba_1", "BAG_Tree_10"."Score_2" AS "Score_2", "BAG_Tree_10"."Proba_2" AS "Proba_2", "BAG_Tree_10"."LogProba_2" AS "LogProba_2", "BAG_Tree_10"."Score_3" AS "Score_3", "BAG_Tree_10"."Proba_3" AS "Proba_3", "BAG_Tree_10"."LogProba_3" AS "LogProba_3" 
FROM "BAG_Tree_10" UNION ALL SELECT "BAG_Tree_11"."KEY" AS "KEY", "BAG_Tree_11"."Score_0" AS "Score_0", "BAG_Tree_11"."Proba_0" AS "Proba_0", "BAG_Tree_11"."LogProba_0" AS "LogProba_0", "BAG_Tree_11"."Score_1" AS "Score_1", "BAG_Tree_11"."Proba_1" AS "Proba_1", "BAG_Tree_11"."LogProba_1" AS "LogProba_1", "BAG_Tree_11"."Score_2" AS "Score_2", "BAG_Tree_11"."Proba_2" AS "Proba_2", "BAG_Tree_11"."LogProba_2" AS "LogProba_2", "BAG_Tree_11"."Score_3" AS "Score_3", "BAG_Tree_11"."Proba_3" AS "Proba_3", "BAG_Tree_11"."LogProba_3" AS "LogProba_3" 
FROM "BAG_Tree_11" UNION ALL SELECT "BAG_Tree_12"."KEY" AS "KEY", "BAG_Tree_12"."Score_0" AS "Score_0", "BAG_Tree_12"."Proba_0" AS "Proba_0", "BAG_Tree_12"."LogProba_0" AS "LogProba_0", "BAG_Tree_12"."Score_1" AS "Score_1", "BAG_Tree_12"."Proba_1" AS "Proba_1", "BAG_Tree_12"."LogProba_1" AS "LogProba_1", "BAG_Tree_12"."Score_2" AS "Score_2", "BAG_Tree_12"."Proba_2" AS "Proba_2", "BAG_Tree_12"."LogProba_2" AS "LogProba_2", "BAG_Tree_12"."Score_3" AS "Score_3", "BAG_Tree_12"."Proba_3" AS "Proba_3", "BAG_Tree_12"."LogProba_3" AS "LogProba_3" 
FROM "BAG_Tree_12" UNION ALL SELECT "BAG_Tree_13"."KEY" AS "KEY", "BAG_Tree_13"."Score_0" AS "Score_0", "BAG_Tree_13"."Proba_0" AS "Proba_0", "BAG_Tree_13"."LogProba_0" AS "LogProba_0", "BAG_Tree_13"."Score_1" AS "Score_1", "BAG_Tree_13"."Proba_1" AS "Proba_1", "BAG_Tree_13"."LogProba_1" AS "LogProba_1", "BAG_Tree_13"."Score_2" AS "Score_2", "BAG_Tree_13"."Proba_2" AS "Proba_2", "BAG_Tree_13"."LogProba_2" AS "LogProba_2", "BAG_Tree_13"."Score_3" AS "Score_3", "BAG_Tree_13"."Proba_3" AS "Proba_3", "BAG_Tree_13"."LogProba_3" AS "LogProba_3" 
FROM "BAG_Tree_13" UNION ALL SELECT "BAG_Tree_14"."KEY" AS "KEY", "BAG_Tree_14"."Score_0" AS "Score_0", "BAG_Tree_14"."Proba_0" AS "Proba_0", "BAG_Tree_14"."LogProba_0" AS "LogProba_0", "BAG_Tree_14"."Score_1" AS "Score_1", "BAG_Tree_14"."Proba_1" AS "Proba_1", "BAG_Tree_14"."LogProba_1" AS "LogProba_1", "BAG_Tree_14"."Score_2" AS "Score_2", "BAG_Tree_14"."Proba_2" AS "Proba_2", "BAG_Tree_14"."LogProba_2" AS "LogProba_2", "BAG_Tree_14"."Score_3" AS "Score_3", "BAG_Tree_14"."Proba_3" AS "Proba_3", "BAG_Tree_14"."LogProba_3" AS "LogProba_3" 
FROM "BAG_Tree_14" UNION ALL SELECT "BAG_Tree_15"."KEY" AS "KEY", "BAG_Tree_15"."Score_0" AS "Score_0", "BAG_Tree_15"."Proba_0" AS "Proba_0", "BAG_Tree_15"."LogProba_0" AS "LogProba_0", "BAG_Tree_15"."Score_1" AS "Score_1", "BAG_Tree_15"."Proba_1" AS "Proba_1", "BAG_Tree_15"."LogProba_1" AS "LogProba_1", "BAG_Tree_15"."Score_2" AS "Score_2", "BAG_Tree_15"."Proba_2" AS "Proba_2", "BAG_Tree_15"."LogProba_2" AS "LogProba_2", "BAG_Tree_15"."Score_3" AS "Score_3", "BAG_Tree_15"."Proba_3" AS "Proba_3", "BAG_Tree_15"."LogProba_3" AS "LogProba_3" 
FROM "BAG_Tree_15") "BAG_AVG_esu_1") "BAG_AVG_B1") "U"
-- Code For temporary table 33323_9KINXH_BAG_AVG_UNION part 1/2. Create 


CREATE GLOBAL TEMPORARY TABLE "33323_9KINXH_BAG_AVG_UNION" (
	"KEY" NUMBER(19), 
	"Score_0" BINARY_DOUBLE, 
	"Proba_0" BINARY_DOUBLE, 
	"LogProba_0" BINARY_DOUBLE, 
	"Score_1" BINARY_DOUBLE, 
	"Proba_1" BINARY_DOUBLE, 
	"LogProba_1" BINARY_DOUBLE, 
	"Score_2" BINARY_DOUBLE, 
	"Proba_2" BINARY_DOUBLE, 
	"LogProba_2" BINARY_DOUBLE, 
	"Score_3" BINARY_DOUBLE, 
	"Proba_3" BINARY_DOUBLE, 
	"LogProba_3" BINARY_DOUBLE
)

 ON COMMIT PRESERVE ROWS
-- Code For temporary table 33323_9KINXH_BAG_AVG_UNION part 2/2. Populate

INSERT INTO "33323_9KINXH_BAG_AVG_UNION" ("KEY", "Score_0", "Proba_0", "LogProba_0", "Score_1", "Proba_1", "LogProba_1", "Score_2", "Proba_2", "LogProba_2", "Score_3", "Proba_3", "LogProba_3") SELECT "U"."KEY", "U"."Score_0", "U"."Proba_0", "U"."LogProba_0", "U"."Score_1", "U"."Proba_1", "U"."LogProba_1", "U"."Score_2", "U"."Proba_2", "U"."LogProba_2", "U"."Score_3", "U"."Proba_3", "U"."LogProba_3" 
FROM (SELECT "BAG_AVG_Union"."KEY", "BAG_AVG_Union"."Score_0", "BAG_AVG_Union"."Proba_0", "BAG_AVG_Union"."LogProba_0", "BAG_AVG_Union"."Score_1", "BAG_AVG_Union"."Proba_1", "BAG_AVG_Union"."LogProba_1", "BAG_AVG_Union"."Score_2", "BAG_AVG_Union"."Proba_2", "BAG_AVG_Union"."LogProba_2", "BAG_AVG_Union"."Score_3", "BAG_AVG_Union"."Proba_3", "BAG_AVG_Union"."LogProba_3" 
FROM (SELECT "BAG_AVG_EnsembleUnion"."KEY" AS "KEY", "BAG_AVG_EnsembleUnion"."Score_0" AS "Score_0", "BAG_AVG_EnsembleUnion"."Proba_0" AS "Proba_0", "BAG_AVG_EnsembleUnion"."LogProba_0" AS "LogProba_0", "BAG_AVG_EnsembleUnion"."Score_1" AS "Score_1", "BAG_AVG_EnsembleUnion"."Proba_1" AS "Proba_1", "BAG_AVG_EnsembleUnion"."LogProba_1" AS "LogProba_1", "BAG_AVG_EnsembleUnion"."Score_2" AS "Score_2", "BAG_AVG_EnsembleUnion"."Proba_2" AS "Proba_2", "BAG_AVG_EnsembleUnion"."LogProba_2" AS "LogProba_2", "BAG_AVG_EnsembleUnion"."Score_3" AS "Score_3", "BAG_AVG_EnsembleUnion"."Proba_3" AS "Proba_3", "BAG_AVG_EnsembleUnion"."LogProba_3" AS "LogProba_3" 
FROM (SELECT "BAG_AVG_B0"."KEY" AS "KEY", "BAG_AVG_B0"."Score_0" AS "Score_0", "BAG_AVG_B0"."Proba_0" AS "Proba_0", "BAG_AVG_B0"."LogProba_0" AS "LogProba_0", "BAG_AVG_B0"."Score_1" AS "Score_1", "BAG_AVG_B0"."Proba_1" AS "Proba_1", "BAG_AVG_B0"."LogProba_1" AS "LogProba_1", "BAG_AVG_B0"."Score_2" AS "Score_2", "BAG_AVG_B0"."Proba_2" AS "Proba_2", "BAG_AVG_B0"."LogProba_2" AS "LogProba_2", "BAG_AVG_B0"."Score_3" AS "Score_3", "BAG_AVG_B0"."Proba_3" AS "Proba_3", "BAG_AVG_B0"."LogProba_3" AS "LogProba_3" 
FROM "29233323_PORPBH_BAG_AVG_B0" "BAG_AVG_B0" UNION ALL SELECT "BAG_AVG_B1"."KEY" AS "KEY", "BAG_AVG_B1"."Score_0" AS "Score_0", "BAG_AVG_B1"."Proba_0" AS "Proba_0", "BAG_AVG_B1"."LogProba_0" AS "LogProba_0", "BAG_AVG_B1"."Score_1" AS "Score_1", "BAG_AVG_B1"."Proba_1" AS "Proba_1", "BAG_AVG_B1"."LogProba_1" AS "LogProba_1", "BAG_AVG_B1"."Score_2" AS "Score_2", "BAG_AVG_B1"."Proba_2" AS "Proba_2", "BAG_AVG_B1"."LogProba_2" AS "LogProba_2", "BAG_AVG_B1"."Score_3" AS "Score_3", "BAG_AVG_B1"."Proba_3" AS "Proba_3", "BAG_AVG_B1"."LogProba_3" AS "LogProba_3" 
FROM "29233323_UWKI7F_BAG_AVG_B1" "BAG_AVG_B1") "BAG_AVG_EnsembleUnion") "BAG_AVG_Union") "U"

-- Model deployment code

WITH "BAG_AVG_avg" AS 
(SELECT "T"."KEY" AS "KEY", "T"."Score_0" AS "Score_0", "T"."Proba_0" AS "Proba_0", "T"."LogProba_0" AS "LogProba_0", "T"."Score_1" AS "Score_1", "T"."Proba_1" AS "Proba_1", "T"."LogProba_1" AS "LogProba_1", "T"."Score_2" AS "Score_2", "T"."Proba_2" AS "Proba_2", "T"."LogProba_2" AS "LogProba_2", "T"."Score_3" AS "Score_3", "T"."Proba_3" AS "Proba_3", "T"."LogProba_3" AS "LogProba_3" 
FROM (SELECT "BAG_AVG_Union"."KEY" AS "KEY", avg(CAST("BAG_AVG_Union"."Score_0" AS BINARY_DOUBLE)) AS "Score_0", avg(CAST("BAG_AVG_Union"."Proba_0" AS BINARY_DOUBLE)) AS "Proba_0", CAST(NULL AS BINARY_DOUBLE) AS "LogProba_0", avg(CAST("BAG_AVG_Union"."Score_1" AS BINARY_DOUBLE)) AS "Score_1", avg(CAST("BAG_AVG_Union"."Proba_1" AS BINARY_DOUBLE)) AS "Proba_1", CAST(NULL AS BINARY_DOUBLE) AS "LogProba_1", avg(CAST("BAG_AVG_Union"."Score_2" AS BINARY_DOUBLE)) AS "Score_2", avg(CAST("BAG_AVG_Union"."Proba_2" AS BINARY_DOUBLE)) AS "Proba_2", CAST(NULL AS BINARY_DOUBLE) AS "LogProba_2", avg(CAST("BAG_AVG_Union"."Score_3" AS BINARY_DOUBLE)) AS "Score_3", avg(CAST("BAG_AVG_Union"."Proba_3" AS BINARY_DOUBLE)) AS "Proba_3", CAST(NULL AS BINARY_DOUBLE) AS "LogProba_3" 
FROM "33323_9KINXH_BAG_AVG_UNION" "BAG_AVG_Union" GROUP BY "BAG_AVG_Union"."KEY") "T"), 
orig_cte AS 
(SELECT "BAG_AVG_avg"."KEY" AS "KEY", "BAG_AVG_avg"."Score_0" AS "Score_0", "BAG_AVG_avg"."Score_1" AS "Score_1", "BAG_AVG_avg"."Score_2" AS "Score_2", "BAG_AVG_avg"."Score_3" AS "Score_3", "BAG_AVG_avg"."Proba_0" AS "Proba_0", "BAG_AVG_avg"."Proba_1" AS "Proba_1", "BAG_AVG_avg"."Proba_2" AS "Proba_2", "BAG_AVG_avg"."Proba_3" AS "Proba_3", "BAG_AVG_avg"."LogProba_0" AS "LogProba_0", "BAG_AVG_avg"."LogProba_1" AS "LogProba_1", "BAG_AVG_avg"."LogProba_2" AS "LogProba_2", "BAG_AVG_avg"."LogProba_3" AS "LogProba_3", CAST(NULL AS NUMBER(19)) AS "Decision", CAST(NULL AS BINARY_DOUBLE) AS "DecisionProba" 
FROM "BAG_AVG_avg"), 
score_class_union AS 
(SELECT scu."KEY_u" AS "KEY_u", scu.class AS class, scu."LogProba" AS "LogProba", scu."Proba" AS "Proba", scu."Score" AS "Score" 
FROM (SELECT orig_cte."KEY" AS "KEY_u", 0 AS class, orig_cte."LogProba_0" AS "LogProba", orig_cte."Proba_0" AS "Proba", orig_cte."Score_0" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 1 AS class, orig_cte."LogProba_1" AS "LogProba", orig_cte."Proba_1" AS "Proba", orig_cte."Score_1" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 2 AS class, orig_cte."LogProba_2" AS "LogProba", orig_cte."Proba_2" AS "Proba", orig_cte."Score_2" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 3 AS class, orig_cte."LogProba_3" AS "LogProba", orig_cte."Proba_3" AS "Proba", orig_cte."Score_3" AS "Score" 
FROM orig_cte) scu), 
score_max AS 
(SELECT orig_cte."KEY" AS "KEY", orig_cte."Score_0" AS "Score_0", orig_cte."Score_1" AS "Score_1", orig_cte."Score_2" AS "Score_2", orig_cte."Score_3" AS "Score_3", orig_cte."Proba_0" AS "Proba_0", orig_cte."Proba_1" AS "Proba_1", orig_cte."Proba_2" AS "Proba_2", orig_cte."Proba_3" AS "Proba_3", orig_cte."LogProba_0" AS "LogProba_0", orig_cte."LogProba_1" AS "LogProba_1", orig_cte."LogProba_2" AS "LogProba_2", orig_cte."LogProba_3" AS "LogProba_3", orig_cte."Decision" AS "Decision", orig_cte."DecisionProba" AS "DecisionProba", max_select."KEY_m" AS "KEY_m", max_select."max_Proba" AS "max_Proba" 
FROM orig_cte LEFT OUTER JOIN (SELECT score_class_union."KEY_u" AS "KEY_m", max(score_class_union."Proba") AS "max_Proba" 
FROM score_class_union GROUP BY score_class_union."KEY_u") max_select ON orig_cte."KEY" = max_select."KEY_m"), 
union_with_max AS 
(SELECT score_class_union."KEY_u" AS "KEY_u", score_class_union.class AS class, score_class_union."LogProba" AS "LogProba", score_class_union."Proba" AS "Proba", score_class_union."Score" AS "Score", score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Score_2" AS "Score_2", score_max."Score_3" AS "Score_3", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."Proba_2" AS "Proba_2", score_max."Proba_3" AS "Proba_3", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."LogProba_2" AS "LogProba_2", score_max."LogProba_3" AS "LogProba_3", score_max."Decision" AS "Decision", score_max."DecisionProba" AS "DecisionProba", score_max."KEY_m" AS "KEY_m", score_max."max_Proba" AS "max_Proba" 
FROM score_class_union LEFT OUTER JOIN score_max ON score_class_union."KEY_u" = score_max."KEY"), 
arg_max_cte AS 
(SELECT score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Score_2" AS "Score_2", score_max."Score_3" AS "Score_3", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."Proba_2" AS "Proba_2", score_max."Proba_3" AS "Proba_3", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."LogProba_2" AS "LogProba_2", score_max."LogProba_3" AS "LogProba_3", score_max."Decision" AS "Decision", score_max."DecisionProba" AS "DecisionProba", score_max."KEY_m" AS "KEY_m", score_max."max_Proba" AS "max_Proba", "arg_max_t_Proba"."KEY_Proba" AS "KEY_Proba", "arg_max_t_Proba"."arg_max_Proba" AS "arg_max_Proba" 
FROM score_max LEFT OUTER JOIN (SELECT union_with_max."KEY" AS "KEY_Proba", min(union_with_max.class) AS "arg_max_Proba" 
FROM union_with_max 
WHERE union_with_max."max_Proba" <= union_with_max."Proba" GROUP BY union_with_max."KEY") "arg_max_t_Proba" ON score_max."KEY" = "arg_max_t_Proba"."KEY_Proba")
 SELECT arg_max_cte."KEY" AS "KEY", arg_max_cte."Score_0" AS "Score_0", arg_max_cte."Score_1" AS "Score_1", arg_max_cte."Score_2" AS "Score_2", arg_max_cte."Score_3" AS "Score_3", arg_max_cte."Proba_0" AS "Proba_0", arg_max_cte."Proba_1" AS "Proba_1", arg_max_cte."Proba_2" AS "Proba_2", arg_max_cte."Proba_3" AS "Proba_3", CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN ln(arg_max_cte."Proba_0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_0", CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN ln(arg_max_cte."Proba_1") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_1", CASE WHEN (arg_max_cte."Proba_2" IS NULL OR arg_max_cte."Proba_2" > 0.0) THEN ln(arg_max_cte."Proba_2") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_2", CASE WHEN (arg_max_cte."Proba_3" IS NULL OR arg_max_cte."Proba_3" > 0.0) THEN ln(arg_max_cte."Proba_3") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_3", arg_max_cte."arg_max_Proba" AS "Decision", arg_max_cte."max_Proba" AS "DecisionProba" 
FROM arg_max_cte