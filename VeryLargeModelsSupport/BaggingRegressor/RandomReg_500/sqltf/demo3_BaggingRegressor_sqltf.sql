-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2018

-- This SQL code can contain one or more statements, to be executed in the order they appear in this file.


-- Code For temporary table TMP_20180329231910_B76XIY_BAG_AVG_B0 part 1/2. Create 


CREATE TEMPORARY TABLE "TMP_20180329231910_B76XIY_BAG_AVG_B0" (
	"KEY" BIGINT, 
	"Estimator" FLOAT
)


-- Code For temporary table TMP_20180329231910_B76XIY_BAG_AVG_B0 part 2/2. Populate

WITH "DT_node_lookup" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_214" <= 0.15670648217201233) THEN CASE WHEN ("ADS"."Feature_2" <= 0.8880929946899414) THEN CASE WHEN ("ADS"."Feature_51" <= -1.326873779296875) THEN CASE WHEN ("ADS"."Feature_373" <= 1.6483522653579712) THEN CASE WHEN ("ADS"."Feature_220" <= 0.1707448959350586) THEN 5 ELSE 6 END ELSE 7 END ELSE CASE WHEN ("ADS"."Feature_182" <= 0.2022705376148224) THEN CASE WHEN ("ADS"."Feature_203" <= 0.4713810682296753) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_225" <= -0.798648476600647) THEN 13 ELSE 14 END END END ELSE CASE WHEN ("ADS"."Feature_120" <= 0.7407240867614746) THEN CASE WHEN ("ADS"."Feature_26" <= 0.255910724401474) THEN CASE WHEN ("ADS"."Feature_266" <= 0.9652235507965088) THEN 18 ELSE 19 END ELSE 20 END ELSE CASE WHEN ("ADS"."Feature_259" <= -0.45466867089271545) THEN 22 ELSE 23 END END END ELSE CASE WHEN ("ADS"."Feature_19" <= -0.8266544342041016) THEN CASE WHEN ("ADS"."Feature_320" <= 0.4213975965976715) THEN CASE WHEN ("ADS"."Feature_263" <= -1.1679319143295288) THEN 27 ELSE CASE WHEN ("ADS"."Feature_391" <= 0.3796464204788208) THEN 29 ELSE 30 END END ELSE 31 END ELSE CASE WHEN ("ADS"."Feature_242" <= 0.9601876139640808) THEN CASE WHEN ("ADS"."Feature_255" <= 0.03181803971529007) THEN CASE WHEN ("ADS"."Feature_404" <= -0.8593997955322266) THEN 35 ELSE 36 END ELSE CASE WHEN ("ADS"."Feature_419" <= 0.8777059316635132) THEN 38 ELSE 39 END END ELSE CASE WHEN ("ADS"."Feature_424" <= -1.2368890047073364) THEN 41 ELSE CASE WHEN ("ADS"."Feature_207" <= 1.156846046447754) THEN 43 ELSE 44 END END END END END AS node_id_2 
FROM "RandomReg_500" AS "ADS"), 
"DT_node_data" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 4 AS parent_id, -279.51392057237706 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 4 AS parent_id, -203.01970242458535 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 3 AS parent_id, -415.6958459005518 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 5 AS depth, 9 AS parent_id, -124.67352496481541 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 5 AS depth, 9 AS parent_id, -206.46594804341794 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 12 AS parent_id, -82.33677570257825 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 12 AS parent_id, -20.92037277183902 AS "Estimator" UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 17 AS parent_id, 91.54020479226165 AS "Estimator" UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 17 AS parent_id, 115.03926082371912 AS "Estimator" UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 16 AS parent_id, 177.18611855879044 AS "Estimator" UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 21 AS parent_id, 1.2959046945999475 AS "Estimator" UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 21 AS parent_id, 33.76281107889175 AS "Estimator" UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 26 AS parent_id, -120.06152120377035 AS "Estimator" UNION ALL SELECT 29 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 28 AS parent_id, -7.692245020805719 AS "Estimator" UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 28 AS parent_id, -35.04704589383814 AS "Estimator" UNION ALL SELECT 31 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 25 AS parent_id, -358.03194560281815 AS "Estimator" UNION ALL SELECT 35 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 34 AS parent_id, 206.82748982779086 AS "Estimator" UNION ALL SELECT 36 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 34 AS parent_id, 280.72637034875214 AS "Estimator" UNION ALL SELECT 38 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 5 AS depth, 37 AS parent_id, 135.13687971995162 AS "Estimator" UNION ALL SELECT 39 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 37 AS parent_id, 25.36640211518946 AS "Estimator" UNION ALL SELECT 41 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 40 AS parent_id, 390.42475711953045 AS "Estimator" UNION ALL SELECT 43 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 42 AS parent_id, 605.6206481037917 AS "Estimator" UNION ALL SELECT 44 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 42 AS parent_id, 547.3010428702067 AS "Estimator") AS "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".node_id AS node_id, "DT_node_data".feature AS feature, "DT_node_data".threshold AS threshold, "DT_node_data".count AS count, "DT_node_data".depth AS depth, "DT_node_data".parent_id AS parent_id, "DT_node_data"."Estimator" AS "Estimator" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".node_id), 
"BAG_Tree_0" AS 
(SELECT "DT_Output"."KEY" AS "KEY", "DT_Output"."Estimator" AS "Estimator" 
FROM "DT_Output"), 
"DT_node_lookup_1" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_214" <= -0.4774290919303894) THEN CASE WHEN ("ADS"."Feature_482" <= -0.6910010576248169) THEN CASE WHEN ("ADS"."Feature_329" <= 0.3215342164039612) THEN 3 ELSE CASE WHEN ("ADS"."Feature_283" <= -1.094289779663086) THEN 5 ELSE CASE WHEN ("ADS"."Feature_390" <= 0.05269813537597656) THEN 7 ELSE 8 END END END ELSE CASE WHEN ("ADS"."Feature_432" <= -0.9896693229675293) THEN CASE WHEN ("ADS"."Feature_460" <= 0.2784985601902008) THEN 11 ELSE 12 END ELSE CASE WHEN ("ADS"."Feature_494" <= 0.2731083333492279) THEN CASE WHEN ("ADS"."Feature_434" <= -0.7686274647712708) THEN 15 ELSE 16 END ELSE CASE WHEN ("ADS"."Feature_405" <= 0.47741609811782837) THEN 18 ELSE 19 END END END END ELSE CASE WHEN ("ADS"."Feature_257" <= 1.0961889028549194) THEN CASE WHEN ("ADS"."Feature_117" <= -1.7056045532226562) THEN CASE WHEN ("ADS"."Feature_252" <= 0.25084394216537476) THEN 23 ELSE 24 END ELSE CASE WHEN ("ADS"."Feature_312" <= -0.052402105182409286) THEN CASE WHEN ("ADS"."Feature_84" <= 1.1434787511825562) THEN 27 ELSE 28 END ELSE CASE WHEN ("ADS"."Feature_339" <= 0.27778446674346924) THEN 30 ELSE 31 END END END ELSE CASE WHEN ("ADS"."Feature_101" <= 0.4161263108253479) THEN CASE WHEN ("ADS"."Feature_290" <= 1.3176896572113037) THEN 34 ELSE 35 END ELSE CASE WHEN ("ADS"."Feature_433" <= -0.19982106983661652) THEN CASE WHEN ("ADS"."Feature_412" <= 1.0393617153167725) THEN 38 ELSE 39 END ELSE 40 END END END END AS node_id_2 
FROM "RandomReg_500" AS "ADS"), 
"DT_node_data_1" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, -457.6699707484207 AS "Estimator" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 4 AS parent_id, -323.24551617726615 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 6 AS parent_id, -283.20958625787046 AS "Estimator" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 6 AS parent_id, -261.35828375560493 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 10 AS parent_id, -16.821269791302385 AS "Estimator" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 10 AS parent_id, 116.79666144845507 AS "Estimator" UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 14 AS parent_id, -188.28422714410806 AS "Estimator" UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 14 AS parent_id, -230.57998734776245 AS "Estimator" UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 17 AS parent_id, -149.26157469228727 AS "Estimator" UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 17 AS parent_id, -124.4854439192248 AS "Estimator" UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 22 AS parent_id, 207.751774006284 AS "Estimator" UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 22 AS parent_id, 547.3010428702067 AS "Estimator" UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 5 AS depth, 26 AS parent_id, -113.52007677278593 AS "Estimator" UNION ALL SELECT 28 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 26 AS parent_id, 1.2959046945999475 AS "Estimator" UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 5 AS depth, 29 AS parent_id, 125.29090488935609 AS "Estimator" UNION ALL SELECT 31 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 5 AS depth, 29 AS parent_id, -3.5800098396976514 AS "Estimator" UNION ALL SELECT 34 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 33 AS parent_id, 107.42988992013741 AS "Estimator" UNION ALL SELECT 35 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 33 AS parent_id, 263.4944951132128 AS "Estimator" UNION ALL SELECT 38 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 37 AS parent_id, 605.6206481037917 AS "Estimator" UNION ALL SELECT 39 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 37 AS parent_id, 533.6514679619586 AS "Estimator" UNION ALL SELECT 40 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 36 AS parent_id, 390.42475711953045 AS "Estimator") AS "Values"), 
"DT_Output_1" AS 
(SELECT "DT_node_lookup_1"."KEY" AS "KEY", "DT_node_lookup_1".node_id_2 AS node_id_2, "DT_node_data_1".node_id AS node_id, "DT_node_data_1".feature AS feature, "DT_node_data_1".threshold AS threshold, "DT_node_data_1".count AS count, "DT_node_data_1".depth AS depth, "DT_node_data_1".parent_id AS parent_id, "DT_node_data_1"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_1" LEFT OUTER JOIN "DT_node_data_1" ON "DT_node_lookup_1".node_id_2 = "DT_node_data_1".node_id), 
"BAG_Tree_1" AS 
(SELECT "DT_Output_1"."KEY" AS "KEY", "DT_Output_1"."Estimator" AS "Estimator" 
FROM "DT_Output_1"), 
"DT_node_lookup_2" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_214" <= -0.4774290919303894) THEN CASE WHEN ("ADS"."Feature_182" <= 0.3255065381526947) THEN CASE WHEN ("ADS"."Feature_27" <= 0.4103599190711975) THEN CASE WHEN ("ADS"."Feature_493" <= 0.31506839394569397) THEN CASE WHEN ("ADS"."Feature_150" <= 0.3422788381576538) THEN 5 ELSE 6 END ELSE CASE WHEN ("ADS"."Feature_76" <= 1.9803476333618164) THEN 8 ELSE 9 END END ELSE CASE WHEN ("ADS"."Feature_423" <= 0.634002685546875) THEN 11 ELSE 12 END END ELSE CASE WHEN ("ADS"."Feature_131" <= 0.4594164490699768) THEN CASE WHEN ("ADS"."Feature_124" <= -0.9740781188011169) THEN 15 ELSE CASE WHEN ("ADS"."Feature_258" <= 0.04331690073013306) THEN 17 ELSE 18 END END ELSE 19 END END ELSE CASE WHEN ("ADS"."Feature_234" <= 1.602707028388977) THEN CASE WHEN ("ADS"."Feature_395" <= 0.24391180276870728) THEN CASE WHEN ("ADS"."Feature_303" <= -0.25038081407546997) THEN CASE WHEN ("ADS"."Feature_344" <= -1.4167380332946777) THEN 24 ELSE 25 END ELSE CASE WHEN ("ADS"."Feature_102" <= -0.1893724501132965) THEN 27 ELSE 28 END END ELSE CASE WHEN ("ADS"."Feature_145" <= 0.7540625333786011) THEN CASE WHEN ("ADS"."Feature_56" <= -0.4212563931941986) THEN 31 ELSE 32 END ELSE CASE WHEN ("ADS"."Feature_106" <= -1.9821784496307373) THEN 34 ELSE 35 END END END ELSE CASE WHEN ("ADS"."Feature_457" <= -0.1918630301952362) THEN 37 ELSE CASE WHEN ("ADS"."Feature_223" <= 0.8553462028503418) THEN 39 ELSE 40 END END END END AS node_id_2 
FROM "RandomReg_500" AS "ADS"), 
"DT_node_data_2" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 4 AS parent_id, -116.33195069211688 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 4 AS parent_id, -151.78206980657862 AS "Estimator" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 5 AS depth, 7 AS parent_id, -196.81360079515622 AS "Estimator" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 7 AS parent_id, -230.48583102818432 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 10 AS parent_id, -16.821269791302385 AS "Estimator" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 10 AS parent_id, 87.98997921876722 AS "Estimator" UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 14 AS parent_id, -261.35828375560493 AS "Estimator" UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 16 AS parent_id, -283.20958625787046 AS "Estimator" UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 16 AS parent_id, -277.50474192428294 AS "Estimator" UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 13 AS parent_id, -457.6699707484207 AS "Estimator" UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 23 AS parent_id, 80.84161363160717 AS "Estimator" UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 5 AS depth, 23 AS parent_id, 28.056805959395216 AS "Estimator" UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 5 AS depth, 26 AS parent_id, -122.8409390328543 AS "Estimator" UNION ALL SELECT 28 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 5 AS depth, 26 AS parent_id, -40.687126996686146 AS "Estimator" UNION ALL SELECT 31 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 30 AS parent_id, 271.2024981958557 AS "Estimator" UNION ALL SELECT 32 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 5 AS depth, 30 AS parent_id, 171.34902819173325 AS "Estimator" UNION ALL SELECT 34 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 33 AS parent_id, -109.51656969318935 AS "Estimator" UNION ALL SELECT 35 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 33 AS parent_id, 13.411692540838555 AS "Estimator" UNION ALL SELECT 37 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 36 AS parent_id, 459.9324062532205 AS "Estimator" UNION ALL SELECT 39 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 38 AS parent_id, 533.6514679619586 AS "Estimator" UNION ALL SELECT 40 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 38 AS parent_id, 547.3010428702067 AS "Estimator") AS "Values"), 
"DT_Output_2" AS 
(SELECT "DT_node_lookup_2"."KEY" AS "KEY", "DT_node_lookup_2".node_id_2 AS node_id_2, "DT_node_data_2".node_id AS node_id, "DT_node_data_2".feature AS feature, "DT_node_data_2".threshold AS threshold, "DT_node_data_2".count AS count, "DT_node_data_2".depth AS depth, "DT_node_data_2".parent_id AS parent_id, "DT_node_data_2"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_2" LEFT OUTER JOIN "DT_node_data_2" ON "DT_node_lookup_2".node_id_2 = "DT_node_data_2".node_id), 
"BAG_Tree_2" AS 
(SELECT "DT_Output_2"."KEY" AS "KEY", "DT_Output_2"."Estimator" AS "Estimator" 
FROM "DT_Output_2"), 
"DT_node_lookup_3" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_486" <= 0.6344988942146301) THEN CASE WHEN ("ADS"."Feature_214" <= 0.6095774173736572) THEN CASE WHEN ("ADS"."Feature_461" <= 0.7482435703277588) THEN CASE WHEN ("ADS"."Feature_331" <= 1.143061637878418) THEN CASE WHEN ("ADS"."Feature_53" <= -0.20308712124824524) THEN 5 ELSE 6 END ELSE CASE WHEN ("ADS"."Feature_172" <= -0.3096589744091034) THEN 8 ELSE 9 END END ELSE CASE WHEN ("ADS"."Feature_0" <= -1.2178263664245605) THEN 11 ELSE CASE WHEN ("ADS"."Feature_94" <= -0.9409543871879578) THEN 13 ELSE 14 END END END ELSE CASE WHEN ("ADS"."Feature_169" <= 0.11519704014062881) THEN CASE WHEN ("ADS"."Feature_70" <= 1.6305006742477417) THEN CASE WHEN ("ADS"."Feature_330" <= -0.7608233690261841) THEN 18 ELSE 19 END ELSE 20 END ELSE CASE WHEN ("ADS"."Feature_375" <= 0.22676587104797363) THEN CASE WHEN ("ADS"."Feature_146" <= -0.21689853072166443) THEN 23 ELSE 24 END ELSE 25 END END END ELSE CASE WHEN ("ADS"."Feature_1" <= 1.0280094146728516) THEN CASE WHEN ("ADS"."Feature_161" <= 0.02102469652891159) THEN CASE WHEN ("ADS"."Feature_23" <= -0.8840283751487732) THEN CASE WHEN ("ADS"."Feature_24" <= -1.3304606676101685) THEN 30 ELSE 31 END ELSE CASE WHEN ("ADS"."Feature_496" <= -0.4814806282520294) THEN 33 ELSE 34 END END ELSE CASE WHEN ("ADS"."Feature_463" <= 0.33561497926712036) THEN CASE WHEN ("ADS"."Feature_48" <= -0.31992781162261963) THEN 37 ELSE 38 END ELSE CASE WHEN ("ADS"."Feature_256" <= 0.9879844188690186) THEN 40 ELSE 41 END END END ELSE CASE WHEN ("ADS"."Feature_301" <= -1.0060393810272217) THEN CASE WHEN ("ADS"."Feature_479" <= 0.43949276208877563) THEN 44 ELSE 45 END ELSE 46 END END END AS node_id_2 
FROM "RandomReg_500" AS "ADS"), 
"DT_node_data_3" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 5 AS depth, 4 AS parent_id, -204.4907245577904 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS count, 5 AS depth, 4 AS parent_id, -122.53907291612121 AS "Estimator" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 7 AS parent_id, -415.6958459005518 AS "Estimator" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 7 AS parent_id, -280.9276485244354 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 10 AS parent_id, 116.79666144845507 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 12 AS parent_id, 33.76281107889175 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 12 AS parent_id, -20.9858431523112 AS "Estimator" UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 17 AS parent_id, 20.765586507329495 AS "Estimator" UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 17 AS parent_id, -24.746702360807916 AS "Estimator" UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 16 AS parent_id, 79.82108947629172 AS "Estimator" UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 22 AS parent_id, 207.751774006284 AS "Estimator" UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 22 AS parent_id, 204.97892147080455 AS "Estimator" UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 21 AS parent_id, 161.52320252533048 AS "Estimator" UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 29 AS parent_id, 263.4944951132128 AS "Estimator" UNION ALL SELECT 31 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 29 AS parent_id, 283.4501739541325 AS "Estimator" UNION ALL SELECT 33 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 32 AS parent_id, 177.18611855879044 AS "Estimator" UNION ALL SELECT 34 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 32 AS parent_id, 155.71578829410694 AS "Estimator" UNION ALL SELECT 37 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 36 AS parent_id, 115.16857852465344 AS "Estimator" UNION ALL SELECT 38 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 36 AS parent_id, 86.45289998290411 AS "Estimator" UNION ALL SELECT 40 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 39 AS parent_id, -2.2649536981362672 AS "Estimator" UNION ALL SELECT 41 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 39 AS parent_id, 32.49502285171267 AS "Estimator" UNION ALL SELECT 44 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 43 AS parent_id, 605.6206481037917 AS "Estimator" UNION ALL SELECT 45 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 43 AS parent_id, 533.6514679619586 AS "Estimator" UNION ALL SELECT 46 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 42 AS parent_id, 390.4247571195304 AS "Estimator") AS "Values"), 
"DT_Output_3" AS 
(SELECT "DT_node_lookup_3"."KEY" AS "KEY", "DT_node_lookup_3".node_id_2 AS node_id_2, "DT_node_data_3".node_id AS node_id, "DT_node_data_3".feature AS feature, "DT_node_data_3".threshold AS threshold, "DT_node_data_3".count AS count, "DT_node_data_3".depth AS depth, "DT_node_data_3".parent_id AS parent_id, "DT_node_data_3"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_3" LEFT OUTER JOIN "DT_node_data_3" ON "DT_node_lookup_3".node_id_2 = "DT_node_data_3".node_id), 
"BAG_Tree_3" AS 
(SELECT "DT_Output_3"."KEY" AS "KEY", "DT_Output_3"."Estimator" AS "Estimator" 
FROM "DT_Output_3"), 
"DT_node_lookup_4" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_214" <= -0.4828032851219177) THEN CASE WHEN ("ADS"."Feature_432" <= -1.6955409049987793) THEN CASE WHEN ("ADS"."Feature_214" <= -1.1036094427108765) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_182" <= 0.36727452278137207) THEN CASE WHEN ("ADS"."Feature_459" <= -0.09941360354423523) THEN CASE WHEN ("ADS"."Feature_372" <= -0.2632719874382019) THEN 8 ELSE 9 END ELSE CASE WHEN ("ADS"."Feature_358" <= 0.20676344633102417) THEN 11 ELSE 12 END END ELSE CASE WHEN ("ADS"."Feature_280" <= -0.4732898771762848) THEN 14 ELSE CASE WHEN ("ADS"."Feature_0" <= -0.5727337002754211) THEN 16 ELSE 17 END END END END ELSE CASE WHEN ("ADS"."Feature_426" <= -1.086266040802002) THEN CASE WHEN ("ADS"."Feature_214" <= 1.4686330556869507) THEN CASE WHEN ("ADS"."Feature_90" <= -0.09153152257204056) THEN CASE WHEN ("ADS"."Feature_427" <= 1.0139892101287842) THEN 22 ELSE 23 END ELSE CASE WHEN ("ADS"."Feature_64" <= -0.29996833205223083) THEN 25 ELSE 26 END END ELSE 27 END ELSE CASE WHEN ("ADS"."Feature_289" <= 2.001132011413574) THEN CASE WHEN ("ADS"."Feature_223" <= -0.23184260725975037) THEN CASE WHEN ("ADS"."Feature_42" <= -0.021927105262875557) THEN 31 ELSE 32 END ELSE CASE WHEN ("ADS"."Feature_281" <= 0.6453745365142822) THEN 34 ELSE 35 END END ELSE 36 END END END AS node_id_2 
FROM "RandomReg_500" AS "ADS"), 
"DT_node_data_4" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, 179.19535659298046 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, -16.821269791302385 AS "Estimator" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 7 AS parent_id, -152.6027803567026 AS "Estimator" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 7 AS parent_id, -122.28837689560147 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 10 AS parent_id, -192.5027753026016 AS "Estimator" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 10 AS parent_id, -231.7533633692757 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 13 AS parent_id, -457.6699707484207 AS "Estimator" UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 15 AS parent_id, -277.50474192428294 AS "Estimator" UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 15 AS parent_id, -328.3948060709737 AS "Estimator" UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 21 AS parent_id, 157.77562090707204 AS "Estimator" UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 21 AS parent_id, 111.52445957424722 AS "Estimator" UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 24 AS parent_id, 286.61850436114156 AS "Estimator" UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 24 AS parent_id, 208.92995572018492 AS "Estimator" UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 19 AS parent_id, 547.3010428702067 AS "Estimator" UNION ALL SELECT 31 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 5 AS depth, 30 AS parent_id, -113.09657680461308 AS "Estimator" UNION ALL SELECT 32 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 5 AS depth, 30 AS parent_id, -11.141341158101401 AS "Estimator" UNION ALL SELECT 34 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 5 AS depth, 33 AS parent_id, 22.378643756763466 AS "Estimator" UNION ALL SELECT 35 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 5 AS depth, 33 AS parent_id, 187.71990523872378 AS "Estimator" UNION ALL SELECT 36 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 28 AS parent_id, -358.03194560281815 AS "Estimator") AS "Values"), 
"DT_Output_4" AS 
(SELECT "DT_node_lookup_4"."KEY" AS "KEY", "DT_node_lookup_4".node_id_2 AS node_id_2, "DT_node_data_4".node_id AS node_id, "DT_node_data_4".feature AS feature, "DT_node_data_4".threshold AS threshold, "DT_node_data_4".count AS count, "DT_node_data_4".depth AS depth, "DT_node_data_4".parent_id AS parent_id, "DT_node_data_4"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_4" LEFT OUTER JOIN "DT_node_data_4" ON "DT_node_lookup_4".node_id_2 = "DT_node_data_4".node_id), 
"BAG_Tree_4" AS 
(SELECT "DT_Output_4"."KEY" AS "KEY", "DT_Output_4"."Estimator" AS "Estimator" 
FROM "DT_Output_4"), 
"DT_node_lookup_5" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_214" <= 0.10535271465778351) THEN CASE WHEN ("ADS"."Feature_138" <= -0.7032459378242493) THEN CASE WHEN ("ADS"."Feature_425" <= 0.5353199243545532) THEN CASE WHEN ("ADS"."Feature_141" <= 0.5905966758728027) THEN CASE WHEN ("ADS"."Feature_295" <= -0.03929361701011658) THEN 5 ELSE 6 END ELSE CASE WHEN ("ADS"."Feature_464" <= 0.013658955693244934) THEN 8 ELSE 9 END END ELSE CASE WHEN ("ADS"."Feature_477" <= -0.24819403886795044) THEN CASE WHEN ("ADS"."Feature_210" <= -0.5379984378814697) THEN 12 ELSE 13 END ELSE CASE WHEN ("ADS"."Feature_486" <= -0.21768233180046082) THEN 15 ELSE 16 END END END ELSE CASE WHEN ("ADS"."Feature_118" <= -0.4149174690246582) THEN CASE WHEN ("ADS"."Feature_55" <= -1.1047924757003784) THEN CASE WHEN ("ADS"."Feature_379" <= -0.8035354018211365) THEN 20 ELSE 21 END ELSE CASE WHEN ("ADS"."Feature_61" <= -0.8223754167556763) THEN 23 ELSE 24 END END ELSE CASE WHEN ("ADS"."Feature_26" <= -0.045497290790081024) THEN CASE WHEN ("ADS"."Feature_349" <= 1.3958476781845093) THEN 27 ELSE 28 END ELSE CASE WHEN ("ADS"."Feature_399" <= 0.9486473798751831) THEN 30 ELSE 31 END END END END ELSE CASE WHEN ("ADS"."Feature_234" <= 1.871979832649231) THEN CASE WHEN ("ADS"."Feature_444" <= 0.6127383708953857) THEN CASE WHEN ("ADS"."Feature_99" <= 1.8319365978240967) THEN CASE WHEN ("ADS"."Feature_345" <= -0.36240237951278687) THEN 36 ELSE 37 END ELSE 38 END ELSE CASE WHEN ("ADS"."Feature_446" <= -1.7181065082550049) THEN 40 ELSE CASE WHEN ("ADS"."Feature_379" <= 0.40768003463745117) THEN 42 ELSE 43 END END END ELSE CASE WHEN ("ADS"."Feature_193" <= 0.8315637111663818) THEN CASE WHEN ("ADS"."Feature_375" <= -0.2567763924598694) THEN CASE WHEN ("ADS"."Feature_477" <= 0.10442739725112915) THEN 47 ELSE 48 END ELSE CASE WHEN ("ADS"."Feature_194" <= 0.2953876852989197) THEN 50 ELSE 51 END END ELSE 52 END END END AS node_id_2 
FROM "RandomReg_500" AS "ADS"), 
"DT_node_data_5" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 4 AS parent_id, -152.88186489353808 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 4 AS parent_id, -185.13230616976026 AS "Estimator" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 7 AS parent_id, -104.85768264007177 AS "Estimator" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 7 AS parent_id, -82.33677570257825 AS "Estimator" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 11 AS parent_id, -333.5440959646812 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 11 AS parent_id, -266.8211093811713 AS "Estimator" UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 14 AS parent_id, -415.6958459005518 AS "Estimator" UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 14 AS parent_id, -457.6699707484207 AS "Estimator" UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 19 AS parent_id, 32.49502285171267 AS "Estimator" UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 19 AS parent_id, 111.52445957424722 AS "Estimator" UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 22 AS parent_id, 179.19535659298046 AS "Estimator" UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 22 AS parent_id, 177.18611855879044 AS "Estimator" UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 5 AS depth, 26 AS parent_id, 1.452143632705331 AS "Estimator" UNION ALL SELECT 28 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 26 AS parent_id, -151.38917859834055 AS "Estimator" UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 5 AS depth, 29 AS parent_id, -101.74974211704001 AS "Estimator" UNION ALL SELECT 31 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 29 AS parent_id, -175.71048879007748 AS "Estimator" UNION ALL SELECT 36 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 5 AS depth, 35 AS parent_id, -12.134240947584088 AS "Estimator" UNION ALL SELECT 37 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 5 AS depth, 35 AS parent_id, 112.19503879259538 AS "Estimator" UNION ALL SELECT 38 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 34 AS parent_id, -358.03194560281815 AS "Estimator" UNION ALL SELECT 40 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 39 AS parent_id, 127.00731246073902 AS "Estimator" UNION ALL SELECT 42 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 41 AS parent_id, 275.0564997371772 AS "Estimator" UNION ALL SELECT 43 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 41 AS parent_id, 208.0288989091589 AS "Estimator" UNION ALL SELECT 47 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 46 AS parent_id, 547.3010428702067 AS "Estimator" UNION ALL SELECT 48 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 46 AS parent_id, 533.6514679619586 AS "Estimator" UNION ALL SELECT 50 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 49 AS parent_id, 459.9324062532205 AS "Estimator" UNION ALL SELECT 51 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 49 AS parent_id, 390.42475711953045 AS "Estimator" UNION ALL SELECT 52 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 44 AS parent_id, 85.4281804923287 AS "Estimator") AS "Values"), 
"DT_Output_5" AS 
(SELECT "DT_node_lookup_5"."KEY" AS "KEY", "DT_node_lookup_5".node_id_2 AS node_id_2, "DT_node_data_5".node_id AS node_id, "DT_node_data_5".feature AS feature, "DT_node_data_5".threshold AS threshold, "DT_node_data_5".count AS count, "DT_node_data_5".depth AS depth, "DT_node_data_5".parent_id AS parent_id, "DT_node_data_5"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_5" LEFT OUTER JOIN "DT_node_data_5" ON "DT_node_lookup_5".node_id_2 = "DT_node_data_5".node_id), 
"BAG_Tree_5" AS 
(SELECT "DT_Output_5"."KEY" AS "KEY", "DT_Output_5"."Estimator" AS "Estimator" 
FROM "DT_Output_5"), 
"DT_node_lookup_6" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_242" <= 1.3395265340805054) THEN CASE WHEN ("ADS"."Feature_317" <= -0.178450345993042) THEN CASE WHEN ("ADS"."Feature_264" <= 0.5180120468139648) THEN CASE WHEN ("ADS"."Feature_39" <= -0.018096061423420906) THEN CASE WHEN ("ADS"."Feature_329" <= -0.056119441986083984) THEN 5 ELSE 6 END ELSE CASE WHEN ("ADS"."Feature_298" <= 0.28918829560279846) THEN 8 ELSE 9 END END ELSE CASE WHEN ("ADS"."Feature_190" <= -0.08899214118719101) THEN CASE WHEN ("ADS"."Feature_429" <= 0.45444774627685547) THEN 12 ELSE 13 END ELSE CASE WHEN ("ADS"."Feature_469" <= -0.04354780912399292) THEN 15 ELSE 16 END END END ELSE CASE WHEN ("ADS"."Feature_214" <= 0.19393712282180786) THEN CASE WHEN ("ADS"."Feature_263" <= -0.5939850807189941) THEN CASE WHEN ("ADS"."Feature_490" <= 0.8130459785461426) THEN 20 ELSE 21 END ELSE CASE WHEN ("ADS"."Feature_21" <= 1.952052354812622) THEN 23 ELSE 24 END END ELSE CASE WHEN ("ADS"."Feature_383" <= -0.3929522931575775) THEN CASE WHEN ("ADS"."Feature_58" <= -0.6816604137420654) THEN 27 ELSE 28 END ELSE CASE WHEN ("ADS"."Feature_322" <= -1.1671698093414307) THEN 30 ELSE 31 END END END END ELSE CASE WHEN ("ADS"."Feature_410" <= 0.9645689725875854) THEN CASE WHEN ("ADS"."Feature_232" <= -1.8794184923171997) THEN 34 ELSE CASE WHEN ("ADS"."Feature_199" <= 0.13291460275650024) THEN 36 ELSE 37 END END ELSE 38 END END AS node_id_2 
FROM "RandomReg_500" AS "ADS"), 
"DT_node_data_6" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 5 AS depth, 4 AS parent_id, -126.84830178644786 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 4 AS parent_id, -213.6964581865853 AS "Estimator" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 7 AS parent_id, -362.60743977725446 AS "Estimator" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 7 AS parent_id, -270.8577239233408 AS "Estimator" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 11 AS parent_id, -114.82803156756661 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 11 AS parent_id, -126.16888591718772 AS "Estimator" UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 14 AS parent_id, 116.79666144845507 AS "Estimator" UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 14 AS parent_id, 20.526034891459073 AS "Estimator" UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 19 AS parent_id, -112.39871647158184 AS "Estimator" UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 19 AS parent_id, -226.05304580757803 AS "Estimator" UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 5 AS depth, 22 AS parent_id, 3.1517973237256283 AS "Estimator" UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 22 AS parent_id, 132.58804888877881 AS "Estimator" UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 26 AS parent_id, 263.4944951132128 AS "Estimator" UNION ALL SELECT 28 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 26 AS parent_id, 196.48917656452085 AS "Estimator" UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 29 AS parent_id, -40.197217660353246 AS "Estimator" UNION ALL SELECT 31 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 5 AS depth, 29 AS parent_id, 97.72084805297035 AS "Estimator" UNION ALL SELECT 34 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 33 AS parent_id, 605.6206481037917 AS "Estimator" UNION ALL SELECT 36 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 35 AS parent_id, 390.42475711953045 AS "Estimator" UNION ALL SELECT 37 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 35 AS parent_id, 459.9324062532205 AS "Estimator" UNION ALL SELECT 38 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, 32 AS parent_id, 179.19535659298046 AS "Estimator") AS "Values"), 
"DT_Output_6" AS 
(SELECT "DT_node_lookup_6"."KEY" AS "KEY", "DT_node_lookup_6".node_id_2 AS node_id_2, "DT_node_data_6".node_id AS node_id, "DT_node_data_6".feature AS feature, "DT_node_data_6".threshold AS threshold, "DT_node_data_6".count AS count, "DT_node_data_6".depth AS depth, "DT_node_data_6".parent_id AS parent_id, "DT_node_data_6"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_6" LEFT OUTER JOIN "DT_node_data_6" ON "DT_node_lookup_6".node_id_2 = "DT_node_data_6".node_id), 
"BAG_Tree_6" AS 
(SELECT "DT_Output_6"."KEY" AS "KEY", "DT_Output_6"."Estimator" AS "Estimator" 
FROM "DT_Output_6"), 
"DT_node_lookup_7" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_234" <= 1.7239538431167603) THEN CASE WHEN ("ADS"."Feature_317" <= -0.15657657384872437) THEN CASE WHEN ("ADS"."Feature_51" <= -0.5015145540237427) THEN CASE WHEN ("ADS"."Feature_211" <= 0.7307934761047363) THEN CASE WHEN ("ADS"."Feature_178" <= -1.382419228553772) THEN 5 ELSE 6 END ELSE CASE WHEN ("ADS"."Feature_98" <= 0.5554091334342957) THEN 8 ELSE 9 END END ELSE CASE WHEN ("ADS"."Feature_182" <= 0.340559184551239) THEN CASE WHEN ("ADS"."Feature_173" <= 0.4096813201904297) THEN 12 ELSE 13 END ELSE CASE WHEN ("ADS"."Feature_195" <= 0.7680438160896301) THEN 15 ELSE 16 END END END ELSE CASE WHEN ("ADS"."Feature_14" <= 0.4707137942314148) THEN CASE WHEN ("ADS"."Feature_488" <= 1.082947850227356) THEN CASE WHEN ("ADS"."Feature_444" <= 0.5081843137741089) THEN 20 ELSE 21 END ELSE CASE WHEN ("ADS"."Feature_80" <= -0.710461437702179) THEN 23 ELSE 24 END END ELSE CASE WHEN ("ADS"."Feature_419" <= -0.1051655113697052) THEN CASE WHEN ("ADS"."Feature_477" <= 0.4567016065120697) THEN 27 ELSE 28 END ELSE CASE WHEN ("ADS"."Feature_186" <= -1.8413035869598389) THEN 30 ELSE 31 END END END END ELSE CASE WHEN ("ADS"."Feature_409" <= 0.7902364730834961) THEN CASE WHEN ("ADS"."Feature_393" <= 0.4309975802898407) THEN CASE WHEN ("ADS"."Feature_388" <= -0.5410829186439514) THEN 35 ELSE 36 END ELSE 37 END ELSE 38 END END AS node_id_2 
FROM "RandomReg_500" AS "ADS"), 
"DT_node_data_7" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 4 AS parent_id, -123.93316340596354 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 5 AS depth, 4 AS parent_id, -255.84728807510822 AS "Estimator" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 7 AS parent_id, -457.6699707484207 AS "Estimator" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 7 AS parent_id, -348.2368057475634 AS "Estimator" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 5 AS depth, 11 AS parent_id, -116.75349045133339 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 11 AS parent_id, -215.72082190847397 AS "Estimator" UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 5 AS depth, 14 AS parent_id, 7.5922594643893575 AS "Estimator" UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 14 AS parent_id, 160.8877914596298 AS "Estimator" UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 5 AS depth, 19 AS parent_id, 135.84649017777224 AS "Estimator" UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 5 AS depth, 19 AS parent_id, 228.56435107735894 AS "Estimator" UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 22 AS parent_id, -71.39969559286752 AS "Estimator" UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 22 AS parent_id, 32.49502285171267 AS "Estimator" UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 26 AS parent_id, -108.653748195086 AS "Estimator" UNION ALL SELECT 28 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 26 AS parent_id, -197.41642139116252 AS "Estimator" UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 29 AS parent_id, 79.82108947629172 AS "Estimator" UNION ALL SELECT 31 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 5 AS depth, 29 AS parent_id, 13.794050042513646 AS "Estimator" UNION ALL SELECT 35 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 34 AS parent_id, 533.6514679619586 AS "Estimator" UNION ALL SELECT 36 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 34 AS parent_id, 547.3010428702067 AS "Estimator" UNION ALL SELECT 37 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 33 AS parent_id, 459.9324062532205 AS "Estimator" UNION ALL SELECT 38 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, 32 AS parent_id, 85.4281804923287 AS "Estimator") AS "Values"), 
"DT_Output_7" AS 
(SELECT "DT_node_lookup_7"."KEY" AS "KEY", "DT_node_lookup_7".node_id_2 AS node_id_2, "DT_node_data_7".node_id AS node_id, "DT_node_data_7".feature AS feature, "DT_node_data_7".threshold AS threshold, "DT_node_data_7".count AS count, "DT_node_data_7".depth AS depth, "DT_node_data_7".parent_id AS parent_id, "DT_node_data_7"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_7" LEFT OUTER JOIN "DT_node_data_7" ON "DT_node_lookup_7".node_id_2 = "DT_node_data_7".node_id), 
"BAG_Tree_7" AS 
(SELECT "DT_Output_7"."KEY" AS "KEY", "DT_Output_7"."Estimator" AS "Estimator" 
FROM "DT_Output_7"), 
"DT_node_lookup_8" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_214" <= 0.10535271465778351) THEN CASE WHEN ("ADS"."Feature_483" <= 0.37159067392349243) THEN CASE WHEN ("ADS"."Feature_375" <= -0.2928689122200012) THEN CASE WHEN ("ADS"."Feature_297" <= 1.7001272439956665) THEN CASE WHEN ("ADS"."Feature_57" <= -0.38953644037246704) THEN 5 ELSE 6 END ELSE 7 END ELSE CASE WHEN ("ADS"."Feature_286" <= 0.8603710532188416) THEN CASE WHEN ("ADS"."Feature_319" <= -0.028582008555531502) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_222" <= 1.24342679977417) THEN 13 ELSE 14 END END END ELSE CASE WHEN ("ADS"."Feature_70" <= 0.33871039748191833) THEN CASE WHEN ("ADS"."Feature_212" <= 0.4591957628726959) THEN CASE WHEN ("ADS"."Feature_265" <= -0.8799766302108765) THEN 18 ELSE 19 END ELSE CASE WHEN ("ADS"."Feature_187" <= 0.47891664505004883) THEN 21 ELSE 22 END END ELSE CASE WHEN ("ADS"."Feature_495" <= 0.6077828407287598) THEN CASE WHEN ("ADS"."Feature_82" <= -1.2401607036590576) THEN 25 ELSE 26 END ELSE 27 END END END ELSE CASE WHEN ("ADS"."Feature_173" <= 0.9147520065307617) THEN CASE WHEN ("ADS"."Feature_395" <= 0.30729764699935913) THEN CASE WHEN ("ADS"."Feature_270" <= 0.8130604028701782) THEN CASE WHEN ("ADS"."Feature_449" <= 1.0181894302368164) THEN 32 ELSE 33 END ELSE CASE WHEN ("ADS"."Feature_327" <= -0.992339551448822) THEN 35 ELSE 36 END END ELSE CASE WHEN ("ADS"."Feature_255" <= 0.15146946907043457) THEN CASE WHEN ("ADS"."Feature_427" <= 0.495566725730896) THEN 39 ELSE 40 END ELSE CASE WHEN ("ADS"."Feature_352" <= 0.2520257234573364) THEN 42 ELSE 43 END END END ELSE CASE WHEN ("ADS"."Feature_380" <= -0.9551078081130981) THEN 45 ELSE CASE WHEN ("ADS"."Feature_5" <= 1.0988948345184326) THEN 47 ELSE 48 END END END END AS node_id_2 
FROM "RandomReg_500" AS "ADS"), 
"DT_node_data_8" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 4 AS parent_id, 114.16056051135115 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 4 AS parent_id, 87.98997921876722 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 3 AS parent_id, 179.19535659298046 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 5 AS depth, 9 AS parent_id, -79.81168955611825 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 5 AS depth, 9 AS parent_id, -0.6842208771551812 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 12 AS parent_id, -143.698245915485 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 12 AS parent_id, -193.04778003580927 AS "Estimator" UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 17 AS parent_id, -151.38917859834055 AS "Estimator" UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 17 AS parent_id, -118.87542911266837 AS "Estimator" UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 20 AS parent_id, -198.81724164951822 AS "Estimator" UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 20 AS parent_id, -191.02380303122786 AS "Estimator" UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 24 AS parent_id, -326.6783761064045 AS "Estimator" UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 24 AS parent_id, -280.3571640910767 AS "Estimator" UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 23 AS parent_id, -415.6958459005518 AS "Estimator" UNION ALL SELECT 32 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 31 AS parent_id, 20.537626154203018 AS "Estimator" UNION ALL SELECT 33 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 31 AS parent_id, 84.7136216918451 AS "Estimator" UNION ALL SELECT 35 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 34 AS parent_id, -120.06152120377035 AS "Estimator" UNION ALL SELECT 36 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 34 AS parent_id, -29.372022663248934 AS "Estimator" UNION ALL SELECT 39 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 38 AS parent_id, 206.8782693348724 AS "Estimator" UNION ALL SELECT 40 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 38 AS parent_id, 276.79828100715923 AS "Estimator" UNION ALL SELECT 42 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 41 AS parent_id, 117.21860119043822 AS "Estimator" UNION ALL SELECT 43 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 41 AS parent_id, 160.27400865257766 AS "Estimator" UNION ALL SELECT 45 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 44 AS parent_id, 459.9324062532205 AS "Estimator" UNION ALL SELECT 47 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 46 AS parent_id, 547.3010428702067 AS "Estimator" UNION ALL SELECT 48 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 46 AS parent_id, 605.6206481037917 AS "Estimator") AS "Values"), 
"DT_Output_8" AS 
(SELECT "DT_node_lookup_8"."KEY" AS "KEY", "DT_node_lookup_8".node_id_2 AS node_id_2, "DT_node_data_8".node_id AS node_id, "DT_node_data_8".feature AS feature, "DT_node_data_8".threshold AS threshold, "DT_node_data_8".count AS count, "DT_node_data_8".depth AS depth, "DT_node_data_8".parent_id AS parent_id, "DT_node_data_8"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_8" LEFT OUTER JOIN "DT_node_data_8" ON "DT_node_lookup_8".node_id_2 = "DT_node_data_8".node_id), 
"BAG_Tree_8" AS 
(SELECT "DT_Output_8"."KEY" AS "KEY", "DT_Output_8"."Estimator" AS "Estimator" 
FROM "DT_Output_8"), 
"DT_node_lookup_9" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_214" <= -0.38695091009140015) THEN CASE WHEN ("ADS"."Feature_205" <= -1.0247342586517334) THEN CASE WHEN ("ADS"."Feature_294" <= 0.29750436544418335) THEN 3 ELSE CASE WHEN ("ADS"."Feature_363" <= -0.5224940180778503) THEN 5 ELSE 6 END END ELSE CASE WHEN ("ADS"."Feature_342" <= -0.6397943496704102) THEN CASE WHEN ("ADS"."Feature_235" <= -0.2607213854789734) THEN 9 ELSE CASE WHEN ("ADS"."Feature_285" <= -0.5583581328392029) THEN 11 ELSE 12 END END ELSE CASE WHEN ("ADS"."Feature_161" <= 0.22297552227973938) THEN CASE WHEN ("ADS"."Feature_391" <= 0.6313757300376892) THEN 15 ELSE 16 END ELSE CASE WHEN ("ADS"."Feature_84" <= -0.13671042025089264) THEN 18 ELSE 19 END END END END ELSE CASE WHEN ("ADS"."Feature_257" <= 1.1808737516403198) THEN CASE WHEN ("ADS"."Feature_195" <= 0.6531292796134949) THEN CASE WHEN ("ADS"."Feature_375" <= 0.8250672221183777) THEN CASE WHEN ("ADS"."Feature_98" <= -0.611585795879364) THEN 24 ELSE 25 END ELSE CASE WHEN ("ADS"."Feature_319" <= 0.005633488297462463) THEN 27 ELSE 28 END END ELSE CASE WHEN ("ADS"."Feature_435" <= -0.0583835132420063) THEN CASE WHEN ("ADS"."Feature_376" <= -1.0366007089614868) THEN 31 ELSE 32 END ELSE CASE WHEN ("ADS"."Feature_266" <= -0.577843189239502) THEN 34 ELSE 35 END END END ELSE CASE WHEN ("ADS"."Feature_25" <= -0.8068205118179321) THEN 37 ELSE CASE WHEN ("ADS"."Feature_235" <= -0.8895155191421509) THEN 39 ELSE CASE WHEN ("ADS"."Feature_1" <= -0.7230127453804016) THEN 41 ELSE 42 END END END END END AS node_id_2 
FROM "RandomReg_500" AS "ADS"), 
"DT_node_data_9" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, -16.821269791302385 AS "Estimator" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 4 AS parent_id, 47.67828747304395 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 4 AS parent_id, 116.79666144845507 AS "Estimator" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 8 AS parent_id, -323.24551617726615 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 10 AS parent_id, -457.6699707484207 AS "Estimator" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 10 AS parent_id, -415.6958459005518 AS "Estimator" UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 14 AS parent_id, -150.6346735445659 AS "Estimator" UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 14 AS parent_id, -110.89191121424324 AS "Estimator" UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 5 AS depth, 17 AS parent_id, -251.85960549264982 AS "Estimator" UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 17 AS parent_id, -196.06155070909693 AS "Estimator" UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 5 AS depth, 23 AS parent_id, -50.19851976763048 AS "Estimator" UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 5 AS depth, 23 AS parent_id, -124.71469701993946 AS "Estimator" UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 26 AS parent_id, 114.97967407205078 AS "Estimator" UNION ALL SELECT 28 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 26 AS parent_id, 0.10895189702120926 AS "Estimator" UNION ALL SELECT 31 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 30 AS parent_id, 137.26341527618337 AS "Estimator" UNION ALL SELECT 32 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 30 AS parent_id, 194.4163708130948 AS "Estimator" UNION ALL SELECT 34 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 33 AS parent_id, 82.39041685570234 AS "Estimator" UNION ALL SELECT 35 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 33 AS parent_id, 24.910481408936505 AS "Estimator" UNION ALL SELECT 37 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 36 AS parent_id, 533.6514679619586 AS "Estimator" UNION ALL SELECT 39 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 38 AS parent_id, 390.42475711953045 AS "Estimator" UNION ALL SELECT 41 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 40 AS parent_id, 284.24225655588475 AS "Estimator" UNION ALL SELECT 42 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 40 AS parent_id, 263.4944951132128 AS "Estimator") AS "Values"), 
"DT_Output_9" AS 
(SELECT "DT_node_lookup_9"."KEY" AS "KEY", "DT_node_lookup_9".node_id_2 AS node_id_2, "DT_node_data_9".node_id AS node_id, "DT_node_data_9".feature AS feature, "DT_node_data_9".threshold AS threshold, "DT_node_data_9".count AS count, "DT_node_data_9".depth AS depth, "DT_node_data_9".parent_id AS parent_id, "DT_node_data_9"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_9" LEFT OUTER JOIN "DT_node_data_9" ON "DT_node_lookup_9".node_id_2 = "DT_node_data_9".node_id), 
"BAG_Tree_9" AS 
(SELECT "DT_Output_9"."KEY" AS "KEY", "DT_Output_9"."Estimator" AS "Estimator" 
FROM "DT_Output_9")
 INSERT INTO "TMP_20180329231910_B76XIY_BAG_AVG_B0" ("KEY", "Estimator") SELECT "BAG_AVG_B0"."KEY", "BAG_AVG_B0"."Estimator" 
FROM (SELECT "BAG_AVG_esu_0"."KEY" AS "KEY", "BAG_AVG_esu_0"."Estimator" AS "Estimator" 
FROM (SELECT "BAG_Tree_0"."KEY" AS "KEY", "BAG_Tree_0"."Estimator" AS "Estimator" 
FROM "BAG_Tree_0" UNION ALL SELECT "BAG_Tree_1"."KEY" AS "KEY", "BAG_Tree_1"."Estimator" AS "Estimator" 
FROM "BAG_Tree_1" UNION ALL SELECT "BAG_Tree_2"."KEY" AS "KEY", "BAG_Tree_2"."Estimator" AS "Estimator" 
FROM "BAG_Tree_2" UNION ALL SELECT "BAG_Tree_3"."KEY" AS "KEY", "BAG_Tree_3"."Estimator" AS "Estimator" 
FROM "BAG_Tree_3" UNION ALL SELECT "BAG_Tree_4"."KEY" AS "KEY", "BAG_Tree_4"."Estimator" AS "Estimator" 
FROM "BAG_Tree_4" UNION ALL SELECT "BAG_Tree_5"."KEY" AS "KEY", "BAG_Tree_5"."Estimator" AS "Estimator" 
FROM "BAG_Tree_5" UNION ALL SELECT "BAG_Tree_6"."KEY" AS "KEY", "BAG_Tree_6"."Estimator" AS "Estimator" 
FROM "BAG_Tree_6" UNION ALL SELECT "BAG_Tree_7"."KEY" AS "KEY", "BAG_Tree_7"."Estimator" AS "Estimator" 
FROM "BAG_Tree_7" UNION ALL SELECT "BAG_Tree_8"."KEY" AS "KEY", "BAG_Tree_8"."Estimator" AS "Estimator" 
FROM "BAG_Tree_8" UNION ALL SELECT "BAG_Tree_9"."KEY" AS "KEY", "BAG_Tree_9"."Estimator" AS "Estimator" 
FROM "BAG_Tree_9") AS "BAG_AVG_esu_0") AS "BAG_AVG_B0"
-- Code For temporary table TMP_20180329231911_RE475O_BAG_AVG_B1 part 1/2. Create 


CREATE TEMPORARY TABLE "TMP_20180329231911_RE475O_BAG_AVG_B1" (
	"KEY" BIGINT, 
	"Estimator" FLOAT
)


-- Code For temporary table TMP_20180329231911_RE475O_BAG_AVG_B1 part 2/2. Populate

WITH "DT_node_lookup_10" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_306" <= -0.3534409999847412) THEN CASE WHEN ("ADS"."Feature_53" <= -0.5159698128700256) THEN CASE WHEN ("ADS"."Feature_412" <= 0.7173751592636108) THEN CASE WHEN ("ADS"."Feature_80" <= -1.2094420194625854) THEN 4 ELSE CASE WHEN ("ADS"."Feature_444" <= 1.3571434020996094) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_144" <= -1.2047103643417358) THEN 9 ELSE CASE WHEN ("ADS"."Feature_140" <= -0.2767161428928375) THEN 11 ELSE 12 END END END ELSE CASE WHEN ("ADS"."Feature_303" <= 0.34244388341903687) THEN CASE WHEN ("ADS"."Feature_402" <= 0.26699355244636536) THEN CASE WHEN ("ADS"."Feature_488" <= 0.9226222038269043) THEN 16 ELSE 17 END ELSE CASE WHEN ("ADS"."Feature_2" <= 0.588738739490509) THEN 19 ELSE 20 END END ELSE CASE WHEN ("ADS"."Feature_61" <= 0.1559128761291504) THEN CASE WHEN ("ADS"."Feature_135" <= 0.9894077777862549) THEN 23 ELSE 24 END ELSE 25 END END END ELSE CASE WHEN ("ADS"."Feature_96" <= 0.7699331045150757) THEN CASE WHEN ("ADS"."Feature_188" <= -0.5347756147384644) THEN CASE WHEN ("ADS"."Feature_270" <= 1.0813581943511963) THEN CASE WHEN ("ADS"."Feature_474" <= 0.8682129383087158) THEN 30 ELSE 31 END ELSE CASE WHEN ("ADS"."Feature_9" <= 0.06574197858572006) THEN 33 ELSE 34 END END ELSE CASE WHEN ("ADS"."Feature_390" <= 0.38875696063041687) THEN CASE WHEN ("ADS"."Feature_303" <= 0.12192628532648087) THEN 37 ELSE 38 END ELSE CASE WHEN ("ADS"."Feature_125" <= 0.6109869480133057) THEN 40 ELSE 41 END END END ELSE CASE WHEN ("ADS"."Feature_90" <= -0.018904559314250946) THEN CASE WHEN ("ADS"."Feature_14" <= 1.0373936891555786) THEN 44 ELSE 45 END ELSE CASE WHEN ("ADS"."Feature_415" <= 0.3897070288658142) THEN CASE WHEN ("ADS"."Feature_318" <= -0.6509706974029541) THEN 48 ELSE 49 END ELSE CASE WHEN ("ADS"."Feature_420" <= 0.9618346095085144) THEN 51 ELSE 52 END END END END END AS node_id_2 
FROM "RandomReg_500" AS "ADS"), 
"DT_node_data_10" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 3 AS parent_id, 390.42475711953045 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 5 AS parent_id, 270.146388060186 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 5 AS parent_id, 204.97892147080455 AS "Estimator" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 8 AS parent_id, 459.9324062532205 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 10 AS parent_id, 542.7511845674574 AS "Estimator" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 10 AS parent_id, 605.6206481037917 AS "Estimator" UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 15 AS parent_id, 83.02585198288857 AS "Estimator" UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 15 AS parent_id, 127.00731246073902 AS "Estimator" UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 18 AS parent_id, 208.92995572018492 AS "Estimator" UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 18 AS parent_id, 177.18611855879044 AS "Estimator" UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 22 AS parent_id, -152.01795467957504 AS "Estimator" UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 22 AS parent_id, -186.6725952267546 AS "Estimator" UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 21 AS parent_id, -66.63357508273742 AS "Estimator" UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 5 AS depth, 29 AS parent_id, -120.83719524605533 AS "Estimator" UNION ALL SELECT 31 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 29 AS parent_id, -16.821269791302385 AS "Estimator" UNION ALL SELECT 33 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 32 AS parent_id, -323.24551617726615 AS "Estimator" UNION ALL SELECT 34 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 32 AS parent_id, -277.50474192428294 AS "Estimator" UNION ALL SELECT 37 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 36 AS parent_id, -133.25611058401756 AS "Estimator" UNION ALL SELECT 38 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 5 AS depth, 36 AS parent_id, 4.905348237599627 AS "Estimator" UNION ALL SELECT 40 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 5 AS depth, 39 AS parent_id, 93.33278119108748 AS "Estimator" UNION ALL SELECT 41 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 39 AS parent_id, 182.0500292839385 AS "Estimator" UNION ALL SELECT 44 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 43 AS parent_id, -120.06152120377035 AS "Estimator" UNION ALL SELECT 45 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 43 AS parent_id, 16.16477089946953 AS "Estimator" UNION ALL SELECT 48 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 47 AS parent_id, -358.03194560281815 AS "Estimator" UNION ALL SELECT 49 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 47 AS parent_id, -457.6699707484207 AS "Estimator" UNION ALL SELECT 51 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 50 AS parent_id, -272.2839350067377 AS "Estimator" UNION ALL SELECT 52 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 50 AS parent_id, -230.48583102818432 AS "Estimator") AS "Values"), 
"DT_Output_10" AS 
(SELECT "DT_node_lookup_10"."KEY" AS "KEY", "DT_node_lookup_10".node_id_2 AS node_id_2, "DT_node_data_10".node_id AS node_id, "DT_node_data_10".feature AS feature, "DT_node_data_10".threshold AS threshold, "DT_node_data_10".count AS count, "DT_node_data_10".depth AS depth, "DT_node_data_10".parent_id AS parent_id, "DT_node_data_10"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_10" LEFT OUTER JOIN "DT_node_data_10" ON "DT_node_lookup_10".node_id_2 = "DT_node_data_10".node_id), 
"BAG_Tree_10" AS 
(SELECT "DT_Output_10"."KEY" AS "KEY", "DT_Output_10"."Estimator" AS "Estimator" 
FROM "DT_Output_10"), 
"DT_node_lookup_11" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_214" <= 0.08013399690389633) THEN CASE WHEN ("ADS"."Feature_425" <= 0.9435489773750305) THEN CASE WHEN ("ADS"."Feature_319" <= 0.859123945236206) THEN CASE WHEN ("ADS"."Feature_196" <= 1.469904899597168) THEN CASE WHEN ("ADS"."Feature_439" <= 1.0030595064163208) THEN 5 ELSE 6 END ELSE 7 END ELSE CASE WHEN ("ADS"."Feature_160" <= 0.7352864742279053) THEN CASE WHEN ("ADS"."Feature_437" <= -0.23077154159545898) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_62" <= -0.19898834824562073) THEN 13 ELSE 14 END END END ELSE CASE WHEN ("ADS"."Feature_5" <= 0.8242858648300171) THEN CASE WHEN ("ADS"."Feature_276" <= -0.4769211411476135) THEN 17 ELSE CASE WHEN ("ADS"."Feature_366" <= -0.836873471736908) THEN 19 ELSE 20 END END ELSE CASE WHEN ("ADS"."Feature_159" <= 0.23853717744350433) THEN CASE WHEN ("ADS"."Feature_345" <= -0.8566921949386597) THEN 23 ELSE 24 END ELSE 25 END END END ELSE CASE WHEN ("ADS"."Feature_228" <= -0.17396602034568787) THEN CASE WHEN ("ADS"."Feature_135" <= 0.7215505242347717) THEN CASE WHEN ("ADS"."Feature_388" <= 0.07363232970237732) THEN CASE WHEN ("ADS"."Feature_80" <= -0.34416577219963074) THEN 30 ELSE 31 END ELSE CASE WHEN ("ADS"."Feature_120" <= -0.3329271972179413) THEN 33 ELSE 34 END END ELSE 35 END ELSE CASE WHEN ("ADS"."Feature_173" <= 0.9147520065307617) THEN CASE WHEN ("ADS"."Feature_88" <= -0.48692506551742554) THEN CASE WHEN ("ADS"."Feature_436" <= -0.6854201555252075) THEN 39 ELSE 40 END ELSE CASE WHEN ("ADS"."Feature_178" <= 0.30768799781799316) THEN 42 ELSE 43 END END ELSE CASE WHEN ("ADS"."Feature_160" <= -1.1825051307678223) THEN 45 ELSE CASE WHEN ("ADS"."Feature_380" <= -0.4398002326488495) THEN 47 ELSE 48 END END END END END AS node_id_2 
FROM "RandomReg_500" AS "ADS"), 
"DT_node_data_11" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 5 AS depth, 4 AS parent_id, -112.46065834939826 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 5 AS depth, 4 AS parent_id, -185.22440621485578 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 3 AS parent_id, 33.76281107889175 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 9 AS parent_id, -15.012255370815934 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 9 AS parent_id, 32.49502285171267 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 12 AS parent_id, 95.09043036575606 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 12 AS parent_id, 87.98997921876722 AS "Estimator" UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 16 AS parent_id, -333.5440959646812 AS "Estimator" UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 18 AS parent_id, -457.6699707484207 AS "Estimator" UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 18 AS parent_id, -415.6958459005518 AS "Estimator" UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 22 AS parent_id, -240.19880834560007 AS "Estimator" UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 22 AS parent_id, -277.50474192428294 AS "Estimator" UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 21 AS parent_id, -202.50354295885262 AS "Estimator" UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 29 AS parent_id, -71.39969559286752 AS "Estimator" UNION ALL SELECT 31 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 29 AS parent_id, -120.06152120377035 AS "Estimator" UNION ALL SELECT 33 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 32 AS parent_id, -22.876905664986346 AS "Estimator" UNION ALL SELECT 34 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 32 AS parent_id, 24.45456070268355 AS "Estimator" UNION ALL SELECT 35 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 27 AS parent_id, -358.03194560281815 AS "Estimator" UNION ALL SELECT 39 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 5 AS depth, 38 AS parent_id, 186.37177176957658 AS "Estimator" UNION ALL SELECT 40 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 38 AS parent_id, 274.2644171354249 AS "Estimator" UNION ALL SELECT 42 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 5 AS depth, 41 AS parent_id, 108.59333084434044 AS "Estimator" UNION ALL SELECT 43 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 41 AS parent_id, -36.29895664626927 AS "Estimator" UNION ALL SELECT 45 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 44 AS parent_id, 459.9324062532205 AS "Estimator" UNION ALL SELECT 47 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 46 AS parent_id, 547.3010428702067 AS "Estimator" UNION ALL SELECT 48 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 46 AS parent_id, 533.6514679619586 AS "Estimator") AS "Values"), 
"DT_Output_11" AS 
(SELECT "DT_node_lookup_11"."KEY" AS "KEY", "DT_node_lookup_11".node_id_2 AS node_id_2, "DT_node_data_11".node_id AS node_id, "DT_node_data_11".feature AS feature, "DT_node_data_11".threshold AS threshold, "DT_node_data_11".count AS count, "DT_node_data_11".depth AS depth, "DT_node_data_11".parent_id AS parent_id, "DT_node_data_11"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_11" LEFT OUTER JOIN "DT_node_data_11" ON "DT_node_lookup_11".node_id_2 = "DT_node_data_11".node_id), 
"BAG_Tree_11" AS 
(SELECT "DT_Output_11"."KEY" AS "KEY", "DT_Output_11"."Estimator" AS "Estimator" 
FROM "DT_Output_11"), 
"DT_node_lookup_12" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_214" <= -0.4774290919303894) THEN CASE WHEN ("ADS"."Feature_27" <= 0.8240195512771606) THEN CASE WHEN ("ADS"."Feature_252" <= -0.34173935651779175) THEN CASE WHEN ("ADS"."Feature_472" <= 1.1778277158737183) THEN CASE WHEN ("ADS"."Feature_183" <= 0.9460082650184631) THEN 5 ELSE 6 END ELSE 7 END ELSE CASE WHEN ("ADS"."Feature_379" <= 0.37477147579193115) THEN CASE WHEN ("ADS"."Feature_457" <= -0.6898442506790161) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_170" <= 1.0004889965057373) THEN 13 ELSE 14 END END END ELSE CASE WHEN ("ADS"."Feature_32" <= -0.1422009915113449) THEN 16 ELSE CASE WHEN ("ADS"."Feature_65" <= 1.1423513889312744) THEN 18 ELSE 19 END END END ELSE CASE WHEN ("ADS"."Feature_223" <= 0.09350944310426712) THEN CASE WHEN ("ADS"."Feature_491" <= -0.017165573313832283) THEN CASE WHEN ("ADS"."Feature_404" <= 1.4211573600769043) THEN CASE WHEN ("ADS"."Feature_246" <= 1.1246309280395508) THEN 24 ELSE 25 END ELSE 26 END ELSE CASE WHEN ("ADS"."Feature_109" <= -2.1898610591888428) THEN 28 ELSE CASE WHEN ("ADS"."Feature_141" <= 0.5848599076271057) THEN 30 ELSE 31 END END END ELSE CASE WHEN ("ADS"."Feature_81" <= 1.1387052536010742) THEN CASE WHEN ("ADS"."Feature_339" <= 0.27778446674346924) THEN CASE WHEN ("ADS"."Feature_475" <= -1.6019375324249268) THEN 35 ELSE 36 END ELSE CASE WHEN ("ADS"."Feature_347" <= 1.3691902160644531) THEN 38 ELSE 39 END END ELSE CASE WHEN ("ADS"."Feature_412" <= 0.08047589659690857) THEN CASE WHEN ("ADS"."Feature_387" <= -0.6712533831596375) THEN 42 ELSE 43 END ELSE CASE WHEN ("ADS"."Feature_127" <= -1.6934890747070312) THEN 45 ELSE 46 END END END END END AS node_id_2 
FROM "RandomReg_500" AS "ADS"), 
"DT_node_data_12" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 5 AS depth, 4 AS parent_id, -166.03427051488683 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 4 AS parent_id, -110.59552323409693 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 3 AS parent_id, -16.821269791302385 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 9 AS parent_id, -279.40635670214544 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 9 AS parent_id, -328.3948060709737 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 12 AS parent_id, -242.10655802769824 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 12 AS parent_id, -202.50354295885262 AS "Estimator" UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 15 AS parent_id, 179.19535659298046 AS "Estimator" UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 17 AS parent_id, 87.98997921876723 AS "Estimator" UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 17 AS parent_id, 116.79666144845507 AS "Estimator" UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 5 AS depth, 23 AS parent_id, -111.1973364445975 AS "Estimator" UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 23 AS parent_id, -42.98196017452795 AS "Estimator" UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 22 AS parent_id, -193.1994069334645 AS "Estimator" UNION ALL SELECT 28 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 27 AS parent_id, 177.18611855879044 AS "Estimator" UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 29 AS parent_id, 62.068815483377726 AS "Estimator" UNION ALL SELECT 31 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 29 AS parent_id, -15.863042610777407 AS "Estimator" UNION ALL SELECT 35 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 34 AS parent_id, 24.45456070268355 AS "Estimator" UNION ALL SELECT 36 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 5 AS depth, 34 AS parent_id, 113.2433887849642 AS "Estimator" UNION ALL SELECT 38 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 37 AS parent_id, -16.026327847808357 AS "Estimator" UNION ALL SELECT 39 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 37 AS parent_id, 32.49502285171267 AS "Estimator" UNION ALL SELECT 42 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 41 AS parent_id, 161.52320252533048 AS "Estimator" UNION ALL SELECT 43 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 41 AS parent_id, 207.6684761847485 AS "Estimator" UNION ALL SELECT 45 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 44 AS parent_id, 390.42475711953045 AS "Estimator" UNION ALL SELECT 46 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 44 AS parent_id, 286.61850436114156 AS "Estimator") AS "Values"), 
"DT_Output_12" AS 
(SELECT "DT_node_lookup_12"."KEY" AS "KEY", "DT_node_lookup_12".node_id_2 AS node_id_2, "DT_node_data_12".node_id AS node_id, "DT_node_data_12".feature AS feature, "DT_node_data_12".threshold AS threshold, "DT_node_data_12".count AS count, "DT_node_data_12".depth AS depth, "DT_node_data_12".parent_id AS parent_id, "DT_node_data_12"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_12" LEFT OUTER JOIN "DT_node_data_12" ON "DT_node_lookup_12".node_id_2 = "DT_node_data_12".node_id), 
"BAG_Tree_12" AS 
(SELECT "DT_Output_12"."KEY" AS "KEY", "DT_Output_12"."Estimator" AS "Estimator" 
FROM "DT_Output_12"), 
"DT_node_lookup_13" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_214" <= -0.37420880794525146) THEN CASE WHEN ("ADS"."Feature_91" <= 1.3465185165405273) THEN CASE WHEN ("ADS"."Feature_400" <= -0.27815473079681396) THEN CASE WHEN ("ADS"."Feature_142" <= -0.3407946228981018) THEN CASE WHEN ("ADS"."Feature_303" <= 0.7870144844055176) THEN 5 ELSE 6 END ELSE CASE WHEN ("ADS"."Feature_330" <= 1.993239164352417) THEN 8 ELSE 9 END END ELSE CASE WHEN ("ADS"."Feature_410" <= -0.0043226066045463085) THEN CASE WHEN ("ADS"."Feature_126" <= -0.886852502822876) THEN 12 ELSE 13 END ELSE CASE WHEN ("ADS"."Feature_165" <= -0.68500155210495) THEN 15 ELSE 16 END END END ELSE CASE WHEN ("ADS"."Feature_278" <= -0.8655647039413452) THEN 18 ELSE CASE WHEN ("ADS"."Feature_137" <= -0.7126954793930054) THEN 20 ELSE 21 END END END ELSE CASE WHEN ("ADS"."Feature_312" <= -0.21764002740383148) THEN CASE WHEN ("ADS"."Feature_146" <= -0.8836283683776855) THEN 24 ELSE CASE WHEN ("ADS"."Feature_81" <= -0.35833507776260376) THEN CASE WHEN ("ADS"."Feature_75" <= -0.09668035805225372) THEN 27 ELSE 28 END ELSE CASE WHEN ("ADS"."Feature_270" <= -0.8060187101364136) THEN 30 ELSE 31 END END END ELSE CASE WHEN ("ADS"."Feature_325" <= -0.3918505907058716) THEN CASE WHEN ("ADS"."Feature_242" <= 0.8547267913818359) THEN CASE WHEN ("ADS"."Feature_309" <= -0.9851610064506531) THEN 35 ELSE 36 END ELSE CASE WHEN ("ADS"."Feature_405" <= 0.6053123474121094) THEN 38 ELSE 39 END END ELSE CASE WHEN ("ADS"."Feature_449" <= -0.7031995058059692) THEN CASE WHEN ("ADS"."Feature_480" <= -0.19232547283172607) THEN 42 ELSE 43 END ELSE CASE WHEN ("ADS"."Feature_84" <= -1.1568447351455688) THEN 45 ELSE 46 END END END END END AS node_id_2 
FROM "RandomReg_500" AS "ADS"), 
"DT_node_data_13" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 4 AS parent_id, -457.6699707484207 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 4 AS parent_id, -415.6958459005518 AS "Estimator" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 5 AS depth, 7 AS parent_id, -304.3759850810252 AS "Estimator" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 7 AS parent_id, -145.7557807925901 AS "Estimator" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 11 AS parent_id, -151.38917859834055 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 5 AS depth, 11 AS parent_id, -200.0403538277411 AS "Estimator" UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 14 AS parent_id, -154.00455618899247 AS "Estimator" UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 5 AS depth, 14 AS parent_id, -115.341340586494 AS "Estimator" UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 17 AS parent_id, 47.67828747304395 AS "Estimator" UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 19 AS parent_id, 87.98997921876722 AS "Estimator" UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 19 AS parent_id, 116.79666144845507 AS "Estimator" UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 23 AS parent_id, -358.03194560281815 AS "Estimator" UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 26 AS parent_id, -32.643905722409684 AS "Estimator" UNION ALL SELECT 28 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 26 AS parent_id, 27.134714752359923 AS "Estimator" UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 29 AS parent_id, -91.77495374584724 AS "Estimator" UNION ALL SELECT 31 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 5 AS depth, 29 AS parent_id, -113.8641836603018 AS "Estimator" UNION ALL SELECT 35 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 34 AS parent_id, 286.61850436114156 AS "Estimator" UNION ALL SELECT 36 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 34 AS parent_id, 208.53722848221796 AS "Estimator" UNION ALL SELECT 38 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 37 AS parent_id, 390.42475711953045 AS "Estimator" UNION ALL SELECT 39 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 37 AS parent_id, 459.9324062532205 AS "Estimator" UNION ALL SELECT 42 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 41 AS parent_id, 158.76605917069207 AS "Estimator" UNION ALL SELECT 43 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 41 AS parent_id, 110.7850991913765 AS "Estimator" UNION ALL SELECT 45 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 44 AS parent_id, -120.06152120377035 AS "Estimator" UNION ALL SELECT 46 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 5 AS depth, 44 AS parent_id, 7.986732105095576 AS "Estimator") AS "Values"), 
"DT_Output_13" AS 
(SELECT "DT_node_lookup_13"."KEY" AS "KEY", "DT_node_lookup_13".node_id_2 AS node_id_2, "DT_node_data_13".node_id AS node_id, "DT_node_data_13".feature AS feature, "DT_node_data_13".threshold AS threshold, "DT_node_data_13".count AS count, "DT_node_data_13".depth AS depth, "DT_node_data_13".parent_id AS parent_id, "DT_node_data_13"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_13" LEFT OUTER JOIN "DT_node_data_13" ON "DT_node_lookup_13".node_id_2 = "DT_node_data_13".node_id), 
"BAG_Tree_13" AS 
(SELECT "DT_Output_13"."KEY" AS "KEY", "DT_Output_13"."Estimator" AS "Estimator" 
FROM "DT_Output_13"), 
"DT_node_lookup_14" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_214" <= 0.10535271465778351) THEN CASE WHEN ("ADS"."Feature_138" <= -0.7740499973297119) THEN CASE WHEN ("ADS"."Feature_175" <= -0.006521999835968018) THEN CASE WHEN ("ADS"."Feature_396" <= 0.6243563890457153) THEN CASE WHEN ("ADS"."Feature_37" <= 1.6799795627593994) THEN 5 ELSE 6 END ELSE 7 END ELSE CASE WHEN ("ADS"."Feature_435" <= 0.74693763256073) THEN CASE WHEN ("ADS"."Feature_188" <= 0.4873126745223999) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_374" <= 1.018677830696106) THEN 13 ELSE 14 END END END ELSE CASE WHEN ("ADS"."Feature_154" <= -0.14156241714954376) THEN CASE WHEN ("ADS"."Feature_429" <= -0.6009477376937866) THEN CASE WHEN ("ADS"."Feature_364" <= -0.14488635957241058) THEN 18 ELSE 19 END ELSE CASE WHEN ("ADS"."Feature_393" <= 0.4108203947544098) THEN 21 ELSE 22 END END ELSE CASE WHEN ("ADS"."Feature_306" <= 1.8105355501174927) THEN CASE WHEN ("ADS"."Feature_466" <= -0.7742030024528503) THEN 25 ELSE 26 END ELSE 27 END END END ELSE CASE WHEN ("ADS"."Feature_212" <= 0.757601797580719) THEN CASE WHEN ("ADS"."Feature_159" <= -0.45480215549468994) THEN CASE WHEN ("ADS"."Feature_407" <= -0.2641559839248657) THEN CASE WHEN ("ADS"."Feature_107" <= -0.2589108943939209) THEN 32 ELSE 33 END ELSE CASE WHEN ("ADS"."Feature_213" <= -0.45791858434677124) THEN 35 ELSE 36 END END ELSE CASE WHEN ("ADS"."Feature_84" <= -0.6847070455551147) THEN CASE WHEN ("ADS"."Feature_267" <= 1.012837290763855) THEN 39 ELSE 40 END ELSE CASE WHEN ("ADS"."Feature_433" <= 0.460310161113739) THEN 42 ELSE 43 END END END ELSE CASE WHEN ("ADS"."Feature_344" <= 0.17521238327026367) THEN CASE WHEN ("ADS"."Feature_457" <= -0.1918630301952362) THEN 46 ELSE CASE WHEN ("ADS"."Feature_326" <= -0.09592430293560028) THEN 48 ELSE 49 END END ELSE CASE WHEN ("ADS"."Feature_389" <= 0.18919602036476135) THEN CASE WHEN ("ADS"."Feature_418" <= -0.12679526209831238) THEN 52 ELSE 53 END ELSE 54 END END END END AS node_id_2 
FROM "RandomReg_500" AS "ADS"), 
"DT_node_data_14" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 5 AS depth, 4 AS parent_id, -257.1868877304432 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 4 AS parent_id, -326.6783761064045 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 3 AS parent_id, -457.6699707484207 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 9 AS parent_id, -185.64573585542504 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 9 AS parent_id, -193.1994069334645 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 12 AS parent_id, -104.85768264007177 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 12 AS parent_id, -82.33677570257825 AS "Estimator" UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 17 AS parent_id, 113.28186019898317 AS "Estimator" UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 17 AS parent_id, 177.85586457018712 AS "Estimator" UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 5 AS depth, 20 AS parent_id, -39.31038966944923 AS "Estimator" UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 20 AS parent_id, 36.03879106685056 AS "Estimator" UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 24 AS parent_id, -230.48583102818432 AS "Estimator" UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 5 AS depth, 24 AS parent_id, -124.6477050814498 AS "Estimator" UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 23 AS parent_id, -16.821269791302385 AS "Estimator" UNION ALL SELECT 32 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 31 AS parent_id, 208.92995572018492 AS "Estimator" UNION ALL SELECT 33 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 31 AS parent_id, 158.55748147510675 AS "Estimator" UNION ALL SELECT 35 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 34 AS parent_id, 16.16477089946953 AS "Estimator" UNION ALL SELECT 36 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 5 AS depth, 34 AS parent_id, 102.2860430529275 AS "Estimator" UNION ALL SELECT 39 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 38 AS parent_id, -120.06152120377035 AS "Estimator" UNION ALL SELECT 40 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 38 AS parent_id, -71.39969559286752 AS "Estimator" UNION ALL SELECT 42 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 41 AS parent_id, -24.296829677315834 AS "Estimator" UNION ALL SELECT 43 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 41 AS parent_id, 25.06245497768749 AS "Estimator" UNION ALL SELECT 46 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 45 AS parent_id, 459.9324062532205 AS "Estimator" UNION ALL SELECT 48 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 47 AS parent_id, 533.6514679619586 AS "Estimator" UNION ALL SELECT 49 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 47 AS parent_id, 605.6206481037917 AS "Estimator" UNION ALL SELECT 52 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 51 AS parent_id, 263.4944951132128 AS "Estimator" UNION ALL SELECT 53 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 51 AS parent_id, 286.61850436114156 AS "Estimator" UNION ALL SELECT 54 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 50 AS parent_id, 390.42475711953045 AS "Estimator") AS "Values"), 
"DT_Output_14" AS 
(SELECT "DT_node_lookup_14"."KEY" AS "KEY", "DT_node_lookup_14".node_id_2 AS node_id_2, "DT_node_data_14".node_id AS node_id, "DT_node_data_14".feature AS feature, "DT_node_data_14".threshold AS threshold, "DT_node_data_14".count AS count, "DT_node_data_14".depth AS depth, "DT_node_data_14".parent_id AS parent_id, "DT_node_data_14"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_14" LEFT OUTER JOIN "DT_node_data_14" ON "DT_node_lookup_14".node_id_2 = "DT_node_data_14".node_id), 
"BAG_Tree_14" AS 
(SELECT "DT_Output_14"."KEY" AS "KEY", "DT_Output_14"."Estimator" AS "Estimator" 
FROM "DT_Output_14"), 
"DT_node_lookup_15" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_234" <= 1.871979832649231) THEN CASE WHEN ("ADS"."Feature_214" <= -0.4828032851219177) THEN CASE WHEN ("ADS"."Feature_182" <= 0.38412582874298096) THEN CASE WHEN ("ADS"."Feature_319" <= 1.0032588243484497) THEN CASE WHEN ("ADS"."Feature_33" <= -0.40840160846710205) THEN 5 ELSE 6 END ELSE CASE WHEN ("ADS"."Feature_489" <= -1.0019252300262451) THEN 8 ELSE 9 END END ELSE CASE WHEN ("ADS"."Feature_130" <= 1.3388092517852783) THEN CASE WHEN ("ADS"."Feature_220" <= -1.468845009803772) THEN 12 ELSE 13 END ELSE 14 END END ELSE CASE WHEN ("ADS"."Feature_50" <= 1.2005727291107178) THEN CASE WHEN ("ADS"."Feature_177" <= 0.6753518581390381) THEN CASE WHEN ("ADS"."Feature_35" <= -0.29734334349632263) THEN 18 ELSE 19 END ELSE CASE WHEN ("ADS"."Feature_96" <= 0.6238335371017456) THEN 21 ELSE 22 END END ELSE CASE WHEN ("ADS"."Feature_350" <= 0.928534746170044) THEN CASE WHEN ("ADS"."Feature_389" <= -0.005447596311569214) THEN 25 ELSE 26 END ELSE 27 END END END ELSE CASE WHEN ("ADS"."Feature_289" <= -1.083317518234253) THEN 29 ELSE CASE WHEN ("ADS"."Feature_478" <= 0.031126894056797028) THEN CASE WHEN ("ADS"."Feature_16" <= 0.20160941779613495) THEN 32 ELSE 33 END ELSE CASE WHEN ("ADS"."Feature_282" <= -0.8762145638465881) THEN 35 ELSE 36 END END END END AS node_id_2 
FROM "RandomReg_500" AS "ADS"), 
"DT_node_data_15" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 5 AS depth, 4 AS parent_id, -135.07465895762704 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 5 AS depth, 4 AS parent_id, -200.47045064568235 AS "Estimator" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 7 AS parent_id, 87.98997921876722 AS "Estimator" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 7 AS parent_id, -16.821269791302385 AS "Estimator" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 11 AS parent_id, -269.43151283994393 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 11 AS parent_id, -327.36494809223217 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 10 AS parent_id, -457.6699707484207 AS "Estimator" UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 5 AS depth, 17 AS parent_id, 96.78680229817586 AS "Estimator" UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 5 AS depth, 17 AS parent_id, -0.8899510806777373 AS "Estimator" UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 20 AS parent_id, -113.19824465510118 AS "Estimator" UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 20 AS parent_id, -40.65413671379875 AS "Estimator" UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 24 AS parent_id, 286.61850436114156 AS "Estimator" UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 24 AS parent_id, 204.97892147080455 AS "Estimator" UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 23 AS parent_id, 605.6206481037917 AS "Estimator" UNION ALL SELECT 29 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, 28 AS parent_id, 85.4281804923287 AS "Estimator" UNION ALL SELECT 32 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 31 AS parent_id, 390.4247571195304 AS "Estimator" UNION ALL SELECT 33 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 31 AS parent_id, 459.9324062532205 AS "Estimator" UNION ALL SELECT 35 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 34 AS parent_id, 547.3010428702067 AS "Estimator" UNION ALL SELECT 36 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 34 AS parent_id, 533.6514679619586 AS "Estimator") AS "Values"), 
"DT_Output_15" AS 
(SELECT "DT_node_lookup_15"."KEY" AS "KEY", "DT_node_lookup_15".node_id_2 AS node_id_2, "DT_node_data_15".node_id AS node_id, "DT_node_data_15".feature AS feature, "DT_node_data_15".threshold AS threshold, "DT_node_data_15".count AS count, "DT_node_data_15".depth AS depth, "DT_node_data_15".parent_id AS parent_id, "DT_node_data_15"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_15" LEFT OUTER JOIN "DT_node_data_15" ON "DT_node_lookup_15".node_id_2 = "DT_node_data_15".node_id), 
"BAG_Tree_15" AS 
(SELECT "DT_Output_15"."KEY" AS "KEY", "DT_Output_15"."Estimator" AS "Estimator" 
FROM "DT_Output_15")
 INSERT INTO "TMP_20180329231911_RE475O_BAG_AVG_B1" ("KEY", "Estimator") SELECT "BAG_AVG_B1"."KEY", "BAG_AVG_B1"."Estimator" 
FROM (SELECT "BAG_AVG_esu_1"."KEY" AS "KEY", "BAG_AVG_esu_1"."Estimator" AS "Estimator" 
FROM (SELECT "BAG_Tree_10"."KEY" AS "KEY", "BAG_Tree_10"."Estimator" AS "Estimator" 
FROM "BAG_Tree_10" UNION ALL SELECT "BAG_Tree_11"."KEY" AS "KEY", "BAG_Tree_11"."Estimator" AS "Estimator" 
FROM "BAG_Tree_11" UNION ALL SELECT "BAG_Tree_12"."KEY" AS "KEY", "BAG_Tree_12"."Estimator" AS "Estimator" 
FROM "BAG_Tree_12" UNION ALL SELECT "BAG_Tree_13"."KEY" AS "KEY", "BAG_Tree_13"."Estimator" AS "Estimator" 
FROM "BAG_Tree_13" UNION ALL SELECT "BAG_Tree_14"."KEY" AS "KEY", "BAG_Tree_14"."Estimator" AS "Estimator" 
FROM "BAG_Tree_14" UNION ALL SELECT "BAG_Tree_15"."KEY" AS "KEY", "BAG_Tree_15"."Estimator" AS "Estimator" 
FROM "BAG_Tree_15") AS "BAG_AVG_esu_1") AS "BAG_AVG_B1"
-- Code For temporary table TMP_20180329231911_0W5CWK_BAG_AVG_Union part 1/2. Create 


CREATE TEMPORARY TABLE "TMP_20180329231911_0W5CWK_BAG_AVG_Union" (
	"KEY" BIGINT, 
	"Estimator" FLOAT
)


-- Code For temporary table TMP_20180329231911_0W5CWK_BAG_AVG_Union part 2/2. Populate

INSERT INTO "TMP_20180329231911_0W5CWK_BAG_AVG_Union" ("KEY", "Estimator") SELECT "BAG_AVG_Union"."KEY", "BAG_AVG_Union"."Estimator" 
FROM (SELECT "BAG_AVG_EnsembleUnion"."KEY" AS "KEY", "BAG_AVG_EnsembleUnion"."Estimator" AS "Estimator" 
FROM (SELECT "BAG_AVG_B0"."KEY" AS "KEY", "BAG_AVG_B0"."Estimator" AS "Estimator" 
FROM "TMP_20180329231910_B76XIY_BAG_AVG_B0" AS "BAG_AVG_B0" UNION ALL SELECT "BAG_AVG_B1"."KEY" AS "KEY", "BAG_AVG_B1"."Estimator" AS "Estimator" 
FROM "TMP_20180329231911_RE475O_BAG_AVG_B1" AS "BAG_AVG_B1") AS "BAG_AVG_EnsembleUnion") AS "BAG_AVG_Union"

-- Model deployment code

WITH "BAG_AVG_avg" AS 
(SELECT "T"."KEY" AS "KEY", "T"."Estimator" AS "Estimator" 
FROM (SELECT "BAG_AVG_Union"."KEY" AS "KEY", avg(CAST("BAG_AVG_Union"."Estimator" AS FLOAT)) AS "Estimator" 
FROM "TMP_20180329231911_0W5CWK_BAG_AVG_Union" AS "BAG_AVG_Union" GROUP BY "BAG_AVG_Union"."KEY") AS "T")
 SELECT "BAG_AVG_avg"."KEY" AS "KEY", "BAG_AVG_avg"."Estimator" AS "Estimator" 
FROM "BAG_AVG_avg"