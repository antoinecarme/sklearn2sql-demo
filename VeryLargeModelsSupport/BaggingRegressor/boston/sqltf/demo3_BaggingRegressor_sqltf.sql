-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2018

-- This SQL code can contain one or more statements, to be executed in the order they appear in this file.


-- Code For temporary table TMP_20180329232002_KAZCEI_BAG_AVG_B0 part 1/2. Create 


CREATE TEMPORARY TABLE "TMP_20180329232002_KAZCEI_BAG_AVG_B0" (
	"KEY" BIGINT, 
	"Estimator" FLOAT
)


-- Code For temporary table TMP_20180329232002_KAZCEI_BAG_AVG_B0 part 2/2. Populate

WITH "DT_node_lookup" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_5" <= 6.945000171661377) THEN CASE WHEN ("ADS"."Feature_12" <= 14.805000305175781) THEN CASE WHEN ("ADS"."Feature_7" <= 1.2271499633789062) THEN 3 ELSE CASE WHEN ("ADS"."Feature_5" <= 6.531000137329102) THEN CASE WHEN ("ADS"."Feature_12" <= 11.28499984741211) THEN 6 ELSE 7 END ELSE CASE WHEN ("ADS"."Feature_12" <= 7.039999961853027) THEN 9 ELSE 10 END END END ELSE CASE WHEN ("ADS"."Feature_4" <= 0.6030000448226929) THEN CASE WHEN ("ADS"."Feature_5" <= 6.614500045776367) THEN CASE WHEN ("ADS"."Feature_0" <= 0.5538100004196167) THEN 14 ELSE 15 END ELSE 16 END ELSE CASE WHEN ("ADS"."Feature_12" <= 19.494998931884766) THEN CASE WHEN ("ADS"."Feature_0" <= 12.223600387573242) THEN 19 ELSE 20 END ELSE CASE WHEN ("ADS"."Feature_0" <= 11.486350059509277) THEN 22 ELSE 23 END END END END ELSE CASE WHEN ("ADS"."Feature_5" <= 7.470000267028809) THEN CASE WHEN ("ADS"."Feature_4" <= 0.659000039100647) THEN CASE WHEN ("ADS"."Feature_9" <= 267.0) THEN CASE WHEN ("ADS"."Feature_0" <= 0.7443850040435791) THEN 28 ELSE 29 END ELSE CASE WHEN ("ADS"."Feature_6" <= 78.94999694824219) THEN 31 ELSE 32 END END ELSE CASE WHEN ("ADS"."Feature_11" <= 386.385009765625) THEN 34 ELSE 35 END END ELSE CASE WHEN ("ADS"."Feature_11" <= 361.92498779296875) THEN 37 ELSE CASE WHEN ("ADS"."Feature_7" <= 6.077500343322754) THEN CASE WHEN ("ADS"."Feature_10" <= 17.899999618530273) THEN 40 ELSE 41 END ELSE CASE WHEN ("ADS"."Feature_8" <= 4.5) THEN 43 ELSE 44 END END END END END AS node_id_2 
FROM boston AS "ADS"), 
"DT_node_data" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 2 AS parent_id, 50.0 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 58 AS count, 5 AS depth, 5 AS parent_id, 22.318987341772154 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 55 AS count, 5 AS depth, 5 AS parent_id, 20.07999999999999 AS "Estimator" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 5 AS depth, 8 AS parent_id, 29.595238095238095 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS count, 5 AS depth, 8 AS parent_id, 24.57 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 5 AS depth, 13 AS parent_id, 19.62222222222222 AS "Estimator" UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 5 AS depth, 13 AS parent_id, 15.331578947368422 AS "Estimator" UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 12 AS parent_id, 27.5 AS "Estimator" UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 5 AS depth, 18 AS parent_id, 15.753333333333336 AS "Estimator" UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 18 AS parent_id, 11.674999999999999 AS "Estimator" UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 5 AS depth, 21 AS parent_id, 12.606666666666666 AS "Estimator" UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 14 AS count, 5 AS depth, 21 AS parent_id, 9.77727272727273 AS "Estimator" UNION ALL SELECT 28 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 5 AS depth, 27 AS parent_id, 35.25 AS "Estimator" UNION ALL SELECT 29 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 27 AS parent_id, 31.0 AS "Estimator" UNION ALL SELECT 31 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 5 AS depth, 30 AS parent_id, 32.18 AS "Estimator" UNION ALL SELECT 32 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 30 AS parent_id, 23.6 AS "Estimator" UNION ALL SELECT 34 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 33 AS parent_id, 17.8 AS "Estimator" UNION ALL SELECT 35 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 33 AS parent_id, 15.0 AS "Estimator" UNION ALL SELECT 37 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 36 AS parent_id, 21.9 AS "Estimator" UNION ALL SELECT 40 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 14 AS count, 5 AS depth, 39 AS parent_id, 48.26 AS "Estimator" UNION ALL SELECT 41 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 39 AS parent_id, 38.7 AS "Estimator" UNION ALL SELECT 43 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 42 AS parent_id, 42.3 AS "Estimator" UNION ALL SELECT 44 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 42 AS parent_id, 42.8 AS "Estimator") AS "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".node_id AS node_id, "DT_node_data".feature AS feature, "DT_node_data".threshold AS threshold, "DT_node_data".count AS count, "DT_node_data".depth AS depth, "DT_node_data".parent_id AS parent_id, "DT_node_data"."Estimator" AS "Estimator" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".node_id), 
"BAG_Tree_0" AS 
(SELECT "DT_Output"."KEY" AS "KEY", "DT_Output"."Estimator" AS "Estimator" 
FROM "DT_Output"), 
"DT_node_lookup_1" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_12" <= 9.755000114440918) THEN CASE WHEN ("ADS"."Feature_5" <= 7.433000087738037) THEN CASE WHEN ("ADS"."Feature_7" <= 1.4849499464035034) THEN 3 ELSE CASE WHEN ("ADS"."Feature_5" <= 6.528500080108643) THEN CASE WHEN ("ADS"."Feature_10" <= 20.600000381469727) THEN 6 ELSE 7 END ELSE CASE WHEN ("ADS"."Feature_2" <= 8.484999656677246) THEN 9 ELSE 10 END END END ELSE CASE WHEN ("ADS"."Feature_10" <= 19.100000381469727) THEN CASE WHEN ("ADS"."Feature_8" <= 6.5) THEN CASE WHEN ("ADS"."Feature_5" <= 7.825500011444092) THEN 14 ELSE 15 END ELSE CASE WHEN ("ADS"."Feature_12" <= 3.5250000953674316) THEN 17 ELSE 18 END END ELSE 19 END END ELSE CASE WHEN ("ADS"."Feature_12" <= 19.850000381469727) THEN CASE WHEN ("ADS"."Feature_5" <= 6.80049991607666) THEN CASE WHEN ("ADS"."Feature_10" <= 19.650001525878906) THEN CASE WHEN ("ADS"."Feature_12" <= 18.974998474121094) THEN 24 ELSE 25 END ELSE CASE WHEN ("ADS"."Feature_12" <= 14.90999984741211) THEN 27 ELSE 28 END END ELSE CASE WHEN ("ADS"."Feature_1" <= 25.0) THEN CASE WHEN ("ADS"."Feature_5" <= 6.929500102996826) THEN 31 ELSE 32 END ELSE 33 END END ELSE CASE WHEN ("ADS"."Feature_9" <= 551.5) THEN CASE WHEN ("ADS"."Feature_10" <= 20.049999237060547) THEN CASE WHEN ("ADS"."Feature_11" <= 389.16998291015625) THEN 37 ELSE 38 END ELSE CASE WHEN ("ADS"."Feature_12" <= 22.739999771118164) THEN 40 ELSE 41 END END ELSE CASE WHEN ("ADS"."Feature_7" <= 1.4128000736236572) THEN CASE WHEN ("ADS"."Feature_7" <= 1.3720500469207764) THEN 44 ELSE 45 END ELSE CASE WHEN ("ADS"."Feature_7" <= 2.046450138092041) THEN 47 ELSE 48 END END END END END AS node_id_2 
FROM boston AS "ADS"), 
"DT_node_data_1" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 2 AS parent_id, 50.0 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 39 AS count, 5 AS depth, 5 AS parent_id, 23.35652173913044 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 5 AS depth, 5 AS parent_id, 18.988888888888894 AS "Estimator" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 42 AS count, 5 AS depth, 8 AS parent_id, 30.281538461538467 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 5 AS depth, 8 AS parent_id, 24.358333333333334 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 5 AS depth, 13 AS parent_id, 45.53333333333334 AS "Estimator" UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 5 AS depth, 13 AS parent_id, 49.82857142857143 AS "Estimator" UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 16 AS parent_id, 37.6 AS "Estimator" UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 16 AS parent_id, 45.43333333333334 AS "Estimator" UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 11 AS parent_id, 21.9 AS "Estimator" UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 47 AS count, 5 AS depth, 23 AS parent_id, 20.63866666666667 AS "Estimator" UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 23 AS parent_id, 27.1 AS "Estimator" UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 29 AS count, 5 AS depth, 26 AS parent_id, 19.554761904761907 AS "Estimator" UNION ALL SELECT 28 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 27 AS count, 5 AS depth, 26 AS parent_id, 15.374285714285712 AS "Estimator" UNION ALL SELECT 31 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 30 AS parent_id, 27.5 AS "Estimator" UNION ALL SELECT 32 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 30 AS parent_id, 30.599999999999998 AS "Estimator" UNION ALL SELECT 33 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 29 AS parent_id, 22.0 AS "Estimator" UNION ALL SELECT 37 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 36 AS parent_id, 17.01666666666667 AS "Estimator" UNION ALL SELECT 38 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 5 AS depth, 36 AS parent_id, 14.654545454545454 AS "Estimator" UNION ALL SELECT 40 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 39 AS parent_id, 13.444444444444445 AS "Estimator" UNION ALL SELECT 41 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 39 AS parent_id, 14.2 AS "Estimator" UNION ALL SELECT 44 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 43 AS parent_id, 13.575000000000001 AS "Estimator" UNION ALL SELECT 45 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 43 AS parent_id, 11.649999999999999 AS "Estimator" UNION ALL SELECT 47 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 5 AS depth, 46 AS parent_id, 8.657142857142857 AS "Estimator" UNION ALL SELECT 48 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 46 AS parent_id, 13.333333333333334 AS "Estimator") AS "Values"), 
"DT_Output_1" AS 
(SELECT "DT_node_lookup_1"."KEY" AS "KEY", "DT_node_lookup_1".node_id_2 AS node_id_2, "DT_node_data_1".node_id AS node_id, "DT_node_data_1".feature AS feature, "DT_node_data_1".threshold AS threshold, "DT_node_data_1".count AS count, "DT_node_data_1".depth AS depth, "DT_node_data_1".parent_id AS parent_id, "DT_node_data_1"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_1" LEFT OUTER JOIN "DT_node_data_1" ON "DT_node_lookup_1".node_id_2 = "DT_node_data_1".node_id), 
"BAG_Tree_1" AS 
(SELECT "DT_Output_1"."KEY" AS "KEY", "DT_Output_1"."Estimator" AS "Estimator" 
FROM "DT_Output_1"), 
"DT_node_lookup_2" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_5" <= 6.977999687194824) THEN CASE WHEN ("ADS"."Feature_12" <= 14.805000305175781) THEN CASE WHEN ("ADS"."Feature_7" <= 1.2271499633789062) THEN 3 ELSE CASE WHEN ("ADS"."Feature_5" <= 6.5295000076293945) THEN CASE WHEN ("ADS"."Feature_12" <= 7.569999694824219) THEN 6 ELSE 7 END ELSE CASE WHEN ("ADS"."Feature_12" <= 4.654999732971191) THEN 9 ELSE 10 END END END ELSE CASE WHEN ("ADS"."Feature_12" <= 19.850000381469727) THEN CASE WHEN ("ADS"."Feature_4" <= 0.6629999876022339) THEN CASE WHEN ("ADS"."Feature_6" <= 99.4000015258789) THEN 14 ELSE 15 END ELSE CASE WHEN ("ADS"."Feature_0" <= 12.223600387573242) THEN 17 ELSE 18 END END ELSE CASE WHEN ("ADS"."Feature_7" <= 1.5518500804901123) THEN CASE WHEN ("ADS"."Feature_0" <= 16.577350616455078) THEN 21 ELSE 22 END ELSE CASE WHEN ("ADS"."Feature_4" <= 0.596500039100647) THEN 24 ELSE 25 END END END END ELSE CASE WHEN ("ADS"."Feature_5" <= 7.437000274658203) THEN CASE WHEN ("ADS"."Feature_4" <= 0.659000039100647) THEN CASE WHEN ("ADS"."Feature_6" <= 83.19999694824219) THEN CASE WHEN ("ADS"."Feature_11" <= 391.135009765625) THEN 30 ELSE 31 END ELSE CASE WHEN ("ADS"."Feature_0" <= 0.42114999890327454) THEN 33 ELSE 34 END END ELSE 35 END ELSE CASE WHEN ("ADS"."Feature_0" <= 0.5768150091171265) THEN CASE WHEN ("ADS"."Feature_2" <= 1.2450000047683716) THEN 38 ELSE CASE WHEN ("ADS"."Feature_1" <= 10.0) THEN 40 ELSE 41 END END ELSE 42 END END END AS node_id_2 
FROM boston AS "ADS"), 
"DT_node_data_2" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 2 AS parent_id, 50.0 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 21 AS count, 5 AS depth, 5 AS parent_id, 23.671428571428574 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 85 AS count, 5 AS depth, 5 AS parent_id, 20.3 AS "Estimator" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 5 AS depth, 8 AS parent_id, 31.518181818181816 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 28 AS count, 5 AS depth, 8 AS parent_id, 26.41176470588236 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 5 AS depth, 13 AS parent_id, 18.125925925925927 AS "Estimator" UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 13 AS parent_id, 27.5 AS "Estimator" UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 5 AS depth, 16 AS parent_id, 15.490909090909089 AS "Estimator" UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 16 AS parent_id, 11.816666666666665 AS "Estimator" UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS count, 5 AS depth, 20 AS parent_id, 14.338888888888887 AS "Estimator" UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 20 AS parent_id, 11.266666666666666 AS "Estimator" UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 23 AS parent_id, 16.566666666666666 AS "Estimator" UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 5 AS depth, 23 AS parent_id, 8.908695652173915 AS "Estimator" UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 5 AS depth, 29 AS parent_id, 31.314285714285713 AS "Estimator" UNION ALL SELECT 31 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 5 AS depth, 29 AS parent_id, 33.99565217391305 AS "Estimator" UNION ALL SELECT 33 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 32 AS parent_id, 23.6 AS "Estimator" UNION ALL SELECT 34 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 32 AS parent_id, 30.8 AS "Estimator" UNION ALL SELECT 35 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 27 AS parent_id, 15.0 AS "Estimator" UNION ALL SELECT 38 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 37 AS parent_id, 50.0 AS "Estimator" UNION ALL SELECT 40 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 5 AS depth, 39 AS parent_id, 40.7 AS "Estimator" UNION ALL SELECT 41 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 5 AS depth, 39 AS parent_id, 43.49090909090909 AS "Estimator" UNION ALL SELECT 42 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 36 AS parent_id, 50.0 AS "Estimator") AS "Values"), 
"DT_Output_2" AS 
(SELECT "DT_node_lookup_2"."KEY" AS "KEY", "DT_node_lookup_2".node_id_2 AS node_id_2, "DT_node_data_2".node_id AS node_id, "DT_node_data_2".feature AS feature, "DT_node_data_2".threshold AS threshold, "DT_node_data_2".count AS count, "DT_node_data_2".depth AS depth, "DT_node_data_2".parent_id AS parent_id, "DT_node_data_2"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_2" LEFT OUTER JOIN "DT_node_data_2" ON "DT_node_lookup_2".node_id_2 = "DT_node_data_2".node_id), 
"BAG_Tree_2" AS 
(SELECT "DT_Output_2"."KEY" AS "KEY", "DT_Output_2"."Estimator" AS "Estimator" 
FROM "DT_Output_2"), 
"DT_node_lookup_3" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_5" <= 6.833000183105469) THEN CASE WHEN ("ADS"."Feature_12" <= 14.90999984741211) THEN CASE WHEN ("ADS"."Feature_7" <= 1.384850025177002) THEN CASE WHEN ("ADS"."Feature_5" <= 5.741499900817871) THEN 4 ELSE 5 END ELSE CASE WHEN ("ADS"."Feature_12" <= 9.690000534057617) THEN CASE WHEN ("ADS"."Feature_5" <= 6.541999816894531) THEN 8 ELSE 9 END ELSE CASE WHEN ("ADS"."Feature_9" <= 281.5) THEN 11 ELSE 12 END END END ELSE CASE WHEN ("ADS"."Feature_10" <= 19.650001525878906) THEN CASE WHEN ("ADS"."Feature_6" <= 93.35000610351562) THEN CASE WHEN ("ADS"."Feature_0" <= 0.3039100170135498) THEN 16 ELSE 17 END ELSE CASE WHEN ("ADS"."Feature_7" <= 1.4932500123977661) THEN 19 ELSE 20 END END ELSE CASE WHEN ("ADS"."Feature_12" <= 21.420000076293945) THEN CASE WHEN ("ADS"."Feature_0" <= 11.6673002243042) THEN 23 ELSE 24 END ELSE CASE WHEN ("ADS"."Feature_0" <= 34.69715118408203) THEN 26 ELSE 27 END END END END ELSE CASE WHEN ("ADS"."Feature_5" <= 7.437000274658203) THEN CASE WHEN ("ADS"."Feature_4" <= 0.659000039100647) THEN CASE WHEN ("ADS"."Feature_9" <= 267.0) THEN CASE WHEN ("ADS"."Feature_5" <= 6.9110002517700195) THEN 32 ELSE 33 END ELSE CASE WHEN ("ADS"."Feature_6" <= 76.05000305175781) THEN 35 ELSE 36 END END ELSE CASE WHEN ("ADS"."Feature_7" <= 1.8845000267028809) THEN 38 ELSE 39 END END ELSE CASE WHEN ("ADS"."Feature_10" <= 14.799999237060547) THEN CASE WHEN ("ADS"."Feature_12" <= 5.514999866485596) THEN 42 ELSE CASE WHEN ("ADS"."Feature_4" <= 0.6110000014305115) THEN 44 ELSE 45 END END ELSE CASE WHEN ("ADS"."Feature_11" <= 394.54498291015625) THEN CASE WHEN ("ADS"."Feature_12" <= 4.295000076293945) THEN 48 ELSE 49 END ELSE CASE WHEN ("ADS"."Feature_8" <= 5.0) THEN 51 ELSE 52 END END END END END AS node_id_2 
FROM boston AS "ADS"), 
"DT_node_data_3" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 3 AS parent_id, 27.9 AS "Estimator" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 4 AS depth, 3 AS parent_id, 50.0 AS "Estimator" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 41 AS count, 5 AS depth, 7 AS parent_id, 23.268852459016397 AS "Estimator" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 5 AS depth, 7 AS parent_id, 27.243333333333332 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 5 AS depth, 10 AS parent_id, 21.868000000000002 AS "Estimator" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 53 AS count, 5 AS depth, 10 AS parent_id, 19.684042553191485 AS "Estimator" UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 5 AS depth, 15 AS parent_id, 21.09375 AS "Estimator" UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 15 AS parent_id, 17.625 AS "Estimator" UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 5 AS depth, 18 AS parent_id, 13.950000000000001 AS "Estimator" UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 5 AS depth, 18 AS parent_id, 16.344444444444445 AS "Estimator" UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 27 AS count, 5 AS depth, 22 AS parent_id, 15.072500000000002 AS "Estimator" UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 5 AS depth, 22 AS parent_id, 12.436363636363636 AS "Estimator" UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 20 AS count, 5 AS depth, 25 AS parent_id, 10.924999999999999 AS "Estimator" UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 25 AS parent_id, 5.666666666666667 AS "Estimator" UNION ALL SELECT 32 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 31 AS parent_id, 31.049999999999997 AS "Estimator" UNION ALL SELECT 33 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS count, 5 AS depth, 31 AS parent_id, 35.39473684210526 AS "Estimator" UNION ALL SELECT 35 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 5 AS depth, 34 AS parent_id, 30.638461538461538 AS "Estimator" UNION ALL SELECT 36 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 5 AS depth, 34 AS parent_id, 25.642857142857142 AS "Estimator" UNION ALL SELECT 38 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 37 AS parent_id, 15.0 AS "Estimator" UNION ALL SELECT 39 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 37 AS parent_id, 17.8 AS "Estimator" UNION ALL SELECT 42 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 4 AS depth, 41 AS parent_id, 50.0 AS "Estimator" UNION ALL SELECT 44 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 43 AS parent_id, 50.0 AS "Estimator" UNION ALL SELECT 45 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 43 AS parent_id, 48.8 AS "Estimator" UNION ALL SELECT 48 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 5 AS depth, 47 AS parent_id, 44.82727272727273 AS "Estimator" UNION ALL SELECT 49 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 47 AS parent_id, 50.0 AS "Estimator" UNION ALL SELECT 51 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 50 AS parent_id, 39.43333333333333 AS "Estimator" UNION ALL SELECT 52 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 50 AS parent_id, 42.8 AS "Estimator") AS "Values"), 
"DT_Output_3" AS 
(SELECT "DT_node_lookup_3"."KEY" AS "KEY", "DT_node_lookup_3".node_id_2 AS node_id_2, "DT_node_data_3".node_id AS node_id, "DT_node_data_3".feature AS feature, "DT_node_data_3".threshold AS threshold, "DT_node_data_3".count AS count, "DT_node_data_3".depth AS depth, "DT_node_data_3".parent_id AS parent_id, "DT_node_data_3"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_3" LEFT OUTER JOIN "DT_node_data_3" ON "DT_node_lookup_3".node_id_2 = "DT_node_data_3".node_id), 
"BAG_Tree_3" AS 
(SELECT "DT_Output_3"."KEY" AS "KEY", "DT_Output_3"."Estimator" AS "Estimator" 
FROM "DT_Output_3"), 
"DT_node_lookup_4" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_5" <= 7.4160003662109375) THEN CASE WHEN ("ADS"."Feature_12" <= 14.050000190734863) THEN CASE WHEN ("ADS"."Feature_5" <= 6.546999931335449) THEN CASE WHEN ("ADS"."Feature_7" <= 1.3896501064300537) THEN 4 ELSE CASE WHEN ("ADS"."Feature_12" <= 7.805000305175781) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_6" <= 46.599998474121094) THEN CASE WHEN ("ADS"."Feature_5" <= 6.727499961853027) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_11" <= 390.4649963378906) THEN 13 ELSE 14 END END END ELSE CASE WHEN ("ADS"."Feature_7" <= 2.003700017929077) THEN CASE WHEN ("ADS"."Feature_0" <= 48.288299560546875) THEN CASE WHEN ("ADS"."Feature_0" <= 7.698184967041016) THEN 18 ELSE 19 END ELSE 20 END ELSE CASE WHEN ("ADS"."Feature_0" <= 0.6099550127983093) THEN CASE WHEN ("ADS"."Feature_7" <= 5.570150375366211) THEN 23 ELSE 24 END ELSE CASE WHEN ("ADS"."Feature_6" <= 85.39999389648438) THEN 26 ELSE 27 END END END END ELSE CASE WHEN ("ADS"."Feature_8" <= 6.0) THEN CASE WHEN ("ADS"."Feature_5" <= 7.825500011444092) THEN CASE WHEN ("ADS"."Feature_0" <= 1.0019299983978271) THEN CASE WHEN ("ADS"."Feature_9" <= 230.0) THEN 32 ELSE 33 END ELSE 34 END ELSE 35 END ELSE CASE WHEN ("ADS"."Feature_5" <= 8.149499893188477) THEN CASE WHEN ("ADS"."Feature_5" <= 7.730000019073486) THEN 38 ELSE 39 END ELSE CASE WHEN ("ADS"."Feature_7" <= 3.3663997650146484) THEN 41 ELSE CASE WHEN ("ADS"."Feature_7" <= 6.372550010681152) THEN 43 ELSE 44 END END END END END AS node_id_2 
FROM boston AS "ADS"), 
"DT_node_data_4" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 3 AS parent_id, 50.0 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 24 AS count, 5 AS depth, 5 AS parent_id, 23.684444444444445 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 76 AS count, 5 AS depth, 5 AS parent_id, 20.85238095238096 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 5 AS depth, 9 AS parent_id, 26.68 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 5 AS depth, 9 AS parent_id, 32.7695652173913 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 5 AS depth, 12 AS parent_id, 30.316666666666666 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 5 AS depth, 12 AS parent_id, 24.846874999999997 AS "Estimator" UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 5 AS depth, 17 AS parent_id, 14.558333333333332 AS "Estimator" UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 24 AS count, 5 AS depth, 17 AS parent_id, 11.775 AS "Estimator" UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 16 AS parent_id, 5.0 AS "Estimator" UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 5 AS depth, 22 AS parent_id, 20.500000000000004 AS "Estimator" UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 5 AS depth, 22 AS parent_id, 17.299999999999997 AS "Estimator" UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 5 AS depth, 25 AS parent_id, 18.53076923076923 AS "Estimator" UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 5 AS depth, 25 AS parent_id, 15.412 AS "Estimator" UNION ALL SELECT 32 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 31 AS parent_id, 45.7 AS "Estimator" UNION ALL SELECT 33 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 5 AS depth, 31 AS parent_id, 43.225 AS "Estimator" UNION ALL SELECT 34 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 30 AS parent_id, 50.0 AS "Estimator" UNION ALL SELECT 35 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, 29 AS parent_id, 50.0 AS "Estimator" UNION ALL SELECT 38 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 37 AS parent_id, 33.4 AS "Estimator" UNION ALL SELECT 39 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 37 AS parent_id, 37.6 AS "Estimator" UNION ALL SELECT 41 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 40 AS parent_id, 50.0 AS "Estimator" UNION ALL SELECT 43 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 42 AS parent_id, 41.7 AS "Estimator" UNION ALL SELECT 44 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 42 AS parent_id, 42.8 AS "Estimator") AS "Values"), 
"DT_Output_4" AS 
(SELECT "DT_node_lookup_4"."KEY" AS "KEY", "DT_node_lookup_4".node_id_2 AS node_id_2, "DT_node_data_4".node_id AS node_id, "DT_node_data_4".feature AS feature, "DT_node_data_4".threshold AS threshold, "DT_node_data_4".count AS count, "DT_node_data_4".depth AS depth, "DT_node_data_4".parent_id AS parent_id, "DT_node_data_4"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_4" LEFT OUTER JOIN "DT_node_data_4" ON "DT_node_lookup_4".node_id_2 = "DT_node_data_4".node_id), 
"BAG_Tree_4" AS 
(SELECT "DT_Output_4"."KEY" AS "KEY", "DT_Output_4"."Estimator" AS "Estimator" 
FROM "DT_Output_4"), 
"DT_node_lookup_5" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_5" <= 6.802999973297119) THEN CASE WHEN ("ADS"."Feature_12" <= 14.780000686645508) THEN CASE WHEN ("ADS"."Feature_5" <= 6.593999862670898) THEN CASE WHEN ("ADS"."Feature_12" <= 7.555000305175781) THEN CASE WHEN ("ADS"."Feature_7" <= 4.463799953460693) THEN 5 ELSE 6 END ELSE CASE WHEN ("ADS"."Feature_9" <= 223.5) THEN 8 ELSE 9 END END ELSE CASE WHEN ("ADS"."Feature_2" <= 16.010000228881836) THEN CASE WHEN ("ADS"."Feature_4" <= 0.5289999842643738) THEN 12 ELSE 13 END ELSE 14 END END ELSE CASE WHEN ("ADS"."Feature_9" <= 567.5) THEN CASE WHEN ("ADS"."Feature_0" <= 0.14746499061584473) THEN CASE WHEN ("ADS"."Feature_12" <= 18.540000915527344) THEN 18 ELSE 19 END ELSE CASE WHEN ("ADS"."Feature_6" <= 77.14999389648438) THEN 21 ELSE 22 END END ELSE CASE WHEN ("ADS"."Feature_7" <= 2.003700017929077) THEN CASE WHEN ("ADS"."Feature_4" <= 0.6030000448226929) THEN 25 ELSE 26 END ELSE CASE WHEN ("ADS"."Feature_11" <= 362.0150146484375) THEN 28 ELSE 29 END END END END ELSE CASE WHEN ("ADS"."Feature_5" <= 7.437000274658203) THEN CASE WHEN ("ADS"."Feature_10" <= 19.450000762939453) THEN CASE WHEN ("ADS"."Feature_12" <= 5.494999885559082) THEN CASE WHEN ("ADS"."Feature_12" <= 3.5450000762939453) THEN 34 ELSE 35 END ELSE CASE WHEN ("ADS"."Feature_5" <= 7.010499954223633) THEN 37 ELSE 38 END END ELSE CASE WHEN ("ADS"."Feature_12" <= 14.434999465942383) THEN CASE WHEN ("ADS"."Feature_4" <= 0.593500018119812) THEN 41 ELSE 42 END ELSE 43 END END ELSE CASE WHEN ("ADS"."Feature_5" <= 8.752500534057617) THEN CASE WHEN ("ADS"."Feature_10" <= 15.399999618530273) THEN CASE WHEN ("ADS"."Feature_5" <= 7.760000228881836) THEN 47 ELSE 48 END ELSE CASE WHEN ("ADS"."Feature_11" <= 385.47998046875) THEN 50 ELSE 51 END END ELSE 52 END END END AS node_id_2 
FROM boston AS "ADS"), 
"DT_node_data_5" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 5 AS depth, 4 AS parent_id, 26.009999999999998 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 20 AS count, 5 AS depth, 4 AS parent_id, 23.262500000000003 AS "Estimator" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 7 AS parent_id, 26.0 AS "Estimator" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 73 AS count, 5 AS depth, 7 AS parent_id, 20.872321428571436 AS "Estimator" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS count, 5 AS depth, 11 AS parent_id, 28.080000000000002 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 11 AS parent_id, 21.933333333333334 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 10 AS parent_id, 50.0 AS "Estimator" UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 5 AS depth, 17 AS parent_id, 20.585714285714285 AS "Estimator" UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 17 AS parent_id, 27.100000000000005 AS "Estimator" UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 5 AS depth, 20 AS parent_id, 20.711111111111112 AS "Estimator" UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 22 AS count, 5 AS depth, 20 AS parent_id, 16.172972972972975 AS "Estimator" UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 5 AS depth, 24 AS parent_id, 16.53333333333333 AS "Estimator" UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 22 AS count, 5 AS depth, 24 AS parent_id, 10.075 AS "Estimator" UNION ALL SELECT 28 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 5 AS depth, 27 AS parent_id, 13.360000000000001 AS "Estimator" UNION ALL SELECT 29 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 5 AS depth, 27 AS parent_id, 17.91111111111111 AS "Estimator" UNION ALL SELECT 34 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 33 AS parent_id, 28.866666666666664 AS "Estimator" UNION ALL SELECT 35 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 5 AS depth, 33 AS parent_id, 34.328125 AS "Estimator" UNION ALL SELECT 37 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 5 AS depth, 36 AS parent_id, 26.05 AS "Estimator" UNION ALL SELECT 38 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 5 AS depth, 36 AS parent_id, 33.153333333333336 AS "Estimator" UNION ALL SELECT 41 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 40 AS parent_id, 24.880000000000003 AS "Estimator" UNION ALL SELECT 42 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 40 AS parent_id, 29.8 AS "Estimator" UNION ALL SELECT 43 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 39 AS parent_id, 10.4 AS "Estimator" UNION ALL SELECT 47 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 46 AS parent_id, 44.025 AS "Estimator" UNION ALL SELECT 48 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 5 AS depth, 46 AS parent_id, 49.800000000000004 AS "Estimator" UNION ALL SELECT 50 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 49 AS parent_id, 46.53333333333333 AS "Estimator" UNION ALL SELECT 51 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 5 AS depth, 49 AS parent_id, 41.11818181818182 AS "Estimator" UNION ALL SELECT 52 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 44 AS parent_id, 21.9 AS "Estimator") AS "Values"), 
"DT_Output_5" AS 
(SELECT "DT_node_lookup_5"."KEY" AS "KEY", "DT_node_lookup_5".node_id_2 AS node_id_2, "DT_node_data_5".node_id AS node_id, "DT_node_data_5".feature AS feature, "DT_node_data_5".threshold AS threshold, "DT_node_data_5".count AS count, "DT_node_data_5".depth AS depth, "DT_node_data_5".parent_id AS parent_id, "DT_node_data_5"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_5" LEFT OUTER JOIN "DT_node_data_5" ON "DT_node_lookup_5".node_id_2 = "DT_node_data_5".node_id), 
"BAG_Tree_5" AS 
(SELECT "DT_Output_5"."KEY" AS "KEY", "DT_Output_5"."Estimator" AS "Estimator" 
FROM "DT_Output_5"), 
"DT_node_lookup_6" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_5" <= 7.07450008392334) THEN CASE WHEN ("ADS"."Feature_12" <= 14.795000076293945) THEN CASE WHEN ("ADS"."Feature_7" <= 1.384850025177002) THEN 3 ELSE CASE WHEN ("ADS"."Feature_5" <= 6.593999862670898) THEN CASE WHEN ("ADS"."Feature_5" <= 6.052499771118164) THEN 6 ELSE 7 END ELSE CASE WHEN ("ADS"."Feature_6" <= 44.25) THEN 9 ELSE 10 END END END ELSE CASE WHEN ("ADS"."Feature_4" <= 0.6475000381469727) THEN CASE WHEN ("ADS"."Feature_5" <= 5.600500106811523) THEN CASE WHEN ("ADS"."Feature_5" <= 5.408999919891357) THEN 14 ELSE 15 END ELSE CASE WHEN ("ADS"."Feature_5" <= 6.668000221252441) THEN 17 ELSE 18 END END ELSE CASE WHEN ("ADS"."Feature_0" <= 9.554670333862305) THEN CASE WHEN ("ADS"."Feature_11" <= 389.0950012207031) THEN 21 ELSE 22 END ELSE CASE WHEN ("ADS"."Feature_6" <= 91.55000305175781) THEN 24 ELSE 25 END END END END ELSE CASE WHEN ("ADS"."Feature_5" <= 7.433000087738037) THEN CASE WHEN ("ADS"."Feature_10" <= 17.649999618530273) THEN CASE WHEN ("ADS"."Feature_11" <= 391.135009765625) THEN CASE WHEN ("ADS"."Feature_2" <= 3.859999895095825) THEN 30 ELSE 31 END ELSE CASE WHEN ("ADS"."Feature_11" <= 393.1099853515625) THEN 33 ELSE 34 END END ELSE CASE WHEN ("ADS"."Feature_8" <= 4.5) THEN 36 ELSE CASE WHEN ("ADS"."Feature_7" <= 6.359299659729004) THEN 38 ELSE 39 END END END ELSE CASE WHEN ("ADS"."Feature_8" <= 16.0) THEN CASE WHEN ("ADS"."Feature_11" <= 395.53997802734375) THEN CASE WHEN ("ADS"."Feature_11" <= 387.9150085449219) THEN 43 ELSE 44 END ELSE CASE WHEN ("ADS"."Feature_2" <= 2.6750001907348633) THEN 46 ELSE 47 END END ELSE 48 END END END AS node_id_2 
FROM boston AS "ADS"), 
"DT_node_data_6" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 2 AS parent_id, 50.0 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 51 AS count, 5 AS depth, 5 AS parent_id, 20.255999999999997 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 67 AS count, 5 AS depth, 5 AS parent_id, 22.794285714285714 AS "Estimator" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 5 AS depth, 8 AS parent_id, 30.69047619047619 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 14 AS count, 5 AS depth, 8 AS parent_id, 26.18 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 5 AS depth, 13 AS parent_id, 16.7 AS "Estimator" UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 5 AS depth, 13 AS parent_id, 13.370000000000001 AS "Estimator" UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 32 AS count, 5 AS depth, 16 AS parent_id, 18.369387755102043 AS "Estimator" UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 16 AS parent_id, 27.5 AS "Estimator" UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 5 AS depth, 20 AS parent_id, 15.326923076923077 AS "Estimator" UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 5 AS depth, 20 AS parent_id, 12.799999999999999 AS "Estimator" UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 5 AS depth, 23 AS parent_id, 7.655555555555556 AS "Estimator" UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 5 AS depth, 23 AS parent_id, 10.78181818181818 AS "Estimator" UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 29 AS parent_id, 30.3 AS "Estimator" UNION ALL SELECT 31 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 29 AS parent_id, 31.566666666666666 AS "Estimator" UNION ALL SELECT 33 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 32 AS parent_id, 34.2 AS "Estimator" UNION ALL SELECT 34 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 5 AS depth, 32 AS parent_id, 32.3 AS "Estimator" UNION ALL SELECT 36 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 35 AS parent_id, 37.3 AS "Estimator" UNION ALL SELECT 38 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 37 AS parent_id, 36.1 AS "Estimator" UNION ALL SELECT 39 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 37 AS parent_id, 35.4 AS "Estimator" UNION ALL SELECT 43 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 5 AS depth, 42 AS parent_id, 45.6375 AS "Estimator" UNION ALL SELECT 44 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 5 AS depth, 42 AS parent_id, 49.35 AS "Estimator" UNION ALL SELECT 46 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 45 AS parent_id, 39.8 AS "Estimator" UNION ALL SELECT 47 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 45 AS parent_id, 38.7 AS "Estimator" UNION ALL SELECT 48 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 40 AS parent_id, 21.9 AS "Estimator") AS "Values"), 
"DT_Output_6" AS 
(SELECT "DT_node_lookup_6"."KEY" AS "KEY", "DT_node_lookup_6".node_id_2 AS node_id_2, "DT_node_data_6".node_id AS node_id, "DT_node_data_6".feature AS feature, "DT_node_data_6".threshold AS threshold, "DT_node_data_6".count AS count, "DT_node_data_6".depth AS depth, "DT_node_data_6".parent_id AS parent_id, "DT_node_data_6"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_6" LEFT OUTER JOIN "DT_node_data_6" ON "DT_node_lookup_6".node_id_2 = "DT_node_data_6".node_id), 
"BAG_Tree_6" AS 
(SELECT "DT_Output_6"."KEY" AS "KEY", "DT_Output_6"."Estimator" AS "Estimator" 
FROM "DT_Output_6"), 
"DT_node_lookup_7" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_5" <= 7.019000053405762) THEN CASE WHEN ("ADS"."Feature_12" <= 9.71500015258789) THEN CASE WHEN ("ADS"."Feature_7" <= 1.577549934387207) THEN 3 ELSE CASE WHEN ("ADS"."Feature_5" <= 6.585000038146973) THEN CASE WHEN ("ADS"."Feature_5" <= 6.141499996185303) THEN 6 ELSE 7 END ELSE CASE WHEN ("ADS"."Feature_6" <= 42.25) THEN 9 ELSE 10 END END END ELSE CASE WHEN ("ADS"."Feature_12" <= 14.805000305175781) THEN CASE WHEN ("ADS"."Feature_7" <= 1.3490999937057495) THEN 13 ELSE CASE WHEN ("ADS"."Feature_10" <= 13.850000381469727) THEN 15 ELSE 16 END END ELSE CASE WHEN ("ADS"."Feature_0" <= 5.769209861755371) THEN CASE WHEN ("ADS"."Feature_6" <= 82.8499984741211) THEN 19 ELSE 20 END ELSE CASE WHEN ("ADS"."Feature_4" <= 0.6694999933242798) THEN 22 ELSE 23 END END END END ELSE CASE WHEN ("ADS"."Feature_5" <= 7.390500068664551) THEN CASE WHEN ("ADS"."Feature_9" <= 258.0) THEN CASE WHEN ("ADS"."Feature_5" <= 7.151000022888184) THEN CASE WHEN ("ADS"."Feature_7" <= 5.731650352478027) THEN 28 ELSE 29 END ELSE 30 END ELSE CASE WHEN ("ADS"."Feature_7" <= 7.568399906158447) THEN CASE WHEN ("ADS"."Feature_0" <= 0.6826850175857544) THEN 33 ELSE 34 END ELSE 35 END END ELSE CASE WHEN ("ADS"."Feature_8" <= 6.0) THEN CASE WHEN ("ADS"."Feature_5" <= 7.825500011444092) THEN CASE WHEN ("ADS"."Feature_5" <= 7.557499885559082) THEN 39 ELSE 40 END ELSE CASE WHEN ("ADS"."Feature_12" <= 5.514999866485596) THEN 42 ELSE 43 END END ELSE CASE WHEN ("ADS"."Feature_6" <= 84.75) THEN CASE WHEN ("ADS"."Feature_5" <= 8.531000137329102) THEN 46 ELSE 47 END ELSE 48 END END END END AS node_id_2 
FROM boston AS "ADS"), 
"DT_node_data_7" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 2 AS parent_id, 50.0 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 5 AS depth, 5 AS parent_id, 21.03103448275862 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 34 AS count, 5 AS depth, 5 AS parent_id, 23.85 AS "Estimator" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 5 AS depth, 8 AS parent_id, 32.23809523809524 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 5 AS depth, 8 AS parent_id, 26.300000000000004 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 12 AS parent_id, 27.9 AS "Estimator" UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 14 AS parent_id, 30.7 AS "Estimator" UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 66 AS count, 5 AS depth, 14 AS parent_id, 20.180392156862744 AS "Estimator" UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 5 AS depth, 18 AS parent_id, 21.650000000000002 AS "Estimator" UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 33 AS count, 5 AS depth, 18 AS parent_id, 16.31754385964912 AS "Estimator" UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 5 AS depth, 21 AS parent_id, 15.592307692307692 AS "Estimator" UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 32 AS count, 5 AS depth, 21 AS parent_id, 11.54 AS "Estimator" UNION ALL SELECT 28 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 27 AS parent_id, 34.9 AS "Estimator" UNION ALL SELECT 29 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 27 AS parent_id, 36.2 AS "Estimator" UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 26 AS parent_id, 37.9 AS "Estimator" UNION ALL SELECT 33 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 32 AS parent_id, 33.266666666666666 AS "Estimator" UNION ALL SELECT 34 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 32 AS parent_id, 31.0 AS "Estimator" UNION ALL SELECT 35 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 31 AS parent_id, 29.0 AS "Estimator" UNION ALL SELECT 39 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 38 AS parent_id, 43.625 AS "Estimator" UNION ALL SELECT 40 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 38 AS parent_id, 45.7 AS "Estimator" UNION ALL SELECT 42 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 5 AS depth, 41 AS parent_id, 50.0 AS "Estimator" UNION ALL SELECT 43 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 41 AS parent_id, 49.4 AS "Estimator" UNION ALL SELECT 46 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 45 AS parent_id, 42.74285714285714 AS "Estimator" UNION ALL SELECT 47 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 45 AS parent_id, 50.0 AS "Estimator" UNION ALL SELECT 48 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 44 AS parent_id, 37.6 AS "Estimator") AS "Values"), 
"DT_Output_7" AS 
(SELECT "DT_node_lookup_7"."KEY" AS "KEY", "DT_node_lookup_7".node_id_2 AS node_id_2, "DT_node_data_7".node_id AS node_id, "DT_node_data_7".feature AS feature, "DT_node_data_7".threshold AS threshold, "DT_node_data_7".count AS count, "DT_node_data_7".depth AS depth, "DT_node_data_7".parent_id AS parent_id, "DT_node_data_7"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_7" LEFT OUTER JOIN "DT_node_data_7" ON "DT_node_lookup_7".node_id_2 = "DT_node_data_7".node_id), 
"BAG_Tree_7" AS 
(SELECT "DT_Output_7"."KEY" AS "KEY", "DT_Output_7"."Estimator" AS "Estimator" 
FROM "DT_Output_7"), 
"DT_node_lookup_8" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_5" <= 6.923999786376953) THEN CASE WHEN ("ADS"."Feature_12" <= 15.0) THEN CASE WHEN ("ADS"."Feature_12" <= 7.684999942779541) THEN CASE WHEN ("ADS"."Feature_5" <= 6.528500080108643) THEN CASE WHEN ("ADS"."Feature_7" <= 4.463799953460693) THEN 5 ELSE 6 END ELSE CASE WHEN ("ADS"."Feature_4" <= 0.5149999856948853) THEN 8 ELSE 9 END END ELSE CASE WHEN ("ADS"."Feature_7" <= 1.2074000835418701) THEN 11 ELSE CASE WHEN ("ADS"."Feature_5" <= 6.525500297546387) THEN 13 ELSE 14 END END END ELSE CASE WHEN ("ADS"."Feature_4" <= 0.6614999771118164) THEN CASE WHEN ("ADS"."Feature_0" <= 0.14746499061584473) THEN CASE WHEN ("ADS"."Feature_9" <= 371.5) THEN 18 ELSE 19 END ELSE CASE WHEN ("ADS"."Feature_5" <= 6.754500389099121) THEN 21 ELSE 22 END END ELSE CASE WHEN ("ADS"."Feature_12" <= 19.720001220703125) THEN CASE WHEN ("ADS"."Feature_4" <= 0.715499997138977) THEN 25 ELSE 26 END ELSE CASE WHEN ("ADS"."Feature_7" <= 1.4222500324249268) THEN 28 ELSE 29 END END END END ELSE CASE WHEN ("ADS"."Feature_5" <= 7.515000343322754) THEN CASE WHEN ("ADS"."Feature_4" <= 0.4884999990463257) THEN CASE WHEN ("ADS"."Feature_7" <= 8.801650047302246) THEN CASE WHEN ("ADS"."Feature_0" <= 0.076944999396801) THEN 34 ELSE 35 END ELSE 36 END ELSE CASE WHEN ("ADS"."Feature_12" <= 16.0) THEN CASE WHEN ("ADS"."Feature_5" <= 7.010499954223633) THEN 39 ELSE 40 END ELSE 41 END END ELSE CASE WHEN ("ADS"."Feature_4" <= 0.6825000047683716) THEN CASE WHEN ("ADS"."Feature_11" <= 394.80499267578125) THEN CASE WHEN ("ADS"."Feature_10" <= 14.799999237060547) THEN 45 ELSE 46 END ELSE CASE WHEN ("ADS"."Feature_1" <= 41.25) THEN 48 ELSE 49 END END ELSE 50 END END END AS node_id_2 
FROM boston AS "ADS"), 
"DT_node_data_8" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 5 AS depth, 4 AS parent_id, 26.2 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 21 AS count, 5 AS depth, 4 AS parent_id, 23.400000000000002 AS "Estimator" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 5 AS depth, 7 AS parent_id, 29.65185185185185 AS "Estimator" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 5 AS depth, 7 AS parent_id, 23.975 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 10 AS parent_id, 50.0 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 80 AS count, 5 AS depth, 12 AS parent_id, 20.399173553719006 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 5 AS depth, 12 AS parent_id, 24.185714285714287 AS "Estimator" UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 17 AS parent_id, 27.100000000000005 AS "Estimator" UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 17 AS parent_id, 20.4 AS "Estimator" UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 31 AS count, 5 AS depth, 20 AS parent_id, 17.283333333333335 AS "Estimator" UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 20 AS parent_id, 27.5 AS "Estimator" UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 5 AS depth, 24 AS parent_id, 14.133333333333335 AS "Estimator" UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 5 AS depth, 24 AS parent_id, 16.841666666666665 AS "Estimator" UNION ALL SELECT 28 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 5 AS depth, 27 AS parent_id, 13.733333333333333 AS "Estimator" UNION ALL SELECT 29 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 20 AS count, 5 AS depth, 27 AS parent_id, 9.924137931034483 AS "Estimator" UNION ALL SELECT 34 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 5 AS depth, 33 AS parent_id, 34.52142857142857 AS "Estimator" UNION ALL SELECT 35 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 33 AS parent_id, 37.4 AS "Estimator" UNION ALL SELECT 36 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 32 AS parent_id, 29.6 AS "Estimator" UNION ALL SELECT 39 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 38 AS parent_id, 24.96 AS "Estimator" UNION ALL SELECT 40 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 38 AS parent_id, 31.066666666666666 AS "Estimator" UNION ALL SELECT 41 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 37 AS parent_id, 10.4 AS "Estimator" UNION ALL SELECT 45 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 5 AS depth, 44 AS parent_id, 49.519999999999996 AS "Estimator" UNION ALL SELECT 46 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 5 AS depth, 44 AS parent_id, 46.11538461538461 AS "Estimator" UNION ALL SELECT 48 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 47 AS parent_id, 39.25 AS "Estimator" UNION ALL SELECT 49 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 47 AS parent_id, 42.3 AS "Estimator" UNION ALL SELECT 50 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 42 AS parent_id, 21.9 AS "Estimator") AS "Values"), 
"DT_Output_8" AS 
(SELECT "DT_node_lookup_8"."KEY" AS "KEY", "DT_node_lookup_8".node_id_2 AS node_id_2, "DT_node_data_8".node_id AS node_id, "DT_node_data_8".feature AS feature, "DT_node_data_8".threshold AS threshold, "DT_node_data_8".count AS count, "DT_node_data_8".depth AS depth, "DT_node_data_8".parent_id AS parent_id, "DT_node_data_8"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_8" LEFT OUTER JOIN "DT_node_data_8" ON "DT_node_lookup_8".node_id_2 = "DT_node_data_8".node_id), 
"BAG_Tree_8" AS 
(SELECT "DT_Output_8"."KEY" AS "KEY", "DT_Output_8"."Estimator" AS "Estimator" 
FROM "DT_Output_8"), 
"DT_node_lookup_9" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_5" <= 6.824999809265137) THEN CASE WHEN ("ADS"."Feature_12" <= 14.300000190734863) THEN CASE WHEN ("ADS"."Feature_7" <= 1.2074000835418701) THEN 3 ELSE CASE WHEN ("ADS"."Feature_5" <= 6.5269999504089355) THEN CASE WHEN ("ADS"."Feature_12" <= 7.695000171661377) THEN 6 ELSE 7 END ELSE CASE WHEN ("ADS"."Feature_4" <= 0.5210000276565552) THEN 9 ELSE 10 END END END ELSE CASE WHEN ("ADS"."Feature_7" <= 2.001199960708618) THEN CASE WHEN ("ADS"."Feature_9" <= 551.5) THEN CASE WHEN ("ADS"."Feature_12" <= 15.96500015258789) THEN 14 ELSE 15 END ELSE CASE WHEN ("ADS"."Feature_12" <= 21.380001068115234) THEN 17 ELSE 18 END END ELSE CASE WHEN ("ADS"."Feature_10" <= 19.450000762939453) THEN CASE WHEN ("ADS"."Feature_6" <= 73.0999984741211) THEN 21 ELSE 22 END ELSE CASE WHEN ("ADS"."Feature_11" <= 360.65997314453125) THEN 24 ELSE 25 END END END END ELSE CASE WHEN ("ADS"."Feature_5" <= 7.444999694824219) THEN CASE WHEN ("ADS"."Feature_6" <= 46.599998474121094) THEN CASE WHEN ("ADS"."Feature_7" <= 7.740599632263184) THEN CASE WHEN ("ADS"."Feature_0" <= 0.07597500085830688) THEN 30 ELSE 31 END ELSE CASE WHEN ("ADS"."Feature_9" <= 344.0) THEN 33 ELSE 34 END END ELSE CASE WHEN ("ADS"."Feature_5" <= 7.081000328063965) THEN CASE WHEN ("ADS"."Feature_7" <= 3.3021998405456543) THEN 37 ELSE 38 END ELSE CASE WHEN ("ADS"."Feature_9" <= 207.5) THEN 40 ELSE 41 END END END ELSE CASE WHEN ("ADS"."Feature_0" <= 2.468820095062256) THEN CASE WHEN ("ADS"."Feature_11" <= 387.3450012207031) THEN CASE WHEN ("ADS"."Feature_6" <= 80.6500015258789) THEN 45 ELSE 46 END ELSE CASE WHEN ("ADS"."Feature_5" <= 8.03700065612793) THEN 48 ELSE 49 END END ELSE 50 END END END AS node_id_2 
FROM boston AS "ADS"), 
"DT_node_data_9" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, 50.0 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 24 AS count, 5 AS depth, 5 AS parent_id, 23.614634146341466 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 72 AS count, 5 AS depth, 5 AS parent_id, 20.802727272727275 AS "Estimator" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 5 AS depth, 8 AS parent_id, 28.267857142857142 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 5 AS depth, 8 AS parent_id, 23.638461538461538 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 13 AS parent_id, 17.15 AS "Estimator" UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 5 AS depth, 13 AS parent_id, 14.642857142857142 AS "Estimator" UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 5 AS depth, 16 AS parent_id, 13.188235294117648 AS "Estimator" UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 21 AS count, 5 AS depth, 16 AS parent_id, 9.83235294117647 AS "Estimator" UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 5 AS depth, 20 AS parent_id, 22.62727272727273 AS "Estimator" UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS count, 5 AS depth, 20 AS parent_id, 18.589473684210528 AS "Estimator" UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 5 AS depth, 23 AS parent_id, 14.405882352941179 AS "Estimator" UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 5 AS depth, 23 AS parent_id, 17.554166666666664 AS "Estimator" UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 5 AS depth, 29 AS parent_id, 33.07142857142857 AS "Estimator" UNION ALL SELECT 31 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 29 AS parent_id, 37.0 AS "Estimator" UNION ALL SELECT 33 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 32 AS parent_id, 29.6 AS "Estimator" UNION ALL SELECT 34 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 32 AS parent_id, 29.0 AS "Estimator" UNION ALL SELECT 37 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 5 AS depth, 36 AS parent_id, 28.849999999999998 AS "Estimator" UNION ALL SELECT 38 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 36 AS parent_id, 23.46666666666667 AS "Estimator" UNION ALL SELECT 40 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 39 AS parent_id, 37.9 AS "Estimator" UNION ALL SELECT 41 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 39 AS parent_id, 32.519999999999996 AS "Estimator" UNION ALL SELECT 45 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 5 AS depth, 44 AS parent_id, 45.05714285714286 AS "Estimator" UNION ALL SELECT 46 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 44 AS parent_id, 49.7 AS "Estimator" UNION ALL SELECT 48 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 5 AS depth, 47 AS parent_id, 43.6875 AS "Estimator" UNION ALL SELECT 49 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 47 AS parent_id, 37.96666666666667 AS "Estimator" UNION ALL SELECT 50 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 42 AS parent_id, 21.9 AS "Estimator") AS "Values"), 
"DT_Output_9" AS 
(SELECT "DT_node_lookup_9"."KEY" AS "KEY", "DT_node_lookup_9".node_id_2 AS node_id_2, "DT_node_data_9".node_id AS node_id, "DT_node_data_9".feature AS feature, "DT_node_data_9".threshold AS threshold, "DT_node_data_9".count AS count, "DT_node_data_9".depth AS depth, "DT_node_data_9".parent_id AS parent_id, "DT_node_data_9"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_9" LEFT OUTER JOIN "DT_node_data_9" ON "DT_node_lookup_9".node_id_2 = "DT_node_data_9".node_id), 
"BAG_Tree_9" AS 
(SELECT "DT_Output_9"."KEY" AS "KEY", "DT_Output_9"."Estimator" AS "Estimator" 
FROM "DT_Output_9")
 INSERT INTO "TMP_20180329232002_KAZCEI_BAG_AVG_B0" ("KEY", "Estimator") SELECT "BAG_AVG_B0"."KEY", "BAG_AVG_B0"."Estimator" 
FROM (SELECT "BAG_AVG_esu_0"."KEY" AS "KEY", "BAG_AVG_esu_0"."Estimator" AS "Estimator" 
FROM (SELECT "BAG_Tree_0"."KEY" AS "KEY", "BAG_Tree_0"."Estimator" AS "Estimator" 
FROM "BAG_Tree_0" UNION ALL SELECT "BAG_Tree_1"."KEY" AS "KEY", "BAG_Tree_1"."Estimator" AS "Estimator" 
FROM "BAG_Tree_1" UNION ALL SELECT "BAG_Tree_2"."KEY" AS "KEY", "BAG_Tree_2"."Estimator" AS "Estimator" 
FROM "BAG_Tree_2" UNION ALL SELECT "BAG_Tree_3"."KEY" AS "KEY", "BAG_Tree_3"."Estimator" AS "Estimator" 
FROM "BAG_Tree_3" UNION ALL SELECT "BAG_Tree_4"."KEY" AS "KEY", "BAG_Tree_4"."Estimator" AS "Estimator" 
FROM "BAG_Tree_4" UNION ALL SELECT "BAG_Tree_5"."KEY" AS "KEY", "BAG_Tree_5"."Estimator" AS "Estimator" 
FROM "BAG_Tree_5" UNION ALL SELECT "BAG_Tree_6"."KEY" AS "KEY", "BAG_Tree_6"."Estimator" AS "Estimator" 
FROM "BAG_Tree_6" UNION ALL SELECT "BAG_Tree_7"."KEY" AS "KEY", "BAG_Tree_7"."Estimator" AS "Estimator" 
FROM "BAG_Tree_7" UNION ALL SELECT "BAG_Tree_8"."KEY" AS "KEY", "BAG_Tree_8"."Estimator" AS "Estimator" 
FROM "BAG_Tree_8" UNION ALL SELECT "BAG_Tree_9"."KEY" AS "KEY", "BAG_Tree_9"."Estimator" AS "Estimator" 
FROM "BAG_Tree_9") AS "BAG_AVG_esu_0") AS "BAG_AVG_B0"
-- Code For temporary table TMP_20180329232002_GCLDYN_BAG_AVG_B1 part 1/2. Create 


CREATE TEMPORARY TABLE "TMP_20180329232002_GCLDYN_BAG_AVG_B1" (
	"KEY" BIGINT, 
	"Estimator" FLOAT
)


-- Code For temporary table TMP_20180329232002_GCLDYN_BAG_AVG_B1 part 2/2. Populate

WITH "DT_node_lookup_10" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_12" <= 9.614999771118164) THEN CASE WHEN ("ADS"."Feature_5" <= 7.141499996185303) THEN CASE WHEN ("ADS"."Feature_7" <= 1.4849499464035034) THEN 3 ELSE CASE WHEN ("ADS"."Feature_5" <= 6.543499946594238) THEN CASE WHEN ("ADS"."Feature_12" <= 7.569999694824219) THEN 6 ELSE 7 END ELSE CASE WHEN ("ADS"."Feature_6" <= 38.80000305175781) THEN 9 ELSE 10 END END END ELSE CASE WHEN ("ADS"."Feature_5" <= 7.437000274658203) THEN CASE WHEN ("ADS"."Feature_9" <= 274.0) THEN CASE WHEN ("ADS"."Feature_5" <= 7.376500129699707) THEN 14 ELSE 15 END ELSE CASE WHEN ("ADS"."Feature_7" <= 7.173449993133545) THEN 17 ELSE 18 END END ELSE CASE WHEN ("ADS"."Feature_10" <= 19.100000381469727) THEN CASE WHEN ("ADS"."Feature_10" <= 14.799999237060547) THEN 21 ELSE 22 END ELSE 23 END END END ELSE CASE WHEN ("ADS"."Feature_12" <= 14.800000190734863) THEN CASE WHEN ("ADS"."Feature_5" <= 6.796999931335449) THEN CASE WHEN ("ADS"."Feature_7" <= 1.3490999937057495) THEN 27 ELSE CASE WHEN ("ADS"."Feature_11" <= 361.885009765625) THEN 29 ELSE 30 END END ELSE CASE WHEN ("ADS"."Feature_0" <= 0.23568999767303467) THEN 32 ELSE CASE WHEN ("ADS"."Feature_5" <= 6.9654998779296875) THEN 34 ELSE 35 END END END ELSE CASE WHEN ("ADS"."Feature_0" <= 5.769209861755371) THEN CASE WHEN ("ADS"."Feature_11" <= 377.4849853515625) THEN CASE WHEN ("ADS"."Feature_10" <= 19.600000381469727) THEN 39 ELSE 40 END ELSE CASE WHEN ("ADS"."Feature_12" <= 24.06999969482422) THEN 42 ELSE 43 END END ELSE CASE WHEN ("ADS"."Feature_4" <= 0.6410000324249268) THEN CASE WHEN ("ADS"."Feature_5" <= 6.518500328063965) THEN 46 ELSE 47 END ELSE CASE WHEN ("ADS"."Feature_0" <= 10.379525184631348) THEN 49 ELSE 50 END END END END END AS node_id_2 
FROM boston AS "ADS"), 
"DT_node_data_10" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 2 AS parent_id, 50.0 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 24 AS count, 5 AS depth, 5 AS parent_id, 24.099999999999998 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 5 AS depth, 5 AS parent_id, 21.462500000000006 AS "Estimator" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 5 AS depth, 8 AS parent_id, 30.712500000000006 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 5 AS depth, 8 AS parent_id, 26.28333333333334 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 5 AS depth, 13 AS parent_id, 36.075 AS "Estimator" UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 13 AS parent_id, 33.4 AS "Estimator" UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 16 AS parent_id, 31.900000000000002 AS "Estimator" UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 16 AS parent_id, 33.95 AS "Estimator" UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 5 AS depth, 20 AS parent_id, 48.81818181818182 AS "Estimator" UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 5 AS depth, 20 AS parent_id, 43.75 AS "Estimator" UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 19 AS parent_id, 21.9 AS "Estimator" UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 26 AS parent_id, 27.9 AS "Estimator" UNION ALL SELECT 29 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 5 AS depth, 28 AS parent_id, 17.657142857142855 AS "Estimator" UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 58 AS count, 5 AS depth, 28 AS parent_id, 20.338823529411762 AS "Estimator" UNION ALL SELECT 32 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 31 AS parent_id, 22.0 AS "Estimator" UNION ALL SELECT 34 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 33 AS parent_id, 27.1 AS "Estimator" UNION ALL SELECT 35 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 33 AS parent_id, 30.5 AS "Estimator" UNION ALL SELECT 39 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS count, 5 AS depth, 38 AS parent_id, 16.799999999999997 AS "Estimator" UNION ALL SELECT 40 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 5 AS depth, 38 AS parent_id, 13.475 AS "Estimator" UNION ALL SELECT 42 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 5 AS depth, 41 AS parent_id, 19.575757575757574 AS "Estimator" UNION ALL SELECT 43 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 5 AS depth, 41 AS parent_id, 14.828571428571427 AS "Estimator" UNION ALL SELECT 46 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 5 AS depth, 45 AS parent_id, 14.653846153846153 AS "Estimator" UNION ALL SELECT 47 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 45 AS parent_id, 27.5 AS "Estimator" UNION ALL SELECT 49 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 5 AS depth, 48 AS parent_id, 13.595833333333339 AS "Estimator" UNION ALL SELECT 50 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 5 AS depth, 48 AS parent_id, 9.530434782608696 AS "Estimator") AS "Values"), 
"DT_Output_10" AS 
(SELECT "DT_node_lookup_10"."KEY" AS "KEY", "DT_node_lookup_10".node_id_2 AS node_id_2, "DT_node_data_10".node_id AS node_id, "DT_node_data_10".feature AS feature, "DT_node_data_10".threshold AS threshold, "DT_node_data_10".count AS count, "DT_node_data_10".depth AS depth, "DT_node_data_10".parent_id AS parent_id, "DT_node_data_10"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_10" LEFT OUTER JOIN "DT_node_data_10" ON "DT_node_lookup_10".node_id_2 = "DT_node_data_10".node_id), 
"BAG_Tree_10" AS 
(SELECT "DT_Output_10"."KEY" AS "KEY", "DT_Output_10"."Estimator" AS "Estimator" 
FROM "DT_Output_10"), 
"DT_node_lookup_11" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_5" <= 6.996999740600586) THEN CASE WHEN ("ADS"."Feature_12" <= 14.890000343322754) THEN CASE WHEN ("ADS"."Feature_7" <= 1.2271499633789062) THEN 3 ELSE CASE WHEN ("ADS"."Feature_5" <= 6.5269999504089355) THEN CASE WHEN ("ADS"."Feature_12" <= 7.664999961853027) THEN 6 ELSE 7 END ELSE CASE WHEN ("ADS"."Feature_10" <= 15.25) THEN 9 ELSE 10 END END END ELSE CASE WHEN ("ADS"."Feature_4" <= 0.6030000448226929) THEN CASE WHEN ("ADS"."Feature_11" <= 392.885009765625) THEN CASE WHEN ("ADS"."Feature_5" <= 6.754500389099121) THEN 14 ELSE 15 END ELSE CASE WHEN ("ADS"."Feature_10" <= 16.299999237060547) THEN 17 ELSE 18 END END ELSE CASE WHEN ("ADS"."Feature_0" <= 9.333990097045898) THEN CASE WHEN ("ADS"."Feature_12" <= 19.065000534057617) THEN 21 ELSE 22 END ELSE CASE WHEN ("ADS"."Feature_5" <= 5.853000164031982) THEN 24 ELSE 25 END END END END ELSE CASE WHEN ("ADS"."Feature_5" <= 7.437000274658203) THEN CASE WHEN ("ADS"."Feature_10" <= 17.599998474121094) THEN CASE WHEN ("ADS"."Feature_5" <= 7.154999732971191) THEN CASE WHEN ("ADS"."Feature_9" <= 343.5) THEN 30 ELSE 31 END ELSE CASE WHEN ("ADS"."Feature_6" <= 97.25) THEN 33 ELSE 34 END END ELSE CASE WHEN ("ADS"."Feature_5" <= 7.334500312805176) THEN CASE WHEN ("ADS"."Feature_0" <= 0.04436999931931496) THEN 37 ELSE 38 END ELSE 39 END END ELSE CASE WHEN ("ADS"."Feature_0" <= 2.7422351837158203) THEN CASE WHEN ("ADS"."Feature_0" <= 0.5768150091171265) THEN CASE WHEN ("ADS"."Feature_5" <= 8.531000137329102) THEN 43 ELSE 44 END ELSE 45 END ELSE 46 END END END AS node_id_2 
FROM boston AS "ADS"), 
"DT_node_data_11" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 2 AS parent_id, 50.0 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 26 AS count, 5 AS depth, 5 AS parent_id, 23.93235294117647 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 75 AS count, 5 AS depth, 5 AS parent_id, 20.678151260504197 AS "Estimator" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 5 AS depth, 8 AS parent_id, 33.53333333333333 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 34 AS count, 5 AS depth, 8 AS parent_id, 26.22745098039216 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 20 AS count, 5 AS depth, 13 AS parent_id, 16.448387096774194 AS "Estimator" UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 13 AS parent_id, 27.5 AS "Estimator" UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 16 AS parent_id, 27.1 AS "Estimator" UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 5 AS depth, 16 AS parent_id, 20.330769230769228 AS "Estimator" UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 21 AS count, 5 AS depth, 20 AS parent_id, 16.18064516129032 AS "Estimator" UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 5 AS depth, 20 AS parent_id, 12.852941176470589 AS "Estimator" UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 5 AS depth, 23 AS parent_id, 8.65 AS "Estimator" UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 5 AS depth, 23 AS parent_id, 11.49 AS "Estimator" UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 29 AS parent_id, 30.433333333333334 AS "Estimator" UNION ALL SELECT 31 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 29 AS parent_id, 29.0 AS "Estimator" UNION ALL SELECT 33 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 5 AS depth, 32 AS parent_id, 32.559999999999995 AS "Estimator" UNION ALL SELECT 34 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 32 AS parent_id, 36.0 AS "Estimator" UNION ALL SELECT 37 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 36 AS parent_id, 34.925000000000004 AS "Estimator" UNION ALL SELECT 38 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 5 AS depth, 36 AS parent_id, 36.4875 AS "Estimator" UNION ALL SELECT 39 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 35 AS parent_id, 33.4 AS "Estimator" UNION ALL SELECT 43 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS count, 5 AS depth, 42 AS parent_id, 44.678947368421056 AS "Estimator" UNION ALL SELECT 44 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 42 AS parent_id, 50.0 AS "Estimator" UNION ALL SELECT 45 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 4 AS depth, 41 AS parent_id, 50.0 AS "Estimator" UNION ALL SELECT 46 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 40 AS parent_id, 21.9 AS "Estimator") AS "Values"), 
"DT_Output_11" AS 
(SELECT "DT_node_lookup_11"."KEY" AS "KEY", "DT_node_lookup_11".node_id_2 AS node_id_2, "DT_node_data_11".node_id AS node_id, "DT_node_data_11".feature AS feature, "DT_node_data_11".threshold AS threshold, "DT_node_data_11".count AS count, "DT_node_data_11".depth AS depth, "DT_node_data_11".parent_id AS parent_id, "DT_node_data_11"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_11" LEFT OUTER JOIN "DT_node_data_11" ON "DT_node_lookup_11".node_id_2 = "DT_node_data_11".node_id), 
"BAG_Tree_11" AS 
(SELECT "DT_Output_11"."KEY" AS "KEY", "DT_Output_11"."Estimator" AS "Estimator" 
FROM "DT_Output_11"), 
"DT_node_lookup_12" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_5" <= 7.07450008392334) THEN CASE WHEN ("ADS"."Feature_12" <= 15.0) THEN CASE WHEN ("ADS"."Feature_5" <= 6.481499671936035) THEN CASE WHEN ("ADS"."Feature_7" <= 1.2271499633789062) THEN 4 ELSE CASE WHEN ("ADS"."Feature_12" <= 7.694999694824219) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_12" <= 4.654999732971191) THEN CASE WHEN ("ADS"."Feature_5" <= 6.965999603271484) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_9" <= 267.0) THEN 13 ELSE 14 END END END ELSE CASE WHEN ("ADS"."Feature_12" <= 21.615001678466797) THEN CASE WHEN ("ADS"."Feature_0" <= 5.769209861755371) THEN CASE WHEN ("ADS"."Feature_6" <= 82.55000305175781) THEN 18 ELSE 19 END ELSE CASE WHEN ("ADS"."Feature_6" <= 99.44999694824219) THEN 21 ELSE 22 END END ELSE CASE WHEN ("ADS"."Feature_9" <= 551.5) THEN CASE WHEN ("ADS"."Feature_12" <= 25.915000915527344) THEN 25 ELSE 26 END ELSE CASE WHEN ("ADS"."Feature_4" <= 0.675000011920929) THEN 28 ELSE 29 END END END END ELSE CASE WHEN ("ADS"."Feature_5" <= 7.437000274658203) THEN CASE WHEN ("ADS"."Feature_9" <= 497.5) THEN CASE WHEN ("ADS"."Feature_9" <= 274.0) THEN CASE WHEN ("ADS"."Feature_10" <= 18.549999237060547) THEN 34 ELSE 35 END ELSE CASE WHEN ("ADS"."Feature_11" <= 394.72998046875) THEN 37 ELSE 38 END END ELSE 39 END ELSE CASE WHEN ("ADS"."Feature_0" <= 2.496649980545044) THEN CASE WHEN ("ADS"."Feature_10" <= 17.599998474121094) THEN CASE WHEN ("ADS"."Feature_7" <= 6.077500343322754) THEN 43 ELSE 44 END ELSE CASE WHEN ("ADS"."Feature_12" <= 3.8899998664855957) THEN 46 ELSE 47 END END ELSE 48 END END END AS node_id_2 
FROM boston AS "ADS"), 
"DT_node_data_12" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 3 AS parent_id, 50.0 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 20 AS count, 5 AS depth, 5 AS parent_id, 23.643750000000004 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 89 AS count, 5 AS depth, 5 AS parent_id, 20.418367346938776 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 5 AS depth, 9 AS parent_id, 30.01 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 9 AS parent_id, 34.4 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 5 AS depth, 12 AS parent_id, 28.772727272727273 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 26 AS count, 5 AS depth, 12 AS parent_id, 25.13888888888889 AS "Estimator" UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 5 AS depth, 17 AS parent_id, 21.066666666666666 AS "Estimator" UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 5 AS depth, 17 AS parent_id, 16.816129032258065 AS "Estimator" UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 5 AS depth, 20 AS parent_id, 13.60769230769231 AS "Estimator" UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 20 AS parent_id, 20.0 AS "Estimator" UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 24 AS parent_id, 18.3 AS "Estimator" UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 5 AS depth, 24 AS parent_id, 14.2375 AS "Estimator" UNION ALL SELECT 28 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 5 AS depth, 27 AS parent_id, 13.027272727272726 AS "Estimator" UNION ALL SELECT 29 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS count, 5 AS depth, 27 AS parent_id, 8.792857142857143 AS "Estimator" UNION ALL SELECT 34 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 33 AS parent_id, 34.8 AS "Estimator" UNION ALL SELECT 35 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 33 AS parent_id, 36.93333333333333 AS "Estimator" UNION ALL SELECT 37 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 36 AS parent_id, 31.75 AS "Estimator" UNION ALL SELECT 38 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 36 AS parent_id, 33.0 AS "Estimator" UNION ALL SELECT 39 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 31 AS parent_id, 17.8 AS "Estimator" UNION ALL SELECT 43 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 5 AS depth, 42 AS parent_id, 48.3125 AS "Estimator" UNION ALL SELECT 44 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 42 AS parent_id, 43.15 AS "Estimator" UNION ALL SELECT 46 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 45 AS parent_id, 43.3 AS "Estimator" UNION ALL SELECT 47 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 45 AS parent_id, 39.25 AS "Estimator" UNION ALL SELECT 48 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 40 AS parent_id, 21.9 AS "Estimator") AS "Values"), 
"DT_Output_12" AS 
(SELECT "DT_node_lookup_12"."KEY" AS "KEY", "DT_node_lookup_12".node_id_2 AS node_id_2, "DT_node_data_12".node_id AS node_id, "DT_node_data_12".feature AS feature, "DT_node_data_12".threshold AS threshold, "DT_node_data_12".count AS count, "DT_node_data_12".depth AS depth, "DT_node_data_12".parent_id AS parent_id, "DT_node_data_12"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_12" LEFT OUTER JOIN "DT_node_data_12" ON "DT_node_lookup_12".node_id_2 = "DT_node_data_12".node_id), 
"BAG_Tree_12" AS 
(SELECT "DT_Output_12"."KEY" AS "KEY", "DT_Output_12"."Estimator" AS "Estimator" 
FROM "DT_Output_12"), 
"DT_node_lookup_13" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_5" <= 7.010499954223633) THEN CASE WHEN ("ADS"."Feature_12" <= 14.300000190734863) THEN CASE WHEN ("ADS"."Feature_5" <= 6.5360002517700195) THEN CASE WHEN ("ADS"."Feature_7" <= 1.2074000835418701) THEN 4 ELSE CASE WHEN ("ADS"."Feature_12" <= 7.605000019073486) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_7" <= 1.6836999654769897) THEN 9 ELSE CASE WHEN ("ADS"."Feature_6" <= 41.95000076293945) THEN 11 ELSE 12 END END END ELSE CASE WHEN ("ADS"."Feature_4" <= 0.6030000448226929) THEN CASE WHEN ("ADS"."Feature_6" <= 70.14999389648438) THEN CASE WHEN ("ADS"."Feature_10" <= 19.650001525878906) THEN 16 ELSE 17 END ELSE CASE WHEN ("ADS"."Feature_5" <= 6.754500389099121) THEN 19 ELSE 20 END END ELSE CASE WHEN ("ADS"."Feature_12" <= 19.720001220703125) THEN CASE WHEN ("ADS"."Feature_0" <= 12.223600387573242) THEN 23 ELSE 24 END ELSE CASE WHEN ("ADS"."Feature_9" <= 551.5) THEN 26 ELSE 27 END END END END ELSE CASE WHEN ("ADS"."Feature_5" <= 7.433000087738037) THEN CASE WHEN ("ADS"."Feature_10" <= 19.700000762939453) THEN CASE WHEN ("ADS"."Feature_11" <= 384.18499755859375) THEN CASE WHEN ("ADS"."Feature_7" <= 7.568399906158447) THEN 32 ELSE 33 END ELSE CASE WHEN ("ADS"."Feature_10" <= 17.399999618530273) THEN 35 ELSE 36 END END ELSE 37 END ELSE CASE WHEN ("ADS"."Feature_10" <= 15.399999618530273) THEN CASE WHEN ("ADS"."Feature_5" <= 7.760000228881836) THEN CASE WHEN ("ADS"."Feature_11" <= 382.7200012207031) THEN 41 ELSE 42 END ELSE 43 END ELSE CASE WHEN ("ADS"."Feature_6" <= 80.80000305175781) THEN CASE WHEN ("ADS"."Feature_12" <= 4.175000190734863) THEN 46 ELSE 47 END ELSE CASE WHEN ("ADS"."Feature_2" <= 4.329999923706055) THEN 49 ELSE 50 END END END END END AS node_id_2 
FROM boston AS "ADS"), 
"DT_node_data_13" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 3 AS parent_id, 50.0 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 22 AS count, 5 AS depth, 5 AS parent_id, 23.810256410256414 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 82 AS count, 5 AS depth, 5 AS parent_id, 20.866406250000004 AS "Estimator" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 8 AS parent_id, 50.0 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 5 AS depth, 10 AS parent_id, 29.62105263157895 AS "Estimator" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 22 AS count, 5 AS depth, 10 AS parent_id, 25.626470588235296 AS "Estimator" UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 15 AS parent_id, 23.2 AS "Estimator" UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 15 AS parent_id, 19.619999999999997 AS "Estimator" UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 27 AS count, 5 AS depth, 18 AS parent_id, 17.31276595744681 AS "Estimator" UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 18 AS parent_id, 27.5 AS "Estimator" UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 22 AS count, 5 AS depth, 22 AS parent_id, 15.664000000000003 AS "Estimator" UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 22 AS parent_id, 11.875 AS "Estimator" UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 5 AS depth, 25 AS parent_id, 15.14 AS "Estimator" UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 26 AS count, 5 AS depth, 25 AS parent_id, 9.705128205128204 AS "Estimator" UNION ALL SELECT 32 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 31 AS parent_id, 30.82 AS "Estimator" UNION ALL SELECT 33 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 31 AS parent_id, 29.0 AS "Estimator" UNION ALL SELECT 35 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 5 AS depth, 34 AS parent_id, 32.9375 AS "Estimator" UNION ALL SELECT 36 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 5 AS depth, 34 AS parent_id, 35.57142857142857 AS "Estimator" UNION ALL SELECT 37 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 29 AS parent_id, 17.8 AS "Estimator" UNION ALL SELECT 41 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 40 AS parent_id, 47.333333333333336 AS "Estimator" UNION ALL SELECT 42 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 40 AS parent_id, 43.1 AS "Estimator" UNION ALL SELECT 43 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 4 AS depth, 39 AS parent_id, 50.0 AS "Estimator" UNION ALL SELECT 46 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 5 AS depth, 45 AS parent_id, 43.666666666666664 AS "Estimator" UNION ALL SELECT 47 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 45 AS parent_id, 38.7 AS "Estimator" UNION ALL SELECT 49 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 48 AS parent_id, 39.8 AS "Estimator" UNION ALL SELECT 50 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 48 AS parent_id, 37.6 AS "Estimator") AS "Values"), 
"DT_Output_13" AS 
(SELECT "DT_node_lookup_13"."KEY" AS "KEY", "DT_node_lookup_13".node_id_2 AS node_id_2, "DT_node_data_13".node_id AS node_id, "DT_node_data_13".feature AS feature, "DT_node_data_13".threshold AS threshold, "DT_node_data_13".count AS count, "DT_node_data_13".depth AS depth, "DT_node_data_13".parent_id AS parent_id, "DT_node_data_13"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_13" LEFT OUTER JOIN "DT_node_data_13" ON "DT_node_lookup_13".node_id_2 = "DT_node_data_13".node_id), 
"BAG_Tree_13" AS 
(SELECT "DT_Output_13"."KEY" AS "KEY", "DT_Output_13"."Estimator" AS "Estimator" 
FROM "DT_Output_13"), 
"DT_node_lookup_14" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_5" <= 7.010499954223633) THEN CASE WHEN ("ADS"."Feature_12" <= 14.780000686645508) THEN CASE WHEN ("ADS"."Feature_5" <= 6.531000137329102) THEN CASE WHEN ("ADS"."Feature_5" <= 6.1020002365112305) THEN CASE WHEN ("ADS"."Feature_6" <= 98.0999984741211) THEN 5 ELSE 6 END ELSE CASE WHEN ("ADS"."Feature_4" <= 0.5174999833106995) THEN 8 ELSE 9 END END ELSE CASE WHEN ("ADS"."Feature_7" <= 1.6836999654769897) THEN 11 ELSE CASE WHEN ("ADS"."Feature_2" <= 4.269999980926514) THEN 13 ELSE 14 END END END ELSE CASE WHEN ("ADS"."Feature_10" <= 19.650001525878906) THEN CASE WHEN ("ADS"."Feature_7" <= 1.527649998664856) THEN CASE WHEN ("ADS"."Feature_12" <= 27.110000610351562) THEN 18 ELSE 19 END ELSE CASE WHEN ("ADS"."Feature_5" <= 6.168000221252441) THEN 21 ELSE 22 END END ELSE CASE WHEN ("ADS"."Feature_11" <= 139.9949951171875) THEN CASE WHEN ("ADS"."Feature_7" <= 1.9249000549316406) THEN 25 ELSE 26 END ELSE CASE WHEN ("ADS"."Feature_11" <= 195.16500854492188) THEN 28 ELSE 29 END END END END ELSE CASE WHEN ("ADS"."Feature_5" <= 7.439000129699707) THEN CASE WHEN ("ADS"."Feature_0" <= 0.7246050238609314) THEN CASE WHEN ("ADS"."Feature_9" <= 274.5) THEN CASE WHEN ("ADS"."Feature_10" <= 18.349998474121094) THEN 34 ELSE 35 END ELSE CASE WHEN ("ADS"."Feature_10" <= 13.950000762939453) THEN 37 ELSE 38 END END ELSE CASE WHEN ("ADS"."Feature_12" <= 9.130000114440918) THEN 40 ELSE CASE WHEN ("ADS"."Feature_7" <= 2.1058499813079834) THEN 42 ELSE 43 END END END ELSE CASE WHEN ("ADS"."Feature_10" <= 17.899999618530273) THEN CASE WHEN ("ADS"."Feature_5" <= 7.825500011444092) THEN CASE WHEN ("ADS"."Feature_11" <= 387.8399963378906) THEN 47 ELSE 48 END ELSE CASE WHEN ("ADS"."Feature_8" <= 6.5) THEN 50 ELSE 51 END END ELSE CASE WHEN ("ADS"."Feature_6" <= 56.45000076293945) THEN CASE WHEN ("ADS"."Feature_6" <= 22.650001525878906) THEN 54 ELSE 55 END ELSE 56 END END END END AS node_id_2 
FROM boston AS "ADS"), 
"DT_node_data_14" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 57 AS count, 5 AS depth, 4 AS parent_id, 19.898823529411768 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 4 AS parent_id, 26.999999999999996 AS "Estimator" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 30 AS count, 5 AS depth, 7 AS parent_id, 23.391666666666666 AS "Estimator" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 23 AS count, 5 AS depth, 7 AS parent_id, 20.389655172413796 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 10 AS parent_id, 50.0 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 5 AS depth, 12 AS parent_id, 29.90333333333333 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 23 AS count, 5 AS depth, 12 AS parent_id, 25.684375 AS "Estimator" UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 17 AS parent_id, 15.5 AS "Estimator" UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 17 AS parent_id, 13.133333333333335 AS "Estimator" UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 5 AS depth, 20 AS parent_id, 19.55675675675675 AS "Estimator" UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 20 AS parent_id, 27.1 AS "Estimator" UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 5 AS depth, 24 AS parent_id, 8.025 AS "Estimator" UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 5 AS depth, 24 AS parent_id, 12.0 AS "Estimator" UNION ALL SELECT 28 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 27 AS parent_id, 27.5 AS "Estimator" UNION ALL SELECT 29 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 42 AS count, 5 AS depth, 27 AS parent_id, 14.172727272727272 AS "Estimator" UNION ALL SELECT 34 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 5 AS depth, 33 AS parent_id, 34.9625 AS "Estimator" UNION ALL SELECT 35 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 33 AS parent_id, 36.733333333333334 AS "Estimator" UNION ALL SELECT 37 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 36 AS parent_id, 33.95 AS "Estimator" UNION ALL SELECT 38 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 36 AS parent_id, 32.2 AS "Estimator" UNION ALL SELECT 40 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 39 AS parent_id, 25.0 AS "Estimator" UNION ALL SELECT 42 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 41 AS parent_id, 31.0 AS "Estimator" UNION ALL SELECT 43 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 41 AS parent_id, 30.7 AS "Estimator" UNION ALL SELECT 47 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 46 AS parent_id, 45.4 AS "Estimator" UNION ALL SELECT 48 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 46 AS parent_id, 42.833333333333336 AS "Estimator" UNION ALL SELECT 50 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 5 AS depth, 49 AS parent_id, 49.9 AS "Estimator" UNION ALL SELECT 51 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 49 AS parent_id, 45.44 AS "Estimator" UNION ALL SELECT 54 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 53 AS parent_id, 42.8 AS "Estimator" UNION ALL SELECT 55 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 53 AS parent_id, 43.8 AS "Estimator" UNION ALL SELECT 56 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 52 AS parent_id, 38.7 AS "Estimator") AS "Values"), 
"DT_Output_14" AS 
(SELECT "DT_node_lookup_14"."KEY" AS "KEY", "DT_node_lookup_14".node_id_2 AS node_id_2, "DT_node_data_14".node_id AS node_id, "DT_node_data_14".feature AS feature, "DT_node_data_14".threshold AS threshold, "DT_node_data_14".count AS count, "DT_node_data_14".depth AS depth, "DT_node_data_14".parent_id AS parent_id, "DT_node_data_14"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_14" LEFT OUTER JOIN "DT_node_data_14" ON "DT_node_lookup_14".node_id_2 = "DT_node_data_14".node_id), 
"BAG_Tree_14" AS 
(SELECT "DT_Output_14"."KEY" AS "KEY", "DT_Output_14"."Estimator" AS "Estimator" 
FROM "DT_Output_14"), 
"DT_node_lookup_15" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_12" <= 7.684999942779541) THEN CASE WHEN ("ADS"."Feature_5" <= 7.437000274658203) THEN CASE WHEN ("ADS"."Feature_5" <= 6.781499862670898) THEN CASE WHEN ("ADS"."Feature_5" <= 6.531000137329102) THEN CASE WHEN ("ADS"."Feature_0" <= 0.052539996802806854) THEN 5 ELSE 6 END ELSE CASE WHEN ("ADS"."Feature_4" <= 0.5289999842643738) THEN 8 ELSE 9 END END ELSE CASE WHEN ("ADS"."Feature_5" <= 7.141499996185303) THEN CASE WHEN ("ADS"."Feature_10" <= 18.349998474121094) THEN 12 ELSE 13 END ELSE CASE WHEN ("ADS"."Feature_5" <= 7.261500358581543) THEN 15 ELSE 16 END END END ELSE CASE WHEN ("ADS"."Feature_10" <= 14.799999237060547) THEN CASE WHEN ("ADS"."Feature_5" <= 7.697500228881836) THEN CASE WHEN ("ADS"."Feature_12" <= 4.494999885559082) THEN 20 ELSE 21 END ELSE CASE WHEN ("ADS"."Feature_6" <= 89.19999694824219) THEN 23 ELSE 24 END END ELSE CASE WHEN ("ADS"."Feature_12" <= 4.329999923706055) THEN CASE WHEN ("ADS"."Feature_6" <= 62.849998474121094) THEN 27 ELSE 28 END ELSE 29 END END END ELSE CASE WHEN ("ADS"."Feature_12" <= 14.800000190734863) THEN CASE WHEN ("ADS"."Feature_7" <= 1.2074000835418701) THEN 32 ELSE CASE WHEN ("ADS"."Feature_5" <= 6.104000091552734) THEN CASE WHEN ("ADS"."Feature_0" <= 9.376134872436523) THEN 35 ELSE 36 END ELSE CASE WHEN ("ADS"."Feature_2" <= 7.015000343322754) THEN 38 ELSE 39 END END END ELSE CASE WHEN ("ADS"."Feature_7" <= 2.003700017929077) THEN CASE WHEN ("ADS"."Feature_0" <= 7.537955284118652) THEN CASE WHEN ("ADS"."Feature_5" <= 5.434000015258789) THEN 43 ELSE 44 END ELSE CASE WHEN ("ADS"."Feature_12" <= 15.354999542236328) THEN 46 ELSE 47 END END ELSE CASE WHEN ("ADS"."Feature_0" <= 0.22350499033927917) THEN CASE WHEN ("ADS"."Feature_12" <= 18.540000915527344) THEN 50 ELSE 51 END ELSE CASE WHEN ("ADS"."Feature_11" <= 317.75) THEN 53 ELSE 54 END END END END END AS node_id_2 
FROM boston AS "ADS"), 
"DT_node_data_15" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 5 AS depth, 4 AS parent_id, 22.75454545454545 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 5 AS depth, 4 AS parent_id, 24.240909090909096 AS "Estimator" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 5 AS depth, 7 AS parent_id, 28.731818181818177 AS "Estimator" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 7 AS parent_id, 23.4 AS "Estimator" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS count, 5 AS depth, 11 AS parent_id, 32.605555555555554 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 5 AS depth, 11 AS parent_id, 29.18 AS "Estimator" UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 5 AS depth, 14 AS parent_id, 36.5875 AS "Estimator" UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 5 AS depth, 14 AS parent_id, 33.224999999999994 AS "Estimator" UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 19 AS parent_id, 50.0 AS "Estimator" UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 19 AS parent_id, 43.1 AS "Estimator" UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 5 AS depth, 22 AS parent_id, 50.0 AS "Estimator" UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 22 AS parent_id, 48.8 AS "Estimator" UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 5 AS depth, 26 AS parent_id, 44.86 AS "Estimator" UNION ALL SELECT 28 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 26 AS parent_id, 37.96666666666667 AS "Estimator" UNION ALL SELECT 29 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 4 AS depth, 25 AS parent_id, 50.0 AS "Estimator" UNION ALL SELECT 32 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 31 AS parent_id, 50.0 AS "Estimator" UNION ALL SELECT 35 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 47 AS count, 5 AS depth, 34 AS parent_id, 19.452777777777776 AS "Estimator" UNION ALL SELECT 36 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 34 AS parent_id, 27.9 AS "Estimator" UNION ALL SELECT 38 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 20 AS count, 5 AS depth, 37 AS parent_id, 25.480645161290326 AS "Estimator" UNION ALL SELECT 39 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 33 AS count, 5 AS depth, 37 AS parent_id, 21.616666666666667 AS "Estimator" UNION ALL SELECT 43 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 5 AS depth, 42 AS parent_id, 13.024999999999999 AS "Estimator" UNION ALL SELECT 44 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 14 AS count, 5 AS depth, 42 AS parent_id, 15.31578947368421 AS "Estimator" UNION ALL SELECT 46 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 45 AS parent_id, 16.7 AS "Estimator" UNION ALL SELECT 47 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 24 AS count, 5 AS depth, 45 AS parent_id, 9.946875000000002 AS "Estimator" UNION ALL SELECT 50 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 5 AS depth, 49 AS parent_id, 19.78571428571428 AS "Estimator" UNION ALL SELECT 51 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 49 AS parent_id, 27.1 AS "Estimator" UNION ALL SELECT 53 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS count, 5 AS depth, 52 AS parent_id, 14.394117647058824 AS "Estimator" UNION ALL SELECT 54 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 20 AS count, 5 AS depth, 52 AS parent_id, 16.56153846153847 AS "Estimator") AS "Values"), 
"DT_Output_15" AS 
(SELECT "DT_node_lookup_15"."KEY" AS "KEY", "DT_node_lookup_15".node_id_2 AS node_id_2, "DT_node_data_15".node_id AS node_id, "DT_node_data_15".feature AS feature, "DT_node_data_15".threshold AS threshold, "DT_node_data_15".count AS count, "DT_node_data_15".depth AS depth, "DT_node_data_15".parent_id AS parent_id, "DT_node_data_15"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_15" LEFT OUTER JOIN "DT_node_data_15" ON "DT_node_lookup_15".node_id_2 = "DT_node_data_15".node_id), 
"BAG_Tree_15" AS 
(SELECT "DT_Output_15"."KEY" AS "KEY", "DT_Output_15"."Estimator" AS "Estimator" 
FROM "DT_Output_15")
 INSERT INTO "TMP_20180329232002_GCLDYN_BAG_AVG_B1" ("KEY", "Estimator") SELECT "BAG_AVG_B1"."KEY", "BAG_AVG_B1"."Estimator" 
FROM (SELECT "BAG_AVG_esu_1"."KEY" AS "KEY", "BAG_AVG_esu_1"."Estimator" AS "Estimator" 
FROM (SELECT "BAG_Tree_10"."KEY" AS "KEY", "BAG_Tree_10"."Estimator" AS "Estimator" 
FROM "BAG_Tree_10" UNION ALL SELECT "BAG_Tree_11"."KEY" AS "KEY", "BAG_Tree_11"."Estimator" AS "Estimator" 
FROM "BAG_Tree_11" UNION ALL SELECT "BAG_Tree_12"."KEY" AS "KEY", "BAG_Tree_12"."Estimator" AS "Estimator" 
FROM "BAG_Tree_12" UNION ALL SELECT "BAG_Tree_13"."KEY" AS "KEY", "BAG_Tree_13"."Estimator" AS "Estimator" 
FROM "BAG_Tree_13" UNION ALL SELECT "BAG_Tree_14"."KEY" AS "KEY", "BAG_Tree_14"."Estimator" AS "Estimator" 
FROM "BAG_Tree_14" UNION ALL SELECT "BAG_Tree_15"."KEY" AS "KEY", "BAG_Tree_15"."Estimator" AS "Estimator" 
FROM "BAG_Tree_15") AS "BAG_AVG_esu_1") AS "BAG_AVG_B1"
-- Code For temporary table TMP_20180329232002_SIHTZF_BAG_AVG_Union part 1/2. Create 


CREATE TEMPORARY TABLE "TMP_20180329232002_SIHTZF_BAG_AVG_Union" (
	"KEY" BIGINT, 
	"Estimator" FLOAT
)


-- Code For temporary table TMP_20180329232002_SIHTZF_BAG_AVG_Union part 2/2. Populate

INSERT INTO "TMP_20180329232002_SIHTZF_BAG_AVG_Union" ("KEY", "Estimator") SELECT "BAG_AVG_Union"."KEY", "BAG_AVG_Union"."Estimator" 
FROM (SELECT "BAG_AVG_EnsembleUnion"."KEY" AS "KEY", "BAG_AVG_EnsembleUnion"."Estimator" AS "Estimator" 
FROM (SELECT "BAG_AVG_B0"."KEY" AS "KEY", "BAG_AVG_B0"."Estimator" AS "Estimator" 
FROM "TMP_20180329232002_KAZCEI_BAG_AVG_B0" AS "BAG_AVG_B0" UNION ALL SELECT "BAG_AVG_B1"."KEY" AS "KEY", "BAG_AVG_B1"."Estimator" AS "Estimator" 
FROM "TMP_20180329232002_GCLDYN_BAG_AVG_B1" AS "BAG_AVG_B1") AS "BAG_AVG_EnsembleUnion") AS "BAG_AVG_Union"

-- Model deployment code

WITH "BAG_AVG_avg" AS 
(SELECT "T"."KEY" AS "KEY", "T"."Estimator" AS "Estimator" 
FROM (SELECT "BAG_AVG_Union"."KEY" AS "KEY", avg(CAST("BAG_AVG_Union"."Estimator" AS FLOAT)) AS "Estimator" 
FROM "TMP_20180329232002_SIHTZF_BAG_AVG_Union" AS "BAG_AVG_Union" GROUP BY "BAG_AVG_Union"."KEY") AS "T")
 SELECT "BAG_AVG_avg"."KEY" AS "KEY", "BAG_AVG_avg"."Estimator" AS "Estimator" 
FROM "BAG_AVG_avg"