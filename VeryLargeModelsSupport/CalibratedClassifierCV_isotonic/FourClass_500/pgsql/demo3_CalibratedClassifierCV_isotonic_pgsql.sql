-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2018

-- This SQL code can contain one or more statements, to be executed in the order they appear in this file.


-- Code For temporary table TMP_20180329233333_3D4HKH_CalProb_AVG_B0 part 1/2. Create 


CREATE TEMPORARY TABLE "TMP_20180329233333_3D4HKH_CalProb_AVG_B0" (
	"KEY" BIGINT, 
	"Proba_0" FLOAT, 
	"Proba_1" FLOAT, 
	"Proba_2" FLOAT, 
	"Proba_3" FLOAT
)

 ON COMMIT PRESERVE ROWS
-- Code For temporary table TMP_20180329233333_3D4HKH_CalProb_AVG_B0 part 2/2. Populate

WITH "DT_node_lookup" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_18" <= 4.599671840667725) THEN CASE WHEN ("ADS"."Feature_249" <= 4.27580451965332) THEN CASE WHEN ("ADS"."Feature_477" <= 0.7047011852264404) THEN CASE WHEN ("ADS"."Feature_456" <= -3.913557529449463) THEN CASE WHEN ("ADS"."Feature_368" <= -0.7255069017410278) THEN 5 ELSE 6 END ELSE CASE WHEN ("ADS"."Feature_208" <= 7.578444480895996) THEN 8 ELSE 9 END END ELSE CASE WHEN ("ADS"."Feature_252" <= -6.678833484649658) THEN CASE WHEN ("ADS"."Feature_333" <= -3.098625659942627) THEN 12 ELSE 13 END ELSE CASE WHEN ("ADS"."Feature_143" <= 0.130018413066864) THEN 15 ELSE 16 END END END ELSE CASE WHEN ("ADS"."Feature_406" <= -0.07581485062837601) THEN CASE WHEN ("ADS"."Feature_358" <= 0.31789714097976685) THEN CASE WHEN ("ADS"."Feature_318" <= -0.8356505036354065) THEN 20 ELSE 21 END ELSE CASE WHEN ("ADS"."Feature_432" <= 1.7526850700378418) THEN 23 ELSE 24 END END ELSE CASE WHEN ("ADS"."Feature_198" <= -0.7164835929870605) THEN CASE WHEN ("ADS"."Feature_377" <= 3.510922431945801) THEN 27 ELSE 28 END ELSE CASE WHEN ("ADS"."Feature_335" <= -0.20649906992912292) THEN 30 ELSE 31 END END END END ELSE CASE WHEN ("ADS"."Feature_260" <= 1.3024637699127197) THEN CASE WHEN ("ADS"."Feature_497" <= -4.776134490966797) THEN CASE WHEN ("ADS"."Feature_167" <= -0.3644111752510071) THEN 35 ELSE CASE WHEN ("ADS"."Feature_120" <= 0.21466879546642303) THEN 37 ELSE 38 END END ELSE CASE WHEN ("ADS"."Feature_436" <= -4.761728763580322) THEN CASE WHEN ("ADS"."Feature_330" <= 0.5126336812973022) THEN 41 ELSE 42 END ELSE CASE WHEN ("ADS"."Feature_229" <= -5.699057579040527) THEN 44 ELSE 45 END END END ELSE CASE WHEN ("ADS"."Feature_14" <= 0.12037023156881332) THEN CASE WHEN ("ADS"."Feature_139" <= -1.064292311668396) THEN CASE WHEN ("ADS"."Feature_120" <= -1.0640134811401367) THEN 49 ELSE 50 END ELSE 51 END ELSE 52 END END END AS node_id_2 
FROM "FourClass_500" AS "ADS"), 
"DT_node_data" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Proba_2" AS "Proba_2", "Values"."LogProba_2" AS "LogProba_2", "Values"."Proba_3" AS "Proba_3", "Values"."LogProba_3" AS "LogProba_3", "Values"."Decision" AS "Decision", "Values"."DecisionProba" AS "DecisionProba" 
FROM (SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 5 AS depth, 4 AS parent_id, 0.8 AS "Proba_0", -0.2231435513142097 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.2 AS "Proba_3", -1.6094379124341003 AS "LogProba_3", 0 AS "Decision", 0.8 AS "DecisionProba" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 29 AS count, 5 AS depth, 4 AS parent_id, 0.06896551724137931 AS "Proba_0", -2.6741486494265287 AS "LogProba_0", 0.2413793103448276 AS "Proba_1", -1.4213856809311607 AS "LogProba_1", 0.5517241379310345 AS "Proba_2", -0.5947071077466928 AS "LogProba_2", 0.13793103448275862 AS "Proba_3", -1.9810014688665833 AS "LogProba_3", 2 AS "Decision", 0.5517241379310345 AS "DecisionProba" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 97 AS count, 5 AS depth, 7 AS parent_id, 0.07216494845360824 AS "Proba_0", -2.62880082944807 AS "LogProba_0", 0.7010309278350515 AS "Proba_1", -0.3552032733272762 AS "LogProba_1", 0.12371134020618557 AS "Proba_2", -2.0898043287153825 AS "LogProba_2", 0.10309278350515463 AS "Proba_3", -2.2721258855093374 AS "LogProba_3", 1 AS "Decision", 0.7010309278350515 AS "DecisionProba" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 5 AS depth, 7 AS parent_id, 0.1 AS "Proba_0", -2.3025850929940455 AS "LogProba_0", 0.1 AS "Proba_1", -2.3025850929940455 AS "LogProba_1", 0.2 AS "Proba_2", -1.6094379124341003 AS "LogProba_2", 0.6 AS "Proba_3", -0.5108256237659907 AS "LogProba_3", 3 AS "Decision", 0.6 AS "DecisionProba" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 5 AS depth, 11 AS parent_id, 0.9 AS "Proba_0", -0.10536051565782628 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.1 AS "Proba_2", -2.3025850929940455 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0 AS "Decision", 0.9 AS "DecisionProba" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 14 AS count, 5 AS depth, 11 AS parent_id, 0.21428571428571427 AS "Proba_0", -1.540445040947149 AS "LogProba_0", 0.14285714285714285 AS "Proba_1", -1.9459101490553135 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.6428571428571429 AS "Proba_3", -0.4418327522790392 AS "LogProba_3", 3 AS "Decision", 0.6428571428571429 AS "DecisionProba" UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 67 AS count, 5 AS depth, 14 AS parent_id, 0.13432835820895522 AS "Proba_0", -2.0074680420547466 AS "LogProba_0", 0.1791044776119403 AS "Proba_1", -1.7197859696029658 AS "LogProba_1", 0.5373134328358209 AS "Proba_2", -0.621173680934856 AS "LogProba_2", 0.14925373134328357 AS "Proba_3", -1.9021075263969205 AS "LogProba_3", 2 AS "Decision", 0.5373134328358209 AS "DecisionProba" UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 59 AS count, 5 AS depth, 14 AS parent_id, 0.23728813559322035 AS "Proba_0", -1.4384801142904609 AS "LogProba_0", 0.3559322033898305 AS "Proba_1", -1.0330150061822965 AS "LogProba_1", 0.1864406779661017 AS "Proba_2", -1.6796421711073488 AS "LogProba_2", 0.22033898305084745 AS "Proba_3", -1.5125880864441827 AS "LogProba_3", 1 AS "Decision", 0.3559322033898305 AS "DecisionProba" UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 5 AS depth, 19 AS parent_id, 0.2222222222222222 AS "Proba_0", -1.5040773967762742 AS "LogProba_0", 0.1111111111111111 AS "Proba_1", -2.1972245773362196 AS "LogProba_1", 0.5555555555555556 AS "Proba_2", -0.587786664902119 AS "LogProba_2", 0.1111111111111111 AS "Proba_3", -2.1972245773362196 AS "LogProba_3", 2 AS "Decision", 0.5555555555555556 AS "DecisionProba" UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 32 AS count, 5 AS depth, 19 AS parent_id, 0.875 AS "Proba_0", -0.13353139262452263 AS "LogProba_0", 0.03125 AS "Proba_1", -3.4657359027997265 AS "LogProba_1", 0.0625 AS "Proba_2", -2.772588722239781 AS "LogProba_2", 0.03125 AS "Proba_3", -3.4657359027997265 AS "LogProba_3", 0 AS "Decision", 0.875 AS "DecisionProba" UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 31 AS count, 5 AS depth, 22 AS parent_id, 0.3870967741935484 AS "Proba_0", -0.9490805546971459 AS "LogProba_0", 0.06451612903225806 AS "Proba_1", -2.740840023925201 AS "LogProba_1", 0.16129032258064516 AS "Proba_2", -1.824549292051046 AS "LogProba_2", 0.3870967741935484 AS "Proba_3", -0.9490805546971459 AS "LogProba_3", 0 AS "Decision", 0.3870967741935484 AS "DecisionProba" UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 5 AS depth, 22 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 1 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 5 AS depth, 26 AS parent_id, 0.10526315789473684 AS "Proba_0", -2.2512917986064953 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.8421052631578947 AS "Proba_2", -0.17185025692665928 AS "LogProba_2", 0.05263157894736842 AS "Proba_3", -2.9444389791664407 AS "LogProba_3", 2 AS "Decision", 0.8421052631578947 AS "DecisionProba" UNION ALL SELECT 28 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 5 AS depth, 26 AS parent_id, 0.2222222222222222 AS "Proba_0", -1.5040773967762742 AS "LogProba_0", 0.4444444444444444 AS "Proba_1", -0.8109302162163288 AS "LogProba_1", 0.1111111111111111 AS "Proba_2", -2.1972245773362196 AS "LogProba_2", 0.2222222222222222 AS "Proba_3", -1.5040773967762742 AS "LogProba_3", 1 AS "Decision", 0.4444444444444444 AS "DecisionProba" UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 27 AS count, 5 AS depth, 29 AS parent_id, 0.4444444444444444 AS "Proba_0", -0.8109302162163288 AS "LogProba_0", 0.037037037037037035 AS "Proba_1", -3.295836866004329 AS "LogProba_1", 0.3333333333333333 AS "Proba_2", -1.0986122886681098 AS "LogProba_2", 0.18518518518518517 AS "Proba_3", -1.6863989535702288 AS "LogProba_3", 0 AS "Decision", 0.4444444444444444 AS "DecisionProba" UNION ALL SELECT 31 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 41 AS count, 5 AS depth, 29 AS parent_id, 0.04878048780487805 AS "Proba_0", -3.0204248861443626 AS "LogProba_0", 0.2926829268292683 AS "Proba_1", -1.2286654169163076 AS "LogProba_1", 0.12195121951219512 AS "Proba_2", -2.1041341542702074 AS "LogProba_2", 0.5365853658536586 AS "Proba_3", -0.6225296133459919 AS "LogProba_3", 3 AS "Decision", 0.5365853658536586 AS "DecisionProba" UNION ALL SELECT 35 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS count, 4 AS depth, 34 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 2 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 37 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 5 AS depth, 36 AS parent_id, 0.5714285714285714 AS "Proba_0", -0.5596157879354228 AS "LogProba_0", 0.14285714285714285 AS "Proba_1", -1.9459101490553135 AS "LogProba_1", 0.2857142857142857 AS "Proba_2", -1.252762968495368 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0 AS "Decision", 0.5714285714285714 AS "DecisionProba" UNION ALL SELECT 38 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 5 AS depth, 36 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 1.0 AS "Proba_3", 0.0 AS "LogProba_3", 3 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 41 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 5 AS depth, 40 AS parent_id, 0.8666666666666667 AS "Proba_0", -0.1431008436406733 AS "LogProba_0", 0.06666666666666667 AS "Proba_1", -2.70805020110221 AS "LogProba_1", 0.06666666666666667 AS "Proba_2", -2.70805020110221 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0 AS "Decision", 0.8666666666666667 AS "DecisionProba" UNION ALL SELECT 42 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 5 AS depth, 40 AS parent_id, 0.2 AS "Proba_0", -1.6094379124341003 AS "LogProba_0", 0.1 AS "Proba_1", -2.3025850929940455 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.7 AS "Proba_3", -0.35667494393873245 AS "LogProba_3", 3 AS "Decision", 0.7 AS "DecisionProba" UNION ALL SELECT 44 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 5 AS depth, 43 AS parent_id, 0.1 AS "Proba_0", -2.3025850929940455 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.8 AS "Proba_2", -0.2231435513142097 AS "LogProba_2", 0.1 AS "Proba_3", -2.3025850929940455 AS "LogProba_3", 2 AS "Decision", 0.8 AS "DecisionProba" UNION ALL SELECT 45 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 58 AS count, 5 AS depth, 43 AS parent_id, 0.15517241379310345 AS "Proba_0", -1.8632184332102 AS "LogProba_0", 0.034482758620689655 AS "Proba_1", -3.367295829986474 AS "LogProba_1", 0.08620689655172414 AS "Proba_2", -2.451005098112319 AS "LogProba_2", 0.7241379310344828 AS "Proba_3", -0.322773392263051 AS "LogProba_3", 3 AS "Decision", 0.7241379310344828 AS "DecisionProba" UNION ALL SELECT 49 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 48 AS parent_id, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 50 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 48 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 2 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 51 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 4 AS depth, 47 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 1.0 AS "Proba_3", 0.0 AS "LogProba_3", 3 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 52 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, 46 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 1 AS "Decision", 1.0 AS "DecisionProba") AS "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".node_id AS node_id, "DT_node_data".feature AS feature, "DT_node_data".threshold AS threshold, "DT_node_data".count AS count, "DT_node_data".depth AS depth, "DT_node_data".parent_id AS parent_id, "DT_node_data"."Proba_0" AS "Proba_0", "DT_node_data"."LogProba_0" AS "LogProba_0", "DT_node_data"."Proba_1" AS "Proba_1", "DT_node_data"."LogProba_1" AS "LogProba_1", "DT_node_data"."Proba_2" AS "Proba_2", "DT_node_data"."LogProba_2" AS "LogProba_2", "DT_node_data"."Proba_3" AS "Proba_3", "DT_node_data"."LogProba_3" AS "LogProba_3", "DT_node_data"."Decision" AS "Decision", "DT_node_data"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".node_id), 
calibration_base_estimator_0 AS 
(SELECT "DT_Output"."KEY" AS "KEY", CAST(NULL AS FLOAT) AS "Score_0", CAST(NULL AS FLOAT) AS "Score_1", CAST(NULL AS FLOAT) AS "Score_2", CAST(NULL AS FLOAT) AS "Score_3", "DT_Output"."Proba_0" AS "Proba_0", "DT_Output"."Proba_1" AS "Proba_1", "DT_Output"."Proba_2" AS "Proba_2", "DT_Output"."Proba_3" AS "Proba_3", "DT_Output"."LogProba_0" AS "LogProba_0", "DT_Output"."LogProba_1" AS "LogProba_1", "DT_Output"."LogProba_2" AS "LogProba_2", "DT_Output"."LogProba_3" AS "LogProba_3", CAST(NULL AS BIGINT) AS "Decision", CAST(NULL AS FLOAT) AS "DecisionProba", coalesce(CAST(NULL AS FLOAT), "DT_Output"."Proba_0") AS "ScoreOrProba_0", coalesce(CAST(NULL AS FLOAT), "DT_Output"."Proba_1") AS "ScoreOrProba_1", coalesce(CAST(NULL AS FLOAT), "DT_Output"."Proba_2") AS "ScoreOrProba_2", coalesce(CAST(NULL AS FLOAT), "DT_Output"."Proba_3") AS "ScoreOrProba_3" 
FROM "DT_Output"), 
isotonic_cte_0 AS 
(SELECT calibration_base_estimator_0."KEY" AS "KEY", CASE WHEN (calibration_base_estimator_0."ScoreOrProba_0" < 0.0) THEN 0.21428571428571427 WHEN (calibration_base_estimator_0."ScoreOrProba_0" < 0.04878048780487805) THEN (calibration_base_estimator_0."ScoreOrProba_0" - 0.0) * 0.19049898249898267 + 0.21428571428571427 WHEN (calibration_base_estimator_0."ScoreOrProba_0" < 0.8) THEN (calibration_base_estimator_0."ScoreOrProba_0" - 0.04878048780487805) * 0.0 + 0.22357834757834757 WHEN (calibration_base_estimator_0."ScoreOrProba_0" < 0.8666666666666667) THEN (calibration_base_estimator_0."ScoreOrProba_0" - 0.8) * 0.50996114996115 + 0.22357834757834757 WHEN (calibration_base_estimator_0."ScoreOrProba_0" < 0.875) THEN (calibration_base_estimator_0."ScoreOrProba_0" - 0.8666666666666667) * 0.0 + 0.25757575757575757 ELSE 0.25757575757575757 END AS "Proba_0", CASE WHEN (calibration_base_estimator_0."ScoreOrProba_1" < 0.0) THEN 0.14825583772952192 WHEN (calibration_base_estimator_0."ScoreOrProba_1" < 0.14285714285714285) THEN (calibration_base_estimator_0."ScoreOrProba_1" - 0.0) * 0.0 + 0.14825583772952192 WHEN (calibration_base_estimator_0."ScoreOrProba_1" < 0.1791044776119403) THEN (calibration_base_estimator_0."ScoreOrProba_1" - 0.14285714285714285) * 1.789799880202358 + 0.14825583772952192 WHEN (calibration_base_estimator_0."ScoreOrProba_1" < 0.2926829268292683) THEN (calibration_base_estimator_0."ScoreOrProba_1" - 0.1791044776119403) * 0.0 + 0.21313131313131314 WHEN (calibration_base_estimator_0."ScoreOrProba_1" < 0.3559322033898305) THEN (calibration_base_estimator_0."ScoreOrProba_1" - 0.2926829268292683) * 1.0572245329108074 + 0.21313131313131314 WHEN (calibration_base_estimator_0."ScoreOrProba_1" < 0.4444444444444444) THEN (calibration_base_estimator_0."ScoreOrProba_1" - 0.3559322033898305) * 0.6025531914893614 + 0.28 WHEN (calibration_base_estimator_0."ScoreOrProba_1" < 0.7010309278350515) THEN (calibration_base_estimator_0."ScoreOrProba_1" - 0.4444444444444444) * 0.07423469387755098 + 0.3333333333333333 WHEN (calibration_base_estimator_0."ScoreOrProba_1" < 1.0) THEN (calibration_base_estimator_0."ScoreOrProba_1" - 0.7010309278350515) * 0.0 + 0.35238095238095235 ELSE 0.35238095238095235 END AS "Proba_1", CASE WHEN (calibration_base_estimator_0."ScoreOrProba_2" < 0.0) THEN 0.25114567971710827 WHEN (calibration_base_estimator_0."ScoreOrProba_2" < 0.12371134020618557) THEN (calibration_base_estimator_0."ScoreOrProba_2" - 0.0) * 0.0 + 0.25114567971710827 WHEN (calibration_base_estimator_0."ScoreOrProba_2" < 0.16129032258064516) THEN (calibration_base_estimator_0."ScoreOrProba_2" - 0.12371134020618557) * 0.5742995591288891 + 0.25114567971710827 WHEN (calibration_base_estimator_0."ScoreOrProba_2" < 0.1864406779661017) THEN (calibration_base_estimator_0."ScoreOrProba_2" - 0.16129032258064516) * 1.8796047430830045 + 0.2727272727272727 WHEN (calibration_base_estimator_0."ScoreOrProba_2" < 0.2) THEN (calibration_base_estimator_0."ScoreOrProba_2" - 0.1864406779661017) * 2.1752525252525254 + 0.32 WHEN (calibration_base_estimator_0."ScoreOrProba_2" < 0.5555555555555556) THEN (calibration_base_estimator_0."ScoreOrProba_2" - 0.2) * 0.0 + 0.3494949494949495 WHEN (calibration_base_estimator_0."ScoreOrProba_2" < 0.8) THEN (calibration_base_estimator_0."ScoreOrProba_2" - 0.5555555555555556) * 0.274793388429752 + 0.3494949494949495 WHEN (calibration_base_estimator_0."ScoreOrProba_2" < 1.0) THEN (calibration_base_estimator_0."ScoreOrProba_2" - 0.8) * 0.0 + 0.4166666666666667 ELSE 0.4166666666666667 END AS "Proba_2", CASE WHEN (calibration_base_estimator_0."ScoreOrProba_3" < 0.0) THEN 0.14160839160839161 WHEN (calibration_base_estimator_0."ScoreOrProba_3" < 0.1) THEN (calibration_base_estimator_0."ScoreOrProba_3" - 0.0) * 0.0 + 0.14160839160839161 WHEN (calibration_base_estimator_0."ScoreOrProba_3" < 0.10309278350515463) THEN (calibration_base_estimator_0."ScoreOrProba_3" - 0.1) * 32.50754356754368 + 0.14160839160839161 WHEN (calibration_base_estimator_0."ScoreOrProba_3" < 0.5365853658536586) THEN (calibration_base_estimator_0."ScoreOrProba_3" - 0.10309278350515463) * 0.0 + 0.24214718614718614 WHEN (calibration_base_estimator_0."ScoreOrProba_3" < 0.6) THEN (calibration_base_estimator_0."ScoreOrProba_3" - 0.5365853658536586) * 1.437935397935399 + 0.24214718614718614 WHEN (calibration_base_estimator_0."ScoreOrProba_3" < 0.6428571428571429) THEN (calibration_base_estimator_0."ScoreOrProba_3" - 0.6) * 1.1324786324786305 + 0.3333333333333333 WHEN (calibration_base_estimator_0."ScoreOrProba_3" < 1.0) THEN (calibration_base_estimator_0."ScoreOrProba_3" - 0.6428571428571429) * 0.0 + 0.38186813186813184 ELSE 0.38186813186813184 END AS "Proba_3" 
FROM calibration_base_estimator_0), 
"Normalized_Probas" AS 
(SELECT isotonic_cte_0."KEY" AS "KEY", isotonic_cte_0."Proba_0" / (isotonic_cte_0."Proba_0" + isotonic_cte_0."Proba_1" + isotonic_cte_0."Proba_2" + isotonic_cte_0."Proba_3") AS "Proba_0", isotonic_cte_0."Proba_1" / (isotonic_cte_0."Proba_0" + isotonic_cte_0."Proba_1" + isotonic_cte_0."Proba_2" + isotonic_cte_0."Proba_3") AS "Proba_1", isotonic_cte_0."Proba_2" / (isotonic_cte_0."Proba_0" + isotonic_cte_0."Proba_1" + isotonic_cte_0."Proba_2" + isotonic_cte_0."Proba_3") AS "Proba_2", isotonic_cte_0."Proba_3" / (isotonic_cte_0."Proba_0" + isotonic_cte_0."Proba_1" + isotonic_cte_0."Proba_2" + isotonic_cte_0."Proba_3") AS "Proba_3" 
FROM isotonic_cte_0), 
"DT_node_lookup_1" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_266" <= 2.7727837562561035) THEN CASE WHEN ("ADS"."Feature_196" <= 3.8369054794311523) THEN CASE WHEN ("ADS"."Feature_259" <= 0.5386122465133667) THEN CASE WHEN ("ADS"."Feature_135" <= 1.0529279708862305) THEN CASE WHEN ("ADS"."Feature_183" <= -8.940668106079102) THEN 5 ELSE 6 END ELSE CASE WHEN ("ADS"."Feature_459" <= -0.8073694705963135) THEN 8 ELSE 9 END END ELSE CASE WHEN ("ADS"."Feature_495" <= -0.5938317775726318) THEN CASE WHEN ("ADS"."Feature_424" <= -0.6840119957923889) THEN 12 ELSE 13 END ELSE CASE WHEN ("ADS"."Feature_310" <= 0.7753769755363464) THEN 15 ELSE 16 END END END ELSE CASE WHEN ("ADS"."Feature_74" <= -0.8993635177612305) THEN CASE WHEN ("ADS"."Feature_420" <= -6.494420051574707) THEN 19 ELSE CASE WHEN ("ADS"."Feature_115" <= 1.1693236827850342) THEN 21 ELSE 22 END END ELSE CASE WHEN ("ADS"."Feature_209" <= 4.615220069885254) THEN CASE WHEN ("ADS"."Feature_390" <= -1.7241226434707642) THEN 25 ELSE 26 END ELSE CASE WHEN ("ADS"."Feature_308" <= 1.6096198558807373) THEN 28 ELSE 29 END END END END ELSE CASE WHEN ("ADS"."Feature_106" <= -5.906652450561523) THEN CASE WHEN ("ADS"."Feature_422" <= 4.5897698402404785) THEN CASE WHEN ("ADS"."Feature_399" <= 1.0775868892669678) THEN CASE WHEN ("ADS"."Feature_402" <= 0.8048110008239746) THEN 34 ELSE 35 END ELSE 36 END ELSE CASE WHEN ("ADS"."Feature_120" <= -1.3463976383209229) THEN 38 ELSE 39 END END ELSE CASE WHEN ("ADS"."Feature_142" <= 1.063592791557312) THEN CASE WHEN ("ADS"."Feature_396" <= 4.546978950500488) THEN CASE WHEN ("ADS"."Feature_31" <= -0.8535979986190796) THEN 43 ELSE 44 END ELSE CASE WHEN ("ADS"."Feature_185" <= -0.9535076022148132) THEN 46 ELSE 47 END END ELSE CASE WHEN ("ADS"."Feature_200" <= 1.3213739395141602) THEN CASE WHEN ("ADS"."Feature_373" <= 1.0130535364151) THEN 50 ELSE 51 END ELSE CASE WHEN ("ADS"."Feature_67" <= 0.873365044593811) THEN 53 ELSE 54 END END END END END AS node_id_2 
FROM "FourClass_500" AS "ADS"), 
"DT_node_data_1" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Proba_2" AS "Proba_2", "Values"."LogProba_2" AS "LogProba_2", "Values"."Proba_3" AS "Proba_3", "Values"."LogProba_3" AS "LogProba_3", "Values"."Decision" AS "Decision", "Values"."DecisionProba" AS "DecisionProba" 
FROM (SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 5 AS depth, 4 AS parent_id, 0.05555555555555555 AS "Proba_0", -2.890371757896165 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.05555555555555555 AS "Proba_2", -2.890371757896165 AS "LogProba_2", 0.8888888888888888 AS "Proba_3", -0.11778303565638351 AS "LogProba_3", 3 AS "Decision", 0.8888888888888888 AS "DecisionProba" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 129 AS count, 5 AS depth, 4 AS parent_id, 0.31007751937984496 AS "Proba_0", -1.170932950247736 AS "LogProba_0", 0.18604651162790697 AS "Proba_1", -1.6817585740137264 AS "LogProba_1", 0.17829457364341086 AS "Proba_2", -1.7243181884325223 AS "LogProba_2", 0.32558139534883723 AS "Proba_3", -1.1221427860783038 AS "LogProba_3", 3 AS "Decision", 0.32558139534883723 AS "DecisionProba" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 5 AS depth, 7 AS parent_id, 0.05263157894736842 AS "Proba_0", -2.9444389791664407 AS "LogProba_0", 0.7894736842105263 AS "Proba_1", -0.2363887780642304 AS "LogProba_1", 0.10526315789473684 AS "Proba_2", -2.2512917986064953 AS "LogProba_2", 0.05263157894736842 AS "Proba_3", -2.9444389791664407 AS "LogProba_3", 1 AS "Decision", 0.7894736842105263 AS "DecisionProba" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 80 AS count, 5 AS depth, 7 AS parent_id, 0.125 AS "Proba_0", -2.0794415416798357 AS "LogProba_0", 0.25 AS "Proba_1", -1.3862943611198906 AS "LogProba_1", 0.325 AS "Proba_2", -1.1239300966523995 AS "LogProba_2", 0.3 AS "Proba_3", -1.2039728043259361 AS "LogProba_3", 2 AS "Decision", 0.325 AS "DecisionProba" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 5 AS depth, 11 AS parent_id, 0.125 AS "Proba_0", -2.0794415416798357 AS "LogProba_0", 0.75 AS "Proba_1", -0.2876820724517809 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.125 AS "Proba_3", -2.0794415416798357 AS "LogProba_3", 1 AS "Decision", 0.75 AS "DecisionProba" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 31 AS count, 5 AS depth, 11 AS parent_id, 0.1935483870967742 AS "Proba_0", -1.6422277352570913 AS "LogProba_0", 0.0967741935483871 AS "Proba_1", -2.3353749158170367 AS "LogProba_1", 0.5483870967741935 AS "Proba_2", -0.6007738604289302 AS "LogProba_2", 0.16129032258064516 AS "Proba_3", -1.824549292051046 AS "LogProba_3", 2 AS "Decision", 0.5483870967741935 AS "DecisionProba" UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 40 AS count, 5 AS depth, 14 AS parent_id, 0.05 AS "Proba_0", -2.995732273553991 AS "LogProba_0", 0.8 AS "Proba_1", -0.2231435513142097 AS "LogProba_1", 0.075 AS "Proba_2", -2.5902671654458267 AS "LogProba_2", 0.075 AS "Proba_3", -2.5902671654458267 AS "LogProba_3", 1 AS "Decision", 0.8 AS "DecisionProba" UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 5 AS depth, 14 AS parent_id, 0.8 AS "Proba_0", -0.2231435513142097 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.2 AS "Proba_2", -1.6094379124341003 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0 AS "Decision", 0.8 AS "DecisionProba" UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 4 AS depth, 18 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 1 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS count, 5 AS depth, 20 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 1.0 AS "Proba_3", 0.0 AS "LogProba_3", 3 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 20 AS parent_id, 0.5 AS "Proba_0", -0.6931471805599453 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.5 AS "Proba_2", -0.6931471805599453 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0 AS "Decision", 0.5 AS "DecisionProba" UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 24 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 1.0 AS "Proba_3", 0.0 AS "LogProba_3", 3 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 48 AS count, 5 AS depth, 24 AS parent_id, 0.041666666666666664 AS "Proba_0", -3.1780538303479458 AS "LogProba_0", 0.125 AS "Proba_1", -2.0794415416798357 AS "LogProba_1", 0.7708333333333334 AS "Proba_2", -0.2602830982636664 AS "LogProba_2", 0.0625 AS "Proba_3", -2.772588722239781 AS "LogProba_3", 2 AS "Decision", 0.7708333333333334 AS "DecisionProba" UNION ALL SELECT 28 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 14 AS count, 5 AS depth, 27 AS parent_id, 0.14285714285714285 AS "Proba_0", -1.9459101490553135 AS "LogProba_0", 0.21428571428571427 AS "Proba_1", -1.540445040947149 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.6428571428571429 AS "Proba_3", -0.4418327522790392 AS "LogProba_3", 3 AS "Decision", 0.6428571428571429 AS "DecisionProba" UNION ALL SELECT 29 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 5 AS depth, 27 AS parent_id, 0.2857142857142857 AS "Proba_0", -1.252762968495368 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.7142857142857143 AS "Proba_2", -0.3364722366212129 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 2 AS "Decision", 0.7142857142857143 AS "DecisionProba" UNION ALL SELECT 34 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 5 AS depth, 33 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 1.0 AS "Proba_3", 0.0 AS "LogProba_3", 3 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 35 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 33 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 1 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 36 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 4 AS depth, 32 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 2 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 38 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 37 AS parent_id, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 39 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 4 AS depth, 37 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 1 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 43 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 5 AS depth, 42 AS parent_id, 0.1111111111111111 AS "Proba_0", -2.1972245773362196 AS "LogProba_0", 0.6666666666666666 AS "Proba_1", -0.40546510810816444 AS "LogProba_1", 0.1111111111111111 AS "Proba_2", -2.1972245773362196 AS "LogProba_2", 0.1111111111111111 AS "Proba_3", -2.1972245773362196 AS "LogProba_3", 1 AS "Decision", 0.6666666666666666 AS "DecisionProba" UNION ALL SELECT 44 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 64 AS count, 5 AS depth, 42 AS parent_id, 0.796875 AS "Proba_0", -0.22705745063534608 AS "LogProba_0", 0.09375 AS "Proba_1", -2.367123614131617 AS "LogProba_1", 0.078125 AS "Proba_2", -2.5494451709255714 AS "LogProba_2", 0.03125 AS "Proba_3", -3.4657359027997265 AS "LogProba_3", 0 AS "Decision", 0.796875 AS "DecisionProba" UNION ALL SELECT 46 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 5 AS depth, 45 AS parent_id, 0.25 AS "Proba_0", -1.3862943611198906 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.75 AS "Proba_2", -0.2876820724517809 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 2 AS "Decision", 0.75 AS "DecisionProba" UNION ALL SELECT 47 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS count, 5 AS depth, 45 AS parent_id, 0.23076923076923078 AS "Proba_0", -1.466337068793427 AS "LogProba_0", 0.38461538461538464 AS "Proba_1", -0.9555114450274363 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.38461538461538464 AS "Proba_3", -0.9555114450274363 AS "LogProba_3", 1 AS "Decision", 0.38461538461538464 AS "DecisionProba" UNION ALL SELECT 50 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 37 AS count, 5 AS depth, 49 AS parent_id, 0.10810810810810811 AS "Proba_0", -2.2246235515243336 AS "LogProba_0", 0.24324324324324326 AS "Proba_1", -1.413693335308005 AS "LogProba_1", 0.16216216216216217 AS "Proba_2", -1.8191584434161694 AS "LogProba_2", 0.4864864864864865 AS "Proba_3", -0.7205461547480597 AS "LogProba_3", 3 AS "Decision", 0.4864864864864865 AS "DecisionProba" UNION ALL SELECT 51 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 5 AS depth, 49 AS parent_id, 0.7777777777777778 AS "Proba_0", -0.25131442828090605 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.2222222222222222 AS "Proba_2", -1.5040773967762742 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0 AS "Decision", 0.7777777777777778 AS "DecisionProba" UNION ALL SELECT 53 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 5 AS depth, 52 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 2 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 54 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 52 AS parent_id, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0 AS "Decision", 1.0 AS "DecisionProba") AS "Values"), 
"DT_Output_1" AS 
(SELECT "DT_node_lookup_1"."KEY" AS "KEY", "DT_node_lookup_1".node_id_2 AS node_id_2, "DT_node_data_1".node_id AS node_id, "DT_node_data_1".feature AS feature, "DT_node_data_1".threshold AS threshold, "DT_node_data_1".count AS count, "DT_node_data_1".depth AS depth, "DT_node_data_1".parent_id AS parent_id, "DT_node_data_1"."Proba_0" AS "Proba_0", "DT_node_data_1"."LogProba_0" AS "LogProba_0", "DT_node_data_1"."Proba_1" AS "Proba_1", "DT_node_data_1"."LogProba_1" AS "LogProba_1", "DT_node_data_1"."Proba_2" AS "Proba_2", "DT_node_data_1"."LogProba_2" AS "LogProba_2", "DT_node_data_1"."Proba_3" AS "Proba_3", "DT_node_data_1"."LogProba_3" AS "LogProba_3", "DT_node_data_1"."Decision" AS "Decision", "DT_node_data_1"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup_1" LEFT OUTER JOIN "DT_node_data_1" ON "DT_node_lookup_1".node_id_2 = "DT_node_data_1".node_id), 
calibration_base_estimator_1 AS 
(SELECT "DT_Output_1"."KEY" AS "KEY", CAST(NULL AS FLOAT) AS "Score_0", CAST(NULL AS FLOAT) AS "Score_1", CAST(NULL AS FLOAT) AS "Score_2", CAST(NULL AS FLOAT) AS "Score_3", "DT_Output_1"."Proba_0" AS "Proba_0", "DT_Output_1"."Proba_1" AS "Proba_1", "DT_Output_1"."Proba_2" AS "Proba_2", "DT_Output_1"."Proba_3" AS "Proba_3", "DT_Output_1"."LogProba_0" AS "LogProba_0", "DT_Output_1"."LogProba_1" AS "LogProba_1", "DT_Output_1"."LogProba_2" AS "LogProba_2", "DT_Output_1"."LogProba_3" AS "LogProba_3", CAST(NULL AS BIGINT) AS "Decision", CAST(NULL AS FLOAT) AS "DecisionProba", coalesce(CAST(NULL AS FLOAT), "DT_Output_1"."Proba_0") AS "ScoreOrProba_0", coalesce(CAST(NULL AS FLOAT), "DT_Output_1"."Proba_1") AS "ScoreOrProba_1", coalesce(CAST(NULL AS FLOAT), "DT_Output_1"."Proba_2") AS "ScoreOrProba_2", coalesce(CAST(NULL AS FLOAT), "DT_Output_1"."Proba_3") AS "ScoreOrProba_3" 
FROM "DT_Output_1"), 
isotonic_cte_1 AS 
(SELECT calibration_base_estimator_1."KEY" AS "KEY", CASE WHEN (calibration_base_estimator_1."ScoreOrProba_0" < 0.0) THEN 0.18035714285714283 WHEN (calibration_base_estimator_1."ScoreOrProba_0" < 0.05263157894736842) THEN (calibration_base_estimator_1."ScoreOrProba_0" - 0.0) * 0.0 + 0.18035714285714283 WHEN (calibration_base_estimator_1."ScoreOrProba_0" < 0.05555555555555555) THEN (calibration_base_estimator_1."ScoreOrProba_0" - 0.05263157894736842) * 14.454452690166983 + 0.18035714285714283 WHEN (calibration_base_estimator_1."ScoreOrProba_0" < 0.23076923076923078) THEN (calibration_base_estimator_1."ScoreOrProba_0" - 0.05555555555555555) * 0.0 + 0.22262162440733868 WHEN (calibration_base_estimator_1."ScoreOrProba_0" < 0.25) THEN (calibration_base_estimator_1."ScoreOrProba_0" - 0.23076923076923078) * 1.6206452277880865 + 0.22262162440733868 WHEN (calibration_base_estimator_1."ScoreOrProba_0" < 0.5) THEN (calibration_base_estimator_1."ScoreOrProba_0" - 0.25) * 0.0 + 0.2537878787878788 WHEN (calibration_base_estimator_1."ScoreOrProba_0" < 0.7777777777777778) THEN (calibration_base_estimator_1."ScoreOrProba_0" - 0.5) * 0.011363636363636286 + 0.2537878787878788 WHEN (calibration_base_estimator_1."ScoreOrProba_0" < 0.8) THEN (calibration_base_estimator_1."ScoreOrProba_0" - 0.7777777777777778) * 0.0 + 0.2569444444444444 ELSE 0.2569444444444444 END AS "Proba_0", CASE WHEN (calibration_base_estimator_1."ScoreOrProba_1" < 0.0) THEN 0.16666666666666669 WHEN (calibration_base_estimator_1."ScoreOrProba_1" < 0.09375) THEN (calibration_base_estimator_1."ScoreOrProba_1" - 0.0) * 0.0 + 0.16666666666666669 WHEN (calibration_base_estimator_1."ScoreOrProba_1" < 0.0967741935483871) THEN (calibration_base_estimator_1."ScoreOrProba_1" - 0.09375) * 16.926984126984138 + 0.16666666666666669 WHEN (calibration_base_estimator_1."ScoreOrProba_1" < 0.125) THEN (calibration_base_estimator_1."ScoreOrProba_1" - 0.0967741935483871) * 0.0 + 0.21785714285714286 WHEN (calibration_base_estimator_1."ScoreOrProba_1" < 0.18604651162790697) THEN (calibration_base_estimator_1."ScoreOrProba_1" - 0.125) * 0.89882498453927 + 0.21785714285714286 WHEN (calibration_base_estimator_1."ScoreOrProba_1" < 0.21428571428571427) THEN (calibration_base_estimator_1."ScoreOrProba_1" - 0.18604651162790697) * 3.570094924577849 + 0.2727272727272727 WHEN (calibration_base_estimator_1."ScoreOrProba_1" < 0.38461538461538464) THEN (calibration_base_estimator_1."ScoreOrProba_1" - 0.21428571428571427) * 0.0 + 0.37354390681003585 WHEN (calibration_base_estimator_1."ScoreOrProba_1" < 0.6666666666666666) THEN (calibration_base_estimator_1."ScoreOrProba_1" - 0.38461538461538464) * 0.3554871875436391 + 0.37354390681003585 WHEN (calibration_base_estimator_1."ScoreOrProba_1" < 1.0) THEN (calibration_base_estimator_1."ScoreOrProba_1" - 0.6666666666666666) * 0.0 + 0.4738095238095238 ELSE 0.4738095238095238 END AS "Proba_1", CASE WHEN (calibration_base_estimator_1."ScoreOrProba_2" < 0.0) THEN 0.14375509755944538 WHEN (calibration_base_estimator_1."ScoreOrProba_2" < 0.2) THEN (calibration_base_estimator_1."ScoreOrProba_2" - 0.0) * 0.0 + 0.14375509755944538 WHEN (calibration_base_estimator_1."ScoreOrProba_2" < 0.2222222222222222) THEN (calibration_base_estimator_1."ScoreOrProba_2" - 0.2) * 10.089776370193633 + 0.14375509755944538 WHEN (calibration_base_estimator_1."ScoreOrProba_2" < 1.0) THEN (calibration_base_estimator_1."ScoreOrProba_2" - 0.2222222222222222) * 0.0 + 0.36797235023041475 ELSE 0.36797235023041475 END AS "Proba_2", CASE WHEN (calibration_base_estimator_1."ScoreOrProba_3" < 0.0) THEN 0.1550925925925926 WHEN (calibration_base_estimator_1."ScoreOrProba_3" < 0.05263157894736842) THEN (calibration_base_estimator_1."ScoreOrProba_3" - 0.0) * 0.0 + 0.1550925925925926 WHEN (calibration_base_estimator_1."ScoreOrProba_3" < 0.0625) THEN (calibration_base_estimator_1."ScoreOrProba_3" - 0.05263157894736842) * 9.81817705989749 + 0.1550925925925926 WHEN (calibration_base_estimator_1."ScoreOrProba_3" < 0.6428571428571429) THEN (calibration_base_estimator_1."ScoreOrProba_3" - 0.0625) * 0.0 + 0.25198249778894943 WHEN (calibration_base_estimator_1."ScoreOrProba_3" < 0.8888888888888888) THEN (calibration_base_estimator_1."ScoreOrProba_3" - 0.6428571428571429) * 0.2338775896320121 + 0.25198249778894943 WHEN (calibration_base_estimator_1."ScoreOrProba_3" < 1.0) THEN (calibration_base_estimator_1."ScoreOrProba_3" - 0.8888888888888888) * 0.0 + 0.30952380952380953 ELSE 0.30952380952380953 END AS "Proba_3" 
FROM calibration_base_estimator_1), 
"Normalized_Probas_1" AS 
(SELECT isotonic_cte_1."KEY" AS "KEY", isotonic_cte_1."Proba_0" / (isotonic_cte_1."Proba_0" + isotonic_cte_1."Proba_1" + isotonic_cte_1."Proba_2" + isotonic_cte_1."Proba_3") AS "Proba_0", isotonic_cte_1."Proba_1" / (isotonic_cte_1."Proba_0" + isotonic_cte_1."Proba_1" + isotonic_cte_1."Proba_2" + isotonic_cte_1."Proba_3") AS "Proba_1", isotonic_cte_1."Proba_2" / (isotonic_cte_1."Proba_0" + isotonic_cte_1."Proba_1" + isotonic_cte_1."Proba_2" + isotonic_cte_1."Proba_3") AS "Proba_2", isotonic_cte_1."Proba_3" / (isotonic_cte_1."Proba_0" + isotonic_cte_1."Proba_1" + isotonic_cte_1."Proba_2" + isotonic_cte_1."Proba_3") AS "Proba_3" 
FROM isotonic_cte_1), 
"DT_node_lookup_2" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_249" <= 2.8677220344543457) THEN CASE WHEN ("ADS"."Feature_209" <= -3.8308749198913574) THEN CASE WHEN ("ADS"."Feature_283" <= 4.226866722106934) THEN CASE WHEN ("ADS"."Feature_336" <= 0.4859238862991333) THEN CASE WHEN ("ADS"."Feature_146" <= -1.5137760639190674) THEN 5 ELSE 6 END ELSE CASE WHEN ("ADS"."Feature_141" <= 0.11102236807346344) THEN 8 ELSE 9 END END ELSE CASE WHEN ("ADS"."Feature_481" <= 0.21180318295955658) THEN 11 ELSE CASE WHEN ("ADS"."Feature_480" <= 7.416871547698975) THEN 13 ELSE 14 END END END ELSE CASE WHEN ("ADS"."Feature_338" <= 3.33180570602417) THEN CASE WHEN ("ADS"."Feature_495" <= -0.5672404170036316) THEN CASE WHEN ("ADS"."Feature_343" <= -2.3730101585388184) THEN 18 ELSE 19 END ELSE CASE WHEN ("ADS"."Feature_157" <= -0.9289175271987915) THEN 21 ELSE 22 END END ELSE CASE WHEN ("ADS"."Feature_483" <= 4.307338237762451) THEN CASE WHEN ("ADS"."Feature_289" <= 1.8321926593780518) THEN 25 ELSE 26 END ELSE CASE WHEN ("ADS"."Feature_58" <= -0.6006558537483215) THEN 28 ELSE 29 END END END END ELSE CASE WHEN ("ADS"."Feature_497" <= -7.866596221923828) THEN CASE WHEN ("ADS"."Feature_76" <= 0.059133343398571014) THEN CASE WHEN ("ADS"."Feature_125" <= 1.0105433464050293) THEN 33 ELSE CASE WHEN ("ADS"."Feature_106" <= -0.6545929908752441) THEN 35 ELSE 36 END END ELSE CASE WHEN ("ADS"."Feature_114" <= 0.8860902786254883) THEN CASE WHEN ("ADS"."Feature_41" <= -1.3967514038085938) THEN 39 ELSE 40 END ELSE CASE WHEN ("ADS"."Feature_377" <= -4.432969570159912) THEN 42 ELSE 43 END END END ELSE CASE WHEN ("ADS"."Feature_288" <= 3.2893424034118652) THEN CASE WHEN ("ADS"."Feature_153" <= 1.3871839046478271) THEN CASE WHEN ("ADS"."Feature_303" <= -0.4292770028114319) THEN 47 ELSE 48 END ELSE CASE WHEN ("ADS"."Feature_424" <= -0.48529374599456787) THEN 50 ELSE 51 END END ELSE CASE WHEN ("ADS"."Feature_295" <= -0.8811733722686768) THEN CASE WHEN ("ADS"."Feature_199" <= -1.3450103998184204) THEN 54 ELSE 55 END ELSE CASE WHEN ("ADS"."Feature_37" <= 0.3627137541770935) THEN 57 ELSE 58 END END END END END AS node_id_2 
FROM "FourClass_500" AS "ADS"), 
"DT_node_data_2" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Proba_2" AS "Proba_2", "Values"."LogProba_2" AS "LogProba_2", "Values"."Proba_3" AS "Proba_3", "Values"."LogProba_3" AS "LogProba_3", "Values"."Decision" AS "Decision", "Values"."DecisionProba" AS "DecisionProba" 
FROM (SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 5 AS depth, 4 AS parent_id, 0.8 AS "Proba_0", -0.2231435513142097 AS "LogProba_0", 0.2 AS "Proba_1", -1.6094379124341003 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0 AS "Decision", 0.8 AS "DecisionProba" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 44 AS count, 5 AS depth, 4 AS parent_id, 0.022727272727272728 AS "Proba_0", -3.784189633918261 AS "LogProba_0", 0.06818181818181818 AS "Proba_1", -2.6855773452501515 AS "LogProba_1", 0.75 AS "Proba_2", -0.2876820724517809 AS "LogProba_2", 0.1590909090909091 AS "Proba_3", -1.8382794848629478 AS "LogProba_3", 2 AS "Decision", 0.75 AS "DecisionProba" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 5 AS depth, 7 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.9 AS "Proba_1", -0.10536051565782628 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.1 AS "Proba_3", -2.3025850929940455 AS "LogProba_3", 1 AS "Decision", 0.9 AS "DecisionProba" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 5 AS depth, 7 AS parent_id, 0.6666666666666666 AS "Proba_0", -0.40546510810816444 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.3333333333333333 AS "Proba_2", -1.0986122886681098 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0 AS "Decision", 0.6666666666666666 AS "DecisionProba" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 4 AS depth, 10 AS parent_id, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 12 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.6666666666666666 AS "Proba_1", -0.40546510810816444 AS "LogProba_1", 0.3333333333333333 AS "Proba_2", -1.0986122886681098 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 1 AS "Decision", 0.6666666666666666 AS "DecisionProba" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 12 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 1.0 AS "Proba_3", 0.0 AS "LogProba_3", 3 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 53 AS count, 5 AS depth, 17 AS parent_id, 0.4339622641509434 AS "Proba_0", -0.8347976976229721 AS "LogProba_0", 0.2641509433962264 AS "Proba_1", -1.3312345839368633 AS "LogProba_1", 0.2641509433962264 AS "Proba_2", -1.3312345839368633 AS "LogProba_2", 0.03773584905660377 AS "Proba_3", -3.2771447329921766 AS "LogProba_3", 0 AS "Decision", 0.4339622641509434 AS "DecisionProba" UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 49 AS count, 5 AS depth, 17 AS parent_id, 0.10204081632653061 AS "Proba_0", -2.2823823856765264 AS "LogProba_0", 0.3469387755102041 AS "Proba_1", -1.0586069540544105 AS "LogProba_1", 0.16326530612244897 AS "Proba_2", -1.8123787564307907 AS "LogProba_2", 0.3877551020408163 AS "Proba_3", -0.9473813189441862 AS "LogProba_3", 3 AS "Decision", 0.3877551020408163 AS "DecisionProba" UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 5 AS depth, 20 AS parent_id, 0.06666666666666667 AS "Proba_0", -2.70805020110221 AS "LogProba_0", 0.13333333333333333 AS "Proba_1", -2.0149030205422647 AS "LogProba_1", 0.26666666666666666 AS "Proba_2", -1.3217558399823195 AS "LogProba_2", 0.5333333333333333 AS "Proba_3", -0.6286086594223742 AS "LogProba_3", 3 AS "Decision", 0.5333333333333333 AS "DecisionProba" UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 83 AS count, 5 AS depth, 20 AS parent_id, 0.07228915662650602 AS "Proba_0", -2.627081138568543 AS "LogProba_0", 0.6867469879518072 AS "Proba_1", -0.3757893399620478 AS "LogProba_1", 0.10843373493975904 AS "Proba_2", -2.2216160304603787 AS "LogProba_2", 0.13253012048192772 AS "Proba_3", -2.020945334998227 AS "LogProba_3", 1 AS "Decision", 0.6867469879518072 AS "DecisionProba" UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 30 AS count, 5 AS depth, 24 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.13333333333333333 AS "Proba_1", -2.0149030205422647 AS "LogProba_1", 0.7666666666666667 AS "Proba_2", -0.2657031657330056 AS "LogProba_2", 0.1 AS "Proba_3", -2.3025850929940455 AS "LogProba_3", 2 AS "Decision", 0.7666666666666667 AS "DecisionProba" UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 5 AS depth, 24 AS parent_id, 0.35294117647058826 AS "Proba_0", -1.041453874828161 AS "LogProba_0", 0.23529411764705882 AS "Proba_1", -1.4469189829363254 AS "LogProba_1", 0.11764705882352941 AS "Proba_2", -2.1400661634962708 AS "LogProba_2", 0.29411764705882354 AS "Proba_3", -1.2237754316221157 AS "LogProba_3", 0 AS "Decision", 0.35294117647058826 AS "DecisionProba" UNION ALL SELECT 28 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 5 AS depth, 27 AS parent_id, 0.375 AS "Proba_0", -0.9808292530117262 AS "LogProba_0", 0.375 AS "Proba_1", -0.9808292530117262 AS "LogProba_1", 0.125 AS "Proba_2", -2.0794415416798357 AS "LogProba_2", 0.125 AS "Proba_3", -2.0794415416798357 AS "LogProba_3", 0 AS "Decision", 0.375 AS "DecisionProba" UNION ALL SELECT 29 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 14 AS count, 5 AS depth, 27 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.07142857142857142 AS "Proba_2", -2.639057329615259 AS "LogProba_2", 0.9285714285714286 AS "Proba_3", -0.07410797215372185 AS "LogProba_3", 3 AS "Decision", 0.9285714285714286 AS "DecisionProba" UNION ALL SELECT 33 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 4 AS depth, 32 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 2 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 35 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 34 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 1 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 36 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 34 AS parent_id, 0.5 AS "Proba_0", -0.6931471805599453 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.5 AS "Proba_3", -0.6931471805599453 AS "LogProba_3", 0 AS "Decision", 0.5 AS "DecisionProba" UNION ALL SELECT 39 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 38 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 1.0 AS "Proba_3", 0.0 AS "LogProba_3", 3 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 40 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 5 AS depth, 38 AS parent_id, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 42 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 41 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 2 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 43 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 41 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.6666666666666666 AS "Proba_1", -0.40546510810816444 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.3333333333333333 AS "Proba_3", -1.0986122886681098 AS "LogProba_3", 1 AS "Decision", 0.6666666666666666 AS "DecisionProba" UNION ALL SELECT 47 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 28 AS count, 5 AS depth, 46 AS parent_id, 0.07142857142857142 AS "Proba_0", -2.639057329615259 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.07142857142857142 AS "Proba_2", -2.639057329615259 AS "LogProba_2", 0.8571428571428571 AS "Proba_3", -0.15415067982725836 AS "LogProba_3", 3 AS "Decision", 0.8571428571428571 AS "DecisionProba" UNION ALL SELECT 48 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 67 AS count, 5 AS depth, 46 AS parent_id, 0.3880597014925373 AS "Proba_0", -0.946596081369484 AS "LogProba_0", 0.08955223880597014 AS "Proba_1", -2.412933150162911 AS "LogProba_1", 0.07462686567164178 AS "Proba_2", -2.5952547069568657 AS "LogProba_2", 0.44776119402985076 AS "Proba_3", -0.8034952377288106 AS "LogProba_3", 3 AS "Decision", 0.44776119402985076 AS "DecisionProba" UNION ALL SELECT 50 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 21 AS count, 5 AS depth, 49 AS parent_id, 0.47619047619047616 AS "Proba_0", -0.7419373447293773 AS "LogProba_0", 0.3333333333333333 AS "Proba_1", -1.0986122886681098 AS "LogProba_1", 0.19047619047619047 AS "Proba_2", -1.6582280766035324 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0 AS "Decision", 0.47619047619047616 AS "DecisionProba" UNION ALL SELECT 51 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 40 AS count, 5 AS depth, 49 AS parent_id, 0.05 AS "Proba_0", -2.995732273553991 AS "LogProba_0", 0.225 AS "Proba_1", -1.491654876777717 AS "LogProba_1", 0.3 AS "Proba_2", -1.2039728043259361 AS "LogProba_2", 0.425 AS "Proba_3", -0.8556661100577202 AS "LogProba_3", 3 AS "Decision", 0.425 AS "DecisionProba" UNION ALL SELECT 54 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 53 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 1.0 AS "Proba_3", 0.0 AS "LogProba_3", 3 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 55 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 5 AS depth, 53 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 1 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 57 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 31 AS count, 5 AS depth, 56 AS parent_id, 0.7741935483870968 AS "Proba_0", -0.25593337413720063 AS "LogProba_0", 0.03225806451612903 AS "Proba_1", -3.4339872044851463 AS "LogProba_1", 0.06451612903225806 AS "Proba_2", -2.740840023925201 AS "LogProba_2", 0.12903225806451613 AS "Proba_3", -2.0476928433652555 AS "LogProba_3", 0 AS "Decision", 0.7741935483870968 AS "DecisionProba" UNION ALL SELECT 58 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 5 AS depth, 56 AS parent_id, 0.21052631578947367 AS "Proba_0", -1.55814461804655 AS "LogProba_0", 0.10526315789473684 AS "Proba_1", -2.2512917986064953 AS "LogProba_1", 0.47368421052631576 AS "Proba_2", -0.7472144018302211 AS "LogProba_2", 0.21052631578947367 AS "Proba_3", -1.55814461804655 AS "LogProba_3", 2 AS "Decision", 0.47368421052631576 AS "DecisionProba") AS "Values"), 
"DT_Output_2" AS 
(SELECT "DT_node_lookup_2"."KEY" AS "KEY", "DT_node_lookup_2".node_id_2 AS node_id_2, "DT_node_data_2".node_id AS node_id, "DT_node_data_2".feature AS feature, "DT_node_data_2".threshold AS threshold, "DT_node_data_2".count AS count, "DT_node_data_2".depth AS depth, "DT_node_data_2".parent_id AS parent_id, "DT_node_data_2"."Proba_0" AS "Proba_0", "DT_node_data_2"."LogProba_0" AS "LogProba_0", "DT_node_data_2"."Proba_1" AS "Proba_1", "DT_node_data_2"."LogProba_1" AS "LogProba_1", "DT_node_data_2"."Proba_2" AS "Proba_2", "DT_node_data_2"."LogProba_2" AS "LogProba_2", "DT_node_data_2"."Proba_3" AS "Proba_3", "DT_node_data_2"."LogProba_3" AS "LogProba_3", "DT_node_data_2"."Decision" AS "Decision", "DT_node_data_2"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup_2" LEFT OUTER JOIN "DT_node_data_2" ON "DT_node_lookup_2".node_id_2 = "DT_node_data_2".node_id), 
calibration_base_estimator_2 AS 
(SELECT "DT_Output_2"."KEY" AS "KEY", CAST(NULL AS FLOAT) AS "Score_0", CAST(NULL AS FLOAT) AS "Score_1", CAST(NULL AS FLOAT) AS "Score_2", CAST(NULL AS FLOAT) AS "Score_3", "DT_Output_2"."Proba_0" AS "Proba_0", "DT_Output_2"."Proba_1" AS "Proba_1", "DT_Output_2"."Proba_2" AS "Proba_2", "DT_Output_2"."Proba_3" AS "Proba_3", "DT_Output_2"."LogProba_0" AS "LogProba_0", "DT_Output_2"."LogProba_1" AS "LogProba_1", "DT_Output_2"."LogProba_2" AS "LogProba_2", "DT_Output_2"."LogProba_3" AS "LogProba_3", CAST(NULL AS BIGINT) AS "Decision", CAST(NULL AS FLOAT) AS "DecisionProba", coalesce(CAST(NULL AS FLOAT), "DT_Output_2"."Proba_0") AS "ScoreOrProba_0", coalesce(CAST(NULL AS FLOAT), "DT_Output_2"."Proba_1") AS "ScoreOrProba_1", coalesce(CAST(NULL AS FLOAT), "DT_Output_2"."Proba_2") AS "ScoreOrProba_2", coalesce(CAST(NULL AS FLOAT), "DT_Output_2"."Proba_3") AS "ScoreOrProba_3" 
FROM "DT_Output_2"), 
isotonic_cte_2 AS 
(SELECT calibration_base_estimator_2."KEY" AS "KEY", CASE WHEN (calibration_base_estimator_2."ScoreOrProba_0" < 0.0) THEN 0.22257647370550596 WHEN (calibration_base_estimator_2."ScoreOrProba_0" < 0.375) THEN (calibration_base_estimator_2."ScoreOrProba_0" - 0.0) * 0.0 + 0.22257647370550596 WHEN (calibration_base_estimator_2."ScoreOrProba_0" < 0.3880597014925373) THEN (calibration_base_estimator_2."ScoreOrProba_0" - 0.375) * 0.7341108822457341 + 0.22257647370550596 WHEN (calibration_base_estimator_2."ScoreOrProba_0" < 0.47619047619047616) THEN (calibration_base_estimator_2."ScoreOrProba_0" - 0.3880597014925373) * 0.0 + 0.23216374269005846 WHEN (calibration_base_estimator_2."ScoreOrProba_0" < 0.5) THEN (calibration_base_estimator_2."ScoreOrProba_0" - 0.47619047619047616) * 3.53321371610845 + 0.23216374269005846 WHEN (calibration_base_estimator_2."ScoreOrProba_0" < 1.0) THEN (calibration_base_estimator_2."ScoreOrProba_0" - 0.5) * 0.0 + 0.3162878787878788 ELSE 0.3162878787878788 END AS "Proba_0", CASE WHEN (calibration_base_estimator_2."ScoreOrProba_1" < 0.0) THEN 0.1388888888888889 WHEN (calibration_base_estimator_2."ScoreOrProba_1" < 0.03225806451612903) THEN (calibration_base_estimator_2."ScoreOrProba_1" - 0.0) * 2.6996039340776177 + 0.1388888888888889 WHEN (calibration_base_estimator_2."ScoreOrProba_1" < 0.3469387755102041) THEN (calibration_base_estimator_2."ScoreOrProba_1" - 0.03225806451612903) * 0.0 + 0.22597288676236044 WHEN (calibration_base_estimator_2."ScoreOrProba_1" < 0.375) THEN (calibration_base_estimator_2."ScoreOrProba_1" - 0.3469387755102041) * 3.726307370666067 + 0.22597288676236044 WHEN (calibration_base_estimator_2."ScoreOrProba_1" < 1.0) THEN (calibration_base_estimator_2."ScoreOrProba_1" - 0.375) * 0.0 + 0.3305376344086021 ELSE 0.3305376344086021 END AS "Proba_1", CASE WHEN (calibration_base_estimator_2."ScoreOrProba_2" < 0.0) THEN 0.21205475810738966 WHEN (calibration_base_estimator_2."ScoreOrProba_2" < 0.07462686567164178) THEN (calibration_base_estimator_2."ScoreOrProba_2" - 0.0) * 0.0 + 0.21205475810738966 WHEN (calibration_base_estimator_2."ScoreOrProba_2" < 0.10843373493975904) THEN (calibration_base_estimator_2."ScoreOrProba_2" - 0.07462686567164178) * 1.2416855173488308 + 0.21205475810738966 WHEN (calibration_base_estimator_2."ScoreOrProba_2" < 0.11764705882352941) THEN (calibration_base_estimator_2."ScoreOrProba_2" - 0.10843373493975904) * 0.0 + 0.2540322580645161 WHEN (calibration_base_estimator_2."ScoreOrProba_2" < 0.125) THEN (calibration_base_estimator_2."ScoreOrProba_2" - 0.11764705882352941) * 0.5425744669146376 + 0.2540322580645161 WHEN (calibration_base_estimator_2."ScoreOrProba_2" < 1.0) THEN (calibration_base_estimator_2."ScoreOrProba_2" - 0.125) * 0.0 + 0.25802177620359434 ELSE 0.25802177620359434 END AS "Proba_2", CASE WHEN (calibration_base_estimator_2."ScoreOrProba_3" < 0.0) THEN 0.17129629629629628 WHEN (calibration_base_estimator_2."ScoreOrProba_3" < 0.125) THEN (calibration_base_estimator_2."ScoreOrProba_3" - 0.0) * 0.0 + 0.17129629629629628 WHEN (calibration_base_estimator_2."ScoreOrProba_3" < 0.12903225806451613) THEN (calibration_base_estimator_2."ScoreOrProba_3" - 0.125) * 14.421115921115932 + 0.17129629629629628 WHEN (calibration_base_estimator_2."ScoreOrProba_3" < 0.21052631578947367) THEN (calibration_base_estimator_2."ScoreOrProba_3" - 0.12903225806451613) * 0.0 + 0.2294459572685379 WHEN (calibration_base_estimator_2."ScoreOrProba_3" < 0.29411764705882354) THEN (calibration_base_estimator_2."ScoreOrProba_3" - 0.21052631578947367) * 0.24111733049905099 + 0.2294459572685379 WHEN (calibration_base_estimator_2."ScoreOrProba_3" < 0.5333333333333333) THEN (calibration_base_estimator_2."ScoreOrProba_3" - 0.29411764705882354) * 0.0 + 0.24960127591706538 WHEN (calibration_base_estimator_2."ScoreOrProba_3" < 0.8571428571428571) THEN (calibration_base_estimator_2."ScoreOrProba_3" - 0.5333333333333333) * 0.1793987746000131 + 0.24960127591706538 WHEN (calibration_base_estimator_2."ScoreOrProba_3" < 0.9285714285714286) THEN (calibration_base_estimator_2."ScoreOrProba_3" - 0.8571428571428571) * 0.3589743589743581 + 0.3076923076923077 WHEN (calibration_base_estimator_2."ScoreOrProba_3" < 1.0) THEN (calibration_base_estimator_2."ScoreOrProba_3" - 0.9285714285714286) * 2.333333333333335 + 0.3333333333333333 ELSE 0.5 END AS "Proba_3" 
FROM calibration_base_estimator_2), 
"Normalized_Probas_2" AS 
(SELECT isotonic_cte_2."KEY" AS "KEY", isotonic_cte_2."Proba_0" / (isotonic_cte_2."Proba_0" + isotonic_cte_2."Proba_1" + isotonic_cte_2."Proba_2" + isotonic_cte_2."Proba_3") AS "Proba_0", isotonic_cte_2."Proba_1" / (isotonic_cte_2."Proba_0" + isotonic_cte_2."Proba_1" + isotonic_cte_2."Proba_2" + isotonic_cte_2."Proba_3") AS "Proba_1", isotonic_cte_2."Proba_2" / (isotonic_cte_2."Proba_0" + isotonic_cte_2."Proba_1" + isotonic_cte_2."Proba_2" + isotonic_cte_2."Proba_3") AS "Proba_2", isotonic_cte_2."Proba_3" / (isotonic_cte_2."Proba_0" + isotonic_cte_2."Proba_1" + isotonic_cte_2."Proba_2" + isotonic_cte_2."Proba_3") AS "Proba_3" 
FROM isotonic_cte_2), 
"DT_node_lookup_3" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_338" <= -1.7936967611312866) THEN CASE WHEN ("ADS"."Feature_249" <= -21.123554229736328) THEN CASE WHEN ("ADS"."Feature_255" <= 0.2452794909477234) THEN CASE WHEN ("ADS"."Feature_120" <= -0.6106349229812622) THEN CASE WHEN ("ADS"."Feature_128" <= 0.4367939531803131) THEN 5 ELSE 6 END ELSE CASE WHEN ("ADS"."Feature_274" <= 0.3479110598564148) THEN 8 ELSE 9 END END ELSE CASE WHEN ("ADS"."Feature_329" <= -0.7029154896736145) THEN CASE WHEN ("ADS"."Feature_5" <= -0.10087765753269196) THEN 12 ELSE 13 END ELSE CASE WHEN ("ADS"."Feature_242" <= -1.1037298440933228) THEN 15 ELSE 16 END END END ELSE CASE WHEN ("ADS"."Feature_129" <= -7.825395107269287) THEN CASE WHEN ("ADS"."Feature_28" <= 1.4765523672103882) THEN 19 ELSE 20 END ELSE CASE WHEN ("ADS"."Feature_329" <= -0.9750343561172485) THEN CASE WHEN ("ADS"."Feature_442" <= -2.4997153282165527) THEN 23 ELSE 24 END ELSE CASE WHEN ("ADS"."Feature_268" <= 8.236695289611816) THEN 26 ELSE 27 END END END END ELSE CASE WHEN ("ADS"."Feature_301" <= -7.468977928161621) THEN CASE WHEN ("ADS"."Feature_50" <= 0.6976150274276733) THEN CASE WHEN ("ADS"."Feature_247" <= 8.527505874633789) THEN 31 ELSE 32 END ELSE CASE WHEN ("ADS"."Feature_471" <= 1.1554608345031738) THEN 34 ELSE CASE WHEN ("ADS"."Feature_469" <= -0.5001636743545532) THEN 36 ELSE 37 END END END ELSE CASE WHEN ("ADS"."Feature_72" <= 2.8854594230651855) THEN CASE WHEN ("ADS"."Feature_129" <= -5.498040199279785) THEN CASE WHEN ("ADS"."Feature_182" <= -0.4413303732872009) THEN 41 ELSE 42 END ELSE CASE WHEN ("ADS"."Feature_289" <= -2.0548653602600098) THEN 44 ELSE 45 END END ELSE CASE WHEN ("ADS"."Feature_179" <= -4.175331115722656) THEN CASE WHEN ("ADS"."Feature_137" <= -0.11830663681030273) THEN 48 ELSE 49 END ELSE CASE WHEN ("ADS"."Feature_228" <= -0.5062150359153748) THEN 51 ELSE 52 END END END END END AS node_id_2 
FROM "FourClass_500" AS "ADS"), 
"DT_node_data_3" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Proba_2" AS "Proba_2", "Values"."LogProba_2" AS "LogProba_2", "Values"."Proba_3" AS "Proba_3", "Values"."LogProba_3" AS "LogProba_3", "Values"."Decision" AS "Decision", "Values"."DecisionProba" AS "DecisionProba" 
FROM (SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS count, 5 AS depth, 4 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.9230769230769231 AS "Proba_2", -0.08004270767353637 AS "LogProba_2", 0.07692307692307693 AS "Proba_3", -2.5649493574615367 AS "LogProba_3", 2 AS "Decision", 0.9230769230769231 AS "DecisionProba" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 4 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 1 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 22 AS count, 5 AS depth, 7 AS parent_id, 0.09090909090909091 AS "Proba_0", -2.3978952727983707 AS "LogProba_0", 0.4090909090909091 AS "Proba_1", -0.8938178760220964 AS "LogProba_1", 0.13636363636363635 AS "Proba_2", -1.9924301646902063 AS "LogProba_2", 0.36363636363636365 AS "Proba_3", -1.0116009116784799 AS "LogProba_3", 1 AS "Decision", 0.4090909090909091 AS "DecisionProba" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 5 AS depth, 7 AS parent_id, 0.75 AS "Proba_0", -0.2876820724517809 AS "LogProba_0", 0.16666666666666666 AS "Proba_1", -1.791759469228055 AS "LogProba_1", 0.08333333333333333 AS "Proba_2", -2.4849066497880004 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0 AS "Decision", 0.75 AS "DecisionProba" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 5 AS depth, 11 AS parent_id, 0.2 AS "Proba_0", -1.6094379124341003 AS "LogProba_0", 0.6 AS "Proba_1", -0.5108256237659907 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.2 AS "Proba_3", -1.6094379124341003 AS "LogProba_3", 1 AS "Decision", 0.6 AS "DecisionProba" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 5 AS depth, 11 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 2 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 14 AS parent_id, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 24 AS count, 5 AS depth, 14 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 1 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 4 AS depth, 18 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 1 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 18 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 1.0 AS "Proba_3", 0.0 AS "LogProba_3", 3 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 5 AS depth, 22 AS parent_id, 0.1111111111111111 AS "Proba_0", -2.1972245773362196 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.8888888888888888 AS "Proba_3", -0.11778303565638351 AS "LogProba_3", 3 AS "Decision", 0.8888888888888888 AS "DecisionProba" UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 5 AS depth, 22 AS parent_id, 0.2 AS "Proba_0", -1.6094379124341003 AS "LogProba_0", 0.5 AS "Proba_1", -0.6931471805599453 AS "LogProba_1", 0.2 AS "Proba_2", -1.6094379124341003 AS "LogProba_2", 0.1 AS "Proba_3", -2.3025850929940455 AS "LogProba_3", 1 AS "Decision", 0.5 AS "DecisionProba" UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 105 AS count, 5 AS depth, 25 AS parent_id, 0.6095238095238096 AS "Proba_0", -0.4950772667978514 AS "LogProba_0", 0.10476190476190476 AS "Proba_1", -2.256065077359153 AS "LogProba_1", 0.19047619047619047 AS "Proba_2", -1.6582280766035324 AS "LogProba_2", 0.09523809523809523 AS "Proba_3", -2.3513752571634776 AS "LogProba_3", 0 AS "Decision", 0.6095238095238096 AS "DecisionProba" UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 5 AS depth, 25 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.4 AS "Proba_1", -0.916290731874155 AS "LogProba_1", 0.6 AS "Proba_2", -0.5108256237659907 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 2 AS "Decision", 0.6 AS "DecisionProba" UNION ALL SELECT 31 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 22 AS count, 4 AS depth, 30 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 1.0 AS "Proba_3", 0.0 AS "LogProba_3", 3 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 32 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 30 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 2 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 34 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 4 AS depth, 33 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 1 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 36 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 35 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 1.0 AS "Proba_3", 0.0 AS "LogProba_3", 3 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 37 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 35 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 2 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 41 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 5 AS depth, 40 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 1 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 42 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 25 AS count, 5 AS depth, 40 AS parent_id, 0.12 AS "Proba_0", -2.120263536200091 AS "LogProba_0", 0.28 AS "Proba_1", -1.2729656758128873 AS "LogProba_1", 0.12 AS "Proba_2", -2.120263536200091 AS "LogProba_2", 0.48 AS "Proba_3", -0.7339691750802004 AS "LogProba_3", 3 AS "Decision", 0.48 AS "DecisionProba" UNION ALL SELECT 44 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 81 AS count, 5 AS depth, 43 AS parent_id, 0.12345679012345678 AS "Proba_0", -2.0918640616783932 AS "LogProba_0", 0.12345679012345678 AS "Proba_1", -2.0918640616783932 AS "LogProba_1", 0.5185185185185185 AS "Proba_2", -0.6567795363890705 AS "LogProba_2", 0.2345679012345679 AS "Proba_3", -1.4500101755059984 AS "LogProba_3", 2 AS "Decision", 0.5185185185185185 AS "DecisionProba" UNION ALL SELECT 45 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 126 AS count, 5 AS depth, 43 AS parent_id, 0.3412698412698413 AS "Proba_0", -1.0750817912579156 AS "LogProba_0", 0.2222222222222222 AS "Proba_1", -1.5040773967762742 AS "LogProba_1", 0.2619047619047619 AS "Proba_2", -1.3397743454849977 AS "LogProba_2", 0.1746031746031746 AS "Proba_3", -1.7452394535931621 AS "LogProba_3", 0 AS "Decision", 0.3412698412698413 AS "DecisionProba" UNION ALL SELECT 48 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 14 AS count, 5 AS depth, 47 AS parent_id, 0.07142857142857142 AS "Proba_0", -2.639057329615259 AS "LogProba_0", 0.8571428571428571 AS "Proba_1", -0.15415067982725836 AS "LogProba_1", 0.07142857142857142 AS "Proba_2", -2.639057329615259 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 1 AS "Decision", 0.8571428571428571 AS "DecisionProba" UNION ALL SELECT 49 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 5 AS depth, 47 AS parent_id, 0.25 AS "Proba_0", -1.3862943611198906 AS "LogProba_0", 0.08333333333333333 AS "Proba_1", -2.4849066497880004 AS "LogProba_1", 0.25 AS "Proba_2", -1.3862943611198906 AS "LogProba_2", 0.4166666666666667 AS "Proba_3", -0.8754687373538999 AS "LogProba_3", 3 AS "Decision", 0.4166666666666667 AS "DecisionProba" UNION ALL SELECT 51 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 33 AS count, 5 AS depth, 50 AS parent_id, 0.030303030303030304 AS "Proba_0", -3.4965075614664802 AS "LogProba_0", 0.18181818181818182 AS "Proba_1", -1.7047480922384253 AS "LogProba_1", 0.45454545454545453 AS "Proba_2", -0.7884573603642702 AS "LogProba_2", 0.3333333333333333 AS "Proba_3", -1.0986122886681098 AS "LogProba_3", 2 AS "Decision", 0.45454545454545453 AS "DecisionProba" UNION ALL SELECT 52 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 44 AS count, 5 AS depth, 50 AS parent_id, 0.022727272727272728 AS "Proba_0", -3.784189633918261 AS "LogProba_0", 0.13636363636363635 AS "Proba_1", -1.9924301646902063 AS "LogProba_1", 0.09090909090909091 AS "Proba_2", -2.3978952727983707 AS "LogProba_2", 0.75 AS "Proba_3", -0.2876820724517809 AS "LogProba_3", 3 AS "Decision", 0.75 AS "DecisionProba") AS "Values"), 
"DT_Output_3" AS 
(SELECT "DT_node_lookup_3"."KEY" AS "KEY", "DT_node_lookup_3".node_id_2 AS node_id_2, "DT_node_data_3".node_id AS node_id, "DT_node_data_3".feature AS feature, "DT_node_data_3".threshold AS threshold, "DT_node_data_3".count AS count, "DT_node_data_3".depth AS depth, "DT_node_data_3".parent_id AS parent_id, "DT_node_data_3"."Proba_0" AS "Proba_0", "DT_node_data_3"."LogProba_0" AS "LogProba_0", "DT_node_data_3"."Proba_1" AS "Proba_1", "DT_node_data_3"."LogProba_1" AS "LogProba_1", "DT_node_data_3"."Proba_2" AS "Proba_2", "DT_node_data_3"."LogProba_2" AS "LogProba_2", "DT_node_data_3"."Proba_3" AS "Proba_3", "DT_node_data_3"."LogProba_3" AS "LogProba_3", "DT_node_data_3"."Decision" AS "Decision", "DT_node_data_3"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup_3" LEFT OUTER JOIN "DT_node_data_3" ON "DT_node_lookup_3".node_id_2 = "DT_node_data_3".node_id), 
calibration_base_estimator_3 AS 
(SELECT "DT_Output_3"."KEY" AS "KEY", CAST(NULL AS FLOAT) AS "Score_0", CAST(NULL AS FLOAT) AS "Score_1", CAST(NULL AS FLOAT) AS "Score_2", CAST(NULL AS FLOAT) AS "Score_3", "DT_Output_3"."Proba_0" AS "Proba_0", "DT_Output_3"."Proba_1" AS "Proba_1", "DT_Output_3"."Proba_2" AS "Proba_2", "DT_Output_3"."Proba_3" AS "Proba_3", "DT_Output_3"."LogProba_0" AS "LogProba_0", "DT_Output_3"."LogProba_1" AS "LogProba_1", "DT_Output_3"."LogProba_2" AS "LogProba_2", "DT_Output_3"."LogProba_3" AS "LogProba_3", CAST(NULL AS BIGINT) AS "Decision", CAST(NULL AS FLOAT) AS "DecisionProba", coalesce(CAST(NULL AS FLOAT), "DT_Output_3"."Proba_0") AS "ScoreOrProba_0", coalesce(CAST(NULL AS FLOAT), "DT_Output_3"."Proba_1") AS "ScoreOrProba_1", coalesce(CAST(NULL AS FLOAT), "DT_Output_3"."Proba_2") AS "ScoreOrProba_2", coalesce(CAST(NULL AS FLOAT), "DT_Output_3"."Proba_3") AS "ScoreOrProba_3" 
FROM "DT_Output_3"), 
isotonic_cte_3 AS 
(SELECT calibration_base_estimator_3."KEY" AS "KEY", CASE WHEN (calibration_base_estimator_3."ScoreOrProba_0" < 0.0) THEN 0.11764705882352941 WHEN (calibration_base_estimator_3."ScoreOrProba_0" < 0.022727272727272728) THEN (calibration_base_estimator_3."ScoreOrProba_0" - 0.0) * 2.761488595438175 + 0.11764705882352941 WHEN (calibration_base_estimator_3."ScoreOrProba_0" < 0.12345679012345678) THEN (calibration_base_estimator_3."ScoreOrProba_0" - 0.022727272727272728) * 0.0 + 0.18040816326530612 WHEN (calibration_base_estimator_3."ScoreOrProba_0" < 0.2) THEN (calibration_base_estimator_3."ScoreOrProba_0" - 0.12345679012345678) * 0.9091836734693876 + 0.18040816326530612 WHEN (calibration_base_estimator_3."ScoreOrProba_0" < 0.25) THEN (calibration_base_estimator_3."ScoreOrProba_0" - 0.2) * 0.0 + 0.25 WHEN (calibration_base_estimator_3."ScoreOrProba_0" < 0.3412698412698413) THEN (calibration_base_estimator_3."ScoreOrProba_0" - 0.25) * 0.015423031727379546 + 0.25 WHEN (calibration_base_estimator_3."ScoreOrProba_0" < 1.0) THEN (calibration_base_estimator_3."ScoreOrProba_0" - 0.3412698412698413) * 0.0 + 0.25140765765765766 ELSE 0.25140765765765766 END AS "Proba_0", CASE WHEN (calibration_base_estimator_3."ScoreOrProba_1" < 0.0) THEN 0.19047619047619047 WHEN (calibration_base_estimator_3."ScoreOrProba_1" < 0.08333333333333333) THEN (calibration_base_estimator_3."ScoreOrProba_1" - 0.0) * 0.5563706563706566 + 0.19047619047619047 WHEN (calibration_base_estimator_3."ScoreOrProba_1" < 0.2222222222222222) THEN (calibration_base_estimator_3."ScoreOrProba_1" - 0.08333333333333333) * 0.0 + 0.23684041184041185 WHEN (calibration_base_estimator_3."ScoreOrProba_1" < 0.28) THEN (calibration_base_estimator_3."ScoreOrProba_1" - 0.2222222222222222) * 3.5162236412236396 + 0.23684041184041185 WHEN (calibration_base_estimator_3."ScoreOrProba_1" < 0.6) THEN (calibration_base_estimator_3."ScoreOrProba_1" - 0.28) * 0.0 + 0.44000000000000006 WHEN (calibration_base_estimator_3."ScoreOrProba_1" < 0.8571428571428571) THEN (calibration_base_estimator_3."ScoreOrProba_1" - 0.6) * 0.11180555555555534 + 0.44000000000000006 WHEN (calibration_base_estimator_3."ScoreOrProba_1" < 1.0) THEN (calibration_base_estimator_3."ScoreOrProba_1" - 0.8571428571428571) * 0.0 + 0.46875 ELSE 0.46875 END AS "Proba_1", CASE WHEN (calibration_base_estimator_3."ScoreOrProba_2" < 0.0) THEN 0.12276785714285714 WHEN (calibration_base_estimator_3."ScoreOrProba_2" < 0.13636363636363635) THEN (calibration_base_estimator_3."ScoreOrProba_2" - 0.0) * 0.0 + 0.12276785714285714 WHEN (calibration_base_estimator_3."ScoreOrProba_2" < 0.19047619047619047) THEN (calibration_base_estimator_3."ScoreOrProba_2" - 0.13636363636363635) * 0.9652499999999999 + 0.12276785714285714 WHEN (calibration_base_estimator_3."ScoreOrProba_2" < 0.2) THEN (calibration_base_estimator_3."ScoreOrProba_2" - 0.19047619047619047) * 6.3957770270270125 + 0.175 WHEN (calibration_base_estimator_3."ScoreOrProba_2" < 1.0) THEN (calibration_base_estimator_3."ScoreOrProba_2" - 0.2) * 0.0 + 0.23591216216216215 ELSE 0.23591216216216215 END AS "Proba_2", CASE WHEN (calibration_base_estimator_3."ScoreOrProba_3" < 0.0) THEN 0.2 WHEN (calibration_base_estimator_3."ScoreOrProba_3" < 0.07692307692307693) THEN (calibration_base_estimator_3."ScoreOrProba_3" - 0.0) * 1.9740173745173737 + 0.2 WHEN (calibration_base_estimator_3."ScoreOrProba_3" < 0.48) THEN (calibration_base_estimator_3."ScoreOrProba_3" - 0.07692307692307693) * 0.0 + 0.3518474903474903 WHEN (calibration_base_estimator_3."ScoreOrProba_3" < 0.75) THEN (calibration_base_estimator_3."ScoreOrProba_3" - 0.48) * 0.5487129987129988 + 0.3518474903474903 WHEN (calibration_base_estimator_3."ScoreOrProba_3" < 1.0) THEN (calibration_base_estimator_3."ScoreOrProba_3" - 0.75) * 0.0 + 0.5 ELSE 0.5 END AS "Proba_3" 
FROM calibration_base_estimator_3), 
"Normalized_Probas_3" AS 
(SELECT isotonic_cte_3."KEY" AS "KEY", isotonic_cte_3."Proba_0" / (isotonic_cte_3."Proba_0" + isotonic_cte_3."Proba_1" + isotonic_cte_3."Proba_2" + isotonic_cte_3."Proba_3") AS "Proba_0", isotonic_cte_3."Proba_1" / (isotonic_cte_3."Proba_0" + isotonic_cte_3."Proba_1" + isotonic_cte_3."Proba_2" + isotonic_cte_3."Proba_3") AS "Proba_1", isotonic_cte_3."Proba_2" / (isotonic_cte_3."Proba_0" + isotonic_cte_3."Proba_1" + isotonic_cte_3."Proba_2" + isotonic_cte_3."Proba_3") AS "Proba_2", isotonic_cte_3."Proba_3" / (isotonic_cte_3."Proba_0" + isotonic_cte_3."Proba_1" + isotonic_cte_3."Proba_2" + isotonic_cte_3."Proba_3") AS "Proba_3" 
FROM isotonic_cte_3)
 INSERT INTO "TMP_20180329233333_3D4HKH_CalProb_AVG_B0" ("KEY", "Proba_0", "Proba_1", "Proba_2", "Proba_3") SELECT "CalProb_AVG_B0"."KEY", "CalProb_AVG_B0"."Proba_0", "CalProb_AVG_B0"."Proba_1", "CalProb_AVG_B0"."Proba_2", "CalProb_AVG_B0"."Proba_3" 
FROM (SELECT "CalProb_AVG_esu_0"."KEY" AS "KEY", "CalProb_AVG_esu_0"."Proba_0" AS "Proba_0", "CalProb_AVG_esu_0"."Proba_1" AS "Proba_1", "CalProb_AVG_esu_0"."Proba_2" AS "Proba_2", "CalProb_AVG_esu_0"."Proba_3" AS "Proba_3" 
FROM (SELECT "Normalized_Probas"."KEY" AS "KEY", "Normalized_Probas"."Proba_0" AS "Proba_0", "Normalized_Probas"."Proba_1" AS "Proba_1", "Normalized_Probas"."Proba_2" AS "Proba_2", "Normalized_Probas"."Proba_3" AS "Proba_3" 
FROM "Normalized_Probas" UNION ALL SELECT "Normalized_Probas_1"."KEY" AS "KEY", "Normalized_Probas_1"."Proba_0" AS "Proba_0", "Normalized_Probas_1"."Proba_1" AS "Proba_1", "Normalized_Probas_1"."Proba_2" AS "Proba_2", "Normalized_Probas_1"."Proba_3" AS "Proba_3" 
FROM "Normalized_Probas_1" UNION ALL SELECT "Normalized_Probas_2"."KEY" AS "KEY", "Normalized_Probas_2"."Proba_0" AS "Proba_0", "Normalized_Probas_2"."Proba_1" AS "Proba_1", "Normalized_Probas_2"."Proba_2" AS "Proba_2", "Normalized_Probas_2"."Proba_3" AS "Proba_3" 
FROM "Normalized_Probas_2" UNION ALL SELECT "Normalized_Probas_3"."KEY" AS "KEY", "Normalized_Probas_3"."Proba_0" AS "Proba_0", "Normalized_Probas_3"."Proba_1" AS "Proba_1", "Normalized_Probas_3"."Proba_2" AS "Proba_2", "Normalized_Probas_3"."Proba_3" AS "Proba_3" 
FROM "Normalized_Probas_3") AS "CalProb_AVG_esu_0") AS "CalProb_AVG_B0"
-- Code For temporary table TMP_20180329233333_DP3FVU_CalProb_AVG_Union part 1/2. Create 


CREATE TEMPORARY TABLE "TMP_20180329233333_DP3FVU_CalProb_AVG_Union" (
	"KEY" BIGINT, 
	"Proba_0" FLOAT, 
	"Proba_1" FLOAT, 
	"Proba_2" FLOAT, 
	"Proba_3" FLOAT
)

 ON COMMIT PRESERVE ROWS
-- Code For temporary table TMP_20180329233333_DP3FVU_CalProb_AVG_Union part 2/2. Populate

INSERT INTO "TMP_20180329233333_DP3FVU_CalProb_AVG_Union" ("KEY", "Proba_0", "Proba_1", "Proba_2", "Proba_3") SELECT "CalProb_AVG_Union"."KEY", "CalProb_AVG_Union"."Proba_0", "CalProb_AVG_Union"."Proba_1", "CalProb_AVG_Union"."Proba_2", "CalProb_AVG_Union"."Proba_3" 
FROM (SELECT "CalProb_AVG_EnsembleUnion"."KEY" AS "KEY", "CalProb_AVG_EnsembleUnion"."Proba_0" AS "Proba_0", "CalProb_AVG_EnsembleUnion"."Proba_1" AS "Proba_1", "CalProb_AVG_EnsembleUnion"."Proba_2" AS "Proba_2", "CalProb_AVG_EnsembleUnion"."Proba_3" AS "Proba_3" 
FROM (SELECT "CalProb_AVG_B0"."KEY" AS "KEY", "CalProb_AVG_B0"."Proba_0" AS "Proba_0", "CalProb_AVG_B0"."Proba_1" AS "Proba_1", "CalProb_AVG_B0"."Proba_2" AS "Proba_2", "CalProb_AVG_B0"."Proba_3" AS "Proba_3" 
FROM "TMP_20180329233333_3D4HKH_CalProb_AVG_B0" AS "CalProb_AVG_B0") AS "CalProb_AVG_EnsembleUnion") AS "CalProb_AVG_Union"

-- Model deployment code

WITH "CalProb_AVG_avg" AS 
(SELECT "T"."KEY" AS "KEY", "T"."Proba_0" AS "Proba_0", "T"."Proba_1" AS "Proba_1", "T"."Proba_2" AS "Proba_2", "T"."Proba_3" AS "Proba_3" 
FROM (SELECT "CalProb_AVG_Union"."KEY" AS "KEY", avg(CAST("CalProb_AVG_Union"."Proba_0" AS FLOAT)) AS "Proba_0", avg(CAST("CalProb_AVG_Union"."Proba_1" AS FLOAT)) AS "Proba_1", avg(CAST("CalProb_AVG_Union"."Proba_2" AS FLOAT)) AS "Proba_2", avg(CAST("CalProb_AVG_Union"."Proba_3" AS FLOAT)) AS "Proba_3" 
FROM "TMP_20180329233333_DP3FVU_CalProb_AVG_Union" AS "CalProb_AVG_Union" GROUP BY "CalProb_AVG_Union"."KEY") AS "T"), 
orig_cte AS 
(SELECT "CalProb_AVG_avg"."KEY" AS "KEY", CAST(NULL AS FLOAT) AS "Score_0", CAST(NULL AS FLOAT) AS "Score_1", CAST(NULL AS FLOAT) AS "Score_2", CAST(NULL AS FLOAT) AS "Score_3", "CalProb_AVG_avg"."Proba_0" AS "Proba_0", "CalProb_AVG_avg"."Proba_1" AS "Proba_1", "CalProb_AVG_avg"."Proba_2" AS "Proba_2", "CalProb_AVG_avg"."Proba_3" AS "Proba_3", CAST(NULL AS FLOAT) AS "LogProba_0", CAST(NULL AS FLOAT) AS "LogProba_1", CAST(NULL AS FLOAT) AS "LogProba_2", CAST(NULL AS FLOAT) AS "LogProba_3", CAST(NULL AS BIGINT) AS "Decision", CAST(NULL AS FLOAT) AS "DecisionProba" 
FROM "CalProb_AVG_avg"), 
score_class_union AS 
(SELECT scu."KEY_u" AS "KEY_u", scu.class AS class, scu."LogProba" AS "LogProba", scu."Proba" AS "Proba", scu."Score" AS "Score" 
FROM (SELECT orig_cte."KEY" AS "KEY_u", 0 AS class, orig_cte."LogProba_0" AS "LogProba", orig_cte."Proba_0" AS "Proba", orig_cte."Score_0" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 1 AS class, orig_cte."LogProba_1" AS "LogProba", orig_cte."Proba_1" AS "Proba", orig_cte."Score_1" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 2 AS class, orig_cte."LogProba_2" AS "LogProba", orig_cte."Proba_2" AS "Proba", orig_cte."Score_2" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 3 AS class, orig_cte."LogProba_3" AS "LogProba", orig_cte."Proba_3" AS "Proba", orig_cte."Score_3" AS "Score" 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte."KEY" AS "KEY", orig_cte."Score_0" AS "Score_0", orig_cte."Score_1" AS "Score_1", orig_cte."Score_2" AS "Score_2", orig_cte."Score_3" AS "Score_3", orig_cte."Proba_0" AS "Proba_0", orig_cte."Proba_1" AS "Proba_1", orig_cte."Proba_2" AS "Proba_2", orig_cte."Proba_3" AS "Proba_3", orig_cte."LogProba_0" AS "LogProba_0", orig_cte."LogProba_1" AS "LogProba_1", orig_cte."LogProba_2" AS "LogProba_2", orig_cte."LogProba_3" AS "LogProba_3", orig_cte."Decision" AS "Decision", orig_cte."DecisionProba" AS "DecisionProba", max_select."KEY_m" AS "KEY_m", max_select."max_Proba" AS "max_Proba" 
FROM orig_cte LEFT OUTER JOIN (SELECT score_class_union."KEY_u" AS "KEY_m", max(score_class_union."Proba") AS "max_Proba" 
FROM score_class_union GROUP BY score_class_union."KEY_u") AS max_select ON orig_cte."KEY" = max_select."KEY_m"), 
union_with_max AS 
(SELECT score_class_union."KEY_u" AS "KEY_u", score_class_union.class AS class, score_class_union."LogProba" AS "LogProba", score_class_union."Proba" AS "Proba", score_class_union."Score" AS "Score", score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Score_2" AS "Score_2", score_max."Score_3" AS "Score_3", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."Proba_2" AS "Proba_2", score_max."Proba_3" AS "Proba_3", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."LogProba_2" AS "LogProba_2", score_max."LogProba_3" AS "LogProba_3", score_max."Decision" AS "Decision", score_max."DecisionProba" AS "DecisionProba", score_max."KEY_m" AS "KEY_m", score_max."max_Proba" AS "max_Proba" 
FROM score_class_union LEFT OUTER JOIN score_max ON score_class_union."KEY_u" = score_max."KEY"), 
arg_max_cte AS 
(SELECT score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Score_2" AS "Score_2", score_max."Score_3" AS "Score_3", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."Proba_2" AS "Proba_2", score_max."Proba_3" AS "Proba_3", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."LogProba_2" AS "LogProba_2", score_max."LogProba_3" AS "LogProba_3", score_max."Decision" AS "Decision", score_max."DecisionProba" AS "DecisionProba", score_max."KEY_m" AS "KEY_m", score_max."max_Proba" AS "max_Proba", "arg_max_t_Proba"."KEY_Proba" AS "KEY_Proba", "arg_max_t_Proba"."arg_max_Proba" AS "arg_max_Proba" 
FROM score_max LEFT OUTER JOIN (SELECT union_with_max."KEY" AS "KEY_Proba", min(union_with_max.class) AS "arg_max_Proba" 
FROM union_with_max 
WHERE union_with_max."max_Proba" <= union_with_max."Proba" GROUP BY union_with_max."KEY") AS "arg_max_t_Proba" ON score_max."KEY" = "arg_max_t_Proba"."KEY_Proba")
 SELECT arg_max_cte."KEY" AS "KEY", arg_max_cte."Score_0" AS "Score_0", arg_max_cte."Score_1" AS "Score_1", arg_max_cte."Score_2" AS "Score_2", arg_max_cte."Score_3" AS "Score_3", arg_max_cte."Proba_0" AS "Proba_0", arg_max_cte."Proba_1" AS "Proba_1", arg_max_cte."Proba_2" AS "Proba_2", arg_max_cte."Proba_3" AS "Proba_3", CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN ln(arg_max_cte."Proba_0") ELSE -1.79769313486231e+308 END AS "LogProba_0", CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN ln(arg_max_cte."Proba_1") ELSE -1.79769313486231e+308 END AS "LogProba_1", CASE WHEN (arg_max_cte."Proba_2" IS NULL OR arg_max_cte."Proba_2" > 0.0) THEN ln(arg_max_cte."Proba_2") ELSE -1.79769313486231e+308 END AS "LogProba_2", CASE WHEN (arg_max_cte."Proba_3" IS NULL OR arg_max_cte."Proba_3" > 0.0) THEN ln(arg_max_cte."Proba_3") ELSE -1.79769313486231e+308 END AS "LogProba_3", arg_max_cte."arg_max_Proba" AS "Decision", arg_max_cte."max_Proba" AS "DecisionProba" 
FROM arg_max_cte