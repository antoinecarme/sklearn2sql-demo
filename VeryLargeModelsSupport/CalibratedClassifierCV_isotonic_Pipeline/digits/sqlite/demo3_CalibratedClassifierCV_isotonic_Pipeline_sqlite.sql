-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2018

-- This SQL code can contain one or more statements, to be executed in the order they appear in this file.


-- Code For temporary table TMP_20180329233812_VEXUOX_ADS_imp_1_OUT part 1/2. Create 


CREATE TEMPORARY TABLE "TMP_20180329233812_VEXUOX_ADS_imp_1_OUT" (
	"KEY" BIGINT, 
	impter_2 FLOAT, 
	impter_3 FLOAT, 
	impter_4 FLOAT, 
	impter_5 FLOAT, 
	impter_6 FLOAT, 
	impter_7 FLOAT, 
	impter_8 FLOAT, 
	impter_9 FLOAT, 
	impter_10 FLOAT, 
	impter_11 FLOAT, 
	impter_12 FLOAT, 
	impter_13 FLOAT, 
	impter_14 FLOAT, 
	impter_15 FLOAT, 
	impter_16 FLOAT, 
	impter_17 FLOAT, 
	impter_18 FLOAT, 
	impter_19 FLOAT, 
	impter_20 FLOAT, 
	impter_21 FLOAT, 
	impter_22 FLOAT, 
	impter_23 FLOAT, 
	impter_24 FLOAT, 
	impter_25 FLOAT, 
	impter_26 FLOAT, 
	impter_27 FLOAT, 
	impter_28 FLOAT, 
	impter_29 FLOAT, 
	impter_30 FLOAT, 
	impter_31 FLOAT, 
	impter_32 FLOAT, 
	impter_33 FLOAT, 
	impter_34 FLOAT, 
	impter_35 FLOAT, 
	impter_36 FLOAT, 
	impter_37 FLOAT, 
	impter_38 FLOAT, 
	impter_39 FLOAT, 
	impter_40 FLOAT, 
	impter_41 FLOAT, 
	impter_42 FLOAT, 
	impter_43 FLOAT, 
	impter_44 FLOAT, 
	impter_45 FLOAT, 
	impter_46 FLOAT, 
	impter_47 FLOAT, 
	impter_48 FLOAT, 
	impter_49 FLOAT, 
	impter_50 FLOAT, 
	impter_51 FLOAT, 
	impter_52 FLOAT, 
	impter_53 FLOAT, 
	impter_54 FLOAT, 
	impter_55 FLOAT, 
	impter_56 FLOAT, 
	impter_57 FLOAT, 
	impter_58 FLOAT, 
	impter_59 FLOAT, 
	impter_60 FLOAT, 
	impter_61 FLOAT, 
	impter_62 FLOAT, 
	impter_63 FLOAT, 
	impter_64 FLOAT, 
	impter_65 FLOAT
)


-- Code For temporary table TMP_20180329233812_VEXUOX_ADS_imp_1_OUT part 2/2. Populate

INSERT INTO "TMP_20180329233812_VEXUOX_ADS_imp_1_OUT" ("KEY", impter_2, impter_3, impter_4, impter_5, impter_6, impter_7, impter_8, impter_9, impter_10, impter_11, impter_12, impter_13, impter_14, impter_15, impter_16, impter_17, impter_18, impter_19, impter_20, impter_21, impter_22, impter_23, impter_24, impter_25, impter_26, impter_27, impter_28, impter_29, impter_30, impter_31, impter_32, impter_33, impter_34, impter_35, impter_36, impter_37, impter_38, impter_39, impter_40, impter_41, impter_42, impter_43, impter_44, impter_45, impter_46, impter_47, impter_48, impter_49, impter_50, impter_51, impter_52, impter_53, impter_54, impter_55, impter_56, impter_57, impter_58, impter_59, impter_60, impter_61, impter_62, impter_63, impter_64, impter_65) SELECT "ADS_imp_1_OUT"."KEY", "ADS_imp_1_OUT".impter_2, "ADS_imp_1_OUT".impter_3, "ADS_imp_1_OUT".impter_4, "ADS_imp_1_OUT".impter_5, "ADS_imp_1_OUT".impter_6, "ADS_imp_1_OUT".impter_7, "ADS_imp_1_OUT".impter_8, "ADS_imp_1_OUT".impter_9, "ADS_imp_1_OUT".impter_10, "ADS_imp_1_OUT".impter_11, "ADS_imp_1_OUT".impter_12, "ADS_imp_1_OUT".impter_13, "ADS_imp_1_OUT".impter_14, "ADS_imp_1_OUT".impter_15, "ADS_imp_1_OUT".impter_16, "ADS_imp_1_OUT".impter_17, "ADS_imp_1_OUT".impter_18, "ADS_imp_1_OUT".impter_19, "ADS_imp_1_OUT".impter_20, "ADS_imp_1_OUT".impter_21, "ADS_imp_1_OUT".impter_22, "ADS_imp_1_OUT".impter_23, "ADS_imp_1_OUT".impter_24, "ADS_imp_1_OUT".impter_25, "ADS_imp_1_OUT".impter_26, "ADS_imp_1_OUT".impter_27, "ADS_imp_1_OUT".impter_28, "ADS_imp_1_OUT".impter_29, "ADS_imp_1_OUT".impter_30, "ADS_imp_1_OUT".impter_31, "ADS_imp_1_OUT".impter_32, "ADS_imp_1_OUT".impter_33, "ADS_imp_1_OUT".impter_34, "ADS_imp_1_OUT".impter_35, "ADS_imp_1_OUT".impter_36, "ADS_imp_1_OUT".impter_37, "ADS_imp_1_OUT".impter_38, "ADS_imp_1_OUT".impter_39, "ADS_imp_1_OUT".impter_40, "ADS_imp_1_OUT".impter_41, "ADS_imp_1_OUT".impter_42, "ADS_imp_1_OUT".impter_43, "ADS_imp_1_OUT".impter_44, "ADS_imp_1_OUT".impter_45, "ADS_imp_1_OUT".impter_46, "ADS_imp_1_OUT".impter_47, "ADS_imp_1_OUT".impter_48, "ADS_imp_1_OUT".impter_49, "ADS_imp_1_OUT".impter_50, "ADS_imp_1_OUT".impter_51, "ADS_imp_1_OUT".impter_52, "ADS_imp_1_OUT".impter_53, "ADS_imp_1_OUT".impter_54, "ADS_imp_1_OUT".impter_55, "ADS_imp_1_OUT".impter_56, "ADS_imp_1_OUT".impter_57, "ADS_imp_1_OUT".impter_58, "ADS_imp_1_OUT".impter_59, "ADS_imp_1_OUT".impter_60, "ADS_imp_1_OUT".impter_61, "ADS_imp_1_OUT".impter_62, "ADS_imp_1_OUT".impter_63, "ADS_imp_1_OUT".impter_64, "ADS_imp_1_OUT".impter_65 
FROM (SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" IS NULL) THEN 0.0 ELSE "ADS"."Feature_0" END AS impter_2, CASE WHEN ("ADS"."Feature_1" IS NULL) THEN 0.2950591510090466 ELSE "ADS"."Feature_1" END AS impter_3, CASE WHEN ("ADS"."Feature_2" IS NULL) THEN 5.104384133611691 ELSE "ADS"."Feature_2" END AS impter_4, CASE WHEN ("ADS"."Feature_3" IS NULL) THEN 11.791927627000696 ELSE "ADS"."Feature_3" END AS impter_5, CASE WHEN ("ADS"."Feature_4" IS NULL) THEN 11.84829505915101 ELSE "ADS"."Feature_4" END AS impter_6, CASE WHEN ("ADS"."Feature_5" IS NULL) THEN 5.823242867084203 ELSE "ADS"."Feature_5" END AS impter_7, CASE WHEN ("ADS"."Feature_6" IS NULL) THEN 1.394572025052192 ELSE "ADS"."Feature_6" END AS impter_8, CASE WHEN ("ADS"."Feature_7" IS NULL) THEN 0.13430758524704245 ELSE "ADS"."Feature_7" END AS impter_9, CASE WHEN ("ADS"."Feature_8" IS NULL) THEN 0.0055671537926235215 ELSE "ADS"."Feature_8" END AS impter_10, CASE WHEN ("ADS"."Feature_9" IS NULL) THEN 1.977035490605428 ELSE "ADS"."Feature_9" END AS impter_11, CASE WHEN ("ADS"."Feature_10" IS NULL) THEN 10.362560890744607 ELSE "ADS"."Feature_10" END AS impter_12, CASE WHEN ("ADS"."Feature_11" IS NULL) THEN 12.03061934585943 ELSE "ADS"."Feature_11" END AS impter_13, CASE WHEN ("ADS"."Feature_12" IS NULL) THEN 10.271398747390396 ELSE "ADS"."Feature_12" END AS impter_14, CASE WHEN ("ADS"."Feature_13" IS NULL) THEN 8.121781489213639 ELSE "ADS"."Feature_13" END AS impter_15, CASE WHEN ("ADS"."Feature_14" IS NULL) THEN 1.8921363952679193 ELSE "ADS"."Feature_14" END AS impter_16, CASE WHEN ("ADS"."Feature_15" IS NULL) THEN 0.11760612386917188 ELSE "ADS"."Feature_15" END AS impter_17, CASE WHEN ("ADS"."Feature_16" IS NULL) THEN 0.0020876826722338203 ELSE "ADS"."Feature_16" END AS impter_18, CASE WHEN ("ADS"."Feature_17" IS NULL) THEN 2.5427974947807934 ELSE "ADS"."Feature_17" END AS impter_19, CASE WHEN ("ADS"."Feature_18" IS NULL) THEN 9.935281837160751 ELSE "ADS"."Feature_18" END AS impter_20, CASE WHEN ("ADS"."Feature_19" IS NULL) THEN 7.099512874043145 ELSE "ADS"."Feature_19" END AS impter_21, CASE WHEN ("ADS"."Feature_20" IS NULL) THEN 7.132915796798887 ELSE "ADS"."Feature_20" END AS impter_22, CASE WHEN ("ADS"."Feature_21" IS NULL) THEN 7.81419624217119 ELSE "ADS"."Feature_21" END AS impter_23, CASE WHEN ("ADS"."Feature_22" IS NULL) THEN 1.8434237995824634 ELSE "ADS"."Feature_22" END AS impter_24, CASE WHEN ("ADS"."Feature_23" IS NULL) THEN 0.05775922059846903 ELSE "ADS"."Feature_23" END AS impter_25, CASE WHEN ("ADS"."Feature_24" IS NULL) THEN 0.0006958942240779402 ELSE "ADS"."Feature_24" END AS impter_26, CASE WHEN ("ADS"."Feature_25" IS NULL) THEN 2.4808629088378567 ELSE "ADS"."Feature_25" END AS impter_27, CASE WHEN ("ADS"."Feature_26" IS NULL) THEN 9.143354210160055 ELSE "ADS"."Feature_26" END AS impter_28, CASE WHEN ("ADS"."Feature_27" IS NULL) THEN 8.960334029227557 ELSE "ADS"."Feature_27" END AS impter_29, CASE WHEN ("ADS"."Feature_28" IS NULL) THEN 10.03688239387613 ELSE "ADS"."Feature_28" END AS impter_30, CASE WHEN ("ADS"."Feature_29" IS NULL) THEN 7.5949895615866385 ELSE "ADS"."Feature_29" END AS impter_31, CASE WHEN ("ADS"."Feature_30" IS NULL) THEN 2.337508698677801 ELSE "ADS"."Feature_30" END AS impter_32, CASE WHEN ("ADS"."Feature_31" IS NULL) THEN 0.0027835768963117608 ELSE "ADS"."Feature_31" END AS impter_33, CASE WHEN ("ADS"."Feature_32" IS NULL) THEN 0.0 ELSE "ADS"."Feature_32" END AS impter_34, CASE WHEN ("ADS"."Feature_33" IS NULL) THEN 2.3319415448851775 ELSE "ADS"."Feature_33" END AS impter_35, CASE WHEN ("ADS"."Feature_34" IS NULL) THEN 7.608907446068198 ELSE "ADS"."Feature_34" END AS impter_36, CASE WHEN ("ADS"."Feature_35" IS NULL) THEN 9.028531663187195 ELSE "ADS"."Feature_35" END AS impter_37, CASE WHEN ("ADS"."Feature_36" IS NULL) THEN 10.270006958942242 ELSE "ADS"."Feature_36" END AS impter_38, CASE WHEN ("ADS"."Feature_37" IS NULL) THEN 8.806541405706332 ELSE "ADS"."Feature_37" END AS impter_39, CASE WHEN ("ADS"."Feature_38" IS NULL) THEN 2.8754349338900487 ELSE "ADS"."Feature_38" END AS impter_40, CASE WHEN ("ADS"."Feature_39" IS NULL) THEN 0.0 ELSE "ADS"."Feature_39" END AS impter_41, CASE WHEN ("ADS"."Feature_40" IS NULL) THEN 0.010438413361169102 ELSE "ADS"."Feature_40" END AS impter_42, CASE WHEN ("ADS"."Feature_41" IS NULL) THEN 1.5755045233124565 ELSE "ADS"."Feature_41" END AS impter_43, CASE WHEN ("ADS"."Feature_42" IS NULL) THEN 6.858733472512178 ELSE "ADS"."Feature_42" END AS impter_44, CASE WHEN ("ADS"."Feature_43" IS NULL) THEN 7.258872651356993 ELSE "ADS"."Feature_43" END AS impter_45, CASE WHEN ("ADS"."Feature_44" IS NULL) THEN 7.710508002783577 ELSE "ADS"."Feature_44" END AS impter_46, CASE WHEN ("ADS"."Feature_45" IS NULL) THEN 8.281141266527488 ELSE "ADS"."Feature_45" END AS impter_47, CASE WHEN ("ADS"."Feature_46" IS NULL) THEN 3.432150313152401 ELSE "ADS"."Feature_46" END AS impter_48, CASE WHEN ("ADS"."Feature_47" IS NULL) THEN 0.031315240083507306 ELSE "ADS"."Feature_47" END AS impter_49, CASE WHEN ("ADS"."Feature_48" IS NULL) THEN 0.009046624913013222 ELSE "ADS"."Feature_48" END AS impter_50, CASE WHEN ("ADS"."Feature_49" IS NULL) THEN 0.708420320111343 ELSE "ADS"."Feature_49" END AS impter_51, CASE WHEN ("ADS"."Feature_50" IS NULL) THEN 7.492693110647181 ELSE "ADS"."Feature_50" END AS impter_52, CASE WHEN ("ADS"."Feature_51" IS NULL) THEN 9.529575504523313 ELSE "ADS"."Feature_51" END AS impter_53, CASE WHEN ("ADS"."Feature_52" IS NULL) THEN 9.541405706332638 ELSE "ADS"."Feature_52" END AS impter_54, CASE WHEN ("ADS"."Feature_53" IS NULL) THEN 8.754349338900488 ELSE "ADS"."Feature_53" END AS impter_55, CASE WHEN ("ADS"."Feature_54" IS NULL) THEN 3.7397355601948505 ELSE "ADS"."Feature_54" END AS impter_56, CASE WHEN ("ADS"."Feature_55" IS NULL) THEN 0.21920668058455114 ELSE "ADS"."Feature_55" END AS impter_57, CASE WHEN ("ADS"."Feature_56" IS NULL) THEN 0.0006958942240779402 ELSE "ADS"."Feature_56" END AS impter_58, CASE WHEN ("ADS"."Feature_57" IS NULL) THEN 0.26374391092553934 ELSE "ADS"."Feature_57" END AS impter_59, CASE WHEN ("ADS"."Feature_58" IS NULL) THEN 5.474599860821155 ELSE "ADS"."Feature_58" END AS impter_60, CASE WHEN ("ADS"."Feature_59" IS NULL) THEN 12.097425191370911 ELSE "ADS"."Feature_59" END AS impter_61, CASE WHEN ("ADS"."Feature_60" IS NULL) THEN 11.8580375782881 ELSE "ADS"."Feature_60" END AS impter_62, CASE WHEN ("ADS"."Feature_61" IS NULL) THEN 6.716771050800278 ELSE "ADS"."Feature_61" END AS impter_63, CASE WHEN ("ADS"."Feature_62" IS NULL) THEN 2.0869867780097424 ELSE "ADS"."Feature_62" END AS impter_64, CASE WHEN ("ADS"."Feature_63" IS NULL) THEN 0.3862212943632568 ELSE "ADS"."Feature_63" END AS impter_65 
FROM digits AS "ADS") AS "ADS_imp_1_OUT"
-- Code For temporary table TMP_20180329233812_WYC4DM_ADS_sca_2_OUT part 1/2. Create 


CREATE TEMPORARY TABLE "TMP_20180329233812_WYC4DM_ADS_sca_2_OUT" (
	"KEY" BIGINT, 
	scaler_2 FLOAT, 
	scaler_3 FLOAT, 
	scaler_4 FLOAT, 
	scaler_5 FLOAT, 
	scaler_6 FLOAT, 
	scaler_7 FLOAT, 
	scaler_8 FLOAT, 
	scaler_9 FLOAT, 
	scaler_10 FLOAT, 
	scaler_11 FLOAT, 
	scaler_12 FLOAT, 
	scaler_13 FLOAT, 
	scaler_14 FLOAT, 
	scaler_15 FLOAT, 
	scaler_16 FLOAT, 
	scaler_17 FLOAT, 
	scaler_18 FLOAT, 
	scaler_19 FLOAT, 
	scaler_20 FLOAT, 
	scaler_21 FLOAT, 
	scaler_22 FLOAT, 
	scaler_23 FLOAT, 
	scaler_24 FLOAT, 
	scaler_25 FLOAT, 
	scaler_26 FLOAT, 
	scaler_27 FLOAT, 
	scaler_28 FLOAT, 
	scaler_29 FLOAT, 
	scaler_30 FLOAT, 
	scaler_31 FLOAT, 
	scaler_32 FLOAT, 
	scaler_33 FLOAT, 
	scaler_34 FLOAT, 
	scaler_35 FLOAT, 
	scaler_36 FLOAT, 
	scaler_37 FLOAT, 
	scaler_38 FLOAT, 
	scaler_39 FLOAT, 
	scaler_40 FLOAT, 
	scaler_41 FLOAT, 
	scaler_42 FLOAT, 
	scaler_43 FLOAT, 
	scaler_44 FLOAT, 
	scaler_45 FLOAT, 
	scaler_46 FLOAT, 
	scaler_47 FLOAT, 
	scaler_48 FLOAT, 
	scaler_49 FLOAT, 
	scaler_50 FLOAT, 
	scaler_51 FLOAT, 
	scaler_52 FLOAT, 
	scaler_53 FLOAT, 
	scaler_54 FLOAT, 
	scaler_55 FLOAT, 
	scaler_56 FLOAT, 
	scaler_57 FLOAT, 
	scaler_58 FLOAT, 
	scaler_59 FLOAT, 
	scaler_60 FLOAT, 
	scaler_61 FLOAT, 
	scaler_62 FLOAT, 
	scaler_63 FLOAT, 
	scaler_64 FLOAT, 
	scaler_65 FLOAT
)


-- Code For temporary table TMP_20180329233812_WYC4DM_ADS_sca_2_OUT part 2/2. Populate

INSERT INTO "TMP_20180329233812_WYC4DM_ADS_sca_2_OUT" ("KEY", scaler_2, scaler_3, scaler_4, scaler_5, scaler_6, scaler_7, scaler_8, scaler_9, scaler_10, scaler_11, scaler_12, scaler_13, scaler_14, scaler_15, scaler_16, scaler_17, scaler_18, scaler_19, scaler_20, scaler_21, scaler_22, scaler_23, scaler_24, scaler_25, scaler_26, scaler_27, scaler_28, scaler_29, scaler_30, scaler_31, scaler_32, scaler_33, scaler_34, scaler_35, scaler_36, scaler_37, scaler_38, scaler_39, scaler_40, scaler_41, scaler_42, scaler_43, scaler_44, scaler_45, scaler_46, scaler_47, scaler_48, scaler_49, scaler_50, scaler_51, scaler_52, scaler_53, scaler_54, scaler_55, scaler_56, scaler_57, scaler_58, scaler_59, scaler_60, scaler_61, scaler_62, scaler_63, scaler_64, scaler_65) SELECT "ADS_sca_2_OUT"."KEY", "ADS_sca_2_OUT".scaler_2, "ADS_sca_2_OUT".scaler_3, "ADS_sca_2_OUT".scaler_4, "ADS_sca_2_OUT".scaler_5, "ADS_sca_2_OUT".scaler_6, "ADS_sca_2_OUT".scaler_7, "ADS_sca_2_OUT".scaler_8, "ADS_sca_2_OUT".scaler_9, "ADS_sca_2_OUT".scaler_10, "ADS_sca_2_OUT".scaler_11, "ADS_sca_2_OUT".scaler_12, "ADS_sca_2_OUT".scaler_13, "ADS_sca_2_OUT".scaler_14, "ADS_sca_2_OUT".scaler_15, "ADS_sca_2_OUT".scaler_16, "ADS_sca_2_OUT".scaler_17, "ADS_sca_2_OUT".scaler_18, "ADS_sca_2_OUT".scaler_19, "ADS_sca_2_OUT".scaler_20, "ADS_sca_2_OUT".scaler_21, "ADS_sca_2_OUT".scaler_22, "ADS_sca_2_OUT".scaler_23, "ADS_sca_2_OUT".scaler_24, "ADS_sca_2_OUT".scaler_25, "ADS_sca_2_OUT".scaler_26, "ADS_sca_2_OUT".scaler_27, "ADS_sca_2_OUT".scaler_28, "ADS_sca_2_OUT".scaler_29, "ADS_sca_2_OUT".scaler_30, "ADS_sca_2_OUT".scaler_31, "ADS_sca_2_OUT".scaler_32, "ADS_sca_2_OUT".scaler_33, "ADS_sca_2_OUT".scaler_34, "ADS_sca_2_OUT".scaler_35, "ADS_sca_2_OUT".scaler_36, "ADS_sca_2_OUT".scaler_37, "ADS_sca_2_OUT".scaler_38, "ADS_sca_2_OUT".scaler_39, "ADS_sca_2_OUT".scaler_40, "ADS_sca_2_OUT".scaler_41, "ADS_sca_2_OUT".scaler_42, "ADS_sca_2_OUT".scaler_43, "ADS_sca_2_OUT".scaler_44, "ADS_sca_2_OUT".scaler_45, "ADS_sca_2_OUT".scaler_46, "ADS_sca_2_OUT".scaler_47, "ADS_sca_2_OUT".scaler_48, "ADS_sca_2_OUT".scaler_49, "ADS_sca_2_OUT".scaler_50, "ADS_sca_2_OUT".scaler_51, "ADS_sca_2_OUT".scaler_52, "ADS_sca_2_OUT".scaler_53, "ADS_sca_2_OUT".scaler_54, "ADS_sca_2_OUT".scaler_55, "ADS_sca_2_OUT".scaler_56, "ADS_sca_2_OUT".scaler_57, "ADS_sca_2_OUT".scaler_58, "ADS_sca_2_OUT".scaler_59, "ADS_sca_2_OUT".scaler_60, "ADS_sca_2_OUT".scaler_61, "ADS_sca_2_OUT".scaler_62, "ADS_sca_2_OUT".scaler_63, "ADS_sca_2_OUT".scaler_64, "ADS_sca_2_OUT".scaler_65 
FROM (SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", (CAST("ADS_imp_1_OUT".impter_2 AS FLOAT) - 0.0) / 1.0 AS scaler_2, (CAST("ADS_imp_1_OUT".impter_3 AS FLOAT) - 0.2950591510090466) / 0.886335971513945 AS scaler_3, (CAST("ADS_imp_1_OUT".impter_4 AS FLOAT) - 5.104384133611691) / 4.714562522364591 AS scaler_4, (CAST("ADS_imp_1_OUT".impter_5 AS FLOAT) - 11.791927627000696) / 4.242705177561994 AS scaler_5, (CAST("ADS_imp_1_OUT".impter_6 AS FLOAT) - 11.84829505915101) / 4.298607850485783 AS scaler_6, (CAST("ADS_imp_1_OUT".impter_7 AS FLOAT) - 5.823242867084203) / 5.664052593352563 AS scaler_7, (CAST("ADS_imp_1_OUT".impter_8 AS FLOAT) - 1.394572025052192) / 3.3672537498889787 AS scaler_8, (CAST("ADS_imp_1_OUT".impter_9 AS FLOAT) - 0.13430758524704245) / 1.0738488961060884 AS scaler_9, (CAST("ADS_imp_1_OUT".impter_10 AS FLOAT) - 0.0055671537926235215) / 0.09121259500521199 AS scaler_10, (CAST("ADS_imp_1_OUT".impter_11 AS FLOAT) - 1.977035490605428) / 3.1765759513448373 AS scaler_11, (CAST("ADS_imp_1_OUT".impter_12 AS FLOAT) - 10.362560890744607) / 5.427455768043861 AS scaler_12, (CAST("ADS_imp_1_OUT".impter_13 AS FLOAT) - 12.03061934585943) / 3.9240043126958595 AS scaler_13, (CAST("ADS_imp_1_OUT".impter_14 AS FLOAT) - 10.271398747390396) / 4.751306782008032 AS scaler_14, (CAST("ADS_imp_1_OUT".impter_15 AS FLOAT) - 8.121781489213639) / 6.055742470420089 AS scaler_15, (CAST("ADS_imp_1_OUT".impter_16 AS FLOAT) - 1.8921363952679193) / 3.6358496015605493 AS scaler_16, (CAST("ADS_imp_1_OUT".impter_17 AS FLOAT) - 0.11760612386917188) / 0.8809135848407257 AS scaler_17, (CAST("ADS_imp_1_OUT".impter_18 AS FLOAT) - 0.0020876826722338203) / 0.04564344699180706 AS scaler_18, (CAST("ADS_imp_1_OUT".impter_19 AS FLOAT) - 2.5427974947807934) / 3.535939148296097 AS scaler_19, (CAST("ADS_imp_1_OUT".impter_20 AS FLOAT) - 9.935281837160751) / 5.674233427535142 AS scaler_20, (CAST("ADS_imp_1_OUT".impter_21 AS FLOAT) - 7.099512874043145) / 5.828968622118506 AS scaler_21, (CAST("ADS_imp_1_OUT".impter_22 AS FLOAT) - 7.132915796798887) / 6.164166380758013 AS scaler_22, (CAST("ADS_imp_1_OUT".impter_23 AS FLOAT) - 7.81419624217119) / 6.237214641441282 AS scaler_23, (CAST("ADS_imp_1_OUT".impter_24 AS FLOAT) - 1.8434237995824634) / 3.3552968495259408 AS scaler_24, (CAST("ADS_imp_1_OUT".impter_25 AS FLOAT) - 0.05775922059846903) / 0.47057168084472595 AS scaler_25, (CAST("ADS_imp_1_OUT".impter_26 AS FLOAT) - 0.0006958942240779402) / 0.0263706267522565 AS scaler_26, (CAST("ADS_imp_1_OUT".impter_27 AS FLOAT) - 2.4808629088378567) / 3.1579531140532993 AS scaler_27, (CAST("ADS_imp_1_OUT".impter_28 AS FLOAT) - 9.143354210160055) / 6.211448620771221 AS scaler_28, (CAST("ADS_imp_1_OUT".impter_29 AS FLOAT) - 8.960334029227557) / 5.872499336895779 AS scaler_29, (CAST("ADS_imp_1_OUT".impter_30 AS FLOAT) - 10.03688239387613) / 6.131194138822921 AS scaler_30, (CAST("ADS_imp_1_OUT".impter_31 AS FLOAT) - 7.5949895615866385) / 5.883009512311774 AS scaler_31, (CAST("ADS_imp_1_OUT".impter_32 AS FLOAT) - 2.337508698677801) / 3.7555163121005397 AS scaler_32, (CAST("ADS_imp_1_OUT".impter_33 AS FLOAT) - 0.0027835768963117608) / 0.05268613286220741 AS scaler_33, (CAST("ADS_imp_1_OUT".impter_34 AS FLOAT) - 0.0) / 1.0 AS scaler_34, (CAST("ADS_imp_1_OUT".impter_35 AS FLOAT) - 2.3319415448851775) / 3.520361676701363 AS scaler_35, (CAST("ADS_imp_1_OUT".impter_36 AS FLOAT) - 7.608907446068198) / 6.337427127154217 AS scaler_36, (CAST("ADS_imp_1_OUT".impter_37 AS FLOAT) - 9.028531663187195) / 6.255398792908601 AS scaler_37, (CAST("ADS_imp_1_OUT".impter_38 AS FLOAT) - 10.270006958942242) / 5.918328236602452 AS scaler_38, (CAST("ADS_imp_1_OUT".impter_39 AS FLOAT) - 8.806541405706332) / 5.862505948752236 AS scaler_39, (CAST("ADS_imp_1_OUT".impter_40 AS FLOAT) - 2.8754349338900487) / 3.521551388880749 AS scaler_40, (CAST("ADS_imp_1_OUT".impter_41 AS FLOAT) - 0.0) / 1.0 AS scaler_41, (CAST("ADS_imp_1_OUT".impter_42 AS FLOAT) - 0.010438413361169102) / 0.16012222149778146 AS scaler_42, (CAST("ADS_imp_1_OUT".impter_43 AS FLOAT) - 1.5755045233124565) / 3.0148158575591246 AS scaler_43, (CAST("ADS_imp_1_OUT".impter_44 AS FLOAT) - 6.858733472512178) / 6.5422093407655435 AS scaler_44, (CAST("ADS_imp_1_OUT".impter_45 AS FLOAT) - 7.258872651356993) / 6.490917554434448 AS scaler_45, (CAST("ADS_imp_1_OUT".impter_46 AS FLOAT) - 7.710508002783577) / 6.292873620677289 AS scaler_46, (CAST("ADS_imp_1_OUT".impter_47 AS FLOAT) - 8.281141266527488) / 5.713309549149251 AS scaler_47, (CAST("ADS_imp_1_OUT".impter_48 AS FLOAT) - 3.432150313152401) / 4.326500259143386 AS scaler_48, (CAST("ADS_imp_1_OUT".impter_49 AS FLOAT) - 0.031315240083507306) / 0.33325414598330405 AS scaler_49, (CAST("ADS_imp_1_OUT".impter_50 AS FLOAT) - 0.009046624913013222) / 0.22827664222063312 AS scaler_50, (CAST("ADS_imp_1_OUT".impter_51 AS FLOAT) - 0.708420320111343) / 1.7630768232183456 AS scaler_51, (CAST("ADS_imp_1_OUT".impter_52 AS FLOAT) - 7.492693110647181) / 5.6747357473393345 AS scaler_52, (CAST("ADS_imp_1_OUT".impter_53 AS FLOAT) - 9.529575504523313) / 5.230790022511772 AS scaler_53, (CAST("ADS_imp_1_OUT".impter_54 AS FLOAT) - 9.541405706332638) / 5.2515555146947035 AS scaler_54, (CAST("ADS_imp_1_OUT".impter_55 AS FLOAT) - 8.754349338900488) / 6.0343648977583975 AS scaler_55, (CAST("ADS_imp_1_OUT".impter_56 AS FLOAT) - 3.7397355601948505) / 4.953834269857758 AS scaler_56, (CAST("ADS_imp_1_OUT".impter_57 AS FLOAT) - 0.21920668058455114) / 1.0257471420649142 AS scaler_57, (CAST("ADS_imp_1_OUT".impter_58 AS FLOAT) - 0.0006958942240779402) / 0.02637062675225659 AS scaler_58, (CAST("ADS_imp_1_OUT".impter_59 AS FLOAT) - 0.26374391092553934) / 0.893431165157604 AS scaler_59, (CAST("ADS_imp_1_OUT".impter_60 AS FLOAT) - 5.474599860821155) / 5.06659361292149 AS scaler_60, (CAST("ADS_imp_1_OUT".impter_61 AS FLOAT) - 12.097425191370911) / 4.359965306758356 AS scaler_61, (CAST("ADS_imp_1_OUT".impter_62 AS FLOAT) - 11.8580375782881) / 4.889242282258171 AS scaler_62, (CAST("ADS_imp_1_OUT".impter_63 AS FLOAT) - 6.716771050800278) / 5.87255780345831 AS scaler_63, (CAST("ADS_imp_1_OUT".impter_64 AS FLOAT) - 2.0869867780097424) / 4.12826085471658 AS scaler_64, (CAST("ADS_imp_1_OUT".impter_65 AS FLOAT) - 0.3862212943632568) / 1.915153500596726 AS scaler_65 
FROM "TMP_20180329233812_VEXUOX_ADS_imp_1_OUT" AS "ADS_imp_1_OUT") AS "ADS_sca_2_OUT"
-- Code For temporary table TMP_20180329233814_VBYG87_CalProb_AVG_B0 part 1/2. Create 


CREATE TEMPORARY TABLE "TMP_20180329233814_VBYG87_CalProb_AVG_B0" (
	"KEY" BIGINT, 
	"Proba_0" FLOAT, 
	"Proba_1" FLOAT, 
	"Proba_2" FLOAT, 
	"Proba_3" FLOAT, 
	"Proba_4" FLOAT, 
	"Proba_5" FLOAT, 
	"Proba_6" FLOAT, 
	"Proba_7" FLOAT, 
	"Proba_8" FLOAT, 
	"Proba_9" FLOAT
)


-- Code For temporary table TMP_20180329233814_VBYG87_CalProb_AVG_B0 part 2/2. Populate

WITH "DT_node_lookup" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_38 <= -1.6508052349090576) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_30 <= -1.2292683124542236) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_23 <= -1.1726703643798828) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= 0.7374149560928345) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_43 <= 1.3017363548278809) THEN 5 ELSE 6 END ELSE 7 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_64 <= 1.3112090826034546) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_52 <= -0.8798106908798218) THEN 10 ELSE 11 END ELSE 12 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_23 <= 0.27028152346611023) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= -0.5867252945899963) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_44 <= -0.20768722891807556) THEN 16 ELSE 17 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_30 <= -0.5768668055534363) THEN 19 ELSE 20 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_35 <= -0.23632274568080902) THEN 22 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_61 <= 0.321694016456604) THEN 24 ELSE 25 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_23 <= -1.1726703643798828) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_44 <= 0.2508734464645386) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= -0.5867252945899963) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= -0.4649772346019745) THEN 30 ELSE 31 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= -0.9766302108764648) THEN 33 ELSE 34 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_56 <= -0.6539855003356934) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_61 <= -0.13702520728111267) THEN 37 ELSE 38 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= 0.32203370332717896) THEN 40 ELSE 41 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_35 <= 0.8999241590499878) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_62 <= -0.8913522958755493) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_55 <= -0.7050202488899231) THEN 45 ELSE 46 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_45 <= -0.8872201442718506) THEN 48 ELSE 49 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_28 <= -0.023079030215740204) THEN 51 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_15 <= 0.8881187438964844) THEN 53 ELSE 54 END END END END END AS node_id_2 
FROM "TMP_20180329233812_WYC4DM_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Proba_2" AS "Proba_2", "Values"."LogProba_2" AS "LogProba_2", "Values"."Proba_3" AS "Proba_3", "Values"."LogProba_3" AS "LogProba_3", "Values"."Proba_4" AS "Proba_4", "Values"."LogProba_4" AS "LogProba_4", "Values"."Proba_5" AS "Proba_5", "Values"."LogProba_5" AS "LogProba_5", "Values"."Proba_6" AS "Proba_6", "Values"."LogProba_6" AS "LogProba_6", "Values"."Proba_7" AS "Proba_7", "Values"."LogProba_7" AS "LogProba_7", "Values"."Proba_8" AS "Proba_8", "Values"."LogProba_8" AS "LogProba_8", "Values"."Proba_9" AS "Proba_9", "Values"."LogProba_9" AS "LogProba_9", "Values"."Decision" AS "Decision", "Values"."DecisionProba" AS "DecisionProba" 
FROM (SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 4 AS parent_id, 0.3333333333333333 AS "Proba_0", -1.0986122886681098 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.3333333333333333 AS "Proba_2", -1.0986122886681098 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0.0 AS "Proba_4", -1.79769313486231e+308 AS "LogProba_4", 0.0 AS "Proba_5", -1.79769313486231e+308 AS "LogProba_5", 0.3333333333333333 AS "Proba_6", -1.0986122886681098 AS "LogProba_6", 0.0 AS "Proba_7", -1.79769313486231e+308 AS "LogProba_7", 0.0 AS "Proba_8", -1.79769313486231e+308 AS "LogProba_8", 0.0 AS "Proba_9", -1.79769313486231e+308 AS "LogProba_9", 0 AS "Decision", 0.3333333333333333 AS "DecisionProba" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 4 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 1.0 AS "Proba_4", 0.0 AS "LogProba_4", 0.0 AS "Proba_5", -1.79769313486231e+308 AS "LogProba_5", 0.0 AS "Proba_6", -1.79769313486231e+308 AS "LogProba_6", 0.0 AS "Proba_7", -1.79769313486231e+308 AS "LogProba_7", 0.0 AS "Proba_8", -1.79769313486231e+308 AS "LogProba_8", 0.0 AS "Proba_9", -1.79769313486231e+308 AS "LogProba_9", 4 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 4 AS depth, 3 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0.0 AS "Proba_4", -1.79769313486231e+308 AS "LogProba_4", 1.0 AS "Proba_5", 0.0 AS "LogProba_5", 0.0 AS "Proba_6", -1.79769313486231e+308 AS "LogProba_6", 0.0 AS "Proba_7", -1.79769313486231e+308 AS "LogProba_7", 0.0 AS "Proba_8", -1.79769313486231e+308 AS "LogProba_8", 0.0 AS "Proba_9", -1.79769313486231e+308 AS "LogProba_9", 5 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 9 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 1.0 AS "Proba_4", 0.0 AS "LogProba_4", 0.0 AS "Proba_5", -1.79769313486231e+308 AS "LogProba_5", 0.0 AS "Proba_6", -1.79769313486231e+308 AS "LogProba_6", 0.0 AS "Proba_7", -1.79769313486231e+308 AS "LogProba_7", 0.0 AS "Proba_8", -1.79769313486231e+308 AS "LogProba_8", 0.0 AS "Proba_9", -1.79769313486231e+308 AS "LogProba_9", 4 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 97 AS count, 5 AS depth, 9 AS parent_id, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0.0 AS "Proba_4", -1.79769313486231e+308 AS "LogProba_4", 0.0 AS "Proba_5", -1.79769313486231e+308 AS "LogProba_5", 0.0 AS "Proba_6", -1.79769313486231e+308 AS "LogProba_6", 0.0 AS "Proba_7", -1.79769313486231e+308 AS "LogProba_7", 0.0 AS "Proba_8", -1.79769313486231e+308 AS "LogProba_8", 0.0 AS "Proba_9", -1.79769313486231e+308 AS "LogProba_9", 0 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 8 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0.0 AS "Proba_4", -1.79769313486231e+308 AS "LogProba_4", 0.0 AS "Proba_5", -1.79769313486231e+308 AS "LogProba_5", 0.0 AS "Proba_6", -1.79769313486231e+308 AS "LogProba_6", 0.0 AS "Proba_7", -1.79769313486231e+308 AS "LogProba_7", 0.0 AS "Proba_8", -1.79769313486231e+308 AS "LogProba_8", 0.0 AS "Proba_9", -1.79769313486231e+308 AS "LogProba_9", 2 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 15 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0.0 AS "Proba_4", -1.79769313486231e+308 AS "LogProba_4", 0.0 AS "Proba_5", -1.79769313486231e+308 AS "LogProba_5", 0.0 AS "Proba_6", -1.79769313486231e+308 AS "LogProba_6", 0.0 AS "Proba_7", -1.79769313486231e+308 AS "LogProba_7", 0.0 AS "Proba_8", -1.79769313486231e+308 AS "LogProba_8", 1.0 AS "Proba_9", 0.0 AS "LogProba_9", 9 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 15 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.3333333333333333 AS "Proba_2", -1.0986122886681098 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0.0 AS "Proba_4", -1.79769313486231e+308 AS "LogProba_4", 0.0 AS "Proba_5", -1.79769313486231e+308 AS "LogProba_5", 0.6666666666666666 AS "Proba_6", -0.40546510810816444 AS "LogProba_6", 0.0 AS "Proba_7", -1.79769313486231e+308 AS "LogProba_7", 0.0 AS "Proba_8", -1.79769313486231e+308 AS "LogProba_8", 0.0 AS "Proba_9", -1.79769313486231e+308 AS "LogProba_9", 6 AS "Decision", 0.6666666666666666 AS "DecisionProba" UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 18 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0.0 AS "Proba_4", -1.79769313486231e+308 AS "LogProba_4", 0.0 AS "Proba_5", -1.79769313486231e+308 AS "LogProba_5", 0.0 AS "Proba_6", -1.79769313486231e+308 AS "LogProba_6", 0.0 AS "Proba_7", -1.79769313486231e+308 AS "LogProba_7", 1.0 AS "Proba_8", 0.0 AS "LogProba_8", 0.0 AS "Proba_9", -1.79769313486231e+308 AS "LogProba_9", 8 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 5 AS depth, 18 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0.0 AS "Proba_4", -1.79769313486231e+308 AS "LogProba_4", 1.0 AS "Proba_5", 0.0 AS "LogProba_5", 0.0 AS "Proba_6", -1.79769313486231e+308 AS "LogProba_6", 0.0 AS "Proba_7", -1.79769313486231e+308 AS "LogProba_7", 0.0 AS "Proba_8", -1.79769313486231e+308 AS "LogProba_8", 0.0 AS "Proba_9", -1.79769313486231e+308 AS "LogProba_9", 5 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 33 AS count, 4 AS depth, 21 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0.0 AS "Proba_4", -1.79769313486231e+308 AS "LogProba_4", 0.0 AS "Proba_5", -1.79769313486231e+308 AS "LogProba_5", 0.0 AS "Proba_6", -1.79769313486231e+308 AS "LogProba_6", 0.0 AS "Proba_7", -1.79769313486231e+308 AS "LogProba_7", 0.0 AS "Proba_8", -1.79769313486231e+308 AS "LogProba_8", 1.0 AS "Proba_9", 0.0 AS "LogProba_9", 9 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 23 AS parent_id, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0.0 AS "Proba_4", -1.79769313486231e+308 AS "LogProba_4", 0.0 AS "Proba_5", -1.79769313486231e+308 AS "LogProba_5", 0.0 AS "Proba_6", -1.79769313486231e+308 AS "LogProba_6", 0.0 AS "Proba_7", -1.79769313486231e+308 AS "LogProba_7", 0.0 AS "Proba_8", -1.79769313486231e+308 AS "LogProba_8", 0.0 AS "Proba_9", -1.79769313486231e+308 AS "LogProba_9", 0 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 23 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0.0 AS "Proba_4", -1.79769313486231e+308 AS "LogProba_4", 0.0 AS "Proba_5", -1.79769313486231e+308 AS "LogProba_5", 0.0 AS "Proba_6", -1.79769313486231e+308 AS "LogProba_6", 0.0 AS "Proba_7", -1.79769313486231e+308 AS "LogProba_7", 1.0 AS "Proba_8", 0.0 AS "LogProba_8", 0.0 AS "Proba_9", -1.79769313486231e+308 AS "LogProba_9", 8 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 31 AS count, 5 AS depth, 29 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.6774193548387096 AS "Proba_1", -0.3894647667617233 AS "LogProba_1", 0.06451612903225806 AS "Proba_2", -2.740840023925201 AS "LogProba_2", 0.03225806451612903 AS "Proba_3", -3.4339872044851463 AS "LogProba_3", 0.16129032258064516 AS "Proba_4", -1.824549292051046 AS "LogProba_4", 0.0 AS "Proba_5", -1.79769313486231e+308 AS "LogProba_5", 0.06451612903225806 AS "Proba_6", -2.740840023925201 AS "LogProba_6", 0.0 AS "Proba_7", -1.79769313486231e+308 AS "LogProba_7", 0.0 AS "Proba_8", -1.79769313486231e+308 AS "LogProba_8", 0.0 AS "Proba_9", -1.79769313486231e+308 AS "LogProba_9", 1 AS "Decision", 0.6774193548387096 AS "DecisionProba" UNION ALL SELECT 31 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 38 AS count, 5 AS depth, 29 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.02631578947368421 AS "Proba_1", -3.6375861597263857 AS "LogProba_1", 0.5789473684210527 AS "Proba_2", -0.5465437063680699 AS "LogProba_2", 0.18421052631578946 AS "Proba_3", -1.6916760106710724 AS "LogProba_3", 0.0 AS "Proba_4", -1.79769313486231e+308 AS "LogProba_4", 0.02631578947368421 AS "Proba_5", -3.6375861597263857 AS "LogProba_5", 0.0 AS "Proba_6", -1.79769313486231e+308 AS "LogProba_6", 0.07894736842105263 AS "Proba_7", -2.538973871058276 AS "LogProba_7", 0.07894736842105263 AS "Proba_8", -2.538973871058276 AS "LogProba_8", 0.02631578947368421 AS "Proba_9", -3.6375861597263857 AS "LogProba_9", 2 AS "Decision", 0.5789473684210527 AS "DecisionProba" UNION ALL SELECT 33 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 32 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0.6666666666666666 AS "Proba_4", -0.40546510810816444 AS "LogProba_4", 0.0 AS "Proba_5", -1.79769313486231e+308 AS "LogProba_5", 0.0 AS "Proba_6", -1.79769313486231e+308 AS "LogProba_6", 0.3333333333333333 AS "Proba_7", -1.0986122886681098 AS "LogProba_7", 0.0 AS "Proba_8", -1.79769313486231e+308 AS "LogProba_8", 0.0 AS "Proba_9", -1.79769313486231e+308 AS "LogProba_9", 4 AS "Decision", 0.6666666666666666 AS "DecisionProba" UNION ALL SELECT 34 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 90 AS count, 5 AS depth, 32 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.011111111111111112 AS "Proba_3", -4.499809670330265 AS "LogProba_3", 0.0 AS "Proba_4", -1.79769313486231e+308 AS "LogProba_4", 0.9888888888888889 AS "Proba_5", -0.011173300598125189 AS "LogProba_5", 0.0 AS "Proba_6", -1.79769313486231e+308 AS "LogProba_6", 0.0 AS "Proba_7", -1.79769313486231e+308 AS "LogProba_7", 0.0 AS "Proba_8", -1.79769313486231e+308 AS "LogProba_8", 0.0 AS "Proba_9", -1.79769313486231e+308 AS "LogProba_9", 5 AS "Decision", 0.9888888888888889 AS "DecisionProba" UNION ALL SELECT 37 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 5 AS depth, 36 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 1.0 AS "Proba_4", 0.0 AS "LogProba_4", 0.0 AS "Proba_5", -1.79769313486231e+308 AS "LogProba_5", 0.0 AS "Proba_6", -1.79769313486231e+308 AS "LogProba_6", 0.0 AS "Proba_7", -1.79769313486231e+308 AS "LogProba_7", 0.0 AS "Proba_8", -1.79769313486231e+308 AS "LogProba_8", 0.0 AS "Proba_9", -1.79769313486231e+308 AS "LogProba_9", 4 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 38 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 5 AS depth, 36 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.7 AS "Proba_1", -0.35667494393873245 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0.0 AS "Proba_4", -1.79769313486231e+308 AS "LogProba_4", 0.1 AS "Proba_5", -2.3025850929940455 AS "LogProba_5", 0.2 AS "Proba_6", -1.6094379124341003 AS "LogProba_6", 0.0 AS "Proba_7", -1.79769313486231e+308 AS "LogProba_7", 0.0 AS "Proba_8", -1.79769313486231e+308 AS "LogProba_8", 0.0 AS "Proba_9", -1.79769313486231e+308 AS "LogProba_9", 1 AS "Decision", 0.7 AS "DecisionProba" UNION ALL SELECT 40 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 97 AS count, 5 AS depth, 39 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0.0 AS "Proba_4", -1.79769313486231e+308 AS "LogProba_4", 0.010309278350515464 AS "Proba_5", -4.574710978503383 AS "LogProba_5", 0.9896907216494846 AS "Proba_6", -0.010362787035546547 AS "LogProba_6", 0.0 AS "Proba_7", -1.79769313486231e+308 AS "LogProba_7", 0.0 AS "Proba_8", -1.79769313486231e+308 AS "LogProba_8", 0.0 AS "Proba_9", -1.79769313486231e+308 AS "LogProba_9", 6 AS "Decision", 0.9896907216494846 AS "DecisionProba" UNION ALL SELECT 41 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 5 AS depth, 39 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0.0 AS "Proba_4", -1.79769313486231e+308 AS "LogProba_4", 0.0 AS "Proba_5", -1.79769313486231e+308 AS "LogProba_5", 0.0 AS "Proba_6", -1.79769313486231e+308 AS "LogProba_6", 0.0 AS "Proba_7", -1.79769313486231e+308 AS "LogProba_7", 0.0 AS "Proba_8", -1.79769313486231e+308 AS "LogProba_8", 0.0 AS "Proba_9", -1.79769313486231e+308 AS "LogProba_9", 2 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 45 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 107 AS count, 5 AS depth, 44 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.018691588785046728 AS "Proba_1", -3.979681653901961 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.018691588785046728 AS "Proba_3", -3.979681653901961 AS "LogProba_3", 0.04672897196261682 AS "Proba_4", -3.0633909220278057 AS "LogProba_4", 0.0 AS "Proba_5", -1.79769313486231e+308 AS "LogProba_5", 0.0 AS "Proba_6", -1.79769313486231e+308 AS "LogProba_6", 0.794392523364486 AS "Proba_7", -0.23017757797158975 AS "LogProba_7", 0.037383177570093455 AS "Proba_8", -3.2865344733420154 AS "LogProba_8", 0.08411214953271028 AS "Proba_9", -2.4756042571256867 AS "LogProba_9", 7 AS "Decision", 0.794392523364486 AS "DecisionProba" UNION ALL SELECT 46 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 5 AS depth, 44 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.1875 AS "Proba_1", -1.6739764335716716 AS "LogProba_1", 0.25 AS "Proba_2", -1.3862943611198906 AS "LogProba_2", 0.25 AS "Proba_3", -1.3862943611198906 AS "LogProba_3", 0.0 AS "Proba_4", -1.79769313486231e+308 AS "LogProba_4", 0.0625 AS "Proba_5", -2.772588722239781 AS "LogProba_5", 0.0 AS "Proba_6", -1.79769313486231e+308 AS "LogProba_6", 0.0 AS "Proba_7", -1.79769313486231e+308 AS "LogProba_7", 0.125 AS "Proba_8", -2.0794415416798357 AS "LogProba_8", 0.125 AS "Proba_9", -2.0794415416798357 AS "LogProba_9", 2 AS "Decision", 0.25 AS "DecisionProba" UNION ALL SELECT 48 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 168 AS count, 5 AS depth, 47 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.05952380952380952 AS "Proba_1", -2.8213788864092133 AS "LogProba_1", 0.011904761904761904 AS "Proba_2", -4.430816798843313 AS "LogProba_2", 0.49404761904761907 AS "Proba_3", -0.7051233716066609 AS "LogProba_3", 0.011904761904761904 AS "Proba_4", -4.430816798843313 AS "LogProba_4", 0.023809523809523808 AS "Proba_5", -3.7376696182833684 AS "LogProba_5", 0.0 AS "Proba_6", -1.79769313486231e+308 AS "LogProba_6", 0.0 AS "Proba_7", -1.79769313486231e+308 AS "LogProba_7", 0.06547619047619048 AS "Proba_8", -2.7260687066048885 AS "LogProba_8", 0.3333333333333333 AS "Proba_9", -1.0986122886681098 AS "LogProba_9", 3 AS "Decision", 0.49404761904761907 AS "DecisionProba" UNION ALL SELECT 49 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 251 AS count, 5 AS depth, 47 AS parent_id, 0.01195219123505976 AS "Proba_0", -4.426840650463674 AS "LogProba_0", 0.24701195219123506 AS "Proba_1", -1.3983185540866923 AS "LogProba_1", 0.2868525896414343 AS "Proba_2", -1.2487868201157284 AS "LogProba_2", 0.0398406374501992 AS "Proba_3", -3.222867846137738 AS "LogProba_3", 0.035856573705179286 AS "Proba_4", -3.3282283617955644 AS "LogProba_4", 0.0 AS "Proba_5", -1.79769313486231e+308 AS "LogProba_5", 0.00398406374501992 AS "Proba_6", -5.5254529391317835 AS "LogProba_6", 0.03187250996015936 AS "Proba_7", -3.446011397451948 AS "LogProba_7", 0.3147410358565737 AS "Proba_8", -1.1560050866647624 AS "LogProba_8", 0.027888446215139442 AS "Proba_9", -3.5795427900764705 AS "LogProba_9", 8 AS "Decision", 0.3147410358565737 AS "DecisionProba" UNION ALL SELECT 51 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 4 AS depth, 50 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0.0 AS "Proba_4", -1.79769313486231e+308 AS "LogProba_4", 0.0 AS "Proba_5", -1.79769313486231e+308 AS "LogProba_5", 0.0 AS "Proba_6", -1.79769313486231e+308 AS "LogProba_6", 1.0 AS "Proba_7", 0.0 AS "LogProba_7", 0.0 AS "Proba_8", -1.79769313486231e+308 AS "LogProba_8", 0.0 AS "Proba_9", -1.79769313486231e+308 AS "LogProba_9", 7 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 53 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 71 AS count, 5 AS depth, 52 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.014084507042253521 AS "Proba_1", -4.2626798770413155 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0.971830985915493 AS "Proba_4", -0.028573372444056 AS "LogProba_4", 0.0 AS "Proba_5", -1.79769313486231e+308 AS "LogProba_5", 0.014084507042253521 AS "Proba_6", -4.2626798770413155 AS "LogProba_6", 0.0 AS "Proba_7", -1.79769313486231e+308 AS "LogProba_7", 0.0 AS "Proba_8", -1.79769313486231e+308 AS "LogProba_8", 0.0 AS "Proba_9", -1.79769313486231e+308 AS "LogProba_9", 4 AS "Decision", 0.971830985915493 AS "DecisionProba" UNION ALL SELECT 54 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 5 AS depth, 52 AS parent_id, 0.125 AS "Proba_0", -2.0794415416798357 AS "LogProba_0", 0.375 AS "Proba_1", -0.9808292530117262 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0.125 AS "Proba_4", -2.0794415416798357 AS "LogProba_4", 0.0 AS "Proba_5", -1.79769313486231e+308 AS "LogProba_5", 0.125 AS "Proba_6", -2.0794415416798357 AS "LogProba_6", 0.25 AS "Proba_7", -1.3862943611198906 AS "LogProba_7", 0.0 AS "Proba_8", -1.79769313486231e+308 AS "LogProba_8", 0.0 AS "Proba_9", -1.79769313486231e+308 AS "LogProba_9", 1 AS "Decision", 0.375 AS "DecisionProba") AS "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".node_id AS node_id, "DT_node_data".feature AS feature, "DT_node_data".threshold AS threshold, "DT_node_data".count AS count, "DT_node_data".depth AS depth, "DT_node_data".parent_id AS parent_id, "DT_node_data"."Proba_0" AS "Proba_0", "DT_node_data"."LogProba_0" AS "LogProba_0", "DT_node_data"."Proba_1" AS "Proba_1", "DT_node_data"."LogProba_1" AS "LogProba_1", "DT_node_data"."Proba_2" AS "Proba_2", "DT_node_data"."LogProba_2" AS "LogProba_2", "DT_node_data"."Proba_3" AS "Proba_3", "DT_node_data"."LogProba_3" AS "LogProba_3", "DT_node_data"."Proba_4" AS "Proba_4", "DT_node_data"."LogProba_4" AS "LogProba_4", "DT_node_data"."Proba_5" AS "Proba_5", "DT_node_data"."LogProba_5" AS "LogProba_5", "DT_node_data"."Proba_6" AS "Proba_6", "DT_node_data"."LogProba_6" AS "LogProba_6", "DT_node_data"."Proba_7" AS "Proba_7", "DT_node_data"."LogProba_7" AS "LogProba_7", "DT_node_data"."Proba_8" AS "Proba_8", "DT_node_data"."LogProba_8" AS "LogProba_8", "DT_node_data"."Proba_9" AS "Proba_9", "DT_node_data"."LogProba_9" AS "LogProba_9", "DT_node_data"."Decision" AS "Decision", "DT_node_data"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".node_id), 
calibration_base_estimator_0 AS 
(SELECT "DT_Output"."KEY" AS "KEY", CAST(NULL AS FLOAT) AS "Score_0", CAST(NULL AS FLOAT) AS "Score_1", CAST(NULL AS FLOAT) AS "Score_2", CAST(NULL AS FLOAT) AS "Score_3", CAST(NULL AS FLOAT) AS "Score_4", CAST(NULL AS FLOAT) AS "Score_5", CAST(NULL AS FLOAT) AS "Score_6", CAST(NULL AS FLOAT) AS "Score_7", CAST(NULL AS FLOAT) AS "Score_8", CAST(NULL AS FLOAT) AS "Score_9", "DT_Output"."Proba_0" AS "Proba_0", "DT_Output"."Proba_1" AS "Proba_1", "DT_Output"."Proba_2" AS "Proba_2", "DT_Output"."Proba_3" AS "Proba_3", "DT_Output"."Proba_4" AS "Proba_4", "DT_Output"."Proba_5" AS "Proba_5", "DT_Output"."Proba_6" AS "Proba_6", "DT_Output"."Proba_7" AS "Proba_7", "DT_Output"."Proba_8" AS "Proba_8", "DT_Output"."Proba_9" AS "Proba_9", "DT_Output"."LogProba_0" AS "LogProba_0", "DT_Output"."LogProba_1" AS "LogProba_1", "DT_Output"."LogProba_2" AS "LogProba_2", "DT_Output"."LogProba_3" AS "LogProba_3", "DT_Output"."LogProba_4" AS "LogProba_4", "DT_Output"."LogProba_5" AS "LogProba_5", "DT_Output"."LogProba_6" AS "LogProba_6", "DT_Output"."LogProba_7" AS "LogProba_7", "DT_Output"."LogProba_8" AS "LogProba_8", "DT_Output"."LogProba_9" AS "LogProba_9", CAST(NULL AS BIGINT) AS "Decision", CAST(NULL AS FLOAT) AS "DecisionProba", coalesce(CAST(NULL AS FLOAT), "DT_Output"."Proba_0") AS "ScoreOrProba_0", coalesce(CAST(NULL AS FLOAT), "DT_Output"."Proba_1") AS "ScoreOrProba_1", coalesce(CAST(NULL AS FLOAT), "DT_Output"."Proba_2") AS "ScoreOrProba_2", coalesce(CAST(NULL AS FLOAT), "DT_Output"."Proba_3") AS "ScoreOrProba_3", coalesce(CAST(NULL AS FLOAT), "DT_Output"."Proba_4") AS "ScoreOrProba_4", coalesce(CAST(NULL AS FLOAT), "DT_Output"."Proba_5") AS "ScoreOrProba_5", coalesce(CAST(NULL AS FLOAT), "DT_Output"."Proba_6") AS "ScoreOrProba_6", coalesce(CAST(NULL AS FLOAT), "DT_Output"."Proba_7") AS "ScoreOrProba_7", coalesce(CAST(NULL AS FLOAT), "DT_Output"."Proba_8") AS "ScoreOrProba_8", coalesce(CAST(NULL AS FLOAT), "DT_Output"."Proba_9") AS "ScoreOrProba_9" 
FROM "DT_Output"), 
isotonic_cte_0 AS 
(SELECT calibration_base_estimator_0."KEY" AS "KEY", CASE WHEN (calibration_base_estimator_0."ScoreOrProba_0" < 0.0) THEN 0.0 WHEN (calibration_base_estimator_0."ScoreOrProba_0" < 0.3333333333333333) THEN (calibration_base_estimator_0."ScoreOrProba_0" - 0.0) * 0.0 + 0.0 WHEN (calibration_base_estimator_0."ScoreOrProba_0" < 1.0) THEN (calibration_base_estimator_0."ScoreOrProba_0" - 0.3333333333333333) * 1.4583333333333333 + 0.0 ELSE 0.9722222222222222 END AS "Proba_0", CASE WHEN (calibration_base_estimator_0."ScoreOrProba_1" < 0.0) THEN 0.0 WHEN (calibration_base_estimator_0."ScoreOrProba_1" < 0.014084507042253521) THEN (calibration_base_estimator_0."ScoreOrProba_1" - 0.0) * 3.0640209174691933 + 0.0 WHEN (calibration_base_estimator_0."ScoreOrProba_1" < 0.05952380952380952) THEN (calibration_base_estimator_0."ScoreOrProba_1" - 0.014084507042253521) * 0.0 + 0.04315522418970695 WHEN (calibration_base_estimator_0."ScoreOrProba_1" < 0.1875) THEN (calibration_base_estimator_0."ScoreOrProba_1" - 0.05952380952380952) * 2.5815285354697592 + 0.04315522418970695 WHEN (calibration_base_estimator_0."ScoreOrProba_1" < 0.24701195219123506) THEN (calibration_base_estimator_0."ScoreOrProba_1" - 0.1875) * 0.0 + 0.3735294117647059 WHEN (calibration_base_estimator_0."ScoreOrProba_1" < 0.375) THEN (calibration_base_estimator_0."ScoreOrProba_1" - 0.24701195219123506) * 0.20682078278782343 + 0.3735294117647059 WHEN (calibration_base_estimator_0."ScoreOrProba_1" < 0.6774193548387096) THEN (calibration_base_estimator_0."ScoreOrProba_1" - 0.375) * 0.606222222222222 + 0.4 WHEN (calibration_base_estimator_0."ScoreOrProba_1" < 0.7) THEN (calibration_base_estimator_0."ScoreOrProba_1" - 0.6774193548387096) * 0.0 + 0.5833333333333333 ELSE 0.5833333333333333 END AS "Proba_1", CASE WHEN (calibration_base_estimator_0."ScoreOrProba_2" < 0.0) THEN 0.0 WHEN (calibration_base_estimator_0."ScoreOrProba_2" < 0.011904761904761904) THEN (calibration_base_estimator_0."ScoreOrProba_2" - 0.0) * 0.9655172413793104 + 0.0 WHEN (calibration_base_estimator_0."ScoreOrProba_2" < 0.25) THEN (calibration_base_estimator_0."ScoreOrProba_2" - 0.011904761904761904) * 0.0 + 0.011494252873563218 WHEN (calibration_base_estimator_0."ScoreOrProba_2" < 0.2868525896414343) THEN (calibration_base_estimator_0."ScoreOrProba_2" - 0.25) * 4.157418270197172 + 0.011494252873563218 WHEN (calibration_base_estimator_0."ScoreOrProba_2" < 0.3333333333333333) THEN (calibration_base_estimator_0."ScoreOrProba_2" - 0.2868525896414343) * 0.0 + 0.16470588235294117 WHEN (calibration_base_estimator_0."ScoreOrProba_2" < 0.5789473684210527) THEN (calibration_base_estimator_0."ScoreOrProba_2" - 0.3333333333333333) * 2.2375750300120045 + 0.16470588235294117 WHEN (calibration_base_estimator_0."ScoreOrProba_2" < 1.0) THEN (calibration_base_estimator_0."ScoreOrProba_2" - 0.5789473684210527) * 0.6785714285714286 + 0.7142857142857143 ELSE 1.0 END AS "Proba_2", CASE WHEN (calibration_base_estimator_0."ScoreOrProba_3" < 0.0) THEN 0.0035971223021582736 WHEN (calibration_base_estimator_0."ScoreOrProba_3" < 0.011111111111111112) THEN (calibration_base_estimator_0."ScoreOrProba_3" - 0.0) * 0.0 + 0.0035971223021582736 WHEN (calibration_base_estimator_0."ScoreOrProba_3" < 0.018691588785046728) THEN (calibration_base_estimator_0."ScoreOrProba_3" - 0.011111111111111112) * 2.4196976935079766 + 0.0035971223021582736 WHEN (calibration_base_estimator_0."ScoreOrProba_3" < 0.0398406374501992) THEN (calibration_base_estimator_0."ScoreOrProba_3" - 0.018691588785046728) * 0.0 + 0.021939586645468998 WHEN (calibration_base_estimator_0."ScoreOrProba_3" < 0.18421052631578946) THEN (calibration_base_estimator_0."ScoreOrProba_3" - 0.0398406374501992) * 0.8375538497799166 + 0.021939586645468998 WHEN (calibration_base_estimator_0."ScoreOrProba_3" < 0.25) THEN (calibration_base_estimator_0."ScoreOrProba_3" - 0.18421052631578946) * 0.0 + 0.14285714285714285 WHEN (calibration_base_estimator_0."ScoreOrProba_3" < 0.49404761904761907) THEN (calibration_base_estimator_0."ScoreOrProba_3" - 0.25) * 1.60470984020185 + 0.14285714285714285 ELSE 0.5344827586206896 END AS "Proba_3", CASE WHEN (calibration_base_estimator_0."ScoreOrProba_4" < 0.0) THEN 0.007462686567164179 WHEN (calibration_base_estimator_0."ScoreOrProba_4" < 0.011904761904761904) THEN (calibration_base_estimator_0."ScoreOrProba_4" - 0.0) * 0.8214101904271744 + 0.007462686567164179 WHEN (calibration_base_estimator_0."ScoreOrProba_4" < 0.035856573705179286) THEN (calibration_base_estimator_0."ScoreOrProba_4" - 0.011904761904761904) * 0.9993019099070148 + 0.017241379310344827 WHEN (calibration_base_estimator_0."ScoreOrProba_4" < 0.04672897196261682) THEN (calibration_base_estimator_0."ScoreOrProba_4" - 0.035856573705179286) * 0.0 + 0.041176470588235294 WHEN (calibration_base_estimator_0."ScoreOrProba_4" < 0.125) THEN (calibration_base_estimator_0."ScoreOrProba_4" - 0.04672897196261682) * 0.3256657887035411 + 0.041176470588235294 WHEN (calibration_base_estimator_0."ScoreOrProba_4" < 0.6666666666666666) THEN (calibration_base_estimator_0."ScoreOrProba_4" - 0.125) * 0.0 + 0.06666666666666667 WHEN (calibration_base_estimator_0."ScoreOrProba_4" < 0.971830985915493) THEN (calibration_base_estimator_0."ScoreOrProba_4" - 0.6666666666666666) * 2.3302564102564096 + 0.06666666666666667 WHEN (calibration_base_estimator_0."ScoreOrProba_4" < 1.0) THEN (calibration_base_estimator_0."ScoreOrProba_4" - 0.971830985915493) * 0.0 + 0.7777777777777777 ELSE 0.7777777777777777 END AS "Proba_4", CASE WHEN (calibration_base_estimator_0."ScoreOrProba_5" < 0.0) THEN 0.0036231884057971015 WHEN (calibration_base_estimator_0."ScoreOrProba_5" < 0.1) THEN (calibration_base_estimator_0."ScoreOrProba_5" - 0.0) * 0.0 + 0.0036231884057971015 WHEN (calibration_base_estimator_0."ScoreOrProba_5" < 0.9888888888888889) THEN (calibration_base_estimator_0."ScoreOrProba_5" - 0.1) * 1.1209239130434783 + 0.0036231884057971015 WHEN (calibration_base_estimator_0."ScoreOrProba_5" < 1.0) THEN (calibration_base_estimator_0."ScoreOrProba_5" - 0.9888888888888889) * 0.0 + 1.0 ELSE 1.0 END AS "Proba_5", CASE WHEN (calibration_base_estimator_0."ScoreOrProba_6" < 0.0) THEN 0.003316749585406302 WHEN (calibration_base_estimator_0."ScoreOrProba_6" < 0.014084507042253521) THEN (calibration_base_estimator_0."ScoreOrProba_6" - 0.0) * 0.0 + 0.003316749585406302 WHEN (calibration_base_estimator_0."ScoreOrProba_6" < 0.06451612903225806) THEN (calibration_base_estimator_0."ScoreOrProba_6" - 0.014084507042253521) * 0.6686338079372905 + 0.003316749585406302 WHEN (calibration_base_estimator_0."ScoreOrProba_6" < 0.2) THEN (calibration_base_estimator_0."ScoreOrProba_6" - 0.06451612903225806) * 0.0 + 0.037037037037037035 WHEN (calibration_base_estimator_0."ScoreOrProba_6" < 0.3333333333333333) THEN (calibration_base_estimator_0."ScoreOrProba_6" - 0.2) * 7.222222222222224 + 0.037037037037037035 WHEN (calibration_base_estimator_0."ScoreOrProba_6" < 0.9896907216494846) THEN (calibration_base_estimator_0."ScoreOrProba_6" - 0.3333333333333333) * 0.0 + 1.0 ELSE 1.0 END AS "Proba_6", CASE WHEN (calibration_base_estimator_0."ScoreOrProba_7" < 0.0) THEN 0.003249802163017673 WHEN (calibration_base_estimator_0."ScoreOrProba_7" < 0.3333333333333333) THEN (calibration_base_estimator_0."ScoreOrProba_7" - 0.0) * 0.0 + 0.003249802163017673 WHEN (calibration_base_estimator_0."ScoreOrProba_7" < 0.794392523364486) THEN (calibration_base_estimator_0."ScoreOrProba_7" - 0.3333333333333333) * 1.6929149195963915 + 0.003249802163017673 WHEN (calibration_base_estimator_0."ScoreOrProba_7" < 1.0) THEN (calibration_base_estimator_0."ScoreOrProba_7" - 0.794392523364486) * 1.0515970515970516 + 0.7837837837837838 ELSE 1.0 END AS "Proba_7", CASE WHEN (calibration_base_estimator_0."ScoreOrProba_8" < 0.0) THEN 0.017341040462427744 WHEN (calibration_base_estimator_0."ScoreOrProba_8" < 0.037383177570093455) THEN (calibration_base_estimator_0."ScoreOrProba_8" - 0.0) * 0.12821710239240644 + 0.017341040462427744 WHEN (calibration_base_estimator_0."ScoreOrProba_8" < 0.125) THEN (calibration_base_estimator_0."ScoreOrProba_8" - 0.037383177570093455) * 0.0 + 0.022134203168685928 WHEN (calibration_base_estimator_0."ScoreOrProba_8" < 0.3147410358565737) THEN (calibration_base_estimator_0."ScoreOrProba_8" - 0.125) * 1.5574535804591225 + 0.022134203168685928 ELSE 0.3176470588235294 END AS "Proba_8", CASE WHEN (calibration_base_estimator_0."ScoreOrProba_9" < 0.0) THEN 0.0 WHEN (calibration_base_estimator_0."ScoreOrProba_9" < 0.027888446215139442) THEN (calibration_base_estimator_0."ScoreOrProba_9" - 0.0) * 0.0 + 0.0 WHEN (calibration_base_estimator_0."ScoreOrProba_9" < 0.08411214953271028) THEN (calibration_base_estimator_0."ScoreOrProba_9" - 0.027888446215139442) * 0.9614104170395563 + 0.0 WHEN (calibration_base_estimator_0."ScoreOrProba_9" < 0.125) THEN (calibration_base_estimator_0."ScoreOrProba_9" - 0.08411214953271028) * 9.009026760750897 + 0.05405405405405406 WHEN (calibration_base_estimator_0."ScoreOrProba_9" < 0.3333333333333333) THEN (calibration_base_estimator_0."ScoreOrProba_9" - 0.125) * 0.0 + 0.4224137931034483 WHEN (calibration_base_estimator_0."ScoreOrProba_9" < 1.0) THEN (calibration_base_estimator_0."ScoreOrProba_9" - 0.3333333333333333) * 0.6016734279918863 + 0.4224137931034483 ELSE 0.8235294117647058 END AS "Proba_9" 
FROM calibration_base_estimator_0), 
"Normalized_Probas" AS 
(SELECT isotonic_cte_0."KEY" AS "KEY", isotonic_cte_0."Proba_0" / (isotonic_cte_0."Proba_0" + isotonic_cte_0."Proba_1" + isotonic_cte_0."Proba_2" + isotonic_cte_0."Proba_3" + isotonic_cte_0."Proba_4" + isotonic_cte_0."Proba_5" + isotonic_cte_0."Proba_6" + isotonic_cte_0."Proba_7" + isotonic_cte_0."Proba_8" + isotonic_cte_0."Proba_9") AS "Proba_0", isotonic_cte_0."Proba_1" / (isotonic_cte_0."Proba_0" + isotonic_cte_0."Proba_1" + isotonic_cte_0."Proba_2" + isotonic_cte_0."Proba_3" + isotonic_cte_0."Proba_4" + isotonic_cte_0."Proba_5" + isotonic_cte_0."Proba_6" + isotonic_cte_0."Proba_7" + isotonic_cte_0."Proba_8" + isotonic_cte_0."Proba_9") AS "Proba_1", isotonic_cte_0."Proba_2" / (isotonic_cte_0."Proba_0" + isotonic_cte_0."Proba_1" + isotonic_cte_0."Proba_2" + isotonic_cte_0."Proba_3" + isotonic_cte_0."Proba_4" + isotonic_cte_0."Proba_5" + isotonic_cte_0."Proba_6" + isotonic_cte_0."Proba_7" + isotonic_cte_0."Proba_8" + isotonic_cte_0."Proba_9") AS "Proba_2", isotonic_cte_0."Proba_3" / (isotonic_cte_0."Proba_0" + isotonic_cte_0."Proba_1" + isotonic_cte_0."Proba_2" + isotonic_cte_0."Proba_3" + isotonic_cte_0."Proba_4" + isotonic_cte_0."Proba_5" + isotonic_cte_0."Proba_6" + isotonic_cte_0."Proba_7" + isotonic_cte_0."Proba_8" + isotonic_cte_0."Proba_9") AS "Proba_3", isotonic_cte_0."Proba_4" / (isotonic_cte_0."Proba_0" + isotonic_cte_0."Proba_1" + isotonic_cte_0."Proba_2" + isotonic_cte_0."Proba_3" + isotonic_cte_0."Proba_4" + isotonic_cte_0."Proba_5" + isotonic_cte_0."Proba_6" + isotonic_cte_0."Proba_7" + isotonic_cte_0."Proba_8" + isotonic_cte_0."Proba_9") AS "Proba_4", isotonic_cte_0."Proba_5" / (isotonic_cte_0."Proba_0" + isotonic_cte_0."Proba_1" + isotonic_cte_0."Proba_2" + isotonic_cte_0."Proba_3" + isotonic_cte_0."Proba_4" + isotonic_cte_0."Proba_5" + isotonic_cte_0."Proba_6" + isotonic_cte_0."Proba_7" + isotonic_cte_0."Proba_8" + isotonic_cte_0."Proba_9") AS "Proba_5", isotonic_cte_0."Proba_6" / (isotonic_cte_0."Proba_0" + isotonic_cte_0."Proba_1" + isotonic_cte_0."Proba_2" + isotonic_cte_0."Proba_3" + isotonic_cte_0."Proba_4" + isotonic_cte_0."Proba_5" + isotonic_cte_0."Proba_6" + isotonic_cte_0."Proba_7" + isotonic_cte_0."Proba_8" + isotonic_cte_0."Proba_9") AS "Proba_6", isotonic_cte_0."Proba_7" / (isotonic_cte_0."Proba_0" + isotonic_cte_0."Proba_1" + isotonic_cte_0."Proba_2" + isotonic_cte_0."Proba_3" + isotonic_cte_0."Proba_4" + isotonic_cte_0."Proba_5" + isotonic_cte_0."Proba_6" + isotonic_cte_0."Proba_7" + isotonic_cte_0."Proba_8" + isotonic_cte_0."Proba_9") AS "Proba_7", isotonic_cte_0."Proba_8" / (isotonic_cte_0."Proba_0" + isotonic_cte_0."Proba_1" + isotonic_cte_0."Proba_2" + isotonic_cte_0."Proba_3" + isotonic_cte_0."Proba_4" + isotonic_cte_0."Proba_5" + isotonic_cte_0."Proba_6" + isotonic_cte_0."Proba_7" + isotonic_cte_0."Proba_8" + isotonic_cte_0."Proba_9") AS "Proba_8", isotonic_cte_0."Proba_9" / (isotonic_cte_0."Proba_0" + isotonic_cte_0."Proba_1" + isotonic_cte_0."Proba_2" + isotonic_cte_0."Proba_3" + isotonic_cte_0."Proba_4" + isotonic_cte_0."Proba_5" + isotonic_cte_0."Proba_6" + isotonic_cte_0."Proba_7" + isotonic_cte_0."Proba_8" + isotonic_cte_0."Proba_9") AS "Proba_9" 
FROM isotonic_cte_0), 
"DT_node_lookup_1" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_38 <= -1.6508052349090576) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_44 <= -0.1312604546546936) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_23 <= -0.1305384337902069) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_24 <= 0.642737865447998) THEN 4 ELSE 5 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_15 <= -1.0934714078903198) THEN 7 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= 2.3682620525360107) THEN 9 ELSE 10 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_15 <= -1.0934714078903198) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_56 <= -0.25025779008865356) THEN 13 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_59 <= 1.9433573484420776) THEN 15 ELSE 16 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_39 <= -1.3316048383712769) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_30 <= -1.2292683124542236) THEN 19 ELSE 20 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_28 <= -1.1500303745269775) THEN 22 ELSE 23 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_23 <= -1.1726703643798828) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_44 <= 0.2508734464645386) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= -0.6750012636184692) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_21 <= 0.9264910221099854) THEN 28 ELSE 29 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_20 <= -0.9578883051872253) THEN 31 ELSE 32 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_56 <= 0.05253797024488449) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_47 <= -1.1869025230407715) THEN 35 ELSE 36 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_60 <= 0.6958127021789551) THEN 38 ELSE 39 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_35 <= 0.3318006992340088) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_45 <= -0.8872201442718506) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_28 <= -0.9085407257080078) THEN 43 ELSE 44 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_62 <= -0.8913522958755493) THEN 46 ELSE 47 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_15 <= 0.2275886833667755) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= -0.022140786051750183) THEN 50 ELSE 51 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_21 <= -0.703299880027771) THEN 53 ELSE 54 END END END END END AS node_id_2 
FROM "TMP_20180329233812_WYC4DM_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_1" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Proba_2" AS "Proba_2", "Values"."LogProba_2" AS "LogProba_2", "Values"."Proba_3" AS "Proba_3", "Values"."LogProba_3" AS "LogProba_3", "Values"."Proba_4" AS "Proba_4", "Values"."LogProba_4" AS "LogProba_4", "Values"."Proba_5" AS "Proba_5", "Values"."LogProba_5" AS "LogProba_5", "Values"."Proba_6" AS "Proba_6", "Values"."LogProba_6" AS "LogProba_6", "Values"."Proba_7" AS "Proba_7", "Values"."LogProba_7" AS "LogProba_7", "Values"."Proba_8" AS "Proba_8", "Values"."LogProba_8" AS "LogProba_8", "Values"."Proba_9" AS "Proba_9", "Values"."LogProba_9" AS "LogProba_9", "Values"."Decision" AS "Decision", "Values"."DecisionProba" AS "DecisionProba" 
FROM (SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS count, 4 AS depth, 3 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0.0 AS "Proba_4", -1.79769313486231e+308 AS "LogProba_4", 1.0 AS "Proba_5", 0.0 AS "LogProba_5", 0.0 AS "Proba_6", -1.79769313486231e+308 AS "LogProba_6", 0.0 AS "Proba_7", -1.79769313486231e+308 AS "LogProba_7", 0.0 AS "Proba_8", -1.79769313486231e+308 AS "LogProba_8", 0.0 AS "Proba_9", -1.79769313486231e+308 AS "LogProba_9", 5 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 3 AS parent_id, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0.0 AS "Proba_4", -1.79769313486231e+308 AS "LogProba_4", 0.0 AS "Proba_5", -1.79769313486231e+308 AS "LogProba_5", 0.0 AS "Proba_6", -1.79769313486231e+308 AS "LogProba_6", 0.0 AS "Proba_7", -1.79769313486231e+308 AS "LogProba_7", 0.0 AS "Proba_8", -1.79769313486231e+308 AS "LogProba_8", 0.0 AS "Proba_9", -1.79769313486231e+308 AS "LogProba_9", 0 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 6 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0.0 AS "Proba_4", -1.79769313486231e+308 AS "LogProba_4", 1.0 AS "Proba_5", 0.0 AS "LogProba_5", 0.0 AS "Proba_6", -1.79769313486231e+308 AS "LogProba_6", 0.0 AS "Proba_7", -1.79769313486231e+308 AS "LogProba_7", 0.0 AS "Proba_8", -1.79769313486231e+308 AS "LogProba_8", 0.0 AS "Proba_9", -1.79769313486231e+308 AS "LogProba_9", 5 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 41 AS count, 5 AS depth, 8 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0.0 AS "Proba_4", -1.79769313486231e+308 AS "LogProba_4", 0.0 AS "Proba_5", -1.79769313486231e+308 AS "LogProba_5", 0.0 AS "Proba_6", -1.79769313486231e+308 AS "LogProba_6", 0.0 AS "Proba_7", -1.79769313486231e+308 AS "LogProba_7", 0.0 AS "Proba_8", -1.79769313486231e+308 AS "LogProba_8", 1.0 AS "Proba_9", 0.0 AS "LogProba_9", 9 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 8 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 1.0 AS "Proba_3", 0.0 AS "LogProba_3", 0.0 AS "Proba_4", -1.79769313486231e+308 AS "LogProba_4", 0.0 AS "Proba_5", -1.79769313486231e+308 AS "LogProba_5", 0.0 AS "Proba_6", -1.79769313486231e+308 AS "LogProba_6", 0.0 AS "Proba_7", -1.79769313486231e+308 AS "LogProba_7", 0.0 AS "Proba_8", -1.79769313486231e+308 AS "LogProba_8", 0.0 AS "Proba_9", -1.79769313486231e+308 AS "LogProba_9", 3 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 4 AS depth, 12 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 1.0 AS "Proba_4", 0.0 AS "LogProba_4", 0.0 AS "Proba_5", -1.79769313486231e+308 AS "LogProba_5", 0.0 AS "Proba_6", -1.79769313486231e+308 AS "LogProba_6", 0.0 AS "Proba_7", -1.79769313486231e+308 AS "LogProba_7", 0.0 AS "Proba_8", -1.79769313486231e+308 AS "LogProba_8", 0.0 AS "Proba_9", -1.79769313486231e+308 AS "LogProba_9", 4 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 5 AS depth, 14 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0.0 AS "Proba_4", -1.79769313486231e+308 AS "LogProba_4", 0.0 AS "Proba_5", -1.79769313486231e+308 AS "LogProba_5", 1.0 AS "Proba_6", 0.0 AS "LogProba_6", 0.0 AS "Proba_7", -1.79769313486231e+308 AS "LogProba_7", 0.0 AS "Proba_8", -1.79769313486231e+308 AS "LogProba_8", 0.0 AS "Proba_9", -1.79769313486231e+308 AS "LogProba_9", 6 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 14 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0.0 AS "Proba_4", -1.79769313486231e+308 AS "LogProba_4", 0.0 AS "Proba_5", -1.79769313486231e+308 AS "LogProba_5", 0.0 AS "Proba_6", -1.79769313486231e+308 AS "LogProba_6", 0.0 AS "Proba_7", -1.79769313486231e+308 AS "LogProba_7", 0.0 AS "Proba_8", -1.79769313486231e+308 AS "LogProba_8", 0.0 AS "Proba_9", -1.79769313486231e+308 AS "LogProba_9", 2 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 18 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0.0 AS "Proba_4", -1.79769313486231e+308 AS "LogProba_4", 1.0 AS "Proba_5", 0.0 AS "LogProba_5", 0.0 AS "Proba_6", -1.79769313486231e+308 AS "LogProba_6", 0.0 AS "Proba_7", -1.79769313486231e+308 AS "LogProba_7", 0.0 AS "Proba_8", -1.79769313486231e+308 AS "LogProba_8", 0.0 AS "Proba_9", -1.79769313486231e+308 AS "LogProba_9", 5 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 18 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0.0 AS "Proba_4", -1.79769313486231e+308 AS "LogProba_4", 0.0 AS "Proba_5", -1.79769313486231e+308 AS "LogProba_5", 0.0 AS "Proba_6", -1.79769313486231e+308 AS "LogProba_6", 0.0 AS "Proba_7", -1.79769313486231e+308 AS "LogProba_7", 1.0 AS "Proba_8", 0.0 AS "LogProba_8", 0.0 AS "Proba_9", -1.79769313486231e+308 AS "LogProba_9", 8 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 21 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0.0 AS "Proba_4", -1.79769313486231e+308 AS "LogProba_4", 0.0 AS "Proba_5", -1.79769313486231e+308 AS "LogProba_5", 0.0 AS "Proba_6", -1.79769313486231e+308 AS "LogProba_6", 0.0 AS "Proba_7", -1.79769313486231e+308 AS "LogProba_7", 0.0 AS "Proba_8", -1.79769313486231e+308 AS "LogProba_8", 0.0 AS "Proba_9", -1.79769313486231e+308 AS "LogProba_9", 2 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 100 AS count, 5 AS depth, 21 AS parent_id, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0.0 AS "Proba_4", -1.79769313486231e+308 AS "LogProba_4", 0.0 AS "Proba_5", -1.79769313486231e+308 AS "LogProba_5", 0.0 AS "Proba_6", -1.79769313486231e+308 AS "LogProba_6", 0.0 AS "Proba_7", -1.79769313486231e+308 AS "LogProba_7", 0.0 AS "Proba_8", -1.79769313486231e+308 AS "LogProba_8", 0.0 AS "Proba_9", -1.79769313486231e+308 AS "LogProba_9", 0 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 28 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 39 AS count, 5 AS depth, 27 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.5641025641025641 AS "Proba_2", -0.5725191927713306 AS "LogProba_2", 0.20512820512820512 AS "Proba_3", -1.5841201044498106 AS "LogProba_3", 0.0 AS "Proba_4", -1.79769313486231e+308 AS "LogProba_4", 0.05128205128205128 AS "Proba_5", -2.9704144655697013 AS "LogProba_5", 0.0 AS "Proba_6", -1.79769313486231e+308 AS "LogProba_6", 0.10256410256410256 AS "Proba_7", -2.277267285009756 AS "LogProba_7", 0.05128205128205128 AS "Proba_8", -2.9704144655697013 AS "LogProba_8", 0.02564102564102564 AS "Proba_9", -3.6635616461296463 AS "LogProba_9", 2 AS "Decision", 0.5641025641025641 AS "DecisionProba" UNION ALL SELECT 29 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 27 AS count, 5 AS depth, 27 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.7407407407407407 AS "Proba_1", -0.30010459245033816 AS "LogProba_1", 0.07407407407407407 AS "Proba_2", -2.6026896854443837 AS "LogProba_2", 0.037037037037037035 AS "Proba_3", -3.295836866004329 AS "LogProba_3", 0.07407407407407407 AS "Proba_4", -2.6026896854443837 AS "LogProba_4", 0.0 AS "Proba_5", -1.79769313486231e+308 AS "LogProba_5", 0.07407407407407407 AS "Proba_6", -2.6026896854443837 AS "LogProba_6", 0.0 AS "Proba_7", -1.79769313486231e+308 AS "LogProba_7", 0.0 AS "Proba_8", -1.79769313486231e+308 AS "LogProba_8", 0.0 AS "Proba_9", -1.79769313486231e+308 AS "LogProba_9", 1 AS "Decision", 0.7407407407407407 AS "DecisionProba" UNION ALL SELECT 31 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 30 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.3333333333333333 AS "Proba_3", -1.0986122886681098 AS "LogProba_3", 0.3333333333333333 AS "Proba_4", -1.0986122886681098 AS "LogProba_4", 0.0 AS "Proba_5", -1.79769313486231e+308 AS "LogProba_5", 0.0 AS "Proba_6", -1.79769313486231e+308 AS "LogProba_6", 0.3333333333333333 AS "Proba_7", -1.0986122886681098 AS "LogProba_7", 0.0 AS "Proba_8", -1.79769313486231e+308 AS "LogProba_8", 0.0 AS "Proba_9", -1.79769313486231e+308 AS "LogProba_9", 3 AS "Decision", 0.3333333333333333 AS "DecisionProba" UNION ALL SELECT 32 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 86 AS count, 5 AS depth, 30 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0.011627906976744186 AS "Proba_4", -4.454347296253507 AS "LogProba_4", 0.9883720930232558 AS "Proba_5", -0.011696039763191298 AS "LogProba_5", 0.0 AS "Proba_6", -1.79769313486231e+308 AS "LogProba_6", 0.0 AS "Proba_7", -1.79769313486231e+308 AS "LogProba_7", 0.0 AS "Proba_8", -1.79769313486231e+308 AS "LogProba_8", 0.0 AS "Proba_9", -1.79769313486231e+308 AS "LogProba_9", 5 AS "Decision", 0.9883720930232558 AS "DecisionProba" UNION ALL SELECT 35 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 5 AS depth, 34 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.7777777777777778 AS "Proba_1", -0.25131442828090605 AS "LogProba_1", 0.2222222222222222 AS "Proba_2", -1.5040773967762742 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0.0 AS "Proba_4", -1.79769313486231e+308 AS "LogProba_4", 0.0 AS "Proba_5", -1.79769313486231e+308 AS "LogProba_5", 0.0 AS "Proba_6", -1.79769313486231e+308 AS "LogProba_6", 0.0 AS "Proba_7", -1.79769313486231e+308 AS "LogProba_7", 0.0 AS "Proba_8", -1.79769313486231e+308 AS "LogProba_8", 0.0 AS "Proba_9", -1.79769313486231e+308 AS "LogProba_9", 1 AS "Decision", 0.7777777777777778 AS "DecisionProba" UNION ALL SELECT 36 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 5 AS depth, 34 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0.625 AS "Proba_4", -0.4700036292457356 AS "LogProba_4", 0.125 AS "Proba_5", -2.0794415416798357 AS "LogProba_5", 0.25 AS "Proba_6", -1.3862943611198906 AS "LogProba_6", 0.0 AS "Proba_7", -1.79769313486231e+308 AS "LogProba_7", 0.0 AS "Proba_8", -1.79769313486231e+308 AS "LogProba_8", 0.0 AS "Proba_9", -1.79769313486231e+308 AS "LogProba_9", 4 AS "Decision", 0.625 AS "DecisionProba" UNION ALL SELECT 38 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 94 AS count, 5 AS depth, 37 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0.0 AS "Proba_4", -1.79769313486231e+308 AS "LogProba_4", 0.0 AS "Proba_5", -1.79769313486231e+308 AS "LogProba_5", 1.0 AS "Proba_6", 0.0 AS "LogProba_6", 0.0 AS "Proba_7", -1.79769313486231e+308 AS "LogProba_7", 0.0 AS "Proba_8", -1.79769313486231e+308 AS "LogProba_8", 0.0 AS "Proba_9", -1.79769313486231e+308 AS "LogProba_9", 6 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 39 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 5 AS depth, 37 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0.0 AS "Proba_4", -1.79769313486231e+308 AS "LogProba_4", 0.0 AS "Proba_5", -1.79769313486231e+308 AS "LogProba_5", 0.0 AS "Proba_6", -1.79769313486231e+308 AS "LogProba_6", 0.0 AS "Proba_7", -1.79769313486231e+308 AS "LogProba_7", 0.0 AS "Proba_8", -1.79769313486231e+308 AS "LogProba_8", 0.0 AS "Proba_9", -1.79769313486231e+308 AS "LogProba_9", 2 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 43 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 92 AS count, 5 AS depth, 42 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.043478260869565216 AS "Proba_2", -3.1354942159291497 AS "LogProba_2", 0.8695652173913043 AS "Proba_3", -0.13976194237515874 AS "LogProba_3", 0.0 AS "Proba_4", -1.79769313486231e+308 AS "LogProba_4", 0.0 AS "Proba_5", -1.79769313486231e+308 AS "LogProba_5", 0.0 AS "Proba_6", -1.79769313486231e+308 AS "LogProba_6", 0.0 AS "Proba_7", -1.79769313486231e+308 AS "LogProba_7", 0.03260869565217391 AS "Proba_8", -3.4231762883809305 AS "LogProba_8", 0.05434782608695652 AS "Proba_9", -2.91235066461494 AS "LogProba_9", 3 AS "Decision", 0.8695652173913043 AS "DecisionProba" UNION ALL SELECT 44 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 85 AS count, 5 AS depth, 42 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.1411764705882353 AS "Proba_1", -1.957744606702316 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.07058823529411765 AS "Proba_3", -2.6508917872622613 AS "LogProba_3", 0.0 AS "Proba_4", -1.79769313486231e+308 AS "LogProba_4", 0.03529411764705882 AS "Proba_5", -3.3440389678222067 AS "LogProba_5", 0.0 AS "Proba_6", -1.79769313486231e+308 AS "LogProba_6", 0.023529411764705882 AS "Proba_7", -3.7495040759303713 AS "LogProba_7", 0.10588235294117647 AS "Proba_8", -2.245426679154097 AS "LogProba_8", 0.6235294117647059 AS "Proba_9", -0.4723593429381946 AS "LogProba_9", 9 AS "Decision", 0.6235294117647059 AS "DecisionProba" UNION ALL SELECT 46 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 102 AS count, 5 AS depth, 45 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0196078431372549 AS "Proba_1", -3.9318256327243257 AS "LogProba_1", 0.029411764705882353 AS "Proba_2", -3.5263605246161616 AS "LogProba_2", 0.0392156862745098 AS "Proba_3", -3.2386784521643803 AS "LogProba_3", 0.0392156862745098 AS "Proba_4", -3.2386784521643803 AS "LogProba_4", 0.00980392156862745 AS "Proba_5", -4.624972813284271 AS "LogProba_5", 0.0 AS "Proba_6", -1.79769313486231e+308 AS "LogProba_6", 0.7450980392156863 AS "Proba_7", -0.29423947299793995 AS "LogProba_7", 0.0392156862745098 AS "Proba_8", -3.2386784521643803 AS "LogProba_8", 0.0784313725490196 AS "Proba_9", -2.5455312716044354 AS "LogProba_9", 7 AS "Decision", 0.7450980392156863 AS "DecisionProba" UNION ALL SELECT 47 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 227 AS count, 5 AS depth, 45 AS parent_id, 0.00881057268722467 AS "Proba_0", -4.7318028369214575 AS "LogProba_0", 0.2422907488986784 AS "Proba_1", -1.4176168322489318 AS "LogProba_1", 0.31277533039647576 AS "Proba_2", -1.1622701404400873 AS "LogProba_2", 0.03524229074889868 AS "Proba_3", -3.3455084758015667 AS "LogProba_3", 0.013215859030837005 AS "Proba_4", -4.326337728813293 AS "LogProba_4", 0.0 AS "Proba_5", -1.79769313486231e+308 AS "LogProba_5", 0.004405286343612335 AS "Proba_6", -5.424950017481403 AS "LogProba_6", 0.030837004405286344 AS "Proba_7", -3.4790398684260895 AS "LogProba_7", 0.3436123348017621 AS "Proba_8", -1.068241190791811 AS "LogProba_8", 0.00881057268722467 AS "Proba_9", -4.7318028369214575 AS "LogProba_9", 8 AS "Decision", 0.3436123348017621 AS "DecisionProba" UNION ALL SELECT 50 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 84 AS count, 5 AS depth, 49 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.03571428571428571 AS "Proba_1", -3.332204510175204 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0.9642857142857143 AS "Proba_4", -0.03636764417087483 AS "LogProba_4", 0.0 AS "Proba_5", -1.79769313486231e+308 AS "LogProba_5", 0.0 AS "Proba_6", -1.79769313486231e+308 AS "LogProba_6", 0.0 AS "Proba_7", -1.79769313486231e+308 AS "LogProba_7", 0.0 AS "Proba_8", -1.79769313486231e+308 AS "LogProba_8", 0.0 AS "Proba_9", -1.79769313486231e+308 AS "LogProba_9", 4 AS "Decision", 0.9642857142857143 AS "DecisionProba" UNION ALL SELECT 51 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 5 AS depth, 49 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0.0 AS "Proba_4", -1.79769313486231e+308 AS "LogProba_4", 0.25 AS "Proba_5", -1.3862943611198906 AS "LogProba_5", 0.25 AS "Proba_6", -1.3862943611198906 AS "LogProba_6", 0.5 AS "Proba_7", -0.6931471805599453 AS "LogProba_7", 0.0 AS "Proba_8", -1.79769313486231e+308 AS "LogProba_8", 0.0 AS "Proba_9", -1.79769313486231e+308 AS "LogProba_9", 7 AS "Decision", 0.5 AS "DecisionProba" UNION ALL SELECT 53 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 5 AS depth, 52 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0.0 AS "Proba_4", -1.79769313486231e+308 AS "LogProba_4", 0.0 AS "Proba_5", -1.79769313486231e+308 AS "LogProba_5", 0.0 AS "Proba_6", -1.79769313486231e+308 AS "LogProba_6", 1.0 AS "Proba_7", 0.0 AS "LogProba_7", 0.0 AS "Proba_8", -1.79769313486231e+308 AS "LogProba_8", 0.0 AS "Proba_9", -1.79769313486231e+308 AS "LogProba_9", 7 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 54 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 21 AS count, 5 AS depth, 52 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.5238095238095238 AS "Proba_1", -0.6466271649250525 AS "LogProba_1", 0.047619047619047616 AS "Proba_2", -3.044522437723423 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0.23809523809523808 AS "Proba_4", -1.4350845252893227 AS "LogProba_4", 0.0 AS "Proba_5", -1.79769313486231e+308 AS "LogProba_5", 0.0 AS "Proba_6", -1.79769313486231e+308 AS "LogProba_6", 0.047619047619047616 AS "Proba_7", -3.044522437723423 AS "LogProba_7", 0.14285714285714285 AS "Proba_8", -1.9459101490553135 AS "LogProba_8", 0.0 AS "Proba_9", -1.79769313486231e+308 AS "LogProba_9", 1 AS "Decision", 0.5238095238095238 AS "DecisionProba") AS "Values"), 
"DT_Output_1" AS 
(SELECT "DT_node_lookup_1"."KEY" AS "KEY", "DT_node_lookup_1".node_id_2 AS node_id_2, "DT_node_data_1".node_id AS node_id, "DT_node_data_1".feature AS feature, "DT_node_data_1".threshold AS threshold, "DT_node_data_1".count AS count, "DT_node_data_1".depth AS depth, "DT_node_data_1".parent_id AS parent_id, "DT_node_data_1"."Proba_0" AS "Proba_0", "DT_node_data_1"."LogProba_0" AS "LogProba_0", "DT_node_data_1"."Proba_1" AS "Proba_1", "DT_node_data_1"."LogProba_1" AS "LogProba_1", "DT_node_data_1"."Proba_2" AS "Proba_2", "DT_node_data_1"."LogProba_2" AS "LogProba_2", "DT_node_data_1"."Proba_3" AS "Proba_3", "DT_node_data_1"."LogProba_3" AS "LogProba_3", "DT_node_data_1"."Proba_4" AS "Proba_4", "DT_node_data_1"."LogProba_4" AS "LogProba_4", "DT_node_data_1"."Proba_5" AS "Proba_5", "DT_node_data_1"."LogProba_5" AS "LogProba_5", "DT_node_data_1"."Proba_6" AS "Proba_6", "DT_node_data_1"."LogProba_6" AS "LogProba_6", "DT_node_data_1"."Proba_7" AS "Proba_7", "DT_node_data_1"."LogProba_7" AS "LogProba_7", "DT_node_data_1"."Proba_8" AS "Proba_8", "DT_node_data_1"."LogProba_8" AS "LogProba_8", "DT_node_data_1"."Proba_9" AS "Proba_9", "DT_node_data_1"."LogProba_9" AS "LogProba_9", "DT_node_data_1"."Decision" AS "Decision", "DT_node_data_1"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup_1" LEFT OUTER JOIN "DT_node_data_1" ON "DT_node_lookup_1".node_id_2 = "DT_node_data_1".node_id), 
calibration_base_estimator_1 AS 
(SELECT "DT_Output_1"."KEY" AS "KEY", CAST(NULL AS FLOAT) AS "Score_0", CAST(NULL AS FLOAT) AS "Score_1", CAST(NULL AS FLOAT) AS "Score_2", CAST(NULL AS FLOAT) AS "Score_3", CAST(NULL AS FLOAT) AS "Score_4", CAST(NULL AS FLOAT) AS "Score_5", CAST(NULL AS FLOAT) AS "Score_6", CAST(NULL AS FLOAT) AS "Score_7", CAST(NULL AS FLOAT) AS "Score_8", CAST(NULL AS FLOAT) AS "Score_9", "DT_Output_1"."Proba_0" AS "Proba_0", "DT_Output_1"."Proba_1" AS "Proba_1", "DT_Output_1"."Proba_2" AS "Proba_2", "DT_Output_1"."Proba_3" AS "Proba_3", "DT_Output_1"."Proba_4" AS "Proba_4", "DT_Output_1"."Proba_5" AS "Proba_5", "DT_Output_1"."Proba_6" AS "Proba_6", "DT_Output_1"."Proba_7" AS "Proba_7", "DT_Output_1"."Proba_8" AS "Proba_8", "DT_Output_1"."Proba_9" AS "Proba_9", "DT_Output_1"."LogProba_0" AS "LogProba_0", "DT_Output_1"."LogProba_1" AS "LogProba_1", "DT_Output_1"."LogProba_2" AS "LogProba_2", "DT_Output_1"."LogProba_3" AS "LogProba_3", "DT_Output_1"."LogProba_4" AS "LogProba_4", "DT_Output_1"."LogProba_5" AS "LogProba_5", "DT_Output_1"."LogProba_6" AS "LogProba_6", "DT_Output_1"."LogProba_7" AS "LogProba_7", "DT_Output_1"."LogProba_8" AS "LogProba_8", "DT_Output_1"."LogProba_9" AS "LogProba_9", CAST(NULL AS BIGINT) AS "Decision", CAST(NULL AS FLOAT) AS "DecisionProba", coalesce(CAST(NULL AS FLOAT), "DT_Output_1"."Proba_0") AS "ScoreOrProba_0", coalesce(CAST(NULL AS FLOAT), "DT_Output_1"."Proba_1") AS "ScoreOrProba_1", coalesce(CAST(NULL AS FLOAT), "DT_Output_1"."Proba_2") AS "ScoreOrProba_2", coalesce(CAST(NULL AS FLOAT), "DT_Output_1"."Proba_3") AS "ScoreOrProba_3", coalesce(CAST(NULL AS FLOAT), "DT_Output_1"."Proba_4") AS "ScoreOrProba_4", coalesce(CAST(NULL AS FLOAT), "DT_Output_1"."Proba_5") AS "ScoreOrProba_5", coalesce(CAST(NULL AS FLOAT), "DT_Output_1"."Proba_6") AS "ScoreOrProba_6", coalesce(CAST(NULL AS FLOAT), "DT_Output_1"."Proba_7") AS "ScoreOrProba_7", coalesce(CAST(NULL AS FLOAT), "DT_Output_1"."Proba_8") AS "ScoreOrProba_8", coalesce(CAST(NULL AS FLOAT), "DT_Output_1"."Proba_9") AS "ScoreOrProba_9" 
FROM "DT_Output_1"), 
isotonic_cte_1 AS 
(SELECT calibration_base_estimator_1."KEY" AS "KEY", CASE WHEN (calibration_base_estimator_1."ScoreOrProba_0" < 0.0) THEN 0.006198347107438017 WHEN (calibration_base_estimator_1."ScoreOrProba_0" < 0.00881057268722467) THEN (calibration_base_estimator_1."ScoreOrProba_0" - 0.0) * 0.0 + 0.006198347107438017 WHEN (calibration_base_estimator_1."ScoreOrProba_0" < 1.0) THEN (calibration_base_estimator_1."ScoreOrProba_0" - 0.00881057268722467) * 0.9432890401339599 + 0.006198347107438017 ELSE 0.9411764705882353 END AS "Proba_0", CASE WHEN (calibration_base_estimator_1."ScoreOrProba_1" < 0.0) THEN 0.006289308176100629 WHEN (calibration_base_estimator_1."ScoreOrProba_1" < 0.0196078431372549) THEN (calibration_base_estimator_1."ScoreOrProba_1" - 0.0) * 1.1363881401617248 + 0.006289308176100629 WHEN (calibration_base_estimator_1."ScoreOrProba_1" < 0.03571428571428571) THEN (calibration_base_estimator_1."ScoreOrProba_1" - 0.0196078431372549) * 0.0 + 0.02857142857142857 WHEN (calibration_base_estimator_1."ScoreOrProba_1" < 0.1411764705882353) THEN (calibration_base_estimator_1."ScoreOrProba_1" - 0.03571428571428571) * 0.2558654271801682 + 0.02857142857142857 WHEN (calibration_base_estimator_1."ScoreOrProba_1" < 0.2422907488986784) THEN (calibration_base_estimator_1."ScoreOrProba_1" - 0.1411764705882353) * 1.6612278603565125 + 0.05555555555555555 WHEN (calibration_base_estimator_1."ScoreOrProba_1" < 0.5238095238095238) THEN (calibration_base_estimator_1."ScoreOrProba_1" - 0.2422907488986784) * 0.8206061668672344 + 0.2235294117647059 WHEN (calibration_base_estimator_1."ScoreOrProba_1" < 0.7407407407407407) THEN (calibration_base_estimator_1."ScoreOrProba_1" - 0.5238095238095238) * 0.8381374722838141 + 0.45454545454545453 WHEN (calibration_base_estimator_1."ScoreOrProba_1" < 0.7777777777777778) THEN (calibration_base_estimator_1."ScoreOrProba_1" - 0.7407407407407407) * 9.818181818181804 + 0.6363636363636364 ELSE 1.0 END AS "Proba_1", CASE WHEN (calibration_base_estimator_1."ScoreOrProba_2" < 0.0) THEN 0.005405405405405406 WHEN (calibration_base_estimator_1."ScoreOrProba_2" < 0.029411764705882353) THEN (calibration_base_estimator_1."ScoreOrProba_2" - 0.0) * 0.14002574002573998 + 0.005405405405405406 WHEN (calibration_base_estimator_1."ScoreOrProba_2" < 0.047619047619047616) THEN (calibration_base_estimator_1."ScoreOrProba_2" - 0.029411764705882353) * 0.0 + 0.009523809523809523 WHEN (calibration_base_estimator_1."ScoreOrProba_2" < 0.07407407407407407) THEN (calibration_base_estimator_1."ScoreOrProba_2" - 0.047619047619047616) * 1.3581818181818184 + 0.009523809523809523 WHEN (calibration_base_estimator_1."ScoreOrProba_2" < 0.2222222222222222) THEN (calibration_base_estimator_1."ScoreOrProba_2" - 0.07407407407407407) * 0.0 + 0.045454545454545456 WHEN (calibration_base_estimator_1."ScoreOrProba_2" < 0.31277533039647576) THEN (calibration_base_estimator_1."ScoreOrProba_2" - 0.2222222222222222) * 3.1358086428674663 + 0.045454545454545456 WHEN (calibration_base_estimator_1."ScoreOrProba_2" < 0.5641025641025641) THEN (calibration_base_estimator_1."ScoreOrProba_2" - 0.31277533039647576) * 0.6787495042961005 + 0.32941176470588235 WHEN (calibration_base_estimator_1."ScoreOrProba_2" < 1.0) THEN (calibration_base_estimator_1."ScoreOrProba_2" - 0.5641025641025641) * 1.1470588235294117 + 0.5 ELSE 1.0 END AS "Proba_2", CASE WHEN (calibration_base_estimator_1."ScoreOrProba_3" < 0.0) THEN 0.006172839506172839 WHEN (calibration_base_estimator_1."ScoreOrProba_3" < 0.03524229074889868) THEN (calibration_base_estimator_1."ScoreOrProba_3" - 0.0) * 0.8263162672476397 + 0.006172839506172839 WHEN (calibration_base_estimator_1."ScoreOrProba_3" < 0.037037037037037035) THEN (calibration_base_estimator_1."ScoreOrProba_3" - 0.03524229074889868) * 13.620945899020805 + 0.03529411764705882 WHEN (calibration_base_estimator_1."ScoreOrProba_3" < 0.0392156862745098) THEN (calibration_base_estimator_1."ScoreOrProba_3" - 0.037037037037037035) * 0.0 + 0.05974025974025974 WHEN (calibration_base_estimator_1."ScoreOrProba_3" < 0.07058823529411765) THEN (calibration_base_estimator_1."ScoreOrProba_3" - 0.0392156862745098) * 1.6374458874458873 + 0.05974025974025974 WHEN (calibration_base_estimator_1."ScoreOrProba_3" < 0.20512820512820512) THEN (calibration_base_estimator_1."ScoreOrProba_3" - 0.07058823529411765) * 0.0 + 0.1111111111111111 WHEN (calibration_base_estimator_1."ScoreOrProba_3" < 0.8695652173913043) THEN (calibration_base_estimator_1."ScoreOrProba_3" - 0.20512820512820512) * 0.5525727069351232 + 0.1111111111111111 WHEN (calibration_base_estimator_1."ScoreOrProba_3" < 1.0) THEN (calibration_base_estimator_1."ScoreOrProba_3" - 0.8695652173913043) * 0.0 + 0.4782608695652174 ELSE 0.4782608695652174 END AS "Proba_3", CASE WHEN (calibration_base_estimator_1."ScoreOrProba_4" < 0.0) THEN 0.006535947712418301 WHEN (calibration_base_estimator_1."ScoreOrProba_4" < 0.011627906976744186) THEN (calibration_base_estimator_1."ScoreOrProba_4" - 0.0) * 0.0 + 0.006535947712418301 WHEN (calibration_base_estimator_1."ScoreOrProba_4" < 0.013215859030837005) THEN (calibration_base_estimator_1."ScoreOrProba_4" - 0.011627906976744186) * 3.2927682901117423 + 0.006535947712418301 WHEN (calibration_base_estimator_1."ScoreOrProba_4" < 0.0392156862745098) THEN (calibration_base_estimator_1."ScoreOrProba_4" - 0.013215859030837005) * 0.6464167062173706 + 0.011764705882352941 WHEN (calibration_base_estimator_1."ScoreOrProba_4" < 0.07407407407407407) THEN (calibration_base_estimator_1."ScoreOrProba_4" - 0.0392156862745098) * 1.7883116883116887 + 0.02857142857142857 WHEN (calibration_base_estimator_1."ScoreOrProba_4" < 0.23809523809523808) THEN (calibration_base_estimator_1."ScoreOrProba_4" - 0.07407407407407407) * 1.1085043988269794 + 0.09090909090909091 WHEN (calibration_base_estimator_1."ScoreOrProba_4" < 0.625) THEN (calibration_base_estimator_1."ScoreOrProba_4" - 0.23809523809523808) * 1.0844540075309306 + 0.2727272727272727 WHEN (calibration_base_estimator_1."ScoreOrProba_4" < 0.9642857142857143) THEN (calibration_base_estimator_1."ScoreOrProba_4" - 0.625) * 0.6505896849146275 + 0.6923076923076923 ELSE 0.9130434782608695 END AS "Proba_4", CASE WHEN (calibration_base_estimator_1."ScoreOrProba_5" < 0.0) THEN 0.002145922746781116 WHEN (calibration_base_estimator_1."ScoreOrProba_5" < 0.00980392156862745) THEN (calibration_base_estimator_1."ScoreOrProba_5" - 0.0) * 0.0 + 0.002145922746781116 WHEN (calibration_base_estimator_1."ScoreOrProba_5" < 0.03529411764705882) THEN (calibration_base_estimator_1."ScoreOrProba_5" - 0.00980392156862745) * 0.27906166318183484 + 0.002145922746781116 WHEN (calibration_base_estimator_1."ScoreOrProba_5" < 0.125) THEN (calibration_base_estimator_1."ScoreOrProba_5" - 0.03529411764705882) * 0.0 + 0.009259259259259259 WHEN (calibration_base_estimator_1."ScoreOrProba_5" < 0.9883720930232558) THEN (calibration_base_estimator_1."ScoreOrProba_5" - 0.125) * 0.9544831026312507 + 0.009259259259259259 WHEN (calibration_base_estimator_1."ScoreOrProba_5" < 1.0) THEN (calibration_base_estimator_1."ScoreOrProba_5" - 0.9883720930232558) * 0.0 + 0.8333333333333333 ELSE 0.8333333333333333 END AS "Proba_5", CASE WHEN (calibration_base_estimator_1."ScoreOrProba_6" < 0.0) THEN 0.0022522522522522522 WHEN (calibration_base_estimator_1."ScoreOrProba_6" < 0.004405286343612335) THEN (calibration_base_estimator_1."ScoreOrProba_6" - 0.0) * 0.0 + 0.0022522522522522522 WHEN (calibration_base_estimator_1."ScoreOrProba_6" < 0.07407407407407407) THEN (calibration_base_estimator_1."ScoreOrProba_6" - 0.004405286343612335) * 1.2725474569736865 + 0.0022522522522522522 WHEN (calibration_base_estimator_1."ScoreOrProba_6" < 0.25) THEN (calibration_base_estimator_1."ScoreOrProba_6" - 0.07407407407407407) * 1.2322414427677586 + 0.09090909090909091 WHEN (calibration_base_estimator_1."ScoreOrProba_6" < 1.0) THEN (calibration_base_estimator_1."ScoreOrProba_6" - 0.25) * 0.923076923076923 + 0.3076923076923077 ELSE 1.0 END AS "Proba_6", CASE WHEN (calibration_base_estimator_1."ScoreOrProba_7" < 0.0) THEN 0.0027624309392265192 WHEN (calibration_base_estimator_1."ScoreOrProba_7" < 0.023529411764705882) THEN (calibration_base_estimator_1."ScoreOrProba_7" - 0.0) * 0.0 + 0.0027624309392265192 WHEN (calibration_base_estimator_1."ScoreOrProba_7" < 0.030837004405286344) THEN (calibration_base_estimator_1."ScoreOrProba_7" - 0.023529411764705882) * 0.15862100492404946 + 0.0027624309392265192 WHEN (calibration_base_estimator_1."ScoreOrProba_7" < 0.10256410256410256) THEN (calibration_base_estimator_1."ScoreOrProba_7" - 0.030837004405286344) * 0.0 + 0.00392156862745098 WHEN (calibration_base_estimator_1."ScoreOrProba_7" < 0.7450980392156863) THEN (calibration_base_estimator_1."ScoreOrProba_7" - 0.10256410256410256) * 1.261200536552649 + 0.00392156862745098 WHEN (calibration_base_estimator_1."ScoreOrProba_7" < 1.0) THEN (calibration_base_estimator_1."ScoreOrProba_7" - 0.7450980392156863) * 0.0 + 0.8142857142857143 ELSE 0.8142857142857143 END AS "Proba_7", CASE WHEN (calibration_base_estimator_1."ScoreOrProba_8" < 0.0) THEN 0.0 WHEN (calibration_base_estimator_1."ScoreOrProba_8" < 0.0392156862745098) THEN (calibration_base_estimator_1."ScoreOrProba_8" - 0.0) * 0.0 + 0.0 WHEN (calibration_base_estimator_1."ScoreOrProba_8" < 0.05128205128205128) THEN (calibration_base_estimator_1."ScoreOrProba_8" - 0.0392156862745098) * 6.5225694444444455 + 0.0 WHEN (calibration_base_estimator_1."ScoreOrProba_8" < 0.14285714285714285) THEN (calibration_base_estimator_1."ScoreOrProba_8" - 0.05128205128205128) * 0.0 + 0.0787037037037037 WHEN (calibration_base_estimator_1."ScoreOrProba_8" < 0.3436123348017621) THEN (calibration_base_estimator_1."ScoreOrProba_8" - 0.14285714285714285) * 1.2488247928917298 + 0.0787037037037037 WHEN (calibration_base_estimator_1."ScoreOrProba_8" < 1.0) THEN (calibration_base_estimator_1."ScoreOrProba_8" - 0.3436123348017621) * 0.25988945913936046 + 0.32941176470588235 ELSE 0.5 END AS "Proba_8", CASE WHEN (calibration_base_estimator_1."ScoreOrProba_9" < 0.0) THEN 0.023668639053254437 WHEN (calibration_base_estimator_1."ScoreOrProba_9" < 0.00881057268722467) THEN (calibration_base_estimator_1."ScoreOrProba_9" - 0.0) * 0.6518447615732683 + 0.023668639053254437 WHEN (calibration_base_estimator_1."ScoreOrProba_9" < 0.02564102564102564) THEN (calibration_base_estimator_1."ScoreOrProba_9" - 0.00881057268722467) * 0.0 + 0.029411764705882353 WHEN (calibration_base_estimator_1."ScoreOrProba_9" < 0.05434782608695652) THEN (calibration_base_estimator_1."ScoreOrProba_9" - 0.02564102564102564) * 0.2303663212857958 + 0.029411764705882353 WHEN (calibration_base_estimator_1."ScoreOrProba_9" < 0.0784313725490196) THEN (calibration_base_estimator_1."ScoreOrProba_9" - 0.05434782608695652) * 0.0 + 0.03602484472049689 WHEN (calibration_base_estimator_1."ScoreOrProba_9" < 0.6235294117647059) THEN (calibration_base_estimator_1."ScoreOrProba_9" - 0.0784313725490196) * 1.0040551409803833 + 0.03602484472049689 WHEN (calibration_base_estimator_1."ScoreOrProba_9" < 1.0) THEN (calibration_base_estimator_1."ScoreOrProba_9" - 0.6235294117647059) * 1.1067708333333333 + 0.5833333333333334 ELSE 1.0 END AS "Proba_9" 
FROM calibration_base_estimator_1), 
"Normalized_Probas_1" AS 
(SELECT isotonic_cte_1."KEY" AS "KEY", isotonic_cte_1."Proba_0" / (isotonic_cte_1."Proba_0" + isotonic_cte_1."Proba_1" + isotonic_cte_1."Proba_2" + isotonic_cte_1."Proba_3" + isotonic_cte_1."Proba_4" + isotonic_cte_1."Proba_5" + isotonic_cte_1."Proba_6" + isotonic_cte_1."Proba_7" + isotonic_cte_1."Proba_8" + isotonic_cte_1."Proba_9") AS "Proba_0", isotonic_cte_1."Proba_1" / (isotonic_cte_1."Proba_0" + isotonic_cte_1."Proba_1" + isotonic_cte_1."Proba_2" + isotonic_cte_1."Proba_3" + isotonic_cte_1."Proba_4" + isotonic_cte_1."Proba_5" + isotonic_cte_1."Proba_6" + isotonic_cte_1."Proba_7" + isotonic_cte_1."Proba_8" + isotonic_cte_1."Proba_9") AS "Proba_1", isotonic_cte_1."Proba_2" / (isotonic_cte_1."Proba_0" + isotonic_cte_1."Proba_1" + isotonic_cte_1."Proba_2" + isotonic_cte_1."Proba_3" + isotonic_cte_1."Proba_4" + isotonic_cte_1."Proba_5" + isotonic_cte_1."Proba_6" + isotonic_cte_1."Proba_7" + isotonic_cte_1."Proba_8" + isotonic_cte_1."Proba_9") AS "Proba_2", isotonic_cte_1."Proba_3" / (isotonic_cte_1."Proba_0" + isotonic_cte_1."Proba_1" + isotonic_cte_1."Proba_2" + isotonic_cte_1."Proba_3" + isotonic_cte_1."Proba_4" + isotonic_cte_1."Proba_5" + isotonic_cte_1."Proba_6" + isotonic_cte_1."Proba_7" + isotonic_cte_1."Proba_8" + isotonic_cte_1."Proba_9") AS "Proba_3", isotonic_cte_1."Proba_4" / (isotonic_cte_1."Proba_0" + isotonic_cte_1."Proba_1" + isotonic_cte_1."Proba_2" + isotonic_cte_1."Proba_3" + isotonic_cte_1."Proba_4" + isotonic_cte_1."Proba_5" + isotonic_cte_1."Proba_6" + isotonic_cte_1."Proba_7" + isotonic_cte_1."Proba_8" + isotonic_cte_1."Proba_9") AS "Proba_4", isotonic_cte_1."Proba_5" / (isotonic_cte_1."Proba_0" + isotonic_cte_1."Proba_1" + isotonic_cte_1."Proba_2" + isotonic_cte_1."Proba_3" + isotonic_cte_1."Proba_4" + isotonic_cte_1."Proba_5" + isotonic_cte_1."Proba_6" + isotonic_cte_1."Proba_7" + isotonic_cte_1."Proba_8" + isotonic_cte_1."Proba_9") AS "Proba_5", isotonic_cte_1."Proba_6" / (isotonic_cte_1."Proba_0" + isotonic_cte_1."Proba_1" + isotonic_cte_1."Proba_2" + isotonic_cte_1."Proba_3" + isotonic_cte_1."Proba_4" + isotonic_cte_1."Proba_5" + isotonic_cte_1."Proba_6" + isotonic_cte_1."Proba_7" + isotonic_cte_1."Proba_8" + isotonic_cte_1."Proba_9") AS "Proba_6", isotonic_cte_1."Proba_7" / (isotonic_cte_1."Proba_0" + isotonic_cte_1."Proba_1" + isotonic_cte_1."Proba_2" + isotonic_cte_1."Proba_3" + isotonic_cte_1."Proba_4" + isotonic_cte_1."Proba_5" + isotonic_cte_1."Proba_6" + isotonic_cte_1."Proba_7" + isotonic_cte_1."Proba_8" + isotonic_cte_1."Proba_9") AS "Proba_7", isotonic_cte_1."Proba_8" / (isotonic_cte_1."Proba_0" + isotonic_cte_1."Proba_1" + isotonic_cte_1."Proba_2" + isotonic_cte_1."Proba_3" + isotonic_cte_1."Proba_4" + isotonic_cte_1."Proba_5" + isotonic_cte_1."Proba_6" + isotonic_cte_1."Proba_7" + isotonic_cte_1."Proba_8" + isotonic_cte_1."Proba_9") AS "Proba_8", isotonic_cte_1."Proba_9" / (isotonic_cte_1."Proba_0" + isotonic_cte_1."Proba_1" + isotonic_cte_1."Proba_2" + isotonic_cte_1."Proba_3" + isotonic_cte_1."Proba_4" + isotonic_cte_1."Proba_5" + isotonic_cte_1."Proba_6" + isotonic_cte_1."Proba_7" + isotonic_cte_1."Proba_8" + isotonic_cte_1."Proba_9") AS "Proba_9" 
FROM isotonic_cte_1), 
"DT_node_lookup_2" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_23 <= -1.1726703643798828) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_44 <= 0.4037269949913025) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= -0.5867252945899963) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= 0.32203370332717896) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_39 <= -0.13757622241973877) THEN 5 ELSE 6 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_54 <= -0.2935141324996948) THEN 8 ELSE 9 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_20 <= -0.9578883051872253) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_31 <= -0.10113698244094849) THEN 12 ELSE 13 END ELSE 14 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_56 <= -0.6539855003356934) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_39 <= -0.6493027806282043) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_30 <= -0.49531662464141846) THEN 18 ELSE 19 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= 1.4436230659484863) THEN 21 ELSE 22 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_60 <= 0.6958127021789551) THEN 24 ELSE 25 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_30 <= -1.555469036102295) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_38 <= -1.1439052820205688) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_64 <= 0.3422780930995941) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_61 <= -1.7425425052642822) THEN 30 ELSE 31 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= -0.8937523365020752) THEN 33 ELSE 34 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_12 <= -1.0801674127578735) THEN 36 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= -0.265668123960495) THEN 38 ELSE 39 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_45 <= -0.7331587076187134) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_28 <= -1.3915199041366577) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_21 <= 0.5833771228790283) THEN 43 ELSE 44 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_23 <= 0.27028149366378784) THEN 46 ELSE 47 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_62 <= -0.8913522958755493) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_27 <= 0.3227207660675049) THEN 50 ELSE 51 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_35 <= -0.23632274568080902) THEN 53 ELSE 54 END END END END END AS node_id_2 
FROM "TMP_20180329233812_WYC4DM_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_2" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Proba_2" AS "Proba_2", "Values"."LogProba_2" AS "LogProba_2", "Values"."Proba_3" AS "Proba_3", "Values"."LogProba_3" AS "LogProba_3", "Values"."Proba_4" AS "Proba_4", "Values"."LogProba_4" AS "LogProba_4", "Values"."Proba_5" AS "Proba_5", "Values"."LogProba_5" AS "LogProba_5", "Values"."Proba_6" AS "Proba_6", "Values"."LogProba_6" AS "LogProba_6", "Values"."Proba_7" AS "Proba_7", "Values"."LogProba_7" AS "LogProba_7", "Values"."Proba_8" AS "Proba_8", "Values"."LogProba_8" AS "LogProba_8", "Values"."Proba_9" AS "Proba_9", "Values"."LogProba_9" AS "LogProba_9", "Values"."Decision" AS "Decision", "Values"."DecisionProba" AS "DecisionProba" 
FROM (SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 22 AS count, 5 AS depth, 4 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.8636363636363636 AS "Proba_1", -0.1466034741918754 AS "LogProba_1", 0.09090909090909091 AS "Proba_2", -2.3978952727983707 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0.0 AS "Proba_4", -1.79769313486231e+308 AS "LogProba_4", 0.0 AS "Proba_5", -1.79769313486231e+308 AS "LogProba_5", 0.0 AS "Proba_6", -1.79769313486231e+308 AS "LogProba_6", 0.0 AS "Proba_7", -1.79769313486231e+308 AS "LogProba_7", 0.045454545454545456 AS "Proba_8", -3.0910424533583156 AS "LogProba_8", 0.0 AS "Proba_9", -1.79769313486231e+308 AS "LogProba_9", 1 AS "Decision", 0.8636363636363636 AS "DecisionProba" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS count, 5 AS depth, 4 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.18181818181818182 AS "Proba_3", -1.7047480922384253 AS "LogProba_3", 0.36363636363636365 AS "Proba_4", -1.0116009116784799 AS "LogProba_4", 0.18181818181818182 AS "Proba_5", -1.7047480922384253 AS "LogProba_5", 0.18181818181818182 AS "Proba_6", -1.7047480922384253 AS "LogProba_6", 0.09090909090909091 AS "Proba_7", -2.3978952727983707 AS "LogProba_7", 0.0 AS "Proba_8", -1.79769313486231e+308 AS "LogProba_8", 0.0 AS "Proba_9", -1.79769313486231e+308 AS "LogProba_9", 4 AS "Decision", 0.36363636363636365 AS "DecisionProba" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 5 AS depth, 7 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.16666666666666666 AS "Proba_2", -1.791759469228055 AS "LogProba_2", 0.3333333333333333 AS "Proba_3", -1.0986122886681098 AS "LogProba_3", 0.0 AS "Proba_4", -1.79769313486231e+308 AS "LogProba_4", 0.0 AS "Proba_5", -1.79769313486231e+308 AS "LogProba_5", 0.0 AS "Proba_6", -1.79769313486231e+308 AS "LogProba_6", 0.0 AS "Proba_7", -1.79769313486231e+308 AS "LogProba_7", 0.3333333333333333 AS "Proba_8", -1.0986122886681098 AS "LogProba_8", 0.16666666666666666 AS "Proba_9", -1.791759469228055 AS "LogProba_9", 3 AS "Decision", 0.3333333333333333 AS "DecisionProba" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 5 AS depth, 7 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0.0 AS "Proba_4", -1.79769313486231e+308 AS "LogProba_4", 0.0 AS "Proba_5", -1.79769313486231e+308 AS "LogProba_5", 0.0 AS "Proba_6", -1.79769313486231e+308 AS "LogProba_6", 0.0 AS "Proba_7", -1.79769313486231e+308 AS "LogProba_7", 0.0 AS "Proba_8", -1.79769313486231e+308 AS "LogProba_8", 0.0 AS "Proba_9", -1.79769313486231e+308 AS "LogProba_9", 2 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 11 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 1.0 AS "Proba_3", 0.0 AS "LogProba_3", 0.0 AS "Proba_4", -1.79769313486231e+308 AS "LogProba_4", 0.0 AS "Proba_5", -1.79769313486231e+308 AS "LogProba_5", 0.0 AS "Proba_6", -1.79769313486231e+308 AS "LogProba_6", 0.0 AS "Proba_7", -1.79769313486231e+308 AS "LogProba_7", 0.0 AS "Proba_8", -1.79769313486231e+308 AS "LogProba_8", 0.0 AS "Proba_9", -1.79769313486231e+308 AS "LogProba_9", 3 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 11 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0.0 AS "Proba_4", -1.79769313486231e+308 AS "LogProba_4", 0.0 AS "Proba_5", -1.79769313486231e+308 AS "LogProba_5", 0.0 AS "Proba_6", -1.79769313486231e+308 AS "LogProba_6", 1.0 AS "Proba_7", 0.0 AS "LogProba_7", 0.0 AS "Proba_8", -1.79769313486231e+308 AS "LogProba_8", 0.0 AS "Proba_9", -1.79769313486231e+308 AS "LogProba_9", 7 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 91 AS count, 4 AS depth, 10 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0.0 AS "Proba_4", -1.79769313486231e+308 AS "LogProba_4", 1.0 AS "Proba_5", 0.0 AS "LogProba_5", 0.0 AS "Proba_6", -1.79769313486231e+308 AS "LogProba_6", 0.0 AS "Proba_7", -1.79769313486231e+308 AS "LogProba_7", 0.0 AS "Proba_8", -1.79769313486231e+308 AS "LogProba_8", 0.0 AS "Proba_9", -1.79769313486231e+308 AS "LogProba_9", 5 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 5 AS depth, 17 AS parent_id, 0.16666666666666666 AS "Proba_0", -1.791759469228055 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0.0 AS "Proba_4", -1.79769313486231e+308 AS "LogProba_4", 0.16666666666666666 AS "Proba_5", -1.791759469228055 AS "LogProba_5", 0.6666666666666666 AS "Proba_6", -0.40546510810816444 AS "LogProba_6", 0.0 AS "Proba_7", -1.79769313486231e+308 AS "LogProba_7", 0.0 AS "Proba_8", -1.79769313486231e+308 AS "LogProba_8", 0.0 AS "Proba_9", -1.79769313486231e+308 AS "LogProba_9", 6 AS "Decision", 0.6666666666666666 AS "DecisionProba" UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 5 AS depth, 17 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0.0 AS "Proba_4", -1.79769313486231e+308 AS "LogProba_4", 0.0 AS "Proba_5", -1.79769313486231e+308 AS "LogProba_5", 0.0 AS "Proba_6", -1.79769313486231e+308 AS "LogProba_6", 0.0 AS "Proba_7", -1.79769313486231e+308 AS "LogProba_7", 0.0 AS "Proba_8", -1.79769313486231e+308 AS "LogProba_8", 0.0 AS "Proba_9", -1.79769313486231e+308 AS "LogProba_9", 1 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 21 AS count, 5 AS depth, 20 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 1.0 AS "Proba_4", 0.0 AS "LogProba_4", 0.0 AS "Proba_5", -1.79769313486231e+308 AS "LogProba_5", 0.0 AS "Proba_6", -1.79769313486231e+308 AS "LogProba_6", 0.0 AS "Proba_7", -1.79769313486231e+308 AS "LogProba_7", 0.0 AS "Proba_8", -1.79769313486231e+308 AS "LogProba_8", 0.0 AS "Proba_9", -1.79769313486231e+308 AS "LogProba_9", 4 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 20 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0.0 AS "Proba_4", -1.79769313486231e+308 AS "LogProba_4", 1.0 AS "Proba_5", 0.0 AS "LogProba_5", 0.0 AS "Proba_6", -1.79769313486231e+308 AS "LogProba_6", 0.0 AS "Proba_7", -1.79769313486231e+308 AS "LogProba_7", 0.0 AS "Proba_8", -1.79769313486231e+308 AS "LogProba_8", 0.0 AS "Proba_9", -1.79769313486231e+308 AS "LogProba_9", 5 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 99 AS count, 4 AS depth, 23 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0.0 AS "Proba_4", -1.79769313486231e+308 AS "LogProba_4", 0.0 AS "Proba_5", -1.79769313486231e+308 AS "LogProba_5", 1.0 AS "Proba_6", 0.0 AS "LogProba_6", 0.0 AS "Proba_7", -1.79769313486231e+308 AS "LogProba_7", 0.0 AS "Proba_8", -1.79769313486231e+308 AS "LogProba_8", 0.0 AS "Proba_9", -1.79769313486231e+308 AS "LogProba_9", 6 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 4 AS depth, 23 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0.0 AS "Proba_4", -1.79769313486231e+308 AS "LogProba_4", 0.0 AS "Proba_5", -1.79769313486231e+308 AS "LogProba_5", 0.0 AS "Proba_6", -1.79769313486231e+308 AS "LogProba_6", 0.0 AS "Proba_7", -1.79769313486231e+308 AS "LogProba_7", 0.0 AS "Proba_8", -1.79769313486231e+308 AS "LogProba_8", 0.0 AS "Proba_9", -1.79769313486231e+308 AS "LogProba_9", 2 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 29 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 1.0 AS "Proba_4", 0.0 AS "LogProba_4", 0.0 AS "Proba_5", -1.79769313486231e+308 AS "LogProba_5", 0.0 AS "Proba_6", -1.79769313486231e+308 AS "LogProba_6", 0.0 AS "Proba_7", -1.79769313486231e+308 AS "LogProba_7", 0.0 AS "Proba_8", -1.79769313486231e+308 AS "LogProba_8", 0.0 AS "Proba_9", -1.79769313486231e+308 AS "LogProba_9", 4 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 31 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 97 AS count, 5 AS depth, 29 AS parent_id, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0.0 AS "Proba_4", -1.79769313486231e+308 AS "LogProba_4", 0.0 AS "Proba_5", -1.79769313486231e+308 AS "LogProba_5", 0.0 AS "Proba_6", -1.79769313486231e+308 AS "LogProba_6", 0.0 AS "Proba_7", -1.79769313486231e+308 AS "LogProba_7", 0.0 AS "Proba_8", -1.79769313486231e+308 AS "LogProba_8", 0.0 AS "Proba_9", -1.79769313486231e+308 AS "LogProba_9", 0 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 33 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 32 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0.0 AS "Proba_4", -1.79769313486231e+308 AS "LogProba_4", 0.0 AS "Proba_5", -1.79769313486231e+308 AS "LogProba_5", 0.0 AS "Proba_6", -1.79769313486231e+308 AS "LogProba_6", 0.0 AS "Proba_7", -1.79769313486231e+308 AS "LogProba_7", 0.0 AS "Proba_8", -1.79769313486231e+308 AS "LogProba_8", 0.0 AS "Proba_9", -1.79769313486231e+308 AS "LogProba_9", 1 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 34 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 32 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0.0 AS "Proba_4", -1.79769313486231e+308 AS "LogProba_4", 0.0 AS "Proba_5", -1.79769313486231e+308 AS "LogProba_5", 0.0 AS "Proba_6", -1.79769313486231e+308 AS "LogProba_6", 0.0 AS "Proba_7", -1.79769313486231e+308 AS "LogProba_7", 0.0 AS "Proba_8", -1.79769313486231e+308 AS "LogProba_8", 0.0 AS "Proba_9", -1.79769313486231e+308 AS "LogProba_9", 2 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 36 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 4 AS depth, 35 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 1.0 AS "Proba_4", 0.0 AS "LogProba_4", 0.0 AS "Proba_5", -1.79769313486231e+308 AS "LogProba_5", 0.0 AS "Proba_6", -1.79769313486231e+308 AS "LogProba_6", 0.0 AS "Proba_7", -1.79769313486231e+308 AS "LogProba_7", 0.0 AS "Proba_8", -1.79769313486231e+308 AS "LogProba_8", 0.0 AS "Proba_9", -1.79769313486231e+308 AS "LogProba_9", 4 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 38 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 37 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.3333333333333333 AS "Proba_2", -1.0986122886681098 AS "LogProba_2", 0.3333333333333333 AS "Proba_3", -1.0986122886681098 AS "LogProba_3", 0.0 AS "Proba_4", -1.79769313486231e+308 AS "LogProba_4", 0.0 AS "Proba_5", -1.79769313486231e+308 AS "LogProba_5", 0.0 AS "Proba_6", -1.79769313486231e+308 AS "LogProba_6", 0.0 AS "Proba_7", -1.79769313486231e+308 AS "LogProba_7", 0.0 AS "Proba_8", -1.79769313486231e+308 AS "LogProba_8", 0.3333333333333333 AS "Proba_9", -1.0986122886681098 AS "LogProba_9", 2 AS "Decision", 0.3333333333333333 AS "DecisionProba" UNION ALL SELECT 39 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 37 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0.0 AS "Proba_4", -1.79769313486231e+308 AS "LogProba_4", 0.0 AS "Proba_5", -1.79769313486231e+308 AS "LogProba_5", 0.0 AS "Proba_6", -1.79769313486231e+308 AS "LogProba_6", 1.0 AS "Proba_7", 0.0 AS "LogProba_7", 0.0 AS "Proba_8", -1.79769313486231e+308 AS "LogProba_8", 0.0 AS "Proba_9", -1.79769313486231e+308 AS "LogProba_9", 7 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 43 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 72 AS count, 5 AS depth, 42 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.013888888888888888 AS "Proba_2", -4.276666119016055 AS "LogProba_2", 0.9861111111111112 AS "Proba_3", -0.01398624197473984 AS "LogProba_3", 0.0 AS "Proba_4", -1.79769313486231e+308 AS "LogProba_4", 0.0 AS "Proba_5", -1.79769313486231e+308 AS "LogProba_5", 0.0 AS "Proba_6", -1.79769313486231e+308 AS "LogProba_6", 0.0 AS "Proba_7", -1.79769313486231e+308 AS "LogProba_7", 0.0 AS "Proba_8", -1.79769313486231e+308 AS "LogProba_8", 0.0 AS "Proba_9", -1.79769313486231e+308 AS "LogProba_9", 3 AS "Decision", 0.9861111111111112 AS "DecisionProba" UNION ALL SELECT 44 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 5 AS depth, 42 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.25 AS "Proba_2", -1.3862943611198906 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0.0 AS "Proba_4", -1.79769313486231e+308 AS "LogProba_4", 0.0 AS "Proba_5", -1.79769313486231e+308 AS "LogProba_5", 0.0 AS "Proba_6", -1.79769313486231e+308 AS "LogProba_6", 0.0 AS "Proba_7", -1.79769313486231e+308 AS "LogProba_7", 0.0 AS "Proba_8", -1.79769313486231e+308 AS "LogProba_8", 0.75 AS "Proba_9", -0.2876820724517809 AS "LogProba_9", 9 AS "Decision", 0.75 AS "DecisionProba" UNION ALL SELECT 46 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 44 AS count, 5 AS depth, 45 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.045454545454545456 AS "Proba_1", -3.0910424533583156 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.3409090909090909 AS "Proba_3", -1.0761394328160512 AS "LogProba_3", 0.13636363636363635 AS "Proba_4", -1.9924301646902063 AS "LogProba_4", 0.25 AS "Proba_5", -1.3862943611198906 AS "LogProba_5", 0.022727272727272728 AS "Proba_6", -3.784189633918261 AS "LogProba_6", 0.045454545454545456 AS "Proba_7", -3.0910424533583156 AS "LogProba_7", 0.06818181818181818 AS "Proba_8", -2.6855773452501515 AS "LogProba_8", 0.09090909090909091 AS "Proba_9", -2.3978952727983707 AS "LogProba_9", 3 AS "Decision", 0.3409090909090909 AS "DecisionProba" UNION ALL SELECT 47 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 134 AS count, 5 AS depth, 45 AS parent_id, 0.03731343283582089 AS "Proba_0", -3.288401887516811 AS "LogProba_0", 0.1044776119402985 AS "Proba_1", -2.2587824703356527 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.03731343283582089 AS "Proba_3", -3.288401887516811 AS "LogProba_3", 0.007462686567164179 AS "Proba_4", -4.897839799950911 AS "LogProba_4", 0.007462686567164179 AS "Proba_5", -4.897839799950911 AS "LogProba_5", 0.0 AS "Proba_6", -1.79769313486231e+308 AS "LogProba_6", 0.007462686567164179 AS "Proba_7", -4.897839799950911 AS "LogProba_7", 0.08955223880597014 AS "Proba_8", -2.412933150162911 AS "LogProba_8", 0.7089552238805971 AS "Proba_9", -0.34396290835037047 AS "LogProba_9", 9 AS "Decision", 0.7089552238805971 AS "DecisionProba" UNION ALL SELECT 50 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 105 AS count, 5 AS depth, 49 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.01904761904761905 AS "Proba_1", -3.960813169597578 AS "LogProba_1", 0.02857142857142857 AS "Proba_2", -3.5553480614894135 AS "LogProba_2", 0.0380952380952381 AS "Proba_3", -3.2676659890376327 AS "LogProba_3", 0.009523809523809525 AS "Proba_4", -4.653960350157523 AS "LogProba_4", 0.0 AS "Proba_5", -1.79769313486231e+308 AS "LogProba_5", 0.0 AS "Proba_6", -1.79769313486231e+308 AS "LogProba_6", 0.8666666666666667 AS "Proba_7", -0.1431008436406733 AS "LogProba_7", 0.02857142857142857 AS "Proba_8", -3.5553480614894135 AS "LogProba_8", 0.009523809523809525 AS "Proba_9", -4.653960350157523 AS "LogProba_9", 7 AS "Decision", 0.8666666666666667 AS "DecisionProba" UNION ALL SELECT 51 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 21 AS count, 5 AS depth, 49 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.09523809523809523 AS "Proba_1", -2.3513752571634776 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0.5238095238095238 AS "Proba_4", -0.6466271649250525 AS "LogProba_4", 0.047619047619047616 AS "Proba_5", -3.044522437723423 AS "LogProba_5", 0.0 AS "Proba_6", -1.79769313486231e+308 AS "LogProba_6", 0.19047619047619047 AS "Proba_7", -1.6582280766035324 AS "LogProba_7", 0.047619047619047616 AS "Proba_8", -3.044522437723423 AS "LogProba_8", 0.09523809523809523 AS "Proba_9", -2.3513752571634776 AS "LogProba_9", 4 AS "Decision", 0.5238095238095238 AS "DecisionProba" UNION ALL SELECT 53 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 217 AS count, 5 AS depth, 52 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.23963133640552994 AS "Proba_1", -1.4286536349590322 AS "LogProba_1", 0.35023041474654376 AS "Proba_2", -1.0491640132541284 AS "LogProba_2", 0.03686635944700461 AS "Proba_3", -3.3004558118606235 AS "LogProba_3", 0.0 AS "Proba_4", -1.79769313486231e+308 AS "LogProba_4", 0.0 AS "Proba_5", -1.79769313486231e+308 AS "LogProba_5", 0.0 AS "Proba_6", -1.79769313486231e+308 AS "LogProba_6", 0.013824884792626729 AS "Proba_7", -4.28128506487235 AS "LogProba_7", 0.3456221198156682 AS "Proba_8", -1.0624092400041492 AS "LogProba_8", 0.013824884792626729 AS "Proba_9", -4.28128506487235 AS "LogProba_9", 2 AS "Decision", 0.35023041474654376 AS "DecisionProba" UNION ALL SELECT 54 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 76 AS count, 5 AS depth, 52 AS parent_id, 0.013157894736842105 AS "Proba_0", -4.330733340286331 AS "LogProba_0", 0.15789473684210525 AS "Proba_1", -1.845826690498331 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0.7631578947368421 AS "Proba_4", -0.2702903297399117 AS "LogProba_4", 0.0 AS "Proba_5", -1.79769313486231e+308 AS "LogProba_5", 0.013157894736842105 AS "Proba_6", -4.330733340286331 AS "LogProba_6", 0.0 AS "Proba_7", -1.79769313486231e+308 AS "LogProba_7", 0.05263157894736842 AS "Proba_8", -2.9444389791664407 AS "LogProba_8", 0.0 AS "Proba_9", -1.79769313486231e+308 AS "LogProba_9", 4 AS "Decision", 0.7631578947368421 AS "DecisionProba") AS "Values"), 
"DT_Output_2" AS 
(SELECT "DT_node_lookup_2"."KEY" AS "KEY", "DT_node_lookup_2".node_id_2 AS node_id_2, "DT_node_data_2".node_id AS node_id, "DT_node_data_2".feature AS feature, "DT_node_data_2".threshold AS threshold, "DT_node_data_2".count AS count, "DT_node_data_2".depth AS depth, "DT_node_data_2".parent_id AS parent_id, "DT_node_data_2"."Proba_0" AS "Proba_0", "DT_node_data_2"."LogProba_0" AS "LogProba_0", "DT_node_data_2"."Proba_1" AS "Proba_1", "DT_node_data_2"."LogProba_1" AS "LogProba_1", "DT_node_data_2"."Proba_2" AS "Proba_2", "DT_node_data_2"."LogProba_2" AS "LogProba_2", "DT_node_data_2"."Proba_3" AS "Proba_3", "DT_node_data_2"."LogProba_3" AS "LogProba_3", "DT_node_data_2"."Proba_4" AS "Proba_4", "DT_node_data_2"."LogProba_4" AS "LogProba_4", "DT_node_data_2"."Proba_5" AS "Proba_5", "DT_node_data_2"."LogProba_5" AS "LogProba_5", "DT_node_data_2"."Proba_6" AS "Proba_6", "DT_node_data_2"."LogProba_6" AS "LogProba_6", "DT_node_data_2"."Proba_7" AS "Proba_7", "DT_node_data_2"."LogProba_7" AS "LogProba_7", "DT_node_data_2"."Proba_8" AS "Proba_8", "DT_node_data_2"."LogProba_8" AS "LogProba_8", "DT_node_data_2"."Proba_9" AS "Proba_9", "DT_node_data_2"."LogProba_9" AS "LogProba_9", "DT_node_data_2"."Decision" AS "Decision", "DT_node_data_2"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup_2" LEFT OUTER JOIN "DT_node_data_2" ON "DT_node_lookup_2".node_id_2 = "DT_node_data_2".node_id), 
calibration_base_estimator_2 AS 
(SELECT "DT_Output_2"."KEY" AS "KEY", CAST(NULL AS FLOAT) AS "Score_0", CAST(NULL AS FLOAT) AS "Score_1", CAST(NULL AS FLOAT) AS "Score_2", CAST(NULL AS FLOAT) AS "Score_3", CAST(NULL AS FLOAT) AS "Score_4", CAST(NULL AS FLOAT) AS "Score_5", CAST(NULL AS FLOAT) AS "Score_6", CAST(NULL AS FLOAT) AS "Score_7", CAST(NULL AS FLOAT) AS "Score_8", CAST(NULL AS FLOAT) AS "Score_9", "DT_Output_2"."Proba_0" AS "Proba_0", "DT_Output_2"."Proba_1" AS "Proba_1", "DT_Output_2"."Proba_2" AS "Proba_2", "DT_Output_2"."Proba_3" AS "Proba_3", "DT_Output_2"."Proba_4" AS "Proba_4", "DT_Output_2"."Proba_5" AS "Proba_5", "DT_Output_2"."Proba_6" AS "Proba_6", "DT_Output_2"."Proba_7" AS "Proba_7", "DT_Output_2"."Proba_8" AS "Proba_8", "DT_Output_2"."Proba_9" AS "Proba_9", "DT_Output_2"."LogProba_0" AS "LogProba_0", "DT_Output_2"."LogProba_1" AS "LogProba_1", "DT_Output_2"."LogProba_2" AS "LogProba_2", "DT_Output_2"."LogProba_3" AS "LogProba_3", "DT_Output_2"."LogProba_4" AS "LogProba_4", "DT_Output_2"."LogProba_5" AS "LogProba_5", "DT_Output_2"."LogProba_6" AS "LogProba_6", "DT_Output_2"."LogProba_7" AS "LogProba_7", "DT_Output_2"."LogProba_8" AS "LogProba_8", "DT_Output_2"."LogProba_9" AS "LogProba_9", CAST(NULL AS BIGINT) AS "Decision", CAST(NULL AS FLOAT) AS "DecisionProba", coalesce(CAST(NULL AS FLOAT), "DT_Output_2"."Proba_0") AS "ScoreOrProba_0", coalesce(CAST(NULL AS FLOAT), "DT_Output_2"."Proba_1") AS "ScoreOrProba_1", coalesce(CAST(NULL AS FLOAT), "DT_Output_2"."Proba_2") AS "ScoreOrProba_2", coalesce(CAST(NULL AS FLOAT), "DT_Output_2"."Proba_3") AS "ScoreOrProba_3", coalesce(CAST(NULL AS FLOAT), "DT_Output_2"."Proba_4") AS "ScoreOrProba_4", coalesce(CAST(NULL AS FLOAT), "DT_Output_2"."Proba_5") AS "ScoreOrProba_5", coalesce(CAST(NULL AS FLOAT), "DT_Output_2"."Proba_6") AS "ScoreOrProba_6", coalesce(CAST(NULL AS FLOAT), "DT_Output_2"."Proba_7") AS "ScoreOrProba_7", coalesce(CAST(NULL AS FLOAT), "DT_Output_2"."Proba_8") AS "ScoreOrProba_8", coalesce(CAST(NULL AS FLOAT), "DT_Output_2"."Proba_9") AS "ScoreOrProba_9" 
FROM "DT_Output_2"), 
isotonic_cte_2 AS 
(SELECT calibration_base_estimator_2."KEY" AS "KEY", CASE WHEN (calibration_base_estimator_2."ScoreOrProba_0" < 0.0) THEN 0.004 WHEN (calibration_base_estimator_2."ScoreOrProba_0" < 0.013157894736842105) THEN (calibration_base_estimator_2."ScoreOrProba_0" - 0.0) * 2.071 + 0.004 WHEN (calibration_base_estimator_2."ScoreOrProba_0" < 0.03731343283582089) THEN (calibration_base_estimator_2."ScoreOrProba_0" - 0.013157894736842105) * 0.46793374848642105 + 0.03125 WHEN (calibration_base_estimator_2."ScoreOrProba_0" < 0.16666666666666666) THEN (calibration_base_estimator_2."ScoreOrProba_0" - 0.03731343283582089) * 0.0 + 0.0425531914893617 WHEN (calibration_base_estimator_2."ScoreOrProba_0" < 1.0) THEN (calibration_base_estimator_2."ScoreOrProba_0" - 0.16666666666666666) * 1.148936170212766 + 0.0425531914893617 ELSE 1.0 END AS "Proba_0", CASE WHEN (calibration_base_estimator_2."ScoreOrProba_1" < 0.0) THEN 0.0 WHEN (calibration_base_estimator_2."ScoreOrProba_1" < 0.01904761904761905) THEN (calibration_base_estimator_2."ScoreOrProba_1" - 0.0) * 0.6730769230769231 + 0.0 WHEN (calibration_base_estimator_2."ScoreOrProba_1" < 0.09523809523809523) THEN (calibration_base_estimator_2."ScoreOrProba_1" - 0.01904761904761905) * 0.0 + 0.012820512820512822 WHEN (calibration_base_estimator_2."ScoreOrProba_1" < 0.1044776119402985) THEN (calibration_base_estimator_2."ScoreOrProba_1" - 0.09523809523809523) * 7.823555331738636 + 0.012820512820512822 WHEN (calibration_base_estimator_2."ScoreOrProba_1" < 0.15789473684210525) THEN (calibration_base_estimator_2."ScoreOrProba_1" - 0.1044776119402985) * 2.3814421634579994 + 0.0851063829787234 WHEN (calibration_base_estimator_2."ScoreOrProba_1" < 0.23963133640552994) THEN (calibration_base_estimator_2."ScoreOrProba_1" - 0.15789473684210525) * 0.0 + 0.21231617647058823 WHEN (calibration_base_estimator_2."ScoreOrProba_1" < 0.8636363636363636) THEN (calibration_base_estimator_2."ScoreOrProba_1" - 0.23963133640552994) * 0.6327299676164525 + 0.21231617647058823 WHEN (calibration_base_estimator_2."ScoreOrProba_1" < 1.0) THEN (calibration_base_estimator_2."ScoreOrProba_1" - 0.8636363636363636) * 0.0 + 0.6071428571428572 ELSE 0.6071428571428572 END AS "Proba_1", CASE WHEN (calibration_base_estimator_2."ScoreOrProba_2" < 0.0) THEN 0.0047169811320754715 WHEN (calibration_base_estimator_2."ScoreOrProba_2" < 0.013888888888888888) THEN (calibration_base_estimator_2."ScoreOrProba_2" - 0.0) * 2.6813563794695874 + 0.0047169811320754715 WHEN (calibration_base_estimator_2."ScoreOrProba_2" < 0.02857142857142857) THEN (calibration_base_estimator_2."ScoreOrProba_2" - 0.013888888888888888) * 0.0 + 0.04195804195804196 WHEN (calibration_base_estimator_2."ScoreOrProba_2" < 0.09090909090909091) THEN (calibration_base_estimator_2."ScoreOrProba_2" - 0.02857142857142857) * 2.477964743589743 + 0.04195804195804196 WHEN (calibration_base_estimator_2."ScoreOrProba_2" < 0.25) THEN (calibration_base_estimator_2."ScoreOrProba_2" - 0.09090909090909091) * 0.0 + 0.19642857142857142 WHEN (calibration_base_estimator_2."ScoreOrProba_2" < 0.35023041474654376) THEN (calibration_base_estimator_2."ScoreOrProba_2" - 0.25) * 1.2680865449628131 + 0.19642857142857142 WHEN (calibration_base_estimator_2."ScoreOrProba_2" < 1.0) THEN (calibration_base_estimator_2."ScoreOrProba_2" - 0.35023041474654376) * 0.821234876929495 + 0.3235294117647059 ELSE 0.8571428571428571 END AS "Proba_2", CASE WHEN (calibration_base_estimator_2."ScoreOrProba_3" < 0.0) THEN 0.0058823529411764705 WHEN (calibration_base_estimator_2."ScoreOrProba_3" < 0.03686635944700461) THEN (calibration_base_estimator_2."ScoreOrProba_3" - 0.0) * 0.4911243220692532 + 0.0058823529411764705 WHEN (calibration_base_estimator_2."ScoreOrProba_3" < 0.0380952380952381) THEN (calibration_base_estimator_2."ScoreOrProba_3" - 0.03686635944700461) * 0.0 + 0.023988318731748018 WHEN (calibration_base_estimator_2."ScoreOrProba_3" < 0.18181818181818182) THEN (calibration_base_estimator_2."ScoreOrProba_3" - 0.0380952380952381) * 2.442280071474886 + 0.023988318731748018 WHEN (calibration_base_estimator_2."ScoreOrProba_3" < 0.3333333333333333) THEN (calibration_base_estimator_2."ScoreOrProba_3" - 0.18181818181818182) * 0.0 + 0.375 WHEN (calibration_base_estimator_2."ScoreOrProba_3" < 0.3409090909090909) THEN (calibration_base_estimator_2."ScoreOrProba_3" - 0.3333333333333333) * 5.500000000000007 + 0.375 WHEN (calibration_base_estimator_2."ScoreOrProba_3" < 0.9861111111111112) THEN (calibration_base_estimator_2."ScoreOrProba_3" - 0.3409090909090909) * 0.8336594911937375 + 0.4166666666666667 ELSE 0.9545454545454546 END AS "Proba_3", CASE WHEN (calibration_base_estimator_2."ScoreOrProba_4" < 0.0) THEN 0.006880733944954129 WHEN (calibration_base_estimator_2."ScoreOrProba_4" < 0.007462686567164179) THEN (calibration_base_estimator_2."ScoreOrProba_4" - 0.0) * 0.0 + 0.006880733944954129 WHEN (calibration_base_estimator_2."ScoreOrProba_4" < 0.009523809523809525) THEN (calibration_base_estimator_2."ScoreOrProba_4" - 0.007462686567164179) * 15.322135156839357 + 0.006880733944954129 WHEN (calibration_base_estimator_2."ScoreOrProba_4" < 0.13636363636363635) THEN (calibration_base_estimator_2."ScoreOrProba_4" - 0.009523809523809525) * 1.0107639800472565 + 0.038461538461538464 WHEN (calibration_base_estimator_2."ScoreOrProba_4" < 0.36363636363636365) THEN (calibration_base_estimator_2."ScoreOrProba_4" - 0.13636363636363635) * 0.0 + 0.16666666666666666 WHEN (calibration_base_estimator_2."ScoreOrProba_4" < 0.5238095238095238) THEN (calibration_base_estimator_2."ScoreOrProba_4" - 0.36363636363636365) * 2.4712837837837838 + 0.16666666666666666 WHEN (calibration_base_estimator_2."ScoreOrProba_4" < 0.7631578947368421) THEN (calibration_base_estimator_2."ScoreOrProba_4" - 0.5238095238095238) * 0.26112565445026176 + 0.5625 WHEN (calibration_base_estimator_2."ScoreOrProba_4" < 1.0) THEN (calibration_base_estimator_2."ScoreOrProba_4" - 0.7631578947368421) * 1.5833333333333337 + 0.625 ELSE 1.0 END AS "Proba_4", CASE WHEN (calibration_base_estimator_2."ScoreOrProba_5" < 0.0) THEN 0.00272108843537415 WHEN (calibration_base_estimator_2."ScoreOrProba_5" < 0.047619047619047616) THEN (calibration_base_estimator_2."ScoreOrProba_5" - 0.0) * 0.0 + 0.00272108843537415 WHEN (calibration_base_estimator_2."ScoreOrProba_5" < 0.16666666666666666) THEN (calibration_base_estimator_2."ScoreOrProba_5" - 0.047619047619047616) * 2.077142857142857 + 0.00272108843537415 WHEN (calibration_base_estimator_2."ScoreOrProba_5" < 0.25) THEN (calibration_base_estimator_2."ScoreOrProba_5" - 0.16666666666666666) * 0.0 + 0.25 WHEN (calibration_base_estimator_2."ScoreOrProba_5" < 1.0) THEN (calibration_base_estimator_2."ScoreOrProba_5" - 0.25) * 0.956989247311828 + 0.25 ELSE 0.967741935483871 END AS "Proba_5", CASE WHEN (calibration_base_estimator_2."ScoreOrProba_6" < 0.0) THEN 0.007272727272727273 WHEN (calibration_base_estimator_2."ScoreOrProba_6" < 0.013157894736842105) THEN (calibration_base_estimator_2."ScoreOrProba_6" - 0.0) * 0.6347727272727273 + 0.007272727272727273 WHEN (calibration_base_estimator_2."ScoreOrProba_6" < 0.022727272727272728) THEN (calibration_base_estimator_2."ScoreOrProba_6" - 0.013157894736842105) * 0.0 + 0.015625 WHEN (calibration_base_estimator_2."ScoreOrProba_6" < 0.18181818181818182) THEN (calibration_base_estimator_2."ScoreOrProba_6" - 0.022727272727272728) * 0.4255952380952381 + 0.015625 WHEN (calibration_base_estimator_2."ScoreOrProba_6" < 0.6666666666666666) THEN (calibration_base_estimator_2."ScoreOrProba_6" - 0.18181818181818182) * 0.0 + 0.08333333333333333 WHEN (calibration_base_estimator_2."ScoreOrProba_6" < 1.0) THEN (calibration_base_estimator_2."ScoreOrProba_6" - 0.6666666666666666) * 2.6562499999999996 + 0.08333333333333333 ELSE 0.96875 END AS "Proba_6", CASE WHEN (calibration_base_estimator_2."ScoreOrProba_7" < 0.0) THEN 0.016483516483516484 WHEN (calibration_base_estimator_2."ScoreOrProba_7" < 0.007462686567164179) THEN (calibration_base_estimator_2."ScoreOrProba_7" - 0.0) * 2.6128608562901428 + 0.016483516483516484 WHEN (calibration_base_estimator_2."ScoreOrProba_7" < 0.045454545454545456) THEN (calibration_base_estimator_2."ScoreOrProba_7" - 0.007462686567164179) * 0.0 + 0.03598247809762203 WHEN (calibration_base_estimator_2."ScoreOrProba_7" < 0.09090909090909091) THEN (calibration_base_estimator_2."ScoreOrProba_7" - 0.045454545454545456) * 2.8750521485189817 + 0.03598247809762203 WHEN (calibration_base_estimator_2."ScoreOrProba_7" < 0.19047619047619047) THEN (calibration_base_estimator_2."ScoreOrProba_7" - 0.09090909090909091) * 0.8369565217391306 + 0.16666666666666666 WHEN (calibration_base_estimator_2."ScoreOrProba_7" < 0.8666666666666667) THEN (calibration_base_estimator_2."ScoreOrProba_7" - 0.19047619047619047) * 0.5687973997833152 + 0.25 WHEN (calibration_base_estimator_2."ScoreOrProba_7" < 1.0) THEN (calibration_base_estimator_2."ScoreOrProba_7" - 0.8666666666666667) * 0.0 + 0.6346153846153846 ELSE 0.6346153846153846 END AS "Proba_7", CASE WHEN (calibration_base_estimator_2."ScoreOrProba_8" < 0.0) THEN 0.007352941176470588 WHEN (calibration_base_estimator_2."ScoreOrProba_8" < 0.02857142857142857) THEN (calibration_base_estimator_2."ScoreOrProba_8" - 0.0) * 0.41572398190045257 + 0.007352941176470588 WHEN (calibration_base_estimator_2."ScoreOrProba_8" < 0.045454545454545456) THEN (calibration_base_estimator_2."ScoreOrProba_8" - 0.02857142857142857) * 0.0 + 0.019230769230769232 WHEN (calibration_base_estimator_2."ScoreOrProba_8" < 0.047619047619047616) THEN (calibration_base_estimator_2."ScoreOrProba_8" - 0.045454545454545456) * 12.771634615384638 + 0.019230769230769232 WHEN (calibration_base_estimator_2."ScoreOrProba_8" < 0.05263157894736842) THEN (calibration_base_estimator_2."ScoreOrProba_8" - 0.047619047619047616) * 0.0 + 0.046875 WHEN (calibration_base_estimator_2."ScoreOrProba_8" < 0.06818181818181818) THEN (calibration_base_estimator_2."ScoreOrProba_8" - 0.05263157894736842) * 0.1401504819058007 + 0.046875 WHEN (calibration_base_estimator_2."ScoreOrProba_8" < 0.3333333333333333) THEN (calibration_base_estimator_2."ScoreOrProba_8" - 0.06818181818181818) * 0.0 + 0.04905437352245862 WHEN (calibration_base_estimator_2."ScoreOrProba_8" < 0.3456221198156682) THEN (calibration_base_estimator_2."ScoreOrProba_8" - 0.3333333333333333) * 27.122170942845177 + 0.04905437352245862 ELSE 0.38235294117647056 END AS "Proba_8", CASE WHEN (calibration_base_estimator_2."ScoreOrProba_9" < 0.0) THEN 0.0 WHEN (calibration_base_estimator_2."ScoreOrProba_9" < 0.009523809523809525) THEN (calibration_base_estimator_2."ScoreOrProba_9" - 0.0) * 4.038461538461538 + 0.0 WHEN (calibration_base_estimator_2."ScoreOrProba_9" < 0.013824884792626729) THEN (calibration_base_estimator_2."ScoreOrProba_9" - 0.009523809523809525) * 0.0 + 0.038461538461538464 WHEN (calibration_base_estimator_2."ScoreOrProba_9" < 0.09090909090909091) THEN (calibration_base_estimator_2."ScoreOrProba_9" - 0.013824884792626729) * 0.4019358509847638 + 0.038461538461538464 WHEN (calibration_base_estimator_2."ScoreOrProba_9" < 0.16666666666666666) THEN (calibration_base_estimator_2."ScoreOrProba_9" - 0.09090909090909091) * 0.0 + 0.06944444444444443 WHEN (calibration_base_estimator_2."ScoreOrProba_9" < 0.7089552238805971) THEN (calibration_base_estimator_2."ScoreOrProba_9" - 0.16666666666666666) * 0.9410908321946775 + 0.06944444444444443 WHEN (calibration_base_estimator_2."ScoreOrProba_9" < 0.75) THEN (calibration_base_estimator_2."ScoreOrProba_9" - 0.7089552238805971) * 0.0 + 0.5797872340425532 ELSE 0.5797872340425532 END AS "Proba_9" 
FROM calibration_base_estimator_2), 
"Normalized_Probas_2" AS 
(SELECT isotonic_cte_2."KEY" AS "KEY", isotonic_cte_2."Proba_0" / (isotonic_cte_2."Proba_0" + isotonic_cte_2."Proba_1" + isotonic_cte_2."Proba_2" + isotonic_cte_2."Proba_3" + isotonic_cte_2."Proba_4" + isotonic_cte_2."Proba_5" + isotonic_cte_2."Proba_6" + isotonic_cte_2."Proba_7" + isotonic_cte_2."Proba_8" + isotonic_cte_2."Proba_9") AS "Proba_0", isotonic_cte_2."Proba_1" / (isotonic_cte_2."Proba_0" + isotonic_cte_2."Proba_1" + isotonic_cte_2."Proba_2" + isotonic_cte_2."Proba_3" + isotonic_cte_2."Proba_4" + isotonic_cte_2."Proba_5" + isotonic_cte_2."Proba_6" + isotonic_cte_2."Proba_7" + isotonic_cte_2."Proba_8" + isotonic_cte_2."Proba_9") AS "Proba_1", isotonic_cte_2."Proba_2" / (isotonic_cte_2."Proba_0" + isotonic_cte_2."Proba_1" + isotonic_cte_2."Proba_2" + isotonic_cte_2."Proba_3" + isotonic_cte_2."Proba_4" + isotonic_cte_2."Proba_5" + isotonic_cte_2."Proba_6" + isotonic_cte_2."Proba_7" + isotonic_cte_2."Proba_8" + isotonic_cte_2."Proba_9") AS "Proba_2", isotonic_cte_2."Proba_3" / (isotonic_cte_2."Proba_0" + isotonic_cte_2."Proba_1" + isotonic_cte_2."Proba_2" + isotonic_cte_2."Proba_3" + isotonic_cte_2."Proba_4" + isotonic_cte_2."Proba_5" + isotonic_cte_2."Proba_6" + isotonic_cte_2."Proba_7" + isotonic_cte_2."Proba_8" + isotonic_cte_2."Proba_9") AS "Proba_3", isotonic_cte_2."Proba_4" / (isotonic_cte_2."Proba_0" + isotonic_cte_2."Proba_1" + isotonic_cte_2."Proba_2" + isotonic_cte_2."Proba_3" + isotonic_cte_2."Proba_4" + isotonic_cte_2."Proba_5" + isotonic_cte_2."Proba_6" + isotonic_cte_2."Proba_7" + isotonic_cte_2."Proba_8" + isotonic_cte_2."Proba_9") AS "Proba_4", isotonic_cte_2."Proba_5" / (isotonic_cte_2."Proba_0" + isotonic_cte_2."Proba_1" + isotonic_cte_2."Proba_2" + isotonic_cte_2."Proba_3" + isotonic_cte_2."Proba_4" + isotonic_cte_2."Proba_5" + isotonic_cte_2."Proba_6" + isotonic_cte_2."Proba_7" + isotonic_cte_2."Proba_8" + isotonic_cte_2."Proba_9") AS "Proba_5", isotonic_cte_2."Proba_6" / (isotonic_cte_2."Proba_0" + isotonic_cte_2."Proba_1" + isotonic_cte_2."Proba_2" + isotonic_cte_2."Proba_3" + isotonic_cte_2."Proba_4" + isotonic_cte_2."Proba_5" + isotonic_cte_2."Proba_6" + isotonic_cte_2."Proba_7" + isotonic_cte_2."Proba_8" + isotonic_cte_2."Proba_9") AS "Proba_6", isotonic_cte_2."Proba_7" / (isotonic_cte_2."Proba_0" + isotonic_cte_2."Proba_1" + isotonic_cte_2."Proba_2" + isotonic_cte_2."Proba_3" + isotonic_cte_2."Proba_4" + isotonic_cte_2."Proba_5" + isotonic_cte_2."Proba_6" + isotonic_cte_2."Proba_7" + isotonic_cte_2."Proba_8" + isotonic_cte_2."Proba_9") AS "Proba_7", isotonic_cte_2."Proba_8" / (isotonic_cte_2."Proba_0" + isotonic_cte_2."Proba_1" + isotonic_cte_2."Proba_2" + isotonic_cte_2."Proba_3" + isotonic_cte_2."Proba_4" + isotonic_cte_2."Proba_5" + isotonic_cte_2."Proba_6" + isotonic_cte_2."Proba_7" + isotonic_cte_2."Proba_8" + isotonic_cte_2."Proba_9") AS "Proba_8", isotonic_cte_2."Proba_9" / (isotonic_cte_2."Proba_0" + isotonic_cte_2."Proba_1" + isotonic_cte_2."Proba_2" + isotonic_cte_2."Proba_3" + isotonic_cte_2."Proba_4" + isotonic_cte_2."Proba_5" + isotonic_cte_2."Proba_6" + isotonic_cte_2."Proba_7" + isotonic_cte_2."Proba_8" + isotonic_cte_2."Proba_9") AS "Proba_9" 
FROM isotonic_cte_2), 
"DT_node_lookup_3" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_38 <= -1.6508052349090576) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_30 <= -0.9030675292015076) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_23 <= -1.1726703643798828) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= -0.11717917770147324) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_51 <= 1.5833568572998047) THEN 5 ELSE 6 END ELSE 7 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= -1.365149736404419) THEN 9 ELSE 10 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_23 <= 0.1901175081729889) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= -0.7632772922515869) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_14 <= -0.6885261535644531) THEN 14 ELSE 15 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_62 <= -1.5049443244934082) THEN 17 ELSE 18 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_37 <= -0.7239397168159485) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_20 <= -1.398476481437683) THEN 21 ELSE 22 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_37 <= -0.08449207246303558) THEN 24 ELSE 25 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_23 <= -1.1726703643798828) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_44 <= 0.2508734464645386) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= -0.5867252945899963) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= -0.4649772346019745) THEN 30 ELSE 31 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= -0.9766302108764648) THEN 33 ELSE 34 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_56 <= -0.6539855003356934) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_37 <= 1.034541368484497) THEN 37 ELSE 38 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_60 <= 0.7944983243942261) THEN 40 ELSE 41 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_62 <= -0.8913522958755493) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_28 <= 0.5403965711593628) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_55 <= -0.20786768198013306) THEN 45 ELSE 46 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_44 <= -0.5133943557739258) THEN 48 ELSE 49 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_45 <= -0.7331587076187134) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_28 <= -0.5865546464920044) THEN 52 ELSE 53 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_35 <= 0.3318006992340088) THEN 55 ELSE 56 END END END END END AS node_id_2 
FROM "TMP_20180329233812_WYC4DM_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_3" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Proba_2" AS "Proba_2", "Values"."LogProba_2" AS "LogProba_2", "Values"."Proba_3" AS "Proba_3", "Values"."LogProba_3" AS "LogProba_3", "Values"."Proba_4" AS "Proba_4", "Values"."LogProba_4" AS "LogProba_4", "Values"."Proba_5" AS "Proba_5", "Values"."LogProba_5" AS "LogProba_5", "Values"."Proba_6" AS "Proba_6", "Values"."LogProba_6" AS "LogProba_6", "Values"."Proba_7" AS "Proba_7", "Values"."LogProba_7" AS "LogProba_7", "Values"."Proba_8" AS "Proba_8", "Values"."LogProba_8" AS "LogProba_8", "Values"."Proba_9" AS "Proba_9", "Values"."LogProba_9" AS "LogProba_9", "Values"."Decision" AS "Decision", "Values"."DecisionProba" AS "DecisionProba" 
FROM (SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 4 AS parent_id, 0.5 AS "Proba_0", -0.6931471805599453 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0.0 AS "Proba_4", -1.79769313486231e+308 AS "LogProba_4", 0.0 AS "Proba_5", -1.79769313486231e+308 AS "LogProba_5", 0.5 AS "Proba_6", -0.6931471805599453 AS "LogProba_6", 0.0 AS "Proba_7", -1.79769313486231e+308 AS "LogProba_7", 0.0 AS "Proba_8", -1.79769313486231e+308 AS "LogProba_8", 0.0 AS "Proba_9", -1.79769313486231e+308 AS "LogProba_9", 0 AS "Decision", 0.5 AS "DecisionProba" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 4 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 1.0 AS "Proba_4", 0.0 AS "LogProba_4", 0.0 AS "Proba_5", -1.79769313486231e+308 AS "LogProba_5", 0.0 AS "Proba_6", -1.79769313486231e+308 AS "LogProba_6", 0.0 AS "Proba_7", -1.79769313486231e+308 AS "LogProba_7", 0.0 AS "Proba_8", -1.79769313486231e+308 AS "LogProba_8", 0.0 AS "Proba_9", -1.79769313486231e+308 AS "LogProba_9", 4 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 4 AS depth, 3 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0.0 AS "Proba_4", -1.79769313486231e+308 AS "LogProba_4", 1.0 AS "Proba_5", 0.0 AS "LogProba_5", 0.0 AS "Proba_6", -1.79769313486231e+308 AS "LogProba_6", 0.0 AS "Proba_7", -1.79769313486231e+308 AS "LogProba_7", 0.0 AS "Proba_8", -1.79769313486231e+308 AS "LogProba_8", 0.0 AS "Proba_9", -1.79769313486231e+308 AS "LogProba_9", 5 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 8 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0.0 AS "Proba_4", -1.79769313486231e+308 AS "LogProba_4", 0.0 AS "Proba_5", -1.79769313486231e+308 AS "LogProba_5", 0.0 AS "Proba_6", -1.79769313486231e+308 AS "LogProba_6", 0.0 AS "Proba_7", -1.79769313486231e+308 AS "LogProba_7", 0.0 AS "Proba_8", -1.79769313486231e+308 AS "LogProba_8", 1.0 AS "Proba_9", 0.0 AS "LogProba_9", 9 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 101 AS count, 4 AS depth, 8 AS parent_id, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0.0 AS "Proba_4", -1.79769313486231e+308 AS "LogProba_4", 0.0 AS "Proba_5", -1.79769313486231e+308 AS "LogProba_5", 0.0 AS "Proba_6", -1.79769313486231e+308 AS "LogProba_6", 0.0 AS "Proba_7", -1.79769313486231e+308 AS "LogProba_7", 0.0 AS "Proba_8", -1.79769313486231e+308 AS "LogProba_8", 0.0 AS "Proba_9", -1.79769313486231e+308 AS "LogProba_9", 0 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 13 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0.0 AS "Proba_4", -1.79769313486231e+308 AS "LogProba_4", 0.0 AS "Proba_5", -1.79769313486231e+308 AS "LogProba_5", 1.0 AS "Proba_6", 0.0 AS "LogProba_6", 0.0 AS "Proba_7", -1.79769313486231e+308 AS "LogProba_7", 0.0 AS "Proba_8", -1.79769313486231e+308 AS "LogProba_8", 0.0 AS "Proba_9", -1.79769313486231e+308 AS "LogProba_9", 6 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 13 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.3333333333333333 AS "Proba_2", -1.0986122886681098 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0.0 AS "Proba_4", -1.79769313486231e+308 AS "LogProba_4", 0.0 AS "Proba_5", -1.79769313486231e+308 AS "LogProba_5", 0.0 AS "Proba_6", -1.79769313486231e+308 AS "LogProba_6", 0.0 AS "Proba_7", -1.79769313486231e+308 AS "LogProba_7", 0.0 AS "Proba_8", -1.79769313486231e+308 AS "LogProba_8", 0.6666666666666666 AS "Proba_9", -0.40546510810816444 AS "LogProba_9", 9 AS "Decision", 0.6666666666666666 AS "DecisionProba" UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 16 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0.0 AS "Proba_4", -1.79769313486231e+308 AS "LogProba_4", 0.0 AS "Proba_5", -1.79769313486231e+308 AS "LogProba_5", 0.0 AS "Proba_6", -1.79769313486231e+308 AS "LogProba_6", 0.0 AS "Proba_7", -1.79769313486231e+308 AS "LogProba_7", 1.0 AS "Proba_8", 0.0 AS "LogProba_8", 0.0 AS "Proba_9", -1.79769313486231e+308 AS "LogProba_9", 8 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 5 AS depth, 16 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0.0 AS "Proba_4", -1.79769313486231e+308 AS "LogProba_4", 1.0 AS "Proba_5", 0.0 AS "LogProba_5", 0.0 AS "Proba_6", -1.79769313486231e+308 AS "LogProba_6", 0.0 AS "Proba_7", -1.79769313486231e+308 AS "LogProba_7", 0.0 AS "Proba_8", -1.79769313486231e+308 AS "LogProba_8", 0.0 AS "Proba_9", -1.79769313486231e+308 AS "LogProba_9", 5 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 20 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 1.0 AS "Proba_3", 0.0 AS "LogProba_3", 0.0 AS "Proba_4", -1.79769313486231e+308 AS "LogProba_4", 0.0 AS "Proba_5", -1.79769313486231e+308 AS "LogProba_5", 0.0 AS "Proba_6", -1.79769313486231e+308 AS "LogProba_6", 0.0 AS "Proba_7", -1.79769313486231e+308 AS "LogProba_7", 0.0 AS "Proba_8", -1.79769313486231e+308 AS "LogProba_8", 0.0 AS "Proba_9", -1.79769313486231e+308 AS "LogProba_9", 3 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 33 AS count, 5 AS depth, 20 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0.0 AS "Proba_4", -1.79769313486231e+308 AS "LogProba_4", 0.0 AS "Proba_5", -1.79769313486231e+308 AS "LogProba_5", 0.0 AS "Proba_6", -1.79769313486231e+308 AS "LogProba_6", 0.0 AS "Proba_7", -1.79769313486231e+308 AS "LogProba_7", 0.0 AS "Proba_8", -1.79769313486231e+308 AS "LogProba_8", 1.0 AS "Proba_9", 0.0 AS "LogProba_9", 9 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 23 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0.0 AS "Proba_4", -1.79769313486231e+308 AS "LogProba_4", 1.0 AS "Proba_5", 0.0 AS "LogProba_5", 0.0 AS "Proba_6", -1.79769313486231e+308 AS "LogProba_6", 0.0 AS "Proba_7", -1.79769313486231e+308 AS "LogProba_7", 0.0 AS "Proba_8", -1.79769313486231e+308 AS "LogProba_8", 0.0 AS "Proba_9", -1.79769313486231e+308 AS "LogProba_9", 5 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 23 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0.0 AS "Proba_4", -1.79769313486231e+308 AS "LogProba_4", 0.0 AS "Proba_5", -1.79769313486231e+308 AS "LogProba_5", 0.0 AS "Proba_6", -1.79769313486231e+308 AS "LogProba_6", 0.0 AS "Proba_7", -1.79769313486231e+308 AS "LogProba_7", 1.0 AS "Proba_8", 0.0 AS "LogProba_8", 0.0 AS "Proba_9", -1.79769313486231e+308 AS "LogProba_9", 8 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 34 AS count, 5 AS depth, 29 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.7058823529411765 AS "Proba_1", -0.3483066942682157 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.029411764705882353 AS "Proba_3", -3.5263605246161616 AS "LogProba_3", 0.11764705882352941 AS "Proba_4", -2.1400661634962708 AS "LogProba_4", 0.029411764705882353 AS "Proba_5", -3.5263605246161616 AS "LogProba_5", 0.08823529411764706 AS "Proba_6", -2.4277482359480516 AS "LogProba_6", 0.029411764705882353 AS "Proba_7", -3.5263605246161616 AS "LogProba_7", 0.0 AS "Proba_8", -1.79769313486231e+308 AS "LogProba_8", 0.0 AS "Proba_9", -1.79769313486231e+308 AS "LogProba_9", 1 AS "Decision", 0.7058823529411765 AS "DecisionProba" UNION ALL SELECT 31 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 34 AS count, 5 AS depth, 29 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.6176470588235294 AS "Proba_2", -0.4818380868927383 AS "LogProba_2", 0.23529411764705882 AS "Proba_3", -1.4469189829363254 AS "LogProba_3", 0.0 AS "Proba_4", -1.79769313486231e+308 AS "LogProba_4", 0.029411764705882353 AS "Proba_5", -3.5263605246161616 AS "LogProba_5", 0.0 AS "Proba_6", -1.79769313486231e+308 AS "LogProba_6", 0.08823529411764706 AS "Proba_7", -2.4277482359480516 AS "LogProba_7", 0.029411764705882353 AS "Proba_8", -3.5263605246161616 AS "LogProba_8", 0.0 AS "Proba_9", -1.79769313486231e+308 AS "LogProba_9", 2 AS "Decision", 0.6176470588235294 AS "DecisionProba" UNION ALL SELECT 33 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 32 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0.6666666666666666 AS "Proba_4", -0.40546510810816444 AS "LogProba_4", 0.3333333333333333 AS "Proba_5", -1.0986122886681098 AS "LogProba_5", 0.0 AS "Proba_6", -1.79769313486231e+308 AS "LogProba_6", 0.0 AS "Proba_7", -1.79769313486231e+308 AS "LogProba_7", 0.0 AS "Proba_8", -1.79769313486231e+308 AS "LogProba_8", 0.0 AS "Proba_9", -1.79769313486231e+308 AS "LogProba_9", 4 AS "Decision", 0.6666666666666666 AS "DecisionProba" UNION ALL SELECT 34 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 85 AS count, 5 AS depth, 32 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0.0 AS "Proba_4", -1.79769313486231e+308 AS "LogProba_4", 1.0 AS "Proba_5", 0.0 AS "LogProba_5", 0.0 AS "Proba_6", -1.79769313486231e+308 AS "LogProba_6", 0.0 AS "Proba_7", -1.79769313486231e+308 AS "LogProba_7", 0.0 AS "Proba_8", -1.79769313486231e+308 AS "LogProba_8", 0.0 AS "Proba_9", -1.79769313486231e+308 AS "LogProba_9", 5 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 37 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 5 AS depth, 36 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0.9375 AS "Proba_4", -0.06453852113757118 AS "LogProba_4", 0.0 AS "Proba_5", -1.79769313486231e+308 AS "LogProba_5", 0.0625 AS "Proba_6", -2.772588722239781 AS "LogProba_6", 0.0 AS "Proba_7", -1.79769313486231e+308 AS "LogProba_7", 0.0 AS "Proba_8", -1.79769313486231e+308 AS "LogProba_8", 0.0 AS "Proba_9", -1.79769313486231e+308 AS "LogProba_9", 4 AS "Decision", 0.9375 AS "DecisionProba" UNION ALL SELECT 38 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 5 AS depth, 36 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.6 AS "Proba_1", -0.5108256237659907 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0.0 AS "Proba_4", -1.79769313486231e+308 AS "LogProba_4", 0.0 AS "Proba_5", -1.79769313486231e+308 AS "LogProba_5", 0.4 AS "Proba_6", -0.916290731874155 AS "LogProba_6", 0.0 AS "Proba_7", -1.79769313486231e+308 AS "LogProba_7", 0.0 AS "Proba_8", -1.79769313486231e+308 AS "LogProba_8", 0.0 AS "Proba_9", -1.79769313486231e+308 AS "LogProba_9", 1 AS "Decision", 0.6 AS "DecisionProba" UNION ALL SELECT 40 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 97 AS count, 5 AS depth, 39 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0.0 AS "Proba_4", -1.79769313486231e+308 AS "LogProba_4", 0.010309278350515464 AS "Proba_5", -4.574710978503383 AS "LogProba_5", 0.9896907216494846 AS "Proba_6", -0.010362787035546547 AS "LogProba_6", 0.0 AS "Proba_7", -1.79769313486231e+308 AS "LogProba_7", 0.0 AS "Proba_8", -1.79769313486231e+308 AS "LogProba_8", 0.0 AS "Proba_9", -1.79769313486231e+308 AS "LogProba_9", 6 AS "Decision", 0.9896907216494846 AS "DecisionProba" UNION ALL SELECT 41 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 5 AS depth, 39 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0.0 AS "Proba_4", -1.79769313486231e+308 AS "LogProba_4", 0.0 AS "Proba_5", -1.79769313486231e+308 AS "LogProba_5", 0.0 AS "Proba_6", -1.79769313486231e+308 AS "LogProba_6", 0.0 AS "Proba_7", -1.79769313486231e+308 AS "LogProba_7", 0.0 AS "Proba_8", -1.79769313486231e+308 AS "LogProba_8", 0.0 AS "Proba_9", -1.79769313486231e+308 AS "LogProba_9", 2 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 45 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 96 AS count, 5 AS depth, 44 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.010416666666666666 AS "Proba_1", -4.564348191467836 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.03125 AS "Proba_3", -3.4657359027997265 AS "LogProba_3", 0.020833333333333332 AS "Proba_4", -3.871201010907891 AS "LogProba_4", 0.0 AS "Proba_5", -1.79769313486231e+308 AS "LogProba_5", 0.0 AS "Proba_6", -1.79769313486231e+308 AS "LogProba_6", 0.8854166666666666 AS "Proba_7", -0.12169693497751982 AS "LogProba_7", 0.041666666666666664 AS "Proba_8", -3.1780538303479458 AS "LogProba_8", 0.010416666666666666 AS "Proba_9", -4.564348191467836 AS "LogProba_9", 7 AS "Decision", 0.8854166666666666 AS "DecisionProba" UNION ALL SELECT 46 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 5 AS depth, 44 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.5 AS "Proba_1", -0.6931471805599453 AS "LogProba_1", 0.25 AS "Proba_2", -1.3862943611198906 AS "LogProba_2", 0.25 AS "Proba_3", -1.3862943611198906 AS "LogProba_3", 0.0 AS "Proba_4", -1.79769313486231e+308 AS "LogProba_4", 0.0 AS "Proba_5", -1.79769313486231e+308 AS "LogProba_5", 0.0 AS "Proba_6", -1.79769313486231e+308 AS "LogProba_6", 0.0 AS "Proba_7", -1.79769313486231e+308 AS "LogProba_7", 0.0 AS "Proba_8", -1.79769313486231e+308 AS "LogProba_8", 0.0 AS "Proba_9", -1.79769313486231e+308 AS "LogProba_9", 1 AS "Decision", 0.5 AS "DecisionProba" UNION ALL SELECT 48 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 23 AS count, 5 AS depth, 47 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.08695652173913043 AS "Proba_1", -2.4423470353692043 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0.08695652173913043 AS "Proba_4", -2.4423470353692043 AS "LogProba_4", 0.08695652173913043 AS "Proba_5", -2.4423470353692043 AS "LogProba_5", 0.0 AS "Proba_6", -1.79769313486231e+308 AS "LogProba_6", 0.34782608695652173 AS "Proba_7", -1.0560526742493137 AS "LogProba_7", 0.0 AS "Proba_8", -1.79769313486231e+308 AS "LogProba_8", 0.391304347826087 AS "Proba_9", -0.9382696385929302 AS "LogProba_9", 9 AS "Decision", 0.391304347826087 AS "DecisionProba" UNION ALL SELECT 49 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 5 AS depth, 47 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.125 AS "Proba_1", -2.0794415416798357 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0.875 AS "Proba_4", -0.13353139262452263 AS "LogProba_4", 0.0 AS "Proba_5", -1.79769313486231e+308 AS "LogProba_5", 0.0 AS "Proba_6", -1.79769313486231e+308 AS "LogProba_6", 0.0 AS "Proba_7", -1.79769313486231e+308 AS "LogProba_7", 0.0 AS "Proba_8", -1.79769313486231e+308 AS "LogProba_8", 0.0 AS "Proba_9", -1.79769313486231e+308 AS "LogProba_9", 4 AS "Decision", 0.875 AS "DecisionProba" UNION ALL SELECT 52 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 102 AS count, 5 AS depth, 51 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.00980392156862745 AS "Proba_1", -4.624972813284271 AS "LogProba_1", 0.029411764705882353 AS "Proba_2", -3.5263605246161616 AS "LogProba_2", 0.8431372549019608 AS "Proba_3", -0.17062551703076334 AS "LogProba_3", 0.0 AS "Proba_4", -1.79769313486231e+308 AS "LogProba_4", 0.0 AS "Proba_5", -1.79769313486231e+308 AS "LogProba_5", 0.0 AS "Proba_6", -1.79769313486231e+308 AS "LogProba_6", 0.0 AS "Proba_7", -1.79769313486231e+308 AS "LogProba_7", 0.0392156862745098 AS "Proba_8", -3.2386784521643803 AS "LogProba_8", 0.0784313725490196 AS "Proba_9", -2.5455312716044354 AS "LogProba_9", 3 AS "Decision", 0.8431372549019608 AS "DecisionProba" UNION ALL SELECT 53 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 84 AS count, 5 AS depth, 51 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.09523809523809523 AS "Proba_1", -2.3513752571634776 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.03571428571428571 AS "Proba_3", -3.332204510175204 AS "LogProba_3", 0.08333333333333333 AS "Proba_4", -2.4849066497880004 AS "LogProba_4", 0.03571428571428571 AS "Proba_5", -3.332204510175204 AS "LogProba_5", 0.0 AS "Proba_6", -1.79769313486231e+308 AS "LogProba_6", 0.023809523809523808 AS "Proba_7", -3.7376696182833684 AS "LogProba_7", 0.08333333333333333 AS "Proba_8", -2.4849066497880004 AS "LogProba_8", 0.6428571428571429 AS "Proba_9", -0.4418327522790392 AS "LogProba_9", 9 AS "Decision", 0.6428571428571429 AS "DecisionProba" UNION ALL SELECT 55 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 229 AS count, 5 AS depth, 54 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.22707423580786026 AS "Proba_1", -1.4824782849728122 AS "LogProba_1", 0.3406113537117904 AS "Proba_2", -1.0770131768646478 AS "LogProba_2", 0.021834061135371178 AS "Proba_3", -3.8242840911201395 AS "LogProba_3", 0.013100436681222707 AS "Proba_4", -4.33510971488613 AS "LogProba_4", 0.0 AS "Proba_5", -1.79769313486231e+308 AS "LogProba_5", 0.004366812227074236 AS "Proba_6", -5.43372200355424 AS "LogProba_6", 0.026200873362445413 AS "Proba_7", -3.6419625343261846 AS "LogProba_7", 0.3537117903930131 AS "Proba_8", -1.0392728488818008 AS "LogProba_8", 0.013100436681222707 AS "Proba_9", -4.33510971488613 AS "LogProba_9", 8 AS "Decision", 0.3537117903930131 AS "DecisionProba" UNION ALL SELECT 56 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 83 AS count, 5 AS depth, 54 AS parent_id, 0.024096385542168676 AS "Proba_0", -3.7256934272366524 AS "LogProba_0", 0.1686746987951807 AS "Proba_1", -1.7797832781813394 AS "LogProba_1", 0.012048192771084338 AS "Proba_2", -4.418840607796598 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0.7590361445783133 AS "Proba_4", -0.27570588140506525 AS "LogProba_4", 0.0 AS "Proba_5", -1.79769313486231e+308 AS "LogProba_5", 0.012048192771084338 AS "Proba_6", -4.418840607796598 AS "LogProba_6", 0.0 AS "Proba_7", -1.79769313486231e+308 AS "LogProba_7", 0.024096385542168676 AS "Proba_8", -3.7256934272366524 AS "LogProba_8", 0.0 AS "Proba_9", -1.79769313486231e+308 AS "LogProba_9", 4 AS "Decision", 0.7590361445783133 AS "DecisionProba") AS "Values"), 
"DT_Output_3" AS 
(SELECT "DT_node_lookup_3"."KEY" AS "KEY", "DT_node_lookup_3".node_id_2 AS node_id_2, "DT_node_data_3".node_id AS node_id, "DT_node_data_3".feature AS feature, "DT_node_data_3".threshold AS threshold, "DT_node_data_3".count AS count, "DT_node_data_3".depth AS depth, "DT_node_data_3".parent_id AS parent_id, "DT_node_data_3"."Proba_0" AS "Proba_0", "DT_node_data_3"."LogProba_0" AS "LogProba_0", "DT_node_data_3"."Proba_1" AS "Proba_1", "DT_node_data_3"."LogProba_1" AS "LogProba_1", "DT_node_data_3"."Proba_2" AS "Proba_2", "DT_node_data_3"."LogProba_2" AS "LogProba_2", "DT_node_data_3"."Proba_3" AS "Proba_3", "DT_node_data_3"."LogProba_3" AS "LogProba_3", "DT_node_data_3"."Proba_4" AS "Proba_4", "DT_node_data_3"."LogProba_4" AS "LogProba_4", "DT_node_data_3"."Proba_5" AS "Proba_5", "DT_node_data_3"."LogProba_5" AS "LogProba_5", "DT_node_data_3"."Proba_6" AS "Proba_6", "DT_node_data_3"."LogProba_6" AS "LogProba_6", "DT_node_data_3"."Proba_7" AS "Proba_7", "DT_node_data_3"."LogProba_7" AS "LogProba_7", "DT_node_data_3"."Proba_8" AS "Proba_8", "DT_node_data_3"."LogProba_8" AS "LogProba_8", "DT_node_data_3"."Proba_9" AS "Proba_9", "DT_node_data_3"."LogProba_9" AS "LogProba_9", "DT_node_data_3"."Decision" AS "Decision", "DT_node_data_3"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup_3" LEFT OUTER JOIN "DT_node_data_3" ON "DT_node_lookup_3".node_id_2 = "DT_node_data_3".node_id), 
calibration_base_estimator_3 AS 
(SELECT "DT_Output_3"."KEY" AS "KEY", CAST(NULL AS FLOAT) AS "Score_0", CAST(NULL AS FLOAT) AS "Score_1", CAST(NULL AS FLOAT) AS "Score_2", CAST(NULL AS FLOAT) AS "Score_3", CAST(NULL AS FLOAT) AS "Score_4", CAST(NULL AS FLOAT) AS "Score_5", CAST(NULL AS FLOAT) AS "Score_6", CAST(NULL AS FLOAT) AS "Score_7", CAST(NULL AS FLOAT) AS "Score_8", CAST(NULL AS FLOAT) AS "Score_9", "DT_Output_3"."Proba_0" AS "Proba_0", "DT_Output_3"."Proba_1" AS "Proba_1", "DT_Output_3"."Proba_2" AS "Proba_2", "DT_Output_3"."Proba_3" AS "Proba_3", "DT_Output_3"."Proba_4" AS "Proba_4", "DT_Output_3"."Proba_5" AS "Proba_5", "DT_Output_3"."Proba_6" AS "Proba_6", "DT_Output_3"."Proba_7" AS "Proba_7", "DT_Output_3"."Proba_8" AS "Proba_8", "DT_Output_3"."Proba_9" AS "Proba_9", "DT_Output_3"."LogProba_0" AS "LogProba_0", "DT_Output_3"."LogProba_1" AS "LogProba_1", "DT_Output_3"."LogProba_2" AS "LogProba_2", "DT_Output_3"."LogProba_3" AS "LogProba_3", "DT_Output_3"."LogProba_4" AS "LogProba_4", "DT_Output_3"."LogProba_5" AS "LogProba_5", "DT_Output_3"."LogProba_6" AS "LogProba_6", "DT_Output_3"."LogProba_7" AS "LogProba_7", "DT_Output_3"."LogProba_8" AS "LogProba_8", "DT_Output_3"."LogProba_9" AS "LogProba_9", CAST(NULL AS BIGINT) AS "Decision", CAST(NULL AS FLOAT) AS "DecisionProba", coalesce(CAST(NULL AS FLOAT), "DT_Output_3"."Proba_0") AS "ScoreOrProba_0", coalesce(CAST(NULL AS FLOAT), "DT_Output_3"."Proba_1") AS "ScoreOrProba_1", coalesce(CAST(NULL AS FLOAT), "DT_Output_3"."Proba_2") AS "ScoreOrProba_2", coalesce(CAST(NULL AS FLOAT), "DT_Output_3"."Proba_3") AS "ScoreOrProba_3", coalesce(CAST(NULL AS FLOAT), "DT_Output_3"."Proba_4") AS "ScoreOrProba_4", coalesce(CAST(NULL AS FLOAT), "DT_Output_3"."Proba_5") AS "ScoreOrProba_5", coalesce(CAST(NULL AS FLOAT), "DT_Output_3"."Proba_6") AS "ScoreOrProba_6", coalesce(CAST(NULL AS FLOAT), "DT_Output_3"."Proba_7") AS "ScoreOrProba_7", coalesce(CAST(NULL AS FLOAT), "DT_Output_3"."Proba_8") AS "ScoreOrProba_8", coalesce(CAST(NULL AS FLOAT), "DT_Output_3"."Proba_9") AS "ScoreOrProba_9" 
FROM "DT_Output_3"), 
isotonic_cte_3 AS 
(SELECT calibration_base_estimator_3."KEY" AS "KEY", CASE WHEN (calibration_base_estimator_3."ScoreOrProba_0" < 0.0) THEN 0.0022522522522522522 WHEN (calibration_base_estimator_3."ScoreOrProba_0" < 0.5) THEN (calibration_base_estimator_3."ScoreOrProba_0" - 0.0) * 0.0 + 0.0022522522522522522 WHEN (calibration_base_estimator_3."ScoreOrProba_0" < 1.0) THEN (calibration_base_estimator_3."ScoreOrProba_0" - 0.5) * 1.877848436671966 + 0.0022522522522522522 ELSE 0.9411764705882353 END AS "Proba_0", CASE WHEN (calibration_base_estimator_3."ScoreOrProba_1" < 0.0) THEN 0.007246376811594203 WHEN (calibration_base_estimator_3."ScoreOrProba_1" < 0.00980392156862745) THEN (calibration_base_estimator_3."ScoreOrProba_1" - 0.0) * 0.3576437587657783 + 0.007246376811594203 WHEN (calibration_base_estimator_3."ScoreOrProba_1" < 0.08695652173913043) THEN (calibration_base_estimator_3."ScoreOrProba_1" - 0.00980392156862745) * 0.0 + 0.01075268817204301 WHEN (calibration_base_estimator_3."ScoreOrProba_1" < 0.09523809523809523) THEN (calibration_base_estimator_3."ScoreOrProba_1" - 0.08695652173913043) * 7.790322580645164 + 0.01075268817204301 WHEN (calibration_base_estimator_3."ScoreOrProba_1" < 0.1686746987951807) THEN (calibration_base_estimator_3."ScoreOrProba_1" - 0.09523809523809523) * 0.0 + 0.07526881720430108 WHEN (calibration_base_estimator_3."ScoreOrProba_1" < 0.22707423580786026) THEN (calibration_base_estimator_3."ScoreOrProba_1" - 0.1686746987951807) * 1.0023024614801075 + 0.07526881720430108 WHEN (calibration_base_estimator_3."ScoreOrProba_1" < 0.5) THEN (calibration_base_estimator_3."ScoreOrProba_1" - 0.22707423580786026) * 0.0 + 0.13380281690140844 WHEN (calibration_base_estimator_3."ScoreOrProba_1" < 0.6) THEN (calibration_base_estimator_3."ScoreOrProba_1" - 0.5) * 4.733400402414489 + 0.13380281690140844 WHEN (calibration_base_estimator_3."ScoreOrProba_1" < 0.7058823529411765) THEN (calibration_base_estimator_3."ScoreOrProba_1" - 0.6) * 0.0 + 0.6071428571428572 ELSE 0.6071428571428572 END AS "Proba_1", CASE WHEN (calibration_base_estimator_3."ScoreOrProba_2" < 0.0) THEN 0.009345794392523364 WHEN (calibration_base_estimator_3."ScoreOrProba_2" < 0.012048192771084338) THEN (calibration_base_estimator_3."ScoreOrProba_2" - 0.0) * 0.0 + 0.009345794392523364 WHEN (calibration_base_estimator_3."ScoreOrProba_2" < 0.029411764705882353) THEN (calibration_base_estimator_3."ScoreOrProba_2" - 0.012048192771084338) * 3.177360905170027 + 0.009345794392523364 WHEN (calibration_base_estimator_3."ScoreOrProba_2" < 0.25) THEN (calibration_base_estimator_3."ScoreOrProba_2" - 0.029411764705882353) * 1.8571356454137007 + 0.06451612903225806 WHEN (calibration_base_estimator_3."ScoreOrProba_2" < 0.3406113537117904) THEN (calibration_base_estimator_3."ScoreOrProba_2" - 0.25) * 0.0 + 0.4741784037558685 WHEN (calibration_base_estimator_3."ScoreOrProba_2" < 0.6176470588235294) THEN (calibration_base_estimator_3."ScoreOrProba_2" - 0.3406113537117904) * 0.2572814275687985 + 0.4741784037558685 WHEN (calibration_base_estimator_3."ScoreOrProba_2" < 1.0) THEN (calibration_base_estimator_3."ScoreOrProba_2" - 0.6176470588235294) * 1.188811188811189 + 0.5454545454545454 ELSE 1.0 END AS "Proba_2", CASE WHEN (calibration_base_estimator_3."ScoreOrProba_3" < 0.0) THEN 0.005917159763313609 WHEN (calibration_base_estimator_3."ScoreOrProba_3" < 0.021834061135371178) THEN (calibration_base_estimator_3."ScoreOrProba_3" - 0.0) * 1.341670139178265 + 0.005917159763313609 WHEN (calibration_base_estimator_3."ScoreOrProba_3" < 0.029411764705882353) THEN (calibration_base_estimator_3."ScoreOrProba_3" - 0.021834061135371178) * 0.0 + 0.035211267605633804 WHEN (calibration_base_estimator_3."ScoreOrProba_3" < 0.03125) THEN (calibration_base_estimator_3."ScoreOrProba_3" - 0.029411764705882353) * 13.814767392232177 + 0.035211267605633804 WHEN (calibration_base_estimator_3."ScoreOrProba_3" < 0.03571428571428571) THEN (calibration_base_estimator_3."ScoreOrProba_3" - 0.03125) * 0.8758553274682304 + 0.06060606060606061 WHEN (calibration_base_estimator_3."ScoreOrProba_3" < 0.23529411764705882) THEN (calibration_base_estimator_3."ScoreOrProba_3" - 0.03571428571428571) * 0.13224263003549933 + 0.06451612903225806 WHEN (calibration_base_estimator_3."ScoreOrProba_3" < 0.25) THEN (calibration_base_estimator_3."ScoreOrProba_3" - 0.23529411764705882) * 16.48484848484848 + 0.09090909090909091 WHEN (calibration_base_estimator_3."ScoreOrProba_3" < 0.8431372549019608) THEN (calibration_base_estimator_3."ScoreOrProba_3" - 0.25) * 0.743268461743535 + 0.3333333333333333 ELSE 0.7741935483870968 END AS "Proba_3", CASE WHEN (calibration_base_estimator_3."ScoreOrProba_4" < 0.0) THEN 0.014384758161371329 WHEN (calibration_base_estimator_3."ScoreOrProba_4" < 0.020833333333333332) THEN (calibration_base_estimator_3."ScoreOrProba_4" - 0.0) * 0.0 + 0.014384758161371329 WHEN (calibration_base_estimator_3."ScoreOrProba_4" < 0.08333333333333333) THEN (calibration_base_estimator_3."ScoreOrProba_4" - 0.020833333333333332) * 0.8021019339341877 + 0.014384758161371329 WHEN (calibration_base_estimator_3."ScoreOrProba_4" < 0.08695652173913043) THEN (calibration_base_estimator_3."ScoreOrProba_4" - 0.08333333333333333) * 7.749103942652328 + 0.06451612903225806 WHEN (calibration_base_estimator_3."ScoreOrProba_4" < 0.6666666666666666) THEN (calibration_base_estimator_3."ScoreOrProba_4" - 0.08695652173913043) * 0.0 + 0.0925925925925926 WHEN (calibration_base_estimator_3."ScoreOrProba_4" < 0.7590361445783133) THEN (calibration_base_estimator_3."ScoreOrProba_4" - 0.6666666666666666) * 6.3174956082564755 + 0.0925925925925926 WHEN (calibration_base_estimator_3."ScoreOrProba_4" < 1.0) THEN (calibration_base_estimator_3."ScoreOrProba_4" - 0.7590361445783133) * 0.0 + 0.6761363636363636 ELSE 0.6761363636363636 END AS "Proba_4", CASE WHEN (calibration_base_estimator_3."ScoreOrProba_5" < 0.0) THEN 0.0014492753623188406 WHEN (calibration_base_estimator_3."ScoreOrProba_5" < 0.029411764705882353) THEN (calibration_base_estimator_3."ScoreOrProba_5" - 0.0) * 0.0 + 0.0014492753623188406 WHEN (calibration_base_estimator_3."ScoreOrProba_5" < 0.03571428571428571) THEN (calibration_base_estimator_3."ScoreOrProba_5" - 0.029411764705882353) * 1.476141499142902 + 0.0014492753623188406 WHEN (calibration_base_estimator_3."ScoreOrProba_5" < 0.3333333333333333) THEN (calibration_base_estimator_3."ScoreOrProba_5" - 0.03571428571428571) * 0.0 + 0.01075268817204301 WHEN (calibration_base_estimator_3."ScoreOrProba_5" < 1.0) THEN (calibration_base_estimator_3."ScoreOrProba_5" - 0.3333333333333333) * 1.4410138248847926 + 0.01075268817204301 ELSE 0.9714285714285714 END AS "Proba_5", CASE WHEN (calibration_base_estimator_3."ScoreOrProba_6" < 0.0) THEN 0.0015873015873015875 WHEN (calibration_base_estimator_3."ScoreOrProba_6" < 0.012048192771084338) THEN (calibration_base_estimator_3."ScoreOrProba_6" - 0.0) * 0.0 + 0.0015873015873015875 WHEN (calibration_base_estimator_3."ScoreOrProba_6" < 0.0625) THEN (calibration_base_estimator_3."ScoreOrProba_6" - 0.012048192771084338) * 1.6202795546079127 + 0.0015873015873015875 WHEN (calibration_base_estimator_3."ScoreOrProba_6" < 0.4) THEN (calibration_base_estimator_3."ScoreOrProba_6" - 0.0625) * 0.0 + 0.08333333333333333 WHEN (calibration_base_estimator_3."ScoreOrProba_6" < 0.5) THEN (calibration_base_estimator_3."ScoreOrProba_6" - 0.4) * 2.5000000000000004 + 0.08333333333333333 WHEN (calibration_base_estimator_3."ScoreOrProba_6" < 0.9896907216494846) THEN (calibration_base_estimator_3."ScoreOrProba_6" - 0.5) * 1.3614035087719298 + 0.3333333333333333 ELSE 1.0 END AS "Proba_6", CASE WHEN (calibration_base_estimator_3."ScoreOrProba_7" < 0.0) THEN 0.004878757078553797 WHEN (calibration_base_estimator_3."ScoreOrProba_7" < 0.08823529411764706) THEN (calibration_base_estimator_3."ScoreOrProba_7" - 0.0) * 0.0 + 0.004878757078553797 WHEN (calibration_base_estimator_3."ScoreOrProba_7" < 0.34782608695652173) THEN (calibration_base_estimator_3."ScoreOrProba_7" - 0.08823529411764706) * 1.6933023030548104 + 0.004878757078553797 WHEN (calibration_base_estimator_3."ScoreOrProba_7" < 0.8854166666666666) THEN (calibration_base_estimator_3."ScoreOrProba_7" - 0.34782608695652173) * 0.7515764213321081 + 0.4444444444444444 ELSE 0.8484848484848485 END AS "Proba_7", CASE WHEN (calibration_base_estimator_3."ScoreOrProba_8" < 0.0) THEN 0.003205128205128205 WHEN (calibration_base_estimator_3."ScoreOrProba_8" < 0.024096385542168676) THEN (calibration_base_estimator_3."ScoreOrProba_8" - 0.0) * 0.0 + 0.003205128205128205 WHEN (calibration_base_estimator_3."ScoreOrProba_8" < 0.029411764705882353) THEN (calibration_base_estimator_3."ScoreOrProba_8" - 0.024096385542168676) * 18.293098478582355 + 0.003205128205128205 WHEN (calibration_base_estimator_3."ScoreOrProba_8" < 0.08333333333333333) THEN (calibration_base_estimator_3."ScoreOrProba_8" - 0.029411764705882353) * 0.0 + 0.10043988269794721 WHEN (calibration_base_estimator_3."ScoreOrProba_8" < 0.3537117903930131) THEN (calibration_base_estimator_3."ScoreOrProba_8" - 0.08333333333333333) * 0.8266330894275001 + 0.10043988269794721 ELSE 0.323943661971831 END AS "Proba_8", CASE WHEN (calibration_base_estimator_3."ScoreOrProba_9" < 0.0) THEN 0.003992015968063873 WHEN (calibration_base_estimator_3."ScoreOrProba_9" < 0.013100436681222707) THEN (calibration_base_estimator_3."ScoreOrProba_9" - 0.0) * 0.0 + 0.003992015968063873 WHEN (calibration_base_estimator_3."ScoreOrProba_9" < 0.0784313725490196) THEN (calibration_base_estimator_3."ScoreOrProba_9" - 0.013100436681222707) * 1.4201874861868873 + 0.003992015968063873 WHEN (calibration_base_estimator_3."ScoreOrProba_9" < 0.391304347826087) THEN (calibration_base_estimator_3."ScoreOrProba_9" - 0.0784313725490196) * 1.111218540329905 + 0.0967741935483871 WHEN (calibration_base_estimator_3."ScoreOrProba_9" < 0.6428571428571429) THEN (calibration_base_estimator_3."ScoreOrProba_9" - 0.391304347826087) * 0.1567325987875571 + 0.4444444444444444 WHEN (calibration_base_estimator_3."ScoreOrProba_9" < 1.0) THEN (calibration_base_estimator_3."ScoreOrProba_9" - 0.6428571428571429) * 1.2297766749379655 + 0.4838709677419355 ELSE 0.9230769230769231 END AS "Proba_9" 
FROM calibration_base_estimator_3), 
"Normalized_Probas_3" AS 
(SELECT isotonic_cte_3."KEY" AS "KEY", isotonic_cte_3."Proba_0" / (isotonic_cte_3."Proba_0" + isotonic_cte_3."Proba_1" + isotonic_cte_3."Proba_2" + isotonic_cte_3."Proba_3" + isotonic_cte_3."Proba_4" + isotonic_cte_3."Proba_5" + isotonic_cte_3."Proba_6" + isotonic_cte_3."Proba_7" + isotonic_cte_3."Proba_8" + isotonic_cte_3."Proba_9") AS "Proba_0", isotonic_cte_3."Proba_1" / (isotonic_cte_3."Proba_0" + isotonic_cte_3."Proba_1" + isotonic_cte_3."Proba_2" + isotonic_cte_3."Proba_3" + isotonic_cte_3."Proba_4" + isotonic_cte_3."Proba_5" + isotonic_cte_3."Proba_6" + isotonic_cte_3."Proba_7" + isotonic_cte_3."Proba_8" + isotonic_cte_3."Proba_9") AS "Proba_1", isotonic_cte_3."Proba_2" / (isotonic_cte_3."Proba_0" + isotonic_cte_3."Proba_1" + isotonic_cte_3."Proba_2" + isotonic_cte_3."Proba_3" + isotonic_cte_3."Proba_4" + isotonic_cte_3."Proba_5" + isotonic_cte_3."Proba_6" + isotonic_cte_3."Proba_7" + isotonic_cte_3."Proba_8" + isotonic_cte_3."Proba_9") AS "Proba_2", isotonic_cte_3."Proba_3" / (isotonic_cte_3."Proba_0" + isotonic_cte_3."Proba_1" + isotonic_cte_3."Proba_2" + isotonic_cte_3."Proba_3" + isotonic_cte_3."Proba_4" + isotonic_cte_3."Proba_5" + isotonic_cte_3."Proba_6" + isotonic_cte_3."Proba_7" + isotonic_cte_3."Proba_8" + isotonic_cte_3."Proba_9") AS "Proba_3", isotonic_cte_3."Proba_4" / (isotonic_cte_3."Proba_0" + isotonic_cte_3."Proba_1" + isotonic_cte_3."Proba_2" + isotonic_cte_3."Proba_3" + isotonic_cte_3."Proba_4" + isotonic_cte_3."Proba_5" + isotonic_cte_3."Proba_6" + isotonic_cte_3."Proba_7" + isotonic_cte_3."Proba_8" + isotonic_cte_3."Proba_9") AS "Proba_4", isotonic_cte_3."Proba_5" / (isotonic_cte_3."Proba_0" + isotonic_cte_3."Proba_1" + isotonic_cte_3."Proba_2" + isotonic_cte_3."Proba_3" + isotonic_cte_3."Proba_4" + isotonic_cte_3."Proba_5" + isotonic_cte_3."Proba_6" + isotonic_cte_3."Proba_7" + isotonic_cte_3."Proba_8" + isotonic_cte_3."Proba_9") AS "Proba_5", isotonic_cte_3."Proba_6" / (isotonic_cte_3."Proba_0" + isotonic_cte_3."Proba_1" + isotonic_cte_3."Proba_2" + isotonic_cte_3."Proba_3" + isotonic_cte_3."Proba_4" + isotonic_cte_3."Proba_5" + isotonic_cte_3."Proba_6" + isotonic_cte_3."Proba_7" + isotonic_cte_3."Proba_8" + isotonic_cte_3."Proba_9") AS "Proba_6", isotonic_cte_3."Proba_7" / (isotonic_cte_3."Proba_0" + isotonic_cte_3."Proba_1" + isotonic_cte_3."Proba_2" + isotonic_cte_3."Proba_3" + isotonic_cte_3."Proba_4" + isotonic_cte_3."Proba_5" + isotonic_cte_3."Proba_6" + isotonic_cte_3."Proba_7" + isotonic_cte_3."Proba_8" + isotonic_cte_3."Proba_9") AS "Proba_7", isotonic_cte_3."Proba_8" / (isotonic_cte_3."Proba_0" + isotonic_cte_3."Proba_1" + isotonic_cte_3."Proba_2" + isotonic_cte_3."Proba_3" + isotonic_cte_3."Proba_4" + isotonic_cte_3."Proba_5" + isotonic_cte_3."Proba_6" + isotonic_cte_3."Proba_7" + isotonic_cte_3."Proba_8" + isotonic_cte_3."Proba_9") AS "Proba_8", isotonic_cte_3."Proba_9" / (isotonic_cte_3."Proba_0" + isotonic_cte_3."Proba_1" + isotonic_cte_3."Proba_2" + isotonic_cte_3."Proba_3" + isotonic_cte_3."Proba_4" + isotonic_cte_3."Proba_5" + isotonic_cte_3."Proba_6" + isotonic_cte_3."Proba_7" + isotonic_cte_3."Proba_8" + isotonic_cte_3."Proba_9") AS "Proba_9" 
FROM isotonic_cte_3)
 INSERT INTO "TMP_20180329233814_VBYG87_CalProb_AVG_B0" ("KEY", "Proba_0", "Proba_1", "Proba_2", "Proba_3", "Proba_4", "Proba_5", "Proba_6", "Proba_7", "Proba_8", "Proba_9") SELECT "CalProb_AVG_B0"."KEY", "CalProb_AVG_B0"."Proba_0", "CalProb_AVG_B0"."Proba_1", "CalProb_AVG_B0"."Proba_2", "CalProb_AVG_B0"."Proba_3", "CalProb_AVG_B0"."Proba_4", "CalProb_AVG_B0"."Proba_5", "CalProb_AVG_B0"."Proba_6", "CalProb_AVG_B0"."Proba_7", "CalProb_AVG_B0"."Proba_8", "CalProb_AVG_B0"."Proba_9" 
FROM (SELECT "CalProb_AVG_esu_0"."KEY" AS "KEY", "CalProb_AVG_esu_0"."Proba_0" AS "Proba_0", "CalProb_AVG_esu_0"."Proba_1" AS "Proba_1", "CalProb_AVG_esu_0"."Proba_2" AS "Proba_2", "CalProb_AVG_esu_0"."Proba_3" AS "Proba_3", "CalProb_AVG_esu_0"."Proba_4" AS "Proba_4", "CalProb_AVG_esu_0"."Proba_5" AS "Proba_5", "CalProb_AVG_esu_0"."Proba_6" AS "Proba_6", "CalProb_AVG_esu_0"."Proba_7" AS "Proba_7", "CalProb_AVG_esu_0"."Proba_8" AS "Proba_8", "CalProb_AVG_esu_0"."Proba_9" AS "Proba_9" 
FROM (SELECT "Normalized_Probas"."KEY" AS "KEY", "Normalized_Probas"."Proba_0" AS "Proba_0", "Normalized_Probas"."Proba_1" AS "Proba_1", "Normalized_Probas"."Proba_2" AS "Proba_2", "Normalized_Probas"."Proba_3" AS "Proba_3", "Normalized_Probas"."Proba_4" AS "Proba_4", "Normalized_Probas"."Proba_5" AS "Proba_5", "Normalized_Probas"."Proba_6" AS "Proba_6", "Normalized_Probas"."Proba_7" AS "Proba_7", "Normalized_Probas"."Proba_8" AS "Proba_8", "Normalized_Probas"."Proba_9" AS "Proba_9" 
FROM "Normalized_Probas" UNION ALL SELECT "Normalized_Probas_1"."KEY" AS "KEY", "Normalized_Probas_1"."Proba_0" AS "Proba_0", "Normalized_Probas_1"."Proba_1" AS "Proba_1", "Normalized_Probas_1"."Proba_2" AS "Proba_2", "Normalized_Probas_1"."Proba_3" AS "Proba_3", "Normalized_Probas_1"."Proba_4" AS "Proba_4", "Normalized_Probas_1"."Proba_5" AS "Proba_5", "Normalized_Probas_1"."Proba_6" AS "Proba_6", "Normalized_Probas_1"."Proba_7" AS "Proba_7", "Normalized_Probas_1"."Proba_8" AS "Proba_8", "Normalized_Probas_1"."Proba_9" AS "Proba_9" 
FROM "Normalized_Probas_1" UNION ALL SELECT "Normalized_Probas_2"."KEY" AS "KEY", "Normalized_Probas_2"."Proba_0" AS "Proba_0", "Normalized_Probas_2"."Proba_1" AS "Proba_1", "Normalized_Probas_2"."Proba_2" AS "Proba_2", "Normalized_Probas_2"."Proba_3" AS "Proba_3", "Normalized_Probas_2"."Proba_4" AS "Proba_4", "Normalized_Probas_2"."Proba_5" AS "Proba_5", "Normalized_Probas_2"."Proba_6" AS "Proba_6", "Normalized_Probas_2"."Proba_7" AS "Proba_7", "Normalized_Probas_2"."Proba_8" AS "Proba_8", "Normalized_Probas_2"."Proba_9" AS "Proba_9" 
FROM "Normalized_Probas_2" UNION ALL SELECT "Normalized_Probas_3"."KEY" AS "KEY", "Normalized_Probas_3"."Proba_0" AS "Proba_0", "Normalized_Probas_3"."Proba_1" AS "Proba_1", "Normalized_Probas_3"."Proba_2" AS "Proba_2", "Normalized_Probas_3"."Proba_3" AS "Proba_3", "Normalized_Probas_3"."Proba_4" AS "Proba_4", "Normalized_Probas_3"."Proba_5" AS "Proba_5", "Normalized_Probas_3"."Proba_6" AS "Proba_6", "Normalized_Probas_3"."Proba_7" AS "Proba_7", "Normalized_Probas_3"."Proba_8" AS "Proba_8", "Normalized_Probas_3"."Proba_9" AS "Proba_9" 
FROM "Normalized_Probas_3") AS "CalProb_AVG_esu_0") AS "CalProb_AVG_B0"
-- Code For temporary table TMP_20180329233814_Z8GYFN_CalProb_AVG_Union part 1/2. Create 


CREATE TEMPORARY TABLE "TMP_20180329233814_Z8GYFN_CalProb_AVG_Union" (
	"KEY" BIGINT, 
	"Proba_0" FLOAT, 
	"Proba_1" FLOAT, 
	"Proba_2" FLOAT, 
	"Proba_3" FLOAT, 
	"Proba_4" FLOAT, 
	"Proba_5" FLOAT, 
	"Proba_6" FLOAT, 
	"Proba_7" FLOAT, 
	"Proba_8" FLOAT, 
	"Proba_9" FLOAT
)


-- Code For temporary table TMP_20180329233814_Z8GYFN_CalProb_AVG_Union part 2/2. Populate

INSERT INTO "TMP_20180329233814_Z8GYFN_CalProb_AVG_Union" ("KEY", "Proba_0", "Proba_1", "Proba_2", "Proba_3", "Proba_4", "Proba_5", "Proba_6", "Proba_7", "Proba_8", "Proba_9") SELECT "CalProb_AVG_Union"."KEY", "CalProb_AVG_Union"."Proba_0", "CalProb_AVG_Union"."Proba_1", "CalProb_AVG_Union"."Proba_2", "CalProb_AVG_Union"."Proba_3", "CalProb_AVG_Union"."Proba_4", "CalProb_AVG_Union"."Proba_5", "CalProb_AVG_Union"."Proba_6", "CalProb_AVG_Union"."Proba_7", "CalProb_AVG_Union"."Proba_8", "CalProb_AVG_Union"."Proba_9" 
FROM (SELECT "CalProb_AVG_EnsembleUnion"."KEY" AS "KEY", "CalProb_AVG_EnsembleUnion"."Proba_0" AS "Proba_0", "CalProb_AVG_EnsembleUnion"."Proba_1" AS "Proba_1", "CalProb_AVG_EnsembleUnion"."Proba_2" AS "Proba_2", "CalProb_AVG_EnsembleUnion"."Proba_3" AS "Proba_3", "CalProb_AVG_EnsembleUnion"."Proba_4" AS "Proba_4", "CalProb_AVG_EnsembleUnion"."Proba_5" AS "Proba_5", "CalProb_AVG_EnsembleUnion"."Proba_6" AS "Proba_6", "CalProb_AVG_EnsembleUnion"."Proba_7" AS "Proba_7", "CalProb_AVG_EnsembleUnion"."Proba_8" AS "Proba_8", "CalProb_AVG_EnsembleUnion"."Proba_9" AS "Proba_9" 
FROM (SELECT "CalProb_AVG_B0"."KEY" AS "KEY", "CalProb_AVG_B0"."Proba_0" AS "Proba_0", "CalProb_AVG_B0"."Proba_1" AS "Proba_1", "CalProb_AVG_B0"."Proba_2" AS "Proba_2", "CalProb_AVG_B0"."Proba_3" AS "Proba_3", "CalProb_AVG_B0"."Proba_4" AS "Proba_4", "CalProb_AVG_B0"."Proba_5" AS "Proba_5", "CalProb_AVG_B0"."Proba_6" AS "Proba_6", "CalProb_AVG_B0"."Proba_7" AS "Proba_7", "CalProb_AVG_B0"."Proba_8" AS "Proba_8", "CalProb_AVG_B0"."Proba_9" AS "Proba_9" 
FROM "TMP_20180329233814_VBYG87_CalProb_AVG_B0" AS "CalProb_AVG_B0") AS "CalProb_AVG_EnsembleUnion") AS "CalProb_AVG_Union"

-- Model deployment code

WITH "CalProb_AVG_avg" AS 
(SELECT "T"."KEY" AS "KEY", "T"."Proba_0" AS "Proba_0", "T"."Proba_1" AS "Proba_1", "T"."Proba_2" AS "Proba_2", "T"."Proba_3" AS "Proba_3", "T"."Proba_4" AS "Proba_4", "T"."Proba_5" AS "Proba_5", "T"."Proba_6" AS "Proba_6", "T"."Proba_7" AS "Proba_7", "T"."Proba_8" AS "Proba_8", "T"."Proba_9" AS "Proba_9" 
FROM (SELECT "CalProb_AVG_Union"."KEY" AS "KEY", avg(CAST("CalProb_AVG_Union"."Proba_0" AS FLOAT)) AS "Proba_0", avg(CAST("CalProb_AVG_Union"."Proba_1" AS FLOAT)) AS "Proba_1", avg(CAST("CalProb_AVG_Union"."Proba_2" AS FLOAT)) AS "Proba_2", avg(CAST("CalProb_AVG_Union"."Proba_3" AS FLOAT)) AS "Proba_3", avg(CAST("CalProb_AVG_Union"."Proba_4" AS FLOAT)) AS "Proba_4", avg(CAST("CalProb_AVG_Union"."Proba_5" AS FLOAT)) AS "Proba_5", avg(CAST("CalProb_AVG_Union"."Proba_6" AS FLOAT)) AS "Proba_6", avg(CAST("CalProb_AVG_Union"."Proba_7" AS FLOAT)) AS "Proba_7", avg(CAST("CalProb_AVG_Union"."Proba_8" AS FLOAT)) AS "Proba_8", avg(CAST("CalProb_AVG_Union"."Proba_9" AS FLOAT)) AS "Proba_9" 
FROM "TMP_20180329233814_Z8GYFN_CalProb_AVG_Union" AS "CalProb_AVG_Union" GROUP BY "CalProb_AVG_Union"."KEY") AS "T"), 
orig_cte AS 
(SELECT "CalProb_AVG_avg"."KEY" AS "KEY", CAST(NULL AS FLOAT) AS "Score_0", CAST(NULL AS FLOAT) AS "Score_1", CAST(NULL AS FLOAT) AS "Score_2", CAST(NULL AS FLOAT) AS "Score_3", CAST(NULL AS FLOAT) AS "Score_4", CAST(NULL AS FLOAT) AS "Score_5", CAST(NULL AS FLOAT) AS "Score_6", CAST(NULL AS FLOAT) AS "Score_7", CAST(NULL AS FLOAT) AS "Score_8", CAST(NULL AS FLOAT) AS "Score_9", "CalProb_AVG_avg"."Proba_0" AS "Proba_0", "CalProb_AVG_avg"."Proba_1" AS "Proba_1", "CalProb_AVG_avg"."Proba_2" AS "Proba_2", "CalProb_AVG_avg"."Proba_3" AS "Proba_3", "CalProb_AVG_avg"."Proba_4" AS "Proba_4", "CalProb_AVG_avg"."Proba_5" AS "Proba_5", "CalProb_AVG_avg"."Proba_6" AS "Proba_6", "CalProb_AVG_avg"."Proba_7" AS "Proba_7", "CalProb_AVG_avg"."Proba_8" AS "Proba_8", "CalProb_AVG_avg"."Proba_9" AS "Proba_9", CAST(NULL AS FLOAT) AS "LogProba_0", CAST(NULL AS FLOAT) AS "LogProba_1", CAST(NULL AS FLOAT) AS "LogProba_2", CAST(NULL AS FLOAT) AS "LogProba_3", CAST(NULL AS FLOAT) AS "LogProba_4", CAST(NULL AS FLOAT) AS "LogProba_5", CAST(NULL AS FLOAT) AS "LogProba_6", CAST(NULL AS FLOAT) AS "LogProba_7", CAST(NULL AS FLOAT) AS "LogProba_8", CAST(NULL AS FLOAT) AS "LogProba_9", CAST(NULL AS BIGINT) AS "Decision", CAST(NULL AS FLOAT) AS "DecisionProba" 
FROM "CalProb_AVG_avg"), 
score_class_union AS 
(SELECT scu."KEY_u" AS "KEY_u", scu.class AS class, scu."LogProba" AS "LogProba", scu."Proba" AS "Proba", scu."Score" AS "Score" 
FROM (SELECT orig_cte."KEY" AS "KEY_u", 0 AS class, orig_cte."LogProba_0" AS "LogProba", orig_cte."Proba_0" AS "Proba", orig_cte."Score_0" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 1 AS class, orig_cte."LogProba_1" AS "LogProba", orig_cte."Proba_1" AS "Proba", orig_cte."Score_1" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 2 AS class, orig_cte."LogProba_2" AS "LogProba", orig_cte."Proba_2" AS "Proba", orig_cte."Score_2" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 3 AS class, orig_cte."LogProba_3" AS "LogProba", orig_cte."Proba_3" AS "Proba", orig_cte."Score_3" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 4 AS class, orig_cte."LogProba_4" AS "LogProba", orig_cte."Proba_4" AS "Proba", orig_cte."Score_4" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 5 AS class, orig_cte."LogProba_5" AS "LogProba", orig_cte."Proba_5" AS "Proba", orig_cte."Score_5" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 6 AS class, orig_cte."LogProba_6" AS "LogProba", orig_cte."Proba_6" AS "Proba", orig_cte."Score_6" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 7 AS class, orig_cte."LogProba_7" AS "LogProba", orig_cte."Proba_7" AS "Proba", orig_cte."Score_7" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 8 AS class, orig_cte."LogProba_8" AS "LogProba", orig_cte."Proba_8" AS "Proba", orig_cte."Score_8" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 9 AS class, orig_cte."LogProba_9" AS "LogProba", orig_cte."Proba_9" AS "Proba", orig_cte."Score_9" AS "Score" 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte."KEY" AS "KEY", orig_cte."Score_0" AS "Score_0", orig_cte."Score_1" AS "Score_1", orig_cte."Score_2" AS "Score_2", orig_cte."Score_3" AS "Score_3", orig_cte."Score_4" AS "Score_4", orig_cte."Score_5" AS "Score_5", orig_cte."Score_6" AS "Score_6", orig_cte."Score_7" AS "Score_7", orig_cte."Score_8" AS "Score_8", orig_cte."Score_9" AS "Score_9", orig_cte."Proba_0" AS "Proba_0", orig_cte."Proba_1" AS "Proba_1", orig_cte."Proba_2" AS "Proba_2", orig_cte."Proba_3" AS "Proba_3", orig_cte."Proba_4" AS "Proba_4", orig_cte."Proba_5" AS "Proba_5", orig_cte."Proba_6" AS "Proba_6", orig_cte."Proba_7" AS "Proba_7", orig_cte."Proba_8" AS "Proba_8", orig_cte."Proba_9" AS "Proba_9", orig_cte."LogProba_0" AS "LogProba_0", orig_cte."LogProba_1" AS "LogProba_1", orig_cte."LogProba_2" AS "LogProba_2", orig_cte."LogProba_3" AS "LogProba_3", orig_cte."LogProba_4" AS "LogProba_4", orig_cte."LogProba_5" AS "LogProba_5", orig_cte."LogProba_6" AS "LogProba_6", orig_cte."LogProba_7" AS "LogProba_7", orig_cte."LogProba_8" AS "LogProba_8", orig_cte."LogProba_9" AS "LogProba_9", orig_cte."Decision" AS "Decision", orig_cte."DecisionProba" AS "DecisionProba", max_select."KEY_m" AS "KEY_m", max_select."max_Proba" AS "max_Proba" 
FROM orig_cte LEFT OUTER JOIN (SELECT score_class_union."KEY_u" AS "KEY_m", max(score_class_union."Proba") AS "max_Proba" 
FROM score_class_union GROUP BY score_class_union."KEY_u") AS max_select ON orig_cte."KEY" = max_select."KEY_m"), 
union_with_max AS 
(SELECT score_class_union."KEY_u" AS "KEY_u", score_class_union.class AS class, score_class_union."LogProba" AS "LogProba", score_class_union."Proba" AS "Proba", score_class_union."Score" AS "Score", score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Score_2" AS "Score_2", score_max."Score_3" AS "Score_3", score_max."Score_4" AS "Score_4", score_max."Score_5" AS "Score_5", score_max."Score_6" AS "Score_6", score_max."Score_7" AS "Score_7", score_max."Score_8" AS "Score_8", score_max."Score_9" AS "Score_9", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."Proba_2" AS "Proba_2", score_max."Proba_3" AS "Proba_3", score_max."Proba_4" AS "Proba_4", score_max."Proba_5" AS "Proba_5", score_max."Proba_6" AS "Proba_6", score_max."Proba_7" AS "Proba_7", score_max."Proba_8" AS "Proba_8", score_max."Proba_9" AS "Proba_9", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."LogProba_2" AS "LogProba_2", score_max."LogProba_3" AS "LogProba_3", score_max."LogProba_4" AS "LogProba_4", score_max."LogProba_5" AS "LogProba_5", score_max."LogProba_6" AS "LogProba_6", score_max."LogProba_7" AS "LogProba_7", score_max."LogProba_8" AS "LogProba_8", score_max."LogProba_9" AS "LogProba_9", score_max."Decision" AS "Decision", score_max."DecisionProba" AS "DecisionProba", score_max."KEY_m" AS "KEY_m", score_max."max_Proba" AS "max_Proba" 
FROM score_class_union LEFT OUTER JOIN score_max ON score_class_union."KEY_u" = score_max."KEY"), 
arg_max_cte AS 
(SELECT score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Score_2" AS "Score_2", score_max."Score_3" AS "Score_3", score_max."Score_4" AS "Score_4", score_max."Score_5" AS "Score_5", score_max."Score_6" AS "Score_6", score_max."Score_7" AS "Score_7", score_max."Score_8" AS "Score_8", score_max."Score_9" AS "Score_9", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."Proba_2" AS "Proba_2", score_max."Proba_3" AS "Proba_3", score_max."Proba_4" AS "Proba_4", score_max."Proba_5" AS "Proba_5", score_max."Proba_6" AS "Proba_6", score_max."Proba_7" AS "Proba_7", score_max."Proba_8" AS "Proba_8", score_max."Proba_9" AS "Proba_9", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."LogProba_2" AS "LogProba_2", score_max."LogProba_3" AS "LogProba_3", score_max."LogProba_4" AS "LogProba_4", score_max."LogProba_5" AS "LogProba_5", score_max."LogProba_6" AS "LogProba_6", score_max."LogProba_7" AS "LogProba_7", score_max."LogProba_8" AS "LogProba_8", score_max."LogProba_9" AS "LogProba_9", score_max."Decision" AS "Decision", score_max."DecisionProba" AS "DecisionProba", score_max."KEY_m" AS "KEY_m", score_max."max_Proba" AS "max_Proba", "arg_max_t_Proba"."KEY_Proba" AS "KEY_Proba", "arg_max_t_Proba"."arg_max_Proba" AS "arg_max_Proba" 
FROM score_max LEFT OUTER JOIN (SELECT union_with_max."KEY" AS "KEY_Proba", min(union_with_max.class) AS "arg_max_Proba" 
FROM union_with_max 
WHERE union_with_max."max_Proba" <= union_with_max."Proba" GROUP BY union_with_max."KEY") AS "arg_max_t_Proba" ON score_max."KEY" = "arg_max_t_Proba"."KEY_Proba")
 SELECT arg_max_cte."KEY" AS "KEY", arg_max_cte."Score_0" AS "Score_0", arg_max_cte."Score_1" AS "Score_1", arg_max_cte."Score_2" AS "Score_2", arg_max_cte."Score_3" AS "Score_3", arg_max_cte."Score_4" AS "Score_4", arg_max_cte."Score_5" AS "Score_5", arg_max_cte."Score_6" AS "Score_6", arg_max_cte."Score_7" AS "Score_7", arg_max_cte."Score_8" AS "Score_8", arg_max_cte."Score_9" AS "Score_9", arg_max_cte."Proba_0" AS "Proba_0", arg_max_cte."Proba_1" AS "Proba_1", arg_max_cte."Proba_2" AS "Proba_2", arg_max_cte."Proba_3" AS "Proba_3", arg_max_cte."Proba_4" AS "Proba_4", arg_max_cte."Proba_5" AS "Proba_5", arg_max_cte."Proba_6" AS "Proba_6", arg_max_cte."Proba_7" AS "Proba_7", arg_max_cte."Proba_8" AS "Proba_8", arg_max_cte."Proba_9" AS "Proba_9", CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN ln(arg_max_cte."Proba_0") ELSE -1.79769313486231e+308 END AS "LogProba_0", CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN ln(arg_max_cte."Proba_1") ELSE -1.79769313486231e+308 END AS "LogProba_1", CASE WHEN (arg_max_cte."Proba_2" IS NULL OR arg_max_cte."Proba_2" > 0.0) THEN ln(arg_max_cte."Proba_2") ELSE -1.79769313486231e+308 END AS "LogProba_2", CASE WHEN (arg_max_cte."Proba_3" IS NULL OR arg_max_cte."Proba_3" > 0.0) THEN ln(arg_max_cte."Proba_3") ELSE -1.79769313486231e+308 END AS "LogProba_3", CASE WHEN (arg_max_cte."Proba_4" IS NULL OR arg_max_cte."Proba_4" > 0.0) THEN ln(arg_max_cte."Proba_4") ELSE -1.79769313486231e+308 END AS "LogProba_4", CASE WHEN (arg_max_cte."Proba_5" IS NULL OR arg_max_cte."Proba_5" > 0.0) THEN ln(arg_max_cte."Proba_5") ELSE -1.79769313486231e+308 END AS "LogProba_5", CASE WHEN (arg_max_cte."Proba_6" IS NULL OR arg_max_cte."Proba_6" > 0.0) THEN ln(arg_max_cte."Proba_6") ELSE -1.79769313486231e+308 END AS "LogProba_6", CASE WHEN (arg_max_cte."Proba_7" IS NULL OR arg_max_cte."Proba_7" > 0.0) THEN ln(arg_max_cte."Proba_7") ELSE -1.79769313486231e+308 END AS "LogProba_7", CASE WHEN (arg_max_cte."Proba_8" IS NULL OR arg_max_cte."Proba_8" > 0.0) THEN ln(arg_max_cte."Proba_8") ELSE -1.79769313486231e+308 END AS "LogProba_8", CASE WHEN (arg_max_cte."Proba_9" IS NULL OR arg_max_cte."Proba_9" > 0.0) THEN ln(arg_max_cte."Proba_9") ELSE -1.79769313486231e+308 END AS "LogProba_9", arg_max_cte."arg_max_Proba" AS "Decision", arg_max_cte."max_Proba" AS "DecisionProba" 
FROM arg_max_cte