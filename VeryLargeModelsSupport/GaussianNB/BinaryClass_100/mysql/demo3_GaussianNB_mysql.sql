-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2018

-- This SQL code can contain one or more statements, to be executed in the order they appear in this file.



-- Model deployment code

WITH `RawScores` AS 
(SELECT `ADS`.`KEY` AS `KEY`, NULL AS `LogProba_0`, NULL AS `Proba_0`, -0.6443570163905132 + (-0.5 * 1.6064753296731205 - (0.5 * (`ADS`.`Feature_0` - 0.019794588624992563) * (`ADS`.`Feature_0` - 0.019794588624992563)) / 0.7934206557759292) + (-0.5 * 1.7125257291396823 - (0.5 * (`ADS`.`Feature_1` - 0.05387954877089766) * (`ADS`.`Feature_1` - 0.05387954877089766)) / 0.8821869029927489) + (-0.5 * 1.6857829248906053 - (0.5 * (`ADS`.`Feature_2` - 0.11488781572325525) * (`ADS`.`Feature_2` - 0.11488781572325525)) / 0.8589074180861208) + (-0.5 * 1.6463546443509645 - (0.5 * (`ADS`.`Feature_3` - -0.05949727299190275) * (`ADS`.`Feature_3` - -0.05949727299190275)) / 0.8257011109804056) + (-0.5 * 1.2478606324023125 - (0.5 * (`ADS`.`Feature_4` - 0.8930763647512598) * (`ADS`.`Feature_4` - 0.8930763647512598)) / 0.5543181749908661) + (-0.5 * 1.6373474462395425 - (0.5 * (`ADS`.`Feature_5` - 0.08949249059529617) * (`ADS`.`Feature_5` - 0.08949249059529617)) / 0.8182972515632199) + (-0.5 * 1.6425410232950368 - (0.5 * (`ADS`.`Feature_6` - -0.06522451547763095) * (`ADS`.`Feature_6` - -0.06522451547763095)) / 0.8225581965890518) + (-0.5 * 1.7792459519694408 - (0.5 * (`ADS`.`Feature_7` - -0.08791441649040836) * (`ADS`.`Feature_7` - -0.08791441649040836)) / 0.943054584219679) + (-0.5 * 2.0060300416699754 - (0.5 * (`ADS`.`Feature_8` - 0.025350209804008636) * (`ADS`.`Feature_8` - 0.025350209804008636)) / 1.1831175845260433) + (-0.5 * 1.2430270942119834 - (0.5 * (`ADS`.`Feature_9` - 0.016900580854820914) * (`ADS`.`Feature_9` - 0.016900580854820914)) / 0.551645321795294) + (-0.5 * 1.9154569897067082 - (0.5 * (`ADS`.`Feature_10` - 0.1875007620182646) * (`ADS`.`Feature_10` - 0.1875007620182646)) / 1.0806685996049772) + (-0.5 * 1.6761367913426353 - (0.5 * (`ADS`.`Feature_11` - -0.09483651079466747) * (`ADS`.`Feature_11` - -0.09483651079466747)) / 0.8506621140119561) + (-0.5 * 1.6866336870574838 - (0.5 * (`ADS`.`Feature_12` - -0.1785982020829447) * (`ADS`.`Feature_12` - -0.1785982020829447)) / 0.8596384549474384) + (-0.5 * 1.9936551532859998 - (0.5 * (`ADS`.`Feature_13` - -0.18191036873091165) * (`ADS`.`Feature_13` - -0.18191036873091165)) / 1.1685668539940415) + (-0.5 * 1.9883031405068585 - (0.5 * (`ADS`.`Feature_14` - -0.004347323688788593) * (`ADS`.`Feature_14` - -0.004347323688788593)) / 1.1623293756788855) + (-0.5 * 1.3696453084050753 - (0.5 * (`ADS`.`Feature_15` - 0.1283845183799563) * (`ADS`.`Feature_15` - 0.1283845183799563)) / 0.6261084012080401) + (-0.5 * 1.8591734958429065 - (0.5 * (`ADS`.`Feature_16` - -0.14735711589120865) * (`ADS`.`Feature_16` - -0.14735711589120865)) / 1.021524816783869) + (-0.5 * 1.7915319770706803 - (0.5 * (`ADS`.`Feature_17` - -0.2276796172533036) * (`ADS`.`Feature_17` - -0.2276796172533036)) / 0.9547124442514188) + (-0.5 * 2.4315248968223777 - (0.5 * (`ADS`.`Feature_18` - 0.019408616103087622) * (`ADS`.`Feature_18` - 0.019408616103087622)) / 1.8105810763483352) + (-0.5 * 1.5351296998892046 - (0.5 * (`ADS`.`Feature_19` - -0.004980786663607562) * (`ADS`.`Feature_19` - -0.004980786663607562)) / 0.7387857148024587) + (-0.5 * 1.7764010527509912 - (0.5 * (`ADS`.`Feature_20` - -0.012853936651835691) * (`ADS`.`Feature_20` - -0.012853936651835691)) / 0.9403755016369684) + (-0.5 * 2.106030568703799 - (0.5 * (`ADS`.`Feature_21` - 0.22277073351109422) * (`ADS`.`Feature_21` - 0.22277073351109422)) / 1.307547836203844) + (-0.5 * 1.924432491534165 - (0.5 * (`ADS`.`Feature_22` - 0.15328063742696757) * (`ADS`.`Feature_22` - 0.15328063742696757)) / 1.0904118022532128) + (-0.5 * 1.774636389414633 - (0.5 * (`ADS`.`Feature_23` - 0.23265290530960525) * (`ADS`.`Feature_23` - 0.23265290530960525)) / 0.9387175187878449) + (-0.5 * 1.3255587162120526 - (0.5 * (`ADS`.`Feature_24` - 0.10114909320441352) * (`ADS`.`Feature_24` - 0.10114909320441352)) / 0.5991050322783882) + (-0.5 * 1.6422548768220113 - (0.5 * (`ADS`.`Feature_25` - 0.023392448730903966) * (`ADS`.`Feature_25` - 0.023392448730903966)) / 0.8223228581344799) + (-0.5 * 1.7072868885589323 - (0.5 * (`ADS`.`Feature_26` - 0.10891851470116136) * (`ADS`.`Feature_26` - 0.10891851470116136)) / 0.8775773513412668) + (-0.5 * 1.940207243070877 - (0.5 * (`ADS`.`Feature_27` - -0.032262110915383495) * (`ADS`.`Feature_27` - -0.032262110915383495)) / 1.1077491642739135) + (-0.5 * 1.8514673726622903 - (0.5 * (`ADS`.`Feature_28` - -0.022204573180693993) * (`ADS`.`Feature_28` - -0.022204573180693993)) / 1.0136830742370346) + (-0.5 * 1.8063027379560272 - (0.5 * (`ADS`.`Feature_29` - 0.036693650734853304) * (`ADS`.`Feature_29` - 0.036693650734853304)) / 0.9689189355313023) + (-0.5 * 1.9677772693314057 - (0.5 * (`ADS`.`Feature_30` - 0.0316765321536491) * (`ADS`.`Feature_30` - 0.0316765321536491)) / 1.1387147372505586) + (-0.5 * 1.6602227381344976 - (0.5 * (`ADS`.`Feature_31` - 0.0015193616563879938) * (`ADS`.`Feature_31` - 0.0015193616563879938)) / 0.8372317808285927) + (-0.5 * 1.8723405353429783 - (0.5 * (`ADS`.`Feature_32` - 0.10018871048433792) * (`ADS`.`Feature_32` - 0.10018871048433792)) / 1.035064215685892) + (-0.5 * 2.1200782248300287 - (0.5 * (`ADS`.`Feature_33` - 0.39243511789808394) * (`ADS`.`Feature_33` - 0.39243511789808394)) / 1.3260454383657048) + (-0.5 * 1.8121961066145151 - (0.5 * (`ADS`.`Feature_34` - 0.32898340767368317) * (`ADS`.`Feature_34` - 0.32898340767368317)) / 0.9746459912680695) + (-0.5 * 0.7484729054781968 - (0.5 * (`ADS`.`Feature_35` - -0.021088501351309914) * (`ADS`.`Feature_35` - -0.021088501351309914)) / 0.33641688432362665) + (-0.5 * 1.7294345641212958 - (0.5 * (`ADS`.`Feature_36` - 0.07008004118550992) * (`ADS`.`Feature_36` - 0.07008004118550992)) / 0.8972304820336925) + (-0.5 * 1.5873140197657747 - (0.5 * (`ADS`.`Feature_37` - 0.282916623698697) * (`ADS`.`Feature_37` - 0.282916623698697)) / 0.7783624053296255) + (-0.5 * 1.988239452786206 - (0.5 * (`ADS`.`Feature_38` - 0.09888704165824835) * (`ADS`.`Feature_38` - 0.09888704165824835)) / 1.162255351927528) + (-0.5 * 1.9272806063688106 - (0.5 * (`ADS`.`Feature_39` - 0.20870520227015488) * (`ADS`.`Feature_39` - 0.20870520227015488)) / 1.0935218470631352) + (-0.5 * 1.9525697492138667 - (0.5 * (`ADS`.`Feature_40` - -0.12590656007024434) * (`ADS`.`Feature_40` - -0.12590656007024434)) / 1.1215287195450232) + (-0.5 * 1.6400802293548014 - (0.5 * (`ADS`.`Feature_41` - 0.12909574543337726) * (`ADS`.`Feature_41` - 0.12909574543337726)) / 0.820536538825162) + (-0.5 * 2.110474659493097 - (0.5 * (`ADS`.`Feature_42` - -0.03923330293767345) * (`ADS`.`Feature_42` - -0.03923330293767345)) / 1.313371628645498) + (-0.5 * 1.5848958983841959 - (0.5 * (`ADS`.`Feature_43` - 0.05987753646448564) * (`ADS`.`Feature_43` - 0.05987753646448564)) / 0.776482504385046) + (-0.5 * 1.976760850067344 - (0.5 * (`ADS`.`Feature_44` - 0.15335804412212967) * (`ADS`.`Feature_44` - 0.15335804412212967)) / 1.1489905607640682) + (-0.5 * 2.0948839029028514 - (0.5 * (`ADS`.`Feature_45` - -0.009250535507466956) * (`ADS`.`Feature_45` - -0.009250535507466956)) / 1.2930539666841827) + (-0.5 * 1.81891240553783 - (0.5 * (`ADS`.`Feature_46` - -0.2990948797859349) * (`ADS`.`Feature_46` - -0.2990948797859349)) / 0.9812140368790367) + (-0.5 * 1.9306080231128349 - (0.5 * (`ADS`.`Feature_47` - 0.23739694973613715) * (`ADS`.`Feature_47` - 0.23739694973613715)) / 1.0971665102609667) + (-0.5 * 1.8261970395063323 - (0.5 * (`ADS`.`Feature_48` - 0.33709486949609224) * (`ADS`.`Feature_48` - 0.33709486949609224)) / 0.9883879198141011) + (-0.5 * 2.2396593039814876 - (0.5 * (`ADS`.`Feature_49` - 0.2271138706578479) * (`ADS`.`Feature_49` - 0.2271138706578479)) / 1.4944858543708086) + (-0.5 * 2.261192981795136 - (0.5 * (`ADS`.`Feature_50` - -0.13205314511587624) * (`ADS`.`Feature_50` - -0.13205314511587624)) / 1.5270166278215054) + (-0.5 * 2.128859963930122 - (0.5 * (`ADS`.`Feature_51` - -0.02533519451411991) * (`ADS`.`Feature_51` - -0.02533519451411991)) / 1.3377417050546758) + (-0.5 * 1.7972903483148517 - (0.5 * (`ADS`.`Feature_52` - 0.1856209425156102) * (`ADS`.`Feature_52` - 0.1856209425156102)) / 0.9602258919412131) + (-0.5 * 1.3842637172275094 - (0.5 * (`ADS`.`Feature_53` - -0.1671972903482089) * (`ADS`.`Feature_53` - -0.1671972903482089)) / 0.6353283359825292) + (-0.5 * 2.1929590478716836 - (0.5 * (`ADS`.`Feature_54` - 0.3113753089730967) * (`ADS`.`Feature_54` - 0.3113753089730967)) / 1.426297579449859) + (-0.5 * 1.8672938123964677 - (0.5 * (`ADS`.`Feature_55` - 0.12226634355631164) * (`ADS`.`Feature_55` - 0.12226634355631164)) / 1.0298536924501425) + (-0.5 * 1.7127836277525608 - (0.5 * (`ADS`.`Feature_56` - -0.05067441188833494) * (`ADS`.`Feature_56` - -0.05067441188833494)) / 0.8824144471117256) + (-0.5 * 0.7742792892363299 - (0.5 * (`ADS`.`Feature_57` - -0.925345520617862) * (`ADS`.`Feature_57` - -0.925345520617862)) / 0.3452115790996632) + (-0.5 * 1.6249673249372794 - (0.5 * (`ADS`.`Feature_58` - -0.10667841264574966) * (`ADS`.`Feature_58` - -0.10667841264574966)) / 0.8082290834917365) + (-0.5 * 2.239013442071603 - (0.5 * (`ADS`.`Feature_59` - 0.06698266262837926) * (`ADS`.`Feature_59` - 0.06698266262837926)) / 1.4935209345186402) + (-0.5 * 1.6081650991899892 - (0.5 * (`ADS`.`Feature_60` - 0.18222738617493864) * (`ADS`.`Feature_60` - 0.18222738617493864)) / 0.7947624871877417) + (-0.5 * 1.5510614739424824 - (0.5 * (`ADS`.`Feature_61` - 0.05715696849665879) * (`ADS`.`Feature_61` - 0.05715696849665879)) / 0.7506501416153605) + (-0.5 * 1.6413513566718088 - (0.5 * (`ADS`.`Feature_62` - -0.08609982182153482) * (`ADS`.`Feature_62` - -0.08609982182153482)) / 0.8215802084121995) + (-0.5 * 1.6178994921917618 - (0.5 * (`ADS`.`Feature_63` - -0.1364691018600721) * (`ADS`.`Feature_63` - -0.1364691018600721)) / 0.8025367952762278) + (-0.5 * 1.6767857431036326 - (0.5 * (`ADS`.`Feature_64` - -0.12247573821464235) * (`ADS`.`Feature_64` - -0.12247573821464235)) / 0.8512143318508475) + (-0.5 * 1.7759744422183603 - (0.5 * (`ADS`.`Feature_65` - -0.10898598628278744) * (`ADS`.`Feature_65` - -0.10898598628278744)) / 0.9399744131037215) + (-0.5 * 1.6430998014906433 - (0.5 * (`ADS`.`Feature_66` - -0.05332547881563886) * (`ADS`.`Feature_66` - -0.05332547881563886)) / 0.8230179526127814) + (-0.5 * 1.4670429430850296 - (0.5 * (`ADS`.`Feature_67` - -0.4176360500803034) * (`ADS`.`Feature_67` - -0.4176360500803034)) / 0.6901584132477199) + (-0.5 * 1.9391682684893647 - (0.5 * (`ADS`.`Feature_68` - -0.14841543337174562) * (`ADS`.`Feature_68` - -0.14841543337174562)) / 1.1065988387325187) + (-0.5 * 1.6446311366376236 - (0.5 * (`ADS`.`Feature_69` - 0.24335263210713945) * (`ADS`.`Feature_69` - 0.24335263210713945)) / 0.8242792344063093) + (-0.5 * 1.6575081037015602 - (0.5 * (`ADS`.`Feature_70` - 0.08801496346012337) * (`ADS`.`Feature_70` - 0.08801496346012337)) / 0.8349620846994658) + (-0.5 * 1.6434248639150524 - (0.5 * (`ADS`.`Feature_71` - -0.0850578189049838) * (`ADS`.`Feature_71` - -0.0850578189049838)) / 0.8232855283108365) + (-0.5 * 1.861765893446783 - (0.5 * (`ADS`.`Feature_72` - -0.26039944268284065) * (`ADS`.`Feature_72` - -0.26039944268284065)) / 1.024176450831044) + (-0.5 * 1.8058146759301592 - (0.5 * (`ADS`.`Feature_73` - 0.21076983196756766) * (`ADS`.`Feature_73` - 0.21076983196756766)) / 0.9684461583743982) + (-0.5 * 1.8927709802147954 - (0.5 * (`ADS`.`Feature_74` - -0.1683610522305435) * (`ADS`.`Feature_74` - -0.1683610522305435)) / 1.0564285362473878) + (-0.5 * 2.0532127615744207 - (0.5 * (`ADS`.`Feature_75` - 0.23572070105917883) * (`ADS`.`Feature_75` - 0.23572070105917883)) / 1.2402781824788423) + (-0.5 * 1.924258708590989 - (0.5 * (`ADS`.`Feature_76` - -0.225280368081331) * (`ADS`.`Feature_76` - -0.225280368081331)) / 1.0902223237454864) + (-0.5 * -0.9269885286486925 - (0.5 * (`ADS`.`Feature_77` - 0.3555690513985725) * (`ADS`.`Feature_77` - 0.3555690513985725)) / 0.06298456421584024) + (-0.5 * 1.8694143951843423 - (0.5 * (`ADS`.`Feature_78` - 0.05993614873442727) * (`ADS`.`Feature_78` - 0.05993614873442727)) / 1.0320398996618156) + (-0.5 * 2.098751037306087 - (0.5 * (`ADS`.`Feature_79` - 0.011891179985572629) * (`ADS`.`Feature_79` - 0.011891179985572629)) / 1.2980640612748493) + (-0.5 * 1.670685726060565 - (0.5 * (`ADS`.`Feature_80` - -0.11975335939357816) * (`ADS`.`Feature_80` - -0.11975335939357816)) / 0.8460377146975909) + (-0.5 * 1.574787725974009 - (0.5 * (`ADS`.`Feature_81` - -0.14552276964087024) * (`ADS`.`Feature_81` - -0.14552276964087024)) / 0.7686732206432407) + (-0.5 * 1.4822726888067308 - (0.5 * (`ADS`.`Feature_82` - -0.12203128386833016) * (`ADS`.`Feature_82` - -0.12203128386833016)) / 0.7007497977177675) + (-0.5 * 1.977943828534967 - (0.5 * (`ADS`.`Feature_83` - 0.027295259208443383) * (`ADS`.`Feature_83` - 0.027295259208443383)) / 1.1503505961446323) + (-0.5 * 1.6896143099270264 - (0.5 * (`ADS`.`Feature_84` - 0.08450724374202644) * (`ADS`.`Feature_84` - 0.08450724374202644)) / 0.8622045353449733) + (-0.5 * 1.6052281293598958 - (0.5 * (`ADS`.`Feature_85` - 0.1287604240937586) * (`ADS`.`Feature_85` - 0.1287604240937586)) / 0.7924317181153981) + (-0.5 * 2.1464179358729587 - (0.5 * (`ADS`.`Feature_86` - 0.2644170368428714) * (`ADS`.`Feature_86` - 0.2644170368428714)) / 1.361437149616644) + (-0.5 * 1.7397115949520021 - (0.5 * (`ADS`.`Feature_87` - -0.13581011579523133) * (`ADS`.`Feature_87` - -0.13581011579523133)) / 0.906498891650221) + (-0.5 * 1.5550499725329656 - (0.5 * (`ADS`.`Feature_88` - -0.07088021173341379) * (`ADS`.`Feature_88` - -0.07088021173341379)) / 0.7536500873097689) + (-0.5 * 1.7071260669436843 - (0.5 * (`ADS`.`Feature_89` - 0.011337551441278565) * (`ADS`.`Feature_89` - 0.011337551441278565)) / 0.877436229282162) + (-0.5 * 1.4263987843660473 - (0.5 * (`ADS`.`Feature_90` - 0.3297772655685176) * (`ADS`.`Feature_90` - 0.3297772655685176)) / 0.6626699126746745) + (-0.5 * 2.0434963425126287 - (0.5 * (`ADS`.`Feature_91` - 0.06124591095302724) * (`ADS`.`Feature_91` - 0.06124591095302724)) / 1.2282854773303926) + (-0.5 * 1.9866585233945537 - (0.5 * (`ADS`.`Feature_92` - -0.13281880506682206) * (`ADS`.`Feature_92` - -0.13281880506682206)) / 1.1604193599502974) + (-0.5 * 1.912510605060215 - (0.5 * (`ADS`.`Feature_93` - 0.09816603559407577) * (`ADS`.`Feature_93` - 0.09816603559407577)) / 1.0774892203722959) + (-0.5 * 1.8699905669315955 - (0.5 * (`ADS`.`Feature_94` - -0.04432665508262422) * (`ADS`.`Feature_94` - -0.04432665508262422)) / 1.03263470323209) + (-0.5 * 1.4775584172811733 - (0.5 * (`ADS`.`Feature_95` - 0.14573844053936702) * (`ADS`.`Feature_95` - 0.14573844053936702)) / 0.6974540475342939) + (-0.5 * 1.8287853336071527 - (0.5 * (`ADS`.`Feature_96` - 0.23318206686580054) * (`ADS`.`Feature_96` - 0.23318206686580054)) / 0.9909494720314814) + (-0.5 * 1.8698998466200145 - (0.5 * (`ADS`.`Feature_97` - 0.22297500914427748) * (`ADS`.`Feature_97` - 0.22297500914427748)) / 1.0325410265393171) + (-0.5 * 1.6837241410520722 - (0.5 * (`ADS`.`Feature_98` - -0.17572923813625282) * (`ADS`.`Feature_98` - -0.17572923813625282)) / 0.8571409324050053) + (-0.5 * 1.7429112070598596 - (0.5 * (`ADS`.`Feature_99` - 0.17277396476940649) * (`ADS`.`Feature_99` - 0.17277396476940649)) / 0.9094039815817555) AS `Score_0`, NULL AS `LogProba_1`, NULL AS `Proba_1`, -0.7444404749474959 + (-0.5 * 1.414044163598418 - (0.5 * (`ADS`.`Feature_0` - 0.2918784198423757) * (`ADS`.`Feature_0` - 0.2918784198423757)) / 0.654533243436735) + (-0.5 * 1.7745405190116201 - (0.5 * (`ADS`.`Feature_1` - -0.13044869060009245) * (`ADS`.`Feature_1` - -0.13044869060009245)) / 0.938627527874805) + (-0.5 * 1.9418681102733855 - (0.5 * (`ADS`.`Feature_2` - 0.12424644273978813) * (`ADS`.`Feature_2` - 0.12424644273978813)) / 1.1095905172275486) + (-0.5 * 1.6876583016260747 - (0.5 * (`ADS`.`Feature_3` - -0.29990729048661824) * (`ADS`.`Feature_3` - -0.29990729048661824)) / 0.8605197044255282) + (-0.5 * 1.940836213733024 - (0.5 * (`ADS`.`Feature_4` - -0.8495190243649432) * (`ADS`.`Feature_4` - -0.8495190243649432)) / 1.108446125160258) + (-0.5 * 2.0764383448774684 - (0.5 * (`ADS`.`Feature_5` - 0.4139775617134418) * (`ADS`.`Feature_5` - 0.4139775617134418)) / 1.269421491857508) + (-0.5 * 1.5656158908094322 - (0.5 * (`ADS`.`Feature_6` - -0.16722254418045204) * (`ADS`.`Feature_6` - -0.16722254418045204)) / 0.7616553093279548) + (-0.5 * 1.373268584716649 - (0.5 * (`ADS`.`Feature_7` - -0.348651305493939) * (`ADS`.`Feature_7` - -0.348651305493939)) / 0.6283810797314088) + (-0.5 * 1.7909018905908312 - (0.5 * (`ADS`.`Feature_8` - 0.21438092420793456) * (`ADS`.`Feature_8` - 0.21438092420793456)) / 0.9541110823230581) + (-0.5 * 1.6181246335475434 - (0.5 * (`ADS`.`Feature_9` - 0.04260867366275549) * (`ADS`.`Feature_9` - 0.04260867366275549)) / 0.8027174998396528) + (-0.5 * 2.213923377838131 - (0.5 * (`ADS`.`Feature_10` - 0.025966300266437602) * (`ADS`.`Feature_10` - 0.025966300266437602)) / 1.456514585480682) + (-0.5 * 2.17116922025124 - (0.5 * (`ADS`.`Feature_11` - 0.1078888541255943) * (`ADS`.`Feature_11` - 0.1078888541255943)) / 1.3955549556594677) + (-0.5 * 1.725610774482394 - (0.5 * (`ADS`.`Feature_12` - 0.03450553033015382) * (`ADS`.`Feature_12` - 0.03450553033015382)) / 0.8938062124283949) + (-0.5 * 1.533948791924108 - (0.5 * (`ADS`.`Feature_13` - -0.03885125053631652) * (`ADS`.`Feature_13` - -0.03885125053631652)) / 0.7379137917990867) + (-0.5 * 1.9240672775731715 - (0.5 * (`ADS`.`Feature_14` - -0.2597767745554097) * (`ADS`.`Feature_14` - -0.2597767745554097)) / 1.0900136413511834) + (-0.5 * 1.9829847024175986 - (0.5 * (`ADS`.`Feature_15` - -0.2639954747143873) * (`ADS`.`Feature_15` - -0.2639954747143873)) / 1.1561640084496423) + (-0.5 * 1.5261572272736654 - (0.5 * (`ADS`.`Feature_16` - -0.13568453874079053) * (`ADS`.`Feature_16` - -0.13568453874079053)) / 0.7321866295352656) + (-0.5 * 2.016400739425058 - (0.5 * (`ADS`.`Feature_17` - -0.014765536068403742) * (`ADS`.`Feature_17` - -0.014765536068403742)) / 1.1954511828731447) + (-0.5 * 2.34356488760136 - (0.5 * (`ADS`.`Feature_18` - -0.18592002166169416) * (`ADS`.`Feature_18` - -0.18592002166169416)) / 1.6581256222648277) + (-0.5 * 1.9028517058743104 - (0.5 * (`ADS`.`Feature_19` - -0.15552097648806476) * (`ADS`.`Feature_19` - -0.15552097648806476)) / 1.0671319610035392) + (-0.5 * 1.6919342489417084 - (0.5 * (`ADS`.`Feature_20` - 0.1376651389913864) * (`ADS`.`Feature_20` - 0.1376651389913864)) / 0.8642071193233284) + (-0.5 * 2.315015289815111 - (0.5 * (`ADS`.`Feature_21` - -0.01792476704799153) * (`ADS`.`Feature_21` - -0.01792476704799153)) / 1.6114561696209497) + (-0.5 * 1.2458311929660435 - (0.5 * (`ADS`.`Feature_22` - -0.04296076908571887) * (`ADS`.`Feature_22` - -0.04296076908571887)) / 0.5531943605686669) + (-0.5 * 1.574196410586886 - (0.5 * (`ADS`.`Feature_23` - 0.06403144722485822) * (`ADS`.`Feature_23` - 0.06403144722485822)) / 0.7682188266985105) + (-0.5 * 1.2253547978858106 - (0.5 * (`ADS`.`Feature_24` - -0.2110032227585434) * (`ADS`.`Feature_24` - -0.2110032227585434)) / 0.5419821191832286) + (-0.5 * 1.4119364419455058 - (0.5 * (`ADS`.`Feature_25` - -0.14577685205182442) * (`ADS`.`Feature_25` - -0.14577685205182442)) / 0.6531551224049529) + (-0.5 * 1.8458185334751955 - (0.5 * (`ADS`.`Feature_26` - 0.08203078059226424) * (`ADS`.`Feature_26` - 0.08203078059226424)) / 1.0079730841553693) + (-0.5 * 2.0752434531310624 - (0.5 * (`ADS`.`Feature_27` - 0.2553177733223129) * (`ADS`.`Feature_27` - 0.2553177733223129)) / 1.2679055764519447) + (-0.5 * 1.5458452568419625 - (0.5 * (`ADS`.`Feature_28` - 0.09312539545152342) * (`ADS`.`Feature_28` - 0.09312539545152342)) / 0.7467447819670968) + (-0.5 * 2.2791752586682423 - (0.5 * (`ADS`.`Feature_29` - 0.08876819127972477) * (`ADS`.`Feature_29` - 0.08876819127972477)) / 1.5547242399602823) + (-0.5 * 1.924021487647832 - (0.5 * (`ADS`.`Feature_30` - -0.06562232177125303) * (`ADS`.`Feature_30` - -0.06562232177125303)) / 1.0899637308506347) + (-0.5 * 1.8967671911703456 - (0.5 * (`ADS`.`Feature_31` - -0.23818036813429808) * (`ADS`.`Feature_31` - -0.23818036813429808)) / 1.0606586942099638) + (-0.5 * 1.8250730734620055 - (0.5 * (`ADS`.`Feature_32` - 0.13960794021186765) * (`ADS`.`Feature_32` - 0.13960794021186765)) / 0.987277629434836) + (-0.5 * 1.2792430635682037 - (0.5 * (`ADS`.`Feature_33` - 0.04770117076065322) * (`ADS`.`Feature_33` - 0.04770117076065322)) / 0.5719898669731597) + (-0.5 * 1.2707008048314015 - (0.5 * (`ADS`.`Feature_34` - 0.13251689783270607) * (`ADS`.`Feature_34` - 0.13251689783270607)) / 0.5671245913412516) + (-0.5 * 1.9520075957815144 - (0.5 * (`ADS`.`Feature_35` - 0.1773498257033296) * (`ADS`.`Feature_35` - 0.1773498257033296)) / 1.1208984255034273) + (-0.5 * 1.676244667766513 - (0.5 * (`ADS`.`Feature_36` - -0.14733919978334517) * (`ADS`.`Feature_36` - -0.14733919978334517)) / 0.8507538853486368) + (-0.5 * 1.596668619205151 - (0.5 * (`ADS`.`Feature_37` - 0.2630792631072191) * (`ADS`.`Feature_37` - 0.2630792631072191)) / 0.7856778369697014) + (-0.5 * 1.5686182084639182 - (0.5 * (`ADS`.`Feature_38` - -0.1583268728690875) * (`ADS`.`Feature_38` - -0.1583268728690875)) / 0.763945476694461) + (-0.5 * 1.825765624511555 - (0.5 * (`ADS`.`Feature_39` - -0.1669091619603902) * (`ADS`.`Feature_39` - -0.1669091619603902)) / 0.9879616064104461) + (-0.5 * 1.607151606003442 - (0.5 * (`ADS`.`Feature_40` - -0.08687856483048613) * (`ADS`.`Feature_40` - -0.08687856483048613)) / 0.7939574088616652) + (-0.5 * 2.1341634797803843 - (0.5 * (`ADS`.`Feature_41` - -0.08709961316765284) * (`ADS`.`Feature_41` - -0.08709961316765284)) / 1.3448552862124012) + (-0.5 * 1.4107093048845962 - (0.5 * (`ADS`.`Feature_42` - -0.1603662789617598) * (`ADS`.`Feature_42` - -0.1603662789617598)) / 0.6523541031284661) + (-0.5 * 1.747859235128209 - (0.5 * (`ADS`.`Feature_43` - -0.05360307010712552) * (`ADS`.`Feature_43` - -0.05360307010712552)) / 0.9139148888526177) + (-0.5 * 1.9401864776434739 - (0.5 * (`ADS`.`Feature_44` - -0.09178043165694104) * (`ADS`.`Feature_44` - -0.09178043165694104)) / 1.1077261616278926) + (-0.5 * 1.395317330481836 - (0.5 * (`ADS`.`Feature_45` - -0.29558030038383404) * (`ADS`.`Feature_45` - -0.29558030038383404)) / 0.6423899660615046) + (-0.5 * 1.9268551090780797 - (0.5 * (`ADS`.`Feature_46` - -0.0204797619456042) * (`ADS`.`Feature_46` - -0.0204797619456042)) / 1.0930566554557575) + (-0.5 * 1.8044159927858137 - (0.5 * (`ADS`.`Feature_47` - 0.2657079123053793) * (`ADS`.`Feature_47` - 0.2657079123053793)) / 0.9670925559076236) + (-0.5 * 1.5127183621533895 - (0.5 * (`ADS`.`Feature_48` - -0.06471752265867832) * (`ADS`.`Feature_48` - -0.06471752265867832)) / 0.7224126945746864) + (-0.5 * 1.5934743927533543 - (0.5 * (`ADS`.`Feature_49` - -0.036590464760650754) * (`ADS`.`Feature_49` - -0.036590464760650754)) / 0.7831722079439467) + (-0.5 * 2.144785627788439 - (0.5 * (`ADS`.`Feature_50` - -0.13388991213688947) * (`ADS`.`Feature_50` - -0.13388991213688947)) / 1.3592166774910852) + (-0.5 * 1.8555081783000464 - (0.5 * (`ADS`.`Feature_51` - -0.06082276683268923) * (`ADS`.`Feature_51` - -0.06082276683268923)) / 1.0177874574409709) + (-0.5 * 2.0150889945535537 - (0.5 * (`ADS`.`Feature_52` - 0.11513534573920825) * (`ADS`.`Feature_52` - 0.11513534573920825)) / 1.1938840839565663) + (-0.5 * 1.4659599650801864 - (0.5 * (`ADS`.`Feature_53` - -0.14828451728456907) * (`ADS`.`Feature_53` - -0.14828451728456907)) / 0.6894113914434182) + (-0.5 * 1.6089343081687273 - (0.5 * (`ADS`.`Feature_54` - 0.03324330136186313) * (`ADS`.`Feature_54` - 0.03324330136186313)) / 0.7953740608126575) + (-0.5 * 1.8149175468531193 - (0.5 * (`ADS`.`Feature_55` - -0.028241048974077514) * (`ADS`.`Feature_55` - -0.028241048974077514)) / 0.9773020445930182) + (-0.5 * 1.836411271635068 - (0.5 * (`ADS`.`Feature_56` - 0.030988452376955175) * (`ADS`.`Feature_56` - 0.030988452376955175)) / 0.9985352789781851) + (-0.5 * 2.004192030057853 - (0.5 * (`ADS`.`Feature_57` - 0.9185662055430868) * (`ADS`.`Feature_57` - 0.9185662055430868)) / 1.1809449978985382) + (-0.5 * 1.4719823480371192 - (0.5 * (`ADS`.`Feature_58` - -0.1611814081806529) * (`ADS`.`Feature_58` - -0.1611814081806529)) / 0.6935758181571369) + (-0.5 * 1.5130808245262783 - (0.5 * (`ADS`.`Feature_59` - 0.17578207188470754) * (`ADS`.`Feature_59` - 0.17578207188470754)) / 0.7226745894548193) + (-0.5 * 2.0718187077918597 - (0.5 * (`ADS`.`Feature_60` - -0.3401635009350173) * (`ADS`.`Feature_60` - -0.3401635009350173)) / 1.263570749813992) + (-0.5 * 1.6550279275742619 - (0.5 * (`ADS`.`Feature_61` - 0.2641648956340186) * (`ADS`.`Feature_61` - 0.2641648956340186)) / 0.8328937975881704) + (-0.5 * 1.67069085873404 - (0.5 * (`ADS`.`Feature_62` - 0.08125074729541426) * (`ADS`.`Feature_62` - 0.08125074729541426)) / 0.8460420571440721) + (-0.5 * 2.134749742102307 - (0.5 * (`ADS`.`Feature_63` - 0.1123588989296834) * (`ADS`.`Feature_63` - 0.1123588989296834)) / 1.3456439553560589) + (-0.5 * 1.4768893541557802 - (0.5 * (`ADS`.`Feature_64` - 0.07775462133477613) * (`ADS`.`Feature_64` - 0.07775462133477613)) / 0.6969875628206943) + (-0.5 * 1.4837071329509548 - (0.5 * (`ADS`.`Feature_65` - 0.15070293228453271) * (`ADS`.`Feature_65` - 0.15070293228453271)) / 0.7017557054484146) + (-0.5 * 1.71315179280007 - (0.5 * (`ADS`.`Feature_66` - 0.17278142414267003) * (`ADS`.`Feature_66` - 0.17278142414267003)) / 0.8827393810795638) + (-0.5 * 1.869804053383361 - (0.5 * (`ADS`.`Feature_67` - -0.02440801588858139) * (`ADS`.`Feature_67` - -0.02440801588858139)) / 1.032442120829732) + (-0.5 * 1.8949563829026836 - (0.5 * (`ADS`.`Feature_68` - -0.34957302223912595) * (`ADS`.`Feature_68` - -0.34957302223912595)) / 1.058739782592179) + (-0.5 * 1.4930698657389354 - (0.5 * (`ADS`.`Feature_69` - -0.13117783995716248) * (`ADS`.`Feature_69` - -0.13117783995716248)) / 0.7083569110408316) + (-0.5 * 1.5035470475803994 - (0.5 * (`ADS`.`Feature_70` - -0.007458258518597889) * (`ADS`.`Feature_70` - -0.007458258518597889)) / 0.7158175099858239) + (-0.5 * 1.9598948158129526 - (0.5 * (`ADS`.`Feature_71` - -0.2302943728627609) * (`ADS`.`Feature_71` - -0.2302943728627609)) / 1.1297741544198086) + (-0.5 * 1.589194729342999 - (0.5 * (`ADS`.`Feature_72` - -0.18005378747106066) * (`ADS`.`Feature_72` - -0.18005378747106066)) / 0.7798276563838347) + (-0.5 * 1.6115468979799206 - (0.5 * (`ADS`.`Feature_73` - -0.088617946285696) * (`ADS`.`Feature_73` - -0.088617946285696)) / 0.7974547638082391) + (-0.5 * 1.9142397719304987 - (0.5 * (`ADS`.`Feature_74` - -0.01685551249031646) * (`ADS`.`Feature_74` - -0.01685551249031646)) / 1.0793539908202496) + (-0.5 * 1.8356040705186558 - (0.5 * (`ADS`.`Feature_75` - 0.17625646572458276) * (`ADS`.`Feature_75` - 0.17625646572458276)) / 0.9977295854083389) + (-0.5 * 1.8160231230949424 - (0.5 * (`ADS`.`Feature_76` - -0.04459025353394924) * (`ADS`.`Feature_76` - -0.04459025353394924)) / 0.9783831240123493) + (-0.5 * 0.07637542799729208 - (0.5 * (`ADS`.`Feature_77` - -0.34677798570640783) * (`ADS`.`Feature_77` - -0.34677798570640783)) / 0.17178670852340439) + (-0.5 * 1.7946789080767689 - (0.5 * (`ADS`.`Feature_78` - 0.0818288258624968) * (`ADS`.`Feature_78` - 0.0818288258624968)) / 0.9577215907489983) + (-0.5 * 1.676877227463313 - (0.5 * (`ADS`.`Feature_79` - 0.24080389982004605) * (`ADS`.`Feature_79` - 0.24080389982004605)) / 0.8512922082111278) + (-0.5 * 2.0234949837340195 - (0.5 * (`ADS`.`Feature_80` - 0.06127277102978808) * (`ADS`.`Feature_80` - 0.06127277102978808)) / 1.2039621594020657) + (-0.5 * 1.4289011037991581 - (0.5 * (`ADS`.`Feature_81` - -0.07207528225554026) * (`ADS`.`Feature_81` - -0.07207528225554026)) / 0.664330200894298) + (-0.5 * 1.8143764356642489 - (0.5 * (`ADS`.`Feature_82` - 0.21964358835276468) * (`ADS`.`Feature_82` - 0.21964358835276468)) / 0.976773358573643) + (-0.5 * 1.7398518323042 - (0.5 * (`ADS`.`Feature_83` - 0.07008355273741211) * (`ADS`.`Feature_83` - 0.07008355273741211)) / 0.9066260255688101) + (-0.5 * 1.7237418421863744 - (0.5 * (`ADS`.`Feature_84` - 0.12332447579176042) * (`ADS`.`Feature_84` - 0.12332447579176042)) / 0.8921373091509984) + (-0.5 * 1.9440483078590083 - (0.5 * (`ADS`.`Feature_85` - -0.06772175112381663) * (`ADS`.`Feature_85` - -0.06772175112381663)) / 1.11201228279869) + (-0.5 * 1.3303365240942655 - (0.5 * (`ADS`.`Feature_86` - 0.040648011813979056) * (`ADS`.`Feature_86` - 0.040648011813979056)) / 0.6019742899466828) + (-0.5 * 1.7353366594106285 - (0.5 * (`ADS`.`Feature_87` - -0.04717153943692447) * (`ADS`.`Feature_87` - -0.04717153943692447)) / 0.902541680015608) + (-0.5 * 2.1855200318137125 - (0.5 * (`ADS`.`Feature_88` - -0.034336063518337935) * (`ADS`.`Feature_88` - -0.034336063518337935)) / 1.4157266960868575) + (-0.5 * 2.242209305533025 - (0.5 * (`ADS`.`Feature_89` - -0.1319234439245708) * (`ADS`.`Feature_89` - -0.1319234439245708)) / 1.4983016587039992) + (-0.5 * 1.4110208850171906 - (0.5 * (`ADS`.`Feature_90` - -0.010069205119225254) * (`ADS`.`Feature_90` - -0.010069205119225254)) / 0.6525573953756854) + (-0.5 * 1.845957374995078 - (0.5 * (`ADS`.`Feature_91` - -0.23642311812617484) * (`ADS`.`Feature_91` - -0.23642311812617484)) / 1.0081130423861562) + (-0.5 * 2.2635998277147507 - (0.5 * (`ADS`.`Feature_92` - 0.2885418734134063) * (`ADS`.`Feature_92` - 0.2885418734134063)) / 1.5306963480448068) + (-0.5 * 2.032911066462909 - (0.5 * (`ADS`.`Feature_93` - -0.1272077589573801) * (`ADS`.`Feature_93` - -0.1272077589573801)) / 1.2153523078308275) + (-0.5 * 2.1961359131272435 - (0.5 * (`ADS`.`Feature_94` - 0.10393027249723849) * (`ADS`.`Feature_94` - 0.10393027249723849)) / 1.4308359397367199) + (-0.5 * 1.6851322350143976 - (0.5 * (`ADS`.`Feature_95` - -0.06770195636463489) * (`ADS`.`Feature_95` - -0.06770195636463489)) / 0.858348717514688) + (-0.5 * 1.7879490883357045 - (0.5 * (`ADS`.`Feature_96` - -0.2011056358610035) * (`ADS`.`Feature_96` - -0.2011056358610035)) / 0.9512979363434239) + (-0.5 * 1.5836746048090067 - (0.5 * (`ADS`.`Feature_97` - 0.13740596966306318) * (`ADS`.`Feature_97` - 0.13740596966306318)) / 0.775534770139866) + (-0.5 * 1.675962566257813 - (0.5 * (`ADS`.`Feature_98` - -0.061194849702279876) * (`ADS`.`Feature_98` - -0.061194849702279876)) / 0.8505139202428982) + (-0.5 * 1.5869129483175304 - (0.5 * (`ADS`.`Feature_99` - -0.18165515574663463) * (`ADS`.`Feature_99` - -0.18165515574663463)) / 0.7780502889871217) AS `Score_1` 
FROM `BinaryClass_100` AS `ADS`), 
orig_cte AS 
(SELECT `RawScores`.`KEY` AS `KEY`, `RawScores`.`Score_0` AS `Score_0`, `RawScores`.`Score_1` AS `Score_1`, `RawScores`.`Proba_0` AS `Proba_0`, `RawScores`.`Proba_1` AS `Proba_1`, `RawScores`.`LogProba_0` AS `LogProba_0`, `RawScores`.`LogProba_1` AS `LogProba_1`, CAST(NULL AS SIGNED INTEGER) AS `Decision`, NULL AS `DecisionProba` 
FROM `RawScores`), 
score_class_union AS 
(SELECT scu.`KEY_u` AS `KEY_u`, scu.class AS class, scu.`LogProba` AS `LogProba`, scu.`Proba` AS `Proba`, scu.`Score` AS `Score` 
FROM (SELECT orig_cte.`KEY` AS `KEY_u`, 0 AS class, orig_cte.`LogProba_0` AS `LogProba`, orig_cte.`Proba_0` AS `Proba`, orig_cte.`Score_0` AS `Score` 
FROM orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY_u`, 1 AS class, orig_cte.`LogProba_1` AS `LogProba`, orig_cte.`Proba_1` AS `Proba`, orig_cte.`Score_1` AS `Score` 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte.`KEY` AS `KEY`, orig_cte.`Score_0` AS `Score_0`, orig_cte.`Score_1` AS `Score_1`, orig_cte.`Proba_0` AS `Proba_0`, orig_cte.`Proba_1` AS `Proba_1`, orig_cte.`LogProba_0` AS `LogProba_0`, orig_cte.`LogProba_1` AS `LogProba_1`, orig_cte.`Decision` AS `Decision`, orig_cte.`DecisionProba` AS `DecisionProba`, max_select.`KEY_m` AS `KEY_m`, max_select.`max_Score` AS `max_Score` 
FROM orig_cte LEFT OUTER JOIN (SELECT score_class_union.`KEY_u` AS `KEY_m`, max(score_class_union.`Score`) AS `max_Score` 
FROM score_class_union GROUP BY score_class_union.`KEY_u`) AS max_select ON orig_cte.`KEY` = max_select.`KEY_m`), 
score_soft_max_deltas AS 
(SELECT score_max.`KEY` AS `KEY`, score_max.`Score_0` AS `Score_0`, score_max.`Score_1` AS `Score_1`, score_max.`Proba_0` AS `Proba_0`, score_max.`Proba_1` AS `Proba_1`, score_max.`LogProba_0` AS `LogProba_0`, score_max.`LogProba_1` AS `LogProba_1`, score_max.`Decision` AS `Decision`, score_max.`DecisionProba` AS `DecisionProba`, score_max.`KEY_m` AS `KEY_m`, score_max.`max_Score` AS `max_Score`, exp(score_max.`Score_0` - score_max.`max_Score`) AS `exp_delta_Score_0`, exp(score_max.`Score_1` - score_max.`max_Score`) AS `exp_delta_Score_1` 
FROM score_max), 
score_class_union_soft AS 
(SELECT soft_scu.`KEY` AS `KEY`, soft_scu.class AS class, soft_scu.`exp_delta_Score` AS `exp_delta_Score` 
FROM (SELECT score_soft_max_deltas.`KEY` AS `KEY`, 0 AS class, score_soft_max_deltas.`exp_delta_Score_0` AS `exp_delta_Score` 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas.`KEY` AS `KEY`, 1 AS class, score_soft_max_deltas.`exp_delta_Score_1` AS `exp_delta_Score` 
FROM score_soft_max_deltas) AS soft_scu), 
score_soft_max AS 
(SELECT score_soft_max_deltas.`KEY` AS `KEY`, score_soft_max_deltas.`Score_0` AS `Score_0`, score_soft_max_deltas.`Score_1` AS `Score_1`, score_soft_max_deltas.`Proba_0` AS `Proba_0`, score_soft_max_deltas.`Proba_1` AS `Proba_1`, score_soft_max_deltas.`LogProba_0` AS `LogProba_0`, score_soft_max_deltas.`LogProba_1` AS `LogProba_1`, score_soft_max_deltas.`Decision` AS `Decision`, score_soft_max_deltas.`DecisionProba` AS `DecisionProba`, score_soft_max_deltas.`KEY_m` AS `KEY_m`, score_soft_max_deltas.`max_Score` AS `max_Score`, score_soft_max_deltas.`exp_delta_Score_0` AS `exp_delta_Score_0`, score_soft_max_deltas.`exp_delta_Score_1` AS `exp_delta_Score_1`, sum_exp_t.`KEY_sum` AS `KEY_sum`, sum_exp_t.`sum_ExpDeltaScore` AS `sum_ExpDeltaScore` 
FROM score_soft_max_deltas LEFT OUTER JOIN (SELECT score_class_union_soft.`KEY` AS `KEY_sum`, sum(score_class_union_soft.`exp_delta_Score`) AS `sum_ExpDeltaScore` 
FROM score_class_union_soft GROUP BY score_class_union_soft.`KEY`) AS sum_exp_t ON score_soft_max_deltas.`KEY` = sum_exp_t.`KEY_sum`), 
union_with_max AS 
(SELECT score_class_union.`KEY_u` AS `KEY_u`, score_class_union.class AS class, score_class_union.`LogProba` AS `LogProba`, score_class_union.`Proba` AS `Proba`, score_class_union.`Score` AS `Score`, score_soft_max.`KEY` AS `KEY`, score_soft_max.`Score_0` AS `Score_0`, score_soft_max.`Score_1` AS `Score_1`, score_soft_max.`Proba_0` AS `Proba_0`, score_soft_max.`Proba_1` AS `Proba_1`, score_soft_max.`LogProba_0` AS `LogProba_0`, score_soft_max.`LogProba_1` AS `LogProba_1`, score_soft_max.`Decision` AS `Decision`, score_soft_max.`DecisionProba` AS `DecisionProba`, score_soft_max.`KEY_m` AS `KEY_m`, score_soft_max.`max_Score` AS `max_Score`, score_soft_max.`exp_delta_Score_0` AS `exp_delta_Score_0`, score_soft_max.`exp_delta_Score_1` AS `exp_delta_Score_1`, score_soft_max.`KEY_sum` AS `KEY_sum`, score_soft_max.`sum_ExpDeltaScore` AS `sum_ExpDeltaScore` 
FROM score_class_union LEFT OUTER JOIN score_soft_max ON score_class_union.`KEY_u` = score_soft_max.`KEY`), 
arg_max_cte AS 
(SELECT score_soft_max.`KEY` AS `KEY`, score_soft_max.`Score_0` AS `Score_0`, score_soft_max.`Score_1` AS `Score_1`, score_soft_max.`Proba_0` AS `Proba_0`, score_soft_max.`Proba_1` AS `Proba_1`, score_soft_max.`LogProba_0` AS `LogProba_0`, score_soft_max.`LogProba_1` AS `LogProba_1`, score_soft_max.`Decision` AS `Decision`, score_soft_max.`DecisionProba` AS `DecisionProba`, score_soft_max.`KEY_m` AS `KEY_m`, score_soft_max.`max_Score` AS `max_Score`, score_soft_max.`exp_delta_Score_0` AS `exp_delta_Score_0`, score_soft_max.`exp_delta_Score_1` AS `exp_delta_Score_1`, score_soft_max.`KEY_sum` AS `KEY_sum`, score_soft_max.`sum_ExpDeltaScore` AS `sum_ExpDeltaScore`, `arg_max_t_Score`.`KEY_Score` AS `KEY_Score`, `arg_max_t_Score`.`arg_max_Score` AS `arg_max_Score`, soft_max_comp.`KEY_softmax` AS `KEY_softmax`, soft_max_comp.`SoftProba_0` AS `SoftProba_0`, soft_max_comp.`SoftProba_1` AS `SoftProba_1` 
FROM score_soft_max LEFT OUTER JOIN (SELECT union_with_max.`KEY` AS `KEY_Score`, min(union_with_max.class) AS `arg_max_Score` 
FROM union_with_max 
WHERE union_with_max.`max_Score` <= union_with_max.`Score` GROUP BY union_with_max.`KEY`) AS `arg_max_t_Score` ON score_soft_max.`KEY` = `arg_max_t_Score`.`KEY_Score` LEFT OUTER JOIN (SELECT score_soft_max.`KEY` AS `KEY_softmax`, score_soft_max.`exp_delta_Score_0` / score_soft_max.`sum_ExpDeltaScore` AS `SoftProba_0`, score_soft_max.`exp_delta_Score_1` / score_soft_max.`sum_ExpDeltaScore` AS `SoftProba_1` 
FROM score_soft_max) AS soft_max_comp ON soft_max_comp.`KEY_softmax` = `arg_max_t_Score`.`KEY_Score`)
 SELECT arg_max_cte.`KEY` AS `KEY`, NULL AS `Score_0`, NULL AS `Score_1`, arg_max_cte.`SoftProba_0` AS `Proba_0`, arg_max_cte.`SoftProba_1` AS `Proba_1`, CASE WHEN (arg_max_cte.`SoftProba_0` IS NULL OR arg_max_cte.`SoftProba_0` > 0.0) THEN ln(arg_max_cte.`SoftProba_0`) ELSE -1.79769313486231e+308 END AS `LogProba_0`, CASE WHEN (arg_max_cte.`SoftProba_1` IS NULL OR arg_max_cte.`SoftProba_1` > 0.0) THEN ln(arg_max_cte.`SoftProba_1`) ELSE -1.79769313486231e+308 END AS `LogProba_1`, arg_max_cte.`arg_max_Score` AS `Decision`, greatest(arg_max_cte.`SoftProba_0`, arg_max_cte.`SoftProba_1`) AS `DecisionProba` 
FROM arg_max_cte