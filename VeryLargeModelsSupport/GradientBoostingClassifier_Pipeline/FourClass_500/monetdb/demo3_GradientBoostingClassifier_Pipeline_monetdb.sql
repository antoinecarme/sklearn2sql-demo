-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2018

-- This SQL code can contain one or more statements, to be executed in the order they appear in this file.



-- Model deployment code

WITH "ADS_imp_1_OUT" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" IS NULL) THEN 0.10810245375646362 ELSE "ADS"."Feature_0" END AS impter_2, CASE WHEN ("ADS"."Feature_1" IS NULL) THEN 0.040042372892287084 ELSE "ADS"."Feature_1" END AS impter_3, CASE WHEN ("ADS"."Feature_2" IS NULL) THEN -0.07667364732662786 ELSE "ADS"."Feature_2" END AS impter_4, CASE WHEN ("ADS"."Feature_3" IS NULL) THEN 0.17588592419877258 ELSE "ADS"."Feature_3" END AS impter_5, CASE WHEN ("ADS"."Feature_4" IS NULL) THEN 0.02926169026463611 ELSE "ADS"."Feature_4" END AS impter_6, CASE WHEN ("ADS"."Feature_5" IS NULL) THEN -0.00904400654098767 ELSE "ADS"."Feature_5" END AS impter_7, CASE WHEN ("ADS"."Feature_6" IS NULL) THEN 0.02021641814123045 ELSE "ADS"."Feature_6" END AS impter_8, CASE WHEN ("ADS"."Feature_7" IS NULL) THEN -0.021740866363558604 ELSE "ADS"."Feature_7" END AS impter_9, CASE WHEN ("ADS"."Feature_8" IS NULL) THEN 0.12136863686872651 ELSE "ADS"."Feature_8" END AS impter_10, CASE WHEN ("ADS"."Feature_9" IS NULL) THEN -0.009621207715304118 ELSE "ADS"."Feature_9" END AS impter_11, CASE WHEN ("ADS"."Feature_10" IS NULL) THEN -0.0017282210866736356 ELSE "ADS"."Feature_10" END AS impter_12, CASE WHEN ("ADS"."Feature_11" IS NULL) THEN -0.017782065935332218 ELSE "ADS"."Feature_11" END AS impter_13, CASE WHEN ("ADS"."Feature_12" IS NULL) THEN 0.03226275015550329 ELSE "ADS"."Feature_12" END AS impter_14, CASE WHEN ("ADS"."Feature_13" IS NULL) THEN -0.0014825533746410664 ELSE "ADS"."Feature_13" END AS impter_15, CASE WHEN ("ADS"."Feature_14" IS NULL) THEN 0.06164712316198218 ELSE "ADS"."Feature_14" END AS impter_16, CASE WHEN ("ADS"."Feature_15" IS NULL) THEN 0.02754670267716649 ELSE "ADS"."Feature_15" END AS impter_17, CASE WHEN ("ADS"."Feature_16" IS NULL) THEN 0.08064319713194991 ELSE "ADS"."Feature_16" END AS impter_18, CASE WHEN ("ADS"."Feature_17" IS NULL) THEN -0.011498650117894155 ELSE "ADS"."Feature_17" END AS impter_19, CASE WHEN ("ADS"."Feature_18" IS NULL) THEN 0.31890266993969374 ELSE "ADS"."Feature_18" END AS impter_20, CASE WHEN ("ADS"."Feature_19" IS NULL) THEN -0.00022777424626326773 ELSE "ADS"."Feature_19" END AS impter_21, CASE WHEN ("ADS"."Feature_20" IS NULL) THEN 0.24588258651573852 ELSE "ADS"."Feature_20" END AS impter_22, CASE WHEN ("ADS"."Feature_21" IS NULL) THEN -0.008717075180818528 ELSE "ADS"."Feature_21" END AS impter_23, CASE WHEN ("ADS"."Feature_22" IS NULL) THEN 0.0053072366770978985 ELSE "ADS"."Feature_22" END AS impter_24, CASE WHEN ("ADS"."Feature_23" IS NULL) THEN -0.014763237855175493 ELSE "ADS"."Feature_23" END AS impter_25, CASE WHEN ("ADS"."Feature_24" IS NULL) THEN -0.023154438774995047 ELSE "ADS"."Feature_24" END AS impter_26, CASE WHEN ("ADS"."Feature_25" IS NULL) THEN -0.12239207011675045 ELSE "ADS"."Feature_25" END AS impter_27, CASE WHEN ("ADS"."Feature_26" IS NULL) THEN 0.020535611934405496 ELSE "ADS"."Feature_26" END AS impter_28, CASE WHEN ("ADS"."Feature_27" IS NULL) THEN 0.006055843023249926 ELSE "ADS"."Feature_27" END AS impter_29, CASE WHEN ("ADS"."Feature_28" IS NULL) THEN -0.02283750315483421 ELSE "ADS"."Feature_28" END AS impter_30, CASE WHEN ("ADS"."Feature_29" IS NULL) THEN 0.023985609638350506 ELSE "ADS"."Feature_29" END AS impter_31, CASE WHEN ("ADS"."Feature_30" IS NULL) THEN 0.008119293552803313 ELSE "ADS"."Feature_30" END AS impter_32, CASE WHEN ("ADS"."Feature_31" IS NULL) THEN 0.027089596569202946 ELSE "ADS"."Feature_31" END AS impter_33, CASE WHEN ("ADS"."Feature_32" IS NULL) THEN -0.06055225058050742 ELSE "ADS"."Feature_32" END AS impter_34, CASE WHEN ("ADS"."Feature_33" IS NULL) THEN -0.024424868791331697 ELSE "ADS"."Feature_33" END AS impter_35, CASE WHEN ("ADS"."Feature_34" IS NULL) THEN 0.012336464422653204 ELSE "ADS"."Feature_34" END AS impter_36, CASE WHEN ("ADS"."Feature_35" IS NULL) THEN -0.03733185453369615 ELSE "ADS"."Feature_35" END AS impter_37, CASE WHEN ("ADS"."Feature_36" IS NULL) THEN -0.01163301006213858 ELSE "ADS"."Feature_36" END AS impter_38, CASE WHEN ("ADS"."Feature_37" IS NULL) THEN -0.05102972508859019 ELSE "ADS"."Feature_37" END AS impter_39, CASE WHEN ("ADS"."Feature_38" IS NULL) THEN 0.0724619853931901 ELSE "ADS"."Feature_38" END AS impter_40, CASE WHEN ("ADS"."Feature_39" IS NULL) THEN 0.02873322955169374 ELSE "ADS"."Feature_39" END AS impter_41, CASE WHEN ("ADS"."Feature_40" IS NULL) THEN -0.0468030521847972 ELSE "ADS"."Feature_40" END AS impter_42, CASE WHEN ("ADS"."Feature_41" IS NULL) THEN 0.024222315050048744 ELSE "ADS"."Feature_41" END AS impter_43, CASE WHEN ("ADS"."Feature_42" IS NULL) THEN 0.01149556673107005 ELSE "ADS"."Feature_42" END AS impter_44, CASE WHEN ("ADS"."Feature_43" IS NULL) THEN -0.46581882386282575 ELSE "ADS"."Feature_43" END AS impter_45, CASE WHEN ("ADS"."Feature_44" IS NULL) THEN -0.0013382860297555803 ELSE "ADS"."Feature_44" END AS impter_46, CASE WHEN ("ADS"."Feature_45" IS NULL) THEN -0.008602411981840778 ELSE "ADS"."Feature_45" END AS impter_47, CASE WHEN ("ADS"."Feature_46" IS NULL) THEN -0.009965212302201201 ELSE "ADS"."Feature_46" END AS impter_48, CASE WHEN ("ADS"."Feature_47" IS NULL) THEN -0.03978485158208147 ELSE "ADS"."Feature_47" END AS impter_49, CASE WHEN ("ADS"."Feature_48" IS NULL) THEN 0.007027179196660041 ELSE "ADS"."Feature_48" END AS impter_50, CASE WHEN ("ADS"."Feature_49" IS NULL) THEN -0.01982980508470468 ELSE "ADS"."Feature_49" END AS impter_51, CASE WHEN ("ADS"."Feature_50" IS NULL) THEN -0.04505595017989205 ELSE "ADS"."Feature_50" END AS impter_52, CASE WHEN ("ADS"."Feature_51" IS NULL) THEN -0.045447760217128444 ELSE "ADS"."Feature_51" END AS impter_53, CASE WHEN ("ADS"."Feature_52" IS NULL) THEN 0.037832771618739616 ELSE "ADS"."Feature_52" END AS impter_54, CASE WHEN ("ADS"."Feature_53" IS NULL) THEN -0.061624599074911364 ELSE "ADS"."Feature_53" END AS impter_55, CASE WHEN ("ADS"."Feature_54" IS NULL) THEN 0.07625111583055796 ELSE "ADS"."Feature_54" END AS impter_56, CASE WHEN ("ADS"."Feature_55" IS NULL) THEN -0.027271537635613834 ELSE "ADS"."Feature_55" END AS impter_57, CASE WHEN ("ADS"."Feature_56" IS NULL) THEN 0.08658875419996898 ELSE "ADS"."Feature_56" END AS impter_58, CASE WHEN ("ADS"."Feature_57" IS NULL) THEN 0.0999871472844467 ELSE "ADS"."Feature_57" END AS impter_59, CASE WHEN ("ADS"."Feature_58" IS NULL) THEN -0.007447998234187981 ELSE "ADS"."Feature_58" END AS impter_60, CASE WHEN ("ADS"."Feature_59" IS NULL) THEN 0.0005691476004520007 ELSE "ADS"."Feature_59" END AS impter_61, CASE WHEN ("ADS"."Feature_60" IS NULL) THEN 0.007052612183486737 ELSE "ADS"."Feature_60" END AS impter_62, CASE WHEN ("ADS"."Feature_61" IS NULL) THEN -0.07298857610906591 ELSE "ADS"."Feature_61" END AS impter_63, CASE WHEN ("ADS"."Feature_62" IS NULL) THEN 0.007257283737326912 ELSE "ADS"."Feature_62" END AS impter_64, CASE WHEN ("ADS"."Feature_63" IS NULL) THEN -0.01499281527733551 ELSE "ADS"."Feature_63" END AS impter_65, CASE WHEN ("ADS"."Feature_64" IS NULL) THEN 0.1504932184478646 ELSE "ADS"."Feature_64" END AS impter_66, CASE WHEN ("ADS"."Feature_65" IS NULL) THEN -0.34139964395628075 ELSE "ADS"."Feature_65" END AS impter_67, CASE WHEN ("ADS"."Feature_66" IS NULL) THEN 0.044769898693156215 ELSE "ADS"."Feature_66" END AS impter_68, CASE WHEN ("ADS"."Feature_67" IS NULL) THEN -0.06740805909718733 ELSE "ADS"."Feature_67" END AS impter_69, CASE WHEN ("ADS"."Feature_68" IS NULL) THEN 0.011827724290967036 ELSE "ADS"."Feature_68" END AS impter_70, CASE WHEN ("ADS"."Feature_69" IS NULL) THEN 0.04511965476174756 ELSE "ADS"."Feature_69" END AS impter_71, CASE WHEN ("ADS"."Feature_70" IS NULL) THEN -0.005725960546688403 ELSE "ADS"."Feature_70" END AS impter_72, CASE WHEN ("ADS"."Feature_71" IS NULL) THEN -0.45906874360950467 ELSE "ADS"."Feature_71" END AS impter_73, CASE WHEN ("ADS"."Feature_72" IS NULL) THEN -0.4029233461203958 ELSE "ADS"."Feature_72" END AS impter_74, CASE WHEN ("ADS"."Feature_73" IS NULL) THEN -0.01983348240532154 ELSE "ADS"."Feature_73" END AS impter_75, CASE WHEN ("ADS"."Feature_74" IS NULL) THEN -0.03762876790351029 ELSE "ADS"."Feature_74" END AS impter_76, CASE WHEN ("ADS"."Feature_75" IS NULL) THEN 0.0014482025177064296 ELSE "ADS"."Feature_75" END AS impter_77, CASE WHEN ("ADS"."Feature_76" IS NULL) THEN -0.009126373209438378 ELSE "ADS"."Feature_76" END AS impter_78, CASE WHEN ("ADS"."Feature_77" IS NULL) THEN -0.004847879746676399 ELSE "ADS"."Feature_77" END AS impter_79, CASE WHEN ("ADS"."Feature_78" IS NULL) THEN 0.0003242960082649739 ELSE "ADS"."Feature_78" END AS impter_80, CASE WHEN ("ADS"."Feature_79" IS NULL) THEN -0.030222670037465243 ELSE "ADS"."Feature_79" END AS impter_81, CASE WHEN ("ADS"."Feature_80" IS NULL) THEN 0.00597438906398475 ELSE "ADS"."Feature_80" END AS impter_82, CASE WHEN ("ADS"."Feature_81" IS NULL) THEN 0.006442151047769896 ELSE "ADS"."Feature_81" END AS impter_83, CASE WHEN ("ADS"."Feature_82" IS NULL) THEN 0.06674583942705845 ELSE "ADS"."Feature_82" END AS impter_84, CASE WHEN ("ADS"."Feature_83" IS NULL) THEN 0.07788312942179253 ELSE "ADS"."Feature_83" END AS impter_85, CASE WHEN ("ADS"."Feature_84" IS NULL) THEN 0.04734384734963352 ELSE "ADS"."Feature_84" END AS impter_86, CASE WHEN ("ADS"."Feature_85" IS NULL) THEN -0.008706507745982245 ELSE "ADS"."Feature_85" END AS impter_87, CASE WHEN ("ADS"."Feature_86" IS NULL) THEN 0.048010462132819065 ELSE "ADS"."Feature_86" END AS impter_88, CASE WHEN ("ADS"."Feature_87" IS NULL) THEN -0.015721233574226466 ELSE "ADS"."Feature_87" END AS impter_89, CASE WHEN ("ADS"."Feature_88" IS NULL) THEN 0.029859590983661574 ELSE "ADS"."Feature_88" END AS impter_90, CASE WHEN ("ADS"."Feature_89" IS NULL) THEN 0.05432072236762381 ELSE "ADS"."Feature_89" END AS impter_91, CASE WHEN ("ADS"."Feature_90" IS NULL) THEN -0.01029209788232909 ELSE "ADS"."Feature_90" END AS impter_92, CASE WHEN ("ADS"."Feature_91" IS NULL) THEN -0.057667586642934685 ELSE "ADS"."Feature_91" END AS impter_93, CASE WHEN ("ADS"."Feature_92" IS NULL) THEN 0.010705496096094396 ELSE "ADS"."Feature_92" END AS impter_94, CASE WHEN ("ADS"."Feature_93" IS NULL) THEN 0.07155562158168 ELSE "ADS"."Feature_93" END AS impter_95, CASE WHEN ("ADS"."Feature_94" IS NULL) THEN 0.012567881232469623 ELSE "ADS"."Feature_94" END AS impter_96, CASE WHEN ("ADS"."Feature_95" IS NULL) THEN 0.013515801306018876 ELSE "ADS"."Feature_95" END AS impter_97, CASE WHEN ("ADS"."Feature_96" IS NULL) THEN -0.03144133874056725 ELSE "ADS"."Feature_96" END AS impter_98, CASE WHEN ("ADS"."Feature_97" IS NULL) THEN 0.04347042885615023 ELSE "ADS"."Feature_97" END AS impter_99, CASE WHEN ("ADS"."Feature_98" IS NULL) THEN 0.06271561958724896 ELSE "ADS"."Feature_98" END AS impter_100, CASE WHEN ("ADS"."Feature_99" IS NULL) THEN 0.05756441101485498 ELSE "ADS"."Feature_99" END AS impter_101, CASE WHEN ("ADS"."Feature_100" IS NULL) THEN 0.08328088835981105 ELSE "ADS"."Feature_100" END AS impter_102, CASE WHEN ("ADS"."Feature_101" IS NULL) THEN 0.027342821102590696 ELSE "ADS"."Feature_101" END AS impter_103, CASE WHEN ("ADS"."Feature_102" IS NULL) THEN -0.45823161485829694 ELSE "ADS"."Feature_102" END AS impter_104, CASE WHEN ("ADS"."Feature_103" IS NULL) THEN -0.0574871655764397 ELSE "ADS"."Feature_103" END AS impter_105, CASE WHEN ("ADS"."Feature_104" IS NULL) THEN -0.04439086595851878 ELSE "ADS"."Feature_104" END AS impter_106, CASE WHEN ("ADS"."Feature_105" IS NULL) THEN 0.02144592469206838 ELSE "ADS"."Feature_105" END AS impter_107, CASE WHEN ("ADS"."Feature_106" IS NULL) THEN 0.11209373860993643 ELSE "ADS"."Feature_106" END AS impter_108, CASE WHEN ("ADS"."Feature_107" IS NULL) THEN 0.020021880427962078 ELSE "ADS"."Feature_107" END AS impter_109, CASE WHEN ("ADS"."Feature_108" IS NULL) THEN -0.009743329217515511 ELSE "ADS"."Feature_108" END AS impter_110, CASE WHEN ("ADS"."Feature_109" IS NULL) THEN 0.4786622270719938 ELSE "ADS"."Feature_109" END AS impter_111, CASE WHEN ("ADS"."Feature_110" IS NULL) THEN 0.02944493462807616 ELSE "ADS"."Feature_110" END AS impter_112, CASE WHEN ("ADS"."Feature_111" IS NULL) THEN -0.00310096676730144 ELSE "ADS"."Feature_111" END AS impter_113, CASE WHEN ("ADS"."Feature_112" IS NULL) THEN 0.0231371409575344 ELSE "ADS"."Feature_112" END AS impter_114, CASE WHEN ("ADS"."Feature_113" IS NULL) THEN -0.04815066967587055 ELSE "ADS"."Feature_113" END AS impter_115, CASE WHEN ("ADS"."Feature_114" IS NULL) THEN 0.025111413866439537 ELSE "ADS"."Feature_114" END AS impter_116, CASE WHEN ("ADS"."Feature_115" IS NULL) THEN 0.0021133311116955213 ELSE "ADS"."Feature_115" END AS impter_117, CASE WHEN ("ADS"."Feature_116" IS NULL) THEN 0.034947174142157644 ELSE "ADS"."Feature_116" END AS impter_118, CASE WHEN ("ADS"."Feature_117" IS NULL) THEN -0.05606347652620213 ELSE "ADS"."Feature_117" END AS impter_119, CASE WHEN ("ADS"."Feature_118" IS NULL) THEN -0.023812528369921485 ELSE "ADS"."Feature_118" END AS impter_120, CASE WHEN ("ADS"."Feature_119" IS NULL) THEN -0.042073637845818246 ELSE "ADS"."Feature_119" END AS impter_121, CASE WHEN ("ADS"."Feature_120" IS NULL) THEN 0.007882510288965947 ELSE "ADS"."Feature_120" END AS impter_122, CASE WHEN ("ADS"."Feature_121" IS NULL) THEN -0.02733468989970973 ELSE "ADS"."Feature_121" END AS impter_123, CASE WHEN ("ADS"."Feature_122" IS NULL) THEN -0.6701750904403835 ELSE "ADS"."Feature_122" END AS impter_124, CASE WHEN ("ADS"."Feature_123" IS NULL) THEN -0.04044317104909807 ELSE "ADS"."Feature_123" END AS impter_125, CASE WHEN ("ADS"."Feature_124" IS NULL) THEN -0.00837516585592746 ELSE "ADS"."Feature_124" END AS impter_126, CASE WHEN ("ADS"."Feature_125" IS NULL) THEN -0.005344367193538407 ELSE "ADS"."Feature_125" END AS impter_127, CASE WHEN ("ADS"."Feature_126" IS NULL) THEN -0.009191225939401346 ELSE "ADS"."Feature_126" END AS impter_128, CASE WHEN ("ADS"."Feature_127" IS NULL) THEN -0.004068573508204202 ELSE "ADS"."Feature_127" END AS impter_129, CASE WHEN ("ADS"."Feature_128" IS NULL) THEN -0.030267877751773992 ELSE "ADS"."Feature_128" END AS impter_130, CASE WHEN ("ADS"."Feature_129" IS NULL) THEN 0.17410306271063888 ELSE "ADS"."Feature_129" END AS impter_131, CASE WHEN ("ADS"."Feature_130" IS NULL) THEN -0.012642941998284607 ELSE "ADS"."Feature_130" END AS impter_132, CASE WHEN ("ADS"."Feature_131" IS NULL) THEN 0.01749739797543971 ELSE "ADS"."Feature_131" END AS impter_133, CASE WHEN ("ADS"."Feature_132" IS NULL) THEN 0.5426783595611434 ELSE "ADS"."Feature_132" END AS impter_134, CASE WHEN ("ADS"."Feature_133" IS NULL) THEN -0.5946970819130108 ELSE "ADS"."Feature_133" END AS impter_135, CASE WHEN ("ADS"."Feature_134" IS NULL) THEN -0.02934504234656094 ELSE "ADS"."Feature_134" END AS impter_136, CASE WHEN ("ADS"."Feature_135" IS NULL) THEN 0.06552557763413538 ELSE "ADS"."Feature_135" END AS impter_137, CASE WHEN ("ADS"."Feature_136" IS NULL) THEN -0.05569025110062092 ELSE "ADS"."Feature_136" END AS impter_138, CASE WHEN ("ADS"."Feature_137" IS NULL) THEN 0.023191171882599493 ELSE "ADS"."Feature_137" END AS impter_139, CASE WHEN ("ADS"."Feature_138" IS NULL) THEN -0.05295059390165566 ELSE "ADS"."Feature_138" END AS impter_140, CASE WHEN ("ADS"."Feature_139" IS NULL) THEN 0.033509246297397904 ELSE "ADS"."Feature_139" END AS impter_141, CASE WHEN ("ADS"."Feature_140" IS NULL) THEN -0.04155471151345872 ELSE "ADS"."Feature_140" END AS impter_142, CASE WHEN ("ADS"."Feature_141" IS NULL) THEN -0.6634336506604639 ELSE "ADS"."Feature_141" END AS impter_143, CASE WHEN ("ADS"."Feature_142" IS NULL) THEN -0.5573588681497673 ELSE "ADS"."Feature_142" END AS impter_144, CASE WHEN ("ADS"."Feature_143" IS NULL) THEN 0.0441240830479543 ELSE "ADS"."Feature_143" END AS impter_145, CASE WHEN ("ADS"."Feature_144" IS NULL) THEN -0.0032026430582909036 ELSE "ADS"."Feature_144" END AS impter_146, CASE WHEN ("ADS"."Feature_145" IS NULL) THEN 0.0547961032530105 ELSE "ADS"."Feature_145" END AS impter_147, CASE WHEN ("ADS"."Feature_146" IS NULL) THEN -0.0570190089317311 ELSE "ADS"."Feature_146" END AS impter_148, CASE WHEN ("ADS"."Feature_147" IS NULL) THEN -0.05068123758307288 ELSE "ADS"."Feature_147" END AS impter_149, CASE WHEN ("ADS"."Feature_148" IS NULL) THEN 0.04963772213165472 ELSE "ADS"."Feature_148" END AS impter_150, CASE WHEN ("ADS"."Feature_149" IS NULL) THEN -0.0053902063922270736 ELSE "ADS"."Feature_149" END AS impter_151, CASE WHEN ("ADS"."Feature_150" IS NULL) THEN -0.06888968948833549 ELSE "ADS"."Feature_150" END AS impter_152, CASE WHEN ("ADS"."Feature_151" IS NULL) THEN -0.016131263076271454 ELSE "ADS"."Feature_151" END AS impter_153, CASE WHEN ("ADS"."Feature_152" IS NULL) THEN -0.3673160108448531 ELSE "ADS"."Feature_152" END AS impter_154, CASE WHEN ("ADS"."Feature_153" IS NULL) THEN 0.055182003778661885 ELSE "ADS"."Feature_153" END AS impter_155, CASE WHEN ("ADS"."Feature_154" IS NULL) THEN 0.03906491494486876 ELSE "ADS"."Feature_154" END AS impter_156, CASE WHEN ("ADS"."Feature_155" IS NULL) THEN -0.018774913038090556 ELSE "ADS"."Feature_155" END AS impter_157, CASE WHEN ("ADS"."Feature_156" IS NULL) THEN 0.04167563251378332 ELSE "ADS"."Feature_156" END AS impter_158, CASE WHEN ("ADS"."Feature_157" IS NULL) THEN -0.014464200228668327 ELSE "ADS"."Feature_157" END AS impter_159, CASE WHEN ("ADS"."Feature_158" IS NULL) THEN 0.001498972159727102 ELSE "ADS"."Feature_158" END AS impter_160, CASE WHEN ("ADS"."Feature_159" IS NULL) THEN -0.018229772297973595 ELSE "ADS"."Feature_159" END AS impter_161, CASE WHEN ("ADS"."Feature_160" IS NULL) THEN -0.044371023327894055 ELSE "ADS"."Feature_160" END AS impter_162, CASE WHEN ("ADS"."Feature_161" IS NULL) THEN 0.003260044680277718 ELSE "ADS"."Feature_161" END AS impter_163, CASE WHEN ("ADS"."Feature_162" IS NULL) THEN 0.04743398414161841 ELSE "ADS"."Feature_162" END AS impter_164, CASE WHEN ("ADS"."Feature_163" IS NULL) THEN 0.02952107505742563 ELSE "ADS"."Feature_163" END AS impter_165, CASE WHEN ("ADS"."Feature_164" IS NULL) THEN 0.039029822514854 ELSE "ADS"."Feature_164" END AS impter_166, CASE WHEN ("ADS"."Feature_165" IS NULL) THEN 0.33233879962749624 ELSE "ADS"."Feature_165" END AS impter_167, CASE WHEN ("ADS"."Feature_166" IS NULL) THEN -0.030838711525630415 ELSE "ADS"."Feature_166" END AS impter_168, CASE WHEN ("ADS"."Feature_167" IS NULL) THEN 0.053457495179036106 ELSE "ADS"."Feature_167" END AS impter_169, CASE WHEN ("ADS"."Feature_168" IS NULL) THEN 0.06334783178164666 ELSE "ADS"."Feature_168" END AS impter_170, CASE WHEN ("ADS"."Feature_169" IS NULL) THEN -0.015185631962267647 ELSE "ADS"."Feature_169" END AS impter_171, CASE WHEN ("ADS"."Feature_170" IS NULL) THEN -0.0373186897788836 ELSE "ADS"."Feature_170" END AS impter_172, CASE WHEN ("ADS"."Feature_171" IS NULL) THEN 0.058926161621590305 ELSE "ADS"."Feature_171" END AS impter_173, CASE WHEN ("ADS"."Feature_172" IS NULL) THEN 9.69895410212665e-05 ELSE "ADS"."Feature_172" END AS impter_174, CASE WHEN ("ADS"."Feature_173" IS NULL) THEN 0.023780298476686824 ELSE "ADS"."Feature_173" END AS impter_175, CASE WHEN ("ADS"."Feature_174" IS NULL) THEN 0.021640308005590803 ELSE "ADS"."Feature_174" END AS impter_176, CASE WHEN ("ADS"."Feature_175" IS NULL) THEN 0.02609411025064558 ELSE "ADS"."Feature_175" END AS impter_177, CASE WHEN ("ADS"."Feature_176" IS NULL) THEN 0.053659812775327234 ELSE "ADS"."Feature_176" END AS impter_178, CASE WHEN ("ADS"."Feature_177" IS NULL) THEN 0.02312075671447861 ELSE "ADS"."Feature_177" END AS impter_179, CASE WHEN ("ADS"."Feature_178" IS NULL) THEN 0.08189652549389312 ELSE "ADS"."Feature_178" END AS impter_180, CASE WHEN ("ADS"."Feature_179" IS NULL) THEN -0.28662694866746835 ELSE "ADS"."Feature_179" END AS impter_181, CASE WHEN ("ADS"."Feature_180" IS NULL) THEN -0.06816976745830143 ELSE "ADS"."Feature_180" END AS impter_182, CASE WHEN ("ADS"."Feature_181" IS NULL) THEN -0.0288394136395886 ELSE "ADS"."Feature_181" END AS impter_183, CASE WHEN ("ADS"."Feature_182" IS NULL) THEN 0.030475929720363698 ELSE "ADS"."Feature_182" END AS impter_184, CASE WHEN ("ADS"."Feature_183" IS NULL) THEN -0.9321092506061046 ELSE "ADS"."Feature_183" END AS impter_185, CASE WHEN ("ADS"."Feature_184" IS NULL) THEN -0.005783297854668443 ELSE "ADS"."Feature_184" END AS impter_186, CASE WHEN ("ADS"."Feature_185" IS NULL) THEN -0.6842779545480162 ELSE "ADS"."Feature_185" END AS impter_187, CASE WHEN ("ADS"."Feature_186" IS NULL) THEN -0.035868681753580677 ELSE "ADS"."Feature_186" END AS impter_188, CASE WHEN ("ADS"."Feature_187" IS NULL) THEN 0.37446820466554537 ELSE "ADS"."Feature_187" END AS impter_189, CASE WHEN ("ADS"."Feature_188" IS NULL) THEN 0.03710250301413846 ELSE "ADS"."Feature_188" END AS impter_190, CASE WHEN ("ADS"."Feature_189" IS NULL) THEN -0.1405646996029281 ELSE "ADS"."Feature_189" END AS impter_191, CASE WHEN ("ADS"."Feature_190" IS NULL) THEN -0.008242263620478222 ELSE "ADS"."Feature_190" END AS impter_192, CASE WHEN ("ADS"."Feature_191" IS NULL) THEN 0.23469193009627595 ELSE "ADS"."Feature_191" END AS impter_193, CASE WHEN ("ADS"."Feature_192" IS NULL) THEN -0.04853360559010945 ELSE "ADS"."Feature_192" END AS impter_194, CASE WHEN ("ADS"."Feature_193" IS NULL) THEN -0.29107017412914993 ELSE "ADS"."Feature_193" END AS impter_195, CASE WHEN ("ADS"."Feature_194" IS NULL) THEN 0.06554945522577102 ELSE "ADS"."Feature_194" END AS impter_196, CASE WHEN ("ADS"."Feature_195" IS NULL) THEN 0.03415746968907192 ELSE "ADS"."Feature_195" END AS impter_197, CASE WHEN ("ADS"."Feature_196" IS NULL) THEN -1.0112490880861227 ELSE "ADS"."Feature_196" END AS impter_198, CASE WHEN ("ADS"."Feature_197" IS NULL) THEN 0.4496849630728245 ELSE "ADS"."Feature_197" END AS impter_199, CASE WHEN ("ADS"."Feature_198" IS NULL) THEN 0.032026535978956015 ELSE "ADS"."Feature_198" END AS impter_200, CASE WHEN ("ADS"."Feature_199" IS NULL) THEN 0.000929134812353008 ELSE "ADS"."Feature_199" END AS impter_201, CASE WHEN ("ADS"."Feature_200" IS NULL) THEN 0.013717912018418882 ELSE "ADS"."Feature_200" END AS impter_202, CASE WHEN ("ADS"."Feature_201" IS NULL) THEN -0.025517677160104602 ELSE "ADS"."Feature_201" END AS impter_203, CASE WHEN ("ADS"."Feature_202" IS NULL) THEN 0.008684033616587546 ELSE "ADS"."Feature_202" END AS impter_204, CASE WHEN ("ADS"."Feature_203" IS NULL) THEN 0.013537249806385316 ELSE "ADS"."Feature_203" END AS impter_205, CASE WHEN ("ADS"."Feature_204" IS NULL) THEN -0.0230268828473152 ELSE "ADS"."Feature_204" END AS impter_206, CASE WHEN ("ADS"."Feature_205" IS NULL) THEN 0.03589117923846176 ELSE "ADS"."Feature_205" END AS impter_207, CASE WHEN ("ADS"."Feature_206" IS NULL) THEN -0.011430934569701108 ELSE "ADS"."Feature_206" END AS impter_208, CASE WHEN ("ADS"."Feature_207" IS NULL) THEN -0.03231136300980085 ELSE "ADS"."Feature_207" END AS impter_209, CASE WHEN ("ADS"."Feature_208" IS NULL) THEN -0.03420275223278265 ELSE "ADS"."Feature_208" END AS impter_210, CASE WHEN ("ADS"."Feature_209" IS NULL) THEN 0.23377425435020424 ELSE "ADS"."Feature_209" END AS impter_211, CASE WHEN ("ADS"."Feature_210" IS NULL) THEN 0.06340248702486702 ELSE "ADS"."Feature_210" END AS impter_212, CASE WHEN ("ADS"."Feature_211" IS NULL) THEN -0.031763897397096605 ELSE "ADS"."Feature_211" END AS impter_213, CASE WHEN ("ADS"."Feature_212" IS NULL) THEN 0.004392749210234481 ELSE "ADS"."Feature_212" END AS impter_214, CASE WHEN ("ADS"."Feature_213" IS NULL) THEN -0.007220451377103457 ELSE "ADS"."Feature_213" END AS impter_215, CASE WHEN ("ADS"."Feature_214" IS NULL) THEN 0.001039454428951527 ELSE "ADS"."Feature_214" END AS impter_216, CASE WHEN ("ADS"."Feature_215" IS NULL) THEN 0.255416687811933 ELSE "ADS"."Feature_215" END AS impter_217, CASE WHEN ("ADS"."Feature_216" IS NULL) THEN -0.1279428512452052 ELSE "ADS"."Feature_216" END AS impter_218, CASE WHEN ("ADS"."Feature_217" IS NULL) THEN 0.11623077388873257 ELSE "ADS"."Feature_217" END AS impter_219, CASE WHEN ("ADS"."Feature_218" IS NULL) THEN 0.04461217703505275 ELSE "ADS"."Feature_218" END AS impter_220, CASE WHEN ("ADS"."Feature_219" IS NULL) THEN -0.03146418763016053 ELSE "ADS"."Feature_219" END AS impter_221, CASE WHEN ("ADS"."Feature_220" IS NULL) THEN 0.03437191123539599 ELSE "ADS"."Feature_220" END AS impter_222, CASE WHEN ("ADS"."Feature_221" IS NULL) THEN 0.02811765018111002 ELSE "ADS"."Feature_221" END AS impter_223, CASE WHEN ("ADS"."Feature_222" IS NULL) THEN -0.008115500982846469 ELSE "ADS"."Feature_222" END AS impter_224, CASE WHEN ("ADS"."Feature_223" IS NULL) THEN 0.0346610159959258 ELSE "ADS"."Feature_223" END AS impter_225, CASE WHEN ("ADS"."Feature_224" IS NULL) THEN 0.04873411944524845 ELSE "ADS"."Feature_224" END AS impter_226, CASE WHEN ("ADS"."Feature_225" IS NULL) THEN 4.894869923178419e-05 ELSE "ADS"."Feature_225" END AS impter_227, CASE WHEN ("ADS"."Feature_226" IS NULL) THEN 0.018209676154939517 ELSE "ADS"."Feature_226" END AS impter_228, CASE WHEN ("ADS"."Feature_227" IS NULL) THEN 0.026610576357411958 ELSE "ADS"."Feature_227" END AS impter_229, CASE WHEN ("ADS"."Feature_228" IS NULL) THEN -0.18927414463099612 ELSE "ADS"."Feature_228" END AS impter_230, CASE WHEN ("ADS"."Feature_229" IS NULL) THEN 0.7485324016005227 ELSE "ADS"."Feature_229" END AS impter_231, CASE WHEN ("ADS"."Feature_230" IS NULL) THEN 0.0487697431569858 ELSE "ADS"."Feature_230" END AS impter_232, CASE WHEN ("ADS"."Feature_231" IS NULL) THEN -0.05674203944761021 ELSE "ADS"."Feature_231" END AS impter_233, CASE WHEN ("ADS"."Feature_232" IS NULL) THEN -0.016772355037112788 ELSE "ADS"."Feature_232" END AS impter_234, CASE WHEN ("ADS"."Feature_233" IS NULL) THEN 0.021959192758732798 ELSE "ADS"."Feature_233" END AS impter_235, CASE WHEN ("ADS"."Feature_234" IS NULL) THEN 0.009017510252386856 ELSE "ADS"."Feature_234" END AS impter_236, CASE WHEN ("ADS"."Feature_235" IS NULL) THEN 0.01719604397851632 ELSE "ADS"."Feature_235" END AS impter_237, CASE WHEN ("ADS"."Feature_236" IS NULL) THEN 0.04752740880676183 ELSE "ADS"."Feature_236" END AS impter_238, CASE WHEN ("ADS"."Feature_237" IS NULL) THEN -0.6655794242164356 ELSE "ADS"."Feature_237" END AS impter_239, CASE WHEN ("ADS"."Feature_238" IS NULL) THEN 0.040740002170661385 ELSE "ADS"."Feature_238" END AS impter_240, CASE WHEN ("ADS"."Feature_239" IS NULL) THEN -0.06790575667026853 ELSE "ADS"."Feature_239" END AS impter_241, CASE WHEN ("ADS"."Feature_240" IS NULL) THEN 0.00892920073818756 ELSE "ADS"."Feature_240" END AS impter_242, CASE WHEN ("ADS"."Feature_241" IS NULL) THEN -0.05642200650387437 ELSE "ADS"."Feature_241" END AS impter_243, CASE WHEN ("ADS"."Feature_242" IS NULL) THEN 0.020080371219515784 ELSE "ADS"."Feature_242" END AS impter_244, CASE WHEN ("ADS"."Feature_243" IS NULL) THEN -0.08127236320512923 ELSE "ADS"."Feature_243" END AS impter_245, CASE WHEN ("ADS"."Feature_244" IS NULL) THEN 0.013048668554363934 ELSE "ADS"."Feature_244" END AS impter_246, CASE WHEN ("ADS"."Feature_245" IS NULL) THEN 0.018841776335809746 ELSE "ADS"."Feature_245" END AS impter_247, CASE WHEN ("ADS"."Feature_246" IS NULL) THEN -0.005693217051300183 ELSE "ADS"."Feature_246" END AS impter_248, CASE WHEN ("ADS"."Feature_247" IS NULL) THEN -0.20394320931579465 ELSE "ADS"."Feature_247" END AS impter_249, CASE WHEN ("ADS"."Feature_248" IS NULL) THEN -0.022446042990387664 ELSE "ADS"."Feature_248" END AS impter_250, CASE WHEN ("ADS"."Feature_249" IS NULL) THEN -4.076861252102798 ELSE "ADS"."Feature_249" END AS impter_251, CASE WHEN ("ADS"."Feature_250" IS NULL) THEN -0.008817990550602733 ELSE "ADS"."Feature_250" END AS impter_252, CASE WHEN ("ADS"."Feature_251" IS NULL) THEN 0.07233780023230166 ELSE "ADS"."Feature_251" END AS impter_253, CASE WHEN ("ADS"."Feature_252" IS NULL) THEN 0.1138593990290942 ELSE "ADS"."Feature_252" END AS impter_254, CASE WHEN ("ADS"."Feature_253" IS NULL) THEN -0.014123411384636636 ELSE "ADS"."Feature_253" END AS impter_255, CASE WHEN ("ADS"."Feature_254" IS NULL) THEN 0.014692128598930085 ELSE "ADS"."Feature_254" END AS impter_256, CASE WHEN ("ADS"."Feature_255" IS NULL) THEN 0.04595744723507997 ELSE "ADS"."Feature_255" END AS impter_257, CASE WHEN ("ADS"."Feature_256" IS NULL) THEN 0.015847884802623332 ELSE "ADS"."Feature_256" END AS impter_258, CASE WHEN ("ADS"."Feature_257" IS NULL) THEN 0.029322592909880204 ELSE "ADS"."Feature_257" END AS impter_259, CASE WHEN ("ADS"."Feature_258" IS NULL) THEN -0.03535258574843743 ELSE "ADS"."Feature_258" END AS impter_260, CASE WHEN ("ADS"."Feature_259" IS NULL) THEN -0.00650490190973122 ELSE "ADS"."Feature_259" END AS impter_261, CASE WHEN ("ADS"."Feature_260" IS NULL) THEN -0.03690470759934596 ELSE "ADS"."Feature_260" END AS impter_262, CASE WHEN ("ADS"."Feature_261" IS NULL) THEN -0.003181913166654664 ELSE "ADS"."Feature_261" END AS impter_263, CASE WHEN ("ADS"."Feature_262" IS NULL) THEN -0.0018035463835158838 ELSE "ADS"."Feature_262" END AS impter_264, CASE WHEN ("ADS"."Feature_263" IS NULL) THEN -0.004968061346310874 ELSE "ADS"."Feature_263" END AS impter_265, CASE WHEN ("ADS"."Feature_264" IS NULL) THEN -0.45419983150371857 ELSE "ADS"."Feature_264" END AS impter_266, CASE WHEN ("ADS"."Feature_265" IS NULL) THEN 0.033791499419119894 ELSE "ADS"."Feature_265" END AS impter_267, CASE WHEN ("ADS"."Feature_266" IS NULL) THEN -0.40319293830766156 ELSE "ADS"."Feature_266" END AS impter_268, CASE WHEN ("ADS"."Feature_267" IS NULL) THEN 0.6187460938207908 ELSE "ADS"."Feature_267" END AS impter_269, CASE WHEN ("ADS"."Feature_268" IS NULL) THEN 0.622898951615882 ELSE "ADS"."Feature_268" END AS impter_270, CASE WHEN ("ADS"."Feature_269" IS NULL) THEN -0.018232408103028765 ELSE "ADS"."Feature_269" END AS impter_271, CASE WHEN ("ADS"."Feature_270" IS NULL) THEN 0.01765800846800944 ELSE "ADS"."Feature_270" END AS impter_272, CASE WHEN ("ADS"."Feature_271" IS NULL) THEN -0.7754580279730494 ELSE "ADS"."Feature_271" END AS impter_273, CASE WHEN ("ADS"."Feature_272" IS NULL) THEN -0.008494942988361138 ELSE "ADS"."Feature_272" END AS impter_274, CASE WHEN ("ADS"."Feature_273" IS NULL) THEN 0.06500802952263218 ELSE "ADS"."Feature_273" END AS impter_275, CASE WHEN ("ADS"."Feature_274" IS NULL) THEN 0.004846639297532018 ELSE "ADS"."Feature_274" END AS impter_276, CASE WHEN ("ADS"."Feature_275" IS NULL) THEN 0.31959901606775876 ELSE "ADS"."Feature_275" END AS impter_277, CASE WHEN ("ADS"."Feature_276" IS NULL) THEN 0.06335285521269475 ELSE "ADS"."Feature_276" END AS impter_278, CASE WHEN ("ADS"."Feature_277" IS NULL) THEN 0.05639859786390925 ELSE "ADS"."Feature_277" END AS impter_279, CASE WHEN ("ADS"."Feature_278" IS NULL) THEN -0.016826126115809636 ELSE "ADS"."Feature_278" END AS impter_280, CASE WHEN ("ADS"."Feature_279" IS NULL) THEN -0.035868631202668005 ELSE "ADS"."Feature_279" END AS impter_281, CASE WHEN ("ADS"."Feature_280" IS NULL) THEN 0.5939567726507027 ELSE "ADS"."Feature_280" END AS impter_282, CASE WHEN ("ADS"."Feature_281" IS NULL) THEN -0.018499482983219337 ELSE "ADS"."Feature_281" END AS impter_283, CASE WHEN ("ADS"."Feature_282" IS NULL) THEN -0.002126060350638963 ELSE "ADS"."Feature_282" END AS impter_284, CASE WHEN ("ADS"."Feature_283" IS NULL) THEN 0.43749055924133856 ELSE "ADS"."Feature_283" END AS impter_285, CASE WHEN ("ADS"."Feature_284" IS NULL) THEN -0.002792990485326514 ELSE "ADS"."Feature_284" END AS impter_286, CASE WHEN ("ADS"."Feature_285" IS NULL) THEN 0.05111067471537181 ELSE "ADS"."Feature_285" END AS impter_287, CASE WHEN ("ADS"."Feature_286" IS NULL) THEN 0.01652404135719371 ELSE "ADS"."Feature_286" END AS impter_288, CASE WHEN ("ADS"."Feature_287" IS NULL) THEN 0.046881980038056 ELSE "ADS"."Feature_287" END AS impter_289, CASE WHEN ("ADS"."Feature_288" IS NULL) THEN -0.21093566587728044 ELSE "ADS"."Feature_288" END AS impter_290, CASE WHEN ("ADS"."Feature_289" IS NULL) THEN -0.38235732593808275 ELSE "ADS"."Feature_289" END AS impter_291, CASE WHEN ("ADS"."Feature_290" IS NULL) THEN 0.07184577295054764 ELSE "ADS"."Feature_290" END AS impter_292, CASE WHEN ("ADS"."Feature_291" IS NULL) THEN 0.04617448263239929 ELSE "ADS"."Feature_291" END AS impter_293, CASE WHEN ("ADS"."Feature_292" IS NULL) THEN -0.08558825454913567 ELSE "ADS"."Feature_292" END AS impter_294, CASE WHEN ("ADS"."Feature_293" IS NULL) THEN 0.03845417409897625 ELSE "ADS"."Feature_293" END AS impter_295, CASE WHEN ("ADS"."Feature_294" IS NULL) THEN 0.0010861389762425358 ELSE "ADS"."Feature_294" END AS impter_296, CASE WHEN ("ADS"."Feature_295" IS NULL) THEN 0.0013036543004699376 ELSE "ADS"."Feature_295" END AS impter_297, CASE WHEN ("ADS"."Feature_296" IS NULL) THEN -0.04572115009336087 ELSE "ADS"."Feature_296" END AS impter_298, CASE WHEN ("ADS"."Feature_297" IS NULL) THEN 0.109011335964655 ELSE "ADS"."Feature_297" END AS impter_299, CASE WHEN ("ADS"."Feature_298" IS NULL) THEN 0.059388745922670474 ELSE "ADS"."Feature_298" END AS impter_300, CASE WHEN ("ADS"."Feature_299" IS NULL) THEN 0.02796049502507793 ELSE "ADS"."Feature_299" END AS impter_301, CASE WHEN ("ADS"."Feature_300" IS NULL) THEN 0.06765588611224771 ELSE "ADS"."Feature_300" END AS impter_302, CASE WHEN ("ADS"."Feature_301" IS NULL) THEN 0.42516463145086364 ELSE "ADS"."Feature_301" END AS impter_303, CASE WHEN ("ADS"."Feature_302" IS NULL) THEN -0.025755583751806005 ELSE "ADS"."Feature_302" END AS impter_304, CASE WHEN ("ADS"."Feature_303" IS NULL) THEN 0.05983631292026072 ELSE "ADS"."Feature_303" END AS impter_305, CASE WHEN ("ADS"."Feature_304" IS NULL) THEN -0.022966826151323574 ELSE "ADS"."Feature_304" END AS impter_306, CASE WHEN ("ADS"."Feature_305" IS NULL) THEN -0.025059373911550786 ELSE "ADS"."Feature_305" END AS impter_307, CASE WHEN ("ADS"."Feature_306" IS NULL) THEN -0.07477780703395227 ELSE "ADS"."Feature_306" END AS impter_308, CASE WHEN ("ADS"."Feature_307" IS NULL) THEN 0.005214344538572354 ELSE "ADS"."Feature_307" END AS impter_309, CASE WHEN ("ADS"."Feature_308" IS NULL) THEN 0.15069860934029664 ELSE "ADS"."Feature_308" END AS impter_310, CASE WHEN ("ADS"."Feature_309" IS NULL) THEN 0.0920648545309688 ELSE "ADS"."Feature_309" END AS impter_311, CASE WHEN ("ADS"."Feature_310" IS NULL) THEN 0.02872039649838287 ELSE "ADS"."Feature_310" END AS impter_312, CASE WHEN ("ADS"."Feature_311" IS NULL) THEN 0.027206434346339497 ELSE "ADS"."Feature_311" END AS impter_313, CASE WHEN ("ADS"."Feature_312" IS NULL) THEN 0.006348743003703792 ELSE "ADS"."Feature_312" END AS impter_314, CASE WHEN ("ADS"."Feature_313" IS NULL) THEN -0.05402460092901892 ELSE "ADS"."Feature_313" END AS impter_315, CASE WHEN ("ADS"."Feature_314" IS NULL) THEN 0.027029051133963092 ELSE "ADS"."Feature_314" END AS impter_316, CASE WHEN ("ADS"."Feature_315" IS NULL) THEN -0.0064650471205589975 ELSE "ADS"."Feature_315" END AS impter_317, CASE WHEN ("ADS"."Feature_316" IS NULL) THEN -0.043335487666484804 ELSE "ADS"."Feature_316" END AS impter_318, CASE WHEN ("ADS"."Feature_317" IS NULL) THEN 0.04481518768554344 ELSE "ADS"."Feature_317" END AS impter_319, CASE WHEN ("ADS"."Feature_318" IS NULL) THEN 0.004584500412058787 ELSE "ADS"."Feature_318" END AS impter_320, CASE WHEN ("ADS"."Feature_319" IS NULL) THEN -0.001027021710811342 ELSE "ADS"."Feature_319" END AS impter_321, CASE WHEN ("ADS"."Feature_320" IS NULL) THEN -0.03706762371695285 ELSE "ADS"."Feature_320" END AS impter_322, CASE WHEN ("ADS"."Feature_321" IS NULL) THEN -0.01578014654880059 ELSE "ADS"."Feature_321" END AS impter_323, CASE WHEN ("ADS"."Feature_322" IS NULL) THEN -0.06476010801389685 ELSE "ADS"."Feature_322" END AS impter_324, CASE WHEN ("ADS"."Feature_323" IS NULL) THEN 0.013158594346038825 ELSE "ADS"."Feature_323" END AS impter_325, CASE WHEN ("ADS"."Feature_324" IS NULL) THEN -0.6909561374047029 ELSE "ADS"."Feature_324" END AS impter_326, CASE WHEN ("ADS"."Feature_325" IS NULL) THEN -0.032307395882269586 ELSE "ADS"."Feature_325" END AS impter_327, CASE WHEN ("ADS"."Feature_326" IS NULL) THEN 0.001871548534192734 ELSE "ADS"."Feature_326" END AS impter_328, CASE WHEN ("ADS"."Feature_327" IS NULL) THEN 0.009014081196377208 ELSE "ADS"."Feature_327" END AS impter_329, CASE WHEN ("ADS"."Feature_328" IS NULL) THEN 0.08432204289520576 ELSE "ADS"."Feature_328" END AS impter_330, CASE WHEN ("ADS"."Feature_329" IS NULL) THEN 0.03098818000424445 ELSE "ADS"."Feature_329" END AS impter_331, CASE WHEN ("ADS"."Feature_330" IS NULL) THEN 0.017842106547205465 ELSE "ADS"."Feature_330" END AS impter_332, CASE WHEN ("ADS"."Feature_331" IS NULL) THEN 0.009830954519062886 ELSE "ADS"."Feature_331" END AS impter_333, CASE WHEN ("ADS"."Feature_332" IS NULL) THEN 0.018857904928326345 ELSE "ADS"."Feature_332" END AS impter_334, CASE WHEN ("ADS"."Feature_333" IS NULL) THEN -0.09041919658309759 ELSE "ADS"."Feature_333" END AS impter_335, CASE WHEN ("ADS"."Feature_334" IS NULL) THEN -0.0030938413689644926 ELSE "ADS"."Feature_334" END AS impter_336, CASE WHEN ("ADS"."Feature_335" IS NULL) THEN 0.06013463236860367 ELSE "ADS"."Feature_335" END AS impter_337, CASE WHEN ("ADS"."Feature_336" IS NULL) THEN -0.006783134159713595 ELSE "ADS"."Feature_336" END AS impter_338, CASE WHEN ("ADS"."Feature_337" IS NULL) THEN -0.022505432033342578 ELSE "ADS"."Feature_337" END AS impter_339, CASE WHEN ("ADS"."Feature_338" IS NULL) THEN 0.012902527459674764 ELSE "ADS"."Feature_338" END AS impter_340, CASE WHEN ("ADS"."Feature_339" IS NULL) THEN -0.03249915020429405 ELSE "ADS"."Feature_339" END AS impter_341, CASE WHEN ("ADS"."Feature_340" IS NULL) THEN -0.03379268322494926 ELSE "ADS"."Feature_340" END AS impter_342, CASE WHEN ("ADS"."Feature_341" IS NULL) THEN 0.006926122620280751 ELSE "ADS"."Feature_341" END AS impter_343, CASE WHEN ("ADS"."Feature_342" IS NULL) THEN -0.03319669654598365 ELSE "ADS"."Feature_342" END AS impter_344, CASE WHEN ("ADS"."Feature_343" IS NULL) THEN 2.7390190345202456 ELSE "ADS"."Feature_343" END AS impter_345, CASE WHEN ("ADS"."Feature_344" IS NULL) THEN -0.0075319633963496155 ELSE "ADS"."Feature_344" END AS impter_346, CASE WHEN ("ADS"."Feature_345" IS NULL) THEN 0.022124363701982737 ELSE "ADS"."Feature_345" END AS impter_347, CASE WHEN ("ADS"."Feature_346" IS NULL) THEN -0.023653773851870237 ELSE "ADS"."Feature_346" END AS impter_348, CASE WHEN ("ADS"."Feature_347" IS NULL) THEN -0.01620635032677563 ELSE "ADS"."Feature_347" END AS impter_349, CASE WHEN ("ADS"."Feature_348" IS NULL) THEN -0.021142104441251273 ELSE "ADS"."Feature_348" END AS impter_350, CASE WHEN ("ADS"."Feature_349" IS NULL) THEN -0.06890676984297263 ELSE "ADS"."Feature_349" END AS impter_351, CASE WHEN ("ADS"."Feature_350" IS NULL) THEN 0.006174673936264955 ELSE "ADS"."Feature_350" END AS impter_352, CASE WHEN ("ADS"."Feature_351" IS NULL) THEN -0.018480727521201546 ELSE "ADS"."Feature_351" END AS impter_353, CASE WHEN ("ADS"."Feature_352" IS NULL) THEN 0.01892387185297041 ELSE "ADS"."Feature_352" END AS impter_354, CASE WHEN ("ADS"."Feature_353" IS NULL) THEN 0.02727917887836492 ELSE "ADS"."Feature_353" END AS impter_355, CASE WHEN ("ADS"."Feature_354" IS NULL) THEN -0.012823623960695998 ELSE "ADS"."Feature_354" END AS impter_356, CASE WHEN ("ADS"."Feature_355" IS NULL) THEN -0.013271487823414667 ELSE "ADS"."Feature_355" END AS impter_357, CASE WHEN ("ADS"."Feature_356" IS NULL) THEN -0.03395939012664646 ELSE "ADS"."Feature_356" END AS impter_358, CASE WHEN ("ADS"."Feature_357" IS NULL) THEN 0.03223004938335937 ELSE "ADS"."Feature_357" END AS impter_359, CASE WHEN ("ADS"."Feature_358" IS NULL) THEN -0.0016017230909337308 ELSE "ADS"."Feature_358" END AS impter_360, CASE WHEN ("ADS"."Feature_359" IS NULL) THEN -0.03321899170282454 ELSE "ADS"."Feature_359" END AS impter_361, CASE WHEN ("ADS"."Feature_360" IS NULL) THEN -0.0016618588765567152 ELSE "ADS"."Feature_360" END AS impter_362, CASE WHEN ("ADS"."Feature_361" IS NULL) THEN 0.04573989570209914 ELSE "ADS"."Feature_361" END AS impter_363, CASE WHEN ("ADS"."Feature_362" IS NULL) THEN -0.021293175937165 ELSE "ADS"."Feature_362" END AS impter_364, CASE WHEN ("ADS"."Feature_363" IS NULL) THEN -0.011255144611449622 ELSE "ADS"."Feature_363" END AS impter_365, CASE WHEN ("ADS"."Feature_364" IS NULL) THEN -0.02563865782710232 ELSE "ADS"."Feature_364" END AS impter_366, CASE WHEN ("ADS"."Feature_365" IS NULL) THEN -0.015167083011311294 ELSE "ADS"."Feature_365" END AS impter_367, CASE WHEN ("ADS"."Feature_366" IS NULL) THEN 0.0010959755571049432 ELSE "ADS"."Feature_366" END AS impter_368, CASE WHEN ("ADS"."Feature_367" IS NULL) THEN 0.25830160330800345 ELSE "ADS"."Feature_367" END AS impter_369, CASE WHEN ("ADS"."Feature_368" IS NULL) THEN -0.02512420755881165 ELSE "ADS"."Feature_368" END AS impter_370, CASE WHEN ("ADS"."Feature_369" IS NULL) THEN -0.5588992061400131 ELSE "ADS"."Feature_369" END AS impter_371, CASE WHEN ("ADS"."Feature_370" IS NULL) THEN 0.04500746078257995 ELSE "ADS"."Feature_370" END AS impter_372, CASE WHEN ("ADS"."Feature_371" IS NULL) THEN -0.03582268471853405 ELSE "ADS"."Feature_371" END AS impter_373, CASE WHEN ("ADS"."Feature_372" IS NULL) THEN -0.0238194811504848 ELSE "ADS"."Feature_372" END AS impter_374, CASE WHEN ("ADS"."Feature_373" IS NULL) THEN 0.00870068158455398 ELSE "ADS"."Feature_373" END AS impter_375, CASE WHEN ("ADS"."Feature_374" IS NULL) THEN 0.41206876337723863 ELSE "ADS"."Feature_374" END AS impter_376, CASE WHEN ("ADS"."Feature_375" IS NULL) THEN -0.00883623214870824 ELSE "ADS"."Feature_375" END AS impter_377, CASE WHEN ("ADS"."Feature_376" IS NULL) THEN -0.047673712853857325 ELSE "ADS"."Feature_376" END AS impter_378, CASE WHEN ("ADS"."Feature_377" IS NULL) THEN 0.39808785261614416 ELSE "ADS"."Feature_377" END AS impter_379, CASE WHEN ("ADS"."Feature_378" IS NULL) THEN 0.014874268925561847 ELSE "ADS"."Feature_378" END AS impter_380, CASE WHEN ("ADS"."Feature_379" IS NULL) THEN -0.01355994466429737 ELSE "ADS"."Feature_379" END AS impter_381, CASE WHEN ("ADS"."Feature_380" IS NULL) THEN 0.06549584301442803 ELSE "ADS"."Feature_380" END AS impter_382, CASE WHEN ("ADS"."Feature_381" IS NULL) THEN -0.07523712848824068 ELSE "ADS"."Feature_381" END AS impter_383, CASE WHEN ("ADS"."Feature_382" IS NULL) THEN -0.020246425764404403 ELSE "ADS"."Feature_382" END AS impter_384, CASE WHEN ("ADS"."Feature_383" IS NULL) THEN -0.06505456712739689 ELSE "ADS"."Feature_383" END AS impter_385, CASE WHEN ("ADS"."Feature_384" IS NULL) THEN 0.040682923885247455 ELSE "ADS"."Feature_384" END AS impter_386, CASE WHEN ("ADS"."Feature_385" IS NULL) THEN 0.5036509170142887 ELSE "ADS"."Feature_385" END AS impter_387, CASE WHEN ("ADS"."Feature_386" IS NULL) THEN -0.01984269915156025 ELSE "ADS"."Feature_386" END AS impter_388, CASE WHEN ("ADS"."Feature_387" IS NULL) THEN -0.029975294309893395 ELSE "ADS"."Feature_387" END AS impter_389, CASE WHEN ("ADS"."Feature_388" IS NULL) THEN -0.023935150902407186 ELSE "ADS"."Feature_388" END AS impter_390, CASE WHEN ("ADS"."Feature_389" IS NULL) THEN 0.003487379328156493 ELSE "ADS"."Feature_389" END AS impter_391, CASE WHEN ("ADS"."Feature_390" IS NULL) THEN -0.006836589678473769 ELSE "ADS"."Feature_390" END AS impter_392, CASE WHEN ("ADS"."Feature_391" IS NULL) THEN -0.023001043810177268 ELSE "ADS"."Feature_391" END AS impter_393, CASE WHEN ("ADS"."Feature_392" IS NULL) THEN 0.026433076987905132 ELSE "ADS"."Feature_392" END AS impter_394, CASE WHEN ("ADS"."Feature_393" IS NULL) THEN 0.03869392603237684 ELSE "ADS"."Feature_393" END AS impter_395, CASE WHEN ("ADS"."Feature_394" IS NULL) THEN 0.007166160812626991 ELSE "ADS"."Feature_394" END AS impter_396, CASE WHEN ("ADS"."Feature_395" IS NULL) THEN -0.31652297140011876 ELSE "ADS"."Feature_395" END AS impter_397, CASE WHEN ("ADS"."Feature_396" IS NULL) THEN 0.352192927636602 ELSE "ADS"."Feature_396" END AS impter_398, CASE WHEN ("ADS"."Feature_397" IS NULL) THEN 0.2418343422011388 ELSE "ADS"."Feature_397" END AS impter_399, CASE WHEN ("ADS"."Feature_398" IS NULL) THEN 0.23681058627355728 ELSE "ADS"."Feature_398" END AS impter_400, CASE WHEN ("ADS"."Feature_399" IS NULL) THEN -0.011935061221661204 ELSE "ADS"."Feature_399" END AS impter_401, CASE WHEN ("ADS"."Feature_400" IS NULL) THEN -0.23225071389385885 ELSE "ADS"."Feature_400" END AS impter_402, CASE WHEN ("ADS"."Feature_401" IS NULL) THEN 0.027478547688853303 ELSE "ADS"."Feature_401" END AS impter_403, CASE WHEN ("ADS"."Feature_402" IS NULL) THEN -0.2835956440898274 ELSE "ADS"."Feature_402" END AS impter_404, CASE WHEN ("ADS"."Feature_403" IS NULL) THEN -0.026966778578135772 ELSE "ADS"."Feature_403" END AS impter_405, CASE WHEN ("ADS"."Feature_404" IS NULL) THEN -0.004329268838175945 ELSE "ADS"."Feature_404" END AS impter_406, CASE WHEN ("ADS"."Feature_405" IS NULL) THEN 0.0774540554940731 ELSE "ADS"."Feature_405" END AS impter_407, CASE WHEN ("ADS"."Feature_406" IS NULL) THEN -0.6052203464446785 ELSE "ADS"."Feature_406" END AS impter_408, CASE WHEN ("ADS"."Feature_407" IS NULL) THEN 0.0338701304693192 ELSE "ADS"."Feature_407" END AS impter_409, CASE WHEN ("ADS"."Feature_408" IS NULL) THEN -0.05044305753803302 ELSE "ADS"."Feature_408" END AS impter_410, CASE WHEN ("ADS"."Feature_409" IS NULL) THEN 0.008805453357057883 ELSE "ADS"."Feature_409" END AS impter_411, CASE WHEN ("ADS"."Feature_410" IS NULL) THEN -0.05374724915468808 ELSE "ADS"."Feature_410" END AS impter_412, CASE WHEN ("ADS"."Feature_411" IS NULL) THEN -0.004957359515296269 ELSE "ADS"."Feature_411" END AS impter_413, CASE WHEN ("ADS"."Feature_412" IS NULL) THEN 0.12039061456156476 ELSE "ADS"."Feature_412" END AS impter_414, CASE WHEN ("ADS"."Feature_413" IS NULL) THEN -0.005732424778663252 ELSE "ADS"."Feature_413" END AS impter_415, CASE WHEN ("ADS"."Feature_414" IS NULL) THEN -0.4286478678045208 ELSE "ADS"."Feature_414" END AS impter_416, CASE WHEN ("ADS"."Feature_415" IS NULL) THEN -0.028516293632594378 ELSE "ADS"."Feature_415" END AS impter_417, CASE WHEN ("ADS"."Feature_416" IS NULL) THEN 0.052380333284906204 ELSE "ADS"."Feature_416" END AS impter_418, CASE WHEN ("ADS"."Feature_417" IS NULL) THEN -0.028497248319907256 ELSE "ADS"."Feature_417" END AS impter_419, CASE WHEN ("ADS"."Feature_418" IS NULL) THEN -0.012190751471044496 ELSE "ADS"."Feature_418" END AS impter_420, CASE WHEN ("ADS"."Feature_419" IS NULL) THEN 0.014464401907681581 ELSE "ADS"."Feature_419" END AS impter_421, CASE WHEN ("ADS"."Feature_420" IS NULL) THEN -0.17428872440122373 ELSE "ADS"."Feature_420" END AS impter_422, CASE WHEN ("ADS"."Feature_421" IS NULL) THEN -0.01773365620191358 ELSE "ADS"."Feature_421" END AS impter_423, CASE WHEN ("ADS"."Feature_422" IS NULL) THEN 0.40558807090091853 ELSE "ADS"."Feature_422" END AS impter_424, CASE WHEN ("ADS"."Feature_423" IS NULL) THEN -0.0009022771635855167 ELSE "ADS"."Feature_423" END AS impter_425, CASE WHEN ("ADS"."Feature_424" IS NULL) THEN 0.05739992787057724 ELSE "ADS"."Feature_424" END AS impter_426, CASE WHEN ("ADS"."Feature_425" IS NULL) THEN 0.04850780446682892 ELSE "ADS"."Feature_425" END AS impter_427, CASE WHEN ("ADS"."Feature_426" IS NULL) THEN 0.04555082643401923 ELSE "ADS"."Feature_426" END AS impter_428, CASE WHEN ("ADS"."Feature_427" IS NULL) THEN -0.013088017894457874 ELSE "ADS"."Feature_427" END AS impter_429, CASE WHEN ("ADS"."Feature_428" IS NULL) THEN 0.7622987596243614 ELSE "ADS"."Feature_428" END AS impter_430, CASE WHEN ("ADS"."Feature_429" IS NULL) THEN 0.06277381315317203 ELSE "ADS"."Feature_429" END AS impter_431, CASE WHEN ("ADS"."Feature_430" IS NULL) THEN -0.00595076348043327 ELSE "ADS"."Feature_430" END AS impter_432, CASE WHEN ("ADS"."Feature_431" IS NULL) THEN -0.019782980673704004 ELSE "ADS"."Feature_431" END AS impter_433, CASE WHEN ("ADS"."Feature_432" IS NULL) THEN 0.03813782436434927 ELSE "ADS"."Feature_432" END AS impter_434, CASE WHEN ("ADS"."Feature_433" IS NULL) THEN -0.03361997654906546 ELSE "ADS"."Feature_433" END AS impter_435, CASE WHEN ("ADS"."Feature_434" IS NULL) THEN -0.015449063685126078 ELSE "ADS"."Feature_434" END AS impter_436, CASE WHEN ("ADS"."Feature_435" IS NULL) THEN -0.05083199732740015 ELSE "ADS"."Feature_435" END AS impter_437, CASE WHEN ("ADS"."Feature_436" IS NULL) THEN 0.12294390238132996 ELSE "ADS"."Feature_436" END AS impter_438, CASE WHEN ("ADS"."Feature_437" IS NULL) THEN 0.008273480374725027 ELSE "ADS"."Feature_437" END AS impter_439, CASE WHEN ("ADS"."Feature_438" IS NULL) THEN 0.04577021563207708 ELSE "ADS"."Feature_438" END AS impter_440, CASE WHEN ("ADS"."Feature_439" IS NULL) THEN -0.004739394213399075 ELSE "ADS"."Feature_439" END AS impter_441, CASE WHEN ("ADS"."Feature_440" IS NULL) THEN -0.025074465350024163 ELSE "ADS"."Feature_440" END AS impter_442, CASE WHEN ("ADS"."Feature_441" IS NULL) THEN 0.050774082486299194 ELSE "ADS"."Feature_441" END AS impter_443, CASE WHEN ("ADS"."Feature_442" IS NULL) THEN -0.0967069255496831 ELSE "ADS"."Feature_442" END AS impter_444, CASE WHEN ("ADS"."Feature_443" IS NULL) THEN -0.007206652069868864 ELSE "ADS"."Feature_443" END AS impter_445, CASE WHEN ("ADS"."Feature_444" IS NULL) THEN 0.03506859491861105 ELSE "ADS"."Feature_444" END AS impter_446, CASE WHEN ("ADS"."Feature_445" IS NULL) THEN -0.00905435452775923 ELSE "ADS"."Feature_445" END AS impter_447, CASE WHEN ("ADS"."Feature_446" IS NULL) THEN -0.012006634151227604 ELSE "ADS"."Feature_446" END AS impter_448, CASE WHEN ("ADS"."Feature_447" IS NULL) THEN 0.03145627491797305 ELSE "ADS"."Feature_447" END AS impter_449, CASE WHEN ("ADS"."Feature_448" IS NULL) THEN 0.02517699513431471 ELSE "ADS"."Feature_448" END AS impter_450, CASE WHEN ("ADS"."Feature_449" IS NULL) THEN 0.005640015529596338 ELSE "ADS"."Feature_449" END AS impter_451, CASE WHEN ("ADS"."Feature_450" IS NULL) THEN -0.010608619203966895 ELSE "ADS"."Feature_450" END AS impter_452, CASE WHEN ("ADS"."Feature_451" IS NULL) THEN -0.062079998204146586 ELSE "ADS"."Feature_451" END AS impter_453, CASE WHEN ("ADS"."Feature_452" IS NULL) THEN -0.0876770647950911 ELSE "ADS"."Feature_452" END AS impter_454, CASE WHEN ("ADS"."Feature_453" IS NULL) THEN 0.012143657983602962 ELSE "ADS"."Feature_453" END AS impter_455, CASE WHEN ("ADS"."Feature_454" IS NULL) THEN 0.03448739220055286 ELSE "ADS"."Feature_454" END AS impter_456, CASE WHEN ("ADS"."Feature_455" IS NULL) THEN 0.006839876969520017 ELSE "ADS"."Feature_455" END AS impter_457, CASE WHEN ("ADS"."Feature_456" IS NULL) THEN -0.1589087203718216 ELSE "ADS"."Feature_456" END AS impter_458, CASE WHEN ("ADS"."Feature_457" IS NULL) THEN 0.45343491151894105 ELSE "ADS"."Feature_457" END AS impter_459, CASE WHEN ("ADS"."Feature_458" IS NULL) THEN -0.007482014986002762 ELSE "ADS"."Feature_458" END AS impter_460, CASE WHEN ("ADS"."Feature_459" IS NULL) THEN -0.0538045349045037 ELSE "ADS"."Feature_459" END AS impter_461, CASE WHEN ("ADS"."Feature_460" IS NULL) THEN 0.006517329526108785 ELSE "ADS"."Feature_460" END AS impter_462, CASE WHEN ("ADS"."Feature_461" IS NULL) THEN -0.3201406707449883 ELSE "ADS"."Feature_461" END AS impter_463, CASE WHEN ("ADS"."Feature_462" IS NULL) THEN 0.03164463472773337 ELSE "ADS"."Feature_462" END AS impter_464, CASE WHEN ("ADS"."Feature_463" IS NULL) THEN -0.031827670383012555 ELSE "ADS"."Feature_463" END AS impter_465, CASE WHEN ("ADS"."Feature_464" IS NULL) THEN -0.02220263625319023 ELSE "ADS"."Feature_464" END AS impter_466, CASE WHEN ("ADS"."Feature_465" IS NULL) THEN 0.04918588699743021 ELSE "ADS"."Feature_465" END AS impter_467, CASE WHEN ("ADS"."Feature_466" IS NULL) THEN 0.013873407999629129 ELSE "ADS"."Feature_466" END AS impter_468, CASE WHEN ("ADS"."Feature_467" IS NULL) THEN -0.054844779309353775 ELSE "ADS"."Feature_467" END AS impter_469, CASE WHEN ("ADS"."Feature_468" IS NULL) THEN 0.05947169339023267 ELSE "ADS"."Feature_468" END AS impter_470, CASE WHEN ("ADS"."Feature_469" IS NULL) THEN -0.007061332655546885 ELSE "ADS"."Feature_469" END AS impter_471, CASE WHEN ("ADS"."Feature_470" IS NULL) THEN 0.0009227758698022626 ELSE "ADS"."Feature_470" END AS impter_472, CASE WHEN ("ADS"."Feature_471" IS NULL) THEN -0.014955268248566689 ELSE "ADS"."Feature_471" END AS impter_473, CASE WHEN ("ADS"."Feature_472" IS NULL) THEN -0.00997364389328803 ELSE "ADS"."Feature_472" END AS impter_474, CASE WHEN ("ADS"."Feature_473" IS NULL) THEN 0.044011886118274696 ELSE "ADS"."Feature_473" END AS impter_475, CASE WHEN ("ADS"."Feature_474" IS NULL) THEN 0.03204255595840591 ELSE "ADS"."Feature_474" END AS impter_476, CASE WHEN ("ADS"."Feature_475" IS NULL) THEN -0.028511291715894678 ELSE "ADS"."Feature_475" END AS impter_477, CASE WHEN ("ADS"."Feature_476" IS NULL) THEN 0.05235198939025461 ELSE "ADS"."Feature_476" END AS impter_478, CASE WHEN ("ADS"."Feature_477" IS NULL) THEN 0.4442463067830223 ELSE "ADS"."Feature_477" END AS impter_479, CASE WHEN ("ADS"."Feature_478" IS NULL) THEN -0.0421220588184719 ELSE "ADS"."Feature_478" END AS impter_480, CASE WHEN ("ADS"."Feature_479" IS NULL) THEN -0.06375683381469409 ELSE "ADS"."Feature_479" END AS impter_481, CASE WHEN ("ADS"."Feature_480" IS NULL) THEN 0.09016412133268503 ELSE "ADS"."Feature_480" END AS impter_482, CASE WHEN ("ADS"."Feature_481" IS NULL) THEN -0.021181166332863134 ELSE "ADS"."Feature_481" END AS impter_483, CASE WHEN ("ADS"."Feature_482" IS NULL) THEN 0.015134427562764584 ELSE "ADS"."Feature_482" END AS impter_484, CASE WHEN ("ADS"."Feature_483" IS NULL) THEN 0.1458909634165245 ELSE "ADS"."Feature_483" END AS impter_485, CASE WHEN ("ADS"."Feature_484" IS NULL) THEN -0.0964936751824616 ELSE "ADS"."Feature_484" END AS impter_486, CASE WHEN ("ADS"."Feature_485" IS NULL) THEN -0.0007661343328348244 ELSE "ADS"."Feature_485" END AS impter_487, CASE WHEN ("ADS"."Feature_486" IS NULL) THEN 0.007424472006137845 ELSE "ADS"."Feature_486" END AS impter_488, CASE WHEN ("ADS"."Feature_487" IS NULL) THEN 0.007776565305072426 ELSE "ADS"."Feature_487" END AS impter_489, CASE WHEN ("ADS"."Feature_488" IS NULL) THEN -0.02972669445658546 ELSE "ADS"."Feature_488" END AS impter_490, CASE WHEN ("ADS"."Feature_489" IS NULL) THEN -0.020022098906708034 ELSE "ADS"."Feature_489" END AS impter_491, CASE WHEN ("ADS"."Feature_490" IS NULL) THEN -0.03689120776576418 ELSE "ADS"."Feature_490" END AS impter_492, CASE WHEN ("ADS"."Feature_491" IS NULL) THEN 0.02342654499679442 ELSE "ADS"."Feature_491" END AS impter_493, CASE WHEN ("ADS"."Feature_492" IS NULL) THEN 0.06047072800386204 ELSE "ADS"."Feature_492" END AS impter_494, CASE WHEN ("ADS"."Feature_493" IS NULL) THEN 0.02457996835763847 ELSE "ADS"."Feature_493" END AS impter_495, CASE WHEN ("ADS"."Feature_494" IS NULL) THEN -0.0053128065642532255 ELSE "ADS"."Feature_494" END AS impter_496, CASE WHEN ("ADS"."Feature_495" IS NULL) THEN -0.050025880514262516 ELSE "ADS"."Feature_495" END AS impter_497, CASE WHEN ("ADS"."Feature_496" IS NULL) THEN -0.055008136401580685 ELSE "ADS"."Feature_496" END AS impter_498, CASE WHEN ("ADS"."Feature_497" IS NULL) THEN -0.46514935213874503 ELSE "ADS"."Feature_497" END AS impter_499, CASE WHEN ("ADS"."Feature_498" IS NULL) THEN -0.037847190400891 ELSE "ADS"."Feature_498" END AS impter_500, CASE WHEN ("ADS"."Feature_499" IS NULL) THEN 0.028703608331041793 ELSE "ADS"."Feature_499" END AS impter_501 
FROM "FourClass_500" AS "ADS"), 
"ADS_sca_2_OUT" AS 
(SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", (CAST("ADS_imp_1_OUT".impter_2 AS DOUBLE PRECISION) - 0.10810245375646362) / 0.9793817679782103 AS scaler_2, (CAST("ADS_imp_1_OUT".impter_3 AS DOUBLE PRECISION) - 0.040042372892287084) / 1.0023891813162529 AS scaler_3, (CAST("ADS_imp_1_OUT".impter_4 AS DOUBLE PRECISION) - -0.07667364732662786) / 0.9900776238894332 AS scaler_4, (CAST("ADS_imp_1_OUT".impter_5 AS DOUBLE PRECISION) - 0.17588592419877258) / 5.560255893599715 AS scaler_5, (CAST("ADS_imp_1_OUT".impter_6 AS DOUBLE PRECISION) - 0.02926169026463611) / 1.0394964701962466 AS scaler_6, (CAST("ADS_imp_1_OUT".impter_7 AS DOUBLE PRECISION) - -0.00904400654098767) / 0.9961880424548265 AS scaler_7, (CAST("ADS_imp_1_OUT".impter_8 AS DOUBLE PRECISION) - 0.02021641814123045) / 1.0128701222372198 AS scaler_8, (CAST("ADS_imp_1_OUT".impter_9 AS DOUBLE PRECISION) - -0.021740866363558604) / 0.9982204224505042 AS scaler_9, (CAST("ADS_imp_1_OUT".impter_10 AS DOUBLE PRECISION) - 0.12136863686872651) / 5.9946377958756045 AS scaler_10, (CAST("ADS_imp_1_OUT".impter_11 AS DOUBLE PRECISION) - -0.009621207715304118) / 1.0301565996554682 AS scaler_11, (CAST("ADS_imp_1_OUT".impter_12 AS DOUBLE PRECISION) - -0.0017282210866736356) / 0.981399050431275 AS scaler_12, (CAST("ADS_imp_1_OUT".impter_13 AS DOUBLE PRECISION) - -0.017782065935332218) / 1.0111944630304806 AS scaler_13, (CAST("ADS_imp_1_OUT".impter_14 AS DOUBLE PRECISION) - 0.03226275015550329) / 0.979628929805027 AS scaler_14, (CAST("ADS_imp_1_OUT".impter_15 AS DOUBLE PRECISION) - -0.0014825533746410664) / 0.9934430866044156 AS scaler_15, (CAST("ADS_imp_1_OUT".impter_16 AS DOUBLE PRECISION) - 0.06164712316198218) / 1.0212164409644986 AS scaler_16, (CAST("ADS_imp_1_OUT".impter_17 AS DOUBLE PRECISION) - 0.02754670267716649) / 1.0166324015399968 AS scaler_17, (CAST("ADS_imp_1_OUT".impter_18 AS DOUBLE PRECISION) - 0.08064319713194991) / 5.771736825789889 AS scaler_18, (CAST("ADS_imp_1_OUT".impter_19 AS DOUBLE PRECISION) - -0.011498650117894155) / 1.0134290863495095 AS scaler_19, (CAST("ADS_imp_1_OUT".impter_20 AS DOUBLE PRECISION) - 0.31890266993969374) / 5.708228988759961 AS scaler_20, (CAST("ADS_imp_1_OUT".impter_21 AS DOUBLE PRECISION) - -0.00022777424626326773) / 0.9933278547260863 AS scaler_21, (CAST("ADS_imp_1_OUT".impter_22 AS DOUBLE PRECISION) - 0.24588258651573852) / 6.039060090290538 AS scaler_22, (CAST("ADS_imp_1_OUT".impter_23 AS DOUBLE PRECISION) - -0.008717075180818528) / 0.9761125096364057 AS scaler_23, (CAST("ADS_imp_1_OUT".impter_24 AS DOUBLE PRECISION) - 0.0053072366770978985) / 0.9683216012472358 AS scaler_24, (CAST("ADS_imp_1_OUT".impter_25 AS DOUBLE PRECISION) - -0.014763237855175493) / 0.9851551177343002 AS scaler_25, (CAST("ADS_imp_1_OUT".impter_26 AS DOUBLE PRECISION) - -0.023154438774995047) / 1.0034590713202722 AS scaler_26, (CAST("ADS_imp_1_OUT".impter_27 AS DOUBLE PRECISION) - -0.12239207011675045) / 5.777017450648698 AS scaler_27, (CAST("ADS_imp_1_OUT".impter_28 AS DOUBLE PRECISION) - 0.020535611934405496) / 0.9878048079305166 AS scaler_28, (CAST("ADS_imp_1_OUT".impter_29 AS DOUBLE PRECISION) - 0.006055843023249926) / 0.9973455621257931 AS scaler_29, (CAST("ADS_imp_1_OUT".impter_30 AS DOUBLE PRECISION) - -0.02283750315483421) / 0.9862507261223278 AS scaler_30, (CAST("ADS_imp_1_OUT".impter_31 AS DOUBLE PRECISION) - 0.023985609638350506) / 0.9937627841184585 AS scaler_31, (CAST("ADS_imp_1_OUT".impter_32 AS DOUBLE PRECISION) - 0.008119293552803313) / 0.9954522177860405 AS scaler_32, (CAST("ADS_imp_1_OUT".impter_33 AS DOUBLE PRECISION) - 0.027089596569202946) / 1.0239371071038705 AS scaler_33, (CAST("ADS_imp_1_OUT".impter_34 AS DOUBLE PRECISION) - -0.06055225058050742) / 1.0104633173004076 AS scaler_34, (CAST("ADS_imp_1_OUT".impter_35 AS DOUBLE PRECISION) - -0.024424868791331697) / 0.9733566902991094 AS scaler_35, (CAST("ADS_imp_1_OUT".impter_36 AS DOUBLE PRECISION) - 0.012336464422653204) / 0.9893886329833442 AS scaler_36, (CAST("ADS_imp_1_OUT".impter_37 AS DOUBLE PRECISION) - -0.03733185453369615) / 0.9891003655260362 AS scaler_37, (CAST("ADS_imp_1_OUT".impter_38 AS DOUBLE PRECISION) - -0.01163301006213858) / 0.9677509701652444 AS scaler_38, (CAST("ADS_imp_1_OUT".impter_39 AS DOUBLE PRECISION) - -0.05102972508859019) / 1.0446002285287346 AS scaler_39, (CAST("ADS_imp_1_OUT".impter_40 AS DOUBLE PRECISION) - 0.0724619853931901) / 0.9433887406048981 AS scaler_40, (CAST("ADS_imp_1_OUT".impter_41 AS DOUBLE PRECISION) - 0.02873322955169374) / 0.9997034238642181 AS scaler_41, (CAST("ADS_imp_1_OUT".impter_42 AS DOUBLE PRECISION) - -0.0468030521847972) / 0.9799565417954935 AS scaler_42, (CAST("ADS_imp_1_OUT".impter_43 AS DOUBLE PRECISION) - 0.024222315050048744) / 0.977961503101405 AS scaler_43, (CAST("ADS_imp_1_OUT".impter_44 AS DOUBLE PRECISION) - 0.01149556673107005) / 5.54835190391683 AS scaler_44, (CAST("ADS_imp_1_OUT".impter_45 AS DOUBLE PRECISION) - -0.46581882386282575) / 5.894617213165279 AS scaler_45, (CAST("ADS_imp_1_OUT".impter_46 AS DOUBLE PRECISION) - -0.0013382860297555803) / 1.0219544648922987 AS scaler_46, (CAST("ADS_imp_1_OUT".impter_47 AS DOUBLE PRECISION) - -0.008602411981840778) / 0.931663415098126 AS scaler_47, (CAST("ADS_imp_1_OUT".impter_48 AS DOUBLE PRECISION) - -0.009965212302201201) / 1.0168312431071238 AS scaler_48, (CAST("ADS_imp_1_OUT".impter_49 AS DOUBLE PRECISION) - -0.03978485158208147) / 0.9423447496201277 AS scaler_49, (CAST("ADS_imp_1_OUT".impter_50 AS DOUBLE PRECISION) - 0.007027179196660041) / 1.0312559989326386 AS scaler_50, (CAST("ADS_imp_1_OUT".impter_51 AS DOUBLE PRECISION) - -0.01982980508470468) / 0.9800172715083906 AS scaler_51, (CAST("ADS_imp_1_OUT".impter_52 AS DOUBLE PRECISION) - -0.04505595017989205) / 1.006703914399541 AS scaler_52, (CAST("ADS_imp_1_OUT".impter_53 AS DOUBLE PRECISION) - -0.045447760217128444) / 1.0007330092630027 AS scaler_53, (CAST("ADS_imp_1_OUT".impter_54 AS DOUBLE PRECISION) - 0.037832771618739616) / 1.0202020707470842 AS scaler_54, (CAST("ADS_imp_1_OUT".impter_55 AS DOUBLE PRECISION) - -0.061624599074911364) / 0.9839597841021345 AS scaler_55, (CAST("ADS_imp_1_OUT".impter_56 AS DOUBLE PRECISION) - 0.07625111583055796) / 1.0202381673398924 AS scaler_56, (CAST("ADS_imp_1_OUT".impter_57 AS DOUBLE PRECISION) - -0.027271537635613834) / 0.9901971057770143 AS scaler_57, (CAST("ADS_imp_1_OUT".impter_58 AS DOUBLE PRECISION) - 0.08658875419996898) / 1.0341490471974248 AS scaler_58, (CAST("ADS_imp_1_OUT".impter_59 AS DOUBLE PRECISION) - 0.0999871472844467) / 1.0320762955753215 AS scaler_59, (CAST("ADS_imp_1_OUT".impter_60 AS DOUBLE PRECISION) - -0.007447998234187981) / 0.98028942569617 AS scaler_60, (CAST("ADS_imp_1_OUT".impter_61 AS DOUBLE PRECISION) - 0.0005691476004520007) / 0.962499434030872 AS scaler_61, (CAST("ADS_imp_1_OUT".impter_62 AS DOUBLE PRECISION) - 0.007052612183486737) / 0.9952316581074087 AS scaler_62, (CAST("ADS_imp_1_OUT".impter_63 AS DOUBLE PRECISION) - -0.07298857610906591) / 1.0117239365465656 AS scaler_63, (CAST("ADS_imp_1_OUT".impter_64 AS DOUBLE PRECISION) - 0.007257283737326912) / 0.9614049921549974 AS scaler_64, (CAST("ADS_imp_1_OUT".impter_65 AS DOUBLE PRECISION) - -0.01499281527733551) / 0.9856230299709878 AS scaler_65, (CAST("ADS_imp_1_OUT".impter_66 AS DOUBLE PRECISION) - 0.1504932184478646) / 6.139566226432819 AS scaler_66, (CAST("ADS_imp_1_OUT".impter_67 AS DOUBLE PRECISION) - -0.34139964395628075) / 5.589924447035164 AS scaler_67, (CAST("ADS_imp_1_OUT".impter_68 AS DOUBLE PRECISION) - 0.044769898693156215) / 0.9858338717221913 AS scaler_68, (CAST("ADS_imp_1_OUT".impter_69 AS DOUBLE PRECISION) - -0.06740805909718733) / 1.0160492930707818 AS scaler_69, (CAST("ADS_imp_1_OUT".impter_70 AS DOUBLE PRECISION) - 0.011827724290967036) / 0.9920309378976953 AS scaler_70, (CAST("ADS_imp_1_OUT".impter_71 AS DOUBLE PRECISION) - 0.04511965476174756) / 1.0134689242858836 AS scaler_71, (CAST("ADS_imp_1_OUT".impter_72 AS DOUBLE PRECISION) - -0.005725960546688403) / 0.9742042745897078 AS scaler_72, (CAST("ADS_imp_1_OUT".impter_73 AS DOUBLE PRECISION) - -0.45906874360950467) / 6.052269381209856 AS scaler_73, (CAST("ADS_imp_1_OUT".impter_74 AS DOUBLE PRECISION) - -0.4029233461203958) / 5.771992694521305 AS scaler_74, (CAST("ADS_imp_1_OUT".impter_75 AS DOUBLE PRECISION) - -0.01983348240532154) / 0.9849514335826905 AS scaler_75, (CAST("ADS_imp_1_OUT".impter_76 AS DOUBLE PRECISION) - -0.03762876790351029) / 0.9982596731767271 AS scaler_76, (CAST("ADS_imp_1_OUT".impter_77 AS DOUBLE PRECISION) - 0.0014482025177064296) / 0.9781075851188674 AS scaler_77, (CAST("ADS_imp_1_OUT".impter_78 AS DOUBLE PRECISION) - -0.009126373209438378) / 0.9875838602657921 AS scaler_78, (CAST("ADS_imp_1_OUT".impter_79 AS DOUBLE PRECISION) - -0.004847879746676399) / 1.0007261707872959 AS scaler_79, (CAST("ADS_imp_1_OUT".impter_80 AS DOUBLE PRECISION) - 0.0003242960082649739) / 1.0081288330481553 AS scaler_80, (CAST("ADS_imp_1_OUT".impter_81 AS DOUBLE PRECISION) - -0.030222670037465243) / 1.0126353893899334 AS scaler_81, (CAST("ADS_imp_1_OUT".impter_82 AS DOUBLE PRECISION) - 0.00597438906398475) / 0.997574121799789 AS scaler_82, (CAST("ADS_imp_1_OUT".impter_83 AS DOUBLE PRECISION) - 0.006442151047769896) / 0.9692977412695478 AS scaler_83, (CAST("ADS_imp_1_OUT".impter_84 AS DOUBLE PRECISION) - 0.06674583942705845) / 0.9650616611467926 AS scaler_84, (CAST("ADS_imp_1_OUT".impter_85 AS DOUBLE PRECISION) - 0.07788312942179253) / 1.0502476441331448 AS scaler_85, (CAST("ADS_imp_1_OUT".impter_86 AS DOUBLE PRECISION) - 0.04734384734963352) / 0.9922221019778982 AS scaler_86, (CAST("ADS_imp_1_OUT".impter_87 AS DOUBLE PRECISION) - -0.008706507745982245) / 1.0281463379538616 AS scaler_87, (CAST("ADS_imp_1_OUT".impter_88 AS DOUBLE PRECISION) - 0.048010462132819065) / 1.0219516364531134 AS scaler_88, (CAST("ADS_imp_1_OUT".impter_89 AS DOUBLE PRECISION) - -0.015721233574226466) / 0.986060770131844 AS scaler_89, (CAST("ADS_imp_1_OUT".impter_90 AS DOUBLE PRECISION) - 0.029859590983661574) / 0.9917320004086767 AS scaler_90, (CAST("ADS_imp_1_OUT".impter_91 AS DOUBLE PRECISION) - 0.05432072236762381) / 1.0137096750823185 AS scaler_91, (CAST("ADS_imp_1_OUT".impter_92 AS DOUBLE PRECISION) - -0.01029209788232909) / 1.000757192176457 AS scaler_92, (CAST("ADS_imp_1_OUT".impter_93 AS DOUBLE PRECISION) - -0.057667586642934685) / 5.94408516351358 AS scaler_93, (CAST("ADS_imp_1_OUT".impter_94 AS DOUBLE PRECISION) - 0.010705496096094396) / 1.0092360847471284 AS scaler_94, (CAST("ADS_imp_1_OUT".impter_95 AS DOUBLE PRECISION) - 0.07155562158168) / 0.983479044147119 AS scaler_95, (CAST("ADS_imp_1_OUT".impter_96 AS DOUBLE PRECISION) - 0.012567881232469623) / 1.0041791065815686 AS scaler_96, (CAST("ADS_imp_1_OUT".impter_97 AS DOUBLE PRECISION) - 0.013515801306018876) / 1.0171521249734952 AS scaler_97, (CAST("ADS_imp_1_OUT".impter_98 AS DOUBLE PRECISION) - -0.03144133874056725) / 0.9643293110743213 AS scaler_98, (CAST("ADS_imp_1_OUT".impter_99 AS DOUBLE PRECISION) - 0.04347042885615023) / 1.0350471688640486 AS scaler_99, (CAST("ADS_imp_1_OUT".impter_100 AS DOUBLE PRECISION) - 0.06271561958724896) / 0.9582071956389678 AS scaler_100, (CAST("ADS_imp_1_OUT".impter_101 AS DOUBLE PRECISION) - 0.05756441101485498) / 1.016873068211695 AS scaler_101, (CAST("ADS_imp_1_OUT".impter_102 AS DOUBLE PRECISION) - 0.08328088835981105) / 5.923497571865014 AS scaler_102, (CAST("ADS_imp_1_OUT".impter_103 AS DOUBLE PRECISION) - 0.027342821102590696) / 1.009759865874761 AS scaler_103, (CAST("ADS_imp_1_OUT".impter_104 AS DOUBLE PRECISION) - -0.45823161485829694) / 5.947446910796636 AS scaler_104, (CAST("ADS_imp_1_OUT".impter_105 AS DOUBLE PRECISION) - -0.0574871655764397) / 0.9558665112492322 AS scaler_105, (CAST("ADS_imp_1_OUT".impter_106 AS DOUBLE PRECISION) - -0.04439086595851878) / 1.0257189382967924 AS scaler_106, (CAST("ADS_imp_1_OUT".impter_107 AS DOUBLE PRECISION) - 0.02144592469206838) / 0.9895401881723541 AS scaler_107, (CAST("ADS_imp_1_OUT".impter_108 AS DOUBLE PRECISION) - 0.11209373860993643) / 5.749503930446186 AS scaler_108, (CAST("ADS_imp_1_OUT".impter_109 AS DOUBLE PRECISION) - 0.020021880427962078) / 1.003919278192992 AS scaler_109, (CAST("ADS_imp_1_OUT".impter_110 AS DOUBLE PRECISION) - -0.009743329217515511) / 0.9919583243676908 AS scaler_110, (CAST("ADS_imp_1_OUT".impter_111 AS DOUBLE PRECISION) - 0.4786622270719938) / 5.58775739405435 AS scaler_111, (CAST("ADS_imp_1_OUT".impter_112 AS DOUBLE PRECISION) - 0.02944493462807616) / 1.0248871232604297 AS scaler_112, (CAST("ADS_imp_1_OUT".impter_113 AS DOUBLE PRECISION) - -0.00310096676730144) / 1.0254001437004343 AS scaler_113, (CAST("ADS_imp_1_OUT".impter_114 AS DOUBLE PRECISION) - 0.0231371409575344) / 1.0664587771246052 AS scaler_114, (CAST("ADS_imp_1_OUT".impter_115 AS DOUBLE PRECISION) - -0.04815066967587055) / 1.018510444629956 AS scaler_115, (CAST("ADS_imp_1_OUT".impter_116 AS DOUBLE PRECISION) - 0.025111413866439537) / 1.0045413648024208 AS scaler_116, (CAST("ADS_imp_1_OUT".impter_117 AS DOUBLE PRECISION) - 0.0021133311116955213) / 0.9757575746423808 AS scaler_117, (CAST("ADS_imp_1_OUT".impter_118 AS DOUBLE PRECISION) - 0.034947174142157644) / 0.9975889189566856 AS scaler_118, (CAST("ADS_imp_1_OUT".impter_119 AS DOUBLE PRECISION) - -0.05606347652620213) / 0.9928987912016847 AS scaler_119, (CAST("ADS_imp_1_OUT".impter_120 AS DOUBLE PRECISION) - -0.023812528369921485) / 1.0013009070011438 AS scaler_120, (CAST("ADS_imp_1_OUT".impter_121 AS DOUBLE PRECISION) - -0.042073637845818246) / 0.9912144880843266 AS scaler_121, (CAST("ADS_imp_1_OUT".impter_122 AS DOUBLE PRECISION) - 0.007882510288965947) / 1.0172369989511076 AS scaler_122, (CAST("ADS_imp_1_OUT".impter_123 AS DOUBLE PRECISION) - -0.02733468989970973) / 1.01392267981462 AS scaler_123, (CAST("ADS_imp_1_OUT".impter_124 AS DOUBLE PRECISION) - -0.6701750904403835) / 6.145313938495119 AS scaler_124, (CAST("ADS_imp_1_OUT".impter_125 AS DOUBLE PRECISION) - -0.04044317104909807) / 0.9609996023909663 AS scaler_125, (CAST("ADS_imp_1_OUT".impter_126 AS DOUBLE PRECISION) - -0.00837516585592746) / 0.9754352444783934 AS scaler_126, (CAST("ADS_imp_1_OUT".impter_127 AS DOUBLE PRECISION) - -0.005344367193538407) / 1.0148601448564643 AS scaler_127, (CAST("ADS_imp_1_OUT".impter_128 AS DOUBLE PRECISION) - -0.009191225939401346) / 0.982128874729729 AS scaler_128, (CAST("ADS_imp_1_OUT".impter_129 AS DOUBLE PRECISION) - -0.004068573508204202) / 0.9971242820519521 AS scaler_129, (CAST("ADS_imp_1_OUT".impter_130 AS DOUBLE PRECISION) - -0.030267877751773992) / 0.96864155853453 AS scaler_130, (CAST("ADS_imp_1_OUT".impter_131 AS DOUBLE PRECISION) - 0.17410306271063888) / 5.789756786227785 AS scaler_131, (CAST("ADS_imp_1_OUT".impter_132 AS DOUBLE PRECISION) - -0.012642941998284607) / 0.9922148064395657 AS scaler_132, (CAST("ADS_imp_1_OUT".impter_133 AS DOUBLE PRECISION) - 0.01749739797543971) / 0.9787286398774294 AS scaler_133, (CAST("ADS_imp_1_OUT".impter_134 AS DOUBLE PRECISION) - 0.5426783595611434) / 5.907808207908198 AS scaler_134, (CAST("ADS_imp_1_OUT".impter_135 AS DOUBLE PRECISION) - -0.5946970819130108) / 6.0784028515757305 AS scaler_135, (CAST("ADS_imp_1_OUT".impter_136 AS DOUBLE PRECISION) - -0.02934504234656094) / 1.0091339941012132 AS scaler_136, (CAST("ADS_imp_1_OUT".impter_137 AS DOUBLE PRECISION) - 0.06552557763413538) / 6.095951331803264 AS scaler_137, (CAST("ADS_imp_1_OUT".impter_138 AS DOUBLE PRECISION) - -0.05569025110062092) / 0.9610638640494519 AS scaler_138, (CAST("ADS_imp_1_OUT".impter_139 AS DOUBLE PRECISION) - 0.023191171882599493) / 1.0128603239940146 AS scaler_139, (CAST("ADS_imp_1_OUT".impter_140 AS DOUBLE PRECISION) - -0.05295059390165566) / 0.9704481251340982 AS scaler_140, (CAST("ADS_imp_1_OUT".impter_141 AS DOUBLE PRECISION) - 0.033509246297397904) / 1.0152086117159598 AS scaler_141, (CAST("ADS_imp_1_OUT".impter_142 AS DOUBLE PRECISION) - -0.04155471151345872) / 1.0275865673837457 AS scaler_142, (CAST("ADS_imp_1_OUT".impter_143 AS DOUBLE PRECISION) - -0.6634336506604639) / 5.8591587401192315 AS scaler_143, (CAST("ADS_imp_1_OUT".impter_144 AS DOUBLE PRECISION) - -0.5573588681497673) / 5.822804930738725 AS scaler_144, (CAST("ADS_imp_1_OUT".impter_145 AS DOUBLE PRECISION) - 0.0441240830479543) / 0.9942937489948139 AS scaler_145, (CAST("ADS_imp_1_OUT".impter_146 AS DOUBLE PRECISION) - -0.0032026430582909036) / 1.0088252648820826 AS scaler_146, (CAST("ADS_imp_1_OUT".impter_147 AS DOUBLE PRECISION) - 0.0547961032530105) / 1.0250292567069976 AS scaler_147, (CAST("ADS_imp_1_OUT".impter_148 AS DOUBLE PRECISION) - -0.0570190089317311) / 1.0233221648265598 AS scaler_148, (CAST("ADS_imp_1_OUT".impter_149 AS DOUBLE PRECISION) - -0.05068123758307288) / 1.0059501057644102 AS scaler_149, (CAST("ADS_imp_1_OUT".impter_150 AS DOUBLE PRECISION) - 0.04963772213165472) / 5.707884171857318 AS scaler_150, (CAST("ADS_imp_1_OUT".impter_151 AS DOUBLE PRECISION) - -0.0053902063922270736) / 0.9733282006907008 AS scaler_151, (CAST("ADS_imp_1_OUT".impter_152 AS DOUBLE PRECISION) - -0.06888968948833549) / 1.0357034285112359 AS scaler_152, (CAST("ADS_imp_1_OUT".impter_153 AS DOUBLE PRECISION) - -0.016131263076271454) / 1.0352933940220925 AS scaler_153, (CAST("ADS_imp_1_OUT".impter_154 AS DOUBLE PRECISION) - -0.3673160108448531) / 5.831014219549596 AS scaler_154, (CAST("ADS_imp_1_OUT".impter_155 AS DOUBLE PRECISION) - 0.055182003778661885) / 5.684243359483168 AS scaler_155, (CAST("ADS_imp_1_OUT".impter_156 AS DOUBLE PRECISION) - 0.03906491494486876) / 0.9983722576273872 AS scaler_156, (CAST("ADS_imp_1_OUT".impter_157 AS DOUBLE PRECISION) - -0.018774913038090556) / 0.981565987462681 AS scaler_157, (CAST("ADS_imp_1_OUT".impter_158 AS DOUBLE PRECISION) - 0.04167563251378332) / 5.5897226143974885 AS scaler_158, (CAST("ADS_imp_1_OUT".impter_159 AS DOUBLE PRECISION) - -0.014464200228668327) / 1.0647700745180197 AS scaler_159, (CAST("ADS_imp_1_OUT".impter_160 AS DOUBLE PRECISION) - 0.001498972159727102) / 1.0346863623514742 AS scaler_160, (CAST("ADS_imp_1_OUT".impter_161 AS DOUBLE PRECISION) - -0.018229772297973595) / 1.0422072170743273 AS scaler_161, (CAST("ADS_imp_1_OUT".impter_162 AS DOUBLE PRECISION) - -0.044371023327894055) / 1.0176258203618869 AS scaler_162, (CAST("ADS_imp_1_OUT".impter_163 AS DOUBLE PRECISION) - 0.003260044680277718) / 1.0389488041486905 AS scaler_163, (CAST("ADS_imp_1_OUT".impter_164 AS DOUBLE PRECISION) - 0.04743398414161841) / 0.9782204833572162 AS scaler_164, (CAST("ADS_imp_1_OUT".impter_165 AS DOUBLE PRECISION) - 0.02952107505742563) / 1.0089690347262386 AS scaler_165, (CAST("ADS_imp_1_OUT".impter_166 AS DOUBLE PRECISION) - 0.039029822514854) / 1.0121176151207434 AS scaler_166, (CAST("ADS_imp_1_OUT".impter_167 AS DOUBLE PRECISION) - 0.33233879962749624) / 5.744346296798411 AS scaler_167, (CAST("ADS_imp_1_OUT".impter_168 AS DOUBLE PRECISION) - -0.030838711525630415) / 0.9705290180206547 AS scaler_168, (CAST("ADS_imp_1_OUT".impter_169 AS DOUBLE PRECISION) - 0.053457495179036106) / 1.0248755705105466 AS scaler_169, (CAST("ADS_imp_1_OUT".impter_170 AS DOUBLE PRECISION) - 0.06334783178164666) / 0.9775079956110175 AS scaler_170, (CAST("ADS_imp_1_OUT".impter_171 AS DOUBLE PRECISION) - -0.015185631962267647) / 0.9717858688863088 AS scaler_171, (CAST("ADS_imp_1_OUT".impter_172 AS DOUBLE PRECISION) - -0.0373186897788836) / 0.999257264463164 AS scaler_172, (CAST("ADS_imp_1_OUT".impter_173 AS DOUBLE PRECISION) - 0.058926161621590305) / 0.9602458384408017 AS scaler_173, (CAST("ADS_imp_1_OUT".impter_174 AS DOUBLE PRECISION) - 9.69895410212665e-05) / 1.0063812902851987 AS scaler_174, (CAST("ADS_imp_1_OUT".impter_175 AS DOUBLE PRECISION) - 0.023780298476686824) / 1.0186861099526499 AS scaler_175, (CAST("ADS_imp_1_OUT".impter_176 AS DOUBLE PRECISION) - 0.021640308005590803) / 0.967390860423614 AS scaler_176, (CAST("ADS_imp_1_OUT".impter_177 AS DOUBLE PRECISION) - 0.02609411025064558) / 1.019952052097139 AS scaler_177, (CAST("ADS_imp_1_OUT".impter_178 AS DOUBLE PRECISION) - 0.053659812775327234) / 1.0317585905842375 AS scaler_178, (CAST("ADS_imp_1_OUT".impter_179 AS DOUBLE PRECISION) - 0.02312075671447861) / 0.9624262389790543 AS scaler_179, (CAST("ADS_imp_1_OUT".impter_180 AS DOUBLE PRECISION) - 0.08189652549389312) / 1.008828045220763 AS scaler_180, (CAST("ADS_imp_1_OUT".impter_181 AS DOUBLE PRECISION) - -0.28662694866746835) / 6.172920864518475 AS scaler_181, (CAST("ADS_imp_1_OUT".impter_182 AS DOUBLE PRECISION) - -0.06816976745830143) / 1.006696859076202 AS scaler_182, (CAST("ADS_imp_1_OUT".impter_183 AS DOUBLE PRECISION) - -0.0288394136395886) / 1.0123612493717167 AS scaler_183, (CAST("ADS_imp_1_OUT".impter_184 AS DOUBLE PRECISION) - 0.030475929720363698) / 0.971249477659825 AS scaler_184, (CAST("ADS_imp_1_OUT".impter_185 AS DOUBLE PRECISION) - -0.9321092506061046) / 5.959856975617778 AS scaler_185, (CAST("ADS_imp_1_OUT".impter_186 AS DOUBLE PRECISION) - -0.005783297854668443) / 0.9729868220424777 AS scaler_186, (CAST("ADS_imp_1_OUT".impter_187 AS DOUBLE PRECISION) - -0.6842779545480162) / 5.6462061209635666 AS scaler_187, (CAST("ADS_imp_1_OUT".impter_188 AS DOUBLE PRECISION) - -0.035868681753580677) / 0.9515600028160798 AS scaler_188, (CAST("ADS_imp_1_OUT".impter_189 AS DOUBLE PRECISION) - 0.37446820466554537) / 6.045200162892497 AS scaler_189, (CAST("ADS_imp_1_OUT".impter_190 AS DOUBLE PRECISION) - 0.03710250301413846) / 1.0283479885398354 AS scaler_190, (CAST("ADS_imp_1_OUT".impter_191 AS DOUBLE PRECISION) - -0.1405646996029281) / 6.021540164862222 AS scaler_191, (CAST("ADS_imp_1_OUT".impter_192 AS DOUBLE PRECISION) - -0.008242263620478222) / 1.016675618095213 AS scaler_192, (CAST("ADS_imp_1_OUT".impter_193 AS DOUBLE PRECISION) - 0.23469193009627595) / 5.601102541825846 AS scaler_193, (CAST("ADS_imp_1_OUT".impter_194 AS DOUBLE PRECISION) - -0.04853360559010945) / 0.9850160080809853 AS scaler_194, (CAST("ADS_imp_1_OUT".impter_195 AS DOUBLE PRECISION) - -0.29107017412914993) / 5.586860950904685 AS scaler_195, (CAST("ADS_imp_1_OUT".impter_196 AS DOUBLE PRECISION) - 0.06554945522577102) / 0.9914300814275504 AS scaler_196, (CAST("ADS_imp_1_OUT".impter_197 AS DOUBLE PRECISION) - 0.03415746968907192) / 0.9939759564479547 AS scaler_197, (CAST("ADS_imp_1_OUT".impter_198 AS DOUBLE PRECISION) - -1.0112490880861227) / 5.782797574194705 AS scaler_198, (CAST("ADS_imp_1_OUT".impter_199 AS DOUBLE PRECISION) - 0.4496849630728245) / 5.837154258847168 AS scaler_199, (CAST("ADS_imp_1_OUT".impter_200 AS DOUBLE PRECISION) - 0.032026535978956015) / 0.9803145829814145 AS scaler_200, (CAST("ADS_imp_1_OUT".impter_201 AS DOUBLE PRECISION) - 0.000929134812353008) / 0.9966914430821684 AS scaler_201, (CAST("ADS_imp_1_OUT".impter_202 AS DOUBLE PRECISION) - 0.013717912018418882) / 1.0042933647333387 AS scaler_202, (CAST("ADS_imp_1_OUT".impter_203 AS DOUBLE PRECISION) - -0.025517677160104602) / 1.023007838139583 AS scaler_203, (CAST("ADS_imp_1_OUT".impter_204 AS DOUBLE PRECISION) - 0.008684033616587546) / 1.0055749498115065 AS scaler_204, (CAST("ADS_imp_1_OUT".impter_205 AS DOUBLE PRECISION) - 0.013537249806385316) / 0.9615196489451362 AS scaler_205, (CAST("ADS_imp_1_OUT".impter_206 AS DOUBLE PRECISION) - -0.0230268828473152) / 0.9775483835928382 AS scaler_206, (CAST("ADS_imp_1_OUT".impter_207 AS DOUBLE PRECISION) - 0.03589117923846176) / 0.9863064503789496 AS scaler_207, (CAST("ADS_imp_1_OUT".impter_208 AS DOUBLE PRECISION) - -0.011430934569701108) / 1.0568818033144645 AS scaler_208, (CAST("ADS_imp_1_OUT".impter_209 AS DOUBLE PRECISION) - -0.03231136300980085) / 1.0373910812235252 AS scaler_209, (CAST("ADS_imp_1_OUT".impter_210 AS DOUBLE PRECISION) - -0.03420275223278265) / 5.894903068982469 AS scaler_210, (CAST("ADS_imp_1_OUT".impter_211 AS DOUBLE PRECISION) - 0.23377425435020424) / 5.7466656009400365 AS scaler_211, (CAST("ADS_imp_1_OUT".impter_212 AS DOUBLE PRECISION) - 0.06340248702486702) / 5.640777044308502 AS scaler_212, (CAST("ADS_imp_1_OUT".impter_213 AS DOUBLE PRECISION) - -0.031763897397096605) / 1.0147599704147603 AS scaler_213, (CAST("ADS_imp_1_OUT".impter_214 AS DOUBLE PRECISION) - 0.004392749210234481) / 0.9750450927968857 AS scaler_214, (CAST("ADS_imp_1_OUT".impter_215 AS DOUBLE PRECISION) - -0.007220451377103457) / 0.998695256241697 AS scaler_215, (CAST("ADS_imp_1_OUT".impter_216 AS DOUBLE PRECISION) - 0.001039454428951527) / 0.9929801222993039 AS scaler_216, (CAST("ADS_imp_1_OUT".impter_217 AS DOUBLE PRECISION) - 0.255416687811933) / 5.606442450480165 AS scaler_217, (CAST("ADS_imp_1_OUT".impter_218 AS DOUBLE PRECISION) - -0.1279428512452052) / 6.183297227558894 AS scaler_218, (CAST("ADS_imp_1_OUT".impter_219 AS DOUBLE PRECISION) - 0.11623077388873257) / 5.860568084583105 AS scaler_219, (CAST("ADS_imp_1_OUT".impter_220 AS DOUBLE PRECISION) - 0.04461217703505275) / 5.83606925311369 AS scaler_220, (CAST("ADS_imp_1_OUT".impter_221 AS DOUBLE PRECISION) - -0.03146418763016053) / 1.009842922203672 AS scaler_221, (CAST("ADS_imp_1_OUT".impter_222 AS DOUBLE PRECISION) - 0.03437191123539599) / 0.9618546894792044 AS scaler_222, (CAST("ADS_imp_1_OUT".impter_223 AS DOUBLE PRECISION) - 0.02811765018111002) / 1.0234543094708461 AS scaler_223, (CAST("ADS_imp_1_OUT".impter_224 AS DOUBLE PRECISION) - -0.008115500982846469) / 0.9582255125846887 AS scaler_224, (CAST("ADS_imp_1_OUT".impter_225 AS DOUBLE PRECISION) - 0.0346610159959258) / 0.9382932228802465 AS scaler_225, (CAST("ADS_imp_1_OUT".impter_226 AS DOUBLE PRECISION) - 0.04873411944524845) / 0.9681071054529649 AS scaler_226, (CAST("ADS_imp_1_OUT".impter_227 AS DOUBLE PRECISION) - 4.894869923178419e-05) / 0.9711882273762723 AS scaler_227, (CAST("ADS_imp_1_OUT".impter_228 AS DOUBLE PRECISION) - 0.018209676154939517) / 0.9795446917047469 AS scaler_228, (CAST("ADS_imp_1_OUT".impter_229 AS DOUBLE PRECISION) - 0.026610576357411958) / 1.020416620612885 AS scaler_229, (CAST("ADS_imp_1_OUT".impter_230 AS DOUBLE PRECISION) - -0.18927414463099612) / 6.1290712879929945 AS scaler_230, (CAST("ADS_imp_1_OUT".impter_231 AS DOUBLE PRECISION) - 0.7485324016005227) / 5.734450284809372 AS scaler_231, (CAST("ADS_imp_1_OUT".impter_232 AS DOUBLE PRECISION) - 0.0487697431569858) / 1.0362121875167394 AS scaler_232, (CAST("ADS_imp_1_OUT".impter_233 AS DOUBLE PRECISION) - -0.05674203944761021) / 1.0094733416405102 AS scaler_233, (CAST("ADS_imp_1_OUT".impter_234 AS DOUBLE PRECISION) - -0.016772355037112788) / 0.9819007689885811 AS scaler_234, (CAST("ADS_imp_1_OUT".impter_235 AS DOUBLE PRECISION) - 0.021959192758732798) / 0.987918747045171 AS scaler_235, (CAST("ADS_imp_1_OUT".impter_236 AS DOUBLE PRECISION) - 0.009017510252386856) / 0.9874581776631882 AS scaler_236, (CAST("ADS_imp_1_OUT".impter_237 AS DOUBLE PRECISION) - 0.01719604397851632) / 0.992097179565061 AS scaler_237, (CAST("ADS_imp_1_OUT".impter_238 AS DOUBLE PRECISION) - 0.04752740880676183) / 0.9503833389031566 AS scaler_238, (CAST("ADS_imp_1_OUT".impter_239 AS DOUBLE PRECISION) - -0.6655794242164356) / 5.840051151687372 AS scaler_239, (CAST("ADS_imp_1_OUT".impter_240 AS DOUBLE PRECISION) - 0.040740002170661385) / 0.9668784340640053 AS scaler_240, (CAST("ADS_imp_1_OUT".impter_241 AS DOUBLE PRECISION) - -0.06790575667026853) / 0.9921903875597816 AS scaler_241, (CAST("ADS_imp_1_OUT".impter_242 AS DOUBLE PRECISION) - 0.00892920073818756) / 0.9953681335039088 AS scaler_242, (CAST("ADS_imp_1_OUT".impter_243 AS DOUBLE PRECISION) - -0.05642200650387437) / 1.080975513720933 AS scaler_243, (CAST("ADS_imp_1_OUT".impter_244 AS DOUBLE PRECISION) - 0.020080371219515784) / 1.0268320872033798 AS scaler_244, (CAST("ADS_imp_1_OUT".impter_245 AS DOUBLE PRECISION) - -0.08127236320512923) / 5.713688044684489 AS scaler_245, (CAST("ADS_imp_1_OUT".impter_246 AS DOUBLE PRECISION) - 0.013048668554363934) / 0.9840522233556672 AS scaler_246, (CAST("ADS_imp_1_OUT".impter_247 AS DOUBLE PRECISION) - 0.018841776335809746) / 0.9955454249138418 AS scaler_247, (CAST("ADS_imp_1_OUT".impter_248 AS DOUBLE PRECISION) - -0.005693217051300183) / 0.9944510267281536 AS scaler_248, (CAST("ADS_imp_1_OUT".impter_249 AS DOUBLE PRECISION) - -0.20394320931579465) / 5.772507892550791 AS scaler_249, (CAST("ADS_imp_1_OUT".impter_250 AS DOUBLE PRECISION) - -0.022446042990387664) / 1.0021361970741969 AS scaler_250, (CAST("ADS_imp_1_OUT".impter_251 AS DOUBLE PRECISION) - -4.076861252102798) / 34.2608991859537 AS scaler_251, (CAST("ADS_imp_1_OUT".impter_252 AS DOUBLE PRECISION) - -0.008817990550602733) / 1.0009581126868368 AS scaler_252, (CAST("ADS_imp_1_OUT".impter_253 AS DOUBLE PRECISION) - 0.07233780023230166) / 1.0333507786448697 AS scaler_253, (CAST("ADS_imp_1_OUT".impter_254 AS DOUBLE PRECISION) - 0.1138593990290942) / 5.886028350311137 AS scaler_254, (CAST("ADS_imp_1_OUT".impter_255 AS DOUBLE PRECISION) - -0.014123411384636636) / 0.9733196343517111 AS scaler_255, (CAST("ADS_imp_1_OUT".impter_256 AS DOUBLE PRECISION) - 0.014692128598930085) / 0.9620465679496903 AS scaler_256, (CAST("ADS_imp_1_OUT".impter_257 AS DOUBLE PRECISION) - 0.04595744723507997) / 0.9944842107666862 AS scaler_257, (CAST("ADS_imp_1_OUT".impter_258 AS DOUBLE PRECISION) - 0.015847884802623332) / 0.9910298990373428 AS scaler_258, (CAST("ADS_imp_1_OUT".impter_259 AS DOUBLE PRECISION) - 0.029322592909880204) / 1.0351113561261698 AS scaler_259, (CAST("ADS_imp_1_OUT".impter_260 AS DOUBLE PRECISION) - -0.03535258574843743) / 0.9316972257033983 AS scaler_260, (CAST("ADS_imp_1_OUT".impter_261 AS DOUBLE PRECISION) - -0.00650490190973122) / 0.9882615820765778 AS scaler_261, (CAST("ADS_imp_1_OUT".impter_262 AS DOUBLE PRECISION) - -0.03690470759934596) / 0.9949501210533109 AS scaler_262, (CAST("ADS_imp_1_OUT".impter_263 AS DOUBLE PRECISION) - -0.003181913166654664) / 0.9608914472397853 AS scaler_263, (CAST("ADS_imp_1_OUT".impter_264 AS DOUBLE PRECISION) - -0.0018035463835158838) / 0.9594115161166091 AS scaler_264, (CAST("ADS_imp_1_OUT".impter_265 AS DOUBLE PRECISION) - -0.004968061346310874) / 0.9841069876999591 AS scaler_265, (CAST("ADS_imp_1_OUT".impter_266 AS DOUBLE PRECISION) - -0.45419983150371857) / 5.83691454179742 AS scaler_266, (CAST("ADS_imp_1_OUT".impter_267 AS DOUBLE PRECISION) - 0.033791499419119894) / 0.9623098813915759 AS scaler_267, (CAST("ADS_imp_1_OUT".impter_268 AS DOUBLE PRECISION) - -0.40319293830766156) / 6.005116172706997 AS scaler_268, (CAST("ADS_imp_1_OUT".impter_269 AS DOUBLE PRECISION) - 0.6187460938207908) / 5.740858978880372 AS scaler_269, (CAST("ADS_imp_1_OUT".impter_270 AS DOUBLE PRECISION) - 0.622898951615882) / 5.837149612935237 AS scaler_270, (CAST("ADS_imp_1_OUT".impter_271 AS DOUBLE PRECISION) - -0.018232408103028765) / 1.0237582924270276 AS scaler_271, (CAST("ADS_imp_1_OUT".impter_272 AS DOUBLE PRECISION) - 0.01765800846800944) / 1.0369091422036907 AS scaler_272, (CAST("ADS_imp_1_OUT".impter_273 AS DOUBLE PRECISION) - -0.7754580279730494) / 5.650111104165515 AS scaler_273, (CAST("ADS_imp_1_OUT".impter_274 AS DOUBLE PRECISION) - -0.008494942988361138) / 0.9876490295553434 AS scaler_274, (CAST("ADS_imp_1_OUT".impter_275 AS DOUBLE PRECISION) - 0.06500802952263218) / 0.9938061896804096 AS scaler_275, (CAST("ADS_imp_1_OUT".impter_276 AS DOUBLE PRECISION) - 0.004846639297532018) / 0.9815019873684769 AS scaler_276, (CAST("ADS_imp_1_OUT".impter_277 AS DOUBLE PRECISION) - 0.31959901606775876) / 6.04265682063885 AS scaler_277, (CAST("ADS_imp_1_OUT".impter_278 AS DOUBLE PRECISION) - 0.06335285521269475) / 1.030255161135722 AS scaler_278, (CAST("ADS_imp_1_OUT".impter_279 AS DOUBLE PRECISION) - 0.05639859786390925) / 0.9704986281233102 AS scaler_279, (CAST("ADS_imp_1_OUT".impter_280 AS DOUBLE PRECISION) - -0.016826126115809636) / 0.9158313868217967 AS scaler_280, (CAST("ADS_imp_1_OUT".impter_281 AS DOUBLE PRECISION) - -0.035868631202668005) / 1.0109275682906786 AS scaler_281, (CAST("ADS_imp_1_OUT".impter_282 AS DOUBLE PRECISION) - 0.5939567726507027) / 6.134862342485855 AS scaler_282, (CAST("ADS_imp_1_OUT".impter_283 AS DOUBLE PRECISION) - -0.018499482983219337) / 0.9944840357762763 AS scaler_283, (CAST("ADS_imp_1_OUT".impter_284 AS DOUBLE PRECISION) - -0.002126060350638963) / 0.9778447419013441 AS scaler_284, (CAST("ADS_imp_1_OUT".impter_285 AS DOUBLE PRECISION) - 0.43749055924133856) / 5.851416241071843 AS scaler_285, (CAST("ADS_imp_1_OUT".impter_286 AS DOUBLE PRECISION) - -0.002792990485326514) / 1.0100816164740944 AS scaler_286, (CAST("ADS_imp_1_OUT".impter_287 AS DOUBLE PRECISION) - 0.05111067471537181) / 1.0268046765512155 AS scaler_287, (CAST("ADS_imp_1_OUT".impter_288 AS DOUBLE PRECISION) - 0.01652404135719371) / 1.0028252297771558 AS scaler_288, (CAST("ADS_imp_1_OUT".impter_289 AS DOUBLE PRECISION) - 0.046881980038056) / 0.9760255592175245 AS scaler_289, (CAST("ADS_imp_1_OUT".impter_290 AS DOUBLE PRECISION) - -0.21093566587728044) / 5.894017797300676 AS scaler_290, (CAST("ADS_imp_1_OUT".impter_291 AS DOUBLE PRECISION) - -0.38235732593808275) / 6.050957848475724 AS scaler_291, (CAST("ADS_imp_1_OUT".impter_292 AS DOUBLE PRECISION) - 0.07184577295054764) / 1.0317735699072899 AS scaler_292, (CAST("ADS_imp_1_OUT".impter_293 AS DOUBLE PRECISION) - 0.04617448263239929) / 1.008695230198085 AS scaler_293, (CAST("ADS_imp_1_OUT".impter_294 AS DOUBLE PRECISION) - -0.08558825454913567) / 0.9612556638919216 AS scaler_294, (CAST("ADS_imp_1_OUT".impter_295 AS DOUBLE PRECISION) - 0.03845417409897625) / 0.9634658509822347 AS scaler_295, (CAST("ADS_imp_1_OUT".impter_296 AS DOUBLE PRECISION) - 0.0010861389762425358) / 0.9878011845177224 AS scaler_296, (CAST("ADS_imp_1_OUT".impter_297 AS DOUBLE PRECISION) - 0.0013036543004699376) / 0.9802325604692824 AS scaler_297, (CAST("ADS_imp_1_OUT".impter_298 AS DOUBLE PRECISION) - -0.04572115009336087) / 0.9966809765564838 AS scaler_298, (CAST("ADS_imp_1_OUT".impter_299 AS DOUBLE PRECISION) - 0.109011335964655) / 5.862835709214262 AS scaler_299, (CAST("ADS_imp_1_OUT".impter_300 AS DOUBLE PRECISION) - 0.059388745922670474) / 1.0279151786530831 AS scaler_300, (CAST("ADS_imp_1_OUT".impter_301 AS DOUBLE PRECISION) - 0.02796049502507793) / 1.0196445533826572 AS scaler_301, (CAST("ADS_imp_1_OUT".impter_302 AS DOUBLE PRECISION) - 0.06765588611224771) / 0.996907552648703 AS scaler_302, (CAST("ADS_imp_1_OUT".impter_303 AS DOUBLE PRECISION) - 0.42516463145086364) / 6.021798926740255 AS scaler_303, (CAST("ADS_imp_1_OUT".impter_304 AS DOUBLE PRECISION) - -0.025755583751806005) / 0.9677777967417204 AS scaler_304, (CAST("ADS_imp_1_OUT".impter_305 AS DOUBLE PRECISION) - 0.05983631292026072) / 0.9714721805811518 AS scaler_305, (CAST("ADS_imp_1_OUT".impter_306 AS DOUBLE PRECISION) - -0.022966826151323574) / 0.9944894903866501 AS scaler_306, (CAST("ADS_imp_1_OUT".impter_307 AS DOUBLE PRECISION) - -0.025059373911550786) / 1.0097409585083836 AS scaler_307, (CAST("ADS_imp_1_OUT".impter_308 AS DOUBLE PRECISION) - -0.07477780703395227) / 1.0100566533671511 AS scaler_308, (CAST("ADS_imp_1_OUT".impter_309 AS DOUBLE PRECISION) - 0.005214344538572354) / 0.9837893167281717 AS scaler_309, (CAST("ADS_imp_1_OUT".impter_310 AS DOUBLE PRECISION) - 0.15069860934029664) / 5.735011156781238 AS scaler_310, (CAST("ADS_imp_1_OUT".impter_311 AS DOUBLE PRECISION) - 0.0920648545309688) / 1.0065402771379437 AS scaler_311, (CAST("ADS_imp_1_OUT".impter_312 AS DOUBLE PRECISION) - 0.02872039649838287) / 0.9784906033450759 AS scaler_312, (CAST("ADS_imp_1_OUT".impter_313 AS DOUBLE PRECISION) - 0.027206434346339497) / 0.9991615732109751 AS scaler_313, (CAST("ADS_imp_1_OUT".impter_314 AS DOUBLE PRECISION) - 0.006348743003703792) / 0.963185353898001 AS scaler_314, (CAST("ADS_imp_1_OUT".impter_315 AS DOUBLE PRECISION) - -0.05402460092901892) / 1.0519822785818902 AS scaler_315, (CAST("ADS_imp_1_OUT".impter_316 AS DOUBLE PRECISION) - 0.027029051133963092) / 0.9775996545554246 AS scaler_316, (CAST("ADS_imp_1_OUT".impter_317 AS DOUBLE PRECISION) - -0.0064650471205589975) / 1.0402075183971329 AS scaler_317, (CAST("ADS_imp_1_OUT".impter_318 AS DOUBLE PRECISION) - -0.043335487666484804) / 1.0011278238556536 AS scaler_318, (CAST("ADS_imp_1_OUT".impter_319 AS DOUBLE PRECISION) - 0.04481518768554344) / 0.9722446609062138 AS scaler_319, (CAST("ADS_imp_1_OUT".impter_320 AS DOUBLE PRECISION) - 0.004584500412058787) / 1.0262858605349432 AS scaler_320, (CAST("ADS_imp_1_OUT".impter_321 AS DOUBLE PRECISION) - -0.001027021710811342) / 0.9919602897367665 AS scaler_321, (CAST("ADS_imp_1_OUT".impter_322 AS DOUBLE PRECISION) - -0.03706762371695285) / 0.9474832242940362 AS scaler_322, (CAST("ADS_imp_1_OUT".impter_323 AS DOUBLE PRECISION) - -0.01578014654880059) / 0.9898649027094482 AS scaler_323, (CAST("ADS_imp_1_OUT".impter_324 AS DOUBLE PRECISION) - -0.06476010801389685) / 0.9782346350213528 AS scaler_324, (CAST("ADS_imp_1_OUT".impter_325 AS DOUBLE PRECISION) - 0.013158594346038825) / 1.0495582938116077 AS scaler_325, (CAST("ADS_imp_1_OUT".impter_326 AS DOUBLE PRECISION) - -0.6909561374047029) / 5.746508659742815 AS scaler_326, (CAST("ADS_imp_1_OUT".impter_327 AS DOUBLE PRECISION) - -0.032307395882269586) / 0.9535832586619137 AS scaler_327, (CAST("ADS_imp_1_OUT".impter_328 AS DOUBLE PRECISION) - 0.001871548534192734) / 0.9815964798775456 AS scaler_328, (CAST("ADS_imp_1_OUT".impter_329 AS DOUBLE PRECISION) - 0.009014081196377208) / 0.9660287896470228 AS scaler_329, (CAST("ADS_imp_1_OUT".impter_330 AS DOUBLE PRECISION) - 0.08432204289520576) / 1.0097164483499368 AS scaler_330, (CAST("ADS_imp_1_OUT".impter_331 AS DOUBLE PRECISION) - 0.03098818000424445) / 1.0130270342045389 AS scaler_331, (CAST("ADS_imp_1_OUT".impter_332 AS DOUBLE PRECISION) - 0.017842106547205465) / 0.993655606972685 AS scaler_332, (CAST("ADS_imp_1_OUT".impter_333 AS DOUBLE PRECISION) - 0.009830954519062886) / 5.92553450726784 AS scaler_333, (CAST("ADS_imp_1_OUT".impter_334 AS DOUBLE PRECISION) - 0.018857904928326345) / 0.9911886384867388 AS scaler_334, (CAST("ADS_imp_1_OUT".impter_335 AS DOUBLE PRECISION) - -0.09041919658309759) / 6.294466825822825 AS scaler_335, (CAST("ADS_imp_1_OUT".impter_336 AS DOUBLE PRECISION) - -0.0030938413689644926) / 0.9761716888106455 AS scaler_336, (CAST("ADS_imp_1_OUT".impter_337 AS DOUBLE PRECISION) - 0.06013463236860367) / 1.0011483068873699 AS scaler_337, (CAST("ADS_imp_1_OUT".impter_338 AS DOUBLE PRECISION) - -0.006783134159713595) / 0.9722970432848048 AS scaler_338, (CAST("ADS_imp_1_OUT".impter_339 AS DOUBLE PRECISION) - -0.022505432033342578) / 1.0089265011933541 AS scaler_339, (CAST("ADS_imp_1_OUT".impter_340 AS DOUBLE PRECISION) - 0.012902527459674764) / 5.731240866243183 AS scaler_340, (CAST("ADS_imp_1_OUT".impter_341 AS DOUBLE PRECISION) - -0.03249915020429405) / 1.044475101185332 AS scaler_341, (CAST("ADS_imp_1_OUT".impter_342 AS DOUBLE PRECISION) - -0.03379268322494926) / 0.9927711788351935 AS scaler_342, (CAST("ADS_imp_1_OUT".impter_343 AS DOUBLE PRECISION) - 0.006926122620280751) / 0.9801721512833292 AS scaler_343, (CAST("ADS_imp_1_OUT".impter_344 AS DOUBLE PRECISION) - -0.03319669654598365) / 1.0182345234275731 AS scaler_344, (CAST("ADS_imp_1_OUT".impter_345 AS DOUBLE PRECISION) - 2.7390190345202456) / 34.667875391393046 AS scaler_345, (CAST("ADS_imp_1_OUT".impter_346 AS DOUBLE PRECISION) - -0.0075319633963496155) / 0.9979191708443869 AS scaler_346, (CAST("ADS_imp_1_OUT".impter_347 AS DOUBLE PRECISION) - 0.022124363701982737) / 0.9808099368402478 AS scaler_347, (CAST("ADS_imp_1_OUT".impter_348 AS DOUBLE PRECISION) - -0.023653773851870237) / 1.0003846372052088 AS scaler_348, (CAST("ADS_imp_1_OUT".impter_349 AS DOUBLE PRECISION) - -0.01620635032677563) / 1.0105995254781748 AS scaler_349, (CAST("ADS_imp_1_OUT".impter_350 AS DOUBLE PRECISION) - -0.021142104441251273) / 1.0221080104646578 AS scaler_350, (CAST("ADS_imp_1_OUT".impter_351 AS DOUBLE PRECISION) - -0.06890676984297263) / 1.0082431727106027 AS scaler_351, (CAST("ADS_imp_1_OUT".impter_352 AS DOUBLE PRECISION) - 0.006174673936264955) / 1.014439751019311 AS scaler_352, (CAST("ADS_imp_1_OUT".impter_353 AS DOUBLE PRECISION) - -0.018480727521201546) / 0.9701951933455762 AS scaler_353, (CAST("ADS_imp_1_OUT".impter_354 AS DOUBLE PRECISION) - 0.01892387185297041) / 0.9808278094926718 AS scaler_354, (CAST("ADS_imp_1_OUT".impter_355 AS DOUBLE PRECISION) - 0.02727917887836492) / 1.026160540912389 AS scaler_355, (CAST("ADS_imp_1_OUT".impter_356 AS DOUBLE PRECISION) - -0.012823623960695998) / 0.9999639298811288 AS scaler_356, (CAST("ADS_imp_1_OUT".impter_357 AS DOUBLE PRECISION) - -0.013271487823414667) / 0.9888293309407856 AS scaler_357, (CAST("ADS_imp_1_OUT".impter_358 AS DOUBLE PRECISION) - -0.03395939012664646) / 0.9838454170841583 AS scaler_358, (CAST("ADS_imp_1_OUT".impter_359 AS DOUBLE PRECISION) - 0.03223004938335937) / 1.0311477237988198 AS scaler_359, (CAST("ADS_imp_1_OUT".impter_360 AS DOUBLE PRECISION) - -0.0016017230909337308) / 0.9977131054043721 AS scaler_360, (CAST("ADS_imp_1_OUT".impter_361 AS DOUBLE PRECISION) - -0.03321899170282454) / 0.9865478214908777 AS scaler_361, (CAST("ADS_imp_1_OUT".impter_362 AS DOUBLE PRECISION) - -0.0016618588765567152) / 0.9890613942697071 AS scaler_362, (CAST("ADS_imp_1_OUT".impter_363 AS DOUBLE PRECISION) - 0.04573989570209914) / 1.0180765967750773 AS scaler_363, (CAST("ADS_imp_1_OUT".impter_364 AS DOUBLE PRECISION) - -0.021293175937165) / 0.978862030082048 AS scaler_364, (CAST("ADS_imp_1_OUT".impter_365 AS DOUBLE PRECISION) - -0.011255144611449622) / 1.0085669156865533 AS scaler_365, (CAST("ADS_imp_1_OUT".impter_366 AS DOUBLE PRECISION) - -0.02563865782710232) / 1.0300081363336124 AS scaler_366, (CAST("ADS_imp_1_OUT".impter_367 AS DOUBLE PRECISION) - -0.015167083011311294) / 0.9899050483960369 AS scaler_367, (CAST("ADS_imp_1_OUT".impter_368 AS DOUBLE PRECISION) - 0.0010959755571049432) / 1.0362907152513867 AS scaler_368, (CAST("ADS_imp_1_OUT".impter_369 AS DOUBLE PRECISION) - 0.25830160330800345) / 5.815383768143437 AS scaler_369, (CAST("ADS_imp_1_OUT".impter_370 AS DOUBLE PRECISION) - -0.02512420755881165) / 1.0004687101039538 AS scaler_370, (CAST("ADS_imp_1_OUT".impter_371 AS DOUBLE PRECISION) - -0.5588992061400131) / 5.788250773541592 AS scaler_371, (CAST("ADS_imp_1_OUT".impter_372 AS DOUBLE PRECISION) - 0.04500746078257995) / 1.0086593860246837 AS scaler_372, (CAST("ADS_imp_1_OUT".impter_373 AS DOUBLE PRECISION) - -0.03582268471853405) / 1.0018148995353613 AS scaler_373, (CAST("ADS_imp_1_OUT".impter_374 AS DOUBLE PRECISION) - -0.0238194811504848) / 1.0251776661707117 AS scaler_374, (CAST("ADS_imp_1_OUT".impter_375 AS DOUBLE PRECISION) - 0.00870068158455398) / 1.0334836529068854 AS scaler_375, (CAST("ADS_imp_1_OUT".impter_376 AS DOUBLE PRECISION) - 0.41206876337723863) / 5.954218215874292 AS scaler_376, (CAST("ADS_imp_1_OUT".impter_377 AS DOUBLE PRECISION) - -0.00883623214870824) / 0.9659875346877604 AS scaler_377, (CAST("ADS_imp_1_OUT".impter_378 AS DOUBLE PRECISION) - -0.047673712853857325) / 0.9682385986144871 AS scaler_378, (CAST("ADS_imp_1_OUT".impter_379 AS DOUBLE PRECISION) - 0.39808785261614416) / 6.09008828409793 AS scaler_379, (CAST("ADS_imp_1_OUT".impter_380 AS DOUBLE PRECISION) - 0.014874268925561847) / 0.9655591180277953 AS scaler_380, (CAST("ADS_imp_1_OUT".impter_381 AS DOUBLE PRECISION) - -0.01355994466429737) / 1.0067469722911915 AS scaler_381, (CAST("ADS_imp_1_OUT".impter_382 AS DOUBLE PRECISION) - 0.06549584301442803) / 1.0522361938897125 AS scaler_382, (CAST("ADS_imp_1_OUT".impter_383 AS DOUBLE PRECISION) - -0.07523712848824068) / 1.0400455118176228 AS scaler_383, (CAST("ADS_imp_1_OUT".impter_384 AS DOUBLE PRECISION) - -0.020246425764404403) / 0.99550805592098 AS scaler_384, (CAST("ADS_imp_1_OUT".impter_385 AS DOUBLE PRECISION) - -0.06505456712739689) / 1.00815114883143 AS scaler_385, (CAST("ADS_imp_1_OUT".impter_386 AS DOUBLE PRECISION) - 0.040682923885247455) / 0.9675621093776584 AS scaler_386, (CAST("ADS_imp_1_OUT".impter_387 AS DOUBLE PRECISION) - 0.5036509170142887) / 6.055498495136896 AS scaler_387, (CAST("ADS_imp_1_OUT".impter_388 AS DOUBLE PRECISION) - -0.01984269915156025) / 0.9900740889033433 AS scaler_388, (CAST("ADS_imp_1_OUT".impter_389 AS DOUBLE PRECISION) - -0.029975294309893395) / 0.9997397749932063 AS scaler_389, (CAST("ADS_imp_1_OUT".impter_390 AS DOUBLE PRECISION) - -0.023935150902407186) / 1.00798921844037 AS scaler_390, (CAST("ADS_imp_1_OUT".impter_391 AS DOUBLE PRECISION) - 0.003487379328156493) / 1.0044645097371014 AS scaler_391, (CAST("ADS_imp_1_OUT".impter_392 AS DOUBLE PRECISION) - -0.006836589678473769) / 0.9763905812172375 AS scaler_392, (CAST("ADS_imp_1_OUT".impter_393 AS DOUBLE PRECISION) - -0.023001043810177268) / 0.9698402164080443 AS scaler_393, (CAST("ADS_imp_1_OUT".impter_394 AS DOUBLE PRECISION) - 0.026433076987905132) / 1.0299294878585217 AS scaler_394, (CAST("ADS_imp_1_OUT".impter_395 AS DOUBLE PRECISION) - 0.03869392603237684) / 1.0186157804435945 AS scaler_395, (CAST("ADS_imp_1_OUT".impter_396 AS DOUBLE PRECISION) - 0.007166160812626991) / 0.9843737579570186 AS scaler_396, (CAST("ADS_imp_1_OUT".impter_397 AS DOUBLE PRECISION) - -0.31652297140011876) / 6.070605480686376 AS scaler_397, (CAST("ADS_imp_1_OUT".impter_398 AS DOUBLE PRECISION) - 0.352192927636602) / 6.099135476868029 AS scaler_398, (CAST("ADS_imp_1_OUT".impter_399 AS DOUBLE PRECISION) - 0.2418343422011388) / 5.947824293275464 AS scaler_399, (CAST("ADS_imp_1_OUT".impter_400 AS DOUBLE PRECISION) - 0.23681058627355728) / 5.851504662987678 AS scaler_400, (CAST("ADS_imp_1_OUT".impter_401 AS DOUBLE PRECISION) - -0.011935061221661204) / 0.9960811072647195 AS scaler_401, (CAST("ADS_imp_1_OUT".impter_402 AS DOUBLE PRECISION) - -0.23225071389385885) / 5.877913338764821 AS scaler_402, (CAST("ADS_imp_1_OUT".impter_403 AS DOUBLE PRECISION) - 0.027478547688853303) / 0.9788713733340856 AS scaler_403, (CAST("ADS_imp_1_OUT".impter_404 AS DOUBLE PRECISION) - -0.2835956440898274) / 5.678310355351206 AS scaler_404, (CAST("ADS_imp_1_OUT".impter_405 AS DOUBLE PRECISION) - -0.026966778578135772) / 1.0011958124193499 AS scaler_405, (CAST("ADS_imp_1_OUT".impter_406 AS DOUBLE PRECISION) - -0.004329268838175945) / 5.946384673713921 AS scaler_406, (CAST("ADS_imp_1_OUT".impter_407 AS DOUBLE PRECISION) - 0.0774540554940731) / 0.9793348754271206 AS scaler_407, (CAST("ADS_imp_1_OUT".impter_408 AS DOUBLE PRECISION) - -0.6052203464446785) / 5.817154006812937 AS scaler_408, (CAST("ADS_imp_1_OUT".impter_409 AS DOUBLE PRECISION) - 0.0338701304693192) / 0.960463407901455 AS scaler_409, (CAST("ADS_imp_1_OUT".impter_410 AS DOUBLE PRECISION) - -0.05044305753803302) / 5.810222734574313 AS scaler_410, (CAST("ADS_imp_1_OUT".impter_411 AS DOUBLE PRECISION) - 0.008805453357057883) / 0.9798841614686381 AS scaler_411, (CAST("ADS_imp_1_OUT".impter_412 AS DOUBLE PRECISION) - -0.05374724915468808) / 0.9725143886399855 AS scaler_412, (CAST("ADS_imp_1_OUT".impter_413 AS DOUBLE PRECISION) - -0.004957359515296269) / 0.9748727609121598 AS scaler_413, (CAST("ADS_imp_1_OUT".impter_414 AS DOUBLE PRECISION) - 0.12039061456156476) / 5.880042099618977 AS scaler_414, (CAST("ADS_imp_1_OUT".impter_415 AS DOUBLE PRECISION) - -0.005732424778663252) / 1.0091331017994325 AS scaler_415, (CAST("ADS_imp_1_OUT".impter_416 AS DOUBLE PRECISION) - -0.4286478678045208) / 5.973293156925994 AS scaler_416, (CAST("ADS_imp_1_OUT".impter_417 AS DOUBLE PRECISION) - -0.028516293632594378) / 1.0152913842776887 AS scaler_417, (CAST("ADS_imp_1_OUT".impter_418 AS DOUBLE PRECISION) - 0.052380333284906204) / 1.01817218649359 AS scaler_418, (CAST("ADS_imp_1_OUT".impter_419 AS DOUBLE PRECISION) - -0.028497248319907256) / 5.847011203913571 AS scaler_419, (CAST("ADS_imp_1_OUT".impter_420 AS DOUBLE PRECISION) - -0.012190751471044496) / 1.0251203403698526 AS scaler_420, (CAST("ADS_imp_1_OUT".impter_421 AS DOUBLE PRECISION) - 0.014464401907681581) / 1.0492676826138123 AS scaler_421, (CAST("ADS_imp_1_OUT".impter_422 AS DOUBLE PRECISION) - -0.17428872440122373) / 5.904567530979285 AS scaler_422, (CAST("ADS_imp_1_OUT".impter_423 AS DOUBLE PRECISION) - -0.01773365620191358) / 1.0254922074959463 AS scaler_423, (CAST("ADS_imp_1_OUT".impter_424 AS DOUBLE PRECISION) - 0.40558807090091853) / 5.537078097301127 AS scaler_424, (CAST("ADS_imp_1_OUT".impter_425 AS DOUBLE PRECISION) - -0.0009022771635855167) / 0.9868008921623722 AS scaler_425, (CAST("ADS_imp_1_OUT".impter_426 AS DOUBLE PRECISION) - 0.05739992787057724) / 0.9696129618812115 AS scaler_426, (CAST("ADS_imp_1_OUT".impter_427 AS DOUBLE PRECISION) - 0.04850780446682892) / 0.9347455059647907 AS scaler_427, (CAST("ADS_imp_1_OUT".impter_428 AS DOUBLE PRECISION) - 0.04555082643401923) / 0.9795902806725212 AS scaler_428, (CAST("ADS_imp_1_OUT".impter_429 AS DOUBLE PRECISION) - -0.013088017894457874) / 5.853516696500564 AS scaler_429, (CAST("ADS_imp_1_OUT".impter_430 AS DOUBLE PRECISION) - 0.7622987596243614) / 5.976914501060202 AS scaler_430, (CAST("ADS_imp_1_OUT".impter_431 AS DOUBLE PRECISION) - 0.06277381315317203) / 1.0530187925965664 AS scaler_431, (CAST("ADS_imp_1_OUT".impter_432 AS DOUBLE PRECISION) - -0.00595076348043327) / 5.8761809381575265 AS scaler_432, (CAST("ADS_imp_1_OUT".impter_433 AS DOUBLE PRECISION) - -0.019782980673704004) / 1.016060957904549 AS scaler_433, (CAST("ADS_imp_1_OUT".impter_434 AS DOUBLE PRECISION) - 0.03813782436434927) / 0.9897709857222856 AS scaler_434, (CAST("ADS_imp_1_OUT".impter_435 AS DOUBLE PRECISION) - -0.03361997654906546) / 1.0108026015018525 AS scaler_435, (CAST("ADS_imp_1_OUT".impter_436 AS DOUBLE PRECISION) - -0.015449063685126078) / 0.9717326567278565 AS scaler_436, (CAST("ADS_imp_1_OUT".impter_437 AS DOUBLE PRECISION) - -0.05083199732740015) / 0.9791071943300053 AS scaler_437, (CAST("ADS_imp_1_OUT".impter_438 AS DOUBLE PRECISION) - 0.12294390238132996) / 5.80532595725793 AS scaler_438, (CAST("ADS_imp_1_OUT".impter_439 AS DOUBLE PRECISION) - 0.008273480374725027) / 1.0023549695531735 AS scaler_439, (CAST("ADS_imp_1_OUT".impter_440 AS DOUBLE PRECISION) - 0.04577021563207708) / 0.9948251301427953 AS scaler_440, (CAST("ADS_imp_1_OUT".impter_441 AS DOUBLE PRECISION) - -0.004739394213399075) / 0.9866453331207407 AS scaler_441, (CAST("ADS_imp_1_OUT".impter_442 AS DOUBLE PRECISION) - -0.025074465350024163) / 1.0215515668408335 AS scaler_442, (CAST("ADS_imp_1_OUT".impter_443 AS DOUBLE PRECISION) - 0.050774082486299194) / 0.9690110808898585 AS scaler_443, (CAST("ADS_imp_1_OUT".impter_444 AS DOUBLE PRECISION) - -0.0967069255496831) / 5.631254555346854 AS scaler_444, (CAST("ADS_imp_1_OUT".impter_445 AS DOUBLE PRECISION) - -0.007206652069868864) / 0.9728674931147712 AS scaler_445, (CAST("ADS_imp_1_OUT".impter_446 AS DOUBLE PRECISION) - 0.03506859491861105) / 1.0282750135426344 AS scaler_446, (CAST("ADS_imp_1_OUT".impter_447 AS DOUBLE PRECISION) - -0.00905435452775923) / 1.035287499798065 AS scaler_447, (CAST("ADS_imp_1_OUT".impter_448 AS DOUBLE PRECISION) - -0.012006634151227604) / 1.0200794266710214 AS scaler_448, (CAST("ADS_imp_1_OUT".impter_449 AS DOUBLE PRECISION) - 0.03145627491797305) / 0.9937879772736924 AS scaler_449, (CAST("ADS_imp_1_OUT".impter_450 AS DOUBLE PRECISION) - 0.02517699513431471) / 0.9684040296079491 AS scaler_450, (CAST("ADS_imp_1_OUT".impter_451 AS DOUBLE PRECISION) - 0.005640015529596338) / 1.015421580688403 AS scaler_451, (CAST("ADS_imp_1_OUT".impter_452 AS DOUBLE PRECISION) - -0.010608619203966895) / 1.0246613022268378 AS scaler_452, (CAST("ADS_imp_1_OUT".impter_453 AS DOUBLE PRECISION) - -0.062079998204146586) / 0.9869504608282007 AS scaler_453, (CAST("ADS_imp_1_OUT".impter_454 AS DOUBLE PRECISION) - -0.0876770647950911) / 1.0029750629720398 AS scaler_454, (CAST("ADS_imp_1_OUT".impter_455 AS DOUBLE PRECISION) - 0.012143657983602962) / 0.9744995952331035 AS scaler_455, (CAST("ADS_imp_1_OUT".impter_456 AS DOUBLE PRECISION) - 0.03448739220055286) / 1.0176699342790378 AS scaler_456, (CAST("ADS_imp_1_OUT".impter_457 AS DOUBLE PRECISION) - 0.006839876969520017) / 0.987127462042404 AS scaler_457, (CAST("ADS_imp_1_OUT".impter_458 AS DOUBLE PRECISION) - -0.1589087203718216) / 5.5807038713007335 AS scaler_458, (CAST("ADS_imp_1_OUT".impter_459 AS DOUBLE PRECISION) - 0.45343491151894105) / 5.6176560152403745 AS scaler_459, (CAST("ADS_imp_1_OUT".impter_460 AS DOUBLE PRECISION) - -0.007482014986002762) / 1.0334253515710414 AS scaler_460, (CAST("ADS_imp_1_OUT".impter_461 AS DOUBLE PRECISION) - -0.0538045349045037) / 0.9960348345876942 AS scaler_461, (CAST("ADS_imp_1_OUT".impter_462 AS DOUBLE PRECISION) - 0.006517329526108785) / 1.0021131774599925 AS scaler_462, (CAST("ADS_imp_1_OUT".impter_463 AS DOUBLE PRECISION) - -0.3201406707449883) / 5.716416507315997 AS scaler_463, (CAST("ADS_imp_1_OUT".impter_464 AS DOUBLE PRECISION) - 0.03164463472773337) / 0.9726515882520317 AS scaler_464, (CAST("ADS_imp_1_OUT".impter_465 AS DOUBLE PRECISION) - -0.031827670383012555) / 0.9812532959822754 AS scaler_465, (CAST("ADS_imp_1_OUT".impter_466 AS DOUBLE PRECISION) - -0.02220263625319023) / 1.0370390821341966 AS scaler_466, (CAST("ADS_imp_1_OUT".impter_467 AS DOUBLE PRECISION) - 0.04918588699743021) / 1.0206054749154756 AS scaler_467, (CAST("ADS_imp_1_OUT".impter_468 AS DOUBLE PRECISION) - 0.013873407999629129) / 0.987246490028904 AS scaler_468, (CAST("ADS_imp_1_OUT".impter_469 AS DOUBLE PRECISION) - -0.054844779309353775) / 0.9876262037314543 AS scaler_469, (CAST("ADS_imp_1_OUT".impter_470 AS DOUBLE PRECISION) - 0.05947169339023267) / 1.0092122222358388 AS scaler_470, (CAST("ADS_imp_1_OUT".impter_471 AS DOUBLE PRECISION) - -0.007061332655546885) / 1.0113339937552548 AS scaler_471, (CAST("ADS_imp_1_OUT".impter_472 AS DOUBLE PRECISION) - 0.0009227758698022626) / 1.020330749267979 AS scaler_472, (CAST("ADS_imp_1_OUT".impter_473 AS DOUBLE PRECISION) - -0.014955268248566689) / 1.0413119364682566 AS scaler_473, (CAST("ADS_imp_1_OUT".impter_474 AS DOUBLE PRECISION) - -0.00997364389328803) / 0.9793415870167274 AS scaler_474, (CAST("ADS_imp_1_OUT".impter_475 AS DOUBLE PRECISION) - 0.044011886118274696) / 1.0007453076824555 AS scaler_475, (CAST("ADS_imp_1_OUT".impter_476 AS DOUBLE PRECISION) - 0.03204255595840591) / 0.988499862882957 AS scaler_476, (CAST("ADS_imp_1_OUT".impter_477 AS DOUBLE PRECISION) - -0.028511291715894678) / 1.018673434822483 AS scaler_477, (CAST("ADS_imp_1_OUT".impter_478 AS DOUBLE PRECISION) - 0.05235198939025461) / 1.030225026137767 AS scaler_478, (CAST("ADS_imp_1_OUT".impter_479 AS DOUBLE PRECISION) - 0.4442463067830223) / 5.635010414681324 AS scaler_479, (CAST("ADS_imp_1_OUT".impter_480 AS DOUBLE PRECISION) - -0.0421220588184719) / 0.9772881180874626 AS scaler_480, (CAST("ADS_imp_1_OUT".impter_481 AS DOUBLE PRECISION) - -0.06375683381469409) / 0.9807772043168697 AS scaler_481, (CAST("ADS_imp_1_OUT".impter_482 AS DOUBLE PRECISION) - 0.09016412133268503) / 5.8772408365208255 AS scaler_482, (CAST("ADS_imp_1_OUT".impter_483 AS DOUBLE PRECISION) - -0.021181166332863134) / 1.050621089425892 AS scaler_483, (CAST("ADS_imp_1_OUT".impter_484 AS DOUBLE PRECISION) - 0.015134427562764584) / 1.0181907514344235 AS scaler_484, (CAST("ADS_imp_1_OUT".impter_485 AS DOUBLE PRECISION) - 0.1458909634165245) / 5.950692941207097 AS scaler_485, (CAST("ADS_imp_1_OUT".impter_486 AS DOUBLE PRECISION) - -0.0964936751824616) / 1.025397566101771 AS scaler_486, (CAST("ADS_imp_1_OUT".impter_487 AS DOUBLE PRECISION) - -0.0007661343328348244) / 1.0327977666221848 AS scaler_487, (CAST("ADS_imp_1_OUT".impter_488 AS DOUBLE PRECISION) - 0.007424472006137845) / 1.0131319009223352 AS scaler_488, (CAST("ADS_imp_1_OUT".impter_489 AS DOUBLE PRECISION) - 0.007776565305072426) / 0.9660414885523543 AS scaler_489, (CAST("ADS_imp_1_OUT".impter_490 AS DOUBLE PRECISION) - -0.02972669445658546) / 0.9816148436418729 AS scaler_490, (CAST("ADS_imp_1_OUT".impter_491 AS DOUBLE PRECISION) - -0.020022098906708034) / 1.0376883862584318 AS scaler_491, (CAST("ADS_imp_1_OUT".impter_492 AS DOUBLE PRECISION) - -0.03689120776576418) / 1.0350273972331128 AS scaler_492, (CAST("ADS_imp_1_OUT".impter_493 AS DOUBLE PRECISION) - 0.02342654499679442) / 0.9963841480580575 AS scaler_493, (CAST("ADS_imp_1_OUT".impter_494 AS DOUBLE PRECISION) - 0.06047072800386204) / 1.013712584435496 AS scaler_494, (CAST("ADS_imp_1_OUT".impter_495 AS DOUBLE PRECISION) - 0.02457996835763847) / 1.0206669115005262 AS scaler_495, (CAST("ADS_imp_1_OUT".impter_496 AS DOUBLE PRECISION) - -0.0053128065642532255) / 1.0066954008984852 AS scaler_496, (CAST("ADS_imp_1_OUT".impter_497 AS DOUBLE PRECISION) - -0.050025880514262516) / 5.692164744670064 AS scaler_497, (CAST("ADS_imp_1_OUT".impter_498 AS DOUBLE PRECISION) - -0.055008136401580685) / 0.9868440376092616 AS scaler_498, (CAST("ADS_imp_1_OUT".impter_499 AS DOUBLE PRECISION) - -0.46514935213874503) / 5.739355619460631 AS scaler_499, (CAST("ADS_imp_1_OUT".impter_500 AS DOUBLE PRECISION) - -0.037847190400891) / 0.9980592109563712 AS scaler_500, (CAST("ADS_imp_1_OUT".impter_501 AS DOUBLE PRECISION) - 0.028703608331041793) / 0.9938711909999083 AS scaler_501 
FROM "ADS_imp_1_OUT"), 
"DT_node_lookup" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_268 <= 0.5873000621795654) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_102 <= -1.5063667297363281) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_122 <= -0.615052342414856) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_63 <= -2.2447261810302734) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_398 <= 0.032770074903964996) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_342 <= -0.080269455909729) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_39 <= -0.019040506333112717) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 13 AS count, 3 AS depth, 2 AS parent_id, -0.6862547931885723 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 26 AS count, 3 AS depth, 2 AS parent_id, 1.7939235535726534 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 7 AS count, 3 AS depth, 5 AS parent_id, 2.4582570393122674 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 530 AS count, 3 AS depth, 5 AS parent_id, -0.387931454309274 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 51 AS count, 3 AS depth, 9 AS parent_id, 2.006683950966385 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 66 AS count, 3 AS depth, 9 AS parent_id, 0.4082178484693168 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 48 AS count, 3 AS depth, 12 AS parent_id, 0.6830103357525207 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 59 AS count, 3 AS depth, 12 AS parent_id, -0.6547271023399126 AS "Estimator") AS "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".node_id AS node_id, "DT_node_data".feature AS feature, "DT_node_data".threshold AS threshold, "DT_node_data".count AS count, "DT_node_data".depth AS depth, "DT_node_data".parent_id AS parent_id, "DT_node_data"."Estimator" AS "Estimator" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".node_id), 
"GB_Tree_0_0" AS 
(SELECT "DT_Output"."KEY" AS "KEY", "DT_Output"."Estimator" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output"), 
"DT_node_lookup_1" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_251 <= 0.20094695687294006) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_479 <= 0.03051883727312088) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_458 <= -0.6589493751525879) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= -0.40242859721183777) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_380 <= -1.3854039907455444) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 0.20922285318374634) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_143 <= -1.7501364946365356) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_1" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 59 AS count, 3 AS depth, 2 AS parent_id, -0.18477750022316775 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 162 AS count, 3 AS depth, 2 AS parent_id, 1.1183834168634679 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 82 AS count, 3 AS depth, 5 AS parent_id, 0.5556667916105184 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 165 AS count, 3 AS depth, 5 AS parent_id, -0.5409899361526588 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 14 AS count, 3 AS depth, 9 AS parent_id, -0.4307304116338052 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 15 AS count, 3 AS depth, 9 AS parent_id, 2.445409642672702 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 10 AS count, 3 AS depth, 12 AS parent_id, 1.3857568088858214 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 293 AS count, 3 AS depth, 12 AS parent_id, -0.5769608492957284 AS "Estimator") AS "Values"), 
"DT_Output_1" AS 
(SELECT "DT_node_lookup_1"."KEY" AS "KEY", "DT_node_lookup_1".node_id_2 AS node_id_2, "DT_node_data_1".node_id AS node_id, "DT_node_data_1".feature AS feature, "DT_node_data_1".threshold AS threshold, "DT_node_data_1".count AS count, "DT_node_data_1".depth AS depth, "DT_node_data_1".parent_id AS parent_id, "DT_node_data_1"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_1" LEFT OUTER JOIN "DT_node_data_1" ON "DT_node_lookup_1".node_id_2 = "DT_node_data_1".node_id), 
"GB_Tree_0_1" AS 
(SELECT "DT_Output_1"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_1"."Estimator" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_1"), 
"DT_node_lookup_2" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_270 <= 1.877523422241211) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_499 <= -0.5314620733261108) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_277 <= 0.054049938917160034) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_112 <= 1.0654308795928955) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_139 <= -0.807065486907959) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_276 <= 0.4673812985420227) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_340 <= -1.2857662439346313) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_2" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 118 AS count, 3 AS depth, 2 AS parent_id, 0.915634412235921 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 113 AS count, 3 AS depth, 2 AS parent_id, -0.1489010507985261 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 466 AS count, 3 AS depth, 5 AS parent_id, -0.3572627156399112 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 76 AS count, 3 AS depth, 5 AS parent_id, 0.46875897052476523 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 3 AS count, 3 AS depth, 9 AS parent_id, -1.0083721962145018 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 3 AS count, 3 AS depth, 9 AS parent_id, -0.9901916200086168 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 3 AS count, 3 AS depth, 12 AS parent_id, -0.9929657002533293 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 18 AS count, 3 AS depth, 12 AS parent_id, 2.9763304572652234 AS "Estimator") AS "Values"), 
"DT_Output_2" AS 
(SELECT "DT_node_lookup_2"."KEY" AS "KEY", "DT_node_lookup_2".node_id_2 AS node_id_2, "DT_node_data_2".node_id AS node_id, "DT_node_data_2".feature AS feature, "DT_node_data_2".threshold AS threshold, "DT_node_data_2".count AS count, "DT_node_data_2".depth AS depth, "DT_node_data_2".parent_id AS parent_id, "DT_node_data_2"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_2" LEFT OUTER JOIN "DT_node_data_2" ON "DT_node_lookup_2".node_id_2 = "DT_node_data_2".node_id), 
"GB_Tree_0_2" AS 
(SELECT "DT_Output_2"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_2"."Estimator" AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_2"), 
"DT_node_lookup_3" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_144 <= 0.6174097061157227) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_497 <= 1.6264269351959229) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_20 <= 0.7535649538040161) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_391 <= -0.9466269016265869) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_369 <= 0.2949606776237488) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_345 <= 0.08361653983592987) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_90 <= -1.1360386610031128) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_3" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 435 AS count, 3 AS depth, 2 AS parent_id, -0.4329067694111092 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 126 AS count, 3 AS depth, 2 AS parent_id, 0.32319272689298145 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 6 AS count, 3 AS depth, 5 AS parent_id, -1.0063105321380974 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 21 AS count, 3 AS depth, 5 AS parent_id, 2.1965123278903613 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 62 AS count, 3 AS depth, 9 AS parent_id, 0.4086468509479222 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 58 AS count, 3 AS depth, 9 AS parent_id, 1.8430304722501507 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 10 AS count, 3 AS depth, 12 AS parent_id, 2.1644564484488527 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 82 AS count, 3 AS depth, 12 AS parent_id, -0.36771476782333684 AS "Estimator") AS "Values"), 
"DT_Output_3" AS 
(SELECT "DT_node_lookup_3"."KEY" AS "KEY", "DT_node_lookup_3".node_id_2 AS node_id_2, "DT_node_data_3".node_id AS node_id, "DT_node_data_3".feature AS feature, "DT_node_data_3".threshold AS threshold, "DT_node_data_3".count AS count, "DT_node_data_3".depth AS depth, "DT_node_data_3".parent_id AS parent_id, "DT_node_data_3"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_3" LEFT OUTER JOIN "DT_node_data_3" ON "DT_node_lookup_3".node_id_2 = "DT_node_data_3".node_id), 
"GB_Tree_0_3" AS 
(SELECT "DT_Output_3"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_3"."Estimator" AS "Score_3" 
FROM "DT_Output_3"), 
"DT_node_lookup_4" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_268 <= 0.5873000621795654) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_438 <= -0.7723612785339355) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_73 <= -0.5857434272766113) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_235 <= 2.1394333839416504) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_230 <= 0.14260706305503845) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_340 <= -0.47487783432006836) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_127 <= 1.4922162294387817) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_4" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 41 AS count, 3 AS depth, 2 AS parent_id, 1.5201400954123248 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 86 AS count, 3 AS depth, 2 AS parent_id, -0.21862082028035865 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 442 AS count, 3 AS depth, 5 AS parent_id, -0.45102850639932457 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 7 AS count, 3 AS depth, 5 AS parent_id, 1.93151952281528 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 48 AS count, 3 AS depth, 9 AS parent_id, 1.760913851682338 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 85 AS count, 3 AS depth, 9 AS parent_id, 0.42656748397703403 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 87 AS count, 3 AS depth, 12 AS parent_id, -0.280169033099207 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 4 AS count, 3 AS depth, 12 AS parent_id, 2.8349584077519747 AS "Estimator") AS "Values"), 
"DT_Output_4" AS 
(SELECT "DT_node_lookup_4"."KEY" AS "KEY", "DT_node_lookup_4".node_id_2 AS node_id_2, "DT_node_data_4".node_id AS node_id, "DT_node_data_4".feature AS feature, "DT_node_data_4".threshold AS threshold, "DT_node_data_4".count AS count, "DT_node_data_4".depth AS depth, "DT_node_data_4".parent_id AS parent_id, "DT_node_data_4"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_4" LEFT OUTER JOIN "DT_node_data_4" ON "DT_node_lookup_4".node_id_2 = "DT_node_data_4".node_id), 
"GB_Tree_1_0" AS 
(SELECT "DT_Output_4"."KEY" AS "KEY", "DT_Output_4"."Estimator" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_4"), 
"DT_node_lookup_5" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_497 <= -0.16394361853599548) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_154 <= -2.1628525257110596) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_271 <= -0.15216048061847687) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_196 <= 1.9237697124481201) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_20 <= 0.7529007792472839) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_251 <= 0.20098257064819336) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_262 <= 1.3211995363235474) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_5" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 2 AS count, 3 AS depth, 2 AS parent_id, 2.743941772741026 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 2 AS count, 3 AS depth, 2 AS parent_id, 3.1164422514384906 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 333 AS count, 3 AS depth, 5 AS parent_id, -0.4324373788236649 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 11 AS count, 3 AS depth, 5 AS parent_id, 1.3972232720223225 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 206 AS count, 3 AS depth, 9 AS parent_id, 0.8494496999112703 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 139 AS count, 3 AS depth, 9 AS parent_id, -0.0584389764816125 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 96 AS count, 3 AS depth, 12 AS parent_id, -0.7402556842910717 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 11 AS count, 3 AS depth, 12 AS parent_id, 1.4835483802611447 AS "Estimator") AS "Values"), 
"DT_Output_5" AS 
(SELECT "DT_node_lookup_5"."KEY" AS "KEY", "DT_node_lookup_5".node_id_2 AS node_id_2, "DT_node_data_5".node_id AS node_id, "DT_node_data_5".feature AS feature, "DT_node_data_5".threshold AS threshold, "DT_node_data_5".count AS count, "DT_node_data_5".depth AS depth, "DT_node_data_5".parent_id AS parent_id, "DT_node_data_5"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_5" LEFT OUTER JOIN "DT_node_data_5" ON "DT_node_lookup_5".node_id_2 = "DT_node_data_5".node_id), 
"GB_Tree_1_1" AS 
(SELECT "DT_Output_5"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_5"."Estimator" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_5"), 
"DT_node_lookup_6" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_270 <= 1.877523422241211) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_499 <= -0.5314620733261108) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_277 <= 0.054049938917160034) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_466 <= 2.2628393173217773) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_139 <= -0.807065486907959) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_131 <= -0.04276743903756142) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_340 <= -1.2857662439346313) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_6" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 118 AS count, 3 AS depth, 2 AS parent_id, 0.8007231459369641 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 113 AS count, 3 AS depth, 2 AS parent_id, -0.13944392294877217 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 534 AS count, 3 AS depth, 5 AS parent_id, -0.2580421418416156 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 8 AS count, 3 AS depth, 5 AS parent_id, 2.0634530733570497 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 5 AS count, 3 AS depth, 9 AS parent_id, -0.9635168508684521 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 1 AS count, 3 AS depth, 9 AS parent_id, -0.9808844812826792 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 3 AS count, 3 AS depth, 12 AS parent_id, -0.9639487806859675 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 18 AS count, 3 AS depth, 12 AS parent_id, 2.393553333746592 AS "Estimator") AS "Values"), 
"DT_Output_6" AS 
(SELECT "DT_node_lookup_6"."KEY" AS "KEY", "DT_node_lookup_6".node_id_2 AS node_id_2, "DT_node_data_6".node_id AS node_id, "DT_node_data_6".feature AS feature, "DT_node_data_6".threshold AS threshold, "DT_node_data_6".count AS count, "DT_node_data_6".depth AS depth, "DT_node_data_6".parent_id AS parent_id, "DT_node_data_6"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_6" LEFT OUTER JOIN "DT_node_data_6" ON "DT_node_lookup_6".node_id_2 = "DT_node_data_6".node_id), 
"GB_Tree_1_2" AS 
(SELECT "DT_Output_6"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_6"."Estimator" AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_6"), 
"DT_node_lookup_7" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_144 <= 0.6174097061157227) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_497 <= 1.6264269351959229) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_20 <= 0.7535649538040161) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_230 <= 0.12353476136922836) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= -0.41732680797576904) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_326 <= -1.318070888519287) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_180 <= 0.3744177222251892) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_7" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 435 AS count, 3 AS depth, 2 AS parent_id, -0.4066132980072959 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 126 AS count, 3 AS depth, 2 AS parent_id, 0.2824628149236165 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 10 AS count, 3 AS depth, 5 AS parent_id, -0.27659673938639756 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 17 AS count, 3 AS depth, 5 AS parent_id, 2.142071955541135 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 6 AS count, 3 AS depth, 9 AS parent_id, 2.1309736111982636 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 62 AS count, 3 AS depth, 9 AS parent_id, -0.5002989323622926 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 102 AS count, 3 AS depth, 12 AS parent_id, 1.2766650498859857 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 42 AS count, 3 AS depth, 12 AS parent_id, -0.0856303665108453 AS "Estimator") AS "Values"), 
"DT_Output_7" AS 
(SELECT "DT_node_lookup_7"."KEY" AS "KEY", "DT_node_lookup_7".node_id_2 AS node_id_2, "DT_node_data_7".node_id AS node_id, "DT_node_data_7".feature AS feature, "DT_node_data_7".threshold AS threshold, "DT_node_data_7".count AS count, "DT_node_data_7".depth AS depth, "DT_node_data_7".parent_id AS parent_id, "DT_node_data_7"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_7" LEFT OUTER JOIN "DT_node_data_7" ON "DT_node_lookup_7".node_id_2 = "DT_node_data_7".node_id), 
"GB_Tree_1_3" AS 
(SELECT "DT_Output_7"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_7"."Estimator" AS "Score_3" 
FROM "DT_Output_7"), 
"DT_node_lookup_8" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_268 <= 0.5873000621795654) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_102 <= -1.5063667297363281) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_136 <= 0.29204651713371277) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_63 <= -2.2447261810302734) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_398 <= 0.47583258152008057) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_220 <= -0.26715028285980225) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= -1.0824286937713623) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_8" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 24 AS count, 3 AS depth, 2 AS parent_id, 1.5992791107777553 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 15 AS count, 3 AS depth, 2 AS parent_id, -0.47186074569398473 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 7 AS count, 3 AS depth, 5 AS parent_id, 1.9330832833505067 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 530 AS count, 3 AS depth, 5 AS parent_id, -0.34600390354143934 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 65 AS count, 3 AS depth, 9 AS parent_id, -0.07232830810109908 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 90 AS count, 3 AS depth, 9 AS parent_id, 1.3207607689740146 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 9 AS count, 3 AS depth, 12 AS parent_id, 1.4980815298474706 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 60 AS count, 3 AS depth, 12 AS parent_id, -0.5939764963221078 AS "Estimator") AS "Values"), 
"DT_Output_8" AS 
(SELECT "DT_node_lookup_8"."KEY" AS "KEY", "DT_node_lookup_8".node_id_2 AS node_id_2, "DT_node_data_8".node_id AS node_id, "DT_node_data_8".feature AS feature, "DT_node_data_8".threshold AS threshold, "DT_node_data_8".count AS count, "DT_node_data_8".depth AS depth, "DT_node_data_8".parent_id AS parent_id, "DT_node_data_8"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_8" LEFT OUTER JOIN "DT_node_data_8" ON "DT_node_lookup_8".node_id_2 = "DT_node_data_8".node_id), 
"GB_Tree_2_0" AS 
(SELECT "DT_Output_8"."KEY" AS "KEY", "DT_Output_8"."Estimator" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_8"), 
"DT_node_lookup_9" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_251 <= 0.20094695687294006) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_479 <= 0.03051883727312088) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_387 <= -1.1882743835449219) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= -0.40242859721183777) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_380 <= -1.3854039907455444) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 0.20922285318374634) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_248 <= -2.0898284912109375) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_9" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 31 AS count, 3 AS depth, 2 AS parent_id, -0.6535364305666892 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 190 AS count, 3 AS depth, 2 AS parent_id, 0.8584929542592915 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 82 AS count, 3 AS depth, 5 AS parent_id, 0.4702890585258638 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 165 AS count, 3 AS depth, 5 AS parent_id, -0.5161547394558753 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 14 AS count, 3 AS depth, 9 AS parent_id, -0.38512740903970527 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 15 AS count, 3 AS depth, 9 AS parent_id, 2.017366528758986 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 5 AS count, 3 AS depth, 12 AS parent_id, 2.166294426238667 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 298 AS count, 3 AS depth, 12 AS parent_id, -0.5153639489304058 AS "Estimator") AS "Values"), 
"DT_Output_9" AS 
(SELECT "DT_node_lookup_9"."KEY" AS "KEY", "DT_node_lookup_9".node_id_2 AS node_id_2, "DT_node_data_9".node_id AS node_id, "DT_node_data_9".feature AS feature, "DT_node_data_9".threshold AS threshold, "DT_node_data_9".count AS count, "DT_node_data_9".depth AS depth, "DT_node_data_9".parent_id AS parent_id, "DT_node_data_9"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_9" LEFT OUTER JOIN "DT_node_data_9" ON "DT_node_lookup_9".node_id_2 = "DT_node_data_9".node_id), 
"GB_Tree_2_1" AS 
(SELECT "DT_Output_9"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_9"."Estimator" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_9"), 
"GB_Sum_B0" AS 
(SELECT "GB_Sum_esu_0"."KEY" AS "KEY", "GB_Sum_esu_0"."Score_0" AS "Score_0", "GB_Sum_esu_0"."Score_1" AS "Score_1", "GB_Sum_esu_0"."Score_2" AS "Score_2", "GB_Sum_esu_0"."Score_3" AS "Score_3" 
FROM (SELECT "GB_Tree_0_0"."KEY" AS "KEY", "GB_Tree_0_0"."Score_0" AS "Score_0", "GB_Tree_0_0"."Score_1" AS "Score_1", "GB_Tree_0_0"."Score_2" AS "Score_2", "GB_Tree_0_0"."Score_3" AS "Score_3" 
FROM "GB_Tree_0_0" UNION ALL SELECT "GB_Tree_0_1"."KEY" AS "KEY", "GB_Tree_0_1"."Score_0" AS "Score_0", "GB_Tree_0_1"."Score_1" AS "Score_1", "GB_Tree_0_1"."Score_2" AS "Score_2", "GB_Tree_0_1"."Score_3" AS "Score_3" 
FROM "GB_Tree_0_1" UNION ALL SELECT "GB_Tree_0_2"."KEY" AS "KEY", "GB_Tree_0_2"."Score_0" AS "Score_0", "GB_Tree_0_2"."Score_1" AS "Score_1", "GB_Tree_0_2"."Score_2" AS "Score_2", "GB_Tree_0_2"."Score_3" AS "Score_3" 
FROM "GB_Tree_0_2" UNION ALL SELECT "GB_Tree_0_3"."KEY" AS "KEY", "GB_Tree_0_3"."Score_0" AS "Score_0", "GB_Tree_0_3"."Score_1" AS "Score_1", "GB_Tree_0_3"."Score_2" AS "Score_2", "GB_Tree_0_3"."Score_3" AS "Score_3" 
FROM "GB_Tree_0_3" UNION ALL SELECT "GB_Tree_1_0"."KEY" AS "KEY", "GB_Tree_1_0"."Score_0" AS "Score_0", "GB_Tree_1_0"."Score_1" AS "Score_1", "GB_Tree_1_0"."Score_2" AS "Score_2", "GB_Tree_1_0"."Score_3" AS "Score_3" 
FROM "GB_Tree_1_0" UNION ALL SELECT "GB_Tree_1_1"."KEY" AS "KEY", "GB_Tree_1_1"."Score_0" AS "Score_0", "GB_Tree_1_1"."Score_1" AS "Score_1", "GB_Tree_1_1"."Score_2" AS "Score_2", "GB_Tree_1_1"."Score_3" AS "Score_3" 
FROM "GB_Tree_1_1" UNION ALL SELECT "GB_Tree_1_2"."KEY" AS "KEY", "GB_Tree_1_2"."Score_0" AS "Score_0", "GB_Tree_1_2"."Score_1" AS "Score_1", "GB_Tree_1_2"."Score_2" AS "Score_2", "GB_Tree_1_2"."Score_3" AS "Score_3" 
FROM "GB_Tree_1_2" UNION ALL SELECT "GB_Tree_1_3"."KEY" AS "KEY", "GB_Tree_1_3"."Score_0" AS "Score_0", "GB_Tree_1_3"."Score_1" AS "Score_1", "GB_Tree_1_3"."Score_2" AS "Score_2", "GB_Tree_1_3"."Score_3" AS "Score_3" 
FROM "GB_Tree_1_3" UNION ALL SELECT "GB_Tree_2_0"."KEY" AS "KEY", "GB_Tree_2_0"."Score_0" AS "Score_0", "GB_Tree_2_0"."Score_1" AS "Score_1", "GB_Tree_2_0"."Score_2" AS "Score_2", "GB_Tree_2_0"."Score_3" AS "Score_3" 
FROM "GB_Tree_2_0" UNION ALL SELECT "GB_Tree_2_1"."KEY" AS "KEY", "GB_Tree_2_1"."Score_0" AS "Score_0", "GB_Tree_2_1"."Score_1" AS "Score_1", "GB_Tree_2_1"."Score_2" AS "Score_2", "GB_Tree_2_1"."Score_3" AS "Score_3" 
FROM "GB_Tree_2_1") AS "GB_Sum_esu_0"), 
"DT_node_lookup_10" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_239 <= 2.159379482269287) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_270 <= 1.0960155725479126) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_154 <= 0.23825715482234955) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_263 <= 1.0037139654159546) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_218 <= 1.249866247177124) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_219 <= 1.5433238744735718) THEN 10 ELSE 11 END ELSE 12 END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_10" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 398 AS count, 3 AS depth, 2 AS parent_id, -0.3719651250133251 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 275 AS count, 3 AS depth, 2 AS parent_id, 0.2076094117372215 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 101 AS count, 3 AS depth, 5 AS parent_id, 0.31312961262053807 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 17 AS count, 3 AS depth, 5 AS parent_id, 2.2730937114835927 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 7 AS count, 3 AS depth, 9 AS parent_id, 2.974507916934354 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 1 AS count, 3 AS depth, 9 AS parent_id, 2.098779904983615 AS "Estimator" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 1 AS count, 2 AS depth, 8 AS parent_id, -0.9937401610169184 AS "Estimator") AS "Values"), 
"DT_Output_10" AS 
(SELECT "DT_node_lookup_10"."KEY" AS "KEY", "DT_node_lookup_10".node_id_2 AS node_id_2, "DT_node_data_10".node_id AS node_id, "DT_node_data_10".feature AS feature, "DT_node_data_10".threshold AS threshold, "DT_node_data_10".count AS count, "DT_node_data_10".depth AS depth, "DT_node_data_10".parent_id AS parent_id, "DT_node_data_10"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_10" LEFT OUTER JOIN "DT_node_data_10" ON "DT_node_lookup_10".node_id_2 = "DT_node_data_10".node_id), 
"GB_Tree_2_2" AS 
(SELECT "DT_Output_10"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_10"."Estimator" AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_10"), 
"DT_node_lookup_11" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_144 <= -0.24502308666706085) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_333 <= -1.5140669345855713) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_353 <= -0.12187075614929199) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_20 <= 2.4585771560668945) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_369 <= 0.2949606776237488) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_254 <= 0.5163835287094116) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_195 <= 1.6672711372375488) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_11" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 10 AS count, 3 AS depth, 2 AS parent_id, -0.5390443915173863 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 9 AS count, 3 AS depth, 2 AS parent_id, 2.941825549223854 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 294 AS count, 3 AS depth, 5 AS parent_id, -0.49363263218467035 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 4 AS count, 3 AS depth, 5 AS parent_id, 2.6087609544101764 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 209 AS count, 3 AS depth, 9 AS parent_id, 0.8917358835680474 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 80 AS count, 3 AS depth, 9 AS parent_id, -0.2442773871367035 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 183 AS count, 3 AS depth, 12 AS parent_id, -0.3848867653929735 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 11 AS count, 3 AS depth, 12 AS parent_id, 1.7839127918299786 AS "Estimator") AS "Values"), 
"DT_Output_11" AS 
(SELECT "DT_node_lookup_11"."KEY" AS "KEY", "DT_node_lookup_11".node_id_2 AS node_id_2, "DT_node_data_11".node_id AS node_id, "DT_node_data_11".feature AS feature, "DT_node_data_11".threshold AS threshold, "DT_node_data_11".count AS count, "DT_node_data_11".depth AS depth, "DT_node_data_11".parent_id AS parent_id, "DT_node_data_11"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_11" LEFT OUTER JOIN "DT_node_data_11" ON "DT_node_lookup_11".node_id_2 = "DT_node_data_11".node_id), 
"GB_Tree_2_3" AS 
(SELECT "DT_Output_11"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_11"."Estimator" AS "Score_3" 
FROM "DT_Output_11"), 
"DT_node_lookup_12" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_340 <= -0.31521958112716675) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_251 <= -0.3824475407600403) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_284 <= 0.9266481399536133) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_67 <= -0.13004399836063385) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_102 <= -1.5063667297363281) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_313 <= -0.029921140521764755) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_290 <= 1.4958648681640625) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_12" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 98 AS count, 3 AS depth, 2 AS parent_id, -0.5673050763068317 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 21 AS count, 3 AS depth, 2 AS parent_id, 0.8526407389846824 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 80 AS count, 3 AS depth, 5 AS parent_id, 0.10000407412841066 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 105 AS count, 3 AS depth, 5 AS parent_id, 1.1913185722432984 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 19 AS count, 3 AS depth, 9 AS parent_id, -0.012874134675321978 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 11 AS count, 3 AS depth, 9 AS parent_id, 2.082563218457756 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 439 AS count, 3 AS depth, 12 AS parent_id, -0.40943769163207955 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 27 AS count, 3 AS depth, 12 AS parent_id, 0.9357865487758258 AS "Estimator") AS "Values"), 
"DT_Output_12" AS 
(SELECT "DT_node_lookup_12"."KEY" AS "KEY", "DT_node_lookup_12".node_id_2 AS node_id_2, "DT_node_data_12".node_id AS node_id, "DT_node_data_12".feature AS feature, "DT_node_data_12".threshold AS threshold, "DT_node_data_12".count AS count, "DT_node_data_12".depth AS depth, "DT_node_data_12".parent_id AS parent_id, "DT_node_data_12"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_12" LEFT OUTER JOIN "DT_node_data_12" ON "DT_node_lookup_12".node_id_2 = "DT_node_data_12".node_id), 
"GB_Tree_3_0" AS 
(SELECT "DT_Output_12"."KEY" AS "KEY", "DT_Output_12"."Estimator" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_12"), 
"DT_node_lookup_13" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_458 <= 0.2472490817308426) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_166 <= 1.7995538711547852) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_193 <= 1.965566635131836) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_82 <= -0.30831053853034973) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_210 <= 0.6159610748291016) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_181 <= -0.6593847274780273) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_133 <= -1.369229793548584) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_13" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 439 AS count, 3 AS depth, 2 AS parent_id, -0.3498093659760463 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 15 AS count, 3 AS depth, 2 AS parent_id, 1.3326014131489847 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 5 AS count, 3 AS depth, 5 AS parent_id, -0.9913966764866603 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 13 AS count, 3 AS depth, 5 AS parent_id, 2.214399753608894 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 62 AS count, 3 AS depth, 9 AS parent_id, 1.462482667257309 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 185 AS count, 3 AS depth, 9 AS parent_id, 0.2743798707342392 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 3 AS count, 3 AS depth, 12 AS parent_id, 2.7613202930084872 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 78 AS count, 3 AS depth, 12 AS parent_id, -0.6703516578476714 AS "Estimator") AS "Values"), 
"DT_Output_13" AS 
(SELECT "DT_node_lookup_13"."KEY" AS "KEY", "DT_node_lookup_13".node_id_2 AS node_id_2, "DT_node_data_13".node_id AS node_id, "DT_node_data_13".feature AS feature, "DT_node_data_13".threshold AS threshold, "DT_node_data_13".count AS count, "DT_node_data_13".depth AS depth, "DT_node_data_13".parent_id AS parent_id, "DT_node_data_13"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_13" LEFT OUTER JOIN "DT_node_data_13" ON "DT_node_lookup_13".node_id_2 = "DT_node_data_13".node_id), 
"GB_Tree_3_1" AS 
(SELECT "DT_Output_13"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_13"."Estimator" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_13"), 
"DT_node_lookup_14" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_448 <= 0.7620647549629211) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_270 <= 1.2079498767852783) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_404 <= 0.7677193284034729) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_254 <= -0.23488003015518188) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_118 <= -1.4514813423156738) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_461 <= -0.15563443303108215) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_351 <= 2.525163173675537) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_14" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 419 AS count, 3 AS depth, 2 AS parent_id, -0.12910965662371301 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 125 AS count, 3 AS depth, 2 AS parent_id, 0.629653348849828 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 28 AS count, 3 AS depth, 5 AS parent_id, -0.1682466928773064 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 38 AS count, 3 AS depth, 5 AS parent_id, 1.6836411439216235 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 10 AS count, 3 AS depth, 9 AS parent_id, -0.23243904767378737 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 7 AS count, 3 AS depth, 9 AS parent_id, 2.6469575493088486 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 171 AS count, 3 AS depth, 12 AS parent_id, -0.6615937956078313 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 2 AS count, 3 AS depth, 12 AS parent_id, 2.9449156184587366 AS "Estimator") AS "Values"), 
"DT_Output_14" AS 
(SELECT "DT_node_lookup_14"."KEY" AS "KEY", "DT_node_lookup_14".node_id_2 AS node_id_2, "DT_node_data_14".node_id AS node_id, "DT_node_data_14".feature AS feature, "DT_node_data_14".threshold AS threshold, "DT_node_data_14".count AS count, "DT_node_data_14".depth AS depth, "DT_node_data_14".parent_id AS parent_id, "DT_node_data_14"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_14" LEFT OUTER JOIN "DT_node_data_14" ON "DT_node_lookup_14".node_id_2 = "DT_node_data_14".node_id), 
"GB_Tree_3_2" AS 
(SELECT "DT_Output_14"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_14"."Estimator" AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_14"), 
"DT_node_lookup_15" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_144 <= 0.6174097061157227) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_345 <= 1.514601230621338) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_20 <= 0.5855041146278381) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_254 <= 0.37421783804893494) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= -0.41732680797576904) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_25 <= 0.11764752864837646) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_180 <= 0.3744177222251892) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_15" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 393 AS count, 3 AS depth, 2 AS parent_id, -0.46872623942849767 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 160 AS count, 3 AS depth, 2 AS parent_id, 0.2937899081165745 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 21 AS count, 3 AS depth, 5 AS parent_id, 2.0105423798083213 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 14 AS count, 3 AS depth, 5 AS parent_id, -0.4307829922288897 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 40 AS count, 3 AS depth, 9 AS parent_id, -0.89241528626728 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 28 AS count, 3 AS depth, 9 AS parent_id, 0.6117942689360271 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 102 AS count, 3 AS depth, 12 AS parent_id, 1.061354725157871 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 42 AS count, 3 AS depth, 12 AS parent_id, -0.08927344171004324 AS "Estimator") AS "Values"), 
"DT_Output_15" AS 
(SELECT "DT_node_lookup_15"."KEY" AS "KEY", "DT_node_lookup_15".node_id_2 AS node_id_2, "DT_node_data_15".node_id AS node_id, "DT_node_data_15".feature AS feature, "DT_node_data_15".threshold AS threshold, "DT_node_data_15".count AS count, "DT_node_data_15".depth AS depth, "DT_node_data_15".parent_id AS parent_id, "DT_node_data_15"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_15" LEFT OUTER JOIN "DT_node_data_15" ON "DT_node_lookup_15".node_id_2 = "DT_node_data_15".node_id), 
"GB_Tree_3_3" AS 
(SELECT "DT_Output_15"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_15"."Estimator" AS "Score_3" 
FROM "DT_Output_15"), 
"DT_node_lookup_16" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_268 <= 0.5873000621795654) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_121 <= 2.2630527019500732) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_150 <= -0.22126030921936035) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_234 <= 1.0534260272979736) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_108 <= -1.0468288660049438) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_260 <= 1.5365242958068848) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= 0.9154598712921143) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_16" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 240 AS count, 3 AS depth, 2 AS parent_id, -0.5811051940643215 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 331 AS count, 3 AS depth, 2 AS parent_id, 0.014915305300096536 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 4 AS count, 3 AS depth, 5 AS parent_id, 2.70747433906368 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 1 AS count, 3 AS depth, 5 AS parent_id, 2.1553418368463637 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 30 AS count, 3 AS depth, 9 AS parent_id, -0.998766271791717 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 2 AS count, 3 AS depth, 9 AS parent_id, 2.0298231112116882 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 154 AS count, 3 AS depth, 12 AS parent_id, 0.8007324891104085 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 38 AS count, 3 AS depth, 12 AS parent_id, -0.4799403124139597 AS "Estimator") AS "Values"), 
"DT_Output_16" AS 
(SELECT "DT_node_lookup_16"."KEY" AS "KEY", "DT_node_lookup_16".node_id_2 AS node_id_2, "DT_node_data_16".node_id AS node_id, "DT_node_data_16".feature AS feature, "DT_node_data_16".threshold AS threshold, "DT_node_data_16".count AS count, "DT_node_data_16".depth AS depth, "DT_node_data_16".parent_id AS parent_id, "DT_node_data_16"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_16" LEFT OUTER JOIN "DT_node_data_16" ON "DT_node_lookup_16".node_id_2 = "DT_node_data_16".node_id), 
"GB_Tree_4_0" AS 
(SELECT "DT_Output_16"."KEY" AS "KEY", "DT_Output_16"."Estimator" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_16"), 
"DT_node_lookup_17" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_497 <= -0.16394361853599548) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_171 <= 1.1422150135040283) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_369 <= 2.0946340560913086) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_269 <= 0.5535649657249451) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_261 <= 0.21232452988624573) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_172 <= -1.695997714996338) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_479 <= 0.315796822309494) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_17" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 302 AS count, 3 AS depth, 2 AS parent_id, -0.47175534815823994 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 3 AS count, 3 AS depth, 2 AS parent_id, 2.9037599505841722 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 34 AS count, 3 AS depth, 5 AS parent_id, -0.02843870872040117 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 9 AS count, 3 AS depth, 5 AS parent_id, 2.483832719098596 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 9 AS count, 3 AS depth, 9 AS parent_id, 2.1239706787443873 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 256 AS count, 3 AS depth, 9 AS parent_id, -0.1850976599967703 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 109 AS count, 3 AS depth, 12 AS parent_id, 1.0640825952442308 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 78 AS count, 3 AS depth, 12 AS parent_id, 0.09323537372514028 AS "Estimator") AS "Values"), 
"DT_Output_17" AS 
(SELECT "DT_node_lookup_17"."KEY" AS "KEY", "DT_node_lookup_17".node_id_2 AS node_id_2, "DT_node_data_17".node_id AS node_id, "DT_node_data_17".feature AS feature, "DT_node_data_17".threshold AS threshold, "DT_node_data_17".count AS count, "DT_node_data_17".depth AS depth, "DT_node_data_17".parent_id AS parent_id, "DT_node_data_17"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_17" LEFT OUTER JOIN "DT_node_data_17" ON "DT_node_lookup_17".node_id_2 = "DT_node_data_17".node_id), 
"GB_Tree_4_1" AS 
(SELECT "DT_Output_17"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_17"."Estimator" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_17"), 
"DT_node_lookup_18" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_195 <= 0.9113051891326904) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_379 <= 0.5113449692726135) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_131 <= 0.6041569709777832) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_34 <= -1.900458812713623) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_296 <= -0.9910030364990234) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_447 <= -0.1529616266489029) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_124 <= 1.844519853591919) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_18" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 327 AS count, 3 AS depth, 2 AS parent_id, 0.10283399863810558 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 113 AS count, 3 AS depth, 2 AS parent_id, 0.9421141299450322 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 7 AS count, 3 AS depth, 5 AS parent_id, 1.971072069841818 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 202 AS count, 3 AS depth, 5 AS parent_id, -0.38687456232734524 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 6 AS count, 3 AS depth, 9 AS parent_id, -0.956181944374039 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 9 AS count, 3 AS depth, 9 AS parent_id, 2.377251383051638 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 132 AS count, 3 AS depth, 12 AS parent_id, -0.8025036689179892 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 4 AS count, 3 AS depth, 12 AS parent_id, 1.9814791325283942 AS "Estimator") AS "Values"), 
"DT_Output_18" AS 
(SELECT "DT_node_lookup_18"."KEY" AS "KEY", "DT_node_lookup_18".node_id_2 AS node_id_2, "DT_node_data_18".node_id AS node_id, "DT_node_data_18".feature AS feature, "DT_node_data_18".threshold AS threshold, "DT_node_data_18".count AS count, "DT_node_data_18".depth AS depth, "DT_node_data_18".parent_id AS parent_id, "DT_node_data_18"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_18" LEFT OUTER JOIN "DT_node_data_18" ON "DT_node_lookup_18".node_id_2 = "DT_node_data_18".node_id), 
"GB_Tree_4_2" AS 
(SELECT "DT_Output_18"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_18"."Estimator" AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_18"), 
"DT_node_lookup_19" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_499 <= 0.718707799911499) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_345 <= 0.10326853394508362) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_20 <= 0.9110892415046692) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_181 <= -0.6519256830215454) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_251 <= 1.0501104593276978) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_406 <= -0.37747064232826233) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_396 <= 2.1410481929779053) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_19" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 280 AS count, 3 AS depth, 2 AS parent_id, -0.593921260362913 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 50 AS count, 3 AS depth, 2 AS parent_id, 0.42284996202781366 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 86 AS count, 3 AS depth, 5 AS parent_id, -0.5868596225506003 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 201 AS count, 3 AS depth, 5 AS parent_id, 0.4989929787585685 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 61 AS count, 3 AS depth, 9 AS parent_id, -0.45243275917549347 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 106 AS count, 3 AS depth, 9 AS parent_id, 0.7292216578489736 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 15 AS count, 3 AS depth, 12 AS parent_id, 2.3697655397763153 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 1 AS count, 3 AS depth, 12 AS parent_id, -0.9402992066233719 AS "Estimator") AS "Values"), 
"DT_Output_19" AS 
(SELECT "DT_node_lookup_19"."KEY" AS "KEY", "DT_node_lookup_19".node_id_2 AS node_id_2, "DT_node_data_19".node_id AS node_id, "DT_node_data_19".feature AS feature, "DT_node_data_19".threshold AS threshold, "DT_node_data_19".count AS count, "DT_node_data_19".depth AS depth, "DT_node_data_19".parent_id AS parent_id, "DT_node_data_19"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_19" LEFT OUTER JOIN "DT_node_data_19" ON "DT_node_lookup_19".node_id_2 = "DT_node_data_19".node_id), 
"GB_Tree_4_3" AS 
(SELECT "DT_Output_19"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_19"."Estimator" AS "Score_3" 
FROM "DT_Output_19"), 
"GB_Sum_B1" AS 
(SELECT "GB_Sum_esu_1"."KEY" AS "KEY", "GB_Sum_esu_1"."Score_0" AS "Score_0", "GB_Sum_esu_1"."Score_1" AS "Score_1", "GB_Sum_esu_1"."Score_2" AS "Score_2", "GB_Sum_esu_1"."Score_3" AS "Score_3" 
FROM (SELECT "GB_Tree_2_2"."KEY" AS "KEY", "GB_Tree_2_2"."Score_0" AS "Score_0", "GB_Tree_2_2"."Score_1" AS "Score_1", "GB_Tree_2_2"."Score_2" AS "Score_2", "GB_Tree_2_2"."Score_3" AS "Score_3" 
FROM "GB_Tree_2_2" UNION ALL SELECT "GB_Tree_2_3"."KEY" AS "KEY", "GB_Tree_2_3"."Score_0" AS "Score_0", "GB_Tree_2_3"."Score_1" AS "Score_1", "GB_Tree_2_3"."Score_2" AS "Score_2", "GB_Tree_2_3"."Score_3" AS "Score_3" 
FROM "GB_Tree_2_3" UNION ALL SELECT "GB_Tree_3_0"."KEY" AS "KEY", "GB_Tree_3_0"."Score_0" AS "Score_0", "GB_Tree_3_0"."Score_1" AS "Score_1", "GB_Tree_3_0"."Score_2" AS "Score_2", "GB_Tree_3_0"."Score_3" AS "Score_3" 
FROM "GB_Tree_3_0" UNION ALL SELECT "GB_Tree_3_1"."KEY" AS "KEY", "GB_Tree_3_1"."Score_0" AS "Score_0", "GB_Tree_3_1"."Score_1" AS "Score_1", "GB_Tree_3_1"."Score_2" AS "Score_2", "GB_Tree_3_1"."Score_3" AS "Score_3" 
FROM "GB_Tree_3_1" UNION ALL SELECT "GB_Tree_3_2"."KEY" AS "KEY", "GB_Tree_3_2"."Score_0" AS "Score_0", "GB_Tree_3_2"."Score_1" AS "Score_1", "GB_Tree_3_2"."Score_2" AS "Score_2", "GB_Tree_3_2"."Score_3" AS "Score_3" 
FROM "GB_Tree_3_2" UNION ALL SELECT "GB_Tree_3_3"."KEY" AS "KEY", "GB_Tree_3_3"."Score_0" AS "Score_0", "GB_Tree_3_3"."Score_1" AS "Score_1", "GB_Tree_3_3"."Score_2" AS "Score_2", "GB_Tree_3_3"."Score_3" AS "Score_3" 
FROM "GB_Tree_3_3" UNION ALL SELECT "GB_Tree_4_0"."KEY" AS "KEY", "GB_Tree_4_0"."Score_0" AS "Score_0", "GB_Tree_4_0"."Score_1" AS "Score_1", "GB_Tree_4_0"."Score_2" AS "Score_2", "GB_Tree_4_0"."Score_3" AS "Score_3" 
FROM "GB_Tree_4_0" UNION ALL SELECT "GB_Tree_4_1"."KEY" AS "KEY", "GB_Tree_4_1"."Score_0" AS "Score_0", "GB_Tree_4_1"."Score_1" AS "Score_1", "GB_Tree_4_1"."Score_2" AS "Score_2", "GB_Tree_4_1"."Score_3" AS "Score_3" 
FROM "GB_Tree_4_1" UNION ALL SELECT "GB_Tree_4_2"."KEY" AS "KEY", "GB_Tree_4_2"."Score_0" AS "Score_0", "GB_Tree_4_2"."Score_1" AS "Score_1", "GB_Tree_4_2"."Score_2" AS "Score_2", "GB_Tree_4_2"."Score_3" AS "Score_3" 
FROM "GB_Tree_4_2" UNION ALL SELECT "GB_Tree_4_3"."KEY" AS "KEY", "GB_Tree_4_3"."Score_0" AS "Score_0", "GB_Tree_4_3"."Score_1" AS "Score_1", "GB_Tree_4_3"."Score_2" AS "Score_2", "GB_Tree_4_3"."Score_3" AS "Score_3" 
FROM "GB_Tree_4_3") AS "GB_Sum_esu_1"), 
"DT_node_lookup_20" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_270 <= 1.2079498767852783) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_108 <= 0.520061194896698) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_410 <= -0.2705889046192169) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_77 <= -0.8301398754119873) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_237 <= -1.9211556911468506) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_153 <= -0.1687113642692566) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_328 <= 2.47650408744812) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_20" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 195 AS count, 3 AS depth, 2 AS parent_id, 0.28994313952322964 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 306 AS count, 3 AS depth, 2 AS parent_id, -0.4208227956519038 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 43 AS count, 3 AS depth, 5 AS parent_id, 1.6121944407517148 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 163 AS count, 3 AS depth, 5 AS parent_id, 0.29007404273518317 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 1 AS count, 3 AS depth, 9 AS parent_id, 2.1445590366027862 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 1 AS count, 3 AS depth, 9 AS parent_id, 2.7418514394641798 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 90 AS count, 3 AS depth, 12 AS parent_id, -0.9629764424127922 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 1 AS count, 3 AS depth, 12 AS parent_id, 2.0180097777464328 AS "Estimator") AS "Values"), 
"DT_Output_20" AS 
(SELECT "DT_node_lookup_20"."KEY" AS "KEY", "DT_node_lookup_20".node_id_2 AS node_id_2, "DT_node_data_20".node_id AS node_id, "DT_node_data_20".feature AS feature, "DT_node_data_20".threshold AS threshold, "DT_node_data_20".count AS count, "DT_node_data_20".depth AS depth, "DT_node_data_20".parent_id AS parent_id, "DT_node_data_20"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_20" LEFT OUTER JOIN "DT_node_data_20" ON "DT_node_lookup_20".node_id_2 = "DT_node_data_20".node_id), 
"GB_Tree_5_0" AS 
(SELECT "DT_Output_20"."KEY" AS "KEY", "DT_Output_20"."Estimator" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_20"), 
"DT_node_lookup_21" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_131 <= -1.2643564939498901) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_414 <= -0.7785018682479858) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_336 <= -1.386957049369812) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_340 <= 1.2450792789459229) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_251 <= -0.5378987789154053) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_139 <= 0.6558362245559692) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_266 <= 0.8524131774902344) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_21" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 2 AS count, 3 AS depth, 2 AS parent_id, 2.506702935918765 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 18 AS count, 3 AS depth, 2 AS parent_id, -0.9645696323491588 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 49 AS count, 3 AS depth, 5 AS parent_id, 1.3881860133437842 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 8 AS count, 3 AS depth, 5 AS parent_id, -0.9949316123646059 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 157 AS count, 3 AS depth, 9 AS parent_id, 0.01516775197077207 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 55 AS count, 3 AS depth, 9 AS parent_id, 1.0714774595739867 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 423 AS count, 3 AS depth, 12 AS parent_id, -0.3908736439727492 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 88 AS count, 3 AS depth, 12 AS parent_id, 0.3901952230585735 AS "Estimator") AS "Values"), 
"DT_Output_21" AS 
(SELECT "DT_node_lookup_21"."KEY" AS "KEY", "DT_node_lookup_21".node_id_2 AS node_id_2, "DT_node_data_21".node_id AS node_id, "DT_node_data_21".feature AS feature, "DT_node_data_21".threshold AS threshold, "DT_node_data_21".count AS count, "DT_node_data_21".depth AS depth, "DT_node_data_21".parent_id AS parent_id, "DT_node_data_21"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_21" LEFT OUTER JOIN "DT_node_data_21" ON "DT_node_lookup_21".node_id_2 = "DT_node_data_21".node_id), 
"GB_Tree_5_1" AS 
(SELECT "DT_Output_21"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_21"."Estimator" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_21"), 
"DT_node_lookup_22" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_211 <= -0.523503303527832) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_154 <= -0.028235580772161484) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_71 <= -1.6814717054367065) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_185 <= 0.6737569570541382) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_340 <= 0.5775613784790039) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_239 <= 2.1800146102905273) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_379 <= -0.5186324119567871) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_22" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 5 AS count, 3 AS depth, 2 AS parent_id, 2.6313780406609584 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 117 AS count, 3 AS depth, 2 AS parent_id, -0.26817194034984576 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 90 AS count, 3 AS depth, 5 AS parent_id, 1.2693543105601293 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 30 AS count, 3 AS depth, 5 AS parent_id, -0.47482703775453505 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 393 AS count, 3 AS depth, 9 AS parent_id, -0.379792114333813 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 5 AS count, 3 AS depth, 9 AS parent_id, 2.223069465682552 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 43 AS count, 3 AS depth, 12 AS parent_id, 1.274629789080222 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 117 AS count, 3 AS depth, 12 AS parent_id, -0.08737605400077231 AS "Estimator") AS "Values"), 
"DT_Output_22" AS 
(SELECT "DT_node_lookup_22"."KEY" AS "KEY", "DT_node_lookup_22".node_id_2 AS node_id_2, "DT_node_data_22".node_id AS node_id, "DT_node_data_22".feature AS feature, "DT_node_data_22".threshold AS threshold, "DT_node_data_22".count AS count, "DT_node_data_22".depth AS depth, "DT_node_data_22".parent_id AS parent_id, "DT_node_data_22"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_22" LEFT OUTER JOIN "DT_node_data_22" ON "DT_node_lookup_22".node_id_2 = "DT_node_data_22".node_id), 
"GB_Tree_5_2" AS 
(SELECT "DT_Output_22"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_22"."Estimator" AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_22"), 
"DT_node_lookup_23" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_185 <= -1.7686922550201416) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_350 <= -0.07061339169740677) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_361 <= 0.018573082983493805) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_460 <= 0.3259409964084625) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_223 <= -1.9308183193206787) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_316 <= -0.2773244082927704) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_230 <= 0.3796166479587555) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_23" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 5 AS count, 3 AS depth, 2 AS parent_id, 2.0797759473218864 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 8 AS count, 3 AS depth, 2 AS parent_id, 2.737390705064973 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 11 AS count, 3 AS depth, 5 AS parent_id, -1.0139124920634457 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 5 AS count, 3 AS depth, 5 AS parent_id, 2.2351952532056187 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 6 AS count, 3 AS depth, 9 AS parent_id, -0.3471280723696288 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 14 AS count, 3 AS depth, 9 AS parent_id, 2.1278180420883235 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 492 AS count, 3 AS depth, 12 AS parent_id, -0.2744829350731533 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 259 AS count, 3 AS depth, 12 AS parent_id, 0.2728232238939687 AS "Estimator") AS "Values"), 
"DT_Output_23" AS 
(SELECT "DT_node_lookup_23"."KEY" AS "KEY", "DT_node_lookup_23".node_id_2 AS node_id_2, "DT_node_data_23".node_id AS node_id, "DT_node_data_23".feature AS feature, "DT_node_data_23".threshold AS threshold, "DT_node_data_23".count AS count, "DT_node_data_23".depth AS depth, "DT_node_data_23".parent_id AS parent_id, "DT_node_data_23"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_23" LEFT OUTER JOIN "DT_node_data_23" ON "DT_node_lookup_23".node_id_2 = "DT_node_data_23".node_id), 
"GB_Tree_5_3" AS 
(SELECT "DT_Output_23"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_23"."Estimator" AS "Score_3" 
FROM "DT_Output_23"), 
"DT_node_lookup_24" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_438 <= -0.7704780101776123) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_73 <= -0.5857434272766113) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_344 <= 0.26259317994117737) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_150 <= 1.4360582828521729) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_268 <= 0.5296037197113037) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_365 <= 2.663086175918579) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_421 <= 1.6717250347137451) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_24" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 28 AS count, 3 AS depth, 2 AS parent_id, 0.46432991242284094 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 31 AS count, 3 AS depth, 2 AS parent_id, 1.9066286624589655 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 115 AS count, 3 AS depth, 5 AS parent_id, -0.1580474905491047 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 6 AS count, 3 AS depth, 5 AS parent_id, 2.9206975128465658 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 434 AS count, 3 AS depth, 9 AS parent_id, -0.3860981533127071 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 3 AS count, 3 AS depth, 9 AS parent_id, 2.809014824813825 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 176 AS count, 3 AS depth, 12 AS parent_id, 0.13859781127566467 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 7 AS count, 3 AS depth, 12 AS parent_id, 2.2979318673467586 AS "Estimator") AS "Values"), 
"DT_Output_24" AS 
(SELECT "DT_node_lookup_24"."KEY" AS "KEY", "DT_node_lookup_24".node_id_2 AS node_id_2, "DT_node_data_24".node_id AS node_id, "DT_node_data_24".feature AS feature, "DT_node_data_24".threshold AS threshold, "DT_node_data_24".count AS count, "DT_node_data_24".depth AS depth, "DT_node_data_24".parent_id AS parent_id, "DT_node_data_24"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_24" LEFT OUTER JOIN "DT_node_data_24" ON "DT_node_lookup_24".node_id_2 = "DT_node_data_24".node_id), 
"GB_Tree_6_0" AS 
(SELECT "DT_Output_24"."KEY" AS "KEY", "DT_Output_24"."Estimator" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_24"), 
"DT_node_lookup_25" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_137 <= -0.3285512924194336) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_481 <= -2.173942804336548) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_301 <= 1.2191929817199707) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_268 <= 2.38240909576416) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_210 <= 0.6157689094543457) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_310 <= 0.5936148166656494) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_172 <= -1.6796698570251465) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_25" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 3 AS count, 3 AS depth, 2 AS parent_id, 2.1792446756958834 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, 3.3053874797779446 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 274 AS count, 3 AS depth, 5 AS parent_id, -0.44174131915917236 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 6 AS count, 3 AS depth, 5 AS parent_id, 1.9605491837702156 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 265 AS count, 3 AS depth, 9 AS parent_id, 0.15010704521821988 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 107 AS count, 3 AS depth, 9 AS parent_id, 0.9281404031970434 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 4 AS count, 3 AS depth, 12 AS parent_id, 2.3548731368079197 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 140 AS count, 3 AS depth, 12 AS parent_id, -0.48742783039912974 AS "Estimator") AS "Values"), 
"DT_Output_25" AS 
(SELECT "DT_node_lookup_25"."KEY" AS "KEY", "DT_node_lookup_25".node_id_2 AS node_id_2, "DT_node_data_25".node_id AS node_id, "DT_node_data_25".feature AS feature, "DT_node_data_25".threshold AS threshold, "DT_node_data_25".count AS count, "DT_node_data_25".depth AS depth, "DT_node_data_25".parent_id AS parent_id, "DT_node_data_25"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_25" LEFT OUTER JOIN "DT_node_data_25" ON "DT_node_lookup_25".node_id_2 = "DT_node_data_25".node_id), 
"GB_Tree_6_1" AS 
(SELECT "DT_Output_25"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_25"."Estimator" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_25"), 
"DT_node_lookup_26" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_448 <= 0.7620647549629211) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_326 <= -1.0265092849731445) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_241 <= -0.7769681215286255) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_231 <= -1.4527636766433716) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_118 <= -1.4514813423156738) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_119 <= 0.5150617361068726) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_73 <= 2.364898681640625) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_26" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 24 AS count, 3 AS depth, 2 AS parent_id, 1.7704713625245958 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 71 AS count, 3 AS depth, 2 AS parent_id, 0.33021377628552717 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 32 AS count, 3 AS depth, 5 AS parent_id, 1.2413125729676349 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 483 AS count, 3 AS depth, 5 AS parent_id, -0.0681482376698204 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 11 AS count, 3 AS depth, 9 AS parent_id, 1.6954755404236908 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 6 AS count, 3 AS depth, 9 AS parent_id, -0.9949035624691144 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 171 AS count, 3 AS depth, 12 AS parent_id, -0.6193806135612562 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 2 AS count, 3 AS depth, 12 AS parent_id, 2.597416858679098 AS "Estimator") AS "Values"), 
"DT_Output_26" AS 
(SELECT "DT_node_lookup_26"."KEY" AS "KEY", "DT_node_lookup_26".node_id_2 AS node_id_2, "DT_node_data_26".node_id AS node_id, "DT_node_data_26".feature AS feature, "DT_node_data_26".threshold AS threshold, "DT_node_data_26".count AS count, "DT_node_data_26".depth AS depth, "DT_node_data_26".parent_id AS parent_id, "DT_node_data_26"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_26" LEFT OUTER JOIN "DT_node_data_26" ON "DT_node_lookup_26".node_id_2 = "DT_node_data_26".node_id), 
"GB_Tree_6_2" AS 
(SELECT "DT_Output_26"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_26"."Estimator" AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_26"), 
"DT_node_lookup_27" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_144 <= 0.6174097061157227) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_497 <= 1.6264269351959229) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_340 <= 0.6547911167144775) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_141 <= 0.16461946070194244) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_191 <= -1.154178261756897) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_499 <= -0.32109490036964417) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_369 <= 0.2673344314098358) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_27" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 415 AS count, 3 AS depth, 2 AS parent_id, -0.37969617935225947 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 146 AS count, 3 AS depth, 2 AS parent_id, 0.24948860925825986 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 15 AS count, 3 AS depth, 5 AS parent_id, 0.1434692897770502 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 12 AS count, 3 AS depth, 5 AS parent_id, 1.9394658867447858 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 15 AS count, 3 AS depth, 9 AS parent_id, 0.3516408545281031 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 17 AS count, 3 AS depth, 9 AS parent_id, 2.1555166482164716 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 97 AS count, 3 AS depth, 12 AS parent_id, 0.6061628902015278 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 83 AS count, 3 AS depth, 12 AS parent_id, -0.33022257834937807 AS "Estimator") AS "Values"), 
"DT_Output_27" AS 
(SELECT "DT_node_lookup_27"."KEY" AS "KEY", "DT_node_lookup_27".node_id_2 AS node_id_2, "DT_node_data_27".node_id AS node_id, "DT_node_data_27".feature AS feature, "DT_node_data_27".threshold AS threshold, "DT_node_data_27".count AS count, "DT_node_data_27".depth AS depth, "DT_node_data_27".parent_id AS parent_id, "DT_node_data_27"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_27" LEFT OUTER JOIN "DT_node_data_27" ON "DT_node_lookup_27".node_id_2 = "DT_node_data_27".node_id), 
"GB_Tree_6_3" AS 
(SELECT "DT_Output_27"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_27"."Estimator" AS "Score_3" 
FROM "DT_Output_27"), 
"DT_node_lookup_28" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_193 <= 0.0018866333412006497) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_251 <= -0.2825535535812378) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_91 <= -1.637842059135437) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_340 <= -0.2199167013168335) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_470 <= 2.1540403366088867) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_217 <= 1.5008853673934937) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_44 <= 1.912550449371338) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_28" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 7 AS count, 3 AS depth, 2 AS parent_id, 2.052010306531771 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 168 AS count, 3 AS depth, 2 AS parent_id, -0.31482044034708334 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 89 AS count, 3 AS depth, 5 AS parent_id, 1.05327245656682 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 137 AS count, 3 AS depth, 5 AS parent_id, 0.14709636761637154 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 365 AS count, 3 AS depth, 9 AS parent_id, -0.4038062922446151 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 29 AS count, 3 AS depth, 9 AS parent_id, 0.761803718816005 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 4 AS count, 3 AS depth, 12 AS parent_id, 2.146245144924587 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 1 AS count, 3 AS depth, 12 AS parent_id, 1.6678237906599402 AS "Estimator") AS "Values"), 
"DT_Output_28" AS 
(SELECT "DT_node_lookup_28"."KEY" AS "KEY", "DT_node_lookup_28".node_id_2 AS node_id_2, "DT_node_data_28".node_id AS node_id, "DT_node_data_28".feature AS feature, "DT_node_data_28".threshold AS threshold, "DT_node_data_28".count AS count, "DT_node_data_28".depth AS depth, "DT_node_data_28".parent_id AS parent_id, "DT_node_data_28"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_28" LEFT OUTER JOIN "DT_node_data_28" ON "DT_node_lookup_28".node_id_2 = "DT_node_data_28".node_id), 
"GB_Tree_7_0" AS 
(SELECT "DT_Output_28"."KEY" AS "KEY", "DT_Output_28"."Estimator" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_28"), 
"DT_node_lookup_29" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_458 <= 0.19443973898887634) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_393 <= -1.5119222402572632) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_426 <= -0.01856163702905178) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_193 <= 1.965566635131836) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= -0.4059426188468933) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_210 <= -0.2655472755432129) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_185 <= 1.026379108428955) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_29" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 9 AS count, 3 AS depth, 2 AS parent_id, 2.4843095077082022 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 17 AS count, 3 AS depth, 2 AS parent_id, 0.03164046642921898 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 415 AS count, 3 AS depth, 5 AS parent_id, -0.35089952200618507 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 14 AS count, 3 AS depth, 5 AS parent_id, 1.225699172263784 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 49 AS count, 3 AS depth, 9 AS parent_id, 1.4515415183397333 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 72 AS count, 3 AS depth, 9 AS parent_id, 0.2379145051824885 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 194 AS count, 3 AS depth, 12 AS parent_id, -0.20330046415435668 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 30 AS count, 3 AS depth, 12 AS parent_id, 0.9955934340111675 AS "Estimator") AS "Values"), 
"DT_Output_29" AS 
(SELECT "DT_node_lookup_29"."KEY" AS "KEY", "DT_node_lookup_29".node_id_2 AS node_id_2, "DT_node_data_29".node_id AS node_id, "DT_node_data_29".feature AS feature, "DT_node_data_29".threshold AS threshold, "DT_node_data_29".count AS count, "DT_node_data_29".depth AS depth, "DT_node_data_29".parent_id AS parent_id, "DT_node_data_29"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_29" LEFT OUTER JOIN "DT_node_data_29" ON "DT_node_lookup_29".node_id_2 = "DT_node_data_29".node_id), 
"GB_Tree_7_1" AS 
(SELECT "DT_Output_29"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_29"."Estimator" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_29"), 
"GB_Sum_B2" AS 
(SELECT "GB_Sum_esu_2"."KEY" AS "KEY", "GB_Sum_esu_2"."Score_0" AS "Score_0", "GB_Sum_esu_2"."Score_1" AS "Score_1", "GB_Sum_esu_2"."Score_2" AS "Score_2", "GB_Sum_esu_2"."Score_3" AS "Score_3" 
FROM (SELECT "GB_Tree_5_0"."KEY" AS "KEY", "GB_Tree_5_0"."Score_0" AS "Score_0", "GB_Tree_5_0"."Score_1" AS "Score_1", "GB_Tree_5_0"."Score_2" AS "Score_2", "GB_Tree_5_0"."Score_3" AS "Score_3" 
FROM "GB_Tree_5_0" UNION ALL SELECT "GB_Tree_5_1"."KEY" AS "KEY", "GB_Tree_5_1"."Score_0" AS "Score_0", "GB_Tree_5_1"."Score_1" AS "Score_1", "GB_Tree_5_1"."Score_2" AS "Score_2", "GB_Tree_5_1"."Score_3" AS "Score_3" 
FROM "GB_Tree_5_1" UNION ALL SELECT "GB_Tree_5_2"."KEY" AS "KEY", "GB_Tree_5_2"."Score_0" AS "Score_0", "GB_Tree_5_2"."Score_1" AS "Score_1", "GB_Tree_5_2"."Score_2" AS "Score_2", "GB_Tree_5_2"."Score_3" AS "Score_3" 
FROM "GB_Tree_5_2" UNION ALL SELECT "GB_Tree_5_3"."KEY" AS "KEY", "GB_Tree_5_3"."Score_0" AS "Score_0", "GB_Tree_5_3"."Score_1" AS "Score_1", "GB_Tree_5_3"."Score_2" AS "Score_2", "GB_Tree_5_3"."Score_3" AS "Score_3" 
FROM "GB_Tree_5_3" UNION ALL SELECT "GB_Tree_6_0"."KEY" AS "KEY", "GB_Tree_6_0"."Score_0" AS "Score_0", "GB_Tree_6_0"."Score_1" AS "Score_1", "GB_Tree_6_0"."Score_2" AS "Score_2", "GB_Tree_6_0"."Score_3" AS "Score_3" 
FROM "GB_Tree_6_0" UNION ALL SELECT "GB_Tree_6_1"."KEY" AS "KEY", "GB_Tree_6_1"."Score_0" AS "Score_0", "GB_Tree_6_1"."Score_1" AS "Score_1", "GB_Tree_6_1"."Score_2" AS "Score_2", "GB_Tree_6_1"."Score_3" AS "Score_3" 
FROM "GB_Tree_6_1" UNION ALL SELECT "GB_Tree_6_2"."KEY" AS "KEY", "GB_Tree_6_2"."Score_0" AS "Score_0", "GB_Tree_6_2"."Score_1" AS "Score_1", "GB_Tree_6_2"."Score_2" AS "Score_2", "GB_Tree_6_2"."Score_3" AS "Score_3" 
FROM "GB_Tree_6_2" UNION ALL SELECT "GB_Tree_6_3"."KEY" AS "KEY", "GB_Tree_6_3"."Score_0" AS "Score_0", "GB_Tree_6_3"."Score_1" AS "Score_1", "GB_Tree_6_3"."Score_2" AS "Score_2", "GB_Tree_6_3"."Score_3" AS "Score_3" 
FROM "GB_Tree_6_3" UNION ALL SELECT "GB_Tree_7_0"."KEY" AS "KEY", "GB_Tree_7_0"."Score_0" AS "Score_0", "GB_Tree_7_0"."Score_1" AS "Score_1", "GB_Tree_7_0"."Score_2" AS "Score_2", "GB_Tree_7_0"."Score_3" AS "Score_3" 
FROM "GB_Tree_7_0" UNION ALL SELECT "GB_Tree_7_1"."KEY" AS "KEY", "GB_Tree_7_1"."Score_0" AS "Score_0", "GB_Tree_7_1"."Score_1" AS "Score_1", "GB_Tree_7_1"."Score_2" AS "Score_2", "GB_Tree_7_1"."Score_3" AS "Score_3" 
FROM "GB_Tree_7_1") AS "GB_Sum_esu_2"), 
"DT_node_lookup_30" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_195 <= 0.9113051891326904) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_73 <= -0.10597512871026993) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_397 <= 1.5286424160003662) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_459 <= 1.078211784362793) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_296 <= -0.9910030364990234) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_132 <= -0.5927009582519531) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_320 <= -2.4010813236236572) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_30" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 275 AS count, 3 AS depth, 2 AS parent_id, -0.2824175139799442 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 19 AS count, 3 AS depth, 2 AS parent_id, 1.2107377628060372 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 307 AS count, 3 AS depth, 5 AS parent_id, 0.18502010930570284 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 48 AS count, 3 AS depth, 5 AS parent_id, 1.2820163153295707 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 6 AS count, 3 AS depth, 9 AS parent_id, -0.9343048989897369 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 9 AS count, 3 AS depth, 9 AS parent_id, 1.891242098917943 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 2 AS count, 3 AS depth, 12 AS parent_id, 2.6480709384647207 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 134 AS count, 3 AS depth, 12 AS parent_id, -0.7455804862014517 AS "Estimator") AS "Values"), 
"DT_Output_30" AS 
(SELECT "DT_node_lookup_30"."KEY" AS "KEY", "DT_node_lookup_30".node_id_2 AS node_id_2, "DT_node_data_30".node_id AS node_id, "DT_node_data_30".feature AS feature, "DT_node_data_30".threshold AS threshold, "DT_node_data_30".count AS count, "DT_node_data_30".depth AS depth, "DT_node_data_30".parent_id AS parent_id, "DT_node_data_30"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_30" LEFT OUTER JOIN "DT_node_data_30" ON "DT_node_lookup_30".node_id_2 = "DT_node_data_30".node_id), 
"GB_Tree_7_2" AS 
(SELECT "DT_Output_30"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_30"."Estimator" AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_30"), 
"DT_node_lookup_31" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_499 <= 0.718707799911499) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_345 <= 0.13859033584594727) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_220 <= -2.455714464187622) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_181 <= -0.7141855955123901) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_251 <= 1.0501104593276978) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_458 <= 1.217517614364624) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_163 <= 1.3505953550338745) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_31" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 4 AS count, 3 AS depth, 2 AS parent_id, 2.265019724547127 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 334 AS count, 3 AS depth, 2 AS parent_id, -0.4300460453829809 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 78 AS count, 3 AS depth, 5 AS parent_id, -0.6102368853312891 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 201 AS count, 3 AS depth, 5 AS parent_id, 0.44169200863376573 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 154 AS count, 3 AS depth, 9 AS parent_id, 0.11768943691537553 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 13 AS count, 3 AS depth, 9 AS parent_id, 1.8614524064607068 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 15 AS count, 3 AS depth, 12 AS parent_id, 1.9564931006726527 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 1 AS count, 3 AS depth, 12 AS parent_id, -0.9200701816085292 AS "Estimator") AS "Values"), 
"DT_Output_31" AS 
(SELECT "DT_node_lookup_31"."KEY" AS "KEY", "DT_node_lookup_31".node_id_2 AS node_id_2, "DT_node_data_31".node_id AS node_id, "DT_node_data_31".feature AS feature, "DT_node_data_31".threshold AS threshold, "DT_node_data_31".count AS count, "DT_node_data_31".depth AS depth, "DT_node_data_31".parent_id AS parent_id, "DT_node_data_31"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_31" LEFT OUTER JOIN "DT_node_data_31" ON "DT_node_lookup_31".node_id_2 = "DT_node_data_31".node_id), 
"GB_Tree_7_3" AS 
(SELECT "DT_Output_31"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_31"."Estimator" AS "Score_3" 
FROM "DT_Output_31"), 
"DT_node_lookup_32" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_108 <= 0.520061194896698) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_220 <= 1.8425445556640625) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_26 <= 1.8963432312011719) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_486 <= -0.25810855627059937) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_77 <= -0.8301398754119873) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_224 <= -0.5760118365287781) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_372 <= 1.6042462587356567) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_32" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 525 AS count, 3 AS depth, 2 AS parent_id, -0.2838733170905054 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 14 AS count, 3 AS depth, 2 AS parent_id, 1.3748366608261584 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 6 AS count, 3 AS depth, 5 AS parent_id, -0.9445908098396906 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 10 AS count, 3 AS depth, 5 AS parent_id, 2.342176065279479 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 14 AS count, 3 AS depth, 9 AS parent_id, -0.4207498784575162 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 37 AS count, 3 AS depth, 9 AS parent_id, 1.6288724248586763 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 183 AS count, 3 AS depth, 12 AS parent_id, -0.01755473544538845 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 11 AS count, 3 AS depth, 12 AS parent_id, 1.8863778910890794 AS "Estimator") AS "Values"), 
"DT_Output_32" AS 
(SELECT "DT_node_lookup_32"."KEY" AS "KEY", "DT_node_lookup_32".node_id_2 AS node_id_2, "DT_node_data_32".node_id AS node_id, "DT_node_data_32".feature AS feature, "DT_node_data_32".threshold AS threshold, "DT_node_data_32".count AS count, "DT_node_data_32".depth AS depth, "DT_node_data_32".parent_id AS parent_id, "DT_node_data_32"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_32" LEFT OUTER JOIN "DT_node_data_32" ON "DT_node_lookup_32".node_id_2 = "DT_node_data_32".node_id), 
"GB_Tree_8_0" AS 
(SELECT "DT_Output_32"."KEY" AS "KEY", "DT_Output_32"."Estimator" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_32"), 
"DT_node_lookup_33" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_166 <= 1.7995538711547852) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_193 <= 2.1470632553100586) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_251 <= 0.2197045385837555) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_482 <= 0.27052709460258484) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_228 <= 0.45696312189102173) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_293 <= -0.624592661857605) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_62 <= 0.5648573637008667) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_33" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 452 AS count, 3 AS depth, 2 AS parent_id, 0.10816155061285394 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 303 AS count, 3 AS depth, 2 AS parent_id, -0.4091024878609747 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 11 AS count, 3 AS depth, 5 AS parent_id, 2.1238121220625215 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 6 AS count, 3 AS depth, 5 AS parent_id, -0.3514389747982247 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 2 AS count, 3 AS depth, 9 AS parent_id, -0.9386804229928173 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 14 AS count, 3 AS depth, 9 AS parent_id, 2.2327618905461115 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 9 AS count, 3 AS depth, 12 AS parent_id, -0.9598248135081467 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 3 AS count, 3 AS depth, 12 AS parent_id, 1.7111550072705213 AS "Estimator") AS "Values"), 
"DT_Output_33" AS 
(SELECT "DT_node_lookup_33"."KEY" AS "KEY", "DT_node_lookup_33".node_id_2 AS node_id_2, "DT_node_data_33".node_id AS node_id, "DT_node_data_33".feature AS feature, "DT_node_data_33".threshold AS threshold, "DT_node_data_33".count AS count, "DT_node_data_33".depth AS depth, "DT_node_data_33".parent_id AS parent_id, "DT_node_data_33"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_33" LEFT OUTER JOIN "DT_node_data_33" ON "DT_node_lookup_33".node_id_2 = "DT_node_data_33".node_id), 
"GB_Tree_8_1" AS 
(SELECT "DT_Output_33"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_33"."Estimator" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_33"), 
"DT_node_lookup_34" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_266 <= 2.426811695098877) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_379 <= -0.7338691353797913) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_480 <= -1.2384233474731445) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_211 <= -0.8667401075363159) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_472 <= -0.14757362008094788) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_316 <= -0.14190058410167694) THEN 10 ELSE 11 END ELSE 12 END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_34" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 22 AS count, 3 AS depth, 2 AS parent_id, 1.5579065050799192 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 157 AS count, 3 AS depth, 2 AS parent_id, 0.20647992385646144 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 117 AS count, 3 AS depth, 5 AS parent_id, 0.41846783637139473 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 499 AS count, 3 AS depth, 5 AS parent_id, -0.2741690094168799 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 1 AS count, 3 AS depth, 9 AS parent_id, 2.2295800622938082 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 3 AS count, 3 AS depth, 9 AS parent_id, 2.3989230308152814 AS "Estimator" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 1 AS count, 2 AS depth, 8 AS parent_id, 2.904682286834639 AS "Estimator") AS "Values"), 
"DT_Output_34" AS 
(SELECT "DT_node_lookup_34"."KEY" AS "KEY", "DT_node_lookup_34".node_id_2 AS node_id_2, "DT_node_data_34".node_id AS node_id, "DT_node_data_34".feature AS feature, "DT_node_data_34".threshold AS threshold, "DT_node_data_34".count AS count, "DT_node_data_34".depth AS depth, "DT_node_data_34".parent_id AS parent_id, "DT_node_data_34"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_34" LEFT OUTER JOIN "DT_node_data_34" ON "DT_node_lookup_34".node_id_2 = "DT_node_data_34".node_id), 
"GB_Tree_8_2" AS 
(SELECT "DT_Output_34"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_34"."Estimator" AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_34"), 
"DT_node_lookup_35" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_144 <= -0.33998215198516846) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_203 <= -1.1171703338623047) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_210 <= 0.5160936117172241) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_20 <= 2.0368118286132812) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_485 <= 0.31630954146385193) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_499 <= 0.7085539102554321) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_254 <= -1.0030786991119385) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_35" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 21 AS count, 3 AS depth, 2 AS parent_id, 1.3758149560873623 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 11 AS count, 3 AS depth, 2 AS parent_id, -0.9692711876960081 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 245 AS count, 3 AS depth, 5 AS parent_id, -0.537923499805993 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 8 AS count, 3 AS depth, 5 AS parent_id, 1.353416865386605 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 237 AS count, 3 AS depth, 9 AS parent_id, -0.3075620145047762 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 82 AS count, 3 AS depth, 9 AS parent_id, 0.5366188049359019 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 41 AS count, 3 AS depth, 12 AS parent_id, 1.5745249102311132 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 155 AS count, 3 AS depth, 12 AS parent_id, 0.2879125685695459 AS "Estimator") AS "Values"), 
"DT_Output_35" AS 
(SELECT "DT_node_lookup_35"."KEY" AS "KEY", "DT_node_lookup_35".node_id_2 AS node_id_2, "DT_node_data_35".node_id AS node_id, "DT_node_data_35".feature AS feature, "DT_node_data_35".threshold AS threshold, "DT_node_data_35".count AS count, "DT_node_data_35".depth AS depth, "DT_node_data_35".parent_id AS parent_id, "DT_node_data_35"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_35" LEFT OUTER JOIN "DT_node_data_35" ON "DT_node_lookup_35".node_id_2 = "DT_node_data_35".node_id), 
"GB_Tree_8_3" AS 
(SELECT "DT_Output_35"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_35"."Estimator" AS "Score_3" 
FROM "DT_Output_35"), 
"DT_node_lookup_36" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_438 <= -0.7704780101776123) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_73 <= -0.5857434272766113) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_249 <= -1.06485915184021) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_150 <= 1.4360582828521729) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_268 <= 0.5296037197113037) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_235 <= 2.1394333839416504) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_340 <= 0.5751076340675354) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_36" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 13 AS count, 3 AS depth, 2 AS parent_id, -0.20910639413407808 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 46 AS count, 3 AS depth, 2 AS parent_id, 1.354640772039005 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 115 AS count, 3 AS depth, 5 AS parent_id, -0.14030397860130098 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 6 AS count, 3 AS depth, 5 AS parent_id, 2.2842939775072546 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 430 AS count, 3 AS depth, 9 AS parent_id, -0.3694441785970416 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 7 AS count, 3 AS depth, 9 AS parent_id, 1.5924820266408652 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 136 AS count, 3 AS depth, 12 AS parent_id, 0.4464346914923423 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 47 AS count, 3 AS depth, 12 AS parent_id, -0.5791010438899068 AS "Estimator") AS "Values"), 
"DT_Output_36" AS 
(SELECT "DT_node_lookup_36"."KEY" AS "KEY", "DT_node_lookup_36".node_id_2 AS node_id_2, "DT_node_data_36".node_id AS node_id, "DT_node_data_36".feature AS feature, "DT_node_data_36".threshold AS threshold, "DT_node_data_36".count AS count, "DT_node_data_36".depth AS depth, "DT_node_data_36".parent_id AS parent_id, "DT_node_data_36"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_36" LEFT OUTER JOIN "DT_node_data_36" ON "DT_node_lookup_36".node_id_2 = "DT_node_data_36".node_id), 
"GB_Tree_9_0" AS 
(SELECT "DT_Output_36"."KEY" AS "KEY", "DT_Output_36"."Estimator" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_36"), 
"DT_node_lookup_37" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_497 <= -0.16394361853599548) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_398 <= -1.9615097045898438) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_429 <= -0.6175169348716736) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_303 <= 2.258382797241211) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_261 <= 0.21232452988624573) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_172 <= -1.695997714996338) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_210 <= -1.1107056140899658) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_37" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 6 AS count, 3 AS depth, 2 AS parent_id, 2.427852864561591 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 3 AS count, 3 AS depth, 2 AS parent_id, -0.9642762756505598 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 336 AS count, 3 AS depth, 5 AS parent_id, -0.3679948966458895 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 3 AS count, 3 AS depth, 5 AS parent_id, 2.5479745149130646 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 9 AS count, 3 AS depth, 9 AS parent_id, 1.73977764168028 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 256 AS count, 3 AS depth, 9 AS parent_id, -0.15939835389252505 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 23 AS count, 3 AS depth, 12 AS parent_id, 1.5799364748315963 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 164 AS count, 3 AS depth, 12 AS parent_id, 0.40491302409358293 AS "Estimator") AS "Values"), 
"DT_Output_37" AS 
(SELECT "DT_node_lookup_37"."KEY" AS "KEY", "DT_node_lookup_37".node_id_2 AS node_id_2, "DT_node_data_37".node_id AS node_id, "DT_node_data_37".feature AS feature, "DT_node_data_37".threshold AS threshold, "DT_node_data_37".count AS count, "DT_node_data_37".depth AS depth, "DT_node_data_37".parent_id AS parent_id, "DT_node_data_37"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_37" LEFT OUTER JOIN "DT_node_data_37" ON "DT_node_lookup_37".node_id_2 = "DT_node_data_37".node_id), 
"GB_Tree_9_1" AS 
(SELECT "DT_Output_37"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_37"."Estimator" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_37"), 
"DT_node_lookup_38" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_198 <= 0.12254783511161804) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_270 <= 1.9544005393981934) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_140 <= -1.4089982509613037) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_446 <= 0.8611147403717041) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_247 <= -0.8208199739456177) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_352 <= -0.09752526879310608) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_74 <= -1.0765985250473022) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_38" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 34 AS count, 3 AS depth, 2 AS parent_id, 0.8085253801280619 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 397 AS count, 3 AS depth, 2 AS parent_id, -0.36121750436855854 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 13 AS count, 3 AS depth, 5 AS parent_id, 1.5809960761011366 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 2 AS count, 3 AS depth, 5 AS parent_id, -0.9923815989386229 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 37 AS count, 3 AS depth, 9 AS parent_id, 0.042642890943278944 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 46 AS count, 3 AS depth, 9 AS parent_id, 1.4099372261344794 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 34 AS count, 3 AS depth, 12 AS parent_id, 1.0977814317914611 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 237 AS count, 3 AS depth, 12 AS parent_id, -0.11067109254593221 AS "Estimator") AS "Values"), 
"DT_Output_38" AS 
(SELECT "DT_node_lookup_38"."KEY" AS "KEY", "DT_node_lookup_38".node_id_2 AS node_id_2, "DT_node_data_38".node_id AS node_id, "DT_node_data_38".feature AS feature, "DT_node_data_38".threshold AS threshold, "DT_node_data_38".count AS count, "DT_node_data_38".depth AS depth, "DT_node_data_38".parent_id AS parent_id, "DT_node_data_38"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_38" LEFT OUTER JOIN "DT_node_data_38" ON "DT_node_lookup_38".node_id_2 = "DT_node_data_38".node_id), 
"GB_Tree_9_2" AS 
(SELECT "DT_Output_38"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_38"."Estimator" AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_38"), 
"DT_node_lookup_39" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_340 <= -0.31521958112716675) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_406 <= 1.827628493309021) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_212 <= 1.1375174522399902) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_234 <= 1.2332396507263184) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_230 <= -0.15367206931114197) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_218 <= -1.7082154750823975) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_20 <= 0.4957358241081238) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_39" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 261 AS count, 3 AS depth, 2 AS parent_id, -0.5045027299817623 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 32 AS count, 3 AS depth, 2 AS parent_id, 0.625870366514833 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 8 AS count, 3 AS depth, 5 AS parent_id, 1.9572544601361632 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 3 AS count, 3 AS depth, 5 AS parent_id, -0.9563204637469866 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 7 AS count, 3 AS depth, 9 AS parent_id, 1.7426124776084075 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 206 AS count, 3 AS depth, 9 AS parent_id, -0.3473444795335962 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 188 AS count, 3 AS depth, 12 AS parent_id, 0.17851434597795796 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 95 AS count, 3 AS depth, 12 AS parent_id, 1.0297284857993059 AS "Estimator") AS "Values"), 
"DT_Output_39" AS 
(SELECT "DT_node_lookup_39"."KEY" AS "KEY", "DT_node_lookup_39".node_id_2 AS node_id_2, "DT_node_data_39".node_id AS node_id, "DT_node_data_39".feature AS feature, "DT_node_data_39".threshold AS threshold, "DT_node_data_39".count AS count, "DT_node_data_39".depth AS depth, "DT_node_data_39".parent_id AS parent_id, "DT_node_data_39"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_39" LEFT OUTER JOIN "DT_node_data_39" ON "DT_node_lookup_39".node_id_2 = "DT_node_data_39".node_id), 
"GB_Tree_9_3" AS 
(SELECT "DT_Output_39"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_39"."Estimator" AS "Score_3" 
FROM "DT_Output_39"), 
"GB_Sum_B3" AS 
(SELECT "GB_Sum_esu_3"."KEY" AS "KEY", "GB_Sum_esu_3"."Score_0" AS "Score_0", "GB_Sum_esu_3"."Score_1" AS "Score_1", "GB_Sum_esu_3"."Score_2" AS "Score_2", "GB_Sum_esu_3"."Score_3" AS "Score_3" 
FROM (SELECT "GB_Tree_7_2"."KEY" AS "KEY", "GB_Tree_7_2"."Score_0" AS "Score_0", "GB_Tree_7_2"."Score_1" AS "Score_1", "GB_Tree_7_2"."Score_2" AS "Score_2", "GB_Tree_7_2"."Score_3" AS "Score_3" 
FROM "GB_Tree_7_2" UNION ALL SELECT "GB_Tree_7_3"."KEY" AS "KEY", "GB_Tree_7_3"."Score_0" AS "Score_0", "GB_Tree_7_3"."Score_1" AS "Score_1", "GB_Tree_7_3"."Score_2" AS "Score_2", "GB_Tree_7_3"."Score_3" AS "Score_3" 
FROM "GB_Tree_7_3" UNION ALL SELECT "GB_Tree_8_0"."KEY" AS "KEY", "GB_Tree_8_0"."Score_0" AS "Score_0", "GB_Tree_8_0"."Score_1" AS "Score_1", "GB_Tree_8_0"."Score_2" AS "Score_2", "GB_Tree_8_0"."Score_3" AS "Score_3" 
FROM "GB_Tree_8_0" UNION ALL SELECT "GB_Tree_8_1"."KEY" AS "KEY", "GB_Tree_8_1"."Score_0" AS "Score_0", "GB_Tree_8_1"."Score_1" AS "Score_1", "GB_Tree_8_1"."Score_2" AS "Score_2", "GB_Tree_8_1"."Score_3" AS "Score_3" 
FROM "GB_Tree_8_1" UNION ALL SELECT "GB_Tree_8_2"."KEY" AS "KEY", "GB_Tree_8_2"."Score_0" AS "Score_0", "GB_Tree_8_2"."Score_1" AS "Score_1", "GB_Tree_8_2"."Score_2" AS "Score_2", "GB_Tree_8_2"."Score_3" AS "Score_3" 
FROM "GB_Tree_8_2" UNION ALL SELECT "GB_Tree_8_3"."KEY" AS "KEY", "GB_Tree_8_3"."Score_0" AS "Score_0", "GB_Tree_8_3"."Score_1" AS "Score_1", "GB_Tree_8_3"."Score_2" AS "Score_2", "GB_Tree_8_3"."Score_3" AS "Score_3" 
FROM "GB_Tree_8_3" UNION ALL SELECT "GB_Tree_9_0"."KEY" AS "KEY", "GB_Tree_9_0"."Score_0" AS "Score_0", "GB_Tree_9_0"."Score_1" AS "Score_1", "GB_Tree_9_0"."Score_2" AS "Score_2", "GB_Tree_9_0"."Score_3" AS "Score_3" 
FROM "GB_Tree_9_0" UNION ALL SELECT "GB_Tree_9_1"."KEY" AS "KEY", "GB_Tree_9_1"."Score_0" AS "Score_0", "GB_Tree_9_1"."Score_1" AS "Score_1", "GB_Tree_9_1"."Score_2" AS "Score_2", "GB_Tree_9_1"."Score_3" AS "Score_3" 
FROM "GB_Tree_9_1" UNION ALL SELECT "GB_Tree_9_2"."KEY" AS "KEY", "GB_Tree_9_2"."Score_0" AS "Score_0", "GB_Tree_9_2"."Score_1" AS "Score_1", "GB_Tree_9_2"."Score_2" AS "Score_2", "GB_Tree_9_2"."Score_3" AS "Score_3" 
FROM "GB_Tree_9_2" UNION ALL SELECT "GB_Tree_9_3"."KEY" AS "KEY", "GB_Tree_9_3"."Score_0" AS "Score_0", "GB_Tree_9_3"."Score_1" AS "Score_1", "GB_Tree_9_3"."Score_2" AS "Score_2", "GB_Tree_9_3"."Score_3" AS "Score_3" 
FROM "GB_Tree_9_3") AS "GB_Sum_esu_3"), 
"DT_node_lookup_40" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_193 <= 0.6189517974853516) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_469 <= 1.8409368991851807) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_150 <= 0.2125411033630371) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_127 <= 0.9283287525177002) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_27 <= 1.9360342025756836) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_398 <= -0.9148347973823547) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= 0.1585346758365631) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_40" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 350 AS count, 3 AS depth, 2 AS parent_id, -0.1612438767002566 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 233 AS count, 3 AS depth, 2 AS parent_id, 0.40944937969936557 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 12 AS count, 3 AS depth, 5 AS parent_id, 1.9505572047491193 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 2 AS count, 3 AS depth, 5 AS parent_id, -0.9664272891617817 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 38 AS count, 3 AS depth, 9 AS parent_id, 0.32570431473329703 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 161 AS count, 3 AS depth, 9 AS parent_id, -0.724474688849027 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 3 AS count, 3 AS depth, 12 AS parent_id, 1.7301164485838443 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 1 AS count, 3 AS depth, 12 AS parent_id, 2.3478587819416226 AS "Estimator") AS "Values"), 
"DT_Output_40" AS 
(SELECT "DT_node_lookup_40"."KEY" AS "KEY", "DT_node_lookup_40".node_id_2 AS node_id_2, "DT_node_data_40".node_id AS node_id, "DT_node_data_40".feature AS feature, "DT_node_data_40".threshold AS threshold, "DT_node_data_40".count AS count, "DT_node_data_40".depth AS depth, "DT_node_data_40".parent_id AS parent_id, "DT_node_data_40"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_40" LEFT OUTER JOIN "DT_node_data_40" ON "DT_node_lookup_40".node_id_2 = "DT_node_data_40".node_id), 
"GB_Tree_10_0" AS 
(SELECT "DT_Output_40"."KEY" AS "KEY", "DT_Output_40"."Estimator" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_40"), 
"DT_node_lookup_41" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_130 <= 0.6425000429153442) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_230 <= 0.82686448097229) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_166 <= 1.8359023332595825) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_40 <= -0.2648742198944092) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_266 <= 0.6747794151306152) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_282 <= -0.09860571473836899) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_396 <= 1.0516685247421265) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_41" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 474 AS count, 3 AS depth, 2 AS parent_id, -0.30880261148941984 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 13 AS count, 3 AS depth, 2 AS parent_id, 1.205581863591054 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 53 AS count, 3 AS depth, 5 AS parent_id, 0.9297819370428682 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 68 AS count, 3 AS depth, 5 AS parent_id, -0.1214578270147123 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 67 AS count, 3 AS depth, 9 AS parent_id, -0.6948167029562585 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 77 AS count, 3 AS depth, 9 AS parent_id, 0.5409428135720803 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 42 AS count, 3 AS depth, 12 AS parent_id, 1.5869274621141345 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 6 AS count, 3 AS depth, 12 AS parent_id, -1.0017125440928718 AS "Estimator") AS "Values"), 
"DT_Output_41" AS 
(SELECT "DT_node_lookup_41"."KEY" AS "KEY", "DT_node_lookup_41".node_id_2 AS node_id_2, "DT_node_data_41".node_id AS node_id, "DT_node_data_41".feature AS feature, "DT_node_data_41".threshold AS threshold, "DT_node_data_41".count AS count, "DT_node_data_41".depth AS depth, "DT_node_data_41".parent_id AS parent_id, "DT_node_data_41"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_41" LEFT OUTER JOIN "DT_node_data_41" ON "DT_node_lookup_41".node_id_2 = "DT_node_data_41".node_id), 
"GB_Tree_10_1" AS 
(SELECT "DT_Output_41"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_41"."Estimator" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_41"), 
"DT_node_lookup_42" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_239 <= 2.159379482269287) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_398 <= 0.40744325518608093) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_291 <= -0.42158645391464233) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_175 <= 0.7446266412734985) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_218 <= 1.249866247177124) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_416 <= -0.673032283782959) THEN 10 ELSE 11 END ELSE 12 END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_42" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 169 AS count, 3 AS depth, 2 AS parent_id, 0.2245873358284585 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 359 AS count, 3 AS depth, 2 AS parent_id, -0.376342261972581 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 212 AS count, 3 AS depth, 5 AS parent_id, 0.06200625298966812 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 51 AS count, 3 AS depth, 5 AS parent_id, 1.1356760902072924 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 4 AS count, 3 AS depth, 9 AS parent_id, 2.0223802348037183 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 4 AS count, 3 AS depth, 9 AS parent_id, 1.6152864806409968 AS "Estimator" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 1 AS count, 2 AS depth, 8 AS parent_id, -0.9547022071776303 AS "Estimator") AS "Values"), 
"DT_Output_42" AS 
(SELECT "DT_node_lookup_42"."KEY" AS "KEY", "DT_node_lookup_42".node_id_2 AS node_id_2, "DT_node_data_42".node_id AS node_id, "DT_node_data_42".feature AS feature, "DT_node_data_42".threshold AS threshold, "DT_node_data_42".count AS count, "DT_node_data_42".depth AS depth, "DT_node_data_42".parent_id AS parent_id, "DT_node_data_42"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_42" LEFT OUTER JOIN "DT_node_data_42" ON "DT_node_lookup_42".node_id_2 = "DT_node_data_42".node_id), 
"GB_Tree_10_2" AS 
(SELECT "DT_Output_42"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_42"."Estimator" AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_42"), 
"DT_node_lookup_43" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_185 <= -1.7686922550201416) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_350 <= -0.07061339169740677) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_262 <= -0.3510414958000183) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_460 <= 0.3259409964084625) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_223 <= -1.9308183193206787) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_254 <= 0.4624895453453064) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_155 <= 0.3337291479110718) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_43" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 4 AS count, 3 AS depth, 2 AS parent_id, 2.327110044020445 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 9 AS count, 3 AS depth, 2 AS parent_id, 1.757890604224074 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 11 AS count, 3 AS depth, 5 AS parent_id, -0.970155029870978 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 5 AS count, 3 AS depth, 5 AS parent_id, 1.6863845474841677 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 14 AS count, 3 AS depth, 9 AS parent_id, 1.694742042487735 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 6 AS count, 3 AS depth, 9 AS parent_id, -0.3438841345250979 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 482 AS count, 3 AS depth, 12 AS parent_id, 0.09584504321109603 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 269 AS count, 3 AS depth, 12 AS parent_id, -0.40531805456560455 AS "Estimator") AS "Values"), 
"DT_Output_43" AS 
(SELECT "DT_node_lookup_43"."KEY" AS "KEY", "DT_node_lookup_43".node_id_2 AS node_id_2, "DT_node_data_43".node_id AS node_id, "DT_node_data_43".feature AS feature, "DT_node_data_43".threshold AS threshold, "DT_node_data_43".count AS count, "DT_node_data_43".depth AS depth, "DT_node_data_43".parent_id AS parent_id, "DT_node_data_43"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_43" LEFT OUTER JOIN "DT_node_data_43" ON "DT_node_lookup_43".node_id_2 = "DT_node_data_43".node_id), 
"GB_Tree_10_3" AS 
(SELECT "DT_Output_43"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_43"."Estimator" AS "Score_3" 
FROM "DT_Output_43"), 
"DT_node_lookup_44" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_108 <= -0.9653949737548828) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_208 <= 1.9273817539215088) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_472 <= -1.6506187915802002) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_363 <= 0.5993331670761108) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_302 <= 0.9515689611434937) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_404 <= -1.072695016860962) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_212 <= 0.6903321743011475) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_44" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 5 AS count, 3 AS depth, 2 AS parent_id, 1.4726038853186774 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 132 AS count, 3 AS depth, 2 AS parent_id, -0.7784857487133433 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 4 AS count, 3 AS depth, 5 AS parent_id, 2.4847121923925646 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 1 AS count, 3 AS depth, 5 AS parent_id, -0.902887000539096 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 81 AS count, 3 AS depth, 9 AS parent_id, 0.6631658097393386 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 468 AS count, 3 AS depth, 9 AS parent_id, -0.16235082979212823 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 80 AS count, 3 AS depth, 12 AS parent_id, 1.0230920858233779 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 29 AS count, 3 AS depth, 12 AS parent_id, -0.5118335818387275 AS "Estimator") AS "Values"), 
"DT_Output_44" AS 
(SELECT "DT_node_lookup_44"."KEY" AS "KEY", "DT_node_lookup_44".node_id_2 AS node_id_2, "DT_node_data_44".node_id AS node_id, "DT_node_data_44".feature AS feature, "DT_node_data_44".threshold AS threshold, "DT_node_data_44".count AS count, "DT_node_data_44".depth AS depth, "DT_node_data_44".parent_id AS parent_id, "DT_node_data_44"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_44" LEFT OUTER JOIN "DT_node_data_44" ON "DT_node_lookup_44".node_id_2 = "DT_node_data_44".node_id), 
"GB_Tree_11_0" AS 
(SELECT "DT_Output_44"."KEY" AS "KEY", "DT_Output_44"."Estimator" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_44"), 
"DT_node_lookup_45" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_131 <= -1.4866068363189697) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_414 <= -0.7713663578033447) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_41 <= 1.4870176315307617) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_340 <= 1.2450792789459229) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_497 <= -0.16394361853599548) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_493 <= -1.5346927642822266) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_239 <= 1.1005825996398926) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_45" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 13 AS count, 3 AS depth, 2 AS parent_id, -0.9324917810201724 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, 1.9719070980587308 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 29 AS count, 3 AS depth, 5 AS parent_id, 1.4742419945325544 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 7 AS count, 3 AS depth, 5 AS parent_id, -0.950977632211342 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 20 AS count, 3 AS depth, 9 AS parent_id, 0.8440015662823818 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 306 AS count, 3 AS depth, 9 AS parent_id, -0.43672797127067065 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 370 AS count, 3 AS depth, 12 AS parent_id, 0.027509177708971513 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 54 AS count, 3 AS depth, 12 AS parent_id, 0.879066996055723 AS "Estimator") AS "Values"), 
"DT_Output_45" AS 
(SELECT "DT_node_lookup_45"."KEY" AS "KEY", "DT_node_lookup_45".node_id_2 AS node_id_2, "DT_node_data_45".node_id AS node_id, "DT_node_data_45".feature AS feature, "DT_node_data_45".threshold AS threshold, "DT_node_data_45".count AS count, "DT_node_data_45".depth AS depth, "DT_node_data_45".parent_id AS parent_id, "DT_node_data_45"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_45" LEFT OUTER JOIN "DT_node_data_45" ON "DT_node_lookup_45".node_id_2 = "DT_node_data_45".node_id), 
"GB_Tree_11_1" AS 
(SELECT "DT_Output_45"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_45"."Estimator" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_45"), 
"DT_node_lookup_46" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_419 <= 2.3651700019836426) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_458 <= -0.623427152633667) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_195 <= -1.3110674619674683) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_154 <= 1.6363621950149536) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_110 <= 0.13836652040481567) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_204 <= 0.42849868535995483) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_21 <= -0.4698694348335266) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_46" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 21 AS count, 3 AS depth, 2 AS parent_id, 1.4879596595912188 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 193 AS count, 3 AS depth, 2 AS parent_id, 0.19592069445905252 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 553 AS count, 3 AS depth, 5 AS parent_id, -0.21526643810310106 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 28 AS count, 3 AS depth, 5 AS parent_id, 0.9528338210749729 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 1 AS count, 3 AS depth, 9 AS parent_id, 2.283890074033841 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 1 AS count, 3 AS depth, 9 AS parent_id, 2.4467737705210246 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 1 AS count, 3 AS depth, 12 AS parent_id, 2.1271942629028957 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 2 AS count, 3 AS depth, 12 AS parent_id, 1.9963148821549925 AS "Estimator") AS "Values"), 
"DT_Output_46" AS 
(SELECT "DT_node_lookup_46"."KEY" AS "KEY", "DT_node_lookup_46".node_id_2 AS node_id_2, "DT_node_data_46".node_id AS node_id, "DT_node_data_46".feature AS feature, "DT_node_data_46".threshold AS threshold, "DT_node_data_46".count AS count, "DT_node_data_46".depth AS depth, "DT_node_data_46".parent_id AS parent_id, "DT_node_data_46"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_46" LEFT OUTER JOIN "DT_node_data_46" ON "DT_node_lookup_46".node_id_2 = "DT_node_data_46".node_id), 
"GB_Tree_11_2" AS 
(SELECT "DT_Output_46"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_46"."Estimator" AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_46"), 
"DT_node_lookup_47" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_310 <= 0.5911679267883301) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_181 <= -0.5880136489868164) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_337 <= -1.1402913331985474) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_345 <= 0.1387203186750412) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_280 <= -2.4934868812561035) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_210 <= 1.1306991577148438) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_300 <= -0.912649929523468) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_47" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 16 AS count, 3 AS depth, 2 AS parent_id, 1.0636751954680392 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 149 AS count, 3 AS depth, 2 AS parent_id, -0.5225664877950298 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 235 AS count, 3 AS depth, 5 AS parent_id, 0.013278949470032117 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 175 AS count, 3 AS depth, 5 AS parent_id, 0.684764905849547 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 2 AS count, 3 AS depth, 9 AS parent_id, 1.907850224917068 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 1 AS count, 3 AS depth, 9 AS parent_id, 2.865915435015968 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 41 AS count, 3 AS depth, 12 AS parent_id, 0.35762038562172455 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 181 AS count, 3 AS depth, 12 AS parent_id, -0.6092787353386878 AS "Estimator") AS "Values"), 
"DT_Output_47" AS 
(SELECT "DT_node_lookup_47"."KEY" AS "KEY", "DT_node_lookup_47".node_id_2 AS node_id_2, "DT_node_data_47".node_id AS node_id, "DT_node_data_47".feature AS feature, "DT_node_data_47".threshold AS threshold, "DT_node_data_47".count AS count, "DT_node_data_47".depth AS depth, "DT_node_data_47".parent_id AS parent_id, "DT_node_data_47"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_47" LEFT OUTER JOIN "DT_node_data_47" ON "DT_node_lookup_47".node_id_2 = "DT_node_data_47".node_id), 
"GB_Tree_11_3" AS 
(SELECT "DT_Output_47"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_47"."Estimator" AS "Score_3" 
FROM "DT_Output_47"), 
"DT_node_lookup_48" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_270 <= 1.2079498767852783) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_108 <= 0.520061194896698) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_410 <= -0.4878453016281128) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_406 <= -0.019197508692741394) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_237 <= -1.9211556911468506) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_197 <= -0.012987136840820312) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_57 <= 2.2483315467834473) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_48" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 157 AS count, 3 AS depth, 2 AS parent_id, 0.31577065462108506 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 344 AS count, 3 AS depth, 2 AS parent_id, -0.3195732342255641 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 100 AS count, 3 AS depth, 5 AS parent_id, 0.8579784988221152 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 106 AS count, 3 AS depth, 5 AS parent_id, -0.006848364791064526 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 1 AS count, 3 AS depth, 9 AS parent_id, 1.4634345256616175 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 1 AS count, 3 AS depth, 9 AS parent_id, 1.8604661727052503 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 90 AS count, 3 AS depth, 12 AS parent_id, -0.9201577394186392 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 1 AS count, 3 AS depth, 12 AS parent_id, 1.420903829641594 AS "Estimator") AS "Values"), 
"DT_Output_48" AS 
(SELECT "DT_node_lookup_48"."KEY" AS "KEY", "DT_node_lookup_48".node_id_2 AS node_id_2, "DT_node_data_48".node_id AS node_id, "DT_node_data_48".feature AS feature, "DT_node_data_48".threshold AS threshold, "DT_node_data_48".count AS count, "DT_node_data_48".depth AS depth, "DT_node_data_48".parent_id AS parent_id, "DT_node_data_48"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_48" LEFT OUTER JOIN "DT_node_data_48" ON "DT_node_lookup_48".node_id_2 = "DT_node_data_48".node_id), 
"GB_Tree_12_0" AS 
(SELECT "DT_Output_48"."KEY" AS "KEY", "DT_Output_48"."Estimator" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_48"), 
"DT_node_lookup_49" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_479 <= 0.03051883727312088) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_251 <= 0.19679415225982666) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_340 <= 1.2423065900802612) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_380 <= -1.3694384098052979) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_399 <= -1.0139319896697998) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_394 <= 0.07987480610609055) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_68 <= -2.1494812965393066) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_49" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 198 AS count, 3 AS depth, 2 AS parent_id, 0.5832814205746605 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 23 AS count, 3 AS depth, 2 AS parent_id, -0.8757274175451969 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 20 AS count, 3 AS depth, 5 AS parent_id, 1.0581257724684356 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 162 AS count, 3 AS depth, 5 AS parent_id, -0.3587232692864187 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 37 AS count, 3 AS depth, 9 AS parent_id, -0.023832015327824196 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 23 AS count, 3 AS depth, 9 AS parent_id, 1.401766268129141 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 4 AS count, 3 AS depth, 12 AS parent_id, 2.094330524480045 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 333 AS count, 3 AS depth, 12 AS parent_id, -0.431828318803898 AS "Estimator") AS "Values"), 
"DT_Output_49" AS 
(SELECT "DT_node_lookup_49"."KEY" AS "KEY", "DT_node_lookup_49".node_id_2 AS node_id_2, "DT_node_data_49".node_id AS node_id, "DT_node_data_49".feature AS feature, "DT_node_data_49".threshold AS threshold, "DT_node_data_49".count AS count, "DT_node_data_49".depth AS depth, "DT_node_data_49".parent_id AS parent_id, "DT_node_data_49"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_49" LEFT OUTER JOIN "DT_node_data_49" ON "DT_node_lookup_49".node_id_2 = "DT_node_data_49".node_id), 
"GB_Tree_12_1" AS 
(SELECT "DT_Output_49"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_49"."Estimator" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_49"), 
"GB_Sum_B4" AS 
(SELECT "GB_Sum_esu_4"."KEY" AS "KEY", "GB_Sum_esu_4"."Score_0" AS "Score_0", "GB_Sum_esu_4"."Score_1" AS "Score_1", "GB_Sum_esu_4"."Score_2" AS "Score_2", "GB_Sum_esu_4"."Score_3" AS "Score_3" 
FROM (SELECT "GB_Tree_10_0"."KEY" AS "KEY", "GB_Tree_10_0"."Score_0" AS "Score_0", "GB_Tree_10_0"."Score_1" AS "Score_1", "GB_Tree_10_0"."Score_2" AS "Score_2", "GB_Tree_10_0"."Score_3" AS "Score_3" 
FROM "GB_Tree_10_0" UNION ALL SELECT "GB_Tree_10_1"."KEY" AS "KEY", "GB_Tree_10_1"."Score_0" AS "Score_0", "GB_Tree_10_1"."Score_1" AS "Score_1", "GB_Tree_10_1"."Score_2" AS "Score_2", "GB_Tree_10_1"."Score_3" AS "Score_3" 
FROM "GB_Tree_10_1" UNION ALL SELECT "GB_Tree_10_2"."KEY" AS "KEY", "GB_Tree_10_2"."Score_0" AS "Score_0", "GB_Tree_10_2"."Score_1" AS "Score_1", "GB_Tree_10_2"."Score_2" AS "Score_2", "GB_Tree_10_2"."Score_3" AS "Score_3" 
FROM "GB_Tree_10_2" UNION ALL SELECT "GB_Tree_10_3"."KEY" AS "KEY", "GB_Tree_10_3"."Score_0" AS "Score_0", "GB_Tree_10_3"."Score_1" AS "Score_1", "GB_Tree_10_3"."Score_2" AS "Score_2", "GB_Tree_10_3"."Score_3" AS "Score_3" 
FROM "GB_Tree_10_3" UNION ALL SELECT "GB_Tree_11_0"."KEY" AS "KEY", "GB_Tree_11_0"."Score_0" AS "Score_0", "GB_Tree_11_0"."Score_1" AS "Score_1", "GB_Tree_11_0"."Score_2" AS "Score_2", "GB_Tree_11_0"."Score_3" AS "Score_3" 
FROM "GB_Tree_11_0" UNION ALL SELECT "GB_Tree_11_1"."KEY" AS "KEY", "GB_Tree_11_1"."Score_0" AS "Score_0", "GB_Tree_11_1"."Score_1" AS "Score_1", "GB_Tree_11_1"."Score_2" AS "Score_2", "GB_Tree_11_1"."Score_3" AS "Score_3" 
FROM "GB_Tree_11_1" UNION ALL SELECT "GB_Tree_11_2"."KEY" AS "KEY", "GB_Tree_11_2"."Score_0" AS "Score_0", "GB_Tree_11_2"."Score_1" AS "Score_1", "GB_Tree_11_2"."Score_2" AS "Score_2", "GB_Tree_11_2"."Score_3" AS "Score_3" 
FROM "GB_Tree_11_2" UNION ALL SELECT "GB_Tree_11_3"."KEY" AS "KEY", "GB_Tree_11_3"."Score_0" AS "Score_0", "GB_Tree_11_3"."Score_1" AS "Score_1", "GB_Tree_11_3"."Score_2" AS "Score_2", "GB_Tree_11_3"."Score_3" AS "Score_3" 
FROM "GB_Tree_11_3" UNION ALL SELECT "GB_Tree_12_0"."KEY" AS "KEY", "GB_Tree_12_0"."Score_0" AS "Score_0", "GB_Tree_12_0"."Score_1" AS "Score_1", "GB_Tree_12_0"."Score_2" AS "Score_2", "GB_Tree_12_0"."Score_3" AS "Score_3" 
FROM "GB_Tree_12_0" UNION ALL SELECT "GB_Tree_12_1"."KEY" AS "KEY", "GB_Tree_12_1"."Score_0" AS "Score_0", "GB_Tree_12_1"."Score_1" AS "Score_1", "GB_Tree_12_1"."Score_2" AS "Score_2", "GB_Tree_12_1"."Score_3" AS "Score_3" 
FROM "GB_Tree_12_1") AS "GB_Sum_esu_4"), 
"DT_node_lookup_50" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_499 <= -1.3958938121795654) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_201 <= 0.6779863834381104) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_300 <= 0.8383419513702393) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_77 <= 0.8491392731666565) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_112 <= 0.46977537870407104) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_154 <= 1.6632270812988281) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_198 <= 0.8389679193496704) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_50" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 36 AS count, 3 AS depth, 2 AS parent_id, -0.39752491814896496 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 9 AS count, 3 AS depth, 2 AS parent_id, 1.9806851584863623 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 16 AS count, 3 AS depth, 5 AS parent_id, 1.9938336616480152 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 5 AS count, 3 AS depth, 5 AS parent_id, -0.23392873904914588 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 468 AS count, 3 AS depth, 9 AS parent_id, -0.31015670535684986 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 25 AS count, 3 AS depth, 9 AS parent_id, 0.8152079435261482 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 186 AS count, 3 AS depth, 12 AS parent_id, 0.04795556930515267 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 55 AS count, 3 AS depth, 12 AS parent_id, 1.005141869046765 AS "Estimator") AS "Values"), 
"DT_Output_50" AS 
(SELECT "DT_node_lookup_50"."KEY" AS "KEY", "DT_node_lookup_50".node_id_2 AS node_id_2, "DT_node_data_50".node_id AS node_id, "DT_node_data_50".feature AS feature, "DT_node_data_50".threshold AS threshold, "DT_node_data_50".count AS count, "DT_node_data_50".depth AS depth, "DT_node_data_50".parent_id AS parent_id, "DT_node_data_50"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_50" LEFT OUTER JOIN "DT_node_data_50" ON "DT_node_lookup_50".node_id_2 = "DT_node_data_50".node_id), 
"GB_Tree_12_2" AS 
(SELECT "DT_Output_50"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_50"."Estimator" AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_50"), 
"DT_node_lookup_51" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_369 <= 0.29240864515304565) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_254 <= 0.5163835287094116) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_144 <= -0.2326400876045227) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_495 <= 0.98987877368927) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_285 <= -1.8989604711532593) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_257 <= 0.8414257764816284) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_262 <= -2.0600385665893555) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_51" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 153 AS count, 3 AS depth, 2 AS parent_id, -0.10098781294600072 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 208 AS count, 3 AS depth, 2 AS parent_id, 0.632986624430244 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 117 AS count, 3 AS depth, 5 AS parent_id, -0.5810072228011205 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 21 AS count, 3 AS depth, 5 AS parent_id, 0.796736777427271 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 8 AS count, 3 AS depth, 9 AS parent_id, 1.9452098402704308 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 2 AS count, 3 AS depth, 9 AS parent_id, -1.0125379771722787 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 5 AS count, 3 AS depth, 12 AS parent_id, 2.059126161317982 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 286 AS count, 3 AS depth, 12 AS parent_id, -0.4197469973396274 AS "Estimator") AS "Values"), 
"DT_Output_51" AS 
(SELECT "DT_node_lookup_51"."KEY" AS "KEY", "DT_node_lookup_51".node_id_2 AS node_id_2, "DT_node_data_51".node_id AS node_id, "DT_node_data_51".feature AS feature, "DT_node_data_51".threshold AS threshold, "DT_node_data_51".count AS count, "DT_node_data_51".depth AS depth, "DT_node_data_51".parent_id AS parent_id, "DT_node_data_51"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_51" LEFT OUTER JOIN "DT_node_data_51" ON "DT_node_lookup_51".node_id_2 = "DT_node_data_51".node_id), 
"GB_Tree_12_3" AS 
(SELECT "DT_Output_51"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_51"."Estimator" AS "Score_3" 
FROM "DT_Output_51"), 
"DT_node_lookup_52" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_340 <= -0.31521958112716675) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_270 <= 0.6541842222213745) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_371 <= 1.1317881345748901) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_178 <= 1.0873894691467285) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_164 <= 1.8872109651565552) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_230 <= -1.7521852254867554) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_99 <= -0.49733275175094604) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_52" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 188 AS count, 3 AS depth, 2 AS parent_id, 0.6234036442626544 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 31 AS count, 3 AS depth, 2 AS parent_id, -0.6582431334647423 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 76 AS count, 3 AS depth, 5 AS parent_id, -0.7203527012770732 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 9 AS count, 3 AS depth, 5 AS parent_id, 1.4576609602841286 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 23 AS count, 3 AS depth, 9 AS parent_id, 0.8854327142783877 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 462 AS count, 3 AS depth, 9 AS parent_id, -0.3015695176608813 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 4 AS count, 3 AS depth, 12 AS parent_id, -0.9339673791987502 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 7 AS count, 3 AS depth, 12 AS parent_id, 2.1876392070071202 AS "Estimator") AS "Values"), 
"DT_Output_52" AS 
(SELECT "DT_node_lookup_52"."KEY" AS "KEY", "DT_node_lookup_52".node_id_2 AS node_id_2, "DT_node_data_52".node_id AS node_id, "DT_node_data_52".feature AS feature, "DT_node_data_52".threshold AS threshold, "DT_node_data_52".count AS count, "DT_node_data_52".depth AS depth, "DT_node_data_52".parent_id AS parent_id, "DT_node_data_52"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_52" LEFT OUTER JOIN "DT_node_data_52" ON "DT_node_lookup_52".node_id_2 = "DT_node_data_52".node_id), 
"GB_Tree_13_0" AS 
(SELECT "DT_Output_52"."KEY" AS "KEY", "DT_Output_52"."Estimator" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_52"), 
"DT_node_lookup_53" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_458 <= 0.19443973898887634) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_299 <= -0.247183695435524) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_27 <= 1.3804908990859985) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_393 <= -1.508699655532837) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_281 <= 1.1051979064941406) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= -0.4059426188468933) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_176 <= 1.6049702167510986) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_53" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 181 AS count, 3 AS depth, 2 AS parent_id, -0.6576588837607501 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 11 AS count, 3 AS depth, 2 AS parent_id, 0.8226551148910405 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 15 AS count, 3 AS depth, 5 AS parent_id, 1.550012645173681 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 248 AS count, 3 AS depth, 5 AS parent_id, -0.04369725011957159 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 109 AS count, 3 AS depth, 9 AS parent_id, 0.7966995559062806 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 197 AS count, 3 AS depth, 9 AS parent_id, 0.07456703722950796 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 38 AS count, 3 AS depth, 12 AS parent_id, -0.9740598890545215 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 1 AS count, 3 AS depth, 12 AS parent_id, 1.9982735400555356 AS "Estimator") AS "Values"), 
"DT_Output_53" AS 
(SELECT "DT_node_lookup_53"."KEY" AS "KEY", "DT_node_lookup_53".node_id_2 AS node_id_2, "DT_node_data_53".node_id AS node_id, "DT_node_data_53".feature AS feature, "DT_node_data_53".threshold AS threshold, "DT_node_data_53".count AS count, "DT_node_data_53".depth AS depth, "DT_node_data_53".parent_id AS parent_id, "DT_node_data_53"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_53" LEFT OUTER JOIN "DT_node_data_53" ON "DT_node_lookup_53".node_id_2 = "DT_node_data_53".node_id), 
"GB_Tree_13_1" AS 
(SELECT "DT_Output_53"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_53"."Estimator" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_53"), 
"DT_node_lookup_54" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_22 <= -2.4975976943969727) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_165 <= -0.3852912485599518) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_300 <= 0.25315964221954346) THEN 3 ELSE 4 END ELSE 5 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_131 <= 1.2883172035217285) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_419 <= 2.3651700019836426) THEN 8 ELSE 9 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_379 <= -0.22261697053909302) THEN 11 ELSE 12 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_54" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 2 AS count, 3 AS depth, 2 AS parent_id, 1.9459056447889285 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 2 AS count, 3 AS depth, 2 AS parent_id, 1.6606318293170754 AS "Estimator" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 1 AS count, 2 AS depth, 1 AS parent_id, 3.065240326478839 AS "Estimator" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 703 AS count, 3 AS depth, 7 AS parent_id, -0.10475688458412478 AS "Estimator" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 5 AS count, 3 AS depth, 7 AS parent_id, 1.824419719728784 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 39 AS count, 3 AS depth, 10 AS parent_id, 1.2629673722246881 AS "Estimator" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 48 AS count, 3 AS depth, 10 AS parent_id, -0.20543487172020408 AS "Estimator") AS "Values"), 
"DT_Output_54" AS 
(SELECT "DT_node_lookup_54"."KEY" AS "KEY", "DT_node_lookup_54".node_id_2 AS node_id_2, "DT_node_data_54".node_id AS node_id, "DT_node_data_54".feature AS feature, "DT_node_data_54".threshold AS threshold, "DT_node_data_54".count AS count, "DT_node_data_54".depth AS depth, "DT_node_data_54".parent_id AS parent_id, "DT_node_data_54"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_54" LEFT OUTER JOIN "DT_node_data_54" ON "DT_node_lookup_54".node_id_2 = "DT_node_data_54".node_id), 
"GB_Tree_13_2" AS 
(SELECT "DT_Output_54"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_54"."Estimator" AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_54"), 
"DT_node_lookup_55" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_482 <= -1.1841319799423218) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_234 <= -1.748819351196289) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_465 <= -0.09551975131034851) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_470 <= -1.8178622722625732) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_144 <= 0.6024071574211121) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_345 <= 1.514601230621338) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_474 <= -1.3906619548797607) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_55" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, 2.3736265301783295 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, 2.3137974457288424 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 2 AS count, 3 AS depth, 5 AS parent_id, 2.2340632623186374 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 90 AS count, 3 AS depth, 5 AS parent_id, -0.7839936337079821 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 487 AS count, 3 AS depth, 9 AS parent_id, -0.150165972456711 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 32 AS count, 3 AS depth, 9 AS parent_id, 0.9284114046445261 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 20 AS count, 3 AS depth, 12 AS parent_id, 1.3743365627198925 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 167 AS count, 3 AS depth, 12 AS parent_id, 0.3100261392225714 AS "Estimator") AS "Values"), 
"DT_Output_55" AS 
(SELECT "DT_node_lookup_55"."KEY" AS "KEY", "DT_node_lookup_55".node_id_2 AS node_id_2, "DT_node_data_55".node_id AS node_id, "DT_node_data_55".feature AS feature, "DT_node_data_55".threshold AS threshold, "DT_node_data_55".count AS count, "DT_node_data_55".depth AS depth, "DT_node_data_55".parent_id AS parent_id, "DT_node_data_55"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_55" LEFT OUTER JOIN "DT_node_data_55" ON "DT_node_lookup_55".node_id_2 = "DT_node_data_55".node_id), 
"GB_Tree_13_3" AS 
(SELECT "DT_Output_55"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_55"."Estimator" AS "Score_3" 
FROM "DT_Output_55"), 
"DT_node_lookup_56" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_291 <= 0.5066300630569458) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_27 <= 0.6162781119346619) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_410 <= -0.2646417021751404) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_89 <= -1.1556494235992432) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_293 <= -1.4416733980178833) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_377 <= -0.6023952960968018) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_404 <= -1.1096012592315674) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_56" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 147 AS count, 3 AS depth, 2 AS parent_id, 0.030261055382676497 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 258 AS count, 3 AS depth, 2 AS parent_id, -0.6199545347638498 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 18 AS count, 3 AS depth, 5 AS parent_id, 1.4698723981469057 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 133 AS count, 3 AS depth, 5 AS parent_id, 0.15426388518209244 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 3 AS count, 3 AS depth, 9 AS parent_id, -0.9757094081325278 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 15 AS count, 3 AS depth, 9 AS parent_id, 1.8293361823784546 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 32 AS count, 3 AS depth, 12 AS parent_id, 1.0362074144297624 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 194 AS count, 3 AS depth, 12 AS parent_id, 0.014037132272987998 AS "Estimator") AS "Values"), 
"DT_Output_56" AS 
(SELECT "DT_node_lookup_56"."KEY" AS "KEY", "DT_node_lookup_56".node_id_2 AS node_id_2, "DT_node_data_56".node_id AS node_id, "DT_node_data_56".feature AS feature, "DT_node_data_56".threshold AS threshold, "DT_node_data_56".count AS count, "DT_node_data_56".depth AS depth, "DT_node_data_56".parent_id AS parent_id, "DT_node_data_56"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_56" LEFT OUTER JOIN "DT_node_data_56" ON "DT_node_lookup_56".node_id_2 = "DT_node_data_56".node_id), 
"GB_Tree_14_0" AS 
(SELECT "DT_Output_56"."KEY" AS "KEY", "DT_Output_56"."Estimator" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_56"), 
"DT_node_lookup_57" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_79 <= 1.3180930614471436) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_369 <= 2.1696488857269287) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_479 <= 0.03051883727312088) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_178 <= 0.5285813212394714) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_498 <= 0.027155548334121704) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_174 <= -0.71275794506073) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_56 <= 1.347655177116394) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_57" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 368 AS count, 3 AS depth, 2 AS parent_id, 0.12049460123208958 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 342 AS count, 3 AS depth, 2 AS parent_id, -0.36849011712435487 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 9 AS count, 3 AS depth, 5 AS parent_id, 1.9792675162216533 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 3 AS count, 3 AS depth, 5 AS parent_id, -1.0065111113833112 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 8 AS count, 3 AS depth, 9 AS parent_id, -0.045899859412456466 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 26 AS count, 3 AS depth, 9 AS parent_id, 1.710964457594688 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 40 AS count, 3 AS depth, 12 AS parent_id, -0.4068610889253283 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 4 AS count, 3 AS depth, 12 AS parent_id, 2.0182570935463273 AS "Estimator") AS "Values"), 
"DT_Output_57" AS 
(SELECT "DT_node_lookup_57"."KEY" AS "KEY", "DT_node_lookup_57".node_id_2 AS node_id_2, "DT_node_data_57".node_id AS node_id, "DT_node_data_57".feature AS feature, "DT_node_data_57".threshold AS threshold, "DT_node_data_57".count AS count, "DT_node_data_57".depth AS depth, "DT_node_data_57".parent_id AS parent_id, "DT_node_data_57"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_57" LEFT OUTER JOIN "DT_node_data_57" ON "DT_node_lookup_57".node_id_2 = "DT_node_data_57".node_id), 
"GB_Tree_14_1" AS 
(SELECT "DT_Output_57"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_57"."Estimator" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_57"), 
"DT_node_lookup_58" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_499 <= -0.5314620733261108) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_160 <= 1.4745938777923584) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_157 <= 0.9857029318809509) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_280 <= 0.944553017616272) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_414 <= 0.9834778308868408) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_291 <= -2.579464912414551) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_261 <= -0.30745822191238403) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_58" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 189 AS count, 3 AS depth, 2 AS parent_id, 0.020157204519504403 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 36 AS count, 3 AS depth, 2 AS parent_id, 1.023025794611927 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 12 AS count, 3 AS depth, 5 AS parent_id, 1.9199347739271915 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 3 AS count, 3 AS depth, 5 AS parent_id, -0.8909915392426456 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 4 AS count, 3 AS depth, 9 AS parent_id, 2.1266426461420767 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 467 AS count, 3 AS depth, 9 AS parent_id, -0.2708933087782102 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 30 AS count, 3 AS depth, 12 AS parent_id, 1.1902298818987584 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 59 AS count, 3 AS depth, 12 AS parent_id, -0.04872331349484224 AS "Estimator") AS "Values"), 
"DT_Output_58" AS 
(SELECT "DT_node_lookup_58"."KEY" AS "KEY", "DT_node_lookup_58".node_id_2 AS node_id_2, "DT_node_data_58".node_id AS node_id, "DT_node_data_58".feature AS feature, "DT_node_data_58".threshold AS threshold, "DT_node_data_58".count AS count, "DT_node_data_58".depth AS depth, "DT_node_data_58".parent_id AS parent_id, "DT_node_data_58"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_58" LEFT OUTER JOIN "DT_node_data_58" ON "DT_node_lookup_58".node_id_2 = "DT_node_data_58".node_id), 
"GB_Tree_14_2" AS 
(SELECT "DT_Output_58"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_58"."Estimator" AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_58"), 
"DT_node_lookup_59" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_310 <= 0.774765133857727) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_266 <= -0.18603336811065674) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_482 <= 0.4293387532234192) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_27 <= 0.2175283432006836) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_149 <= -1.3042665719985962) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_245 <= 0.17096519470214844) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_395 <= 1.7888894081115723) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_59" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 171 AS count, 3 AS depth, 2 AS parent_id, 0.12058359530624094 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 90 AS count, 3 AS depth, 2 AS parent_id, 0.9574347056604272 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 206 AS count, 3 AS depth, 5 AS parent_id, 0.21176748571847348 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 149 AS count, 3 AS depth, 5 AS parent_id, -0.6420396929288016 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 8 AS count, 3 AS depth, 9 AS parent_id, 1.7392039710147784 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 6 AS count, 3 AS depth, 9 AS parent_id, -0.9535336507926697 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 166 AS count, 3 AS depth, 12 AS parent_id, -0.599999182036002 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 4 AS count, 3 AS depth, 12 AS parent_id, 1.7031288996057736 AS "Estimator") AS "Values"), 
"DT_Output_59" AS 
(SELECT "DT_node_lookup_59"."KEY" AS "KEY", "DT_node_lookup_59".node_id_2 AS node_id_2, "DT_node_data_59".node_id AS node_id, "DT_node_data_59".feature AS feature, "DT_node_data_59".threshold AS threshold, "DT_node_data_59".count AS count, "DT_node_data_59".depth AS depth, "DT_node_data_59".parent_id AS parent_id, "DT_node_data_59"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_59" LEFT OUTER JOIN "DT_node_data_59" ON "DT_node_lookup_59".node_id_2 = "DT_node_data_59".node_id), 
"GB_Tree_14_3" AS 
(SELECT "DT_Output_59"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_59"."Estimator" AS "Score_3" 
FROM "DT_Output_59"), 
"GB_Sum_B5" AS 
(SELECT "GB_Sum_esu_5"."KEY" AS "KEY", "GB_Sum_esu_5"."Score_0" AS "Score_0", "GB_Sum_esu_5"."Score_1" AS "Score_1", "GB_Sum_esu_5"."Score_2" AS "Score_2", "GB_Sum_esu_5"."Score_3" AS "Score_3" 
FROM (SELECT "GB_Tree_12_2"."KEY" AS "KEY", "GB_Tree_12_2"."Score_0" AS "Score_0", "GB_Tree_12_2"."Score_1" AS "Score_1", "GB_Tree_12_2"."Score_2" AS "Score_2", "GB_Tree_12_2"."Score_3" AS "Score_3" 
FROM "GB_Tree_12_2" UNION ALL SELECT "GB_Tree_12_3"."KEY" AS "KEY", "GB_Tree_12_3"."Score_0" AS "Score_0", "GB_Tree_12_3"."Score_1" AS "Score_1", "GB_Tree_12_3"."Score_2" AS "Score_2", "GB_Tree_12_3"."Score_3" AS "Score_3" 
FROM "GB_Tree_12_3" UNION ALL SELECT "GB_Tree_13_0"."KEY" AS "KEY", "GB_Tree_13_0"."Score_0" AS "Score_0", "GB_Tree_13_0"."Score_1" AS "Score_1", "GB_Tree_13_0"."Score_2" AS "Score_2", "GB_Tree_13_0"."Score_3" AS "Score_3" 
FROM "GB_Tree_13_0" UNION ALL SELECT "GB_Tree_13_1"."KEY" AS "KEY", "GB_Tree_13_1"."Score_0" AS "Score_0", "GB_Tree_13_1"."Score_1" AS "Score_1", "GB_Tree_13_1"."Score_2" AS "Score_2", "GB_Tree_13_1"."Score_3" AS "Score_3" 
FROM "GB_Tree_13_1" UNION ALL SELECT "GB_Tree_13_2"."KEY" AS "KEY", "GB_Tree_13_2"."Score_0" AS "Score_0", "GB_Tree_13_2"."Score_1" AS "Score_1", "GB_Tree_13_2"."Score_2" AS "Score_2", "GB_Tree_13_2"."Score_3" AS "Score_3" 
FROM "GB_Tree_13_2" UNION ALL SELECT "GB_Tree_13_3"."KEY" AS "KEY", "GB_Tree_13_3"."Score_0" AS "Score_0", "GB_Tree_13_3"."Score_1" AS "Score_1", "GB_Tree_13_3"."Score_2" AS "Score_2", "GB_Tree_13_3"."Score_3" AS "Score_3" 
FROM "GB_Tree_13_3" UNION ALL SELECT "GB_Tree_14_0"."KEY" AS "KEY", "GB_Tree_14_0"."Score_0" AS "Score_0", "GB_Tree_14_0"."Score_1" AS "Score_1", "GB_Tree_14_0"."Score_2" AS "Score_2", "GB_Tree_14_0"."Score_3" AS "Score_3" 
FROM "GB_Tree_14_0" UNION ALL SELECT "GB_Tree_14_1"."KEY" AS "KEY", "GB_Tree_14_1"."Score_0" AS "Score_0", "GB_Tree_14_1"."Score_1" AS "Score_1", "GB_Tree_14_1"."Score_2" AS "Score_2", "GB_Tree_14_1"."Score_3" AS "Score_3" 
FROM "GB_Tree_14_1" UNION ALL SELECT "GB_Tree_14_2"."KEY" AS "KEY", "GB_Tree_14_2"."Score_0" AS "Score_0", "GB_Tree_14_2"."Score_1" AS "Score_1", "GB_Tree_14_2"."Score_2" AS "Score_2", "GB_Tree_14_2"."Score_3" AS "Score_3" 
FROM "GB_Tree_14_2" UNION ALL SELECT "GB_Tree_14_3"."KEY" AS "KEY", "GB_Tree_14_3"."Score_0" AS "Score_0", "GB_Tree_14_3"."Score_1" AS "Score_1", "GB_Tree_14_3"."Score_2" AS "Score_2", "GB_Tree_14_3"."Score_3" AS "Score_3" 
FROM "GB_Tree_14_3") AS "GB_Sum_esu_5"), 
"DT_node_lookup_60" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_472 <= -0.5427038669586182) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_331 <= -0.235079824924469) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_88 <= 0.13521119952201843) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_230 <= -0.7986493110656738) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_436 <= 2.517634391784668) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_57 <= -2.483637809753418) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_30 <= 0.7244777679443359) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_60" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 52 AS count, 3 AS depth, 2 AS parent_id, -0.7694375236416987 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 52 AS count, 3 AS depth, 2 AS parent_id, 0.2608134450896363 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 26 AS count, 3 AS depth, 5 AS parent_id, 1.5555331645023653 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 107 AS count, 3 AS depth, 5 AS parent_id, 0.39044527539502655 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 4 AS count, 3 AS depth, 9 AS parent_id, 2.1219108750992786 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 553 AS count, 3 AS depth, 9 AS parent_id, -0.20409502373134006 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 5 AS count, 3 AS depth, 12 AS parent_id, 2.5618631960211076 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 1 AS count, 3 AS depth, 12 AS parent_id, -0.9513750497352079 AS "Estimator") AS "Values"), 
"DT_Output_60" AS 
(SELECT "DT_node_lookup_60"."KEY" AS "KEY", "DT_node_lookup_60".node_id_2 AS node_id_2, "DT_node_data_60".node_id AS node_id, "DT_node_data_60".feature AS feature, "DT_node_data_60".threshold AS threshold, "DT_node_data_60".count AS count, "DT_node_data_60".depth AS depth, "DT_node_data_60".parent_id AS parent_id, "DT_node_data_60"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_60" LEFT OUTER JOIN "DT_node_data_60" ON "DT_node_lookup_60".node_id_2 = "DT_node_data_60".node_id), 
"GB_Tree_15_0" AS 
(SELECT "DT_Output_60"."KEY" AS "KEY", "DT_Output_60"."Estimator" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_60"), 
"DT_node_lookup_61" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_44 <= 0.8184396624565125) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_458 <= 0.2472490817308426) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_90 <= -1.4913231134414673) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_111 <= 0.7972160577774048) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_166 <= 1.8300213813781738) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_276 <= -2.2981343269348145) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_68 <= -0.9739546775817871) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_61" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 22 AS count, 3 AS depth, 2 AS parent_id, 0.992784647803224 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 351 AS count, 3 AS depth, 2 AS parent_id, -0.20976921658225925 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 221 AS count, 3 AS depth, 5 AS parent_id, 0.5510351964182272 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 53 AS count, 3 AS depth, 5 AS parent_id, -0.4807304953306492 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 2 AS count, 3 AS depth, 9 AS parent_id, 2.228004991264757 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 143 AS count, 3 AS depth, 9 AS parent_id, -0.6148577422118715 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 2 AS count, 3 AS depth, 12 AS parent_id, -0.8725264685257911 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 6 AS count, 3 AS depth, 12 AS parent_id, 1.5637281094390785 AS "Estimator") AS "Values"), 
"DT_Output_61" AS 
(SELECT "DT_node_lookup_61"."KEY" AS "KEY", "DT_node_lookup_61".node_id_2 AS node_id_2, "DT_node_data_61".node_id AS node_id, "DT_node_data_61".feature AS feature, "DT_node_data_61".threshold AS threshold, "DT_node_data_61".count AS count, "DT_node_data_61".depth AS depth, "DT_node_data_61".parent_id AS parent_id, "DT_node_data_61"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_61" LEFT OUTER JOIN "DT_node_data_61" ON "DT_node_lookup_61".node_id_2 = "DT_node_data_61".node_id), 
"GB_Tree_15_1" AS 
(SELECT "DT_Output_61"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_61"."Estimator" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_61"), 
"DT_node_lookup_62" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_273 <= 0.7099161148071289) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_499 <= -1.4150190353393555) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_27 <= -0.6700100898742676) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_485 <= -1.1258059740066528) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_429 <= -1.0823845863342285) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_404 <= -0.936015784740448) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= 1.2816369533538818) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_62" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 18 AS count, 3 AS depth, 2 AS parent_id, 1.484774831169611 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 33 AS count, 3 AS depth, 2 AS parent_id, 0.10258817396147259 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 79 AS count, 3 AS depth, 5 AS parent_id, 0.37988075740302524 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 480 AS count, 3 AS depth, 5 AS parent_id, -0.28445907562415185 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 4 AS count, 3 AS depth, 9 AS parent_id, -0.9028083833943256 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 17 AS count, 3 AS depth, 9 AS parent_id, 1.7790204006075654 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 151 AS count, 3 AS depth, 12 AS parent_id, 0.020629905454555193 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 18 AS count, 3 AS depth, 12 AS parent_id, 1.3767037157612803 AS "Estimator") AS "Values"), 
"DT_Output_62" AS 
(SELECT "DT_node_lookup_62"."KEY" AS "KEY", "DT_node_lookup_62".node_id_2 AS node_id_2, "DT_node_data_62".node_id AS node_id, "DT_node_data_62".feature AS feature, "DT_node_data_62".threshold AS threshold, "DT_node_data_62".count AS count, "DT_node_data_62".depth AS depth, "DT_node_data_62".parent_id AS parent_id, "DT_node_data_62"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_62" LEFT OUTER JOIN "DT_node_data_62" ON "DT_node_lookup_62".node_id_2 = "DT_node_data_62".node_id), 
"GB_Tree_15_2" AS 
(SELECT "DT_Output_62"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_62"."Estimator" AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_62"), 
"DT_node_lookup_63" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_185 <= -1.7686922550201416) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_350 <= -0.07061339169740677) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_458 <= -0.3520647883415222) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_460 <= 0.3259409964084625) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_254 <= -1.0065104961395264) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_340 <= 0.8709487915039062) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_360 <= 2.048233985900879) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_63" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 5 AS count, 3 AS depth, 2 AS parent_id, 1.3899029519436241 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 8 AS count, 3 AS depth, 2 AS parent_id, 1.7586548272209361 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 11 AS count, 3 AS depth, 5 AS parent_id, -0.9307950156157774 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 5 AS count, 3 AS depth, 5 AS parent_id, 1.404927299757742 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 111 AS count, 3 AS depth, 9 AS parent_id, 0.21047262407853548 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 16 AS count, 3 AS depth, 9 AS parent_id, 1.5693775875814373 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 628 AS count, 3 AS depth, 12 AS parent_id, -0.17590863925943365 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS DOUBLE PRECISION) AS threshold, 16 AS count, 3 AS depth, 12 AS parent_id, 1.2513778689396349 AS "Estimator") AS "Values"), 
"DT_Output_63" AS 
(SELECT "DT_node_lookup_63"."KEY" AS "KEY", "DT_node_lookup_63".node_id_2 AS node_id_2, "DT_node_data_63".node_id AS node_id, "DT_node_data_63".feature AS feature, "DT_node_data_63".threshold AS threshold, "DT_node_data_63".count AS count, "DT_node_data_63".depth AS depth, "DT_node_data_63".parent_id AS parent_id, "DT_node_data_63"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_63" LEFT OUTER JOIN "DT_node_data_63" ON "DT_node_lookup_63".node_id_2 = "DT_node_data_63".node_id), 
"GB_Tree_15_3" AS 
(SELECT "DT_Output_63"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_63"."Estimator" AS "Score_3" 
FROM "DT_Output_63"), 
"GB_Sum_B6" AS 
(SELECT "GB_Sum_esu_6"."KEY" AS "KEY", "GB_Sum_esu_6"."Score_0" AS "Score_0", "GB_Sum_esu_6"."Score_1" AS "Score_1", "GB_Sum_esu_6"."Score_2" AS "Score_2", "GB_Sum_esu_6"."Score_3" AS "Score_3" 
FROM (SELECT "GB_Tree_15_0"."KEY" AS "KEY", "GB_Tree_15_0"."Score_0" AS "Score_0", "GB_Tree_15_0"."Score_1" AS "Score_1", "GB_Tree_15_0"."Score_2" AS "Score_2", "GB_Tree_15_0"."Score_3" AS "Score_3" 
FROM "GB_Tree_15_0" UNION ALL SELECT "GB_Tree_15_1"."KEY" AS "KEY", "GB_Tree_15_1"."Score_0" AS "Score_0", "GB_Tree_15_1"."Score_1" AS "Score_1", "GB_Tree_15_1"."Score_2" AS "Score_2", "GB_Tree_15_1"."Score_3" AS "Score_3" 
FROM "GB_Tree_15_1" UNION ALL SELECT "GB_Tree_15_2"."KEY" AS "KEY", "GB_Tree_15_2"."Score_0" AS "Score_0", "GB_Tree_15_2"."Score_1" AS "Score_1", "GB_Tree_15_2"."Score_2" AS "Score_2", "GB_Tree_15_2"."Score_3" AS "Score_3" 
FROM "GB_Tree_15_2" UNION ALL SELECT "GB_Tree_15_3"."KEY" AS "KEY", "GB_Tree_15_3"."Score_0" AS "Score_0", "GB_Tree_15_3"."Score_1" AS "Score_1", "GB_Tree_15_3"."Score_2" AS "Score_2", "GB_Tree_15_3"."Score_3" AS "Score_3" 
FROM "GB_Tree_15_3") AS "GB_Sum_esu_6"), 
"GB_Sum_Union" AS 
(SELECT "GB_Sum_EnsembleUnion"."KEY" AS "KEY", "GB_Sum_EnsembleUnion"."Score_0" AS "Score_0", "GB_Sum_EnsembleUnion"."Score_1" AS "Score_1", "GB_Sum_EnsembleUnion"."Score_2" AS "Score_2", "GB_Sum_EnsembleUnion"."Score_3" AS "Score_3" 
FROM (SELECT "GB_Sum_B0"."KEY" AS "KEY", "GB_Sum_B0"."Score_0" AS "Score_0", "GB_Sum_B0"."Score_1" AS "Score_1", "GB_Sum_B0"."Score_2" AS "Score_2", "GB_Sum_B0"."Score_3" AS "Score_3" 
FROM "GB_Sum_B0" UNION ALL SELECT "GB_Sum_B1"."KEY" AS "KEY", "GB_Sum_B1"."Score_0" AS "Score_0", "GB_Sum_B1"."Score_1" AS "Score_1", "GB_Sum_B1"."Score_2" AS "Score_2", "GB_Sum_B1"."Score_3" AS "Score_3" 
FROM "GB_Sum_B1" UNION ALL SELECT "GB_Sum_B2"."KEY" AS "KEY", "GB_Sum_B2"."Score_0" AS "Score_0", "GB_Sum_B2"."Score_1" AS "Score_1", "GB_Sum_B2"."Score_2" AS "Score_2", "GB_Sum_B2"."Score_3" AS "Score_3" 
FROM "GB_Sum_B2" UNION ALL SELECT "GB_Sum_B3"."KEY" AS "KEY", "GB_Sum_B3"."Score_0" AS "Score_0", "GB_Sum_B3"."Score_1" AS "Score_1", "GB_Sum_B3"."Score_2" AS "Score_2", "GB_Sum_B3"."Score_3" AS "Score_3" 
FROM "GB_Sum_B3" UNION ALL SELECT "GB_Sum_B4"."KEY" AS "KEY", "GB_Sum_B4"."Score_0" AS "Score_0", "GB_Sum_B4"."Score_1" AS "Score_1", "GB_Sum_B4"."Score_2" AS "Score_2", "GB_Sum_B4"."Score_3" AS "Score_3" 
FROM "GB_Sum_B4" UNION ALL SELECT "GB_Sum_B5"."KEY" AS "KEY", "GB_Sum_B5"."Score_0" AS "Score_0", "GB_Sum_B5"."Score_1" AS "Score_1", "GB_Sum_B5"."Score_2" AS "Score_2", "GB_Sum_B5"."Score_3" AS "Score_3" 
FROM "GB_Sum_B5" UNION ALL SELECT "GB_Sum_B6"."KEY" AS "KEY", "GB_Sum_B6"."Score_0" AS "Score_0", "GB_Sum_B6"."Score_1" AS "Score_1", "GB_Sum_B6"."Score_2" AS "Score_2", "GB_Sum_B6"."Score_3" AS "Score_3" 
FROM "GB_Sum_B6") AS "GB_Sum_EnsembleUnion"), 
"GB_Sum_sum" AS 
(SELECT "T"."KEY" AS "KEY", "T"."Score_0" AS "Score_0", "T"."Score_1" AS "Score_1", "T"."Score_2" AS "Score_2", "T"."Score_3" AS "Score_3" 
FROM (SELECT "GB_Sum_Union"."KEY" AS "KEY", sum(CAST("GB_Sum_Union"."Score_0" AS DOUBLE PRECISION)) AS "Score_0", sum(CAST("GB_Sum_Union"."Score_1" AS DOUBLE PRECISION)) AS "Score_1", sum(CAST("GB_Sum_Union"."Score_2" AS DOUBLE PRECISION)) AS "Score_2", sum(CAST("GB_Sum_Union"."Score_3" AS DOUBLE PRECISION)) AS "Score_3" 
FROM "GB_Sum_Union" GROUP BY "GB_Sum_Union"."KEY") AS "T"), 
orig_cte AS 
(SELECT "GB_Sum_sum"."KEY" AS "KEY", 0.23875 + 0.1 * "GB_Sum_sum"."Score_0" AS "Score_0", 0.25125 + 0.1 * "GB_Sum_sum"."Score_1" AS "Score_1", 0.2525 + 0.1 * "GB_Sum_sum"."Score_2" AS "Score_2", 0.2575 + 0.1 * "GB_Sum_sum"."Score_3" AS "Score_3", CAST(NULL AS DOUBLE PRECISION) AS "Proba_0", CAST(NULL AS DOUBLE PRECISION) AS "Proba_1", CAST(NULL AS DOUBLE PRECISION) AS "Proba_2", CAST(NULL AS DOUBLE PRECISION) AS "Proba_3", CAST(NULL AS DOUBLE PRECISION) AS "LogProba_0", CAST(NULL AS DOUBLE PRECISION) AS "LogProba_1", CAST(NULL AS DOUBLE PRECISION) AS "LogProba_2", CAST(NULL AS DOUBLE PRECISION) AS "LogProba_3", CAST(NULL AS BIGINT) AS "Decision", CAST(NULL AS DOUBLE PRECISION) AS "DecisionProba" 
FROM "GB_Sum_sum"), 
score_class_union AS 
(SELECT scu."KEY_u" AS "KEY_u", scu.class AS class, scu."LogProba" AS "LogProba", scu."Proba" AS "Proba", scu."Score" AS "Score" 
FROM (SELECT orig_cte."KEY" AS "KEY_u", 0 AS class, orig_cte."LogProba_0" AS "LogProba", orig_cte."Proba_0" AS "Proba", orig_cte."Score_0" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 1 AS class, orig_cte."LogProba_1" AS "LogProba", orig_cte."Proba_1" AS "Proba", orig_cte."Score_1" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 2 AS class, orig_cte."LogProba_2" AS "LogProba", orig_cte."Proba_2" AS "Proba", orig_cte."Score_2" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 3 AS class, orig_cte."LogProba_3" AS "LogProba", orig_cte."Proba_3" AS "Proba", orig_cte."Score_3" AS "Score" 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte."KEY" AS "KEY", orig_cte."Score_0" AS "Score_0", orig_cte."Score_1" AS "Score_1", orig_cte."Score_2" AS "Score_2", orig_cte."Score_3" AS "Score_3", orig_cte."Proba_0" AS "Proba_0", orig_cte."Proba_1" AS "Proba_1", orig_cte."Proba_2" AS "Proba_2", orig_cte."Proba_3" AS "Proba_3", orig_cte."LogProba_0" AS "LogProba_0", orig_cte."LogProba_1" AS "LogProba_1", orig_cte."LogProba_2" AS "LogProba_2", orig_cte."LogProba_3" AS "LogProba_3", orig_cte."Decision" AS "Decision", orig_cte."DecisionProba" AS "DecisionProba", max_select."KEY_m" AS "KEY_m", max_select."max_Score" AS "max_Score" 
FROM orig_cte LEFT OUTER JOIN (SELECT score_class_union."KEY_u" AS "KEY_m", max(score_class_union."Score") AS "max_Score" 
FROM score_class_union GROUP BY score_class_union."KEY_u") AS max_select ON orig_cte."KEY" = max_select."KEY_m"), 
score_soft_max_deltas AS 
(SELECT score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Score_2" AS "Score_2", score_max."Score_3" AS "Score_3", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."Proba_2" AS "Proba_2", score_max."Proba_3" AS "Proba_3", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."LogProba_2" AS "LogProba_2", score_max."LogProba_3" AS "LogProba_3", score_max."Decision" AS "Decision", score_max."DecisionProba" AS "DecisionProba", score_max."KEY_m" AS "KEY_m", score_max."max_Score" AS "max_Score", exp(score_max."Score_0" - score_max."max_Score") AS "exp_delta_Score_0", exp(score_max."Score_1" - score_max."max_Score") AS "exp_delta_Score_1", exp(score_max."Score_2" - score_max."max_Score") AS "exp_delta_Score_2", exp(score_max."Score_3" - score_max."max_Score") AS "exp_delta_Score_3" 
FROM score_max), 
score_class_union_soft AS 
(SELECT soft_scu."KEY" AS "KEY", soft_scu.class AS class, soft_scu."exp_delta_Score" AS "exp_delta_Score" 
FROM (SELECT score_soft_max_deltas."KEY" AS "KEY", 0 AS class, score_soft_max_deltas."exp_delta_Score_0" AS "exp_delta_Score" 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas."KEY" AS "KEY", 1 AS class, score_soft_max_deltas."exp_delta_Score_1" AS "exp_delta_Score" 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas."KEY" AS "KEY", 2 AS class, score_soft_max_deltas."exp_delta_Score_2" AS "exp_delta_Score" 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas."KEY" AS "KEY", 3 AS class, score_soft_max_deltas."exp_delta_Score_3" AS "exp_delta_Score" 
FROM score_soft_max_deltas) AS soft_scu), 
score_soft_max AS 
(SELECT score_soft_max_deltas."KEY" AS "KEY", score_soft_max_deltas."Score_0" AS "Score_0", score_soft_max_deltas."Score_1" AS "Score_1", score_soft_max_deltas."Score_2" AS "Score_2", score_soft_max_deltas."Score_3" AS "Score_3", score_soft_max_deltas."Proba_0" AS "Proba_0", score_soft_max_deltas."Proba_1" AS "Proba_1", score_soft_max_deltas."Proba_2" AS "Proba_2", score_soft_max_deltas."Proba_3" AS "Proba_3", score_soft_max_deltas."LogProba_0" AS "LogProba_0", score_soft_max_deltas."LogProba_1" AS "LogProba_1", score_soft_max_deltas."LogProba_2" AS "LogProba_2", score_soft_max_deltas."LogProba_3" AS "LogProba_3", score_soft_max_deltas."Decision" AS "Decision", score_soft_max_deltas."DecisionProba" AS "DecisionProba", score_soft_max_deltas."KEY_m" AS "KEY_m", score_soft_max_deltas."max_Score" AS "max_Score", score_soft_max_deltas."exp_delta_Score_0" AS "exp_delta_Score_0", score_soft_max_deltas."exp_delta_Score_1" AS "exp_delta_Score_1", score_soft_max_deltas."exp_delta_Score_2" AS "exp_delta_Score_2", score_soft_max_deltas."exp_delta_Score_3" AS "exp_delta_Score_3", sum_exp_t."KEY_sum" AS "KEY_sum", sum_exp_t."sum_ExpDeltaScore" AS "sum_ExpDeltaScore" 
FROM score_soft_max_deltas LEFT OUTER JOIN (SELECT score_class_union_soft."KEY" AS "KEY_sum", sum(score_class_union_soft."exp_delta_Score") AS "sum_ExpDeltaScore" 
FROM score_class_union_soft GROUP BY score_class_union_soft."KEY") AS sum_exp_t ON score_soft_max_deltas."KEY" = sum_exp_t."KEY_sum"), 
union_with_max AS 
(SELECT score_class_union."KEY_u" AS "KEY_u", score_class_union.class AS class, score_class_union."LogProba" AS "LogProba", score_class_union."Proba" AS "Proba", score_class_union."Score" AS "Score", score_soft_max."KEY" AS "KEY", score_soft_max."Score_0" AS "Score_0", score_soft_max."Score_1" AS "Score_1", score_soft_max."Score_2" AS "Score_2", score_soft_max."Score_3" AS "Score_3", score_soft_max."Proba_0" AS "Proba_0", score_soft_max."Proba_1" AS "Proba_1", score_soft_max."Proba_2" AS "Proba_2", score_soft_max."Proba_3" AS "Proba_3", score_soft_max."LogProba_0" AS "LogProba_0", score_soft_max."LogProba_1" AS "LogProba_1", score_soft_max."LogProba_2" AS "LogProba_2", score_soft_max."LogProba_3" AS "LogProba_3", score_soft_max."Decision" AS "Decision", score_soft_max."DecisionProba" AS "DecisionProba", score_soft_max."KEY_m" AS "KEY_m", score_soft_max."max_Score" AS "max_Score", score_soft_max."exp_delta_Score_0" AS "exp_delta_Score_0", score_soft_max."exp_delta_Score_1" AS "exp_delta_Score_1", score_soft_max."exp_delta_Score_2" AS "exp_delta_Score_2", score_soft_max."exp_delta_Score_3" AS "exp_delta_Score_3", score_soft_max."KEY_sum" AS "KEY_sum", score_soft_max."sum_ExpDeltaScore" AS "sum_ExpDeltaScore" 
FROM score_class_union LEFT OUTER JOIN score_soft_max ON score_class_union."KEY_u" = score_soft_max."KEY"), 
arg_max_cte AS 
(SELECT score_soft_max."KEY" AS "KEY", score_soft_max."Score_0" AS "Score_0", score_soft_max."Score_1" AS "Score_1", score_soft_max."Score_2" AS "Score_2", score_soft_max."Score_3" AS "Score_3", score_soft_max."Proba_0" AS "Proba_0", score_soft_max."Proba_1" AS "Proba_1", score_soft_max."Proba_2" AS "Proba_2", score_soft_max."Proba_3" AS "Proba_3", score_soft_max."LogProba_0" AS "LogProba_0", score_soft_max."LogProba_1" AS "LogProba_1", score_soft_max."LogProba_2" AS "LogProba_2", score_soft_max."LogProba_3" AS "LogProba_3", score_soft_max."Decision" AS "Decision", score_soft_max."DecisionProba" AS "DecisionProba", score_soft_max."KEY_m" AS "KEY_m", score_soft_max."max_Score" AS "max_Score", score_soft_max."exp_delta_Score_0" AS "exp_delta_Score_0", score_soft_max."exp_delta_Score_1" AS "exp_delta_Score_1", score_soft_max."exp_delta_Score_2" AS "exp_delta_Score_2", score_soft_max."exp_delta_Score_3" AS "exp_delta_Score_3", score_soft_max."KEY_sum" AS "KEY_sum", score_soft_max."sum_ExpDeltaScore" AS "sum_ExpDeltaScore", "arg_max_t_Score"."KEY_Score" AS "KEY_Score", "arg_max_t_Score"."arg_max_Score" AS "arg_max_Score", soft_max_comp."KEY_softmax" AS "KEY_softmax", soft_max_comp."SoftProba_0" AS "SoftProba_0", soft_max_comp."SoftProba_1" AS "SoftProba_1", soft_max_comp."SoftProba_2" AS "SoftProba_2", soft_max_comp."SoftProba_3" AS "SoftProba_3" 
FROM score_soft_max LEFT OUTER JOIN (SELECT union_with_max."KEY" AS "KEY_Score", min(union_with_max.class) AS "arg_max_Score" 
FROM union_with_max 
WHERE union_with_max."max_Score" <= union_with_max."Score" GROUP BY union_with_max."KEY") AS "arg_max_t_Score" ON score_soft_max."KEY" = "arg_max_t_Score"."KEY_Score" LEFT OUTER JOIN (SELECT score_soft_max."KEY" AS "KEY_softmax", score_soft_max."exp_delta_Score_0" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_0", score_soft_max."exp_delta_Score_1" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_1", score_soft_max."exp_delta_Score_2" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_2", score_soft_max."exp_delta_Score_3" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_3" 
FROM score_soft_max) AS soft_max_comp ON soft_max_comp."KEY_softmax" = "arg_max_t_Score"."KEY_Score")
 SELECT arg_max_cte."KEY" AS "KEY", arg_max_cte."Score_0" AS "Score_0", arg_max_cte."Score_1" AS "Score_1", arg_max_cte."Score_2" AS "Score_2", arg_max_cte."Score_3" AS "Score_3", arg_max_cte."SoftProba_0" AS "Proba_0", arg_max_cte."SoftProba_1" AS "Proba_1", arg_max_cte."SoftProba_2" AS "Proba_2", arg_max_cte."SoftProba_3" AS "Proba_3", CASE WHEN (arg_max_cte."SoftProba_0" IS NULL OR arg_max_cte."SoftProba_0" > 0.0) THEN log(arg_max_cte."SoftProba_0") ELSE -1e+125 END AS "LogProba_0", CASE WHEN (arg_max_cte."SoftProba_1" IS NULL OR arg_max_cte."SoftProba_1" > 0.0) THEN log(arg_max_cte."SoftProba_1") ELSE -1e+125 END AS "LogProba_1", CASE WHEN (arg_max_cte."SoftProba_2" IS NULL OR arg_max_cte."SoftProba_2" > 0.0) THEN log(arg_max_cte."SoftProba_2") ELSE -1e+125 END AS "LogProba_2", CASE WHEN (arg_max_cte."SoftProba_3" IS NULL OR arg_max_cte."SoftProba_3" > 0.0) THEN log(arg_max_cte."SoftProba_3") ELSE -1e+125 END AS "LogProba_3", arg_max_cte."arg_max_Score" AS "Decision", CASE WHEN (arg_max_cte."SoftProba_0" <= CASE WHEN (arg_max_cte."SoftProba_1" <= CASE WHEN (arg_max_cte."SoftProba_2" <= arg_max_cte."SoftProba_3") THEN arg_max_cte."SoftProba_3" ELSE arg_max_cte."SoftProba_2" END) THEN CASE WHEN (arg_max_cte."SoftProba_2" <= arg_max_cte."SoftProba_3") THEN arg_max_cte."SoftProba_3" ELSE arg_max_cte."SoftProba_2" END ELSE arg_max_cte."SoftProba_1" END) THEN CASE WHEN (arg_max_cte."SoftProba_1" <= CASE WHEN (arg_max_cte."SoftProba_2" <= arg_max_cte."SoftProba_3") THEN arg_max_cte."SoftProba_3" ELSE arg_max_cte."SoftProba_2" END) THEN CASE WHEN (arg_max_cte."SoftProba_2" <= arg_max_cte."SoftProba_3") THEN arg_max_cte."SoftProba_3" ELSE arg_max_cte."SoftProba_2" END ELSE arg_max_cte."SoftProba_1" END ELSE arg_max_cte."SoftProba_0" END AS "DecisionProba" 
FROM arg_max_cte