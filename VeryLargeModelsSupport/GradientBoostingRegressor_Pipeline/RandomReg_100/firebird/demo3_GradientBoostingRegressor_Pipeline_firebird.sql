-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2018

-- This SQL code can contain one or more statements, to be executed in the order they appear in this file.



-- Model deployment code

WITH "ADS_imp_1_OUT" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" IS NULL) THEN -0.08128085300192169 ELSE "ADS"."Feature_0" END AS impter_2, CASE WHEN ("ADS"."Feature_1" IS NULL) THEN -0.13436805172534722 ELSE "ADS"."Feature_1" END AS impter_3, CASE WHEN ("ADS"."Feature_2" IS NULL) THEN -0.1171335439265335 ELSE "ADS"."Feature_2" END AS impter_4, CASE WHEN ("ADS"."Feature_3" IS NULL) THEN 0.10314525691526008 ELSE "ADS"."Feature_3" END AS impter_5, CASE WHEN ("ADS"."Feature_4" IS NULL) THEN 0.04859877061601238 ELSE "ADS"."Feature_4" END AS impter_6, CASE WHEN ("ADS"."Feature_5" IS NULL) THEN 0.09985694677353979 ELSE "ADS"."Feature_5" END AS impter_7, CASE WHEN ("ADS"."Feature_6" IS NULL) THEN 0.0672774556565916 ELSE "ADS"."Feature_6" END AS impter_8, CASE WHEN ("ADS"."Feature_7" IS NULL) THEN 0.1622384092846963 ELSE "ADS"."Feature_7" END AS impter_9, CASE WHEN ("ADS"."Feature_8" IS NULL) THEN 0.04069362852608218 ELSE "ADS"."Feature_8" END AS impter_10, CASE WHEN ("ADS"."Feature_9" IS NULL) THEN 0.051659905088603277 ELSE "ADS"."Feature_9" END AS impter_11, CASE WHEN ("ADS"."Feature_10" IS NULL) THEN 0.10179067839269526 ELSE "ADS"."Feature_10" END AS impter_12, CASE WHEN ("ADS"."Feature_11" IS NULL) THEN -0.1759747362698276 ELSE "ADS"."Feature_11" END AS impter_13, CASE WHEN ("ADS"."Feature_12" IS NULL) THEN -0.09675138494095058 ELSE "ADS"."Feature_12" END AS impter_14, CASE WHEN ("ADS"."Feature_13" IS NULL) THEN -0.04608656912634662 ELSE "ADS"."Feature_13" END AS impter_15, CASE WHEN ("ADS"."Feature_14" IS NULL) THEN 0.10165852286085655 ELSE "ADS"."Feature_14" END AS impter_16, CASE WHEN ("ADS"."Feature_15" IS NULL) THEN 0.11179903010835046 ELSE "ADS"."Feature_15" END AS impter_17, CASE WHEN ("ADS"."Feature_16" IS NULL) THEN -0.006110233359380335 ELSE "ADS"."Feature_16" END AS impter_18, CASE WHEN ("ADS"."Feature_17" IS NULL) THEN 0.07144704068910084 ELSE "ADS"."Feature_17" END AS impter_19, CASE WHEN ("ADS"."Feature_18" IS NULL) THEN -0.08808458650118434 ELSE "ADS"."Feature_18" END AS impter_20, CASE WHEN ("ADS"."Feature_19" IS NULL) THEN -0.07182799000884085 ELSE "ADS"."Feature_19" END AS impter_21, CASE WHEN ("ADS"."Feature_20" IS NULL) THEN -0.07230200847310368 ELSE "ADS"."Feature_20" END AS impter_22, CASE WHEN ("ADS"."Feature_21" IS NULL) THEN 0.02896693079944173 ELSE "ADS"."Feature_21" END AS impter_23, CASE WHEN ("ADS"."Feature_22" IS NULL) THEN 0.21388217632997558 ELSE "ADS"."Feature_22" END AS impter_24, CASE WHEN ("ADS"."Feature_23" IS NULL) THEN -0.06669297919409706 ELSE "ADS"."Feature_23" END AS impter_25, CASE WHEN ("ADS"."Feature_24" IS NULL) THEN 0.046152348549980085 ELSE "ADS"."Feature_24" END AS impter_26, CASE WHEN ("ADS"."Feature_25" IS NULL) THEN 0.03249513222766133 ELSE "ADS"."Feature_25" END AS impter_27, CASE WHEN ("ADS"."Feature_26" IS NULL) THEN 0.05224239330612866 ELSE "ADS"."Feature_26" END AS impter_28, CASE WHEN ("ADS"."Feature_27" IS NULL) THEN 0.018745871966632584 ELSE "ADS"."Feature_27" END AS impter_29, CASE WHEN ("ADS"."Feature_28" IS NULL) THEN 0.015553079229790346 ELSE "ADS"."Feature_28" END AS impter_30, CASE WHEN ("ADS"."Feature_29" IS NULL) THEN 0.2258153729902979 ELSE "ADS"."Feature_29" END AS impter_31, CASE WHEN ("ADS"."Feature_30" IS NULL) THEN -0.16989857778838335 ELSE "ADS"."Feature_30" END AS impter_32, CASE WHEN ("ADS"."Feature_31" IS NULL) THEN 0.036044309156992346 ELSE "ADS"."Feature_31" END AS impter_33, CASE WHEN ("ADS"."Feature_32" IS NULL) THEN -0.17199324162640067 ELSE "ADS"."Feature_32" END AS impter_34, CASE WHEN ("ADS"."Feature_33" IS NULL) THEN 0.13781418887864322 ELSE "ADS"."Feature_33" END AS impter_35, CASE WHEN ("ADS"."Feature_34" IS NULL) THEN -0.002438210964217244 ELSE "ADS"."Feature_34" END AS impter_36, CASE WHEN ("ADS"."Feature_35" IS NULL) THEN 0.060833749131451356 ELSE "ADS"."Feature_35" END AS impter_37, CASE WHEN ("ADS"."Feature_36" IS NULL) THEN -0.18905998689974024 ELSE "ADS"."Feature_36" END AS impter_38, CASE WHEN ("ADS"."Feature_37" IS NULL) THEN -0.09635219278465344 ELSE "ADS"."Feature_37" END AS impter_39, CASE WHEN ("ADS"."Feature_38" IS NULL) THEN -0.10160667507355636 ELSE "ADS"."Feature_38" END AS impter_40, CASE WHEN ("ADS"."Feature_39" IS NULL) THEN 0.06475250541578681 ELSE "ADS"."Feature_39" END AS impter_41, CASE WHEN ("ADS"."Feature_40" IS NULL) THEN -0.30264305036051603 ELSE "ADS"."Feature_40" END AS impter_42, CASE WHEN ("ADS"."Feature_41" IS NULL) THEN -0.13264155681878692 ELSE "ADS"."Feature_41" END AS impter_43, CASE WHEN ("ADS"."Feature_42" IS NULL) THEN -0.1334054780733323 ELSE "ADS"."Feature_42" END AS impter_44, CASE WHEN ("ADS"."Feature_43" IS NULL) THEN -0.0011436009702802522 ELSE "ADS"."Feature_43" END AS impter_45, CASE WHEN ("ADS"."Feature_44" IS NULL) THEN -0.05335157908923337 ELSE "ADS"."Feature_44" END AS impter_46, CASE WHEN ("ADS"."Feature_45" IS NULL) THEN 0.01714537002687063 ELSE "ADS"."Feature_45" END AS impter_47, CASE WHEN ("ADS"."Feature_46" IS NULL) THEN -0.059059449572612485 ELSE "ADS"."Feature_46" END AS impter_48, CASE WHEN ("ADS"."Feature_47" IS NULL) THEN -0.09528879968183994 ELSE "ADS"."Feature_47" END AS impter_49, CASE WHEN ("ADS"."Feature_48" IS NULL) THEN -0.15781363463365924 ELSE "ADS"."Feature_48" END AS impter_50, CASE WHEN ("ADS"."Feature_49" IS NULL) THEN -0.23794433392453432 ELSE "ADS"."Feature_49" END AS impter_51, CASE WHEN ("ADS"."Feature_50" IS NULL) THEN 0.13863850693032237 ELSE "ADS"."Feature_50" END AS impter_52, CASE WHEN ("ADS"."Feature_51" IS NULL) THEN -0.01699621991492915 ELSE "ADS"."Feature_51" END AS impter_53, CASE WHEN ("ADS"."Feature_52" IS NULL) THEN 0.19701490003754304 ELSE "ADS"."Feature_52" END AS impter_54, CASE WHEN ("ADS"."Feature_53" IS NULL) THEN 0.05162990473238551 ELSE "ADS"."Feature_53" END AS impter_55, CASE WHEN ("ADS"."Feature_54" IS NULL) THEN -0.13453002098662553 ELSE "ADS"."Feature_54" END AS impter_56, CASE WHEN ("ADS"."Feature_55" IS NULL) THEN 0.14789370104559646 ELSE "ADS"."Feature_55" END AS impter_57, CASE WHEN ("ADS"."Feature_56" IS NULL) THEN -0.013142759438358454 ELSE "ADS"."Feature_56" END AS impter_58, CASE WHEN ("ADS"."Feature_57" IS NULL) THEN -0.09299162994657897 ELSE "ADS"."Feature_57" END AS impter_59, CASE WHEN ("ADS"."Feature_58" IS NULL) THEN -0.24689492768975088 ELSE "ADS"."Feature_58" END AS impter_60, CASE WHEN ("ADS"."Feature_59" IS NULL) THEN 0.13499727108287438 ELSE "ADS"."Feature_59" END AS impter_61, CASE WHEN ("ADS"."Feature_60" IS NULL) THEN 0.0025544005507731047 ELSE "ADS"."Feature_60" END AS impter_62, CASE WHEN ("ADS"."Feature_61" IS NULL) THEN 0.12527368663465327 ELSE "ADS"."Feature_61" END AS impter_63, CASE WHEN ("ADS"."Feature_62" IS NULL) THEN -0.03739962296055886 ELSE "ADS"."Feature_62" END AS impter_64, CASE WHEN ("ADS"."Feature_63" IS NULL) THEN -0.02998869580177853 ELSE "ADS"."Feature_63" END AS impter_65, CASE WHEN ("ADS"."Feature_64" IS NULL) THEN -0.04286088516871345 ELSE "ADS"."Feature_64" END AS impter_66, CASE WHEN ("ADS"."Feature_65" IS NULL) THEN -0.1438347006651433 ELSE "ADS"."Feature_65" END AS impter_67, CASE WHEN ("ADS"."Feature_66" IS NULL) THEN -0.05269793910889183 ELSE "ADS"."Feature_66" END AS impter_68, CASE WHEN ("ADS"."Feature_67" IS NULL) THEN 0.029267940271277926 ELSE "ADS"."Feature_67" END AS impter_69, CASE WHEN ("ADS"."Feature_68" IS NULL) THEN 0.10431080888322372 ELSE "ADS"."Feature_68" END AS impter_70, CASE WHEN ("ADS"."Feature_69" IS NULL) THEN -0.09619687433047125 ELSE "ADS"."Feature_69" END AS impter_71, CASE WHEN ("ADS"."Feature_70" IS NULL) THEN 0.0067333192983315745 ELSE "ADS"."Feature_70" END AS impter_72, CASE WHEN ("ADS"."Feature_71" IS NULL) THEN 0.03289665935367682 ELSE "ADS"."Feature_71" END AS impter_73, CASE WHEN ("ADS"."Feature_72" IS NULL) THEN 0.08064277275460055 ELSE "ADS"."Feature_72" END AS impter_74, CASE WHEN ("ADS"."Feature_73" IS NULL) THEN -0.10603556755491854 ELSE "ADS"."Feature_73" END AS impter_75, CASE WHEN ("ADS"."Feature_74" IS NULL) THEN 0.09489100148295918 ELSE "ADS"."Feature_74" END AS impter_76, CASE WHEN ("ADS"."Feature_75" IS NULL) THEN -0.19664887110008689 ELSE "ADS"."Feature_75" END AS impter_77, CASE WHEN ("ADS"."Feature_76" IS NULL) THEN 0.11652643514949582 ELSE "ADS"."Feature_76" END AS impter_78, CASE WHEN ("ADS"."Feature_77" IS NULL) THEN 0.19340218348071325 ELSE "ADS"."Feature_77" END AS impter_79, CASE WHEN ("ADS"."Feature_78" IS NULL) THEN 0.11209709087907249 ELSE "ADS"."Feature_78" END AS impter_80, CASE WHEN ("ADS"."Feature_79" IS NULL) THEN 0.10709013621222807 ELSE "ADS"."Feature_79" END AS impter_81, CASE WHEN ("ADS"."Feature_80" IS NULL) THEN -0.01033042920922311 ELSE "ADS"."Feature_80" END AS impter_82, CASE WHEN ("ADS"."Feature_81" IS NULL) THEN 0.11026552104356717 ELSE "ADS"."Feature_81" END AS impter_83, CASE WHEN ("ADS"."Feature_82" IS NULL) THEN 0.01191634589453312 ELSE "ADS"."Feature_82" END AS impter_84, CASE WHEN ("ADS"."Feature_83" IS NULL) THEN 0.013369825695028714 ELSE "ADS"."Feature_83" END AS impter_85, CASE WHEN ("ADS"."Feature_84" IS NULL) THEN -0.1500512000702785 ELSE "ADS"."Feature_84" END AS impter_86, CASE WHEN ("ADS"."Feature_85" IS NULL) THEN -0.09022177579448487 ELSE "ADS"."Feature_85" END AS impter_87, CASE WHEN ("ADS"."Feature_86" IS NULL) THEN -0.16029625657228264 ELSE "ADS"."Feature_86" END AS impter_88, CASE WHEN ("ADS"."Feature_87" IS NULL) THEN -0.10127017293489289 ELSE "ADS"."Feature_87" END AS impter_89, CASE WHEN ("ADS"."Feature_88" IS NULL) THEN 0.3323543006292627 ELSE "ADS"."Feature_88" END AS impter_90, CASE WHEN ("ADS"."Feature_89" IS NULL) THEN 0.051731173060791114 ELSE "ADS"."Feature_89" END AS impter_91, CASE WHEN ("ADS"."Feature_90" IS NULL) THEN 0.1078879212202887 ELSE "ADS"."Feature_90" END AS impter_92, CASE WHEN ("ADS"."Feature_91" IS NULL) THEN 0.21454931874740585 ELSE "ADS"."Feature_91" END AS impter_93, CASE WHEN ("ADS"."Feature_92" IS NULL) THEN -0.16317337769942666 ELSE "ADS"."Feature_92" END AS impter_94, CASE WHEN ("ADS"."Feature_93" IS NULL) THEN -0.2242384076879583 ELSE "ADS"."Feature_93" END AS impter_95, CASE WHEN ("ADS"."Feature_94" IS NULL) THEN -0.27695847565296017 ELSE "ADS"."Feature_94" END AS impter_96, CASE WHEN ("ADS"."Feature_95" IS NULL) THEN 0.037863552135044866 ELSE "ADS"."Feature_95" END AS impter_97, CASE WHEN ("ADS"."Feature_96" IS NULL) THEN -0.02758852803141265 ELSE "ADS"."Feature_96" END AS impter_98, CASE WHEN ("ADS"."Feature_97" IS NULL) THEN 0.1052877881031243 ELSE "ADS"."Feature_97" END AS impter_99, CASE WHEN ("ADS"."Feature_98" IS NULL) THEN 0.06640703380221318 ELSE "ADS"."Feature_98" END AS impter_100, CASE WHEN ("ADS"."Feature_99" IS NULL) THEN 0.06569930995842384 ELSE "ADS"."Feature_99" END AS impter_101 
FROM "RandomReg_100" AS "ADS"), 
"ADS_sca_2_OUT" AS 
(SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", (CAST("ADS_imp_1_OUT".impter_2 AS FLOAT) - -0.08128085300192169) / 1.0000403559305833 AS scaler_2, (CAST("ADS_imp_1_OUT".impter_3 AS FLOAT) - -0.13436805172534722) / 0.8837904988184502 AS scaler_3, (CAST("ADS_imp_1_OUT".impter_4 AS FLOAT) - -0.1171335439265335) / 0.8570569022899862 AS scaler_4, (CAST("ADS_imp_1_OUT".impter_5 AS FLOAT) - 0.10314525691526008) / 1.0029176283530983 AS scaler_5, (CAST("ADS_imp_1_OUT".impter_6 AS FLOAT) - 0.04859877061601238) / 0.9128966632538227 AS scaler_6, (CAST("ADS_imp_1_OUT".impter_7 AS FLOAT) - 0.09985694677353979) / 0.8987090594452791 AS scaler_7, (CAST("ADS_imp_1_OUT".impter_8 AS FLOAT) - 0.0672774556565916) / 1.0142447611518557 AS scaler_8, (CAST("ADS_imp_1_OUT".impter_9 AS FLOAT) - 0.1622384092846963) / 1.0747662307530297 AS scaler_9, (CAST("ADS_imp_1_OUT".impter_10 AS FLOAT) - 0.04069362852608218) / 1.026267867232466 AS scaler_10, (CAST("ADS_imp_1_OUT".impter_11 AS FLOAT) - 0.051659905088603277) / 0.8402436043740567 AS scaler_11, (CAST("ADS_imp_1_OUT".impter_12 AS FLOAT) - 0.10179067839269526) / 1.0068242363938393 AS scaler_12, (CAST("ADS_imp_1_OUT".impter_13 AS FLOAT) - -0.1759747362698276) / 0.9240710764915452 AS scaler_13, (CAST("ADS_imp_1_OUT".impter_14 AS FLOAT) - -0.09675138494095058) / 0.9783790869772869 AS scaler_14, (CAST("ADS_imp_1_OUT".impter_15 AS FLOAT) - -0.04608656912634662) / 0.9781135354292492 AS scaler_15, (CAST("ADS_imp_1_OUT".impter_16 AS FLOAT) - 0.10165852286085655) / 0.9014456978711726 AS scaler_16, (CAST("ADS_imp_1_OUT".impter_17 AS FLOAT) - 0.11179903010835046) / 0.9779155034856741 AS scaler_17, (CAST("ADS_imp_1_OUT".impter_18 AS FLOAT) - -0.006110233359380335) / 0.9981020697621527 AS scaler_18, (CAST("ADS_imp_1_OUT".impter_19 AS FLOAT) - 0.07144704068910084) / 0.8874816465174282 AS scaler_19, (CAST("ADS_imp_1_OUT".impter_20 AS FLOAT) - -0.08808458650118434) / 0.8392925703736469 AS scaler_20, (CAST("ADS_imp_1_OUT".impter_21 AS FLOAT) - -0.07182799000884085) / 0.9507419765776924 AS scaler_21, (CAST("ADS_imp_1_OUT".impter_22 AS FLOAT) - -0.07230200847310368) / 1.066826998652098 AS scaler_22, (CAST("ADS_imp_1_OUT".impter_23 AS FLOAT) - 0.02896693079944173) / 0.9902823724923776 AS scaler_23, (CAST("ADS_imp_1_OUT".impter_24 AS FLOAT) - 0.21388217632997558) / 0.8623253968778218 AS scaler_24, (CAST("ADS_imp_1_OUT".impter_25 AS FLOAT) - -0.06669297919409706) / 0.9598770564082906 AS scaler_25, (CAST("ADS_imp_1_OUT".impter_26 AS FLOAT) - 0.046152348549980085) / 0.9878502885847017 AS scaler_26, (CAST("ADS_imp_1_OUT".impter_27 AS FLOAT) - 0.03249513222766133) / 0.9583954740248698 AS scaler_27, (CAST("ADS_imp_1_OUT".impter_28 AS FLOAT) - 0.05224239330612866) / 0.9771107275041324 AS scaler_28, (CAST("ADS_imp_1_OUT".impter_29 AS FLOAT) - 0.018745871966632584) / 1.0557199260759529 AS scaler_29, (CAST("ADS_imp_1_OUT".impter_30 AS FLOAT) - 0.015553079229790346) / 0.9376481022022428 AS scaler_30, (CAST("ADS_imp_1_OUT".impter_31 AS FLOAT) - 0.2258153729902979) / 1.0513597556957384 AS scaler_31, (CAST("ADS_imp_1_OUT".impter_32 AS FLOAT) - -0.16989857778838335) / 1.0578168863571897 AS scaler_32, (CAST("ADS_imp_1_OUT".impter_33 AS FLOAT) - 0.036044309156992346) / 0.9200106573435598 AS scaler_33, (CAST("ADS_imp_1_OUT".impter_34 AS FLOAT) - -0.17199324162640067) / 0.9814800251435433 AS scaler_34, (CAST("ADS_imp_1_OUT".impter_35 AS FLOAT) - 0.13781418887864322) / 0.9177012051168076 AS scaler_35, (CAST("ADS_imp_1_OUT".impter_36 AS FLOAT) - -0.002438210964217244) / 0.8944380116105023 AS scaler_36, (CAST("ADS_imp_1_OUT".impter_37 AS FLOAT) - 0.060833749131451356) / 0.9361651054882097 AS scaler_37, (CAST("ADS_imp_1_OUT".impter_38 AS FLOAT) - -0.18905998689974024) / 1.1290398175800667 AS scaler_38, (CAST("ADS_imp_1_OUT".impter_39 AS FLOAT) - -0.09635219278465344) / 1.0703546254505507 AS scaler_39, (CAST("ADS_imp_1_OUT".impter_40 AS FLOAT) - -0.10160667507355636) / 0.920646499226522 AS scaler_40, (CAST("ADS_imp_1_OUT".impter_41 AS FLOAT) - 0.06475250541578681) / 0.8986109106193976 AS scaler_41, (CAST("ADS_imp_1_OUT".impter_42 AS FLOAT) - -0.30264305036051603) / 1.1304324059677955 AS scaler_42, (CAST("ADS_imp_1_OUT".impter_43 AS FLOAT) - -0.13264155681878692) / 0.8585260796845616 AS scaler_43, (CAST("ADS_imp_1_OUT".impter_44 AS FLOAT) - -0.1334054780733323) / 0.962489523355931 AS scaler_44, (CAST("ADS_imp_1_OUT".impter_45 AS FLOAT) - -0.0011436009702802522) / 0.9049370484050282 AS scaler_45, (CAST("ADS_imp_1_OUT".impter_46 AS FLOAT) - -0.05335157908923337) / 1.0610026457631268 AS scaler_46, (CAST("ADS_imp_1_OUT".impter_47 AS FLOAT) - 0.01714537002687063) / 0.9557097858300829 AS scaler_47, (CAST("ADS_imp_1_OUT".impter_48 AS FLOAT) - -0.059059449572612485) / 1.0894822012599163 AS scaler_48, (CAST("ADS_imp_1_OUT".impter_49 AS FLOAT) - -0.09528879968183994) / 0.8571475953382788 AS scaler_49, (CAST("ADS_imp_1_OUT".impter_50 AS FLOAT) - -0.15781363463365924) / 0.9919635867517769 AS scaler_50, (CAST("ADS_imp_1_OUT".impter_51 AS FLOAT) - -0.23794433392453432) / 1.0067503129721596 AS scaler_51, (CAST("ADS_imp_1_OUT".impter_52 AS FLOAT) - 0.13863850693032237) / 1.0279273388893944 AS scaler_52, (CAST("ADS_imp_1_OUT".impter_53 AS FLOAT) - -0.01699621991492915) / 0.974408927553762 AS scaler_53, (CAST("ADS_imp_1_OUT".impter_54 AS FLOAT) - 0.19701490003754304) / 0.8684920711659356 AS scaler_54, (CAST("ADS_imp_1_OUT".impter_55 AS FLOAT) - 0.05162990473238551) / 0.8943974752234072 AS scaler_55, (CAST("ADS_imp_1_OUT".impter_56 AS FLOAT) - -0.13453002098662553) / 0.9634839659318408 AS scaler_56, (CAST("ADS_imp_1_OUT".impter_57 AS FLOAT) - 0.14789370104559646) / 1.0615399626185422 AS scaler_57, (CAST("ADS_imp_1_OUT".impter_58 AS FLOAT) - -0.013142759438358454) / 0.9772015278495697 AS scaler_58, (CAST("ADS_imp_1_OUT".impter_59 AS FLOAT) - -0.09299162994657897) / 1.007175843550957 AS scaler_59, (CAST("ADS_imp_1_OUT".impter_60 AS FLOAT) - -0.24689492768975088) / 0.9237354128048836 AS scaler_60, (CAST("ADS_imp_1_OUT".impter_61 AS FLOAT) - 0.13499727108287438) / 1.1015843688177136 AS scaler_61, (CAST("ADS_imp_1_OUT".impter_62 AS FLOAT) - 0.0025544005507731047) / 1.0664451639404966 AS scaler_62, (CAST("ADS_imp_1_OUT".impter_63 AS FLOAT) - 0.12527368663465327) / 1.1035677221918443 AS scaler_63, (CAST("ADS_imp_1_OUT".impter_64 AS FLOAT) - -0.03739962296055886) / 1.0321694444223468 AS scaler_64, (CAST("ADS_imp_1_OUT".impter_65 AS FLOAT) - -0.02998869580177853) / 1.0714904800508076 AS scaler_65, (CAST("ADS_imp_1_OUT".impter_66 AS FLOAT) - -0.04286088516871345) / 1.1900007472884844 AS scaler_66, (CAST("ADS_imp_1_OUT".impter_67 AS FLOAT) - -0.1438347006651433) / 0.9838632536243364 AS scaler_67, (CAST("ADS_imp_1_OUT".impter_68 AS FLOAT) - -0.05269793910889183) / 1.133004109638514 AS scaler_68, (CAST("ADS_imp_1_OUT".impter_69 AS FLOAT) - 0.029267940271277926) / 0.9505911883818412 AS scaler_69, (CAST("ADS_imp_1_OUT".impter_70 AS FLOAT) - 0.10431080888322372) / 0.9124892804740817 AS scaler_70, (CAST("ADS_imp_1_OUT".impter_71 AS FLOAT) - -0.09619687433047125) / 1.0435263748552108 AS scaler_71, (CAST("ADS_imp_1_OUT".impter_72 AS FLOAT) - 0.0067333192983315745) / 1.0686226130046215 AS scaler_72, (CAST("ADS_imp_1_OUT".impter_73 AS FLOAT) - 0.03289665935367682) / 0.859185924601115 AS scaler_73, (CAST("ADS_imp_1_OUT".impter_74 AS FLOAT) - 0.08064277275460055) / 1.031072803981909 AS scaler_74, (CAST("ADS_imp_1_OUT".impter_75 AS FLOAT) - -0.10603556755491854) / 0.9757644491800123 AS scaler_75, (CAST("ADS_imp_1_OUT".impter_76 AS FLOAT) - 0.09489100148295918) / 0.9082861753672621 AS scaler_76, (CAST("ADS_imp_1_OUT".impter_77 AS FLOAT) - -0.19664887110008689) / 0.9570091111503233 AS scaler_77, (CAST("ADS_imp_1_OUT".impter_78 AS FLOAT) - 0.11652643514949582) / 0.8906993645060894 AS scaler_78, (CAST("ADS_imp_1_OUT".impter_79 AS FLOAT) - 0.19340218348071325) / 1.015190635438741 AS scaler_79, (CAST("ADS_imp_1_OUT".impter_80 AS FLOAT) - 0.11209709087907249) / 1.0005941329026147 AS scaler_80, (CAST("ADS_imp_1_OUT".impter_81 AS FLOAT) - 0.10709013621222807) / 0.9981990995405838 AS scaler_81, (CAST("ADS_imp_1_OUT".impter_82 AS FLOAT) - -0.01033042920922311) / 1.1261340687039605 AS scaler_82, (CAST("ADS_imp_1_OUT".impter_83 AS FLOAT) - 0.11026552104356717) / 1.0203631595796565 AS scaler_83, (CAST("ADS_imp_1_OUT".impter_84 AS FLOAT) - 0.01191634589453312) / 0.9520198315890641 AS scaler_84, (CAST("ADS_imp_1_OUT".impter_85 AS FLOAT) - 0.013369825695028714) / 1.0539650476886062 AS scaler_85, (CAST("ADS_imp_1_OUT".impter_86 AS FLOAT) - -0.1500512000702785) / 0.9981993823991944 AS scaler_86, (CAST("ADS_imp_1_OUT".impter_87 AS FLOAT) - -0.09022177579448487) / 0.9119054985661357 AS scaler_87, (CAST("ADS_imp_1_OUT".impter_88 AS FLOAT) - -0.16029625657228264) / 1.0530611443946694 AS scaler_88, (CAST("ADS_imp_1_OUT".impter_89 AS FLOAT) - -0.10127017293489289) / 1.0673088162334932 AS scaler_89, (CAST("ADS_imp_1_OUT".impter_90 AS FLOAT) - 0.3323543006292627) / 0.8517398608796033 AS scaler_90, (CAST("ADS_imp_1_OUT".impter_91 AS FLOAT) - 0.051731173060791114) / 0.9036571972083375 AS scaler_91, (CAST("ADS_imp_1_OUT".impter_92 AS FLOAT) - 0.1078879212202887) / 0.9679161746442023 AS scaler_92, (CAST("ADS_imp_1_OUT".impter_93 AS FLOAT) - 0.21454931874740585) / 0.9059278397749674 AS scaler_93, (CAST("ADS_imp_1_OUT".impter_94 AS FLOAT) - -0.16317337769942666) / 1.097718994991099 AS scaler_94, (CAST("ADS_imp_1_OUT".impter_95 AS FLOAT) - -0.2242384076879583) / 0.7859624368027274 AS scaler_95, (CAST("ADS_imp_1_OUT".impter_96 AS FLOAT) - -0.27695847565296017) / 1.000759742410346 AS scaler_96, (CAST("ADS_imp_1_OUT".impter_97 AS FLOAT) - 0.037863552135044866) / 0.9617491014855645 AS scaler_97, (CAST("ADS_imp_1_OUT".impter_98 AS FLOAT) - -0.02758852803141265) / 0.888578840707713 AS scaler_98, (CAST("ADS_imp_1_OUT".impter_99 AS FLOAT) - 0.1052877881031243) / 0.9881179437649864 AS scaler_99, (CAST("ADS_imp_1_OUT".impter_100 AS FLOAT) - 0.06640703380221318) / 0.8931321524560405 AS scaler_100, (CAST("ADS_imp_1_OUT".impter_101 AS FLOAT) - 0.06569930995842384) / 0.9367001351824711 AS scaler_101 
FROM "ADS_imp_1_OUT"), 
"DT_node_lookup" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_82 <= -0.17478495836257935) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_43 <= -0.4531792104244232) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_57 <= 0.6153919100761414) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_65 <= 0.05197323486208916) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_41 <= 0.43509984016418457) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_59 <= 0.8211808204650879) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= 1.5182774066925049) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values"."count" AS "count", "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS "count", 3 AS depth, 2 AS parent_id, -252.84102656467715 AS "Estimator" FROM rdb$database UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS "count", 3 AS depth, 2 AS parent_id, -401.01586877236855 AS "Estimator" FROM rdb$database UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS "count", 3 AS depth, 5 AS parent_id, -140.43801884125133 AS "Estimator" FROM rdb$database UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS "count", 3 AS depth, 5 AS parent_id, 111.22723579469624 AS "Estimator" FROM rdb$database UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 20 AS "count", 3 AS depth, 9 AS parent_id, 2.0020662492701846 AS "Estimator" FROM rdb$database UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS "count", 3 AS depth, 9 AS parent_id, 193.88392579467964 AS "Estimator" FROM rdb$database UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS "count", 3 AS depth, 12 AS parent_id, 236.29693349709683 AS "Estimator" FROM rdb$database UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 3 AS depth, 12 AS parent_id, -68.24444068793147 AS "Estimator" FROM rdb$database) AS "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".node_id AS node_id, "DT_node_data".feature AS feature, "DT_node_data".threshold AS threshold, "DT_node_data"."count" AS "count", "DT_node_data".depth AS depth, "DT_node_data".parent_id AS parent_id, "DT_node_data"."Estimator" AS "Estimator" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".node_id), 
"GB_Tree_0_0" AS 
(SELECT "DT_Output"."KEY" AS "KEY", "DT_Output"."Estimator" AS "Estimator" 
FROM "DT_Output"), 
"DT_node_lookup_1" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_82 <= -0.17478495836257935) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_43 <= -0.4531792104244232) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_57 <= 0.6153919100761414) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_65 <= -0.024759966880083084) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= 0.6375933885574341) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_65 <= -1.509153127670288) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_30 <= 0.8356819748878479) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_1" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values"."count" AS "count", "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS "count", 3 AS depth, 2 AS parent_id, -227.55692390820943 AS "Estimator" FROM rdb$database UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS "count", 3 AS depth, 2 AS parent_id, -360.91428189513175 AS "Estimator" FROM rdb$database UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS "count", 3 AS depth, 5 AS parent_id, -152.25652148339992 AS "Estimator" FROM rdb$database UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS "count", 3 AS depth, 5 AS parent_id, 77.73187383936153 AS "Estimator" FROM rdb$database UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 3 AS depth, 9 AS parent_id, -160.31951781815866 AS "Estimator" FROM rdb$database UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 31 AS "count", 3 AS depth, 9 AS parent_id, 160.54972594405706 AS "Estimator" FROM rdb$database UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS "count", 3 AS depth, 12 AS parent_id, -47.46336042041583 AS "Estimator" FROM rdb$database UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS "count", 3 AS depth, 12 AS parent_id, 102.703183089185 AS "Estimator" FROM rdb$database) AS "Values"), 
"DT_Output_1" AS 
(SELECT "DT_node_lookup_1"."KEY" AS "KEY", "DT_node_lookup_1".node_id_2 AS node_id_2, "DT_node_data_1".node_id AS node_id, "DT_node_data_1".feature AS feature, "DT_node_data_1".threshold AS threshold, "DT_node_data_1"."count" AS "count", "DT_node_data_1".depth AS depth, "DT_node_data_1".parent_id AS parent_id, "DT_node_data_1"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_1" LEFT OUTER JOIN "DT_node_data_1" ON "DT_node_lookup_1".node_id_2 = "DT_node_data_1".node_id), 
"GB_Tree_1_0" AS 
(SELECT "DT_Output_1"."KEY" AS "KEY", "DT_Output_1"."Estimator" AS "Estimator" 
FROM "DT_Output_1"), 
"DT_node_lookup_2" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_82 <= -0.17478495836257935) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_97 <= -0.2816576361656189) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_43 <= -0.0922880470752716) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_81 <= 0.5505832433700562) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_41 <= 0.43509984016418457) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_59 <= 0.8211808204650879) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= -1.1118205785751343) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_2" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values"."count" AS "count", "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS "count", 3 AS depth, 2 AS parent_id, -268.6966071831282 AS "Estimator" FROM rdb$database UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS "count", 3 AS depth, 2 AS parent_id, -132.286115276833 AS "Estimator" FROM rdb$database UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS "count", 3 AS depth, 5 AS parent_id, -66.30218273793687 AS "Estimator" FROM rdb$database UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS "count", 3 AS depth, 5 AS parent_id, 132.8221282945893 AS "Estimator" FROM rdb$database UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 20 AS "count", 3 AS depth, 9 AS parent_id, -4.5147952272318355 AS "Estimator" FROM rdb$database UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS "count", 3 AS depth, 9 AS parent_id, 162.23855532393944 AS "Estimator" FROM rdb$database UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS "count", 3 AS depth, 12 AS parent_id, 18.409364311488886 AS "Estimator" FROM rdb$database UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 14 AS "count", 3 AS depth, 12 AS parent_id, 211.7568683380744 AS "Estimator" FROM rdb$database) AS "Values"), 
"DT_Output_2" AS 
(SELECT "DT_node_lookup_2"."KEY" AS "KEY", "DT_node_lookup_2".node_id_2 AS node_id_2, "DT_node_data_2".node_id AS node_id, "DT_node_data_2".feature AS feature, "DT_node_data_2".threshold AS threshold, "DT_node_data_2"."count" AS "count", "DT_node_data_2".depth AS depth, "DT_node_data_2".parent_id AS parent_id, "DT_node_data_2"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_2" LEFT OUTER JOIN "DT_node_data_2" ON "DT_node_lookup_2".node_id_2 = "DT_node_data_2".node_id), 
"GB_Tree_2_0" AS 
(SELECT "DT_Output_2"."KEY" AS "KEY", "DT_Output_2"."Estimator" AS "Estimator" 
FROM "DT_Output_2"), 
"DT_node_lookup_3" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_82 <= -0.17478495836257935) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_43 <= -0.4531792104244232) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_65 <= 0.07095328718423843) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_65 <= 0.05197323486208916) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_96 <= -0.4484615921974182) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_22 <= 0.665626049041748) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_51 <= 1.2287237644195557) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_3" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values"."count" AS "count", "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS "count", 3 AS depth, 2 AS parent_id, -248.63223217136462 AS "Estimator" FROM rdb$database UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS "count", 3 AS depth, 2 AS parent_id, -138.64685597514327 AS "Estimator" FROM rdb$database UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS "count", 3 AS depth, 5 AS parent_id, -104.47481289543998 AS "Estimator" FROM rdb$database UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS "count", 3 AS depth, 5 AS parent_id, 88.63223618704266 AS "Estimator" FROM rdb$database UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS "count", 3 AS depth, 9 AS parent_id, 109.73803198644433 AS "Estimator" FROM rdb$database UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS "count", 3 AS depth, 9 AS parent_id, 259.2870627880886 AS "Estimator" FROM rdb$database UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 21 AS "count", 3 AS depth, 12 AS parent_id, -2.7785670851123636 AS "Estimator" FROM rdb$database UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS "count", 3 AS depth, 12 AS parent_id, 197.77273802049856 AS "Estimator" FROM rdb$database) AS "Values"), 
"DT_Output_3" AS 
(SELECT "DT_node_lookup_3"."KEY" AS "KEY", "DT_node_lookup_3".node_id_2 AS node_id_2, "DT_node_data_3".node_id AS node_id, "DT_node_data_3".feature AS feature, "DT_node_data_3".threshold AS threshold, "DT_node_data_3"."count" AS "count", "DT_node_data_3".depth AS depth, "DT_node_data_3".parent_id AS parent_id, "DT_node_data_3"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_3" LEFT OUTER JOIN "DT_node_data_3" ON "DT_node_lookup_3".node_id_2 = "DT_node_data_3".node_id), 
"GB_Tree_3_0" AS 
(SELECT "DT_Output_3"."KEY" AS "KEY", "DT_Output_3"."Estimator" AS "Estimator" 
FROM "DT_Output_3"), 
"DT_node_lookup_4" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_82 <= -0.07055003196001053) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_43 <= -0.4531792104244232) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_57 <= 0.6153919100761414) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_65 <= -0.024759966880083084) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_96 <= -0.39707985520362854) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_37 <= 0.6634410619735718) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_19 <= -0.27718600630760193) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_4" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values"."count" AS "count", "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS "count", 3 AS depth, 2 AS parent_id, -166.08417260866474 AS "Estimator" FROM rdb$database UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS "count", 3 AS depth, 2 AS parent_id, -273.0899697701693 AS "Estimator" FROM rdb$database UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS "count", 3 AS depth, 5 AS parent_id, -104.24398888014426 AS "Estimator" FROM rdb$database UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS "count", 3 AS depth, 5 AS parent_id, 53.03467027243673 AS "Estimator" FROM rdb$database UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS "count", 3 AS depth, 9 AS parent_id, 108.15211098937698 AS "Estimator" FROM rdb$database UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS "count", 3 AS depth, 9 AS parent_id, 256.10264878677424 AS "Estimator" FROM rdb$database UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS "count", 3 AS depth, 12 AS parent_id, -35.819061204929746 AS "Estimator" FROM rdb$database UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS "count", 3 AS depth, 12 AS parent_id, 101.20656778478092 AS "Estimator" FROM rdb$database) AS "Values"), 
"DT_Output_4" AS 
(SELECT "DT_node_lookup_4"."KEY" AS "KEY", "DT_node_lookup_4".node_id_2 AS node_id_2, "DT_node_data_4".node_id AS node_id, "DT_node_data_4".feature AS feature, "DT_node_data_4".threshold AS threshold, "DT_node_data_4"."count" AS "count", "DT_node_data_4".depth AS depth, "DT_node_data_4".parent_id AS parent_id, "DT_node_data_4"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_4" LEFT OUTER JOIN "DT_node_data_4" ON "DT_node_lookup_4".node_id_2 = "DT_node_data_4".node_id), 
"GB_Tree_4_0" AS 
(SELECT "DT_Output_4"."KEY" AS "KEY", "DT_Output_4"."Estimator" AS "Estimator" 
FROM "DT_Output_4"), 
"DT_node_lookup_5" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_82 <= -0.07055003196001053) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_43 <= -0.4531792104244232) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_98 <= 1.0108442306518555) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_65 <= 0.03369514271616936) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_96 <= -0.39707985520362854) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_37 <= 0.6634410619735718) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_36 <= 0.8252341747283936) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_5" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values"."count" AS "count", "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS "count", 3 AS depth, 2 AS parent_id, -147.87696104193762 AS "Estimator" FROM rdb$database UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS "count", 3 AS depth, 2 AS parent_id, -250.5773557107342 AS "Estimator" FROM rdb$database UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS "count", 3 AS depth, 5 AS parent_id, -86.96777144299705 AS "Estimator" FROM rdb$database UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS "count", 3 AS depth, 5 AS parent_id, 53.81725389069262 AS "Estimator" FROM rdb$database UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS "count", 3 AS depth, 9 AS parent_id, 97.33689989043926 AS "Estimator" FROM rdb$database UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS "count", 3 AS depth, 9 AS parent_id, 230.49238390809677 AS "Estimator" FROM rdb$database UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS "count", 3 AS depth, 12 AS parent_id, 61.954603928554725 AS "Estimator" FROM rdb$database UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS "count", 3 AS depth, 12 AS parent_id, -88.7201442903887 AS "Estimator" FROM rdb$database) AS "Values"), 
"DT_Output_5" AS 
(SELECT "DT_node_lookup_5"."KEY" AS "KEY", "DT_node_lookup_5".node_id_2 AS node_id_2, "DT_node_data_5".node_id AS node_id, "DT_node_data_5".feature AS feature, "DT_node_data_5".threshold AS threshold, "DT_node_data_5"."count" AS "count", "DT_node_data_5".depth AS depth, "DT_node_data_5".parent_id AS parent_id, "DT_node_data_5"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_5" LEFT OUTER JOIN "DT_node_data_5" ON "DT_node_lookup_5".node_id_2 = "DT_node_data_5".node_id), 
"GB_Tree_5_0" AS 
(SELECT "DT_Output_5"."KEY" AS "KEY", "DT_Output_5"."Estimator" AS "Estimator" 
FROM "DT_Output_5"), 
"DT_node_lookup_6" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_82 <= -0.07055003196001053) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_97 <= -0.3484189808368683) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_43 <= -0.0922880470752716) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_81 <= 0.5505832433700562) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_19 <= -0.4191170334815979) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_97 <= -0.8256058096885681) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_24 <= 0.8942134380340576) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_6" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values"."count" AS "count", "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS "count", 3 AS depth, 2 AS parent_id, -182.63471636324059 AS "Estimator" FROM rdb$database UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS "count", 3 AS depth, 2 AS parent_id, -86.71306885573706 AS "Estimator" FROM rdb$database UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS "count", 3 AS depth, 5 AS parent_id, -32.57971656242132 AS "Estimator" FROM rdb$database UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS "count", 3 AS depth, 5 AS parent_id, 99.9914994301132 AS "Estimator" FROM rdb$database UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS "count", 3 AS depth, 9 AS parent_id, -143.53177440111878 AS "Estimator" FROM rdb$database UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS "count", 3 AS depth, 9 AS parent_id, 37.91215350311193 AS "Estimator" FROM rdb$database UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS "count", 3 AS depth, 12 AS parent_id, 138.3715502781027 AS "Estimator" FROM rdb$database UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS "count", 3 AS depth, 12 AS parent_id, -47.4458269514782 AS "Estimator" FROM rdb$database) AS "Values"), 
"DT_Output_6" AS 
(SELECT "DT_node_lookup_6"."KEY" AS "KEY", "DT_node_lookup_6".node_id_2 AS node_id_2, "DT_node_data_6".node_id AS node_id, "DT_node_data_6".feature AS feature, "DT_node_data_6".threshold AS threshold, "DT_node_data_6"."count" AS "count", "DT_node_data_6".depth AS depth, "DT_node_data_6".parent_id AS parent_id, "DT_node_data_6"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_6" LEFT OUTER JOIN "DT_node_data_6" ON "DT_node_lookup_6".node_id_2 = "DT_node_data_6".node_id), 
"GB_Tree_6_0" AS 
(SELECT "DT_Output_6"."KEY" AS "KEY", "DT_Output_6"."Estimator" AS "Estimator" 
FROM "DT_Output_6"), 
"DT_node_lookup_7" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_82 <= -0.5905457735061646) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_73 <= 0.7834736704826355) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_44 <= 0.41072922945022583) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_20 <= -0.3028205931186676) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_41 <= 0.43509984016418457) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_70 <= 0.7948545217514038) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= 1.5182774066925049) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_7" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values"."count" AS "count", "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS "count", 3 AS depth, 2 AS parent_id, -145.43711457466674 AS "Estimator" FROM rdb$database UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS "count", 3 AS depth, 2 AS parent_id, -35.40083739231901 AS "Estimator" FROM rdb$database UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS "count", 3 AS depth, 5 AS parent_id, 24.89731543252883 AS "Estimator" FROM rdb$database UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 3 AS depth, 5 AS parent_id, 149.58226543185765 AS "Estimator" FROM rdb$database UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 22 AS "count", 3 AS depth, 9 AS parent_id, -25.5045863629451 AS "Estimator" FROM rdb$database UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS "count", 3 AS depth, 9 AS parent_id, 102.207549307282 AS "Estimator" FROM rdb$database UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS "count", 3 AS depth, 12 AS parent_id, 128.2519385213634 AS "Estimator" FROM rdb$database UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS "count", 3 AS depth, 12 AS parent_id, -18.353759863352334 AS "Estimator" FROM rdb$database) AS "Values"), 
"DT_Output_7" AS 
(SELECT "DT_node_lookup_7"."KEY" AS "KEY", "DT_node_lookup_7".node_id_2 AS node_id_2, "DT_node_data_7".node_id AS node_id, "DT_node_data_7".feature AS feature, "DT_node_data_7".threshold AS threshold, "DT_node_data_7"."count" AS "count", "DT_node_data_7".depth AS depth, "DT_node_data_7".parent_id AS parent_id, "DT_node_data_7"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_7" LEFT OUTER JOIN "DT_node_data_7" ON "DT_node_lookup_7".node_id_2 = "DT_node_data_7".node_id), 
"GB_Tree_7_0" AS 
(SELECT "DT_Output_7"."KEY" AS "KEY", "DT_Output_7"."Estimator" AS "Estimator" 
FROM "DT_Output_7"), 
"DT_node_lookup_8" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_82 <= -0.07055003196001053) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_65 <= -0.020848263055086136) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_43 <= -0.15556256473064423) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_43 <= -0.5887479782104492) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_61 <= -0.09043215215206146) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_43 <= -1.6150081157684326) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_64 <= 0.4282262325286865) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_8" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values"."count" AS "count", "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS "count", 3 AS depth, 2 AS parent_id, -157.19419874992286 AS "Estimator" FROM rdb$database UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS "count", 3 AS depth, 2 AS parent_id, -60.3809500717206 AS "Estimator" FROM rdb$database UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS "count", 3 AS depth, 5 AS parent_id, -73.98362499412102 AS "Estimator" FROM rdb$database UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS "count", 3 AS depth, 5 AS parent_id, 40.436523048835895 AS "Estimator" FROM rdb$database UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 3 AS depth, 9 AS parent_id, -74.86005898402577 AS "Estimator" FROM rdb$database UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 20 AS "count", 3 AS depth, 9 AS parent_id, 113.14956109235057 AS "Estimator" FROM rdb$database UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS "count", 3 AS depth, 12 AS parent_id, 47.664503383772654 AS "Estimator" FROM rdb$database UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS "count", 3 AS depth, 12 AS parent_id, -74.18404813706101 AS "Estimator" FROM rdb$database) AS "Values"), 
"DT_Output_8" AS 
(SELECT "DT_node_lookup_8"."KEY" AS "KEY", "DT_node_lookup_8".node_id_2 AS node_id_2, "DT_node_data_8".node_id AS node_id, "DT_node_data_8".feature AS feature, "DT_node_data_8".threshold AS threshold, "DT_node_data_8"."count" AS "count", "DT_node_data_8".depth AS depth, "DT_node_data_8".parent_id AS parent_id, "DT_node_data_8"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_8" LEFT OUTER JOIN "DT_node_data_8" ON "DT_node_lookup_8".node_id_2 = "DT_node_data_8".node_id), 
"GB_Tree_8_0" AS 
(SELECT "DT_Output_8"."KEY" AS "KEY", "DT_Output_8"."Estimator" AS "Estimator" 
FROM "DT_Output_8"), 
"DT_node_lookup_9" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_82 <= -0.07055003196001053) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_97 <= -0.3484189808368683) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_18 <= -0.4399261474609375) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_14 <= -1.1575462818145752) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_96 <= -0.39707985520362854) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_37 <= 0.6634410619735718) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_97 <= 1.1422433853149414) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_9" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values"."count" AS "count", "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS "count", 3 AS depth, 2 AS parent_id, -160.0552494150242 AS "Estimator" FROM rdb$database UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS "count", 3 AS depth, 2 AS parent_id, -83.4053948562265 AS "Estimator" FROM rdb$database UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS "count", 3 AS depth, 5 AS parent_id, -107.6707256102459 AS "Estimator" FROM rdb$database UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS "count", 3 AS depth, 5 AS parent_id, 21.68229919627524 AS "Estimator" FROM rdb$database UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS "count", 3 AS depth, 9 AS parent_id, 66.22304540348168 AS "Estimator" FROM rdb$database UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS "count", 3 AS depth, 9 AS parent_id, 171.99591624788687 AS "Estimator" FROM rdb$database UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 21 AS "count", 3 AS depth, 12 AS parent_id, -9.026621321357302 AS "Estimator" FROM rdb$database UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS "count", 3 AS depth, 12 AS parent_id, 153.64635202717568 AS "Estimator" FROM rdb$database) AS "Values"), 
"DT_Output_9" AS 
(SELECT "DT_node_lookup_9"."KEY" AS "KEY", "DT_node_lookup_9".node_id_2 AS node_id_2, "DT_node_data_9".node_id AS node_id, "DT_node_data_9".feature AS feature, "DT_node_data_9".threshold AS threshold, "DT_node_data_9"."count" AS "count", "DT_node_data_9".depth AS depth, "DT_node_data_9".parent_id AS parent_id, "DT_node_data_9"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_9" LEFT OUTER JOIN "DT_node_data_9" ON "DT_node_lookup_9".node_id_2 = "DT_node_data_9".node_id), 
"GB_Tree_9_0" AS 
(SELECT "DT_Output_9"."KEY" AS "KEY", "DT_Output_9"."Estimator" AS "Estimator" 
FROM "DT_Output_9"), 
"GB_Sum_B0" AS 
(SELECT "GB_Sum_esu_0"."KEY" AS "KEY", "GB_Sum_esu_0"."Estimator" AS "Estimator" 
FROM (SELECT "GB_Tree_0_0"."KEY" AS "KEY", "GB_Tree_0_0"."Estimator" AS "Estimator" 
FROM "GB_Tree_0_0" UNION ALL SELECT "GB_Tree_1_0"."KEY" AS "KEY", "GB_Tree_1_0"."Estimator" AS "Estimator" 
FROM "GB_Tree_1_0" UNION ALL SELECT "GB_Tree_2_0"."KEY" AS "KEY", "GB_Tree_2_0"."Estimator" AS "Estimator" 
FROM "GB_Tree_2_0" UNION ALL SELECT "GB_Tree_3_0"."KEY" AS "KEY", "GB_Tree_3_0"."Estimator" AS "Estimator" 
FROM "GB_Tree_3_0" UNION ALL SELECT "GB_Tree_4_0"."KEY" AS "KEY", "GB_Tree_4_0"."Estimator" AS "Estimator" 
FROM "GB_Tree_4_0" UNION ALL SELECT "GB_Tree_5_0"."KEY" AS "KEY", "GB_Tree_5_0"."Estimator" AS "Estimator" 
FROM "GB_Tree_5_0" UNION ALL SELECT "GB_Tree_6_0"."KEY" AS "KEY", "GB_Tree_6_0"."Estimator" AS "Estimator" 
FROM "GB_Tree_6_0" UNION ALL SELECT "GB_Tree_7_0"."KEY" AS "KEY", "GB_Tree_7_0"."Estimator" AS "Estimator" 
FROM "GB_Tree_7_0" UNION ALL SELECT "GB_Tree_8_0"."KEY" AS "KEY", "GB_Tree_8_0"."Estimator" AS "Estimator" 
FROM "GB_Tree_8_0" UNION ALL SELECT "GB_Tree_9_0"."KEY" AS "KEY", "GB_Tree_9_0"."Estimator" AS "Estimator" 
FROM "GB_Tree_9_0") AS "GB_Sum_esu_0"), 
"DT_node_lookup_10" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_43 <= -0.44576358795166016) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_90 <= 1.787703037261963) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_83 <= 0.8135848641395569) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_58 <= 0.08596460521221161) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_94 <= -0.8815765380859375) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_48 <= 0.5956310033798218) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_43 <= 1.6428461074829102) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_10" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values"."count" AS "count", "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS "count", 3 AS depth, 2 AS parent_id, -105.70169960582692 AS "Estimator" FROM rdb$database UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS "count", 3 AS depth, 2 AS parent_id, -14.012286209710851 AS "Estimator" FROM rdb$database UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 3 AS depth, 5 AS parent_id, 39.81136640417115 AS "Estimator" FROM rdb$database UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 3 AS depth, 5 AS parent_id, 155.01699967450787 AS "Estimator" FROM rdb$database UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS "count", 3 AS depth, 9 AS parent_id, -69.66580779283252 AS "Estimator" FROM rdb$database UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS "count", 3 AS depth, 9 AS parent_id, 24.479886218202687 AS "Estimator" FROM rdb$database UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 37 AS "count", 3 AS depth, 12 AS parent_id, 46.06291534740547 AS "Estimator" FROM rdb$database UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS "count", 3 AS depth, 12 AS parent_id, 184.43107173825283 AS "Estimator" FROM rdb$database) AS "Values"), 
"DT_Output_10" AS 
(SELECT "DT_node_lookup_10"."KEY" AS "KEY", "DT_node_lookup_10".node_id_2 AS node_id_2, "DT_node_data_10".node_id AS node_id, "DT_node_data_10".feature AS feature, "DT_node_data_10".threshold AS threshold, "DT_node_data_10"."count" AS "count", "DT_node_data_10".depth AS depth, "DT_node_data_10".parent_id AS parent_id, "DT_node_data_10"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_10" LEFT OUTER JOIN "DT_node_data_10" ON "DT_node_lookup_10".node_id_2 = "DT_node_data_10".node_id), 
"GB_Tree_10_0" AS 
(SELECT "DT_Output_10"."KEY" AS "KEY", "DT_Output_10"."Estimator" AS "Estimator" 
FROM "DT_Output_10"), 
"DT_node_lookup_11" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_97 <= -0.3168947398662567) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_82 <= -0.2599138915538788) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_71 <= 1.0448194742202759) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_19 <= -0.4882625937461853) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_81 <= -0.1350070685148239) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_55 <= -0.14240440726280212) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_22 <= 0.40323472023010254) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_11" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values"."count" AS "count", "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 14 AS "count", 3 AS depth, 2 AS parent_id, -85.51429185270395 AS "Estimator" FROM rdb$database UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS "count", 3 AS depth, 2 AS parent_id, -167.63542374683593 AS "Estimator" FROM rdb$database UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS "count", 3 AS depth, 5 AS parent_id, -92.37300794483369 AS "Estimator" FROM rdb$database UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS "count", 3 AS depth, 5 AS parent_id, 48.0373508303457 AS "Estimator" FROM rdb$database UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS "count", 3 AS depth, 9 AS parent_id, 41.398422030964845 AS "Estimator" FROM rdb$database UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS "count", 3 AS depth, 9 AS parent_id, -38.63231201479074 AS "Estimator" FROM rdb$database UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS "count", 3 AS depth, 12 AS parent_id, 27.3176001355772 AS "Estimator" FROM rdb$database UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS "count", 3 AS depth, 12 AS parent_id, 114.33811274292584 AS "Estimator" FROM rdb$database) AS "Values"), 
"DT_Output_11" AS 
(SELECT "DT_node_lookup_11"."KEY" AS "KEY", "DT_node_lookup_11".node_id_2 AS node_id_2, "DT_node_data_11".node_id AS node_id, "DT_node_data_11".feature AS feature, "DT_node_data_11".threshold AS threshold, "DT_node_data_11"."count" AS "count", "DT_node_data_11".depth AS depth, "DT_node_data_11".parent_id AS parent_id, "DT_node_data_11"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_11" LEFT OUTER JOIN "DT_node_data_11" ON "DT_node_lookup_11".node_id_2 = "DT_node_data_11".node_id), 
"GB_Tree_11_0" AS 
(SELECT "DT_Output_11"."KEY" AS "KEY", "DT_Output_11"."Estimator" AS "Estimator" 
FROM "DT_Output_11"), 
"DT_node_lookup_12" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_43 <= -0.44576358795166016) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_90 <= 1.787703037261963) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_83 <= 0.8135848641395569) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_57 <= 0.026934117078781128) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_94 <= -0.8815765380859375) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_39 <= 0.9335670471191406) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= 0.5701085329055786) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_12" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values"."count" AS "count", "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS "count", 3 AS depth, 2 AS parent_id, -88.60974980486985 AS "Estimator" FROM rdb$database UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS "count", 3 AS depth, 2 AS parent_id, -12.744809409235376 AS "Estimator" FROM rdb$database UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 3 AS depth, 5 AS parent_id, 128.08148843276447 AS "Estimator" FROM rdb$database UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 3 AS depth, 5 AS parent_id, 24.396418489461453 AS "Estimator" FROM rdb$database UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS "count", 3 AS depth, 9 AS parent_id, -49.001931036505745 AS "Estimator" FROM rdb$database UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 3 AS depth, 9 AS parent_id, 56.63786601424134 AS "Estimator" FROM rdb$database UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 29 AS "count", 3 AS depth, 12 AS parent_id, 28.179575262824848 AS "Estimator" FROM rdb$database UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS "count", 3 AS depth, 12 AS parent_id, 97.7534295213522 AS "Estimator" FROM rdb$database) AS "Values"), 
"DT_Output_12" AS 
(SELECT "DT_node_lookup_12"."KEY" AS "KEY", "DT_node_lookup_12".node_id_2 AS node_id_2, "DT_node_data_12".node_id AS node_id, "DT_node_data_12".feature AS feature, "DT_node_data_12".threshold AS threshold, "DT_node_data_12"."count" AS "count", "DT_node_data_12".depth AS depth, "DT_node_data_12".parent_id AS parent_id, "DT_node_data_12"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_12" LEFT OUTER JOIN "DT_node_data_12" ON "DT_node_lookup_12".node_id_2 = "DT_node_data_12".node_id), 
"GB_Tree_12_0" AS 
(SELECT "DT_Output_12"."KEY" AS "KEY", "DT_Output_12"."Estimator" AS "Estimator" 
FROM "DT_Output_12"), 
"DT_node_lookup_13" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_82 <= -0.5905457735061646) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_65 <= -0.005990596488118172) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_100 <= -0.5685037970542908) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_38 <= 0.6054120063781738) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_82 <= 1.3425536155700684) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_97 <= -0.8279357552528381) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_50 <= -1.344157338142395) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_13" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values"."count" AS "count", "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS "count", 3 AS depth, 2 AS parent_id, -126.75924001583564 AS "Estimator" FROM rdb$database UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS "count", 3 AS depth, 2 AS parent_id, -62.85697130244644 AS "Estimator" FROM rdb$database UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS "count", 3 AS depth, 5 AS parent_id, -20.930351632698404 AS "Estimator" FROM rdb$database UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS "count", 3 AS depth, 5 AS parent_id, 88.42260758197688 AS "Estimator" FROM rdb$database UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS "count", 3 AS depth, 9 AS parent_id, -71.32424126285527 AS "Estimator" FROM rdb$database UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 35 AS "count", 3 AS depth, 9 AS parent_id, 27.80278345761975 AS "Estimator" FROM rdb$database UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 3 AS depth, 12 AS parent_id, -23.88205873080682 AS "Estimator" FROM rdb$database UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS "count", 3 AS depth, 12 AS parent_id, 109.34348791177808 AS "Estimator" FROM rdb$database) AS "Values"), 
"DT_Output_13" AS 
(SELECT "DT_node_lookup_13"."KEY" AS "KEY", "DT_node_lookup_13".node_id_2 AS node_id_2, "DT_node_data_13".node_id AS node_id, "DT_node_data_13".feature AS feature, "DT_node_data_13".threshold AS threshold, "DT_node_data_13"."count" AS "count", "DT_node_data_13".depth AS depth, "DT_node_data_13".parent_id AS parent_id, "DT_node_data_13"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_13" LEFT OUTER JOIN "DT_node_data_13" ON "DT_node_lookup_13".node_id_2 = "DT_node_data_13".node_id), 
"GB_Tree_13_0" AS 
(SELECT "DT_Output_13"."KEY" AS "KEY", "DT_Output_13"."Estimator" AS "Estimator" 
FROM "DT_Output_13"), 
"DT_node_lookup_14" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_97 <= -0.3168947398662567) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_65 <= -0.02469797618687153) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_43 <= 0.11185505986213684) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_68 <= -0.02588743157684803) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_41 <= 0.6266658306121826) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_82 <= 0.6128180027008057) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_17 <= -0.1601659208536148) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_14" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values"."count" AS "count", "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS "count", 3 AS depth, 2 AS parent_id, -93.99300868549963 AS "Estimator" FROM rdb$database UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS "count", 3 AS depth, 2 AS parent_id, -24.414196642770957 AS "Estimator" FROM rdb$database UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS "count", 3 AS depth, 5 AS parent_id, -46.85619479898081 AS "Estimator" FROM rdb$database UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS "count", 3 AS depth, 5 AS parent_id, 43.98578648472594 AS "Estimator" FROM rdb$database UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 25 AS "count", 3 AS depth, 9 AS parent_id, -13.732619488024172 AS "Estimator" FROM rdb$database UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS "count", 3 AS depth, 9 AS parent_id, 54.38832187751443 AS "Estimator" FROM rdb$database UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS "count", 3 AS depth, 12 AS parent_id, 37.37067942773186 AS "Estimator" FROM rdb$database UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS "count", 3 AS depth, 12 AS parent_id, 119.40651264221049 AS "Estimator" FROM rdb$database) AS "Values"), 
"DT_Output_14" AS 
(SELECT "DT_node_lookup_14"."KEY" AS "KEY", "DT_node_lookup_14".node_id_2 AS node_id_2, "DT_node_data_14".node_id AS node_id, "DT_node_data_14".feature AS feature, "DT_node_data_14".threshold AS threshold, "DT_node_data_14"."count" AS "count", "DT_node_data_14".depth AS depth, "DT_node_data_14".parent_id AS parent_id, "DT_node_data_14"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_14" LEFT OUTER JOIN "DT_node_data_14" ON "DT_node_lookup_14".node_id_2 = "DT_node_data_14".node_id), 
"GB_Tree_14_0" AS 
(SELECT "DT_Output_14"."KEY" AS "KEY", "DT_Output_14"."Estimator" AS "Estimator" 
FROM "DT_Output_14"), 
"DT_node_lookup_15" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_43 <= -0.44576358795166016) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_90 <= 1.787703037261963) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_57 <= 0.6153919100761414) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_91 <= 0.7677145004272461) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_94 <= -0.8815765380859375) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_96 <= -0.631171703338623) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_46 <= -1.4811370372772217) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_15" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values"."count" AS "count", "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 20 AS "count", 3 AS depth, 2 AS parent_id, -46.29054098483074 AS "Estimator" FROM rdb$database UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS "count", 3 AS depth, 2 AS parent_id, -111.54646162817066 AS "Estimator" FROM rdb$database UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 3 AS depth, 5 AS parent_id, 20.549760243555752 AS "Estimator" FROM rdb$database UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 3 AS depth, 5 AS parent_id, 98.90015861055879 AS "Estimator" FROM rdb$database UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS "count", 3 AS depth, 9 AS parent_id, 13.135862842611658 AS "Estimator" FROM rdb$database UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS "count", 3 AS depth, 9 AS parent_id, -51.91086899502939 AS "Estimator" FROM rdb$database UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS "count", 3 AS depth, 12 AS parent_id, -33.21712489184561 AS "Estimator" FROM rdb$database UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 35 AS "count", 3 AS depth, 12 AS parent_id, 47.69542431288654 AS "Estimator" FROM rdb$database) AS "Values"), 
"DT_Output_15" AS 
(SELECT "DT_node_lookup_15"."KEY" AS "KEY", "DT_node_lookup_15".node_id_2 AS node_id_2, "DT_node_data_15".node_id AS node_id, "DT_node_data_15".feature AS feature, "DT_node_data_15".threshold AS threshold, "DT_node_data_15"."count" AS "count", "DT_node_data_15".depth AS depth, "DT_node_data_15".parent_id AS parent_id, "DT_node_data_15"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_15" LEFT OUTER JOIN "DT_node_data_15" ON "DT_node_lookup_15".node_id_2 = "DT_node_data_15".node_id), 
"GB_Tree_15_0" AS 
(SELECT "DT_Output_15"."KEY" AS "KEY", "DT_Output_15"."Estimator" AS "Estimator" 
FROM "DT_Output_15"), 
"GB_Sum_B1" AS 
(SELECT "GB_Sum_esu_1"."KEY" AS "KEY", "GB_Sum_esu_1"."Estimator" AS "Estimator" 
FROM (SELECT "GB_Tree_10_0"."KEY" AS "KEY", "GB_Tree_10_0"."Estimator" AS "Estimator" 
FROM "GB_Tree_10_0" UNION ALL SELECT "GB_Tree_11_0"."KEY" AS "KEY", "GB_Tree_11_0"."Estimator" AS "Estimator" 
FROM "GB_Tree_11_0" UNION ALL SELECT "GB_Tree_12_0"."KEY" AS "KEY", "GB_Tree_12_0"."Estimator" AS "Estimator" 
FROM "GB_Tree_12_0" UNION ALL SELECT "GB_Tree_13_0"."KEY" AS "KEY", "GB_Tree_13_0"."Estimator" AS "Estimator" 
FROM "GB_Tree_13_0" UNION ALL SELECT "GB_Tree_14_0"."KEY" AS "KEY", "GB_Tree_14_0"."Estimator" AS "Estimator" 
FROM "GB_Tree_14_0" UNION ALL SELECT "GB_Tree_15_0"."KEY" AS "KEY", "GB_Tree_15_0"."Estimator" AS "Estimator" 
FROM "GB_Tree_15_0") AS "GB_Sum_esu_1"), 
"GB_Sum_Union" AS 
(SELECT "GB_Sum_EnsembleUnion"."KEY" AS "KEY", "GB_Sum_EnsembleUnion"."Estimator" AS "Estimator" 
FROM (SELECT "GB_Sum_B0"."KEY" AS "KEY", "GB_Sum_B0"."Estimator" AS "Estimator" 
FROM "GB_Sum_B0" UNION ALL SELECT "GB_Sum_B1"."KEY" AS "KEY", "GB_Sum_B1"."Estimator" AS "Estimator" 
FROM "GB_Sum_B1") AS "GB_Sum_EnsembleUnion"), 
"GB_Sum_sum" AS 
(SELECT "T"."KEY" AS "KEY", "T"."Estimator" AS "Estimator" 
FROM (SELECT "GB_Sum_Union"."KEY" AS "KEY", sum(CAST("GB_Sum_Union"."Estimator" AS FLOAT)) AS "Estimator" 
FROM "GB_Sum_Union" GROUP BY "GB_Sum_Union"."KEY") AS "T")
 SELECT "GB_Sum_sum"."KEY" AS "KEY", -11.471614782695335 + 0.1 * "GB_Sum_sum"."Estimator" AS "Estimator" 
FROM "GB_Sum_sum"