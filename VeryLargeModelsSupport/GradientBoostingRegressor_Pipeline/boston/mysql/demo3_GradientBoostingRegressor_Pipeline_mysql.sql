-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2018

-- This SQL code can contain one or more statements, to be executed in the order they appear in this file.


-- Code For temporary table TMP_20180329232015_A3Y6SU_ADS_imp_1_OUT part 1/2. Create 


CREATE TEMPORARY TABLE `TMP_20180329232015_A3Y6SU_ADS_imp_1_OUT` (
	`KEY` BIGINT, 
	impter_2 DOUBLE, 
	impter_3 DOUBLE, 
	impter_4 DOUBLE, 
	impter_5 DOUBLE, 
	impter_6 DOUBLE, 
	impter_7 DOUBLE, 
	impter_8 DOUBLE, 
	impter_9 DOUBLE, 
	impter_10 DOUBLE, 
	impter_11 DOUBLE, 
	impter_12 DOUBLE, 
	impter_13 DOUBLE, 
	impter_14 DOUBLE
)

 ENGINE=MEMORY
-- Code For temporary table TMP_20180329232015_A3Y6SU_ADS_imp_1_OUT part 2/2. Populate

INSERT INTO `TMP_20180329232015_A3Y6SU_ADS_imp_1_OUT` (`KEY`, impter_2, impter_3, impter_4, impter_5, impter_6, impter_7, impter_8, impter_9, impter_10, impter_11, impter_12, impter_13, impter_14) SELECT `U`.`KEY`, `U`.impter_2, `U`.impter_3, `U`.impter_4, `U`.impter_5, `U`.impter_6, `U`.impter_7, `U`.impter_8, `U`.impter_9, `U`.impter_10, `U`.impter_11, `U`.impter_12, `U`.impter_13, `U`.impter_14 
FROM (SELECT `ADS_imp_1_OUT`.`KEY`, `ADS_imp_1_OUT`.impter_2, `ADS_imp_1_OUT`.impter_3, `ADS_imp_1_OUT`.impter_4, `ADS_imp_1_OUT`.impter_5, `ADS_imp_1_OUT`.impter_6, `ADS_imp_1_OUT`.impter_7, `ADS_imp_1_OUT`.impter_8, `ADS_imp_1_OUT`.impter_9, `ADS_imp_1_OUT`.impter_10, `ADS_imp_1_OUT`.impter_11, `ADS_imp_1_OUT`.impter_12, `ADS_imp_1_OUT`.impter_13, `ADS_imp_1_OUT`.impter_14 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_0` IS NULL) THEN 3.3688565346534656 ELSE `ADS`.`Feature_0` END AS impter_2, CASE WHEN (`ADS`.`Feature_1` IS NULL) THEN 12.113861386138614 ELSE `ADS`.`Feature_1` END AS impter_3, CASE WHEN (`ADS`.`Feature_2` IS NULL) THEN 10.983613861386127 ELSE `ADS`.`Feature_2` END AS impter_4, CASE WHEN (`ADS`.`Feature_3` IS NULL) THEN 0.07178217821782178 ELSE `ADS`.`Feature_3` END AS impter_5, CASE WHEN (`ADS`.`Feature_4` IS NULL) THEN 0.5541153465346542 ELSE `ADS`.`Feature_4` END AS impter_6, CASE WHEN (`ADS`.`Feature_5` IS NULL) THEN 6.299148514851482 ELSE `ADS`.`Feature_5` END AS impter_7, CASE WHEN (`ADS`.`Feature_6` IS NULL) THEN 67.85049504950491 ELSE `ADS`.`Feature_6` END AS impter_8, CASE WHEN (`ADS`.`Feature_7` IS NULL) THEN 3.8198420792079233 ELSE `ADS`.`Feature_7` END AS impter_9, CASE WHEN (`ADS`.`Feature_8` IS NULL) THEN 9.55940594059406 ELSE `ADS`.`Feature_8` END AS impter_10, CASE WHEN (`ADS`.`Feature_9` IS NULL) THEN 405.8019801980198 ELSE `ADS`.`Feature_9` END AS impter_11, CASE WHEN (`ADS`.`Feature_10` IS NULL) THEN 18.40915841584154 ELSE `ADS`.`Feature_10` END AS impter_12, CASE WHEN (`ADS`.`Feature_11` IS NULL) THEN 358.3797277227715 ELSE `ADS`.`Feature_11` END AS impter_13, CASE WHEN (`ADS`.`Feature_12` IS NULL) THEN 12.626584158415856 ELSE `ADS`.`Feature_12` END AS impter_14 
FROM boston AS `ADS`) AS `ADS_imp_1_OUT`) AS `U`
-- Code For temporary table TMP_20180329232015_LOL2YU_ADS_sca_2_OUT part 1/2. Create 


CREATE TEMPORARY TABLE `TMP_20180329232015_LOL2YU_ADS_sca_2_OUT` (
	`KEY` BIGINT, 
	scaler_2 DOUBLE, 
	scaler_3 DOUBLE, 
	scaler_4 DOUBLE, 
	scaler_5 DOUBLE, 
	scaler_6 DOUBLE, 
	scaler_7 DOUBLE, 
	scaler_8 DOUBLE, 
	scaler_9 DOUBLE, 
	scaler_10 DOUBLE, 
	scaler_11 DOUBLE, 
	scaler_12 DOUBLE, 
	scaler_13 DOUBLE, 
	scaler_14 DOUBLE
)

 ENGINE=MEMORY
-- Code For temporary table TMP_20180329232015_LOL2YU_ADS_sca_2_OUT part 2/2. Populate

INSERT INTO `TMP_20180329232015_LOL2YU_ADS_sca_2_OUT` (`KEY`, scaler_2, scaler_3, scaler_4, scaler_5, scaler_6, scaler_7, scaler_8, scaler_9, scaler_10, scaler_11, scaler_12, scaler_13, scaler_14) SELECT `U`.`KEY`, `U`.scaler_2, `U`.scaler_3, `U`.scaler_4, `U`.scaler_5, `U`.scaler_6, `U`.scaler_7, `U`.scaler_8, `U`.scaler_9, `U`.scaler_10, `U`.scaler_11, `U`.scaler_12, `U`.scaler_13, `U`.scaler_14 
FROM (SELECT `ADS_sca_2_OUT`.`KEY`, `ADS_sca_2_OUT`.scaler_2, `ADS_sca_2_OUT`.scaler_3, `ADS_sca_2_OUT`.scaler_4, `ADS_sca_2_OUT`.scaler_5, `ADS_sca_2_OUT`.scaler_6, `ADS_sca_2_OUT`.scaler_7, `ADS_sca_2_OUT`.scaler_8, `ADS_sca_2_OUT`.scaler_9, `ADS_sca_2_OUT`.scaler_10, `ADS_sca_2_OUT`.scaler_11, `ADS_sca_2_OUT`.scaler_12, `ADS_sca_2_OUT`.scaler_13, `ADS_sca_2_OUT`.scaler_14 
FROM (SELECT `ADS_imp_1_OUT`.`KEY` AS `KEY`, (`ADS_imp_1_OUT`.impter_2 - 3.3688565346534656) / 7.9935268095335426 AS scaler_2, (`ADS_imp_1_OUT`.impter_3 - 12.113861386138614) / 24.187656534977855 AS scaler_3, (`ADS_imp_1_OUT`.impter_4 - 10.983613861386127) / 6.8177472477399235 AS scaler_4, (`ADS_imp_1_OUT`.impter_5 - 0.07178217821782178) / 0.2581269011709685 AS scaler_5, (`ADS_imp_1_OUT`.impter_6 - 0.5541153465346542) / 0.11800809760824685 AS scaler_6, (`ADS_imp_1_OUT`.impter_7 - 6.299148514851482) / 0.7060417397996938 AS scaler_7, (`ADS_imp_1_OUT`.impter_8 - 67.85049504950491) / 28.107403181658597 AS scaler_8, (`ADS_imp_1_OUT`.impter_9 - 3.8198420792079233) / 2.0933726902675627 AS scaler_9, (`ADS_imp_1_OUT`.impter_10 - 9.55940594059406) / 8.728803783375893 AS scaler_10, (`ADS_imp_1_OUT`.impter_11 - 405.8019801980198) / 169.7858592930543 AS scaler_11, (`ADS_imp_1_OUT`.impter_12 - 18.40915841584154) / 2.166792648327246 AS scaler_12, (`ADS_imp_1_OUT`.impter_13 - 358.3797277227715) / 90.64691624336051 AS scaler_13, (`ADS_imp_1_OUT`.impter_14 - 12.626584158415856) / 7.167938324035357 AS scaler_14 
FROM `TMP_20180329232015_A3Y6SU_ADS_imp_1_OUT` AS `ADS_imp_1_OUT`) AS `ADS_sca_2_OUT`) AS `U`
-- Code For temporary table TMP_20180329232015_XJGB0L_GB_Sum_B0 part 1/2. Create 


CREATE TEMPORARY TABLE `TMP_20180329232015_XJGB0L_GB_Sum_B0` (
	`KEY` BIGINT, 
	`Estimator` DOUBLE
)

 ENGINE=MEMORY
-- Code For temporary table TMP_20180329232015_XJGB0L_GB_Sum_B0 part 2/2. Populate

INSERT INTO `TMP_20180329232015_XJGB0L_GB_Sum_B0` (`KEY`, `Estimator`) SELECT `U`.`KEY`, `U`.`Estimator` 
FROM (WITH `DT_node_lookup` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.scaler_7 <= 1.0075204372406006) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_14 <= 0.3004233241081238) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_7 <= 0.3439619541168213) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_6 <= 0.4142482876777649) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_7 <= 1.611592411994934) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_10 <= 0.7378552556037903) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_10 <= 0.7378552556037903) THEN 13 ELSE 14 END END END AS node_id_2 
FROM `TMP_20180329232015_LOL2YU_ADS_sca_2_OUT` AS `ADS_sca_2_OUT`), 
`DT_node_data` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 170 AS count, 3 AS depth, 2 AS parent_id, -0.8483721607454837 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 57 AS count, 3 AS depth, 2 AS parent_id, 5.778934340802502 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 47 AS count, 3 AS depth, 5 AS parent_id, -4.564066779018324 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 80 AS count, 3 AS depth, 5 AS parent_id, -9.700210396039603 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 21 AS count, 3 AS depth, 9 AS parent_id, 11.0210396039604 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS count, 3 AS depth, 9 AS parent_id, -3.3122937293729344 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 25 AS count, 3 AS depth, 12 AS parent_id, 23.381039603960392 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 3 AS depth, 12 AS parent_id, -0.6789603960396029 AS `Estimator`) AS `Values`), 
`DT_Output` AS 
(SELECT `DT_node_lookup`.`KEY` AS `KEY`, `DT_node_lookup`.node_id_2 AS node_id_2, `DT_node_data`.node_id AS node_id, `DT_node_data`.feature AS feature, `DT_node_data`.threshold AS threshold, `DT_node_data`.count AS count, `DT_node_data`.depth AS depth, `DT_node_data`.parent_id AS parent_id, `DT_node_data`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup` LEFT OUTER JOIN `DT_node_data` ON `DT_node_lookup`.node_id_2 = `DT_node_data`.node_id), 
`GB_Tree_0_0` AS 
(SELECT `DT_Output`.`KEY` AS `KEY`, `DT_Output`.`Estimator` AS `Estimator` 
FROM `DT_Output`), 
`DT_node_lookup_1` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.scaler_7 <= 0.7447880506515503) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_14 <= 0.30391108989715576) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_9 <= -1.1631908416748047) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_2 <= 0.30187469720840454) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_7 <= 1.611592411994934) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_6 <= 0.8887920379638672) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_2 <= -0.07839112728834152) THEN 13 ELSE 14 END END END AS node_id_2 
FROM `TMP_20180329232015_LOL2YU_ADS_sca_2_OUT` AS `ADS_sca_2_OUT`), 
`DT_node_data_1` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 4 AS count, 3 AS depth, 2 AS parent_id, 21.815194157496244 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 204 AS count, 3 AS depth, 2 AS parent_id, -0.2396463855716492 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 64 AS count, 3 AS depth, 5 AS parent_id, -4.805447210491492 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 60 AS count, 3 AS depth, 5 AS parent_id, -9.581208416719333 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 43 AS count, 3 AS depth, 9 AS parent_id, 7.94163458537708 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS count, 3 AS depth, 9 AS parent_id, -7.634800467546751 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 25 AS count, 3 AS depth, 12 AS parent_id, 21.04293564356436 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 3 AS depth, 12 AS parent_id, -0.6110643564356408 AS `Estimator`) AS `Values`), 
`DT_Output_1` AS 
(SELECT `DT_node_lookup_1`.`KEY` AS `KEY`, `DT_node_lookup_1`.node_id_2 AS node_id_2, `DT_node_data_1`.node_id AS node_id, `DT_node_data_1`.feature AS feature, `DT_node_data_1`.threshold AS threshold, `DT_node_data_1`.count AS count, `DT_node_data_1`.depth AS depth, `DT_node_data_1`.parent_id AS parent_id, `DT_node_data_1`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_1` LEFT OUTER JOIN `DT_node_data_1` ON `DT_node_lookup_1`.node_id_2 = `DT_node_data_1`.node_id), 
`GB_Tree_1_0` AS 
(SELECT `DT_Output_1`.`KEY` AS `KEY`, `DT_Output_1`.`Estimator` AS `Estimator` 
FROM `DT_Output_1`), 
`DT_node_lookup_2` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.scaler_14 <= -0.4048003852367401) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_7 <= 1.1923537254333496) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_9 <= -1.1153733730316162) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_7 <= 1.611592411994934) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_14 <= 1.0077396631240845) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_13 <= -2.0305681228637695) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_6 <= 0.4142482876777649) THEN 13 ELSE 14 END END END AS node_id_2 
FROM `TMP_20180329232015_LOL2YU_ADS_sca_2_OUT` AS `ADS_sca_2_OUT`), 
`DT_node_data_2` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS count, 3 AS depth, 2 AS parent_id, 25.103447187567056 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 125 AS count, 3 AS depth, 2 AS parent_id, 2.484205273659576 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 14 AS count, 3 AS depth, 5 AS parent_id, 10.139057899312366 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 26 AS count, 3 AS depth, 5 AS parent_id, 18.18908054074639 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 16 AS count, 3 AS depth, 9 AS parent_id, -7.359879756146922 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 160 AS count, 3 AS depth, 9 AS parent_id, -2.4218652961991904 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 17 AS count, 3 AS depth, 12 AS parent_id, -4.342721902787801 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 43 AS count, 3 AS depth, 12 AS parent_id, -9.80502580423983 AS `Estimator`) AS `Values`), 
`DT_Output_2` AS 
(SELECT `DT_node_lookup_2`.`KEY` AS `KEY`, `DT_node_lookup_2`.node_id_2 AS node_id_2, `DT_node_data_2`.node_id AS node_id, `DT_node_data_2`.feature AS feature, `DT_node_data_2`.threshold AS threshold, `DT_node_data_2`.count AS count, `DT_node_data_2`.depth AS depth, `DT_node_data_2`.parent_id AS parent_id, `DT_node_data_2`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_2` LEFT OUTER JOIN `DT_node_data_2` ON `DT_node_lookup_2`.node_id_2 = `DT_node_data_2`.node_id), 
`GB_Tree_2_0` AS 
(SELECT `DT_Output_2`.`KEY` AS `KEY`, `DT_Output_2`.`Estimator` AS `Estimator` 
FROM `DT_Output_2`), 
`DT_node_lookup_3` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.scaler_14 <= -0.6642892360687256) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_7 <= 1.611592411994934) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_7 <= 0.3439619541168213) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_13 <= 0.03911078721284866) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_14 <= 0.30391108989715576) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_9 <= -1.2385239601135254) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_2 <= 0.30187469720840454) THEN 13 ELSE 14 END END END AS node_id_2 
FROM `TMP_20180329232015_LOL2YU_ADS_sca_2_OUT` AS `ADS_sca_2_OUT`), 
`DT_node_data_3` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 40 AS count, 3 AS depth, 2 AS parent_id, 0.9564209312261512 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 60 AS count, 3 AS depth, 2 AS parent_id, 6.484731479394312 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 3 AS depth, 5 AS parent_id, -2.3688659748667185 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 25 AS count, 3 AS depth, 5 AS parent_id, 17.119734025133283 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS count, 3 AS depth, 9 AS parent_id, 22.814012685528617 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 149 AS count, 3 AS depth, 9 AS parent_id, -1.1245083937503437 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 64 AS count, 3 AS depth, 12 AS parent_id, -3.8619717533611166 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 63 AS count, 3 AS depth, 12 AS parent_id, -7.680560208782768 AS `Estimator`) AS `Values`), 
`DT_Output_3` AS 
(SELECT `DT_node_lookup_3`.`KEY` AS `KEY`, `DT_node_lookup_3`.node_id_2 AS node_id_2, `DT_node_data_3`.node_id AS node_id, `DT_node_data_3`.feature AS feature, `DT_node_data_3`.threshold AS threshold, `DT_node_data_3`.count AS count, `DT_node_data_3`.depth AS depth, `DT_node_data_3`.parent_id AS parent_id, `DT_node_data_3`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_3` LEFT OUTER JOIN `DT_node_data_3` ON `DT_node_lookup_3`.node_id_2 = `DT_node_data_3`.node_id), 
`GB_Tree_3_0` AS 
(SELECT `DT_Output_3`.`KEY` AS `KEY`, `DT_Output_3`.`Estimator` AS `Estimator` 
FROM `DT_Output_3`), 
`DT_node_lookup_4` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.scaler_14 <= -0.6642892360687256) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_7 <= 1.611592411994934) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_7 <= 0.3439619541168213) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_7 <= 3.474796772003174) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_14 <= 0.48248404264450073) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_9 <= -1.2385239601135254) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_6 <= 0.4142482876777649) THEN 13 ELSE 14 END END END AS node_id_2 
FROM `TMP_20180329232015_LOL2YU_ADS_sca_2_OUT` AS `ADS_sca_2_OUT`), 
`DT_node_data_4` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 40 AS count, 3 AS depth, 2 AS parent_id, 0.8607788381035378 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 60 AS count, 3 AS depth, 2 AS parent_id, 5.836258331454881 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 25 AS count, 3 AS depth, 5 AS parent_id, 15.407760622619955 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 3 AS depth, 5 AS parent_id, -2.1319793773800484 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS count, 3 AS depth, 9 AS parent_id, 20.532611416975755 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 164 AS count, 3 AS depth, 9 AS parent_id, -1.1975617354332486 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 37 AS count, 3 AS depth, 12 AS parent_id, -2.8272705763317787 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 75 AS count, 3 AS depth, 12 AS parent_id, -6.76966368664234 AS `Estimator`) AS `Values`), 
`DT_Output_4` AS 
(SELECT `DT_node_lookup_4`.`KEY` AS `KEY`, `DT_node_lookup_4`.node_id_2 AS node_id_2, `DT_node_data_4`.node_id AS node_id, `DT_node_data_4`.feature AS feature, `DT_node_data_4`.threshold AS threshold, `DT_node_data_4`.count AS count, `DT_node_data_4`.depth AS depth, `DT_node_data_4`.parent_id AS parent_id, `DT_node_data_4`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_4` LEFT OUTER JOIN `DT_node_data_4` ON `DT_node_lookup_4`.node_id_2 = `DT_node_data_4`.node_id), 
`GB_Tree_4_0` AS 
(SELECT `DT_Output_4`.`KEY` AS `KEY`, `DT_Output_4`.`Estimator` AS `Estimator` 
FROM `DT_Output_4`), 
`DT_node_lookup_5` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.scaler_7 <= 0.7447880506515503) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_14 <= 0.23345845937728882) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_9 <= -1.1631908416748047) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_9 <= -0.8675674796104431) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_7 <= 1.611592411994934) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_6 <= 0.8887920379638672) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_12 <= 0.5726628303527832) THEN 13 ELSE 14 END END END AS node_id_2 
FROM `TMP_20180329232015_LOL2YU_ADS_sca_2_OUT` AS `ADS_sca_2_OUT`), 
`DT_node_data_5` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 4 AS count, 3 AS depth, 2 AS parent_id, 15.394158637917217 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 192 AS count, 3 AS depth, 2 AS parent_id, -0.0862720289231399 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 65 AS count, 3 AS depth, 5 AS parent_id, -6.463808470986295 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 71 AS count, 3 AS depth, 5 AS parent_id, -2.8557554273301307 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 43 AS count, 3 AS depth, 9 AS parent_id, 5.81169995972859 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS count, 3 AS depth, 9 AS parent_id, -5.588383293837697 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 25 AS count, 3 AS depth, 12 AS parent_id, 13.866984560357956 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 3 AS depth, 12 AS parent_id, -1.9187814396420428 AS `Estimator`) AS `Values`), 
`DT_Output_5` AS 
(SELECT `DT_node_lookup_5`.`KEY` AS `KEY`, `DT_node_lookup_5`.node_id_2 AS node_id_2, `DT_node_data_5`.node_id AS node_id, `DT_node_data_5`.feature AS feature, `DT_node_data_5`.threshold AS threshold, `DT_node_data_5`.count AS count, `DT_node_data_5`.depth AS depth, `DT_node_data_5`.parent_id AS parent_id, `DT_node_data_5`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_5` LEFT OUTER JOIN `DT_node_data_5` ON `DT_node_lookup_5`.node_id_2 = `DT_node_data_5`.node_id), 
`GB_Tree_5_0` AS 
(SELECT `DT_Output_5`.`KEY` AS `KEY`, `DT_Output_5`.`Estimator` AS `Estimator` 
FROM `DT_Output_5`), 
`DT_node_lookup_6` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.scaler_14 <= -0.4048003852367401) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_7 <= 1.1640267372131348) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_9 <= -1.1153733730316162) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_12 <= -1.481063961982727) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_2 <= 0.31014764308929443) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_7 <= 0.9055434465408325) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_14 <= 1.0077396631240845) THEN 13 ELSE 14 END END END AS node_id_2 
FROM `TMP_20180329232015_LOL2YU_ADS_sca_2_OUT` AS `ADS_sca_2_OUT`), 
`DT_node_data_6` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS count, 3 AS depth, 2 AS parent_id, 17.75321200449003 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 124 AS count, 3 AS depth, 2 AS parent_id, 1.6591435216962147 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 18 AS count, 3 AS depth, 5 AS parent_id, 12.796594507036893 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 23 AS count, 3 AS depth, 5 AS parent_id, 8.266752204906313 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 160 AS count, 3 AS depth, 9 AS parent_id, -1.926331818462883 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS count, 3 AS depth, 9 AS parent_id, 6.092732573697336 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 37 AS count, 3 AS depth, 12 AS parent_id, -3.778369007299135 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 36 AS count, 3 AS depth, 12 AS parent_id, -6.937024667785336 AS `Estimator`) AS `Values`), 
`DT_Output_6` AS 
(SELECT `DT_node_lookup_6`.`KEY` AS `KEY`, `DT_node_lookup_6`.node_id_2 AS node_id_2, `DT_node_data_6`.node_id AS node_id, `DT_node_data_6`.feature AS feature, `DT_node_data_6`.threshold AS threshold, `DT_node_data_6`.count AS count, `DT_node_data_6`.depth AS depth, `DT_node_data_6`.parent_id AS parent_id, `DT_node_data_6`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_6` LEFT OUTER JOIN `DT_node_data_6` ON `DT_node_lookup_6`.node_id_2 = `DT_node_data_6`.node_id), 
`GB_Tree_6_0` AS 
(SELECT `DT_Output_6`.`KEY` AS `KEY`, `DT_Output_6`.`Estimator` AS `Estimator` 
FROM `DT_Output_6`), 
`DT_node_lookup_7` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.scaler_14 <= -1.0423617362976074) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_7 <= 1.567685604095459) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_7 <= 0.5096745491027832) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_9 <= -0.29253846406936646) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_14 <= -0.1306629776954651) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_7 <= 1.0981667041778564) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_6 <= 0.9777689576148987) THEN 13 ELSE 14 END END END AS node_id_2 
FROM `TMP_20180329232015_LOL2YU_ADS_sca_2_OUT` AS `ADS_sca_2_OUT`), 
`DT_node_data_7` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 8 AS count, 3 AS depth, 2 AS parent_id, 1.957581564285816 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 24 AS count, 3 AS depth, 2 AS parent_id, 6.914444562849308 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 8 AS count, 3 AS depth, 5 AS parent_id, 13.947995739948368 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 13 AS count, 3 AS depth, 5 AS parent_id, 10.023002777579354 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 141 AS count, 3 AS depth, 9 AS parent_id, 0.401168739240097 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 16 AS count, 3 AS depth, 9 AS parent_id, 6.656375521084428 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 116 AS count, 3 AS depth, 12 AS parent_id, -1.819744042370566 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 78 AS count, 3 AS depth, 12 AS parent_id, -4.813677124435982 AS `Estimator`) AS `Values`), 
`DT_Output_7` AS 
(SELECT `DT_node_lookup_7`.`KEY` AS `KEY`, `DT_node_lookup_7`.node_id_2 AS node_id_2, `DT_node_data_7`.node_id AS node_id, `DT_node_data_7`.feature AS feature, `DT_node_data_7`.threshold AS threshold, `DT_node_data_7`.count AS count, `DT_node_data_7`.depth AS depth, `DT_node_data_7`.parent_id AS parent_id, `DT_node_data_7`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_7` LEFT OUTER JOIN `DT_node_data_7` ON `DT_node_lookup_7`.node_id_2 = `DT_node_data_7`.node_id), 
`GB_Tree_7_0` AS 
(SELECT `DT_Output_7`.`KEY` AS `KEY`, `DT_Output_7`.`Estimator` AS `Estimator` 
FROM `DT_Output_7`), 
`DT_node_lookup_8` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.scaler_14 <= -0.6894010305404663) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_7 <= 1.611592411994934) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_14 <= -1.0765416622161865) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_7 <= 3.474796772003174) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_14 <= 1.0077396631240845) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_9 <= -1.2385239601135254) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_6 <= 0.4142482876777649) THEN 13 ELSE 14 END END END AS node_id_2 
FROM `TMP_20180329232015_LOL2YU_ADS_sca_2_OUT` AS `ADS_sca_2_OUT`), 
`DT_node_data_8` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 29 AS count, 3 AS depth, 2 AS parent_id, 5.346084613071413 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 65 AS count, 3 AS depth, 2 AS parent_id, 1.709044700366004 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 25 AS count, 3 AS depth, 5 AS parent_id, 10.325905698462392 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 3 AS depth, 5 AS parent_id, -3.219216068276914 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS count, 3 AS depth, 9 AS parent_id, 15.124496337113442 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 222 AS count, 3 AS depth, 9 AS parent_id, -1.1814593983125241 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 17 AS count, 3 AS depth, 12 AS parent_id, -2.192314557866565 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 43 AS count, 3 AS depth, 12 AS parent_id, -5.8546149874711295 AS `Estimator`) AS `Values`), 
`DT_Output_8` AS 
(SELECT `DT_node_lookup_8`.`KEY` AS `KEY`, `DT_node_lookup_8`.node_id_2 AS node_id_2, `DT_node_data_8`.node_id AS node_id, `DT_node_data_8`.feature AS feature, `DT_node_data_8`.threshold AS threshold, `DT_node_data_8`.count AS count, `DT_node_data_8`.depth AS depth, `DT_node_data_8`.parent_id AS parent_id, `DT_node_data_8`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_8` LEFT OUTER JOIN `DT_node_data_8` ON `DT_node_lookup_8`.node_id_2 = `DT_node_data_8`.node_id), 
`GB_Tree_8_0` AS 
(SELECT `DT_Output_8`.`KEY` AS `KEY`, `DT_Output_8`.`Estimator` AS `Estimator` 
FROM `DT_Output_8`), 
`DT_node_lookup_9` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.scaler_7 <= 0.32909029722213745) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_14 <= 0.7468557357788086) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_9 <= -1.2385239601135254) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_12 <= 0.5495872497558594) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_6 <= 0.8887920379638672) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_7 <= 1.611592411994934) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_8 <= 0.8680810928344727) THEN 13 ELSE 14 END END END AS node_id_2 
FROM `TMP_20180329232015_LOL2YU_ADS_sca_2_OUT` AS `ADS_sca_2_OUT`), 
`DT_node_data_9` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS count, 3 AS depth, 2 AS parent_id, 13.6120467034021 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 209 AS count, 3 AS depth, 2 AS parent_id, -0.9948407576948689 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 20 AS count, 3 AS depth, 5 AS parent_id, -1.3137722426799754 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 54 AS count, 3 AS depth, 5 AS parent_id, -4.870926422275086 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 82 AS count, 3 AS depth, 9 AS parent_id, 3.479706009560154 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 25 AS count, 3 AS depth, 9 AS parent_id, 9.293315128616154 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 4 AS count, 3 AS depth, 12 AS parent_id, -6.464029502259475 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 8 AS count, 3 AS depth, 12 AS parent_id, -2.726194547802579 AS `Estimator`) AS `Values`), 
`DT_Output_9` AS 
(SELECT `DT_node_lookup_9`.`KEY` AS `KEY`, `DT_node_lookup_9`.node_id_2 AS node_id_2, `DT_node_data_9`.node_id AS node_id, `DT_node_data_9`.feature AS feature, `DT_node_data_9`.threshold AS threshold, `DT_node_data_9`.count AS count, `DT_node_data_9`.depth AS depth, `DT_node_data_9`.parent_id AS parent_id, `DT_node_data_9`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_9` LEFT OUTER JOIN `DT_node_data_9` ON `DT_node_lookup_9`.node_id_2 = `DT_node_data_9`.node_id), 
`GB_Tree_9_0` AS 
(SELECT `DT_Output_9`.`KEY` AS `KEY`, `DT_Output_9`.`Estimator` AS `Estimator` 
FROM `DT_Output_9`)
 SELECT `GB_Sum_B0`.`KEY`, `GB_Sum_B0`.`Estimator` 
FROM (SELECT `GB_Sum_esu_0`.`KEY` AS `KEY`, `GB_Sum_esu_0`.`Estimator` AS `Estimator` 
FROM (SELECT `GB_Tree_0_0`.`KEY` AS `KEY`, `GB_Tree_0_0`.`Estimator` AS `Estimator` 
FROM `GB_Tree_0_0` UNION ALL SELECT `GB_Tree_1_0`.`KEY` AS `KEY`, `GB_Tree_1_0`.`Estimator` AS `Estimator` 
FROM `GB_Tree_1_0` UNION ALL SELECT `GB_Tree_2_0`.`KEY` AS `KEY`, `GB_Tree_2_0`.`Estimator` AS `Estimator` 
FROM `GB_Tree_2_0` UNION ALL SELECT `GB_Tree_3_0`.`KEY` AS `KEY`, `GB_Tree_3_0`.`Estimator` AS `Estimator` 
FROM `GB_Tree_3_0` UNION ALL SELECT `GB_Tree_4_0`.`KEY` AS `KEY`, `GB_Tree_4_0`.`Estimator` AS `Estimator` 
FROM `GB_Tree_4_0` UNION ALL SELECT `GB_Tree_5_0`.`KEY` AS `KEY`, `GB_Tree_5_0`.`Estimator` AS `Estimator` 
FROM `GB_Tree_5_0` UNION ALL SELECT `GB_Tree_6_0`.`KEY` AS `KEY`, `GB_Tree_6_0`.`Estimator` AS `Estimator` 
FROM `GB_Tree_6_0` UNION ALL SELECT `GB_Tree_7_0`.`KEY` AS `KEY`, `GB_Tree_7_0`.`Estimator` AS `Estimator` 
FROM `GB_Tree_7_0` UNION ALL SELECT `GB_Tree_8_0`.`KEY` AS `KEY`, `GB_Tree_8_0`.`Estimator` AS `Estimator` 
FROM `GB_Tree_8_0` UNION ALL SELECT `GB_Tree_9_0`.`KEY` AS `KEY`, `GB_Tree_9_0`.`Estimator` AS `Estimator` 
FROM `GB_Tree_9_0`) AS `GB_Sum_esu_0`) AS `GB_Sum_B0`) AS `U`
-- Code For temporary table TMP_20180329232015_VQ75A7_GB_Sum_B1 part 1/2. Create 


CREATE TEMPORARY TABLE `TMP_20180329232015_VQ75A7_GB_Sum_B1` (
	`KEY` BIGINT, 
	`Estimator` DOUBLE
)

 ENGINE=MEMORY
-- Code For temporary table TMP_20180329232015_VQ75A7_GB_Sum_B1 part 2/2. Populate

INSERT INTO `TMP_20180329232015_VQ75A7_GB_Sum_B1` (`KEY`, `Estimator`) SELECT `U`.`KEY`, `U`.`Estimator` 
FROM (WITH `DT_node_lookup_10` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.scaler_14 <= -0.6894010305404663) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_7 <= 1.1923537254333496) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_9 <= -1.1153733730316162) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_12 <= -1.481063961982727) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_6 <= 0.9777689576148987) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_7 <= 0.43248361349105835) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_2 <= 0.8133034706115723) THEN 13 ELSE 14 END END END AS node_id_2 
FROM `TMP_20180329232015_LOL2YU_ADS_sca_2_OUT` AS `ADS_sca_2_OUT`), 
`DT_node_data_10` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, 16.03042247150008 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 81 AS count, 3 AS depth, 2 AS parent_id, 1.821409955429755 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 16 AS count, 3 AS depth, 5 AS parent_id, 9.249655724557512 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 22 AS count, 3 AS depth, 5 AS parent_id, 5.393094924998318 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 183 AS count, 3 AS depth, 9 AS parent_id, -1.097192260753167 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 20 AS count, 3 AS depth, 9 AS parent_id, 2.9672046090800324 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 53 AS count, 3 AS depth, 12 AS parent_id, -2.320706273272657 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 28 AS count, 3 AS depth, 12 AS parent_id, -5.920274456589774 AS `Estimator`) AS `Values`), 
`DT_Output_10` AS 
(SELECT `DT_node_lookup_10`.`KEY` AS `KEY`, `DT_node_lookup_10`.node_id_2 AS node_id_2, `DT_node_data_10`.node_id AS node_id, `DT_node_data_10`.feature AS feature, `DT_node_data_10`.threshold AS threshold, `DT_node_data_10`.count AS count, `DT_node_data_10`.depth AS depth, `DT_node_data_10`.parent_id AS parent_id, `DT_node_data_10`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_10` LEFT OUTER JOIN `DT_node_data_10` ON `DT_node_lookup_10`.node_id_2 = `DT_node_data_10`.node_id), 
`GB_Tree_10_0` AS 
(SELECT `DT_Output_10`.`KEY` AS `KEY`, `DT_Output_10`.`Estimator` AS `Estimator` 
FROM `DT_Output_10`), 
`DT_node_lookup_11` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.scaler_14 <= -1.0423617362976074) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_9 <= -0.29253846406936646) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_8 <= -0.5247904062271118) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_8 <= -0.10675105452537537) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_12 <= 0.5726628303527832) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_7 <= 0.2582729458808899) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_9 <= -1.2650361061096191) THEN 13 ELSE 14 END END END AS node_id_2 
FROM `TMP_20180329232015_LOL2YU_ADS_sca_2_OUT` AS `ADS_sca_2_OUT`), 
`DT_node_data_11` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, 4.45893942446002 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 9 AS count, 3 AS depth, 2 AS parent_id, 10.679274034730696 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 37 AS count, 3 AS depth, 5 AS parent_id, 5.049649593801159 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 6 AS count, 3 AS depth, 5 AS parent_id, 0.1548636905527001 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 140 AS count, 3 AS depth, 9 AS parent_id, -0.34880846594333415 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 49 AS count, 3 AS depth, 9 AS parent_id, 3.0415724083043774 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS count, 3 AS depth, 12 AS parent_id, 7.66672001954712 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 159 AS count, 3 AS depth, 12 AS parent_id, -2.588318526317513 AS `Estimator`) AS `Values`), 
`DT_Output_11` AS 
(SELECT `DT_node_lookup_11`.`KEY` AS `KEY`, `DT_node_lookup_11`.node_id_2 AS node_id_2, `DT_node_data_11`.node_id AS node_id, `DT_node_data_11`.feature AS feature, `DT_node_data_11`.threshold AS threshold, `DT_node_data_11`.count AS count, `DT_node_data_11`.depth AS depth, `DT_node_data_11`.parent_id AS parent_id, `DT_node_data_11`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_11` LEFT OUTER JOIN `DT_node_data_11` ON `DT_node_lookup_11`.node_id_2 = `DT_node_data_11`.node_id), 
`GB_Tree_11_0` AS 
(SELECT `DT_Output_11`.`KEY` AS `KEY`, `DT_Output_11`.`Estimator` AS `Estimator` 
FROM `DT_Output_11`), 
`DT_node_lookup_12` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.scaler_7 <= 0.7136284708976746) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_14 <= 0.23345845937728882) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_9 <= -1.1631908416748047) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_12 <= 0.4803605079650879) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_6 <= 0.8887920379638672) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_7 <= 1.671787142753601) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_14 <= 0.6066480278968811) THEN 13 ELSE 14 END END END AS node_id_2 
FROM `TMP_20180329232015_LOL2YU_ADS_sca_2_OUT` AS `ADS_sca_2_OUT`), 
`DT_node_data_12` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 4 AS count, 3 AS depth, 2 AS parent_id, 9.963139704387164 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 190 AS count, 3 AS depth, 2 AS parent_id, -0.08025550887970825 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 41 AS count, 3 AS depth, 5 AS parent_id, -0.5914923147357894 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 94 AS count, 3 AS depth, 5 AS parent_id, -3.2386349549117512 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 47 AS count, 3 AS depth, 9 AS parent_id, 3.298261314433055 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 23 AS count, 3 AS depth, 9 AS parent_id, 7.22979934684516 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS count, 3 AS depth, 12 AS parent_id, -1.8596300631661944 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS count, 3 AS depth, 12 AS parent_id, -5.822959015412992 AS `Estimator`) AS `Values`), 
`DT_Output_12` AS 
(SELECT `DT_node_lookup_12`.`KEY` AS `KEY`, `DT_node_lookup_12`.node_id_2 AS node_id_2, `DT_node_data_12`.node_id AS node_id, `DT_node_data_12`.feature AS feature, `DT_node_data_12`.threshold AS threshold, `DT_node_data_12`.count AS count, `DT_node_data_12`.depth AS depth, `DT_node_data_12`.parent_id AS parent_id, `DT_node_data_12`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_12` LEFT OUTER JOIN `DT_node_data_12` ON `DT_node_lookup_12`.node_id_2 = `DT_node_data_12`.node_id), 
`GB_Tree_12_0` AS 
(SELECT `DT_Output_12`.`KEY` AS `KEY`, `DT_Output_12`.`Estimator` AS `Estimator` 
FROM `DT_Output_12`), 
`DT_node_lookup_13` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.scaler_14 <= -0.4048003852367401) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_7 <= 1.0981667041778564) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_9 <= -1.1153733730316162) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_12 <= -1.5272151231765747) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_9 <= -0.8386189937591553) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_13 <= -3.643143653869629) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_11 <= -0.732110321521759) THEN 13 ELSE 14 END END END AS node_id_2 
FROM `TMP_20180329232015_LOL2YU_ADS_sca_2_OUT` AS `ADS_sca_2_OUT`), 
`DT_node_data_13` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS count, 3 AS depth, 2 AS parent_id, 11.186096474641952 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 122 AS count, 3 AS depth, 2 AS parent_id, 0.7950189600237958 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 19 AS count, 3 AS depth, 5 AS parent_id, 6.685315566575873 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 24 AS count, 3 AS depth, 5 AS parent_id, 3.8872203528188716 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 7 AS count, 3 AS depth, 9 AS parent_id, -6.0146691120059375 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 74 AS count, 3 AS depth, 9 AS parent_id, -2.638999622315692 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 32 AS count, 3 AS depth, 12 AS parent_id, 0.7806885165178139 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 123 AS count, 3 AS depth, 12 AS parent_id, -1.1256769388015495 AS `Estimator`) AS `Values`), 
`DT_Output_13` AS 
(SELECT `DT_node_lookup_13`.`KEY` AS `KEY`, `DT_node_lookup_13`.node_id_2 AS node_id_2, `DT_node_data_13`.node_id AS node_id, `DT_node_data_13`.feature AS feature, `DT_node_data_13`.threshold AS threshold, `DT_node_data_13`.count AS count, `DT_node_data_13`.depth AS depth, `DT_node_data_13`.parent_id AS parent_id, `DT_node_data_13`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_13` LEFT OUTER JOIN `DT_node_data_13` ON `DT_node_lookup_13`.node_id_2 = `DT_node_data_13`.node_id), 
`GB_Tree_13_0` AS 
(SELECT `DT_Output_13`.`KEY` AS `KEY`, `DT_Output_13`.`Estimator` AS `Estimator` 
FROM `DT_Output_13`), 
`DT_node_lookup_14` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.scaler_7 <= 0.32909029722213745) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_14 <= 0.92124342918396) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_9 <= -1.2385239601135254) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_6 <= 0.4142482876777649) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_12 <= 0.4803605079650879) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_7 <= 1.671787142753601) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_14 <= -1.1323456764221191) THEN 13 ELSE 14 END END END AS node_id_2 
FROM `TMP_20180329232015_LOL2YU_ADS_sca_2_OUT` AS `ADS_sca_2_OUT`), 
`DT_node_data_14` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS count, 3 AS depth, 2 AS parent_id, 9.478965639279586 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 226 AS count, 3 AS depth, 2 AS parent_id, -0.6499702953553841 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 16 AS count, 3 AS depth, 5 AS parent_id, -1.233527298074414 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 41 AS count, 3 AS depth, 5 AS parent_id, -3.676696947229039 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 71 AS count, 3 AS depth, 9 AS parent_id, 2.5270905093722926 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 23 AS count, 3 AS depth, 9 AS parent_id, 5.959944169144661 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 3 AS depth, 12 AS parent_id, 11.244529202974093 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 24 AS count, 3 AS depth, 12 AS parent_id, -1.2220960075581273 AS `Estimator`) AS `Values`), 
`DT_Output_14` AS 
(SELECT `DT_node_lookup_14`.`KEY` AS `KEY`, `DT_node_lookup_14`.node_id_2 AS node_id_2, `DT_node_data_14`.node_id AS node_id, `DT_node_data_14`.feature AS feature, `DT_node_data_14`.threshold AS threshold, `DT_node_data_14`.count AS count, `DT_node_data_14`.depth AS depth, `DT_node_data_14`.parent_id AS parent_id, `DT_node_data_14`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_14` LEFT OUTER JOIN `DT_node_data_14` ON `DT_node_lookup_14`.node_id_2 = `DT_node_data_14`.node_id), 
`GB_Tree_14_0` AS 
(SELECT `DT_Output_14`.`KEY` AS `KEY`, `DT_Output_14`.`Estimator` AS `Estimator` 
FROM `DT_Output_14`), 
`DT_node_lookup_15` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.scaler_14 <= -0.7186981439590454) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_7 <= 1.611592411994934) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_11 <= -1.0796067714691162) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_12 <= -0.23498252034187317) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_14 <= 1.0077396631240845) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_9 <= -1.2385239601135254) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_6 <= 1.0243759155273438) THEN 13 ELSE 14 END END END AS node_id_2 
FROM `TMP_20180329232015_LOL2YU_ADS_sca_2_OUT` AS `ADS_sca_2_OUT`), 
`DT_node_data_15` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 9 AS count, 3 AS depth, 2 AS parent_id, 5.00442683276913 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 79 AS count, 3 AS depth, 2 AS parent_id, 1.1985510005554418 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 21 AS count, 3 AS depth, 5 AS parent_id, 5.943336196435719 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 4 AS count, 3 AS depth, 5 AS parent_id, 0.7774532662097009 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS count, 3 AS depth, 9 AS parent_id, 8.531069075351624 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 229 AS count, 3 AS depth, 9 AS parent_id, -0.5351569767333489 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 27 AS count, 3 AS depth, 12 AS parent_id, -1.4468251981974587 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 33 AS count, 3 AS depth, 12 AS parent_id, -3.730065268370492 AS `Estimator`) AS `Values`), 
`DT_Output_15` AS 
(SELECT `DT_node_lookup_15`.`KEY` AS `KEY`, `DT_node_lookup_15`.node_id_2 AS node_id_2, `DT_node_data_15`.node_id AS node_id, `DT_node_data_15`.feature AS feature, `DT_node_data_15`.threshold AS threshold, `DT_node_data_15`.count AS count, `DT_node_data_15`.depth AS depth, `DT_node_data_15`.parent_id AS parent_id, `DT_node_data_15`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_15` LEFT OUTER JOIN `DT_node_data_15` ON `DT_node_lookup_15`.node_id_2 = `DT_node_data_15`.node_id), 
`GB_Tree_15_0` AS 
(SELECT `DT_Output_15`.`KEY` AS `KEY`, `DT_Output_15`.`Estimator` AS `Estimator` 
FROM `DT_Output_15`)
 SELECT `GB_Sum_B1`.`KEY`, `GB_Sum_B1`.`Estimator` 
FROM (SELECT `GB_Sum_esu_1`.`KEY` AS `KEY`, `GB_Sum_esu_1`.`Estimator` AS `Estimator` 
FROM (SELECT `GB_Tree_10_0`.`KEY` AS `KEY`, `GB_Tree_10_0`.`Estimator` AS `Estimator` 
FROM `GB_Tree_10_0` UNION ALL SELECT `GB_Tree_11_0`.`KEY` AS `KEY`, `GB_Tree_11_0`.`Estimator` AS `Estimator` 
FROM `GB_Tree_11_0` UNION ALL SELECT `GB_Tree_12_0`.`KEY` AS `KEY`, `GB_Tree_12_0`.`Estimator` AS `Estimator` 
FROM `GB_Tree_12_0` UNION ALL SELECT `GB_Tree_13_0`.`KEY` AS `KEY`, `GB_Tree_13_0`.`Estimator` AS `Estimator` 
FROM `GB_Tree_13_0` UNION ALL SELECT `GB_Tree_14_0`.`KEY` AS `KEY`, `GB_Tree_14_0`.`Estimator` AS `Estimator` 
FROM `GB_Tree_14_0` UNION ALL SELECT `GB_Tree_15_0`.`KEY` AS `KEY`, `GB_Tree_15_0`.`Estimator` AS `Estimator` 
FROM `GB_Tree_15_0`) AS `GB_Sum_esu_1`) AS `GB_Sum_B1`) AS `U`
-- Code For temporary table TMP_20180329232015_5Y9VBC_GB_Sum_Union part 1/2. Create 


CREATE TEMPORARY TABLE `TMP_20180329232015_5Y9VBC_GB_Sum_Union` (
	`KEY` BIGINT, 
	`Estimator` DOUBLE
)

 ENGINE=MEMORY
-- Code For temporary table TMP_20180329232015_5Y9VBC_GB_Sum_Union part 2/2. Populate

INSERT INTO `TMP_20180329232015_5Y9VBC_GB_Sum_Union` (`KEY`, `Estimator`) SELECT `U`.`KEY`, `U`.`Estimator` 
FROM (SELECT `GB_Sum_Union`.`KEY`, `GB_Sum_Union`.`Estimator` 
FROM (SELECT `GB_Sum_EnsembleUnion`.`KEY` AS `KEY`, `GB_Sum_EnsembleUnion`.`Estimator` AS `Estimator` 
FROM (SELECT `GB_Sum_B0`.`KEY` AS `KEY`, `GB_Sum_B0`.`Estimator` AS `Estimator` 
FROM `TMP_20180329232015_XJGB0L_GB_Sum_B0` AS `GB_Sum_B0` UNION ALL SELECT `GB_Sum_B1`.`KEY` AS `KEY`, `GB_Sum_B1`.`Estimator` AS `Estimator` 
FROM `TMP_20180329232015_VQ75A7_GB_Sum_B1` AS `GB_Sum_B1`) AS `GB_Sum_EnsembleUnion`) AS `GB_Sum_Union`) AS `U`

-- Model deployment code

WITH `GB_Sum_sum` AS 
(SELECT `T`.`KEY` AS `KEY`, `T`.`Estimator` AS `Estimator` 
FROM (SELECT `GB_Sum_Union`.`KEY` AS `KEY`, sum(`GB_Sum_Union`.`Estimator`) AS `Estimator` 
FROM `TMP_20180329232015_5Y9VBC_GB_Sum_Union` AS `GB_Sum_Union` GROUP BY `GB_Sum_Union`.`KEY`) AS `T`)
 SELECT `GB_Sum_sum`.`KEY` AS `KEY`, 22.5789603960396 + 0.1 * `GB_Sum_sum`.`Estimator` AS `Estimator` 
FROM `GB_Sum_sum`