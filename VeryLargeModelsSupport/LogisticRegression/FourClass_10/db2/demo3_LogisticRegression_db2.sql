-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2018

-- This SQL code can contain one or more statements, to be executed in the order they appear in this file.



-- Model deployment code

WITH linear_model_cte AS 
(SELECT "ADS"."KEY" AS "KEY", 0.3294528409228701 * "ADS"."Feature_0" + -0.37825071189605436 * "ADS"."Feature_1" + -0.047036817239428395 * "ADS"."Feature_2" + -0.3207878919257694 * "ADS"."Feature_3" + 0.7845069893551401 * "ADS"."Feature_4" + -0.3507213301690905 * "ADS"."Feature_5" + 0.1168431923441006 * "ADS"."Feature_6" + 0.46751227708284315 * "ADS"."Feature_7" + 0.5412833866275386 * "ADS"."Feature_8" + 0.09459297650309517 * "ADS"."Feature_9" + -1.147159790549458 AS "Score_0", -0.02709454295052963 * "ADS"."Feature_0" + 0.07589611151808386 * "ADS"."Feature_1" + 0.2930513596805264 * "ADS"."Feature_2" + 0.35577789437533364 * "ADS"."Feature_3" + 0.38395528319435085 * "ADS"."Feature_4" + -0.04014747767015479 * "ADS"."Feature_5" + -0.13729361459345182 * "ADS"."Feature_6" + 0.2179164837673063 * "ADS"."Feature_7" + -0.27514356549577984 * "ADS"."Feature_8" + 0.014649731117628498 * "ADS"."Feature_9" + -1.706122580820191 AS "Score_1", -0.25590081902492184 * "ADS"."Feature_0" + -0.4269614394184402 * "ADS"."Feature_1" + -0.6421817035066499 * "ADS"."Feature_2" + -0.4525556326059671 * "ADS"."Feature_3" + -0.7839554217212295 * "ADS"."Feature_4" + 0.002082399620360354 * "ADS"."Feature_5" + 0.06955371333715396 * "ADS"."Feature_6" + 0.5224435199556786 * "ADS"."Feature_7" + 0.4625730000458537 * "ADS"."Feature_8" + -0.07675814541731034 * "ADS"."Feature_9" + -1.4659221431005895 AS "Score_2", -0.23076032156258636 * "ADS"."Feature_0" + 0.8727693313269381 * "ADS"."Feature_1" + 0.011199260453391539 * "ADS"."Feature_2" + 0.28141036346962206 * "ADS"."Feature_3" + -0.3577256879299102 * "ADS"."Feature_4" + 0.38889501005415483 * "ADS"."Feature_5" + 0.022680344438942342 * "ADS"."Feature_6" + -1.0184280715588783 * "ADS"."Feature_7" + -0.47993945944007094 * "ADS"."Feature_8" + -0.1713807867074237 * "ADS"."Feature_9" + -2.2203508314388123 AS "Score_3" 
FROM "FOURCLASS_10" AS "ADS"), 
orig_cte AS 
(SELECT linear_model_cte."KEY" AS "KEY", linear_model_cte."Score_0" AS "Score_0", linear_model_cte."Score_1" AS "Score_1", linear_model_cte."Score_2" AS "Score_2", linear_model_cte."Score_3" AS "Score_3", (1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte."Score_0"), 100.0)))) / (1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte."Score_0"), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte."Score_1"), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte."Score_2"), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte."Score_3"), 100.0)))) AS "Proba_0", (1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte."Score_1"), 100.0)))) / (1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte."Score_0"), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte."Score_1"), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte."Score_2"), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte."Score_3"), 100.0)))) AS "Proba_1", (1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte."Score_2"), 100.0)))) / (1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte."Score_0"), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte."Score_1"), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte."Score_2"), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte."Score_3"), 100.0)))) AS "Proba_2", (1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte."Score_3"), 100.0)))) / (1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte."Score_0"), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte."Score_1"), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte."Score_2"), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte."Score_3"), 100.0)))) AS "Proba_3", CAST(NULL AS DOUBLE) AS "LogProba_0", CAST(NULL AS DOUBLE) AS "LogProba_1", CAST(NULL AS DOUBLE) AS "LogProba_2", CAST(NULL AS DOUBLE) AS "LogProba_3", NULL AS "Decision", CAST(NULL AS DOUBLE) AS "DecisionProba" 
FROM linear_model_cte), 
score_class_union AS 
(SELECT scu."KEY_u" AS "KEY_u", scu.class AS class, scu."LogProba" AS "LogProba", scu."Proba" AS "Proba", scu."Score" AS "Score" 
FROM (SELECT orig_cte."KEY" AS "KEY_u", 0 AS class, orig_cte."LogProba_0" AS "LogProba", orig_cte."Proba_0" AS "Proba", orig_cte."Score_0" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 1 AS class, orig_cte."LogProba_1" AS "LogProba", orig_cte."Proba_1" AS "Proba", orig_cte."Score_1" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 2 AS class, orig_cte."LogProba_2" AS "LogProba", orig_cte."Proba_2" AS "Proba", orig_cte."Score_2" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 3 AS class, orig_cte."LogProba_3" AS "LogProba", orig_cte."Proba_3" AS "Proba", orig_cte."Score_3" AS "Score" 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte."KEY" AS "KEY", orig_cte."Score_0" AS "Score_0", orig_cte."Score_1" AS "Score_1", orig_cte."Score_2" AS "Score_2", orig_cte."Score_3" AS "Score_3", orig_cte."Proba_0" AS "Proba_0", orig_cte."Proba_1" AS "Proba_1", orig_cte."Proba_2" AS "Proba_2", orig_cte."Proba_3" AS "Proba_3", orig_cte."LogProba_0" AS "LogProba_0", orig_cte."LogProba_1" AS "LogProba_1", orig_cte."LogProba_2" AS "LogProba_2", orig_cte."LogProba_3" AS "LogProba_3", orig_cte."Decision" AS "Decision", orig_cte."DecisionProba" AS "DecisionProba", max_select."KEY_m" AS "KEY_m", max_select."max_Proba" AS "max_Proba" 
FROM orig_cte LEFT OUTER JOIN (SELECT score_class_union."KEY_u" AS "KEY_m", max(score_class_union."Proba") AS "max_Proba" 
FROM score_class_union GROUP BY score_class_union."KEY_u") AS max_select ON orig_cte."KEY" = max_select."KEY_m"), 
union_with_max AS 
(SELECT score_class_union."KEY_u" AS "KEY_u", score_class_union.class AS class, score_class_union."LogProba" AS "LogProba", score_class_union."Proba" AS "Proba", score_class_union."Score" AS "Score", score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Score_2" AS "Score_2", score_max."Score_3" AS "Score_3", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."Proba_2" AS "Proba_2", score_max."Proba_3" AS "Proba_3", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."LogProba_2" AS "LogProba_2", score_max."LogProba_3" AS "LogProba_3", score_max."Decision" AS "Decision", score_max."DecisionProba" AS "DecisionProba", score_max."KEY_m" AS "KEY_m", score_max."max_Proba" AS "max_Proba" 
FROM score_class_union LEFT OUTER JOIN score_max ON score_class_union."KEY_u" = score_max."KEY"), 
arg_max_cte AS 
(SELECT score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Score_2" AS "Score_2", score_max."Score_3" AS "Score_3", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."Proba_2" AS "Proba_2", score_max."Proba_3" AS "Proba_3", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."LogProba_2" AS "LogProba_2", score_max."LogProba_3" AS "LogProba_3", score_max."Decision" AS "Decision", score_max."DecisionProba" AS "DecisionProba", score_max."KEY_m" AS "KEY_m", score_max."max_Proba" AS "max_Proba", "arg_max_t_Proba"."KEY_Proba" AS "KEY_Proba", "arg_max_t_Proba"."arg_max_Proba" AS "arg_max_Proba" 
FROM score_max LEFT OUTER JOIN (SELECT union_with_max."KEY" AS "KEY_Proba", min(union_with_max.class) AS "arg_max_Proba" 
FROM union_with_max 
WHERE union_with_max."max_Proba" <= union_with_max."Proba" GROUP BY union_with_max."KEY") AS "arg_max_t_Proba" ON score_max."KEY" = "arg_max_t_Proba"."KEY_Proba")
 SELECT arg_max_cte."KEY" AS "KEY", arg_max_cte."Score_0" AS "Score_0", arg_max_cte."Score_1" AS "Score_1", arg_max_cte."Score_2" AS "Score_2", arg_max_cte."Score_3" AS "Score_3", arg_max_cte."Proba_0" AS "Proba_0", arg_max_cte."Proba_1" AS "Proba_1", arg_max_cte."Proba_2" AS "Proba_2", arg_max_cte."Proba_3" AS "Proba_3", CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN ln(arg_max_cte."Proba_0") ELSE -1.79769313486231e+308 END AS "LogProba_0", CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN ln(arg_max_cte."Proba_1") ELSE -1.79769313486231e+308 END AS "LogProba_1", CASE WHEN (arg_max_cte."Proba_2" IS NULL OR arg_max_cte."Proba_2" > 0.0) THEN ln(arg_max_cte."Proba_2") ELSE -1.79769313486231e+308 END AS "LogProba_2", CASE WHEN (arg_max_cte."Proba_3" IS NULL OR arg_max_cte."Proba_3" > 0.0) THEN ln(arg_max_cte."Proba_3") ELSE -1.79769313486231e+308 END AS "LogProba_3", arg_max_cte."arg_max_Proba" AS "Decision", arg_max_cte."max_Proba" AS "DecisionProba" 
FROM arg_max_cte