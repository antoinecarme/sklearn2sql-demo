-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2018

-- This SQL code can contain one or more statements, to be executed in the order they appear in this file.


-- Code For temporary table 33420_PBFR8Z_ADS_IMP_1_OUT part 1/2. Create 


CREATE GLOBAL TEMPORARY TABLE "33420_PBFR8Z_ADS_IMP_1_OUT" (
	"KEY" NUMBER(19), 
	impter_2 BINARY_DOUBLE, 
	impter_3 BINARY_DOUBLE, 
	impter_4 BINARY_DOUBLE, 
	impter_5 BINARY_DOUBLE, 
	impter_6 BINARY_DOUBLE, 
	impter_7 BINARY_DOUBLE, 
	impter_8 BINARY_DOUBLE, 
	impter_9 BINARY_DOUBLE, 
	impter_10 BINARY_DOUBLE, 
	impter_11 BINARY_DOUBLE, 
	impter_12 BINARY_DOUBLE, 
	impter_13 BINARY_DOUBLE, 
	impter_14 BINARY_DOUBLE, 
	impter_15 BINARY_DOUBLE, 
	impter_16 BINARY_DOUBLE, 
	impter_17 BINARY_DOUBLE, 
	impter_18 BINARY_DOUBLE, 
	impter_19 BINARY_DOUBLE, 
	impter_20 BINARY_DOUBLE, 
	impter_21 BINARY_DOUBLE, 
	impter_22 BINARY_DOUBLE, 
	impter_23 BINARY_DOUBLE, 
	impter_24 BINARY_DOUBLE, 
	impter_25 BINARY_DOUBLE, 
	impter_26 BINARY_DOUBLE, 
	impter_27 BINARY_DOUBLE, 
	impter_28 BINARY_DOUBLE, 
	impter_29 BINARY_DOUBLE, 
	impter_30 BINARY_DOUBLE, 
	impter_31 BINARY_DOUBLE, 
	impter_32 BINARY_DOUBLE, 
	impter_33 BINARY_DOUBLE, 
	impter_34 BINARY_DOUBLE, 
	impter_35 BINARY_DOUBLE, 
	impter_36 BINARY_DOUBLE, 
	impter_37 BINARY_DOUBLE, 
	impter_38 BINARY_DOUBLE, 
	impter_39 BINARY_DOUBLE, 
	impter_40 BINARY_DOUBLE, 
	impter_41 BINARY_DOUBLE, 
	impter_42 BINARY_DOUBLE, 
	impter_43 BINARY_DOUBLE, 
	impter_44 BINARY_DOUBLE, 
	impter_45 BINARY_DOUBLE, 
	impter_46 BINARY_DOUBLE, 
	impter_47 BINARY_DOUBLE, 
	impter_48 BINARY_DOUBLE, 
	impter_49 BINARY_DOUBLE, 
	impter_50 BINARY_DOUBLE, 
	impter_51 BINARY_DOUBLE, 
	impter_52 BINARY_DOUBLE, 
	impter_53 BINARY_DOUBLE, 
	impter_54 BINARY_DOUBLE, 
	impter_55 BINARY_DOUBLE, 
	impter_56 BINARY_DOUBLE, 
	impter_57 BINARY_DOUBLE, 
	impter_58 BINARY_DOUBLE, 
	impter_59 BINARY_DOUBLE, 
	impter_60 BINARY_DOUBLE, 
	impter_61 BINARY_DOUBLE, 
	impter_62 BINARY_DOUBLE, 
	impter_63 BINARY_DOUBLE, 
	impter_64 BINARY_DOUBLE, 
	impter_65 BINARY_DOUBLE, 
	impter_66 BINARY_DOUBLE, 
	impter_67 BINARY_DOUBLE, 
	impter_68 BINARY_DOUBLE, 
	impter_69 BINARY_DOUBLE, 
	impter_70 BINARY_DOUBLE, 
	impter_71 BINARY_DOUBLE, 
	impter_72 BINARY_DOUBLE, 
	impter_73 BINARY_DOUBLE, 
	impter_74 BINARY_DOUBLE, 
	impter_75 BINARY_DOUBLE, 
	impter_76 BINARY_DOUBLE, 
	impter_77 BINARY_DOUBLE, 
	impter_78 BINARY_DOUBLE, 
	impter_79 BINARY_DOUBLE, 
	impter_80 BINARY_DOUBLE, 
	impter_81 BINARY_DOUBLE, 
	impter_82 BINARY_DOUBLE, 
	impter_83 BINARY_DOUBLE, 
	impter_84 BINARY_DOUBLE, 
	impter_85 BINARY_DOUBLE, 
	impter_86 BINARY_DOUBLE, 
	impter_87 BINARY_DOUBLE, 
	impter_88 BINARY_DOUBLE, 
	impter_89 BINARY_DOUBLE, 
	impter_90 BINARY_DOUBLE, 
	impter_91 BINARY_DOUBLE, 
	impter_92 BINARY_DOUBLE, 
	impter_93 BINARY_DOUBLE, 
	impter_94 BINARY_DOUBLE, 
	impter_95 BINARY_DOUBLE, 
	impter_96 BINARY_DOUBLE, 
	impter_97 BINARY_DOUBLE, 
	impter_98 BINARY_DOUBLE, 
	impter_99 BINARY_DOUBLE, 
	impter_100 BINARY_DOUBLE, 
	impter_101 BINARY_DOUBLE, 
	impter_102 BINARY_DOUBLE, 
	impter_103 BINARY_DOUBLE, 
	impter_104 BINARY_DOUBLE, 
	impter_105 BINARY_DOUBLE, 
	impter_106 BINARY_DOUBLE, 
	impter_107 BINARY_DOUBLE, 
	impter_108 BINARY_DOUBLE, 
	impter_109 BINARY_DOUBLE, 
	impter_110 BINARY_DOUBLE, 
	impter_111 BINARY_DOUBLE, 
	impter_112 BINARY_DOUBLE, 
	impter_113 BINARY_DOUBLE, 
	impter_114 BINARY_DOUBLE, 
	impter_115 BINARY_DOUBLE, 
	impter_116 BINARY_DOUBLE, 
	impter_117 BINARY_DOUBLE, 
	impter_118 BINARY_DOUBLE, 
	impter_119 BINARY_DOUBLE, 
	impter_120 BINARY_DOUBLE, 
	impter_121 BINARY_DOUBLE, 
	impter_122 BINARY_DOUBLE, 
	impter_123 BINARY_DOUBLE, 
	impter_124 BINARY_DOUBLE, 
	impter_125 BINARY_DOUBLE, 
	impter_126 BINARY_DOUBLE, 
	impter_127 BINARY_DOUBLE, 
	impter_128 BINARY_DOUBLE, 
	impter_129 BINARY_DOUBLE, 
	impter_130 BINARY_DOUBLE, 
	impter_131 BINARY_DOUBLE, 
	impter_132 BINARY_DOUBLE, 
	impter_133 BINARY_DOUBLE, 
	impter_134 BINARY_DOUBLE, 
	impter_135 BINARY_DOUBLE, 
	impter_136 BINARY_DOUBLE, 
	impter_137 BINARY_DOUBLE, 
	impter_138 BINARY_DOUBLE, 
	impter_139 BINARY_DOUBLE, 
	impter_140 BINARY_DOUBLE, 
	impter_141 BINARY_DOUBLE, 
	impter_142 BINARY_DOUBLE, 
	impter_143 BINARY_DOUBLE, 
	impter_144 BINARY_DOUBLE, 
	impter_145 BINARY_DOUBLE, 
	impter_146 BINARY_DOUBLE, 
	impter_147 BINARY_DOUBLE, 
	impter_148 BINARY_DOUBLE, 
	impter_149 BINARY_DOUBLE, 
	impter_150 BINARY_DOUBLE, 
	impter_151 BINARY_DOUBLE, 
	impter_152 BINARY_DOUBLE, 
	impter_153 BINARY_DOUBLE, 
	impter_154 BINARY_DOUBLE, 
	impter_155 BINARY_DOUBLE, 
	impter_156 BINARY_DOUBLE, 
	impter_157 BINARY_DOUBLE, 
	impter_158 BINARY_DOUBLE, 
	impter_159 BINARY_DOUBLE, 
	impter_160 BINARY_DOUBLE, 
	impter_161 BINARY_DOUBLE, 
	impter_162 BINARY_DOUBLE, 
	impter_163 BINARY_DOUBLE, 
	impter_164 BINARY_DOUBLE, 
	impter_165 BINARY_DOUBLE, 
	impter_166 BINARY_DOUBLE, 
	impter_167 BINARY_DOUBLE, 
	impter_168 BINARY_DOUBLE, 
	impter_169 BINARY_DOUBLE, 
	impter_170 BINARY_DOUBLE, 
	impter_171 BINARY_DOUBLE, 
	impter_172 BINARY_DOUBLE, 
	impter_173 BINARY_DOUBLE, 
	impter_174 BINARY_DOUBLE, 
	impter_175 BINARY_DOUBLE, 
	impter_176 BINARY_DOUBLE, 
	impter_177 BINARY_DOUBLE, 
	impter_178 BINARY_DOUBLE, 
	impter_179 BINARY_DOUBLE, 
	impter_180 BINARY_DOUBLE, 
	impter_181 BINARY_DOUBLE, 
	impter_182 BINARY_DOUBLE, 
	impter_183 BINARY_DOUBLE, 
	impter_184 BINARY_DOUBLE, 
	impter_185 BINARY_DOUBLE, 
	impter_186 BINARY_DOUBLE, 
	impter_187 BINARY_DOUBLE, 
	impter_188 BINARY_DOUBLE, 
	impter_189 BINARY_DOUBLE, 
	impter_190 BINARY_DOUBLE, 
	impter_191 BINARY_DOUBLE, 
	impter_192 BINARY_DOUBLE, 
	impter_193 BINARY_DOUBLE, 
	impter_194 BINARY_DOUBLE, 
	impter_195 BINARY_DOUBLE, 
	impter_196 BINARY_DOUBLE, 
	impter_197 BINARY_DOUBLE, 
	impter_198 BINARY_DOUBLE, 
	impter_199 BINARY_DOUBLE, 
	impter_200 BINARY_DOUBLE, 
	impter_201 BINARY_DOUBLE, 
	impter_202 BINARY_DOUBLE, 
	impter_203 BINARY_DOUBLE, 
	impter_204 BINARY_DOUBLE, 
	impter_205 BINARY_DOUBLE, 
	impter_206 BINARY_DOUBLE, 
	impter_207 BINARY_DOUBLE, 
	impter_208 BINARY_DOUBLE, 
	impter_209 BINARY_DOUBLE, 
	impter_210 BINARY_DOUBLE, 
	impter_211 BINARY_DOUBLE, 
	impter_212 BINARY_DOUBLE, 
	impter_213 BINARY_DOUBLE, 
	impter_214 BINARY_DOUBLE, 
	impter_215 BINARY_DOUBLE, 
	impter_216 BINARY_DOUBLE, 
	impter_217 BINARY_DOUBLE, 
	impter_218 BINARY_DOUBLE, 
	impter_219 BINARY_DOUBLE, 
	impter_220 BINARY_DOUBLE, 
	impter_221 BINARY_DOUBLE, 
	impter_222 BINARY_DOUBLE, 
	impter_223 BINARY_DOUBLE, 
	impter_224 BINARY_DOUBLE, 
	impter_225 BINARY_DOUBLE, 
	impter_226 BINARY_DOUBLE, 
	impter_227 BINARY_DOUBLE, 
	impter_228 BINARY_DOUBLE, 
	impter_229 BINARY_DOUBLE, 
	impter_230 BINARY_DOUBLE, 
	impter_231 BINARY_DOUBLE, 
	impter_232 BINARY_DOUBLE, 
	impter_233 BINARY_DOUBLE, 
	impter_234 BINARY_DOUBLE, 
	impter_235 BINARY_DOUBLE, 
	impter_236 BINARY_DOUBLE, 
	impter_237 BINARY_DOUBLE, 
	impter_238 BINARY_DOUBLE, 
	impter_239 BINARY_DOUBLE, 
	impter_240 BINARY_DOUBLE, 
	impter_241 BINARY_DOUBLE, 
	impter_242 BINARY_DOUBLE, 
	impter_243 BINARY_DOUBLE, 
	impter_244 BINARY_DOUBLE, 
	impter_245 BINARY_DOUBLE, 
	impter_246 BINARY_DOUBLE, 
	impter_247 BINARY_DOUBLE, 
	impter_248 BINARY_DOUBLE, 
	impter_249 BINARY_DOUBLE, 
	impter_250 BINARY_DOUBLE, 
	impter_251 BINARY_DOUBLE, 
	impter_252 BINARY_DOUBLE, 
	impter_253 BINARY_DOUBLE, 
	impter_254 BINARY_DOUBLE, 
	impter_255 BINARY_DOUBLE, 
	impter_256 BINARY_DOUBLE, 
	impter_257 BINARY_DOUBLE, 
	impter_258 BINARY_DOUBLE, 
	impter_259 BINARY_DOUBLE, 
	impter_260 BINARY_DOUBLE, 
	impter_261 BINARY_DOUBLE, 
	impter_262 BINARY_DOUBLE, 
	impter_263 BINARY_DOUBLE, 
	impter_264 BINARY_DOUBLE, 
	impter_265 BINARY_DOUBLE, 
	impter_266 BINARY_DOUBLE, 
	impter_267 BINARY_DOUBLE, 
	impter_268 BINARY_DOUBLE, 
	impter_269 BINARY_DOUBLE, 
	impter_270 BINARY_DOUBLE, 
	impter_271 BINARY_DOUBLE, 
	impter_272 BINARY_DOUBLE, 
	impter_273 BINARY_DOUBLE, 
	impter_274 BINARY_DOUBLE, 
	impter_275 BINARY_DOUBLE, 
	impter_276 BINARY_DOUBLE, 
	impter_277 BINARY_DOUBLE, 
	impter_278 BINARY_DOUBLE, 
	impter_279 BINARY_DOUBLE, 
	impter_280 BINARY_DOUBLE, 
	impter_281 BINARY_DOUBLE, 
	impter_282 BINARY_DOUBLE, 
	impter_283 BINARY_DOUBLE, 
	impter_284 BINARY_DOUBLE, 
	impter_285 BINARY_DOUBLE, 
	impter_286 BINARY_DOUBLE, 
	impter_287 BINARY_DOUBLE, 
	impter_288 BINARY_DOUBLE, 
	impter_289 BINARY_DOUBLE, 
	impter_290 BINARY_DOUBLE, 
	impter_291 BINARY_DOUBLE, 
	impter_292 BINARY_DOUBLE, 
	impter_293 BINARY_DOUBLE, 
	impter_294 BINARY_DOUBLE, 
	impter_295 BINARY_DOUBLE, 
	impter_296 BINARY_DOUBLE, 
	impter_297 BINARY_DOUBLE, 
	impter_298 BINARY_DOUBLE, 
	impter_299 BINARY_DOUBLE, 
	impter_300 BINARY_DOUBLE, 
	impter_301 BINARY_DOUBLE, 
	impter_302 BINARY_DOUBLE, 
	impter_303 BINARY_DOUBLE, 
	impter_304 BINARY_DOUBLE, 
	impter_305 BINARY_DOUBLE, 
	impter_306 BINARY_DOUBLE, 
	impter_307 BINARY_DOUBLE, 
	impter_308 BINARY_DOUBLE, 
	impter_309 BINARY_DOUBLE, 
	impter_310 BINARY_DOUBLE, 
	impter_311 BINARY_DOUBLE, 
	impter_312 BINARY_DOUBLE, 
	impter_313 BINARY_DOUBLE, 
	impter_314 BINARY_DOUBLE, 
	impter_315 BINARY_DOUBLE, 
	impter_316 BINARY_DOUBLE, 
	impter_317 BINARY_DOUBLE, 
	impter_318 BINARY_DOUBLE, 
	impter_319 BINARY_DOUBLE, 
	impter_320 BINARY_DOUBLE, 
	impter_321 BINARY_DOUBLE, 
	impter_322 BINARY_DOUBLE, 
	impter_323 BINARY_DOUBLE, 
	impter_324 BINARY_DOUBLE, 
	impter_325 BINARY_DOUBLE, 
	impter_326 BINARY_DOUBLE, 
	impter_327 BINARY_DOUBLE, 
	impter_328 BINARY_DOUBLE, 
	impter_329 BINARY_DOUBLE, 
	impter_330 BINARY_DOUBLE, 
	impter_331 BINARY_DOUBLE, 
	impter_332 BINARY_DOUBLE, 
	impter_333 BINARY_DOUBLE, 
	impter_334 BINARY_DOUBLE, 
	impter_335 BINARY_DOUBLE, 
	impter_336 BINARY_DOUBLE, 
	impter_337 BINARY_DOUBLE, 
	impter_338 BINARY_DOUBLE, 
	impter_339 BINARY_DOUBLE, 
	impter_340 BINARY_DOUBLE, 
	impter_341 BINARY_DOUBLE, 
	impter_342 BINARY_DOUBLE, 
	impter_343 BINARY_DOUBLE, 
	impter_344 BINARY_DOUBLE, 
	impter_345 BINARY_DOUBLE, 
	impter_346 BINARY_DOUBLE, 
	impter_347 BINARY_DOUBLE, 
	impter_348 BINARY_DOUBLE, 
	impter_349 BINARY_DOUBLE, 
	impter_350 BINARY_DOUBLE, 
	impter_351 BINARY_DOUBLE, 
	impter_352 BINARY_DOUBLE, 
	impter_353 BINARY_DOUBLE, 
	impter_354 BINARY_DOUBLE, 
	impter_355 BINARY_DOUBLE, 
	impter_356 BINARY_DOUBLE, 
	impter_357 BINARY_DOUBLE, 
	impter_358 BINARY_DOUBLE, 
	impter_359 BINARY_DOUBLE, 
	impter_360 BINARY_DOUBLE, 
	impter_361 BINARY_DOUBLE, 
	impter_362 BINARY_DOUBLE, 
	impter_363 BINARY_DOUBLE, 
	impter_364 BINARY_DOUBLE, 
	impter_365 BINARY_DOUBLE, 
	impter_366 BINARY_DOUBLE, 
	impter_367 BINARY_DOUBLE, 
	impter_368 BINARY_DOUBLE, 
	impter_369 BINARY_DOUBLE, 
	impter_370 BINARY_DOUBLE, 
	impter_371 BINARY_DOUBLE, 
	impter_372 BINARY_DOUBLE, 
	impter_373 BINARY_DOUBLE, 
	impter_374 BINARY_DOUBLE, 
	impter_375 BINARY_DOUBLE, 
	impter_376 BINARY_DOUBLE, 
	impter_377 BINARY_DOUBLE, 
	impter_378 BINARY_DOUBLE, 
	impter_379 BINARY_DOUBLE, 
	impter_380 BINARY_DOUBLE, 
	impter_381 BINARY_DOUBLE, 
	impter_382 BINARY_DOUBLE, 
	impter_383 BINARY_DOUBLE, 
	impter_384 BINARY_DOUBLE, 
	impter_385 BINARY_DOUBLE, 
	impter_386 BINARY_DOUBLE, 
	impter_387 BINARY_DOUBLE, 
	impter_388 BINARY_DOUBLE, 
	impter_389 BINARY_DOUBLE, 
	impter_390 BINARY_DOUBLE, 
	impter_391 BINARY_DOUBLE, 
	impter_392 BINARY_DOUBLE, 
	impter_393 BINARY_DOUBLE, 
	impter_394 BINARY_DOUBLE, 
	impter_395 BINARY_DOUBLE, 
	impter_396 BINARY_DOUBLE, 
	impter_397 BINARY_DOUBLE, 
	impter_398 BINARY_DOUBLE, 
	impter_399 BINARY_DOUBLE, 
	impter_400 BINARY_DOUBLE, 
	impter_401 BINARY_DOUBLE, 
	impter_402 BINARY_DOUBLE, 
	impter_403 BINARY_DOUBLE, 
	impter_404 BINARY_DOUBLE, 
	impter_405 BINARY_DOUBLE, 
	impter_406 BINARY_DOUBLE, 
	impter_407 BINARY_DOUBLE, 
	impter_408 BINARY_DOUBLE, 
	impter_409 BINARY_DOUBLE, 
	impter_410 BINARY_DOUBLE, 
	impter_411 BINARY_DOUBLE, 
	impter_412 BINARY_DOUBLE, 
	impter_413 BINARY_DOUBLE, 
	impter_414 BINARY_DOUBLE, 
	impter_415 BINARY_DOUBLE, 
	impter_416 BINARY_DOUBLE, 
	impter_417 BINARY_DOUBLE, 
	impter_418 BINARY_DOUBLE, 
	impter_419 BINARY_DOUBLE, 
	impter_420 BINARY_DOUBLE, 
	impter_421 BINARY_DOUBLE, 
	impter_422 BINARY_DOUBLE, 
	impter_423 BINARY_DOUBLE, 
	impter_424 BINARY_DOUBLE, 
	impter_425 BINARY_DOUBLE, 
	impter_426 BINARY_DOUBLE, 
	impter_427 BINARY_DOUBLE, 
	impter_428 BINARY_DOUBLE, 
	impter_429 BINARY_DOUBLE, 
	impter_430 BINARY_DOUBLE, 
	impter_431 BINARY_DOUBLE, 
	impter_432 BINARY_DOUBLE, 
	impter_433 BINARY_DOUBLE, 
	impter_434 BINARY_DOUBLE, 
	impter_435 BINARY_DOUBLE, 
	impter_436 BINARY_DOUBLE, 
	impter_437 BINARY_DOUBLE, 
	impter_438 BINARY_DOUBLE, 
	impter_439 BINARY_DOUBLE, 
	impter_440 BINARY_DOUBLE, 
	impter_441 BINARY_DOUBLE, 
	impter_442 BINARY_DOUBLE, 
	impter_443 BINARY_DOUBLE, 
	impter_444 BINARY_DOUBLE, 
	impter_445 BINARY_DOUBLE, 
	impter_446 BINARY_DOUBLE, 
	impter_447 BINARY_DOUBLE, 
	impter_448 BINARY_DOUBLE, 
	impter_449 BINARY_DOUBLE, 
	impter_450 BINARY_DOUBLE, 
	impter_451 BINARY_DOUBLE, 
	impter_452 BINARY_DOUBLE, 
	impter_453 BINARY_DOUBLE, 
	impter_454 BINARY_DOUBLE, 
	impter_455 BINARY_DOUBLE, 
	impter_456 BINARY_DOUBLE, 
	impter_457 BINARY_DOUBLE, 
	impter_458 BINARY_DOUBLE, 
	impter_459 BINARY_DOUBLE, 
	impter_460 BINARY_DOUBLE, 
	impter_461 BINARY_DOUBLE, 
	impter_462 BINARY_DOUBLE, 
	impter_463 BINARY_DOUBLE, 
	impter_464 BINARY_DOUBLE, 
	impter_465 BINARY_DOUBLE, 
	impter_466 BINARY_DOUBLE, 
	impter_467 BINARY_DOUBLE, 
	impter_468 BINARY_DOUBLE, 
	impter_469 BINARY_DOUBLE, 
	impter_470 BINARY_DOUBLE, 
	impter_471 BINARY_DOUBLE, 
	impter_472 BINARY_DOUBLE, 
	impter_473 BINARY_DOUBLE, 
	impter_474 BINARY_DOUBLE, 
	impter_475 BINARY_DOUBLE, 
	impter_476 BINARY_DOUBLE, 
	impter_477 BINARY_DOUBLE, 
	impter_478 BINARY_DOUBLE, 
	impter_479 BINARY_DOUBLE, 
	impter_480 BINARY_DOUBLE, 
	impter_481 BINARY_DOUBLE, 
	impter_482 BINARY_DOUBLE, 
	impter_483 BINARY_DOUBLE, 
	impter_484 BINARY_DOUBLE, 
	impter_485 BINARY_DOUBLE, 
	impter_486 BINARY_DOUBLE, 
	impter_487 BINARY_DOUBLE, 
	impter_488 BINARY_DOUBLE, 
	impter_489 BINARY_DOUBLE, 
	impter_490 BINARY_DOUBLE, 
	impter_491 BINARY_DOUBLE, 
	impter_492 BINARY_DOUBLE, 
	impter_493 BINARY_DOUBLE, 
	impter_494 BINARY_DOUBLE, 
	impter_495 BINARY_DOUBLE, 
	impter_496 BINARY_DOUBLE, 
	impter_497 BINARY_DOUBLE, 
	impter_498 BINARY_DOUBLE, 
	impter_499 BINARY_DOUBLE, 
	impter_500 BINARY_DOUBLE, 
	impter_501 BINARY_DOUBLE
)

 ON COMMIT PRESERVE ROWS
-- Code For temporary table 33420_PBFR8Z_ADS_IMP_1_OUT part 2/2. Populate

INSERT INTO "33420_PBFR8Z_ADS_IMP_1_OUT" ("KEY", impter_2, impter_3, impter_4, impter_5, impter_6, impter_7, impter_8, impter_9, impter_10, impter_11, impter_12, impter_13, impter_14, impter_15, impter_16, impter_17, impter_18, impter_19, impter_20, impter_21, impter_22, impter_23, impter_24, impter_25, impter_26, impter_27, impter_28, impter_29, impter_30, impter_31, impter_32, impter_33, impter_34, impter_35, impter_36, impter_37, impter_38, impter_39, impter_40, impter_41, impter_42, impter_43, impter_44, impter_45, impter_46, impter_47, impter_48, impter_49, impter_50, impter_51, impter_52, impter_53, impter_54, impter_55, impter_56, impter_57, impter_58, impter_59, impter_60, impter_61, impter_62, impter_63, impter_64, impter_65, impter_66, impter_67, impter_68, impter_69, impter_70, impter_71, impter_72, impter_73, impter_74, impter_75, impter_76, impter_77, impter_78, impter_79, impter_80, impter_81, impter_82, impter_83, impter_84, impter_85, impter_86, impter_87, impter_88, impter_89, impter_90, impter_91, impter_92, impter_93, impter_94, impter_95, impter_96, impter_97, impter_98, impter_99, impter_100, impter_101, impter_102, impter_103, impter_104, impter_105, impter_106, impter_107, impter_108, impter_109, impter_110, impter_111, impter_112, impter_113, impter_114, impter_115, impter_116, impter_117, impter_118, impter_119, impter_120, impter_121, impter_122, impter_123, impter_124, impter_125, impter_126, impter_127, impter_128, impter_129, impter_130, impter_131, impter_132, impter_133, impter_134, impter_135, impter_136, impter_137, impter_138, impter_139, impter_140, impter_141, impter_142, impter_143, impter_144, impter_145, impter_146, impter_147, impter_148, impter_149, impter_150, impter_151, impter_152, impter_153, impter_154, impter_155, impter_156, impter_157, impter_158, impter_159, impter_160, impter_161, impter_162, impter_163, impter_164, impter_165, impter_166, impter_167, impter_168, impter_169, impter_170, impter_171, impter_172, impter_173, impter_174, impter_175, impter_176, impter_177, impter_178, impter_179, impter_180, impter_181, impter_182, impter_183, impter_184, impter_185, impter_186, impter_187, impter_188, impter_189, impter_190, impter_191, impter_192, impter_193, impter_194, impter_195, impter_196, impter_197, impter_198, impter_199, impter_200, impter_201, impter_202, impter_203, impter_204, impter_205, impter_206, impter_207, impter_208, impter_209, impter_210, impter_211, impter_212, impter_213, impter_214, impter_215, impter_216, impter_217, impter_218, impter_219, impter_220, impter_221, impter_222, impter_223, impter_224, impter_225, impter_226, impter_227, impter_228, impter_229, impter_230, impter_231, impter_232, impter_233, impter_234, impter_235, impter_236, impter_237, impter_238, impter_239, impter_240, impter_241, impter_242, impter_243, impter_244, impter_245, impter_246, impter_247, impter_248, impter_249, impter_250, impter_251, impter_252, impter_253, impter_254, impter_255, impter_256, impter_257, impter_258, impter_259, impter_260, impter_261, impter_262, impter_263, impter_264, impter_265, impter_266, impter_267, impter_268, impter_269, impter_270, impter_271, impter_272, impter_273, impter_274, impter_275, impter_276, impter_277, impter_278, impter_279, impter_280, impter_281, impter_282, impter_283, impter_284, impter_285, impter_286, impter_287, impter_288, impter_289, impter_290, impter_291, impter_292, impter_293, impter_294, impter_295, impter_296, impter_297, impter_298, impter_299, impter_300, impter_301, impter_302, impter_303, impter_304, impter_305, impter_306, impter_307, impter_308, impter_309, impter_310, impter_311, impter_312, impter_313, impter_314, impter_315, impter_316, impter_317, impter_318, impter_319, impter_320, impter_321, impter_322, impter_323, impter_324, impter_325, impter_326, impter_327, impter_328, impter_329, impter_330, impter_331, impter_332, impter_333, impter_334, impter_335, impter_336, impter_337, impter_338, impter_339, impter_340, impter_341, impter_342, impter_343, impter_344, impter_345, impter_346, impter_347, impter_348, impter_349, impter_350, impter_351, impter_352, impter_353, impter_354, impter_355, impter_356, impter_357, impter_358, impter_359, impter_360, impter_361, impter_362, impter_363, impter_364, impter_365, impter_366, impter_367, impter_368, impter_369, impter_370, impter_371, impter_372, impter_373, impter_374, impter_375, impter_376, impter_377, impter_378, impter_379, impter_380, impter_381, impter_382, impter_383, impter_384, impter_385, impter_386, impter_387, impter_388, impter_389, impter_390, impter_391, impter_392, impter_393, impter_394, impter_395, impter_396, impter_397, impter_398, impter_399, impter_400, impter_401, impter_402, impter_403, impter_404, impter_405, impter_406, impter_407, impter_408, impter_409, impter_410, impter_411, impter_412, impter_413, impter_414, impter_415, impter_416, impter_417, impter_418, impter_419, impter_420, impter_421, impter_422, impter_423, impter_424, impter_425, impter_426, impter_427, impter_428, impter_429, impter_430, impter_431, impter_432, impter_433, impter_434, impter_435, impter_436, impter_437, impter_438, impter_439, impter_440, impter_441, impter_442, impter_443, impter_444, impter_445, impter_446, impter_447, impter_448, impter_449, impter_450, impter_451, impter_452, impter_453, impter_454, impter_455, impter_456, impter_457, impter_458, impter_459, impter_460, impter_461, impter_462, impter_463, impter_464, impter_465, impter_466, impter_467, impter_468, impter_469, impter_470, impter_471, impter_472, impter_473, impter_474, impter_475, impter_476, impter_477, impter_478, impter_479, impter_480, impter_481, impter_482, impter_483, impter_484, impter_485, impter_486, impter_487, impter_488, impter_489, impter_490, impter_491, impter_492, impter_493, impter_494, impter_495, impter_496, impter_497, impter_498, impter_499, impter_500, impter_501) SELECT "U"."KEY", "U".impter_2, "U".impter_3, "U".impter_4, "U".impter_5, "U".impter_6, "U".impter_7, "U".impter_8, "U".impter_9, "U".impter_10, "U".impter_11, "U".impter_12, "U".impter_13, "U".impter_14, "U".impter_15, "U".impter_16, "U".impter_17, "U".impter_18, "U".impter_19, "U".impter_20, "U".impter_21, "U".impter_22, "U".impter_23, "U".impter_24, "U".impter_25, "U".impter_26, "U".impter_27, "U".impter_28, "U".impter_29, "U".impter_30, "U".impter_31, "U".impter_32, "U".impter_33, "U".impter_34, "U".impter_35, "U".impter_36, "U".impter_37, "U".impter_38, "U".impter_39, "U".impter_40, "U".impter_41, "U".impter_42, "U".impter_43, "U".impter_44, "U".impter_45, "U".impter_46, "U".impter_47, "U".impter_48, "U".impter_49, "U".impter_50, "U".impter_51, "U".impter_52, "U".impter_53, "U".impter_54, "U".impter_55, "U".impter_56, "U".impter_57, "U".impter_58, "U".impter_59, "U".impter_60, "U".impter_61, "U".impter_62, "U".impter_63, "U".impter_64, "U".impter_65, "U".impter_66, "U".impter_67, "U".impter_68, "U".impter_69, "U".impter_70, "U".impter_71, "U".impter_72, "U".impter_73, "U".impter_74, "U".impter_75, "U".impter_76, "U".impter_77, "U".impter_78, "U".impter_79, "U".impter_80, "U".impter_81, "U".impter_82, "U".impter_83, "U".impter_84, "U".impter_85, "U".impter_86, "U".impter_87, "U".impter_88, "U".impter_89, "U".impter_90, "U".impter_91, "U".impter_92, "U".impter_93, "U".impter_94, "U".impter_95, "U".impter_96, "U".impter_97, "U".impter_98, "U".impter_99, "U".impter_100, "U".impter_101, "U".impter_102, "U".impter_103, "U".impter_104, "U".impter_105, "U".impter_106, "U".impter_107, "U".impter_108, "U".impter_109, "U".impter_110, "U".impter_111, "U".impter_112, "U".impter_113, "U".impter_114, "U".impter_115, "U".impter_116, "U".impter_117, "U".impter_118, "U".impter_119, "U".impter_120, "U".impter_121, "U".impter_122, "U".impter_123, "U".impter_124, "U".impter_125, "U".impter_126, "U".impter_127, "U".impter_128, "U".impter_129, "U".impter_130, "U".impter_131, "U".impter_132, "U".impter_133, "U".impter_134, "U".impter_135, "U".impter_136, "U".impter_137, "U".impter_138, "U".impter_139, "U".impter_140, "U".impter_141, "U".impter_142, "U".impter_143, "U".impter_144, "U".impter_145, "U".impter_146, "U".impter_147, "U".impter_148, "U".impter_149, "U".impter_150, "U".impter_151, "U".impter_152, "U".impter_153, "U".impter_154, "U".impter_155, "U".impter_156, "U".impter_157, "U".impter_158, "U".impter_159, "U".impter_160, "U".impter_161, "U".impter_162, "U".impter_163, "U".impter_164, "U".impter_165, "U".impter_166, "U".impter_167, "U".impter_168, "U".impter_169, "U".impter_170, "U".impter_171, "U".impter_172, "U".impter_173, "U".impter_174, "U".impter_175, "U".impter_176, "U".impter_177, "U".impter_178, "U".impter_179, "U".impter_180, "U".impter_181, "U".impter_182, "U".impter_183, "U".impter_184, "U".impter_185, "U".impter_186, "U".impter_187, "U".impter_188, "U".impter_189, "U".impter_190, "U".impter_191, "U".impter_192, "U".impter_193, "U".impter_194, "U".impter_195, "U".impter_196, "U".impter_197, "U".impter_198, "U".impter_199, "U".impter_200, "U".impter_201, "U".impter_202, "U".impter_203, "U".impter_204, "U".impter_205, "U".impter_206, "U".impter_207, "U".impter_208, "U".impter_209, "U".impter_210, "U".impter_211, "U".impter_212, "U".impter_213, "U".impter_214, "U".impter_215, "U".impter_216, "U".impter_217, "U".impter_218, "U".impter_219, "U".impter_220, "U".impter_221, "U".impter_222, "U".impter_223, "U".impter_224, "U".impter_225, "U".impter_226, "U".impter_227, "U".impter_228, "U".impter_229, "U".impter_230, "U".impter_231, "U".impter_232, "U".impter_233, "U".impter_234, "U".impter_235, "U".impter_236, "U".impter_237, "U".impter_238, "U".impter_239, "U".impter_240, "U".impter_241, "U".impter_242, "U".impter_243, "U".impter_244, "U".impter_245, "U".impter_246, "U".impter_247, "U".impter_248, "U".impter_249, "U".impter_250, "U".impter_251, "U".impter_252, "U".impter_253, "U".impter_254, "U".impter_255, "U".impter_256, "U".impter_257, "U".impter_258, "U".impter_259, "U".impter_260, "U".impter_261, "U".impter_262, "U".impter_263, "U".impter_264, "U".impter_265, "U".impter_266, "U".impter_267, "U".impter_268, "U".impter_269, "U".impter_270, "U".impter_271, "U".impter_272, "U".impter_273, "U".impter_274, "U".impter_275, "U".impter_276, "U".impter_277, "U".impter_278, "U".impter_279, "U".impter_280, "U".impter_281, "U".impter_282, "U".impter_283, "U".impter_284, "U".impter_285, "U".impter_286, "U".impter_287, "U".impter_288, "U".impter_289, "U".impter_290, "U".impter_291, "U".impter_292, "U".impter_293, "U".impter_294, "U".impter_295, "U".impter_296, "U".impter_297, "U".impter_298, "U".impter_299, "U".impter_300, "U".impter_301, "U".impter_302, "U".impter_303, "U".impter_304, "U".impter_305, "U".impter_306, "U".impter_307, "U".impter_308, "U".impter_309, "U".impter_310, "U".impter_311, "U".impter_312, "U".impter_313, "U".impter_314, "U".impter_315, "U".impter_316, "U".impter_317, "U".impter_318, "U".impter_319, "U".impter_320, "U".impter_321, "U".impter_322, "U".impter_323, "U".impter_324, "U".impter_325, "U".impter_326, "U".impter_327, "U".impter_328, "U".impter_329, "U".impter_330, "U".impter_331, "U".impter_332, "U".impter_333, "U".impter_334, "U".impter_335, "U".impter_336, "U".impter_337, "U".impter_338, "U".impter_339, "U".impter_340, "U".impter_341, "U".impter_342, "U".impter_343, "U".impter_344, "U".impter_345, "U".impter_346, "U".impter_347, "U".impter_348, "U".impter_349, "U".impter_350, "U".impter_351, "U".impter_352, "U".impter_353, "U".impter_354, "U".impter_355, "U".impter_356, "U".impter_357, "U".impter_358, "U".impter_359, "U".impter_360, "U".impter_361, "U".impter_362, "U".impter_363, "U".impter_364, "U".impter_365, "U".impter_366, "U".impter_367, "U".impter_368, "U".impter_369, "U".impter_370, "U".impter_371, "U".impter_372, "U".impter_373, "U".impter_374, "U".impter_375, "U".impter_376, "U".impter_377, "U".impter_378, "U".impter_379, "U".impter_380, "U".impter_381, "U".impter_382, "U".impter_383, "U".impter_384, "U".impter_385, "U".impter_386, "U".impter_387, "U".impter_388, "U".impter_389, "U".impter_390, "U".impter_391, "U".impter_392, "U".impter_393, "U".impter_394, "U".impter_395, "U".impter_396, "U".impter_397, "U".impter_398, "U".impter_399, "U".impter_400, "U".impter_401, "U".impter_402, "U".impter_403, "U".impter_404, "U".impter_405, "U".impter_406, "U".impter_407, "U".impter_408, "U".impter_409, "U".impter_410, "U".impter_411, "U".impter_412, "U".impter_413, "U".impter_414, "U".impter_415, "U".impter_416, "U".impter_417, "U".impter_418, "U".impter_419, "U".impter_420, "U".impter_421, "U".impter_422, "U".impter_423, "U".impter_424, "U".impter_425, "U".impter_426, "U".impter_427, "U".impter_428, "U".impter_429, "U".impter_430, "U".impter_431, "U".impter_432, "U".impter_433, "U".impter_434, "U".impter_435, "U".impter_436, "U".impter_437, "U".impter_438, "U".impter_439, "U".impter_440, "U".impter_441, "U".impter_442, "U".impter_443, "U".impter_444, "U".impter_445, "U".impter_446, "U".impter_447, "U".impter_448, "U".impter_449, "U".impter_450, "U".impter_451, "U".impter_452, "U".impter_453, "U".impter_454, "U".impter_455, "U".impter_456, "U".impter_457, "U".impter_458, "U".impter_459, "U".impter_460, "U".impter_461, "U".impter_462, "U".impter_463, "U".impter_464, "U".impter_465, "U".impter_466, "U".impter_467, "U".impter_468, "U".impter_469, "U".impter_470, "U".impter_471, "U".impter_472, "U".impter_473, "U".impter_474, "U".impter_475, "U".impter_476, "U".impter_477, "U".impter_478, "U".impter_479, "U".impter_480, "U".impter_481, "U".impter_482, "U".impter_483, "U".impter_484, "U".impter_485, "U".impter_486, "U".impter_487, "U".impter_488, "U".impter_489, "U".impter_490, "U".impter_491, "U".impter_492, "U".impter_493, "U".impter_494, "U".impter_495, "U".impter_496, "U".impter_497, "U".impter_498, "U".impter_499, "U".impter_500, "U".impter_501 
FROM (SELECT "ADS_imp_1_OUT"."KEY", "ADS_imp_1_OUT".impter_2, "ADS_imp_1_OUT".impter_3, "ADS_imp_1_OUT".impter_4, "ADS_imp_1_OUT".impter_5, "ADS_imp_1_OUT".impter_6, "ADS_imp_1_OUT".impter_7, "ADS_imp_1_OUT".impter_8, "ADS_imp_1_OUT".impter_9, "ADS_imp_1_OUT".impter_10, "ADS_imp_1_OUT".impter_11, "ADS_imp_1_OUT".impter_12, "ADS_imp_1_OUT".impter_13, "ADS_imp_1_OUT".impter_14, "ADS_imp_1_OUT".impter_15, "ADS_imp_1_OUT".impter_16, "ADS_imp_1_OUT".impter_17, "ADS_imp_1_OUT".impter_18, "ADS_imp_1_OUT".impter_19, "ADS_imp_1_OUT".impter_20, "ADS_imp_1_OUT".impter_21, "ADS_imp_1_OUT".impter_22, "ADS_imp_1_OUT".impter_23, "ADS_imp_1_OUT".impter_24, "ADS_imp_1_OUT".impter_25, "ADS_imp_1_OUT".impter_26, "ADS_imp_1_OUT".impter_27, "ADS_imp_1_OUT".impter_28, "ADS_imp_1_OUT".impter_29, "ADS_imp_1_OUT".impter_30, "ADS_imp_1_OUT".impter_31, "ADS_imp_1_OUT".impter_32, "ADS_imp_1_OUT".impter_33, "ADS_imp_1_OUT".impter_34, "ADS_imp_1_OUT".impter_35, "ADS_imp_1_OUT".impter_36, "ADS_imp_1_OUT".impter_37, "ADS_imp_1_OUT".impter_38, "ADS_imp_1_OUT".impter_39, "ADS_imp_1_OUT".impter_40, "ADS_imp_1_OUT".impter_41, "ADS_imp_1_OUT".impter_42, "ADS_imp_1_OUT".impter_43, "ADS_imp_1_OUT".impter_44, "ADS_imp_1_OUT".impter_45, "ADS_imp_1_OUT".impter_46, "ADS_imp_1_OUT".impter_47, "ADS_imp_1_OUT".impter_48, "ADS_imp_1_OUT".impter_49, "ADS_imp_1_OUT".impter_50, "ADS_imp_1_OUT".impter_51, "ADS_imp_1_OUT".impter_52, "ADS_imp_1_OUT".impter_53, "ADS_imp_1_OUT".impter_54, "ADS_imp_1_OUT".impter_55, "ADS_imp_1_OUT".impter_56, "ADS_imp_1_OUT".impter_57, "ADS_imp_1_OUT".impter_58, "ADS_imp_1_OUT".impter_59, "ADS_imp_1_OUT".impter_60, "ADS_imp_1_OUT".impter_61, "ADS_imp_1_OUT".impter_62, "ADS_imp_1_OUT".impter_63, "ADS_imp_1_OUT".impter_64, "ADS_imp_1_OUT".impter_65, "ADS_imp_1_OUT".impter_66, "ADS_imp_1_OUT".impter_67, "ADS_imp_1_OUT".impter_68, "ADS_imp_1_OUT".impter_69, "ADS_imp_1_OUT".impter_70, "ADS_imp_1_OUT".impter_71, "ADS_imp_1_OUT".impter_72, "ADS_imp_1_OUT".impter_73, "ADS_imp_1_OUT".impter_74, "ADS_imp_1_OUT".impter_75, "ADS_imp_1_OUT".impter_76, "ADS_imp_1_OUT".impter_77, "ADS_imp_1_OUT".impter_78, "ADS_imp_1_OUT".impter_79, "ADS_imp_1_OUT".impter_80, "ADS_imp_1_OUT".impter_81, "ADS_imp_1_OUT".impter_82, "ADS_imp_1_OUT".impter_83, "ADS_imp_1_OUT".impter_84, "ADS_imp_1_OUT".impter_85, "ADS_imp_1_OUT".impter_86, "ADS_imp_1_OUT".impter_87, "ADS_imp_1_OUT".impter_88, "ADS_imp_1_OUT".impter_89, "ADS_imp_1_OUT".impter_90, "ADS_imp_1_OUT".impter_91, "ADS_imp_1_OUT".impter_92, "ADS_imp_1_OUT".impter_93, "ADS_imp_1_OUT".impter_94, "ADS_imp_1_OUT".impter_95, "ADS_imp_1_OUT".impter_96, "ADS_imp_1_OUT".impter_97, "ADS_imp_1_OUT".impter_98, "ADS_imp_1_OUT".impter_99, "ADS_imp_1_OUT".impter_100, "ADS_imp_1_OUT".impter_101, "ADS_imp_1_OUT".impter_102, "ADS_imp_1_OUT".impter_103, "ADS_imp_1_OUT".impter_104, "ADS_imp_1_OUT".impter_105, "ADS_imp_1_OUT".impter_106, "ADS_imp_1_OUT".impter_107, "ADS_imp_1_OUT".impter_108, "ADS_imp_1_OUT".impter_109, "ADS_imp_1_OUT".impter_110, "ADS_imp_1_OUT".impter_111, "ADS_imp_1_OUT".impter_112, "ADS_imp_1_OUT".impter_113, "ADS_imp_1_OUT".impter_114, "ADS_imp_1_OUT".impter_115, "ADS_imp_1_OUT".impter_116, "ADS_imp_1_OUT".impter_117, "ADS_imp_1_OUT".impter_118, "ADS_imp_1_OUT".impter_119, "ADS_imp_1_OUT".impter_120, "ADS_imp_1_OUT".impter_121, "ADS_imp_1_OUT".impter_122, "ADS_imp_1_OUT".impter_123, "ADS_imp_1_OUT".impter_124, "ADS_imp_1_OUT".impter_125, "ADS_imp_1_OUT".impter_126, "ADS_imp_1_OUT".impter_127, "ADS_imp_1_OUT".impter_128, "ADS_imp_1_OUT".impter_129, "ADS_imp_1_OUT".impter_130, "ADS_imp_1_OUT".impter_131, "ADS_imp_1_OUT".impter_132, "ADS_imp_1_OUT".impter_133, "ADS_imp_1_OUT".impter_134, "ADS_imp_1_OUT".impter_135, "ADS_imp_1_OUT".impter_136, "ADS_imp_1_OUT".impter_137, "ADS_imp_1_OUT".impter_138, "ADS_imp_1_OUT".impter_139, "ADS_imp_1_OUT".impter_140, "ADS_imp_1_OUT".impter_141, "ADS_imp_1_OUT".impter_142, "ADS_imp_1_OUT".impter_143, "ADS_imp_1_OUT".impter_144, "ADS_imp_1_OUT".impter_145, "ADS_imp_1_OUT".impter_146, "ADS_imp_1_OUT".impter_147, "ADS_imp_1_OUT".impter_148, "ADS_imp_1_OUT".impter_149, "ADS_imp_1_OUT".impter_150, "ADS_imp_1_OUT".impter_151, "ADS_imp_1_OUT".impter_152, "ADS_imp_1_OUT".impter_153, "ADS_imp_1_OUT".impter_154, "ADS_imp_1_OUT".impter_155, "ADS_imp_1_OUT".impter_156, "ADS_imp_1_OUT".impter_157, "ADS_imp_1_OUT".impter_158, "ADS_imp_1_OUT".impter_159, "ADS_imp_1_OUT".impter_160, "ADS_imp_1_OUT".impter_161, "ADS_imp_1_OUT".impter_162, "ADS_imp_1_OUT".impter_163, "ADS_imp_1_OUT".impter_164, "ADS_imp_1_OUT".impter_165, "ADS_imp_1_OUT".impter_166, "ADS_imp_1_OUT".impter_167, "ADS_imp_1_OUT".impter_168, "ADS_imp_1_OUT".impter_169, "ADS_imp_1_OUT".impter_170, "ADS_imp_1_OUT".impter_171, "ADS_imp_1_OUT".impter_172, "ADS_imp_1_OUT".impter_173, "ADS_imp_1_OUT".impter_174, "ADS_imp_1_OUT".impter_175, "ADS_imp_1_OUT".impter_176, "ADS_imp_1_OUT".impter_177, "ADS_imp_1_OUT".impter_178, "ADS_imp_1_OUT".impter_179, "ADS_imp_1_OUT".impter_180, "ADS_imp_1_OUT".impter_181, "ADS_imp_1_OUT".impter_182, "ADS_imp_1_OUT".impter_183, "ADS_imp_1_OUT".impter_184, "ADS_imp_1_OUT".impter_185, "ADS_imp_1_OUT".impter_186, "ADS_imp_1_OUT".impter_187, "ADS_imp_1_OUT".impter_188, "ADS_imp_1_OUT".impter_189, "ADS_imp_1_OUT".impter_190, "ADS_imp_1_OUT".impter_191, "ADS_imp_1_OUT".impter_192, "ADS_imp_1_OUT".impter_193, "ADS_imp_1_OUT".impter_194, "ADS_imp_1_OUT".impter_195, "ADS_imp_1_OUT".impter_196, "ADS_imp_1_OUT".impter_197, "ADS_imp_1_OUT".impter_198, "ADS_imp_1_OUT".impter_199, "ADS_imp_1_OUT".impter_200, "ADS_imp_1_OUT".impter_201, "ADS_imp_1_OUT".impter_202, "ADS_imp_1_OUT".impter_203, "ADS_imp_1_OUT".impter_204, "ADS_imp_1_OUT".impter_205, "ADS_imp_1_OUT".impter_206, "ADS_imp_1_OUT".impter_207, "ADS_imp_1_OUT".impter_208, "ADS_imp_1_OUT".impter_209, "ADS_imp_1_OUT".impter_210, "ADS_imp_1_OUT".impter_211, "ADS_imp_1_OUT".impter_212, "ADS_imp_1_OUT".impter_213, "ADS_imp_1_OUT".impter_214, "ADS_imp_1_OUT".impter_215, "ADS_imp_1_OUT".impter_216, "ADS_imp_1_OUT".impter_217, "ADS_imp_1_OUT".impter_218, "ADS_imp_1_OUT".impter_219, "ADS_imp_1_OUT".impter_220, "ADS_imp_1_OUT".impter_221, "ADS_imp_1_OUT".impter_222, "ADS_imp_1_OUT".impter_223, "ADS_imp_1_OUT".impter_224, "ADS_imp_1_OUT".impter_225, "ADS_imp_1_OUT".impter_226, "ADS_imp_1_OUT".impter_227, "ADS_imp_1_OUT".impter_228, "ADS_imp_1_OUT".impter_229, "ADS_imp_1_OUT".impter_230, "ADS_imp_1_OUT".impter_231, "ADS_imp_1_OUT".impter_232, "ADS_imp_1_OUT".impter_233, "ADS_imp_1_OUT".impter_234, "ADS_imp_1_OUT".impter_235, "ADS_imp_1_OUT".impter_236, "ADS_imp_1_OUT".impter_237, "ADS_imp_1_OUT".impter_238, "ADS_imp_1_OUT".impter_239, "ADS_imp_1_OUT".impter_240, "ADS_imp_1_OUT".impter_241, "ADS_imp_1_OUT".impter_242, "ADS_imp_1_OUT".impter_243, "ADS_imp_1_OUT".impter_244, "ADS_imp_1_OUT".impter_245, "ADS_imp_1_OUT".impter_246, "ADS_imp_1_OUT".impter_247, "ADS_imp_1_OUT".impter_248, "ADS_imp_1_OUT".impter_249, "ADS_imp_1_OUT".impter_250, "ADS_imp_1_OUT".impter_251, "ADS_imp_1_OUT".impter_252, "ADS_imp_1_OUT".impter_253, "ADS_imp_1_OUT".impter_254, "ADS_imp_1_OUT".impter_255, "ADS_imp_1_OUT".impter_256, "ADS_imp_1_OUT".impter_257, "ADS_imp_1_OUT".impter_258, "ADS_imp_1_OUT".impter_259, "ADS_imp_1_OUT".impter_260, "ADS_imp_1_OUT".impter_261, "ADS_imp_1_OUT".impter_262, "ADS_imp_1_OUT".impter_263, "ADS_imp_1_OUT".impter_264, "ADS_imp_1_OUT".impter_265, "ADS_imp_1_OUT".impter_266, "ADS_imp_1_OUT".impter_267, "ADS_imp_1_OUT".impter_268, "ADS_imp_1_OUT".impter_269, "ADS_imp_1_OUT".impter_270, "ADS_imp_1_OUT".impter_271, "ADS_imp_1_OUT".impter_272, "ADS_imp_1_OUT".impter_273, "ADS_imp_1_OUT".impter_274, "ADS_imp_1_OUT".impter_275, "ADS_imp_1_OUT".impter_276, "ADS_imp_1_OUT".impter_277, "ADS_imp_1_OUT".impter_278, "ADS_imp_1_OUT".impter_279, "ADS_imp_1_OUT".impter_280, "ADS_imp_1_OUT".impter_281, "ADS_imp_1_OUT".impter_282, "ADS_imp_1_OUT".impter_283, "ADS_imp_1_OUT".impter_284, "ADS_imp_1_OUT".impter_285, "ADS_imp_1_OUT".impter_286, "ADS_imp_1_OUT".impter_287, "ADS_imp_1_OUT".impter_288, "ADS_imp_1_OUT".impter_289, "ADS_imp_1_OUT".impter_290, "ADS_imp_1_OUT".impter_291, "ADS_imp_1_OUT".impter_292, "ADS_imp_1_OUT".impter_293, "ADS_imp_1_OUT".impter_294, "ADS_imp_1_OUT".impter_295, "ADS_imp_1_OUT".impter_296, "ADS_imp_1_OUT".impter_297, "ADS_imp_1_OUT".impter_298, "ADS_imp_1_OUT".impter_299, "ADS_imp_1_OUT".impter_300, "ADS_imp_1_OUT".impter_301, "ADS_imp_1_OUT".impter_302, "ADS_imp_1_OUT".impter_303, "ADS_imp_1_OUT".impter_304, "ADS_imp_1_OUT".impter_305, "ADS_imp_1_OUT".impter_306, "ADS_imp_1_OUT".impter_307, "ADS_imp_1_OUT".impter_308, "ADS_imp_1_OUT".impter_309, "ADS_imp_1_OUT".impter_310, "ADS_imp_1_OUT".impter_311, "ADS_imp_1_OUT".impter_312, "ADS_imp_1_OUT".impter_313, "ADS_imp_1_OUT".impter_314, "ADS_imp_1_OUT".impter_315, "ADS_imp_1_OUT".impter_316, "ADS_imp_1_OUT".impter_317, "ADS_imp_1_OUT".impter_318, "ADS_imp_1_OUT".impter_319, "ADS_imp_1_OUT".impter_320, "ADS_imp_1_OUT".impter_321, "ADS_imp_1_OUT".impter_322, "ADS_imp_1_OUT".impter_323, "ADS_imp_1_OUT".impter_324, "ADS_imp_1_OUT".impter_325, "ADS_imp_1_OUT".impter_326, "ADS_imp_1_OUT".impter_327, "ADS_imp_1_OUT".impter_328, "ADS_imp_1_OUT".impter_329, "ADS_imp_1_OUT".impter_330, "ADS_imp_1_OUT".impter_331, "ADS_imp_1_OUT".impter_332, "ADS_imp_1_OUT".impter_333, "ADS_imp_1_OUT".impter_334, "ADS_imp_1_OUT".impter_335, "ADS_imp_1_OUT".impter_336, "ADS_imp_1_OUT".impter_337, "ADS_imp_1_OUT".impter_338, "ADS_imp_1_OUT".impter_339, "ADS_imp_1_OUT".impter_340, "ADS_imp_1_OUT".impter_341, "ADS_imp_1_OUT".impter_342, "ADS_imp_1_OUT".impter_343, "ADS_imp_1_OUT".impter_344, "ADS_imp_1_OUT".impter_345, "ADS_imp_1_OUT".impter_346, "ADS_imp_1_OUT".impter_347, "ADS_imp_1_OUT".impter_348, "ADS_imp_1_OUT".impter_349, "ADS_imp_1_OUT".impter_350, "ADS_imp_1_OUT".impter_351, "ADS_imp_1_OUT".impter_352, "ADS_imp_1_OUT".impter_353, "ADS_imp_1_OUT".impter_354, "ADS_imp_1_OUT".impter_355, "ADS_imp_1_OUT".impter_356, "ADS_imp_1_OUT".impter_357, "ADS_imp_1_OUT".impter_358, "ADS_imp_1_OUT".impter_359, "ADS_imp_1_OUT".impter_360, "ADS_imp_1_OUT".impter_361, "ADS_imp_1_OUT".impter_362, "ADS_imp_1_OUT".impter_363, "ADS_imp_1_OUT".impter_364, "ADS_imp_1_OUT".impter_365, "ADS_imp_1_OUT".impter_366, "ADS_imp_1_OUT".impter_367, "ADS_imp_1_OUT".impter_368, "ADS_imp_1_OUT".impter_369, "ADS_imp_1_OUT".impter_370, "ADS_imp_1_OUT".impter_371, "ADS_imp_1_OUT".impter_372, "ADS_imp_1_OUT".impter_373, "ADS_imp_1_OUT".impter_374, "ADS_imp_1_OUT".impter_375, "ADS_imp_1_OUT".impter_376, "ADS_imp_1_OUT".impter_377, "ADS_imp_1_OUT".impter_378, "ADS_imp_1_OUT".impter_379, "ADS_imp_1_OUT".impter_380, "ADS_imp_1_OUT".impter_381, "ADS_imp_1_OUT".impter_382, "ADS_imp_1_OUT".impter_383, "ADS_imp_1_OUT".impter_384, "ADS_imp_1_OUT".impter_385, "ADS_imp_1_OUT".impter_386, "ADS_imp_1_OUT".impter_387, "ADS_imp_1_OUT".impter_388, "ADS_imp_1_OUT".impter_389, "ADS_imp_1_OUT".impter_390, "ADS_imp_1_OUT".impter_391, "ADS_imp_1_OUT".impter_392, "ADS_imp_1_OUT".impter_393, "ADS_imp_1_OUT".impter_394, "ADS_imp_1_OUT".impter_395, "ADS_imp_1_OUT".impter_396, "ADS_imp_1_OUT".impter_397, "ADS_imp_1_OUT".impter_398, "ADS_imp_1_OUT".impter_399, "ADS_imp_1_OUT".impter_400, "ADS_imp_1_OUT".impter_401, "ADS_imp_1_OUT".impter_402, "ADS_imp_1_OUT".impter_403, "ADS_imp_1_OUT".impter_404, "ADS_imp_1_OUT".impter_405, "ADS_imp_1_OUT".impter_406, "ADS_imp_1_OUT".impter_407, "ADS_imp_1_OUT".impter_408, "ADS_imp_1_OUT".impter_409, "ADS_imp_1_OUT".impter_410, "ADS_imp_1_OUT".impter_411, "ADS_imp_1_OUT".impter_412, "ADS_imp_1_OUT".impter_413, "ADS_imp_1_OUT".impter_414, "ADS_imp_1_OUT".impter_415, "ADS_imp_1_OUT".impter_416, "ADS_imp_1_OUT".impter_417, "ADS_imp_1_OUT".impter_418, "ADS_imp_1_OUT".impter_419, "ADS_imp_1_OUT".impter_420, "ADS_imp_1_OUT".impter_421, "ADS_imp_1_OUT".impter_422, "ADS_imp_1_OUT".impter_423, "ADS_imp_1_OUT".impter_424, "ADS_imp_1_OUT".impter_425, "ADS_imp_1_OUT".impter_426, "ADS_imp_1_OUT".impter_427, "ADS_imp_1_OUT".impter_428, "ADS_imp_1_OUT".impter_429, "ADS_imp_1_OUT".impter_430, "ADS_imp_1_OUT".impter_431, "ADS_imp_1_OUT".impter_432, "ADS_imp_1_OUT".impter_433, "ADS_imp_1_OUT".impter_434, "ADS_imp_1_OUT".impter_435, "ADS_imp_1_OUT".impter_436, "ADS_imp_1_OUT".impter_437, "ADS_imp_1_OUT".impter_438, "ADS_imp_1_OUT".impter_439, "ADS_imp_1_OUT".impter_440, "ADS_imp_1_OUT".impter_441, "ADS_imp_1_OUT".impter_442, "ADS_imp_1_OUT".impter_443, "ADS_imp_1_OUT".impter_444, "ADS_imp_1_OUT".impter_445, "ADS_imp_1_OUT".impter_446, "ADS_imp_1_OUT".impter_447, "ADS_imp_1_OUT".impter_448, "ADS_imp_1_OUT".impter_449, "ADS_imp_1_OUT".impter_450, "ADS_imp_1_OUT".impter_451, "ADS_imp_1_OUT".impter_452, "ADS_imp_1_OUT".impter_453, "ADS_imp_1_OUT".impter_454, "ADS_imp_1_OUT".impter_455, "ADS_imp_1_OUT".impter_456, "ADS_imp_1_OUT".impter_457, "ADS_imp_1_OUT".impter_458, "ADS_imp_1_OUT".impter_459, "ADS_imp_1_OUT".impter_460, "ADS_imp_1_OUT".impter_461, "ADS_imp_1_OUT".impter_462, "ADS_imp_1_OUT".impter_463, "ADS_imp_1_OUT".impter_464, "ADS_imp_1_OUT".impter_465, "ADS_imp_1_OUT".impter_466, "ADS_imp_1_OUT".impter_467, "ADS_imp_1_OUT".impter_468, "ADS_imp_1_OUT".impter_469, "ADS_imp_1_OUT".impter_470, "ADS_imp_1_OUT".impter_471, "ADS_imp_1_OUT".impter_472, "ADS_imp_1_OUT".impter_473, "ADS_imp_1_OUT".impter_474, "ADS_imp_1_OUT".impter_475, "ADS_imp_1_OUT".impter_476, "ADS_imp_1_OUT".impter_477, "ADS_imp_1_OUT".impter_478, "ADS_imp_1_OUT".impter_479, "ADS_imp_1_OUT".impter_480, "ADS_imp_1_OUT".impter_481, "ADS_imp_1_OUT".impter_482, "ADS_imp_1_OUT".impter_483, "ADS_imp_1_OUT".impter_484, "ADS_imp_1_OUT".impter_485, "ADS_imp_1_OUT".impter_486, "ADS_imp_1_OUT".impter_487, "ADS_imp_1_OUT".impter_488, "ADS_imp_1_OUT".impter_489, "ADS_imp_1_OUT".impter_490, "ADS_imp_1_OUT".impter_491, "ADS_imp_1_OUT".impter_492, "ADS_imp_1_OUT".impter_493, "ADS_imp_1_OUT".impter_494, "ADS_imp_1_OUT".impter_495, "ADS_imp_1_OUT".impter_496, "ADS_imp_1_OUT".impter_497, "ADS_imp_1_OUT".impter_498, "ADS_imp_1_OUT".impter_499, "ADS_imp_1_OUT".impter_500, "ADS_imp_1_OUT".impter_501 
FROM (SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" IS NULL) THEN 0.10810245375646362 ELSE "ADS"."Feature_0" END AS impter_2, CASE WHEN ("ADS"."Feature_1" IS NULL) THEN 0.040042372892287084 ELSE "ADS"."Feature_1" END AS impter_3, CASE WHEN ("ADS"."Feature_2" IS NULL) THEN -0.07667364732662786 ELSE "ADS"."Feature_2" END AS impter_4, CASE WHEN ("ADS"."Feature_3" IS NULL) THEN 0.17588592419877258 ELSE "ADS"."Feature_3" END AS impter_5, CASE WHEN ("ADS"."Feature_4" IS NULL) THEN 0.02926169026463611 ELSE "ADS"."Feature_4" END AS impter_6, CASE WHEN ("ADS"."Feature_5" IS NULL) THEN -0.00904400654098767 ELSE "ADS"."Feature_5" END AS impter_7, CASE WHEN ("ADS"."Feature_6" IS NULL) THEN 0.02021641814123045 ELSE "ADS"."Feature_6" END AS impter_8, CASE WHEN ("ADS"."Feature_7" IS NULL) THEN -0.021740866363558604 ELSE "ADS"."Feature_7" END AS impter_9, CASE WHEN ("ADS"."Feature_8" IS NULL) THEN 0.12136863686872651 ELSE "ADS"."Feature_8" END AS impter_10, CASE WHEN ("ADS"."Feature_9" IS NULL) THEN -0.009621207715304118 ELSE "ADS"."Feature_9" END AS impter_11, CASE WHEN ("ADS"."Feature_10" IS NULL) THEN -0.0017282210866736356 ELSE "ADS"."Feature_10" END AS impter_12, CASE WHEN ("ADS"."Feature_11" IS NULL) THEN -0.017782065935332218 ELSE "ADS"."Feature_11" END AS impter_13, CASE WHEN ("ADS"."Feature_12" IS NULL) THEN 0.03226275015550329 ELSE "ADS"."Feature_12" END AS impter_14, CASE WHEN ("ADS"."Feature_13" IS NULL) THEN -0.0014825533746410664 ELSE "ADS"."Feature_13" END AS impter_15, CASE WHEN ("ADS"."Feature_14" IS NULL) THEN 0.06164712316198218 ELSE "ADS"."Feature_14" END AS impter_16, CASE WHEN ("ADS"."Feature_15" IS NULL) THEN 0.02754670267716649 ELSE "ADS"."Feature_15" END AS impter_17, CASE WHEN ("ADS"."Feature_16" IS NULL) THEN 0.08064319713194991 ELSE "ADS"."Feature_16" END AS impter_18, CASE WHEN ("ADS"."Feature_17" IS NULL) THEN -0.011498650117894155 ELSE "ADS"."Feature_17" END AS impter_19, CASE WHEN ("ADS"."Feature_18" IS NULL) THEN 0.31890266993969374 ELSE "ADS"."Feature_18" END AS impter_20, CASE WHEN ("ADS"."Feature_19" IS NULL) THEN -0.00022777424626326773 ELSE "ADS"."Feature_19" END AS impter_21, CASE WHEN ("ADS"."Feature_20" IS NULL) THEN 0.24588258651573852 ELSE "ADS"."Feature_20" END AS impter_22, CASE WHEN ("ADS"."Feature_21" IS NULL) THEN -0.008717075180818528 ELSE "ADS"."Feature_21" END AS impter_23, CASE WHEN ("ADS"."Feature_22" IS NULL) THEN 0.0053072366770978985 ELSE "ADS"."Feature_22" END AS impter_24, CASE WHEN ("ADS"."Feature_23" IS NULL) THEN -0.014763237855175493 ELSE "ADS"."Feature_23" END AS impter_25, CASE WHEN ("ADS"."Feature_24" IS NULL) THEN -0.023154438774995047 ELSE "ADS"."Feature_24" END AS impter_26, CASE WHEN ("ADS"."Feature_25" IS NULL) THEN -0.12239207011675045 ELSE "ADS"."Feature_25" END AS impter_27, CASE WHEN ("ADS"."Feature_26" IS NULL) THEN 0.020535611934405496 ELSE "ADS"."Feature_26" END AS impter_28, CASE WHEN ("ADS"."Feature_27" IS NULL) THEN 0.006055843023249926 ELSE "ADS"."Feature_27" END AS impter_29, CASE WHEN ("ADS"."Feature_28" IS NULL) THEN -0.02283750315483421 ELSE "ADS"."Feature_28" END AS impter_30, CASE WHEN ("ADS"."Feature_29" IS NULL) THEN 0.023985609638350506 ELSE "ADS"."Feature_29" END AS impter_31, CASE WHEN ("ADS"."Feature_30" IS NULL) THEN 0.008119293552803313 ELSE "ADS"."Feature_30" END AS impter_32, CASE WHEN ("ADS"."Feature_31" IS NULL) THEN 0.027089596569202946 ELSE "ADS"."Feature_31" END AS impter_33, CASE WHEN ("ADS"."Feature_32" IS NULL) THEN -0.06055225058050742 ELSE "ADS"."Feature_32" END AS impter_34, CASE WHEN ("ADS"."Feature_33" IS NULL) THEN -0.024424868791331697 ELSE "ADS"."Feature_33" END AS impter_35, CASE WHEN ("ADS"."Feature_34" IS NULL) THEN 0.012336464422653204 ELSE "ADS"."Feature_34" END AS impter_36, CASE WHEN ("ADS"."Feature_35" IS NULL) THEN -0.03733185453369615 ELSE "ADS"."Feature_35" END AS impter_37, CASE WHEN ("ADS"."Feature_36" IS NULL) THEN -0.01163301006213858 ELSE "ADS"."Feature_36" END AS impter_38, CASE WHEN ("ADS"."Feature_37" IS NULL) THEN -0.05102972508859019 ELSE "ADS"."Feature_37" END AS impter_39, CASE WHEN ("ADS"."Feature_38" IS NULL) THEN 0.0724619853931901 ELSE "ADS"."Feature_38" END AS impter_40, CASE WHEN ("ADS"."Feature_39" IS NULL) THEN 0.02873322955169374 ELSE "ADS"."Feature_39" END AS impter_41, CASE WHEN ("ADS"."Feature_40" IS NULL) THEN -0.0468030521847972 ELSE "ADS"."Feature_40" END AS impter_42, CASE WHEN ("ADS"."Feature_41" IS NULL) THEN 0.024222315050048744 ELSE "ADS"."Feature_41" END AS impter_43, CASE WHEN ("ADS"."Feature_42" IS NULL) THEN 0.01149556673107005 ELSE "ADS"."Feature_42" END AS impter_44, CASE WHEN ("ADS"."Feature_43" IS NULL) THEN -0.46581882386282575 ELSE "ADS"."Feature_43" END AS impter_45, CASE WHEN ("ADS"."Feature_44" IS NULL) THEN -0.0013382860297555803 ELSE "ADS"."Feature_44" END AS impter_46, CASE WHEN ("ADS"."Feature_45" IS NULL) THEN -0.008602411981840778 ELSE "ADS"."Feature_45" END AS impter_47, CASE WHEN ("ADS"."Feature_46" IS NULL) THEN -0.009965212302201201 ELSE "ADS"."Feature_46" END AS impter_48, CASE WHEN ("ADS"."Feature_47" IS NULL) THEN -0.03978485158208147 ELSE "ADS"."Feature_47" END AS impter_49, CASE WHEN ("ADS"."Feature_48" IS NULL) THEN 0.007027179196660041 ELSE "ADS"."Feature_48" END AS impter_50, CASE WHEN ("ADS"."Feature_49" IS NULL) THEN -0.01982980508470468 ELSE "ADS"."Feature_49" END AS impter_51, CASE WHEN ("ADS"."Feature_50" IS NULL) THEN -0.04505595017989205 ELSE "ADS"."Feature_50" END AS impter_52, CASE WHEN ("ADS"."Feature_51" IS NULL) THEN -0.045447760217128444 ELSE "ADS"."Feature_51" END AS impter_53, CASE WHEN ("ADS"."Feature_52" IS NULL) THEN 0.037832771618739616 ELSE "ADS"."Feature_52" END AS impter_54, CASE WHEN ("ADS"."Feature_53" IS NULL) THEN -0.061624599074911364 ELSE "ADS"."Feature_53" END AS impter_55, CASE WHEN ("ADS"."Feature_54" IS NULL) THEN 0.07625111583055796 ELSE "ADS"."Feature_54" END AS impter_56, CASE WHEN ("ADS"."Feature_55" IS NULL) THEN -0.027271537635613834 ELSE "ADS"."Feature_55" END AS impter_57, CASE WHEN ("ADS"."Feature_56" IS NULL) THEN 0.08658875419996898 ELSE "ADS"."Feature_56" END AS impter_58, CASE WHEN ("ADS"."Feature_57" IS NULL) THEN 0.0999871472844467 ELSE "ADS"."Feature_57" END AS impter_59, CASE WHEN ("ADS"."Feature_58" IS NULL) THEN -0.007447998234187981 ELSE "ADS"."Feature_58" END AS impter_60, CASE WHEN ("ADS"."Feature_59" IS NULL) THEN 0.0005691476004520007 ELSE "ADS"."Feature_59" END AS impter_61, CASE WHEN ("ADS"."Feature_60" IS NULL) THEN 0.007052612183486737 ELSE "ADS"."Feature_60" END AS impter_62, CASE WHEN ("ADS"."Feature_61" IS NULL) THEN -0.07298857610906591 ELSE "ADS"."Feature_61" END AS impter_63, CASE WHEN ("ADS"."Feature_62" IS NULL) THEN 0.007257283737326912 ELSE "ADS"."Feature_62" END AS impter_64, CASE WHEN ("ADS"."Feature_63" IS NULL) THEN -0.01499281527733551 ELSE "ADS"."Feature_63" END AS impter_65, CASE WHEN ("ADS"."Feature_64" IS NULL) THEN 0.1504932184478646 ELSE "ADS"."Feature_64" END AS impter_66, CASE WHEN ("ADS"."Feature_65" IS NULL) THEN -0.34139964395628075 ELSE "ADS"."Feature_65" END AS impter_67, CASE WHEN ("ADS"."Feature_66" IS NULL) THEN 0.044769898693156215 ELSE "ADS"."Feature_66" END AS impter_68, CASE WHEN ("ADS"."Feature_67" IS NULL) THEN -0.06740805909718733 ELSE "ADS"."Feature_67" END AS impter_69, CASE WHEN ("ADS"."Feature_68" IS NULL) THEN 0.011827724290967036 ELSE "ADS"."Feature_68" END AS impter_70, CASE WHEN ("ADS"."Feature_69" IS NULL) THEN 0.04511965476174756 ELSE "ADS"."Feature_69" END AS impter_71, CASE WHEN ("ADS"."Feature_70" IS NULL) THEN -0.005725960546688403 ELSE "ADS"."Feature_70" END AS impter_72, CASE WHEN ("ADS"."Feature_71" IS NULL) THEN -0.45906874360950467 ELSE "ADS"."Feature_71" END AS impter_73, CASE WHEN ("ADS"."Feature_72" IS NULL) THEN -0.4029233461203958 ELSE "ADS"."Feature_72" END AS impter_74, CASE WHEN ("ADS"."Feature_73" IS NULL) THEN -0.01983348240532154 ELSE "ADS"."Feature_73" END AS impter_75, CASE WHEN ("ADS"."Feature_74" IS NULL) THEN -0.03762876790351029 ELSE "ADS"."Feature_74" END AS impter_76, CASE WHEN ("ADS"."Feature_75" IS NULL) THEN 0.0014482025177064296 ELSE "ADS"."Feature_75" END AS impter_77, CASE WHEN ("ADS"."Feature_76" IS NULL) THEN -0.009126373209438378 ELSE "ADS"."Feature_76" END AS impter_78, CASE WHEN ("ADS"."Feature_77" IS NULL) THEN -0.004847879746676399 ELSE "ADS"."Feature_77" END AS impter_79, CASE WHEN ("ADS"."Feature_78" IS NULL) THEN 0.0003242960082649739 ELSE "ADS"."Feature_78" END AS impter_80, CASE WHEN ("ADS"."Feature_79" IS NULL) THEN -0.030222670037465243 ELSE "ADS"."Feature_79" END AS impter_81, CASE WHEN ("ADS"."Feature_80" IS NULL) THEN 0.00597438906398475 ELSE "ADS"."Feature_80" END AS impter_82, CASE WHEN ("ADS"."Feature_81" IS NULL) THEN 0.006442151047769896 ELSE "ADS"."Feature_81" END AS impter_83, CASE WHEN ("ADS"."Feature_82" IS NULL) THEN 0.06674583942705845 ELSE "ADS"."Feature_82" END AS impter_84, CASE WHEN ("ADS"."Feature_83" IS NULL) THEN 0.07788312942179253 ELSE "ADS"."Feature_83" END AS impter_85, CASE WHEN ("ADS"."Feature_84" IS NULL) THEN 0.04734384734963352 ELSE "ADS"."Feature_84" END AS impter_86, CASE WHEN ("ADS"."Feature_85" IS NULL) THEN -0.008706507745982245 ELSE "ADS"."Feature_85" END AS impter_87, CASE WHEN ("ADS"."Feature_86" IS NULL) THEN 0.048010462132819065 ELSE "ADS"."Feature_86" END AS impter_88, CASE WHEN ("ADS"."Feature_87" IS NULL) THEN -0.015721233574226466 ELSE "ADS"."Feature_87" END AS impter_89, CASE WHEN ("ADS"."Feature_88" IS NULL) THEN 0.029859590983661574 ELSE "ADS"."Feature_88" END AS impter_90, CASE WHEN ("ADS"."Feature_89" IS NULL) THEN 0.05432072236762381 ELSE "ADS"."Feature_89" END AS impter_91, CASE WHEN ("ADS"."Feature_90" IS NULL) THEN -0.01029209788232909 ELSE "ADS"."Feature_90" END AS impter_92, CASE WHEN ("ADS"."Feature_91" IS NULL) THEN -0.057667586642934685 ELSE "ADS"."Feature_91" END AS impter_93, CASE WHEN ("ADS"."Feature_92" IS NULL) THEN 0.010705496096094396 ELSE "ADS"."Feature_92" END AS impter_94, CASE WHEN ("ADS"."Feature_93" IS NULL) THEN 0.07155562158168 ELSE "ADS"."Feature_93" END AS impter_95, CASE WHEN ("ADS"."Feature_94" IS NULL) THEN 0.012567881232469623 ELSE "ADS"."Feature_94" END AS impter_96, CASE WHEN ("ADS"."Feature_95" IS NULL) THEN 0.013515801306018876 ELSE "ADS"."Feature_95" END AS impter_97, CASE WHEN ("ADS"."Feature_96" IS NULL) THEN -0.03144133874056725 ELSE "ADS"."Feature_96" END AS impter_98, CASE WHEN ("ADS"."Feature_97" IS NULL) THEN 0.04347042885615023 ELSE "ADS"."Feature_97" END AS impter_99, CASE WHEN ("ADS"."Feature_98" IS NULL) THEN 0.06271561958724896 ELSE "ADS"."Feature_98" END AS impter_100, CASE WHEN ("ADS"."Feature_99" IS NULL) THEN 0.05756441101485498 ELSE "ADS"."Feature_99" END AS impter_101, CASE WHEN ("ADS"."Feature_100" IS NULL) THEN 0.08328088835981105 ELSE "ADS"."Feature_100" END AS impter_102, CASE WHEN ("ADS"."Feature_101" IS NULL) THEN 0.027342821102590696 ELSE "ADS"."Feature_101" END AS impter_103, CASE WHEN ("ADS"."Feature_102" IS NULL) THEN -0.45823161485829694 ELSE "ADS"."Feature_102" END AS impter_104, CASE WHEN ("ADS"."Feature_103" IS NULL) THEN -0.0574871655764397 ELSE "ADS"."Feature_103" END AS impter_105, CASE WHEN ("ADS"."Feature_104" IS NULL) THEN -0.04439086595851878 ELSE "ADS"."Feature_104" END AS impter_106, CASE WHEN ("ADS"."Feature_105" IS NULL) THEN 0.02144592469206838 ELSE "ADS"."Feature_105" END AS impter_107, CASE WHEN ("ADS"."Feature_106" IS NULL) THEN 0.11209373860993643 ELSE "ADS"."Feature_106" END AS impter_108, CASE WHEN ("ADS"."Feature_107" IS NULL) THEN 0.020021880427962078 ELSE "ADS"."Feature_107" END AS impter_109, CASE WHEN ("ADS"."Feature_108" IS NULL) THEN -0.009743329217515511 ELSE "ADS"."Feature_108" END AS impter_110, CASE WHEN ("ADS"."Feature_109" IS NULL) THEN 0.4786622270719938 ELSE "ADS"."Feature_109" END AS impter_111, CASE WHEN ("ADS"."Feature_110" IS NULL) THEN 0.02944493462807616 ELSE "ADS"."Feature_110" END AS impter_112, CASE WHEN ("ADS"."Feature_111" IS NULL) THEN -0.00310096676730144 ELSE "ADS"."Feature_111" END AS impter_113, CASE WHEN ("ADS"."Feature_112" IS NULL) THEN 0.0231371409575344 ELSE "ADS"."Feature_112" END AS impter_114, CASE WHEN ("ADS"."Feature_113" IS NULL) THEN -0.04815066967587055 ELSE "ADS"."Feature_113" END AS impter_115, CASE WHEN ("ADS"."Feature_114" IS NULL) THEN 0.025111413866439537 ELSE "ADS"."Feature_114" END AS impter_116, CASE WHEN ("ADS"."Feature_115" IS NULL) THEN 0.0021133311116955213 ELSE "ADS"."Feature_115" END AS impter_117, CASE WHEN ("ADS"."Feature_116" IS NULL) THEN 0.034947174142157644 ELSE "ADS"."Feature_116" END AS impter_118, CASE WHEN ("ADS"."Feature_117" IS NULL) THEN -0.05606347652620213 ELSE "ADS"."Feature_117" END AS impter_119, CASE WHEN ("ADS"."Feature_118" IS NULL) THEN -0.023812528369921485 ELSE "ADS"."Feature_118" END AS impter_120, CASE WHEN ("ADS"."Feature_119" IS NULL) THEN -0.042073637845818246 ELSE "ADS"."Feature_119" END AS impter_121, CASE WHEN ("ADS"."Feature_120" IS NULL) THEN 0.007882510288965947 ELSE "ADS"."Feature_120" END AS impter_122, CASE WHEN ("ADS"."Feature_121" IS NULL) THEN -0.02733468989970973 ELSE "ADS"."Feature_121" END AS impter_123, CASE WHEN ("ADS"."Feature_122" IS NULL) THEN -0.6701750904403835 ELSE "ADS"."Feature_122" END AS impter_124, CASE WHEN ("ADS"."Feature_123" IS NULL) THEN -0.04044317104909807 ELSE "ADS"."Feature_123" END AS impter_125, CASE WHEN ("ADS"."Feature_124" IS NULL) THEN -0.00837516585592746 ELSE "ADS"."Feature_124" END AS impter_126, CASE WHEN ("ADS"."Feature_125" IS NULL) THEN -0.005344367193538407 ELSE "ADS"."Feature_125" END AS impter_127, CASE WHEN ("ADS"."Feature_126" IS NULL) THEN -0.009191225939401346 ELSE "ADS"."Feature_126" END AS impter_128, CASE WHEN ("ADS"."Feature_127" IS NULL) THEN -0.004068573508204202 ELSE "ADS"."Feature_127" END AS impter_129, CASE WHEN ("ADS"."Feature_128" IS NULL) THEN -0.030267877751773992 ELSE "ADS"."Feature_128" END AS impter_130, CASE WHEN ("ADS"."Feature_129" IS NULL) THEN 0.17410306271063888 ELSE "ADS"."Feature_129" END AS impter_131, CASE WHEN ("ADS"."Feature_130" IS NULL) THEN -0.012642941998284607 ELSE "ADS"."Feature_130" END AS impter_132, CASE WHEN ("ADS"."Feature_131" IS NULL) THEN 0.01749739797543971 ELSE "ADS"."Feature_131" END AS impter_133, CASE WHEN ("ADS"."Feature_132" IS NULL) THEN 0.5426783595611434 ELSE "ADS"."Feature_132" END AS impter_134, CASE WHEN ("ADS"."Feature_133" IS NULL) THEN -0.5946970819130108 ELSE "ADS"."Feature_133" END AS impter_135, CASE WHEN ("ADS"."Feature_134" IS NULL) THEN -0.02934504234656094 ELSE "ADS"."Feature_134" END AS impter_136, CASE WHEN ("ADS"."Feature_135" IS NULL) THEN 0.06552557763413538 ELSE "ADS"."Feature_135" END AS impter_137, CASE WHEN ("ADS"."Feature_136" IS NULL) THEN -0.05569025110062092 ELSE "ADS"."Feature_136" END AS impter_138, CASE WHEN ("ADS"."Feature_137" IS NULL) THEN 0.023191171882599493 ELSE "ADS"."Feature_137" END AS impter_139, CASE WHEN ("ADS"."Feature_138" IS NULL) THEN -0.05295059390165566 ELSE "ADS"."Feature_138" END AS impter_140, CASE WHEN ("ADS"."Feature_139" IS NULL) THEN 0.033509246297397904 ELSE "ADS"."Feature_139" END AS impter_141, CASE WHEN ("ADS"."Feature_140" IS NULL) THEN -0.04155471151345872 ELSE "ADS"."Feature_140" END AS impter_142, CASE WHEN ("ADS"."Feature_141" IS NULL) THEN -0.6634336506604639 ELSE "ADS"."Feature_141" END AS impter_143, CASE WHEN ("ADS"."Feature_142" IS NULL) THEN -0.5573588681497673 ELSE "ADS"."Feature_142" END AS impter_144, CASE WHEN ("ADS"."Feature_143" IS NULL) THEN 0.0441240830479543 ELSE "ADS"."Feature_143" END AS impter_145, CASE WHEN ("ADS"."Feature_144" IS NULL) THEN -0.0032026430582909036 ELSE "ADS"."Feature_144" END AS impter_146, CASE WHEN ("ADS"."Feature_145" IS NULL) THEN 0.0547961032530105 ELSE "ADS"."Feature_145" END AS impter_147, CASE WHEN ("ADS"."Feature_146" IS NULL) THEN -0.0570190089317311 ELSE "ADS"."Feature_146" END AS impter_148, CASE WHEN ("ADS"."Feature_147" IS NULL) THEN -0.05068123758307288 ELSE "ADS"."Feature_147" END AS impter_149, CASE WHEN ("ADS"."Feature_148" IS NULL) THEN 0.04963772213165472 ELSE "ADS"."Feature_148" END AS impter_150, CASE WHEN ("ADS"."Feature_149" IS NULL) THEN -0.0053902063922270736 ELSE "ADS"."Feature_149" END AS impter_151, CASE WHEN ("ADS"."Feature_150" IS NULL) THEN -0.06888968948833549 ELSE "ADS"."Feature_150" END AS impter_152, CASE WHEN ("ADS"."Feature_151" IS NULL) THEN -0.016131263076271454 ELSE "ADS"."Feature_151" END AS impter_153, CASE WHEN ("ADS"."Feature_152" IS NULL) THEN -0.3673160108448531 ELSE "ADS"."Feature_152" END AS impter_154, CASE WHEN ("ADS"."Feature_153" IS NULL) THEN 0.055182003778661885 ELSE "ADS"."Feature_153" END AS impter_155, CASE WHEN ("ADS"."Feature_154" IS NULL) THEN 0.03906491494486876 ELSE "ADS"."Feature_154" END AS impter_156, CASE WHEN ("ADS"."Feature_155" IS NULL) THEN -0.018774913038090556 ELSE "ADS"."Feature_155" END AS impter_157, CASE WHEN ("ADS"."Feature_156" IS NULL) THEN 0.04167563251378332 ELSE "ADS"."Feature_156" END AS impter_158, CASE WHEN ("ADS"."Feature_157" IS NULL) THEN -0.014464200228668327 ELSE "ADS"."Feature_157" END AS impter_159, CASE WHEN ("ADS"."Feature_158" IS NULL) THEN 0.001498972159727102 ELSE "ADS"."Feature_158" END AS impter_160, CASE WHEN ("ADS"."Feature_159" IS NULL) THEN -0.018229772297973595 ELSE "ADS"."Feature_159" END AS impter_161, CASE WHEN ("ADS"."Feature_160" IS NULL) THEN -0.044371023327894055 ELSE "ADS"."Feature_160" END AS impter_162, CASE WHEN ("ADS"."Feature_161" IS NULL) THEN 0.003260044680277718 ELSE "ADS"."Feature_161" END AS impter_163, CASE WHEN ("ADS"."Feature_162" IS NULL) THEN 0.04743398414161841 ELSE "ADS"."Feature_162" END AS impter_164, CASE WHEN ("ADS"."Feature_163" IS NULL) THEN 0.02952107505742563 ELSE "ADS"."Feature_163" END AS impter_165, CASE WHEN ("ADS"."Feature_164" IS NULL) THEN 0.039029822514854 ELSE "ADS"."Feature_164" END AS impter_166, CASE WHEN ("ADS"."Feature_165" IS NULL) THEN 0.33233879962749624 ELSE "ADS"."Feature_165" END AS impter_167, CASE WHEN ("ADS"."Feature_166" IS NULL) THEN -0.030838711525630415 ELSE "ADS"."Feature_166" END AS impter_168, CASE WHEN ("ADS"."Feature_167" IS NULL) THEN 0.053457495179036106 ELSE "ADS"."Feature_167" END AS impter_169, CASE WHEN ("ADS"."Feature_168" IS NULL) THEN 0.06334783178164666 ELSE "ADS"."Feature_168" END AS impter_170, CASE WHEN ("ADS"."Feature_169" IS NULL) THEN -0.015185631962267647 ELSE "ADS"."Feature_169" END AS impter_171, CASE WHEN ("ADS"."Feature_170" IS NULL) THEN -0.0373186897788836 ELSE "ADS"."Feature_170" END AS impter_172, CASE WHEN ("ADS"."Feature_171" IS NULL) THEN 0.058926161621590305 ELSE "ADS"."Feature_171" END AS impter_173, CASE WHEN ("ADS"."Feature_172" IS NULL) THEN 9.69895410212665e-05 ELSE "ADS"."Feature_172" END AS impter_174, CASE WHEN ("ADS"."Feature_173" IS NULL) THEN 0.023780298476686824 ELSE "ADS"."Feature_173" END AS impter_175, CASE WHEN ("ADS"."Feature_174" IS NULL) THEN 0.021640308005590803 ELSE "ADS"."Feature_174" END AS impter_176, CASE WHEN ("ADS"."Feature_175" IS NULL) THEN 0.02609411025064558 ELSE "ADS"."Feature_175" END AS impter_177, CASE WHEN ("ADS"."Feature_176" IS NULL) THEN 0.053659812775327234 ELSE "ADS"."Feature_176" END AS impter_178, CASE WHEN ("ADS"."Feature_177" IS NULL) THEN 0.02312075671447861 ELSE "ADS"."Feature_177" END AS impter_179, CASE WHEN ("ADS"."Feature_178" IS NULL) THEN 0.08189652549389312 ELSE "ADS"."Feature_178" END AS impter_180, CASE WHEN ("ADS"."Feature_179" IS NULL) THEN -0.28662694866746835 ELSE "ADS"."Feature_179" END AS impter_181, CASE WHEN ("ADS"."Feature_180" IS NULL) THEN -0.06816976745830143 ELSE "ADS"."Feature_180" END AS impter_182, CASE WHEN ("ADS"."Feature_181" IS NULL) THEN -0.0288394136395886 ELSE "ADS"."Feature_181" END AS impter_183, CASE WHEN ("ADS"."Feature_182" IS NULL) THEN 0.030475929720363698 ELSE "ADS"."Feature_182" END AS impter_184, CASE WHEN ("ADS"."Feature_183" IS NULL) THEN -0.9321092506061046 ELSE "ADS"."Feature_183" END AS impter_185, CASE WHEN ("ADS"."Feature_184" IS NULL) THEN -0.005783297854668443 ELSE "ADS"."Feature_184" END AS impter_186, CASE WHEN ("ADS"."Feature_185" IS NULL) THEN -0.6842779545480162 ELSE "ADS"."Feature_185" END AS impter_187, CASE WHEN ("ADS"."Feature_186" IS NULL) THEN -0.035868681753580677 ELSE "ADS"."Feature_186" END AS impter_188, CASE WHEN ("ADS"."Feature_187" IS NULL) THEN 0.37446820466554537 ELSE "ADS"."Feature_187" END AS impter_189, CASE WHEN ("ADS"."Feature_188" IS NULL) THEN 0.03710250301413846 ELSE "ADS"."Feature_188" END AS impter_190, CASE WHEN ("ADS"."Feature_189" IS NULL) THEN -0.1405646996029281 ELSE "ADS"."Feature_189" END AS impter_191, CASE WHEN ("ADS"."Feature_190" IS NULL) THEN -0.008242263620478222 ELSE "ADS"."Feature_190" END AS impter_192, CASE WHEN ("ADS"."Feature_191" IS NULL) THEN 0.23469193009627595 ELSE "ADS"."Feature_191" END AS impter_193, CASE WHEN ("ADS"."Feature_192" IS NULL) THEN -0.04853360559010945 ELSE "ADS"."Feature_192" END AS impter_194, CASE WHEN ("ADS"."Feature_193" IS NULL) THEN -0.29107017412914993 ELSE "ADS"."Feature_193" END AS impter_195, CASE WHEN ("ADS"."Feature_194" IS NULL) THEN 0.06554945522577102 ELSE "ADS"."Feature_194" END AS impter_196, CASE WHEN ("ADS"."Feature_195" IS NULL) THEN 0.03415746968907192 ELSE "ADS"."Feature_195" END AS impter_197, CASE WHEN ("ADS"."Feature_196" IS NULL) THEN -1.0112490880861227 ELSE "ADS"."Feature_196" END AS impter_198, CASE WHEN ("ADS"."Feature_197" IS NULL) THEN 0.4496849630728245 ELSE "ADS"."Feature_197" END AS impter_199, CASE WHEN ("ADS"."Feature_198" IS NULL) THEN 0.032026535978956015 ELSE "ADS"."Feature_198" END AS impter_200, CASE WHEN ("ADS"."Feature_199" IS NULL) THEN 0.000929134812353008 ELSE "ADS"."Feature_199" END AS impter_201, CASE WHEN ("ADS"."Feature_200" IS NULL) THEN 0.013717912018418882 ELSE "ADS"."Feature_200" END AS impter_202, CASE WHEN ("ADS"."Feature_201" IS NULL) THEN -0.025517677160104602 ELSE "ADS"."Feature_201" END AS impter_203, CASE WHEN ("ADS"."Feature_202" IS NULL) THEN 0.008684033616587546 ELSE "ADS"."Feature_202" END AS impter_204, CASE WHEN ("ADS"."Feature_203" IS NULL) THEN 0.013537249806385316 ELSE "ADS"."Feature_203" END AS impter_205, CASE WHEN ("ADS"."Feature_204" IS NULL) THEN -0.0230268828473152 ELSE "ADS"."Feature_204" END AS impter_206, CASE WHEN ("ADS"."Feature_205" IS NULL) THEN 0.03589117923846176 ELSE "ADS"."Feature_205" END AS impter_207, CASE WHEN ("ADS"."Feature_206" IS NULL) THEN -0.011430934569701108 ELSE "ADS"."Feature_206" END AS impter_208, CASE WHEN ("ADS"."Feature_207" IS NULL) THEN -0.03231136300980085 ELSE "ADS"."Feature_207" END AS impter_209, CASE WHEN ("ADS"."Feature_208" IS NULL) THEN -0.03420275223278265 ELSE "ADS"."Feature_208" END AS impter_210, CASE WHEN ("ADS"."Feature_209" IS NULL) THEN 0.23377425435020424 ELSE "ADS"."Feature_209" END AS impter_211, CASE WHEN ("ADS"."Feature_210" IS NULL) THEN 0.06340248702486702 ELSE "ADS"."Feature_210" END AS impter_212, CASE WHEN ("ADS"."Feature_211" IS NULL) THEN -0.031763897397096605 ELSE "ADS"."Feature_211" END AS impter_213, CASE WHEN ("ADS"."Feature_212" IS NULL) THEN 0.004392749210234481 ELSE "ADS"."Feature_212" END AS impter_214, CASE WHEN ("ADS"."Feature_213" IS NULL) THEN -0.007220451377103457 ELSE "ADS"."Feature_213" END AS impter_215, CASE WHEN ("ADS"."Feature_214" IS NULL) THEN 0.001039454428951527 ELSE "ADS"."Feature_214" END AS impter_216, CASE WHEN ("ADS"."Feature_215" IS NULL) THEN 0.255416687811933 ELSE "ADS"."Feature_215" END AS impter_217, CASE WHEN ("ADS"."Feature_216" IS NULL) THEN -0.1279428512452052 ELSE "ADS"."Feature_216" END AS impter_218, CASE WHEN ("ADS"."Feature_217" IS NULL) THEN 0.11623077388873257 ELSE "ADS"."Feature_217" END AS impter_219, CASE WHEN ("ADS"."Feature_218" IS NULL) THEN 0.04461217703505275 ELSE "ADS"."Feature_218" END AS impter_220, CASE WHEN ("ADS"."Feature_219" IS NULL) THEN -0.03146418763016053 ELSE "ADS"."Feature_219" END AS impter_221, CASE WHEN ("ADS"."Feature_220" IS NULL) THEN 0.03437191123539599 ELSE "ADS"."Feature_220" END AS impter_222, CASE WHEN ("ADS"."Feature_221" IS NULL) THEN 0.02811765018111002 ELSE "ADS"."Feature_221" END AS impter_223, CASE WHEN ("ADS"."Feature_222" IS NULL) THEN -0.008115500982846469 ELSE "ADS"."Feature_222" END AS impter_224, CASE WHEN ("ADS"."Feature_223" IS NULL) THEN 0.0346610159959258 ELSE "ADS"."Feature_223" END AS impter_225, CASE WHEN ("ADS"."Feature_224" IS NULL) THEN 0.04873411944524845 ELSE "ADS"."Feature_224" END AS impter_226, CASE WHEN ("ADS"."Feature_225" IS NULL) THEN 4.894869923178419e-05 ELSE "ADS"."Feature_225" END AS impter_227, CASE WHEN ("ADS"."Feature_226" IS NULL) THEN 0.018209676154939517 ELSE "ADS"."Feature_226" END AS impter_228, CASE WHEN ("ADS"."Feature_227" IS NULL) THEN 0.026610576357411958 ELSE "ADS"."Feature_227" END AS impter_229, CASE WHEN ("ADS"."Feature_228" IS NULL) THEN -0.18927414463099612 ELSE "ADS"."Feature_228" END AS impter_230, CASE WHEN ("ADS"."Feature_229" IS NULL) THEN 0.7485324016005227 ELSE "ADS"."Feature_229" END AS impter_231, CASE WHEN ("ADS"."Feature_230" IS NULL) THEN 0.0487697431569858 ELSE "ADS"."Feature_230" END AS impter_232, CASE WHEN ("ADS"."Feature_231" IS NULL) THEN -0.05674203944761021 ELSE "ADS"."Feature_231" END AS impter_233, CASE WHEN ("ADS"."Feature_232" IS NULL) THEN -0.016772355037112788 ELSE "ADS"."Feature_232" END AS impter_234, CASE WHEN ("ADS"."Feature_233" IS NULL) THEN 0.021959192758732798 ELSE "ADS"."Feature_233" END AS impter_235, CASE WHEN ("ADS"."Feature_234" IS NULL) THEN 0.009017510252386856 ELSE "ADS"."Feature_234" END AS impter_236, CASE WHEN ("ADS"."Feature_235" IS NULL) THEN 0.01719604397851632 ELSE "ADS"."Feature_235" END AS impter_237, CASE WHEN ("ADS"."Feature_236" IS NULL) THEN 0.04752740880676183 ELSE "ADS"."Feature_236" END AS impter_238, CASE WHEN ("ADS"."Feature_237" IS NULL) THEN -0.6655794242164356 ELSE "ADS"."Feature_237" END AS impter_239, CASE WHEN ("ADS"."Feature_238" IS NULL) THEN 0.040740002170661385 ELSE "ADS"."Feature_238" END AS impter_240, CASE WHEN ("ADS"."Feature_239" IS NULL) THEN -0.06790575667026853 ELSE "ADS"."Feature_239" END AS impter_241, CASE WHEN ("ADS"."Feature_240" IS NULL) THEN 0.00892920073818756 ELSE "ADS"."Feature_240" END AS impter_242, CASE WHEN ("ADS"."Feature_241" IS NULL) THEN -0.05642200650387437 ELSE "ADS"."Feature_241" END AS impter_243, CASE WHEN ("ADS"."Feature_242" IS NULL) THEN 0.020080371219515784 ELSE "ADS"."Feature_242" END AS impter_244, CASE WHEN ("ADS"."Feature_243" IS NULL) THEN -0.08127236320512923 ELSE "ADS"."Feature_243" END AS impter_245, CASE WHEN ("ADS"."Feature_244" IS NULL) THEN 0.013048668554363934 ELSE "ADS"."Feature_244" END AS impter_246, CASE WHEN ("ADS"."Feature_245" IS NULL) THEN 0.018841776335809746 ELSE "ADS"."Feature_245" END AS impter_247, CASE WHEN ("ADS"."Feature_246" IS NULL) THEN -0.005693217051300183 ELSE "ADS"."Feature_246" END AS impter_248, CASE WHEN ("ADS"."Feature_247" IS NULL) THEN -0.20394320931579465 ELSE "ADS"."Feature_247" END AS impter_249, CASE WHEN ("ADS"."Feature_248" IS NULL) THEN -0.022446042990387664 ELSE "ADS"."Feature_248" END AS impter_250, CASE WHEN ("ADS"."Feature_249" IS NULL) THEN -4.076861252102798 ELSE "ADS"."Feature_249" END AS impter_251, CASE WHEN ("ADS"."Feature_250" IS NULL) THEN -0.008817990550602733 ELSE "ADS"."Feature_250" END AS impter_252, CASE WHEN ("ADS"."Feature_251" IS NULL) THEN 0.07233780023230166 ELSE "ADS"."Feature_251" END AS impter_253, CASE WHEN ("ADS"."Feature_252" IS NULL) THEN 0.1138593990290942 ELSE "ADS"."Feature_252" END AS impter_254, CASE WHEN ("ADS"."Feature_253" IS NULL) THEN -0.014123411384636636 ELSE "ADS"."Feature_253" END AS impter_255, CASE WHEN ("ADS"."Feature_254" IS NULL) THEN 0.014692128598930085 ELSE "ADS"."Feature_254" END AS impter_256, CASE WHEN ("ADS"."Feature_255" IS NULL) THEN 0.04595744723507997 ELSE "ADS"."Feature_255" END AS impter_257, CASE WHEN ("ADS"."Feature_256" IS NULL) THEN 0.015847884802623332 ELSE "ADS"."Feature_256" END AS impter_258, CASE WHEN ("ADS"."Feature_257" IS NULL) THEN 0.029322592909880204 ELSE "ADS"."Feature_257" END AS impter_259, CASE WHEN ("ADS"."Feature_258" IS NULL) THEN -0.03535258574843743 ELSE "ADS"."Feature_258" END AS impter_260, CASE WHEN ("ADS"."Feature_259" IS NULL) THEN -0.00650490190973122 ELSE "ADS"."Feature_259" END AS impter_261, CASE WHEN ("ADS"."Feature_260" IS NULL) THEN -0.03690470759934596 ELSE "ADS"."Feature_260" END AS impter_262, CASE WHEN ("ADS"."Feature_261" IS NULL) THEN -0.003181913166654664 ELSE "ADS"."Feature_261" END AS impter_263, CASE WHEN ("ADS"."Feature_262" IS NULL) THEN -0.0018035463835158838 ELSE "ADS"."Feature_262" END AS impter_264, CASE WHEN ("ADS"."Feature_263" IS NULL) THEN -0.004968061346310874 ELSE "ADS"."Feature_263" END AS impter_265, CASE WHEN ("ADS"."Feature_264" IS NULL) THEN -0.45419983150371857 ELSE "ADS"."Feature_264" END AS impter_266, CASE WHEN ("ADS"."Feature_265" IS NULL) THEN 0.033791499419119894 ELSE "ADS"."Feature_265" END AS impter_267, CASE WHEN ("ADS"."Feature_266" IS NULL) THEN -0.40319293830766156 ELSE "ADS"."Feature_266" END AS impter_268, CASE WHEN ("ADS"."Feature_267" IS NULL) THEN 0.6187460938207908 ELSE "ADS"."Feature_267" END AS impter_269, CASE WHEN ("ADS"."Feature_268" IS NULL) THEN 0.622898951615882 ELSE "ADS"."Feature_268" END AS impter_270, CASE WHEN ("ADS"."Feature_269" IS NULL) THEN -0.018232408103028765 ELSE "ADS"."Feature_269" END AS impter_271, CASE WHEN ("ADS"."Feature_270" IS NULL) THEN 0.01765800846800944 ELSE "ADS"."Feature_270" END AS impter_272, CASE WHEN ("ADS"."Feature_271" IS NULL) THEN -0.7754580279730494 ELSE "ADS"."Feature_271" END AS impter_273, CASE WHEN ("ADS"."Feature_272" IS NULL) THEN -0.008494942988361138 ELSE "ADS"."Feature_272" END AS impter_274, CASE WHEN ("ADS"."Feature_273" IS NULL) THEN 0.06500802952263218 ELSE "ADS"."Feature_273" END AS impter_275, CASE WHEN ("ADS"."Feature_274" IS NULL) THEN 0.004846639297532018 ELSE "ADS"."Feature_274" END AS impter_276, CASE WHEN ("ADS"."Feature_275" IS NULL) THEN 0.31959901606775876 ELSE "ADS"."Feature_275" END AS impter_277, CASE WHEN ("ADS"."Feature_276" IS NULL) THEN 0.06335285521269475 ELSE "ADS"."Feature_276" END AS impter_278, CASE WHEN ("ADS"."Feature_277" IS NULL) THEN 0.05639859786390925 ELSE "ADS"."Feature_277" END AS impter_279, CASE WHEN ("ADS"."Feature_278" IS NULL) THEN -0.016826126115809636 ELSE "ADS"."Feature_278" END AS impter_280, CASE WHEN ("ADS"."Feature_279" IS NULL) THEN -0.035868631202668005 ELSE "ADS"."Feature_279" END AS impter_281, CASE WHEN ("ADS"."Feature_280" IS NULL) THEN 0.5939567726507027 ELSE "ADS"."Feature_280" END AS impter_282, CASE WHEN ("ADS"."Feature_281" IS NULL) THEN -0.018499482983219337 ELSE "ADS"."Feature_281" END AS impter_283, CASE WHEN ("ADS"."Feature_282" IS NULL) THEN -0.002126060350638963 ELSE "ADS"."Feature_282" END AS impter_284, CASE WHEN ("ADS"."Feature_283" IS NULL) THEN 0.43749055924133856 ELSE "ADS"."Feature_283" END AS impter_285, CASE WHEN ("ADS"."Feature_284" IS NULL) THEN -0.002792990485326514 ELSE "ADS"."Feature_284" END AS impter_286, CASE WHEN ("ADS"."Feature_285" IS NULL) THEN 0.05111067471537181 ELSE "ADS"."Feature_285" END AS impter_287, CASE WHEN ("ADS"."Feature_286" IS NULL) THEN 0.01652404135719371 ELSE "ADS"."Feature_286" END AS impter_288, CASE WHEN ("ADS"."Feature_287" IS NULL) THEN 0.046881980038056 ELSE "ADS"."Feature_287" END AS impter_289, CASE WHEN ("ADS"."Feature_288" IS NULL) THEN -0.21093566587728044 ELSE "ADS"."Feature_288" END AS impter_290, CASE WHEN ("ADS"."Feature_289" IS NULL) THEN -0.38235732593808275 ELSE "ADS"."Feature_289" END AS impter_291, CASE WHEN ("ADS"."Feature_290" IS NULL) THEN 0.07184577295054764 ELSE "ADS"."Feature_290" END AS impter_292, CASE WHEN ("ADS"."Feature_291" IS NULL) THEN 0.04617448263239929 ELSE "ADS"."Feature_291" END AS impter_293, CASE WHEN ("ADS"."Feature_292" IS NULL) THEN -0.08558825454913567 ELSE "ADS"."Feature_292" END AS impter_294, CASE WHEN ("ADS"."Feature_293" IS NULL) THEN 0.03845417409897625 ELSE "ADS"."Feature_293" END AS impter_295, CASE WHEN ("ADS"."Feature_294" IS NULL) THEN 0.0010861389762425358 ELSE "ADS"."Feature_294" END AS impter_296, CASE WHEN ("ADS"."Feature_295" IS NULL) THEN 0.0013036543004699376 ELSE "ADS"."Feature_295" END AS impter_297, CASE WHEN ("ADS"."Feature_296" IS NULL) THEN -0.04572115009336087 ELSE "ADS"."Feature_296" END AS impter_298, CASE WHEN ("ADS"."Feature_297" IS NULL) THEN 0.109011335964655 ELSE "ADS"."Feature_297" END AS impter_299, CASE WHEN ("ADS"."Feature_298" IS NULL) THEN 0.059388745922670474 ELSE "ADS"."Feature_298" END AS impter_300, CASE WHEN ("ADS"."Feature_299" IS NULL) THEN 0.02796049502507793 ELSE "ADS"."Feature_299" END AS impter_301, CASE WHEN ("ADS"."Feature_300" IS NULL) THEN 0.06765588611224771 ELSE "ADS"."Feature_300" END AS impter_302, CASE WHEN ("ADS"."Feature_301" IS NULL) THEN 0.42516463145086364 ELSE "ADS"."Feature_301" END AS impter_303, CASE WHEN ("ADS"."Feature_302" IS NULL) THEN -0.025755583751806005 ELSE "ADS"."Feature_302" END AS impter_304, CASE WHEN ("ADS"."Feature_303" IS NULL) THEN 0.05983631292026072 ELSE "ADS"."Feature_303" END AS impter_305, CASE WHEN ("ADS"."Feature_304" IS NULL) THEN -0.022966826151323574 ELSE "ADS"."Feature_304" END AS impter_306, CASE WHEN ("ADS"."Feature_305" IS NULL) THEN -0.025059373911550786 ELSE "ADS"."Feature_305" END AS impter_307, CASE WHEN ("ADS"."Feature_306" IS NULL) THEN -0.07477780703395227 ELSE "ADS"."Feature_306" END AS impter_308, CASE WHEN ("ADS"."Feature_307" IS NULL) THEN 0.005214344538572354 ELSE "ADS"."Feature_307" END AS impter_309, CASE WHEN ("ADS"."Feature_308" IS NULL) THEN 0.15069860934029664 ELSE "ADS"."Feature_308" END AS impter_310, CASE WHEN ("ADS"."Feature_309" IS NULL) THEN 0.0920648545309688 ELSE "ADS"."Feature_309" END AS impter_311, CASE WHEN ("ADS"."Feature_310" IS NULL) THEN 0.02872039649838287 ELSE "ADS"."Feature_310" END AS impter_312, CASE WHEN ("ADS"."Feature_311" IS NULL) THEN 0.027206434346339497 ELSE "ADS"."Feature_311" END AS impter_313, CASE WHEN ("ADS"."Feature_312" IS NULL) THEN 0.006348743003703792 ELSE "ADS"."Feature_312" END AS impter_314, CASE WHEN ("ADS"."Feature_313" IS NULL) THEN -0.05402460092901892 ELSE "ADS"."Feature_313" END AS impter_315, CASE WHEN ("ADS"."Feature_314" IS NULL) THEN 0.027029051133963092 ELSE "ADS"."Feature_314" END AS impter_316, CASE WHEN ("ADS"."Feature_315" IS NULL) THEN -0.0064650471205589975 ELSE "ADS"."Feature_315" END AS impter_317, CASE WHEN ("ADS"."Feature_316" IS NULL) THEN -0.043335487666484804 ELSE "ADS"."Feature_316" END AS impter_318, CASE WHEN ("ADS"."Feature_317" IS NULL) THEN 0.04481518768554344 ELSE "ADS"."Feature_317" END AS impter_319, CASE WHEN ("ADS"."Feature_318" IS NULL) THEN 0.004584500412058787 ELSE "ADS"."Feature_318" END AS impter_320, CASE WHEN ("ADS"."Feature_319" IS NULL) THEN -0.001027021710811342 ELSE "ADS"."Feature_319" END AS impter_321, CASE WHEN ("ADS"."Feature_320" IS NULL) THEN -0.03706762371695285 ELSE "ADS"."Feature_320" END AS impter_322, CASE WHEN ("ADS"."Feature_321" IS NULL) THEN -0.01578014654880059 ELSE "ADS"."Feature_321" END AS impter_323, CASE WHEN ("ADS"."Feature_322" IS NULL) THEN -0.06476010801389685 ELSE "ADS"."Feature_322" END AS impter_324, CASE WHEN ("ADS"."Feature_323" IS NULL) THEN 0.013158594346038825 ELSE "ADS"."Feature_323" END AS impter_325, CASE WHEN ("ADS"."Feature_324" IS NULL) THEN -0.6909561374047029 ELSE "ADS"."Feature_324" END AS impter_326, CASE WHEN ("ADS"."Feature_325" IS NULL) THEN -0.032307395882269586 ELSE "ADS"."Feature_325" END AS impter_327, CASE WHEN ("ADS"."Feature_326" IS NULL) THEN 0.001871548534192734 ELSE "ADS"."Feature_326" END AS impter_328, CASE WHEN ("ADS"."Feature_327" IS NULL) THEN 0.009014081196377208 ELSE "ADS"."Feature_327" END AS impter_329, CASE WHEN ("ADS"."Feature_328" IS NULL) THEN 0.08432204289520576 ELSE "ADS"."Feature_328" END AS impter_330, CASE WHEN ("ADS"."Feature_329" IS NULL) THEN 0.03098818000424445 ELSE "ADS"."Feature_329" END AS impter_331, CASE WHEN ("ADS"."Feature_330" IS NULL) THEN 0.017842106547205465 ELSE "ADS"."Feature_330" END AS impter_332, CASE WHEN ("ADS"."Feature_331" IS NULL) THEN 0.009830954519062886 ELSE "ADS"."Feature_331" END AS impter_333, CASE WHEN ("ADS"."Feature_332" IS NULL) THEN 0.018857904928326345 ELSE "ADS"."Feature_332" END AS impter_334, CASE WHEN ("ADS"."Feature_333" IS NULL) THEN -0.09041919658309759 ELSE "ADS"."Feature_333" END AS impter_335, CASE WHEN ("ADS"."Feature_334" IS NULL) THEN -0.0030938413689644926 ELSE "ADS"."Feature_334" END AS impter_336, CASE WHEN ("ADS"."Feature_335" IS NULL) THEN 0.06013463236860367 ELSE "ADS"."Feature_335" END AS impter_337, CASE WHEN ("ADS"."Feature_336" IS NULL) THEN -0.006783134159713595 ELSE "ADS"."Feature_336" END AS impter_338, CASE WHEN ("ADS"."Feature_337" IS NULL) THEN -0.022505432033342578 ELSE "ADS"."Feature_337" END AS impter_339, CASE WHEN ("ADS"."Feature_338" IS NULL) THEN 0.012902527459674764 ELSE "ADS"."Feature_338" END AS impter_340, CASE WHEN ("ADS"."Feature_339" IS NULL) THEN -0.03249915020429405 ELSE "ADS"."Feature_339" END AS impter_341, CASE WHEN ("ADS"."Feature_340" IS NULL) THEN -0.03379268322494926 ELSE "ADS"."Feature_340" END AS impter_342, CASE WHEN ("ADS"."Feature_341" IS NULL) THEN 0.006926122620280751 ELSE "ADS"."Feature_341" END AS impter_343, CASE WHEN ("ADS"."Feature_342" IS NULL) THEN -0.03319669654598365 ELSE "ADS"."Feature_342" END AS impter_344, CASE WHEN ("ADS"."Feature_343" IS NULL) THEN 2.7390190345202456 ELSE "ADS"."Feature_343" END AS impter_345, CASE WHEN ("ADS"."Feature_344" IS NULL) THEN -0.0075319633963496155 ELSE "ADS"."Feature_344" END AS impter_346, CASE WHEN ("ADS"."Feature_345" IS NULL) THEN 0.022124363701982737 ELSE "ADS"."Feature_345" END AS impter_347, CASE WHEN ("ADS"."Feature_346" IS NULL) THEN -0.023653773851870237 ELSE "ADS"."Feature_346" END AS impter_348, CASE WHEN ("ADS"."Feature_347" IS NULL) THEN -0.01620635032677563 ELSE "ADS"."Feature_347" END AS impter_349, CASE WHEN ("ADS"."Feature_348" IS NULL) THEN -0.021142104441251273 ELSE "ADS"."Feature_348" END AS impter_350, CASE WHEN ("ADS"."Feature_349" IS NULL) THEN -0.06890676984297263 ELSE "ADS"."Feature_349" END AS impter_351, CASE WHEN ("ADS"."Feature_350" IS NULL) THEN 0.006174673936264955 ELSE "ADS"."Feature_350" END AS impter_352, CASE WHEN ("ADS"."Feature_351" IS NULL) THEN -0.018480727521201546 ELSE "ADS"."Feature_351" END AS impter_353, CASE WHEN ("ADS"."Feature_352" IS NULL) THEN 0.01892387185297041 ELSE "ADS"."Feature_352" END AS impter_354, CASE WHEN ("ADS"."Feature_353" IS NULL) THEN 0.02727917887836492 ELSE "ADS"."Feature_353" END AS impter_355, CASE WHEN ("ADS"."Feature_354" IS NULL) THEN -0.012823623960695998 ELSE "ADS"."Feature_354" END AS impter_356, CASE WHEN ("ADS"."Feature_355" IS NULL) THEN -0.013271487823414667 ELSE "ADS"."Feature_355" END AS impter_357, CASE WHEN ("ADS"."Feature_356" IS NULL) THEN -0.03395939012664646 ELSE "ADS"."Feature_356" END AS impter_358, CASE WHEN ("ADS"."Feature_357" IS NULL) THEN 0.03223004938335937 ELSE "ADS"."Feature_357" END AS impter_359, CASE WHEN ("ADS"."Feature_358" IS NULL) THEN -0.0016017230909337308 ELSE "ADS"."Feature_358" END AS impter_360, CASE WHEN ("ADS"."Feature_359" IS NULL) THEN -0.03321899170282454 ELSE "ADS"."Feature_359" END AS impter_361, CASE WHEN ("ADS"."Feature_360" IS NULL) THEN -0.0016618588765567152 ELSE "ADS"."Feature_360" END AS impter_362, CASE WHEN ("ADS"."Feature_361" IS NULL) THEN 0.04573989570209914 ELSE "ADS"."Feature_361" END AS impter_363, CASE WHEN ("ADS"."Feature_362" IS NULL) THEN -0.021293175937165 ELSE "ADS"."Feature_362" END AS impter_364, CASE WHEN ("ADS"."Feature_363" IS NULL) THEN -0.011255144611449622 ELSE "ADS"."Feature_363" END AS impter_365, CASE WHEN ("ADS"."Feature_364" IS NULL) THEN -0.02563865782710232 ELSE "ADS"."Feature_364" END AS impter_366, CASE WHEN ("ADS"."Feature_365" IS NULL) THEN -0.015167083011311294 ELSE "ADS"."Feature_365" END AS impter_367, CASE WHEN ("ADS"."Feature_366" IS NULL) THEN 0.0010959755571049432 ELSE "ADS"."Feature_366" END AS impter_368, CASE WHEN ("ADS"."Feature_367" IS NULL) THEN 0.25830160330800345 ELSE "ADS"."Feature_367" END AS impter_369, CASE WHEN ("ADS"."Feature_368" IS NULL) THEN -0.02512420755881165 ELSE "ADS"."Feature_368" END AS impter_370, CASE WHEN ("ADS"."Feature_369" IS NULL) THEN -0.5588992061400131 ELSE "ADS"."Feature_369" END AS impter_371, CASE WHEN ("ADS"."Feature_370" IS NULL) THEN 0.04500746078257995 ELSE "ADS"."Feature_370" END AS impter_372, CASE WHEN ("ADS"."Feature_371" IS NULL) THEN -0.03582268471853405 ELSE "ADS"."Feature_371" END AS impter_373, CASE WHEN ("ADS"."Feature_372" IS NULL) THEN -0.0238194811504848 ELSE "ADS"."Feature_372" END AS impter_374, CASE WHEN ("ADS"."Feature_373" IS NULL) THEN 0.00870068158455398 ELSE "ADS"."Feature_373" END AS impter_375, CASE WHEN ("ADS"."Feature_374" IS NULL) THEN 0.41206876337723863 ELSE "ADS"."Feature_374" END AS impter_376, CASE WHEN ("ADS"."Feature_375" IS NULL) THEN -0.00883623214870824 ELSE "ADS"."Feature_375" END AS impter_377, CASE WHEN ("ADS"."Feature_376" IS NULL) THEN -0.047673712853857325 ELSE "ADS"."Feature_376" END AS impter_378, CASE WHEN ("ADS"."Feature_377" IS NULL) THEN 0.39808785261614416 ELSE "ADS"."Feature_377" END AS impter_379, CASE WHEN ("ADS"."Feature_378" IS NULL) THEN 0.014874268925561847 ELSE "ADS"."Feature_378" END AS impter_380, CASE WHEN ("ADS"."Feature_379" IS NULL) THEN -0.01355994466429737 ELSE "ADS"."Feature_379" END AS impter_381, CASE WHEN ("ADS"."Feature_380" IS NULL) THEN 0.06549584301442803 ELSE "ADS"."Feature_380" END AS impter_382, CASE WHEN ("ADS"."Feature_381" IS NULL) THEN -0.07523712848824068 ELSE "ADS"."Feature_381" END AS impter_383, CASE WHEN ("ADS"."Feature_382" IS NULL) THEN -0.020246425764404403 ELSE "ADS"."Feature_382" END AS impter_384, CASE WHEN ("ADS"."Feature_383" IS NULL) THEN -0.06505456712739689 ELSE "ADS"."Feature_383" END AS impter_385, CASE WHEN ("ADS"."Feature_384" IS NULL) THEN 0.040682923885247455 ELSE "ADS"."Feature_384" END AS impter_386, CASE WHEN ("ADS"."Feature_385" IS NULL) THEN 0.5036509170142887 ELSE "ADS"."Feature_385" END AS impter_387, CASE WHEN ("ADS"."Feature_386" IS NULL) THEN -0.01984269915156025 ELSE "ADS"."Feature_386" END AS impter_388, CASE WHEN ("ADS"."Feature_387" IS NULL) THEN -0.029975294309893395 ELSE "ADS"."Feature_387" END AS impter_389, CASE WHEN ("ADS"."Feature_388" IS NULL) THEN -0.023935150902407186 ELSE "ADS"."Feature_388" END AS impter_390, CASE WHEN ("ADS"."Feature_389" IS NULL) THEN 0.003487379328156493 ELSE "ADS"."Feature_389" END AS impter_391, CASE WHEN ("ADS"."Feature_390" IS NULL) THEN -0.006836589678473769 ELSE "ADS"."Feature_390" END AS impter_392, CASE WHEN ("ADS"."Feature_391" IS NULL) THEN -0.023001043810177268 ELSE "ADS"."Feature_391" END AS impter_393, CASE WHEN ("ADS"."Feature_392" IS NULL) THEN 0.026433076987905132 ELSE "ADS"."Feature_392" END AS impter_394, CASE WHEN ("ADS"."Feature_393" IS NULL) THEN 0.03869392603237684 ELSE "ADS"."Feature_393" END AS impter_395, CASE WHEN ("ADS"."Feature_394" IS NULL) THEN 0.007166160812626991 ELSE "ADS"."Feature_394" END AS impter_396, CASE WHEN ("ADS"."Feature_395" IS NULL) THEN -0.31652297140011876 ELSE "ADS"."Feature_395" END AS impter_397, CASE WHEN ("ADS"."Feature_396" IS NULL) THEN 0.352192927636602 ELSE "ADS"."Feature_396" END AS impter_398, CASE WHEN ("ADS"."Feature_397" IS NULL) THEN 0.2418343422011388 ELSE "ADS"."Feature_397" END AS impter_399, CASE WHEN ("ADS"."Feature_398" IS NULL) THEN 0.23681058627355728 ELSE "ADS"."Feature_398" END AS impter_400, CASE WHEN ("ADS"."Feature_399" IS NULL) THEN -0.011935061221661204 ELSE "ADS"."Feature_399" END AS impter_401, CASE WHEN ("ADS"."Feature_400" IS NULL) THEN -0.23225071389385885 ELSE "ADS"."Feature_400" END AS impter_402, CASE WHEN ("ADS"."Feature_401" IS NULL) THEN 0.027478547688853303 ELSE "ADS"."Feature_401" END AS impter_403, CASE WHEN ("ADS"."Feature_402" IS NULL) THEN -0.2835956440898274 ELSE "ADS"."Feature_402" END AS impter_404, CASE WHEN ("ADS"."Feature_403" IS NULL) THEN -0.026966778578135772 ELSE "ADS"."Feature_403" END AS impter_405, CASE WHEN ("ADS"."Feature_404" IS NULL) THEN -0.004329268838175945 ELSE "ADS"."Feature_404" END AS impter_406, CASE WHEN ("ADS"."Feature_405" IS NULL) THEN 0.0774540554940731 ELSE "ADS"."Feature_405" END AS impter_407, CASE WHEN ("ADS"."Feature_406" IS NULL) THEN -0.6052203464446785 ELSE "ADS"."Feature_406" END AS impter_408, CASE WHEN ("ADS"."Feature_407" IS NULL) THEN 0.0338701304693192 ELSE "ADS"."Feature_407" END AS impter_409, CASE WHEN ("ADS"."Feature_408" IS NULL) THEN -0.05044305753803302 ELSE "ADS"."Feature_408" END AS impter_410, CASE WHEN ("ADS"."Feature_409" IS NULL) THEN 0.008805453357057883 ELSE "ADS"."Feature_409" END AS impter_411, CASE WHEN ("ADS"."Feature_410" IS NULL) THEN -0.05374724915468808 ELSE "ADS"."Feature_410" END AS impter_412, CASE WHEN ("ADS"."Feature_411" IS NULL) THEN -0.004957359515296269 ELSE "ADS"."Feature_411" END AS impter_413, CASE WHEN ("ADS"."Feature_412" IS NULL) THEN 0.12039061456156476 ELSE "ADS"."Feature_412" END AS impter_414, CASE WHEN ("ADS"."Feature_413" IS NULL) THEN -0.005732424778663252 ELSE "ADS"."Feature_413" END AS impter_415, CASE WHEN ("ADS"."Feature_414" IS NULL) THEN -0.4286478678045208 ELSE "ADS"."Feature_414" END AS impter_416, CASE WHEN ("ADS"."Feature_415" IS NULL) THEN -0.028516293632594378 ELSE "ADS"."Feature_415" END AS impter_417, CASE WHEN ("ADS"."Feature_416" IS NULL) THEN 0.052380333284906204 ELSE "ADS"."Feature_416" END AS impter_418, CASE WHEN ("ADS"."Feature_417" IS NULL) THEN -0.028497248319907256 ELSE "ADS"."Feature_417" END AS impter_419, CASE WHEN ("ADS"."Feature_418" IS NULL) THEN -0.012190751471044496 ELSE "ADS"."Feature_418" END AS impter_420, CASE WHEN ("ADS"."Feature_419" IS NULL) THEN 0.014464401907681581 ELSE "ADS"."Feature_419" END AS impter_421, CASE WHEN ("ADS"."Feature_420" IS NULL) THEN -0.17428872440122373 ELSE "ADS"."Feature_420" END AS impter_422, CASE WHEN ("ADS"."Feature_421" IS NULL) THEN -0.01773365620191358 ELSE "ADS"."Feature_421" END AS impter_423, CASE WHEN ("ADS"."Feature_422" IS NULL) THEN 0.40558807090091853 ELSE "ADS"."Feature_422" END AS impter_424, CASE WHEN ("ADS"."Feature_423" IS NULL) THEN -0.0009022771635855167 ELSE "ADS"."Feature_423" END AS impter_425, CASE WHEN ("ADS"."Feature_424" IS NULL) THEN 0.05739992787057724 ELSE "ADS"."Feature_424" END AS impter_426, CASE WHEN ("ADS"."Feature_425" IS NULL) THEN 0.04850780446682892 ELSE "ADS"."Feature_425" END AS impter_427, CASE WHEN ("ADS"."Feature_426" IS NULL) THEN 0.04555082643401923 ELSE "ADS"."Feature_426" END AS impter_428, CASE WHEN ("ADS"."Feature_427" IS NULL) THEN -0.013088017894457874 ELSE "ADS"."Feature_427" END AS impter_429, CASE WHEN ("ADS"."Feature_428" IS NULL) THEN 0.7622987596243614 ELSE "ADS"."Feature_428" END AS impter_430, CASE WHEN ("ADS"."Feature_429" IS NULL) THEN 0.06277381315317203 ELSE "ADS"."Feature_429" END AS impter_431, CASE WHEN ("ADS"."Feature_430" IS NULL) THEN -0.00595076348043327 ELSE "ADS"."Feature_430" END AS impter_432, CASE WHEN ("ADS"."Feature_431" IS NULL) THEN -0.019782980673704004 ELSE "ADS"."Feature_431" END AS impter_433, CASE WHEN ("ADS"."Feature_432" IS NULL) THEN 0.03813782436434927 ELSE "ADS"."Feature_432" END AS impter_434, CASE WHEN ("ADS"."Feature_433" IS NULL) THEN -0.03361997654906546 ELSE "ADS"."Feature_433" END AS impter_435, CASE WHEN ("ADS"."Feature_434" IS NULL) THEN -0.015449063685126078 ELSE "ADS"."Feature_434" END AS impter_436, CASE WHEN ("ADS"."Feature_435" IS NULL) THEN -0.05083199732740015 ELSE "ADS"."Feature_435" END AS impter_437, CASE WHEN ("ADS"."Feature_436" IS NULL) THEN 0.12294390238132996 ELSE "ADS"."Feature_436" END AS impter_438, CASE WHEN ("ADS"."Feature_437" IS NULL) THEN 0.008273480374725027 ELSE "ADS"."Feature_437" END AS impter_439, CASE WHEN ("ADS"."Feature_438" IS NULL) THEN 0.04577021563207708 ELSE "ADS"."Feature_438" END AS impter_440, CASE WHEN ("ADS"."Feature_439" IS NULL) THEN -0.004739394213399075 ELSE "ADS"."Feature_439" END AS impter_441, CASE WHEN ("ADS"."Feature_440" IS NULL) THEN -0.025074465350024163 ELSE "ADS"."Feature_440" END AS impter_442, CASE WHEN ("ADS"."Feature_441" IS NULL) THEN 0.050774082486299194 ELSE "ADS"."Feature_441" END AS impter_443, CASE WHEN ("ADS"."Feature_442" IS NULL) THEN -0.0967069255496831 ELSE "ADS"."Feature_442" END AS impter_444, CASE WHEN ("ADS"."Feature_443" IS NULL) THEN -0.007206652069868864 ELSE "ADS"."Feature_443" END AS impter_445, CASE WHEN ("ADS"."Feature_444" IS NULL) THEN 0.03506859491861105 ELSE "ADS"."Feature_444" END AS impter_446, CASE WHEN ("ADS"."Feature_445" IS NULL) THEN -0.00905435452775923 ELSE "ADS"."Feature_445" END AS impter_447, CASE WHEN ("ADS"."Feature_446" IS NULL) THEN -0.012006634151227604 ELSE "ADS"."Feature_446" END AS impter_448, CASE WHEN ("ADS"."Feature_447" IS NULL) THEN 0.03145627491797305 ELSE "ADS"."Feature_447" END AS impter_449, CASE WHEN ("ADS"."Feature_448" IS NULL) THEN 0.02517699513431471 ELSE "ADS"."Feature_448" END AS impter_450, CASE WHEN ("ADS"."Feature_449" IS NULL) THEN 0.005640015529596338 ELSE "ADS"."Feature_449" END AS impter_451, CASE WHEN ("ADS"."Feature_450" IS NULL) THEN -0.010608619203966895 ELSE "ADS"."Feature_450" END AS impter_452, CASE WHEN ("ADS"."Feature_451" IS NULL) THEN -0.062079998204146586 ELSE "ADS"."Feature_451" END AS impter_453, CASE WHEN ("ADS"."Feature_452" IS NULL) THEN -0.0876770647950911 ELSE "ADS"."Feature_452" END AS impter_454, CASE WHEN ("ADS"."Feature_453" IS NULL) THEN 0.012143657983602962 ELSE "ADS"."Feature_453" END AS impter_455, CASE WHEN ("ADS"."Feature_454" IS NULL) THEN 0.03448739220055286 ELSE "ADS"."Feature_454" END AS impter_456, CASE WHEN ("ADS"."Feature_455" IS NULL) THEN 0.006839876969520017 ELSE "ADS"."Feature_455" END AS impter_457, CASE WHEN ("ADS"."Feature_456" IS NULL) THEN -0.1589087203718216 ELSE "ADS"."Feature_456" END AS impter_458, CASE WHEN ("ADS"."Feature_457" IS NULL) THEN 0.45343491151894105 ELSE "ADS"."Feature_457" END AS impter_459, CASE WHEN ("ADS"."Feature_458" IS NULL) THEN -0.007482014986002762 ELSE "ADS"."Feature_458" END AS impter_460, CASE WHEN ("ADS"."Feature_459" IS NULL) THEN -0.0538045349045037 ELSE "ADS"."Feature_459" END AS impter_461, CASE WHEN ("ADS"."Feature_460" IS NULL) THEN 0.006517329526108785 ELSE "ADS"."Feature_460" END AS impter_462, CASE WHEN ("ADS"."Feature_461" IS NULL) THEN -0.3201406707449883 ELSE "ADS"."Feature_461" END AS impter_463, CASE WHEN ("ADS"."Feature_462" IS NULL) THEN 0.03164463472773337 ELSE "ADS"."Feature_462" END AS impter_464, CASE WHEN ("ADS"."Feature_463" IS NULL) THEN -0.031827670383012555 ELSE "ADS"."Feature_463" END AS impter_465, CASE WHEN ("ADS"."Feature_464" IS NULL) THEN -0.02220263625319023 ELSE "ADS"."Feature_464" END AS impter_466, CASE WHEN ("ADS"."Feature_465" IS NULL) THEN 0.04918588699743021 ELSE "ADS"."Feature_465" END AS impter_467, CASE WHEN ("ADS"."Feature_466" IS NULL) THEN 0.013873407999629129 ELSE "ADS"."Feature_466" END AS impter_468, CASE WHEN ("ADS"."Feature_467" IS NULL) THEN -0.054844779309353775 ELSE "ADS"."Feature_467" END AS impter_469, CASE WHEN ("ADS"."Feature_468" IS NULL) THEN 0.05947169339023267 ELSE "ADS"."Feature_468" END AS impter_470, CASE WHEN ("ADS"."Feature_469" IS NULL) THEN -0.007061332655546885 ELSE "ADS"."Feature_469" END AS impter_471, CASE WHEN ("ADS"."Feature_470" IS NULL) THEN 0.0009227758698022626 ELSE "ADS"."Feature_470" END AS impter_472, CASE WHEN ("ADS"."Feature_471" IS NULL) THEN -0.014955268248566689 ELSE "ADS"."Feature_471" END AS impter_473, CASE WHEN ("ADS"."Feature_472" IS NULL) THEN -0.00997364389328803 ELSE "ADS"."Feature_472" END AS impter_474, CASE WHEN ("ADS"."Feature_473" IS NULL) THEN 0.044011886118274696 ELSE "ADS"."Feature_473" END AS impter_475, CASE WHEN ("ADS"."Feature_474" IS NULL) THEN 0.03204255595840591 ELSE "ADS"."Feature_474" END AS impter_476, CASE WHEN ("ADS"."Feature_475" IS NULL) THEN -0.028511291715894678 ELSE "ADS"."Feature_475" END AS impter_477, CASE WHEN ("ADS"."Feature_476" IS NULL) THEN 0.05235198939025461 ELSE "ADS"."Feature_476" END AS impter_478, CASE WHEN ("ADS"."Feature_477" IS NULL) THEN 0.4442463067830223 ELSE "ADS"."Feature_477" END AS impter_479, CASE WHEN ("ADS"."Feature_478" IS NULL) THEN -0.0421220588184719 ELSE "ADS"."Feature_478" END AS impter_480, CASE WHEN ("ADS"."Feature_479" IS NULL) THEN -0.06375683381469409 ELSE "ADS"."Feature_479" END AS impter_481, CASE WHEN ("ADS"."Feature_480" IS NULL) THEN 0.09016412133268503 ELSE "ADS"."Feature_480" END AS impter_482, CASE WHEN ("ADS"."Feature_481" IS NULL) THEN -0.021181166332863134 ELSE "ADS"."Feature_481" END AS impter_483, CASE WHEN ("ADS"."Feature_482" IS NULL) THEN 0.015134427562764584 ELSE "ADS"."Feature_482" END AS impter_484, CASE WHEN ("ADS"."Feature_483" IS NULL) THEN 0.1458909634165245 ELSE "ADS"."Feature_483" END AS impter_485, CASE WHEN ("ADS"."Feature_484" IS NULL) THEN -0.0964936751824616 ELSE "ADS"."Feature_484" END AS impter_486, CASE WHEN ("ADS"."Feature_485" IS NULL) THEN -0.0007661343328348244 ELSE "ADS"."Feature_485" END AS impter_487, CASE WHEN ("ADS"."Feature_486" IS NULL) THEN 0.007424472006137845 ELSE "ADS"."Feature_486" END AS impter_488, CASE WHEN ("ADS"."Feature_487" IS NULL) THEN 0.007776565305072426 ELSE "ADS"."Feature_487" END AS impter_489, CASE WHEN ("ADS"."Feature_488" IS NULL) THEN -0.02972669445658546 ELSE "ADS"."Feature_488" END AS impter_490, CASE WHEN ("ADS"."Feature_489" IS NULL) THEN -0.020022098906708034 ELSE "ADS"."Feature_489" END AS impter_491, CASE WHEN ("ADS"."Feature_490" IS NULL) THEN -0.03689120776576418 ELSE "ADS"."Feature_490" END AS impter_492, CASE WHEN ("ADS"."Feature_491" IS NULL) THEN 0.02342654499679442 ELSE "ADS"."Feature_491" END AS impter_493, CASE WHEN ("ADS"."Feature_492" IS NULL) THEN 0.06047072800386204 ELSE "ADS"."Feature_492" END AS impter_494, CASE WHEN ("ADS"."Feature_493" IS NULL) THEN 0.02457996835763847 ELSE "ADS"."Feature_493" END AS impter_495, CASE WHEN ("ADS"."Feature_494" IS NULL) THEN -0.0053128065642532255 ELSE "ADS"."Feature_494" END AS impter_496, CASE WHEN ("ADS"."Feature_495" IS NULL) THEN -0.050025880514262516 ELSE "ADS"."Feature_495" END AS impter_497, CASE WHEN ("ADS"."Feature_496" IS NULL) THEN -0.055008136401580685 ELSE "ADS"."Feature_496" END AS impter_498, CASE WHEN ("ADS"."Feature_497" IS NULL) THEN -0.46514935213874503 ELSE "ADS"."Feature_497" END AS impter_499, CASE WHEN ("ADS"."Feature_498" IS NULL) THEN -0.037847190400891 ELSE "ADS"."Feature_498" END AS impter_500, CASE WHEN ("ADS"."Feature_499" IS NULL) THEN 0.028703608331041793 ELSE "ADS"."Feature_499" END AS impter_501 
FROM "FOURCLASS_500" "ADS") "ADS_imp_1_OUT") "U"
-- Code For temporary table 33421_53X5V4_ADS_SCA_2_OUT part 1/2. Create 


CREATE GLOBAL TEMPORARY TABLE "33421_53X5V4_ADS_SCA_2_OUT" (
	"KEY" NUMBER(19), 
	scaler_2 BINARY_DOUBLE, 
	scaler_3 BINARY_DOUBLE, 
	scaler_4 BINARY_DOUBLE, 
	scaler_5 BINARY_DOUBLE, 
	scaler_6 BINARY_DOUBLE, 
	scaler_7 BINARY_DOUBLE, 
	scaler_8 BINARY_DOUBLE, 
	scaler_9 BINARY_DOUBLE, 
	scaler_10 BINARY_DOUBLE, 
	scaler_11 BINARY_DOUBLE, 
	scaler_12 BINARY_DOUBLE, 
	scaler_13 BINARY_DOUBLE, 
	scaler_14 BINARY_DOUBLE, 
	scaler_15 BINARY_DOUBLE, 
	scaler_16 BINARY_DOUBLE, 
	scaler_17 BINARY_DOUBLE, 
	scaler_18 BINARY_DOUBLE, 
	scaler_19 BINARY_DOUBLE, 
	scaler_20 BINARY_DOUBLE, 
	scaler_21 BINARY_DOUBLE, 
	scaler_22 BINARY_DOUBLE, 
	scaler_23 BINARY_DOUBLE, 
	scaler_24 BINARY_DOUBLE, 
	scaler_25 BINARY_DOUBLE, 
	scaler_26 BINARY_DOUBLE, 
	scaler_27 BINARY_DOUBLE, 
	scaler_28 BINARY_DOUBLE, 
	scaler_29 BINARY_DOUBLE, 
	scaler_30 BINARY_DOUBLE, 
	scaler_31 BINARY_DOUBLE, 
	scaler_32 BINARY_DOUBLE, 
	scaler_33 BINARY_DOUBLE, 
	scaler_34 BINARY_DOUBLE, 
	scaler_35 BINARY_DOUBLE, 
	scaler_36 BINARY_DOUBLE, 
	scaler_37 BINARY_DOUBLE, 
	scaler_38 BINARY_DOUBLE, 
	scaler_39 BINARY_DOUBLE, 
	scaler_40 BINARY_DOUBLE, 
	scaler_41 BINARY_DOUBLE, 
	scaler_42 BINARY_DOUBLE, 
	scaler_43 BINARY_DOUBLE, 
	scaler_44 BINARY_DOUBLE, 
	scaler_45 BINARY_DOUBLE, 
	scaler_46 BINARY_DOUBLE, 
	scaler_47 BINARY_DOUBLE, 
	scaler_48 BINARY_DOUBLE, 
	scaler_49 BINARY_DOUBLE, 
	scaler_50 BINARY_DOUBLE, 
	scaler_51 BINARY_DOUBLE, 
	scaler_52 BINARY_DOUBLE, 
	scaler_53 BINARY_DOUBLE, 
	scaler_54 BINARY_DOUBLE, 
	scaler_55 BINARY_DOUBLE, 
	scaler_56 BINARY_DOUBLE, 
	scaler_57 BINARY_DOUBLE, 
	scaler_58 BINARY_DOUBLE, 
	scaler_59 BINARY_DOUBLE, 
	scaler_60 BINARY_DOUBLE, 
	scaler_61 BINARY_DOUBLE, 
	scaler_62 BINARY_DOUBLE, 
	scaler_63 BINARY_DOUBLE, 
	scaler_64 BINARY_DOUBLE, 
	scaler_65 BINARY_DOUBLE, 
	scaler_66 BINARY_DOUBLE, 
	scaler_67 BINARY_DOUBLE, 
	scaler_68 BINARY_DOUBLE, 
	scaler_69 BINARY_DOUBLE, 
	scaler_70 BINARY_DOUBLE, 
	scaler_71 BINARY_DOUBLE, 
	scaler_72 BINARY_DOUBLE, 
	scaler_73 BINARY_DOUBLE, 
	scaler_74 BINARY_DOUBLE, 
	scaler_75 BINARY_DOUBLE, 
	scaler_76 BINARY_DOUBLE, 
	scaler_77 BINARY_DOUBLE, 
	scaler_78 BINARY_DOUBLE, 
	scaler_79 BINARY_DOUBLE, 
	scaler_80 BINARY_DOUBLE, 
	scaler_81 BINARY_DOUBLE, 
	scaler_82 BINARY_DOUBLE, 
	scaler_83 BINARY_DOUBLE, 
	scaler_84 BINARY_DOUBLE, 
	scaler_85 BINARY_DOUBLE, 
	scaler_86 BINARY_DOUBLE, 
	scaler_87 BINARY_DOUBLE, 
	scaler_88 BINARY_DOUBLE, 
	scaler_89 BINARY_DOUBLE, 
	scaler_90 BINARY_DOUBLE, 
	scaler_91 BINARY_DOUBLE, 
	scaler_92 BINARY_DOUBLE, 
	scaler_93 BINARY_DOUBLE, 
	scaler_94 BINARY_DOUBLE, 
	scaler_95 BINARY_DOUBLE, 
	scaler_96 BINARY_DOUBLE, 
	scaler_97 BINARY_DOUBLE, 
	scaler_98 BINARY_DOUBLE, 
	scaler_99 BINARY_DOUBLE, 
	scaler_100 BINARY_DOUBLE, 
	scaler_101 BINARY_DOUBLE, 
	scaler_102 BINARY_DOUBLE, 
	scaler_103 BINARY_DOUBLE, 
	scaler_104 BINARY_DOUBLE, 
	scaler_105 BINARY_DOUBLE, 
	scaler_106 BINARY_DOUBLE, 
	scaler_107 BINARY_DOUBLE, 
	scaler_108 BINARY_DOUBLE, 
	scaler_109 BINARY_DOUBLE, 
	scaler_110 BINARY_DOUBLE, 
	scaler_111 BINARY_DOUBLE, 
	scaler_112 BINARY_DOUBLE, 
	scaler_113 BINARY_DOUBLE, 
	scaler_114 BINARY_DOUBLE, 
	scaler_115 BINARY_DOUBLE, 
	scaler_116 BINARY_DOUBLE, 
	scaler_117 BINARY_DOUBLE, 
	scaler_118 BINARY_DOUBLE, 
	scaler_119 BINARY_DOUBLE, 
	scaler_120 BINARY_DOUBLE, 
	scaler_121 BINARY_DOUBLE, 
	scaler_122 BINARY_DOUBLE, 
	scaler_123 BINARY_DOUBLE, 
	scaler_124 BINARY_DOUBLE, 
	scaler_125 BINARY_DOUBLE, 
	scaler_126 BINARY_DOUBLE, 
	scaler_127 BINARY_DOUBLE, 
	scaler_128 BINARY_DOUBLE, 
	scaler_129 BINARY_DOUBLE, 
	scaler_130 BINARY_DOUBLE, 
	scaler_131 BINARY_DOUBLE, 
	scaler_132 BINARY_DOUBLE, 
	scaler_133 BINARY_DOUBLE, 
	scaler_134 BINARY_DOUBLE, 
	scaler_135 BINARY_DOUBLE, 
	scaler_136 BINARY_DOUBLE, 
	scaler_137 BINARY_DOUBLE, 
	scaler_138 BINARY_DOUBLE, 
	scaler_139 BINARY_DOUBLE, 
	scaler_140 BINARY_DOUBLE, 
	scaler_141 BINARY_DOUBLE, 
	scaler_142 BINARY_DOUBLE, 
	scaler_143 BINARY_DOUBLE, 
	scaler_144 BINARY_DOUBLE, 
	scaler_145 BINARY_DOUBLE, 
	scaler_146 BINARY_DOUBLE, 
	scaler_147 BINARY_DOUBLE, 
	scaler_148 BINARY_DOUBLE, 
	scaler_149 BINARY_DOUBLE, 
	scaler_150 BINARY_DOUBLE, 
	scaler_151 BINARY_DOUBLE, 
	scaler_152 BINARY_DOUBLE, 
	scaler_153 BINARY_DOUBLE, 
	scaler_154 BINARY_DOUBLE, 
	scaler_155 BINARY_DOUBLE, 
	scaler_156 BINARY_DOUBLE, 
	scaler_157 BINARY_DOUBLE, 
	scaler_158 BINARY_DOUBLE, 
	scaler_159 BINARY_DOUBLE, 
	scaler_160 BINARY_DOUBLE, 
	scaler_161 BINARY_DOUBLE, 
	scaler_162 BINARY_DOUBLE, 
	scaler_163 BINARY_DOUBLE, 
	scaler_164 BINARY_DOUBLE, 
	scaler_165 BINARY_DOUBLE, 
	scaler_166 BINARY_DOUBLE, 
	scaler_167 BINARY_DOUBLE, 
	scaler_168 BINARY_DOUBLE, 
	scaler_169 BINARY_DOUBLE, 
	scaler_170 BINARY_DOUBLE, 
	scaler_171 BINARY_DOUBLE, 
	scaler_172 BINARY_DOUBLE, 
	scaler_173 BINARY_DOUBLE, 
	scaler_174 BINARY_DOUBLE, 
	scaler_175 BINARY_DOUBLE, 
	scaler_176 BINARY_DOUBLE, 
	scaler_177 BINARY_DOUBLE, 
	scaler_178 BINARY_DOUBLE, 
	scaler_179 BINARY_DOUBLE, 
	scaler_180 BINARY_DOUBLE, 
	scaler_181 BINARY_DOUBLE, 
	scaler_182 BINARY_DOUBLE, 
	scaler_183 BINARY_DOUBLE, 
	scaler_184 BINARY_DOUBLE, 
	scaler_185 BINARY_DOUBLE, 
	scaler_186 BINARY_DOUBLE, 
	scaler_187 BINARY_DOUBLE, 
	scaler_188 BINARY_DOUBLE, 
	scaler_189 BINARY_DOUBLE, 
	scaler_190 BINARY_DOUBLE, 
	scaler_191 BINARY_DOUBLE, 
	scaler_192 BINARY_DOUBLE, 
	scaler_193 BINARY_DOUBLE, 
	scaler_194 BINARY_DOUBLE, 
	scaler_195 BINARY_DOUBLE, 
	scaler_196 BINARY_DOUBLE, 
	scaler_197 BINARY_DOUBLE, 
	scaler_198 BINARY_DOUBLE, 
	scaler_199 BINARY_DOUBLE, 
	scaler_200 BINARY_DOUBLE, 
	scaler_201 BINARY_DOUBLE, 
	scaler_202 BINARY_DOUBLE, 
	scaler_203 BINARY_DOUBLE, 
	scaler_204 BINARY_DOUBLE, 
	scaler_205 BINARY_DOUBLE, 
	scaler_206 BINARY_DOUBLE, 
	scaler_207 BINARY_DOUBLE, 
	scaler_208 BINARY_DOUBLE, 
	scaler_209 BINARY_DOUBLE, 
	scaler_210 BINARY_DOUBLE, 
	scaler_211 BINARY_DOUBLE, 
	scaler_212 BINARY_DOUBLE, 
	scaler_213 BINARY_DOUBLE, 
	scaler_214 BINARY_DOUBLE, 
	scaler_215 BINARY_DOUBLE, 
	scaler_216 BINARY_DOUBLE, 
	scaler_217 BINARY_DOUBLE, 
	scaler_218 BINARY_DOUBLE, 
	scaler_219 BINARY_DOUBLE, 
	scaler_220 BINARY_DOUBLE, 
	scaler_221 BINARY_DOUBLE, 
	scaler_222 BINARY_DOUBLE, 
	scaler_223 BINARY_DOUBLE, 
	scaler_224 BINARY_DOUBLE, 
	scaler_225 BINARY_DOUBLE, 
	scaler_226 BINARY_DOUBLE, 
	scaler_227 BINARY_DOUBLE, 
	scaler_228 BINARY_DOUBLE, 
	scaler_229 BINARY_DOUBLE, 
	scaler_230 BINARY_DOUBLE, 
	scaler_231 BINARY_DOUBLE, 
	scaler_232 BINARY_DOUBLE, 
	scaler_233 BINARY_DOUBLE, 
	scaler_234 BINARY_DOUBLE, 
	scaler_235 BINARY_DOUBLE, 
	scaler_236 BINARY_DOUBLE, 
	scaler_237 BINARY_DOUBLE, 
	scaler_238 BINARY_DOUBLE, 
	scaler_239 BINARY_DOUBLE, 
	scaler_240 BINARY_DOUBLE, 
	scaler_241 BINARY_DOUBLE, 
	scaler_242 BINARY_DOUBLE, 
	scaler_243 BINARY_DOUBLE, 
	scaler_244 BINARY_DOUBLE, 
	scaler_245 BINARY_DOUBLE, 
	scaler_246 BINARY_DOUBLE, 
	scaler_247 BINARY_DOUBLE, 
	scaler_248 BINARY_DOUBLE, 
	scaler_249 BINARY_DOUBLE, 
	scaler_250 BINARY_DOUBLE, 
	scaler_251 BINARY_DOUBLE, 
	scaler_252 BINARY_DOUBLE, 
	scaler_253 BINARY_DOUBLE, 
	scaler_254 BINARY_DOUBLE, 
	scaler_255 BINARY_DOUBLE, 
	scaler_256 BINARY_DOUBLE, 
	scaler_257 BINARY_DOUBLE, 
	scaler_258 BINARY_DOUBLE, 
	scaler_259 BINARY_DOUBLE, 
	scaler_260 BINARY_DOUBLE, 
	scaler_261 BINARY_DOUBLE, 
	scaler_262 BINARY_DOUBLE, 
	scaler_263 BINARY_DOUBLE, 
	scaler_264 BINARY_DOUBLE, 
	scaler_265 BINARY_DOUBLE, 
	scaler_266 BINARY_DOUBLE, 
	scaler_267 BINARY_DOUBLE, 
	scaler_268 BINARY_DOUBLE, 
	scaler_269 BINARY_DOUBLE, 
	scaler_270 BINARY_DOUBLE, 
	scaler_271 BINARY_DOUBLE, 
	scaler_272 BINARY_DOUBLE, 
	scaler_273 BINARY_DOUBLE, 
	scaler_274 BINARY_DOUBLE, 
	scaler_275 BINARY_DOUBLE, 
	scaler_276 BINARY_DOUBLE, 
	scaler_277 BINARY_DOUBLE, 
	scaler_278 BINARY_DOUBLE, 
	scaler_279 BINARY_DOUBLE, 
	scaler_280 BINARY_DOUBLE, 
	scaler_281 BINARY_DOUBLE, 
	scaler_282 BINARY_DOUBLE, 
	scaler_283 BINARY_DOUBLE, 
	scaler_284 BINARY_DOUBLE, 
	scaler_285 BINARY_DOUBLE, 
	scaler_286 BINARY_DOUBLE, 
	scaler_287 BINARY_DOUBLE, 
	scaler_288 BINARY_DOUBLE, 
	scaler_289 BINARY_DOUBLE, 
	scaler_290 BINARY_DOUBLE, 
	scaler_291 BINARY_DOUBLE, 
	scaler_292 BINARY_DOUBLE, 
	scaler_293 BINARY_DOUBLE, 
	scaler_294 BINARY_DOUBLE, 
	scaler_295 BINARY_DOUBLE, 
	scaler_296 BINARY_DOUBLE, 
	scaler_297 BINARY_DOUBLE, 
	scaler_298 BINARY_DOUBLE, 
	scaler_299 BINARY_DOUBLE, 
	scaler_300 BINARY_DOUBLE, 
	scaler_301 BINARY_DOUBLE, 
	scaler_302 BINARY_DOUBLE, 
	scaler_303 BINARY_DOUBLE, 
	scaler_304 BINARY_DOUBLE, 
	scaler_305 BINARY_DOUBLE, 
	scaler_306 BINARY_DOUBLE, 
	scaler_307 BINARY_DOUBLE, 
	scaler_308 BINARY_DOUBLE, 
	scaler_309 BINARY_DOUBLE, 
	scaler_310 BINARY_DOUBLE, 
	scaler_311 BINARY_DOUBLE, 
	scaler_312 BINARY_DOUBLE, 
	scaler_313 BINARY_DOUBLE, 
	scaler_314 BINARY_DOUBLE, 
	scaler_315 BINARY_DOUBLE, 
	scaler_316 BINARY_DOUBLE, 
	scaler_317 BINARY_DOUBLE, 
	scaler_318 BINARY_DOUBLE, 
	scaler_319 BINARY_DOUBLE, 
	scaler_320 BINARY_DOUBLE, 
	scaler_321 BINARY_DOUBLE, 
	scaler_322 BINARY_DOUBLE, 
	scaler_323 BINARY_DOUBLE, 
	scaler_324 BINARY_DOUBLE, 
	scaler_325 BINARY_DOUBLE, 
	scaler_326 BINARY_DOUBLE, 
	scaler_327 BINARY_DOUBLE, 
	scaler_328 BINARY_DOUBLE, 
	scaler_329 BINARY_DOUBLE, 
	scaler_330 BINARY_DOUBLE, 
	scaler_331 BINARY_DOUBLE, 
	scaler_332 BINARY_DOUBLE, 
	scaler_333 BINARY_DOUBLE, 
	scaler_334 BINARY_DOUBLE, 
	scaler_335 BINARY_DOUBLE, 
	scaler_336 BINARY_DOUBLE, 
	scaler_337 BINARY_DOUBLE, 
	scaler_338 BINARY_DOUBLE, 
	scaler_339 BINARY_DOUBLE, 
	scaler_340 BINARY_DOUBLE, 
	scaler_341 BINARY_DOUBLE, 
	scaler_342 BINARY_DOUBLE, 
	scaler_343 BINARY_DOUBLE, 
	scaler_344 BINARY_DOUBLE, 
	scaler_345 BINARY_DOUBLE, 
	scaler_346 BINARY_DOUBLE, 
	scaler_347 BINARY_DOUBLE, 
	scaler_348 BINARY_DOUBLE, 
	scaler_349 BINARY_DOUBLE, 
	scaler_350 BINARY_DOUBLE, 
	scaler_351 BINARY_DOUBLE, 
	scaler_352 BINARY_DOUBLE, 
	scaler_353 BINARY_DOUBLE, 
	scaler_354 BINARY_DOUBLE, 
	scaler_355 BINARY_DOUBLE, 
	scaler_356 BINARY_DOUBLE, 
	scaler_357 BINARY_DOUBLE, 
	scaler_358 BINARY_DOUBLE, 
	scaler_359 BINARY_DOUBLE, 
	scaler_360 BINARY_DOUBLE, 
	scaler_361 BINARY_DOUBLE, 
	scaler_362 BINARY_DOUBLE, 
	scaler_363 BINARY_DOUBLE, 
	scaler_364 BINARY_DOUBLE, 
	scaler_365 BINARY_DOUBLE, 
	scaler_366 BINARY_DOUBLE, 
	scaler_367 BINARY_DOUBLE, 
	scaler_368 BINARY_DOUBLE, 
	scaler_369 BINARY_DOUBLE, 
	scaler_370 BINARY_DOUBLE, 
	scaler_371 BINARY_DOUBLE, 
	scaler_372 BINARY_DOUBLE, 
	scaler_373 BINARY_DOUBLE, 
	scaler_374 BINARY_DOUBLE, 
	scaler_375 BINARY_DOUBLE, 
	scaler_376 BINARY_DOUBLE, 
	scaler_377 BINARY_DOUBLE, 
	scaler_378 BINARY_DOUBLE, 
	scaler_379 BINARY_DOUBLE, 
	scaler_380 BINARY_DOUBLE, 
	scaler_381 BINARY_DOUBLE, 
	scaler_382 BINARY_DOUBLE, 
	scaler_383 BINARY_DOUBLE, 
	scaler_384 BINARY_DOUBLE, 
	scaler_385 BINARY_DOUBLE, 
	scaler_386 BINARY_DOUBLE, 
	scaler_387 BINARY_DOUBLE, 
	scaler_388 BINARY_DOUBLE, 
	scaler_389 BINARY_DOUBLE, 
	scaler_390 BINARY_DOUBLE, 
	scaler_391 BINARY_DOUBLE, 
	scaler_392 BINARY_DOUBLE, 
	scaler_393 BINARY_DOUBLE, 
	scaler_394 BINARY_DOUBLE, 
	scaler_395 BINARY_DOUBLE, 
	scaler_396 BINARY_DOUBLE, 
	scaler_397 BINARY_DOUBLE, 
	scaler_398 BINARY_DOUBLE, 
	scaler_399 BINARY_DOUBLE, 
	scaler_400 BINARY_DOUBLE, 
	scaler_401 BINARY_DOUBLE, 
	scaler_402 BINARY_DOUBLE, 
	scaler_403 BINARY_DOUBLE, 
	scaler_404 BINARY_DOUBLE, 
	scaler_405 BINARY_DOUBLE, 
	scaler_406 BINARY_DOUBLE, 
	scaler_407 BINARY_DOUBLE, 
	scaler_408 BINARY_DOUBLE, 
	scaler_409 BINARY_DOUBLE, 
	scaler_410 BINARY_DOUBLE, 
	scaler_411 BINARY_DOUBLE, 
	scaler_412 BINARY_DOUBLE, 
	scaler_413 BINARY_DOUBLE, 
	scaler_414 BINARY_DOUBLE, 
	scaler_415 BINARY_DOUBLE, 
	scaler_416 BINARY_DOUBLE, 
	scaler_417 BINARY_DOUBLE, 
	scaler_418 BINARY_DOUBLE, 
	scaler_419 BINARY_DOUBLE, 
	scaler_420 BINARY_DOUBLE, 
	scaler_421 BINARY_DOUBLE, 
	scaler_422 BINARY_DOUBLE, 
	scaler_423 BINARY_DOUBLE, 
	scaler_424 BINARY_DOUBLE, 
	scaler_425 BINARY_DOUBLE, 
	scaler_426 BINARY_DOUBLE, 
	scaler_427 BINARY_DOUBLE, 
	scaler_428 BINARY_DOUBLE, 
	scaler_429 BINARY_DOUBLE, 
	scaler_430 BINARY_DOUBLE, 
	scaler_431 BINARY_DOUBLE, 
	scaler_432 BINARY_DOUBLE, 
	scaler_433 BINARY_DOUBLE, 
	scaler_434 BINARY_DOUBLE, 
	scaler_435 BINARY_DOUBLE, 
	scaler_436 BINARY_DOUBLE, 
	scaler_437 BINARY_DOUBLE, 
	scaler_438 BINARY_DOUBLE, 
	scaler_439 BINARY_DOUBLE, 
	scaler_440 BINARY_DOUBLE, 
	scaler_441 BINARY_DOUBLE, 
	scaler_442 BINARY_DOUBLE, 
	scaler_443 BINARY_DOUBLE, 
	scaler_444 BINARY_DOUBLE, 
	scaler_445 BINARY_DOUBLE, 
	scaler_446 BINARY_DOUBLE, 
	scaler_447 BINARY_DOUBLE, 
	scaler_448 BINARY_DOUBLE, 
	scaler_449 BINARY_DOUBLE, 
	scaler_450 BINARY_DOUBLE, 
	scaler_451 BINARY_DOUBLE, 
	scaler_452 BINARY_DOUBLE, 
	scaler_453 BINARY_DOUBLE, 
	scaler_454 BINARY_DOUBLE, 
	scaler_455 BINARY_DOUBLE, 
	scaler_456 BINARY_DOUBLE, 
	scaler_457 BINARY_DOUBLE, 
	scaler_458 BINARY_DOUBLE, 
	scaler_459 BINARY_DOUBLE, 
	scaler_460 BINARY_DOUBLE, 
	scaler_461 BINARY_DOUBLE, 
	scaler_462 BINARY_DOUBLE, 
	scaler_463 BINARY_DOUBLE, 
	scaler_464 BINARY_DOUBLE, 
	scaler_465 BINARY_DOUBLE, 
	scaler_466 BINARY_DOUBLE, 
	scaler_467 BINARY_DOUBLE, 
	scaler_468 BINARY_DOUBLE, 
	scaler_469 BINARY_DOUBLE, 
	scaler_470 BINARY_DOUBLE, 
	scaler_471 BINARY_DOUBLE, 
	scaler_472 BINARY_DOUBLE, 
	scaler_473 BINARY_DOUBLE, 
	scaler_474 BINARY_DOUBLE, 
	scaler_475 BINARY_DOUBLE, 
	scaler_476 BINARY_DOUBLE, 
	scaler_477 BINARY_DOUBLE, 
	scaler_478 BINARY_DOUBLE, 
	scaler_479 BINARY_DOUBLE, 
	scaler_480 BINARY_DOUBLE, 
	scaler_481 BINARY_DOUBLE, 
	scaler_482 BINARY_DOUBLE, 
	scaler_483 BINARY_DOUBLE, 
	scaler_484 BINARY_DOUBLE, 
	scaler_485 BINARY_DOUBLE, 
	scaler_486 BINARY_DOUBLE, 
	scaler_487 BINARY_DOUBLE, 
	scaler_488 BINARY_DOUBLE, 
	scaler_489 BINARY_DOUBLE, 
	scaler_490 BINARY_DOUBLE, 
	scaler_491 BINARY_DOUBLE, 
	scaler_492 BINARY_DOUBLE, 
	scaler_493 BINARY_DOUBLE, 
	scaler_494 BINARY_DOUBLE, 
	scaler_495 BINARY_DOUBLE, 
	scaler_496 BINARY_DOUBLE, 
	scaler_497 BINARY_DOUBLE, 
	scaler_498 BINARY_DOUBLE, 
	scaler_499 BINARY_DOUBLE, 
	scaler_500 BINARY_DOUBLE, 
	scaler_501 BINARY_DOUBLE
)

 ON COMMIT PRESERVE ROWS
-- Code For temporary table 33421_53X5V4_ADS_SCA_2_OUT part 2/2. Populate

INSERT INTO "33421_53X5V4_ADS_SCA_2_OUT" ("KEY", scaler_2, scaler_3, scaler_4, scaler_5, scaler_6, scaler_7, scaler_8, scaler_9, scaler_10, scaler_11, scaler_12, scaler_13, scaler_14, scaler_15, scaler_16, scaler_17, scaler_18, scaler_19, scaler_20, scaler_21, scaler_22, scaler_23, scaler_24, scaler_25, scaler_26, scaler_27, scaler_28, scaler_29, scaler_30, scaler_31, scaler_32, scaler_33, scaler_34, scaler_35, scaler_36, scaler_37, scaler_38, scaler_39, scaler_40, scaler_41, scaler_42, scaler_43, scaler_44, scaler_45, scaler_46, scaler_47, scaler_48, scaler_49, scaler_50, scaler_51, scaler_52, scaler_53, scaler_54, scaler_55, scaler_56, scaler_57, scaler_58, scaler_59, scaler_60, scaler_61, scaler_62, scaler_63, scaler_64, scaler_65, scaler_66, scaler_67, scaler_68, scaler_69, scaler_70, scaler_71, scaler_72, scaler_73, scaler_74, scaler_75, scaler_76, scaler_77, scaler_78, scaler_79, scaler_80, scaler_81, scaler_82, scaler_83, scaler_84, scaler_85, scaler_86, scaler_87, scaler_88, scaler_89, scaler_90, scaler_91, scaler_92, scaler_93, scaler_94, scaler_95, scaler_96, scaler_97, scaler_98, scaler_99, scaler_100, scaler_101, scaler_102, scaler_103, scaler_104, scaler_105, scaler_106, scaler_107, scaler_108, scaler_109, scaler_110, scaler_111, scaler_112, scaler_113, scaler_114, scaler_115, scaler_116, scaler_117, scaler_118, scaler_119, scaler_120, scaler_121, scaler_122, scaler_123, scaler_124, scaler_125, scaler_126, scaler_127, scaler_128, scaler_129, scaler_130, scaler_131, scaler_132, scaler_133, scaler_134, scaler_135, scaler_136, scaler_137, scaler_138, scaler_139, scaler_140, scaler_141, scaler_142, scaler_143, scaler_144, scaler_145, scaler_146, scaler_147, scaler_148, scaler_149, scaler_150, scaler_151, scaler_152, scaler_153, scaler_154, scaler_155, scaler_156, scaler_157, scaler_158, scaler_159, scaler_160, scaler_161, scaler_162, scaler_163, scaler_164, scaler_165, scaler_166, scaler_167, scaler_168, scaler_169, scaler_170, scaler_171, scaler_172, scaler_173, scaler_174, scaler_175, scaler_176, scaler_177, scaler_178, scaler_179, scaler_180, scaler_181, scaler_182, scaler_183, scaler_184, scaler_185, scaler_186, scaler_187, scaler_188, scaler_189, scaler_190, scaler_191, scaler_192, scaler_193, scaler_194, scaler_195, scaler_196, scaler_197, scaler_198, scaler_199, scaler_200, scaler_201, scaler_202, scaler_203, scaler_204, scaler_205, scaler_206, scaler_207, scaler_208, scaler_209, scaler_210, scaler_211, scaler_212, scaler_213, scaler_214, scaler_215, scaler_216, scaler_217, scaler_218, scaler_219, scaler_220, scaler_221, scaler_222, scaler_223, scaler_224, scaler_225, scaler_226, scaler_227, scaler_228, scaler_229, scaler_230, scaler_231, scaler_232, scaler_233, scaler_234, scaler_235, scaler_236, scaler_237, scaler_238, scaler_239, scaler_240, scaler_241, scaler_242, scaler_243, scaler_244, scaler_245, scaler_246, scaler_247, scaler_248, scaler_249, scaler_250, scaler_251, scaler_252, scaler_253, scaler_254, scaler_255, scaler_256, scaler_257, scaler_258, scaler_259, scaler_260, scaler_261, scaler_262, scaler_263, scaler_264, scaler_265, scaler_266, scaler_267, scaler_268, scaler_269, scaler_270, scaler_271, scaler_272, scaler_273, scaler_274, scaler_275, scaler_276, scaler_277, scaler_278, scaler_279, scaler_280, scaler_281, scaler_282, scaler_283, scaler_284, scaler_285, scaler_286, scaler_287, scaler_288, scaler_289, scaler_290, scaler_291, scaler_292, scaler_293, scaler_294, scaler_295, scaler_296, scaler_297, scaler_298, scaler_299, scaler_300, scaler_301, scaler_302, scaler_303, scaler_304, scaler_305, scaler_306, scaler_307, scaler_308, scaler_309, scaler_310, scaler_311, scaler_312, scaler_313, scaler_314, scaler_315, scaler_316, scaler_317, scaler_318, scaler_319, scaler_320, scaler_321, scaler_322, scaler_323, scaler_324, scaler_325, scaler_326, scaler_327, scaler_328, scaler_329, scaler_330, scaler_331, scaler_332, scaler_333, scaler_334, scaler_335, scaler_336, scaler_337, scaler_338, scaler_339, scaler_340, scaler_341, scaler_342, scaler_343, scaler_344, scaler_345, scaler_346, scaler_347, scaler_348, scaler_349, scaler_350, scaler_351, scaler_352, scaler_353, scaler_354, scaler_355, scaler_356, scaler_357, scaler_358, scaler_359, scaler_360, scaler_361, scaler_362, scaler_363, scaler_364, scaler_365, scaler_366, scaler_367, scaler_368, scaler_369, scaler_370, scaler_371, scaler_372, scaler_373, scaler_374, scaler_375, scaler_376, scaler_377, scaler_378, scaler_379, scaler_380, scaler_381, scaler_382, scaler_383, scaler_384, scaler_385, scaler_386, scaler_387, scaler_388, scaler_389, scaler_390, scaler_391, scaler_392, scaler_393, scaler_394, scaler_395, scaler_396, scaler_397, scaler_398, scaler_399, scaler_400, scaler_401, scaler_402, scaler_403, scaler_404, scaler_405, scaler_406, scaler_407, scaler_408, scaler_409, scaler_410, scaler_411, scaler_412, scaler_413, scaler_414, scaler_415, scaler_416, scaler_417, scaler_418, scaler_419, scaler_420, scaler_421, scaler_422, scaler_423, scaler_424, scaler_425, scaler_426, scaler_427, scaler_428, scaler_429, scaler_430, scaler_431, scaler_432, scaler_433, scaler_434, scaler_435, scaler_436, scaler_437, scaler_438, scaler_439, scaler_440, scaler_441, scaler_442, scaler_443, scaler_444, scaler_445, scaler_446, scaler_447, scaler_448, scaler_449, scaler_450, scaler_451, scaler_452, scaler_453, scaler_454, scaler_455, scaler_456, scaler_457, scaler_458, scaler_459, scaler_460, scaler_461, scaler_462, scaler_463, scaler_464, scaler_465, scaler_466, scaler_467, scaler_468, scaler_469, scaler_470, scaler_471, scaler_472, scaler_473, scaler_474, scaler_475, scaler_476, scaler_477, scaler_478, scaler_479, scaler_480, scaler_481, scaler_482, scaler_483, scaler_484, scaler_485, scaler_486, scaler_487, scaler_488, scaler_489, scaler_490, scaler_491, scaler_492, scaler_493, scaler_494, scaler_495, scaler_496, scaler_497, scaler_498, scaler_499, scaler_500, scaler_501) SELECT "U"."KEY", "U".scaler_2, "U".scaler_3, "U".scaler_4, "U".scaler_5, "U".scaler_6, "U".scaler_7, "U".scaler_8, "U".scaler_9, "U".scaler_10, "U".scaler_11, "U".scaler_12, "U".scaler_13, "U".scaler_14, "U".scaler_15, "U".scaler_16, "U".scaler_17, "U".scaler_18, "U".scaler_19, "U".scaler_20, "U".scaler_21, "U".scaler_22, "U".scaler_23, "U".scaler_24, "U".scaler_25, "U".scaler_26, "U".scaler_27, "U".scaler_28, "U".scaler_29, "U".scaler_30, "U".scaler_31, "U".scaler_32, "U".scaler_33, "U".scaler_34, "U".scaler_35, "U".scaler_36, "U".scaler_37, "U".scaler_38, "U".scaler_39, "U".scaler_40, "U".scaler_41, "U".scaler_42, "U".scaler_43, "U".scaler_44, "U".scaler_45, "U".scaler_46, "U".scaler_47, "U".scaler_48, "U".scaler_49, "U".scaler_50, "U".scaler_51, "U".scaler_52, "U".scaler_53, "U".scaler_54, "U".scaler_55, "U".scaler_56, "U".scaler_57, "U".scaler_58, "U".scaler_59, "U".scaler_60, "U".scaler_61, "U".scaler_62, "U".scaler_63, "U".scaler_64, "U".scaler_65, "U".scaler_66, "U".scaler_67, "U".scaler_68, "U".scaler_69, "U".scaler_70, "U".scaler_71, "U".scaler_72, "U".scaler_73, "U".scaler_74, "U".scaler_75, "U".scaler_76, "U".scaler_77, "U".scaler_78, "U".scaler_79, "U".scaler_80, "U".scaler_81, "U".scaler_82, "U".scaler_83, "U".scaler_84, "U".scaler_85, "U".scaler_86, "U".scaler_87, "U".scaler_88, "U".scaler_89, "U".scaler_90, "U".scaler_91, "U".scaler_92, "U".scaler_93, "U".scaler_94, "U".scaler_95, "U".scaler_96, "U".scaler_97, "U".scaler_98, "U".scaler_99, "U".scaler_100, "U".scaler_101, "U".scaler_102, "U".scaler_103, "U".scaler_104, "U".scaler_105, "U".scaler_106, "U".scaler_107, "U".scaler_108, "U".scaler_109, "U".scaler_110, "U".scaler_111, "U".scaler_112, "U".scaler_113, "U".scaler_114, "U".scaler_115, "U".scaler_116, "U".scaler_117, "U".scaler_118, "U".scaler_119, "U".scaler_120, "U".scaler_121, "U".scaler_122, "U".scaler_123, "U".scaler_124, "U".scaler_125, "U".scaler_126, "U".scaler_127, "U".scaler_128, "U".scaler_129, "U".scaler_130, "U".scaler_131, "U".scaler_132, "U".scaler_133, "U".scaler_134, "U".scaler_135, "U".scaler_136, "U".scaler_137, "U".scaler_138, "U".scaler_139, "U".scaler_140, "U".scaler_141, "U".scaler_142, "U".scaler_143, "U".scaler_144, "U".scaler_145, "U".scaler_146, "U".scaler_147, "U".scaler_148, "U".scaler_149, "U".scaler_150, "U".scaler_151, "U".scaler_152, "U".scaler_153, "U".scaler_154, "U".scaler_155, "U".scaler_156, "U".scaler_157, "U".scaler_158, "U".scaler_159, "U".scaler_160, "U".scaler_161, "U".scaler_162, "U".scaler_163, "U".scaler_164, "U".scaler_165, "U".scaler_166, "U".scaler_167, "U".scaler_168, "U".scaler_169, "U".scaler_170, "U".scaler_171, "U".scaler_172, "U".scaler_173, "U".scaler_174, "U".scaler_175, "U".scaler_176, "U".scaler_177, "U".scaler_178, "U".scaler_179, "U".scaler_180, "U".scaler_181, "U".scaler_182, "U".scaler_183, "U".scaler_184, "U".scaler_185, "U".scaler_186, "U".scaler_187, "U".scaler_188, "U".scaler_189, "U".scaler_190, "U".scaler_191, "U".scaler_192, "U".scaler_193, "U".scaler_194, "U".scaler_195, "U".scaler_196, "U".scaler_197, "U".scaler_198, "U".scaler_199, "U".scaler_200, "U".scaler_201, "U".scaler_202, "U".scaler_203, "U".scaler_204, "U".scaler_205, "U".scaler_206, "U".scaler_207, "U".scaler_208, "U".scaler_209, "U".scaler_210, "U".scaler_211, "U".scaler_212, "U".scaler_213, "U".scaler_214, "U".scaler_215, "U".scaler_216, "U".scaler_217, "U".scaler_218, "U".scaler_219, "U".scaler_220, "U".scaler_221, "U".scaler_222, "U".scaler_223, "U".scaler_224, "U".scaler_225, "U".scaler_226, "U".scaler_227, "U".scaler_228, "U".scaler_229, "U".scaler_230, "U".scaler_231, "U".scaler_232, "U".scaler_233, "U".scaler_234, "U".scaler_235, "U".scaler_236, "U".scaler_237, "U".scaler_238, "U".scaler_239, "U".scaler_240, "U".scaler_241, "U".scaler_242, "U".scaler_243, "U".scaler_244, "U".scaler_245, "U".scaler_246, "U".scaler_247, "U".scaler_248, "U".scaler_249, "U".scaler_250, "U".scaler_251, "U".scaler_252, "U".scaler_253, "U".scaler_254, "U".scaler_255, "U".scaler_256, "U".scaler_257, "U".scaler_258, "U".scaler_259, "U".scaler_260, "U".scaler_261, "U".scaler_262, "U".scaler_263, "U".scaler_264, "U".scaler_265, "U".scaler_266, "U".scaler_267, "U".scaler_268, "U".scaler_269, "U".scaler_270, "U".scaler_271, "U".scaler_272, "U".scaler_273, "U".scaler_274, "U".scaler_275, "U".scaler_276, "U".scaler_277, "U".scaler_278, "U".scaler_279, "U".scaler_280, "U".scaler_281, "U".scaler_282, "U".scaler_283, "U".scaler_284, "U".scaler_285, "U".scaler_286, "U".scaler_287, "U".scaler_288, "U".scaler_289, "U".scaler_290, "U".scaler_291, "U".scaler_292, "U".scaler_293, "U".scaler_294, "U".scaler_295, "U".scaler_296, "U".scaler_297, "U".scaler_298, "U".scaler_299, "U".scaler_300, "U".scaler_301, "U".scaler_302, "U".scaler_303, "U".scaler_304, "U".scaler_305, "U".scaler_306, "U".scaler_307, "U".scaler_308, "U".scaler_309, "U".scaler_310, "U".scaler_311, "U".scaler_312, "U".scaler_313, "U".scaler_314, "U".scaler_315, "U".scaler_316, "U".scaler_317, "U".scaler_318, "U".scaler_319, "U".scaler_320, "U".scaler_321, "U".scaler_322, "U".scaler_323, "U".scaler_324, "U".scaler_325, "U".scaler_326, "U".scaler_327, "U".scaler_328, "U".scaler_329, "U".scaler_330, "U".scaler_331, "U".scaler_332, "U".scaler_333, "U".scaler_334, "U".scaler_335, "U".scaler_336, "U".scaler_337, "U".scaler_338, "U".scaler_339, "U".scaler_340, "U".scaler_341, "U".scaler_342, "U".scaler_343, "U".scaler_344, "U".scaler_345, "U".scaler_346, "U".scaler_347, "U".scaler_348, "U".scaler_349, "U".scaler_350, "U".scaler_351, "U".scaler_352, "U".scaler_353, "U".scaler_354, "U".scaler_355, "U".scaler_356, "U".scaler_357, "U".scaler_358, "U".scaler_359, "U".scaler_360, "U".scaler_361, "U".scaler_362, "U".scaler_363, "U".scaler_364, "U".scaler_365, "U".scaler_366, "U".scaler_367, "U".scaler_368, "U".scaler_369, "U".scaler_370, "U".scaler_371, "U".scaler_372, "U".scaler_373, "U".scaler_374, "U".scaler_375, "U".scaler_376, "U".scaler_377, "U".scaler_378, "U".scaler_379, "U".scaler_380, "U".scaler_381, "U".scaler_382, "U".scaler_383, "U".scaler_384, "U".scaler_385, "U".scaler_386, "U".scaler_387, "U".scaler_388, "U".scaler_389, "U".scaler_390, "U".scaler_391, "U".scaler_392, "U".scaler_393, "U".scaler_394, "U".scaler_395, "U".scaler_396, "U".scaler_397, "U".scaler_398, "U".scaler_399, "U".scaler_400, "U".scaler_401, "U".scaler_402, "U".scaler_403, "U".scaler_404, "U".scaler_405, "U".scaler_406, "U".scaler_407, "U".scaler_408, "U".scaler_409, "U".scaler_410, "U".scaler_411, "U".scaler_412, "U".scaler_413, "U".scaler_414, "U".scaler_415, "U".scaler_416, "U".scaler_417, "U".scaler_418, "U".scaler_419, "U".scaler_420, "U".scaler_421, "U".scaler_422, "U".scaler_423, "U".scaler_424, "U".scaler_425, "U".scaler_426, "U".scaler_427, "U".scaler_428, "U".scaler_429, "U".scaler_430, "U".scaler_431, "U".scaler_432, "U".scaler_433, "U".scaler_434, "U".scaler_435, "U".scaler_436, "U".scaler_437, "U".scaler_438, "U".scaler_439, "U".scaler_440, "U".scaler_441, "U".scaler_442, "U".scaler_443, "U".scaler_444, "U".scaler_445, "U".scaler_446, "U".scaler_447, "U".scaler_448, "U".scaler_449, "U".scaler_450, "U".scaler_451, "U".scaler_452, "U".scaler_453, "U".scaler_454, "U".scaler_455, "U".scaler_456, "U".scaler_457, "U".scaler_458, "U".scaler_459, "U".scaler_460, "U".scaler_461, "U".scaler_462, "U".scaler_463, "U".scaler_464, "U".scaler_465, "U".scaler_466, "U".scaler_467, "U".scaler_468, "U".scaler_469, "U".scaler_470, "U".scaler_471, "U".scaler_472, "U".scaler_473, "U".scaler_474, "U".scaler_475, "U".scaler_476, "U".scaler_477, "U".scaler_478, "U".scaler_479, "U".scaler_480, "U".scaler_481, "U".scaler_482, "U".scaler_483, "U".scaler_484, "U".scaler_485, "U".scaler_486, "U".scaler_487, "U".scaler_488, "U".scaler_489, "U".scaler_490, "U".scaler_491, "U".scaler_492, "U".scaler_493, "U".scaler_494, "U".scaler_495, "U".scaler_496, "U".scaler_497, "U".scaler_498, "U".scaler_499, "U".scaler_500, "U".scaler_501 
FROM (SELECT "ADS_sca_2_OUT"."KEY", "ADS_sca_2_OUT".scaler_2, "ADS_sca_2_OUT".scaler_3, "ADS_sca_2_OUT".scaler_4, "ADS_sca_2_OUT".scaler_5, "ADS_sca_2_OUT".scaler_6, "ADS_sca_2_OUT".scaler_7, "ADS_sca_2_OUT".scaler_8, "ADS_sca_2_OUT".scaler_9, "ADS_sca_2_OUT".scaler_10, "ADS_sca_2_OUT".scaler_11, "ADS_sca_2_OUT".scaler_12, "ADS_sca_2_OUT".scaler_13, "ADS_sca_2_OUT".scaler_14, "ADS_sca_2_OUT".scaler_15, "ADS_sca_2_OUT".scaler_16, "ADS_sca_2_OUT".scaler_17, "ADS_sca_2_OUT".scaler_18, "ADS_sca_2_OUT".scaler_19, "ADS_sca_2_OUT".scaler_20, "ADS_sca_2_OUT".scaler_21, "ADS_sca_2_OUT".scaler_22, "ADS_sca_2_OUT".scaler_23, "ADS_sca_2_OUT".scaler_24, "ADS_sca_2_OUT".scaler_25, "ADS_sca_2_OUT".scaler_26, "ADS_sca_2_OUT".scaler_27, "ADS_sca_2_OUT".scaler_28, "ADS_sca_2_OUT".scaler_29, "ADS_sca_2_OUT".scaler_30, "ADS_sca_2_OUT".scaler_31, "ADS_sca_2_OUT".scaler_32, "ADS_sca_2_OUT".scaler_33, "ADS_sca_2_OUT".scaler_34, "ADS_sca_2_OUT".scaler_35, "ADS_sca_2_OUT".scaler_36, "ADS_sca_2_OUT".scaler_37, "ADS_sca_2_OUT".scaler_38, "ADS_sca_2_OUT".scaler_39, "ADS_sca_2_OUT".scaler_40, "ADS_sca_2_OUT".scaler_41, "ADS_sca_2_OUT".scaler_42, "ADS_sca_2_OUT".scaler_43, "ADS_sca_2_OUT".scaler_44, "ADS_sca_2_OUT".scaler_45, "ADS_sca_2_OUT".scaler_46, "ADS_sca_2_OUT".scaler_47, "ADS_sca_2_OUT".scaler_48, "ADS_sca_2_OUT".scaler_49, "ADS_sca_2_OUT".scaler_50, "ADS_sca_2_OUT".scaler_51, "ADS_sca_2_OUT".scaler_52, "ADS_sca_2_OUT".scaler_53, "ADS_sca_2_OUT".scaler_54, "ADS_sca_2_OUT".scaler_55, "ADS_sca_2_OUT".scaler_56, "ADS_sca_2_OUT".scaler_57, "ADS_sca_2_OUT".scaler_58, "ADS_sca_2_OUT".scaler_59, "ADS_sca_2_OUT".scaler_60, "ADS_sca_2_OUT".scaler_61, "ADS_sca_2_OUT".scaler_62, "ADS_sca_2_OUT".scaler_63, "ADS_sca_2_OUT".scaler_64, "ADS_sca_2_OUT".scaler_65, "ADS_sca_2_OUT".scaler_66, "ADS_sca_2_OUT".scaler_67, "ADS_sca_2_OUT".scaler_68, "ADS_sca_2_OUT".scaler_69, "ADS_sca_2_OUT".scaler_70, "ADS_sca_2_OUT".scaler_71, "ADS_sca_2_OUT".scaler_72, "ADS_sca_2_OUT".scaler_73, "ADS_sca_2_OUT".scaler_74, "ADS_sca_2_OUT".scaler_75, "ADS_sca_2_OUT".scaler_76, "ADS_sca_2_OUT".scaler_77, "ADS_sca_2_OUT".scaler_78, "ADS_sca_2_OUT".scaler_79, "ADS_sca_2_OUT".scaler_80, "ADS_sca_2_OUT".scaler_81, "ADS_sca_2_OUT".scaler_82, "ADS_sca_2_OUT".scaler_83, "ADS_sca_2_OUT".scaler_84, "ADS_sca_2_OUT".scaler_85, "ADS_sca_2_OUT".scaler_86, "ADS_sca_2_OUT".scaler_87, "ADS_sca_2_OUT".scaler_88, "ADS_sca_2_OUT".scaler_89, "ADS_sca_2_OUT".scaler_90, "ADS_sca_2_OUT".scaler_91, "ADS_sca_2_OUT".scaler_92, "ADS_sca_2_OUT".scaler_93, "ADS_sca_2_OUT".scaler_94, "ADS_sca_2_OUT".scaler_95, "ADS_sca_2_OUT".scaler_96, "ADS_sca_2_OUT".scaler_97, "ADS_sca_2_OUT".scaler_98, "ADS_sca_2_OUT".scaler_99, "ADS_sca_2_OUT".scaler_100, "ADS_sca_2_OUT".scaler_101, "ADS_sca_2_OUT".scaler_102, "ADS_sca_2_OUT".scaler_103, "ADS_sca_2_OUT".scaler_104, "ADS_sca_2_OUT".scaler_105, "ADS_sca_2_OUT".scaler_106, "ADS_sca_2_OUT".scaler_107, "ADS_sca_2_OUT".scaler_108, "ADS_sca_2_OUT".scaler_109, "ADS_sca_2_OUT".scaler_110, "ADS_sca_2_OUT".scaler_111, "ADS_sca_2_OUT".scaler_112, "ADS_sca_2_OUT".scaler_113, "ADS_sca_2_OUT".scaler_114, "ADS_sca_2_OUT".scaler_115, "ADS_sca_2_OUT".scaler_116, "ADS_sca_2_OUT".scaler_117, "ADS_sca_2_OUT".scaler_118, "ADS_sca_2_OUT".scaler_119, "ADS_sca_2_OUT".scaler_120, "ADS_sca_2_OUT".scaler_121, "ADS_sca_2_OUT".scaler_122, "ADS_sca_2_OUT".scaler_123, "ADS_sca_2_OUT".scaler_124, "ADS_sca_2_OUT".scaler_125, "ADS_sca_2_OUT".scaler_126, "ADS_sca_2_OUT".scaler_127, "ADS_sca_2_OUT".scaler_128, "ADS_sca_2_OUT".scaler_129, "ADS_sca_2_OUT".scaler_130, "ADS_sca_2_OUT".scaler_131, "ADS_sca_2_OUT".scaler_132, "ADS_sca_2_OUT".scaler_133, "ADS_sca_2_OUT".scaler_134, "ADS_sca_2_OUT".scaler_135, "ADS_sca_2_OUT".scaler_136, "ADS_sca_2_OUT".scaler_137, "ADS_sca_2_OUT".scaler_138, "ADS_sca_2_OUT".scaler_139, "ADS_sca_2_OUT".scaler_140, "ADS_sca_2_OUT".scaler_141, "ADS_sca_2_OUT".scaler_142, "ADS_sca_2_OUT".scaler_143, "ADS_sca_2_OUT".scaler_144, "ADS_sca_2_OUT".scaler_145, "ADS_sca_2_OUT".scaler_146, "ADS_sca_2_OUT".scaler_147, "ADS_sca_2_OUT".scaler_148, "ADS_sca_2_OUT".scaler_149, "ADS_sca_2_OUT".scaler_150, "ADS_sca_2_OUT".scaler_151, "ADS_sca_2_OUT".scaler_152, "ADS_sca_2_OUT".scaler_153, "ADS_sca_2_OUT".scaler_154, "ADS_sca_2_OUT".scaler_155, "ADS_sca_2_OUT".scaler_156, "ADS_sca_2_OUT".scaler_157, "ADS_sca_2_OUT".scaler_158, "ADS_sca_2_OUT".scaler_159, "ADS_sca_2_OUT".scaler_160, "ADS_sca_2_OUT".scaler_161, "ADS_sca_2_OUT".scaler_162, "ADS_sca_2_OUT".scaler_163, "ADS_sca_2_OUT".scaler_164, "ADS_sca_2_OUT".scaler_165, "ADS_sca_2_OUT".scaler_166, "ADS_sca_2_OUT".scaler_167, "ADS_sca_2_OUT".scaler_168, "ADS_sca_2_OUT".scaler_169, "ADS_sca_2_OUT".scaler_170, "ADS_sca_2_OUT".scaler_171, "ADS_sca_2_OUT".scaler_172, "ADS_sca_2_OUT".scaler_173, "ADS_sca_2_OUT".scaler_174, "ADS_sca_2_OUT".scaler_175, "ADS_sca_2_OUT".scaler_176, "ADS_sca_2_OUT".scaler_177, "ADS_sca_2_OUT".scaler_178, "ADS_sca_2_OUT".scaler_179, "ADS_sca_2_OUT".scaler_180, "ADS_sca_2_OUT".scaler_181, "ADS_sca_2_OUT".scaler_182, "ADS_sca_2_OUT".scaler_183, "ADS_sca_2_OUT".scaler_184, "ADS_sca_2_OUT".scaler_185, "ADS_sca_2_OUT".scaler_186, "ADS_sca_2_OUT".scaler_187, "ADS_sca_2_OUT".scaler_188, "ADS_sca_2_OUT".scaler_189, "ADS_sca_2_OUT".scaler_190, "ADS_sca_2_OUT".scaler_191, "ADS_sca_2_OUT".scaler_192, "ADS_sca_2_OUT".scaler_193, "ADS_sca_2_OUT".scaler_194, "ADS_sca_2_OUT".scaler_195, "ADS_sca_2_OUT".scaler_196, "ADS_sca_2_OUT".scaler_197, "ADS_sca_2_OUT".scaler_198, "ADS_sca_2_OUT".scaler_199, "ADS_sca_2_OUT".scaler_200, "ADS_sca_2_OUT".scaler_201, "ADS_sca_2_OUT".scaler_202, "ADS_sca_2_OUT".scaler_203, "ADS_sca_2_OUT".scaler_204, "ADS_sca_2_OUT".scaler_205, "ADS_sca_2_OUT".scaler_206, "ADS_sca_2_OUT".scaler_207, "ADS_sca_2_OUT".scaler_208, "ADS_sca_2_OUT".scaler_209, "ADS_sca_2_OUT".scaler_210, "ADS_sca_2_OUT".scaler_211, "ADS_sca_2_OUT".scaler_212, "ADS_sca_2_OUT".scaler_213, "ADS_sca_2_OUT".scaler_214, "ADS_sca_2_OUT".scaler_215, "ADS_sca_2_OUT".scaler_216, "ADS_sca_2_OUT".scaler_217, "ADS_sca_2_OUT".scaler_218, "ADS_sca_2_OUT".scaler_219, "ADS_sca_2_OUT".scaler_220, "ADS_sca_2_OUT".scaler_221, "ADS_sca_2_OUT".scaler_222, "ADS_sca_2_OUT".scaler_223, "ADS_sca_2_OUT".scaler_224, "ADS_sca_2_OUT".scaler_225, "ADS_sca_2_OUT".scaler_226, "ADS_sca_2_OUT".scaler_227, "ADS_sca_2_OUT".scaler_228, "ADS_sca_2_OUT".scaler_229, "ADS_sca_2_OUT".scaler_230, "ADS_sca_2_OUT".scaler_231, "ADS_sca_2_OUT".scaler_232, "ADS_sca_2_OUT".scaler_233, "ADS_sca_2_OUT".scaler_234, "ADS_sca_2_OUT".scaler_235, "ADS_sca_2_OUT".scaler_236, "ADS_sca_2_OUT".scaler_237, "ADS_sca_2_OUT".scaler_238, "ADS_sca_2_OUT".scaler_239, "ADS_sca_2_OUT".scaler_240, "ADS_sca_2_OUT".scaler_241, "ADS_sca_2_OUT".scaler_242, "ADS_sca_2_OUT".scaler_243, "ADS_sca_2_OUT".scaler_244, "ADS_sca_2_OUT".scaler_245, "ADS_sca_2_OUT".scaler_246, "ADS_sca_2_OUT".scaler_247, "ADS_sca_2_OUT".scaler_248, "ADS_sca_2_OUT".scaler_249, "ADS_sca_2_OUT".scaler_250, "ADS_sca_2_OUT".scaler_251, "ADS_sca_2_OUT".scaler_252, "ADS_sca_2_OUT".scaler_253, "ADS_sca_2_OUT".scaler_254, "ADS_sca_2_OUT".scaler_255, "ADS_sca_2_OUT".scaler_256, "ADS_sca_2_OUT".scaler_257, "ADS_sca_2_OUT".scaler_258, "ADS_sca_2_OUT".scaler_259, "ADS_sca_2_OUT".scaler_260, "ADS_sca_2_OUT".scaler_261, "ADS_sca_2_OUT".scaler_262, "ADS_sca_2_OUT".scaler_263, "ADS_sca_2_OUT".scaler_264, "ADS_sca_2_OUT".scaler_265, "ADS_sca_2_OUT".scaler_266, "ADS_sca_2_OUT".scaler_267, "ADS_sca_2_OUT".scaler_268, "ADS_sca_2_OUT".scaler_269, "ADS_sca_2_OUT".scaler_270, "ADS_sca_2_OUT".scaler_271, "ADS_sca_2_OUT".scaler_272, "ADS_sca_2_OUT".scaler_273, "ADS_sca_2_OUT".scaler_274, "ADS_sca_2_OUT".scaler_275, "ADS_sca_2_OUT".scaler_276, "ADS_sca_2_OUT".scaler_277, "ADS_sca_2_OUT".scaler_278, "ADS_sca_2_OUT".scaler_279, "ADS_sca_2_OUT".scaler_280, "ADS_sca_2_OUT".scaler_281, "ADS_sca_2_OUT".scaler_282, "ADS_sca_2_OUT".scaler_283, "ADS_sca_2_OUT".scaler_284, "ADS_sca_2_OUT".scaler_285, "ADS_sca_2_OUT".scaler_286, "ADS_sca_2_OUT".scaler_287, "ADS_sca_2_OUT".scaler_288, "ADS_sca_2_OUT".scaler_289, "ADS_sca_2_OUT".scaler_290, "ADS_sca_2_OUT".scaler_291, "ADS_sca_2_OUT".scaler_292, "ADS_sca_2_OUT".scaler_293, "ADS_sca_2_OUT".scaler_294, "ADS_sca_2_OUT".scaler_295, "ADS_sca_2_OUT".scaler_296, "ADS_sca_2_OUT".scaler_297, "ADS_sca_2_OUT".scaler_298, "ADS_sca_2_OUT".scaler_299, "ADS_sca_2_OUT".scaler_300, "ADS_sca_2_OUT".scaler_301, "ADS_sca_2_OUT".scaler_302, "ADS_sca_2_OUT".scaler_303, "ADS_sca_2_OUT".scaler_304, "ADS_sca_2_OUT".scaler_305, "ADS_sca_2_OUT".scaler_306, "ADS_sca_2_OUT".scaler_307, "ADS_sca_2_OUT".scaler_308, "ADS_sca_2_OUT".scaler_309, "ADS_sca_2_OUT".scaler_310, "ADS_sca_2_OUT".scaler_311, "ADS_sca_2_OUT".scaler_312, "ADS_sca_2_OUT".scaler_313, "ADS_sca_2_OUT".scaler_314, "ADS_sca_2_OUT".scaler_315, "ADS_sca_2_OUT".scaler_316, "ADS_sca_2_OUT".scaler_317, "ADS_sca_2_OUT".scaler_318, "ADS_sca_2_OUT".scaler_319, "ADS_sca_2_OUT".scaler_320, "ADS_sca_2_OUT".scaler_321, "ADS_sca_2_OUT".scaler_322, "ADS_sca_2_OUT".scaler_323, "ADS_sca_2_OUT".scaler_324, "ADS_sca_2_OUT".scaler_325, "ADS_sca_2_OUT".scaler_326, "ADS_sca_2_OUT".scaler_327, "ADS_sca_2_OUT".scaler_328, "ADS_sca_2_OUT".scaler_329, "ADS_sca_2_OUT".scaler_330, "ADS_sca_2_OUT".scaler_331, "ADS_sca_2_OUT".scaler_332, "ADS_sca_2_OUT".scaler_333, "ADS_sca_2_OUT".scaler_334, "ADS_sca_2_OUT".scaler_335, "ADS_sca_2_OUT".scaler_336, "ADS_sca_2_OUT".scaler_337, "ADS_sca_2_OUT".scaler_338, "ADS_sca_2_OUT".scaler_339, "ADS_sca_2_OUT".scaler_340, "ADS_sca_2_OUT".scaler_341, "ADS_sca_2_OUT".scaler_342, "ADS_sca_2_OUT".scaler_343, "ADS_sca_2_OUT".scaler_344, "ADS_sca_2_OUT".scaler_345, "ADS_sca_2_OUT".scaler_346, "ADS_sca_2_OUT".scaler_347, "ADS_sca_2_OUT".scaler_348, "ADS_sca_2_OUT".scaler_349, "ADS_sca_2_OUT".scaler_350, "ADS_sca_2_OUT".scaler_351, "ADS_sca_2_OUT".scaler_352, "ADS_sca_2_OUT".scaler_353, "ADS_sca_2_OUT".scaler_354, "ADS_sca_2_OUT".scaler_355, "ADS_sca_2_OUT".scaler_356, "ADS_sca_2_OUT".scaler_357, "ADS_sca_2_OUT".scaler_358, "ADS_sca_2_OUT".scaler_359, "ADS_sca_2_OUT".scaler_360, "ADS_sca_2_OUT".scaler_361, "ADS_sca_2_OUT".scaler_362, "ADS_sca_2_OUT".scaler_363, "ADS_sca_2_OUT".scaler_364, "ADS_sca_2_OUT".scaler_365, "ADS_sca_2_OUT".scaler_366, "ADS_sca_2_OUT".scaler_367, "ADS_sca_2_OUT".scaler_368, "ADS_sca_2_OUT".scaler_369, "ADS_sca_2_OUT".scaler_370, "ADS_sca_2_OUT".scaler_371, "ADS_sca_2_OUT".scaler_372, "ADS_sca_2_OUT".scaler_373, "ADS_sca_2_OUT".scaler_374, "ADS_sca_2_OUT".scaler_375, "ADS_sca_2_OUT".scaler_376, "ADS_sca_2_OUT".scaler_377, "ADS_sca_2_OUT".scaler_378, "ADS_sca_2_OUT".scaler_379, "ADS_sca_2_OUT".scaler_380, "ADS_sca_2_OUT".scaler_381, "ADS_sca_2_OUT".scaler_382, "ADS_sca_2_OUT".scaler_383, "ADS_sca_2_OUT".scaler_384, "ADS_sca_2_OUT".scaler_385, "ADS_sca_2_OUT".scaler_386, "ADS_sca_2_OUT".scaler_387, "ADS_sca_2_OUT".scaler_388, "ADS_sca_2_OUT".scaler_389, "ADS_sca_2_OUT".scaler_390, "ADS_sca_2_OUT".scaler_391, "ADS_sca_2_OUT".scaler_392, "ADS_sca_2_OUT".scaler_393, "ADS_sca_2_OUT".scaler_394, "ADS_sca_2_OUT".scaler_395, "ADS_sca_2_OUT".scaler_396, "ADS_sca_2_OUT".scaler_397, "ADS_sca_2_OUT".scaler_398, "ADS_sca_2_OUT".scaler_399, "ADS_sca_2_OUT".scaler_400, "ADS_sca_2_OUT".scaler_401, "ADS_sca_2_OUT".scaler_402, "ADS_sca_2_OUT".scaler_403, "ADS_sca_2_OUT".scaler_404, "ADS_sca_2_OUT".scaler_405, "ADS_sca_2_OUT".scaler_406, "ADS_sca_2_OUT".scaler_407, "ADS_sca_2_OUT".scaler_408, "ADS_sca_2_OUT".scaler_409, "ADS_sca_2_OUT".scaler_410, "ADS_sca_2_OUT".scaler_411, "ADS_sca_2_OUT".scaler_412, "ADS_sca_2_OUT".scaler_413, "ADS_sca_2_OUT".scaler_414, "ADS_sca_2_OUT".scaler_415, "ADS_sca_2_OUT".scaler_416, "ADS_sca_2_OUT".scaler_417, "ADS_sca_2_OUT".scaler_418, "ADS_sca_2_OUT".scaler_419, "ADS_sca_2_OUT".scaler_420, "ADS_sca_2_OUT".scaler_421, "ADS_sca_2_OUT".scaler_422, "ADS_sca_2_OUT".scaler_423, "ADS_sca_2_OUT".scaler_424, "ADS_sca_2_OUT".scaler_425, "ADS_sca_2_OUT".scaler_426, "ADS_sca_2_OUT".scaler_427, "ADS_sca_2_OUT".scaler_428, "ADS_sca_2_OUT".scaler_429, "ADS_sca_2_OUT".scaler_430, "ADS_sca_2_OUT".scaler_431, "ADS_sca_2_OUT".scaler_432, "ADS_sca_2_OUT".scaler_433, "ADS_sca_2_OUT".scaler_434, "ADS_sca_2_OUT".scaler_435, "ADS_sca_2_OUT".scaler_436, "ADS_sca_2_OUT".scaler_437, "ADS_sca_2_OUT".scaler_438, "ADS_sca_2_OUT".scaler_439, "ADS_sca_2_OUT".scaler_440, "ADS_sca_2_OUT".scaler_441, "ADS_sca_2_OUT".scaler_442, "ADS_sca_2_OUT".scaler_443, "ADS_sca_2_OUT".scaler_444, "ADS_sca_2_OUT".scaler_445, "ADS_sca_2_OUT".scaler_446, "ADS_sca_2_OUT".scaler_447, "ADS_sca_2_OUT".scaler_448, "ADS_sca_2_OUT".scaler_449, "ADS_sca_2_OUT".scaler_450, "ADS_sca_2_OUT".scaler_451, "ADS_sca_2_OUT".scaler_452, "ADS_sca_2_OUT".scaler_453, "ADS_sca_2_OUT".scaler_454, "ADS_sca_2_OUT".scaler_455, "ADS_sca_2_OUT".scaler_456, "ADS_sca_2_OUT".scaler_457, "ADS_sca_2_OUT".scaler_458, "ADS_sca_2_OUT".scaler_459, "ADS_sca_2_OUT".scaler_460, "ADS_sca_2_OUT".scaler_461, "ADS_sca_2_OUT".scaler_462, "ADS_sca_2_OUT".scaler_463, "ADS_sca_2_OUT".scaler_464, "ADS_sca_2_OUT".scaler_465, "ADS_sca_2_OUT".scaler_466, "ADS_sca_2_OUT".scaler_467, "ADS_sca_2_OUT".scaler_468, "ADS_sca_2_OUT".scaler_469, "ADS_sca_2_OUT".scaler_470, "ADS_sca_2_OUT".scaler_471, "ADS_sca_2_OUT".scaler_472, "ADS_sca_2_OUT".scaler_473, "ADS_sca_2_OUT".scaler_474, "ADS_sca_2_OUT".scaler_475, "ADS_sca_2_OUT".scaler_476, "ADS_sca_2_OUT".scaler_477, "ADS_sca_2_OUT".scaler_478, "ADS_sca_2_OUT".scaler_479, "ADS_sca_2_OUT".scaler_480, "ADS_sca_2_OUT".scaler_481, "ADS_sca_2_OUT".scaler_482, "ADS_sca_2_OUT".scaler_483, "ADS_sca_2_OUT".scaler_484, "ADS_sca_2_OUT".scaler_485, "ADS_sca_2_OUT".scaler_486, "ADS_sca_2_OUT".scaler_487, "ADS_sca_2_OUT".scaler_488, "ADS_sca_2_OUT".scaler_489, "ADS_sca_2_OUT".scaler_490, "ADS_sca_2_OUT".scaler_491, "ADS_sca_2_OUT".scaler_492, "ADS_sca_2_OUT".scaler_493, "ADS_sca_2_OUT".scaler_494, "ADS_sca_2_OUT".scaler_495, "ADS_sca_2_OUT".scaler_496, "ADS_sca_2_OUT".scaler_497, "ADS_sca_2_OUT".scaler_498, "ADS_sca_2_OUT".scaler_499, "ADS_sca_2_OUT".scaler_500, "ADS_sca_2_OUT".scaler_501 
FROM (SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", (CAST("ADS_imp_1_OUT".impter_2 AS BINARY_DOUBLE) - 0.10810245375646362) / 0.9793817679782103 AS scaler_2, (CAST("ADS_imp_1_OUT".impter_3 AS BINARY_DOUBLE) - 0.040042372892287084) / 1.0023891813162529 AS scaler_3, (CAST("ADS_imp_1_OUT".impter_4 AS BINARY_DOUBLE) - -0.07667364732662786) / 0.9900776238894332 AS scaler_4, (CAST("ADS_imp_1_OUT".impter_5 AS BINARY_DOUBLE) - 0.17588592419877258) / 5.560255893599715 AS scaler_5, (CAST("ADS_imp_1_OUT".impter_6 AS BINARY_DOUBLE) - 0.02926169026463611) / 1.0394964701962466 AS scaler_6, (CAST("ADS_imp_1_OUT".impter_7 AS BINARY_DOUBLE) - -0.00904400654098767) / 0.9961880424548265 AS scaler_7, (CAST("ADS_imp_1_OUT".impter_8 AS BINARY_DOUBLE) - 0.02021641814123045) / 1.0128701222372198 AS scaler_8, (CAST("ADS_imp_1_OUT".impter_9 AS BINARY_DOUBLE) - -0.021740866363558604) / 0.9982204224505042 AS scaler_9, (CAST("ADS_imp_1_OUT".impter_10 AS BINARY_DOUBLE) - 0.12136863686872651) / 5.9946377958756045 AS scaler_10, (CAST("ADS_imp_1_OUT".impter_11 AS BINARY_DOUBLE) - -0.009621207715304118) / 1.0301565996554682 AS scaler_11, (CAST("ADS_imp_1_OUT".impter_12 AS BINARY_DOUBLE) - -0.0017282210866736356) / 0.981399050431275 AS scaler_12, (CAST("ADS_imp_1_OUT".impter_13 AS BINARY_DOUBLE) - -0.017782065935332218) / 1.0111944630304806 AS scaler_13, (CAST("ADS_imp_1_OUT".impter_14 AS BINARY_DOUBLE) - 0.03226275015550329) / 0.979628929805027 AS scaler_14, (CAST("ADS_imp_1_OUT".impter_15 AS BINARY_DOUBLE) - -0.0014825533746410664) / 0.9934430866044156 AS scaler_15, (CAST("ADS_imp_1_OUT".impter_16 AS BINARY_DOUBLE) - 0.06164712316198218) / 1.0212164409644986 AS scaler_16, (CAST("ADS_imp_1_OUT".impter_17 AS BINARY_DOUBLE) - 0.02754670267716649) / 1.0166324015399968 AS scaler_17, (CAST("ADS_imp_1_OUT".impter_18 AS BINARY_DOUBLE) - 0.08064319713194991) / 5.771736825789889 AS scaler_18, (CAST("ADS_imp_1_OUT".impter_19 AS BINARY_DOUBLE) - -0.011498650117894155) / 1.0134290863495095 AS scaler_19, (CAST("ADS_imp_1_OUT".impter_20 AS BINARY_DOUBLE) - 0.31890266993969374) / 5.708228988759961 AS scaler_20, (CAST("ADS_imp_1_OUT".impter_21 AS BINARY_DOUBLE) - -0.00022777424626326773) / 0.9933278547260863 AS scaler_21, (CAST("ADS_imp_1_OUT".impter_22 AS BINARY_DOUBLE) - 0.24588258651573852) / 6.039060090290538 AS scaler_22, (CAST("ADS_imp_1_OUT".impter_23 AS BINARY_DOUBLE) - -0.008717075180818528) / 0.9761125096364057 AS scaler_23, (CAST("ADS_imp_1_OUT".impter_24 AS BINARY_DOUBLE) - 0.0053072366770978985) / 0.9683216012472358 AS scaler_24, (CAST("ADS_imp_1_OUT".impter_25 AS BINARY_DOUBLE) - -0.014763237855175493) / 0.9851551177343002 AS scaler_25, (CAST("ADS_imp_1_OUT".impter_26 AS BINARY_DOUBLE) - -0.023154438774995047) / 1.0034590713202722 AS scaler_26, (CAST("ADS_imp_1_OUT".impter_27 AS BINARY_DOUBLE) - -0.12239207011675045) / 5.777017450648698 AS scaler_27, (CAST("ADS_imp_1_OUT".impter_28 AS BINARY_DOUBLE) - 0.020535611934405496) / 0.9878048079305166 AS scaler_28, (CAST("ADS_imp_1_OUT".impter_29 AS BINARY_DOUBLE) - 0.006055843023249926) / 0.9973455621257931 AS scaler_29, (CAST("ADS_imp_1_OUT".impter_30 AS BINARY_DOUBLE) - -0.02283750315483421) / 0.9862507261223278 AS scaler_30, (CAST("ADS_imp_1_OUT".impter_31 AS BINARY_DOUBLE) - 0.023985609638350506) / 0.9937627841184585 AS scaler_31, (CAST("ADS_imp_1_OUT".impter_32 AS BINARY_DOUBLE) - 0.008119293552803313) / 0.9954522177860405 AS scaler_32, (CAST("ADS_imp_1_OUT".impter_33 AS BINARY_DOUBLE) - 0.027089596569202946) / 1.0239371071038705 AS scaler_33, (CAST("ADS_imp_1_OUT".impter_34 AS BINARY_DOUBLE) - -0.06055225058050742) / 1.0104633173004076 AS scaler_34, (CAST("ADS_imp_1_OUT".impter_35 AS BINARY_DOUBLE) - -0.024424868791331697) / 0.9733566902991094 AS scaler_35, (CAST("ADS_imp_1_OUT".impter_36 AS BINARY_DOUBLE) - 0.012336464422653204) / 0.9893886329833442 AS scaler_36, (CAST("ADS_imp_1_OUT".impter_37 AS BINARY_DOUBLE) - -0.03733185453369615) / 0.9891003655260362 AS scaler_37, (CAST("ADS_imp_1_OUT".impter_38 AS BINARY_DOUBLE) - -0.01163301006213858) / 0.9677509701652444 AS scaler_38, (CAST("ADS_imp_1_OUT".impter_39 AS BINARY_DOUBLE) - -0.05102972508859019) / 1.0446002285287346 AS scaler_39, (CAST("ADS_imp_1_OUT".impter_40 AS BINARY_DOUBLE) - 0.0724619853931901) / 0.9433887406048981 AS scaler_40, (CAST("ADS_imp_1_OUT".impter_41 AS BINARY_DOUBLE) - 0.02873322955169374) / 0.9997034238642181 AS scaler_41, (CAST("ADS_imp_1_OUT".impter_42 AS BINARY_DOUBLE) - -0.0468030521847972) / 0.9799565417954935 AS scaler_42, (CAST("ADS_imp_1_OUT".impter_43 AS BINARY_DOUBLE) - 0.024222315050048744) / 0.977961503101405 AS scaler_43, (CAST("ADS_imp_1_OUT".impter_44 AS BINARY_DOUBLE) - 0.01149556673107005) / 5.54835190391683 AS scaler_44, (CAST("ADS_imp_1_OUT".impter_45 AS BINARY_DOUBLE) - -0.46581882386282575) / 5.894617213165279 AS scaler_45, (CAST("ADS_imp_1_OUT".impter_46 AS BINARY_DOUBLE) - -0.0013382860297555803) / 1.0219544648922987 AS scaler_46, (CAST("ADS_imp_1_OUT".impter_47 AS BINARY_DOUBLE) - -0.008602411981840778) / 0.931663415098126 AS scaler_47, (CAST("ADS_imp_1_OUT".impter_48 AS BINARY_DOUBLE) - -0.009965212302201201) / 1.0168312431071238 AS scaler_48, (CAST("ADS_imp_1_OUT".impter_49 AS BINARY_DOUBLE) - -0.03978485158208147) / 0.9423447496201277 AS scaler_49, (CAST("ADS_imp_1_OUT".impter_50 AS BINARY_DOUBLE) - 0.007027179196660041) / 1.0312559989326386 AS scaler_50, (CAST("ADS_imp_1_OUT".impter_51 AS BINARY_DOUBLE) - -0.01982980508470468) / 0.9800172715083906 AS scaler_51, (CAST("ADS_imp_1_OUT".impter_52 AS BINARY_DOUBLE) - -0.04505595017989205) / 1.006703914399541 AS scaler_52, (CAST("ADS_imp_1_OUT".impter_53 AS BINARY_DOUBLE) - -0.045447760217128444) / 1.0007330092630027 AS scaler_53, (CAST("ADS_imp_1_OUT".impter_54 AS BINARY_DOUBLE) - 0.037832771618739616) / 1.0202020707470842 AS scaler_54, (CAST("ADS_imp_1_OUT".impter_55 AS BINARY_DOUBLE) - -0.061624599074911364) / 0.9839597841021345 AS scaler_55, (CAST("ADS_imp_1_OUT".impter_56 AS BINARY_DOUBLE) - 0.07625111583055796) / 1.0202381673398924 AS scaler_56, (CAST("ADS_imp_1_OUT".impter_57 AS BINARY_DOUBLE) - -0.027271537635613834) / 0.9901971057770143 AS scaler_57, (CAST("ADS_imp_1_OUT".impter_58 AS BINARY_DOUBLE) - 0.08658875419996898) / 1.0341490471974248 AS scaler_58, (CAST("ADS_imp_1_OUT".impter_59 AS BINARY_DOUBLE) - 0.0999871472844467) / 1.0320762955753215 AS scaler_59, (CAST("ADS_imp_1_OUT".impter_60 AS BINARY_DOUBLE) - -0.007447998234187981) / 0.98028942569617 AS scaler_60, (CAST("ADS_imp_1_OUT".impter_61 AS BINARY_DOUBLE) - 0.0005691476004520007) / 0.962499434030872 AS scaler_61, (CAST("ADS_imp_1_OUT".impter_62 AS BINARY_DOUBLE) - 0.007052612183486737) / 0.9952316581074087 AS scaler_62, (CAST("ADS_imp_1_OUT".impter_63 AS BINARY_DOUBLE) - -0.07298857610906591) / 1.0117239365465656 AS scaler_63, (CAST("ADS_imp_1_OUT".impter_64 AS BINARY_DOUBLE) - 0.007257283737326912) / 0.9614049921549974 AS scaler_64, (CAST("ADS_imp_1_OUT".impter_65 AS BINARY_DOUBLE) - -0.01499281527733551) / 0.9856230299709878 AS scaler_65, (CAST("ADS_imp_1_OUT".impter_66 AS BINARY_DOUBLE) - 0.1504932184478646) / 6.139566226432819 AS scaler_66, (CAST("ADS_imp_1_OUT".impter_67 AS BINARY_DOUBLE) - -0.34139964395628075) / 5.589924447035164 AS scaler_67, (CAST("ADS_imp_1_OUT".impter_68 AS BINARY_DOUBLE) - 0.044769898693156215) / 0.9858338717221913 AS scaler_68, (CAST("ADS_imp_1_OUT".impter_69 AS BINARY_DOUBLE) - -0.06740805909718733) / 1.0160492930707818 AS scaler_69, (CAST("ADS_imp_1_OUT".impter_70 AS BINARY_DOUBLE) - 0.011827724290967036) / 0.9920309378976953 AS scaler_70, (CAST("ADS_imp_1_OUT".impter_71 AS BINARY_DOUBLE) - 0.04511965476174756) / 1.0134689242858836 AS scaler_71, (CAST("ADS_imp_1_OUT".impter_72 AS BINARY_DOUBLE) - -0.005725960546688403) / 0.9742042745897078 AS scaler_72, (CAST("ADS_imp_1_OUT".impter_73 AS BINARY_DOUBLE) - -0.45906874360950467) / 6.052269381209856 AS scaler_73, (CAST("ADS_imp_1_OUT".impter_74 AS BINARY_DOUBLE) - -0.4029233461203958) / 5.771992694521305 AS scaler_74, (CAST("ADS_imp_1_OUT".impter_75 AS BINARY_DOUBLE) - -0.01983348240532154) / 0.9849514335826905 AS scaler_75, (CAST("ADS_imp_1_OUT".impter_76 AS BINARY_DOUBLE) - -0.03762876790351029) / 0.9982596731767271 AS scaler_76, (CAST("ADS_imp_1_OUT".impter_77 AS BINARY_DOUBLE) - 0.0014482025177064296) / 0.9781075851188674 AS scaler_77, (CAST("ADS_imp_1_OUT".impter_78 AS BINARY_DOUBLE) - -0.009126373209438378) / 0.9875838602657921 AS scaler_78, (CAST("ADS_imp_1_OUT".impter_79 AS BINARY_DOUBLE) - -0.004847879746676399) / 1.0007261707872959 AS scaler_79, (CAST("ADS_imp_1_OUT".impter_80 AS BINARY_DOUBLE) - 0.0003242960082649739) / 1.0081288330481553 AS scaler_80, (CAST("ADS_imp_1_OUT".impter_81 AS BINARY_DOUBLE) - -0.030222670037465243) / 1.0126353893899334 AS scaler_81, (CAST("ADS_imp_1_OUT".impter_82 AS BINARY_DOUBLE) - 0.00597438906398475) / 0.997574121799789 AS scaler_82, (CAST("ADS_imp_1_OUT".impter_83 AS BINARY_DOUBLE) - 0.006442151047769896) / 0.9692977412695478 AS scaler_83, (CAST("ADS_imp_1_OUT".impter_84 AS BINARY_DOUBLE) - 0.06674583942705845) / 0.9650616611467926 AS scaler_84, (CAST("ADS_imp_1_OUT".impter_85 AS BINARY_DOUBLE) - 0.07788312942179253) / 1.0502476441331448 AS scaler_85, (CAST("ADS_imp_1_OUT".impter_86 AS BINARY_DOUBLE) - 0.04734384734963352) / 0.9922221019778982 AS scaler_86, (CAST("ADS_imp_1_OUT".impter_87 AS BINARY_DOUBLE) - -0.008706507745982245) / 1.0281463379538616 AS scaler_87, (CAST("ADS_imp_1_OUT".impter_88 AS BINARY_DOUBLE) - 0.048010462132819065) / 1.0219516364531134 AS scaler_88, (CAST("ADS_imp_1_OUT".impter_89 AS BINARY_DOUBLE) - -0.015721233574226466) / 0.986060770131844 AS scaler_89, (CAST("ADS_imp_1_OUT".impter_90 AS BINARY_DOUBLE) - 0.029859590983661574) / 0.9917320004086767 AS scaler_90, (CAST("ADS_imp_1_OUT".impter_91 AS BINARY_DOUBLE) - 0.05432072236762381) / 1.0137096750823185 AS scaler_91, (CAST("ADS_imp_1_OUT".impter_92 AS BINARY_DOUBLE) - -0.01029209788232909) / 1.000757192176457 AS scaler_92, (CAST("ADS_imp_1_OUT".impter_93 AS BINARY_DOUBLE) - -0.057667586642934685) / 5.94408516351358 AS scaler_93, (CAST("ADS_imp_1_OUT".impter_94 AS BINARY_DOUBLE) - 0.010705496096094396) / 1.0092360847471284 AS scaler_94, (CAST("ADS_imp_1_OUT".impter_95 AS BINARY_DOUBLE) - 0.07155562158168) / 0.983479044147119 AS scaler_95, (CAST("ADS_imp_1_OUT".impter_96 AS BINARY_DOUBLE) - 0.012567881232469623) / 1.0041791065815686 AS scaler_96, (CAST("ADS_imp_1_OUT".impter_97 AS BINARY_DOUBLE) - 0.013515801306018876) / 1.0171521249734952 AS scaler_97, (CAST("ADS_imp_1_OUT".impter_98 AS BINARY_DOUBLE) - -0.03144133874056725) / 0.9643293110743213 AS scaler_98, (CAST("ADS_imp_1_OUT".impter_99 AS BINARY_DOUBLE) - 0.04347042885615023) / 1.0350471688640486 AS scaler_99, (CAST("ADS_imp_1_OUT".impter_100 AS BINARY_DOUBLE) - 0.06271561958724896) / 0.9582071956389678 AS scaler_100, (CAST("ADS_imp_1_OUT".impter_101 AS BINARY_DOUBLE) - 0.05756441101485498) / 1.016873068211695 AS scaler_101, (CAST("ADS_imp_1_OUT".impter_102 AS BINARY_DOUBLE) - 0.08328088835981105) / 5.923497571865014 AS scaler_102, (CAST("ADS_imp_1_OUT".impter_103 AS BINARY_DOUBLE) - 0.027342821102590696) / 1.009759865874761 AS scaler_103, (CAST("ADS_imp_1_OUT".impter_104 AS BINARY_DOUBLE) - -0.45823161485829694) / 5.947446910796636 AS scaler_104, (CAST("ADS_imp_1_OUT".impter_105 AS BINARY_DOUBLE) - -0.0574871655764397) / 0.9558665112492322 AS scaler_105, (CAST("ADS_imp_1_OUT".impter_106 AS BINARY_DOUBLE) - -0.04439086595851878) / 1.0257189382967924 AS scaler_106, (CAST("ADS_imp_1_OUT".impter_107 AS BINARY_DOUBLE) - 0.02144592469206838) / 0.9895401881723541 AS scaler_107, (CAST("ADS_imp_1_OUT".impter_108 AS BINARY_DOUBLE) - 0.11209373860993643) / 5.749503930446186 AS scaler_108, (CAST("ADS_imp_1_OUT".impter_109 AS BINARY_DOUBLE) - 0.020021880427962078) / 1.003919278192992 AS scaler_109, (CAST("ADS_imp_1_OUT".impter_110 AS BINARY_DOUBLE) - -0.009743329217515511) / 0.9919583243676908 AS scaler_110, (CAST("ADS_imp_1_OUT".impter_111 AS BINARY_DOUBLE) - 0.4786622270719938) / 5.58775739405435 AS scaler_111, (CAST("ADS_imp_1_OUT".impter_112 AS BINARY_DOUBLE) - 0.02944493462807616) / 1.0248871232604297 AS scaler_112, (CAST("ADS_imp_1_OUT".impter_113 AS BINARY_DOUBLE) - -0.00310096676730144) / 1.0254001437004343 AS scaler_113, (CAST("ADS_imp_1_OUT".impter_114 AS BINARY_DOUBLE) - 0.0231371409575344) / 1.0664587771246052 AS scaler_114, (CAST("ADS_imp_1_OUT".impter_115 AS BINARY_DOUBLE) - -0.04815066967587055) / 1.018510444629956 AS scaler_115, (CAST("ADS_imp_1_OUT".impter_116 AS BINARY_DOUBLE) - 0.025111413866439537) / 1.0045413648024208 AS scaler_116, (CAST("ADS_imp_1_OUT".impter_117 AS BINARY_DOUBLE) - 0.0021133311116955213) / 0.9757575746423808 AS scaler_117, (CAST("ADS_imp_1_OUT".impter_118 AS BINARY_DOUBLE) - 0.034947174142157644) / 0.9975889189566856 AS scaler_118, (CAST("ADS_imp_1_OUT".impter_119 AS BINARY_DOUBLE) - -0.05606347652620213) / 0.9928987912016847 AS scaler_119, (CAST("ADS_imp_1_OUT".impter_120 AS BINARY_DOUBLE) - -0.023812528369921485) / 1.0013009070011438 AS scaler_120, (CAST("ADS_imp_1_OUT".impter_121 AS BINARY_DOUBLE) - -0.042073637845818246) / 0.9912144880843266 AS scaler_121, (CAST("ADS_imp_1_OUT".impter_122 AS BINARY_DOUBLE) - 0.007882510288965947) / 1.0172369989511076 AS scaler_122, (CAST("ADS_imp_1_OUT".impter_123 AS BINARY_DOUBLE) - -0.02733468989970973) / 1.01392267981462 AS scaler_123, (CAST("ADS_imp_1_OUT".impter_124 AS BINARY_DOUBLE) - -0.6701750904403835) / 6.145313938495119 AS scaler_124, (CAST("ADS_imp_1_OUT".impter_125 AS BINARY_DOUBLE) - -0.04044317104909807) / 0.9609996023909663 AS scaler_125, (CAST("ADS_imp_1_OUT".impter_126 AS BINARY_DOUBLE) - -0.00837516585592746) / 0.9754352444783934 AS scaler_126, (CAST("ADS_imp_1_OUT".impter_127 AS BINARY_DOUBLE) - -0.005344367193538407) / 1.0148601448564643 AS scaler_127, (CAST("ADS_imp_1_OUT".impter_128 AS BINARY_DOUBLE) - -0.009191225939401346) / 0.982128874729729 AS scaler_128, (CAST("ADS_imp_1_OUT".impter_129 AS BINARY_DOUBLE) - -0.004068573508204202) / 0.9971242820519521 AS scaler_129, (CAST("ADS_imp_1_OUT".impter_130 AS BINARY_DOUBLE) - -0.030267877751773992) / 0.96864155853453 AS scaler_130, (CAST("ADS_imp_1_OUT".impter_131 AS BINARY_DOUBLE) - 0.17410306271063888) / 5.789756786227785 AS scaler_131, (CAST("ADS_imp_1_OUT".impter_132 AS BINARY_DOUBLE) - -0.012642941998284607) / 0.9922148064395657 AS scaler_132, (CAST("ADS_imp_1_OUT".impter_133 AS BINARY_DOUBLE) - 0.01749739797543971) / 0.9787286398774294 AS scaler_133, (CAST("ADS_imp_1_OUT".impter_134 AS BINARY_DOUBLE) - 0.5426783595611434) / 5.907808207908198 AS scaler_134, (CAST("ADS_imp_1_OUT".impter_135 AS BINARY_DOUBLE) - -0.5946970819130108) / 6.0784028515757305 AS scaler_135, (CAST("ADS_imp_1_OUT".impter_136 AS BINARY_DOUBLE) - -0.02934504234656094) / 1.0091339941012132 AS scaler_136, (CAST("ADS_imp_1_OUT".impter_137 AS BINARY_DOUBLE) - 0.06552557763413538) / 6.095951331803264 AS scaler_137, (CAST("ADS_imp_1_OUT".impter_138 AS BINARY_DOUBLE) - -0.05569025110062092) / 0.9610638640494519 AS scaler_138, (CAST("ADS_imp_1_OUT".impter_139 AS BINARY_DOUBLE) - 0.023191171882599493) / 1.0128603239940146 AS scaler_139, (CAST("ADS_imp_1_OUT".impter_140 AS BINARY_DOUBLE) - -0.05295059390165566) / 0.9704481251340982 AS scaler_140, (CAST("ADS_imp_1_OUT".impter_141 AS BINARY_DOUBLE) - 0.033509246297397904) / 1.0152086117159598 AS scaler_141, (CAST("ADS_imp_1_OUT".impter_142 AS BINARY_DOUBLE) - -0.04155471151345872) / 1.0275865673837457 AS scaler_142, (CAST("ADS_imp_1_OUT".impter_143 AS BINARY_DOUBLE) - -0.6634336506604639) / 5.8591587401192315 AS scaler_143, (CAST("ADS_imp_1_OUT".impter_144 AS BINARY_DOUBLE) - -0.5573588681497673) / 5.822804930738725 AS scaler_144, (CAST("ADS_imp_1_OUT".impter_145 AS BINARY_DOUBLE) - 0.0441240830479543) / 0.9942937489948139 AS scaler_145, (CAST("ADS_imp_1_OUT".impter_146 AS BINARY_DOUBLE) - -0.0032026430582909036) / 1.0088252648820826 AS scaler_146, (CAST("ADS_imp_1_OUT".impter_147 AS BINARY_DOUBLE) - 0.0547961032530105) / 1.0250292567069976 AS scaler_147, (CAST("ADS_imp_1_OUT".impter_148 AS BINARY_DOUBLE) - -0.0570190089317311) / 1.0233221648265598 AS scaler_148, (CAST("ADS_imp_1_OUT".impter_149 AS BINARY_DOUBLE) - -0.05068123758307288) / 1.0059501057644102 AS scaler_149, (CAST("ADS_imp_1_OUT".impter_150 AS BINARY_DOUBLE) - 0.04963772213165472) / 5.707884171857318 AS scaler_150, (CAST("ADS_imp_1_OUT".impter_151 AS BINARY_DOUBLE) - -0.0053902063922270736) / 0.9733282006907008 AS scaler_151, (CAST("ADS_imp_1_OUT".impter_152 AS BINARY_DOUBLE) - -0.06888968948833549) / 1.0357034285112359 AS scaler_152, (CAST("ADS_imp_1_OUT".impter_153 AS BINARY_DOUBLE) - -0.016131263076271454) / 1.0352933940220925 AS scaler_153, (CAST("ADS_imp_1_OUT".impter_154 AS BINARY_DOUBLE) - -0.3673160108448531) / 5.831014219549596 AS scaler_154, (CAST("ADS_imp_1_OUT".impter_155 AS BINARY_DOUBLE) - 0.055182003778661885) / 5.684243359483168 AS scaler_155, (CAST("ADS_imp_1_OUT".impter_156 AS BINARY_DOUBLE) - 0.03906491494486876) / 0.9983722576273872 AS scaler_156, (CAST("ADS_imp_1_OUT".impter_157 AS BINARY_DOUBLE) - -0.018774913038090556) / 0.981565987462681 AS scaler_157, (CAST("ADS_imp_1_OUT".impter_158 AS BINARY_DOUBLE) - 0.04167563251378332) / 5.5897226143974885 AS scaler_158, (CAST("ADS_imp_1_OUT".impter_159 AS BINARY_DOUBLE) - -0.014464200228668327) / 1.0647700745180197 AS scaler_159, (CAST("ADS_imp_1_OUT".impter_160 AS BINARY_DOUBLE) - 0.001498972159727102) / 1.0346863623514742 AS scaler_160, (CAST("ADS_imp_1_OUT".impter_161 AS BINARY_DOUBLE) - -0.018229772297973595) / 1.0422072170743273 AS scaler_161, (CAST("ADS_imp_1_OUT".impter_162 AS BINARY_DOUBLE) - -0.044371023327894055) / 1.0176258203618869 AS scaler_162, (CAST("ADS_imp_1_OUT".impter_163 AS BINARY_DOUBLE) - 0.003260044680277718) / 1.0389488041486905 AS scaler_163, (CAST("ADS_imp_1_OUT".impter_164 AS BINARY_DOUBLE) - 0.04743398414161841) / 0.9782204833572162 AS scaler_164, (CAST("ADS_imp_1_OUT".impter_165 AS BINARY_DOUBLE) - 0.02952107505742563) / 1.0089690347262386 AS scaler_165, (CAST("ADS_imp_1_OUT".impter_166 AS BINARY_DOUBLE) - 0.039029822514854) / 1.0121176151207434 AS scaler_166, (CAST("ADS_imp_1_OUT".impter_167 AS BINARY_DOUBLE) - 0.33233879962749624) / 5.744346296798411 AS scaler_167, (CAST("ADS_imp_1_OUT".impter_168 AS BINARY_DOUBLE) - -0.030838711525630415) / 0.9705290180206547 AS scaler_168, (CAST("ADS_imp_1_OUT".impter_169 AS BINARY_DOUBLE) - 0.053457495179036106) / 1.0248755705105466 AS scaler_169, (CAST("ADS_imp_1_OUT".impter_170 AS BINARY_DOUBLE) - 0.06334783178164666) / 0.9775079956110175 AS scaler_170, (CAST("ADS_imp_1_OUT".impter_171 AS BINARY_DOUBLE) - -0.015185631962267647) / 0.9717858688863088 AS scaler_171, (CAST("ADS_imp_1_OUT".impter_172 AS BINARY_DOUBLE) - -0.0373186897788836) / 0.999257264463164 AS scaler_172, (CAST("ADS_imp_1_OUT".impter_173 AS BINARY_DOUBLE) - 0.058926161621590305) / 0.9602458384408017 AS scaler_173, (CAST("ADS_imp_1_OUT".impter_174 AS BINARY_DOUBLE) - 9.69895410212665e-05) / 1.0063812902851987 AS scaler_174, (CAST("ADS_imp_1_OUT".impter_175 AS BINARY_DOUBLE) - 0.023780298476686824) / 1.0186861099526499 AS scaler_175, (CAST("ADS_imp_1_OUT".impter_176 AS BINARY_DOUBLE) - 0.021640308005590803) / 0.967390860423614 AS scaler_176, (CAST("ADS_imp_1_OUT".impter_177 AS BINARY_DOUBLE) - 0.02609411025064558) / 1.019952052097139 AS scaler_177, (CAST("ADS_imp_1_OUT".impter_178 AS BINARY_DOUBLE) - 0.053659812775327234) / 1.0317585905842375 AS scaler_178, (CAST("ADS_imp_1_OUT".impter_179 AS BINARY_DOUBLE) - 0.02312075671447861) / 0.9624262389790543 AS scaler_179, (CAST("ADS_imp_1_OUT".impter_180 AS BINARY_DOUBLE) - 0.08189652549389312) / 1.008828045220763 AS scaler_180, (CAST("ADS_imp_1_OUT".impter_181 AS BINARY_DOUBLE) - -0.28662694866746835) / 6.172920864518475 AS scaler_181, (CAST("ADS_imp_1_OUT".impter_182 AS BINARY_DOUBLE) - -0.06816976745830143) / 1.006696859076202 AS scaler_182, (CAST("ADS_imp_1_OUT".impter_183 AS BINARY_DOUBLE) - -0.0288394136395886) / 1.0123612493717167 AS scaler_183, (CAST("ADS_imp_1_OUT".impter_184 AS BINARY_DOUBLE) - 0.030475929720363698) / 0.971249477659825 AS scaler_184, (CAST("ADS_imp_1_OUT".impter_185 AS BINARY_DOUBLE) - -0.9321092506061046) / 5.959856975617778 AS scaler_185, (CAST("ADS_imp_1_OUT".impter_186 AS BINARY_DOUBLE) - -0.005783297854668443) / 0.9729868220424777 AS scaler_186, (CAST("ADS_imp_1_OUT".impter_187 AS BINARY_DOUBLE) - -0.6842779545480162) / 5.6462061209635666 AS scaler_187, (CAST("ADS_imp_1_OUT".impter_188 AS BINARY_DOUBLE) - -0.035868681753580677) / 0.9515600028160798 AS scaler_188, (CAST("ADS_imp_1_OUT".impter_189 AS BINARY_DOUBLE) - 0.37446820466554537) / 6.045200162892497 AS scaler_189, (CAST("ADS_imp_1_OUT".impter_190 AS BINARY_DOUBLE) - 0.03710250301413846) / 1.0283479885398354 AS scaler_190, (CAST("ADS_imp_1_OUT".impter_191 AS BINARY_DOUBLE) - -0.1405646996029281) / 6.021540164862222 AS scaler_191, (CAST("ADS_imp_1_OUT".impter_192 AS BINARY_DOUBLE) - -0.008242263620478222) / 1.016675618095213 AS scaler_192, (CAST("ADS_imp_1_OUT".impter_193 AS BINARY_DOUBLE) - 0.23469193009627595) / 5.601102541825846 AS scaler_193, (CAST("ADS_imp_1_OUT".impter_194 AS BINARY_DOUBLE) - -0.04853360559010945) / 0.9850160080809853 AS scaler_194, (CAST("ADS_imp_1_OUT".impter_195 AS BINARY_DOUBLE) - -0.29107017412914993) / 5.586860950904685 AS scaler_195, (CAST("ADS_imp_1_OUT".impter_196 AS BINARY_DOUBLE) - 0.06554945522577102) / 0.9914300814275504 AS scaler_196, (CAST("ADS_imp_1_OUT".impter_197 AS BINARY_DOUBLE) - 0.03415746968907192) / 0.9939759564479547 AS scaler_197, (CAST("ADS_imp_1_OUT".impter_198 AS BINARY_DOUBLE) - -1.0112490880861227) / 5.782797574194705 AS scaler_198, (CAST("ADS_imp_1_OUT".impter_199 AS BINARY_DOUBLE) - 0.4496849630728245) / 5.837154258847168 AS scaler_199, (CAST("ADS_imp_1_OUT".impter_200 AS BINARY_DOUBLE) - 0.032026535978956015) / 0.9803145829814145 AS scaler_200, (CAST("ADS_imp_1_OUT".impter_201 AS BINARY_DOUBLE) - 0.000929134812353008) / 0.9966914430821684 AS scaler_201, (CAST("ADS_imp_1_OUT".impter_202 AS BINARY_DOUBLE) - 0.013717912018418882) / 1.0042933647333387 AS scaler_202, (CAST("ADS_imp_1_OUT".impter_203 AS BINARY_DOUBLE) - -0.025517677160104602) / 1.023007838139583 AS scaler_203, (CAST("ADS_imp_1_OUT".impter_204 AS BINARY_DOUBLE) - 0.008684033616587546) / 1.0055749498115065 AS scaler_204, (CAST("ADS_imp_1_OUT".impter_205 AS BINARY_DOUBLE) - 0.013537249806385316) / 0.9615196489451362 AS scaler_205, (CAST("ADS_imp_1_OUT".impter_206 AS BINARY_DOUBLE) - -0.0230268828473152) / 0.9775483835928382 AS scaler_206, (CAST("ADS_imp_1_OUT".impter_207 AS BINARY_DOUBLE) - 0.03589117923846176) / 0.9863064503789496 AS scaler_207, (CAST("ADS_imp_1_OUT".impter_208 AS BINARY_DOUBLE) - -0.011430934569701108) / 1.0568818033144645 AS scaler_208, (CAST("ADS_imp_1_OUT".impter_209 AS BINARY_DOUBLE) - -0.03231136300980085) / 1.0373910812235252 AS scaler_209, (CAST("ADS_imp_1_OUT".impter_210 AS BINARY_DOUBLE) - -0.03420275223278265) / 5.894903068982469 AS scaler_210, (CAST("ADS_imp_1_OUT".impter_211 AS BINARY_DOUBLE) - 0.23377425435020424) / 5.7466656009400365 AS scaler_211, (CAST("ADS_imp_1_OUT".impter_212 AS BINARY_DOUBLE) - 0.06340248702486702) / 5.640777044308502 AS scaler_212, (CAST("ADS_imp_1_OUT".impter_213 AS BINARY_DOUBLE) - -0.031763897397096605) / 1.0147599704147603 AS scaler_213, (CAST("ADS_imp_1_OUT".impter_214 AS BINARY_DOUBLE) - 0.004392749210234481) / 0.9750450927968857 AS scaler_214, (CAST("ADS_imp_1_OUT".impter_215 AS BINARY_DOUBLE) - -0.007220451377103457) / 0.998695256241697 AS scaler_215, (CAST("ADS_imp_1_OUT".impter_216 AS BINARY_DOUBLE) - 0.001039454428951527) / 0.9929801222993039 AS scaler_216, (CAST("ADS_imp_1_OUT".impter_217 AS BINARY_DOUBLE) - 0.255416687811933) / 5.606442450480165 AS scaler_217, (CAST("ADS_imp_1_OUT".impter_218 AS BINARY_DOUBLE) - -0.1279428512452052) / 6.183297227558894 AS scaler_218, (CAST("ADS_imp_1_OUT".impter_219 AS BINARY_DOUBLE) - 0.11623077388873257) / 5.860568084583105 AS scaler_219, (CAST("ADS_imp_1_OUT".impter_220 AS BINARY_DOUBLE) - 0.04461217703505275) / 5.83606925311369 AS scaler_220, (CAST("ADS_imp_1_OUT".impter_221 AS BINARY_DOUBLE) - -0.03146418763016053) / 1.009842922203672 AS scaler_221, (CAST("ADS_imp_1_OUT".impter_222 AS BINARY_DOUBLE) - 0.03437191123539599) / 0.9618546894792044 AS scaler_222, (CAST("ADS_imp_1_OUT".impter_223 AS BINARY_DOUBLE) - 0.02811765018111002) / 1.0234543094708461 AS scaler_223, (CAST("ADS_imp_1_OUT".impter_224 AS BINARY_DOUBLE) - -0.008115500982846469) / 0.9582255125846887 AS scaler_224, (CAST("ADS_imp_1_OUT".impter_225 AS BINARY_DOUBLE) - 0.0346610159959258) / 0.9382932228802465 AS scaler_225, (CAST("ADS_imp_1_OUT".impter_226 AS BINARY_DOUBLE) - 0.04873411944524845) / 0.9681071054529649 AS scaler_226, (CAST("ADS_imp_1_OUT".impter_227 AS BINARY_DOUBLE) - 4.894869923178419e-05) / 0.9711882273762723 AS scaler_227, (CAST("ADS_imp_1_OUT".impter_228 AS BINARY_DOUBLE) - 0.018209676154939517) / 0.9795446917047469 AS scaler_228, (CAST("ADS_imp_1_OUT".impter_229 AS BINARY_DOUBLE) - 0.026610576357411958) / 1.020416620612885 AS scaler_229, (CAST("ADS_imp_1_OUT".impter_230 AS BINARY_DOUBLE) - -0.18927414463099612) / 6.1290712879929945 AS scaler_230, (CAST("ADS_imp_1_OUT".impter_231 AS BINARY_DOUBLE) - 0.7485324016005227) / 5.734450284809372 AS scaler_231, (CAST("ADS_imp_1_OUT".impter_232 AS BINARY_DOUBLE) - 0.0487697431569858) / 1.0362121875167394 AS scaler_232, (CAST("ADS_imp_1_OUT".impter_233 AS BINARY_DOUBLE) - -0.05674203944761021) / 1.0094733416405102 AS scaler_233, (CAST("ADS_imp_1_OUT".impter_234 AS BINARY_DOUBLE) - -0.016772355037112788) / 0.9819007689885811 AS scaler_234, (CAST("ADS_imp_1_OUT".impter_235 AS BINARY_DOUBLE) - 0.021959192758732798) / 0.987918747045171 AS scaler_235, (CAST("ADS_imp_1_OUT".impter_236 AS BINARY_DOUBLE) - 0.009017510252386856) / 0.9874581776631882 AS scaler_236, (CAST("ADS_imp_1_OUT".impter_237 AS BINARY_DOUBLE) - 0.01719604397851632) / 0.992097179565061 AS scaler_237, (CAST("ADS_imp_1_OUT".impter_238 AS BINARY_DOUBLE) - 0.04752740880676183) / 0.9503833389031566 AS scaler_238, (CAST("ADS_imp_1_OUT".impter_239 AS BINARY_DOUBLE) - -0.6655794242164356) / 5.840051151687372 AS scaler_239, (CAST("ADS_imp_1_OUT".impter_240 AS BINARY_DOUBLE) - 0.040740002170661385) / 0.9668784340640053 AS scaler_240, (CAST("ADS_imp_1_OUT".impter_241 AS BINARY_DOUBLE) - -0.06790575667026853) / 0.9921903875597816 AS scaler_241, (CAST("ADS_imp_1_OUT".impter_242 AS BINARY_DOUBLE) - 0.00892920073818756) / 0.9953681335039088 AS scaler_242, (CAST("ADS_imp_1_OUT".impter_243 AS BINARY_DOUBLE) - -0.05642200650387437) / 1.080975513720933 AS scaler_243, (CAST("ADS_imp_1_OUT".impter_244 AS BINARY_DOUBLE) - 0.020080371219515784) / 1.0268320872033798 AS scaler_244, (CAST("ADS_imp_1_OUT".impter_245 AS BINARY_DOUBLE) - -0.08127236320512923) / 5.713688044684489 AS scaler_245, (CAST("ADS_imp_1_OUT".impter_246 AS BINARY_DOUBLE) - 0.013048668554363934) / 0.9840522233556672 AS scaler_246, (CAST("ADS_imp_1_OUT".impter_247 AS BINARY_DOUBLE) - 0.018841776335809746) / 0.9955454249138418 AS scaler_247, (CAST("ADS_imp_1_OUT".impter_248 AS BINARY_DOUBLE) - -0.005693217051300183) / 0.9944510267281536 AS scaler_248, (CAST("ADS_imp_1_OUT".impter_249 AS BINARY_DOUBLE) - -0.20394320931579465) / 5.772507892550791 AS scaler_249, (CAST("ADS_imp_1_OUT".impter_250 AS BINARY_DOUBLE) - -0.022446042990387664) / 1.0021361970741969 AS scaler_250, (CAST("ADS_imp_1_OUT".impter_251 AS BINARY_DOUBLE) - -4.076861252102798) / 34.2608991859537 AS scaler_251, (CAST("ADS_imp_1_OUT".impter_252 AS BINARY_DOUBLE) - -0.008817990550602733) / 1.0009581126868368 AS scaler_252, (CAST("ADS_imp_1_OUT".impter_253 AS BINARY_DOUBLE) - 0.07233780023230166) / 1.0333507786448697 AS scaler_253, (CAST("ADS_imp_1_OUT".impter_254 AS BINARY_DOUBLE) - 0.1138593990290942) / 5.886028350311137 AS scaler_254, (CAST("ADS_imp_1_OUT".impter_255 AS BINARY_DOUBLE) - -0.014123411384636636) / 0.9733196343517111 AS scaler_255, (CAST("ADS_imp_1_OUT".impter_256 AS BINARY_DOUBLE) - 0.014692128598930085) / 0.9620465679496903 AS scaler_256, (CAST("ADS_imp_1_OUT".impter_257 AS BINARY_DOUBLE) - 0.04595744723507997) / 0.9944842107666862 AS scaler_257, (CAST("ADS_imp_1_OUT".impter_258 AS BINARY_DOUBLE) - 0.015847884802623332) / 0.9910298990373428 AS scaler_258, (CAST("ADS_imp_1_OUT".impter_259 AS BINARY_DOUBLE) - 0.029322592909880204) / 1.0351113561261698 AS scaler_259, (CAST("ADS_imp_1_OUT".impter_260 AS BINARY_DOUBLE) - -0.03535258574843743) / 0.9316972257033983 AS scaler_260, (CAST("ADS_imp_1_OUT".impter_261 AS BINARY_DOUBLE) - -0.00650490190973122) / 0.9882615820765778 AS scaler_261, (CAST("ADS_imp_1_OUT".impter_262 AS BINARY_DOUBLE) - -0.03690470759934596) / 0.9949501210533109 AS scaler_262, (CAST("ADS_imp_1_OUT".impter_263 AS BINARY_DOUBLE) - -0.003181913166654664) / 0.9608914472397853 AS scaler_263, (CAST("ADS_imp_1_OUT".impter_264 AS BINARY_DOUBLE) - -0.0018035463835158838) / 0.9594115161166091 AS scaler_264, (CAST("ADS_imp_1_OUT".impter_265 AS BINARY_DOUBLE) - -0.004968061346310874) / 0.9841069876999591 AS scaler_265, (CAST("ADS_imp_1_OUT".impter_266 AS BINARY_DOUBLE) - -0.45419983150371857) / 5.83691454179742 AS scaler_266, (CAST("ADS_imp_1_OUT".impter_267 AS BINARY_DOUBLE) - 0.033791499419119894) / 0.9623098813915759 AS scaler_267, (CAST("ADS_imp_1_OUT".impter_268 AS BINARY_DOUBLE) - -0.40319293830766156) / 6.005116172706997 AS scaler_268, (CAST("ADS_imp_1_OUT".impter_269 AS BINARY_DOUBLE) - 0.6187460938207908) / 5.740858978880372 AS scaler_269, (CAST("ADS_imp_1_OUT".impter_270 AS BINARY_DOUBLE) - 0.622898951615882) / 5.837149612935237 AS scaler_270, (CAST("ADS_imp_1_OUT".impter_271 AS BINARY_DOUBLE) - -0.018232408103028765) / 1.0237582924270276 AS scaler_271, (CAST("ADS_imp_1_OUT".impter_272 AS BINARY_DOUBLE) - 0.01765800846800944) / 1.0369091422036907 AS scaler_272, (CAST("ADS_imp_1_OUT".impter_273 AS BINARY_DOUBLE) - -0.7754580279730494) / 5.650111104165515 AS scaler_273, (CAST("ADS_imp_1_OUT".impter_274 AS BINARY_DOUBLE) - -0.008494942988361138) / 0.9876490295553434 AS scaler_274, (CAST("ADS_imp_1_OUT".impter_275 AS BINARY_DOUBLE) - 0.06500802952263218) / 0.9938061896804096 AS scaler_275, (CAST("ADS_imp_1_OUT".impter_276 AS BINARY_DOUBLE) - 0.004846639297532018) / 0.9815019873684769 AS scaler_276, (CAST("ADS_imp_1_OUT".impter_277 AS BINARY_DOUBLE) - 0.31959901606775876) / 6.04265682063885 AS scaler_277, (CAST("ADS_imp_1_OUT".impter_278 AS BINARY_DOUBLE) - 0.06335285521269475) / 1.030255161135722 AS scaler_278, (CAST("ADS_imp_1_OUT".impter_279 AS BINARY_DOUBLE) - 0.05639859786390925) / 0.9704986281233102 AS scaler_279, (CAST("ADS_imp_1_OUT".impter_280 AS BINARY_DOUBLE) - -0.016826126115809636) / 0.9158313868217967 AS scaler_280, (CAST("ADS_imp_1_OUT".impter_281 AS BINARY_DOUBLE) - -0.035868631202668005) / 1.0109275682906786 AS scaler_281, (CAST("ADS_imp_1_OUT".impter_282 AS BINARY_DOUBLE) - 0.5939567726507027) / 6.134862342485855 AS scaler_282, (CAST("ADS_imp_1_OUT".impter_283 AS BINARY_DOUBLE) - -0.018499482983219337) / 0.9944840357762763 AS scaler_283, (CAST("ADS_imp_1_OUT".impter_284 AS BINARY_DOUBLE) - -0.002126060350638963) / 0.9778447419013441 AS scaler_284, (CAST("ADS_imp_1_OUT".impter_285 AS BINARY_DOUBLE) - 0.43749055924133856) / 5.851416241071843 AS scaler_285, (CAST("ADS_imp_1_OUT".impter_286 AS BINARY_DOUBLE) - -0.002792990485326514) / 1.0100816164740944 AS scaler_286, (CAST("ADS_imp_1_OUT".impter_287 AS BINARY_DOUBLE) - 0.05111067471537181) / 1.0268046765512155 AS scaler_287, (CAST("ADS_imp_1_OUT".impter_288 AS BINARY_DOUBLE) - 0.01652404135719371) / 1.0028252297771558 AS scaler_288, (CAST("ADS_imp_1_OUT".impter_289 AS BINARY_DOUBLE) - 0.046881980038056) / 0.9760255592175245 AS scaler_289, (CAST("ADS_imp_1_OUT".impter_290 AS BINARY_DOUBLE) - -0.21093566587728044) / 5.894017797300676 AS scaler_290, (CAST("ADS_imp_1_OUT".impter_291 AS BINARY_DOUBLE) - -0.38235732593808275) / 6.050957848475724 AS scaler_291, (CAST("ADS_imp_1_OUT".impter_292 AS BINARY_DOUBLE) - 0.07184577295054764) / 1.0317735699072899 AS scaler_292, (CAST("ADS_imp_1_OUT".impter_293 AS BINARY_DOUBLE) - 0.04617448263239929) / 1.008695230198085 AS scaler_293, (CAST("ADS_imp_1_OUT".impter_294 AS BINARY_DOUBLE) - -0.08558825454913567) / 0.9612556638919216 AS scaler_294, (CAST("ADS_imp_1_OUT".impter_295 AS BINARY_DOUBLE) - 0.03845417409897625) / 0.9634658509822347 AS scaler_295, (CAST("ADS_imp_1_OUT".impter_296 AS BINARY_DOUBLE) - 0.0010861389762425358) / 0.9878011845177224 AS scaler_296, (CAST("ADS_imp_1_OUT".impter_297 AS BINARY_DOUBLE) - 0.0013036543004699376) / 0.9802325604692824 AS scaler_297, (CAST("ADS_imp_1_OUT".impter_298 AS BINARY_DOUBLE) - -0.04572115009336087) / 0.9966809765564838 AS scaler_298, (CAST("ADS_imp_1_OUT".impter_299 AS BINARY_DOUBLE) - 0.109011335964655) / 5.862835709214262 AS scaler_299, (CAST("ADS_imp_1_OUT".impter_300 AS BINARY_DOUBLE) - 0.059388745922670474) / 1.0279151786530831 AS scaler_300, (CAST("ADS_imp_1_OUT".impter_301 AS BINARY_DOUBLE) - 0.02796049502507793) / 1.0196445533826572 AS scaler_301, (CAST("ADS_imp_1_OUT".impter_302 AS BINARY_DOUBLE) - 0.06765588611224771) / 0.996907552648703 AS scaler_302, (CAST("ADS_imp_1_OUT".impter_303 AS BINARY_DOUBLE) - 0.42516463145086364) / 6.021798926740255 AS scaler_303, (CAST("ADS_imp_1_OUT".impter_304 AS BINARY_DOUBLE) - -0.025755583751806005) / 0.9677777967417204 AS scaler_304, (CAST("ADS_imp_1_OUT".impter_305 AS BINARY_DOUBLE) - 0.05983631292026072) / 0.9714721805811518 AS scaler_305, (CAST("ADS_imp_1_OUT".impter_306 AS BINARY_DOUBLE) - -0.022966826151323574) / 0.9944894903866501 AS scaler_306, (CAST("ADS_imp_1_OUT".impter_307 AS BINARY_DOUBLE) - -0.025059373911550786) / 1.0097409585083836 AS scaler_307, (CAST("ADS_imp_1_OUT".impter_308 AS BINARY_DOUBLE) - -0.07477780703395227) / 1.0100566533671511 AS scaler_308, (CAST("ADS_imp_1_OUT".impter_309 AS BINARY_DOUBLE) - 0.005214344538572354) / 0.9837893167281717 AS scaler_309, (CAST("ADS_imp_1_OUT".impter_310 AS BINARY_DOUBLE) - 0.15069860934029664) / 5.735011156781238 AS scaler_310, (CAST("ADS_imp_1_OUT".impter_311 AS BINARY_DOUBLE) - 0.0920648545309688) / 1.0065402771379437 AS scaler_311, (CAST("ADS_imp_1_OUT".impter_312 AS BINARY_DOUBLE) - 0.02872039649838287) / 0.9784906033450759 AS scaler_312, (CAST("ADS_imp_1_OUT".impter_313 AS BINARY_DOUBLE) - 0.027206434346339497) / 0.9991615732109751 AS scaler_313, (CAST("ADS_imp_1_OUT".impter_314 AS BINARY_DOUBLE) - 0.006348743003703792) / 0.963185353898001 AS scaler_314, (CAST("ADS_imp_1_OUT".impter_315 AS BINARY_DOUBLE) - -0.05402460092901892) / 1.0519822785818902 AS scaler_315, (CAST("ADS_imp_1_OUT".impter_316 AS BINARY_DOUBLE) - 0.027029051133963092) / 0.9775996545554246 AS scaler_316, (CAST("ADS_imp_1_OUT".impter_317 AS BINARY_DOUBLE) - -0.0064650471205589975) / 1.0402075183971329 AS scaler_317, (CAST("ADS_imp_1_OUT".impter_318 AS BINARY_DOUBLE) - -0.043335487666484804) / 1.0011278238556536 AS scaler_318, (CAST("ADS_imp_1_OUT".impter_319 AS BINARY_DOUBLE) - 0.04481518768554344) / 0.9722446609062138 AS scaler_319, (CAST("ADS_imp_1_OUT".impter_320 AS BINARY_DOUBLE) - 0.004584500412058787) / 1.0262858605349432 AS scaler_320, (CAST("ADS_imp_1_OUT".impter_321 AS BINARY_DOUBLE) - -0.001027021710811342) / 0.9919602897367665 AS scaler_321, (CAST("ADS_imp_1_OUT".impter_322 AS BINARY_DOUBLE) - -0.03706762371695285) / 0.9474832242940362 AS scaler_322, (CAST("ADS_imp_1_OUT".impter_323 AS BINARY_DOUBLE) - -0.01578014654880059) / 0.9898649027094482 AS scaler_323, (CAST("ADS_imp_1_OUT".impter_324 AS BINARY_DOUBLE) - -0.06476010801389685) / 0.9782346350213528 AS scaler_324, (CAST("ADS_imp_1_OUT".impter_325 AS BINARY_DOUBLE) - 0.013158594346038825) / 1.0495582938116077 AS scaler_325, (CAST("ADS_imp_1_OUT".impter_326 AS BINARY_DOUBLE) - -0.6909561374047029) / 5.746508659742815 AS scaler_326, (CAST("ADS_imp_1_OUT".impter_327 AS BINARY_DOUBLE) - -0.032307395882269586) / 0.9535832586619137 AS scaler_327, (CAST("ADS_imp_1_OUT".impter_328 AS BINARY_DOUBLE) - 0.001871548534192734) / 0.9815964798775456 AS scaler_328, (CAST("ADS_imp_1_OUT".impter_329 AS BINARY_DOUBLE) - 0.009014081196377208) / 0.9660287896470228 AS scaler_329, (CAST("ADS_imp_1_OUT".impter_330 AS BINARY_DOUBLE) - 0.08432204289520576) / 1.0097164483499368 AS scaler_330, (CAST("ADS_imp_1_OUT".impter_331 AS BINARY_DOUBLE) - 0.03098818000424445) / 1.0130270342045389 AS scaler_331, (CAST("ADS_imp_1_OUT".impter_332 AS BINARY_DOUBLE) - 0.017842106547205465) / 0.993655606972685 AS scaler_332, (CAST("ADS_imp_1_OUT".impter_333 AS BINARY_DOUBLE) - 0.009830954519062886) / 5.92553450726784 AS scaler_333, (CAST("ADS_imp_1_OUT".impter_334 AS BINARY_DOUBLE) - 0.018857904928326345) / 0.9911886384867388 AS scaler_334, (CAST("ADS_imp_1_OUT".impter_335 AS BINARY_DOUBLE) - -0.09041919658309759) / 6.294466825822825 AS scaler_335, (CAST("ADS_imp_1_OUT".impter_336 AS BINARY_DOUBLE) - -0.0030938413689644926) / 0.9761716888106455 AS scaler_336, (CAST("ADS_imp_1_OUT".impter_337 AS BINARY_DOUBLE) - 0.06013463236860367) / 1.0011483068873699 AS scaler_337, (CAST("ADS_imp_1_OUT".impter_338 AS BINARY_DOUBLE) - -0.006783134159713595) / 0.9722970432848048 AS scaler_338, (CAST("ADS_imp_1_OUT".impter_339 AS BINARY_DOUBLE) - -0.022505432033342578) / 1.0089265011933541 AS scaler_339, (CAST("ADS_imp_1_OUT".impter_340 AS BINARY_DOUBLE) - 0.012902527459674764) / 5.731240866243183 AS scaler_340, (CAST("ADS_imp_1_OUT".impter_341 AS BINARY_DOUBLE) - -0.03249915020429405) / 1.044475101185332 AS scaler_341, (CAST("ADS_imp_1_OUT".impter_342 AS BINARY_DOUBLE) - -0.03379268322494926) / 0.9927711788351935 AS scaler_342, (CAST("ADS_imp_1_OUT".impter_343 AS BINARY_DOUBLE) - 0.006926122620280751) / 0.9801721512833292 AS scaler_343, (CAST("ADS_imp_1_OUT".impter_344 AS BINARY_DOUBLE) - -0.03319669654598365) / 1.0182345234275731 AS scaler_344, (CAST("ADS_imp_1_OUT".impter_345 AS BINARY_DOUBLE) - 2.7390190345202456) / 34.667875391393046 AS scaler_345, (CAST("ADS_imp_1_OUT".impter_346 AS BINARY_DOUBLE) - -0.0075319633963496155) / 0.9979191708443869 AS scaler_346, (CAST("ADS_imp_1_OUT".impter_347 AS BINARY_DOUBLE) - 0.022124363701982737) / 0.9808099368402478 AS scaler_347, (CAST("ADS_imp_1_OUT".impter_348 AS BINARY_DOUBLE) - -0.023653773851870237) / 1.0003846372052088 AS scaler_348, (CAST("ADS_imp_1_OUT".impter_349 AS BINARY_DOUBLE) - -0.01620635032677563) / 1.0105995254781748 AS scaler_349, (CAST("ADS_imp_1_OUT".impter_350 AS BINARY_DOUBLE) - -0.021142104441251273) / 1.0221080104646578 AS scaler_350, (CAST("ADS_imp_1_OUT".impter_351 AS BINARY_DOUBLE) - -0.06890676984297263) / 1.0082431727106027 AS scaler_351, (CAST("ADS_imp_1_OUT".impter_352 AS BINARY_DOUBLE) - 0.006174673936264955) / 1.014439751019311 AS scaler_352, (CAST("ADS_imp_1_OUT".impter_353 AS BINARY_DOUBLE) - -0.018480727521201546) / 0.9701951933455762 AS scaler_353, (CAST("ADS_imp_1_OUT".impter_354 AS BINARY_DOUBLE) - 0.01892387185297041) / 0.9808278094926718 AS scaler_354, (CAST("ADS_imp_1_OUT".impter_355 AS BINARY_DOUBLE) - 0.02727917887836492) / 1.026160540912389 AS scaler_355, (CAST("ADS_imp_1_OUT".impter_356 AS BINARY_DOUBLE) - -0.012823623960695998) / 0.9999639298811288 AS scaler_356, (CAST("ADS_imp_1_OUT".impter_357 AS BINARY_DOUBLE) - -0.013271487823414667) / 0.9888293309407856 AS scaler_357, (CAST("ADS_imp_1_OUT".impter_358 AS BINARY_DOUBLE) - -0.03395939012664646) / 0.9838454170841583 AS scaler_358, (CAST("ADS_imp_1_OUT".impter_359 AS BINARY_DOUBLE) - 0.03223004938335937) / 1.0311477237988198 AS scaler_359, (CAST("ADS_imp_1_OUT".impter_360 AS BINARY_DOUBLE) - -0.0016017230909337308) / 0.9977131054043721 AS scaler_360, (CAST("ADS_imp_1_OUT".impter_361 AS BINARY_DOUBLE) - -0.03321899170282454) / 0.9865478214908777 AS scaler_361, (CAST("ADS_imp_1_OUT".impter_362 AS BINARY_DOUBLE) - -0.0016618588765567152) / 0.9890613942697071 AS scaler_362, (CAST("ADS_imp_1_OUT".impter_363 AS BINARY_DOUBLE) - 0.04573989570209914) / 1.0180765967750773 AS scaler_363, (CAST("ADS_imp_1_OUT".impter_364 AS BINARY_DOUBLE) - -0.021293175937165) / 0.978862030082048 AS scaler_364, (CAST("ADS_imp_1_OUT".impter_365 AS BINARY_DOUBLE) - -0.011255144611449622) / 1.0085669156865533 AS scaler_365, (CAST("ADS_imp_1_OUT".impter_366 AS BINARY_DOUBLE) - -0.02563865782710232) / 1.0300081363336124 AS scaler_366, (CAST("ADS_imp_1_OUT".impter_367 AS BINARY_DOUBLE) - -0.015167083011311294) / 0.9899050483960369 AS scaler_367, (CAST("ADS_imp_1_OUT".impter_368 AS BINARY_DOUBLE) - 0.0010959755571049432) / 1.0362907152513867 AS scaler_368, (CAST("ADS_imp_1_OUT".impter_369 AS BINARY_DOUBLE) - 0.25830160330800345) / 5.815383768143437 AS scaler_369, (CAST("ADS_imp_1_OUT".impter_370 AS BINARY_DOUBLE) - -0.02512420755881165) / 1.0004687101039538 AS scaler_370, (CAST("ADS_imp_1_OUT".impter_371 AS BINARY_DOUBLE) - -0.5588992061400131) / 5.788250773541592 AS scaler_371, (CAST("ADS_imp_1_OUT".impter_372 AS BINARY_DOUBLE) - 0.04500746078257995) / 1.0086593860246837 AS scaler_372, (CAST("ADS_imp_1_OUT".impter_373 AS BINARY_DOUBLE) - -0.03582268471853405) / 1.0018148995353613 AS scaler_373, (CAST("ADS_imp_1_OUT".impter_374 AS BINARY_DOUBLE) - -0.0238194811504848) / 1.0251776661707117 AS scaler_374, (CAST("ADS_imp_1_OUT".impter_375 AS BINARY_DOUBLE) - 0.00870068158455398) / 1.0334836529068854 AS scaler_375, (CAST("ADS_imp_1_OUT".impter_376 AS BINARY_DOUBLE) - 0.41206876337723863) / 5.954218215874292 AS scaler_376, (CAST("ADS_imp_1_OUT".impter_377 AS BINARY_DOUBLE) - -0.00883623214870824) / 0.9659875346877604 AS scaler_377, (CAST("ADS_imp_1_OUT".impter_378 AS BINARY_DOUBLE) - -0.047673712853857325) / 0.9682385986144871 AS scaler_378, (CAST("ADS_imp_1_OUT".impter_379 AS BINARY_DOUBLE) - 0.39808785261614416) / 6.09008828409793 AS scaler_379, (CAST("ADS_imp_1_OUT".impter_380 AS BINARY_DOUBLE) - 0.014874268925561847) / 0.9655591180277953 AS scaler_380, (CAST("ADS_imp_1_OUT".impter_381 AS BINARY_DOUBLE) - -0.01355994466429737) / 1.0067469722911915 AS scaler_381, (CAST("ADS_imp_1_OUT".impter_382 AS BINARY_DOUBLE) - 0.06549584301442803) / 1.0522361938897125 AS scaler_382, (CAST("ADS_imp_1_OUT".impter_383 AS BINARY_DOUBLE) - -0.07523712848824068) / 1.0400455118176228 AS scaler_383, (CAST("ADS_imp_1_OUT".impter_384 AS BINARY_DOUBLE) - -0.020246425764404403) / 0.99550805592098 AS scaler_384, (CAST("ADS_imp_1_OUT".impter_385 AS BINARY_DOUBLE) - -0.06505456712739689) / 1.00815114883143 AS scaler_385, (CAST("ADS_imp_1_OUT".impter_386 AS BINARY_DOUBLE) - 0.040682923885247455) / 0.9675621093776584 AS scaler_386, (CAST("ADS_imp_1_OUT".impter_387 AS BINARY_DOUBLE) - 0.5036509170142887) / 6.055498495136896 AS scaler_387, (CAST("ADS_imp_1_OUT".impter_388 AS BINARY_DOUBLE) - -0.01984269915156025) / 0.9900740889033433 AS scaler_388, (CAST("ADS_imp_1_OUT".impter_389 AS BINARY_DOUBLE) - -0.029975294309893395) / 0.9997397749932063 AS scaler_389, (CAST("ADS_imp_1_OUT".impter_390 AS BINARY_DOUBLE) - -0.023935150902407186) / 1.00798921844037 AS scaler_390, (CAST("ADS_imp_1_OUT".impter_391 AS BINARY_DOUBLE) - 0.003487379328156493) / 1.0044645097371014 AS scaler_391, (CAST("ADS_imp_1_OUT".impter_392 AS BINARY_DOUBLE) - -0.006836589678473769) / 0.9763905812172375 AS scaler_392, (CAST("ADS_imp_1_OUT".impter_393 AS BINARY_DOUBLE) - -0.023001043810177268) / 0.9698402164080443 AS scaler_393, (CAST("ADS_imp_1_OUT".impter_394 AS BINARY_DOUBLE) - 0.026433076987905132) / 1.0299294878585217 AS scaler_394, (CAST("ADS_imp_1_OUT".impter_395 AS BINARY_DOUBLE) - 0.03869392603237684) / 1.0186157804435945 AS scaler_395, (CAST("ADS_imp_1_OUT".impter_396 AS BINARY_DOUBLE) - 0.007166160812626991) / 0.9843737579570186 AS scaler_396, (CAST("ADS_imp_1_OUT".impter_397 AS BINARY_DOUBLE) - -0.31652297140011876) / 6.070605480686376 AS scaler_397, (CAST("ADS_imp_1_OUT".impter_398 AS BINARY_DOUBLE) - 0.352192927636602) / 6.099135476868029 AS scaler_398, (CAST("ADS_imp_1_OUT".impter_399 AS BINARY_DOUBLE) - 0.2418343422011388) / 5.947824293275464 AS scaler_399, (CAST("ADS_imp_1_OUT".impter_400 AS BINARY_DOUBLE) - 0.23681058627355728) / 5.851504662987678 AS scaler_400, (CAST("ADS_imp_1_OUT".impter_401 AS BINARY_DOUBLE) - -0.011935061221661204) / 0.9960811072647195 AS scaler_401, (CAST("ADS_imp_1_OUT".impter_402 AS BINARY_DOUBLE) - -0.23225071389385885) / 5.877913338764821 AS scaler_402, (CAST("ADS_imp_1_OUT".impter_403 AS BINARY_DOUBLE) - 0.027478547688853303) / 0.9788713733340856 AS scaler_403, (CAST("ADS_imp_1_OUT".impter_404 AS BINARY_DOUBLE) - -0.2835956440898274) / 5.678310355351206 AS scaler_404, (CAST("ADS_imp_1_OUT".impter_405 AS BINARY_DOUBLE) - -0.026966778578135772) / 1.0011958124193499 AS scaler_405, (CAST("ADS_imp_1_OUT".impter_406 AS BINARY_DOUBLE) - -0.004329268838175945) / 5.946384673713921 AS scaler_406, (CAST("ADS_imp_1_OUT".impter_407 AS BINARY_DOUBLE) - 0.0774540554940731) / 0.9793348754271206 AS scaler_407, (CAST("ADS_imp_1_OUT".impter_408 AS BINARY_DOUBLE) - -0.6052203464446785) / 5.817154006812937 AS scaler_408, (CAST("ADS_imp_1_OUT".impter_409 AS BINARY_DOUBLE) - 0.0338701304693192) / 0.960463407901455 AS scaler_409, (CAST("ADS_imp_1_OUT".impter_410 AS BINARY_DOUBLE) - -0.05044305753803302) / 5.810222734574313 AS scaler_410, (CAST("ADS_imp_1_OUT".impter_411 AS BINARY_DOUBLE) - 0.008805453357057883) / 0.9798841614686381 AS scaler_411, (CAST("ADS_imp_1_OUT".impter_412 AS BINARY_DOUBLE) - -0.05374724915468808) / 0.9725143886399855 AS scaler_412, (CAST("ADS_imp_1_OUT".impter_413 AS BINARY_DOUBLE) - -0.004957359515296269) / 0.9748727609121598 AS scaler_413, (CAST("ADS_imp_1_OUT".impter_414 AS BINARY_DOUBLE) - 0.12039061456156476) / 5.880042099618977 AS scaler_414, (CAST("ADS_imp_1_OUT".impter_415 AS BINARY_DOUBLE) - -0.005732424778663252) / 1.0091331017994325 AS scaler_415, (CAST("ADS_imp_1_OUT".impter_416 AS BINARY_DOUBLE) - -0.4286478678045208) / 5.973293156925994 AS scaler_416, (CAST("ADS_imp_1_OUT".impter_417 AS BINARY_DOUBLE) - -0.028516293632594378) / 1.0152913842776887 AS scaler_417, (CAST("ADS_imp_1_OUT".impter_418 AS BINARY_DOUBLE) - 0.052380333284906204) / 1.01817218649359 AS scaler_418, (CAST("ADS_imp_1_OUT".impter_419 AS BINARY_DOUBLE) - -0.028497248319907256) / 5.847011203913571 AS scaler_419, (CAST("ADS_imp_1_OUT".impter_420 AS BINARY_DOUBLE) - -0.012190751471044496) / 1.0251203403698526 AS scaler_420, (CAST("ADS_imp_1_OUT".impter_421 AS BINARY_DOUBLE) - 0.014464401907681581) / 1.0492676826138123 AS scaler_421, (CAST("ADS_imp_1_OUT".impter_422 AS BINARY_DOUBLE) - -0.17428872440122373) / 5.904567530979285 AS scaler_422, (CAST("ADS_imp_1_OUT".impter_423 AS BINARY_DOUBLE) - -0.01773365620191358) / 1.0254922074959463 AS scaler_423, (CAST("ADS_imp_1_OUT".impter_424 AS BINARY_DOUBLE) - 0.40558807090091853) / 5.537078097301127 AS scaler_424, (CAST("ADS_imp_1_OUT".impter_425 AS BINARY_DOUBLE) - -0.0009022771635855167) / 0.9868008921623722 AS scaler_425, (CAST("ADS_imp_1_OUT".impter_426 AS BINARY_DOUBLE) - 0.05739992787057724) / 0.9696129618812115 AS scaler_426, (CAST("ADS_imp_1_OUT".impter_427 AS BINARY_DOUBLE) - 0.04850780446682892) / 0.9347455059647907 AS scaler_427, (CAST("ADS_imp_1_OUT".impter_428 AS BINARY_DOUBLE) - 0.04555082643401923) / 0.9795902806725212 AS scaler_428, (CAST("ADS_imp_1_OUT".impter_429 AS BINARY_DOUBLE) - -0.013088017894457874) / 5.853516696500564 AS scaler_429, (CAST("ADS_imp_1_OUT".impter_430 AS BINARY_DOUBLE) - 0.7622987596243614) / 5.976914501060202 AS scaler_430, (CAST("ADS_imp_1_OUT".impter_431 AS BINARY_DOUBLE) - 0.06277381315317203) / 1.0530187925965664 AS scaler_431, (CAST("ADS_imp_1_OUT".impter_432 AS BINARY_DOUBLE) - -0.00595076348043327) / 5.8761809381575265 AS scaler_432, (CAST("ADS_imp_1_OUT".impter_433 AS BINARY_DOUBLE) - -0.019782980673704004) / 1.016060957904549 AS scaler_433, (CAST("ADS_imp_1_OUT".impter_434 AS BINARY_DOUBLE) - 0.03813782436434927) / 0.9897709857222856 AS scaler_434, (CAST("ADS_imp_1_OUT".impter_435 AS BINARY_DOUBLE) - -0.03361997654906546) / 1.0108026015018525 AS scaler_435, (CAST("ADS_imp_1_OUT".impter_436 AS BINARY_DOUBLE) - -0.015449063685126078) / 0.9717326567278565 AS scaler_436, (CAST("ADS_imp_1_OUT".impter_437 AS BINARY_DOUBLE) - -0.05083199732740015) / 0.9791071943300053 AS scaler_437, (CAST("ADS_imp_1_OUT".impter_438 AS BINARY_DOUBLE) - 0.12294390238132996) / 5.80532595725793 AS scaler_438, (CAST("ADS_imp_1_OUT".impter_439 AS BINARY_DOUBLE) - 0.008273480374725027) / 1.0023549695531735 AS scaler_439, (CAST("ADS_imp_1_OUT".impter_440 AS BINARY_DOUBLE) - 0.04577021563207708) / 0.9948251301427953 AS scaler_440, (CAST("ADS_imp_1_OUT".impter_441 AS BINARY_DOUBLE) - -0.004739394213399075) / 0.9866453331207407 AS scaler_441, (CAST("ADS_imp_1_OUT".impter_442 AS BINARY_DOUBLE) - -0.025074465350024163) / 1.0215515668408335 AS scaler_442, (CAST("ADS_imp_1_OUT".impter_443 AS BINARY_DOUBLE) - 0.050774082486299194) / 0.9690110808898585 AS scaler_443, (CAST("ADS_imp_1_OUT".impter_444 AS BINARY_DOUBLE) - -0.0967069255496831) / 5.631254555346854 AS scaler_444, (CAST("ADS_imp_1_OUT".impter_445 AS BINARY_DOUBLE) - -0.007206652069868864) / 0.9728674931147712 AS scaler_445, (CAST("ADS_imp_1_OUT".impter_446 AS BINARY_DOUBLE) - 0.03506859491861105) / 1.0282750135426344 AS scaler_446, (CAST("ADS_imp_1_OUT".impter_447 AS BINARY_DOUBLE) - -0.00905435452775923) / 1.035287499798065 AS scaler_447, (CAST("ADS_imp_1_OUT".impter_448 AS BINARY_DOUBLE) - -0.012006634151227604) / 1.0200794266710214 AS scaler_448, (CAST("ADS_imp_1_OUT".impter_449 AS BINARY_DOUBLE) - 0.03145627491797305) / 0.9937879772736924 AS scaler_449, (CAST("ADS_imp_1_OUT".impter_450 AS BINARY_DOUBLE) - 0.02517699513431471) / 0.9684040296079491 AS scaler_450, (CAST("ADS_imp_1_OUT".impter_451 AS BINARY_DOUBLE) - 0.005640015529596338) / 1.015421580688403 AS scaler_451, (CAST("ADS_imp_1_OUT".impter_452 AS BINARY_DOUBLE) - -0.010608619203966895) / 1.0246613022268378 AS scaler_452, (CAST("ADS_imp_1_OUT".impter_453 AS BINARY_DOUBLE) - -0.062079998204146586) / 0.9869504608282007 AS scaler_453, (CAST("ADS_imp_1_OUT".impter_454 AS BINARY_DOUBLE) - -0.0876770647950911) / 1.0029750629720398 AS scaler_454, (CAST("ADS_imp_1_OUT".impter_455 AS BINARY_DOUBLE) - 0.012143657983602962) / 0.9744995952331035 AS scaler_455, (CAST("ADS_imp_1_OUT".impter_456 AS BINARY_DOUBLE) - 0.03448739220055286) / 1.0176699342790378 AS scaler_456, (CAST("ADS_imp_1_OUT".impter_457 AS BINARY_DOUBLE) - 0.006839876969520017) / 0.987127462042404 AS scaler_457, (CAST("ADS_imp_1_OUT".impter_458 AS BINARY_DOUBLE) - -0.1589087203718216) / 5.5807038713007335 AS scaler_458, (CAST("ADS_imp_1_OUT".impter_459 AS BINARY_DOUBLE) - 0.45343491151894105) / 5.6176560152403745 AS scaler_459, (CAST("ADS_imp_1_OUT".impter_460 AS BINARY_DOUBLE) - -0.007482014986002762) / 1.0334253515710414 AS scaler_460, (CAST("ADS_imp_1_OUT".impter_461 AS BINARY_DOUBLE) - -0.0538045349045037) / 0.9960348345876942 AS scaler_461, (CAST("ADS_imp_1_OUT".impter_462 AS BINARY_DOUBLE) - 0.006517329526108785) / 1.0021131774599925 AS scaler_462, (CAST("ADS_imp_1_OUT".impter_463 AS BINARY_DOUBLE) - -0.3201406707449883) / 5.716416507315997 AS scaler_463, (CAST("ADS_imp_1_OUT".impter_464 AS BINARY_DOUBLE) - 0.03164463472773337) / 0.9726515882520317 AS scaler_464, (CAST("ADS_imp_1_OUT".impter_465 AS BINARY_DOUBLE) - -0.031827670383012555) / 0.9812532959822754 AS scaler_465, (CAST("ADS_imp_1_OUT".impter_466 AS BINARY_DOUBLE) - -0.02220263625319023) / 1.0370390821341966 AS scaler_466, (CAST("ADS_imp_1_OUT".impter_467 AS BINARY_DOUBLE) - 0.04918588699743021) / 1.0206054749154756 AS scaler_467, (CAST("ADS_imp_1_OUT".impter_468 AS BINARY_DOUBLE) - 0.013873407999629129) / 0.987246490028904 AS scaler_468, (CAST("ADS_imp_1_OUT".impter_469 AS BINARY_DOUBLE) - -0.054844779309353775) / 0.9876262037314543 AS scaler_469, (CAST("ADS_imp_1_OUT".impter_470 AS BINARY_DOUBLE) - 0.05947169339023267) / 1.0092122222358388 AS scaler_470, (CAST("ADS_imp_1_OUT".impter_471 AS BINARY_DOUBLE) - -0.007061332655546885) / 1.0113339937552548 AS scaler_471, (CAST("ADS_imp_1_OUT".impter_472 AS BINARY_DOUBLE) - 0.0009227758698022626) / 1.020330749267979 AS scaler_472, (CAST("ADS_imp_1_OUT".impter_473 AS BINARY_DOUBLE) - -0.014955268248566689) / 1.0413119364682566 AS scaler_473, (CAST("ADS_imp_1_OUT".impter_474 AS BINARY_DOUBLE) - -0.00997364389328803) / 0.9793415870167274 AS scaler_474, (CAST("ADS_imp_1_OUT".impter_475 AS BINARY_DOUBLE) - 0.044011886118274696) / 1.0007453076824555 AS scaler_475, (CAST("ADS_imp_1_OUT".impter_476 AS BINARY_DOUBLE) - 0.03204255595840591) / 0.988499862882957 AS scaler_476, (CAST("ADS_imp_1_OUT".impter_477 AS BINARY_DOUBLE) - -0.028511291715894678) / 1.018673434822483 AS scaler_477, (CAST("ADS_imp_1_OUT".impter_478 AS BINARY_DOUBLE) - 0.05235198939025461) / 1.030225026137767 AS scaler_478, (CAST("ADS_imp_1_OUT".impter_479 AS BINARY_DOUBLE) - 0.4442463067830223) / 5.635010414681324 AS scaler_479, (CAST("ADS_imp_1_OUT".impter_480 AS BINARY_DOUBLE) - -0.0421220588184719) / 0.9772881180874626 AS scaler_480, (CAST("ADS_imp_1_OUT".impter_481 AS BINARY_DOUBLE) - -0.06375683381469409) / 0.9807772043168697 AS scaler_481, (CAST("ADS_imp_1_OUT".impter_482 AS BINARY_DOUBLE) - 0.09016412133268503) / 5.8772408365208255 AS scaler_482, (CAST("ADS_imp_1_OUT".impter_483 AS BINARY_DOUBLE) - -0.021181166332863134) / 1.050621089425892 AS scaler_483, (CAST("ADS_imp_1_OUT".impter_484 AS BINARY_DOUBLE) - 0.015134427562764584) / 1.0181907514344235 AS scaler_484, (CAST("ADS_imp_1_OUT".impter_485 AS BINARY_DOUBLE) - 0.1458909634165245) / 5.950692941207097 AS scaler_485, (CAST("ADS_imp_1_OUT".impter_486 AS BINARY_DOUBLE) - -0.0964936751824616) / 1.025397566101771 AS scaler_486, (CAST("ADS_imp_1_OUT".impter_487 AS BINARY_DOUBLE) - -0.0007661343328348244) / 1.0327977666221848 AS scaler_487, (CAST("ADS_imp_1_OUT".impter_488 AS BINARY_DOUBLE) - 0.007424472006137845) / 1.0131319009223352 AS scaler_488, (CAST("ADS_imp_1_OUT".impter_489 AS BINARY_DOUBLE) - 0.007776565305072426) / 0.9660414885523543 AS scaler_489, (CAST("ADS_imp_1_OUT".impter_490 AS BINARY_DOUBLE) - -0.02972669445658546) / 0.9816148436418729 AS scaler_490, (CAST("ADS_imp_1_OUT".impter_491 AS BINARY_DOUBLE) - -0.020022098906708034) / 1.0376883862584318 AS scaler_491, (CAST("ADS_imp_1_OUT".impter_492 AS BINARY_DOUBLE) - -0.03689120776576418) / 1.0350273972331128 AS scaler_492, (CAST("ADS_imp_1_OUT".impter_493 AS BINARY_DOUBLE) - 0.02342654499679442) / 0.9963841480580575 AS scaler_493, (CAST("ADS_imp_1_OUT".impter_494 AS BINARY_DOUBLE) - 0.06047072800386204) / 1.013712584435496 AS scaler_494, (CAST("ADS_imp_1_OUT".impter_495 AS BINARY_DOUBLE) - 0.02457996835763847) / 1.0206669115005262 AS scaler_495, (CAST("ADS_imp_1_OUT".impter_496 AS BINARY_DOUBLE) - -0.0053128065642532255) / 1.0066954008984852 AS scaler_496, (CAST("ADS_imp_1_OUT".impter_497 AS BINARY_DOUBLE) - -0.050025880514262516) / 5.692164744670064 AS scaler_497, (CAST("ADS_imp_1_OUT".impter_498 AS BINARY_DOUBLE) - -0.055008136401580685) / 0.9868440376092616 AS scaler_498, (CAST("ADS_imp_1_OUT".impter_499 AS BINARY_DOUBLE) - -0.46514935213874503) / 5.739355619460631 AS scaler_499, (CAST("ADS_imp_1_OUT".impter_500 AS BINARY_DOUBLE) - -0.037847190400891) / 0.9980592109563712 AS scaler_500, (CAST("ADS_imp_1_OUT".impter_501 AS BINARY_DOUBLE) - 0.028703608331041793) / 0.9938711909999083 AS scaler_501 
FROM "33420_PBFR8Z_ADS_IMP_1_OUT" "ADS_imp_1_OUT") "ADS_sca_2_OUT") "U"
-- Code For temporary table 29233432_XXK9R0_RF_AVG__B0 part 1/2. Create 


CREATE GLOBAL TEMPORARY TABLE "29233432_XXK9R0_RF_AVG__B0" (
	"KEY" NUMBER(19), 
	"Score_0" BINARY_DOUBLE, 
	"Proba_0" BINARY_DOUBLE, 
	"LogProba_0" BINARY_DOUBLE, 
	"Score_1" BINARY_DOUBLE, 
	"Proba_1" BINARY_DOUBLE, 
	"LogProba_1" BINARY_DOUBLE, 
	"Score_2" BINARY_DOUBLE, 
	"Proba_2" BINARY_DOUBLE, 
	"LogProba_2" BINARY_DOUBLE, 
	"Score_3" BINARY_DOUBLE, 
	"Proba_3" BINARY_DOUBLE, 
	"LogProba_3" BINARY_DOUBLE
)

 ON COMMIT PRESERVE ROWS
-- Code For temporary table 29233432_XXK9R0_RF_AVG__B0 part 2/2. Populate

INSERT INTO "29233432_XXK9R0_RF_AVG__B0" ("KEY", "Score_0", "Proba_0", "LogProba_0", "Score_1", "Proba_1", "LogProba_1", "Score_2", "Proba_2", "LogProba_2", "Score_3", "Proba_3", "LogProba_3") SELECT "U"."KEY", "U"."Score_0", "U"."Proba_0", "U"."LogProba_0", "U"."Score_1", "U"."Proba_1", "U"."LogProba_1", "U"."Score_2", "U"."Proba_2", "U"."LogProba_2", "U"."Score_3", "U"."Proba_3", "U"."LogProba_3" 
FROM (WITH "DT_node_lookup" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_290 <= -0.39557769894599915) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_269 <= -0.22113776206970215) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_260 <= -0.2569328844547272) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_108 <= 0.5725108981132507) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_461 <= -0.03293321281671524) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_388 <= -0.5579781532287598) THEN 6 ELSE 7 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_201 <= -0.8202383518218994) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_198 <= 0.64430171251297) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_155 <= -1.5094623565673828) THEN 11 ELSE 12 END ELSE 13 END ELSE 14 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= -0.1752375364303589) THEN 16 ELSE 17 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_279 <= -1.2282991409301758) THEN 19 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_293 <= 0.6828871965408325) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_291 <= 0.5524182319641113) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_259 <= -0.3878278136253357) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_197 <= -0.5663095712661743) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_181 <= -0.32083678245544434) THEN 25 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_394 <= -0.7977477312088013) THEN 27 ELSE 28 END END ELSE 29 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_141 <= -0.7410519123077393) THEN 31 ELSE 32 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_375 <= -0.05278117582201958) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_264 <= 0.24083814024925232) THEN 35 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_211 <= 0.46744030714035034) THEN 37 ELSE 38 END END ELSE 39 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_227 <= 1.4791929721832275) THEN 41 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_468 <= 0.5014591813087463) THEN 43 ELSE 44 END END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_425 <= 0.8577389717102051) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_255 <= 0.7951980233192444) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_245 <= 0.9195132851600647) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_414 <= 1.290778398513794) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_474 <= 0.9427685737609863) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_140 <= -0.46035414934158325) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_202 <= 0.486183762550354) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_296 <= 1.6120786666870117) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_367 <= -0.8910887241363525) THEN 54 ELSE 55 END ELSE 56 END ELSE 57 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_209 <= 0.6866821050643921) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_469 <= 0.02457733452320099) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_471 <= -0.9486380815505981) THEN 61 ELSE 62 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_425 <= -0.224727600812912) THEN 64 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_94 <= -0.0391356460750103) THEN 66 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_481 <= -0.29537540674209595) THEN 68 ELSE 69 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_121 <= 0.2320357710123062) THEN 71 ELSE 72 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_130 <= -0.8933038711547852) THEN 74 ELSE 75 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_219 <= 0.3404226303100586) THEN 77 ELSE 78 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_228 <= 0.4813994765281677) THEN 80 ELSE 81 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_258 <= -1.520419716835022) THEN 83 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_460 <= -1.0960533618927002) THEN 85 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_187 <= -0.8316948413848877) THEN 87 ELSE 88 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_373 <= -0.03577309101819992) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_158 <= 0.36601173877716064) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_205 <= -1.2897083759307861) THEN 92 ELSE 93 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_480 <= -0.1918696165084839) THEN 95 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_361 <= -0.19806237518787384) THEN 97 ELSE 98 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_213 <= -0.26903772354125977) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_34 <= -0.40727460384368896) THEN 101 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_14 <= -0.5961811542510986) THEN 103 ELSE 104 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_404 <= 0.9568055868148804) THEN 106 ELSE 107 END END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_74 <= -1.1646243333816528) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_252 <= 1.4656699895858765) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_281 <= -0.036250270903110504) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_154 <= 0.7613164186477661) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_347 <= -0.4433358907699585) THEN 113 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_64 <= -0.3503493368625641) THEN 115 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_431 <= -1.9161163568496704) THEN 117 ELSE 118 END END END ELSE 119 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_38 <= -1.104454517364502) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_460 <= -0.4224275052547455) THEN 122 ELSE 123 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_154 <= -1.241652488708496) THEN 125 ELSE 126 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_451 <= 0.04509270191192627) THEN 128 ELSE 129 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= 1.5044806003570557) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_253 <= 1.344839334487915) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_482 <= -1.8615024089813232) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_183 <= -0.14781513810157776) THEN 134 ELSE 135 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_268 <= 0.051954519003629684) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_491 <= -0.3410242795944214) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_199 <= 0.25728291273117065) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_465 <= 0.47309303283691406) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_386 <= -1.2738590240478516) THEN 141 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_392 <= -1.5338597297668457) THEN 143 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_231 <= 0.7527940273284912) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_338 <= 1.4237313270568848) THEN 146 ELSE 147 END ELSE 148 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_288 <= -1.4302380084991455) THEN 150 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_415 <= 0.3702218532562256) THEN 152 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_414 <= -0.24170731008052826) THEN 154 ELSE 155 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_132 <= 0.2044188380241394) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_21 <= -1.3156474828720093) THEN 158 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_417 <= -1.2742146253585815) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_244 <= -0.09044638276100159) THEN 161 ELSE 162 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_42 <= -0.2719258964061737) THEN 164 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_366 <= 0.3067505359649658) THEN 166 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_309 <= 0.27511709928512573) THEN 168 ELSE 169 END END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_307 <= -0.3562396168708801) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_113 <= 0.9291150569915771) THEN 172 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_74 <= 0.0017946064472198486) THEN 174 ELSE 175 END END ELSE 176 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_194 <= -0.5460186004638672) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_347 <= 0.2658070921897888) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_122 <= 0.8311797976493835) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_488 <= 0.9326335191726685) THEN 181 ELSE 182 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_114 <= -0.10915184020996094) THEN 184 ELSE 185 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_159 <= 0.33286917209625244) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_166 <= -0.6074941158294678) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_149 <= -0.32011502981185913) THEN 189 ELSE 190 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_347 <= 1.7106378078460693) THEN 192 ELSE 193 END END ELSE 194 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_28 <= -0.6322258710861206) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_295 <= -1.3593666553497314) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_58 <= 0.6296069622039795) THEN 198 ELSE 199 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_49 <= -1.167719841003418) THEN 201 ELSE 202 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_233 <= 0.7459720373153687) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_211 <= 1.1119434833526611) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_300 <= -1.621059775352478) THEN 206 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_217 <= 1.2870521545410156) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_119 <= -2.8100457191467285) THEN 209 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_357 <= -1.1946024894714355) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_429 <= -0.030805155634880066) THEN 212 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_368 <= -0.09498649835586548) THEN 214 ELSE 215 END END ELSE 216 END END ELSE 217 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_93 <= 0.567346453666687) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_301 <= 0.6403795480728149) THEN 220 ELSE 221 END ELSE 222 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_445 <= 0.8781399130821228) THEN 224 ELSE 225 END END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_401 <= 0.5295406579971313) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_378 <= -0.22020182013511658) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_209 <= -1.422463297843933) THEN 229 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_77 <= -1.3710169792175293) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_310 <= -0.025671053677797318) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_65 <= 0.5656089186668396) THEN 233 ELSE 234 END ELSE 235 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_24 <= 0.9465968608856201) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_322 <= 0.25353771448135376) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_346 <= -1.005784034729004) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_188 <= 0.01074749231338501) THEN 240 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_119 <= 0.7588790059089661) THEN 242 ELSE 243 END END ELSE 244 END ELSE 245 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_412 <= 0.1296369433403015) THEN 247 ELSE 248 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_188 <= -1.6076104640960693) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_283 <= 0.9680830240249634) THEN 251 ELSE 252 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_415 <= 0.8524330258369446) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_92 <= -0.0182727612555027) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_89 <= 0.4125852584838867) THEN 256 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_474 <= 0.375066876411438) THEN 258 ELSE 259 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_32 <= -0.6501549482345581) THEN 261 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_420 <= -0.19719643890857697) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_372 <= -0.7748720645904541) THEN 264 ELSE 265 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_270 <= -0.8510605096817017) THEN 267 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_276 <= -0.3411572277545929) THEN 269 ELSE 270 END END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_391 <= -0.05750374495983124) THEN 272 ELSE 273 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_443 <= 0.010503385215997696) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_324 <= -0.25270789861679077) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_321 <= -0.8426171541213989) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_262 <= 0.31226107478141785) THEN 278 ELSE 279 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_493 <= -1.8835340738296509) THEN 281 ELSE 282 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_497 <= 0.1821082979440689) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_490 <= -1.2227129936218262) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_154 <= -0.1935785561800003) THEN 286 ELSE 287 END ELSE 288 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_479 <= 0.8974101543426514) THEN 290 ELSE 291 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_257 <= 0.31736457347869873) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_19 <= 1.0651899576187134) THEN 294 ELSE 295 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_46 <= -0.7244141101837158) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_145 <= 0.9196038246154785) THEN 298 ELSE 299 END ELSE 300 END END END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_273 <= 1.024238109588623) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_96 <= 1.4195115566253662) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_154 <= 1.5947468280792236) THEN 304 ELSE 305 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_333 <= -0.32421624660491943) THEN 307 ELSE 308 END END ELSE 309 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_359 <= 0.683752179145813) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_74 <= 0.7083404064178467) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_100 <= 2.181485176086426) THEN 313 ELSE 314 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_362 <= 0.6444059014320374) THEN 316 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_477 <= -0.7157614827156067) THEN 318 ELSE 319 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_30 <= 0.43624600768089294) THEN 321 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_269 <= -0.7272747159004211) THEN 323 ELSE 324 END END END END END END AS node_id_2 
FROM "33421_53X5V4_ADS_SCA_2_OUT" "ADS_sca_2_OUT"), 
"DT_node_data" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0.0" AS "Proba_0.0", "Values"."LogProba_0.0" AS "LogProba_0.0", "Values"."Proba_1.0" AS "Proba_1.0", "Values"."LogProba_1.0" AS "LogProba_1.0", "Values"."Proba_2.0" AS "Proba_2.0", "Values"."LogProba_2.0" AS "LogProba_2.0", "Values"."Proba_3.0" AS "Proba_3.0", "Values"."LogProba_3.0" AS "LogProba_3.0", "Values"."Decision" AS "Decision", "Values"."DecisionProba" AS "DecisionProba" 
FROM (SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 6 AS depth, 5 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 6 AS depth, 5 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 10 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 8 AS depth, 10 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 7 AS depth, 9 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 6 AS depth, 8 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 5 AS depth, 15 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 5 AS depth, 15 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 4 AS depth, 18 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 24 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 10 AS depth, 26 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 28 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 10 AS depth, 26 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 29 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 8 AS depth, 23 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 31 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 30 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 32 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 10 AS count, 8 AS depth, 30 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 35 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 8 AS depth, 34 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 37 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 36 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 38 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 36 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 39 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 7 AS depth, 33 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 41 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 15 AS count, 6 AS depth, 40 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 43 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 7 AS depth, 42 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 44 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 7 AS depth, 42 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 54 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 53 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 55 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 11 AS depth, 53 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 56 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 52 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 57 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 9 AS depth, 51 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 61 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 60 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 62 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 8 AS count, 11 AS depth, 60 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 64 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 11 AS depth, 63 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 66 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 12 AS depth, 65 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 68 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 13 AS depth, 67 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 69 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 13 AS depth, 67 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 71 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 70 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 72 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 10 AS depth, 70 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 74 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 73 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 75 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 10 AS count, 8 AS depth, 73 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 77 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 7 AS depth, 76 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 78 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 7 AS depth, 76 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 80 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 6 AS depth, 79 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 81 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 6 AS depth, 79 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 83 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 5 AS depth, 82 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 85 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 6 AS depth, 84 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 87 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 7 AS depth, 86 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 88 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 14 AS count, 7 AS depth, 86 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 92 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 6 AS depth, 91 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 93 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 6 AS count, 6 AS depth, 91 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 95 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 6 AS depth, 94 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 97 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 7 AS depth, 96 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 98 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 7 AS depth, 96 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 101 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 6 AS depth, 100 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 103 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 7 AS depth, 102 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 104 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 7 AS depth, 102 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 106 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 8 AS count, 6 AS depth, 105 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 107 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 6 AS depth, 105 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 113 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 6 AS depth, 112 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 115 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 7 AS depth, 114 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 117 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 116 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 118 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 8 AS depth, 116 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 119 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 5 AS depth, 111 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 122 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 6 AS depth, 121 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 123 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 6 AS depth, 121 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 125 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 6 AS depth, 124 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 126 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 14 AS count, 6 AS depth, 124 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 128 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 4 AS depth, 127 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 129 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 4 AS depth, 127 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 134 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 6 AS depth, 133 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 135 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 9 AS count, 6 AS depth, 133 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 141 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 10 AS depth, 140 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 143 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 142 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 146 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 13 AS count, 13 AS depth, 145 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 147 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 13 AS depth, 145 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 148 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 12 AS depth, 144 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 150 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 10 AS depth, 149 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 152 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 7 AS count, 11 AS depth, 151 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 154 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 12 AS depth, 153 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 155 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 12 AS depth, 153 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 158 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 10 AS depth, 157 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 161 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 12 AS depth, 160 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 162 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 12 AS depth, 160 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 164 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 6 AS count, 12 AS depth, 163 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 166 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 13 AS depth, 165 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 168 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 14 AS depth, 167 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 169 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 14 AS depth, 167 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 172 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 11 AS depth, 171 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 174 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 12 AS depth, 173 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 175 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 12 AS depth, 173 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 176 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 9 AS count, 10 AS depth, 170 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 181 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 7 AS count, 11 AS depth, 180 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 182 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 180 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 184 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 183 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 185 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 11 AS depth, 183 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 189 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 12 AS depth, 188 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 190 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 12 AS depth, 188 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 192 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 6 AS count, 12 AS depth, 191 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 193 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 12 AS depth, 191 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 194 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 10 AS depth, 186 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 198 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 197 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 199 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 197 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 201 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 200 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 202 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 10 AS count, 11 AS depth, 200 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 206 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 12 AS depth, 205 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 209 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 14 AS depth, 208 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 212 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 16 AS depth, 211 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 214 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 17 AS depth, 213 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 215 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 17 AS depth, 213 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 216 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 20 AS count, 15 AS depth, 210 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 217 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 13 AS depth, 207 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 220 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 13 AS depth, 219 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 221 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 13 AS depth, 219 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 222 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 12 AS depth, 218 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 224 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 11 AS depth, 223 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 225 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 11 AS depth, 223 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 229 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 9 AS depth, 228 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 233 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 12 AS depth, 232 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 234 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 12 AS depth, 232 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 235 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 11 AS depth, 231 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 240 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 14 AS depth, 239 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 242 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 15 AS depth, 241 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 243 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 15 AS depth, 241 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 244 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 13 AS depth, 238 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 245 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 11 AS count, 12 AS depth, 237 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 247 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 12 AS depth, 246 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 248 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 12 AS depth, 246 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 251 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 10 AS depth, 250 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 252 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 10 AS depth, 250 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 256 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 17 AS count, 12 AS depth, 255 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 258 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 13 AS depth, 257 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 259 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 13 AS depth, 257 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 261 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 8 AS count, 12 AS depth, 260 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 264 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 14 AS depth, 263 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 265 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 14 AS depth, 263 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 267 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 14 AS depth, 266 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 269 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 15 AS depth, 268 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 270 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 15 AS depth, 268 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 272 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 11 AS depth, 271 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 273 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 11 AS depth, 271 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 278 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 277 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 279 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 11 AS depth, 277 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 281 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 280 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 282 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 6 AS count, 11 AS depth, 280 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 286 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 12 AS depth, 285 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 287 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 12 AS depth, 285 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 288 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 9 AS count, 11 AS depth, 284 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 290 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 11 AS depth, 289 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 291 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 289 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 294 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 9 AS count, 10 AS depth, 293 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 295 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 10 AS depth, 293 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 298 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 297 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 299 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 297 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 300 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 10 AS depth, 296 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 304 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 14 AS count, 7 AS depth, 303 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 305 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 7 AS depth, 303 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 307 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 7 AS depth, 306 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 308 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 7 AS depth, 306 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 309 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 5 AS depth, 301 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 313 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 14 AS count, 6 AS depth, 312 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 314 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 6 AS depth, 312 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 316 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 6 AS depth, 315 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 318 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 7 AS depth, 317 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 319 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 7 AS depth, 317 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 321 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 5 AS depth, 320 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 323 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 6 AS depth, 322 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 324 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 6 AS depth, 322 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL) "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".node_id AS node_id, "DT_node_data".feature AS feature, "DT_node_data".threshold AS threshold, "DT_node_data".count AS count, "DT_node_data".depth AS depth, "DT_node_data".parent_id AS parent_id, "DT_node_data"."Proba_0.0" AS "Proba_0.0", "DT_node_data"."LogProba_0.0" AS "LogProba_0.0", "DT_node_data"."Proba_1.0" AS "Proba_1.0", "DT_node_data"."LogProba_1.0" AS "LogProba_1.0", "DT_node_data"."Proba_2.0" AS "Proba_2.0", "DT_node_data"."LogProba_2.0" AS "LogProba_2.0", "DT_node_data"."Proba_3.0" AS "Proba_3.0", "DT_node_data"."LogProba_3.0" AS "LogProba_3.0", "DT_node_data"."Decision" AS "Decision", "DT_node_data"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".node_id), 
"RF_Tree_0" AS 
(SELECT "DT_Output"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output"."Proba_0.0" AS "Proba_0", "DT_Output"."LogProba_0.0" AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output"."Proba_1.0" AS "Proba_1", "DT_Output"."LogProba_1.0" AS "LogProba_1", CAST(NULL AS BINARY_DOUBLE) AS "Score_2", "DT_Output"."Proba_2.0" AS "Proba_2", "DT_Output"."LogProba_2.0" AS "LogProba_2", CAST(NULL AS BINARY_DOUBLE) AS "Score_3", "DT_Output"."Proba_3.0" AS "Proba_3", "DT_Output"."LogProba_3.0" AS "LogProba_3" 
FROM "DT_Output"), 
"DT_node_lookup_1" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_288 <= 0.34544938802719116) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_379 <= -1.1730434894561768) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_382 <= 0.37928497791290283) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_70 <= 0.04885144531726837) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_144 <= 1.1197292804718018) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_353 <= 1.028476595878601) THEN 6 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_443 <= 0.022697225213050842) THEN 8 ELSE 9 END END ELSE 10 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_359 <= 0.07350088655948639) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_474 <= -1.3531739711761475) THEN 13 ELSE 14 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_200 <= 0.28775402903556824) THEN 16 ELSE 17 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_296 <= 0.21744416654109955) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_303 <= 0.5773380398750305) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_67 <= -0.447293758392334) THEN 21 ELSE 22 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_294 <= 1.0407459735870361) THEN 24 ELSE 25 END END ELSE 26 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= -1.6113972663879395) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_22 <= -0.8363956212997437) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_262 <= 0.5468714237213135) THEN 30 ELSE 31 END ELSE 32 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_290 <= 0.9233922958374023) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_254 <= 0.3264138698577881) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_324 <= 0.9967409372329712) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_275 <= -0.8129400014877319) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_141 <= 0.0664818063378334) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_298 <= 0.6369675397872925) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_299 <= 1.150172472000122) THEN 40 ELSE 41 END ELSE 42 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_400 <= 1.5617561340332031) THEN 44 ELSE 45 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_207 <= 0.14632892608642578) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= 1.5622961521148682) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_190 <= -0.8421546220779419) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_40 <= 0.32311978936195374) THEN 50 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_438 <= 0.056690514087677) THEN 52 ELSE 53 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_370 <= -1.2531263828277588) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_99 <= -0.366253525018692) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_195 <= -0.635234534740448) THEN 57 ELSE 58 END ELSE 59 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_101 <= 1.7976137399673462) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_340 <= -1.0442068576812744) THEN 62 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_216 <= -2.3692851066589355) THEN 64 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_437 <= -1.9364399909973145) THEN 66 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_456 <= 1.1524877548217773) THEN 68 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_233 <= -0.7002749443054199) THEN 70 ELSE 71 END END END END END ELSE 72 END END END ELSE 73 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_43 <= 0.27769964933395386) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_501 <= -0.4923586845397949) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_338 <= -0.306960791349411) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_240 <= 0.6949681043624878) THEN 78 ELSE 79 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_406 <= 1.3566243648529053) THEN 81 ELSE 82 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_30 <= -0.7766379714012146) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_501 <= 0.7031118869781494) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_436 <= -0.6854205131530762) THEN 86 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_431 <= -0.29098251461982727) THEN 88 ELSE 89 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_318 <= 0.6180080771446228) THEN 91 ELSE 92 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_488 <= -1.5995843410491943) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_358 <= -0.8645001649856567) THEN 95 ELSE 96 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_418 <= -1.3505125045776367) THEN 98 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_282 <= 2.936525344848633) THEN 100 ELSE 101 END END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_334 <= 1.629823923110962) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_148 <= -0.8044633865356445) THEN 104 ELSE 105 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_309 <= 1.2368745803833008) THEN 107 ELSE 108 END END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_59 <= 0.09621273726224899) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_240 <= -0.67577064037323) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_54 <= -1.0576446056365967) THEN 112 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_105 <= -0.7639716267585754) THEN 114 ELSE 115 END END ELSE 116 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_377 <= 0.8441014289855957) THEN 118 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_225 <= 0.12234189361333847) THEN 120 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_458 <= 0.6305761337280273) THEN 122 ELSE 123 END END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_424 <= -0.8619332313537598) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_479 <= 0.20835724472999573) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_325 <= -0.4101187586784363) THEN 127 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_292 <= 0.8275667428970337) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= 0.1194603443145752) THEN 130 ELSE 131 END ELSE 132 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_285 <= -1.486746072769165) THEN 134 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_128 <= -1.3681875467300415) THEN 136 ELSE 137 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_102 <= -0.21251772344112396) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_33 <= -0.46711695194244385) THEN 140 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= -0.3872426152229309) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_162 <= -0.7468522191047668) THEN 143 ELSE 144 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_385 <= 1.256962776184082) THEN 146 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_228 <= -0.7201303839683533) THEN 148 ELSE 149 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_385 <= -1.266028881072998) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_363 <= -0.21519720554351807) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_137 <= -0.8856675028800964) THEN 153 ELSE 154 END ELSE 155 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_303 <= 0.5584038496017456) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_201 <= 1.1591734886169434) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_394 <= 0.30079132318496704) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_54 <= 0.7500413656234741) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_139 <= 0.9758405685424805) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_158 <= -0.2966780662536621) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_113 <= -0.047376081347465515) THEN 163 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_206 <= -0.630376935005188) THEN 165 ELSE 166 END END ELSE 167 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_72 <= 0.4349607229232788) THEN 169 ELSE 170 END END ELSE 171 END ELSE 172 END ELSE 173 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_76 <= 0.8648926019668579) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_324 <= -0.06780272722244263) THEN 176 ELSE 177 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_28 <= 0.28671690821647644) THEN 179 ELSE 180 END END END END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_299 <= 0.9949093461036682) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_340 <= -0.5817251801490784) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_213 <= -1.4380922317504883) THEN 184 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_221 <= -0.23637360334396362) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_157 <= 0.5948125123977661) THEN 187 ELSE 188 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_51 <= 0.211870014667511) THEN 190 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_361 <= 0.24014900624752045) THEN 192 ELSE 193 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_126 <= -0.8059547543525696) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_317 <= 0.29136574268341064) THEN 196 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_338 <= 0.3874298632144928) THEN 198 ELSE 199 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_407 <= -1.1887104511260986) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_321 <= -0.124447762966156) THEN 202 ELSE 203 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_123 <= 1.3667981624603271) THEN 205 ELSE 206 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_74 <= 0.6771762371063232) THEN 208 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_387 <= 0.4134106934070587) THEN 210 ELSE 211 END END END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_141 <= -0.5801854133605957) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_291 <= -0.740132212638855) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_69 <= 0.20340844988822937) THEN 215 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_95 <= -1.8103325366973877) THEN 217 ELSE 218 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_12 <= 1.7360525131225586) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_448 <= -0.6981319189071655) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_88 <= 1.3777718544006348) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_122 <= 0.3820613920688629) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_48 <= 0.036391496658325195) THEN 224 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= 0.5655127763748169) THEN 226 ELSE 227 END END ELSE 228 END ELSE 229 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_104 <= -1.3342127799987793) THEN 231 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_399 <= -1.2497484683990479) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_265 <= -1.4778525829315186) THEN 234 ELSE 235 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_195 <= -1.456925392150879) THEN 237 ELSE 238 END END END END ELSE 239 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_432 <= -0.2594435513019562) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_115 <= -0.509994626045227) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_494 <= -0.4004765450954437) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_446 <= -0.46421927213668823) THEN 244 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_379 <= -1.0773979425430298) THEN 246 ELSE 247 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_169 <= -0.8397154808044434) THEN 249 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_369 <= 2.167553186416626) THEN 251 ELSE 252 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_208 <= -0.4710473418235779) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_125 <= 0.1139853447675705) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_243 <= 0.893721342086792) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_405 <= 0.592582106590271) THEN 257 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_300 <= -0.41743403673171997) THEN 259 ELSE 260 END END ELSE 261 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_359 <= 0.11547985672950745) THEN 263 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_53 <= -1.1197612285614014) THEN 265 ELSE 266 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_308 <= 0.6850185394287109) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_373 <= -0.7946799993515015) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_267 <= 0.6151082515716553) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_447 <= 0.8145010471343994) THEN 271 ELSE 272 END ELSE 273 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_190 <= -1.7199246883392334) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_246 <= 0.4339503049850464) THEN 276 ELSE 277 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_18 <= -1.432500958442688) THEN 279 ELSE 280 END END END ELSE 281 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_478 <= -1.1176846027374268) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_321 <= -0.6243691444396973) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_286 <= -0.7482215762138367) THEN 285 ELSE 286 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_141 <= 1.6071935892105103) THEN 288 ELSE 289 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_483 <= -0.5592159032821655) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_129 <= -0.7349776029586792) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= 0.8059394955635071) THEN 293 ELSE 294 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_206 <= 1.526076078414917) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_288 <= 0.4028754234313965) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_188 <= -0.016686424612998962) THEN 298 ELSE 299 END ELSE 300 END ELSE 301 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_47 <= -0.7776342034339905) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_260 <= -0.5581495761871338) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_120 <= -0.8678699731826782) THEN 305 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_279 <= -0.7981917262077332) THEN 307 ELSE 308 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_168 <= -0.4502665400505066) THEN 310 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_292 <= 2.3162384033203125) THEN 312 ELSE 313 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_261 <= 0.5328731536865234) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_106 <= 0.21415075659751892) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_256 <= -0.21100470423698425) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_358 <= -0.5085450410842896) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_191 <= 0.901383638381958) THEN 319 ELSE 320 END ELSE 321 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_83 <= 0.1480349600315094) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_107 <= -0.4080338776111603) THEN 324 ELSE 325 END ELSE 326 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_286 <= -1.2682925462722778) THEN 328 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_290 <= 0.8201961517333984) THEN 330 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_64 <= 0.2850859761238098) THEN 332 ELSE 333 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_105 <= -0.9151630401611328) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_106 <= 0.8199578523635864) THEN 336 ELSE 337 END ELSE 338 END END END END END END END END AS node_id_2 
FROM "33421_53X5V4_ADS_SCA_2_OUT" "ADS_sca_2_OUT"), 
"DT_node_data_1" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0.0" AS "Proba_0.0", "Values"."LogProba_0.0" AS "LogProba_0.0", "Values"."Proba_1.0" AS "Proba_1.0", "Values"."LogProba_1.0" AS "LogProba_1.0", "Values"."Proba_2.0" AS "Proba_2.0", "Values"."LogProba_2.0" AS "LogProba_2.0", "Values"."Proba_3.0" AS "Proba_3.0", "Values"."LogProba_3.0" AS "LogProba_3.0", "Values"."Decision" AS "Decision", "Values"."DecisionProba" AS "DecisionProba" 
FROM (SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 12 AS count, 6 AS depth, 5 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 7 AS depth, 7 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 7 AS depth, 7 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 5 AS depth, 4 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 6 AS depth, 12 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 6 AS depth, 12 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 6 AS depth, 15 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 6 AS depth, 15 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 6 AS depth, 20 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 6 AS depth, 20 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 6 AS depth, 23 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 6 AS depth, 23 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 6 AS count, 4 AS depth, 18 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 5 AS depth, 29 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 31 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 5 AS depth, 29 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 32 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 9 AS count, 4 AS depth, 28 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 40 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 7 AS count, 10 AS depth, 39 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 41 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 10 AS depth, 39 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 42 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 9 AS depth, 38 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 44 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 8 AS count, 9 AS depth, 43 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 45 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 43 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 50 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 11 AS depth, 49 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 52 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 12 AS depth, 51 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 53 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 12 AS depth, 51 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 57 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 13 AS depth, 56 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 58 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 13 AS depth, 56 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 59 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 12 AS depth, 55 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 62 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 13 AS depth, 61 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 64 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 14 AS depth, 63 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 66 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 15 AS depth, 65 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 68 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 27 AS count, 16 AS depth, 67 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 70 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 17 AS depth, 69 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 71 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 17 AS depth, 69 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 72 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 12 AS depth, 60 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 73 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 9 AS depth, 47 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 78 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 12 AS depth, 77 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 79 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 12 AS depth, 77 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 81 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 7 AS count, 12 AS depth, 80 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 82 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 12 AS depth, 80 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 86 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 13 AS depth, 85 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 88 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 14 AS depth, 87 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 89 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 14 AS depth, 87 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 91 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 13 AS depth, 90 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 92 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 13 AS depth, 90 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 95 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 13 AS depth, 94 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 96 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 13 AS depth, 94 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 98 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 13 AS depth, 97 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 100 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 15 AS count, 14 AS depth, 99 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 101 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 14 AS depth, 99 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 104 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 103 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 105 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 6 AS count, 11 AS depth, 103 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 107 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 106 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 108 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 106 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 112 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 111 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 114 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 113 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 115 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 113 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 116 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 8 AS depth, 110 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 118 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 9 AS count, 8 AS depth, 117 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 120 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 9 AS depth, 119 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 122 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 121 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 123 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 121 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 127 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 8 AS depth, 126 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 130 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 10 AS depth, 129 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 131 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 129 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 132 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 128 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 134 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 133 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 136 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 135 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 137 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 9 AS count, 9 AS depth, 135 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 140 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 7 AS count, 8 AS depth, 139 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 143 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 142 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 144 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 10 AS depth, 142 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 146 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 10 AS depth, 145 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 148 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 147 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 149 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 147 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 153 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 152 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 154 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 152 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 155 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 9 AS depth, 151 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 163 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 15 AS depth, 162 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 165 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 16 AS depth, 164 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 166 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 16 AS depth, 164 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 167 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 14 AS depth, 161 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 169 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 14 AS depth, 168 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 170 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 14 AS depth, 168 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 171 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 12 AS depth, 159 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 172 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 8 AS count, 11 AS depth, 158 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 173 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 10 AS depth, 157 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 176 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 11 AS depth, 175 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 177 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 7 AS count, 11 AS depth, 175 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 179 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 178 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 180 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 178 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 184 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 7 AS depth, 183 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 187 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 9 AS depth, 186 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 188 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 186 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 190 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 9 AS depth, 189 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 192 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 10 AS depth, 191 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 193 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 191 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 196 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 8 AS depth, 195 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 198 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 197 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 199 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 197 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 202 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 201 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 203 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 201 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 205 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 13 AS count, 9 AS depth, 204 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 206 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 204 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 208 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 10 AS count, 6 AS depth, 207 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 210 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 7 AS depth, 209 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 211 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 7 AS depth, 209 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 215 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 4 AS depth, 214 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 217 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 5 AS depth, 216 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 218 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 5 AS depth, 216 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 224 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 8 AS depth, 223 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 226 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 225 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 227 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 225 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 228 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 7 AS depth, 222 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 229 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 6 AS depth, 221 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 231 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 6 AS depth, 230 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 234 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 233 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 235 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 8 AS depth, 233 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 237 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 8 AS depth, 236 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 238 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 19 AS count, 8 AS depth, 236 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 239 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 4 AS depth, 219 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 244 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 6 AS depth, 243 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 246 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 7 AS depth, 245 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 247 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 7 AS depth, 245 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 249 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 6 AS depth, 248 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 251 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 7 AS count, 7 AS depth, 250 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 252 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 7 AS depth, 250 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 257 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 8 AS depth, 256 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 259 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 9 AS depth, 258 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 260 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 258 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 261 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 7 AS depth, 255 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 263 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 6 AS count, 7 AS depth, 262 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 265 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 264 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 266 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 8 AS depth, 264 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 271 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 270 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 272 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 270 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 273 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 8 AS depth, 269 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 276 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 275 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 277 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 275 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 279 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 278 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 280 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 15 AS count, 9 AS depth, 278 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 281 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 6 AS depth, 267 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 285 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 6 AS depth, 284 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 286 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 6 AS depth, 284 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 288 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 6 AS count, 6 AS depth, 287 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 289 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 6 AS depth, 287 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 293 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 7 AS depth, 292 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 294 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 7 AS depth, 292 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 298 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 297 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 299 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 297 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 300 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 15 AS count, 8 AS depth, 296 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 301 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 7 AS depth, 295 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 305 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 8 AS depth, 304 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 307 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 306 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 308 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 306 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 310 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 309 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 312 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 9 AS count, 9 AS depth, 311 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 313 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 311 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 319 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 318 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 320 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 318 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 321 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 10 AS depth, 317 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 324 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 11 AS depth, 323 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 325 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 11 AS depth, 323 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 326 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 10 AS depth, 322 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 328 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 9 AS depth, 327 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 330 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 11 AS count, 10 AS depth, 329 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 332 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 331 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 333 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 331 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 336 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 335 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 337 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 335 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 338 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 6 AS count, 8 AS depth, 334 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL) "Values"), 
"DT_Output_1" AS 
(SELECT "DT_node_lookup_1"."KEY" AS "KEY", "DT_node_lookup_1".node_id_2 AS node_id_2, "DT_node_data_1".node_id AS node_id, "DT_node_data_1".feature AS feature, "DT_node_data_1".threshold AS threshold, "DT_node_data_1".count AS count, "DT_node_data_1".depth AS depth, "DT_node_data_1".parent_id AS parent_id, "DT_node_data_1"."Proba_0.0" AS "Proba_0.0", "DT_node_data_1"."LogProba_0.0" AS "LogProba_0.0", "DT_node_data_1"."Proba_1.0" AS "Proba_1.0", "DT_node_data_1"."LogProba_1.0" AS "LogProba_1.0", "DT_node_data_1"."Proba_2.0" AS "Proba_2.0", "DT_node_data_1"."LogProba_2.0" AS "LogProba_2.0", "DT_node_data_1"."Proba_3.0" AS "Proba_3.0", "DT_node_data_1"."LogProba_3.0" AS "LogProba_3.0", "DT_node_data_1"."Decision" AS "Decision", "DT_node_data_1"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup_1" LEFT OUTER JOIN "DT_node_data_1" ON "DT_node_lookup_1".node_id_2 = "DT_node_data_1".node_id), 
"RF_Tree_1" AS 
(SELECT "DT_Output_1"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output_1"."Proba_0.0" AS "Proba_0", "DT_Output_1"."LogProba_0.0" AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output_1"."Proba_1.0" AS "Proba_1", "DT_Output_1"."LogProba_1.0" AS "LogProba_1", CAST(NULL AS BINARY_DOUBLE) AS "Score_2", "DT_Output_1"."Proba_2.0" AS "Proba_2", "DT_Output_1"."LogProba_2.0" AS "LogProba_2", CAST(NULL AS BINARY_DOUBLE) AS "Score_3", "DT_Output_1"."Proba_3.0" AS "Proba_3", "DT_Output_1"."LogProba_3.0" AS "LogProba_3" 
FROM "DT_Output_1"), 
"DT_node_lookup_2" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_270 <= 1.3983489274978638) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_181 <= -0.5880136489868164) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_212 <= -1.2021949291229248) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_195 <= 0.15727432072162628) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_215 <= -0.6636314392089844) THEN 5 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_157 <= -0.3858437240123749) THEN 7 ELSE 8 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_354 <= 0.7569975852966309) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_268 <= -1.5913032293319702) THEN 11 ELSE 12 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_249 <= -0.26783573627471924) THEN 14 ELSE 15 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_251 <= 0.2869185209274292) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 1.233985185623169) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_474 <= -0.8258899450302124) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_244 <= -0.008494846522808075) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= 1.0031096935272217) THEN 21 ELSE 22 END ELSE 23 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_121 <= 1.3043760061264038) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_366 <= 0.4207618832588196) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_295 <= 1.1730400323867798) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_418 <= -1.799219012260437) THEN 28 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= 1.2192237377166748) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_414 <= -1.7041516304016113) THEN 31 ELSE 32 END ELSE 33 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_108 <= -0.6309404373168945) THEN 35 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_259 <= 1.0396442413330078) THEN 37 ELSE 38 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_143 <= -0.046277739107608795) THEN 40 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_376 <= -1.1196014881134033) THEN 42 ELSE 43 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_216 <= -0.9308413863182068) THEN 45 ELSE 46 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_196 <= -0.8514260649681091) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_459 <= 0.5131642818450928) THEN 49 ELSE 50 END ELSE 51 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_246 <= 0.11057563126087189) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_12 <= -0.19154633581638336) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_140 <= 0.974663496017456) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_46 <= 0.4150838553905487) THEN 56 ELSE 57 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_242 <= 0.6555841565132141) THEN 59 ELSE 60 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_320 <= 1.8543415069580078) THEN 62 ELSE 63 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_424 <= 0.1173950582742691) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_371 <= 0.8077558279037476) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_13 <= 0.9398651123046875) THEN 67 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_313 <= -0.5687111020088196) THEN 69 ELSE 70 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_56 <= 0.13857139647006989) THEN 72 ELSE 73 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_102 <= 0.9151791930198669) THEN 75 ELSE 76 END END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_268 <= 0.5263917446136475) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_474 <= -1.3491952419281006) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_198 <= 0.9018596410751343) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_54 <= 1.2647969722747803) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_473 <= -2.5793845653533936) THEN 82 ELSE 83 END ELSE 84 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_34 <= -0.23508214950561523) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_117 <= 0.3636365234851837) THEN 87 ELSE 88 END ELSE 89 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_66 <= -1.404356837272644) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_267 <= 0.2172672152519226) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_40 <= -0.5251907706260681) THEN 93 ELSE 94 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_260 <= -0.26176995038986206) THEN 96 ELSE 97 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_499 <= 0.7038230895996094) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_51 <= -0.9615516662597656) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_84 <= -2.0294156074523926) THEN 101 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= -1.352327823638916) THEN 103 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_68 <= -0.5484691858291626) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_182 <= -0.07417658716440201) THEN 106 ELSE 107 END ELSE 108 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_93 <= 0.36247047781944275) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_375 <= -0.4743354618549347) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_464 <= 0.39207273721694946) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_468 <= 0.02806086279451847) THEN 113 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_479 <= 0.9648115634918213) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_92 <= -2.0463595390319824) THEN 116 ELSE 117 END ELSE 118 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_324 <= -0.6854984760284424) THEN 120 ELSE 121 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_438 <= -1.5072038173675537) THEN 123 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_62 <= -0.10421761870384216) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_386 <= -0.2122209072113037) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_248 <= 0.5666210651397705) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_103 <= 0.5311464071273804) THEN 128 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_87 <= 0.5919129848480225) THEN 130 ELSE 131 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_437 <= -0.38060349225997925) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_418 <= -0.9094851016998291) THEN 134 ELSE 135 END ELSE 136 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_350 <= -0.5048306584358215) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_236 <= 0.6972591876983643) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_124 <= -1.5375546216964722) THEN 140 ELSE 141 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_203 <= -0.20759257674217224) THEN 143 ELSE 144 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_463 <= -0.21300122141838074) THEN 146 ELSE 147 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_468 <= -0.7947773933410645) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= 0.051134929060935974) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_425 <= 1.2427524328231812) THEN 151 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_147 <= -0.27139517664909363) THEN 153 ELSE 154 END END ELSE 155 END ELSE 156 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_389 <= 0.2249358594417572) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_247 <= -0.06848414987325668) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_67 <= 0.07383795082569122) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_194 <= -0.4250118136405945) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_390 <= -0.08721429109573364) THEN 162 ELSE 163 END ELSE 164 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_141 <= 1.003706693649292) THEN 166 ELSE 167 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_68 <= -1.9954521656036377) THEN 169 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_436 <= 1.203189492225647) THEN 171 ELSE 172 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_209 <= 0.5380306839942932) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_387 <= 0.40067312121391296) THEN 175 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_403 <= 0.6720097661018372) THEN 177 ELSE 178 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_409 <= 0.5633476972579956) THEN 180 ELSE 181 END END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_283 <= -0.22333338856697083) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_421 <= 1.2142479419708252) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_127 <= -0.8200616836547852) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_21 <= -0.4534163475036621) THEN 186 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_241 <= -0.6599469780921936) THEN 188 ELSE 189 END END ELSE 190 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_84 <= 0.2368936836719513) THEN 192 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_75 <= 0.5089453458786011) THEN 194 ELSE 195 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_373 <= -1.3260414600372314) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_496 <= -0.8532087802886963) THEN 198 ELSE 199 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_27 <= 0.0653115063905716) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_307 <= 0.14153775572776794) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_202 <= -0.23033379018306732) THEN 203 ELSE 204 END ELSE 205 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_416 <= -0.6887335777282715) THEN 207 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_87 <= 0.417095422744751) THEN 209 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_146 <= 0.1271662414073944) THEN 211 ELSE 212 END END END END END END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_367 <= -0.007119010668247938) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_404 <= -0.42238742113113403) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_444 <= 1.534952163696289) THEN 216 ELSE 217 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_354 <= 0.9352742433547974) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_424 <= 0.36222249269485474) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_116 <= 0.6924014091491699) THEN 221 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_157 <= 0.02338472753763199) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_376 <= -0.3360450565814972) THEN 224 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_23 <= 0.3123329281806946) THEN 226 ELSE 227 END END ELSE 228 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_211 <= -0.49544191360473633) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_340 <= -0.4901217818260193) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_279 <= 0.1820077896118164) THEN 232 ELSE 233 END ELSE 234 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_343 <= 0.45958995819091797) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_143 <= 0.3910611867904663) THEN 237 ELSE 238 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_62 <= 0.9175897240638733) THEN 240 ELSE 241 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_122 <= -0.7304436564445496) THEN 243 ELSE 244 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_326 <= 0.3933141827583313) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_416 <= -0.17139115929603577) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_278 <= -0.30227720737457275) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_16 <= 0.5612253546714783) THEN 249 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_62 <= -0.6498245596885681) THEN 251 ELSE 252 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_120 <= -0.5367094874382019) THEN 254 ELSE 255 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_491 <= 1.3047105073928833) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_340 <= 0.8895832896232605) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_140 <= -0.9175360202789307) THEN 259 ELSE 260 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_193 <= 0.4880411624908447) THEN 262 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_133 <= 1.399757742881775) THEN 264 ELSE 265 END END END ELSE 266 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_368 <= -0.8912218809127808) THEN 268 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_331 <= -0.8001868724822998) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_345 <= 0.4289481043815613) THEN 271 ELSE 272 END ELSE 273 END END END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_189 <= 1.6149647235870361) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= -0.2537803053855896) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_69 <= -0.6710381507873535) THEN 277 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_194 <= 0.20080548524856567) THEN 279 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_210 <= 0.27594277262687683) THEN 281 ELSE 282 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_157 <= -2.4422903060913086) THEN 284 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_65 <= -0.9307714104652405) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_397 <= -0.27562424540519714) THEN 287 ELSE 288 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_336 <= 1.2909388542175293) THEN 290 ELSE 291 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_496 <= -0.7540682554244995) THEN 293 ELSE 294 END END END AS node_id_2 
FROM "33421_53X5V4_ADS_SCA_2_OUT" "ADS_sca_2_OUT"), 
"DT_node_data_2" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0.0" AS "Proba_0.0", "Values"."LogProba_0.0" AS "LogProba_0.0", "Values"."Proba_1.0" AS "Proba_1.0", "Values"."LogProba_1.0" AS "LogProba_1.0", "Values"."Proba_2.0" AS "Proba_2.0", "Values"."LogProba_2.0" AS "LogProba_2.0", "Values"."Proba_3.0" AS "Proba_3.0", "Values"."LogProba_3.0" AS "LogProba_3.0", "Values"."Decision" AS "Decision", "Values"."DecisionProba" AS "DecisionProba" 
FROM (SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 5 AS depth, 4 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 6 AS depth, 6 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 6 AS depth, 6 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 6 AS depth, 10 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 12 AS count, 6 AS depth, 10 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 6 AS depth, 13 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 6 AS depth, 13 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 8 AS depth, 20 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 8 AS depth, 20 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 7 AS depth, 19 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 28 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 27 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 31 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 12 AS depth, 30 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 32 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 18 AS count, 12 AS depth, 30 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 33 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 29 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 35 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 34 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 37 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 36 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 38 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 36 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 40 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 6 AS count, 9 AS depth, 39 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 42 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 10 AS depth, 41 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 43 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 41 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 45 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 44 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 46 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 8 AS depth, 44 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 49 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 7 AS depth, 48 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 50 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 7 AS depth, 48 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 51 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 6 AS depth, 47 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 56 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 6 AS count, 8 AS depth, 55 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 57 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 8 AS depth, 55 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 59 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 8 AS depth, 58 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 60 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 58 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 62 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 11 AS count, 7 AS depth, 61 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 63 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 7 AS depth, 61 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 67 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 7 AS count, 8 AS depth, 66 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 69 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 68 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 70 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 68 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 72 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 8 AS depth, 71 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 73 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 8 AS depth, 71 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 75 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 7 AS count, 7 AS depth, 74 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 76 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 7 AS depth, 74 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 82 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 7 AS depth, 81 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 83 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 17 AS count, 7 AS depth, 81 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 84 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 6 AS depth, 80 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 87 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 7 AS depth, 86 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 88 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 7 AS depth, 86 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 89 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 6 AS depth, 85 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 93 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 7 AS depth, 92 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 94 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 7 AS depth, 92 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 96 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 7 AS depth, 95 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 97 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 6 AS count, 7 AS depth, 95 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 101 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 100 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 103 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 9 AS depth, 102 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 106 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 105 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 107 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 11 AS depth, 105 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 108 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 12 AS count, 10 AS depth, 104 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 113 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 11 AS depth, 112 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 116 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 13 AS depth, 115 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 117 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 9 AS count, 13 AS depth, 115 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 118 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 12 AS depth, 114 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 120 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 119 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 121 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 11 AS depth, 119 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 123 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 10 AS depth, 122 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 128 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 6 AS count, 14 AS depth, 127 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 130 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 15 AS depth, 129 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 131 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 15 AS depth, 129 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 134 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 15 AS depth, 133 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 135 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 15 AS depth, 133 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 136 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 14 AS depth, 132 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 140 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 15 AS depth, 139 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 141 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 6 AS count, 15 AS depth, 139 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 143 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 15 AS depth, 142 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 144 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 15 AS depth, 142 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 146 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 14 AS depth, 145 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 147 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 14 AS depth, 145 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 151 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 14 AS depth, 150 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 153 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 15 AS depth, 152 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 154 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 15 AS depth, 152 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 155 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 13 AS depth, 149 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 156 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 19 AS count, 12 AS depth, 148 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 162 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 13 AS depth, 161 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 163 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 13 AS depth, 161 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 164 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 12 AS depth, 160 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 166 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 12 AS depth, 165 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 167 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 12 AS depth, 165 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 169 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 11 AS depth, 168 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 171 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 15 AS count, 12 AS depth, 170 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 172 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 12 AS depth, 170 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 175 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 11 AS depth, 174 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 177 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 12 AS depth, 176 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 178 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 12 AS depth, 176 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 180 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 11 AS depth, 179 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 181 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 11 AS depth, 179 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 186 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 10 AS depth, 185 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 188 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 187 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 189 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 11 AS depth, 187 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 190 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 18 AS count, 9 AS depth, 184 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 192 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 191 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 194 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 193 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 195 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 193 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 198 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 197 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 199 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 9 AS depth, 197 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 203 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 202 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 204 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 202 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 205 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 6 AS count, 10 AS depth, 201 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 207 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 10 AS depth, 206 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 209 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 11 AS depth, 208 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 211 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 12 AS depth, 210 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 212 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 12 AS depth, 210 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 216 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 13 AS count, 6 AS depth, 215 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 217 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 6 AS depth, 215 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 221 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 10 AS count, 8 AS depth, 220 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 224 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 223 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 226 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 11 AS depth, 225 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 227 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 225 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 228 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 9 AS depth, 222 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 232 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 231 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 233 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 231 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 234 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 9 AS depth, 230 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 237 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 7 AS count, 10 AS depth, 236 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 238 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 236 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 240 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 10 AS depth, 239 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 241 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 239 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 243 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 7 AS depth, 242 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 244 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 7 AS depth, 242 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 249 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 8 AS depth, 248 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 251 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 250 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 252 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 250 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 254 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 253 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 255 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 8 AS depth, 253 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 259 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 258 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 260 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 15 AS count, 9 AS depth, 258 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 262 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 9 AS depth, 261 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 264 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 263 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 265 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 263 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 266 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 7 AS depth, 256 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 268 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 6 AS depth, 267 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 271 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 8 AS depth, 270 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 272 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 270 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 273 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 10 AS count, 7 AS depth, 269 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 277 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 4 AS depth, 276 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 279 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 5 AS depth, 278 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 281 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 6 AS depth, 280 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 282 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 6 AS depth, 280 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 284 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 4 AS depth, 283 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 287 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 6 AS depth, 286 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 288 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 6 AS depth, 286 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 290 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 17 AS count, 6 AS depth, 289 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 291 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 6 AS depth, 289 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 293 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 3 AS depth, 292 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 294 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 3 AS depth, 292 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL) "Values"), 
"DT_Output_2" AS 
(SELECT "DT_node_lookup_2"."KEY" AS "KEY", "DT_node_lookup_2".node_id_2 AS node_id_2, "DT_node_data_2".node_id AS node_id, "DT_node_data_2".feature AS feature, "DT_node_data_2".threshold AS threshold, "DT_node_data_2".count AS count, "DT_node_data_2".depth AS depth, "DT_node_data_2".parent_id AS parent_id, "DT_node_data_2"."Proba_0.0" AS "Proba_0.0", "DT_node_data_2"."LogProba_0.0" AS "LogProba_0.0", "DT_node_data_2"."Proba_1.0" AS "Proba_1.0", "DT_node_data_2"."LogProba_1.0" AS "LogProba_1.0", "DT_node_data_2"."Proba_2.0" AS "Proba_2.0", "DT_node_data_2"."LogProba_2.0" AS "LogProba_2.0", "DT_node_data_2"."Proba_3.0" AS "Proba_3.0", "DT_node_data_2"."LogProba_3.0" AS "LogProba_3.0", "DT_node_data_2"."Decision" AS "Decision", "DT_node_data_2"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup_2" LEFT OUTER JOIN "DT_node_data_2" ON "DT_node_lookup_2".node_id_2 = "DT_node_data_2".node_id), 
"RF_Tree_2" AS 
(SELECT "DT_Output_2"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output_2"."Proba_0.0" AS "Proba_0", "DT_Output_2"."LogProba_0.0" AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output_2"."Proba_1.0" AS "Proba_1", "DT_Output_2"."LogProba_1.0" AS "LogProba_1", CAST(NULL AS BINARY_DOUBLE) AS "Score_2", "DT_Output_2"."Proba_2.0" AS "Proba_2", "DT_Output_2"."LogProba_2.0" AS "LogProba_2", CAST(NULL AS BINARY_DOUBLE) AS "Score_3", "DT_Output_2"."Proba_3.0" AS "Proba_3", "DT_Output_2"."LogProba_3.0" AS "LogProba_3" 
FROM "DT_Output_2"), 
"DT_node_lookup_3" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_230 <= 0.21422600746154785) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_211 <= 0.463738352060318) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_340 <= -0.577174723148346) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_190 <= -1.9807813167572021) THEN 4 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_108 <= 0.38273152709007263) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_480 <= 0.9407308101654053) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_106 <= 0.9195051193237305) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_287 <= -0.307934045791626) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_215 <= -0.5969894528388977) THEN 10 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_257 <= -0.7215211391448975) THEN 12 ELSE 13 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_435 <= -0.887244462966919) THEN 15 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_311 <= 1.0005055665969849) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_303 <= 1.9994449615478516) THEN 18 ELSE 19 END ELSE 20 END END END ELSE 21 END ELSE 22 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_155 <= 2.5908379554748535) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_74 <= -1.22955322265625) THEN 25 ELSE 26 END ELSE 27 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_472 <= -0.6378240585327148) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_235 <= -1.2031333446502686) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_175 <= -0.6765885353088379) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_284 <= -1.0574589967727661) THEN 32 ELSE 33 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_118 <= -0.3647267818450928) THEN 35 ELSE 36 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_418 <= -1.22282075881958) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_444 <= 0.029739663004875183) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_171 <= 0.24723082780838013) THEN 40 ELSE 41 END ELSE 42 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_70 <= 0.19274699687957764) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_302 <= -1.2083191871643066) THEN 45 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_57 <= 0.6656416654586792) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_373 <= -1.1728923320770264) THEN 48 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_145 <= -1.8013989925384521) THEN 50 ELSE 51 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_131 <= 0.022412940859794617) THEN 53 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_423 <= 0.05630040168762207) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_196 <= -0.41204431653022766) THEN 56 ELSE 57 END ELSE 58 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_429 <= -0.3716493546962738) THEN 60 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_229 <= -0.0861799418926239) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_449 <= 0.9351105093955994) THEN 63 ELSE 64 END ELSE 65 END END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_14 <= 0.6618835926055908) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_139 <= 0.43754586577415466) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_379 <= -1.292867660522461) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_456 <= 0.7668964266777039) THEN 70 ELSE 71 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_260 <= -1.254900574684143) THEN 73 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_314 <= 0.1055326759815216) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_227 <= 0.515248715877533) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_132 <= -1.3387144804000854) THEN 77 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_421 <= -0.6278998851776123) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_361 <= 0.13447923958301544) THEN 80 ELSE 81 END ELSE 82 END END ELSE 83 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_289 <= -1.0411680936813354) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_157 <= -0.4181723892688751) THEN 86 ELSE 87 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_156 <= -1.9084153175354004) THEN 89 ELSE 90 END END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_313 <= -0.8364427089691162) THEN 92 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_454 <= 0.8333654999732971) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_383 <= 0.6806865334510803) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_392 <= -1.608776569366455) THEN 96 ELSE 97 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_271 <= 0.26417094469070435) THEN 99 ELSE 100 END END ELSE 101 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_331 <= -1.4098272323608398) THEN 103 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_208 <= 1.1305630207061768) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_326 <= -1.4832830429077148) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_197 <= 1.0307159423828125) THEN 107 ELSE 108 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_330 <= 2.0376503467559814) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_349 <= -1.0582125186920166) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_303 <= -0.0980285033583641) THEN 112 ELSE 113 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_128 <= 0.975587785243988) THEN 115 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_69 <= -0.09302493184804916) THEN 117 ELSE 118 END END END ELSE 119 END END ELSE 120 END END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_473 <= -0.4237726330757141) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_290 <= 0.7717099189758301) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_93 <= 1.035658359527588) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_354 <= -0.8024482727050781) THEN 125 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_266 <= -0.46965402364730835) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_486 <= -0.05574902892112732) THEN 128 ELSE 129 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_253 <= 1.7364423274993896) THEN 131 ELSE 132 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_284 <= -0.5059083104133606) THEN 134 ELSE 135 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_491 <= 0.4357365369796753) THEN 137 ELSE 138 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_81 <= 0.5047496557235718) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_289 <= 0.7384572625160217) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_136 <= 0.2883976101875305) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_218 <= 0.4762418270111084) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_393 <= 1.3903982639312744) THEN 144 ELSE 145 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= -0.4246915578842163) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_279 <= -0.8488118052482605) THEN 148 ELSE 149 END ELSE 150 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_197 <= 0.44534966349601746) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_413 <= -0.08165199309587479) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_114 <= 0.1318725347518921) THEN 154 ELSE 155 END ELSE 156 END ELSE 157 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_149 <= -0.4287026524543762) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_344 <= 0.3194388151168823) THEN 160 ELSE 161 END ELSE 162 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_256 <= -0.6138910055160522) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_157 <= -0.9456200003623962) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_267 <= -0.6581459641456604) THEN 166 ELSE 167 END ELSE 168 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_423 <= -1.1291389465332031) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_60 <= -0.13542971014976501) THEN 171 ELSE 172 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_484 <= -1.9194178581237793) THEN 174 ELSE 175 END END END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_260 <= -0.5393005609512329) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_262 <= 0.04352155327796936) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_277 <= -0.5448890924453735) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_477 <= -0.5098930597305298) THEN 180 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_297 <= 2.024867296218872) THEN 182 ELSE 183 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_241 <= 0.4931201934814453) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_295 <= 0.954314112663269) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_412 <= 1.8737961053848267) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_105 <= 1.5120031833648682) THEN 188 ELSE 189 END ELSE 190 END ELSE 191 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_498 <= -0.27709516882896423) THEN 193 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_326 <= -0.9083094596862793) THEN 195 ELSE 196 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_307 <= 0.9474197626113892) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_340 <= -2.2401132583618164) THEN 199 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_404 <= -1.78694486618042) THEN 201 ELSE 202 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_24 <= -0.6814694404602051) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_451 <= 0.6623910069465637) THEN 205 ELSE 206 END ELSE 207 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_239 <= 0.8038721084594727) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_208 <= 1.7700986862182617) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_335 <= 0.8227494359016418) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_354 <= 0.21332471072673798) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_379 <= -0.9998724460601807) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_321 <= 0.11563362181186676) THEN 214 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_167 <= -0.03364765644073486) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_265 <= 1.5221548080444336) THEN 217 ELSE 218 END ELSE 219 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_78 <= 1.488964319229126) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_407 <= 1.205722451210022) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_246 <= -1.6286616325378418) THEN 223 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_204 <= -0.9858381748199463) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_432 <= -0.4566340446472168) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_413 <= -0.07605531811714172) THEN 227 ELSE 228 END ELSE 229 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_45 <= 1.6718401908874512) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_475 <= 1.9137330055236816) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_17 <= -0.9814741611480713) THEN 233 ELSE 234 END ELSE 235 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_408 <= 0.14215198159217834) THEN 237 ELSE 238 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_235 <= 0.10863712430000305) THEN 240 ELSE 241 END END ELSE 242 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_190 <= -0.6807964444160461) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_39 <= -1.2362549304962158) THEN 245 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_337 <= 0.3806278109550476) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_32 <= -0.41584038734436035) THEN 248 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_491 <= 1.1865546703338623) THEN 250 ELSE 251 END END ELSE 252 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_249 <= 0.9071393609046936) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_307 <= 2.042799949645996) THEN 255 ELSE 256 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_111 <= 0.4405198097229004) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_353 <= 0.685866117477417) THEN 259 ELSE 260 END ELSE 261 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_244 <= 0.0777774378657341) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_49 <= 0.3077169954776764) THEN 264 ELSE 265 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_471 <= 0.1933823823928833) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_466 <= 0.4073883295059204) THEN 268 ELSE 269 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_220 <= 0.241692915558815) THEN 271 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_247 <= 0.9503725171089172) THEN 273 ELSE 274 END END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_457 <= -1.1634513139724731) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_189 <= -0.7372876405715942) THEN 277 ELSE 278 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_308 <= 0.3065057694911957) THEN 280 ELSE 281 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_101 <= 0.6876617670059204) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_350 <= 0.9656141996383667) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_30 <= -1.1559371948242188) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_470 <= 0.5230180025100708) THEN 286 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_193 <= 0.2812681496143341) THEN 288 ELSE 289 END END ELSE 290 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_92 <= -0.34759607911109924) THEN 292 ELSE 293 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_122 <= -0.570733904838562) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_474 <= 0.23696815967559814) THEN 296 ELSE 297 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_303 <= 1.1284853219985962) THEN 299 ELSE 300 END END END END END END AS node_id_2 
FROM "33421_53X5V4_ADS_SCA_2_OUT" "ADS_sca_2_OUT"), 
"DT_node_data_3" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0.0" AS "Proba_0.0", "Values"."LogProba_0.0" AS "LogProba_0.0", "Values"."Proba_1.0" AS "Proba_1.0", "Values"."LogProba_1.0" AS "LogProba_1.0", "Values"."Proba_2.0" AS "Proba_2.0", "Values"."LogProba_2.0" AS "LogProba_2.0", "Values"."Proba_3.0" AS "Proba_3.0", "Values"."LogProba_3.0" AS "LogProba_3.0", "Values"."Decision" AS "Decision", "Values"."DecisionProba" AS "DecisionProba" 
FROM (SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 4 AS depth, 3 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 9 AS depth, 9 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 10 AS depth, 11 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 10 AS depth, 11 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 9 AS depth, 14 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 8 AS count, 11 AS depth, 17 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 17 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 10 AS depth, 16 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 7 AS depth, 7 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 6 AS depth, 6 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 7 AS depth, 24 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 15 AS count, 7 AS depth, 24 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 6 AS depth, 23 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 32 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 7 AS depth, 31 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 33 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 7 AS depth, 31 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 35 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 7 AS depth, 34 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 36 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 7 AS depth, 34 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 40 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 39 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 41 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 8 AS depth, 39 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 42 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 7 AS depth, 38 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 45 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 44 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 48 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 47 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 50 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 49 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 51 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 14 AS count, 11 AS depth, 49 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 53 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 52 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 56 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 12 AS depth, 55 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 57 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 12 AS depth, 55 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 58 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 11 AS depth, 54 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 60 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 8 AS depth, 59 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 63 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 10 AS depth, 62 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 64 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 62 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 65 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 9 AS depth, 61 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 70 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 8 AS depth, 69 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 71 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 69 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 73 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 8 AS depth, 72 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 77 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 11 AS depth, 76 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 80 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 13 AS depth, 79 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 81 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 13 AS depth, 79 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 82 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 8 AS count, 12 AS depth, 78 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 83 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 10 AS depth, 75 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 86 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 85 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 87 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 11 AS depth, 85 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 89 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 88 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 90 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 16 AS count, 11 AS depth, 88 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 92 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 7 AS depth, 91 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 96 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 95 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 97 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 8 AS count, 10 AS depth, 95 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 99 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 98 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 100 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 10 AS depth, 98 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 101 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 93 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 103 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 6 AS depth, 102 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 107 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 106 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 108 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 106 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 112 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 111 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 113 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 111 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 115 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 22 AS count, 11 AS depth, 114 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 117 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 12 AS depth, 116 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 118 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 12 AS depth, 116 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 119 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 109 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 120 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 7 AS depth, 104 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 125 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 6 AS depth, 124 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 128 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 8 AS depth, 127 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 129 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 127 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 131 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 11 AS count, 8 AS depth, 130 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 132 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 130 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 134 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 6 AS depth, 133 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 135 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 6 AS depth, 133 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 137 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 7 AS count, 5 AS depth, 136 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 138 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 5 AS depth, 136 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 144 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 14 AS count, 8 AS depth, 143 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 145 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 143 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 148 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 9 AS depth, 147 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 149 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 147 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 150 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 8 AS depth, 146 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 154 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 153 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 155 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 9 AS depth, 153 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 156 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 8 AS depth, 152 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 157 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 7 AS depth, 151 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 160 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 7 AS depth, 159 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 161 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 7 AS depth, 159 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 162 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 6 AS count, 6 AS depth, 158 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 166 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 7 AS depth, 165 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 167 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 7 AS depth, 165 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 168 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 6 AS depth, 164 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 171 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 7 AS depth, 170 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 172 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 7 AS depth, 170 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 174 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 7 AS depth, 173 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 175 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 13 AS count, 7 AS depth, 173 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 180 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 5 AS depth, 179 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 182 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 8 AS count, 6 AS depth, 181 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 183 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 6 AS depth, 181 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 188 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 7 AS count, 8 AS depth, 187 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 189 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 187 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 190 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 7 AS depth, 186 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 191 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 6 AS depth, 185 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 193 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 6 AS depth, 192 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 195 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 7 AS depth, 194 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 196 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 7 AS depth, 194 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 199 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 5 AS depth, 198 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 201 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 6 AS depth, 200 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 202 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 15 AS count, 6 AS depth, 200 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 205 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 6 AS depth, 204 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 206 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 6 AS depth, 204 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 207 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 5 AS depth, 203 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 214 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 7 AS count, 8 AS depth, 213 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 217 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 10 AS depth, 216 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 218 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 216 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 219 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 9 AS depth, 215 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 223 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 10 AS depth, 222 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 227 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 13 AS depth, 226 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 228 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 13 AS depth, 226 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 229 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 12 AS depth, 225 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 233 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 14 AS depth, 232 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 234 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 19 AS count, 14 AS depth, 232 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 235 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 13 AS depth, 231 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 237 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 13 AS depth, 236 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 238 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 13 AS depth, 236 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 240 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 10 AS depth, 239 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 241 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 239 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 242 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 8 AS depth, 220 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 245 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 8 AS depth, 244 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 248 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 10 AS depth, 247 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 250 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 249 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 251 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 249 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 252 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 9 AS depth, 246 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 255 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 26 AS count, 9 AS depth, 254 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 256 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 254 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 259 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 10 AS depth, 258 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 260 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 10 AS depth, 258 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 261 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 9 AS depth, 257 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 264 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 8 AS count, 7 AS depth, 263 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 265 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 7 AS depth, 263 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 268 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 267 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 269 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 8 AS depth, 267 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 271 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 8 AS depth, 270 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 273 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 272 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 274 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 272 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 277 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 6 AS depth, 276 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 278 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 6 AS depth, 276 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 280 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 6 AS count, 6 AS depth, 279 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 281 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 6 AS depth, 279 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 286 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 7 AS depth, 285 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 288 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 287 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 289 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 287 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 290 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 13 AS count, 6 AS depth, 284 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 292 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 6 AS depth, 291 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 293 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 6 AS depth, 291 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 296 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 6 AS depth, 295 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 297 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 6 AS depth, 295 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 299 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 6 AS depth, 298 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 300 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 6 AS depth, 298 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL) "Values"), 
"DT_Output_3" AS 
(SELECT "DT_node_lookup_3"."KEY" AS "KEY", "DT_node_lookup_3".node_id_2 AS node_id_2, "DT_node_data_3".node_id AS node_id, "DT_node_data_3".feature AS feature, "DT_node_data_3".threshold AS threshold, "DT_node_data_3".count AS count, "DT_node_data_3".depth AS depth, "DT_node_data_3".parent_id AS parent_id, "DT_node_data_3"."Proba_0.0" AS "Proba_0.0", "DT_node_data_3"."LogProba_0.0" AS "LogProba_0.0", "DT_node_data_3"."Proba_1.0" AS "Proba_1.0", "DT_node_data_3"."LogProba_1.0" AS "LogProba_1.0", "DT_node_data_3"."Proba_2.0" AS "Proba_2.0", "DT_node_data_3"."LogProba_2.0" AS "LogProba_2.0", "DT_node_data_3"."Proba_3.0" AS "Proba_3.0", "DT_node_data_3"."LogProba_3.0" AS "LogProba_3.0", "DT_node_data_3"."Decision" AS "Decision", "DT_node_data_3"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup_3" LEFT OUTER JOIN "DT_node_data_3" ON "DT_node_lookup_3".node_id_2 = "DT_node_data_3".node_id), 
"RF_Tree_3" AS 
(SELECT "DT_Output_3"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output_3"."Proba_0.0" AS "Proba_0", "DT_Output_3"."LogProba_0.0" AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output_3"."Proba_1.0" AS "Proba_1", "DT_Output_3"."LogProba_1.0" AS "LogProba_1", CAST(NULL AS BINARY_DOUBLE) AS "Score_2", "DT_Output_3"."Proba_2.0" AS "Proba_2", "DT_Output_3"."LogProba_2.0" AS "LogProba_2", CAST(NULL AS BINARY_DOUBLE) AS "Score_3", "DT_Output_3"."Proba_3.0" AS "Proba_3", "DT_Output_3"."LogProba_3.0" AS "LogProba_3" 
FROM "DT_Output_3"), 
"DT_node_lookup_4" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_252 <= 1.8841108083724976) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_104 <= 0.40676021575927734) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_251 <= 0.6699259281158447) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_464 <= 0.7226823568344116) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_114 <= -1.1551485061645508) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_147 <= -0.7098996639251709) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_239 <= -0.6241734027862549) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_122 <= 0.9381608963012695) THEN 8 ELSE 9 END ELSE 10 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_142 <= -1.4302878379821777) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_499 <= -0.8404451012611389) THEN 13 ELSE 14 END ELSE 15 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_452 <= -1.1162564754486084) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_99 <= 0.4554480314254761) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_91 <= -0.8013444542884827) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_284 <= 0.010882765054702759) THEN 20 ELSE 21 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_97 <= 1.1735033988952637) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_158 <= -1.1879148483276367) THEN 24 ELSE 25 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_44 <= -0.03516724705696106) THEN 27 ELSE 28 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_227 <= 0.5260269641876221) THEN 30 ELSE 31 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_310 <= 0.5960095524787903) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_309 <= 0.7835416793823242) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_243 <= 1.290004014968872) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_343 <= -0.5753512382507324) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_270 <= 1.8809343576431274) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= -1.7182204723358154) THEN 38 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_303 <= -1.1391799449920654) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_183 <= -0.14428117871284485) THEN 41 ELSE 42 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_501 <= -1.0501686334609985) THEN 44 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_103 <= -0.3699060082435608) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_122 <= -0.852015495300293) THEN 47 ELSE 48 END ELSE 49 END END END END ELSE 50 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_290 <= 0.709246039390564) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_111 <= 0.26052331924438477) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_74 <= -0.1910589635372162) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_58 <= 0.02633671462535858) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_319 <= 1.2824400663375854) THEN 56 ELSE 57 END ELSE 58 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_94 <= 0.23232723772525787) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_375 <= 0.6383864879608154) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_227 <= 1.4207432270050049) THEN 62 ELSE 63 END ELSE 64 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_336 <= -0.8135640621185303) THEN 66 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_426 <= -0.23879113793373108) THEN 68 ELSE 69 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_360 <= 2.561013698577881) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_88 <= 1.1539812088012695) THEN 72 ELSE 73 END ELSE 74 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_143 <= 0.8402786254882812) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_335 <= 0.7018576860427856) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_354 <= -0.9409858584403992) THEN 78 ELSE 79 END ELSE 80 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_83 <= -1.1523772478103638) THEN 82 ELSE 83 END END END END ELSE 84 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_446 <= -0.93495774269104) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_102 <= -0.5135562419891357) THEN 87 ELSE 88 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_134 <= 1.9703648090362549) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_116 <= 1.203202486038208) THEN 91 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_439 <= -0.46999770402908325) THEN 93 ELSE 94 END END ELSE 95 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_454 <= -0.5417516231536865) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_101 <= 0.7080468535423279) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_103 <= -0.15576103329658508) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_484 <= 0.44315066933631897) THEN 100 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_232 <= 0.6864383220672607) THEN 102 ELSE 103 END END ELSE 104 END ELSE 105 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_36 <= 0.07988692075014114) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_305 <= -0.313987135887146) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_493 <= -0.19526661932468414) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_98 <= 0.7268363833427429) THEN 110 ELSE 111 END ELSE 112 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_467 <= 0.30850547552108765) THEN 114 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_317 <= 0.045347314327955246) THEN 116 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_145 <= -0.23964643478393555) THEN 118 ELSE 119 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_315 <= 0.9768155217170715) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_265 <= -2.0926947593688965) THEN 122 ELSE 123 END ELSE 124 END END END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_284 <= -0.7193942666053772) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_60 <= -0.007006323430687189) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_35 <= -0.9034068584442139) THEN 128 ELSE 129 END ELSE 130 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_498 <= -1.1541556119918823) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_236 <= -1.3341223001480103) THEN 133 ELSE 134 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_59 <= -0.8106703758239746) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= -0.19781260192394257) THEN 137 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_321 <= -0.4278411567211151) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_276 <= 0.18274334073066711) THEN 140 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_449 <= 0.11210920661687851) THEN 142 ELSE 143 END END ELSE 144 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_139 <= 1.3107025623321533) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_493 <= -1.110012412071228) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_107 <= -0.8186056613922119) THEN 148 ELSE 149 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_296 <= 0.6844228506088257) THEN 151 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_107 <= -0.08412659168243408) THEN 153 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_217 <= 1.2892295122146606) THEN 155 ELSE 156 END END END END ELSE 157 END END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_280 <= -0.3129790723323822) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_21 <= -1.7212533950805664) THEN 160 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_367 <= 0.9489270448684692) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_425 <= 1.6494483947753906) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_311 <= -1.1369845867156982) THEN 164 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_327 <= 1.2599248886108398) THEN 166 ELSE 167 END END ELSE 168 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_258 <= -0.9556145668029785) THEN 170 ELSE 171 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_191 <= 0.5708103179931641) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_314 <= -1.2517383098602295) THEN 174 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_133 <= -0.1412709653377533) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_436 <= -0.598331093788147) THEN 177 ELSE 178 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_45 <= 0.8418535590171814) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_468 <= 1.4546376466751099) THEN 181 ELSE 182 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_92 <= -0.9012339115142822) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_160 <= -0.09057211875915527) THEN 185 ELSE 186 END ELSE 187 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_327 <= 0.8357443809509277) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_492 <= 1.014872670173645) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_29 <= 1.198282241821289) THEN 191 ELSE 192 END ELSE 193 END ELSE 194 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_339 <= -0.20906974375247955) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_149 <= 0.8651333451271057) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_289 <= 1.2809600830078125) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_249 <= -0.5141274929046631) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_19 <= -0.0067802718840539455) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_59 <= 0.03746243566274643) THEN 201 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_46 <= -0.6423441171646118) THEN 203 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_179 <= 1.4689520597457886) THEN 205 ELSE 206 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_297 <= 0.8922977447509766) THEN 208 ELSE 209 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_33 <= -0.7918729782104492) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_429 <= -0.3647332191467285) THEN 212 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_266 <= 1.453126311302185) THEN 214 ELSE 215 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_250 <= -1.4314625263214111) THEN 217 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_143 <= 1.718895435333252) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_13 <= -1.5885705947875977) THEN 220 ELSE 221 END ELSE 222 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_289 <= 1.7160155773162842) THEN 224 ELSE 225 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_351 <= -1.7033071517944336) THEN 227 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_359 <= 1.1969764232635498) THEN 229 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_315 <= -0.09489436447620392) THEN 231 ELSE 232 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_157 <= -0.06129429116845131) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_191 <= -0.35164570808410645) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_399 <= -0.13132622838020325) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_386 <= 0.5514606833457947) THEN 237 ELSE 238 END ELSE 239 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_214 <= 1.9176056385040283) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_150 <= 0.10326920449733734) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_108 <= 0.38417166471481323) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_421 <= 1.7692296504974365) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_80 <= 1.5360016822814941) THEN 245 ELSE 246 END ELSE 247 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_450 <= 0.277169406414032) THEN 249 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_222 <= -0.537121057510376) THEN 251 ELSE 252 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_386 <= 0.9329315423965454) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_149 <= -0.5138405561447144) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_235 <= -0.4872552752494812) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_273 <= 0.3915151357650757) THEN 257 ELSE 258 END ELSE 259 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_307 <= 0.5059126019477844) THEN 261 ELSE 262 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_285 <= 0.025769490748643875) THEN 264 ELSE 265 END END END ELSE 266 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_340 <= 0.3432691693305969) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_272 <= 0.08215943723917007) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_93 <= -0.30995669960975647) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_245 <= 0.14783114194869995) THEN 271 ELSE 272 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_277 <= 0.8868814706802368) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_409 <= 0.9661160707473755) THEN 275 ELSE 276 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_406 <= -0.4012739360332489) THEN 278 ELSE 279 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_158 <= -0.7979898452758789) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_96 <= 0.568328857421875) THEN 282 ELSE 283 END ELSE 284 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_324 <= 0.7220207452774048) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_439 <= 1.0176308155059814) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_28 <= 1.9810328483581543) THEN 288 ELSE 289 END ELSE 290 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_344 <= -0.11192452907562256) THEN 292 ELSE 293 END END END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_409 <= -0.6761847734451294) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_297 <= -0.5429772138595581) THEN 296 ELSE 297 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_325 <= -1.0518336296081543) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_115 <= -1.092555046081543) THEN 300 ELSE 301 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_452 <= -0.34021633863449097) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_378 <= 0.7531556487083435) THEN 304 ELSE 305 END ELSE 306 END END END END AS node_id_2 
FROM "33421_53X5V4_ADS_SCA_2_OUT" "ADS_sca_2_OUT"), 
"DT_node_data_4" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0.0" AS "Proba_0.0", "Values"."LogProba_0.0" AS "LogProba_0.0", "Values"."Proba_1.0" AS "Proba_1.0", "Values"."LogProba_1.0" AS "LogProba_1.0", "Values"."Proba_2.0" AS "Proba_2.0", "Values"."LogProba_2.0" AS "LogProba_2.0", "Values"."Proba_3.0" AS "Proba_3.0", "Values"."LogProba_3.0" AS "LogProba_3.0", "Values"."Decision" AS "Decision", "Values"."DecisionProba" AS "DecisionProba" 
FROM (SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 8 AS depth, 7 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 7 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 7 AS depth, 6 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 12 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 12 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 14 AS count, 7 AS depth, 11 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 19 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 9 AS depth, 19 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 23 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 9 AS count, 10 AS depth, 23 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 26 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 28 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 26 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 8 AS depth, 29 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 31 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 8 AS depth, 29 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 38 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 12 AS depth, 37 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 41 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 14 AS depth, 40 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 42 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 14 AS depth, 40 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 44 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 14 AS depth, 43 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 47 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 16 AS depth, 46 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 48 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 16 AS depth, 46 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 49 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 7 AS count, 15 AS depth, 45 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 50 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 11 AS depth, 36 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 56 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 6 AS count, 15 AS depth, 55 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 57 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 15 AS depth, 55 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 58 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 14 AS depth, 54 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 62 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 9 AS count, 16 AS depth, 61 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 63 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 16 AS depth, 61 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 64 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 15 AS depth, 60 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 66 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 15 AS depth, 65 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 68 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 16 AS depth, 67 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 69 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 16 AS depth, 67 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 72 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 12 AS count, 14 AS depth, 71 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 73 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 14 AS depth, 71 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 74 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 13 AS depth, 70 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 78 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 14 AS depth, 77 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 79 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 9 AS count, 14 AS depth, 77 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 80 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 13 AS depth, 76 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 82 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 13 AS depth, 81 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 83 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 13 AS depth, 81 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 84 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 7 AS count, 9 AS depth, 34 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 87 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 86 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 88 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 10 AS depth, 86 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 91 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 14 AS count, 11 AS depth, 90 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 93 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 12 AS depth, 92 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 94 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 12 AS depth, 92 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 95 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 89 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 100 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 11 AS depth, 99 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 102 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 12 AS depth, 101 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 103 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 12 AS depth, 101 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 104 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 6 AS count, 10 AS depth, 98 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 105 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 9 AS depth, 97 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 110 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 12 AS depth, 109 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 111 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 12 AS depth, 109 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 112 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 11 AS depth, 108 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 114 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 6 AS count, 11 AS depth, 113 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 116 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 12 AS depth, 115 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 118 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 13 AS depth, 117 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 119 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 13 AS depth, 117 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 122 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 121 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 123 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 13 AS count, 11 AS depth, 121 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 124 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 10 AS depth, 120 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 128 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 7 AS depth, 127 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 129 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 7 AS depth, 127 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 130 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 6 AS count, 6 AS depth, 126 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 133 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 7 AS depth, 132 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 134 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 7 AS depth, 132 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 137 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 8 AS depth, 136 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 140 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 10 AS depth, 139 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 142 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 141 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 143 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 141 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 144 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 9 AS depth, 138 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 148 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 10 AS depth, 147 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 149 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 10 AS depth, 147 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 151 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 17 AS count, 10 AS depth, 150 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 153 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 11 AS depth, 152 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 155 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 12 AS depth, 154 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 156 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 12 AS depth, 154 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 157 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 8 AS depth, 145 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 160 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 5 AS depth, 159 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 164 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 163 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 166 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 22 AS count, 9 AS depth, 165 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 167 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 165 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 168 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 7 AS depth, 162 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 170 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 7 AS depth, 169 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 171 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 7 AS depth, 169 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 174 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 6 AS depth, 173 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 177 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 176 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 178 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 6 AS count, 8 AS depth, 176 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 181 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 8 AS count, 9 AS depth, 180 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 182 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 9 AS depth, 180 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 185 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 184 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 186 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 10 AS depth, 184 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 187 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 9 AS depth, 183 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 191 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 8 AS count, 8 AS depth, 190 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 192 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 190 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 193 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 7 AS depth, 189 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 194 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 6 AS depth, 188 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 201 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 8 AS depth, 200 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 203 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 9 AS depth, 202 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 205 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 204 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 206 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 204 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 208 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 8 AS depth, 207 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 209 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 207 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 212 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 8 AS depth, 211 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 214 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 213 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 215 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 213 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 217 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 8 AS depth, 216 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 220 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 219 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 221 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 20 AS count, 10 AS depth, 219 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 222 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 9 AS depth, 218 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 224 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 7 AS count, 6 AS depth, 223 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 225 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 6 AS depth, 223 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 227 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 5 AS depth, 226 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 229 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 9 AS count, 6 AS depth, 228 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 231 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 7 AS depth, 230 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 232 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 7 AS depth, 230 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 237 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 7 AS depth, 236 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 238 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 7 AS depth, 236 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 239 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 8 AS count, 6 AS depth, 235 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 245 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 10 AS count, 10 AS depth, 244 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 246 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 244 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 247 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 243 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 249 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 9 AS depth, 248 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 251 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 250 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 252 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 10 AS depth, 250 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 257 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 256 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 258 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 256 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 259 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 10 AS depth, 255 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 261 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 10 AS depth, 260 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 262 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 260 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 264 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 9 AS depth, 263 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 265 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 263 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 266 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 6 AS depth, 240 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 271 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 8 AS depth, 270 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 272 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 8 AS depth, 270 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 275 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 8 AS count, 9 AS depth, 274 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 276 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 274 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 278 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 277 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 279 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 277 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 282 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 281 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 283 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 281 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 284 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 9 AS count, 7 AS depth, 280 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 288 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 11 AS count, 8 AS depth, 287 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 289 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 287 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 290 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 7 AS depth, 286 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 292 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 7 AS depth, 291 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 293 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 7 AS depth, 291 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 296 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 3 AS depth, 295 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 297 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 3 AS depth, 295 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 300 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 4 AS depth, 299 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 301 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 4 AS depth, 299 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 304 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 5 AS depth, 303 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 305 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 5 AS depth, 303 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 306 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 10 AS count, 4 AS depth, 302 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL) "Values"), 
"DT_Output_4" AS 
(SELECT "DT_node_lookup_4"."KEY" AS "KEY", "DT_node_lookup_4".node_id_2 AS node_id_2, "DT_node_data_4".node_id AS node_id, "DT_node_data_4".feature AS feature, "DT_node_data_4".threshold AS threshold, "DT_node_data_4".count AS count, "DT_node_data_4".depth AS depth, "DT_node_data_4".parent_id AS parent_id, "DT_node_data_4"."Proba_0.0" AS "Proba_0.0", "DT_node_data_4"."LogProba_0.0" AS "LogProba_0.0", "DT_node_data_4"."Proba_1.0" AS "Proba_1.0", "DT_node_data_4"."LogProba_1.0" AS "LogProba_1.0", "DT_node_data_4"."Proba_2.0" AS "Proba_2.0", "DT_node_data_4"."LogProba_2.0" AS "LogProba_2.0", "DT_node_data_4"."Proba_3.0" AS "Proba_3.0", "DT_node_data_4"."LogProba_3.0" AS "LogProba_3.0", "DT_node_data_4"."Decision" AS "Decision", "DT_node_data_4"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup_4" LEFT OUTER JOIN "DT_node_data_4" ON "DT_node_lookup_4".node_id_2 = "DT_node_data_4".node_id), 
"RF_Tree_4" AS 
(SELECT "DT_Output_4"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output_4"."Proba_0.0" AS "Proba_0", "DT_Output_4"."LogProba_0.0" AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output_4"."Proba_1.0" AS "Proba_1", "DT_Output_4"."LogProba_1.0" AS "LogProba_1", CAST(NULL AS BINARY_DOUBLE) AS "Score_2", "DT_Output_4"."Proba_2.0" AS "Proba_2", "DT_Output_4"."LogProba_2.0" AS "LogProba_2", CAST(NULL AS BINARY_DOUBLE) AS "Score_3", "DT_Output_4"."Proba_3.0" AS "Proba_3", "DT_Output_4"."LogProba_3.0" AS "LogProba_3" 
FROM "DT_Output_4"), 
"DT_node_lookup_5" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_89 <= -0.9549398422241211) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_102 <= -1.0143280029296875) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_56 <= 0.28115105628967285) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_175 <= -0.8317513465881348) THEN 4 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_84 <= -1.460707664489746) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_384 <= 0.16683311760425568) THEN 9 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_210 <= 0.31119248270988464) THEN 11 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_271 <= 0.5741019248962402) THEN 13 ELSE 14 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= 1.0226435661315918) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_153 <= -1.5070693492889404) THEN 17 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_195 <= -0.45817235112190247) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_293 <= -0.6208971738815308) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_81 <= 1.271740436553955) THEN 21 ELSE 22 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= 0.28424590826034546) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_497 <= 0.3746747672557831) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_85 <= -1.529197335243225) THEN 26 ELSE 27 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= 0.12844562530517578) THEN 29 ELSE 30 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_250 <= -0.9108915328979492) THEN 32 ELSE 33 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_173 <= 0.32723528146743774) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_237 <= 1.0363059043884277) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_387 <= -1.9352355003356934) THEN 37 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_62 <= 1.3381083011627197) THEN 39 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_324 <= 0.8367812037467957) THEN 41 ELSE 42 END END END ELSE 43 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_237 <= 0.6499547958374023) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_452 <= 1.1990894079208374) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_201 <= 0.5989661812782288) THEN 47 ELSE 48 END ELSE 49 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_447 <= -1.8502033948898315) THEN 51 ELSE 52 END END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_84 <= -0.12091109156608582) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_219 <= 0.09258625656366348) THEN 55 ELSE 56 END ELSE 57 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_215 <= -0.9358300566673279) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_469 <= 0.9075208902359009) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_460 <= 0.7181838750839233) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_142 <= -0.012987256050109863) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_110 <= 1.6836493015289307) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_122 <= -1.5799639225006104) THEN 64 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_231 <= -1.1191227436065674) THEN 66 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_275 <= 1.6772764921188354) THEN 68 ELSE 69 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_385 <= -0.37521111965179443) THEN 71 ELSE 72 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_95 <= 0.648876428604126) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_356 <= -0.07758952677249908) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_89 <= -0.17362423241138458) THEN 76 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_52 <= -0.12580475211143494) THEN 78 ELSE 79 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_49 <= 0.8868108987808228) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_485 <= 0.8988176584243774) THEN 82 ELSE 83 END ELSE 84 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_136 <= 1.0432827472686768) THEN 86 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_279 <= -0.2486807256937027) THEN 88 ELSE 89 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_32 <= 0.9793448448181152) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= -0.5199835300445557) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_125 <= 0.10763902962207794) THEN 93 ELSE 94 END ELSE 95 END ELSE 96 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_432 <= 0.7086436748504639) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_156 <= -0.43431556224823) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_86 <= -2.078092575073242) THEN 100 ELSE 101 END ELSE 102 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_335 <= 0.2501067519187927) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_260 <= 0.6199166774749756) THEN 105 ELSE 106 END ELSE 107 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_330 <= 0.8433017730712891) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_245 <= 0.539012610912323) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_162 <= 1.454345703125) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_195 <= -0.595205545425415) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_376 <= 1.2927534580230713) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_240 <= -0.39297598600387573) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_169 <= 0.4621790647506714) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_429 <= -0.3230821490287781) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_246 <= 0.2481982707977295) THEN 117 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_342 <= -1.3877735137939453) THEN 119 ELSE 120 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_272 <= 0.660029947757721) THEN 122 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_260 <= 0.988681435585022) THEN 124 ELSE 125 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_104 <= -1.277780532836914) THEN 127 ELSE 128 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_349 <= -0.9057875871658325) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_239 <= -0.13854798674583435) THEN 131 ELSE 132 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_387 <= 0.11009316146373749) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_35 <= -0.5899107456207275) THEN 135 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_238 <= 1.2837963104248047) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_215 <= 0.5804020166397095) THEN 138 ELSE 139 END ELSE 140 END END ELSE 141 END END END ELSE 142 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_497 <= -0.24832606315612793) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_201 <= 0.12229453027248383) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_358 <= -0.15711060166358948) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_496 <= -0.45355620980262756) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_96 <= 0.5509325861930847) THEN 148 ELSE 149 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= 0.34343820810317993) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_169 <= 0.45447707176208496) THEN 152 ELSE 153 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_30 <= 0.7509099841117859) THEN 155 ELSE 156 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_25 <= -1.2930173873901367) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_128 <= 0.7755712270736694) THEN 159 ELSE 160 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_53 <= -0.8429996371269226) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_128 <= 0.3803713619709015) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_437 <= 1.064175009727478) THEN 164 ELSE 165 END ELSE 166 END ELSE 167 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_468 <= 0.5677981972694397) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_49 <= 0.2899444103240967) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_163 <= -0.44998398423194885) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_315 <= 0.5556786060333252) THEN 172 ELSE 173 END ELSE 174 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_134 <= -0.5868185758590698) THEN 176 ELSE 177 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_274 <= 0.7128311991691589) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_184 <= 0.7193936705589294) THEN 180 ELSE 181 END ELSE 182 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_220 <= 2.2335615158081055) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_179 <= 1.3802399635314941) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_404 <= -0.7653108835220337) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_399 <= 0.670255184173584) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_114 <= -0.8148285150527954) THEN 188 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_125 <= -0.18320614099502563) THEN 190 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_290 <= -1.3065907955169678) THEN 192 ELSE 193 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_158 <= 0.4660884439945221) THEN 195 ELSE 196 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_71 <= -1.647961139678955) THEN 198 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= -1.411350965499878) THEN 200 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_146 <= 1.6603087186813354) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_128 <= 1.3647270202636719) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_191 <= -1.532740831375122) THEN 204 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_22 <= -0.7259290218353271) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_292 <= 0.8673256635665894) THEN 207 ELSE 208 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_47 <= 1.6944694519042969) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_215 <= 2.170841693878174) THEN 211 ELSE 212 END ELSE 213 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_26 <= -0.13326877355575562) THEN 215 ELSE 216 END END ELSE 217 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_461 <= 0.26410719752311707) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_290 <= 0.0427129864692688) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_256 <= 0.00032600387930870056) THEN 221 ELSE 222 END ELSE 223 END ELSE 224 END END ELSE 225 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_37 <= 0.36846160888671875) THEN 227 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_359 <= -0.5704918503761292) THEN 229 ELSE 230 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_194 <= 0.3383973240852356) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_381 <= -0.5497346520423889) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_46 <= -0.06278706341981888) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_264 <= -0.3064539432525635) THEN 235 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_362 <= 0.26132732629776) THEN 237 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_306 <= -0.2287645936012268) THEN 239 ELSE 240 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_22 <= 0.16555342078208923) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_254 <= -1.506602168083191) THEN 243 ELSE 244 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_369 <= 0.08215871453285217) THEN 246 ELSE 247 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_94 <= 1.0583653450012207) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_82 <= 1.0825227499008179) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_169 <= 1.196436882019043) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_197 <= -1.4336767196655273) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_213 <= 0.5302044153213501) THEN 253 ELSE 254 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_127 <= -1.355757474899292) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_80 <= 1.5567678213119507) THEN 257 ELSE 258 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_38 <= -2.023771286010742) THEN 260 ELSE 261 END END END ELSE 262 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_102 <= 0.48733946681022644) THEN 264 ELSE 265 END END ELSE 266 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_438 <= 0.11725036799907684) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_349 <= 0.4588778018951416) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_127 <= -0.6342971324920654) THEN 270 ELSE 271 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_290 <= 0.02974662184715271) THEN 273 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_489 <= -1.1435049772262573) THEN 275 ELSE 276 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_313 <= -0.7711502313613892) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_146 <= -0.0030158385634422302) THEN 279 ELSE 280 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_94 <= -1.0800457000732422) THEN 282 ELSE 283 END END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_172 <= 0.9154195785522461) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_65 <= -0.20393243432044983) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_495 <= 0.888495683670044) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_28 <= 0.2481890320777893) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_234 <= 0.4630756378173828) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_122 <= -0.33805927634239197) THEN 290 ELSE 291 END ELSE 292 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_111 <= 0.4964749813079834) THEN 294 ELSE 295 END END ELSE 296 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_351 <= 0.42976510524749756) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_183 <= 1.1776376962661743) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_69 <= -1.1778273582458496) THEN 300 ELSE 301 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_501 <= 0.6113845109939575) THEN 303 ELSE 304 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_280 <= -1.1488473415374756) THEN 306 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_92 <= -0.5872988700866699) THEN 308 ELSE 309 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_453 <= 2.5040290355682373) THEN 311 ELSE 312 END END END END END AS node_id_2 
FROM "33421_53X5V4_ADS_SCA_2_OUT" "ADS_sca_2_OUT"), 
"DT_node_data_5" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0.0" AS "Proba_0.0", "Values"."LogProba_0.0" AS "LogProba_0.0", "Values"."Proba_1.0" AS "Proba_1.0", "Values"."LogProba_1.0" AS "LogProba_1.0", "Values"."Proba_2.0" AS "Proba_2.0", "Values"."LogProba_2.0" AS "LogProba_2.0", "Values"."Proba_3.0" AS "Proba_3.0", "Values"."LogProba_3.0" AS "LogProba_3.0", "Values"."Decision" AS "Decision", "Values"."DecisionProba" AS "DecisionProba" 
FROM (SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 4 AS depth, 3 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 5 AS depth, 5 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 11 AS count, 5 AS depth, 5 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 4 AS depth, 8 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 5 AS depth, 10 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 6 AS depth, 12 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 6 AS depth, 12 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 4 AS depth, 16 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 7 AS depth, 20 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 7 AS depth, 20 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 25 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 8 AS count, 9 AS depth, 25 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 29 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 9 AS depth, 28 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 28 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 32 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 31 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 33 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 8 AS depth, 31 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 37 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 36 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 39 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 17 AS count, 9 AS depth, 38 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 41 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 40 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 42 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 40 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 43 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 7 AS depth, 35 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 47 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 6 AS count, 9 AS depth, 46 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 48 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 46 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 49 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 8 AS depth, 45 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 51 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 50 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 52 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 8 AS depth, 50 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 55 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 5 AS depth, 54 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 56 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 5 AS depth, 54 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 57 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 6 AS count, 4 AS depth, 53 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 64 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 7 AS depth, 63 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 66 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 65 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 68 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 14 AS count, 9 AS depth, 67 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 69 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 67 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 71 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 7 AS depth, 70 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 72 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 7 AS depth, 70 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 76 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 8 AS depth, 75 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 78 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 77 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 79 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 9 AS depth, 77 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 82 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 8 AS count, 9 AS depth, 81 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 83 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 81 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 84 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 8 AS depth, 80 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 86 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 7 AS count, 7 AS depth, 85 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 88 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 87 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 89 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 87 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 93 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 7 AS depth, 92 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 94 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 7 AS depth, 92 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 95 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 6 AS depth, 91 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 96 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 5 AS depth, 90 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 100 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 6 AS depth, 99 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 101 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 6 AS depth, 99 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 102 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 8 AS count, 5 AS depth, 98 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 105 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 6 AS depth, 104 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 106 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 6 AS depth, 104 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 107 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 5 AS depth, 103 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 117 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 11 AS depth, 116 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 119 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 12 AS depth, 118 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 120 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 12 AS depth, 118 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 122 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 11 AS depth, 121 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 124 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 12 AS depth, 123 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 125 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 12 AS depth, 123 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 127 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 126 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 128 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 10 AS depth, 126 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 131 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 130 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 132 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 130 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 135 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 11 AS depth, 134 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 138 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 13 AS depth, 137 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 139 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 13 AS depth, 137 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 140 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 12 AS depth, 136 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 141 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 11 AS count, 10 AS depth, 133 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 142 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 7 AS depth, 112 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 148 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 11 AS depth, 147 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 149 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 147 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 152 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 6 AS count, 12 AS depth, 151 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 153 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 12 AS depth, 151 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 155 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 12 AS depth, 154 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 156 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 12 AS depth, 154 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 159 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 11 AS depth, 158 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 160 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 158 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 164 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 13 AS depth, 163 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 165 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 13 AS depth, 163 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 166 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 12 AS depth, 162 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 167 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 13 AS count, 11 AS depth, 161 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 172 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 12 AS depth, 171 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 173 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 12 AS depth, 171 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 174 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 11 AS depth, 170 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 176 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 11 AS depth, 175 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 177 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 11 AS depth, 175 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 180 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 6 AS count, 11 AS depth, 179 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 181 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 179 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 182 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 178 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 188 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 12 AS depth, 187 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 190 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 13 AS depth, 189 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 192 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 14 AS depth, 191 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 193 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 14 AS depth, 191 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 195 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 12 AS depth, 194 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 196 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 12 AS depth, 194 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 198 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 11 AS depth, 197 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 200 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 12 AS depth, 199 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 204 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 15 AS depth, 203 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 207 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 17 AS depth, 206 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 208 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 17 AS depth, 206 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 211 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 29 AS count, 18 AS depth, 210 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 212 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 18 AS depth, 210 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 213 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 17 AS depth, 209 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 215 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 15 AS depth, 214 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 216 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 15 AS depth, 214 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 217 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 13 AS depth, 201 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 221 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 12 AS depth, 220 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 222 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 12 AS depth, 220 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 223 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 11 AS depth, 219 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 224 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 10 AS depth, 218 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 225 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 8 AS depth, 183 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 227 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 6 AS depth, 226 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 229 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 7 AS depth, 228 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 230 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 7 AS depth, 228 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 235 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 8 AS depth, 234 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 237 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 6 AS count, 9 AS depth, 236 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 239 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 238 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 240 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 10 AS depth, 238 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 243 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 242 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 244 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 9 AS count, 9 AS depth, 242 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 246 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 9 AS depth, 245 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 247 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 245 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 253 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 252 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 254 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 252 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 257 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 12 AS depth, 256 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 258 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 12 AS depth, 256 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 260 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 12 AS depth, 259 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 261 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 21 AS count, 12 AS depth, 259 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 262 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 9 AS depth, 250 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 264 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 9 AS depth, 263 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 265 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 263 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 266 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 7 AS depth, 248 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 270 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 269 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 271 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 8 AS depth, 269 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 273 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 8 AS depth, 272 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 275 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 274 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 276 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 274 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 279 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 278 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 280 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 8 AS depth, 278 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 282 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 281 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 283 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 11 AS count, 8 AS depth, 281 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 290 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 9 AS depth, 289 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 291 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 9 AS depth, 289 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 292 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 8 AS depth, 288 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 294 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 7 AS count, 8 AS depth, 293 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 295 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 293 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 296 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 6 AS count, 6 AS depth, 286 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 300 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 299 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 301 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 15 AS count, 8 AS depth, 299 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 303 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 8 AS depth, 302 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 304 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 302 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 306 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 7 AS depth, 305 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 308 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 307 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 309 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 6 AS count, 8 AS depth, 307 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 311 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 13 AS count, 5 AS depth, 310 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 312 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 5 AS depth, 310 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL) "Values"), 
"DT_Output_5" AS 
(SELECT "DT_node_lookup_5"."KEY" AS "KEY", "DT_node_lookup_5".node_id_2 AS node_id_2, "DT_node_data_5".node_id AS node_id, "DT_node_data_5".feature AS feature, "DT_node_data_5".threshold AS threshold, "DT_node_data_5".count AS count, "DT_node_data_5".depth AS depth, "DT_node_data_5".parent_id AS parent_id, "DT_node_data_5"."Proba_0.0" AS "Proba_0.0", "DT_node_data_5"."LogProba_0.0" AS "LogProba_0.0", "DT_node_data_5"."Proba_1.0" AS "Proba_1.0", "DT_node_data_5"."LogProba_1.0" AS "LogProba_1.0", "DT_node_data_5"."Proba_2.0" AS "Proba_2.0", "DT_node_data_5"."LogProba_2.0" AS "LogProba_2.0", "DT_node_data_5"."Proba_3.0" AS "Proba_3.0", "DT_node_data_5"."LogProba_3.0" AS "LogProba_3.0", "DT_node_data_5"."Decision" AS "Decision", "DT_node_data_5"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup_5" LEFT OUTER JOIN "DT_node_data_5" ON "DT_node_lookup_5".node_id_2 = "DT_node_data_5".node_id), 
"RF_Tree_5" AS 
(SELECT "DT_Output_5"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output_5"."Proba_0.0" AS "Proba_0", "DT_Output_5"."LogProba_0.0" AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output_5"."Proba_1.0" AS "Proba_1", "DT_Output_5"."LogProba_1.0" AS "LogProba_1", CAST(NULL AS BINARY_DOUBLE) AS "Score_2", "DT_Output_5"."Proba_2.0" AS "Proba_2", "DT_Output_5"."LogProba_2.0" AS "LogProba_2", CAST(NULL AS BINARY_DOUBLE) AS "Score_3", "DT_Output_5"."Proba_3.0" AS "Proba_3", "DT_Output_5"."LogProba_3.0" AS "LogProba_3" 
FROM "DT_Output_5"), 
"DT_node_lookup_6" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_401 <= 0.34663718938827515) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_472 <= -1.6245818138122559) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_214 <= 0.6673409342765808) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_236 <= -1.0139999389648438) THEN 4 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_465 <= 1.0786116123199463) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_125 <= -0.8308781385421753) THEN 7 ELSE 8 END ELSE 9 END END ELSE 10 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_131 <= 0.3185786306858063) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_493 <= -1.6637928485870361) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_436 <= 0.2625035047531128) THEN 14 ELSE 15 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_402 <= 0.2977660596370697) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_340 <= 0.626562237739563) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_321 <= 1.0139703750610352) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_458 <= -0.16555076837539673) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_433 <= 0.16075190901756287) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_20 <= -1.132502555847168) THEN 22 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_381 <= -0.5208903551101685) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_95 <= -1.4271855354309082) THEN 25 ELSE 26 END ELSE 27 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_262 <= 0.5805412530899048) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_378 <= 1.1796455383300781) THEN 30 ELSE 31 END ELSE 32 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_66 <= 0.11012972891330719) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_291 <= -1.0167139768600464) THEN 35 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_337 <= -0.5208196640014648) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_17 <= -0.4479224383831024) THEN 38 ELSE 39 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_121 <= 1.0797113180160522) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_164 <= 1.205564022064209) THEN 42 ELSE 43 END ELSE 44 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_446 <= -0.8668632507324219) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_37 <= 1.1111291646957397) THEN 47 ELSE 48 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_360 <= -1.9940898418426514) THEN 50 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_331 <= -1.1928796768188477) THEN 52 ELSE 53 END END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_234 <= 0.1956087052822113) THEN 55 ELSE 56 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_195 <= -1.3686732053756714) THEN 58 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_63 <= -0.41412246227264404) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_162 <= 0.16174554824829102) THEN 61 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_299 <= -0.7064932584762573) THEN 63 ELSE 64 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_284 <= -1.302203893661499) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_384 <= 0.14715680480003357) THEN 67 ELSE 68 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_90 <= -0.723334789276123) THEN 70 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_398 <= -0.9991655349731445) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_150 <= 0.25031617283821106) THEN 73 ELSE 74 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_223 <= -1.6996158361434937) THEN 76 ELSE 77 END END END END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_181 <= 0.4185000956058502) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_64 <= -0.23518627882003784) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_438 <= 0.1896623969078064) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_140 <= -1.601118803024292) THEN 82 ELSE 83 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_417 <= -0.11291633546352386) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_381 <= -0.3451169431209564) THEN 86 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_42 <= -1.5455654859542847) THEN 88 ELSE 89 END END ELSE 90 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_431 <= -0.565056562423706) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_95 <= -0.7260496616363525) THEN 93 ELSE 94 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_130 <= 0.37019219994544983) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_124 <= 0.008743909187614918) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_169 <= 0.2590590715408325) THEN 98 ELSE 99 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_496 <= 0.11428876966238022) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_236 <= -0.04264634847640991) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_169 <= 0.22718152403831482) THEN 103 ELSE 104 END ELSE 105 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_281 <= -1.4091808795928955) THEN 107 ELSE 108 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_281 <= 0.9641005992889404) THEN 110 ELSE 111 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_363 <= 1.6094648838043213) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_275 <= -1.3629748821258545) THEN 114 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_104 <= 1.9168906211853027) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_436 <= -1.3100236654281616) THEN 117 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_86 <= 1.564374327659607) THEN 119 ELSE 120 END END ELSE 121 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_244 <= 0.157789945602417) THEN 123 ELSE 124 END END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_144 <= 0.5838061571121216) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_108 <= -0.9653949737548828) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_231 <= 0.1404421329498291) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_127 <= 0.3020828366279602) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_497 <= -0.9625171422958374) THEN 130 ELSE 131 END ELSE 132 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_259 <= 0.6799232959747314) THEN 134 ELSE 135 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_302 <= -1.444061517715454) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_93 <= 0.7845475673675537) THEN 138 ELSE 139 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_270 <= 1.2384170293807983) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_357 <= 1.3677157163619995) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_43 <= -1.2419449090957642) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_45 <= -0.10434350371360779) THEN 144 ELSE 145 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_203 <= 1.2381649017333984) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_384 <= -1.3006256818771362) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_320 <= 0.35197317600250244) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_60 <= -0.6258072853088379) THEN 150 ELSE 151 END ELSE 152 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_459 <= 0.9704185724258423) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_52 <= -2.788989543914795) THEN 155 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_306 <= -2.3851046562194824) THEN 157 ELSE 158 END END ELSE 159 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_346 <= -0.12760873138904572) THEN 161 ELSE 162 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_67 <= -0.4209496080875397) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= 1.7538442611694336) THEN 165 ELSE 166 END ELSE 167 END END ELSE 168 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_348 <= -0.5443269610404968) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_346 <= -0.6510632038116455) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_222 <= -0.6002531051635742) THEN 172 ELSE 173 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_230 <= 1.4627532958984375) THEN 175 ELSE 176 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_91 <= 0.1803649365901947) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_438 <= 0.11119615286588669) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_320 <= -0.02392149716615677) THEN 180 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_350 <= 0.9433016777038574) THEN 182 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_438 <= -0.44339147210121155) THEN 184 ELSE 185 END END END ELSE 186 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_231 <= -0.7176967263221741) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_370 <= 0.032535113394260406) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_29 <= 1.7802609205245972) THEN 190 ELSE 191 END ELSE 192 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_345 <= 1.3642733097076416) THEN 194 ELSE 195 END END END END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_361 <= -0.18944209814071655) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_452 <= 1.1926918029785156) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_112 <= -1.749668836593628) THEN 199 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_39 <= -1.485302209854126) THEN 201 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_413 <= -0.35710984468460083) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_158 <= 0.7787574529647827) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_84 <= -0.960651159286499) THEN 205 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_317 <= -0.2784743309020996) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_496 <= 0.006819736212491989) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_275 <= -0.46470674872398376) THEN 209 ELSE 210 END ELSE 211 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_31 <= 0.9886578321456909) THEN 213 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_406 <= 0.4059711694717407) THEN 215 ELSE 216 END END END END ELSE 217 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_391 <= -1.8229389190673828) THEN 219 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_25 <= 1.5914952754974365) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_113 <= -1.2300812005996704) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_372 <= -0.39087724685668945) THEN 223 ELSE 224 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_212 <= 1.5337557792663574) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_373 <= 1.2472434043884277) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_363 <= 2.504673480987549) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_83 <= 2.054948329925537) THEN 229 ELSE 230 END ELSE 231 END ELSE 232 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_302 <= -0.23134887218475342) THEN 234 ELSE 235 END END END ELSE 236 END END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_408 <= -0.4027094841003418) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_323 <= -0.45799878239631653) THEN 239 ELSE 240 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_93 <= 0.4418703317642212) THEN 242 ELSE 243 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_59 <= -0.565916895866394) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_333 <= -0.5058360695838928) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_260 <= 1.0561541318893433) THEN 247 ELSE 248 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_395 <= 0.484116792678833) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_54 <= 0.8647440671920776) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_82 <= -0.43672963976860046) THEN 252 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_337 <= -1.4813430309295654) THEN 254 ELSE 255 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_282 <= -0.6626361608505249) THEN 257 ELSE 258 END END ELSE 259 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_340 <= 0.4919438064098358) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_65 <= 0.9926218390464783) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_286 <= -1.0581746101379395) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_189 <= 0.2767336368560791) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_146 <= 1.2071020603179932) THEN 265 ELSE 266 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_57 <= -0.7052286863327026) THEN 268 ELSE 269 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_315 <= -1.2011103630065918) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_372 <= 0.22877195477485657) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_153 <= -0.10419905185699463) THEN 273 ELSE 274 END ELSE 275 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_240 <= -0.534121572971344) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_260 <= -1.8620821237564087) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_364 <= 0.5645666122436523) THEN 279 ELSE 280 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_80 <= 0.934133768081665) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_485 <= -1.6908231973648071) THEN 283 ELSE 284 END ELSE 285 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_190 <= -1.1931076049804688) THEN 287 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_137 <= -1.7605900764465332) THEN 289 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_210 <= 0.4857364296913147) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_230 <= 1.2804887294769287) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_373 <= -1.294326663017273) THEN 293 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_397 <= -1.263942003250122) THEN 295 ELSE 296 END END ELSE 297 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_326 <= -0.22318656742572784) THEN 299 ELSE 300 END END END END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_125 <= 0.7360005378723145) THEN 302 ELSE 303 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_485 <= 0.6746739149093628) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_149 <= 0.9764302968978882) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_66 <= -0.01486683078110218) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_106 <= 0.005317181348800659) THEN 308 ELSE 309 END ELSE 310 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_360 <= -0.13815239071846008) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_246 <= 1.010238766670227) THEN 313 ELSE 314 END ELSE 315 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= -0.7862913012504578) THEN 317 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_41 <= 0.37346363067626953) THEN 319 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_270 <= 0.2318117916584015) THEN 321 ELSE 322 END END END END END END END END AS node_id_2 
FROM "33421_53X5V4_ADS_SCA_2_OUT" "ADS_sca_2_OUT"), 
"DT_node_data_6" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0.0" AS "Proba_0.0", "Values"."LogProba_0.0" AS "LogProba_0.0", "Values"."Proba_1.0" AS "Proba_1.0", "Values"."LogProba_1.0" AS "LogProba_1.0", "Values"."Proba_2.0" AS "Proba_2.0", "Values"."LogProba_2.0" AS "LogProba_2.0", "Values"."Proba_3.0" AS "Proba_3.0", "Values"."LogProba_3.0" AS "LogProba_3.0", "Values"."Decision" AS "Decision", "Values"."DecisionProba" AS "DecisionProba" 
FROM (SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 4 AS depth, 3 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 6 AS depth, 6 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 12 AS count, 6 AS depth, 6 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 5 AS depth, 5 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 3 AS depth, 2 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 6 AS count, 5 AS depth, 13 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 5 AS depth, 13 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 10 AS depth, 21 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 12 AS depth, 24 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 12 AS depth, 24 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 8 AS count, 11 AS depth, 23 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 11 AS depth, 29 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 31 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 29 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 32 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 10 AS depth, 28 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 35 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 10 AS depth, 34 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 38 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 12 AS depth, 37 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 39 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 12 AS depth, 37 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 42 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 10 AS count, 13 AS depth, 41 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 43 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 13 AS depth, 41 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 44 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 12 AS depth, 40 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 47 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 11 AS depth, 46 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 48 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 46 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 50 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 11 AS depth, 49 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 52 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 12 AS depth, 51 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 53 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 12 AS count, 12 AS depth, 51 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 55 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 6 AS count, 8 AS depth, 54 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 56 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 54 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 58 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 7 AS depth, 57 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 61 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 9 AS depth, 60 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 63 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 62 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 64 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 62 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 67 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 66 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 68 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 10 AS depth, 66 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 70 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 10 AS depth, 69 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 73 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 12 AS depth, 72 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 74 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 12 AS depth, 72 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 76 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 12 AS depth, 75 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 77 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 12 AS count, 12 AS depth, 75 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 82 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 81 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 83 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 10 AS count, 9 AS depth, 81 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 86 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 10 AS depth, 85 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 88 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 87 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 89 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 11 AS depth, 87 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 90 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 9 AS depth, 84 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 93 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 92 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 94 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 8 AS count, 9 AS depth, 92 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 98 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 11 AS depth, 97 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 99 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 11 AS depth, 97 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 103 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 13 AS depth, 102 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 104 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 13 AS depth, 102 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 105 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 12 AS depth, 101 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 107 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 12 AS depth, 106 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 108 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 12 AS depth, 106 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 110 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 7 AS count, 10 AS depth, 109 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 111 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 109 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 114 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 8 AS depth, 113 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 117 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 116 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 119 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 18 AS count, 11 AS depth, 118 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 120 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 118 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 121 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 9 AS depth, 115 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 123 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 122 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 124 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 122 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 130 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 129 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 131 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 8 AS depth, 129 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 132 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 7 AS depth, 128 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 134 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 6 AS count, 7 AS depth, 133 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 135 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 7 AS depth, 133 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 138 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 7 AS depth, 137 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 139 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 7 AS depth, 137 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 144 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 143 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 145 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 10 AS depth, 143 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 150 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 13 AS depth, 149 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 151 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 13 AS depth, 149 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 152 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 12 AS depth, 148 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 155 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 13 AS depth, 154 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 157 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 14 AS depth, 156 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 158 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 34 AS count, 14 AS depth, 156 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 159 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 12 AS depth, 153 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 161 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 160 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 162 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 11 AS depth, 160 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 165 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 10 AS depth, 164 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 166 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 164 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 167 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 9 AS depth, 163 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 168 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 7 AS depth, 140 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 172 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 7 AS depth, 171 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 173 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 7 AS depth, 171 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 175 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 6 AS count, 7 AS depth, 174 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 176 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 7 AS depth, 174 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 180 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 8 AS depth, 179 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 182 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 9 AS depth, 181 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 184 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 183 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 185 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 183 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 186 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 7 AS depth, 178 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 190 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 9 AS depth, 189 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 191 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 189 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 192 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 8 AS depth, 188 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 194 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 8 AS count, 8 AS depth, 193 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 195 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 193 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 199 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 4 AS depth, 198 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 201 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 5 AS depth, 200 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 205 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 8 AS depth, 204 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 209 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 11 AS depth, 208 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 210 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 208 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 211 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 10 AS depth, 207 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 213 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 8 AS count, 10 AS depth, 212 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 215 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 214 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 216 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 214 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 217 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 7 AS depth, 203 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 219 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 7 AS depth, 218 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 223 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 222 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 224 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 222 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 229 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 25 AS count, 13 AS depth, 228 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 230 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 13 AS depth, 228 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 231 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 12 AS depth, 227 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 232 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 226 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 234 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 233 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 235 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 233 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 236 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 8 AS depth, 220 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 239 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 5 AS depth, 238 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 240 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 5 AS depth, 238 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 242 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 5 AS depth, 241 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 243 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 5 AS depth, 241 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 247 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 5 AS depth, 246 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 248 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 5 AS depth, 246 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 252 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 7 AS depth, 251 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 254 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 253 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 255 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 6 AS count, 8 AS depth, 253 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 257 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 7 AS depth, 256 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 258 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 7 AS depth, 256 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 259 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 6 AS count, 5 AS depth, 249 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 265 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 8 AS depth, 264 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 266 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 264 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 268 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 267 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 269 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 8 AS depth, 267 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 273 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 272 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 274 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 272 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 275 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 6 AS count, 8 AS depth, 271 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 279 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 278 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 280 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 10 AS depth, 278 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 283 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 282 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 284 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 11 AS depth, 282 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 285 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 10 AS depth, 281 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 287 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 9 AS depth, 286 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 289 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 10 AS depth, 288 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 293 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 13 AS depth, 292 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 295 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 14 AS depth, 294 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 296 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 16 AS count, 14 AS depth, 294 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 297 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 12 AS depth, 291 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 299 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 12 AS depth, 298 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 300 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 12 AS depth, 298 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 302 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 6 AS depth, 301 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 303 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 6 AS depth, 301 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 308 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 307 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 309 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 307 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 310 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 9 AS count, 7 AS depth, 306 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 313 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 312 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 314 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 312 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 315 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 7 AS depth, 311 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 317 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 6 AS depth, 316 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 319 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 8 AS count, 7 AS depth, 318 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 321 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 8 AS depth, 320 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 322 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 320 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL) "Values"), 
"DT_Output_6" AS 
(SELECT "DT_node_lookup_6"."KEY" AS "KEY", "DT_node_lookup_6".node_id_2 AS node_id_2, "DT_node_data_6".node_id AS node_id, "DT_node_data_6".feature AS feature, "DT_node_data_6".threshold AS threshold, "DT_node_data_6".count AS count, "DT_node_data_6".depth AS depth, "DT_node_data_6".parent_id AS parent_id, "DT_node_data_6"."Proba_0.0" AS "Proba_0.0", "DT_node_data_6"."LogProba_0.0" AS "LogProba_0.0", "DT_node_data_6"."Proba_1.0" AS "Proba_1.0", "DT_node_data_6"."LogProba_1.0" AS "LogProba_1.0", "DT_node_data_6"."Proba_2.0" AS "Proba_2.0", "DT_node_data_6"."LogProba_2.0" AS "LogProba_2.0", "DT_node_data_6"."Proba_3.0" AS "Proba_3.0", "DT_node_data_6"."LogProba_3.0" AS "LogProba_3.0", "DT_node_data_6"."Decision" AS "Decision", "DT_node_data_6"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup_6" LEFT OUTER JOIN "DT_node_data_6" ON "DT_node_lookup_6".node_id_2 = "DT_node_data_6".node_id), 
"RF_Tree_6" AS 
(SELECT "DT_Output_6"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output_6"."Proba_0.0" AS "Proba_0", "DT_Output_6"."LogProba_0.0" AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output_6"."Proba_1.0" AS "Proba_1", "DT_Output_6"."LogProba_1.0" AS "LogProba_1", CAST(NULL AS BINARY_DOUBLE) AS "Score_2", "DT_Output_6"."Proba_2.0" AS "Proba_2", "DT_Output_6"."LogProba_2.0" AS "LogProba_2", CAST(NULL AS BINARY_DOUBLE) AS "Score_3", "DT_Output_6"."Proba_3.0" AS "Proba_3", "DT_Output_6"."LogProba_3.0" AS "LogProba_3" 
FROM "DT_Output_6"), 
"DT_node_lookup_7" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_102 <= -1.5063667297363281) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_236 <= 1.3300676345825195) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_414 <= 0.3960379362106323) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_362 <= -0.908228874206543) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_364 <= 0.7768948078155518) THEN 5 ELSE 6 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_182 <= -0.8552631735801697) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_99 <= 1.279223084449768) THEN 9 ELSE 10 END ELSE 11 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_217 <= -0.8965226411819458) THEN 13 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_437 <= -1.177107810974121) THEN 15 ELSE 16 END END END ELSE 17 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_254 <= -1.0039756298065186) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_485 <= 0.35306957364082336) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_369 <= 0.18368670344352722) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_465 <= 0.6839598417282104) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_224 <= -0.5120401382446289) THEN 23 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_346 <= 0.03876913711428642) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_210 <= -1.3425555229187012) THEN 26 ELSE 27 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_93 <= -1.5781970024108887) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_285 <= 0.398837685585022) THEN 30 ELSE 31 END ELSE 32 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_107 <= 0.6756734848022461) THEN 34 ELSE 35 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_238 <= -0.6227911710739136) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_301 <= 0.33113473653793335) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_300 <= 0.8585842847824097) THEN 39 ELSE 40 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_23 <= -0.6480998992919922) THEN 42 ELSE 43 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 0.7355555891990662) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_103 <= 1.282930612564087) THEN 46 ELSE 47 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_432 <= 0.9039961695671082) THEN 49 ELSE 50 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_34 <= 1.7607423067092896) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_123 <= -2.178401470184326) THEN 53 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_166 <= 0.5180350542068481) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_163 <= -1.2557504177093506) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_135 <= 0.2916777729988098) THEN 57 ELSE 58 END ELSE 59 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= -0.21550075709819794) THEN 61 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_169 <= -0.08937661349773407) THEN 63 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_443 <= 0.07301932573318481) THEN 65 ELSE 66 END END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_152 <= 0.6488847136497498) THEN 68 ELSE 69 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_20 <= 0.8877110481262207) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_131 <= 0.5062507390975952) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_143 <= -0.8209249973297119) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_481 <= -0.5689949989318848) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_203 <= -0.36625558137893677) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_471 <= -0.44798529148101807) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_134 <= -0.9156885147094727) THEN 77 ELSE 78 END ELSE 79 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_187 <= 1.7518036365509033) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_237 <= 2.05527400970459) THEN 82 ELSE 83 END ELSE 84 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_320 <= 0.11149507761001587) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_278 <= -0.23235544562339783) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= -0.4794836640357971) THEN 88 ELSE 89 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_345 <= -0.6621291637420654) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= 0.2862790524959564) THEN 92 ELSE 93 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_235 <= 1.7427403926849365) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_338 <= 0.5165619254112244) THEN 96 ELSE 97 END ELSE 98 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_338 <= 0.17588496208190918) THEN 100 ELSE 101 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_465 <= -1.3422436714172363) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_76 <= 0.15556380152702332) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_134 <= -0.7140657901763916) THEN 105 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_458 <= 0.09613475948572159) THEN 107 ELSE 108 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_398 <= -1.7334359884262085) THEN 110 ELSE 111 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_93 <= 0.6771069169044495) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_430 <= -1.2361233234405518) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_143 <= 0.2468324899673462) THEN 115 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_38 <= -1.414677381515503) THEN 117 ELSE 118 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_215 <= -1.1164560317993164) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_54 <= -0.8055059909820557) THEN 121 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_416 <= -0.591698408126831) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_51 <= -0.7540831565856934) THEN 124 ELSE 125 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_474 <= -0.8891745805740356) THEN 127 ELSE 128 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_298 <= 0.25815802812576294) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_211 <= 1.28151273727417) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_32 <= 0.7519298791885376) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_80 <= 0.41651374101638794) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_474 <= 0.5221153497695923) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_380 <= -1.667193055152893) THEN 135 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_33 <= -1.2176721096038818) THEN 137 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_14 <= 1.5826036930084229) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_479 <= 1.1852478981018066) THEN 140 ELSE 141 END ELSE 142 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_421 <= -1.0885415077209473) THEN 144 ELSE 145 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_350 <= 0.8774834871292114) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_151 <= 0.4447615146636963) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_227 <= -0.7410823702812195) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_39 <= 0.5758525133132935) THEN 150 ELSE 151 END ELSE 152 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_386 <= -0.7464693784713745) THEN 154 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_230 <= 0.5277696847915649) THEN 156 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_331 <= 0.07080020010471344) THEN 158 ELSE 159 END END END END ELSE 160 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_310 <= 0.23848368227481842) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_137 <= 0.2759302854537964) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_377 <= -1.6907299757003784) THEN 164 ELSE 165 END ELSE 166 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_197 <= -0.08439531177282333) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_138 <= -0.553685188293457) THEN 169 ELSE 170 END ELSE 171 END END END ELSE 172 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_258 <= -0.7771360874176025) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_122 <= -0.355189710855484) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_188 <= -1.661577582359314) THEN 176 ELSE 177 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_157 <= -0.38375717401504517) THEN 179 ELSE 180 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_373 <= 1.6289470195770264) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_43 <= 1.7258795499801636) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_105 <= -1.2694799900054932) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_497 <= -0.1355736255645752) THEN 185 ELSE 186 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_49 <= -1.4470545053482056) THEN 188 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_264 <= 1.3137543201446533) THEN 190 ELSE 191 END END END ELSE 192 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_479 <= 0.9657641053199768) THEN 194 ELSE 195 END END END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_38 <= 0.8284567594528198) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_472 <= 0.13164204359054565) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_262 <= -0.9263384342193604) THEN 199 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_257 <= -0.3879663944244385) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_296 <= -0.4356479048728943) THEN 202 ELSE 203 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_448 <= 0.6059159636497498) THEN 205 ELSE 206 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_492 <= -0.7181453108787537) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_394 <= -1.859500527381897) THEN 209 ELSE 210 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_93 <= 1.166952133178711) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_99 <= -0.19539906084537506) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_35 <= -1.450603723526001) THEN 214 ELSE 215 END ELSE 216 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_90 <= 1.1874922513961792) THEN 218 ELSE 219 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_462 <= 0.9952523708343506) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_499 <= -1.424886703491211) THEN 222 ELSE 223 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_181 <= -1.4041534662246704) THEN 225 ELSE 226 END END END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_264 <= 0.9534708261489868) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_391 <= -0.2917945683002472) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_130 <= 0.690811276435852) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_19 <= 0.4524160921573639) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= -0.834374725818634) THEN 232 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_185 <= -0.5085465908050537) THEN 234 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_465 <= -1.3176140785217285) THEN 236 ELSE 237 END END END ELSE 238 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_341 <= 1.0513079166412354) THEN 240 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_327 <= -0.2274949848651886) THEN 242 ELSE 243 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_278 <= 1.241302728652954) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_156 <= 1.0356675386428833) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_52 <= -0.6477755904197693) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_454 <= 0.8410464525222778) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_104 <= -0.362391859292984) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_53 <= 1.261744499206543) THEN 250 ELSE 251 END ELSE 252 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_245 <= 0.6162335872650146) THEN 254 ELSE 255 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_249 <= 1.1783629655838013) THEN 257 ELSE 258 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_367 <= 1.0793917179107666) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_458 <= -0.1063232421875) THEN 261 ELSE 262 END ELSE 263 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_209 <= 0.626477837562561) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_388 <= -0.2680579125881195) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_20 <= -0.8121252059936523) THEN 267 ELSE 268 END ELSE 269 END ELSE 270 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_93 <= 1.1450915336608887) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_381 <= -0.39411377906799316) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_130 <= 1.5808734893798828) THEN 274 ELSE 275 END ELSE 276 END ELSE 277 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_64 <= -0.5138555765151978) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_180 <= 2.4012644290924072) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_241 <= -1.2612121105194092) THEN 281 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_85 <= 1.3038356304168701) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_213 <= -1.7906960248947144) THEN 284 ELSE 285 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_81 <= -0.15162420272827148) THEN 287 ELSE 288 END END END ELSE 289 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_288 <= -0.581632137298584) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_14 <= 1.1650526523590088) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_443 <= -2.467193365097046) THEN 293 ELSE 294 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_393 <= 0.08806952089071274) THEN 296 ELSE 297 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_416 <= -0.4667210578918457) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_224 <= -0.5803764462471008) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_496 <= -1.6285250186920166) THEN 301 ELSE 302 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_391 <= 1.6721713542938232) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_361 <= 1.1003317832946777) THEN 305 ELSE 306 END ELSE 307 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_379 <= -0.4303135275840759) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_364 <= 0.248524472117424) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_171 <= 0.7968921661376953) THEN 311 ELSE 312 END ELSE 313 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_87 <= -1.3415327072143555) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_238 <= 0.05785554647445679) THEN 316 ELSE 317 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_234 <= -0.8855254650115967) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_155 <= -0.11040517687797546) THEN 320 ELSE 321 END ELSE 322 END END END END END END END END END AS node_id_2 
FROM "33421_53X5V4_ADS_SCA_2_OUT" "ADS_sca_2_OUT"), 
"DT_node_data_7" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0.0" AS "Proba_0.0", "Values"."LogProba_0.0" AS "LogProba_0.0", "Values"."Proba_1.0" AS "Proba_1.0", "Values"."LogProba_1.0" AS "LogProba_1.0", "Values"."Proba_2.0" AS "Proba_2.0", "Values"."LogProba_2.0" AS "LogProba_2.0", "Values"."Proba_3.0" AS "Proba_3.0", "Values"."LogProba_3.0" AS "LogProba_3.0", "Values"."Decision" AS "Decision", "Values"."DecisionProba" AS "DecisionProba" 
FROM (SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 5 AS depth, 4 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 5 AS depth, 4 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 6 AS depth, 8 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 6 AS depth, 8 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 16 AS count, 5 AS depth, 7 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 4 AS depth, 12 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 5 AS depth, 14 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 5 AS depth, 14 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 2 AS depth, 1 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 6 AS count, 6 AS depth, 22 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 8 AS depth, 25 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 6 AS count, 8 AS depth, 25 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 29 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 31 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 29 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 32 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 8 AS depth, 28 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 34 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 6 AS depth, 33 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 35 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 6 AS depth, 33 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 39 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 7 AS depth, 38 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 40 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 7 AS depth, 38 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 42 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 7 AS depth, 41 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 43 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 7 AS depth, 41 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 46 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 11 AS count, 7 AS depth, 45 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 47 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 7 AS depth, 45 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 49 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 7 AS depth, 48 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 50 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 7 AS depth, 48 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 53 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 5 AS depth, 52 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 57 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 56 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 58 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 56 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 59 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 24 AS count, 7 AS depth, 55 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 61 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 7 AS depth, 60 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 63 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 8 AS depth, 62 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 65 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 64 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 66 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 64 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 68 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 5 AS depth, 67 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 69 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 5 AS depth, 67 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 77 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 76 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 78 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 76 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 79 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 8 AS depth, 75 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 82 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 13 AS count, 9 AS depth, 81 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 83 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 81 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 84 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 80 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 88 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 87 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 89 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 7 AS count, 9 AS depth, 87 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 92 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 10 AS depth, 91 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 93 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 91 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 96 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 6 AS count, 11 AS depth, 95 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 97 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 95 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 98 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 10 AS depth, 94 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 100 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 6 AS count, 8 AS depth, 99 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 101 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 99 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 105 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 104 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 107 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 10 AS count, 9 AS depth, 106 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 108 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 106 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 110 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 109 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 111 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 8 AS depth, 109 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 115 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 9 AS depth, 114 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 117 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 116 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 118 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 10 AS depth, 116 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 121 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 10 AS depth, 120 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 124 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 12 AS depth, 123 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 125 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 12 AS depth, 123 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 127 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 12 AS depth, 126 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 128 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 12 AS depth, 126 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 135 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 15 AS depth, 134 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 137 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 16 AS depth, 136 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 140 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 16 AS count, 18 AS depth, 139 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 141 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 18 AS depth, 139 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 142 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 17 AS depth, 138 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 144 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 15 AS depth, 143 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 145 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 15 AS depth, 143 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 150 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 17 AS depth, 149 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 151 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 17 AS depth, 149 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 152 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 6 AS count, 16 AS depth, 148 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 154 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 16 AS depth, 153 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 156 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 17 AS depth, 155 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 158 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 18 AS depth, 157 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 159 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 18 AS depth, 157 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 160 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 14 AS depth, 146 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 164 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 15 AS depth, 163 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 165 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 15 AS depth, 163 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 166 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 14 AS depth, 162 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 169 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 15 AS depth, 168 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 170 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 15 AS depth, 168 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 171 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 14 AS depth, 167 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 172 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 11 AS depth, 130 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 176 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 13 AS depth, 175 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 177 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 13 AS depth, 175 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 179 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 13 AS depth, 178 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 180 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 13 AS depth, 178 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 185 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 15 AS depth, 184 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 186 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 15 AS depth, 184 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 188 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 15 AS depth, 187 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 190 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 22 AS count, 16 AS depth, 189 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 191 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 16 AS depth, 189 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 192 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 13 AS depth, 182 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 194 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 13 AS depth, 193 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 195 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 13 AS depth, 193 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 199 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 10 AS depth, 198 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 202 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 12 AS depth, 201 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 203 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 12 AS depth, 201 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 205 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 11 AS count, 12 AS depth, 204 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 206 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 12 AS depth, 204 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 209 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 208 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 210 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 11 AS depth, 208 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 214 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 13 AS depth, 213 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 215 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 13 AS depth, 213 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 216 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 12 AS depth, 212 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 218 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 8 AS count, 12 AS depth, 217 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 219 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 12 AS depth, 217 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 222 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 221 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 223 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 6 AS count, 10 AS depth, 221 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 225 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 224 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 226 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 224 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 232 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 9 AS depth, 231 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 234 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 10 AS depth, 233 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 236 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 235 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 237 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 9 AS count, 11 AS depth, 235 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 238 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 8 AS depth, 230 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 240 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 8 AS depth, 239 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 242 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 241 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 243 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 241 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 250 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 12 AS depth, 249 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 251 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 12 AS depth, 249 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 252 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 11 AS depth, 248 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 254 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 11 AS depth, 253 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 255 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 253 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 257 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 21 AS count, 10 AS depth, 256 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 258 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 256 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 261 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 260 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 262 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 10 AS depth, 260 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 263 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 259 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 267 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 266 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 268 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 266 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 269 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 9 AS depth, 265 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 270 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 8 AS depth, 264 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 274 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 8 AS depth, 273 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 275 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 273 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 276 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 7 AS depth, 272 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 277 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 6 AS depth, 271 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 281 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 6 AS depth, 280 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 284 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 283 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 285 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 18 AS count, 8 AS depth, 283 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 287 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 286 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 288 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 286 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 289 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 5 AS depth, 279 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 293 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 7 AS depth, 292 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 294 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 8 AS count, 7 AS depth, 292 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 296 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 7 AS depth, 295 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 297 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 7 AS depth, 295 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 301 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 300 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 302 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 8 AS depth, 300 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 305 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 8 AS count, 9 AS depth, 304 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 306 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 304 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 307 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 303 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 311 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 9 AS depth, 310 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 312 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 310 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 313 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 8 AS depth, 309 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 316 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 315 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 317 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 315 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 320 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 319 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 321 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 319 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 322 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 8 AS count, 9 AS depth, 318 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL) "Values"), 
"DT_Output_7" AS 
(SELECT "DT_node_lookup_7"."KEY" AS "KEY", "DT_node_lookup_7".node_id_2 AS node_id_2, "DT_node_data_7".node_id AS node_id, "DT_node_data_7".feature AS feature, "DT_node_data_7".threshold AS threshold, "DT_node_data_7".count AS count, "DT_node_data_7".depth AS depth, "DT_node_data_7".parent_id AS parent_id, "DT_node_data_7"."Proba_0.0" AS "Proba_0.0", "DT_node_data_7"."LogProba_0.0" AS "LogProba_0.0", "DT_node_data_7"."Proba_1.0" AS "Proba_1.0", "DT_node_data_7"."LogProba_1.0" AS "LogProba_1.0", "DT_node_data_7"."Proba_2.0" AS "Proba_2.0", "DT_node_data_7"."LogProba_2.0" AS "LogProba_2.0", "DT_node_data_7"."Proba_3.0" AS "Proba_3.0", "DT_node_data_7"."LogProba_3.0" AS "LogProba_3.0", "DT_node_data_7"."Decision" AS "Decision", "DT_node_data_7"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup_7" LEFT OUTER JOIN "DT_node_data_7" ON "DT_node_lookup_7".node_id_2 = "DT_node_data_7".node_id), 
"RF_Tree_7" AS 
(SELECT "DT_Output_7"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output_7"."Proba_0.0" AS "Proba_0", "DT_Output_7"."LogProba_0.0" AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output_7"."Proba_1.0" AS "Proba_1", "DT_Output_7"."LogProba_1.0" AS "LogProba_1", CAST(NULL AS BINARY_DOUBLE) AS "Score_2", "DT_Output_7"."Proba_2.0" AS "Proba_2", "DT_Output_7"."LogProba_2.0" AS "LogProba_2", CAST(NULL AS BINARY_DOUBLE) AS "Score_3", "DT_Output_7"."Proba_3.0" AS "Proba_3", "DT_Output_7"."LogProba_3.0" AS "LogProba_3" 
FROM "DT_Output_7"), 
"DT_node_lookup_8" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_73 <= -0.1163066104054451) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_477 <= -0.5801628828048706) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_199 <= 1.3393042087554932) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_252 <= 1.0137560367584229) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_443 <= 0.9915028810501099) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_282 <= -0.9403749108314514) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_318 <= -0.28474366664886475) THEN 7 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_367 <= -0.7069583535194397) THEN 9 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_130 <= -0.006494343280792236) THEN 11 ELSE 12 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_102 <= -1.7339966297149658) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_107 <= 0.3697463870048523) THEN 15 ELSE 16 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_157 <= -0.6174776554107666) THEN 18 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_470 <= -1.9060330390930176) THEN 20 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_476 <= -1.479727864265442) THEN 22 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_420 <= -1.8869149684906006) THEN 24 ELSE 25 END END END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_249 <= -0.2827518880367279) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_61 <= 1.0681686401367188) THEN 28 ELSE 29 END ELSE 30 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_348 <= 0.17910808324813843) THEN 32 ELSE 33 END END ELSE 34 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_136 <= -0.4322934150695801) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_276 <= -0.0689041018486023) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_412 <= -0.6411020755767822) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_148 <= 0.38586658239364624) THEN 39 ELSE 40 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_344 <= 0.07993631809949875) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_297 <= -0.8130341172218323) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_365 <= -1.222292184829712) THEN 44 ELSE 45 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_159 <= 0.5668987035751343) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_41 <= 0.8347575664520264) THEN 48 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_228 <= 1.5273882150650024) THEN 50 ELSE 51 END END ELSE 52 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_397 <= -0.8922348022460938) THEN 54 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_389 <= -1.6317414045333862) THEN 56 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_493 <= -1.0727006196975708) THEN 58 ELSE 59 END END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_91 <= 0.493664026260376) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_281 <= -1.5275180339813232) THEN 62 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_280 <= 1.7553093433380127) THEN 64 ELSE 65 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_127 <= -0.23361220955848694) THEN 67 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_430 <= 0.36346936225891113) THEN 69 ELSE 70 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_479 <= -0.8633254766464233) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_481 <= -0.06313934177160263) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_450 <= 0.4134983420372009) THEN 74 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_455 <= -0.07220768928527832) THEN 76 ELSE 77 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_369 <= -0.49640172719955444) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_343 <= -0.3679843246936798) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_173 <= -0.2919553518295288) THEN 81 ELSE 82 END ELSE 83 END ELSE 84 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_345 <= 0.7700363993644714) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_326 <= 0.10806280374526978) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_475 <= -1.3882215023040771) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_64 <= -1.54876708984375) THEN 89 ELSE 90 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_102 <= 0.2622177004814148) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_109 <= -0.7878884077072144) THEN 93 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_64 <= -1.594433069229126) THEN 95 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_156 <= 1.5808970928192139) THEN 97 ELSE 98 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_236 <= -0.6222273111343384) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_429 <= -0.8767614960670471) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_172 <= 1.492920994758606) THEN 102 ELSE 103 END ELSE 104 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_182 <= 0.03523494303226471) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_118 <= -1.0441868305206299) THEN 107 ELSE 108 END ELSE 109 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_426 <= 0.8581054210662842) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_159 <= 0.14997710287570953) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_309 <= -0.4336751103401184) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_456 <= -0.2740204930305481) THEN 114 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_463 <= -1.1087396144866943) THEN 116 ELSE 117 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_57 <= -0.8141607642173767) THEN 119 ELSE 120 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_501 <= 1.0390393733978271) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_482 <= 0.4333803951740265) THEN 123 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_501 <= -0.5048028230667114) THEN 125 ELSE 126 END END ELSE 127 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_56 <= 0.20791423320770264) THEN 129 ELSE 130 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_426 <= -1.8446613550186157) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_466 <= 0.07641404867172241) THEN 133 ELSE 134 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_107 <= -0.6288955211639404) THEN 136 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_283 <= 1.1891138553619385) THEN 138 ELSE 139 END END END END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_379 <= -0.868189811706543) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_193 <= 0.7449394464492798) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_339 <= -0.2847260534763336) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_301 <= -1.1234664916992188) THEN 144 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_122 <= 1.509805679321289) THEN 146 ELSE 147 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_150 <= -0.4446602761745453) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_273 <= -0.6701558232307434) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_358 <= 1.8924927711486816) THEN 151 ELSE 152 END ELSE 153 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_345 <= 0.13674694299697876) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_237 <= -1.9760956764221191) THEN 156 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_488 <= -0.3479580581188202) THEN 158 ELSE 159 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_212 <= -0.7564699053764343) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_190 <= -0.12490198016166687) THEN 162 ELSE 163 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_341 <= -0.9940683841705322) THEN 165 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_59 <= 1.4482464790344238) THEN 167 ELSE 168 END END END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_390 <= -0.4837959408760071) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_281 <= -0.6994971036911011) THEN 171 ELSE 172 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_343 <= 1.146233081817627) THEN 174 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_489 <= -0.07678604125976562) THEN 176 ELSE 177 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_185 <= -2.0440492630004883) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_28 <= -1.2553943395614624) THEN 180 ELSE 181 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_20 <= 0.49126172065734863) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_134 <= 0.13719820976257324) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_495 <= 0.7597804069519043) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= -0.4954661726951599) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_25 <= -0.38906988501548767) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_209 <= 0.07178846001625061) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_206 <= 1.3541040420532227) THEN 189 ELSE 190 END ELSE 191 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_457 <= 0.8887682557106018) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_261 <= -0.16237011551856995) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_333 <= 0.4382689595222473) THEN 195 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_122 <= 0.6529717445373535) THEN 197 ELSE 198 END END ELSE 199 END ELSE 200 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_337 <= -0.9336005449295044) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_382 <= 0.28527554869651794) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_422 <= -0.4734727740287781) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_46 <= 0.6721057891845703) THEN 205 ELSE 206 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_271 <= -0.2013131082057953) THEN 208 ELSE 209 END END ELSE 210 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_400 <= 1.4921107292175293) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_146 <= -0.9468644857406616) THEN 213 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_148 <= -1.3916435241699219) THEN 215 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_214 <= -2.096385955810547) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_468 <= -0.8018103241920471) THEN 218 ELSE 219 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_168 <= 1.4296505451202393) THEN 221 ELSE 222 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_129 <= 0.2023075968027115) THEN 224 ELSE 225 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_67 <= 1.2390564680099487) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_401 <= 1.239511251449585) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_175 <= 0.8145694732666016) THEN 229 ELSE 230 END ELSE 231 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_422 <= 0.8551341891288757) THEN 233 ELSE 234 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_195 <= 0.9807795286178589) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_193 <= 0.49030745029449463) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_241 <= -0.4793015718460083) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_331 <= 0.5234037041664124) THEN 239 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_487 <= -0.22928304970264435) THEN 241 ELSE 242 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_119 <= 0.5805602073669434) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_335 <= 0.9848979711532593) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_285 <= 0.6542913317680359) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_305 <= -1.2224494218826294) THEN 247 ELSE 248 END ELSE 249 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_300 <= -0.3299703598022461) THEN 251 ELSE 252 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_478 <= -0.8718846440315247) THEN 254 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_164 <= -0.20559674501419067) THEN 256 ELSE 257 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_393 <= 2.1128807067871094) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_181 <= 0.3363337516784668) THEN 260 ELSE 261 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_13 <= 0.3561038374900818) THEN 263 ELSE 264 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_345 <= 1.8710596561431885) THEN 266 ELSE 267 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_291 <= -1.7085613012313843) THEN 269 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_93 <= -1.0864579677581787) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_245 <= 1.28694748878479) THEN 272 ELSE 273 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_197 <= -0.5299011468887329) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_72 <= 0.34152162075042725) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_343 <= -0.32842981815338135) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_389 <= -0.35695746541023254) THEN 278 ELSE 279 END ELSE 280 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_157 <= 0.6151182651519775) THEN 282 ELSE 283 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_181 <= 0.5751766562461853) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_259 <= 0.5596261024475098) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_499 <= -0.6088672280311584) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_494 <= 0.6608096957206726) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_295 <= -0.5216063261032104) THEN 289 ELSE 290 END ELSE 291 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_357 <= -0.782849907875061) THEN 293 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_383 <= -0.7276580929756165) THEN 295 ELSE 296 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_466 <= 0.10313484072685242) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_56 <= -0.308786004781723) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_49 <= -0.7945907115936279) THEN 300 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_150 <= -0.691811203956604) THEN 302 ELSE 303 END END ELSE 304 END ELSE 305 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_411 <= 0.21702119708061218) THEN 307 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_321 <= -0.4548419117927551) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_205 <= -0.21455827355384827) THEN 310 ELSE 311 END ELSE 312 END END END END END END END END END END AS node_id_2 
FROM "33421_53X5V4_ADS_SCA_2_OUT" "ADS_sca_2_OUT"), 
"DT_node_data_8" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0.0" AS "Proba_0.0", "Values"."LogProba_0.0" AS "LogProba_0.0", "Values"."Proba_1.0" AS "Proba_1.0", "Values"."LogProba_1.0" AS "LogProba_1.0", "Values"."Proba_2.0" AS "Proba_2.0", "Values"."LogProba_2.0" AS "LogProba_2.0", "Values"."Proba_3.0" AS "Proba_3.0", "Values"."LogProba_3.0" AS "LogProba_3.0", "Values"."Decision" AS "Decision", "Values"."DecisionProba" AS "DecisionProba" 
FROM (SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 7 AS depth, 6 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 8 AS depth, 8 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 10 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 10 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 8 AS depth, 14 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 14 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 8 AS depth, 17 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 19 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 10 AS depth, 21 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 23 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 22 AS count, 11 AS depth, 23 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 28 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 7 AS depth, 27 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 29 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 7 AS depth, 27 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 6 AS depth, 26 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 32 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 7 AS count, 5 AS depth, 31 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 33 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 5 AS depth, 31 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 34 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 3 AS depth, 2 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 39 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 6 AS depth, 38 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 40 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 6 AS depth, 38 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 44 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 43 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 45 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 8 AS depth, 43 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 48 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 9 AS depth, 47 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 50 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 10 AS depth, 49 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 51 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 49 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 52 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 8 AS depth, 46 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 54 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 7 AS depth, 53 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 56 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 55 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 58 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 57 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 59 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 8 AS count, 9 AS depth, 57 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 62 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 6 AS depth, 61 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 64 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 14 AS count, 7 AS depth, 63 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 65 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 7 AS depth, 63 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 67 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 6 AS depth, 66 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 69 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 7 AS depth, 68 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 70 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 6 AS count, 7 AS depth, 68 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 74 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 7 AS count, 6 AS depth, 73 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 76 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 7 AS depth, 75 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 77 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 7 AS depth, 75 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 81 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 80 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 82 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 80 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 83 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 7 AS depth, 79 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 84 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 6 AS depth, 78 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 89 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 88 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 90 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 8 AS depth, 88 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 93 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 9 AS depth, 92 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 95 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 94 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 97 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 11 AS count, 11 AS depth, 96 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 98 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 96 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 102 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 101 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 103 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 101 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 104 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 6 AS count, 10 AS depth, 100 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 107 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 106 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 108 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 11 AS depth, 106 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 109 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 10 AS depth, 105 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 114 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 10 AS depth, 113 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 116 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 115 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 117 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 11 AS depth, 115 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 119 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 118 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 120 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 13 AS count, 10 AS depth, 118 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 123 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 10 AS depth, 122 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 125 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 124 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 126 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 11 AS depth, 124 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 127 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 9 AS depth, 121 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 129 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 8 AS depth, 128 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 130 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 128 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 133 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 7 AS depth, 132 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 134 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 7 AS depth, 132 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 136 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 7 AS depth, 135 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 138 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 15 AS count, 8 AS depth, 137 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 139 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 137 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 144 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 5 AS depth, 143 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 146 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 18 AS count, 6 AS depth, 145 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 147 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 6 AS depth, 145 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 151 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 7 AS depth, 150 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 152 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 7 AS depth, 150 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 153 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 6 AS count, 6 AS depth, 149 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 156 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 7 AS depth, 155 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 158 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 8 AS depth, 157 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 159 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 8 AS depth, 157 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 162 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 161 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 163 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 8 AS depth, 161 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 165 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 164 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 167 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 9 AS count, 9 AS depth, 166 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 168 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 166 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 171 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 5 AS depth, 170 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 172 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 6 AS count, 5 AS depth, 170 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 174 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 5 AS depth, 173 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 176 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 6 AS depth, 175 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 177 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 6 AS depth, 175 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 180 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 4 AS depth, 179 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 181 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 6 AS count, 4 AS depth, 179 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 189 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 188 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 190 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 188 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 191 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 9 AS depth, 187 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 195 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 194 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 197 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 12 AS depth, 196 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 198 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 12 AS depth, 196 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 199 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 10 AS depth, 193 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 200 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 6 AS count, 9 AS depth, 192 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 205 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 11 AS depth, 204 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 206 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 204 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 208 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 11 AS depth, 207 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 209 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 207 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 210 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 9 AS depth, 202 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 213 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 10 AS depth, 212 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 215 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 11 AS depth, 214 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 218 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 13 AS depth, 217 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 219 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 13 AS depth, 217 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 221 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 16 AS count, 13 AS depth, 220 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 222 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 13 AS depth, 220 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 224 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 10 AS depth, 223 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 225 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 223 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 229 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 10 AS count, 9 AS depth, 228 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 230 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 228 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 231 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 227 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 233 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 232 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 234 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 232 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 239 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 6 AS count, 9 AS depth, 238 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 241 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 240 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 242 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 240 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 247 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 12 AS depth, 246 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 248 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 11 AS count, 12 AS depth, 246 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 249 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 11 AS depth, 245 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 251 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 250 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 252 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 250 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 254 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 10 AS depth, 253 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 256 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 11 AS depth, 255 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 257 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 11 AS depth, 255 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 260 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 16 AS count, 9 AS depth, 259 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 261 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 9 AS depth, 259 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 263 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 262 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 264 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 262 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 266 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 7 AS depth, 265 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 267 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 7 AS depth, 265 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 269 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 5 AS depth, 268 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 272 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 7 AS depth, 271 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 273 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 7 AS depth, 271 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 278 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 277 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 279 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 10 AS depth, 277 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 280 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 12 AS count, 9 AS depth, 276 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 282 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 9 AS depth, 281 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 283 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 281 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 289 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 12 AS depth, 288 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 290 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 12 AS depth, 288 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 291 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 11 AS depth, 287 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 293 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 292 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 295 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 12 AS depth, 294 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 296 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 12 AS count, 12 AS depth, 294 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 300 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 12 AS depth, 299 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 302 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 13 AS depth, 301 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 303 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 13 AS depth, 301 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 304 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 11 AS depth, 298 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 305 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 10 AS depth, 297 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 307 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 7 AS count, 9 AS depth, 306 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 310 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 309 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 311 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 309 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 312 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 10 AS depth, 308 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL) "Values"), 
"DT_Output_8" AS 
(SELECT "DT_node_lookup_8"."KEY" AS "KEY", "DT_node_lookup_8".node_id_2 AS node_id_2, "DT_node_data_8".node_id AS node_id, "DT_node_data_8".feature AS feature, "DT_node_data_8".threshold AS threshold, "DT_node_data_8".count AS count, "DT_node_data_8".depth AS depth, "DT_node_data_8".parent_id AS parent_id, "DT_node_data_8"."Proba_0.0" AS "Proba_0.0", "DT_node_data_8"."LogProba_0.0" AS "LogProba_0.0", "DT_node_data_8"."Proba_1.0" AS "Proba_1.0", "DT_node_data_8"."LogProba_1.0" AS "LogProba_1.0", "DT_node_data_8"."Proba_2.0" AS "Proba_2.0", "DT_node_data_8"."LogProba_2.0" AS "LogProba_2.0", "DT_node_data_8"."Proba_3.0" AS "Proba_3.0", "DT_node_data_8"."LogProba_3.0" AS "LogProba_3.0", "DT_node_data_8"."Decision" AS "Decision", "DT_node_data_8"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup_8" LEFT OUTER JOIN "DT_node_data_8" ON "DT_node_lookup_8".node_id_2 = "DT_node_data_8".node_id), 
"RF_Tree_8" AS 
(SELECT "DT_Output_8"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output_8"."Proba_0.0" AS "Proba_0", "DT_Output_8"."LogProba_0.0" AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output_8"."Proba_1.0" AS "Proba_1", "DT_Output_8"."LogProba_1.0" AS "LogProba_1", CAST(NULL AS BINARY_DOUBLE) AS "Score_2", "DT_Output_8"."Proba_2.0" AS "Proba_2", "DT_Output_8"."LogProba_2.0" AS "LogProba_2", CAST(NULL AS BINARY_DOUBLE) AS "Score_3", "DT_Output_8"."Proba_3.0" AS "Proba_3", "DT_Output_8"."LogProba_3.0" AS "LogProba_3" 
FROM "DT_Output_8"), 
"DT_node_lookup_9" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_85 <= 1.6090686321258545) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_220 <= -1.686830997467041) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_237 <= -0.9559139013290405) THEN 3 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_141 <= 0.9773543477058411) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_469 <= 0.6195932626724243) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_284 <= 0.17300783097743988) THEN 7 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_397 <= 0.6170963048934937) THEN 9 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_485 <= -0.7262977361679077) THEN 11 ELSE 12 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_134 <= 0.2395164668560028) THEN 14 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_130 <= 0.19811691343784332) THEN 16 ELSE 17 END END END ELSE 18 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_144 <= -0.24502308666706085) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_140 <= 0.17772065103054047) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= 1.5050454139709473) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_94 <= -0.7338851690292358) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_255 <= -1.8351961374282837) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_397 <= -1.0337519645690918) THEN 25 ELSE 26 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_40 <= 0.5235913991928101) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_340 <= -1.6199114322662354) THEN 29 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_177 <= -2.2434818744659424) THEN 31 ELSE 32 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_392 <= 1.0257792472839355) THEN 34 ELSE 35 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_389 <= -1.4736926555633545) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= -1.2467727661132812) THEN 38 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_112 <= 1.5765910148620605) THEN 40 ELSE 41 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_18 <= -0.24363327026367188) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_405 <= 0.4390735626220703) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_168 <= -0.11831548810005188) THEN 45 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_20 <= -0.09722098708152771) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_139 <= -0.44202861189842224) THEN 48 ELSE 49 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_456 <= 0.456646203994751) THEN 51 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_414 <= 0.06480693817138672) THEN 53 ELSE 54 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_94 <= 0.0760485902428627) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_61 <= -0.8382279872894287) THEN 57 ELSE 58 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_146 <= -1.973681926727295) THEN 60 ELSE 61 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_285 <= -1.8068530559539795) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_110 <= -0.881729245185852) THEN 64 ELSE 65 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_492 <= 0.3157467842102051) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_319 <= 0.6727170944213867) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_496 <= -0.12379825115203857) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_103 <= -0.10964226722717285) THEN 70 ELSE 71 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_165 <= 0.6104093194007874) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_266 <= -1.280533790588379) THEN 74 ELSE 75 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_92 <= -0.2941818833351135) THEN 77 ELSE 78 END END END ELSE 79 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_191 <= -0.629725456237793) THEN 81 ELSE 82 END END END END END END ELSE 83 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_20 <= 1.0426799058914185) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_131 <= 1.135622262954712) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_275 <= 0.48054495453834534) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_105 <= 0.7350537776947021) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_192 <= -0.7280817031860352) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_91 <= 0.9816365242004395) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_415 <= -0.7006479501724243) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_89 <= -0.07604983448982239) THEN 92 ELSE 93 END ELSE 94 END ELSE 95 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_299 <= 1.1348872184753418) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_232 <= 0.9640755653381348) THEN 98 ELSE 99 END ELSE 100 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_212 <= -0.15949057042598724) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_81 <= 0.8068060874938965) THEN 103 ELSE 104 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_285 <= -0.6344849467277527) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_308 <= 0.7111162543296814) THEN 107 ELSE 108 END ELSE 109 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_268 <= 0.24979031085968018) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_250 <= -0.06403972208499908) THEN 112 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_328 <= -0.46301931142807007) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_228 <= 0.3636142313480377) THEN 115 ELSE 116 END ELSE 117 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_50 <= -0.9293798208236694) THEN 119 ELSE 120 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_238 <= -0.8735024929046631) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_135 <= 0.28867602348327637) THEN 123 ELSE 124 END ELSE 125 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_484 <= -0.016377516090869904) THEN 127 ELSE 128 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_75 <= -1.2400999069213867) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_325 <= -0.5480128526687622) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_456 <= 0.48064953088760376) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_53 <= -0.8237696290016174) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_166 <= 0.23245732486248016) THEN 134 ELSE 135 END ELSE 136 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_408 <= -0.36598145961761475) THEN 138 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_372 <= -0.06454692780971527) THEN 140 ELSE 141 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_326 <= -1.2522869110107422) THEN 143 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_195 <= 1.1843451261520386) THEN 145 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_441 <= 0.07683122158050537) THEN 147 ELSE 148 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_17 <= 1.7081143856048584) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_495 <= -0.4716860353946686) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_345 <= 0.4115476608276367) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_116 <= 0.28091228008270264) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_79 <= 0.6515483260154724) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_409 <= 0.41231775283813477) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_344 <= 0.7570666670799255) THEN 156 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_145 <= -0.34225404262542725) THEN 158 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_294 <= -0.4649486243724823) THEN 160 ELSE 161 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_459 <= -0.6894091963768005) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_234 <= -0.21437332034111023) THEN 164 ELSE 165 END ELSE 166 END END ELSE 167 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_294 <= -1.0053908824920654) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_64 <= 1.2868125438690186) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_21 <= -1.2780039310455322) THEN 171 ELSE 172 END ELSE 173 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_130 <= 0.22275106608867645) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_497 <= 0.3824077546596527) THEN 176 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_483 <= -0.688887357711792) THEN 178 ELSE 179 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_67 <= -0.03556138277053833) THEN 181 ELSE 182 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_158 <= -0.1650191694498062) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_203 <= -0.14039777219295502) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_202 <= 0.7309383153915405) THEN 186 ELSE 187 END ELSE 188 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_20 <= -1.7825654745101929) THEN 190 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_267 <= -0.41658324003219604) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_63 <= -0.3009752631187439) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_483 <= 0.5496407747268677) THEN 194 ELSE 195 END ELSE 196 END ELSE 197 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_394 <= 0.11403373628854752) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_450 <= -0.2807532548904419) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_176 <= 0.34334591031074524) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_93 <= -0.023510605096817017) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_330 <= -0.5928922295570374) THEN 203 ELSE 204 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_101 <= 1.1842544078826904) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_368 <= -0.8595359325408936) THEN 207 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_83 <= 0.31178849935531616) THEN 209 ELSE 210 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_112 <= 0.4801309108734131) THEN 212 ELSE 213 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_78 <= 0.4303659200668335) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_306 <= -0.7776327133178711) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_260 <= 0.031756192445755005) THEN 217 ELSE 218 END ELSE 219 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_332 <= -1.4163962602615356) THEN 221 ELSE 222 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_329 <= -0.9366202354431152) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_353 <= -0.38229063153266907) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_355 <= -0.15895751118659973) THEN 226 ELSE 227 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_495 <= -0.05662127584218979) THEN 229 ELSE 230 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_291 <= -1.311462163925171) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_113 <= 0.6921619176864624) THEN 233 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_289 <= 0.8588382005691528) THEN 235 ELSE 236 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_287 <= 1.6616040468215942) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_84 <= -1.5093588829040527) THEN 239 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_468 <= -1.692123293876648) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_198 <= 0.011382818222045898) THEN 242 ELSE 243 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_474 <= -2.0442492961883545) THEN 245 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_140 <= -1.646496057510376) THEN 247 ELSE 248 END END END END ELSE 249 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_253 <= -0.3867388367652893) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_383 <= 0.6682660579681396) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_306 <= 0.4019712209701538) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_94 <= -0.50677490234375) THEN 254 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_386 <= -0.5503984689712524) THEN 256 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_227 <= 0.6438918709754944) THEN 258 ELSE 259 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_319 <= -0.414950430393219) THEN 261 ELSE 262 END END ELSE 263 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_303 <= -1.0787529945373535) THEN 265 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_69 <= -0.9157277345657349) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_396 <= -0.26737815141677856) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= 0.2916991412639618) THEN 269 ELSE 270 END ELSE 271 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_259 <= -0.3827933371067047) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_290 <= 1.1645677089691162) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_210 <= -1.2861379384994507) THEN 275 ELSE 276 END ELSE 277 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_18 <= -0.040994711220264435) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_44 <= 0.6863273978233337) THEN 280 ELSE 281 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_191 <= -0.11112278699874878) THEN 283 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_345 <= -0.47000229358673096) THEN 285 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_381 <= -0.4724942147731781) THEN 287 ELSE 288 END END END END END END END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_95 <= -0.9339770078659058) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_234 <= 0.8406527042388916) THEN 291 ELSE 292 END ELSE 293 END END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_398 <= 1.0859382152557373) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_266 <= 1.482604742050171) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_241 <= -1.2170549631118774) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_62 <= 0.1864839643239975) THEN 298 ELSE 299 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_73 <= -2.0240182876586914) THEN 301 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_361 <= 2.290879726409912) THEN 303 ELSE 304 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_374 <= 0.699741005897522) THEN 306 ELSE 307 END END ELSE 308 END END AS node_id_2 
FROM "33421_53X5V4_ADS_SCA_2_OUT" "ADS_sca_2_OUT"), 
"DT_node_data_9" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0.0" AS "Proba_0.0", "Values"."LogProba_0.0" AS "LogProba_0.0", "Values"."Proba_1.0" AS "Proba_1.0", "Values"."LogProba_1.0" AS "LogProba_1.0", "Values"."Proba_2.0" AS "Proba_2.0", "Values"."LogProba_2.0" AS "LogProba_2.0", "Values"."Proba_3.0" AS "Proba_3.0", "Values"."LogProba_3.0" AS "LogProba_3.0", "Values"."Decision" AS "Decision", "Values"."DecisionProba" AS "DecisionProba" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 8 AS count, 3 AS depth, 2 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 7 AS count, 6 AS depth, 6 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 7 AS depth, 8 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 10 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 10 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 6 AS depth, 13 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 7 AS depth, 15 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 7 AS depth, 15 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 4 AS depth, 4 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 24 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 8 AS depth, 24 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 29 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 28 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 31 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 30 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 32 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 16 AS count, 10 AS depth, 30 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 34 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 9 AS depth, 33 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 35 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 33 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 38 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 37 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 40 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 6 AS count, 9 AS depth, 39 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 41 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 39 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 45 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 9 AS count, 10 AS depth, 44 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 48 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 12 AS depth, 47 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 49 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 12 AS depth, 47 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 51 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 12 AS depth, 50 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 53 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 13 AS depth, 52 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 54 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 13 AS depth, 52 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 57 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 56 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 58 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 11 AS depth, 56 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 60 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 59 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 61 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 6 AS count, 11 AS depth, 59 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 64 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 63 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 65 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 10 AS depth, 63 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 70 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 13 AS depth, 69 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 71 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 13 AS depth, 69 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 74 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 14 AS depth, 73 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 75 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 6 AS count, 14 AS depth, 73 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 77 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 14 AS depth, 76 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 78 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 14 AS depth, 76 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 79 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 11 AS depth, 67 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 81 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 11 AS depth, 80 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 82 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 13 AS count, 11 AS depth, 80 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 83 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 5 AS depth, 21 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 92 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 12 AS depth, 91 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 93 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 12 AS depth, 91 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 94 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 11 AS depth, 90 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 95 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 10 AS depth, 89 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 98 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 22 AS count, 11 AS depth, 97 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 99 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 11 AS depth, 97 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 100 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 10 AS depth, 96 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 103 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 10 AS depth, 102 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 104 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 102 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 107 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 106 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 108 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 106 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 109 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 10 AS depth, 105 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 112 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 9 AS depth, 111 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 115 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 114 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 116 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 114 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 117 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 10 AS depth, 113 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 119 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 118 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 120 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 9 AS count, 9 AS depth, 118 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 123 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 122 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 124 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 122 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 125 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 9 AS count, 7 AS depth, 121 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 127 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 6 AS depth, 126 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 128 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 6 AS depth, 126 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 134 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 133 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 135 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 133 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 136 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 7 AS depth, 132 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 138 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 7 AS depth, 137 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 140 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 139 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 141 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 139 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 143 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 6 AS depth, 142 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 145 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 14 AS count, 7 AS depth, 144 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 147 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 146 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 148 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 146 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 156 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 14 AS count, 11 AS depth, 155 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 158 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 12 AS depth, 157 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 160 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 13 AS depth, 159 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 161 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 13 AS depth, 159 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 164 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 12 AS depth, 163 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 165 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 12 AS depth, 163 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 166 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 11 AS depth, 162 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 167 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 9 AS depth, 153 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 171 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 170 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 172 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 11 AS depth, 170 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 173 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 169 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 176 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 8 AS count, 11 AS depth, 175 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 178 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 12 AS depth, 177 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 179 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 12 AS depth, 177 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 181 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 11 AS depth, 180 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 182 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 11 AS depth, 180 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 186 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 10 AS depth, 185 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 187 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 10 AS depth, 185 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 188 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 9 AS depth, 184 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 190 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 9 AS depth, 189 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 194 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 12 AS depth, 193 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 195 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 12 AS depth, 193 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 196 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 192 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 197 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 9 AS count, 10 AS depth, 191 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 203 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 11 AS depth, 202 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 204 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 6 AS count, 11 AS depth, 202 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 207 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 12 AS depth, 206 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 209 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 10 AS count, 13 AS depth, 208 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 210 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 13 AS depth, 208 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 212 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 12 AS depth, 211 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 213 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 12 AS depth, 211 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 217 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 12 AS depth, 216 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 218 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 12 AS depth, 216 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 219 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 11 AS depth, 215 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 221 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 220 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 222 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 6 AS count, 11 AS depth, 220 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 226 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 11 AS depth, 225 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 227 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 225 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 229 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 228 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 230 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 11 AS depth, 228 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 233 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 11 AS depth, 232 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 235 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 12 AS depth, 234 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 236 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 12 AS depth, 234 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 239 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 12 AS depth, 238 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 242 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 14 AS depth, 241 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 243 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 14 AS depth, 241 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 245 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 14 AS depth, 244 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 247 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 15 AS depth, 246 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 248 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 28 AS count, 15 AS depth, 246 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 249 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 11 AS depth, 237 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 254 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 11 AS depth, 253 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 256 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 12 AS depth, 255 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 258 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 13 AS depth, 257 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 259 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 13 AS depth, 257 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 261 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 11 AS depth, 260 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 262 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 11 AS depth, 260 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 263 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 7 AS count, 9 AS depth, 251 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 265 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 7 AS count, 9 AS depth, 264 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 269 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 12 AS depth, 268 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 270 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 12 AS depth, 268 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 271 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 6 AS count, 11 AS depth, 267 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 275 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 13 AS depth, 274 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 276 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 11 AS count, 13 AS depth, 274 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 277 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 12 AS depth, 273 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 280 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 6 AS count, 13 AS depth, 279 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 281 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 13 AS depth, 279 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 283 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 13 AS depth, 282 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 285 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 14 AS depth, 284 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 287 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 15 AS depth, 286 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 288 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 15 AS depth, 286 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 291 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 7 AS depth, 290 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 292 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 7 AS depth, 290 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 293 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 9 AS count, 6 AS depth, 289 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 298 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 5 AS depth, 297 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 299 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 5 AS depth, 297 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 301 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 5 AS depth, 300 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 303 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 15 AS count, 6 AS depth, 302 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 304 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 6 AS depth, 302 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 306 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 4 AS depth, 305 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 307 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 4 AS depth, 305 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 308 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 2 AS depth, 294 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL) "Values"), 
"DT_Output_9" AS 
(SELECT "DT_node_lookup_9"."KEY" AS "KEY", "DT_node_lookup_9".node_id_2 AS node_id_2, "DT_node_data_9".node_id AS node_id, "DT_node_data_9".feature AS feature, "DT_node_data_9".threshold AS threshold, "DT_node_data_9".count AS count, "DT_node_data_9".depth AS depth, "DT_node_data_9".parent_id AS parent_id, "DT_node_data_9"."Proba_0.0" AS "Proba_0.0", "DT_node_data_9"."LogProba_0.0" AS "LogProba_0.0", "DT_node_data_9"."Proba_1.0" AS "Proba_1.0", "DT_node_data_9"."LogProba_1.0" AS "LogProba_1.0", "DT_node_data_9"."Proba_2.0" AS "Proba_2.0", "DT_node_data_9"."LogProba_2.0" AS "LogProba_2.0", "DT_node_data_9"."Proba_3.0" AS "Proba_3.0", "DT_node_data_9"."LogProba_3.0" AS "LogProba_3.0", "DT_node_data_9"."Decision" AS "Decision", "DT_node_data_9"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup_9" LEFT OUTER JOIN "DT_node_data_9" ON "DT_node_lookup_9".node_id_2 = "DT_node_data_9".node_id), 
"RF_Tree_9" AS 
(SELECT "DT_Output_9"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output_9"."Proba_0.0" AS "Proba_0", "DT_Output_9"."LogProba_0.0" AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output_9"."Proba_1.0" AS "Proba_1", "DT_Output_9"."LogProba_1.0" AS "LogProba_1", CAST(NULL AS BINARY_DOUBLE) AS "Score_2", "DT_Output_9"."Proba_2.0" AS "Proba_2", "DT_Output_9"."LogProba_2.0" AS "LogProba_2", CAST(NULL AS BINARY_DOUBLE) AS "Score_3", "DT_Output_9"."Proba_3.0" AS "Proba_3", "DT_Output_9"."LogProba_3.0" AS "LogProba_3" 
FROM "DT_Output_9")
 SELECT "RF_AVG__B0"."KEY", "RF_AVG__B0"."Score_0", "RF_AVG__B0"."Proba_0", "RF_AVG__B0"."LogProba_0", "RF_AVG__B0"."Score_1", "RF_AVG__B0"."Proba_1", "RF_AVG__B0"."LogProba_1", "RF_AVG__B0"."Score_2", "RF_AVG__B0"."Proba_2", "RF_AVG__B0"."LogProba_2", "RF_AVG__B0"."Score_3", "RF_AVG__B0"."Proba_3", "RF_AVG__B0"."LogProba_3" 
FROM (SELECT "RF_AVG__esu_0"."KEY" AS "KEY", "RF_AVG__esu_0"."Score_0" AS "Score_0", "RF_AVG__esu_0"."Proba_0" AS "Proba_0", "RF_AVG__esu_0"."LogProba_0" AS "LogProba_0", "RF_AVG__esu_0"."Score_1" AS "Score_1", "RF_AVG__esu_0"."Proba_1" AS "Proba_1", "RF_AVG__esu_0"."LogProba_1" AS "LogProba_1", "RF_AVG__esu_0"."Score_2" AS "Score_2", "RF_AVG__esu_0"."Proba_2" AS "Proba_2", "RF_AVG__esu_0"."LogProba_2" AS "LogProba_2", "RF_AVG__esu_0"."Score_3" AS "Score_3", "RF_AVG__esu_0"."Proba_3" AS "Proba_3", "RF_AVG__esu_0"."LogProba_3" AS "LogProba_3" 
FROM (SELECT "RF_Tree_0"."KEY" AS "KEY", "RF_Tree_0"."Score_0" AS "Score_0", "RF_Tree_0"."Proba_0" AS "Proba_0", "RF_Tree_0"."LogProba_0" AS "LogProba_0", "RF_Tree_0"."Score_1" AS "Score_1", "RF_Tree_0"."Proba_1" AS "Proba_1", "RF_Tree_0"."LogProba_1" AS "LogProba_1", "RF_Tree_0"."Score_2" AS "Score_2", "RF_Tree_0"."Proba_2" AS "Proba_2", "RF_Tree_0"."LogProba_2" AS "LogProba_2", "RF_Tree_0"."Score_3" AS "Score_3", "RF_Tree_0"."Proba_3" AS "Proba_3", "RF_Tree_0"."LogProba_3" AS "LogProba_3" 
FROM "RF_Tree_0" UNION ALL SELECT "RF_Tree_1"."KEY" AS "KEY", "RF_Tree_1"."Score_0" AS "Score_0", "RF_Tree_1"."Proba_0" AS "Proba_0", "RF_Tree_1"."LogProba_0" AS "LogProba_0", "RF_Tree_1"."Score_1" AS "Score_1", "RF_Tree_1"."Proba_1" AS "Proba_1", "RF_Tree_1"."LogProba_1" AS "LogProba_1", "RF_Tree_1"."Score_2" AS "Score_2", "RF_Tree_1"."Proba_2" AS "Proba_2", "RF_Tree_1"."LogProba_2" AS "LogProba_2", "RF_Tree_1"."Score_3" AS "Score_3", "RF_Tree_1"."Proba_3" AS "Proba_3", "RF_Tree_1"."LogProba_3" AS "LogProba_3" 
FROM "RF_Tree_1" UNION ALL SELECT "RF_Tree_2"."KEY" AS "KEY", "RF_Tree_2"."Score_0" AS "Score_0", "RF_Tree_2"."Proba_0" AS "Proba_0", "RF_Tree_2"."LogProba_0" AS "LogProba_0", "RF_Tree_2"."Score_1" AS "Score_1", "RF_Tree_2"."Proba_1" AS "Proba_1", "RF_Tree_2"."LogProba_1" AS "LogProba_1", "RF_Tree_2"."Score_2" AS "Score_2", "RF_Tree_2"."Proba_2" AS "Proba_2", "RF_Tree_2"."LogProba_2" AS "LogProba_2", "RF_Tree_2"."Score_3" AS "Score_3", "RF_Tree_2"."Proba_3" AS "Proba_3", "RF_Tree_2"."LogProba_3" AS "LogProba_3" 
FROM "RF_Tree_2" UNION ALL SELECT "RF_Tree_3"."KEY" AS "KEY", "RF_Tree_3"."Score_0" AS "Score_0", "RF_Tree_3"."Proba_0" AS "Proba_0", "RF_Tree_3"."LogProba_0" AS "LogProba_0", "RF_Tree_3"."Score_1" AS "Score_1", "RF_Tree_3"."Proba_1" AS "Proba_1", "RF_Tree_3"."LogProba_1" AS "LogProba_1", "RF_Tree_3"."Score_2" AS "Score_2", "RF_Tree_3"."Proba_2" AS "Proba_2", "RF_Tree_3"."LogProba_2" AS "LogProba_2", "RF_Tree_3"."Score_3" AS "Score_3", "RF_Tree_3"."Proba_3" AS "Proba_3", "RF_Tree_3"."LogProba_3" AS "LogProba_3" 
FROM "RF_Tree_3" UNION ALL SELECT "RF_Tree_4"."KEY" AS "KEY", "RF_Tree_4"."Score_0" AS "Score_0", "RF_Tree_4"."Proba_0" AS "Proba_0", "RF_Tree_4"."LogProba_0" AS "LogProba_0", "RF_Tree_4"."Score_1" AS "Score_1", "RF_Tree_4"."Proba_1" AS "Proba_1", "RF_Tree_4"."LogProba_1" AS "LogProba_1", "RF_Tree_4"."Score_2" AS "Score_2", "RF_Tree_4"."Proba_2" AS "Proba_2", "RF_Tree_4"."LogProba_2" AS "LogProba_2", "RF_Tree_4"."Score_3" AS "Score_3", "RF_Tree_4"."Proba_3" AS "Proba_3", "RF_Tree_4"."LogProba_3" AS "LogProba_3" 
FROM "RF_Tree_4" UNION ALL SELECT "RF_Tree_5"."KEY" AS "KEY", "RF_Tree_5"."Score_0" AS "Score_0", "RF_Tree_5"."Proba_0" AS "Proba_0", "RF_Tree_5"."LogProba_0" AS "LogProba_0", "RF_Tree_5"."Score_1" AS "Score_1", "RF_Tree_5"."Proba_1" AS "Proba_1", "RF_Tree_5"."LogProba_1" AS "LogProba_1", "RF_Tree_5"."Score_2" AS "Score_2", "RF_Tree_5"."Proba_2" AS "Proba_2", "RF_Tree_5"."LogProba_2" AS "LogProba_2", "RF_Tree_5"."Score_3" AS "Score_3", "RF_Tree_5"."Proba_3" AS "Proba_3", "RF_Tree_5"."LogProba_3" AS "LogProba_3" 
FROM "RF_Tree_5" UNION ALL SELECT "RF_Tree_6"."KEY" AS "KEY", "RF_Tree_6"."Score_0" AS "Score_0", "RF_Tree_6"."Proba_0" AS "Proba_0", "RF_Tree_6"."LogProba_0" AS "LogProba_0", "RF_Tree_6"."Score_1" AS "Score_1", "RF_Tree_6"."Proba_1" AS "Proba_1", "RF_Tree_6"."LogProba_1" AS "LogProba_1", "RF_Tree_6"."Score_2" AS "Score_2", "RF_Tree_6"."Proba_2" AS "Proba_2", "RF_Tree_6"."LogProba_2" AS "LogProba_2", "RF_Tree_6"."Score_3" AS "Score_3", "RF_Tree_6"."Proba_3" AS "Proba_3", "RF_Tree_6"."LogProba_3" AS "LogProba_3" 
FROM "RF_Tree_6" UNION ALL SELECT "RF_Tree_7"."KEY" AS "KEY", "RF_Tree_7"."Score_0" AS "Score_0", "RF_Tree_7"."Proba_0" AS "Proba_0", "RF_Tree_7"."LogProba_0" AS "LogProba_0", "RF_Tree_7"."Score_1" AS "Score_1", "RF_Tree_7"."Proba_1" AS "Proba_1", "RF_Tree_7"."LogProba_1" AS "LogProba_1", "RF_Tree_7"."Score_2" AS "Score_2", "RF_Tree_7"."Proba_2" AS "Proba_2", "RF_Tree_7"."LogProba_2" AS "LogProba_2", "RF_Tree_7"."Score_3" AS "Score_3", "RF_Tree_7"."Proba_3" AS "Proba_3", "RF_Tree_7"."LogProba_3" AS "LogProba_3" 
FROM "RF_Tree_7" UNION ALL SELECT "RF_Tree_8"."KEY" AS "KEY", "RF_Tree_8"."Score_0" AS "Score_0", "RF_Tree_8"."Proba_0" AS "Proba_0", "RF_Tree_8"."LogProba_0" AS "LogProba_0", "RF_Tree_8"."Score_1" AS "Score_1", "RF_Tree_8"."Proba_1" AS "Proba_1", "RF_Tree_8"."LogProba_1" AS "LogProba_1", "RF_Tree_8"."Score_2" AS "Score_2", "RF_Tree_8"."Proba_2" AS "Proba_2", "RF_Tree_8"."LogProba_2" AS "LogProba_2", "RF_Tree_8"."Score_3" AS "Score_3", "RF_Tree_8"."Proba_3" AS "Proba_3", "RF_Tree_8"."LogProba_3" AS "LogProba_3" 
FROM "RF_Tree_8" UNION ALL SELECT "RF_Tree_9"."KEY" AS "KEY", "RF_Tree_9"."Score_0" AS "Score_0", "RF_Tree_9"."Proba_0" AS "Proba_0", "RF_Tree_9"."LogProba_0" AS "LogProba_0", "RF_Tree_9"."Score_1" AS "Score_1", "RF_Tree_9"."Proba_1" AS "Proba_1", "RF_Tree_9"."LogProba_1" AS "LogProba_1", "RF_Tree_9"."Score_2" AS "Score_2", "RF_Tree_9"."Proba_2" AS "Proba_2", "RF_Tree_9"."LogProba_2" AS "LogProba_2", "RF_Tree_9"."Score_3" AS "Score_3", "RF_Tree_9"."Proba_3" AS "Proba_3", "RF_Tree_9"."LogProba_3" AS "LogProba_3" 
FROM "RF_Tree_9") "RF_AVG__esu_0") "RF_AVG__B0") "U"
-- Code For temporary table 29233432_E832BN_RF_AVG__B1 part 1/2. Create 


CREATE GLOBAL TEMPORARY TABLE "29233432_E832BN_RF_AVG__B1" (
	"KEY" NUMBER(19), 
	"Score_0" BINARY_DOUBLE, 
	"Proba_0" BINARY_DOUBLE, 
	"LogProba_0" BINARY_DOUBLE, 
	"Score_1" BINARY_DOUBLE, 
	"Proba_1" BINARY_DOUBLE, 
	"LogProba_1" BINARY_DOUBLE, 
	"Score_2" BINARY_DOUBLE, 
	"Proba_2" BINARY_DOUBLE, 
	"LogProba_2" BINARY_DOUBLE, 
	"Score_3" BINARY_DOUBLE, 
	"Proba_3" BINARY_DOUBLE, 
	"LogProba_3" BINARY_DOUBLE
)

 ON COMMIT PRESERVE ROWS
-- Code For temporary table 29233432_E832BN_RF_AVG__B1 part 2/2. Populate

INSERT INTO "29233432_E832BN_RF_AVG__B1" ("KEY", "Score_0", "Proba_0", "LogProba_0", "Score_1", "Proba_1", "LogProba_1", "Score_2", "Proba_2", "LogProba_2", "Score_3", "Proba_3", "LogProba_3") SELECT "U"."KEY", "U"."Score_0", "U"."Proba_0", "U"."LogProba_0", "U"."Score_1", "U"."Proba_1", "U"."LogProba_1", "U"."Score_2", "U"."Proba_2", "U"."LogProba_2", "U"."Score_3", "U"."Proba_3", "U"."LogProba_3" 
FROM (WITH "DT_node_lookup_10" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_230 <= 0.7925634384155273) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_268 <= 0.5873000621795654) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_144 <= 0.2220289409160614) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_383 <= 1.3696260452270508) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_252 <= -1.4498462677001953) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_65 <= -0.9427840709686279) THEN 6 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_18 <= 0.9042648077011108) THEN 8 ELSE 9 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_59 <= -1.5729219913482666) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_402 <= -0.8565391898155212) THEN 12 ELSE 13 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_153 <= -2.2007899284362793) THEN 15 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_252 <= 1.5019892454147339) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_271 <= 1.2679104804992676) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_277 <= -0.0906890258193016) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_68 <= -0.7270758152008057) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_339 <= -0.41396135091781616) THEN 21 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_76 <= 0.27884456515312195) THEN 23 ELSE 24 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_289 <= 1.1653902530670166) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_179 <= 1.3756651878356934) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_230 <= -1.1945114135742188) THEN 28 ELSE 29 END ELSE 30 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_236 <= -0.6513839960098267) THEN 32 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_34 <= 0.6876876354217529) THEN 34 ELSE 35 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_150 <= -0.8246176242828369) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_296 <= 0.44564250111579895) THEN 38 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_313 <= 0.076961949467659) THEN 40 ELSE 41 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_111 <= 0.4116517901420593) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_37 <= -1.308007836341858) THEN 44 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_160 <= 0.6731255054473877) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_318 <= -1.0861728191375732) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_301 <= -0.7100389003753662) THEN 48 ELSE 49 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_206 <= 0.5474069118499756) THEN 51 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_259 <= -0.900464653968811) THEN 53 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= 0.30270490050315857) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_114 <= -0.5665257573127747) THEN 56 ELSE 57 END ELSE 58 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_267 <= -0.9247009754180908) THEN 60 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_272 <= -0.8614084720611572) THEN 62 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_382 <= -0.8774759769439697) THEN 64 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_65 <= 0.21701399981975555) THEN 66 ELSE 67 END END END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_325 <= 0.9339691400527954) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_408 <= 0.4800857901573181) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_150 <= 1.3072021007537842) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_482 <= -0.3563637137413025) THEN 72 ELSE 73 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_318 <= 0.045392461121082306) THEN 75 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_397 <= -0.39002928137779236) THEN 77 ELSE 78 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_48 <= 0.8074625730514526) THEN 80 ELSE 81 END END ELSE 82 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_319 <= 1.3525124788284302) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_490 <= 0.7597004175186157) THEN 85 ELSE 86 END ELSE 87 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_184 <= -0.821007251739502) THEN 89 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_366 <= 0.325323224067688) THEN 91 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_235 <= 0.6007048487663269) THEN 93 ELSE 94 END END END END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_261 <= 0.7687394618988037) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_168 <= -1.1699752807617188) THEN 97 ELSE 98 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_77 <= -0.28406769037246704) THEN 100 ELSE 101 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_31 <= 0.28757405281066895) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_183 <= -0.4241679608821869) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_29 <= 0.48991477489471436) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_301 <= -2.0069081783294678) THEN 106 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_469 <= 1.9994544982910156) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_105 <= 1.285740613937378) THEN 109 ELSE 110 END ELSE 111 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_188 <= 0.03182077407836914) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_348 <= 0.04973459243774414) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_79 <= -0.003180786967277527) THEN 115 ELSE 116 END ELSE 117 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_332 <= 0.8167535066604614) THEN 119 ELSE 120 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_343 <= -0.0007657924434170127) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_418 <= 0.7475118637084961) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_49 <= 1.0653866529464722) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_46 <= 0.9941873550415039) THEN 125 ELSE 126 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_367 <= 0.4773847162723541) THEN 128 ELSE 129 END END ELSE 130 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_254 <= -0.30062463879585266) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_276 <= -1.2009344100952148) THEN 133 ELSE 134 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_421 <= -0.46941861510276794) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_411 <= 0.5772309899330139) THEN 137 ELSE 138 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_143 <= -1.0672624111175537) THEN 140 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_101 <= 0.22853747010231018) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_260 <= 1.501391887664795) THEN 143 ELSE 144 END ELSE 145 END END END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_73 <= -0.6217973828315735) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_266 <= -0.9265719652175903) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_253 <= -0.18648262321949005) THEN 149 ELSE 150 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_296 <= 1.553264856338501) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_315 <= -0.5798551440238953) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_45 <= -0.7744422554969788) THEN 154 ELSE 155 END ELSE 156 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_65 <= -1.0012052059173584) THEN 158 ELSE 159 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_141 <= 0.3025730848312378) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_500 <= -0.8982375860214233) THEN 162 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_60 <= 1.0498731136322021) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_343 <= -1.4907768964767456) THEN 165 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_441 <= 1.8110456466674805) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_229 <= -1.2940473556518555) THEN 168 ELSE 169 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_382 <= -0.602807343006134) THEN 171 ELSE 172 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_177 <= -0.14134874939918518) THEN 174 ELSE 175 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_249 <= -0.508039116859436) THEN 177 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_42 <= -0.5152425169944763) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_487 <= 1.8109281063079834) THEN 180 ELSE 181 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_173 <= -0.23541142046451569) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_399 <= 0.03734990954399109) THEN 184 ELSE 185 END ELSE 186 END END END END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_255 <= 1.1311911344528198) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_21 <= 0.18333810567855835) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_269 <= -0.08919123560190201) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_235 <= 0.279561847448349) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_385 <= 0.41042208671569824) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_241 <= 0.6330311298370361) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_255 <= -1.4674067497253418) THEN 194 ELSE 195 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_44 <= -0.5533636212348938) THEN 197 ELSE 198 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_276 <= -0.8554035425186157) THEN 200 ELSE 201 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_485 <= 1.12953782081604) THEN 203 ELSE 204 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_486 <= 0.816744327545166) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_39 <= -1.6977217197418213) THEN 207 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_186 <= 1.252885341644287) THEN 209 ELSE 210 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_85 <= -0.2867177724838257) THEN 212 ELSE 213 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_269 <= -0.8023077249526978) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_292 <= 0.45396149158477783) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_123 <= -0.3763773441314697) THEN 217 ELSE 218 END ELSE 219 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_132 <= 0.08471636474132538) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_69 <= 1.080716609954834) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_486 <= 0.6647108197212219) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_304 <= -2.5067169666290283) THEN 224 ELSE 225 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_184 <= -1.4302476644515991) THEN 227 ELSE 228 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_223 <= -1.2052059173583984) THEN 230 ELSE 231 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_130 <= -0.9964435696601868) THEN 233 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_331 <= -1.3306143283843994) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_96 <= -0.38362282514572144) THEN 236 ELSE 237 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_431 <= -1.2853007316589355) THEN 239 ELSE 240 END END END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_283 <= -0.1643804907798767) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_180 <= -0.11376947909593582) THEN 243 ELSE 244 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_484 <= 0.10111960768699646) THEN 246 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_106 <= -0.30760154128074646) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_197 <= -0.27488282322883606) THEN 249 ELSE 250 END ELSE 251 END END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_147 <= 1.3409346342086792) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_128 <= -0.4979061186313629) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_23 <= 0.26185980439186096) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_113 <= 0.9605822563171387) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_176 <= -1.6241345405578613) THEN 257 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_136 <= -1.4375131130218506) THEN 259 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_64 <= -1.4946563243865967) THEN 261 ELSE 262 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_216 <= -0.6931551694869995) THEN 264 ELSE 265 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_241 <= -0.17378824949264526) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_428 <= 0.3076953589916229) THEN 268 ELSE 269 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_374 <= 0.30599039793014526) THEN 271 ELSE 272 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_418 <= -0.06968697160482407) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_330 <= 0.5987175703048706) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_28 <= -1.7337976694107056) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_339 <= 1.4603466987609863) THEN 277 ELSE 278 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_27 <= 1.1608519554138184) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_106 <= 1.5887079238891602) THEN 281 ELSE 282 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_138 <= -0.07929614186286926) THEN 284 ELSE 285 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_281 <= 0.6779956817626953) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_104 <= -0.03902903199195862) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_366 <= -0.02933134138584137) THEN 289 ELSE 290 END ELSE 291 END ELSE 292 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_491 <= 0.02458304539322853) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_65 <= 0.5850048065185547) THEN 295 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_80 <= 0.1517370641231537) THEN 297 ELSE 298 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_404 <= 0.026577353477478027) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_319 <= 0.2964014708995819) THEN 301 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_235 <= 0.03647974133491516) THEN 303 ELSE 304 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_497 <= -0.5221422910690308) THEN 306 ELSE 307 END END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_263 <= -0.08095683157444) THEN 309 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_376 <= -0.7125803828239441) THEN 311 ELSE 312 END END END END AS node_id_2 
FROM "33421_53X5V4_ADS_SCA_2_OUT" "ADS_sca_2_OUT"), 
"DT_node_data_10" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0.0" AS "Proba_0.0", "Values"."LogProba_0.0" AS "LogProba_0.0", "Values"."Proba_1.0" AS "Proba_1.0", "Values"."LogProba_1.0" AS "LogProba_1.0", "Values"."Proba_2.0" AS "Proba_2.0", "Values"."LogProba_2.0" AS "LogProba_2.0", "Values"."Proba_3.0" AS "Proba_3.0", "Values"."LogProba_3.0" AS "LogProba_3.0", "Values"."Decision" AS "Decision", "Values"."DecisionProba" AS "DecisionProba" 
FROM (SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 6 AS depth, 5 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 8 AS count, 7 AS depth, 7 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 7 AS depth, 7 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 7 AS depth, 11 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 7 AS depth, 11 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 7 AS depth, 14 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 12 AS depth, 20 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 13 AS depth, 22 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 13 AS depth, 22 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 28 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 14 AS depth, 27 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 29 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 21 AS count, 14 AS depth, 27 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 13 AS depth, 26 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 32 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 13 AS depth, 31 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 34 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 14 AS depth, 33 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 35 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 14 AS depth, 33 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 38 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 8 AS count, 12 AS depth, 37 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 40 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 13 AS depth, 39 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 41 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 13 AS depth, 39 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 44 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 13 AS depth, 43 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 48 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 16 AS depth, 47 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 49 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 16 AS depth, 47 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 51 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 16 AS count, 16 AS depth, 50 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 53 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 17 AS depth, 52 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 56 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 19 AS depth, 55 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 57 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 19 AS depth, 55 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 58 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 18 AS depth, 54 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 60 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 15 AS depth, 59 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 62 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 16 AS depth, 61 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 64 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 17 AS depth, 63 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 66 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 18 AS depth, 65 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 67 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 18 AS depth, 65 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 72 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 16 AS depth, 71 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 73 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 12 AS count, 16 AS depth, 71 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 75 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 16 AS depth, 74 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 77 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 17 AS depth, 76 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 78 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 17 AS depth, 76 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 80 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 15 AS depth, 79 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 81 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 15 AS depth, 79 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 82 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 13 AS depth, 68 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 85 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 7 AS count, 11 AS depth, 84 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 86 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 84 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 87 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 10 AS depth, 83 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 89 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 9 AS depth, 88 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 91 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 10 AS depth, 90 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 93 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 11 AS depth, 92 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 94 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 92 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 97 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 6 AS depth, 96 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 98 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 7 AS count, 6 AS depth, 96 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 100 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 6 AS depth, 99 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 101 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 6 AS depth, 99 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 106 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 7 AS depth, 105 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 109 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 18 AS count, 9 AS depth, 108 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 110 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 9 AS depth, 108 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 111 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 107 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 115 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 114 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 116 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 9 AS depth, 114 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 117 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 8 AS depth, 113 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 119 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 8 AS depth, 118 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 120 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 118 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 125 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 10 AS count, 9 AS depth, 124 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 126 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 124 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 128 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 127 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 129 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 127 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 130 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 7 AS depth, 122 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 133 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 132 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 134 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 10 AS count, 8 AS depth, 132 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 137 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 9 AS depth, 136 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 138 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 9 AS depth, 136 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 140 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 9 AS depth, 139 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 143 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 11 AS depth, 142 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 144 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 142 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 145 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 10 AS depth, 141 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 149 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 7 AS depth, 148 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 150 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 7 AS depth, 148 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 154 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 153 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 155 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 153 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 156 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 11 AS count, 8 AS depth, 152 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 158 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 157 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 159 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 157 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 162 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 7 AS depth, 161 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 165 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 164 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 168 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 167 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 169 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 16 AS count, 11 AS depth, 167 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 171 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 170 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 172 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 170 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 174 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 173 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 175 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 9 AS depth, 173 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 177 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 6 AS count, 7 AS depth, 176 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 180 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 9 AS depth, 179 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 181 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 179 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 184 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 183 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 185 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 183 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 186 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 182 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 194 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 193 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 195 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 8 AS count, 9 AS depth, 193 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 197 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 196 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 198 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 9 AS depth, 196 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 200 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 199 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 201 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 8 AS depth, 199 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 203 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 9 AS count, 7 AS depth, 202 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 204 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 7 AS depth, 202 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 207 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 7 AS depth, 206 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 209 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 24 AS count, 8 AS depth, 208 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 210 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 8 AS depth, 208 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 212 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 7 AS depth, 211 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 213 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 7 AS depth, 211 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 217 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 7 AS depth, 216 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 218 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 7 AS depth, 216 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 219 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 6 AS depth, 215 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 224 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 223 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 225 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 12 AS count, 9 AS depth, 223 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 227 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 226 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 228 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 9 AS depth, 226 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 230 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 229 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 231 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 8 AS depth, 229 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 233 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 7 AS depth, 232 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 236 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 235 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 237 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 235 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 239 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 238 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 240 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 9 AS count, 9 AS depth, 238 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 243 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 5 AS depth, 242 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 244 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 5 AS depth, 242 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 246 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 6 AS count, 5 AS depth, 245 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 249 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 7 AS depth, 248 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 250 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 7 AS depth, 248 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 251 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 6 AS depth, 247 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 257 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 6 AS depth, 256 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 259 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 7 AS depth, 258 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 261 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 260 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 262 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 17 AS count, 8 AS depth, 260 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 264 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 6 AS depth, 263 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 265 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 6 AS depth, 263 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 268 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 6 AS depth, 267 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 269 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 6 AS depth, 267 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 271 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 6 AS depth, 270 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 272 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 6 AS depth, 270 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 277 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 7 AS depth, 276 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 278 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 7 AS depth, 276 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 281 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 17 AS count, 8 AS depth, 280 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 282 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 280 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 284 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 283 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 285 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 283 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 289 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 8 AS depth, 288 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 290 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 8 AS depth, 288 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 291 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 7 AS depth, 287 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 292 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 6 AS depth, 286 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 295 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 10 AS count, 6 AS depth, 294 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 297 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 7 AS depth, 296 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 298 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 7 AS depth, 296 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 301 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 7 AS depth, 300 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 303 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 8 AS depth, 302 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 304 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 8 AS depth, 302 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 306 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 7 AS depth, 305 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 307 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 7 AS depth, 305 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 309 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 3 AS depth, 308 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 311 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 4 AS depth, 310 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 312 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 4 AS depth, 310 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL) "Values"), 
"DT_Output_10" AS 
(SELECT "DT_node_lookup_10"."KEY" AS "KEY", "DT_node_lookup_10".node_id_2 AS node_id_2, "DT_node_data_10".node_id AS node_id, "DT_node_data_10".feature AS feature, "DT_node_data_10".threshold AS threshold, "DT_node_data_10".count AS count, "DT_node_data_10".depth AS depth, "DT_node_data_10".parent_id AS parent_id, "DT_node_data_10"."Proba_0.0" AS "Proba_0.0", "DT_node_data_10"."LogProba_0.0" AS "LogProba_0.0", "DT_node_data_10"."Proba_1.0" AS "Proba_1.0", "DT_node_data_10"."LogProba_1.0" AS "LogProba_1.0", "DT_node_data_10"."Proba_2.0" AS "Proba_2.0", "DT_node_data_10"."LogProba_2.0" AS "LogProba_2.0", "DT_node_data_10"."Proba_3.0" AS "Proba_3.0", "DT_node_data_10"."LogProba_3.0" AS "LogProba_3.0", "DT_node_data_10"."Decision" AS "Decision", "DT_node_data_10"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup_10" LEFT OUTER JOIN "DT_node_data_10" ON "DT_node_lookup_10".node_id_2 = "DT_node_data_10".node_id), 
"RF_Tree_10" AS 
(SELECT "DT_Output_10"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output_10"."Proba_0.0" AS "Proba_0", "DT_Output_10"."LogProba_0.0" AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output_10"."Proba_1.0" AS "Proba_1", "DT_Output_10"."LogProba_1.0" AS "LogProba_1", CAST(NULL AS BINARY_DOUBLE) AS "Score_2", "DT_Output_10"."Proba_2.0" AS "Proba_2", "DT_Output_10"."LogProba_2.0" AS "LogProba_2", CAST(NULL AS BINARY_DOUBLE) AS "Score_3", "DT_Output_10"."Proba_3.0" AS "Proba_3", "DT_Output_10"."LogProba_3.0" AS "LogProba_3" 
FROM "DT_Output_10"), 
"DT_node_lookup_11" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_499 <= -0.45921751856803894) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_273 <= 1.0444386005401611) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_177 <= 0.8408258557319641) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_444 <= -0.39688509702682495) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_189 <= -0.26181143522262573) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_109 <= -0.5494097471237183) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_400 <= 1.692474365234375) THEN 7 ELSE 8 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_487 <= 0.5333967208862305) THEN 10 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_366 <= 0.5486489534378052) THEN 12 ELSE 13 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_178 <= 1.826204538345337) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 0.016837000846862793) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_110 <= 0.00888063758611679) THEN 17 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_489 <= 0.12571585178375244) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_362 <= 1.1669095754623413) THEN 20 ELSE 21 END ELSE 22 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_407 <= -0.5913435220718384) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_285 <= 0.13932086527347565) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_452 <= -0.5824882984161377) THEN 26 ELSE 27 END ELSE 28 END ELSE 29 END END ELSE 30 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_289 <= 2.0209267139434814) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_285 <= 0.6011415719985962) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_443 <= 0.6428042650222778) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_207 <= 1.1150977611541748) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_281 <= -1.0334299802780151) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_355 <= 0.0713345855474472) THEN 37 ELSE 38 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_398 <= -0.1317799687385559) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_233 <= 1.0294036865234375) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_357 <= -0.0046082753688097) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_321 <= -0.05460447445511818) THEN 43 ELSE 44 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_467 <= 0.2131805568933487) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_98 <= -0.2551247477531433) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_77 <= -1.4044500589370728) THEN 48 ELSE 49 END ELSE 50 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_183 <= -0.1345321536064148) THEN 52 ELSE 53 END END END ELSE 54 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_149 <= 1.4379016160964966) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_142 <= -1.476201057434082) THEN 57 ELSE 58 END ELSE 59 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_170 <= -0.8699880838394165) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_69 <= 0.4912433624267578) THEN 62 ELSE 63 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_392 <= 1.5214483737945557) THEN 65 ELSE 66 END END END ELSE 67 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_19 <= 0.6024011969566345) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_394 <= -0.3187693953514099) THEN 70 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_24 <= 0.199008047580719) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_58 <= -0.24565407633781433) THEN 73 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_87 <= -0.5728344321250916) THEN 75 ELSE 76 END END ELSE 77 END END ELSE 78 END END ELSE 79 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_330 <= 0.47542259097099304) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_148 <= 0.1407380849123001) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_429 <= 1.0523654222488403) THEN 83 ELSE 84 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_310 <= -0.32322657108306885) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_104 <= 0.28251922130584717) THEN 87 ELSE 88 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_118 <= -1.8493542671203613) THEN 90 ELSE 91 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_485 <= 1.8023573160171509) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_498 <= 1.185591697692871) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_269 <= -1.8859302997589111) THEN 95 ELSE 96 END ELSE 97 END ELSE 98 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_195 <= 0.9505168199539185) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_419 <= -1.5809657573699951) THEN 101 ELSE 102 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_92 <= -0.16107268631458282) THEN 104 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_125 <= 0.002065107226371765) THEN 106 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_311 <= -0.7935802936553955) THEN 108 ELSE 109 END END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_330 <= -2.0328359603881836) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_293 <= 0.4979332983493805) THEN 112 ELSE 113 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_102 <= 0.6675704717636108) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_117 <= -0.3284456729888916) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_288 <= 0.11448531597852707) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_154 <= -0.14759331941604614) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_450 <= -0.6064651012420654) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_116 <= 0.9769428968429565) THEN 120 ELSE 121 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_289 <= -0.5440571308135986) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_32 <= -0.22056832909584045) THEN 124 ELSE 125 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_94 <= 0.3995063304901123) THEN 127 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_106 <= 0.03715407848358154) THEN 129 ELSE 130 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_227 <= -0.8011419773101807) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_24 <= 1.9583334922790527) THEN 133 ELSE 134 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_388 <= 0.29387396574020386) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_449 <= -0.5690350532531738) THEN 137 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_244 <= 1.5031886100769043) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_486 <= -0.5457156896591187) THEN 140 ELSE 141 END ELSE 142 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_148 <= -0.758403480052948) THEN 144 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_481 <= 0.32219749689102173) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_498 <= -0.47369951009750366) THEN 147 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_320 <= 0.05091040953993797) THEN 149 ELSE 150 END END ELSE 151 END END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_412 <= -0.462136447429657) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_329 <= -0.18347296118736267) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_49 <= 0.7189358472824097) THEN 155 ELSE 156 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_180 <= 0.5177502632141113) THEN 158 ELSE 159 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_384 <= -0.27968257665634155) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_79 <= -1.5629504919052124) THEN 162 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_201 <= -2.00899076461792) THEN 164 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_329 <= -0.1969057321548462) THEN 166 ELSE 167 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_273 <= 1.1154272556304932) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_385 <= -1.22442626953125) THEN 170 ELSE 171 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_130 <= 0.2827235162258148) THEN 173 ELSE 174 END END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_378 <= 0.6656036972999573) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= 1.0015244483947754) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_20 <= 0.16221249103546143) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_205 <= -0.1394992172718048) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_37 <= 0.5412261486053467) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_212 <= 0.15828175842761993) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_309 <= 0.587688684463501) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_391 <= 0.8442744016647339) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_194 <= 0.39478498697280884) THEN 184 ELSE 185 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_220 <= 0.07460460066795349) THEN 187 ELSE 188 END END ELSE 189 END ELSE 190 END ELSE 191 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_296 <= 0.5145215392112732) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_431 <= -1.4445550441741943) THEN 194 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_45 <= -0.1726234257221222) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_279 <= 0.2739087641239166) THEN 197 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_501 <= -1.078452467918396) THEN 199 ELSE 200 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_96 <= 1.1148908138275146) THEN 202 ELSE 203 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_268 <= -0.0800909698009491) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_371 <= 1.3221311569213867) THEN 206 ELSE 207 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_172 <= 0.4595297873020172) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_206 <= -0.3062380254268646) THEN 210 ELSE 211 END ELSE 212 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_458 <= 0.5899418592453003) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_331 <= -0.9963334798812866) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_176 <= 1.1467236280441284) THEN 216 ELSE 217 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_439 <= 0.24461863934993744) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_323 <= 1.2941548824310303) THEN 220 ELSE 221 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_349 <= 0.02825825661420822) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_65 <= 1.1165196895599365) THEN 224 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_146 <= -1.1338679790496826) THEN 226 ELSE 227 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_290 <= 0.9625436067581177) THEN 229 ELSE 230 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_145 <= -1.8444905281066895) THEN 232 ELSE 233 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_103 <= 0.2368636280298233) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_386 <= 2.3754982948303223) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_249 <= -1.079216480255127) THEN 237 ELSE 238 END ELSE 239 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_277 <= -0.7846924662590027) THEN 241 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_75 <= -0.3994395136833191) THEN 243 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_31 <= -0.8007037043571472) THEN 245 ELSE 246 END END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_451 <= 0.7695990800857544) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_389 <= 1.034315824508667) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_24 <= 0.13947737216949463) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_119 <= -0.2022862583398819) THEN 251 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_140 <= -0.06684297323226929) THEN 253 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_443 <= -0.8034031391143799) THEN 255 ELSE 256 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_239 <= -0.22320035099983215) THEN 258 ELSE 259 END END ELSE 260 END ELSE 261 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_429 <= 0.08866231888532639) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_305 <= -0.7525532245635986) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_398 <= 0.6267004609107971) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_311 <= -2.1679656505584717) THEN 266 ELSE 267 END ELSE 268 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_325 <= -0.7603297233581543) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_269 <= 0.7007901072502136) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_215 <= 1.8951292037963867) THEN 272 ELSE 273 END ELSE 274 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_444 <= -0.8039225339889526) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_495 <= 0.5511096715927124) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_489 <= 0.6381834745407104) THEN 278 ELSE 279 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_272 <= 0.9312106370925903) THEN 281 ELSE 282 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_65 <= -0.024305252358317375) THEN 284 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_253 <= 0.23385977745056152) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_117 <= 0.6814612150192261) THEN 287 ELSE 288 END ELSE 289 END END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_269 <= -0.4290488064289093) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_357 <= -0.8765507936477661) THEN 292 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_307 <= -0.4922752380371094) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_464 <= -0.21242719888687134) THEN 295 ELSE 296 END ELSE 297 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_389 <= 0.273714542388916) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_284 <= -0.8346967697143555) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_403 <= -0.5766043663024902) THEN 301 ELSE 302 END ELSE 303 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_58 <= 0.5076924562454224) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_259 <= 0.8072749972343445) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_326 <= -0.355331152677536) THEN 307 ELSE 308 END ELSE 309 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_142 <= 1.5183757543563843) THEN 311 ELSE 312 END END END END END END END END AS node_id_2 
FROM "33421_53X5V4_ADS_SCA_2_OUT" "ADS_sca_2_OUT"), 
"DT_node_data_11" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0.0" AS "Proba_0.0", "Values"."LogProba_0.0" AS "LogProba_0.0", "Values"."Proba_1.0" AS "Proba_1.0", "Values"."LogProba_1.0" AS "LogProba_1.0", "Values"."Proba_2.0" AS "Proba_2.0", "Values"."LogProba_2.0" AS "LogProba_2.0", "Values"."Proba_3.0" AS "Proba_3.0", "Values"."LogProba_3.0" AS "LogProba_3.0", "Values"."Decision" AS "Decision", "Values"."DecisionProba" AS "DecisionProba" 
FROM (SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 6 AS count, 7 AS depth, 6 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 7 AS depth, 6 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 7 AS depth, 9 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 8 AS depth, 11 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 8 AS depth, 11 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 8 AS depth, 16 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 19 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 19 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 9 AS depth, 18 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 25 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 25 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 28 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 9 AS depth, 24 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 29 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 12 AS count, 8 AS depth, 23 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 6 AS depth, 14 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 37 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 10 AS depth, 36 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 38 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 10 AS depth, 36 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 43 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 13 AS depth, 42 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 44 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 7 AS count, 13 AS depth, 42 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 48 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 15 AS depth, 47 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 49 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 15 AS depth, 47 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 50 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 14 AS depth, 46 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 52 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 14 AS depth, 51 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 53 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 14 AS depth, 51 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 54 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 11 AS depth, 40 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 57 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 12 AS depth, 56 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 58 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 14 AS count, 12 AS depth, 56 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 59 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 11 AS depth, 55 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 62 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 61 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 63 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 61 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 65 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 10 AS depth, 64 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 66 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 64 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 67 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 13 AS count, 7 AS depth, 33 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 70 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 6 AS count, 8 AS depth, 69 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 73 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 10 AS depth, 72 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 75 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 74 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 76 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 11 AS depth, 74 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 77 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 9 AS depth, 71 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 78 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 7 AS depth, 68 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 79 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 5 AS depth, 31 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 83 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 6 AS count, 6 AS depth, 82 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 84 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 6 AS depth, 82 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 87 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 7 AS depth, 86 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 88 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 7 AS depth, 86 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 90 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 7 AS depth, 89 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 91 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 7 AS depth, 89 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 95 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 7 AS depth, 94 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 96 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 9 AS count, 7 AS depth, 94 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 97 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 6 AS depth, 93 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 98 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 5 AS depth, 92 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 101 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 4 AS depth, 100 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 102 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 15 AS count, 4 AS depth, 100 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 104 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 4 AS depth, 103 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 106 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 5 AS depth, 105 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 108 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 6 AS depth, 107 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 109 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 6 AS depth, 107 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 112 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 6 AS count, 3 AS depth, 111 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 113 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 3 AS depth, 111 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 120 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 6 AS count, 8 AS depth, 119 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 121 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 119 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 124 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 9 AS depth, 123 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 125 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 9 AS depth, 123 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 127 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 6 AS count, 9 AS depth, 126 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 129 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 10 AS depth, 128 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 130 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 128 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 133 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 9 AS count, 8 AS depth, 132 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 134 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 132 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 137 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 9 AS depth, 136 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 140 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 139 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 141 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 11 AS count, 11 AS depth, 139 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 142 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 138 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 144 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 9 AS depth, 143 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 147 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 11 AS depth, 146 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 149 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 12 AS depth, 148 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 150 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 12 AS depth, 148 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 151 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 10 AS depth, 145 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 155 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 8 AS depth, 154 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 156 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 8 AS depth, 154 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 158 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 6 AS count, 8 AS depth, 157 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 159 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 157 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 162 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 8 AS depth, 161 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 164 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 9 AS depth, 163 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 166 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 165 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 167 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 165 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 170 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 169 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 171 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 12 AS count, 9 AS depth, 169 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 173 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 172 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 174 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 172 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 184 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 7 AS count, 13 AS depth, 183 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 185 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 13 AS depth, 183 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 187 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 13 AS depth, 186 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 188 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 13 AS depth, 186 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 189 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 11 AS depth, 181 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 190 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 10 AS depth, 180 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 191 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 8 AS count, 9 AS depth, 179 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 194 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 10 AS depth, 193 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 197 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 12 AS depth, 196 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 199 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 13 AS depth, 198 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 200 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 13 AS depth, 198 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 202 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 13 AS count, 12 AS depth, 201 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 203 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 12 AS depth, 201 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 206 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 11 AS depth, 205 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 207 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 205 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 210 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 12 AS depth, 209 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 211 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 12 AS depth, 209 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 212 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 208 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 216 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 10 AS depth, 215 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 217 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 215 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 220 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 10 AS count, 11 AS depth, 219 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 221 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 219 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 224 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 12 AS depth, 223 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 226 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 13 AS depth, 225 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 227 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 13 AS depth, 225 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 229 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 12 AS depth, 228 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 230 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 12 AS depth, 228 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 232 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 231 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 233 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 8 AS count, 9 AS depth, 231 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 237 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 236 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 238 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 13 AS count, 9 AS depth, 236 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 239 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 235 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 241 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 240 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 243 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 242 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 245 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 10 AS depth, 244 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 246 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 10 AS depth, 244 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 251 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 9 AS depth, 250 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 253 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 10 AS depth, 252 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 255 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 11 AS depth, 254 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 256 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 254 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 258 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 9 AS depth, 257 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 259 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 6 AS count, 9 AS depth, 257 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 260 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 7 AS depth, 248 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 261 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 8 AS count, 6 AS depth, 247 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 266 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 7 AS depth, 265 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 267 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 8 AS count, 7 AS depth, 265 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 268 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 6 AS depth, 264 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 272 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 8 AS count, 8 AS depth, 271 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 273 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 271 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 274 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 7 AS depth, 270 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 278 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 9 AS depth, 277 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 279 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 277 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 281 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 280 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 282 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 280 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 284 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 7 AS count, 8 AS depth, 283 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 287 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 10 AS depth, 286 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 288 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 286 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 289 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 9 AS depth, 285 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 292 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 6 AS depth, 291 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 295 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 294 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 296 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 8 AS depth, 294 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 297 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 7 AS depth, 293 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 301 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 300 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 302 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 300 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 303 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 14 AS count, 7 AS depth, 299 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 307 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 9 AS depth, 306 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 308 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 9 AS depth, 306 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 309 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 8 AS depth, 305 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 311 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 6 AS count, 8 AS depth, 310 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 312 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 310 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL) "Values"), 
"DT_Output_11" AS 
(SELECT "DT_node_lookup_11"."KEY" AS "KEY", "DT_node_lookup_11".node_id_2 AS node_id_2, "DT_node_data_11".node_id AS node_id, "DT_node_data_11".feature AS feature, "DT_node_data_11".threshold AS threshold, "DT_node_data_11".count AS count, "DT_node_data_11".depth AS depth, "DT_node_data_11".parent_id AS parent_id, "DT_node_data_11"."Proba_0.0" AS "Proba_0.0", "DT_node_data_11"."LogProba_0.0" AS "LogProba_0.0", "DT_node_data_11"."Proba_1.0" AS "Proba_1.0", "DT_node_data_11"."LogProba_1.0" AS "LogProba_1.0", "DT_node_data_11"."Proba_2.0" AS "Proba_2.0", "DT_node_data_11"."LogProba_2.0" AS "LogProba_2.0", "DT_node_data_11"."Proba_3.0" AS "Proba_3.0", "DT_node_data_11"."LogProba_3.0" AS "LogProba_3.0", "DT_node_data_11"."Decision" AS "Decision", "DT_node_data_11"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup_11" LEFT OUTER JOIN "DT_node_data_11" ON "DT_node_lookup_11".node_id_2 = "DT_node_data_11".node_id), 
"RF_Tree_11" AS 
(SELECT "DT_Output_11"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output_11"."Proba_0.0" AS "Proba_0", "DT_Output_11"."LogProba_0.0" AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output_11"."Proba_1.0" AS "Proba_1", "DT_Output_11"."LogProba_1.0" AS "LogProba_1", CAST(NULL AS BINARY_DOUBLE) AS "Score_2", "DT_Output_11"."Proba_2.0" AS "Proba_2", "DT_Output_11"."LogProba_2.0" AS "LogProba_2", CAST(NULL AS BINARY_DOUBLE) AS "Score_3", "DT_Output_11"."Proba_3.0" AS "Proba_3", "DT_Output_11"."LogProba_3.0" AS "LogProba_3" 
FROM "DT_Output_11"), 
"DT_node_lookup_12" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_363 <= -0.670283317565918) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_139 <= 0.6842027902603149) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_244 <= 0.46776217222213745) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_474 <= -0.9340216517448425) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_352 <= -0.8272184133529663) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_55 <= -0.6192752718925476) THEN 6 ELSE 7 END ELSE 8 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_445 <= 0.011541631072759628) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_378 <= 0.8967514038085938) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_466 <= -0.3075181245803833) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_15 <= 0.39752864837646484) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_162 <= -0.395771324634552) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_24 <= -0.4025000333786011) THEN 15 ELSE 16 END ELSE 17 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_182 <= 0.722251832485199) THEN 19 ELSE 20 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_487 <= 0.45584991574287415) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_237 <= 0.4495713710784912) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_409 <= -0.7224748134613037) THEN 24 ELSE 25 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_419 <= 0.5497870445251465) THEN 27 ELSE 28 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_156 <= 0.5941192507743835) THEN 30 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_36 <= 0.6661815047264099) THEN 32 ELSE 33 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_94 <= -0.9711681604385376) THEN 35 ELSE 36 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_88 <= 0.5615710020065308) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_418 <= 0.3011932671070099) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_55 <= -1.8567683696746826) THEN 40 ELSE 41 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_367 <= -0.3956757187843323) THEN 43 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_94 <= -0.22409015893936157) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_115 <= -0.4823814928531647) THEN 46 ELSE 47 END ELSE 48 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_332 <= 0.686463475227356) THEN 50 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_486 <= 1.2995092868804932) THEN 52 ELSE 53 END END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= -0.38166555762290955) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_274 <= -0.6833517551422119) THEN 56 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= 2.180551052093506) THEN 58 ELSE 59 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_100 <= 0.09882965683937073) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_124 <= -0.4865110516548157) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_12 <= -1.4620884656906128) THEN 63 ELSE 64 END ELSE 65 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_442 <= 0.19905775785446167) THEN 67 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_81 <= 0.5715792179107666) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_244 <= 1.190557837486267) THEN 70 ELSE 71 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_265 <= -0.08652323484420776) THEN 73 ELSE 74 END END END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_378 <= 0.46610283851623535) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_358 <= 0.7685747146606445) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_204 <= -0.8905647397041321) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_148 <= -0.6497341990470886) THEN 79 ELSE 80 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_328 <= 2.036592960357666) THEN 82 ELSE 83 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_123 <= 0.16775545477867126) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_334 <= -0.4434605836868286) THEN 86 ELSE 87 END ELSE 88 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_172 <= 0.03168877214193344) THEN 90 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_145 <= 0.1038273423910141) THEN 92 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_295 <= 1.3315227031707764) THEN 94 ELSE 95 END END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_144 <= 1.0316359996795654) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_74 <= -0.6544408798217773) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_103 <= -0.9349058270454407) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_66 <= -0.9955006837844849) THEN 100 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_227 <= 0.9346808791160583) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_127 <= -1.586047887802124) THEN 103 ELSE 104 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_224 <= -0.13434553146362305) THEN 106 ELSE 107 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_131 <= -0.16776065528392792) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_405 <= 0.4452018141746521) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_390 <= -0.2444039285182953) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_317 <= 0.6502079963684082) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_275 <= -0.8734001517295837) THEN 113 ELSE 114 END ELSE 115 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_17 <= -0.34336549043655396) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_112 <= -0.13688266277313232) THEN 118 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_184 <= 0.41508686542510986) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_324 <= -0.44006192684173584) THEN 121 ELSE 122 END ELSE 123 END END ELSE 124 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_268 <= 0.0660175308585167) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_211 <= 0.050352126359939575) THEN 127 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_136 <= -0.19134843349456787) THEN 129 ELSE 130 END END ELSE 131 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_487 <= 1.2619554996490479) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_83 <= 1.072324275970459) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_159 <= 2.0791072845458984) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_423 <= -1.809607744216919) THEN 136 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_113 <= 1.9673795700073242) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_340 <= -2.0378570556640625) THEN 139 ELSE 140 END ELSE 141 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_142 <= -0.6618642807006836) THEN 143 ELSE 144 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_372 <= -0.024993211030960083) THEN 146 ELSE 147 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_379 <= 0.6058487296104431) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_375 <= 1.0573264360427856) THEN 150 ELSE 151 END ELSE 152 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_22 <= -0.682766318321228) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_70 <= 1.3910694122314453) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_93 <= -0.1369113326072693) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_146 <= -0.45895880460739136) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_161 <= -0.15575028955936432) THEN 158 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_227 <= 0.6591888666152954) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_151 <= -1.766405701637268) THEN 161 ELSE 162 END ELSE 163 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_58 <= -0.4256730079650879) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_49 <= 1.0898962020874023) THEN 166 ELSE 167 END ELSE 168 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_345 <= 1.2130851745605469) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_397 <= 1.016481637954712) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_20 <= 1.1850619316101074) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_57 <= 1.4384280443191528) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_370 <= 2.2867836952209473) THEN 174 ELSE 175 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_111 <= -0.07682070136070251) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_468 <= -1.1475340127944946) THEN 178 ELSE 179 END ELSE 180 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_237 <= -0.025445297360420227) THEN 182 ELSE 183 END END ELSE 184 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_246 <= 1.0511136054992676) THEN 186 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_82 <= 1.0346124172210693) THEN 188 ELSE 189 END END END END ELSE 190 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_428 <= 1.621062994003296) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_403 <= -0.8274101614952087) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_200 <= 0.6326103210449219) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_274 <= 1.178105354309082) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_144 <= -0.10514571517705917) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_499 <= 0.8059895038604736) THEN 197 ELSE 198 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_306 <= 0.7397261261940002) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_422 <= -1.5918114185333252) THEN 201 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_321 <= 0.9243355393409729) THEN 203 ELSE 204 END END ELSE 205 END END ELSE 206 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_372 <= -0.7410628795623779) THEN 208 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_366 <= 0.1344723254442215) THEN 210 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_369 <= -0.031112130731344223) THEN 212 ELSE 213 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_499 <= -0.736319899559021) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_285 <= 0.5872764587402344) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_218 <= -2.086106300354004) THEN 217 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_107 <= 2.082932949066162) THEN 219 ELSE 220 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_369 <= 0.29705607891082764) THEN 222 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_175 <= -0.47734183073043823) THEN 224 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_274 <= 0.5487159490585327) THEN 226 ELSE 227 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_196 <= -0.7399901747703552) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_132 <= 0.817209005355835) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_363 <= -0.5058760643005371) THEN 231 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_350 <= 0.7391107082366943) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_160 <= 0.8082520961761475) THEN 234 ELSE 235 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_214 <= 0.8608426451683044) THEN 237 ELSE 238 END END END ELSE 239 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_493 <= -1.3026959896087646) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_206 <= 0.03799634426832199) THEN 242 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_334 <= -0.15955303609371185) THEN 244 ELSE 245 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_184 <= 1.207637906074524) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_384 <= -0.4249285161495209) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_27 <= 0.549071192741394) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_83 <= -1.1557681560516357) THEN 250 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_152 <= -0.614051342010498) THEN 252 ELSE 253 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_28 <= -0.6293247938156128) THEN 255 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_168 <= -0.3529145121574402) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_478 <= 0.41863396763801575) THEN 258 ELSE 259 END ELSE 260 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_159 <= 0.9979939460754395) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_131 <= -0.6836506128311157) THEN 263 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_348 <= -0.10900453478097916) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_12 <= 1.9294137954711914) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_242 <= -0.4974202811717987) THEN 267 ELSE 268 END ELSE 269 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_426 <= 0.7001808881759644) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_162 <= -0.09289585798978806) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_90 <= 0.5727346539497375) THEN 273 ELSE 274 END ELSE 275 END ELSE 276 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_171 <= 0.3922993242740631) THEN 278 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_262 <= 0.3017783761024475) THEN 280 ELSE 281 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_33 <= 0.6320929527282715) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_300 <= 1.0349127054214478) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_79 <= 0.7469890713691711) THEN 285 ELSE 286 END ELSE 287 END ELSE 288 END END END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_279 <= -1.8905210494995117) THEN 290 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_256 <= 0.16830036044120789) THEN 292 ELSE 293 END END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_137 <= -1.217719316482544) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_389 <= 0.1764819473028183) THEN 296 ELSE 297 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_26 <= 0.18863631784915924) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_251 <= -0.08348792046308517) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_154 <= 0.6413642168045044) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_60 <= -1.3809714317321777) THEN 302 ELSE 303 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_390 <= -0.8940287232398987) THEN 305 ELSE 306 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_328 <= 0.8102489709854126) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_443 <= -0.4595317542552948) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_426 <= 1.730501651763916) THEN 310 ELSE 311 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_69 <= -1.2349591255187988) THEN 313 ELSE 314 END END ELSE 315 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_98 <= 0.7290341258049011) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_414 <= 1.2045259475708008) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_59 <= 1.990246295928955) THEN 319 ELSE 320 END ELSE 321 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_252 <= 0.25231513381004333) THEN 323 ELSE 324 END END END END END END AS node_id_2 
FROM "33421_53X5V4_ADS_SCA_2_OUT" "ADS_sca_2_OUT"), 
"DT_node_data_12" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0.0" AS "Proba_0.0", "Values"."LogProba_0.0" AS "LogProba_0.0", "Values"."Proba_1.0" AS "Proba_1.0", "Values"."LogProba_1.0" AS "LogProba_1.0", "Values"."Proba_2.0" AS "Proba_2.0", "Values"."LogProba_2.0" AS "LogProba_2.0", "Values"."Proba_3.0" AS "Proba_3.0", "Values"."LogProba_3.0" AS "LogProba_3.0", "Values"."Decision" AS "Decision", "Values"."DecisionProba" AS "DecisionProba" 
FROM (SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 6 AS depth, 5 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 6 AS depth, 5 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 10 AS count, 5 AS depth, 4 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 14 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 14 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 9 AS depth, 13 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 9 AS depth, 18 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 18 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 23 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 8 AS count, 10 AS depth, 23 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 26 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 28 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 26 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 9 AS depth, 29 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 32 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 10 AS depth, 31 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 33 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 31 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 35 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 7 AS depth, 34 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 36 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 7 AS depth, 34 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 40 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 39 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 41 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 13 AS count, 8 AS depth, 39 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 43 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 8 AS depth, 42 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 46 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 45 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 47 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 45 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 48 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 9 AS depth, 44 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 50 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 7 AS depth, 49 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 52 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 8 AS depth, 51 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 53 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 51 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 56 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 5 AS depth, 55 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 58 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 8 AS count, 6 AS depth, 57 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 59 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 6 AS depth, 57 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 63 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 7 AS depth, 62 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 64 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 7 AS depth, 62 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 65 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 9 AS count, 6 AS depth, 61 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 67 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 6 AS depth, 66 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 70 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 69 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 71 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 8 AS depth, 69 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 73 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 72 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 74 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 72 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 79 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 6 AS depth, 78 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 80 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 6 AS depth, 78 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 82 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 11 AS count, 6 AS depth, 81 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 83 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 6 AS depth, 81 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 86 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 6 AS depth, 85 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 87 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 6 AS depth, 85 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 88 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 5 AS depth, 84 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 90 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 4 AS depth, 89 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 92 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 5 AS depth, 91 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 94 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 6 AS depth, 93 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 95 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 6 AS depth, 93 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 100 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 5 AS depth, 99 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 103 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 7 AS depth, 102 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 104 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 8 AS count, 7 AS depth, 102 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 106 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 7 AS depth, 105 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 107 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 7 AS depth, 105 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 113 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 112 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 114 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 9 AS depth, 112 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 115 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 8 AS depth, 111 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 118 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 9 AS depth, 117 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 121 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 120 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 122 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 120 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 123 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 10 AS depth, 119 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 124 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 7 AS count, 8 AS depth, 116 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 127 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 126 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 129 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 128 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 130 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 128 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 131 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 6 AS count, 7 AS depth, 125 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 136 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 135 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 139 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 138 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 140 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 25 AS count, 11 AS depth, 138 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 141 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 137 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 143 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 142 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 144 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 142 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 146 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 8 AS depth, 145 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 147 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 8 AS depth, 145 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 150 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 8 AS depth, 149 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 151 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 149 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 152 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 7 AS depth, 148 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 158 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 8 AS depth, 157 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 161 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 160 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 162 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 10 AS depth, 160 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 163 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 159 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 166 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 165 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 167 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 165 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 168 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 7 AS count, 8 AS depth, 164 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 174 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 19 AS count, 11 AS depth, 173 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 175 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 173 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 178 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 12 AS depth, 177 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 179 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 12 AS depth, 177 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 180 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 11 AS depth, 176 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 182 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 10 AS depth, 181 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 183 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 181 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 184 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 8 AS depth, 170 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 186 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 8 AS depth, 185 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 188 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 187 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 189 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 187 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 190 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 5 AS depth, 154 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 197 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 12 AS count, 10 AS depth, 196 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 198 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 196 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 201 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 11 AS depth, 200 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 203 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 12 AS depth, 202 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 204 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 12 AS depth, 202 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 205 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 10 AS depth, 199 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 206 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 8 AS depth, 194 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 208 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 8 AS depth, 207 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 210 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 6 AS count, 9 AS depth, 209 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 212 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 211 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 213 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 10 AS depth, 211 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 217 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 216 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 219 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 17 AS count, 10 AS depth, 218 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 220 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 218 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 222 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 9 AS depth, 221 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 224 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 223 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 226 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 11 AS depth, 225 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 227 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 225 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 231 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 10 AS depth, 230 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 234 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 13 AS count, 12 AS depth, 233 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 235 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 12 AS depth, 233 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 237 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 12 AS depth, 236 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 238 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 12 AS depth, 236 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 239 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 9 AS depth, 229 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 242 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 10 AS depth, 241 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 244 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 243 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 245 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 11 AS depth, 243 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 250 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 13 AS depth, 249 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 252 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 14 AS depth, 251 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 253 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 14 AS count, 14 AS depth, 251 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 255 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 13 AS depth, 254 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 258 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 15 AS depth, 257 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 259 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 15 AS depth, 257 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 260 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 14 AS depth, 256 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 263 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 7 AS count, 13 AS depth, 262 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 267 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 16 AS depth, 266 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 268 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 13 AS count, 16 AS depth, 266 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 269 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 15 AS depth, 265 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 273 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 17 AS depth, 272 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 274 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 17 AS depth, 272 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 275 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 16 AS depth, 271 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 276 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 15 AS depth, 270 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 278 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 13 AS depth, 277 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 280 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 14 AS depth, 279 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 281 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 14 AS depth, 279 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 285 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 13 AS depth, 284 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 286 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 13 AS depth, 284 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 287 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 12 AS depth, 283 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 288 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 11 AS depth, 282 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 290 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 6 AS depth, 289 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 292 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 8 AS count, 7 AS depth, 291 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 293 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 7 AS depth, 291 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 296 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 4 AS depth, 295 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 297 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 4 AS depth, 295 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 302 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 7 AS depth, 301 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 303 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 9 AS count, 7 AS depth, 301 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 305 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 7 AS depth, 304 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 306 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 7 AS depth, 304 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 310 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 309 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 311 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 309 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 313 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 312 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 314 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 7 AS count, 8 AS depth, 312 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 315 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 6 AS depth, 307 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 319 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 18 AS count, 7 AS depth, 318 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 320 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 7 AS depth, 318 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 321 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 6 AS depth, 317 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 323 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 6 AS depth, 322 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 324 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 6 AS depth, 322 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL) "Values"), 
"DT_Output_12" AS 
(SELECT "DT_node_lookup_12"."KEY" AS "KEY", "DT_node_lookup_12".node_id_2 AS node_id_2, "DT_node_data_12".node_id AS node_id, "DT_node_data_12".feature AS feature, "DT_node_data_12".threshold AS threshold, "DT_node_data_12".count AS count, "DT_node_data_12".depth AS depth, "DT_node_data_12".parent_id AS parent_id, "DT_node_data_12"."Proba_0.0" AS "Proba_0.0", "DT_node_data_12"."LogProba_0.0" AS "LogProba_0.0", "DT_node_data_12"."Proba_1.0" AS "Proba_1.0", "DT_node_data_12"."LogProba_1.0" AS "LogProba_1.0", "DT_node_data_12"."Proba_2.0" AS "Proba_2.0", "DT_node_data_12"."LogProba_2.0" AS "LogProba_2.0", "DT_node_data_12"."Proba_3.0" AS "Proba_3.0", "DT_node_data_12"."LogProba_3.0" AS "LogProba_3.0", "DT_node_data_12"."Decision" AS "Decision", "DT_node_data_12"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup_12" LEFT OUTER JOIN "DT_node_data_12" ON "DT_node_lookup_12".node_id_2 = "DT_node_data_12".node_id), 
"RF_Tree_12" AS 
(SELECT "DT_Output_12"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output_12"."Proba_0.0" AS "Proba_0", "DT_Output_12"."LogProba_0.0" AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output_12"."Proba_1.0" AS "Proba_1", "DT_Output_12"."LogProba_1.0" AS "LogProba_1", CAST(NULL AS BINARY_DOUBLE) AS "Score_2", "DT_Output_12"."Proba_2.0" AS "Proba_2", "DT_Output_12"."LogProba_2.0" AS "LogProba_2", CAST(NULL AS BINARY_DOUBLE) AS "Score_3", "DT_Output_12"."Proba_3.0" AS "Proba_3", "DT_Output_12"."LogProba_3.0" AS "LogProba_3" 
FROM "DT_Output_12"), 
"DT_node_lookup_13" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_212 <= -0.8061453104019165) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_378 <= 0.7018897533416748) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_367 <= -0.6262718439102173) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_72 <= -0.31005793809890747) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_365 <= -0.31195706129074097) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_233 <= 0.37421855330467224) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_447 <= 0.8715846538543701) THEN 7 ELSE 8 END ELSE 9 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_232 <= -0.7785910964012146) THEN 11 ELSE 12 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= 0.5852404832839966) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_181 <= 0.8838886618614197) THEN 15 ELSE 16 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_121 <= -0.6339352130889893) THEN 18 ELSE 19 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_401 <= 0.30546414852142334) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_200 <= 1.2497546672821045) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_476 <= -1.3911709785461426) THEN 23 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_262 <= -0.3337477445602417) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_412 <= 0.9453914165496826) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_413 <= -0.28679803013801575) THEN 27 ELSE 28 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_482 <= -0.29177916049957275) THEN 30 ELSE 31 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_350 <= -1.8270704746246338) THEN 33 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_355 <= -2.2806448936462402) THEN 35 ELSE 36 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_181 <= 0.884771466255188) THEN 38 ELSE 39 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_268 <= 0.7450122833251953) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_32 <= 0.7130322456359863) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_284 <= -0.8665215969085693) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_381 <= 0.6313304901123047) THEN 44 ELSE 45 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_280 <= 1.1493871212005615) THEN 47 ELSE 48 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_249 <= -0.5761934518814087) THEN 50 ELSE 51 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_54 <= -0.3106156289577484) THEN 53 ELSE 54 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_244 <= -0.5415251851081848) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_83 <= -0.8876529335975647) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_490 <= 1.4419376850128174) THEN 58 ELSE 59 END ELSE 60 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_208 <= -0.172170028090477) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_178 <= 0.4929295778274536) THEN 63 ELSE 64 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_53 <= 0.9208635687828064) THEN 66 ELSE 67 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_401 <= -0.3116488456726074) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_260 <= 0.5893906354904175) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_486 <= 1.094731330871582) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_105 <= 1.5347139835357666) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_87 <= 0.9668955206871033) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_310 <= 0.9180119037628174) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_252 <= -0.2889237105846405) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_227 <= 0.15010598301887512) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_132 <= -1.1530160903930664) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_254 <= 0.045738279819488525) THEN 78 ELSE 79 END ELSE 80 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_363 <= -0.7570181488990784) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_301 <= -0.01479225605726242) THEN 83 ELSE 84 END ELSE 85 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_197 <= 0.01760193146765232) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_283 <= 0.5366639494895935) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_200 <= -2.7191996574401855) THEN 89 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_76 <= 1.7401046752929688) THEN 91 ELSE 92 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_40 <= 0.7992153167724609) THEN 94 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_79 <= -0.48669347167015076) THEN 96 ELSE 97 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_185 <= 1.1219929456710815) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_500 <= 0.15440130233764648) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_106 <= -0.8447390794754028) THEN 101 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_465 <= 0.36911624670028687) THEN 103 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_342 <= 0.41980406641960144) THEN 105 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_168 <= -0.691468358039856) THEN 107 ELSE 108 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_239 <= 0.5654070377349854) THEN 110 ELSE 111 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_276 <= -0.6155028343200684) THEN 113 ELSE 114 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_355 <= -0.45991018414497375) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_15 <= 0.911943793296814) THEN 117 ELSE 118 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_459 <= 1.0651202201843262) THEN 120 ELSE 121 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_105 <= -0.3280283212661743) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_58 <= -0.6041514873504639) THEN 124 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_130 <= 0.7078700065612793) THEN 126 ELSE 127 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_396 <= 0.9168834686279297) THEN 129 ELSE 130 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_75 <= 0.23419831693172455) THEN 132 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_361 <= -0.1278935968875885) THEN 134 ELSE 135 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_266 <= -0.08446450531482697) THEN 137 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_421 <= 0.3249637484550476) THEN 139 ELSE 140 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_178 <= 0.016157574951648712) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_386 <= 0.14006905257701874) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_375 <= 0.1664770245552063) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_89 <= 0.6996830701828003) THEN 145 ELSE 146 END ELSE 147 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_400 <= 0.46662577986717224) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_93 <= 0.20386938750743866) THEN 150 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_87 <= 0.3590022623538971) THEN 152 ELSE 153 END END ELSE 154 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_449 <= 1.0378247499465942) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_48 <= -1.420733094215393) THEN 157 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_419 <= 0.7041317224502563) THEN 159 ELSE 160 END END ELSE 161 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_166 <= 1.7882286310195923) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_499 <= -0.6845608949661255) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_310 <= 0.11545546352863312) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_362 <= -0.31630417704582214) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_482 <= -0.3286932110786438) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_299 <= -1.0463733673095703) THEN 168 ELSE 169 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_249 <= -0.640609622001648) THEN 171 ELSE 172 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_156 <= 0.09515666216611862) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_133 <= -1.5906726121902466) THEN 175 ELSE 176 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_490 <= 0.15154704451560974) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_321 <= -0.5986571907997131) THEN 179 ELSE 180 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_468 <= 0.49885833263397217) THEN 182 ELSE 183 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_246 <= -1.366095781326294) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_379 <= 1.1449612379074097) THEN 186 ELSE 187 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_431 <= 1.6339480876922607) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_90 <= 1.392601728439331) THEN 190 ELSE 191 END ELSE 192 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_160 <= -1.1270350217819214) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_79 <= 0.46940600872039795) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_477 <= 0.5767796039581299) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_285 <= 0.2500474452972412) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_262 <= -0.3473365008831024) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_263 <= 0.0799192488193512) THEN 199 ELSE 200 END ELSE 201 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= -1.542546033859253) THEN 203 ELSE 204 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_68 <= 0.05777159333229065) THEN 206 ELSE 207 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_501 <= 0.5250098705291748) THEN 209 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_103 <= 0.3601642847061157) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_15 <= -0.5336453318595886) THEN 212 ELSE 213 END ELSE 214 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= 1.7461049556732178) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_403 <= 1.0200098752975464) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_65 <= -1.8275686502456665) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_215 <= -0.7809613943099976) THEN 219 ELSE 220 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_187 <= 0.05793356895446777) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_358 <= -1.0262236595153809) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_77 <= 1.6724114418029785) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_73 <= 1.1281062364578247) THEN 225 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_129 <= 0.6594161987304688) THEN 227 ELSE 228 END END ELSE 229 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_397 <= -2.1429738998413086) THEN 231 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_306 <= 0.7314438819885254) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_230 <= 0.891818642616272) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_393 <= -0.16204050183296204) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_157 <= 0.7737677097320557) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_138 <= -0.24854685366153717) THEN 237 ELSE 238 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_445 <= 1.1081955432891846) THEN 240 ELSE 241 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_486 <= 0.6636025905609131) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_137 <= 1.1454368829727173) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_139 <= -1.45669686794281) THEN 245 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_167 <= 0.9442694783210754) THEN 247 ELSE 248 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_326 <= -1.4110403060913086) THEN 250 ELSE 251 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_462 <= -0.03360697627067566) THEN 253 ELSE 254 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_179 <= -1.0025848150253296) THEN 256 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_108 <= 0.431754469871521) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_249 <= -1.3644930124282837) THEN 259 ELSE 260 END ELSE 261 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_437 <= 1.2041058540344238) THEN 263 ELSE 264 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_333 <= 0.04372939467430115) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_276 <= -0.4113267660140991) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_361 <= -0.4711953103542328) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_497 <= -0.6517011523246765) THEN 269 ELSE 270 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_446 <= 0.9851611852645874) THEN 272 ELSE 273 END END ELSE 274 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_114 <= -0.5752661824226379) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_130 <= 0.5061704516410828) THEN 277 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_398 <= -0.5328533053398132) THEN 279 ELSE 280 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_401 <= 0.8868411183357239) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_353 <= -0.664548397064209) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_339 <= -0.021824046969413757) THEN 284 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_278 <= 0.46044155955314636) THEN 286 ELSE 287 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_134 <= -0.0052419304847717285) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_196 <= 0.5640830993652344) THEN 290 ELSE 291 END ELSE 292 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_78 <= -0.9038794636726379) THEN 294 ELSE 295 END END END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_163 <= -0.14141279458999634) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_491 <= -0.12836697697639465) THEN 298 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_140 <= 0.2945454716682434) THEN 300 ELSE 301 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_46 <= -1.2318415641784668) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_157 <= -0.4022367000579834) THEN 304 ELSE 305 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_183 <= 1.0131551027297974) THEN 307 ELSE 308 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_373 <= -0.017435817047953606) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_151 <= -0.1322823166847229) THEN 311 ELSE 312 END ELSE 313 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_271 <= -0.8595003485679626) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_264 <= 0.7834491729736328) THEN 316 ELSE 317 END ELSE 318 END END END END AS node_id_2 
FROM "33421_53X5V4_ADS_SCA_2_OUT" "ADS_sca_2_OUT"), 
"DT_node_data_13" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0.0" AS "Proba_0.0", "Values"."LogProba_0.0" AS "LogProba_0.0", "Values"."Proba_1.0" AS "Proba_1.0", "Values"."LogProba_1.0" AS "LogProba_1.0", "Values"."Proba_2.0" AS "Proba_2.0", "Values"."LogProba_2.0" AS "LogProba_2.0", "Values"."Proba_3.0" AS "Proba_3.0", "Values"."LogProba_3.0" AS "LogProba_3.0", "Values"."Decision" AS "Decision", "Values"."DecisionProba" AS "DecisionProba" 
FROM (SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 7 AS depth, 6 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 7 AS depth, 6 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 6 AS depth, 5 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 6 AS depth, 10 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 6 AS depth, 10 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 11 AS count, 6 AS depth, 14 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 6 AS depth, 14 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 6 AS depth, 17 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 6 AS depth, 17 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 6 AS depth, 22 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 9 AS depth, 26 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 28 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 9 AS depth, 26 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 9 AS depth, 29 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 31 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 9 AS depth, 29 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 33 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 32 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 35 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 34 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 36 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 17 AS count, 9 AS depth, 34 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 38 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 6 AS depth, 37 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 39 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 6 AS depth, 37 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 44 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 8 AS depth, 43 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 45 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 8 AS depth, 43 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 47 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 8 AS count, 8 AS depth, 46 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 48 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 46 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 50 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 7 AS depth, 49 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 51 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 7 AS depth, 49 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 53 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 6 AS depth, 52 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 54 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 6 AS depth, 52 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 58 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 5 AS depth, 57 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 59 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 5 AS depth, 57 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 60 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 4 AS depth, 56 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 63 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 5 AS depth, 62 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 64 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 5 AS depth, 62 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 66 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 9 AS count, 5 AS depth, 65 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 67 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 5 AS depth, 65 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 78 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 77 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 79 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 77 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 80 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 9 AS count, 10 AS depth, 76 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 83 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 82 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 84 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 82 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 85 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 10 AS depth, 81 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 89 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 88 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 91 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 14 AS count, 12 AS depth, 90 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 92 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 12 AS depth, 90 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 94 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 11 AS depth, 93 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 96 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 12 AS depth, 95 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 97 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 12 AS depth, 95 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 101 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 12 AS depth, 100 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 103 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 13 AS depth, 102 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 105 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 14 AS depth, 104 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 107 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 15 AS depth, 106 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 108 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 15 AS depth, 106 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 110 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 6 AS count, 12 AS depth, 109 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 111 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 12 AS depth, 109 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 113 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 11 AS depth, 112 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 114 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 11 AS depth, 112 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 117 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 9 AS depth, 116 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 118 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 116 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 120 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 10 AS count, 9 AS depth, 119 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 121 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 119 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 124 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 8 AS depth, 123 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 126 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 9 AS depth, 125 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 127 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 9 AS depth, 125 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 129 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 8 AS depth, 128 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 130 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 128 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 132 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 6 AS depth, 131 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 134 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 7 AS depth, 133 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 135 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 7 AS depth, 133 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 137 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 5 AS depth, 136 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 139 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 7 AS count, 6 AS depth, 138 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 140 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 6 AS depth, 138 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 145 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 7 AS depth, 144 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 146 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 7 AS depth, 144 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 147 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 6 AS count, 6 AS depth, 143 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 150 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 7 AS depth, 149 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 152 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 8 AS depth, 151 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 153 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 151 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 154 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 6 AS depth, 148 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 157 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 6 AS depth, 156 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 159 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 15 AS count, 7 AS depth, 158 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 160 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 7 AS depth, 158 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 161 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 5 AS depth, 155 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 168 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 167 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 169 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 7 AS count, 8 AS depth, 167 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 171 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 8 AS depth, 170 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 172 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 8 AS depth, 170 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 175 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 174 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 176 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 7 AS count, 8 AS depth, 174 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 179 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 178 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 180 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 9 AS depth, 178 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 182 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 9 AS depth, 181 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 183 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 181 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 186 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 7 AS depth, 185 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 187 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 7 AS depth, 185 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 190 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 19 AS count, 8 AS depth, 189 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 191 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 189 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 192 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 7 AS depth, 188 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 199 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 10 AS depth, 198 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 200 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 198 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 201 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 9 AS depth, 197 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 203 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 202 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 204 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 9 AS depth, 202 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 206 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 8 AS depth, 205 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 207 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 205 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 209 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 8 AS count, 7 AS depth, 208 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 212 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 211 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 213 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 211 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 214 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 8 AS depth, 210 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 219 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 218 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 220 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 9 AS depth, 218 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 225 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 12 AS depth, 224 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 227 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 13 AS depth, 226 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 228 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 13 AS depth, 226 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 229 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 11 AS depth, 223 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 231 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 11 AS depth, 230 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 237 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 16 AS depth, 236 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 238 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 16 AS depth, 236 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 240 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 16 AS depth, 239 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 241 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 16 AS depth, 239 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 245 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 17 AS depth, 244 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 247 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 10 AS count, 18 AS depth, 246 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 248 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 18 AS depth, 246 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 250 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 17 AS depth, 249 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 251 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 17 AS depth, 249 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 253 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 16 AS depth, 252 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 254 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 16 AS depth, 252 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 256 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 14 AS depth, 255 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 259 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 16 AS depth, 258 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 260 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 6 AS count, 16 AS depth, 258 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 261 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 15 AS depth, 257 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 263 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 8 AS count, 13 AS depth, 262 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 264 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 13 AS depth, 262 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 269 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 13 AS depth, 268 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 270 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 13 AS depth, 268 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 272 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 13 AS depth, 271 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 273 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 13 AS depth, 271 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 274 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 18 AS count, 11 AS depth, 266 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 277 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 12 AS depth, 276 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 279 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 13 AS depth, 278 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 280 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 13 AS depth, 278 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 284 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 14 AS depth, 283 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 286 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 15 AS depth, 285 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 287 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 15 AS depth, 285 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 290 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 15 AS depth, 289 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 291 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 15 AS depth, 289 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 292 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 14 AS depth, 288 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 294 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 13 AS depth, 293 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 295 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 6 AS count, 13 AS depth, 293 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 298 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 9 AS depth, 297 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 300 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 10 AS depth, 299 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 301 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 299 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 304 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 303 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 305 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 303 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 307 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 7 AS count, 10 AS depth, 306 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 308 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 306 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 311 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 310 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 312 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 310 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 313 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 7 AS depth, 309 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 316 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 5 AS depth, 315 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 317 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 5 AS depth, 315 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 318 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 9 AS count, 4 AS depth, 314 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL) "Values"), 
"DT_Output_13" AS 
(SELECT "DT_node_lookup_13"."KEY" AS "KEY", "DT_node_lookup_13".node_id_2 AS node_id_2, "DT_node_data_13".node_id AS node_id, "DT_node_data_13".feature AS feature, "DT_node_data_13".threshold AS threshold, "DT_node_data_13".count AS count, "DT_node_data_13".depth AS depth, "DT_node_data_13".parent_id AS parent_id, "DT_node_data_13"."Proba_0.0" AS "Proba_0.0", "DT_node_data_13"."LogProba_0.0" AS "LogProba_0.0", "DT_node_data_13"."Proba_1.0" AS "Proba_1.0", "DT_node_data_13"."LogProba_1.0" AS "LogProba_1.0", "DT_node_data_13"."Proba_2.0" AS "Proba_2.0", "DT_node_data_13"."LogProba_2.0" AS "LogProba_2.0", "DT_node_data_13"."Proba_3.0" AS "Proba_3.0", "DT_node_data_13"."LogProba_3.0" AS "LogProba_3.0", "DT_node_data_13"."Decision" AS "Decision", "DT_node_data_13"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup_13" LEFT OUTER JOIN "DT_node_data_13" ON "DT_node_lookup_13".node_id_2 = "DT_node_data_13".node_id), 
"RF_Tree_13" AS 
(SELECT "DT_Output_13"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output_13"."Proba_0.0" AS "Proba_0", "DT_Output_13"."LogProba_0.0" AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output_13"."Proba_1.0" AS "Proba_1", "DT_Output_13"."LogProba_1.0" AS "LogProba_1", CAST(NULL AS BINARY_DOUBLE) AS "Score_2", "DT_Output_13"."Proba_2.0" AS "Proba_2", "DT_Output_13"."LogProba_2.0" AS "LogProba_2", CAST(NULL AS BINARY_DOUBLE) AS "Score_3", "DT_Output_13"."Proba_3.0" AS "Proba_3", "DT_Output_13"."LogProba_3.0" AS "LogProba_3" 
FROM "DT_Output_13"), 
"DT_node_lookup_14" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_132 <= 0.23909349739551544) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_406 <= 0.6914960145950317) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_193 <= 0.4958369731903076) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_65 <= -1.2320783138275146) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_473 <= 0.2414335012435913) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_185 <= -0.20303955674171448) THEN 6 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_253 <= -0.42553138732910156) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_56 <= -1.2370257377624512) THEN 9 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_104 <= 0.7237356305122375) THEN 11 ELSE 12 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_265 <= 0.9483387470245361) THEN 14 ELSE 15 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_245 <= -1.652784824371338) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_99 <= 0.2169092893600464) THEN 18 ELSE 19 END ELSE 20 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_102 <= -0.03681274875998497) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_305 <= -1.8565669059753418) THEN 23 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_408 <= 0.41992634534835815) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_147 <= -1.112358570098877) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_437 <= 0.5274378657341003) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_148 <= 0.3164943754673004) THEN 28 ELSE 29 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_181 <= 0.6469802856445312) THEN 31 ELSE 32 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_220 <= -0.6544992327690125) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_475 <= -0.5866529941558838) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_401 <= 0.354594349861145) THEN 36 ELSE 37 END ELSE 38 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_132 <= -2.1063427925109863) THEN 40 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_183 <= -1.725196361541748) THEN 42 ELSE 43 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_420 <= -0.5588092803955078) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_317 <= -0.9209278225898743) THEN 46 ELSE 47 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_349 <= -1.0235183238983154) THEN 49 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_475 <= -0.006315089762210846) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_372 <= 0.5507243871688843) THEN 52 ELSE 53 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_389 <= 1.0895979404449463) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_128 <= -0.5692244172096252) THEN 56 ELSE 57 END ELSE 58 END END END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_33 <= -0.29731911420822144) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_202 <= 0.4275301694869995) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_145 <= -0.4301081895828247) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_322 <= 0.23124034702777863) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_367 <= -0.8906214237213135) THEN 64 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_292 <= -0.5948665142059326) THEN 66 ELSE 67 END END ELSE 68 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_369 <= -0.9741934537887573) THEN 70 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_489 <= -1.7163151502609253) THEN 72 ELSE 73 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_369 <= -0.6230680346488953) THEN 75 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_249 <= -0.22012507915496826) THEN 77 ELSE 78 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_224 <= 0.6528170704841614) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_376 <= -0.7101162075996399) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_39 <= 0.856394350528717) THEN 82 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_81 <= 0.0628662258386612) THEN 84 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_222 <= -0.17893822491168976) THEN 86 ELSE 87 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_225 <= -0.48142027854919434) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_447 <= 0.49897801876068115) THEN 90 ELSE 91 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_247 <= -0.8931118249893188) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_471 <= 0.6143835186958313) THEN 94 ELSE 95 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_429 <= 0.9004621505737305) THEN 97 ELSE 98 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_182 <= -1.2633459568023682) THEN 100 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_369 <= -0.40394294261932373) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_87 <= -1.0726162195205688) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_165 <= 0.22710342705249786) THEN 104 ELSE 105 END ELSE 106 END ELSE 107 END END END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_311 <= -0.327842116355896) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_61 <= 0.5182647109031677) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_439 <= -0.1100892573595047) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_443 <= -0.9612041711807251) THEN 112 ELSE 113 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_327 <= -0.4356456398963928) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_12 <= -0.19210085272789001) THEN 116 ELSE 117 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_294 <= 0.9726957678794861) THEN 119 ELSE 120 END END END ELSE 121 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_242 <= -0.6855175495147705) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_36 <= -0.11265112459659576) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_32 <= 0.22192466259002686) THEN 125 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_462 <= 0.9150672554969788) THEN 127 ELSE 128 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_363 <= -0.4552435278892517) THEN 130 ELSE 131 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_206 <= -0.4482504725456238) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_231 <= -0.10974434018135071) THEN 134 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_113 <= 0.6298011541366577) THEN 136 ELSE 137 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_143 <= 2.2188472747802734) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_427 <= 1.866933822631836) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_248 <= 1.5241799354553223) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_451 <= -0.9852577447891235) THEN 142 ELSE 143 END ELSE 144 END ELSE 145 END ELSE 146 END END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_499 <= 0.8079774975776672) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_344 <= -0.4639509618282318) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_420 <= -0.024418529123067856) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_156 <= -0.03836698830127716) THEN 151 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_23 <= -0.9203529357910156) THEN 153 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_24 <= -0.6012515425682068) THEN 155 ELSE 156 END END END ELSE 157 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_69 <= -0.8939907550811768) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_39 <= -0.7176685333251953) THEN 160 ELSE 161 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_472 <= -0.18753668665885925) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_68 <= -0.07807710021734238) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_65 <= -0.06701761484146118) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_265 <= 0.4811145067214966) THEN 166 ELSE 167 END ELSE 168 END ELSE 169 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_312 <= 0.6655892133712769) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_19 <= 0.27733778953552246) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_423 <= -0.26108065247535706) THEN 173 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_72 <= 0.408682644367218) THEN 175 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_495 <= -1.7443054914474487) THEN 177 ELSE 178 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_325 <= 0.2924569249153137) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_49 <= -0.21581421792507172) THEN 181 ELSE 182 END ELSE 183 END END ELSE 184 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_442 <= 0.0466746985912323) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_428 <= -0.43817079067230225) THEN 187 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_55 <= -1.0991307497024536) THEN 189 ELSE 190 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_199 <= -2.0269861221313477) THEN 192 ELSE 193 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_97 <= -0.4295085072517395) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_333 <= 1.4338159561157227) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_286 <= 0.2420867681503296) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_119 <= -0.5614527463912964) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_277 <= -0.4544832110404968) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_21 <= 0.33759593963623047) THEN 200 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_308 <= 0.4803990125656128) THEN 202 ELSE 203 END END ELSE 204 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_237 <= 0.009649806655943394) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_176 <= 0.6338242292404175) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_140 <= 1.0251991748809814) THEN 208 ELSE 209 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_342 <= -1.0515286922454834) THEN 211 ELSE 212 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_481 <= 0.8158879280090332) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_234 <= 1.5794763565063477) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_390 <= 1.1375607252120972) THEN 216 ELSE 217 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_491 <= 0.6359180212020874) THEN 219 ELSE 220 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_183 <= -0.26004141569137573) THEN 222 ELSE 223 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_426 <= 1.4079803228378296) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_411 <= -1.6670458316802979) THEN 226 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_415 <= -1.091745138168335) THEN 228 ELSE 229 END END ELSE 230 END END ELSE 231 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_152 <= 0.21785825490951538) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_52 <= -1.3143625259399414) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_341 <= 0.3542543649673462) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_444 <= -0.9507914781570435) THEN 236 ELSE 237 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_159 <= -2.0991878509521484) THEN 239 ELSE 240 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_124 <= -0.39664775133132935) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_422 <= 1.055755376815796) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_342 <= -0.31342658400535583) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_147 <= -0.20311298966407776) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_435 <= -0.39971548318862915) THEN 246 ELSE 247 END ELSE 248 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_442 <= -0.2936403751373291) THEN 250 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_45 <= -0.47185829281806946) THEN 252 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_28 <= 0.3086796998977661) THEN 254 ELSE 255 END END END END ELSE 256 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_47 <= -0.08166229724884033) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_182 <= -0.10290709137916565) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_291 <= 1.220719337463379) THEN 260 ELSE 261 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_229 <= -0.11795783042907715) THEN 263 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_366 <= 0.6525134444236755) THEN 265 ELSE 266 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_204 <= -1.7169520854949951) THEN 268 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_273 <= 0.5098941326141357) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_475 <= 0.8945767283439636) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_43 <= -1.2234947681427002) THEN 272 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_146 <= 1.6137325763702393) THEN 274 ELSE 275 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_482 <= 0.3099531829357147) THEN 277 ELSE 278 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_304 <= 1.1129587888717651) THEN 280 ELSE 281 END END END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_379 <= -0.18911612033843994) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_250 <= -2.1355364322662354) THEN 284 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_293 <= -1.1552116870880127) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= -0.10798945277929306) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_429 <= -1.1233584880828857) THEN 288 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_494 <= 0.11216792464256287) THEN 290 ELSE 291 END END ELSE 292 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_46 <= 1.1776373386383057) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_412 <= 1.5133635997772217) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_21 <= 1.969621181488037) THEN 296 ELSE 297 END ELSE 298 END ELSE 299 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_52 <= 0.6727840304374695) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_19 <= -0.31344372034072876) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_232 <= -1.2459893226623535) THEN 303 ELSE 304 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_315 <= 0.38203924894332886) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_295 <= -0.2817777395248413) THEN 307 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_432 <= -0.07471007108688354) THEN 309 ELSE 310 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_82 <= -0.23161546885967255) THEN 312 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_433 <= -0.20026478171348572) THEN 314 ELSE 315 END END END END ELSE 316 END END END END END AS node_id_2 
FROM "33421_53X5V4_ADS_SCA_2_OUT" "ADS_sca_2_OUT"), 
"DT_node_data_14" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0.0" AS "Proba_0.0", "Values"."LogProba_0.0" AS "LogProba_0.0", "Values"."Proba_1.0" AS "Proba_1.0", "Values"."LogProba_1.0" AS "LogProba_1.0", "Values"."Proba_2.0" AS "Proba_2.0", "Values"."LogProba_2.0" AS "LogProba_2.0", "Values"."Proba_3.0" AS "Proba_3.0", "Values"."LogProba_3.0" AS "LogProba_3.0", "Values"."Decision" AS "Decision", "Values"."DecisionProba" AS "DecisionProba" 
FROM (SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 6 AS depth, 5 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 8 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 10 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 10 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 8 AS count, 8 AS depth, 13 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 13 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 7 AS depth, 17 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 7 AS depth, 17 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 6 AS depth, 16 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 6 AS depth, 22 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 28 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 10 AS depth, 27 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 29 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 10 AS depth, 27 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 31 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 30 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 32 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 10 AS depth, 30 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 36 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 35 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 37 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 11 AS depth, 35 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 38 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 10 AS depth, 34 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 40 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 39 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 42 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 41 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 43 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 30 AS count, 11 AS depth, 41 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 46 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 45 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 47 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 9 AS depth, 45 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 49 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 9 AS depth, 48 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 52 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 11 AS depth, 51 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 53 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 11 AS depth, 51 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 56 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 12 AS depth, 55 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 57 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 7 AS count, 12 AS depth, 55 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 58 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 54 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 64 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 63 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 66 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 65 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 67 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 65 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 68 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 9 AS depth, 62 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 70 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 9 AS depth, 69 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 72 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 71 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 73 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 9 AS count, 10 AS depth, 71 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 75 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 8 AS depth, 74 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 77 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 9 AS depth, 76 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 78 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 76 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 82 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 9 AS count, 9 AS depth, 81 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 84 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 10 AS depth, 83 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 86 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 85 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 87 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 85 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 90 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 10 AS depth, 89 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 91 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 10 AS depth, 89 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 94 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 11 AS depth, 93 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 95 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 93 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 97 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 13 AS count, 11 AS depth, 96 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 98 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 96 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 100 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 8 AS depth, 99 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 104 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 103 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 105 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 103 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 106 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 10 AS depth, 102 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 107 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 10 AS count, 9 AS depth, 101 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 112 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 7 AS depth, 111 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 113 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 7 AS count, 7 AS depth, 111 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 116 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 8 AS depth, 115 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 117 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 115 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 119 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 8 AS depth, 118 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 120 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 8 AS depth, 118 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 121 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 6 AS count, 5 AS depth, 109 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 125 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 7 AS depth, 124 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 127 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 126 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 128 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 126 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 130 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 7 AS depth, 129 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 131 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 7 AS depth, 129 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 134 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 7 AS depth, 133 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 136 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 8 AS depth, 135 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 137 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 135 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 142 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 141 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 143 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 17 AS count, 10 AS depth, 141 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 144 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 140 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 145 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 139 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 146 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 7 AS depth, 138 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 151 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 6 AS depth, 150 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 153 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 7 AS depth, 152 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 155 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 154 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 156 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 8 AS depth, 154 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 157 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 11 AS count, 5 AS depth, 149 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 160 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 6 AS depth, 159 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 161 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 6 AS count, 6 AS depth, 159 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 166 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 165 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 167 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 165 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 168 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 8 AS depth, 164 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 169 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 7 AS depth, 163 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 173 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 9 AS depth, 172 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 175 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 10 AS depth, 174 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 177 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 176 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 178 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 176 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 181 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 10 AS depth, 180 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 182 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 180 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 183 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 9 AS depth, 179 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 184 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 7 AS depth, 170 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 187 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 5 AS depth, 186 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 189 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 6 AS depth, 188 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 190 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 6 AS depth, 188 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 192 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 5 AS depth, 191 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 193 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 9 AS count, 5 AS depth, 191 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 200 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 7 AS depth, 199 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 202 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 8 AS depth, 201 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 203 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 201 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 204 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 6 AS depth, 198 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 208 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 11 AS count, 8 AS depth, 207 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 209 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 207 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 211 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 8 AS depth, 210 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 212 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 210 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 216 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 6 AS count, 9 AS depth, 215 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 217 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 215 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 219 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 9 AS depth, 218 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 220 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 218 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 222 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 221 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 223 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 8 AS depth, 221 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 226 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 6 AS depth, 225 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 228 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 7 AS depth, 227 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 229 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 16 AS count, 7 AS depth, 227 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 230 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 5 AS depth, 224 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 231 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 3 AS depth, 195 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 236 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 6 AS depth, 235 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 237 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 6 AS depth, 235 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 239 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 6 AS depth, 238 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 240 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 6 AS depth, 238 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 246 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 245 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 247 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 9 AS depth, 245 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 248 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 6 AS count, 8 AS depth, 244 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 250 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 8 AS depth, 249 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 252 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 9 AS depth, 251 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 254 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 253 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 255 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 253 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 256 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 6 AS depth, 242 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 260 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 8 AS count, 8 AS depth, 259 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 261 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 259 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 263 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 8 AS depth, 262 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 265 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 9 AS depth, 264 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 266 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 9 AS depth, 264 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 268 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 7 AS depth, 267 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 272 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 271 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 274 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 17 AS count, 11 AS depth, 273 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 275 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 273 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 277 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 276 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 278 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 276 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 280 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 9 AS depth, 279 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 281 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 279 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 284 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 5 AS depth, 283 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 288 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 287 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 290 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 289 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 291 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 289 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 292 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 7 AS depth, 286 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 296 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 21 AS count, 9 AS depth, 295 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 297 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 9 AS depth, 295 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 298 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 294 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 299 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 7 AS depth, 293 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 303 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 7 AS depth, 302 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 304 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 7 AS count, 7 AS depth, 302 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 307 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 8 AS depth, 306 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 309 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 6 AS count, 9 AS depth, 308 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 310 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 9 AS depth, 308 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 312 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 8 AS depth, 311 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 314 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 9 AS depth, 313 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 315 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 313 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 316 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 7 AS count, 5 AS depth, 300 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL) "Values"), 
"DT_Output_14" AS 
(SELECT "DT_node_lookup_14"."KEY" AS "KEY", "DT_node_lookup_14".node_id_2 AS node_id_2, "DT_node_data_14".node_id AS node_id, "DT_node_data_14".feature AS feature, "DT_node_data_14".threshold AS threshold, "DT_node_data_14".count AS count, "DT_node_data_14".depth AS depth, "DT_node_data_14".parent_id AS parent_id, "DT_node_data_14"."Proba_0.0" AS "Proba_0.0", "DT_node_data_14"."LogProba_0.0" AS "LogProba_0.0", "DT_node_data_14"."Proba_1.0" AS "Proba_1.0", "DT_node_data_14"."LogProba_1.0" AS "LogProba_1.0", "DT_node_data_14"."Proba_2.0" AS "Proba_2.0", "DT_node_data_14"."LogProba_2.0" AS "LogProba_2.0", "DT_node_data_14"."Proba_3.0" AS "Proba_3.0", "DT_node_data_14"."LogProba_3.0" AS "LogProba_3.0", "DT_node_data_14"."Decision" AS "Decision", "DT_node_data_14"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup_14" LEFT OUTER JOIN "DT_node_data_14" ON "DT_node_lookup_14".node_id_2 = "DT_node_data_14".node_id), 
"RF_Tree_14" AS 
(SELECT "DT_Output_14"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output_14"."Proba_0.0" AS "Proba_0", "DT_Output_14"."LogProba_0.0" AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output_14"."Proba_1.0" AS "Proba_1", "DT_Output_14"."LogProba_1.0" AS "LogProba_1", CAST(NULL AS BINARY_DOUBLE) AS "Score_2", "DT_Output_14"."Proba_2.0" AS "Proba_2", "DT_Output_14"."LogProba_2.0" AS "LogProba_2", CAST(NULL AS BINARY_DOUBLE) AS "Score_3", "DT_Output_14"."Proba_3.0" AS "Proba_3", "DT_Output_14"."LogProba_3.0" AS "LogProba_3" 
FROM "DT_Output_14"), 
"DT_node_lookup_15" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_261 <= -0.29892611503601074) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_472 <= -1.0071406364440918) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_116 <= -0.09302089363336563) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_104 <= -0.6671372056007385) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_297 <= -0.687974750995636) THEN 5 ELSE 6 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_459 <= 0.5552428364753723) THEN 8 ELSE 9 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_29 <= 0.6665877103805542) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_443 <= 0.3720654845237732) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_413 <= 0.8681674599647522) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_442 <= -0.04538819193840027) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_22 <= -0.01228212658315897) THEN 15 ELSE 16 END ELSE 17 END ELSE 18 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_399 <= 0.8424179553985596) THEN 20 ELSE 21 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_319 <= 0.38514894247055054) THEN 23 ELSE 24 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_310 <= -0.2051771879196167) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_413 <= 1.698298692703247) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_339 <= -1.860914707183838) THEN 28 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_405 <= 0.9585919380187988) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_147 <= 1.785989761352539) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_138 <= -1.1501203775405884) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_93 <= -0.5894867181777954) THEN 33 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_220 <= 0.545332670211792) THEN 35 ELSE 36 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_354 <= 1.3666770458221436) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_169 <= 2.9486513137817383) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_207 <= -1.5261662006378174) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_155 <= 1.8791508674621582) THEN 41 ELSE 42 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_89 <= -0.9844551086425781) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_320 <= 0.42321133613586426) THEN 45 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_352 <= 0.08356848359107971) THEN 47 ELSE 48 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_457 <= -2.7945380210876465) THEN 50 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_478 <= -1.6246824264526367) THEN 52 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_456 <= -1.0651748180389404) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_154 <= -0.4035264551639557) THEN 55 ELSE 56 END ELSE 57 END END END END END ELSE 58 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_203 <= 0.6404280066490173) THEN 60 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_381 <= -0.5591868758201599) THEN 62 ELSE 63 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_233 <= -0.557551383972168) THEN 65 ELSE 66 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= 0.6238036751747131) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_109 <= -0.1430499404668808) THEN 69 ELSE 70 END ELSE 71 END END END ELSE 72 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_257 <= -1.3302240371704102) THEN 74 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_291 <= 0.22999261319637299) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_237 <= 0.7027158737182617) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_265 <= 1.4365248680114746) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_377 <= 1.573257327079773) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_418 <= -0.6474568843841553) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_380 <= 0.9018658399581909) THEN 81 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_302 <= 0.23575198650360107) THEN 83 ELSE 84 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_316 <= -0.8944764137268066) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_357 <= -0.005524933338165283) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_348 <= 0.22010153532028198) THEN 88 ELSE 89 END ELSE 90 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_461 <= -0.6835980415344238) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_397 <= 0.6657207608222961) THEN 93 ELSE 94 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_78 <= 1.4891624450683594) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_285 <= -0.8939860463142395) THEN 97 ELSE 98 END ELSE 99 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= 0.7986559271812439) THEN 101 ELSE 102 END END ELSE 103 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_412 <= 0.2644948959350586) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_185 <= 1.3943487405776978) THEN 106 ELSE 107 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_42 <= -1.4998726844787598) THEN 109 ELSE 110 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_431 <= 0.8759422898292542) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_445 <= -0.09545842558145523) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_412 <= -0.6282113194465637) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_364 <= -0.19612105190753937) THEN 115 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_14 <= -0.9749988317489624) THEN 117 ELSE 118 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_347 <= 0.46036094427108765) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_403 <= 0.5157302618026733) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_370 <= -0.17839699983596802) THEN 122 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_301 <= 0.25484001636505127) THEN 124 ELSE 125 END END ELSE 126 END ELSE 127 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_331 <= -1.673642635345459) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_111 <= 0.5374171733856201) THEN 130 ELSE 131 END ELSE 132 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_102 <= -0.5837896466255188) THEN 134 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_311 <= -0.242278054356575) THEN 136 ELSE 137 END END END END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_91 <= -1.6647237539291382) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_491 <= -1.1473325490951538) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_362 <= 0.6317915320396423) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_40 <= -0.3920038640499115) THEN 142 ELSE 143 END ELSE 144 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_434 <= -1.2081501483917236) THEN 146 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_290 <= -1.5977091789245605) THEN 148 ELSE 149 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_166 <= 1.8761013746261597) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_95 <= 0.8164839148521423) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_331 <= 0.41367071866989136) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_406 <= 0.5315017700195312) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_251 <= 0.17084461450576782) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_174 <= 1.311143398284912) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_485 <= 1.8083022832870483) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_29 <= 0.5593699216842651) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_498 <= 0.8690570592880249) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_411 <= -1.2678592205047607) THEN 160 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= -1.1395546197891235) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_159 <= 0.9758890867233276) THEN 163 ELSE 164 END ELSE 165 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_133 <= 0.026829615235328674) THEN 167 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_354 <= -0.36795058846473694) THEN 169 ELSE 170 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_217 <= -0.22126120328903198) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_492 <= 1.240532398223877) THEN 173 ELSE 174 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_304 <= -0.3997582197189331) THEN 176 ELSE 177 END END END ELSE 178 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_458 <= 0.13739967346191406) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_488 <= 0.5579651594161987) THEN 181 ELSE 182 END ELSE 183 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_97 <= 1.2000908851623535) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_82 <= 0.028918739408254623) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_322 <= -0.5279513597488403) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_17 <= 0.7303611040115356) THEN 188 ELSE 189 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_259 <= -0.8554641008377075) THEN 191 ELSE 192 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_476 <= 0.9013303518295288) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_370 <= -0.46957284212112427) THEN 195 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_58 <= 1.2162810564041138) THEN 197 ELSE 198 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_35 <= -0.281322717666626) THEN 200 ELSE 201 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_327 <= 1.0990357398986816) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_151 <= -0.848923921585083) THEN 204 ELSE 205 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_306 <= -0.10708048194646835) THEN 207 ELSE 208 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_124 <= -0.13460296392440796) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_308 <= -1.695585012435913) THEN 211 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_246 <= -0.7932743430137634) THEN 213 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_113 <= 0.24528703093528748) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_422 <= -0.6769689917564392) THEN 216 ELSE 217 END ELSE 218 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_433 <= -0.4166685938835144) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_289 <= -0.6348520517349243) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_313 <= -0.7847633361816406) THEN 222 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_249 <= 1.053977131843567) THEN 224 ELSE 225 END END ELSE 226 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_414 <= -0.7169262170791626) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_253 <= 0.3632391095161438) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_305 <= 0.9085403084754944) THEN 230 ELSE 231 END ELSE 232 END ELSE 233 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_401 <= 0.5390399098396301) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= 1.449824571609497) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_189 <= 1.8695359230041504) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_422 <= -0.060745969414711) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_136 <= 1.731041669845581) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_127 <= 1.0561869144439697) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_244 <= -0.8508833646774292) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_412 <= -0.7632042765617371) THEN 242 ELSE 243 END ELSE 244 END ELSE 245 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_281 <= 0.19940486550331116) THEN 247 ELSE 248 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_169 <= -0.05277523770928383) THEN 250 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_181 <= -0.7395049333572388) THEN 252 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_148 <= -1.120224952697754) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= 0.012786243110895157) THEN 255 ELSE 256 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_481 <= -0.6318099498748779) THEN 258 ELSE 259 END END END END END ELSE 260 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_367 <= -0.6235833168029785) THEN 262 ELSE 263 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_301 <= 0.530090868473053) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_282 <= -0.11415514349937439) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_240 <= -0.4596869945526123) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_365 <= 0.5651029348373413) THEN 268 ELSE 269 END ELSE 270 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= -0.3193390369415283) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_231 <= -0.7387133240699768) THEN 273 ELSE 274 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_239 <= -0.3330126404762268) THEN 276 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_146 <= 1.4565696716308594) THEN 278 ELSE 279 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_113 <= 1.2374039888381958) THEN 281 ELSE 282 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_26 <= 0.18018269538879395) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_444 <= -0.6987319588661194) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_71 <= 0.3128642737865448) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_87 <= 1.2433346509933472) THEN 287 ELSE 288 END ELSE 289 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_357 <= 0.07052323967218399) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_426 <= 0.5002442598342896) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_472 <= 0.18553221225738525) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_367 <= 0.4901048541069031) THEN 294 ELSE 295 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_271 <= 0.21862363815307617) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_84 <= 0.30937790870666504) THEN 298 ELSE 299 END ELSE 300 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_77 <= -0.9108203053474426) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_97 <= -0.6021236181259155) THEN 303 ELSE 304 END ELSE 305 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_291 <= 0.8325260877609253) THEN 307 ELSE 308 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_205 <= -0.06902500241994858) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= -0.5096770524978638) THEN 311 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_277 <= -0.46904754638671875) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_44 <= 0.6577455401420593) THEN 314 ELSE 315 END ELSE 316 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_400 <= 0.7081674337387085) THEN 318 ELSE 319 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_244 <= -1.0637885332107544) THEN 321 ELSE 322 END END END END AS node_id_2 
FROM "33421_53X5V4_ADS_SCA_2_OUT" "ADS_sca_2_OUT"), 
"DT_node_data_15" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0.0" AS "Proba_0.0", "Values"."LogProba_0.0" AS "LogProba_0.0", "Values"."Proba_1.0" AS "Proba_1.0", "Values"."LogProba_1.0" AS "LogProba_1.0", "Values"."Proba_2.0" AS "Proba_2.0", "Values"."LogProba_2.0" AS "LogProba_2.0", "Values"."Proba_3.0" AS "Proba_3.0", "Values"."LogProba_3.0" AS "LogProba_3.0", "Values"."Decision" AS "Decision", "Values"."DecisionProba" AS "DecisionProba" 
FROM (SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 5 AS depth, 4 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 5 AS depth, 4 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 13 AS count, 5 AS depth, 7 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 5 AS depth, 7 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 14 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 14 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 7 AS depth, 13 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 6 AS depth, 12 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 6 AS depth, 19 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 6 AS depth, 19 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 5 AS depth, 22 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 5 AS depth, 22 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 28 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 5 AS depth, 27 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 33 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 9 AS depth, 32 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 35 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 10 AS depth, 34 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 36 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 10 AS depth, 34 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 41 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 12 AS depth, 40 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 42 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 12 AS depth, 40 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 45 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 13 AS depth, 44 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 47 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 14 AS depth, 46 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 48 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 14 AS depth, 46 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 50 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 13 AS depth, 49 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 52 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 14 AS depth, 51 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 55 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 16 AS depth, 54 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 56 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 16 AS depth, 54 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 57 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 36 AS count, 15 AS depth, 53 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 58 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 38 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 60 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 10 AS depth, 59 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 62 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 61 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 63 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 61 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 65 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 64 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 66 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 8 AS depth, 64 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 69 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 8 AS depth, 68 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 70 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 8 AS depth, 68 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 71 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 7 AS depth, 67 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 72 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 4 AS depth, 26 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 74 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 4 AS depth, 73 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 81 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 10 AS depth, 80 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 83 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 82 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 84 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 82 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 88 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 12 AS depth, 87 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 89 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 12 AS depth, 87 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 90 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 11 AS depth, 86 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 93 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 12 AS depth, 92 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 94 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 12 AS depth, 92 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 97 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 13 AS depth, 96 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 98 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 20 AS count, 13 AS depth, 96 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 99 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 12 AS depth, 95 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 101 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 9 AS depth, 100 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 102 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 100 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 103 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 7 AS depth, 77 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 106 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 8 AS depth, 105 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 107 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 105 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 109 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 108 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 110 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 8 AS depth, 108 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 115 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 9 AS depth, 114 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 117 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 116 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 118 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 10 AS depth, 116 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 122 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 11 AS depth, 121 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 124 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 12 AS depth, 123 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 125 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 12 AS depth, 123 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 126 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 10 AS depth, 120 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 127 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 9 AS depth, 119 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 130 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 9 AS depth, 129 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 131 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 129 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 132 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 8 AS count, 8 AS depth, 128 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 134 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 7 AS depth, 133 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 136 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 135 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 137 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 7 AS count, 8 AS depth, 135 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 142 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 5 AS depth, 141 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 143 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 5 AS depth, 141 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 144 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 4 AS depth, 140 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 146 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 4 AS depth, 145 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 148 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 5 AS depth, 147 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 149 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 12 AS count, 5 AS depth, 147 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 160 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 12 AS depth, 159 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 163 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 14 AS depth, 162 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 164 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 14 AS depth, 162 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 165 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 21 AS count, 13 AS depth, 161 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 167 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 12 AS depth, 166 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 169 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 13 AS depth, 168 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 170 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 13 AS depth, 168 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 173 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 12 AS depth, 172 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 174 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 12 AS depth, 172 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 176 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 12 AS depth, 175 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 177 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 12 AS depth, 175 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 178 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 9 AS depth, 156 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 181 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 10 AS depth, 180 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 182 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 180 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 183 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 9 AS depth, 179 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 188 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 11 AS depth, 187 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 189 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 187 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 191 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 11 AS depth, 190 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 192 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 8 AS count, 11 AS depth, 190 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 195 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 11 AS depth, 194 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 197 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 8 AS count, 12 AS depth, 196 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 198 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 12 AS depth, 196 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 200 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 199 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 201 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 11 AS depth, 199 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 204 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 203 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 205 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 10 AS depth, 203 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 207 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 206 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 208 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 10 AS depth, 206 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 211 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 8 AS depth, 210 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 213 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 9 AS depth, 212 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 216 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 215 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 217 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 215 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 218 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 10 AS depth, 214 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 222 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 10 AS depth, 221 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 224 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 223 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 225 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 223 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 226 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 9 AS depth, 220 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 230 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 229 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 231 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 229 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 232 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 228 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 233 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 15 AS count, 9 AS depth, 227 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 242 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 13 AS depth, 241 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 243 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 13 AS depth, 241 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 244 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 20 AS count, 12 AS depth, 240 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 245 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 239 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 247 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 246 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 248 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 246 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 250 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 10 AS depth, 249 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 252 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 11 AS depth, 251 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 255 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 13 AS depth, 254 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 256 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 13 AS depth, 254 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 258 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 13 AS depth, 257 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 259 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 6 AS count, 13 AS depth, 257 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 260 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 8 AS depth, 236 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 262 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 261 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 263 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 8 AS depth, 261 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 268 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 10 AS depth, 267 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 269 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 267 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 270 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 9 AS depth, 266 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 273 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 272 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 274 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 10 AS depth, 272 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 276 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 275 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 278 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 9 AS count, 11 AS depth, 277 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 279 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 277 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 281 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 7 AS count, 8 AS depth, 280 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 282 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 280 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 287 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 8 AS depth, 286 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 288 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 286 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 289 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 7 AS depth, 285 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 294 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 10 AS depth, 293 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 295 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 10 AS depth, 293 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 298 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 11 AS depth, 297 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 299 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 11 AS depth, 297 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 300 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 10 AS depth, 296 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 303 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 302 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 304 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 10 AS depth, 302 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 305 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 9 AS depth, 301 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 307 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 8 AS count, 8 AS depth, 306 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 308 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 8 AS depth, 306 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 311 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 7 AS depth, 310 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 314 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 9 AS depth, 313 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 315 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 9 AS depth, 313 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 316 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 6 AS count, 8 AS depth, 312 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 2.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 318 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 10 AS count, 7 AS depth, 317 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 319 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 7 AS depth, 317 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 321 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 4 AS depth, 320 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 322 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 9 AS count, 4 AS depth, 320 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_DOUBLE_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_DOUBLE_INFINITY AS "LogProba_3.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL) "Values"), 
"DT_Output_15" AS 
(SELECT "DT_node_lookup_15"."KEY" AS "KEY", "DT_node_lookup_15".node_id_2 AS node_id_2, "DT_node_data_15".node_id AS node_id, "DT_node_data_15".feature AS feature, "DT_node_data_15".threshold AS threshold, "DT_node_data_15".count AS count, "DT_node_data_15".depth AS depth, "DT_node_data_15".parent_id AS parent_id, "DT_node_data_15"."Proba_0.0" AS "Proba_0.0", "DT_node_data_15"."LogProba_0.0" AS "LogProba_0.0", "DT_node_data_15"."Proba_1.0" AS "Proba_1.0", "DT_node_data_15"."LogProba_1.0" AS "LogProba_1.0", "DT_node_data_15"."Proba_2.0" AS "Proba_2.0", "DT_node_data_15"."LogProba_2.0" AS "LogProba_2.0", "DT_node_data_15"."Proba_3.0" AS "Proba_3.0", "DT_node_data_15"."LogProba_3.0" AS "LogProba_3.0", "DT_node_data_15"."Decision" AS "Decision", "DT_node_data_15"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup_15" LEFT OUTER JOIN "DT_node_data_15" ON "DT_node_lookup_15".node_id_2 = "DT_node_data_15".node_id), 
"RF_Tree_15" AS 
(SELECT "DT_Output_15"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output_15"."Proba_0.0" AS "Proba_0", "DT_Output_15"."LogProba_0.0" AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output_15"."Proba_1.0" AS "Proba_1", "DT_Output_15"."LogProba_1.0" AS "LogProba_1", CAST(NULL AS BINARY_DOUBLE) AS "Score_2", "DT_Output_15"."Proba_2.0" AS "Proba_2", "DT_Output_15"."LogProba_2.0" AS "LogProba_2", CAST(NULL AS BINARY_DOUBLE) AS "Score_3", "DT_Output_15"."Proba_3.0" AS "Proba_3", "DT_Output_15"."LogProba_3.0" AS "LogProba_3" 
FROM "DT_Output_15")
 SELECT "RF_AVG__B1"."KEY", "RF_AVG__B1"."Score_0", "RF_AVG__B1"."Proba_0", "RF_AVG__B1"."LogProba_0", "RF_AVG__B1"."Score_1", "RF_AVG__B1"."Proba_1", "RF_AVG__B1"."LogProba_1", "RF_AVG__B1"."Score_2", "RF_AVG__B1"."Proba_2", "RF_AVG__B1"."LogProba_2", "RF_AVG__B1"."Score_3", "RF_AVG__B1"."Proba_3", "RF_AVG__B1"."LogProba_3" 
FROM (SELECT "RF_AVG__esu_1"."KEY" AS "KEY", "RF_AVG__esu_1"."Score_0" AS "Score_0", "RF_AVG__esu_1"."Proba_0" AS "Proba_0", "RF_AVG__esu_1"."LogProba_0" AS "LogProba_0", "RF_AVG__esu_1"."Score_1" AS "Score_1", "RF_AVG__esu_1"."Proba_1" AS "Proba_1", "RF_AVG__esu_1"."LogProba_1" AS "LogProba_1", "RF_AVG__esu_1"."Score_2" AS "Score_2", "RF_AVG__esu_1"."Proba_2" AS "Proba_2", "RF_AVG__esu_1"."LogProba_2" AS "LogProba_2", "RF_AVG__esu_1"."Score_3" AS "Score_3", "RF_AVG__esu_1"."Proba_3" AS "Proba_3", "RF_AVG__esu_1"."LogProba_3" AS "LogProba_3" 
FROM (SELECT "RF_Tree_10"."KEY" AS "KEY", "RF_Tree_10"."Score_0" AS "Score_0", "RF_Tree_10"."Proba_0" AS "Proba_0", "RF_Tree_10"."LogProba_0" AS "LogProba_0", "RF_Tree_10"."Score_1" AS "Score_1", "RF_Tree_10"."Proba_1" AS "Proba_1", "RF_Tree_10"."LogProba_1" AS "LogProba_1", "RF_Tree_10"."Score_2" AS "Score_2", "RF_Tree_10"."Proba_2" AS "Proba_2", "RF_Tree_10"."LogProba_2" AS "LogProba_2", "RF_Tree_10"."Score_3" AS "Score_3", "RF_Tree_10"."Proba_3" AS "Proba_3", "RF_Tree_10"."LogProba_3" AS "LogProba_3" 
FROM "RF_Tree_10" UNION ALL SELECT "RF_Tree_11"."KEY" AS "KEY", "RF_Tree_11"."Score_0" AS "Score_0", "RF_Tree_11"."Proba_0" AS "Proba_0", "RF_Tree_11"."LogProba_0" AS "LogProba_0", "RF_Tree_11"."Score_1" AS "Score_1", "RF_Tree_11"."Proba_1" AS "Proba_1", "RF_Tree_11"."LogProba_1" AS "LogProba_1", "RF_Tree_11"."Score_2" AS "Score_2", "RF_Tree_11"."Proba_2" AS "Proba_2", "RF_Tree_11"."LogProba_2" AS "LogProba_2", "RF_Tree_11"."Score_3" AS "Score_3", "RF_Tree_11"."Proba_3" AS "Proba_3", "RF_Tree_11"."LogProba_3" AS "LogProba_3" 
FROM "RF_Tree_11" UNION ALL SELECT "RF_Tree_12"."KEY" AS "KEY", "RF_Tree_12"."Score_0" AS "Score_0", "RF_Tree_12"."Proba_0" AS "Proba_0", "RF_Tree_12"."LogProba_0" AS "LogProba_0", "RF_Tree_12"."Score_1" AS "Score_1", "RF_Tree_12"."Proba_1" AS "Proba_1", "RF_Tree_12"."LogProba_1" AS "LogProba_1", "RF_Tree_12"."Score_2" AS "Score_2", "RF_Tree_12"."Proba_2" AS "Proba_2", "RF_Tree_12"."LogProba_2" AS "LogProba_2", "RF_Tree_12"."Score_3" AS "Score_3", "RF_Tree_12"."Proba_3" AS "Proba_3", "RF_Tree_12"."LogProba_3" AS "LogProba_3" 
FROM "RF_Tree_12" UNION ALL SELECT "RF_Tree_13"."KEY" AS "KEY", "RF_Tree_13"."Score_0" AS "Score_0", "RF_Tree_13"."Proba_0" AS "Proba_0", "RF_Tree_13"."LogProba_0" AS "LogProba_0", "RF_Tree_13"."Score_1" AS "Score_1", "RF_Tree_13"."Proba_1" AS "Proba_1", "RF_Tree_13"."LogProba_1" AS "LogProba_1", "RF_Tree_13"."Score_2" AS "Score_2", "RF_Tree_13"."Proba_2" AS "Proba_2", "RF_Tree_13"."LogProba_2" AS "LogProba_2", "RF_Tree_13"."Score_3" AS "Score_3", "RF_Tree_13"."Proba_3" AS "Proba_3", "RF_Tree_13"."LogProba_3" AS "LogProba_3" 
FROM "RF_Tree_13" UNION ALL SELECT "RF_Tree_14"."KEY" AS "KEY", "RF_Tree_14"."Score_0" AS "Score_0", "RF_Tree_14"."Proba_0" AS "Proba_0", "RF_Tree_14"."LogProba_0" AS "LogProba_0", "RF_Tree_14"."Score_1" AS "Score_1", "RF_Tree_14"."Proba_1" AS "Proba_1", "RF_Tree_14"."LogProba_1" AS "LogProba_1", "RF_Tree_14"."Score_2" AS "Score_2", "RF_Tree_14"."Proba_2" AS "Proba_2", "RF_Tree_14"."LogProba_2" AS "LogProba_2", "RF_Tree_14"."Score_3" AS "Score_3", "RF_Tree_14"."Proba_3" AS "Proba_3", "RF_Tree_14"."LogProba_3" AS "LogProba_3" 
FROM "RF_Tree_14" UNION ALL SELECT "RF_Tree_15"."KEY" AS "KEY", "RF_Tree_15"."Score_0" AS "Score_0", "RF_Tree_15"."Proba_0" AS "Proba_0", "RF_Tree_15"."LogProba_0" AS "LogProba_0", "RF_Tree_15"."Score_1" AS "Score_1", "RF_Tree_15"."Proba_1" AS "Proba_1", "RF_Tree_15"."LogProba_1" AS "LogProba_1", "RF_Tree_15"."Score_2" AS "Score_2", "RF_Tree_15"."Proba_2" AS "Proba_2", "RF_Tree_15"."LogProba_2" AS "LogProba_2", "RF_Tree_15"."Score_3" AS "Score_3", "RF_Tree_15"."Proba_3" AS "Proba_3", "RF_Tree_15"."LogProba_3" AS "LogProba_3" 
FROM "RF_Tree_15") "RF_AVG__esu_1") "RF_AVG__B1") "U"
-- Code For temporary table 33432_9RS5OX_RF_AVG__UNION part 1/2. Create 


CREATE GLOBAL TEMPORARY TABLE "33432_9RS5OX_RF_AVG__UNION" (
	"KEY" NUMBER(19), 
	"Score_0" BINARY_DOUBLE, 
	"Proba_0" BINARY_DOUBLE, 
	"LogProba_0" BINARY_DOUBLE, 
	"Score_1" BINARY_DOUBLE, 
	"Proba_1" BINARY_DOUBLE, 
	"LogProba_1" BINARY_DOUBLE, 
	"Score_2" BINARY_DOUBLE, 
	"Proba_2" BINARY_DOUBLE, 
	"LogProba_2" BINARY_DOUBLE, 
	"Score_3" BINARY_DOUBLE, 
	"Proba_3" BINARY_DOUBLE, 
	"LogProba_3" BINARY_DOUBLE
)

 ON COMMIT PRESERVE ROWS
-- Code For temporary table 33432_9RS5OX_RF_AVG__UNION part 2/2. Populate

INSERT INTO "33432_9RS5OX_RF_AVG__UNION" ("KEY", "Score_0", "Proba_0", "LogProba_0", "Score_1", "Proba_1", "LogProba_1", "Score_2", "Proba_2", "LogProba_2", "Score_3", "Proba_3", "LogProba_3") SELECT "U"."KEY", "U"."Score_0", "U"."Proba_0", "U"."LogProba_0", "U"."Score_1", "U"."Proba_1", "U"."LogProba_1", "U"."Score_2", "U"."Proba_2", "U"."LogProba_2", "U"."Score_3", "U"."Proba_3", "U"."LogProba_3" 
FROM (SELECT "RF_AVG__Union"."KEY", "RF_AVG__Union"."Score_0", "RF_AVG__Union"."Proba_0", "RF_AVG__Union"."LogProba_0", "RF_AVG__Union"."Score_1", "RF_AVG__Union"."Proba_1", "RF_AVG__Union"."LogProba_1", "RF_AVG__Union"."Score_2", "RF_AVG__Union"."Proba_2", "RF_AVG__Union"."LogProba_2", "RF_AVG__Union"."Score_3", "RF_AVG__Union"."Proba_3", "RF_AVG__Union"."LogProba_3" 
FROM (SELECT "RF_AVG__EnsembleUnion"."KEY" AS "KEY", "RF_AVG__EnsembleUnion"."Score_0" AS "Score_0", "RF_AVG__EnsembleUnion"."Proba_0" AS "Proba_0", "RF_AVG__EnsembleUnion"."LogProba_0" AS "LogProba_0", "RF_AVG__EnsembleUnion"."Score_1" AS "Score_1", "RF_AVG__EnsembleUnion"."Proba_1" AS "Proba_1", "RF_AVG__EnsembleUnion"."LogProba_1" AS "LogProba_1", "RF_AVG__EnsembleUnion"."Score_2" AS "Score_2", "RF_AVG__EnsembleUnion"."Proba_2" AS "Proba_2", "RF_AVG__EnsembleUnion"."LogProba_2" AS "LogProba_2", "RF_AVG__EnsembleUnion"."Score_3" AS "Score_3", "RF_AVG__EnsembleUnion"."Proba_3" AS "Proba_3", "RF_AVG__EnsembleUnion"."LogProba_3" AS "LogProba_3" 
FROM (SELECT "RF_AVG__B0"."KEY" AS "KEY", "RF_AVG__B0"."Score_0" AS "Score_0", "RF_AVG__B0"."Proba_0" AS "Proba_0", "RF_AVG__B0"."LogProba_0" AS "LogProba_0", "RF_AVG__B0"."Score_1" AS "Score_1", "RF_AVG__B0"."Proba_1" AS "Proba_1", "RF_AVG__B0"."LogProba_1" AS "LogProba_1", "RF_AVG__B0"."Score_2" AS "Score_2", "RF_AVG__B0"."Proba_2" AS "Proba_2", "RF_AVG__B0"."LogProba_2" AS "LogProba_2", "RF_AVG__B0"."Score_3" AS "Score_3", "RF_AVG__B0"."Proba_3" AS "Proba_3", "RF_AVG__B0"."LogProba_3" AS "LogProba_3" 
FROM "29233432_XXK9R0_RF_AVG__B0" "RF_AVG__B0" UNION ALL SELECT "RF_AVG__B1"."KEY" AS "KEY", "RF_AVG__B1"."Score_0" AS "Score_0", "RF_AVG__B1"."Proba_0" AS "Proba_0", "RF_AVG__B1"."LogProba_0" AS "LogProba_0", "RF_AVG__B1"."Score_1" AS "Score_1", "RF_AVG__B1"."Proba_1" AS "Proba_1", "RF_AVG__B1"."LogProba_1" AS "LogProba_1", "RF_AVG__B1"."Score_2" AS "Score_2", "RF_AVG__B1"."Proba_2" AS "Proba_2", "RF_AVG__B1"."LogProba_2" AS "LogProba_2", "RF_AVG__B1"."Score_3" AS "Score_3", "RF_AVG__B1"."Proba_3" AS "Proba_3", "RF_AVG__B1"."LogProba_3" AS "LogProba_3" 
FROM "29233432_E832BN_RF_AVG__B1" "RF_AVG__B1") "RF_AVG__EnsembleUnion") "RF_AVG__Union") "U"

-- Model deployment code

WITH "RF_AVG__avg" AS 
(SELECT "T"."KEY" AS "KEY", "T"."Score_0" AS "Score_0", "T"."Proba_0" AS "Proba_0", "T"."LogProba_0" AS "LogProba_0", "T"."Score_1" AS "Score_1", "T"."Proba_1" AS "Proba_1", "T"."LogProba_1" AS "LogProba_1", "T"."Score_2" AS "Score_2", "T"."Proba_2" AS "Proba_2", "T"."LogProba_2" AS "LogProba_2", "T"."Score_3" AS "Score_3", "T"."Proba_3" AS "Proba_3", "T"."LogProba_3" AS "LogProba_3" 
FROM (SELECT "RF_AVG__Union"."KEY" AS "KEY", avg(CAST("RF_AVG__Union"."Score_0" AS BINARY_DOUBLE)) AS "Score_0", avg(CAST("RF_AVG__Union"."Proba_0" AS BINARY_DOUBLE)) AS "Proba_0", CAST(NULL AS BINARY_DOUBLE) AS "LogProba_0", avg(CAST("RF_AVG__Union"."Score_1" AS BINARY_DOUBLE)) AS "Score_1", avg(CAST("RF_AVG__Union"."Proba_1" AS BINARY_DOUBLE)) AS "Proba_1", CAST(NULL AS BINARY_DOUBLE) AS "LogProba_1", avg(CAST("RF_AVG__Union"."Score_2" AS BINARY_DOUBLE)) AS "Score_2", avg(CAST("RF_AVG__Union"."Proba_2" AS BINARY_DOUBLE)) AS "Proba_2", CAST(NULL AS BINARY_DOUBLE) AS "LogProba_2", avg(CAST("RF_AVG__Union"."Score_3" AS BINARY_DOUBLE)) AS "Score_3", avg(CAST("RF_AVG__Union"."Proba_3" AS BINARY_DOUBLE)) AS "Proba_3", CAST(NULL AS BINARY_DOUBLE) AS "LogProba_3" 
FROM "33432_9RS5OX_RF_AVG__UNION" "RF_AVG__Union" GROUP BY "RF_AVG__Union"."KEY") "T"), 
orig_cte AS 
(SELECT "RF_AVG__avg"."KEY" AS "KEY", "RF_AVG__avg"."Score_0" AS "Score_0", "RF_AVG__avg"."Score_1" AS "Score_1", "RF_AVG__avg"."Score_2" AS "Score_2", "RF_AVG__avg"."Score_3" AS "Score_3", "RF_AVG__avg"."Proba_0" AS "Proba_0", "RF_AVG__avg"."Proba_1" AS "Proba_1", "RF_AVG__avg"."Proba_2" AS "Proba_2", "RF_AVG__avg"."Proba_3" AS "Proba_3", "RF_AVG__avg"."LogProba_0" AS "LogProba_0", "RF_AVG__avg"."LogProba_1" AS "LogProba_1", "RF_AVG__avg"."LogProba_2" AS "LogProba_2", "RF_AVG__avg"."LogProba_3" AS "LogProba_3", CAST(NULL AS NUMBER(19)) AS "Decision", CAST(NULL AS BINARY_DOUBLE) AS "DecisionProba" 
FROM "RF_AVG__avg"), 
score_class_union AS 
(SELECT scu."KEY_u" AS "KEY_u", scu.class AS class, scu."LogProba" AS "LogProba", scu."Proba" AS "Proba", scu."Score" AS "Score" 
FROM (SELECT orig_cte."KEY" AS "KEY_u", 0 AS class, orig_cte."LogProba_0" AS "LogProba", orig_cte."Proba_0" AS "Proba", orig_cte."Score_0" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 1 AS class, orig_cte."LogProba_1" AS "LogProba", orig_cte."Proba_1" AS "Proba", orig_cte."Score_1" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 2 AS class, orig_cte."LogProba_2" AS "LogProba", orig_cte."Proba_2" AS "Proba", orig_cte."Score_2" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 3 AS class, orig_cte."LogProba_3" AS "LogProba", orig_cte."Proba_3" AS "Proba", orig_cte."Score_3" AS "Score" 
FROM orig_cte) scu), 
score_max AS 
(SELECT orig_cte."KEY" AS "KEY", orig_cte."Score_0" AS "Score_0", orig_cte."Score_1" AS "Score_1", orig_cte."Score_2" AS "Score_2", orig_cte."Score_3" AS "Score_3", orig_cte."Proba_0" AS "Proba_0", orig_cte."Proba_1" AS "Proba_1", orig_cte."Proba_2" AS "Proba_2", orig_cte."Proba_3" AS "Proba_3", orig_cte."LogProba_0" AS "LogProba_0", orig_cte."LogProba_1" AS "LogProba_1", orig_cte."LogProba_2" AS "LogProba_2", orig_cte."LogProba_3" AS "LogProba_3", orig_cte."Decision" AS "Decision", orig_cte."DecisionProba" AS "DecisionProba", max_select."KEY_m" AS "KEY_m", max_select."max_Proba" AS "max_Proba" 
FROM orig_cte LEFT OUTER JOIN (SELECT score_class_union."KEY_u" AS "KEY_m", max(score_class_union."Proba") AS "max_Proba" 
FROM score_class_union GROUP BY score_class_union."KEY_u") max_select ON orig_cte."KEY" = max_select."KEY_m"), 
union_with_max AS 
(SELECT score_class_union."KEY_u" AS "KEY_u", score_class_union.class AS class, score_class_union."LogProba" AS "LogProba", score_class_union."Proba" AS "Proba", score_class_union."Score" AS "Score", score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Score_2" AS "Score_2", score_max."Score_3" AS "Score_3", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."Proba_2" AS "Proba_2", score_max."Proba_3" AS "Proba_3", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."LogProba_2" AS "LogProba_2", score_max."LogProba_3" AS "LogProba_3", score_max."Decision" AS "Decision", score_max."DecisionProba" AS "DecisionProba", score_max."KEY_m" AS "KEY_m", score_max."max_Proba" AS "max_Proba" 
FROM score_class_union LEFT OUTER JOIN score_max ON score_class_union."KEY_u" = score_max."KEY"), 
arg_max_cte AS 
(SELECT score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Score_2" AS "Score_2", score_max."Score_3" AS "Score_3", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."Proba_2" AS "Proba_2", score_max."Proba_3" AS "Proba_3", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."LogProba_2" AS "LogProba_2", score_max."LogProba_3" AS "LogProba_3", score_max."Decision" AS "Decision", score_max."DecisionProba" AS "DecisionProba", score_max."KEY_m" AS "KEY_m", score_max."max_Proba" AS "max_Proba", "arg_max_t_Proba"."KEY_Proba" AS "KEY_Proba", "arg_max_t_Proba"."arg_max_Proba" AS "arg_max_Proba" 
FROM score_max LEFT OUTER JOIN (SELECT union_with_max."KEY" AS "KEY_Proba", min(union_with_max.class) AS "arg_max_Proba" 
FROM union_with_max 
WHERE union_with_max."max_Proba" <= union_with_max."Proba" GROUP BY union_with_max."KEY") "arg_max_t_Proba" ON score_max."KEY" = "arg_max_t_Proba"."KEY_Proba")
 SELECT arg_max_cte."KEY" AS "KEY", arg_max_cte."Score_0" AS "Score_0", arg_max_cte."Score_1" AS "Score_1", arg_max_cte."Score_2" AS "Score_2", arg_max_cte."Score_3" AS "Score_3", arg_max_cte."Proba_0" AS "Proba_0", arg_max_cte."Proba_1" AS "Proba_1", arg_max_cte."Proba_2" AS "Proba_2", arg_max_cte."Proba_3" AS "Proba_3", CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN ln(arg_max_cte."Proba_0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_0", CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN ln(arg_max_cte."Proba_1") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_1", CASE WHEN (arg_max_cte."Proba_2" IS NULL OR arg_max_cte."Proba_2" > 0.0) THEN ln(arg_max_cte."Proba_2") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_2", CASE WHEN (arg_max_cte."Proba_3" IS NULL OR arg_max_cte."Proba_3" > 0.0) THEN ln(arg_max_cte."Proba_3") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_3", arg_max_cte."arg_max_Proba" AS "Decision", arg_max_cte."max_Proba" AS "DecisionProba" 
FROM arg_max_cte