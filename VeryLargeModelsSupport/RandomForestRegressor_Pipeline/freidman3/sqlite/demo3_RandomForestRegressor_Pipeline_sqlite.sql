-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2018

-- This SQL code can contain one or more statements, to be executed in the order they appear in this file.


-- Code For temporary table TMP_20180329232413_NE54O4_ADS_imp_1_OUT part 1/2. Create 


CREATE TEMPORARY TABLE "TMP_20180329232413_NE54O4_ADS_imp_1_OUT" (
	"KEY" BIGINT, 
	imputer_output_2 FLOAT, 
	imputer_output_3 FLOAT, 
	imputer_output_4 FLOAT, 
	imputer_output_5 FLOAT
)


-- Code For temporary table TMP_20180329232413_NE54O4_ADS_imp_1_OUT part 2/2. Populate

INSERT INTO "TMP_20180329232413_NE54O4_ADS_imp_1_OUT" ("KEY", imputer_output_2, imputer_output_3, imputer_output_4, imputer_output_5) SELECT "ADS_imp_1_OUT"."KEY", "ADS_imp_1_OUT".imputer_output_2, "ADS_imp_1_OUT".imputer_output_3, "ADS_imp_1_OUT".imputer_output_4, "ADS_imp_1_OUT".imputer_output_5 
FROM (SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" IS NULL) THEN 43.79128122207401 ELSE "ADS"."Feature_0" END AS imputer_output_2, CASE WHEN ("ADS"."Feature_1" IS NULL) THEN 945.9672833084396 ELSE "ADS"."Feature_1" END AS imputer_output_3, CASE WHEN ("ADS"."Feature_2" IS NULL) THEN 0.5310009099975209 ELSE "ADS"."Feature_2" END AS imputer_output_4, CASE WHEN ("ADS"."Feature_3" IS NULL) THEN 6.139967152050499 ELSE "ADS"."Feature_3" END AS imputer_output_5 
FROM freidman3 AS "ADS") AS "ADS_imp_1_OUT"
-- Code For temporary table TMP_20180329232413_8K8D0N_ADS_sca_2_OUT part 1/2. Create 


CREATE TEMPORARY TABLE "TMP_20180329232413_8K8D0N_ADS_sca_2_OUT" (
	"KEY" BIGINT, 
	scaler_output_2 FLOAT, 
	scaler_output_3 FLOAT, 
	scaler_output_4 FLOAT, 
	scaler_output_5 FLOAT
)


-- Code For temporary table TMP_20180329232413_8K8D0N_ADS_sca_2_OUT part 2/2. Populate

INSERT INTO "TMP_20180329232413_8K8D0N_ADS_sca_2_OUT" ("KEY", scaler_output_2, scaler_output_3, scaler_output_4, scaler_output_5) SELECT "ADS_sca_2_OUT"."KEY", "ADS_sca_2_OUT".scaler_output_2, "ADS_sca_2_OUT".scaler_output_3, "ADS_sca_2_OUT".scaler_output_4, "ADS_sca_2_OUT".scaler_output_5 
FROM (SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", (CAST("ADS_imp_1_OUT".imputer_output_2 AS FLOAT) - 43.79128122207401) / 26.03562357622511 AS scaler_output_2, (CAST("ADS_imp_1_OUT".imputer_output_3 AS FLOAT) - 945.9672833084396) / 461.4552766146446 AS scaler_output_3, (CAST("ADS_imp_1_OUT".imputer_output_4 AS FLOAT) - 0.5310009099975209) / 0.2901863282144786 AS scaler_output_4, (CAST("ADS_imp_1_OUT".imputer_output_5 AS FLOAT) - 6.139967152050499) / 3.072917242564058 AS scaler_output_5 
FROM "TMP_20180329232413_NE54O4_ADS_imp_1_OUT" AS "ADS_imp_1_OUT") AS "ADS_sca_2_OUT"
-- Code For temporary table TMP_20180329232415_TIIRXS_RF_AVG_B0 part 1/2. Create 


CREATE TEMPORARY TABLE "TMP_20180329232415_TIIRXS_RF_AVG_B0" (
	"KEY" BIGINT, 
	"Estimator" FLOAT
)


-- Code For temporary table TMP_20180329232415_TIIRXS_RF_AVG_B0 part 2/2. Populate

WITH "DT_node_lookup" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.6865601539611816) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 1.0818819999694824) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.14987096190452576) THEN 3 ELSE 4 END ELSE 5 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.37393590807914734) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.19635166227817535) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -1.3463561534881592) THEN 9 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -1.1099023818969727) THEN 11 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.49332666397094727) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.4112001657485962) THEN 14 ELSE 15 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.2726577818393707) THEN 17 ELSE 18 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.360541820526123) THEN 20 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.32986393570899963) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.06985825300216675) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.7127169370651245) THEN 24 ELSE 25 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.823421061038971) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.8264346718788147) THEN 28 ELSE 29 END ELSE 30 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.1080100536346436) THEN 32 ELSE 33 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -1.4956881999969482) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 1.1004490852355957) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.5216177701950073) THEN 37 ELSE 38 END ELSE 39 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.9236918687820435) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.17494834959506989) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.7450381517410278) THEN 43 ELSE 44 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.7377939224243164) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.07374501973390579) THEN 47 ELSE 48 END ELSE 49 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.18584853410720825) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.8880466222763062) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 1.0571516752243042) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -1.3772780895233154) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.26454776525497437) THEN 55 ELSE 56 END ELSE 57 END ELSE 58 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.39177244901657104) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.5244249105453491) THEN 61 ELSE 62 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.9106614589691162) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.35755085945129395) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.8707916736602783) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -1.084018588066101) THEN 67 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.6318921446800232) THEN 69 ELSE 70 END END ELSE 71 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.3950406312942505) THEN 73 ELSE 74 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.06669343262910843) THEN 76 ELSE 77 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 1.052013635635376) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.12360849976539612) THEN 80 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 1.4324640035629272) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.6813516616821289) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.6658321619033813) THEN 84 ELSE 85 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 1.1903365850448608) THEN 87 ELSE 88 END END ELSE 89 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 1.3279410600662231) THEN 91 ELSE 92 END END END END END END END AS node_id_2 
FROM "TMP_20180329232413_8K8D0N_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, 0.4848669214064692 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, 0.38342473185592096 AS "Estimator" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, 1 AS parent_id, 0.6100168381304848 AS "Estimator" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 8 AS parent_id, 1.5543288470291443 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 10 AS parent_id, 1.4092998433520778 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, 13 AS parent_id, 1.3687175770364277 AS "Estimator" UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, 13 AS parent_id, 1.3678941404936502 AS "Estimator" UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, 16 AS parent_id, 1.341344197483337 AS "Estimator" UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, 16 AS parent_id, 1.350090108150775 AS "Estimator" UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 19 AS parent_id, 0.7050714675464733 AS "Estimator" UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, 23 AS parent_id, 1.1156147639563705 AS "Estimator" UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, 23 AS parent_id, 1.0818920012987259 AS "Estimator" UNION ALL SELECT 28 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 27 AS parent_id, 1.1968265037681187 AS "Estimator" UNION ALL SELECT 29 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 27 AS parent_id, 1.1082904037450438 AS "Estimator" UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, 26 AS parent_id, 1.3498429932286293 AS "Estimator" UNION ALL SELECT 32 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 31 AS parent_id, 1.314325621172093 AS "Estimator" UNION ALL SELECT 33 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 31 AS parent_id, 1.3463614795691619 AS "Estimator" UNION ALL SELECT 37 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 36 AS parent_id, 1.1610071359052208 AS "Estimator" UNION ALL SELECT 38 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 36 AS parent_id, 1.1440564349145939 AS "Estimator" UNION ALL SELECT 39 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 35 AS parent_id, 1.278877589279357 AS "Estimator" UNION ALL SELECT 43 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 42 AS parent_id, 1.5696790399866454 AS "Estimator" UNION ALL SELECT 44 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 42 AS parent_id, 1.4608890093126605 AS "Estimator" UNION ALL SELECT 47 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, 46 AS parent_id, 1.2794872288206998 AS "Estimator" UNION ALL SELECT 48 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, 46 AS parent_id, 1.26722341655496 AS "Estimator" UNION ALL SELECT 49 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 45 AS parent_id, 1.3844945172080796 AS "Estimator" UNION ALL SELECT 55 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 9 AS depth, 54 AS parent_id, 1.570583991203967 AS "Estimator" UNION ALL SELECT 56 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 9 AS depth, 54 AS parent_id, 1.5644407243483047 AS "Estimator" UNION ALL SELECT 57 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 53 AS parent_id, 1.556101969927248 AS "Estimator" UNION ALL SELECT 58 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, 52 AS parent_id, 1.54561918356505 AS "Estimator" UNION ALL SELECT 61 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 60 AS parent_id, 1.496561917506885 AS "Estimator" UNION ALL SELECT 62 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 60 AS parent_id, 1.4872578515104244 AS "Estimator" UNION ALL SELECT 67 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 11 AS depth, 66 AS parent_id, 1.5309500463495263 AS "Estimator" UNION ALL SELECT 69 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 12 AS depth, 68 AS parent_id, 1.534059281886407 AS "Estimator" UNION ALL SELECT 70 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 12 AS depth, 68 AS parent_id, 1.5352537026948319 AS "Estimator" UNION ALL SELECT 71 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 10 AS depth, 65 AS parent_id, 1.5248539791622286 AS "Estimator" UNION ALL SELECT 73 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 10 AS depth, 72 AS parent_id, 1.5278956973377713 AS "Estimator" UNION ALL SELECT 74 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 10 AS depth, 72 AS parent_id, 1.5218889384499552 AS "Estimator" UNION ALL SELECT 76 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 9 AS depth, 75 AS parent_id, 1.5439477557341774 AS "Estimator" UNION ALL SELECT 77 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 9 AS depth, 75 AS parent_id, 1.5374002322115805 AS "Estimator" UNION ALL SELECT 80 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, 79 AS parent_id, 1.467648677980467 AS "Estimator" UNION ALL SELECT 84 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 10 AS depth, 83 AS parent_id, 1.484710993001392 AS "Estimator" UNION ALL SELECT 85 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 10 AS depth, 83 AS parent_id, 1.4860572646626233 AS "Estimator" UNION ALL SELECT 87 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 10 AS depth, 86 AS parent_id, 1.4949662645575934 AS "Estimator" UNION ALL SELECT 88 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 10 AS depth, 86 AS parent_id, 1.4929217934494698 AS "Estimator" UNION ALL SELECT 89 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 81 AS parent_id, 1.4783281269798374 AS "Estimator" UNION ALL SELECT 91 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, 90 AS parent_id, 1.5032073896269296 AS "Estimator" UNION ALL SELECT 92 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, 90 AS parent_id, 1.5126619620701551 AS "Estimator") AS "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".node_id AS node_id, "DT_node_data".feature AS feature, "DT_node_data".threshold AS threshold, "DT_node_data".count AS count, "DT_node_data".depth AS depth, "DT_node_data".parent_id AS parent_id, "DT_node_data"."Estimator" AS "Estimator" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".node_id), 
"RF_Tree_0" AS 
(SELECT "DT_Output"."KEY" AS "KEY", "DT_Output"."Estimator" AS "Estimator" 
FROM "DT_Output"), 
"DT_node_lookup_1" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.7298851013183594) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.6579667329788208) THEN 2 ELSE 3 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.778099536895752) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.9540339708328247) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.0887349471449852) THEN 7 ELSE 8 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.32986393570899963) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.8264346718788147) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.2286939173936844) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.19000491499900818) THEN 13 ELSE 14 END ELSE 15 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.8944588899612427) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 1.673033356666565) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.0379496812820435) THEN 19 ELSE 20 END ELSE 21 END ELSE 22 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.1256169080734253) THEN 24 ELSE 25 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.9236918687820435) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.567963719367981) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 1.1626447439193726) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.13076937198638916) THEN 30 ELSE 31 END ELSE 32 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 1.4993480443954468) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -1.5181928873062134) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -1.5474199056625366) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.6049727201461792) THEN 37 ELSE 38 END ELSE 39 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.054462283849716187) THEN 41 ELSE 42 END END ELSE 43 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.4938386082649231) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.07024127244949341) THEN 46 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.7070617079734802) THEN 48 ELSE 49 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.2522202730178833) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.5624355673789978) THEN 52 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -1.188338041305542) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -1.4371790885925293) THEN 55 ELSE 56 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 1.1414363384246826) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.6282318830490112) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.1700807809829712) THEN 60 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.13299763202667236) THEN 62 ELSE 63 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.6576172113418579) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.13620395958423615) THEN 66 ELSE 67 END ELSE 68 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 1.51060950756073) THEN 70 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.5970724821090698) THEN 72 ELSE 73 END END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 1.070578932762146) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.6092501878738403) THEN 76 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 1.5450408458709717) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 1.207731008529663) THEN 79 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 1.3073654174804688) THEN 81 ELSE 82 END END ELSE 83 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 1.2882781028747559) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.4890750050544739) THEN 86 ELSE 87 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.0912780612707138) THEN 89 ELSE 90 END END END END END END END END AS node_id_2 
FROM "TMP_20180329232413_8K8D0N_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_1" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, 1 AS parent_id, 0.6100168381304848 AS "Estimator" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, 1 AS parent_id, 0.38342473185592096 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 6 AS parent_id, 0.8079109230317987 AS "Estimator" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 6 AS parent_id, 0.7050714675464733 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, 12 AS parent_id, 1.1409162524546155 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, 12 AS parent_id, 1.1968265037681187 AS "Estimator" UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 11 AS parent_id, 1.3687175770364277 AS "Estimator" UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 18 AS parent_id, 1.1063441203172228 AS "Estimator" UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 18 AS parent_id, 1.1082904037450438 AS "Estimator" UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, 17 AS parent_id, 1.0818920012987259 AS "Estimator" UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 16 AS parent_id, 1.1577860434316234 AS "Estimator" UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 23 AS parent_id, 1.4092998433520778 AS "Estimator" UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 23 AS parent_id, 1.3463614795691619 AS "Estimator" UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 29 AS parent_id, 1.410743936534041 AS "Estimator" UNION ALL SELECT 31 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 29 AS parent_id, 1.4518609404362353 AS "Estimator" UNION ALL SELECT 32 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 28 AS parent_id, 1.5359670902044162 AS "Estimator" UNION ALL SELECT 37 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 36 AS parent_id, 1.1610071359052208 AS "Estimator" UNION ALL SELECT 38 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 36 AS parent_id, 1.1440564349145939 AS "Estimator" UNION ALL SELECT 39 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, 35 AS parent_id, 1.1156147639563705 AS "Estimator" UNION ALL SELECT 41 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 7 AS depth, 40 AS parent_id, 1.2791824090500283 AS "Estimator" UNION ALL SELECT 42 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, 40 AS parent_id, 1.26722341655496 AS "Estimator" UNION ALL SELECT 43 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 33 AS parent_id, 1.4608890093126605 AS "Estimator" UNION ALL SELECT 46 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 45 AS parent_id, 1.4251802174855326 AS "Estimator" UNION ALL SELECT 48 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 47 AS parent_id, 1.3678941404936502 AS "Estimator" UNION ALL SELECT 49 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 47 AS parent_id, 1.3498429932286293 AS "Estimator" UNION ALL SELECT 52 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 51 AS parent_id, 1.4965619175068852 AS "Estimator" UNION ALL SELECT 55 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 54 AS parent_id, 1.5646091245855271 AS "Estimator" UNION ALL SELECT 56 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 54 AS parent_id, 1.5623228105763816 AS "Estimator" UNION ALL SELECT 60 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 10 AS depth, 59 AS parent_id, 1.541589567106448 AS "Estimator" UNION ALL SELECT 62 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 11 AS depth, 61 AS parent_id, 1.534059281886407 AS "Estimator" UNION ALL SELECT 63 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 11 AS depth, 61 AS parent_id, 1.5318155845359613 AS "Estimator" UNION ALL SELECT 66 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 11 AS depth, 65 AS parent_id, 1.5218889384499552 AS "Estimator" UNION ALL SELECT 67 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 11 AS depth, 65 AS parent_id, 1.521297715153797 AS "Estimator" UNION ALL SELECT 68 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 10 AS depth, 64 AS parent_id, 1.5248539791622286 AS "Estimator" UNION ALL SELECT 70 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 9 AS depth, 69 AS parent_id, 1.5374002322115805 AS "Estimator" UNION ALL SELECT 72 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 10 AS depth, 71 AS parent_id, 1.54561918356505 AS "Estimator" UNION ALL SELECT 73 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 10 AS depth, 71 AS parent_id, 1.5440465088777178 AS "Estimator" UNION ALL SELECT 76 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, 75 AS parent_id, 1.5126619620701554 AS "Estimator" UNION ALL SELECT 79 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 9 AS depth, 78 AS parent_id, 1.5028235051542993 AS "Estimator" UNION ALL SELECT 81 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 10 AS depth, 80 AS parent_id, 1.4949662645575934 AS "Estimator" UNION ALL SELECT 82 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 10 AS depth, 80 AS parent_id, 1.4932233184960249 AS "Estimator" UNION ALL SELECT 83 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 77 AS parent_id, 1.5099001489420028 AS "Estimator" UNION ALL SELECT 86 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 85 AS parent_id, 1.467648677980467 AS "Estimator" UNION ALL SELECT 87 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 85 AS parent_id, 1.4642487267988717 AS "Estimator" UNION ALL SELECT 89 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 88 AS parent_id, 1.4783281269798374 AS "Estimator" UNION ALL SELECT 90 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 88 AS parent_id, 1.4860572646626233 AS "Estimator") AS "Values"), 
"DT_Output_1" AS 
(SELECT "DT_node_lookup_1"."KEY" AS "KEY", "DT_node_lookup_1".node_id_2 AS node_id_2, "DT_node_data_1".node_id AS node_id, "DT_node_data_1".feature AS feature, "DT_node_data_1".threshold AS threshold, "DT_node_data_1".count AS count, "DT_node_data_1".depth AS depth, "DT_node_data_1".parent_id AS parent_id, "DT_node_data_1"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_1" LEFT OUTER JOIN "DT_node_data_1" ON "DT_node_lookup_1".node_id_2 = "DT_node_data_1".node_id), 
"RF_Tree_1" AS 
(SELECT "DT_Output_1"."KEY" AS "KEY", "DT_Output_1"."Estimator" AS "Estimator" 
FROM "DT_Output_1"), 
"DT_node_lookup_2" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.3343552350997925) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.5832271575927734) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.15695497393608093) THEN 3 ELSE 4 END ELSE 5 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -1.072701096534729) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.040250442922115326) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -1.765479326248169) THEN 9 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -1.3401830196380615) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -1.4251958131790161) THEN 12 ELSE 13 END ELSE 14 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -1.5181928873062134) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.07333740592002869) THEN 17 ELSE 18 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.7340636253356934) THEN 20 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 1.0436431169509888) THEN 22 ELSE 23 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.5216202735900879) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 1.2749183177947998) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.802699089050293) THEN 27 ELSE 28 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.1359039545059204) THEN 30 ELSE 31 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.26149412989616394) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -1.3878793716430664) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.25875338912010193) THEN 35 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.5515946745872498) THEN 37 ELSE 38 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.23910586535930634) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.6771551370620728) THEN 41 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.02443060465157032) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.5943354368209839) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.35484689474105835) THEN 45 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.9225163459777832) THEN 47 ELSE 48 END END ELSE 49 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -1.119491457939148) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.7350868582725525) THEN 52 ELSE 53 END ELSE 54 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.17552612721920013) THEN 56 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.257223516702652) THEN 58 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.2857843339443207) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.007955357432365417) THEN 61 ELSE 62 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.43903884291648865) THEN 64 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.7401810884475708) THEN 66 ELSE 67 END END END END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.6153143644332886) THEN 69 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.09310385584831238) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.1196240484714508) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.8666970729827881) THEN 73 ELSE 74 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 1.4066078662872314) THEN 76 ELSE 77 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.22938552498817444) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.07951180636882782) THEN 80 ELSE 81 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 1.5450408458709717) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 1.207731008529663) THEN 84 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 1.3073654174804688) THEN 86 ELSE 87 END END ELSE 88 END END END END END END END END AS node_id_2 
FROM "TMP_20180329232413_8K8D0N_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_2" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, 0.38342473185592096 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, 0.4848669214064692 AS "Estimator" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, 1 AS parent_id, 0.7050714675464733 AS "Estimator" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 8 AS parent_id, 1.5359670902044162 AS "Estimator" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 11 AS parent_id, 1.4608890093126605 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 11 AS parent_id, 1.410743936534041 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 10 AS parent_id, 1.1610071359052208 AS "Estimator" UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 16 AS parent_id, 1.1156147639563705 AS "Estimator" UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 16 AS parent_id, 1.1440564349145939 AS "Estimator" UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 19 AS parent_id, 1.3844945172080796 AS "Estimator" UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 21 AS parent_id, 1.278877589279357 AS "Estimator" UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 21 AS parent_id, 1.26722341655496 AS "Estimator" UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 26 AS parent_id, 1.3498429932286293 AS "Estimator" UNION ALL SELECT 28 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 26 AS parent_id, 1.536711230505171 AS "Estimator" UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 29 AS parent_id, 1.0818920012987259 AS "Estimator" UNION ALL SELECT 31 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 29 AS parent_id, 1.1063441203172228 AS "Estimator" UNION ALL SELECT 35 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 34 AS parent_id, 1.5642723241110825 AS "Estimator" UNION ALL SELECT 37 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, 36 AS parent_id, 1.570583991203967 AS "Estimator" UNION ALL SELECT 38 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, 36 AS parent_id, 1.5684866939082733 AS "Estimator" UNION ALL SELECT 41 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, 40 AS parent_id, 1.496561917506885 AS "Estimator" UNION ALL SELECT 45 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 10 AS depth, 44 AS parent_id, 1.5352537026948319 AS "Estimator" UNION ALL SELECT 47 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 11 AS depth, 46 AS parent_id, 1.5309500463495263 AS "Estimator" UNION ALL SELECT 48 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 11 AS depth, 46 AS parent_id, 1.5325692862833142 AS "Estimator" UNION ALL SELECT 49 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 9 AS depth, 43 AS parent_id, 1.5278956973377713 AS "Estimator" UNION ALL SELECT 52 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 10 AS depth, 51 AS parent_id, 1.5220836338497605 AS "Estimator" UNION ALL SELECT 53 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 10 AS depth, 51 AS parent_id, 1.521297715153797 AS "Estimator" UNION ALL SELECT 54 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 9 AS depth, 50 AS parent_id, 1.50778906671016 AS "Estimator" UNION ALL SELECT 56 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, 55 AS parent_id, 1.5623228105763816 AS "Estimator" UNION ALL SELECT 58 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 57 AS parent_id, 1.5278745466047203 AS "Estimator" UNION ALL SELECT 61 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 10 AS depth, 60 AS parent_id, 1.54561918356505 AS "Estimator" UNION ALL SELECT 62 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 10 AS depth, 60 AS parent_id, 1.541589567106448 AS "Estimator" UNION ALL SELECT 64 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 10 AS depth, 63 AS parent_id, 1.5248539791622286 AS "Estimator" UNION ALL SELECT 66 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 11 AS depth, 65 AS parent_id, 1.534059281886407 AS "Estimator" UNION ALL SELECT 67 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 11 AS depth, 65 AS parent_id, 1.5374002322115805 AS "Estimator" UNION ALL SELECT 69 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 68 AS parent_id, 1.2794872288206998 AS "Estimator" UNION ALL SELECT 73 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 72 AS parent_id, 1.4642487267988717 AS "Estimator" UNION ALL SELECT 74 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 72 AS parent_id, 1.4670826204003844 AS "Estimator" UNION ALL SELECT 76 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 75 AS parent_id, 1.4929217934494698 AS "Estimator" UNION ALL SELECT 77 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 75 AS parent_id, 1.4783281269798374 AS "Estimator" UNION ALL SELECT 80 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 79 AS parent_id, 1.4719390289797578 AS "Estimator" UNION ALL SELECT 81 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 79 AS parent_id, 1.484710993001392 AS "Estimator" UNION ALL SELECT 84 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 9 AS depth, 83 AS parent_id, 1.5030538358378773 AS "Estimator" UNION ALL SELECT 86 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 10 AS depth, 85 AS parent_id, 1.4949662645575934 AS "Estimator" UNION ALL SELECT 87 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 10 AS depth, 85 AS parent_id, 1.4932233184960249 AS "Estimator" UNION ALL SELECT 88 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 82 AS parent_id, 1.5099001489420028 AS "Estimator") AS "Values"), 
"DT_Output_2" AS 
(SELECT "DT_node_lookup_2"."KEY" AS "KEY", "DT_node_lookup_2".node_id_2 AS node_id_2, "DT_node_data_2".node_id AS node_id, "DT_node_data_2".feature AS feature, "DT_node_data_2".threshold AS threshold, "DT_node_data_2".count AS count, "DT_node_data_2".depth AS depth, "DT_node_data_2".parent_id AS parent_id, "DT_node_data_2"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_2" LEFT OUTER JOIN "DT_node_data_2" ON "DT_node_lookup_2".node_id_2 = "DT_node_data_2".node_id), 
"RF_Tree_2" AS 
(SELECT "DT_Output_2"."KEY" AS "KEY", "DT_Output_2"."Estimator" AS "Estimator" 
FROM "DT_Output_2"), 
"DT_node_lookup_3" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.360541820526123) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.7298851013183594) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.3222903907299042) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.9296590089797974) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.4776207208633423) THEN 7 ELSE 8 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.20885485410690308) THEN 10 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.6441354751586914) THEN 12 ELSE 13 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 1.238775610923767) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -1.4956881999969482) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.6530774235725403) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.019264429807662964) THEN 18 ELSE 19 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.8984425663948059) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.0012792721390724182) THEN 22 ELSE 23 END ELSE 24 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.9403092861175537) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.4165307879447937) THEN 27 ELSE 28 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.15516799688339233) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -1.3374958038330078) THEN 31 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -1.093891978263855) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.2431742399930954) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.2511811852455139) THEN 35 ELSE 36 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.3395090103149414) THEN 38 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -1.6453442573547363) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -1.1564879417419434) THEN 41 ELSE 42 END ELSE 43 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.39177244901657104) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.3445228934288025) THEN 46 ELSE 47 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.579698383808136) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.43903884291648865) THEN 50 ELSE 51 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.016523748636245728) THEN 53 ELSE 54 END END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.27114999294281006) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.01613243669271469) THEN 57 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.1498398780822754) THEN 59 ELSE 60 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.25954669713974) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.31113868951797485) THEN 63 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.8529378771781921) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.5178178548812866) THEN 66 ELSE 67 END ELSE 68 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.5117313861846924) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 1.1634111404418945) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 1.1670985221862793) THEN 72 ELSE 73 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.1994251310825348) THEN 75 ELSE 76 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -1.1946587562561035) THEN 78 ELSE 79 END END END END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.6062601208686829) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -1.091903567314148) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 2.0901739597320557) THEN 83 ELSE 84 END ELSE 85 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.5518082976341248) THEN 87 ELSE 88 END END END END AS node_id_2 
FROM "TMP_20180329232413_8K8D0N_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_3" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, 0.6100168381304848 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, 0.38342473185592096 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 6 AS parent_id, 0.8079109230317987 AS "Estimator" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 6 AS parent_id, 0.7050714675464733 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 9 AS parent_id, 1.1409162524546155 AS "Estimator" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 11 AS parent_id, 1.4092998433520778 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 11 AS parent_id, 1.350090108150775 AS "Estimator" UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 17 AS parent_id, 1.5359670902044162 AS "Estimator" UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 17 AS parent_id, 1.4518609404362353 AS "Estimator" UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 21 AS parent_id, 1.1610071359052208 AS "Estimator" UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 21 AS parent_id, 1.1156147639563705 AS "Estimator" UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 20 AS parent_id, 1.278877589279357 AS "Estimator" UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 26 AS parent_id, 1.314325621172093 AS "Estimator" UNION ALL SELECT 28 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 26 AS parent_id, 1.3463614795691619 AS "Estimator" UNION ALL SELECT 31 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 30 AS parent_id, 1.410743936534041 AS "Estimator" UNION ALL SELECT 35 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 9 AS depth, 34 AS parent_id, 1.5543288470291443 AS "Estimator" UNION ALL SELECT 36 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 9 AS depth, 34 AS parent_id, 1.5278745466047203 AS "Estimator" UNION ALL SELECT 38 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 9 AS depth, 37 AS parent_id, 1.5623228105763816 AS "Estimator" UNION ALL SELECT 41 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 11 AS depth, 40 AS parent_id, 1.5696790399866454 AS "Estimator" UNION ALL SELECT 42 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 11 AS depth, 40 AS parent_id, 1.570583991203967 AS "Estimator" UNION ALL SELECT 43 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 10 AS depth, 39 AS parent_id, 1.5684866939082733 AS "Estimator" UNION ALL SELECT 46 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 9 AS depth, 45 AS parent_id, 1.4872578515104244 AS "Estimator" UNION ALL SELECT 47 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 9 AS depth, 45 AS parent_id, 1.4965619175068852 AS "Estimator" UNION ALL SELECT 50 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 10 AS depth, 49 AS parent_id, 1.5248539791622286 AS "Estimator" UNION ALL SELECT 51 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 10 AS depth, 49 AS parent_id, 1.534059281886407 AS "Estimator" UNION ALL SELECT 53 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 10 AS depth, 52 AS parent_id, 1.5325692862833142 AS "Estimator" UNION ALL SELECT 54 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 10 AS depth, 52 AS parent_id, 1.5438687532193451 AS "Estimator" UNION ALL SELECT 57 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, 56 AS parent_id, 1.4608890093126605 AS "Estimator" UNION ALL SELECT 59 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 58 AS parent_id, 1.3678941404936502 AS "Estimator" UNION ALL SELECT 60 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 58 AS parent_id, 1.3844945172080796 AS "Estimator" UNION ALL SELECT 63 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 62 AS parent_id, 1.467648677980467 AS "Estimator" UNION ALL SELECT 66 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 10 AS depth, 65 AS parent_id, 1.4929217934494698 AS "Estimator" UNION ALL SELECT 67 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 10 AS depth, 65 AS parent_id, 1.4860572646626233 AS "Estimator" UNION ALL SELECT 68 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 9 AS depth, 64 AS parent_id, 1.4783281269798374 AS "Estimator" UNION ALL SELECT 72 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 10 AS depth, 71 AS parent_id, 1.5214298911192479 AS "Estimator" UNION ALL SELECT 73 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 10 AS depth, 71 AS parent_id, 1.5309500463495263 AS "Estimator" UNION ALL SELECT 75 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 10 AS depth, 74 AS parent_id, 1.50778906671016 AS "Estimator" UNION ALL SELECT 76 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 10 AS depth, 74 AS parent_id, 1.5126619620701551 AS "Estimator" UNION ALL SELECT 78 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 9 AS depth, 77 AS parent_id, 1.5032073896269296 AS "Estimator" UNION ALL SELECT 79 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 9 AS depth, 77 AS parent_id, 1.484710993001392 AS "Estimator" UNION ALL SELECT 83 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 82 AS parent_id, 1.0818920012987259 AS "Estimator" UNION ALL SELECT 84 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 82 AS parent_id, 1.0274843519223331 AS "Estimator" UNION ALL SELECT 85 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 81 AS parent_id, 1.1577860434316234 AS "Estimator" UNION ALL SELECT 87 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 86 AS parent_id, 1.2794872288206998 AS "Estimator" UNION ALL SELECT 88 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 86 AS parent_id, 1.4949662645575934 AS "Estimator") AS "Values"), 
"DT_Output_3" AS 
(SELECT "DT_node_lookup_3"."KEY" AS "KEY", "DT_node_lookup_3".node_id_2 AS node_id_2, "DT_node_data_3".node_id AS node_id, "DT_node_data_3".feature AS feature, "DT_node_data_3".threshold AS threshold, "DT_node_data_3".count AS count, "DT_node_data_3".depth AS depth, "DT_node_data_3".parent_id AS parent_id, "DT_node_data_3"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_3" LEFT OUTER JOIN "DT_node_data_3" ON "DT_node_lookup_3".node_id_2 = "DT_node_data_3".node_id), 
"RF_Tree_3" AS 
(SELECT "DT_Output_3"."KEY" AS "KEY", "DT_Output_3"."Estimator" AS "Estimator" 
FROM "DT_Output_3"), 
"DT_node_lookup_4" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.4309000968933105) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -1.2066214084625244) THEN 2 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.5602660179138184) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.7965635061264038) THEN 5 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.14987096190452576) THEN 7 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.2956656813621521) THEN 9 ELSE 10 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.3636448383331299) THEN 12 ELSE 13 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.6816338896751404) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -1.6158922910690308) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -1.765479326248169) THEN 17 ELSE 18 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.1599440574645996) THEN 20 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -1.2838690280914307) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.5212242603302002) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -1.3582055568695068) THEN 24 ELSE 25 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -1.5175570249557495) THEN 27 ELSE 28 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.1151762306690216) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.3715919852256775) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.5414793491363525) THEN 32 ELSE 33 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -1.19354248046875) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -1.3772780895233154) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -1.6234049797058105) THEN 37 ELSE 38 END ELSE 39 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.5055505037307739) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.14239919185638428) THEN 42 ELSE 43 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.8880466222763062) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.007955357432365417) THEN 46 ELSE 47 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 1.1439576148986816) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.8707916736602783) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.21372416615486145) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.05914175510406494) THEN 52 ELSE 53 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.8536984920501709) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.10349220782518387) THEN 56 ELSE 57 END ELSE 58 END END ELSE 59 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 1.4191389083862305) THEN 61 ELSE 62 END END END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.2016371637582779) THEN 64 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 1.5385923385620117) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 1.0170724391937256) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.20395492017269135) THEN 68 ELSE 69 END ELSE 70 END ELSE 71 END END END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.13757695257663727) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 1.7521882057189941) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 1.1004490852355957) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.4480481743812561) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.36094123125076294) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -1.097853660583496) THEN 78 ELSE 79 END ELSE 80 END ELSE 81 END ELSE 82 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 1.9923570156097412) THEN 84 ELSE 85 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.02971065044403076) THEN 87 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.7852952480316162) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 1.2282309532165527) THEN 90 ELSE 91 END ELSE 92 END END END END END AS node_id_2 
FROM "TMP_20180329232413_8K8D0N_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_4" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, 1 AS parent_id, 1.4092998433520778 AS "Estimator" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 4 AS parent_id, 0.6100168381304848 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 6 AS parent_id, 0.4848669214064692 AS "Estimator" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 8 AS parent_id, 0.3751675659770648 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 8 AS parent_id, 0.38342473185592096 AS "Estimator" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 11 AS parent_id, 1.3687175770364277 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 11 AS parent_id, 0.7050714675464733 AS "Estimator" UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 16 AS parent_id, 1.5359670902044162 AS "Estimator" UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 16 AS parent_id, 1.1610071359052208 AS "Estimator" UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 19 AS parent_id, 1.341344197483337 AS "Estimator" UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, 23 AS parent_id, 1.410743936534041 AS "Estimator" UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, 23 AS parent_id, 1.4608890093126605 AS "Estimator" UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, 26 AS parent_id, 1.527629409709021 AS "Estimator" UNION ALL SELECT 28 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, 26 AS parent_id, 1.5220836338497605 AS "Estimator" UNION ALL SELECT 32 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 31 AS parent_id, 1.50778906671016 AS "Estimator" UNION ALL SELECT 33 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 31 AS parent_id, 1.477951453333812 AS "Estimator" UNION ALL SELECT 37 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 10 AS depth, 36 AS parent_id, 1.5696790399866454 AS "Estimator" UNION ALL SELECT 38 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 10 AS depth, 36 AS parent_id, 1.5644407243483047 AS "Estimator" UNION ALL SELECT 39 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 9 AS depth, 35 AS parent_id, 1.556101969927248 AS "Estimator" UNION ALL SELECT 42 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 10 AS depth, 41 AS parent_id, 1.496561917506885 AS "Estimator" UNION ALL SELECT 43 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 10 AS depth, 41 AS parent_id, 1.499027385598966 AS "Estimator" UNION ALL SELECT 46 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 11 AS depth, 45 AS parent_id, 1.54561918356505 AS "Estimator" UNION ALL SELECT 47 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 11 AS depth, 45 AS parent_id, 1.541589567106448 AS "Estimator" UNION ALL SELECT 52 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 14 AS depth, 51 AS parent_id, 1.534059281886407 AS "Estimator" UNION ALL SELECT 53 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 14 AS depth, 51 AS parent_id, 1.5352537026948319 AS "Estimator" UNION ALL SELECT 56 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 15 AS depth, 55 AS parent_id, 1.5325692862833142 AS "Estimator" UNION ALL SELECT 57 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 15 AS depth, 55 AS parent_id, 1.5318155845359613 AS "Estimator" UNION ALL SELECT 58 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 14 AS depth, 54 AS parent_id, 1.5309500463495265 AS "Estimator" UNION ALL SELECT 59 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 12 AS depth, 49 AS parent_id, 1.5248539791622286 AS "Estimator" UNION ALL SELECT 61 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 12 AS depth, 60 AS parent_id, 1.5374002322115805 AS "Estimator" UNION ALL SELECT 62 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 12 AS depth, 60 AS parent_id, 1.5437502494470967 AS "Estimator" UNION ALL SELECT 64 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, 63 AS parent_id, 1.4642487267988717 AS "Estimator" UNION ALL SELECT 68 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 10 AS depth, 67 AS parent_id, 1.4929217934494698 AS "Estimator" UNION ALL SELECT 69 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 10 AS depth, 67 AS parent_id, 1.484710993001392 AS "Estimator" UNION ALL SELECT 70 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 9 AS depth, 66 AS parent_id, 1.5126619620701551 AS "Estimator" UNION ALL SELECT 71 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 65 AS parent_id, 1.4771263961886638 AS "Estimator" UNION ALL SELECT 78 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 77 AS parent_id, 1.1440564349145939 AS "Estimator" UNION ALL SELECT 79 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 77 AS parent_id, 1.1577860434316234 AS "Estimator" UNION ALL SELECT 80 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, 76 AS parent_id, 1.1082904037450438 AS "Estimator" UNION ALL SELECT 81 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 75 AS parent_id, 1.1968265037681187 AS "Estimator" UNION ALL SELECT 82 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 74 AS parent_id, 1.278877589279357 AS "Estimator" UNION ALL SELECT 84 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 83 AS parent_id, 1.076547084481779 AS "Estimator" UNION ALL SELECT 85 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 83 AS parent_id, 1.0274843519223331 AS "Estimator" UNION ALL SELECT 87 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 86 AS parent_id, 1.3463614795691619 AS "Estimator" UNION ALL SELECT 90 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 89 AS parent_id, 1.5028235051542993 AS "Estimator" UNION ALL SELECT 91 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 89 AS parent_id, 1.5099001489420028 AS "Estimator" UNION ALL SELECT 92 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 88 AS parent_id, 1.4783281269798374 AS "Estimator") AS "Values"), 
"DT_Output_4" AS 
(SELECT "DT_node_lookup_4"."KEY" AS "KEY", "DT_node_lookup_4".node_id_2 AS node_id_2, "DT_node_data_4".node_id AS node_id, "DT_node_data_4".feature AS feature, "DT_node_data_4".threshold AS threshold, "DT_node_data_4".count AS count, "DT_node_data_4".depth AS depth, "DT_node_data_4".parent_id AS parent_id, "DT_node_data_4"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_4" LEFT OUTER JOIN "DT_node_data_4" ON "DT_node_lookup_4".node_id_2 = "DT_node_data_4".node_id), 
"RF_Tree_4" AS 
(SELECT "DT_Output_4"."KEY" AS "KEY", "DT_Output_4"."Estimator" AS "Estimator" 
FROM "DT_Output_4"), 
"DT_node_lookup_5" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.360541820526123) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.5874325633049011) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.4679744839668274) THEN 3 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.6646462082862854) THEN 5 ELSE 6 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.5640677213668823) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.14987096190452576) THEN 9 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.7462165355682373) THEN 11 ELSE 12 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -1.1316540241241455) THEN 14 ELSE 15 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.8440569639205933) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -1.2677711248397827) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.3538225591182709) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -1.2736729383468628) THEN 20 ELSE 21 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.3329373598098755) THEN 23 ELSE 24 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.1697484254837036) THEN 26 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.7974013090133667) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -1.3966397047042847) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 1.1511194705963135) THEN 30 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -1.6458981037139893) THEN 32 ELSE 33 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.7203217148780823) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -1.0980247259140015) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -1.3090744018554688) THEN 37 ELSE 38 END ELSE 39 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.5923634171485901) THEN 41 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 1.0784399509429932) THEN 43 ELSE 44 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.5779826641082764) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.2896973192691803) THEN 47 ELSE 48 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.05179135501384735) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -1.0853807926177979) THEN 51 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.20296505093574524) THEN 53 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.6868596076965332) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.14239919185638428) THEN 56 ELSE 57 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 1.4566500186920166) THEN 59 ELSE 60 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.5260942578315735) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.911697268486023) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.8749085068702698) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -1.2306668758392334) THEN 65 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.9918270111083984) THEN 67 ELSE 68 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.21919578313827515) THEN 70 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.19093599915504456) THEN 72 ELSE 73 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.09600669145584106) THEN 75 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 1.3170108795166016) THEN 77 ELSE 78 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.6595467925071716) THEN 80 ELSE 81 END END END END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 1.0049841403961182) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 1.241290807723999) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.2530711591243744) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.08806929737329483) THEN 86 ELSE 87 END ELSE 88 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 1.8500051498413086) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.5656808018684387) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 1.4666967391967773) THEN 92 ELSE 93 END ELSE 94 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 2.0901739597320557) THEN 96 ELSE 97 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.8243342638015747) THEN 99 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.026924937963485718) THEN 101 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.2843315601348877) THEN 103 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 1.5038762092590332) THEN 105 ELSE 106 END END END END END END END AS node_id_2 
FROM "TMP_20180329232413_8K8D0N_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_5" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, 1.1409162524546155 AS "Estimator" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 4 AS parent_id, 1.3687175770364277 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 4 AS parent_id, 1.4092998433520778 AS "Estimator" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 8 AS parent_id, 0.4848669214064692 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 10 AS parent_id, 0.38342473185592096 AS "Estimator" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 10 AS parent_id, 0.3751675659770648 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 13 AS parent_id, 0.7050714675464733 AS "Estimator" UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 13 AS parent_id, 0.8079109230317987 AS "Estimator" UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 19 AS parent_id, 1.5359670902044162 AS "Estimator" UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 19 AS parent_id, 1.410743936534041 AS "Estimator" UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 22 AS parent_id, 1.1156147639563705 AS "Estimator" UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 22 AS parent_id, 1.3844945172080796 AS "Estimator" UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 25 AS parent_id, 1.314325621172093 AS "Estimator" UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 7 AS depth, 29 AS parent_id, 1.5644407243483047 AS "Estimator" UNION ALL SELECT 32 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 31 AS parent_id, 1.570583991203967 AS "Estimator" UNION ALL SELECT 33 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 31 AS parent_id, 1.5684866939082733 AS "Estimator" UNION ALL SELECT 37 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 9 AS depth, 36 AS parent_id, 1.556101969927248 AS "Estimator" UNION ALL SELECT 38 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 9 AS depth, 36 AS parent_id, 1.5623228105763816 AS "Estimator" UNION ALL SELECT 39 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 35 AS parent_id, 1.54561918356505 AS "Estimator" UNION ALL SELECT 41 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 40 AS parent_id, 1.5278745466047203 AS "Estimator" UNION ALL SELECT 43 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 9 AS depth, 42 AS parent_id, 1.534059281886407 AS "Estimator" UNION ALL SELECT 44 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 9 AS depth, 42 AS parent_id, 1.536711230505171 AS "Estimator" UNION ALL SELECT 47 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, 46 AS parent_id, 1.4771263961886636 AS "Estimator" UNION ALL SELECT 48 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, 46 AS parent_id, 1.477951453333812 AS "Estimator" UNION ALL SELECT 51 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 50 AS parent_id, 1.4608890093126605 AS "Estimator" UNION ALL SELECT 53 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 9 AS depth, 52 AS parent_id, 1.467648677980467 AS "Estimator" UNION ALL SELECT 56 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 11 AS depth, 55 AS parent_id, 1.496561917506885 AS "Estimator" UNION ALL SELECT 57 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 11 AS depth, 55 AS parent_id, 1.499027385598966 AS "Estimator" UNION ALL SELECT 59 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 11 AS depth, 58 AS parent_id, 1.4929217934494698 AS "Estimator" UNION ALL SELECT 60 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 11 AS depth, 58 AS parent_id, 1.4872578515104244 AS "Estimator" UNION ALL SELECT 65 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 11 AS depth, 64 AS parent_id, 1.5220836338497605 AS "Estimator" UNION ALL SELECT 67 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 12 AS depth, 66 AS parent_id, 1.50778906671016 AS "Estimator" UNION ALL SELECT 68 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 12 AS depth, 66 AS parent_id, 1.5126619620701551 AS "Estimator" UNION ALL SELECT 70 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 11 AS depth, 69 AS parent_id, 1.5325692862833142 AS "Estimator" UNION ALL SELECT 72 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 12 AS depth, 71 AS parent_id, 1.5248539791622286 AS "Estimator" UNION ALL SELECT 73 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 12 AS depth, 71 AS parent_id, 1.5216942430501499 AS "Estimator" UNION ALL SELECT 75 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 10 AS depth, 74 AS parent_id, 1.5309500463495263 AS "Estimator" UNION ALL SELECT 77 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 11 AS depth, 76 AS parent_id, 1.5437502494470967 AS "Estimator" UNION ALL SELECT 78 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 11 AS depth, 76 AS parent_id, 1.5374002322115805 AS "Estimator" UNION ALL SELECT 80 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 9 AS depth, 79 AS parent_id, 1.4860572646626233 AS "Estimator" UNION ALL SELECT 81 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 9 AS depth, 79 AS parent_id, 1.5032073896269296 AS "Estimator" UNION ALL SELECT 86 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 85 AS parent_id, 1.3463614795691619 AS "Estimator" UNION ALL SELECT 87 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 85 AS parent_id, 1.3498429932286293 AS "Estimator" UNION ALL SELECT 88 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 84 AS parent_id, 1.26722341655496 AS "Estimator" UNION ALL SELECT 92 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, 91 AS parent_id, 1.1440564349145939 AS "Estimator" UNION ALL SELECT 93 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, 91 AS parent_id, 1.1577860434316234 AS "Estimator" UNION ALL SELECT 94 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 90 AS parent_id, 1.1063441203172228 AS "Estimator" UNION ALL SELECT 96 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 95 AS parent_id, 1.0818920012987259 AS "Estimator" UNION ALL SELECT 97 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 95 AS parent_id, 1.0274843519223331 AS "Estimator" UNION ALL SELECT 99 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 98 AS parent_id, 1.278877589279357 AS "Estimator" UNION ALL SELECT 101 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 100 AS parent_id, 1.4670826204003842 AS "Estimator" UNION ALL SELECT 103 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 102 AS parent_id, 1.4932233184960249 AS "Estimator" UNION ALL SELECT 105 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, 104 AS parent_id, 1.5028235051542993 AS "Estimator" UNION ALL SELECT 106 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, 104 AS parent_id, 1.5099001489420028 AS "Estimator") AS "Values"), 
"DT_Output_5" AS 
(SELECT "DT_node_lookup_5"."KEY" AS "KEY", "DT_node_lookup_5".node_id_2 AS node_id_2, "DT_node_data_5".node_id AS node_id, "DT_node_data_5".feature AS feature, "DT_node_data_5".threshold AS threshold, "DT_node_data_5".count AS count, "DT_node_data_5".depth AS depth, "DT_node_data_5".parent_id AS parent_id, "DT_node_data_5"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_5" LEFT OUTER JOIN "DT_node_data_5" ON "DT_node_lookup_5".node_id_2 = "DT_node_data_5".node_id), 
"RF_Tree_5" AS 
(SELECT "DT_Output_5"."KEY" AS "KEY", "DT_Output_5"."Estimator" AS "Estimator" 
FROM "DT_Output_5"), 
"DT_node_lookup_6" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.360541820526123) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.5874325633049011) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.319410502910614) THEN 3 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.4679744839668274) THEN 5 ELSE 6 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.5640677213668823) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.2745603322982788) THEN 9 ELSE 10 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -1.1316540241241455) THEN 12 ELSE 13 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.349178671836853) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 1.1800363063812256) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.2754115164279938) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.13076937198638916) THEN 18 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -1.1159042119979858) THEN 20 ELSE 21 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -1.5181928873062134) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -1.638396978378296) THEN 24 ELSE 25 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.7340636253356934) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.01613243669271469) THEN 28 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.20964401960372925) THEN 30 ELSE 31 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 1.0436431169509888) THEN 33 ELSE 34 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 1.7521882057189941) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 1.405125617980957) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.13297244906425476) THEN 38 ELSE 39 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 1.5820972919464111) THEN 41 ELSE 42 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.49538496136665344) THEN 44 ELSE 45 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.143561840057373) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.2250702381134033) THEN 48 ELSE 49 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.17194722592830658) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -1.19354248046875) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.3912697434425354) THEN 53 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.24943870306015015) THEN 55 ELSE 56 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.5353570580482483) THEN 58 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.8169082403182983) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.8677496910095215) THEN 61 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.3807009756565094) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.6530574560165405) THEN 64 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.10797195136547089) THEN 66 ELSE 67 END END ELSE 68 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.1797034740447998) THEN 70 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.06669343262910843) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 1.5545402765274048) THEN 73 ELSE 74 END ELSE 75 END END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.025099143385887146) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.21962417662143707) THEN 78 ELSE 79 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.6569288969039917) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -1.3746755123138428) THEN 82 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.11812072992324829) THEN 84 ELSE 85 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.4850558042526245) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.9677976369857788) THEN 88 ELSE 89 END ELSE 90 END END END END END END END AS node_id_2 
FROM "TMP_20180329232413_8K8D0N_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_6" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, 0.6100168381304848 AS "Estimator" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 4 AS parent_id, 1.1409162524546155 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 4 AS parent_id, 1.3687175770364277 AS "Estimator" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 8 AS parent_id, 0.38342473185592096 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 8 AS parent_id, 0.3751675659770648 AS "Estimator" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 11 AS parent_id, 0.7050714675464733 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 11 AS parent_id, 0.8079109230317987 AS "Estimator" UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 17 AS parent_id, 1.410743936534041 AS "Estimator" UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 19 AS parent_id, 1.4518609404362353 AS "Estimator" UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 19 AS parent_id, 1.4872578515104244 AS "Estimator" UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 23 AS parent_id, 1.1610071359052208 AS "Estimator" UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 23 AS parent_id, 1.1156147639563705 AS "Estimator" UNION ALL SELECT 28 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, 27 AS parent_id, 1.4608890093126605 AS "Estimator" UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 29 AS parent_id, 1.3678941404936502 AS "Estimator" UNION ALL SELECT 31 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 29 AS parent_id, 1.3844945172080796 AS "Estimator" UNION ALL SELECT 33 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, 32 AS parent_id, 1.278877589279357 AS "Estimator" UNION ALL SELECT 34 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, 32 AS parent_id, 1.26722341655496 AS "Estimator" UNION ALL SELECT 38 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 37 AS parent_id, 1.1063441203172228 AS "Estimator" UNION ALL SELECT 39 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 37 AS parent_id, 1.1440564349145939 AS "Estimator" UNION ALL SELECT 41 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 40 AS parent_id, 1.2794872288206998 AS "Estimator" UNION ALL SELECT 42 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 40 AS parent_id, 1.1577860434316234 AS "Estimator" UNION ALL SELECT 44 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 43 AS parent_id, 1.076547084481779 AS "Estimator" UNION ALL SELECT 45 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 43 AS parent_id, 1.0274843519223331 AS "Estimator" UNION ALL SELECT 48 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 47 AS parent_id, 1.314325621172093 AS "Estimator" UNION ALL SELECT 49 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 47 AS parent_id, 1.0818920012987259 AS "Estimator" UNION ALL SELECT 53 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 52 AS parent_id, 1.536711230505171 AS "Estimator" UNION ALL SELECT 55 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, 54 AS parent_id, 1.5642723241110825 AS "Estimator" UNION ALL SELECT 56 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, 54 AS parent_id, 1.556101969927248 AS "Estimator" UNION ALL SELECT 58 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 57 AS parent_id, 1.477951453333812 AS "Estimator" UNION ALL SELECT 61 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 60 AS parent_id, 1.541589567106448 AS "Estimator" UNION ALL SELECT 64 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 10 AS depth, 63 AS parent_id, 1.5318155845359613 AS "Estimator" UNION ALL SELECT 66 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 11 AS depth, 65 AS parent_id, 1.5248539791622286 AS "Estimator" UNION ALL SELECT 67 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 11 AS depth, 65 AS parent_id, 1.527718172251938 AS "Estimator" UNION ALL SELECT 68 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 9 AS depth, 62 AS parent_id, 1.5352537026948319 AS "Estimator" UNION ALL SELECT 70 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 69 AS parent_id, 1.5325692862833142 AS "Estimator" UNION ALL SELECT 73 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 10 AS depth, 72 AS parent_id, 1.543809501333221 AS "Estimator" UNION ALL SELECT 74 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 10 AS depth, 72 AS parent_id, 1.54561918356505 AS "Estimator" UNION ALL SELECT 75 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 9 AS depth, 71 AS parent_id, 1.5374002322115805 AS "Estimator" UNION ALL SELECT 78 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 77 AS parent_id, 1.4642487267988717 AS "Estimator" UNION ALL SELECT 79 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 6 AS depth, 77 AS parent_id, 1.4673090434324174 AS "Estimator" UNION ALL SELECT 82 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, 81 AS parent_id, 1.4932233184960249 AS "Estimator" UNION ALL SELECT 84 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 83 AS parent_id, 1.484710993001392 AS "Estimator" UNION ALL SELECT 85 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 83 AS parent_id, 1.4860572646626233 AS "Estimator" UNION ALL SELECT 88 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 87 AS parent_id, 1.5099001489420028 AS "Estimator" UNION ALL SELECT 89 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 87 AS parent_id, 1.5032073896269296 AS "Estimator" UNION ALL SELECT 90 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, 86 AS parent_id, 1.4949662645575934 AS "Estimator") AS "Values"), 
"DT_Output_6" AS 
(SELECT "DT_node_lookup_6"."KEY" AS "KEY", "DT_node_lookup_6".node_id_2 AS node_id_2, "DT_node_data_6".node_id AS node_id, "DT_node_data_6".feature AS feature, "DT_node_data_6".threshold AS threshold, "DT_node_data_6".count AS count, "DT_node_data_6".depth AS depth, "DT_node_data_6".parent_id AS parent_id, "DT_node_data_6"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_6" LEFT OUTER JOIN "DT_node_data_6" ON "DT_node_lookup_6".node_id_2 = "DT_node_data_6".node_id), 
"RF_Tree_6" AS 
(SELECT "DT_Output_6"."KEY" AS "KEY", "DT_Output_6"."Estimator" AS "Estimator" 
FROM "DT_Output_6"), 
"DT_node_lookup_7" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.635791301727295) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.7129993438720703) THEN 2 ELSE 3 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.4017176032066345) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.2876416742801666) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.9156728982925415) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -1.3440741300582886) THEN 8 ELSE 9 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.2286939173936844) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.3915177583694458) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.4057449698448181) THEN 13 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.3508930206298828) THEN 15 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -1.161270022392273) THEN 17 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.0379496812820435) THEN 19 ELSE 20 END END END END ELSE 21 END ELSE 22 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.16294515132904053) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.9280877113342285) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -1.410794973373413) THEN 26 ELSE 27 END ELSE 28 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.1080100536346436) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.3216150999069214) THEN 31 ELSE 32 END ELSE 33 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.8848086595535278) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.567963719367981) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -1.2143871784210205) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -1.2252990007400513) THEN 38 ELSE 39 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -1.5593922138214111) THEN 41 ELSE 42 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -1.5555343627929688) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.9723859429359436) THEN 45 ELSE 46 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.7340636253356934) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -1.2677711248397827) THEN 49 ELSE 50 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.054462283849716187) THEN 52 ELSE 53 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.26149412989616394) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.5963975787162781) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -1.188338041305542) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -1.4423835277557373) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -1.6239588260650635) THEN 59 ELSE 60 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -1.3090744018554688) THEN 62 ELSE 63 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.4123273491859436) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.7666403651237488) THEN 66 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 1.5545402765274048) THEN 68 ELSE 69 END END ELSE 70 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.3992994725704193) THEN 72 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.1869203746318817) THEN 74 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.911697268486023) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.21919578313827515) THEN 77 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.19093599915504456) THEN 79 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.7350868582725525) THEN 81 ELSE 82 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 1.5099091529846191) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 1.2545078992843628) THEN 85 ELSE 86 END ELSE 87 END END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.2016371637582779) THEN 89 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 1.5113639831542969) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.22938552498817444) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.8087053298950195) THEN 93 ELSE 94 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.2843315601348877) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 1.4066078662872314) THEN 97 ELSE 98 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.5690239071846008) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 1.2282309532165527) THEN 101 ELSE 102 END ELSE 103 END END END ELSE 104 END END END END END END AS node_id_2 
FROM "TMP_20180329232413_8K8D0N_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_7" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, 1 AS parent_id, 0.38342473185592096 AS "Estimator" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, 1 AS parent_id, 0.3751675659770648 AS "Estimator" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 7 AS parent_id, 1.0818920012987259 AS "Estimator" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 7 AS parent_id, 0.7050714675464733 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, 12 AS parent_id, 1.1577860434316234 AS "Estimator" UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 14 AS parent_id, 1.1409162524546155 AS "Estimator" UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 9 AS depth, 16 AS parent_id, 1.1156147639563705 AS "Estimator" UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 10 AS depth, 18 AS parent_id, 1.1063441203172228 AS "Estimator" UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 10 AS depth, 18 AS parent_id, 1.1082904037450438 AS "Estimator" UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 11 AS parent_id, 1.1968265037681187 AS "Estimator" UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 10 AS parent_id, 1.3687175770364277 AS "Estimator" UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 25 AS parent_id, 1.5543288470291443 AS "Estimator" UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 25 AS parent_id, 1.536711230505171 AS "Estimator" UNION ALL SELECT 28 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 24 AS parent_id, 1.477951453333812 AS "Estimator" UNION ALL SELECT 31 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 30 AS parent_id, 1.341344197483337 AS "Estimator" UNION ALL SELECT 32 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 30 AS parent_id, 1.314325621172093 AS "Estimator" UNION ALL SELECT 33 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 29 AS parent_id, 1.3463614795691619 AS "Estimator" UNION ALL SELECT 38 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 37 AS parent_id, 1.5696790399866454 AS "Estimator" UNION ALL SELECT 39 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 37 AS parent_id, 1.5278745466047203 AS "Estimator" UNION ALL SELECT 41 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 40 AS parent_id, 1.4518609404362353 AS "Estimator" UNION ALL SELECT 42 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 40 AS parent_id, 1.410743936534041 AS "Estimator" UNION ALL SELECT 45 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 44 AS parent_id, 1.1610071359052208 AS "Estimator" UNION ALL SELECT 46 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 44 AS parent_id, 1.0274843519223331 AS "Estimator" UNION ALL SELECT 49 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, 48 AS parent_id, 1.3844945172080796 AS "Estimator" UNION ALL SELECT 50 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, 48 AS parent_id, 1.4608890093126605 AS "Estimator" UNION ALL SELECT 52 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 7 AS depth, 51 AS parent_id, 1.2791824090500283 AS "Estimator" UNION ALL SELECT 53 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, 51 AS parent_id, 1.26722341655496 AS "Estimator" UNION ALL SELECT 59 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 58 AS parent_id, 1.570583991203967 AS "Estimator" UNION ALL SELECT 60 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 58 AS parent_id, 1.5646091245855271 AS "Estimator" UNION ALL SELECT 62 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 61 AS parent_id, 1.556101969927248 AS "Estimator" UNION ALL SELECT 63 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 61 AS parent_id, 1.5623228105763818 AS "Estimator" UNION ALL SELECT 66 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 65 AS parent_id, 1.541589567106448 AS "Estimator" UNION ALL SELECT 68 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 9 AS depth, 67 AS parent_id, 1.5440465088777178 AS "Estimator" UNION ALL SELECT 69 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 9 AS depth, 67 AS parent_id, 1.54561918356505 AS "Estimator" UNION ALL SELECT 70 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, 64 AS parent_id, 1.534059281886407 AS "Estimator" UNION ALL SELECT 72 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 71 AS parent_id, 1.499027385598966 AS "Estimator" UNION ALL SELECT 74 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, 73 AS parent_id, 1.50778906671016 AS "Estimator" UNION ALL SELECT 77 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 9 AS depth, 76 AS parent_id, 1.5325692862833142 AS "Estimator" UNION ALL SELECT 79 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 10 AS depth, 78 AS parent_id, 1.5248539791622286 AS "Estimator" UNION ALL SELECT 81 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 11 AS depth, 80 AS parent_id, 1.5218889384499552 AS "Estimator" UNION ALL SELECT 82 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 11 AS depth, 80 AS parent_id, 1.521297715153797 AS "Estimator" UNION ALL SELECT 85 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 10 AS depth, 84 AS parent_id, 1.5374002322115805 AS "Estimator" UNION ALL SELECT 86 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 10 AS depth, 84 AS parent_id, 1.5352537026948319 AS "Estimator" UNION ALL SELECT 87 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 9 AS depth, 83 AS parent_id, 1.5309500463495263 AS "Estimator" UNION ALL SELECT 89 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 88 AS parent_id, 1.4642487267988717 AS "Estimator" UNION ALL SELECT 93 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 92 AS parent_id, 1.484710993001392 AS "Estimator" UNION ALL SELECT 94 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 92 AS parent_id, 1.4719390289797578 AS "Estimator" UNION ALL SELECT 97 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 9 AS depth, 96 AS parent_id, 1.493102708477403 AS "Estimator" UNION ALL SELECT 98 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 9 AS depth, 96 AS parent_id, 1.4783281269798374 AS "Estimator" UNION ALL SELECT 101 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 10 AS depth, 100 AS parent_id, 1.502951466645176 AS "Estimator" UNION ALL SELECT 102 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 10 AS depth, 100 AS parent_id, 1.5099001489420028 AS "Estimator" UNION ALL SELECT 103 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 9 AS depth, 99 AS parent_id, 1.4949662645575934 AS "Estimator" UNION ALL SELECT 104 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 90 AS parent_id, 1.5126619620701551 AS "Estimator") AS "Values"), 
"DT_Output_7" AS 
(SELECT "DT_node_lookup_7"."KEY" AS "KEY", "DT_node_lookup_7".node_id_2 AS node_id_2, "DT_node_data_7".node_id AS node_id, "DT_node_data_7".feature AS feature, "DT_node_data_7".threshold AS threshold, "DT_node_data_7".count AS count, "DT_node_data_7".depth AS depth, "DT_node_data_7".parent_id AS parent_id, "DT_node_data_7"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_7" LEFT OUTER JOIN "DT_node_data_7" ON "DT_node_lookup_7".node_id_2 = "DT_node_data_7".node_id), 
"RF_Tree_7" AS 
(SELECT "DT_Output_7"."KEY" AS "KEY", "DT_Output_7"."Estimator" AS "Estimator" 
FROM "DT_Output_7"), 
"DT_node_lookup_8" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.481613039970398) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.8200520873069763) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -1.084075689315796) THEN 3 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.2956656813621521) THEN 5 ELSE 6 END END ELSE 7 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.20899805426597595) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -1.3374958038330078) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.23203356564044952) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -1.507514476776123) THEN 12 ELSE 13 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -1.4630563259124756) THEN 15 ELSE 16 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.2830257415771484) THEN 18 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.8880466222763062) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -1.3966397047042847) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.5003117322921753) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.5346213579177856) THEN 23 ELSE 24 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -1.6234049797058105) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.7431471347808838) THEN 27 ELSE 28 END ELSE 29 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.8835725784301758) THEN 31 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.46476495265960693) THEN 33 ELSE 34 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.5779826641082764) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.2896973192691803) THEN 37 ELSE 38 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.39177244901657104) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.3445228934288025) THEN 41 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.567314863204956) THEN 43 ELSE 44 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.1869203746318817) THEN 46 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 1.1753818988800049) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.6413336992263794) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.7558377385139465) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -1.084018588066101) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.40586355328559875) THEN 52 ELSE 53 END ELSE 54 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.7636678218841553) THEN 56 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.32780516147613525) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.2300962656736374) THEN 59 ELSE 60 END ELSE 61 END END END ELSE 62 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.19248425960540771) THEN 64 ELSE 65 END END END END END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.5494245290756226) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.938457727432251) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.19714802503585815) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.5906535983085632) THEN 70 ELSE 71 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.0536472462117672) THEN 73 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.45225411653518677) THEN 75 ELSE 76 END END END ELSE 77 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.26058903336524963) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 1.6245992183685303) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.401416152715683) THEN 81 ELSE 82 END ELSE 83 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.1196240484714508) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.21962417662143707) THEN 86 ELSE 87 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 1.331526517868042) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 1.4066078662872314) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.053603410720825195) THEN 91 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 1.1903365850448608) THEN 93 ELSE 94 END END ELSE 95 END ELSE 96 END END END END END END AS node_id_2 
FROM "TMP_20180329232413_8K8D0N_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_8" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, 0.8079109230317987 AS "Estimator" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 4 AS parent_id, 0.3751675659770648 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 4 AS parent_id, 0.38342473185592096 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, 1 AS parent_id, 1.350090108150775 AS "Estimator" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 11 AS parent_id, 1.3678941404936502 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 11 AS parent_id, 1.410743936534041 AS "Estimator" UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 14 AS parent_id, 1.5220836338497605 AS "Estimator" UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 14 AS parent_id, 1.4608890093126605 AS "Estimator" UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 17 AS parent_id, 1.3687175770364277 AS "Estimator" UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 22 AS parent_id, 1.5359670902044162 AS "Estimator" UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 22 AS parent_id, 1.5543288470291443 AS "Estimator" UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 9 AS depth, 26 AS parent_id, 1.5696790399866454 AS "Estimator" UNION ALL SELECT 28 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 9 AS depth, 26 AS parent_id, 1.570583991203967 AS "Estimator" UNION ALL SELECT 29 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 8 AS depth, 25 AS parent_id, 1.5643565242296935 AS "Estimator" UNION ALL SELECT 31 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, 30 AS parent_id, 1.54561918356505 AS "Estimator" UNION ALL SELECT 33 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 32 AS parent_id, 1.536711230505171 AS "Estimator" UNION ALL SELECT 34 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 32 AS parent_id, 1.541589567106448 AS "Estimator" UNION ALL SELECT 37 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, 36 AS parent_id, 1.4771263961886638 AS "Estimator" UNION ALL SELECT 38 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, 36 AS parent_id, 1.477951453333812 AS "Estimator" UNION ALL SELECT 41 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 40 AS parent_id, 1.4872578515104244 AS "Estimator" UNION ALL SELECT 43 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 9 AS depth, 42 AS parent_id, 1.496561917506885 AS "Estimator" UNION ALL SELECT 44 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 9 AS depth, 42 AS parent_id, 1.499027385598966 AS "Estimator" UNION ALL SELECT 46 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 45 AS parent_id, 1.50778906671016 AS "Estimator" UNION ALL SELECT 52 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 13 AS depth, 51 AS parent_id, 1.5309500463495263 AS "Estimator" UNION ALL SELECT 53 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 13 AS depth, 51 AS parent_id, 1.5318155845359613 AS "Estimator" UNION ALL SELECT 54 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 12 AS depth, 50 AS parent_id, 1.5352537026948319 AS "Estimator" UNION ALL SELECT 56 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 12 AS depth, 55 AS parent_id, 1.534059281886407 AS "Estimator" UNION ALL SELECT 59 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 14 AS depth, 58 AS parent_id, 1.5248539791622286 AS "Estimator" UNION ALL SELECT 60 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 14 AS depth, 58 AS parent_id, 1.5278956973377713 AS "Estimator" UNION ALL SELECT 61 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 13 AS depth, 57 AS parent_id, 1.5216942430501499 AS "Estimator" UNION ALL SELECT 62 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 10 AS depth, 48 AS parent_id, 1.521297715153797 AS "Estimator" UNION ALL SELECT 64 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 10 AS depth, 63 AS parent_id, 1.5325692862833142 AS "Estimator" UNION ALL SELECT 65 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 10 AS depth, 63 AS parent_id, 1.5440465088777178 AS "Estimator" UNION ALL SELECT 70 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 69 AS parent_id, 1.1156147639563705 AS "Estimator" UNION ALL SELECT 71 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 69 AS parent_id, 1.1082904037450438 AS "Estimator" UNION ALL SELECT 73 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 72 AS parent_id, 1.2794872288206998 AS "Estimator" UNION ALL SELECT 75 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, 74 AS parent_id, 1.076547084481779 AS "Estimator" UNION ALL SELECT 76 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, 74 AS parent_id, 1.1440564349145939 AS "Estimator" UNION ALL SELECT 77 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 67 AS parent_id, 1.3844945172080796 AS "Estimator" UNION ALL SELECT 81 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 80 AS parent_id, 1.3498429932286293 AS "Estimator" UNION ALL SELECT 82 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 80 AS parent_id, 1.314325621172093 AS "Estimator" UNION ALL SELECT 83 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 79 AS parent_id, 1.0818920012987259 AS "Estimator" UNION ALL SELECT 86 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 85 AS parent_id, 1.4642487267988717 AS "Estimator" UNION ALL SELECT 87 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 6 AS depth, 85 AS parent_id, 1.4674599921204396 AS "Estimator" UNION ALL SELECT 91 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 90 AS parent_id, 1.484710993001392 AS "Estimator" UNION ALL SELECT 93 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 9 AS depth, 92 AS parent_id, 1.4949662645575934 AS "Estimator" UNION ALL SELECT 94 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 9 AS depth, 92 AS parent_id, 1.4929217934494698 AS "Estimator" UNION ALL SELECT 95 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, 89 AS parent_id, 1.4783281269798374 AS "Estimator" UNION ALL SELECT 96 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 88 AS parent_id, 1.5099001489420028 AS "Estimator") AS "Values"), 
"DT_Output_8" AS 
(SELECT "DT_node_lookup_8"."KEY" AS "KEY", "DT_node_lookup_8".node_id_2 AS node_id_2, "DT_node_data_8".node_id AS node_id, "DT_node_data_8".feature AS feature, "DT_node_data_8".threshold AS threshold, "DT_node_data_8".count AS count, "DT_node_data_8".depth AS depth, "DT_node_data_8".parent_id AS parent_id, "DT_node_data_8"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_8" LEFT OUTER JOIN "DT_node_data_8" ON "DT_node_lookup_8".node_id_2 = "DT_node_data_8".node_id), 
"RF_Tree_8" AS 
(SELECT "DT_Output_8"."KEY" AS "KEY", "DT_Output_8"."Estimator" AS "Estimator" 
FROM "DT_Output_8"), 
"DT_node_lookup_9" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.6865601539611816) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 1.0818819999694824) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.15695497393608093) THEN 3 ELSE 4 END ELSE 5 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 1.1021127700805664) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.0424461364746094) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.2286939173936844) THEN 9 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 1.341475486755371) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.561489462852478) THEN 12 ELSE 13 END ELSE 14 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.3589157462120056) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -1.3878793716430664) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.3857569992542267) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.044081687927246094) THEN 19 ELSE 20 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.25875338912010193) THEN 22 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 1.012352705001831) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -1.6768755912780762) THEN 25 ELSE 26 END ELSE 27 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.9923431873321533) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 1.124863862991333) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.4673061966896057) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.8961135149002075) THEN 32 ELSE 33 END ELSE 34 END ELSE 35 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -1.0980247259140015) THEN 37 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.10831808298826218) THEN 39 ELSE 40 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -1.385697841644287) THEN 42 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.0912780612707138) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.23049773275852203) THEN 45 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 1.26242196559906) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 1.1107220649719238) THEN 48 ELSE 49 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.8207560777664185) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.008774295449256897) THEN 52 ELSE 53 END ELSE 54 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.6931482553482056) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.7423070669174194) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.824400007724762) THEN 58 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.3184978663921356) THEN 60 ELSE 61 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.9094171524047852) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.5946462154388428) THEN 64 ELSE 65 END ELSE 66 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.6514129638671875) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.015950024127960205) THEN 69 ELSE 70 END ELSE 71 END END END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 1.0049841403961182) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.7887826561927795) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.49538496136665344) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.5506773591041565) THEN 76 ELSE 77 END ELSE 78 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.388088583946228) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 1.5003243684768677) THEN 81 ELSE 82 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.47235190868377686) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -1.0520573854446411) THEN 85 ELSE 86 END ELSE 87 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 1.3188034296035767) THEN 89 ELSE 90 END END END END AS node_id_2 
FROM "TMP_20180329232413_8K8D0N_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_9" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, 0.38342473185592096 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, 0.4848669214064692 AS "Estimator" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, 1 AS parent_id, 0.6100168381304848 AS "Estimator" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 8 AS parent_id, 1.1968265037681187 AS "Estimator" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 11 AS parent_id, 1.350090108150775 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 11 AS parent_id, 1.3687175770364277 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 10 AS parent_id, 1.4092998433520778 AS "Estimator" UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, 18 AS parent_id, 1.5543288470291443 AS "Estimator" UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, 18 AS parent_id, 1.5359670902044162 AS "Estimator" UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, 21 AS parent_id, 1.5642723241110825 AS "Estimator" UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 9 AS depth, 24 AS parent_id, 1.570583991203967 AS "Estimator" UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 9 AS depth, 24 AS parent_id, 1.5696790399866454 AS "Estimator" UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 23 AS parent_id, 1.5684866939082733 AS "Estimator" UNION ALL SELECT 32 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 9 AS depth, 31 AS parent_id, 1.527823837747321 AS "Estimator" UNION ALL SELECT 33 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 9 AS depth, 31 AS parent_id, 1.5248539791622286 AS "Estimator" UNION ALL SELECT 34 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 30 AS parent_id, 1.5318155845359613 AS "Estimator" UNION ALL SELECT 35 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, 29 AS parent_id, 1.5352537026948319 AS "Estimator" UNION ALL SELECT 37 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, 36 AS parent_id, 1.5623228105763816 AS "Estimator" UNION ALL SELECT 39 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 38 AS parent_id, 1.54561918356505 AS "Estimator" UNION ALL SELECT 40 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 38 AS parent_id, 1.5440465088777178 AS "Estimator" UNION ALL SELECT 42 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 41 AS parent_id, 1.278877589279357 AS "Estimator" UNION ALL SELECT 45 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, 44 AS parent_id, 1.4251802174855326 AS "Estimator" UNION ALL SELECT 48 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 9 AS depth, 47 AS parent_id, 1.4642487267988717 AS "Estimator" UNION ALL SELECT 49 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 9 AS depth, 47 AS parent_id, 1.4608890093126605 AS "Estimator" UNION ALL SELECT 52 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 10 AS depth, 51 AS parent_id, 1.4872578515104244 AS "Estimator" UNION ALL SELECT 53 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 10 AS depth, 51 AS parent_id, 1.4929217934494698 AS "Estimator" UNION ALL SELECT 54 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 9 AS depth, 50 AS parent_id, 1.4783281269798374 AS "Estimator" UNION ALL SELECT 58 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 9 AS depth, 57 AS parent_id, 1.484710993001392 AS "Estimator" UNION ALL SELECT 60 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 10 AS depth, 59 AS parent_id, 1.50778906671016 AS "Estimator" UNION ALL SELECT 61 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 10 AS depth, 59 AS parent_id, 1.5032073896269296 AS "Estimator" UNION ALL SELECT 64 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 10 AS depth, 63 AS parent_id, 1.4771263961886638 AS "Estimator" UNION ALL SELECT 65 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 10 AS depth, 63 AS parent_id, 1.4719390289797578 AS "Estimator" UNION ALL SELECT 66 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 9 AS depth, 62 AS parent_id, 1.4860572646626233 AS "Estimator" UNION ALL SELECT 69 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 9 AS depth, 68 AS parent_id, 1.521297715153797 AS "Estimator" UNION ALL SELECT 70 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 9 AS depth, 68 AS parent_id, 1.5374002322115805 AS "Estimator" UNION ALL SELECT 71 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 67 AS parent_id, 1.5028235051542993 AS "Estimator" UNION ALL SELECT 76 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 75 AS parent_id, 1.0818920012987259 AS "Estimator" UNION ALL SELECT 77 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 75 AS parent_id, 1.076547084481779 AS "Estimator" UNION ALL SELECT 78 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 74 AS parent_id, 1.0274843519223331 AS "Estimator" UNION ALL SELECT 81 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 80 AS parent_id, 1.1063441203172228 AS "Estimator" UNION ALL SELECT 82 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 80 AS parent_id, 1.1577860434316234 AS "Estimator" UNION ALL SELECT 85 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, 84 AS parent_id, 1.26722341655496 AS "Estimator" UNION ALL SELECT 86 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, 84 AS parent_id, 1.2794872288206998 AS "Estimator" UNION ALL SELECT 87 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 83 AS parent_id, 1.1440564349145939 AS "Estimator" UNION ALL SELECT 89 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 88 AS parent_id, 1.4670826204003842 AS "Estimator" UNION ALL SELECT 90 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 88 AS parent_id, 1.4932233184960249 AS "Estimator") AS "Values"), 
"DT_Output_9" AS 
(SELECT "DT_node_lookup_9"."KEY" AS "KEY", "DT_node_lookup_9".node_id_2 AS node_id_2, "DT_node_data_9".node_id AS node_id, "DT_node_data_9".feature AS feature, "DT_node_data_9".threshold AS threshold, "DT_node_data_9".count AS count, "DT_node_data_9".depth AS depth, "DT_node_data_9".parent_id AS parent_id, "DT_node_data_9"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_9" LEFT OUTER JOIN "DT_node_data_9" ON "DT_node_lookup_9".node_id_2 = "DT_node_data_9".node_id), 
"RF_Tree_9" AS 
(SELECT "DT_Output_9"."KEY" AS "KEY", "DT_Output_9"."Estimator" AS "Estimator" 
FROM "DT_Output_9")
 INSERT INTO "TMP_20180329232415_TIIRXS_RF_AVG_B0" ("KEY", "Estimator") SELECT "RF_AVG_B0"."KEY", "RF_AVG_B0"."Estimator" 
FROM (SELECT "RF_AVG_esu_0"."KEY" AS "KEY", "RF_AVG_esu_0"."Estimator" AS "Estimator" 
FROM (SELECT "RF_Tree_0"."KEY" AS "KEY", "RF_Tree_0"."Estimator" AS "Estimator" 
FROM "RF_Tree_0" UNION ALL SELECT "RF_Tree_1"."KEY" AS "KEY", "RF_Tree_1"."Estimator" AS "Estimator" 
FROM "RF_Tree_1" UNION ALL SELECT "RF_Tree_2"."KEY" AS "KEY", "RF_Tree_2"."Estimator" AS "Estimator" 
FROM "RF_Tree_2" UNION ALL SELECT "RF_Tree_3"."KEY" AS "KEY", "RF_Tree_3"."Estimator" AS "Estimator" 
FROM "RF_Tree_3" UNION ALL SELECT "RF_Tree_4"."KEY" AS "KEY", "RF_Tree_4"."Estimator" AS "Estimator" 
FROM "RF_Tree_4" UNION ALL SELECT "RF_Tree_5"."KEY" AS "KEY", "RF_Tree_5"."Estimator" AS "Estimator" 
FROM "RF_Tree_5" UNION ALL SELECT "RF_Tree_6"."KEY" AS "KEY", "RF_Tree_6"."Estimator" AS "Estimator" 
FROM "RF_Tree_6" UNION ALL SELECT "RF_Tree_7"."KEY" AS "KEY", "RF_Tree_7"."Estimator" AS "Estimator" 
FROM "RF_Tree_7" UNION ALL SELECT "RF_Tree_8"."KEY" AS "KEY", "RF_Tree_8"."Estimator" AS "Estimator" 
FROM "RF_Tree_8" UNION ALL SELECT "RF_Tree_9"."KEY" AS "KEY", "RF_Tree_9"."Estimator" AS "Estimator" 
FROM "RF_Tree_9") AS "RF_AVG_esu_0") AS "RF_AVG_B0"
-- Code For temporary table TMP_20180329232415_S1GC51_RF_AVG_B1 part 1/2. Create 


CREATE TEMPORARY TABLE "TMP_20180329232415_S1GC51_RF_AVG_B1" (
	"KEY" BIGINT, 
	"Estimator" FLOAT
)


-- Code For temporary table TMP_20180329232415_S1GC51_RF_AVG_B1 part 2/2. Populate

WITH "DT_node_lookup_10" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.635791301727295) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.7129993438720703) THEN 2 ELSE 3 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.349178671836853) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -1.0801427364349365) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -1.2143871784210205) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.2431742399930954) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.5142303705215454) THEN 9 ELSE 10 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.789582371711731) THEN 12 ELSE 13 END END ELSE 14 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -1.5181928873062134) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -1.5474199056625366) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.6049727201461792) THEN 18 ELSE 19 END ELSE 20 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.778099536895752) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.5656808018684387) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.207402229309082) THEN 24 ELSE 25 END ELSE 26 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.7340636253356934) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.2718521058559418) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -1.1872327327728271) THEN 30 ELSE 31 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.20964401960372925) THEN 33 ELSE 34 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.054462283849716187) THEN 36 ELSE 37 END END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 1.6818325519561768) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.12355756759643555) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -1.093891978263855) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 1.3508367538452148) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -1.3772780895233154) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.7473860383033752) THEN 44 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -1.5924274921417236) THEN 46 ELSE 47 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.3301943242549896) THEN 49 ELSE 50 END END ELSE 51 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.4411488473415375) THEN 53 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.8798036575317383) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.618596076965332) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.6530574560165405) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.7733036279678345) THEN 58 ELSE 59 END ELSE 60 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.33300188183784485) THEN 62 ELSE 63 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 1.5360115766525269) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -1.084018588066101) THEN 66 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.1689203679561615) THEN 68 ELSE 69 END END ELSE 70 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.8606774806976318) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.178368330001831) THEN 73 ELSE 74 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.12828844785690308) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.013599991798400879) THEN 77 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.06744769215583801) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.8666970729827881) THEN 80 ELSE 81 END ELSE 82 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.6308040618896484) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.8211001753807068) THEN 85 ELSE 86 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.2843315601348877) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.18565069139003754) THEN 89 ELSE 90 END ELSE 91 END END END END END ELSE 92 END END END AS node_id_2 
FROM "TMP_20180329232413_8K8D0N_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_10" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, 1 AS parent_id, 0.38342473185592096 AS "Estimator" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, 1 AS parent_id, 0.3751675659770648 AS "Estimator" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 8 AS parent_id, 1.5359670902044162 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 8 AS parent_id, 1.5278745466047203 AS "Estimator" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 11 AS parent_id, 1.570583991203967 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 11 AS parent_id, 1.5696790399866454 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 6 AS parent_id, 1.4518609404362353 AS "Estimator" UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 17 AS parent_id, 1.1610071359052208 AS "Estimator" UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 17 AS parent_id, 1.1440564349145939 AS "Estimator" UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 16 AS parent_id, 1.1156147639563705 AS "Estimator" UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, 23 AS parent_id, 1.1409162524546155 AS "Estimator" UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, 23 AS parent_id, 1.1577860434316234 AS "Estimator" UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 22 AS parent_id, 1.1063441203172228 AS "Estimator" UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 29 AS parent_id, 1.410743936534041 AS "Estimator" UNION ALL SELECT 31 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 29 AS parent_id, 1.496561917506885 AS "Estimator" UNION ALL SELECT 33 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 32 AS parent_id, 1.3678941404936502 AS "Estimator" UNION ALL SELECT 34 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 32 AS parent_id, 1.3844945172080796 AS "Estimator" UNION ALL SELECT 36 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 7 AS depth, 35 AS parent_id, 1.2791824090500283 AS "Estimator" UNION ALL SELECT 37 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, 35 AS parent_id, 1.26722341655496 AS "Estimator" UNION ALL SELECT 44 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 43 AS parent_id, 1.5543288470291443 AS "Estimator" UNION ALL SELECT 46 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 9 AS depth, 45 AS parent_id, 1.5684866939082733 AS "Estimator" UNION ALL SELECT 47 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 9 AS depth, 45 AS parent_id, 1.5644828244076103 AS "Estimator" UNION ALL SELECT 49 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 48 AS parent_id, 1.5623228105763816 AS "Estimator" UNION ALL SELECT 50 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 48 AS parent_id, 1.556101969927248 AS "Estimator" UNION ALL SELECT 51 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 41 AS parent_id, 1.536711230505171 AS "Estimator" UNION ALL SELECT 53 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 52 AS parent_id, 1.477951453333812 AS "Estimator" UNION ALL SELECT 58 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 10 AS depth, 57 AS parent_id, 1.534059281886407 AS "Estimator" UNION ALL SELECT 59 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 10 AS depth, 57 AS parent_id, 1.5318155845359613 AS "Estimator" UNION ALL SELECT 60 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 9 AS depth, 56 AS parent_id, 1.5278956973377713 AS "Estimator" UNION ALL SELECT 62 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 9 AS depth, 61 AS parent_id, 1.5248539791622286 AS "Estimator" UNION ALL SELECT 63 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 9 AS depth, 61 AS parent_id, 1.5220836338497605 AS "Estimator" UNION ALL SELECT 66 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 9 AS depth, 65 AS parent_id, 1.5309500463495263 AS "Estimator" UNION ALL SELECT 68 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 10 AS depth, 67 AS parent_id, 1.5352537026948319 AS "Estimator" UNION ALL SELECT 69 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 10 AS depth, 67 AS parent_id, 1.5374002322115805 AS "Estimator" UNION ALL SELECT 70 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 64 AS parent_id, 1.5437502494470967 AS "Estimator" UNION ALL SELECT 73 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 72 AS parent_id, 1.341344197483337 AS "Estimator" UNION ALL SELECT 74 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 72 AS parent_id, 1.3463614795691619 AS "Estimator" UNION ALL SELECT 77 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, 76 AS parent_id, 1.3498429932286293 AS "Estimator" UNION ALL SELECT 80 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 9 AS depth, 79 AS parent_id, 1.4642487267988717 AS "Estimator" UNION ALL SELECT 81 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 9 AS depth, 79 AS parent_id, 1.4670826204003844 AS "Estimator" UNION ALL SELECT 82 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 78 AS parent_id, 1.4783281269798374 AS "Estimator" UNION ALL SELECT 85 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 84 AS parent_id, 1.484710993001392 AS "Estimator" UNION ALL SELECT 86 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 84 AS parent_id, 1.4771263961886636 AS "Estimator" UNION ALL SELECT 89 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 9 AS depth, 88 AS parent_id, 1.4860572646626233 AS "Estimator" UNION ALL SELECT 90 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 9 AS depth, 88 AS parent_id, 1.4932233184960249 AS "Estimator" UNION ALL SELECT 91 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 8 AS depth, 87 AS parent_id, 1.5030154473906143 AS "Estimator" UNION ALL SELECT 92 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 38 AS parent_id, 1.0818920012987259 AS "Estimator") AS "Values"), 
"DT_Output_10" AS 
(SELECT "DT_node_lookup_10"."KEY" AS "KEY", "DT_node_lookup_10".node_id_2 AS node_id_2, "DT_node_data_10".node_id AS node_id, "DT_node_data_10".feature AS feature, "DT_node_data_10".threshold AS threshold, "DT_node_data_10".count AS count, "DT_node_data_10".depth AS depth, "DT_node_data_10".parent_id AS parent_id, "DT_node_data_10"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_10" LEFT OUTER JOIN "DT_node_data_10" ON "DT_node_lookup_10".node_id_2 = "DT_node_data_10".node_id), 
"RF_Tree_10" AS 
(SELECT "DT_Output_10"."KEY" AS "KEY", "DT_Output_10"."Estimator" AS "Estimator" 
FROM "DT_Output_10"), 
"DT_node_lookup_11" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.6865601539611816) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.15695497393608093) THEN 2 ELSE 3 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.9838693141937256) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.9540339708328247) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.4776207208633423) THEN 7 ELSE 8 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.2286939173936844) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.3915177583694458) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.3508930206298828) THEN 12 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 1.1446197032928467) THEN 14 ELSE 15 END END ELSE 16 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -1.2885634899139404) THEN 18 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.4061509072780609) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.6646462082862854) THEN 21 ELSE 22 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.3216150999069214) THEN 24 ELSE 25 END END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.794666051864624) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.3589157462120056) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.767800509929657) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.12875013053417206) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -1.5464340448379517) THEN 31 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 1.1353956460952759) THEN 33 ELSE 34 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -1.3772780895233154) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.25875338912010193) THEN 37 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.5515946745872498) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -1.1564879417419434) THEN 40 ELSE 41 END ELSE 42 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.8681399822235107) THEN 44 ELSE 45 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.3992994725704193) THEN 47 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.48682039976119995) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.2300962656736374) THEN 50 ELSE 51 END ELSE 52 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.17564557492733002) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -1.2677711248397827) THEN 55 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.06708177924156189) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 1.1704736948013306) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.3393515348434448) THEN 59 ELSE 60 END ELSE 61 END ELSE 62 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.5779826641082764) THEN 64 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.5117313861846924) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.19583165645599365) THEN 67 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.4345567524433136) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 1.5382840633392334) THEN 70 ELSE 71 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.13620395958423615) THEN 73 ELSE 74 END END END ELSE 75 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.37791889905929565) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.7887826561927795) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.49538496136665344) THEN 79 ELSE 80 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -1.5442689657211304) THEN 82 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 1.5820972919464111) THEN 84 ELSE 85 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.98177170753479) THEN 87 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 1.348581314086914) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.9958111047744751) THEN 90 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.38377708196640015) THEN 92 ELSE 93 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.4850558042526245) THEN 95 ELSE 96 END END END END END END END AS node_id_2 
FROM "TMP_20180329232413_8K8D0N_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_11" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, 1 AS parent_id, 0.38342473185592096 AS "Estimator" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, 1 AS parent_id, 0.4848669214064692 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 6 AS parent_id, 0.8079109230317987 AS "Estimator" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 6 AS parent_id, 0.7050714675464733 AS "Estimator" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 11 AS parent_id, 1.1409162524546155 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, 13 AS parent_id, 1.1082904037450438 AS "Estimator" UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, 13 AS parent_id, 1.1063441203172228 AS "Estimator" UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 10 AS parent_id, 1.1968265037681187 AS "Estimator" UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 17 AS parent_id, 1.536711230505171 AS "Estimator" UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, 20 AS parent_id, 1.3687175770364277 AS "Estimator" UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, 20 AS parent_id, 1.4092998433520778 AS "Estimator" UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, 23 AS parent_id, 1.341344197483337 AS "Estimator" UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, 23 AS parent_id, 1.314325621172093 AS "Estimator" UNION ALL SELECT 31 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, 30 AS parent_id, 1.5359670902044165 AS "Estimator" UNION ALL SELECT 33 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 32 AS parent_id, 1.5543288470291443 AS "Estimator" UNION ALL SELECT 34 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 32 AS parent_id, 1.54561918356505 AS "Estimator" UNION ALL SELECT 37 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 36 AS parent_id, 1.5642723241110825 AS "Estimator" UNION ALL SELECT 40 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 10 AS depth, 39 AS parent_id, 1.5696790399866452 AS "Estimator" UNION ALL SELECT 41 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 10 AS depth, 39 AS parent_id, 1.570583991203967 AS "Estimator" UNION ALL SELECT 42 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 9 AS depth, 38 AS parent_id, 1.5684866939082733 AS "Estimator" UNION ALL SELECT 44 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 43 AS parent_id, 1.556101969927248 AS "Estimator" UNION ALL SELECT 45 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 43 AS parent_id, 1.5623228105763816 AS "Estimator" UNION ALL SELECT 47 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 46 AS parent_id, 1.499027385598966 AS "Estimator" UNION ALL SELECT 50 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 49 AS parent_id, 1.5248539791622286 AS "Estimator" UNION ALL SELECT 51 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 49 AS parent_id, 1.5278956973377713 AS "Estimator" UNION ALL SELECT 52 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, 48 AS parent_id, 1.5352537026948319 AS "Estimator" UNION ALL SELECT 55 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 54 AS parent_id, 1.3844945172080796 AS "Estimator" UNION ALL SELECT 59 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 9 AS depth, 58 AS parent_id, 1.4872578515104244 AS "Estimator" UNION ALL SELECT 60 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 9 AS depth, 58 AS parent_id, 1.4929217934494698 AS "Estimator" UNION ALL SELECT 61 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 57 AS parent_id, 1.4608890093126605 AS "Estimator" UNION ALL SELECT 62 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, 56 AS parent_id, 1.4251802174855326 AS "Estimator" UNION ALL SELECT 64 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 63 AS parent_id, 1.4771263961886638 AS "Estimator" UNION ALL SELECT 67 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 66 AS parent_id, 1.5325692862833142 AS "Estimator" UNION ALL SELECT 70 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 10 AS depth, 69 AS parent_id, 1.5126619620701551 AS "Estimator" UNION ALL SELECT 71 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 10 AS depth, 69 AS parent_id, 1.50778906671016 AS "Estimator" UNION ALL SELECT 73 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 10 AS depth, 72 AS parent_id, 1.521953836916557 AS "Estimator" UNION ALL SELECT 74 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 10 AS depth, 72 AS parent_id, 1.521297715153797 AS "Estimator" UNION ALL SELECT 75 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, 65 AS parent_id, 1.484710993001392 AS "Estimator" UNION ALL SELECT 79 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 78 AS parent_id, 1.076547084481779 AS "Estimator" UNION ALL SELECT 80 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 78 AS parent_id, 1.0274843519223331 AS "Estimator" UNION ALL SELECT 82 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 81 AS parent_id, 1.1440564349145939 AS "Estimator" UNION ALL SELECT 84 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 7 AS depth, 83 AS parent_id, 1.2791824090500283 AS "Estimator" UNION ALL SELECT 85 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, 83 AS parent_id, 1.1577860434316234 AS "Estimator" UNION ALL SELECT 87 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 86 AS parent_id, 1.3463614795691619 AS "Estimator" UNION ALL SELECT 90 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, 89 AS parent_id, 1.4783281269798374 AS "Estimator" UNION ALL SELECT 92 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 91 AS parent_id, 1.4719390289797578 AS "Estimator" UNION ALL SELECT 93 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 91 AS parent_id, 1.4670826204003844 AS "Estimator" UNION ALL SELECT 95 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, 94 AS parent_id, 1.5099001489420028 AS "Estimator" UNION ALL SELECT 96 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, 94 AS parent_id, 1.4949662645575934 AS "Estimator") AS "Values"), 
"DT_Output_11" AS 
(SELECT "DT_node_lookup_11"."KEY" AS "KEY", "DT_node_lookup_11".node_id_2 AS node_id_2, "DT_node_data_11".node_id AS node_id, "DT_node_data_11".feature AS feature, "DT_node_data_11".threshold AS threshold, "DT_node_data_11".count AS count, "DT_node_data_11".depth AS depth, "DT_node_data_11".parent_id AS parent_id, "DT_node_data_11"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_11" LEFT OUTER JOIN "DT_node_data_11" ON "DT_node_lookup_11".node_id_2 = "DT_node_data_11".node_id), 
"RF_Tree_11" AS 
(SELECT "DT_Output_11"."KEY" AS "KEY", "DT_Output_11"."Estimator" AS "Estimator" 
FROM "DT_Output_11"), 
"DT_node_lookup_12" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.481613039970398) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.8041043281555176) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -1.084075689315796) THEN 3 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.3028857707977295) THEN 5 ELSE 6 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.03826737403869629) THEN 8 ELSE 9 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.6816338896751404) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -1.2677711248397827) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.5453606247901917) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.0005476325750350952) THEN 14 ELSE 15 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.8441102504730225) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.019264429807662964) THEN 18 ELSE 19 END ELSE 20 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.089585781097412) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.4348924160003662) THEN 23 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.5445553064346313) THEN 25 ELSE 26 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.2323714792728424) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -1.3878793716430664) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -1.5924274921417236) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -1.6458981037139893) THEN 31 ELSE 32 END ELSE 33 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.6497811675071716) THEN 35 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.824860692024231) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.8880466222763062) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.4927690029144287) THEN 39 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.9824926853179932) THEN 41 ELSE 42 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 1.0105068683624268) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.6530574560165405) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.2228761911392212) THEN 46 ELSE 47 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.2913513779640198) THEN 49 ELSE 50 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.4644240736961365) THEN 52 ELSE 53 END END END ELSE 54 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.2424946278333664) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.16309745609760284) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 1.1107220649719238) THEN 58 ELSE 59 END ELSE 60 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -1.2412680387496948) THEN 62 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.7400449514389038) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.824400007724762) THEN 65 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.5260942578315735) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.13736221194267273) THEN 68 ELSE 69 END ELSE 70 END END ELSE 71 END END END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.13986742496490479) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.8137871026992798) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.7887826561927795) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.6485701203346252) THEN 76 ELSE 77 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.71490478515625) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.7117037177085876) THEN 80 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.9774898290634155) THEN 82 ELSE 83 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -1.5442689657211304) THEN 85 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.3170507252216339) THEN 87 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.054462283849716187) THEN 89 ELSE 90 END END END END END ELSE 91 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.1691150963306427) THEN 93 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 1.5450408458709717) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.8601921200752258) THEN 96 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 1.5410325527191162) THEN 98 ELSE 99 END END ELSE 100 END END END END END AS node_id_2 
FROM "TMP_20180329232413_8K8D0N_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_12" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, 0.8079109230317987 AS "Estimator" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 4 AS parent_id, 0.4848669214064692 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 4 AS parent_id, 0.3751675659770648 AS "Estimator" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 7 AS parent_id, 1.4092998433520778 AS "Estimator" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 7 AS parent_id, 1.1409162524546155 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 13 AS parent_id, 1.1156147639563705 AS "Estimator" UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 13 AS parent_id, 1.1610071359052208 AS "Estimator" UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 17 AS parent_id, 1.5359670902044162 AS "Estimator" UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 17 AS parent_id, 1.4518609404362353 AS "Estimator" UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 16 AS parent_id, 1.3844945172080798 AS "Estimator" UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 22 AS parent_id, 1.3687175770364277 AS "Estimator" UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 24 AS parent_id, 1.341344197483337 AS "Estimator" UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 24 AS parent_id, 1.314325621172093 AS "Estimator" UNION ALL SELECT 31 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 30 AS parent_id, 1.570583991203967 AS "Estimator" UNION ALL SELECT 32 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 30 AS parent_id, 1.5684866939082733 AS "Estimator" UNION ALL SELECT 33 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 7 AS depth, 29 AS parent_id, 1.5644407243483047 AS "Estimator" UNION ALL SELECT 35 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, 34 AS parent_id, 1.477951453333812 AS "Estimator" UNION ALL SELECT 39 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 10 AS depth, 38 AS parent_id, 1.5278745466047203 AS "Estimator" UNION ALL SELECT 41 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 11 AS depth, 40 AS parent_id, 1.541589567106448 AS "Estimator" UNION ALL SELECT 42 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 11 AS depth, 40 AS parent_id, 1.54561918356505 AS "Estimator" UNION ALL SELECT 46 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 12 AS depth, 45 AS parent_id, 1.5318155845359613 AS "Estimator" UNION ALL SELECT 47 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 12 AS depth, 45 AS parent_id, 1.534059281886407 AS "Estimator" UNION ALL SELECT 49 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 12 AS depth, 48 AS parent_id, 1.5278069347948546 AS "Estimator" UNION ALL SELECT 50 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 12 AS depth, 48 AS parent_id, 1.5248539791622286 AS "Estimator" UNION ALL SELECT 52 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 11 AS depth, 51 AS parent_id, 1.5440465088777178 AS "Estimator" UNION ALL SELECT 53 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 11 AS depth, 51 AS parent_id, 1.5325692862833142 AS "Estimator" UNION ALL SELECT 54 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 36 AS parent_id, 1.499027385598966 AS "Estimator" UNION ALL SELECT 58 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 57 AS parent_id, 1.4642487267988717 AS "Estimator" UNION ALL SELECT 59 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 57 AS parent_id, 1.4608890093126605 AS "Estimator" UNION ALL SELECT 60 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, 56 AS parent_id, 1.4251802174855326 AS "Estimator" UNION ALL SELECT 62 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, 61 AS parent_id, 1.521297715153797 AS "Estimator" UNION ALL SELECT 65 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 9 AS depth, 64 AS parent_id, 1.484710993001392 AS "Estimator" UNION ALL SELECT 68 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 11 AS depth, 67 AS parent_id, 1.50778906671016 AS "Estimator" UNION ALL SELECT 69 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 11 AS depth, 67 AS parent_id, 1.5126619620701551 AS "Estimator" UNION ALL SELECT 70 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 10 AS depth, 66 AS parent_id, 1.5032073896269296 AS "Estimator" UNION ALL SELECT 71 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 63 AS parent_id, 1.4771263961886638 AS "Estimator" UNION ALL SELECT 76 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 75 AS parent_id, 1.076547084481779 AS "Estimator" UNION ALL SELECT 77 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 75 AS parent_id, 1.0818920012987259 AS "Estimator" UNION ALL SELECT 80 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, 79 AS parent_id, 1.1082904037450438 AS "Estimator" UNION ALL SELECT 82 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 81 AS parent_id, 1.1968265037681187 AS "Estimator" UNION ALL SELECT 83 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 81 AS parent_id, 1.1577860434316234 AS "Estimator" UNION ALL SELECT 85 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, 84 AS parent_id, 1.1440564349145939 AS "Estimator" UNION ALL SELECT 87 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 86 AS parent_id, 1.3498429932286293 AS "Estimator" UNION ALL SELECT 89 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 9 AS depth, 88 AS parent_id, 1.2791824090500283 AS "Estimator" UNION ALL SELECT 90 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 9 AS depth, 88 AS parent_id, 1.26722341655496 AS "Estimator" UNION ALL SELECT 91 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 73 AS parent_id, 1.4670826204003844 AS "Estimator" UNION ALL SELECT 93 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 92 AS parent_id, 1.3463614795691619 AS "Estimator" UNION ALL SELECT 96 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 95 AS parent_id, 1.4860572646626233 AS "Estimator" UNION ALL SELECT 98 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, 97 AS parent_id, 1.4932233184960249 AS "Estimator" UNION ALL SELECT 99 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, 97 AS parent_id, 1.4949662645575934 AS "Estimator" UNION ALL SELECT 100 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 94 AS parent_id, 1.5099001489420028 AS "Estimator") AS "Values"), 
"DT_Output_12" AS 
(SELECT "DT_node_lookup_12"."KEY" AS "KEY", "DT_node_lookup_12".node_id_2 AS node_id_2, "DT_node_data_12".node_id AS node_id, "DT_node_data_12".feature AS feature, "DT_node_data_12".threshold AS threshold, "DT_node_data_12".count AS count, "DT_node_data_12".depth AS depth, "DT_node_data_12".parent_id AS parent_id, "DT_node_data_12"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_12" LEFT OUTER JOIN "DT_node_data_12" ON "DT_node_lookup_12".node_id_2 = "DT_node_data_12".node_id), 
"RF_Tree_12" AS 
(SELECT "DT_Output_12"."KEY" AS "KEY", "DT_Output_12"."Estimator" AS "Estimator" 
FROM "DT_Output_12"), 
"DT_node_lookup_13" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.143561840057373) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.8041043281555176) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.8493432998657227) THEN 3 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.6696741580963135) THEN 5 ELSE 6 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.7431707382202148) THEN 8 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.6330329775810242) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.4138727188110352) THEN 11 ELSE 12 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 1.341475486755371) THEN 14 ELSE 15 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 1.7969666719436646) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.4017176032066345) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.09435927867889404) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.6898519992828369) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.8725265860557556) THEN 21 ELSE 22 END ELSE 23 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.027333766222000122) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.24834014475345612) THEN 26 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.8350425958633423) THEN 28 ELSE 29 END END ELSE 30 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -1.7070884704589844) THEN 32 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.2821004390716553) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 1.0815918445587158) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -1.2143871784210205) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.8157296776771545) THEN 37 ELSE 38 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -1.0853807926177979) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 1.1671010255813599) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 1.1115307807922363) THEN 42 ELSE 43 END ELSE 44 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.16916202008724213) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.6868596076965332) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.14239919185638428) THEN 48 ELSE 49 END ELSE 50 END ELSE 51 END END END ELSE 52 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.1812210977077484) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -1.19354248046875) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -1.3772780895233154) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -1.5924274921417236) THEN 57 ELSE 58 END ELSE 59 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.27108654379844666) THEN 61 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.35247907042503357) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.7820532917976379) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.46865326166152954) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.9682332277297974) THEN 66 ELSE 67 END ELSE 68 END ELSE 69 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.38614708185195923) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.7666403651237488) THEN 72 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.5970724821090698) THEN 74 ELSE 75 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.7140008211135864) THEN 77 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 1.3170108795166016) THEN 79 ELSE 80 END END END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.6569288969039917) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.6813516616821289) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.3486781120300293) THEN 84 ELSE 85 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.7148919701576233) THEN 87 ELSE 88 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.4850558042526245) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -1.1136035919189453) THEN 91 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.8816165924072266) THEN 93 ELSE 94 END END ELSE 95 END END END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 1.9923570156097412) THEN 97 ELSE 98 END END END AS node_id_2 
FROM "TMP_20180329232413_8K8D0N_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_13" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, 0.8079109230317987 AS "Estimator" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 4 AS parent_id, 0.4848669214064692 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 4 AS parent_id, 0.3751675659770648 AS "Estimator" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 7 AS parent_id, 0.6100168381304848 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 10 AS parent_id, 1.1409162524546155 AS "Estimator" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 10 AS parent_id, 1.0818920012987259 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 13 AS parent_id, 1.350090108150775 AS "Estimator" UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 13 AS parent_id, 1.4092998433520778 AS "Estimator" UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 20 AS parent_id, 1.536711230505171 AS "Estimator" UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 20 AS parent_id, 1.5359670902044162 AS "Estimator" UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 19 AS parent_id, 1.4251802174855326 AS "Estimator" UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 25 AS parent_id, 1.1156147639563705 AS "Estimator" UNION ALL SELECT 28 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, 27 AS parent_id, 1.1082904037450438 AS "Estimator" UNION ALL SELECT 29 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, 27 AS parent_id, 1.1063441203172228 AS "Estimator" UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 24 AS parent_id, 1.3463614795691619 AS "Estimator" UNION ALL SELECT 32 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 31 AS parent_id, 1.1610071359052208 AS "Estimator" UNION ALL SELECT 37 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 36 AS parent_id, 1.5278745466047203 AS "Estimator" UNION ALL SELECT 38 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 36 AS parent_id, 1.5696790399866454 AS "Estimator" UNION ALL SELECT 42 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 10 AS depth, 41 AS parent_id, 1.4518609404362353 AS "Estimator" UNION ALL SELECT 43 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 10 AS depth, 41 AS parent_id, 1.4608890093126605 AS "Estimator" UNION ALL SELECT 44 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 9 AS depth, 40 AS parent_id, 1.3844945172080796 AS "Estimator" UNION ALL SELECT 48 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 11 AS depth, 47 AS parent_id, 1.496561917506885 AS "Estimator" UNION ALL SELECT 49 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 11 AS depth, 47 AS parent_id, 1.499027385598966 AS "Estimator" UNION ALL SELECT 50 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 10 AS depth, 46 AS parent_id, 1.4872578515104244 AS "Estimator" UNION ALL SELECT 51 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 9 AS depth, 45 AS parent_id, 1.4642487267988717 AS "Estimator" UNION ALL SELECT 52 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 34 AS parent_id, 1.2794872288206998 AS "Estimator" UNION ALL SELECT 57 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 9 AS depth, 56 AS parent_id, 1.5684866939082733 AS "Estimator" UNION ALL SELECT 58 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 9 AS depth, 56 AS parent_id, 1.5644407243483047 AS "Estimator" UNION ALL SELECT 59 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 55 AS parent_id, 1.556101969927248 AS "Estimator" UNION ALL SELECT 61 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 60 AS parent_id, 1.50778906671016 AS "Estimator" UNION ALL SELECT 66 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 12 AS depth, 65 AS parent_id, 1.5318155845359613 AS "Estimator" UNION ALL SELECT 67 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 12 AS depth, 65 AS parent_id, 1.5325692862833142 AS "Estimator" UNION ALL SELECT 68 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 11 AS depth, 64 AS parent_id, 1.527629409709021 AS "Estimator" UNION ALL SELECT 69 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 10 AS depth, 63 AS parent_id, 1.5216942430501499 AS "Estimator" UNION ALL SELECT 72 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 11 AS depth, 71 AS parent_id, 1.541589567106448 AS "Estimator" UNION ALL SELECT 74 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 12 AS depth, 73 AS parent_id, 1.54561918356505 AS "Estimator" UNION ALL SELECT 75 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 12 AS depth, 73 AS parent_id, 1.5440465088777178 AS "Estimator" UNION ALL SELECT 77 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 11 AS depth, 76 AS parent_id, 1.5248539791622286 AS "Estimator" UNION ALL SELECT 79 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 12 AS depth, 78 AS parent_id, 1.5437502494470967 AS "Estimator" UNION ALL SELECT 80 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 12 AS depth, 78 AS parent_id, 1.5374002322115805 AS "Estimator" UNION ALL SELECT 84 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 9 AS depth, 83 AS parent_id, 1.4860572646626233 AS "Estimator" UNION ALL SELECT 85 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 9 AS depth, 83 AS parent_id, 1.484710993001392 AS "Estimator" UNION ALL SELECT 87 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 9 AS depth, 86 AS parent_id, 1.5028235051542993 AS "Estimator" UNION ALL SELECT 88 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 9 AS depth, 86 AS parent_id, 1.4929217934494698 AS "Estimator" UNION ALL SELECT 91 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 9 AS depth, 90 AS parent_id, 1.5032073896269296 AS "Estimator" UNION ALL SELECT 93 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 10 AS depth, 92 AS parent_id, 1.5126619620701554 AS "Estimator" UNION ALL SELECT 94 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 10 AS depth, 92 AS parent_id, 1.5099001489420028 AS "Estimator" UNION ALL SELECT 95 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 89 AS parent_id, 1.4949662645575934 AS "Estimator" UNION ALL SELECT 97 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 96 AS parent_id, 1.076547084481779 AS "Estimator" UNION ALL SELECT 98 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 96 AS parent_id, 1.0274843519223331 AS "Estimator") AS "Values"), 
"DT_Output_13" AS 
(SELECT "DT_node_lookup_13"."KEY" AS "KEY", "DT_node_lookup_13".node_id_2 AS node_id_2, "DT_node_data_13".node_id AS node_id, "DT_node_data_13".feature AS feature, "DT_node_data_13".threshold AS threshold, "DT_node_data_13".count AS count, "DT_node_data_13".depth AS depth, "DT_node_data_13".parent_id AS parent_id, "DT_node_data_13"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_13" LEFT OUTER JOIN "DT_node_data_13" ON "DT_node_lookup_13".node_id_2 = "DT_node_data_13".node_id), 
"RF_Tree_13" AS 
(SELECT "DT_Output_13"."KEY" AS "KEY", "DT_Output_13"."Estimator" AS "Estimator" 
FROM "DT_Output_13"), 
"DT_node_lookup_14" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.360541820526123) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.6261364221572876) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -1.1455585956573486) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.7836979031562805) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -1.1316540241241455) THEN 7 ELSE 8 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.14987096190452576) THEN 10 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.2956656813621521) THEN 12 ELSE 13 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.84055495262146) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -1.4988391399383545) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.5780203938484192) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.0012792721390724182) THEN 18 ELSE 19 END ELSE 20 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.1697484254837036) THEN 22 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -1.5956872701644897) THEN 24 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -1.113467812538147) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.3577289581298828) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 1.1037616729736328) THEN 28 ELSE 29 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.5843943953514099) THEN 31 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.13226787745952606) THEN 33 ELSE 34 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -1.0853807926177979) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.5289925336837769) THEN 37 ELSE 38 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.1151762306690216) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.5055505037307739) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.14239919185638428) THEN 42 ELSE 43 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.45119088888168335) THEN 45 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.7618807554244995) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.19583165645599365) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.15304246544837952) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.05914175510406494) THEN 50 ELSE 51 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.4673061966896057) THEN 53 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.9682332277297974) THEN 55 ELSE 56 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.35755085945129395) THEN 58 ELSE 59 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.06669343262910843) THEN 61 ELSE 62 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.7400449514389038) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.5117313861846924) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -1.1172293424606323) THEN 66 ELSE 67 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.6308040618896484) THEN 69 ELSE 70 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 1.26242196559906) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.7074878811836243) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.369677871465683) THEN 74 ELSE 75 END ELSE 76 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.6813516616821289) THEN 78 ELSE 79 END END END END END END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.2100047916173935) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.8670860528945923) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 1.656989336013794) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -1.5442689657211304) THEN 84 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.054462283849716187) THEN 86 ELSE 87 END END ELSE 88 END ELSE 89 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.6569682359695435) THEN 91 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 1.2354365587234497) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 1.2662007808685303) THEN 94 ELSE 95 END ELSE 96 END END END END END AS node_id_2 
FROM "TMP_20180329232413_8K8D0N_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_14" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, 1.4092998433520778 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, 1.1409162524546155 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 6 AS parent_id, 0.7050714675464733 AS "Estimator" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 6 AS parent_id, 0.8079109230317987 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 9 AS parent_id, 0.4848669214064692 AS "Estimator" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 11 AS parent_id, 0.3751675659770648 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 11 AS parent_id, 0.38342473185592096 AS "Estimator" UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 17 AS parent_id, 1.1610071359052208 AS "Estimator" UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 17 AS parent_id, 1.1156147639563705 AS "Estimator" UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 16 AS parent_id, 1.5359670902044162 AS "Estimator" UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 21 AS parent_id, 1.314325621172093 AS "Estimator" UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 23 AS parent_id, 1.3678941404936502 AS "Estimator" UNION ALL SELECT 28 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 27 AS parent_id, 1.5278745466047203 AS "Estimator" UNION ALL SELECT 29 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 27 AS parent_id, 1.536711230505171 AS "Estimator" UNION ALL SELECT 31 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 30 AS parent_id, 1.5696790399866454 AS "Estimator" UNION ALL SELECT 33 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 9 AS depth, 32 AS parent_id, 1.5646091245855271 AS "Estimator" UNION ALL SELECT 34 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 9 AS depth, 32 AS parent_id, 1.5623228105763816 AS "Estimator" UNION ALL SELECT 37 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 36 AS parent_id, 1.410743936534041 AS "Estimator" UNION ALL SELECT 38 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 36 AS parent_id, 1.4608890093126605 AS "Estimator" UNION ALL SELECT 42 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 10 AS depth, 41 AS parent_id, 1.496561917506885 AS "Estimator" UNION ALL SELECT 43 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 10 AS depth, 41 AS parent_id, 1.499027385598966 AS "Estimator" UNION ALL SELECT 45 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 10 AS depth, 44 AS parent_id, 1.477951453333812 AS "Estimator" UNION ALL SELECT 50 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 14 AS depth, 49 AS parent_id, 1.534059281886407 AS "Estimator" UNION ALL SELECT 51 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 14 AS depth, 49 AS parent_id, 1.5352537026948319 AS "Estimator" UNION ALL SELECT 53 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 14 AS depth, 52 AS parent_id, 1.5278069347948546 AS "Estimator" UNION ALL SELECT 55 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 15 AS depth, 54 AS parent_id, 1.5318155845359613 AS "Estimator" UNION ALL SELECT 56 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 15 AS depth, 54 AS parent_id, 1.5325692862833142 AS "Estimator" UNION ALL SELECT 58 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 13 AS depth, 57 AS parent_id, 1.5309500463495263 AS "Estimator" UNION ALL SELECT 59 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 13 AS depth, 57 AS parent_id, 1.5216942430501499 AS "Estimator" UNION ALL SELECT 61 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 12 AS depth, 60 AS parent_id, 1.543849002590637 AS "Estimator" UNION ALL SELECT 62 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 12 AS depth, 60 AS parent_id, 1.5374002322115805 AS "Estimator" UNION ALL SELECT 66 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 11 AS depth, 65 AS parent_id, 1.521297715153797 AS "Estimator" UNION ALL SELECT 67 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 11 AS depth, 65 AS parent_id, 1.5126619620701551 AS "Estimator" UNION ALL SELECT 69 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 11 AS depth, 68 AS parent_id, 1.484710993001392 AS "Estimator" UNION ALL SELECT 70 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 11 AS depth, 68 AS parent_id, 1.5032073896269296 AS "Estimator" UNION ALL SELECT 74 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 12 AS depth, 73 AS parent_id, 1.467648677980467 AS "Estimator" UNION ALL SELECT 75 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 12 AS depth, 73 AS parent_id, 1.4642487267988717 AS "Estimator" UNION ALL SELECT 76 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 11 AS depth, 72 AS parent_id, 1.4771263961886636 AS "Estimator" UNION ALL SELECT 78 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 11 AS depth, 77 AS parent_id, 1.4860572646626233 AS "Estimator" UNION ALL SELECT 79 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 11 AS depth, 77 AS parent_id, 1.4929217934494698 AS "Estimator" UNION ALL SELECT 84 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 83 AS parent_id, 1.1440564349145939 AS "Estimator" UNION ALL SELECT 86 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 7 AS depth, 85 AS parent_id, 1.2791824090500283 AS "Estimator" UNION ALL SELECT 87 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, 85 AS parent_id, 1.26722341655496 AS "Estimator" UNION ALL SELECT 88 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 82 AS parent_id, 1.076547084481779 AS "Estimator" UNION ALL SELECT 89 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 81 AS parent_id, 1.1082904037450438 AS "Estimator" UNION ALL SELECT 91 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 90 AS parent_id, 1.3463614795691619 AS "Estimator" UNION ALL SELECT 94 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 93 AS parent_id, 1.4949662645575934 AS "Estimator" UNION ALL SELECT 95 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 93 AS parent_id, 1.5028235051542993 AS "Estimator" UNION ALL SELECT 96 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 92 AS parent_id, 1.4719390289797578 AS "Estimator") AS "Values"), 
"DT_Output_14" AS 
(SELECT "DT_node_lookup_14"."KEY" AS "KEY", "DT_node_lookup_14".node_id_2 AS node_id_2, "DT_node_data_14".node_id AS node_id, "DT_node_data_14".feature AS feature, "DT_node_data_14".threshold AS threshold, "DT_node_data_14".count AS count, "DT_node_data_14".depth AS depth, "DT_node_data_14".parent_id AS parent_id, "DT_node_data_14"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_14" LEFT OUTER JOIN "DT_node_data_14" ON "DT_node_lookup_14".node_id_2 = "DT_node_data_14".node_id), 
"RF_Tree_14" AS 
(SELECT "DT_Output_14"."KEY" AS "KEY", "DT_Output_14"."Estimator" AS "Estimator" 
FROM "DT_Output_14"), 
"DT_node_lookup_15" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.6865601539611816) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.6296412944793701) THEN 2 ELSE 3 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.778099536895752) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.2876416742801666) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.9788162112236023) THEN 7 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.08898759633302689) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.4480481743812561) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.7768212556838989) THEN 11 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.207402229309082) THEN 13 ELSE 14 END END ELSE 15 END ELSE 16 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.5215956568717957) THEN 18 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 1.038306474685669) THEN 20 ELSE 21 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 1.1021127700805664) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.15516799688339233) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -1.1985814571380615) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.5003117322921753) THEN 26 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -1.5924274921417236) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.5515946745872498) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -1.6768755912780762) THEN 30 ELSE 31 END ELSE 32 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -1.3720736503601074) THEN 34 ELSE 35 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.40595611929893494) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.8002640604972839) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.567314863204956) THEN 39 ELSE 40 END ELSE 41 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.013786762952804565) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.3807009756565094) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.6530574560165405) THEN 45 ELSE 46 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.7597028613090515) THEN 48 ELSE 49 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.9824926853179932) THEN 51 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 1.3609416484832764) THEN 53 ELSE 54 END END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -1.2677711248397827) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.7340636253356934) THEN 57 ELSE 58 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.07764141261577606) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.7572466135025024) THEN 61 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.0637848973274231) THEN 63 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 1.1107220649719238) THEN 65 ELSE 66 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.12907753884792328) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.49961674213409424) THEN 69 ELSE 70 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.22938552498817444) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 1.0078229904174805) THEN 73 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.029803797602653503) THEN 75 ELSE 76 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.7407480478286743) THEN 78 ELSE 79 END END END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.6523826718330383) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.2286546528339386) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 1.5415887832641602) THEN 83 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 1.9923570156097412) THEN 85 ELSE 86 END END ELSE 87 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.22499209642410278) THEN 89 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.026924937963485718) THEN 91 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 1.3073654174804688) THEN 93 ELSE 94 END END END END END END END AS node_id_2 
FROM "TMP_20180329232413_8K8D0N_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_15" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, 1 AS parent_id, 0.6100168381304848 AS "Estimator" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, 1 AS parent_id, 0.4848669214064692 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 6 AS parent_id, 0.7050714675464733 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, 10 AS parent_id, 1.1082904037450438 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 12 AS parent_id, 1.1409162524546155 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 12 AS parent_id, 1.1577860434316234 AS "Estimator" UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 9 AS parent_id, 1.1968265037681187 AS "Estimator" UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 8 AS parent_id, 1.0818920012987259 AS "Estimator" UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 17 AS parent_id, 1.536711230505171 AS "Estimator" UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 19 AS parent_id, 1.3463614795691619 AS "Estimator" UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 19 AS parent_id, 1.4092998433520778 AS "Estimator" UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 25 AS parent_id, 1.5359670902044162 AS "Estimator" UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 9 AS depth, 29 AS parent_id, 1.570583991203967 AS "Estimator" UNION ALL SELECT 31 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 9 AS depth, 29 AS parent_id, 1.5696790399866454 AS "Estimator" UNION ALL SELECT 32 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 28 AS parent_id, 1.5684866939082733 AS "Estimator" UNION ALL SELECT 34 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 8 AS depth, 33 AS parent_id, 1.5644968577607123 AS "Estimator" UNION ALL SELECT 35 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 33 AS parent_id, 1.5623228105763818 AS "Estimator" UNION ALL SELECT 39 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 38 AS parent_id, 1.496561917506885 AS "Estimator" UNION ALL SELECT 40 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 38 AS parent_id, 1.499027385598966 AS "Estimator" UNION ALL SELECT 41 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, 37 AS parent_id, 1.4518609404362353 AS "Estimator" UNION ALL SELECT 45 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 9 AS depth, 44 AS parent_id, 1.5318155845359616 AS "Estimator" UNION ALL SELECT 46 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 9 AS depth, 44 AS parent_id, 1.5278069347948546 AS "Estimator" UNION ALL SELECT 48 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 9 AS depth, 47 AS parent_id, 1.5325692862833142 AS "Estimator" UNION ALL SELECT 49 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 9 AS depth, 47 AS parent_id, 1.5352537026948319 AS "Estimator" UNION ALL SELECT 51 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 50 AS parent_id, 1.541589567106448 AS "Estimator" UNION ALL SELECT 53 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 9 AS depth, 52 AS parent_id, 1.5437502494470967 AS "Estimator" UNION ALL SELECT 54 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 9 AS depth, 52 AS parent_id, 1.54561918356505 AS "Estimator" UNION ALL SELECT 57 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 56 AS parent_id, 1.3844945172080796 AS "Estimator" UNION ALL SELECT 58 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 56 AS parent_id, 1.278877589279357 AS "Estimator" UNION ALL SELECT 61 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, 60 AS parent_id, 1.3678941404936502 AS "Estimator" UNION ALL SELECT 63 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 62 AS parent_id, 1.4251802174855326 AS "Estimator" UNION ALL SELECT 65 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 9 AS depth, 64 AS parent_id, 1.464248726798872 AS "Estimator" UNION ALL SELECT 66 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 9 AS depth, 64 AS parent_id, 1.4608890093126605 AS "Estimator" UNION ALL SELECT 69 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 68 AS parent_id, 1.5309500463495263 AS "Estimator" UNION ALL SELECT 70 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 68 AS parent_id, 1.5220836338497605 AS "Estimator" UNION ALL SELECT 73 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 9 AS depth, 72 AS parent_id, 1.484710993001392 AS "Estimator" UNION ALL SELECT 75 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 10 AS depth, 74 AS parent_id, 1.4771263961886638 AS "Estimator" UNION ALL SELECT 76 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 10 AS depth, 74 AS parent_id, 1.4719390289797578 AS "Estimator" UNION ALL SELECT 78 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 9 AS depth, 77 AS parent_id, 1.502951466645176 AS "Estimator" UNION ALL SELECT 79 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 9 AS depth, 77 AS parent_id, 1.4860572646626233 AS "Estimator" UNION ALL SELECT 83 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 82 AS parent_id, 1.1440564349145939 AS "Estimator" UNION ALL SELECT 85 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, 84 AS parent_id, 1.076547084481779 AS "Estimator" UNION ALL SELECT 86 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, 84 AS parent_id, 1.0274843519223331 AS "Estimator" UNION ALL SELECT 87 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 81 AS parent_id, 1.26722341655496 AS "Estimator" UNION ALL SELECT 89 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 88 AS parent_id, 1.3498429932286293 AS "Estimator" UNION ALL SELECT 91 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 90 AS parent_id, 1.4670826204003844 AS "Estimator" UNION ALL SELECT 93 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, 92 AS parent_id, 1.4949662645575934 AS "Estimator" UNION ALL SELECT 94 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, 92 AS parent_id, 1.4932233184960249 AS "Estimator") AS "Values"), 
"DT_Output_15" AS 
(SELECT "DT_node_lookup_15"."KEY" AS "KEY", "DT_node_lookup_15".node_id_2 AS node_id_2, "DT_node_data_15".node_id AS node_id, "DT_node_data_15".feature AS feature, "DT_node_data_15".threshold AS threshold, "DT_node_data_15".count AS count, "DT_node_data_15".depth AS depth, "DT_node_data_15".parent_id AS parent_id, "DT_node_data_15"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_15" LEFT OUTER JOIN "DT_node_data_15" ON "DT_node_lookup_15".node_id_2 = "DT_node_data_15".node_id), 
"RF_Tree_15" AS 
(SELECT "DT_Output_15"."KEY" AS "KEY", "DT_Output_15"."Estimator" AS "Estimator" 
FROM "DT_Output_15")
 INSERT INTO "TMP_20180329232415_S1GC51_RF_AVG_B1" ("KEY", "Estimator") SELECT "RF_AVG_B1"."KEY", "RF_AVG_B1"."Estimator" 
FROM (SELECT "RF_AVG_esu_1"."KEY" AS "KEY", "RF_AVG_esu_1"."Estimator" AS "Estimator" 
FROM (SELECT "RF_Tree_10"."KEY" AS "KEY", "RF_Tree_10"."Estimator" AS "Estimator" 
FROM "RF_Tree_10" UNION ALL SELECT "RF_Tree_11"."KEY" AS "KEY", "RF_Tree_11"."Estimator" AS "Estimator" 
FROM "RF_Tree_11" UNION ALL SELECT "RF_Tree_12"."KEY" AS "KEY", "RF_Tree_12"."Estimator" AS "Estimator" 
FROM "RF_Tree_12" UNION ALL SELECT "RF_Tree_13"."KEY" AS "KEY", "RF_Tree_13"."Estimator" AS "Estimator" 
FROM "RF_Tree_13" UNION ALL SELECT "RF_Tree_14"."KEY" AS "KEY", "RF_Tree_14"."Estimator" AS "Estimator" 
FROM "RF_Tree_14" UNION ALL SELECT "RF_Tree_15"."KEY" AS "KEY", "RF_Tree_15"."Estimator" AS "Estimator" 
FROM "RF_Tree_15") AS "RF_AVG_esu_1") AS "RF_AVG_B1"
-- Code For temporary table TMP_20180329232415_KLAF37_RF_AVG_Union part 1/2. Create 


CREATE TEMPORARY TABLE "TMP_20180329232415_KLAF37_RF_AVG_Union" (
	"KEY" BIGINT, 
	"Estimator" FLOAT
)


-- Code For temporary table TMP_20180329232415_KLAF37_RF_AVG_Union part 2/2. Populate

INSERT INTO "TMP_20180329232415_KLAF37_RF_AVG_Union" ("KEY", "Estimator") SELECT "RF_AVG_Union"."KEY", "RF_AVG_Union"."Estimator" 
FROM (SELECT "RF_AVG_EnsembleUnion"."KEY" AS "KEY", "RF_AVG_EnsembleUnion"."Estimator" AS "Estimator" 
FROM (SELECT "RF_AVG_B0"."KEY" AS "KEY", "RF_AVG_B0"."Estimator" AS "Estimator" 
FROM "TMP_20180329232415_TIIRXS_RF_AVG_B0" AS "RF_AVG_B0" UNION ALL SELECT "RF_AVG_B1"."KEY" AS "KEY", "RF_AVG_B1"."Estimator" AS "Estimator" 
FROM "TMP_20180329232415_S1GC51_RF_AVG_B1" AS "RF_AVG_B1") AS "RF_AVG_EnsembleUnion") AS "RF_AVG_Union"

-- Model deployment code

WITH "RF_AVG_avg" AS 
(SELECT "T"."KEY" AS "KEY", "T"."Estimator" AS "Estimator" 
FROM (SELECT "RF_AVG_Union"."KEY" AS "KEY", avg(CAST("RF_AVG_Union"."Estimator" AS FLOAT)) AS "Estimator" 
FROM "TMP_20180329232415_KLAF37_RF_AVG_Union" AS "RF_AVG_Union" GROUP BY "RF_AVG_Union"."KEY") AS "T")
 SELECT "RF_AVG_avg"."KEY" AS "KEY", "RF_AVG_avg"."Estimator" AS "Estimator" 
FROM "RF_AVG_avg"