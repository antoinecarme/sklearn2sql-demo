-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2018

-- This SQL code can contain one or more statements, to be executed in the order they appear in this file.


-- Code For temporary table TMP_20180329231756_R6FS93_ADS_imp_1_OUT part 1/2. Create 


CREATE TEMPORARY TABLE `TMP_20180329231756_R6FS93_ADS_imp_1_OUT` (
	`KEY` BIGINT, 
	impter_2 DOUBLE, 
	impter_3 DOUBLE, 
	impter_4 DOUBLE, 
	impter_5 DOUBLE, 
	impter_6 DOUBLE, 
	impter_7 DOUBLE, 
	impter_8 DOUBLE, 
	impter_9 DOUBLE, 
	impter_10 DOUBLE, 
	impter_11 DOUBLE
)

 ENGINE=MEMORY
-- Code For temporary table TMP_20180329231756_R6FS93_ADS_imp_1_OUT part 2/2. Populate

INSERT INTO `TMP_20180329231756_R6FS93_ADS_imp_1_OUT` (`KEY`, impter_2, impter_3, impter_4, impter_5, impter_6, impter_7, impter_8, impter_9, impter_10, impter_11) SELECT `U`.`KEY`, `U`.impter_2, `U`.impter_3, `U`.impter_4, `U`.impter_5, `U`.impter_6, `U`.impter_7, `U`.impter_8, `U`.impter_9, `U`.impter_10, `U`.impter_11 
FROM (SELECT `ADS_imp_1_OUT`.`KEY`, `ADS_imp_1_OUT`.impter_2, `ADS_imp_1_OUT`.impter_3, `ADS_imp_1_OUT`.impter_4, `ADS_imp_1_OUT`.impter_5, `ADS_imp_1_OUT`.impter_6, `ADS_imp_1_OUT`.impter_7, `ADS_imp_1_OUT`.impter_8, `ADS_imp_1_OUT`.impter_9, `ADS_imp_1_OUT`.impter_10, `ADS_imp_1_OUT`.impter_11 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_0` IS NULL) THEN 0.16680947298137394 ELSE `ADS`.`Feature_0` END AS impter_2, CASE WHEN (`ADS`.`Feature_1` IS NULL) THEN -0.16351271994443456 ELSE `ADS`.`Feature_1` END AS impter_3, CASE WHEN (`ADS`.`Feature_2` IS NULL) THEN 0.19149292241003152 ELSE `ADS`.`Feature_2` END AS impter_4, CASE WHEN (`ADS`.`Feature_3` IS NULL) THEN 0.058384844753055345 ELSE `ADS`.`Feature_3` END AS impter_5, CASE WHEN (`ADS`.`Feature_4` IS NULL) THEN -0.09933205162122274 ELSE `ADS`.`Feature_4` END AS impter_6, CASE WHEN (`ADS`.`Feature_5` IS NULL) THEN 0.21293121660488037 ELSE `ADS`.`Feature_5` END AS impter_7, CASE WHEN (`ADS`.`Feature_6` IS NULL) THEN 0.047865568690029614 ELSE `ADS`.`Feature_6` END AS impter_8, CASE WHEN (`ADS`.`Feature_7` IS NULL) THEN 0.05078698959084227 ELSE `ADS`.`Feature_7` END AS impter_9, CASE WHEN (`ADS`.`Feature_8` IS NULL) THEN -0.1913199225908187 ELSE `ADS`.`Feature_8` END AS impter_10, CASE WHEN (`ADS`.`Feature_9` IS NULL) THEN 0.19940405677473352 ELSE `ADS`.`Feature_9` END AS impter_11 
FROM `RandomReg_10` AS `ADS`) AS `ADS_imp_1_OUT`) AS `U`
-- Code For temporary table TMP_20180329231756_GKV1N8_ADS_sca_2_OUT part 1/2. Create 


CREATE TEMPORARY TABLE `TMP_20180329231756_GKV1N8_ADS_sca_2_OUT` (
	`KEY` BIGINT, 
	scaler_2 DOUBLE, 
	scaler_3 DOUBLE, 
	scaler_4 DOUBLE, 
	scaler_5 DOUBLE, 
	scaler_6 DOUBLE, 
	scaler_7 DOUBLE, 
	scaler_8 DOUBLE, 
	scaler_9 DOUBLE, 
	scaler_10 DOUBLE, 
	scaler_11 DOUBLE
)

 ENGINE=MEMORY
-- Code For temporary table TMP_20180329231756_GKV1N8_ADS_sca_2_OUT part 2/2. Populate

INSERT INTO `TMP_20180329231756_GKV1N8_ADS_sca_2_OUT` (`KEY`, scaler_2, scaler_3, scaler_4, scaler_5, scaler_6, scaler_7, scaler_8, scaler_9, scaler_10, scaler_11) SELECT `U`.`KEY`, `U`.scaler_2, `U`.scaler_3, `U`.scaler_4, `U`.scaler_5, `U`.scaler_6, `U`.scaler_7, `U`.scaler_8, `U`.scaler_9, `U`.scaler_10, `U`.scaler_11 
FROM (SELECT `ADS_sca_2_OUT`.`KEY`, `ADS_sca_2_OUT`.scaler_2, `ADS_sca_2_OUT`.scaler_3, `ADS_sca_2_OUT`.scaler_4, `ADS_sca_2_OUT`.scaler_5, `ADS_sca_2_OUT`.scaler_6, `ADS_sca_2_OUT`.scaler_7, `ADS_sca_2_OUT`.scaler_8, `ADS_sca_2_OUT`.scaler_9, `ADS_sca_2_OUT`.scaler_10, `ADS_sca_2_OUT`.scaler_11 
FROM (SELECT `ADS_imp_1_OUT`.`KEY` AS `KEY`, (`ADS_imp_1_OUT`.impter_2 - 0.16680947298137394) / 1.0289835997047314 AS scaler_2, (`ADS_imp_1_OUT`.impter_3 - -0.16351271994443456) / 0.9915812535046814 AS scaler_3, (`ADS_imp_1_OUT`.impter_4 - 0.19149292241003152) / 0.9321147629147756 AS scaler_4, (`ADS_imp_1_OUT`.impter_5 - 0.058384844753055345) / 1.0855729329506805 AS scaler_5, (`ADS_imp_1_OUT`.impter_6 - -0.09933205162122274) / 1.0743904412882828 AS scaler_6, (`ADS_imp_1_OUT`.impter_7 - 0.21293121660488037) / 0.9358074381886248 AS scaler_7, (`ADS_imp_1_OUT`.impter_8 - 0.047865568690029614) / 1.1363574090613386 AS scaler_8, (`ADS_imp_1_OUT`.impter_9 - 0.05078698959084227) / 0.9725457460098452 AS scaler_9, (`ADS_imp_1_OUT`.impter_10 - -0.1913199225908187) / 1.1415974677936562 AS scaler_10, (`ADS_imp_1_OUT`.impter_11 - 0.19940405677473352) / 0.882245682091319 AS scaler_11 
FROM `TMP_20180329231756_R6FS93_ADS_imp_1_OUT` AS `ADS_imp_1_OUT`) AS `ADS_sca_2_OUT`) AS `U`

-- Model deployment code

WITH linear_model_cte AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, 27.47234926415581 * `ADS_sca_2_OUT`.scaler_2 + 55.058999608561706 * `ADS_sca_2_OUT`.scaler_3 + 66.05234096939769 * `ADS_sca_2_OUT`.scaler_4 + 33.828318306544865 * `ADS_sca_2_OUT`.scaler_5 + 43.37201281310904 * `ADS_sca_2_OUT`.scaler_6 + 55.56899634206041 * `ADS_sca_2_OUT`.scaler_7 + 22.845413884624314 * `ADS_sca_2_OUT`.scaler_8 + 32.642963122076885 * `ADS_sca_2_OUT`.scaler_9 + 68.23784430018478 * `ADS_sca_2_OUT`.scaler_10 + 28.597451330145503 * `ADS_sca_2_OUT`.scaler_11 + 17.846455791454694 AS `Estimator` 
FROM `TMP_20180329231756_GKV1N8_ADS_sca_2_OUT` AS `ADS_sca_2_OUT`)
 SELECT linear_model_cte.`KEY` AS `KEY`, linear_model_cte.`Estimator` AS `Estimator` 
FROM linear_model_cte