-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2018

-- Model : AdaBoostClassifier
-- Dataset : BreastCancer
-- Database : teradata


-- This SQL code can contain one or more statements, to be executed in the order they appear in this file.



-- Code For temporary table tmp_20180416231446_equ5yc_adb_ part 1/2. Create 


CREATE GLOBAL TEMPORARY TABLE tmp_20180416231446_equ5yc_adb_  (
	"KEY" BIGINT, 
	"Score_0" FLOAT, 
	"Proba_0" FLOAT, 
	"Score_1" FLOAT, 
	"Proba_1" FLOAT
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table tmp_20180416231446_equ5yc_adb_ part 2/2. Populate

INSERT INTO tmp_20180416231446_equ5yc_adb_ ("KEY", "Score_0", "Proba_0", "Score_1", "Proba_1") SELECT "U"."KEY", "U"."Score_0", "U"."Proba_0", "U"."Score_1", "U"."Proba_1" 
FROM (WITH "DT_node_lookup" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_27" <= 0.145449995994568) THEN 1 ELSE 2 END AS node_id_2 
FROM "BreastCancer" AS "ADS"), 
"DT_node_data" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values"."threshold" AS FLOAT) AS "threshold", CAST("Values"."count" AS FLOAT) AS "count", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Proba_0" AS FLOAT) AS "Proba_0", CAST("Values"."LogProba_0" AS FLOAT) AS "LogProba_0", CAST("Values"."Proba_1" AS FLOAT) AS "Proba_1", CAST("Values"."LogProba_1" AS FLOAT) AS "LogProba_1", CAST("Values"."Decision" AS FLOAT) AS "Decision", CAST("Values"."DecisionProba" AS FLOAT) AS "DecisionProba" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 309 AS "count", 1 AS depth, 0 AS parent_id, 0.064724919093851 AS "Proba_0", -2.737609003343752 AS "LogProba_0", 0.935275080906149 AS "Proba_1", -0.066914588785313 AS "LogProba_1", 1 AS "Decision", 0.935275080906149 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 146 AS "count", 1 AS depth, 0 AS parent_id, 0.958904109589041 AS "Proba_0", -0.041964199099032 AS "LogProba_0", 0.041095890410959 AS "Proba_1", -3.19184715248028 AS "LogProba_1", 0 AS "Decision", 0.958904109589041 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte) AS "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".node_id AS node_id, "DT_node_data".feature AS feature, "DT_node_data"."threshold" AS "threshold", "DT_node_data"."count" AS "count", "DT_node_data".depth AS depth, "DT_node_data".parent_id AS parent_id, "DT_node_data"."Proba_0" AS "Proba_0", "DT_node_data"."LogProba_0" AS "LogProba_0", "DT_node_data"."Proba_1" AS "Proba_1", "DT_node_data"."LogProba_1" AS "LogProba_1", "DT_node_data"."Decision" AS "Decision", "DT_node_data"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".node_id), 
"ADB_Model_0" AS 
(SELECT "DT_Output"."KEY" AS "KEY", (1.0 * (CASE WHEN ("DT_Output"."Proba_0" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."Proba_0" IS NULL OR "DT_Output"."Proba_0" > 0.0) THEN ln("DT_Output"."Proba_0") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("DT_Output"."Proba_0" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."Proba_0" IS NULL OR "DT_Output"."Proba_0" > 0.0) THEN ln("DT_Output"."Proba_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("DT_Output"."Proba_1" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."Proba_1" IS NULL OR "DT_Output"."Proba_1" > 0.0) THEN ln("DT_Output"."Proba_1") ELSE -1.79769313486231e+308 END END) / 2)) / 16.0 AS "Score_0", 1.0 * (CASE WHEN ("DT_Output"."Proba_0" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."Proba_0" IS NULL OR "DT_Output"."Proba_0" > 0.0) THEN ln("DT_Output"."Proba_0") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("DT_Output"."Proba_0" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."Proba_0" IS NULL OR "DT_Output"."Proba_0" > 0.0) THEN ln("DT_Output"."Proba_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("DT_Output"."Proba_1" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."Proba_1" IS NULL OR "DT_Output"."Proba_1" > 0.0) THEN ln("DT_Output"."Proba_1") ELSE -1.79769313486231e+308 END END) / 2) AS "Proba_0", (1.0 * (CASE WHEN ("DT_Output"."Proba_1" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."Proba_1" IS NULL OR "DT_Output"."Proba_1" > 0.0) THEN ln("DT_Output"."Proba_1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("DT_Output"."Proba_0" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."Proba_0" IS NULL OR "DT_Output"."Proba_0" > 0.0) THEN ln("DT_Output"."Proba_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("DT_Output"."Proba_1" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."Proba_1" IS NULL OR "DT_Output"."Proba_1" > 0.0) THEN ln("DT_Output"."Proba_1") ELSE -1.79769313486231e+308 END END) / 2)) / 16.0 AS "Score_1", 1.0 * (CASE WHEN ("DT_Output"."Proba_1" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."Proba_1" IS NULL OR "DT_Output"."Proba_1" > 0.0) THEN ln("DT_Output"."Proba_1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("DT_Output"."Proba_0" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."Proba_0" IS NULL OR "DT_Output"."Proba_0" > 0.0) THEN ln("DT_Output"."Proba_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("DT_Output"."Proba_1" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."Proba_1" IS NULL OR "DT_Output"."Proba_1" > 0.0) THEN ln("DT_Output"."Proba_1") ELSE -1.79769313486231e+308 END END) / 2) AS "Proba_1" 
FROM "DT_Output"), 
"DT_node_lookup_1" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_20" <= 16.375) THEN 1 ELSE 2 END AS node_id_2 
FROM "BreastCancer" AS "ADS"), 
"DT_node_data_1" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values"."threshold" AS FLOAT) AS "threshold", CAST("Values"."count" AS FLOAT) AS "count", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Proba_0" AS FLOAT) AS "Proba_0", CAST("Values"."LogProba_0" AS FLOAT) AS "LogProba_0", CAST("Values"."Proba_1" AS FLOAT) AS "Proba_1", CAST("Values"."LogProba_1" AS FLOAT) AS "LogProba_1", CAST("Values"."Decision" AS FLOAT) AS "Decision", CAST("Values"."DecisionProba" AS FLOAT) AS "DecisionProba" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 292 AS "count", 1 AS depth, 0 AS parent_id, 0.153957095500185 AS "Proba_0", -1.871081316033026 AS "LogProba_0", 0.846042904499815 AS "Proba_1", -0.167185206123064 AS "LogProba_1", 1 AS "Decision", 0.846042904499815 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 163 AS "count", 1 AS depth, 0 AS parent_id, 0.94023144649753 AS "Proba_0", -0.061629214346955 AS "LogProba_0", 0.05976855350247 AS "Proba_1", -2.817275617501726 AS "LogProba_1", 0 AS "Decision", 0.94023144649753 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte) AS "Values"), 
"DT_Output_1" AS 
(SELECT "DT_node_lookup_1"."KEY" AS "KEY", "DT_node_lookup_1".node_id_2 AS node_id_2, "DT_node_data_1".node_id AS node_id, "DT_node_data_1".feature AS feature, "DT_node_data_1"."threshold" AS "threshold", "DT_node_data_1"."count" AS "count", "DT_node_data_1".depth AS depth, "DT_node_data_1".parent_id AS parent_id, "DT_node_data_1"."Proba_0" AS "Proba_0", "DT_node_data_1"."LogProba_0" AS "LogProba_0", "DT_node_data_1"."Proba_1" AS "Proba_1", "DT_node_data_1"."LogProba_1" AS "LogProba_1", "DT_node_data_1"."Decision" AS "Decision", "DT_node_data_1"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup_1" LEFT OUTER JOIN "DT_node_data_1" ON "DT_node_lookup_1".node_id_2 = "DT_node_data_1".node_id), 
"ADB_Model_1" AS 
(SELECT "DT_Output_1"."KEY" AS "KEY", (1.0 * (CASE WHEN ("DT_Output_1"."Proba_0" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."Proba_0" IS NULL OR "DT_Output_1"."Proba_0" > 0.0) THEN ln("DT_Output_1"."Proba_0") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("DT_Output_1"."Proba_0" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."Proba_0" IS NULL OR "DT_Output_1"."Proba_0" > 0.0) THEN ln("DT_Output_1"."Proba_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("DT_Output_1"."Proba_1" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."Proba_1" IS NULL OR "DT_Output_1"."Proba_1" > 0.0) THEN ln("DT_Output_1"."Proba_1") ELSE -1.79769313486231e+308 END END) / 2)) / 16.0 AS "Score_0", 1.0 * (CASE WHEN ("DT_Output_1"."Proba_0" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."Proba_0" IS NULL OR "DT_Output_1"."Proba_0" > 0.0) THEN ln("DT_Output_1"."Proba_0") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("DT_Output_1"."Proba_0" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."Proba_0" IS NULL OR "DT_Output_1"."Proba_0" > 0.0) THEN ln("DT_Output_1"."Proba_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("DT_Output_1"."Proba_1" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."Proba_1" IS NULL OR "DT_Output_1"."Proba_1" > 0.0) THEN ln("DT_Output_1"."Proba_1") ELSE -1.79769313486231e+308 END END) / 2) AS "Proba_0", (1.0 * (CASE WHEN ("DT_Output_1"."Proba_1" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."Proba_1" IS NULL OR "DT_Output_1"."Proba_1" > 0.0) THEN ln("DT_Output_1"."Proba_1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("DT_Output_1"."Proba_0" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."Proba_0" IS NULL OR "DT_Output_1"."Proba_0" > 0.0) THEN ln("DT_Output_1"."Proba_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("DT_Output_1"."Proba_1" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."Proba_1" IS NULL OR "DT_Output_1"."Proba_1" > 0.0) THEN ln("DT_Output_1"."Proba_1") ELSE -1.79769313486231e+308 END END) / 2)) / 16.0 AS "Score_1", 1.0 * (CASE WHEN ("DT_Output_1"."Proba_1" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."Proba_1" IS NULL OR "DT_Output_1"."Proba_1" > 0.0) THEN ln("DT_Output_1"."Proba_1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("DT_Output_1"."Proba_0" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."Proba_0" IS NULL OR "DT_Output_1"."Proba_0" > 0.0) THEN ln("DT_Output_1"."Proba_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("DT_Output_1"."Proba_1" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."Proba_1" IS NULL OR "DT_Output_1"."Proba_1" > 0.0) THEN ln("DT_Output_1"."Proba_1") ELSE -1.79769313486231e+308 END END) / 2) AS "Proba_1" 
FROM "DT_Output_1"), 
"DT_node_lookup_2" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_13" <= 33.00499725341797) THEN 1 ELSE 2 END AS node_id_2 
FROM "BreastCancer" AS "ADS"), 
"DT_node_data_2" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values"."threshold" AS FLOAT) AS "threshold", CAST("Values"."count" AS FLOAT) AS "count", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Proba_0" AS FLOAT) AS "Proba_0", CAST("Values"."LogProba_0" AS FLOAT) AS "LogProba_0", CAST("Values"."Proba_1" AS FLOAT) AS "Proba_1", CAST("Values"."LogProba_1" AS FLOAT) AS "LogProba_1", CAST("Values"."Decision" AS FLOAT) AS "Decision", CAST("Values"."DecisionProba" AS FLOAT) AS "DecisionProba" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 294 AS "count", 1 AS depth, 0 AS parent_id, 0.141157142555828 AS "Proba_0", -1.957881522971136 AS "LogProba_0", 0.858842857444172 AS "Proba_1", -0.152169310351951 AS "LogProba_1", 1 AS "Decision", 0.858842857444172 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 161 AS "count", 1 AS depth, 0 AS parent_id, 0.840101272126986 AS "Proba_0", -0.174232832355862 AS "LogProba_0", 0.159898727873014 AS "Proba_1", -1.833214614939894 AS "LogProba_1", 0 AS "Decision", 0.840101272126986 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte) AS "Values"), 
"DT_Output_2" AS 
(SELECT "DT_node_lookup_2"."KEY" AS "KEY", "DT_node_lookup_2".node_id_2 AS node_id_2, "DT_node_data_2".node_id AS node_id, "DT_node_data_2".feature AS feature, "DT_node_data_2"."threshold" AS "threshold", "DT_node_data_2"."count" AS "count", "DT_node_data_2".depth AS depth, "DT_node_data_2".parent_id AS parent_id, "DT_node_data_2"."Proba_0" AS "Proba_0", "DT_node_data_2"."LogProba_0" AS "LogProba_0", "DT_node_data_2"."Proba_1" AS "Proba_1", "DT_node_data_2"."LogProba_1" AS "LogProba_1", "DT_node_data_2"."Decision" AS "Decision", "DT_node_data_2"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup_2" LEFT OUTER JOIN "DT_node_data_2" ON "DT_node_lookup_2".node_id_2 = "DT_node_data_2".node_id), 
"ADB_Model_2" AS 
(SELECT "DT_Output_2"."KEY" AS "KEY", (1.0 * (CASE WHEN ("DT_Output_2"."Proba_0" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."Proba_0" IS NULL OR "DT_Output_2"."Proba_0" > 0.0) THEN ln("DT_Output_2"."Proba_0") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("DT_Output_2"."Proba_0" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."Proba_0" IS NULL OR "DT_Output_2"."Proba_0" > 0.0) THEN ln("DT_Output_2"."Proba_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("DT_Output_2"."Proba_1" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."Proba_1" IS NULL OR "DT_Output_2"."Proba_1" > 0.0) THEN ln("DT_Output_2"."Proba_1") ELSE -1.79769313486231e+308 END END) / 2)) / 16.0 AS "Score_0", 1.0 * (CASE WHEN ("DT_Output_2"."Proba_0" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."Proba_0" IS NULL OR "DT_Output_2"."Proba_0" > 0.0) THEN ln("DT_Output_2"."Proba_0") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("DT_Output_2"."Proba_0" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."Proba_0" IS NULL OR "DT_Output_2"."Proba_0" > 0.0) THEN ln("DT_Output_2"."Proba_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("DT_Output_2"."Proba_1" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."Proba_1" IS NULL OR "DT_Output_2"."Proba_1" > 0.0) THEN ln("DT_Output_2"."Proba_1") ELSE -1.79769313486231e+308 END END) / 2) AS "Proba_0", (1.0 * (CASE WHEN ("DT_Output_2"."Proba_1" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."Proba_1" IS NULL OR "DT_Output_2"."Proba_1" > 0.0) THEN ln("DT_Output_2"."Proba_1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("DT_Output_2"."Proba_0" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."Proba_0" IS NULL OR "DT_Output_2"."Proba_0" > 0.0) THEN ln("DT_Output_2"."Proba_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("DT_Output_2"."Proba_1" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."Proba_1" IS NULL OR "DT_Output_2"."Proba_1" > 0.0) THEN ln("DT_Output_2"."Proba_1") ELSE -1.79769313486231e+308 END END) / 2)) / 16.0 AS "Score_1", 1.0 * (CASE WHEN ("DT_Output_2"."Proba_1" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."Proba_1" IS NULL OR "DT_Output_2"."Proba_1" > 0.0) THEN ln("DT_Output_2"."Proba_1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("DT_Output_2"."Proba_0" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."Proba_0" IS NULL OR "DT_Output_2"."Proba_0" > 0.0) THEN ln("DT_Output_2"."Proba_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("DT_Output_2"."Proba_1" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."Proba_1" IS NULL OR "DT_Output_2"."Proba_1" > 0.0) THEN ln("DT_Output_2"."Proba_1") ELSE -1.79769313486231e+308 END END) / 2) AS "Proba_1" 
FROM "DT_Output_2"), 
"DT_node_lookup_3" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_21" <= 23.025001525878906) THEN 1 ELSE 2 END AS node_id_2 
FROM "BreastCancer" AS "ADS"), 
"DT_node_data_3" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values"."threshold" AS FLOAT) AS "threshold", CAST("Values"."count" AS FLOAT) AS "count", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Proba_0" AS FLOAT) AS "Proba_0", CAST("Values"."LogProba_0" AS FLOAT) AS "LogProba_0", CAST("Values"."Proba_1" AS FLOAT) AS "Proba_1", CAST("Values"."LogProba_1" AS FLOAT) AS "LogProba_1", CAST("Values"."Decision" AS FLOAT) AS "Decision", CAST("Values"."DecisionProba" AS FLOAT) AS "DecisionProba" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 174 AS "count", 1 AS depth, 0 AS parent_id, 0.031741451231946 AS "Proba_0", -3.450131842435544 AS "LogProba_0", 0.968258548768054 AS "Proba_1", -0.032256131534536 AS "LogProba_1", 1 AS "Decision", 0.968258548768054 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 281 AS "count", 1 AS depth, 0 AS parent_id, 0.733245871966448 AS "Proba_0", -0.310274200916833 AS "LogProba_0", 0.266754128033552 AS "Proba_1", -1.321427913630224 AS "LogProba_1", 0 AS "Decision", 0.733245871966448 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte) AS "Values"), 
"DT_Output_3" AS 
(SELECT "DT_node_lookup_3"."KEY" AS "KEY", "DT_node_lookup_3".node_id_2 AS node_id_2, "DT_node_data_3".node_id AS node_id, "DT_node_data_3".feature AS feature, "DT_node_data_3"."threshold" AS "threshold", "DT_node_data_3"."count" AS "count", "DT_node_data_3".depth AS depth, "DT_node_data_3".parent_id AS parent_id, "DT_node_data_3"."Proba_0" AS "Proba_0", "DT_node_data_3"."LogProba_0" AS "LogProba_0", "DT_node_data_3"."Proba_1" AS "Proba_1", "DT_node_data_3"."LogProba_1" AS "LogProba_1", "DT_node_data_3"."Decision" AS "Decision", "DT_node_data_3"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup_3" LEFT OUTER JOIN "DT_node_data_3" ON "DT_node_lookup_3".node_id_2 = "DT_node_data_3".node_id), 
"ADB_Model_3" AS 
(SELECT "DT_Output_3"."KEY" AS "KEY", (1.0 * (CASE WHEN ("DT_Output_3"."Proba_0" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."Proba_0" IS NULL OR "DT_Output_3"."Proba_0" > 0.0) THEN ln("DT_Output_3"."Proba_0") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("DT_Output_3"."Proba_0" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."Proba_0" IS NULL OR "DT_Output_3"."Proba_0" > 0.0) THEN ln("DT_Output_3"."Proba_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("DT_Output_3"."Proba_1" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."Proba_1" IS NULL OR "DT_Output_3"."Proba_1" > 0.0) THEN ln("DT_Output_3"."Proba_1") ELSE -1.79769313486231e+308 END END) / 2)) / 16.0 AS "Score_0", 1.0 * (CASE WHEN ("DT_Output_3"."Proba_0" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."Proba_0" IS NULL OR "DT_Output_3"."Proba_0" > 0.0) THEN ln("DT_Output_3"."Proba_0") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("DT_Output_3"."Proba_0" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."Proba_0" IS NULL OR "DT_Output_3"."Proba_0" > 0.0) THEN ln("DT_Output_3"."Proba_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("DT_Output_3"."Proba_1" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."Proba_1" IS NULL OR "DT_Output_3"."Proba_1" > 0.0) THEN ln("DT_Output_3"."Proba_1") ELSE -1.79769313486231e+308 END END) / 2) AS "Proba_0", (1.0 * (CASE WHEN ("DT_Output_3"."Proba_1" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."Proba_1" IS NULL OR "DT_Output_3"."Proba_1" > 0.0) THEN ln("DT_Output_3"."Proba_1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("DT_Output_3"."Proba_0" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."Proba_0" IS NULL OR "DT_Output_3"."Proba_0" > 0.0) THEN ln("DT_Output_3"."Proba_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("DT_Output_3"."Proba_1" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."Proba_1" IS NULL OR "DT_Output_3"."Proba_1" > 0.0) THEN ln("DT_Output_3"."Proba_1") ELSE -1.79769313486231e+308 END END) / 2)) / 16.0 AS "Score_1", 1.0 * (CASE WHEN ("DT_Output_3"."Proba_1" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."Proba_1" IS NULL OR "DT_Output_3"."Proba_1" > 0.0) THEN ln("DT_Output_3"."Proba_1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("DT_Output_3"."Proba_0" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."Proba_0" IS NULL OR "DT_Output_3"."Proba_0" > 0.0) THEN ln("DT_Output_3"."Proba_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("DT_Output_3"."Proba_1" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."Proba_1" IS NULL OR "DT_Output_3"."Proba_1" > 0.0) THEN ln("DT_Output_3"."Proba_1") ELSE -1.79769313486231e+308 END END) / 2) AS "Proba_1" 
FROM "DT_Output_3"), 
"DT_node_lookup_4" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_7" <= 0.048919998109341) THEN 1 ELSE 2 END AS node_id_2 
FROM "BreastCancer" AS "ADS"), 
"DT_node_data_4" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values"."threshold" AS FLOAT) AS "threshold", CAST("Values"."count" AS FLOAT) AS "count", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Proba_0" AS FLOAT) AS "Proba_0", CAST("Values"."LogProba_0" AS FLOAT) AS "LogProba_0", CAST("Values"."Proba_1" AS FLOAT) AS "Proba_1", CAST("Values"."LogProba_1" AS FLOAT) AS "LogProba_1", CAST("Values"."Decision" AS FLOAT) AS "Decision", CAST("Values"."DecisionProba" AS FLOAT) AS "DecisionProba" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 281 AS "count", 1 AS depth, 0 AS parent_id, 0.262489669780241 AS "Proba_0", -1.337543550942945 AS "LogProba_0", 0.737510330219759 AS "Proba_1", -0.304475183788621 AS "LogProba_1", 1 AS "Decision", 0.737510330219759 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 174 AS "count", 1 AS depth, 0 AS parent_id, 0.829728575485771 AS "Proba_0", -0.186656649160395 AS "LogProba_0", 0.170271424514229 AS "Proba_1", -1.770361500376624 AS "LogProba_1", 0 AS "Decision", 0.829728575485771 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte) AS "Values"), 
"DT_Output_4" AS 
(SELECT "DT_node_lookup_4"."KEY" AS "KEY", "DT_node_lookup_4".node_id_2 AS node_id_2, "DT_node_data_4".node_id AS node_id, "DT_node_data_4".feature AS feature, "DT_node_data_4"."threshold" AS "threshold", "DT_node_data_4"."count" AS "count", "DT_node_data_4".depth AS depth, "DT_node_data_4".parent_id AS parent_id, "DT_node_data_4"."Proba_0" AS "Proba_0", "DT_node_data_4"."LogProba_0" AS "LogProba_0", "DT_node_data_4"."Proba_1" AS "Proba_1", "DT_node_data_4"."LogProba_1" AS "LogProba_1", "DT_node_data_4"."Decision" AS "Decision", "DT_node_data_4"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup_4" LEFT OUTER JOIN "DT_node_data_4" ON "DT_node_lookup_4".node_id_2 = "DT_node_data_4".node_id), 
"ADB_Model_4" AS 
(SELECT "DT_Output_4"."KEY" AS "KEY", (1.0 * (CASE WHEN ("DT_Output_4"."Proba_0" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."Proba_0" IS NULL OR "DT_Output_4"."Proba_0" > 0.0) THEN ln("DT_Output_4"."Proba_0") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("DT_Output_4"."Proba_0" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."Proba_0" IS NULL OR "DT_Output_4"."Proba_0" > 0.0) THEN ln("DT_Output_4"."Proba_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("DT_Output_4"."Proba_1" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."Proba_1" IS NULL OR "DT_Output_4"."Proba_1" > 0.0) THEN ln("DT_Output_4"."Proba_1") ELSE -1.79769313486231e+308 END END) / 2)) / 16.0 AS "Score_0", 1.0 * (CASE WHEN ("DT_Output_4"."Proba_0" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."Proba_0" IS NULL OR "DT_Output_4"."Proba_0" > 0.0) THEN ln("DT_Output_4"."Proba_0") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("DT_Output_4"."Proba_0" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."Proba_0" IS NULL OR "DT_Output_4"."Proba_0" > 0.0) THEN ln("DT_Output_4"."Proba_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("DT_Output_4"."Proba_1" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."Proba_1" IS NULL OR "DT_Output_4"."Proba_1" > 0.0) THEN ln("DT_Output_4"."Proba_1") ELSE -1.79769313486231e+308 END END) / 2) AS "Proba_0", (1.0 * (CASE WHEN ("DT_Output_4"."Proba_1" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."Proba_1" IS NULL OR "DT_Output_4"."Proba_1" > 0.0) THEN ln("DT_Output_4"."Proba_1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("DT_Output_4"."Proba_0" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."Proba_0" IS NULL OR "DT_Output_4"."Proba_0" > 0.0) THEN ln("DT_Output_4"."Proba_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("DT_Output_4"."Proba_1" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."Proba_1" IS NULL OR "DT_Output_4"."Proba_1" > 0.0) THEN ln("DT_Output_4"."Proba_1") ELSE -1.79769313486231e+308 END END) / 2)) / 16.0 AS "Score_1", 1.0 * (CASE WHEN ("DT_Output_4"."Proba_1" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."Proba_1" IS NULL OR "DT_Output_4"."Proba_1" > 0.0) THEN ln("DT_Output_4"."Proba_1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("DT_Output_4"."Proba_0" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."Proba_0" IS NULL OR "DT_Output_4"."Proba_0" > 0.0) THEN ln("DT_Output_4"."Proba_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("DT_Output_4"."Proba_1" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."Proba_1" IS NULL OR "DT_Output_4"."Proba_1" > 0.0) THEN ln("DT_Output_4"."Proba_1") ELSE -1.79769313486231e+308 END END) / 2) AS "Proba_1" 
FROM "DT_Output_4"), 
"DT_node_lookup_5" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_15" <= 0.011754999868572) THEN 1 ELSE 2 END AS node_id_2 
FROM "BreastCancer" AS "ADS"), 
"DT_node_data_5" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values"."threshold" AS FLOAT) AS "threshold", CAST("Values"."count" AS FLOAT) AS "count", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Proba_0" AS FLOAT) AS "Proba_0", CAST("Values"."LogProba_0" AS FLOAT) AS "LogProba_0", CAST("Values"."Proba_1" AS FLOAT) AS "Proba_1", CAST("Values"."LogProba_1" AS FLOAT) AS "LogProba_1", CAST("Values"."Decision" AS FLOAT) AS "Decision", CAST("Values"."DecisionProba" AS FLOAT) AS "DecisionProba" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 89 AS "count", 1 AS depth, 0 AS parent_id, 0.847094690010665 AS "Proba_0", -0.165942795996972 AS "LogProba_0", 0.152905309989335 AS "Proba_1", -1.877936438139124 AS "LogProba_1", 0 AS "Decision", 0.847094690010665 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 366 AS "count", 1 AS depth, 0 AS parent_id, 0.34275587657858 AS "Proba_0", -1.070736815307903 AS "LogProba_0", 0.65724412342142 AS "Proba_1", -0.4196997565739 AS "LogProba_1", 1 AS "Decision", 0.65724412342142 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte) AS "Values"), 
"DT_Output_5" AS 
(SELECT "DT_node_lookup_5"."KEY" AS "KEY", "DT_node_lookup_5".node_id_2 AS node_id_2, "DT_node_data_5".node_id AS node_id, "DT_node_data_5".feature AS feature, "DT_node_data_5"."threshold" AS "threshold", "DT_node_data_5"."count" AS "count", "DT_node_data_5".depth AS depth, "DT_node_data_5".parent_id AS parent_id, "DT_node_data_5"."Proba_0" AS "Proba_0", "DT_node_data_5"."LogProba_0" AS "LogProba_0", "DT_node_data_5"."Proba_1" AS "Proba_1", "DT_node_data_5"."LogProba_1" AS "LogProba_1", "DT_node_data_5"."Decision" AS "Decision", "DT_node_data_5"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup_5" LEFT OUTER JOIN "DT_node_data_5" ON "DT_node_lookup_5".node_id_2 = "DT_node_data_5".node_id), 
"ADB_Model_5" AS 
(SELECT "DT_Output_5"."KEY" AS "KEY", (1.0 * (CASE WHEN ("DT_Output_5"."Proba_0" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."Proba_0" IS NULL OR "DT_Output_5"."Proba_0" > 0.0) THEN ln("DT_Output_5"."Proba_0") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("DT_Output_5"."Proba_0" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."Proba_0" IS NULL OR "DT_Output_5"."Proba_0" > 0.0) THEN ln("DT_Output_5"."Proba_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("DT_Output_5"."Proba_1" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."Proba_1" IS NULL OR "DT_Output_5"."Proba_1" > 0.0) THEN ln("DT_Output_5"."Proba_1") ELSE -1.79769313486231e+308 END END) / 2)) / 16.0 AS "Score_0", 1.0 * (CASE WHEN ("DT_Output_5"."Proba_0" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."Proba_0" IS NULL OR "DT_Output_5"."Proba_0" > 0.0) THEN ln("DT_Output_5"."Proba_0") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("DT_Output_5"."Proba_0" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."Proba_0" IS NULL OR "DT_Output_5"."Proba_0" > 0.0) THEN ln("DT_Output_5"."Proba_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("DT_Output_5"."Proba_1" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."Proba_1" IS NULL OR "DT_Output_5"."Proba_1" > 0.0) THEN ln("DT_Output_5"."Proba_1") ELSE -1.79769313486231e+308 END END) / 2) AS "Proba_0", (1.0 * (CASE WHEN ("DT_Output_5"."Proba_1" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."Proba_1" IS NULL OR "DT_Output_5"."Proba_1" > 0.0) THEN ln("DT_Output_5"."Proba_1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("DT_Output_5"."Proba_0" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."Proba_0" IS NULL OR "DT_Output_5"."Proba_0" > 0.0) THEN ln("DT_Output_5"."Proba_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("DT_Output_5"."Proba_1" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."Proba_1" IS NULL OR "DT_Output_5"."Proba_1" > 0.0) THEN ln("DT_Output_5"."Proba_1") ELSE -1.79769313486231e+308 END END) / 2)) / 16.0 AS "Score_1", 1.0 * (CASE WHEN ("DT_Output_5"."Proba_1" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."Proba_1" IS NULL OR "DT_Output_5"."Proba_1" > 0.0) THEN ln("DT_Output_5"."Proba_1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("DT_Output_5"."Proba_0" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."Proba_0" IS NULL OR "DT_Output_5"."Proba_0" > 0.0) THEN ln("DT_Output_5"."Proba_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("DT_Output_5"."Proba_1" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."Proba_1" IS NULL OR "DT_Output_5"."Proba_1" > 0.0) THEN ln("DT_Output_5"."Proba_1") ELSE -1.79769313486231e+308 END END) / 2) AS "Proba_1" 
FROM "DT_Output_5"), 
"DT_node_lookup_6" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_26" <= 0.224800005555153) THEN 1 ELSE 2 END AS node_id_2 
FROM "BreastCancer" AS "ADS"), 
"DT_node_data_6" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values"."threshold" AS FLOAT) AS "threshold", CAST("Values"."count" AS FLOAT) AS "count", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Proba_0" AS FLOAT) AS "Proba_0", CAST("Values"."LogProba_0" AS FLOAT) AS "LogProba_0", CAST("Values"."Proba_1" AS FLOAT) AS "Proba_1", CAST("Values"."LogProba_1" AS FLOAT) AS "LogProba_1", CAST("Values"."Decision" AS FLOAT) AS "Decision", CAST("Values"."DecisionProba" AS FLOAT) AS "DecisionProba" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 231 AS "count", 1 AS depth, 0 AS parent_id, 0.204004158059225 AS "Proba_0", -1.589614902702382 AS "LogProba_0", 0.795995841940775 AS "Proba_1", -0.228161316843892 AS "LogProba_1", 1 AS "Decision", 0.795995841940775 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 224 AS "count", 1 AS depth, 0 AS parent_id, 0.713703817525515 AS "Proba_0", -0.337287224097584 AS "LogProba_0", 0.286296182474485 AS "Proba_1", -1.250728400971558 AS "LogProba_1", 0 AS "Decision", 0.713703817525515 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte) AS "Values"), 
"DT_Output_6" AS 
(SELECT "DT_node_lookup_6"."KEY" AS "KEY", "DT_node_lookup_6".node_id_2 AS node_id_2, "DT_node_data_6".node_id AS node_id, "DT_node_data_6".feature AS feature, "DT_node_data_6"."threshold" AS "threshold", "DT_node_data_6"."count" AS "count", "DT_node_data_6".depth AS depth, "DT_node_data_6".parent_id AS parent_id, "DT_node_data_6"."Proba_0" AS "Proba_0", "DT_node_data_6"."LogProba_0" AS "LogProba_0", "DT_node_data_6"."Proba_1" AS "Proba_1", "DT_node_data_6"."LogProba_1" AS "LogProba_1", "DT_node_data_6"."Decision" AS "Decision", "DT_node_data_6"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup_6" LEFT OUTER JOIN "DT_node_data_6" ON "DT_node_lookup_6".node_id_2 = "DT_node_data_6".node_id), 
"ADB_Model_6" AS 
(SELECT "DT_Output_6"."KEY" AS "KEY", (1.0 * (CASE WHEN ("DT_Output_6"."Proba_0" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."Proba_0" IS NULL OR "DT_Output_6"."Proba_0" > 0.0) THEN ln("DT_Output_6"."Proba_0") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("DT_Output_6"."Proba_0" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."Proba_0" IS NULL OR "DT_Output_6"."Proba_0" > 0.0) THEN ln("DT_Output_6"."Proba_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("DT_Output_6"."Proba_1" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."Proba_1" IS NULL OR "DT_Output_6"."Proba_1" > 0.0) THEN ln("DT_Output_6"."Proba_1") ELSE -1.79769313486231e+308 END END) / 2)) / 16.0 AS "Score_0", 1.0 * (CASE WHEN ("DT_Output_6"."Proba_0" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."Proba_0" IS NULL OR "DT_Output_6"."Proba_0" > 0.0) THEN ln("DT_Output_6"."Proba_0") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("DT_Output_6"."Proba_0" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."Proba_0" IS NULL OR "DT_Output_6"."Proba_0" > 0.0) THEN ln("DT_Output_6"."Proba_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("DT_Output_6"."Proba_1" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."Proba_1" IS NULL OR "DT_Output_6"."Proba_1" > 0.0) THEN ln("DT_Output_6"."Proba_1") ELSE -1.79769313486231e+308 END END) / 2) AS "Proba_0", (1.0 * (CASE WHEN ("DT_Output_6"."Proba_1" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."Proba_1" IS NULL OR "DT_Output_6"."Proba_1" > 0.0) THEN ln("DT_Output_6"."Proba_1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("DT_Output_6"."Proba_0" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."Proba_0" IS NULL OR "DT_Output_6"."Proba_0" > 0.0) THEN ln("DT_Output_6"."Proba_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("DT_Output_6"."Proba_1" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."Proba_1" IS NULL OR "DT_Output_6"."Proba_1" > 0.0) THEN ln("DT_Output_6"."Proba_1") ELSE -1.79769313486231e+308 END END) / 2)) / 16.0 AS "Score_1", 1.0 * (CASE WHEN ("DT_Output_6"."Proba_1" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."Proba_1" IS NULL OR "DT_Output_6"."Proba_1" > 0.0) THEN ln("DT_Output_6"."Proba_1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("DT_Output_6"."Proba_0" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."Proba_0" IS NULL OR "DT_Output_6"."Proba_0" > 0.0) THEN ln("DT_Output_6"."Proba_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("DT_Output_6"."Proba_1" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."Proba_1" IS NULL OR "DT_Output_6"."Proba_1" > 0.0) THEN ln("DT_Output_6"."Proba_1") ELSE -1.79769313486231e+308 END END) / 2) AS "Proba_1" 
FROM "DT_Output_6"), 
"DT_node_lookup_7" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_18" <= 0.025524999946356) THEN 1 ELSE 2 END AS node_id_2 
FROM "BreastCancer" AS "ADS"), 
"DT_node_data_7" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values"."threshold" AS FLOAT) AS "threshold", CAST("Values"."count" AS FLOAT) AS "count", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Proba_0" AS FLOAT) AS "Proba_0", CAST("Values"."LogProba_0" AS FLOAT) AS "LogProba_0", CAST("Values"."Proba_1" AS FLOAT) AS "Proba_1", CAST("Values"."LogProba_1" AS FLOAT) AS "LogProba_1", CAST("Values"."Decision" AS FLOAT) AS "Decision", CAST("Values"."DecisionProba" AS FLOAT) AS "DecisionProba" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 358 AS "count", 1 AS depth, 0 AS parent_id, 0.626451602325616 AS "Proba_0", -0.467683758506927 AS "LogProba_0", 0.373548397674384 AS "Proba_1", -0.984707704023725 AS "LogProba_1", 0 AS "Decision", 0.626451602325616 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 97 AS "count", 1 AS depth, 0 AS parent_id, 0.121934436864867 AS "Proba_0", -2.104271781448486 AS "LogProba_0", 0.878065563135133 AS "Proba_1", -0.130034014860291 AS "LogProba_1", 1 AS "Decision", 0.878065563135133 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte) AS "Values"), 
"DT_Output_7" AS 
(SELECT "DT_node_lookup_7"."KEY" AS "KEY", "DT_node_lookup_7".node_id_2 AS node_id_2, "DT_node_data_7".node_id AS node_id, "DT_node_data_7".feature AS feature, "DT_node_data_7"."threshold" AS "threshold", "DT_node_data_7"."count" AS "count", "DT_node_data_7".depth AS depth, "DT_node_data_7".parent_id AS parent_id, "DT_node_data_7"."Proba_0" AS "Proba_0", "DT_node_data_7"."LogProba_0" AS "LogProba_0", "DT_node_data_7"."Proba_1" AS "Proba_1", "DT_node_data_7"."LogProba_1" AS "LogProba_1", "DT_node_data_7"."Decision" AS "Decision", "DT_node_data_7"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup_7" LEFT OUTER JOIN "DT_node_data_7" ON "DT_node_lookup_7".node_id_2 = "DT_node_data_7".node_id), 
"ADB_Model_7" AS 
(SELECT "DT_Output_7"."KEY" AS "KEY", (1.0 * (CASE WHEN ("DT_Output_7"."Proba_0" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."Proba_0" IS NULL OR "DT_Output_7"."Proba_0" > 0.0) THEN ln("DT_Output_7"."Proba_0") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("DT_Output_7"."Proba_0" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."Proba_0" IS NULL OR "DT_Output_7"."Proba_0" > 0.0) THEN ln("DT_Output_7"."Proba_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("DT_Output_7"."Proba_1" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."Proba_1" IS NULL OR "DT_Output_7"."Proba_1" > 0.0) THEN ln("DT_Output_7"."Proba_1") ELSE -1.79769313486231e+308 END END) / 2)) / 16.0 AS "Score_0", 1.0 * (CASE WHEN ("DT_Output_7"."Proba_0" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."Proba_0" IS NULL OR "DT_Output_7"."Proba_0" > 0.0) THEN ln("DT_Output_7"."Proba_0") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("DT_Output_7"."Proba_0" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."Proba_0" IS NULL OR "DT_Output_7"."Proba_0" > 0.0) THEN ln("DT_Output_7"."Proba_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("DT_Output_7"."Proba_1" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."Proba_1" IS NULL OR "DT_Output_7"."Proba_1" > 0.0) THEN ln("DT_Output_7"."Proba_1") ELSE -1.79769313486231e+308 END END) / 2) AS "Proba_0", (1.0 * (CASE WHEN ("DT_Output_7"."Proba_1" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."Proba_1" IS NULL OR "DT_Output_7"."Proba_1" > 0.0) THEN ln("DT_Output_7"."Proba_1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("DT_Output_7"."Proba_0" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."Proba_0" IS NULL OR "DT_Output_7"."Proba_0" > 0.0) THEN ln("DT_Output_7"."Proba_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("DT_Output_7"."Proba_1" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."Proba_1" IS NULL OR "DT_Output_7"."Proba_1" > 0.0) THEN ln("DT_Output_7"."Proba_1") ELSE -1.79769313486231e+308 END END) / 2)) / 16.0 AS "Score_1", 1.0 * (CASE WHEN ("DT_Output_7"."Proba_1" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."Proba_1" IS NULL OR "DT_Output_7"."Proba_1" > 0.0) THEN ln("DT_Output_7"."Proba_1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("DT_Output_7"."Proba_0" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."Proba_0" IS NULL OR "DT_Output_7"."Proba_0" > 0.0) THEN ln("DT_Output_7"."Proba_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("DT_Output_7"."Proba_1" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."Proba_1" IS NULL OR "DT_Output_7"."Proba_1" > 0.0) THEN ln("DT_Output_7"."Proba_1") ELSE -1.79769313486231e+308 END END) / 2) AS "Proba_1" 
FROM "DT_Output_7"), 
"DT_node_lookup_8" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_12" <= 4.102499961853028) THEN 1 ELSE 2 END AS node_id_2 
FROM "BreastCancer" AS "ADS"), 
"DT_node_data_8" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values"."threshold" AS FLOAT) AS "threshold", CAST("Values"."count" AS FLOAT) AS "count", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Proba_0" AS FLOAT) AS "Proba_0", CAST("Values"."LogProba_0" AS FLOAT) AS "LogProba_0", CAST("Values"."Proba_1" AS FLOAT) AS "Proba_1", CAST("Values"."LogProba_1" AS FLOAT) AS "LogProba_1", CAST("Values"."Decision" AS FLOAT) AS "Decision", CAST("Values"."DecisionProba" AS FLOAT) AS "DecisionProba" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 373 AS "count", 1 AS depth, 0 AS parent_id, 0.385005801675002 AS "Proba_0", -0.954496875522175 AS "LogProba_0", 0.614994198324998 AS "Proba_1", -0.486142444838005 AS "LogProba_1", 1 AS "Decision", 0.614994198324998 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 82 AS "count", 1 AS depth, 0 AS parent_id, 0.934979243617053 AS "Proba_0", -0.067230949279909 AS "LogProba_0", 0.065020756382947 AS "Proba_1", -2.733048731092735 AS "LogProba_1", 0 AS "Decision", 0.934979243617053 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte) AS "Values"), 
"DT_Output_8" AS 
(SELECT "DT_node_lookup_8"."KEY" AS "KEY", "DT_node_lookup_8".node_id_2 AS node_id_2, "DT_node_data_8".node_id AS node_id, "DT_node_data_8".feature AS feature, "DT_node_data_8"."threshold" AS "threshold", "DT_node_data_8"."count" AS "count", "DT_node_data_8".depth AS depth, "DT_node_data_8".parent_id AS parent_id, "DT_node_data_8"."Proba_0" AS "Proba_0", "DT_node_data_8"."LogProba_0" AS "LogProba_0", "DT_node_data_8"."Proba_1" AS "Proba_1", "DT_node_data_8"."LogProba_1" AS "LogProba_1", "DT_node_data_8"."Decision" AS "Decision", "DT_node_data_8"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup_8" LEFT OUTER JOIN "DT_node_data_8" ON "DT_node_lookup_8".node_id_2 = "DT_node_data_8".node_id), 
"ADB_Model_8" AS 
(SELECT "DT_Output_8"."KEY" AS "KEY", (1.0 * (CASE WHEN ("DT_Output_8"."Proba_0" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."Proba_0" IS NULL OR "DT_Output_8"."Proba_0" > 0.0) THEN ln("DT_Output_8"."Proba_0") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("DT_Output_8"."Proba_0" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."Proba_0" IS NULL OR "DT_Output_8"."Proba_0" > 0.0) THEN ln("DT_Output_8"."Proba_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("DT_Output_8"."Proba_1" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."Proba_1" IS NULL OR "DT_Output_8"."Proba_1" > 0.0) THEN ln("DT_Output_8"."Proba_1") ELSE -1.79769313486231e+308 END END) / 2)) / 16.0 AS "Score_0", 1.0 * (CASE WHEN ("DT_Output_8"."Proba_0" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."Proba_0" IS NULL OR "DT_Output_8"."Proba_0" > 0.0) THEN ln("DT_Output_8"."Proba_0") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("DT_Output_8"."Proba_0" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."Proba_0" IS NULL OR "DT_Output_8"."Proba_0" > 0.0) THEN ln("DT_Output_8"."Proba_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("DT_Output_8"."Proba_1" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."Proba_1" IS NULL OR "DT_Output_8"."Proba_1" > 0.0) THEN ln("DT_Output_8"."Proba_1") ELSE -1.79769313486231e+308 END END) / 2) AS "Proba_0", (1.0 * (CASE WHEN ("DT_Output_8"."Proba_1" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."Proba_1" IS NULL OR "DT_Output_8"."Proba_1" > 0.0) THEN ln("DT_Output_8"."Proba_1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("DT_Output_8"."Proba_0" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."Proba_0" IS NULL OR "DT_Output_8"."Proba_0" > 0.0) THEN ln("DT_Output_8"."Proba_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("DT_Output_8"."Proba_1" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."Proba_1" IS NULL OR "DT_Output_8"."Proba_1" > 0.0) THEN ln("DT_Output_8"."Proba_1") ELSE -1.79769313486231e+308 END END) / 2)) / 16.0 AS "Score_1", 1.0 * (CASE WHEN ("DT_Output_8"."Proba_1" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."Proba_1" IS NULL OR "DT_Output_8"."Proba_1" > 0.0) THEN ln("DT_Output_8"."Proba_1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("DT_Output_8"."Proba_0" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."Proba_0" IS NULL OR "DT_Output_8"."Proba_0" > 0.0) THEN ln("DT_Output_8"."Proba_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("DT_Output_8"."Proba_1" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."Proba_1" IS NULL OR "DT_Output_8"."Proba_1" > 0.0) THEN ln("DT_Output_8"."Proba_1") ELSE -1.79769313486231e+308 END END) / 2) AS "Proba_1" 
FROM "DT_Output_8"), 
"DT_node_lookup_9" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_28" <= 0.341149985790253) THEN 1 ELSE 2 END AS node_id_2 
FROM "BreastCancer" AS "ADS"), 
"DT_node_data_9" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values"."threshold" AS FLOAT) AS "threshold", CAST("Values"."count" AS FLOAT) AS "count", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Proba_0" AS FLOAT) AS "Proba_0", CAST("Values"."LogProba_0" AS FLOAT) AS "LogProba_0", CAST("Values"."Proba_1" AS FLOAT) AS "Proba_1", CAST("Values"."LogProba_1" AS FLOAT) AS "LogProba_1", CAST("Values"."Decision" AS FLOAT) AS "Decision", CAST("Values"."DecisionProba" AS FLOAT) AS "DecisionProba" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 392 AS "count", 1 AS depth, 0 AS parent_id, 0.357936799988046 AS "Proba_0", -1.027398844512052 AS "LogProba_0", 0.642063200011954 AS "Proba_1", -0.443068537751088 AS "LogProba_1", 1 AS "Decision", 0.642063200011954 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 63 AS "count", 1 AS depth, 0 AS parent_id, 0.946591487513847 AS "Proba_0", -0.05488765424655 AS "LogProba_0", 0.053408512486153 AS "Proba_1", -2.929785135867336 AS "LogProba_1", 0 AS "Decision", 0.946591487513847 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte) AS "Values"), 
"DT_Output_9" AS 
(SELECT "DT_node_lookup_9"."KEY" AS "KEY", "DT_node_lookup_9".node_id_2 AS node_id_2, "DT_node_data_9".node_id AS node_id, "DT_node_data_9".feature AS feature, "DT_node_data_9"."threshold" AS "threshold", "DT_node_data_9"."count" AS "count", "DT_node_data_9".depth AS depth, "DT_node_data_9".parent_id AS parent_id, "DT_node_data_9"."Proba_0" AS "Proba_0", "DT_node_data_9"."LogProba_0" AS "LogProba_0", "DT_node_data_9"."Proba_1" AS "Proba_1", "DT_node_data_9"."LogProba_1" AS "LogProba_1", "DT_node_data_9"."Decision" AS "Decision", "DT_node_data_9"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup_9" LEFT OUTER JOIN "DT_node_data_9" ON "DT_node_lookup_9".node_id_2 = "DT_node_data_9".node_id), 
"ADB_Model_9" AS 
(SELECT "DT_Output_9"."KEY" AS "KEY", (1.0 * (CASE WHEN ("DT_Output_9"."Proba_0" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."Proba_0" IS NULL OR "DT_Output_9"."Proba_0" > 0.0) THEN ln("DT_Output_9"."Proba_0") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("DT_Output_9"."Proba_0" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."Proba_0" IS NULL OR "DT_Output_9"."Proba_0" > 0.0) THEN ln("DT_Output_9"."Proba_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("DT_Output_9"."Proba_1" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."Proba_1" IS NULL OR "DT_Output_9"."Proba_1" > 0.0) THEN ln("DT_Output_9"."Proba_1") ELSE -1.79769313486231e+308 END END) / 2)) / 16.0 AS "Score_0", 1.0 * (CASE WHEN ("DT_Output_9"."Proba_0" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."Proba_0" IS NULL OR "DT_Output_9"."Proba_0" > 0.0) THEN ln("DT_Output_9"."Proba_0") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("DT_Output_9"."Proba_0" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."Proba_0" IS NULL OR "DT_Output_9"."Proba_0" > 0.0) THEN ln("DT_Output_9"."Proba_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("DT_Output_9"."Proba_1" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."Proba_1" IS NULL OR "DT_Output_9"."Proba_1" > 0.0) THEN ln("DT_Output_9"."Proba_1") ELSE -1.79769313486231e+308 END END) / 2) AS "Proba_0", (1.0 * (CASE WHEN ("DT_Output_9"."Proba_1" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."Proba_1" IS NULL OR "DT_Output_9"."Proba_1" > 0.0) THEN ln("DT_Output_9"."Proba_1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("DT_Output_9"."Proba_0" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."Proba_0" IS NULL OR "DT_Output_9"."Proba_0" > 0.0) THEN ln("DT_Output_9"."Proba_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("DT_Output_9"."Proba_1" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."Proba_1" IS NULL OR "DT_Output_9"."Proba_1" > 0.0) THEN ln("DT_Output_9"."Proba_1") ELSE -1.79769313486231e+308 END END) / 2)) / 16.0 AS "Score_1", 1.0 * (CASE WHEN ("DT_Output_9"."Proba_1" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."Proba_1" IS NULL OR "DT_Output_9"."Proba_1" > 0.0) THEN ln("DT_Output_9"."Proba_1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("DT_Output_9"."Proba_0" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."Proba_0" IS NULL OR "DT_Output_9"."Proba_0" > 0.0) THEN ln("DT_Output_9"."Proba_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("DT_Output_9"."Proba_1" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."Proba_1" IS NULL OR "DT_Output_9"."Proba_1" > 0.0) THEN ln("DT_Output_9"."Proba_1") ELSE -1.79769313486231e+308 END END) / 2) AS "Proba_1" 
FROM "DT_Output_9")
 SELECT "ADB_B0"."KEY", "ADB_B0"."Score_0", "ADB_B0"."Proba_0", "ADB_B0"."Score_1", "ADB_B0"."Proba_1" 
FROM (SELECT "ADB_esu_0"."KEY" AS "KEY", "ADB_esu_0"."Score_0" AS "Score_0", "ADB_esu_0"."Proba_0" AS "Proba_0", "ADB_esu_0"."Score_1" AS "Score_1", "ADB_esu_0"."Proba_1" AS "Proba_1" 
FROM (SELECT "ADB_Model_0"."KEY" AS "KEY", "ADB_Model_0"."Score_0" AS "Score_0", "ADB_Model_0"."Proba_0" AS "Proba_0", "ADB_Model_0"."Score_1" AS "Score_1", "ADB_Model_0"."Proba_1" AS "Proba_1" 
FROM "ADB_Model_0" UNION ALL SELECT "ADB_Model_1"."KEY" AS "KEY", "ADB_Model_1"."Score_0" AS "Score_0", "ADB_Model_1"."Proba_0" AS "Proba_0", "ADB_Model_1"."Score_1" AS "Score_1", "ADB_Model_1"."Proba_1" AS "Proba_1" 
FROM "ADB_Model_1" UNION ALL SELECT "ADB_Model_2"."KEY" AS "KEY", "ADB_Model_2"."Score_0" AS "Score_0", "ADB_Model_2"."Proba_0" AS "Proba_0", "ADB_Model_2"."Score_1" AS "Score_1", "ADB_Model_2"."Proba_1" AS "Proba_1" 
FROM "ADB_Model_2" UNION ALL SELECT "ADB_Model_3"."KEY" AS "KEY", "ADB_Model_3"."Score_0" AS "Score_0", "ADB_Model_3"."Proba_0" AS "Proba_0", "ADB_Model_3"."Score_1" AS "Score_1", "ADB_Model_3"."Proba_1" AS "Proba_1" 
FROM "ADB_Model_3" UNION ALL SELECT "ADB_Model_4"."KEY" AS "KEY", "ADB_Model_4"."Score_0" AS "Score_0", "ADB_Model_4"."Proba_0" AS "Proba_0", "ADB_Model_4"."Score_1" AS "Score_1", "ADB_Model_4"."Proba_1" AS "Proba_1" 
FROM "ADB_Model_4" UNION ALL SELECT "ADB_Model_5"."KEY" AS "KEY", "ADB_Model_5"."Score_0" AS "Score_0", "ADB_Model_5"."Proba_0" AS "Proba_0", "ADB_Model_5"."Score_1" AS "Score_1", "ADB_Model_5"."Proba_1" AS "Proba_1" 
FROM "ADB_Model_5" UNION ALL SELECT "ADB_Model_6"."KEY" AS "KEY", "ADB_Model_6"."Score_0" AS "Score_0", "ADB_Model_6"."Proba_0" AS "Proba_0", "ADB_Model_6"."Score_1" AS "Score_1", "ADB_Model_6"."Proba_1" AS "Proba_1" 
FROM "ADB_Model_6" UNION ALL SELECT "ADB_Model_7"."KEY" AS "KEY", "ADB_Model_7"."Score_0" AS "Score_0", "ADB_Model_7"."Proba_0" AS "Proba_0", "ADB_Model_7"."Score_1" AS "Score_1", "ADB_Model_7"."Proba_1" AS "Proba_1" 
FROM "ADB_Model_7" UNION ALL SELECT "ADB_Model_8"."KEY" AS "KEY", "ADB_Model_8"."Score_0" AS "Score_0", "ADB_Model_8"."Proba_0" AS "Proba_0", "ADB_Model_8"."Score_1" AS "Score_1", "ADB_Model_8"."Proba_1" AS "Proba_1" 
FROM "ADB_Model_8" UNION ALL SELECT "ADB_Model_9"."KEY" AS "KEY", "ADB_Model_9"."Score_0" AS "Score_0", "ADB_Model_9"."Proba_0" AS "Proba_0", "ADB_Model_9"."Score_1" AS "Score_1", "ADB_Model_9"."Proba_1" AS "Proba_1" 
FROM "ADB_Model_9") AS "ADB_esu_0") AS "ADB_B0") AS "U"

-- Code For temporary table tmp_20180416231446_jpouml_adb_ part 1/2. Create 


CREATE GLOBAL TEMPORARY TABLE tmp_20180416231446_jpouml_adb_  (
	"KEY" BIGINT, 
	"Score_0" FLOAT, 
	"Proba_0" FLOAT, 
	"Score_1" FLOAT, 
	"Proba_1" FLOAT
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table tmp_20180416231446_jpouml_adb_ part 2/2. Populate

INSERT INTO tmp_20180416231446_jpouml_adb_ ("KEY", "Score_0", "Proba_0", "Score_1", "Proba_1") SELECT "U"."KEY", "U"."Score_0", "U"."Proba_0", "U"."Score_1", "U"."Proba_1" 
FROM (WITH "DT_node_lookup_10" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_13" <= 22.125) THEN 1 ELSE 2 END AS node_id_2 
FROM "BreastCancer" AS "ADS"), 
"DT_node_data_10" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values"."threshold" AS FLOAT) AS "threshold", CAST("Values"."count" AS FLOAT) AS "count", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Proba_0" AS FLOAT) AS "Proba_0", CAST("Values"."LogProba_0" AS FLOAT) AS "LogProba_0", CAST("Values"."Proba_1" AS FLOAT) AS "Proba_1", CAST("Values"."LogProba_1" AS FLOAT) AS "LogProba_1", CAST("Values"."Decision" AS FLOAT) AS "Decision", CAST("Values"."DecisionProba" AS FLOAT) AS "DecisionProba" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 198 AS "count", 1 AS depth, 0 AS parent_id, 0.124085135792765 AS "Proba_0", -2.086787369990709 AS "LogProba_0", 0.875914864207236 AS "Proba_1", -0.132486379746748 AS "LogProba_1", 1 AS "Decision", 0.875914864207236 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 257 AS "count", 1 AS depth, 0 AS parent_id, 0.617026301208613 AS "Proba_0", -0.482843628418644 AS "LogProba_0", 0.382973698791387 AS "Proba_1", -0.959788963722449 AS "LogProba_1", 0 AS "Decision", 0.617026301208613 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte) AS "Values"), 
"DT_Output_10" AS 
(SELECT "DT_node_lookup_10"."KEY" AS "KEY", "DT_node_lookup_10".node_id_2 AS node_id_2, "DT_node_data_10".node_id AS node_id, "DT_node_data_10".feature AS feature, "DT_node_data_10"."threshold" AS "threshold", "DT_node_data_10"."count" AS "count", "DT_node_data_10".depth AS depth, "DT_node_data_10".parent_id AS parent_id, "DT_node_data_10"."Proba_0" AS "Proba_0", "DT_node_data_10"."LogProba_0" AS "LogProba_0", "DT_node_data_10"."Proba_1" AS "Proba_1", "DT_node_data_10"."LogProba_1" AS "LogProba_1", "DT_node_data_10"."Decision" AS "Decision", "DT_node_data_10"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup_10" LEFT OUTER JOIN "DT_node_data_10" ON "DT_node_lookup_10".node_id_2 = "DT_node_data_10".node_id), 
"ADB_Model_10" AS 
(SELECT "DT_Output_10"."KEY" AS "KEY", (1.0 * (CASE WHEN ("DT_Output_10"."Proba_0" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."Proba_0" IS NULL OR "DT_Output_10"."Proba_0" > 0.0) THEN ln("DT_Output_10"."Proba_0") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("DT_Output_10"."Proba_0" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."Proba_0" IS NULL OR "DT_Output_10"."Proba_0" > 0.0) THEN ln("DT_Output_10"."Proba_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("DT_Output_10"."Proba_1" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."Proba_1" IS NULL OR "DT_Output_10"."Proba_1" > 0.0) THEN ln("DT_Output_10"."Proba_1") ELSE -1.79769313486231e+308 END END) / 2)) / 16.0 AS "Score_0", 1.0 * (CASE WHEN ("DT_Output_10"."Proba_0" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."Proba_0" IS NULL OR "DT_Output_10"."Proba_0" > 0.0) THEN ln("DT_Output_10"."Proba_0") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("DT_Output_10"."Proba_0" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."Proba_0" IS NULL OR "DT_Output_10"."Proba_0" > 0.0) THEN ln("DT_Output_10"."Proba_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("DT_Output_10"."Proba_1" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."Proba_1" IS NULL OR "DT_Output_10"."Proba_1" > 0.0) THEN ln("DT_Output_10"."Proba_1") ELSE -1.79769313486231e+308 END END) / 2) AS "Proba_0", (1.0 * (CASE WHEN ("DT_Output_10"."Proba_1" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."Proba_1" IS NULL OR "DT_Output_10"."Proba_1" > 0.0) THEN ln("DT_Output_10"."Proba_1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("DT_Output_10"."Proba_0" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."Proba_0" IS NULL OR "DT_Output_10"."Proba_0" > 0.0) THEN ln("DT_Output_10"."Proba_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("DT_Output_10"."Proba_1" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."Proba_1" IS NULL OR "DT_Output_10"."Proba_1" > 0.0) THEN ln("DT_Output_10"."Proba_1") ELSE -1.79769313486231e+308 END END) / 2)) / 16.0 AS "Score_1", 1.0 * (CASE WHEN ("DT_Output_10"."Proba_1" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."Proba_1" IS NULL OR "DT_Output_10"."Proba_1" > 0.0) THEN ln("DT_Output_10"."Proba_1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("DT_Output_10"."Proba_0" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."Proba_0" IS NULL OR "DT_Output_10"."Proba_0" > 0.0) THEN ln("DT_Output_10"."Proba_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("DT_Output_10"."Proba_1" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."Proba_1" IS NULL OR "DT_Output_10"."Proba_1" > 0.0) THEN ln("DT_Output_10"."Proba_1") ELSE -1.79769313486231e+308 END END) / 2) AS "Proba_1" 
FROM "DT_Output_10"), 
"DT_node_lookup_11" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_1" <= 20.799999237060547) THEN 1 ELSE 2 END AS node_id_2 
FROM "BreastCancer" AS "ADS"), 
"DT_node_data_11" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values"."threshold" AS FLOAT) AS "threshold", CAST("Values"."count" AS FLOAT) AS "count", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Proba_0" AS FLOAT) AS "Proba_0", CAST("Values"."LogProba_0" AS FLOAT) AS "LogProba_0", CAST("Values"."Proba_1" AS FLOAT) AS "Proba_1", CAST("Values"."LogProba_1" AS FLOAT) AS "LogProba_1", CAST("Values"."Decision" AS FLOAT) AS "Decision", CAST("Values"."DecisionProba" AS FLOAT) AS "DecisionProba" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 320 AS "count", 1 AS depth, 0 AS parent_id, 0.322656988386151 AS "Proba_0", -1.131165475494537 AS "LogProba_0", 0.677343011613849 AS "Proba_1", -0.389577470253985 AS "LogProba_1", 1 AS "Decision", 0.677343011613849 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 135 AS "count", 1 AS depth, 0 AS parent_id, 0.8056023794531 AS "Proba_0", -0.216164983941258 AS "LogProba_0", 0.1943976205469 AS "Proba_1", -1.637849627015788 AS "LogProba_1", 0 AS "Decision", 0.8056023794531 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte) AS "Values"), 
"DT_Output_11" AS 
(SELECT "DT_node_lookup_11"."KEY" AS "KEY", "DT_node_lookup_11".node_id_2 AS node_id_2, "DT_node_data_11".node_id AS node_id, "DT_node_data_11".feature AS feature, "DT_node_data_11"."threshold" AS "threshold", "DT_node_data_11"."count" AS "count", "DT_node_data_11".depth AS depth, "DT_node_data_11".parent_id AS parent_id, "DT_node_data_11"."Proba_0" AS "Proba_0", "DT_node_data_11"."LogProba_0" AS "LogProba_0", "DT_node_data_11"."Proba_1" AS "Proba_1", "DT_node_data_11"."LogProba_1" AS "LogProba_1", "DT_node_data_11"."Decision" AS "Decision", "DT_node_data_11"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup_11" LEFT OUTER JOIN "DT_node_data_11" ON "DT_node_lookup_11".node_id_2 = "DT_node_data_11".node_id), 
"ADB_Model_11" AS 
(SELECT "DT_Output_11"."KEY" AS "KEY", (1.0 * (CASE WHEN ("DT_Output_11"."Proba_0" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."Proba_0" IS NULL OR "DT_Output_11"."Proba_0" > 0.0) THEN ln("DT_Output_11"."Proba_0") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("DT_Output_11"."Proba_0" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."Proba_0" IS NULL OR "DT_Output_11"."Proba_0" > 0.0) THEN ln("DT_Output_11"."Proba_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("DT_Output_11"."Proba_1" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."Proba_1" IS NULL OR "DT_Output_11"."Proba_1" > 0.0) THEN ln("DT_Output_11"."Proba_1") ELSE -1.79769313486231e+308 END END) / 2)) / 16.0 AS "Score_0", 1.0 * (CASE WHEN ("DT_Output_11"."Proba_0" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."Proba_0" IS NULL OR "DT_Output_11"."Proba_0" > 0.0) THEN ln("DT_Output_11"."Proba_0") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("DT_Output_11"."Proba_0" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."Proba_0" IS NULL OR "DT_Output_11"."Proba_0" > 0.0) THEN ln("DT_Output_11"."Proba_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("DT_Output_11"."Proba_1" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."Proba_1" IS NULL OR "DT_Output_11"."Proba_1" > 0.0) THEN ln("DT_Output_11"."Proba_1") ELSE -1.79769313486231e+308 END END) / 2) AS "Proba_0", (1.0 * (CASE WHEN ("DT_Output_11"."Proba_1" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."Proba_1" IS NULL OR "DT_Output_11"."Proba_1" > 0.0) THEN ln("DT_Output_11"."Proba_1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("DT_Output_11"."Proba_0" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."Proba_0" IS NULL OR "DT_Output_11"."Proba_0" > 0.0) THEN ln("DT_Output_11"."Proba_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("DT_Output_11"."Proba_1" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."Proba_1" IS NULL OR "DT_Output_11"."Proba_1" > 0.0) THEN ln("DT_Output_11"."Proba_1") ELSE -1.79769313486231e+308 END END) / 2)) / 16.0 AS "Score_1", 1.0 * (CASE WHEN ("DT_Output_11"."Proba_1" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."Proba_1" IS NULL OR "DT_Output_11"."Proba_1" > 0.0) THEN ln("DT_Output_11"."Proba_1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("DT_Output_11"."Proba_0" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."Proba_0" IS NULL OR "DT_Output_11"."Proba_0" > 0.0) THEN ln("DT_Output_11"."Proba_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("DT_Output_11"."Proba_1" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."Proba_1" IS NULL OR "DT_Output_11"."Proba_1" > 0.0) THEN ln("DT_Output_11"."Proba_1") ELSE -1.79769313486231e+308 END END) / 2) AS "Proba_1" 
FROM "DT_Output_11"), 
"DT_node_lookup_12" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_27" <= 0.160299986600876) THEN 1 ELSE 2 END AS node_id_2 
FROM "BreastCancer" AS "ADS"), 
"DT_node_data_12" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values"."threshold" AS FLOAT) AS "threshold", CAST("Values"."count" AS FLOAT) AS "count", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Proba_0" AS FLOAT) AS "Proba_0", CAST("Values"."LogProba_0" AS FLOAT) AS "LogProba_0", CAST("Values"."Proba_1" AS FLOAT) AS "Proba_1", CAST("Values"."LogProba_1" AS FLOAT) AS "LogProba_1", CAST("Values"."Decision" AS FLOAT) AS "Decision", CAST("Values"."DecisionProba" AS FLOAT) AS "DecisionProba" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 338 AS "count", 1 AS depth, 0 AS parent_id, 0.397957849901876 AS "Proba_0", -0.92140918407516 AS "LogProba_0", 0.602042150098124 AS "Proba_1", -0.507427819350084 AS "LogProba_1", 1 AS "Decision", 0.602042150098124 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 117 AS "count", 1 AS depth, 0 AS parent_id, 0.990790390903166 AS "Proba_0", -0.009252279735352 AS "LogProba_0", 0.009209609096834 AS "Proba_1", -4.687507872956186 AS "LogProba_1", 0 AS "Decision", 0.990790390903166 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte) AS "Values"), 
"DT_Output_12" AS 
(SELECT "DT_node_lookup_12"."KEY" AS "KEY", "DT_node_lookup_12".node_id_2 AS node_id_2, "DT_node_data_12".node_id AS node_id, "DT_node_data_12".feature AS feature, "DT_node_data_12"."threshold" AS "threshold", "DT_node_data_12"."count" AS "count", "DT_node_data_12".depth AS depth, "DT_node_data_12".parent_id AS parent_id, "DT_node_data_12"."Proba_0" AS "Proba_0", "DT_node_data_12"."LogProba_0" AS "LogProba_0", "DT_node_data_12"."Proba_1" AS "Proba_1", "DT_node_data_12"."LogProba_1" AS "LogProba_1", "DT_node_data_12"."Decision" AS "Decision", "DT_node_data_12"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup_12" LEFT OUTER JOIN "DT_node_data_12" ON "DT_node_lookup_12".node_id_2 = "DT_node_data_12".node_id), 
"ADB_Model_12" AS 
(SELECT "DT_Output_12"."KEY" AS "KEY", (1.0 * (CASE WHEN ("DT_Output_12"."Proba_0" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."Proba_0" IS NULL OR "DT_Output_12"."Proba_0" > 0.0) THEN ln("DT_Output_12"."Proba_0") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("DT_Output_12"."Proba_0" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."Proba_0" IS NULL OR "DT_Output_12"."Proba_0" > 0.0) THEN ln("DT_Output_12"."Proba_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("DT_Output_12"."Proba_1" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."Proba_1" IS NULL OR "DT_Output_12"."Proba_1" > 0.0) THEN ln("DT_Output_12"."Proba_1") ELSE -1.79769313486231e+308 END END) / 2)) / 16.0 AS "Score_0", 1.0 * (CASE WHEN ("DT_Output_12"."Proba_0" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."Proba_0" IS NULL OR "DT_Output_12"."Proba_0" > 0.0) THEN ln("DT_Output_12"."Proba_0") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("DT_Output_12"."Proba_0" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."Proba_0" IS NULL OR "DT_Output_12"."Proba_0" > 0.0) THEN ln("DT_Output_12"."Proba_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("DT_Output_12"."Proba_1" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."Proba_1" IS NULL OR "DT_Output_12"."Proba_1" > 0.0) THEN ln("DT_Output_12"."Proba_1") ELSE -1.79769313486231e+308 END END) / 2) AS "Proba_0", (1.0 * (CASE WHEN ("DT_Output_12"."Proba_1" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."Proba_1" IS NULL OR "DT_Output_12"."Proba_1" > 0.0) THEN ln("DT_Output_12"."Proba_1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("DT_Output_12"."Proba_0" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."Proba_0" IS NULL OR "DT_Output_12"."Proba_0" > 0.0) THEN ln("DT_Output_12"."Proba_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("DT_Output_12"."Proba_1" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."Proba_1" IS NULL OR "DT_Output_12"."Proba_1" > 0.0) THEN ln("DT_Output_12"."Proba_1") ELSE -1.79769313486231e+308 END END) / 2)) / 16.0 AS "Score_1", 1.0 * (CASE WHEN ("DT_Output_12"."Proba_1" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."Proba_1" IS NULL OR "DT_Output_12"."Proba_1" > 0.0) THEN ln("DT_Output_12"."Proba_1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("DT_Output_12"."Proba_0" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."Proba_0" IS NULL OR "DT_Output_12"."Proba_0" > 0.0) THEN ln("DT_Output_12"."Proba_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("DT_Output_12"."Proba_1" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."Proba_1" IS NULL OR "DT_Output_12"."Proba_1" > 0.0) THEN ln("DT_Output_12"."Proba_1") ELSE -1.79769313486231e+308 END END) / 2) AS "Proba_1" 
FROM "DT_Output_12"), 
"DT_node_lookup_13" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_29" <= 0.08466500043869) THEN 1 ELSE 2 END AS node_id_2 
FROM "BreastCancer" AS "ADS"), 
"DT_node_data_13" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values"."threshold" AS FLOAT) AS "threshold", CAST("Values"."count" AS FLOAT) AS "count", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Proba_0" AS FLOAT) AS "Proba_0", CAST("Values"."LogProba_0" AS FLOAT) AS "LogProba_0", CAST("Values"."Proba_1" AS FLOAT) AS "Proba_1", CAST("Values"."LogProba_1" AS FLOAT) AS "LogProba_1", CAST("Values"."Decision" AS FLOAT) AS "Decision", CAST("Values"."DecisionProba" AS FLOAT) AS "DecisionProba" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 286 AS "count", 1 AS depth, 0 AS parent_id, 0.669545907399212 AS "Proba_0", -0.401155546524014 AS "LogProba_0", 0.330454092600788 AS "Proba_1", -1.107287532210343 AS "LogProba_1", 0 AS "Decision", 0.669545907399212 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 169 AS "count", 1 AS depth, 0 AS parent_id, 0.090601905035006 AS "Proba_0", -2.401280039277816 AS "LogProba_0", 0.909398094964994 AS "Proba_1", -0.094972332419687 AS "LogProba_1", 1 AS "Decision", 0.909398094964994 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte) AS "Values"), 
"DT_Output_13" AS 
(SELECT "DT_node_lookup_13"."KEY" AS "KEY", "DT_node_lookup_13".node_id_2 AS node_id_2, "DT_node_data_13".node_id AS node_id, "DT_node_data_13".feature AS feature, "DT_node_data_13"."threshold" AS "threshold", "DT_node_data_13"."count" AS "count", "DT_node_data_13".depth AS depth, "DT_node_data_13".parent_id AS parent_id, "DT_node_data_13"."Proba_0" AS "Proba_0", "DT_node_data_13"."LogProba_0" AS "LogProba_0", "DT_node_data_13"."Proba_1" AS "Proba_1", "DT_node_data_13"."LogProba_1" AS "LogProba_1", "DT_node_data_13"."Decision" AS "Decision", "DT_node_data_13"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup_13" LEFT OUTER JOIN "DT_node_data_13" ON "DT_node_lookup_13".node_id_2 = "DT_node_data_13".node_id), 
"ADB_Model_13" AS 
(SELECT "DT_Output_13"."KEY" AS "KEY", (1.0 * (CASE WHEN ("DT_Output_13"."Proba_0" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."Proba_0" IS NULL OR "DT_Output_13"."Proba_0" > 0.0) THEN ln("DT_Output_13"."Proba_0") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("DT_Output_13"."Proba_0" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."Proba_0" IS NULL OR "DT_Output_13"."Proba_0" > 0.0) THEN ln("DT_Output_13"."Proba_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("DT_Output_13"."Proba_1" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."Proba_1" IS NULL OR "DT_Output_13"."Proba_1" > 0.0) THEN ln("DT_Output_13"."Proba_1") ELSE -1.79769313486231e+308 END END) / 2)) / 16.0 AS "Score_0", 1.0 * (CASE WHEN ("DT_Output_13"."Proba_0" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."Proba_0" IS NULL OR "DT_Output_13"."Proba_0" > 0.0) THEN ln("DT_Output_13"."Proba_0") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("DT_Output_13"."Proba_0" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."Proba_0" IS NULL OR "DT_Output_13"."Proba_0" > 0.0) THEN ln("DT_Output_13"."Proba_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("DT_Output_13"."Proba_1" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."Proba_1" IS NULL OR "DT_Output_13"."Proba_1" > 0.0) THEN ln("DT_Output_13"."Proba_1") ELSE -1.79769313486231e+308 END END) / 2) AS "Proba_0", (1.0 * (CASE WHEN ("DT_Output_13"."Proba_1" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."Proba_1" IS NULL OR "DT_Output_13"."Proba_1" > 0.0) THEN ln("DT_Output_13"."Proba_1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("DT_Output_13"."Proba_0" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."Proba_0" IS NULL OR "DT_Output_13"."Proba_0" > 0.0) THEN ln("DT_Output_13"."Proba_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("DT_Output_13"."Proba_1" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."Proba_1" IS NULL OR "DT_Output_13"."Proba_1" > 0.0) THEN ln("DT_Output_13"."Proba_1") ELSE -1.79769313486231e+308 END END) / 2)) / 16.0 AS "Score_1", 1.0 * (CASE WHEN ("DT_Output_13"."Proba_1" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."Proba_1" IS NULL OR "DT_Output_13"."Proba_1" > 0.0) THEN ln("DT_Output_13"."Proba_1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("DT_Output_13"."Proba_0" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."Proba_0" IS NULL OR "DT_Output_13"."Proba_0" > 0.0) THEN ln("DT_Output_13"."Proba_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("DT_Output_13"."Proba_1" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."Proba_1" IS NULL OR "DT_Output_13"."Proba_1" > 0.0) THEN ln("DT_Output_13"."Proba_1") ELSE -1.79769313486231e+308 END END) / 2) AS "Proba_1" 
FROM "DT_Output_13"), 
"DT_node_lookup_14" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_7" <= 0.028349999338388) THEN 1 ELSE 2 END AS node_id_2 
FROM "BreastCancer" AS "ADS"), 
"DT_node_data_14" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values"."threshold" AS FLOAT) AS "threshold", CAST("Values"."count" AS FLOAT) AS "count", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Proba_0" AS FLOAT) AS "Proba_0", CAST("Values"."LogProba_0" AS FLOAT) AS "LogProba_0", CAST("Values"."Proba_1" AS FLOAT) AS "Proba_1", CAST("Values"."LogProba_1" AS FLOAT) AS "LogProba_1", CAST("Values"."Decision" AS FLOAT) AS "Decision", CAST("Values"."DecisionProba" AS FLOAT) AS "DecisionProba" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 191 AS "count", 1 AS depth, 0 AS parent_id, 0.12813697627517 AS "Proba_0", -2.054655460090644 AS "LogProba_0", 0.87186302372483 AS "Proba_1", -0.137122950296336 AS "LogProba_1", 1 AS "Decision", 0.87186302372483 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 264 AS "count", 1 AS depth, 0 AS parent_id, 0.626822090468527 AS "Proba_0", -0.467092525872214 AS "LogProba_0", 0.373177909531473 AS "Proba_1", -0.985700003798721 AS "LogProba_1", 0 AS "Decision", 0.626822090468527 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte) AS "Values"), 
"DT_Output_14" AS 
(SELECT "DT_node_lookup_14"."KEY" AS "KEY", "DT_node_lookup_14".node_id_2 AS node_id_2, "DT_node_data_14".node_id AS node_id, "DT_node_data_14".feature AS feature, "DT_node_data_14"."threshold" AS "threshold", "DT_node_data_14"."count" AS "count", "DT_node_data_14".depth AS depth, "DT_node_data_14".parent_id AS parent_id, "DT_node_data_14"."Proba_0" AS "Proba_0", "DT_node_data_14"."LogProba_0" AS "LogProba_0", "DT_node_data_14"."Proba_1" AS "Proba_1", "DT_node_data_14"."LogProba_1" AS "LogProba_1", "DT_node_data_14"."Decision" AS "Decision", "DT_node_data_14"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup_14" LEFT OUTER JOIN "DT_node_data_14" ON "DT_node_lookup_14".node_id_2 = "DT_node_data_14".node_id), 
"ADB_Model_14" AS 
(SELECT "DT_Output_14"."KEY" AS "KEY", (1.0 * (CASE WHEN ("DT_Output_14"."Proba_0" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."Proba_0" IS NULL OR "DT_Output_14"."Proba_0" > 0.0) THEN ln("DT_Output_14"."Proba_0") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("DT_Output_14"."Proba_0" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."Proba_0" IS NULL OR "DT_Output_14"."Proba_0" > 0.0) THEN ln("DT_Output_14"."Proba_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("DT_Output_14"."Proba_1" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."Proba_1" IS NULL OR "DT_Output_14"."Proba_1" > 0.0) THEN ln("DT_Output_14"."Proba_1") ELSE -1.79769313486231e+308 END END) / 2)) / 16.0 AS "Score_0", 1.0 * (CASE WHEN ("DT_Output_14"."Proba_0" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."Proba_0" IS NULL OR "DT_Output_14"."Proba_0" > 0.0) THEN ln("DT_Output_14"."Proba_0") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("DT_Output_14"."Proba_0" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."Proba_0" IS NULL OR "DT_Output_14"."Proba_0" > 0.0) THEN ln("DT_Output_14"."Proba_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("DT_Output_14"."Proba_1" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."Proba_1" IS NULL OR "DT_Output_14"."Proba_1" > 0.0) THEN ln("DT_Output_14"."Proba_1") ELSE -1.79769313486231e+308 END END) / 2) AS "Proba_0", (1.0 * (CASE WHEN ("DT_Output_14"."Proba_1" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."Proba_1" IS NULL OR "DT_Output_14"."Proba_1" > 0.0) THEN ln("DT_Output_14"."Proba_1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("DT_Output_14"."Proba_0" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."Proba_0" IS NULL OR "DT_Output_14"."Proba_0" > 0.0) THEN ln("DT_Output_14"."Proba_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("DT_Output_14"."Proba_1" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."Proba_1" IS NULL OR "DT_Output_14"."Proba_1" > 0.0) THEN ln("DT_Output_14"."Proba_1") ELSE -1.79769313486231e+308 END END) / 2)) / 16.0 AS "Score_1", 1.0 * (CASE WHEN ("DT_Output_14"."Proba_1" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."Proba_1" IS NULL OR "DT_Output_14"."Proba_1" > 0.0) THEN ln("DT_Output_14"."Proba_1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("DT_Output_14"."Proba_0" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."Proba_0" IS NULL OR "DT_Output_14"."Proba_0" > 0.0) THEN ln("DT_Output_14"."Proba_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("DT_Output_14"."Proba_1" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."Proba_1" IS NULL OR "DT_Output_14"."Proba_1" > 0.0) THEN ln("DT_Output_14"."Proba_1") ELSE -1.79769313486231e+308 END END) / 2) AS "Proba_1" 
FROM "DT_Output_14"), 
"DT_node_lookup_15" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_22" <= 120.75) THEN 1 ELSE 2 END AS node_id_2 
FROM "BreastCancer" AS "ADS"), 
"DT_node_data_15" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values"."threshold" AS FLOAT) AS "threshold", CAST("Values"."count" AS FLOAT) AS "count", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Proba_0" AS FLOAT) AS "Proba_0", CAST("Values"."LogProba_0" AS FLOAT) AS "LogProba_0", CAST("Values"."Proba_1" AS FLOAT) AS "Proba_1", CAST("Values"."LogProba_1" AS FLOAT) AS "LogProba_1", CAST("Values"."Decision" AS FLOAT) AS "Decision", CAST("Values"."DecisionProba" AS FLOAT) AS "DecisionProba" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 332 AS "count", 1 AS depth, 0 AS parent_id, 0.399086255396445 AS "Proba_0", -0.918577706517115 AS "LogProba_0", 0.600913744603555 AS "Proba_1", -0.509303874541298 AS "LogProba_1", 1 AS "Decision", 0.600913744603555 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 123 AS "count", 1 AS depth, 0 AS parent_id, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0 AS "Decision", 1.0 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte) AS "Values"), 
"DT_Output_15" AS 
(SELECT "DT_node_lookup_15"."KEY" AS "KEY", "DT_node_lookup_15".node_id_2 AS node_id_2, "DT_node_data_15".node_id AS node_id, "DT_node_data_15".feature AS feature, "DT_node_data_15"."threshold" AS "threshold", "DT_node_data_15"."count" AS "count", "DT_node_data_15".depth AS depth, "DT_node_data_15".parent_id AS parent_id, "DT_node_data_15"."Proba_0" AS "Proba_0", "DT_node_data_15"."LogProba_0" AS "LogProba_0", "DT_node_data_15"."Proba_1" AS "Proba_1", "DT_node_data_15"."LogProba_1" AS "LogProba_1", "DT_node_data_15"."Decision" AS "Decision", "DT_node_data_15"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup_15" LEFT OUTER JOIN "DT_node_data_15" ON "DT_node_lookup_15".node_id_2 = "DT_node_data_15".node_id), 
"ADB_Model_15" AS 
(SELECT "DT_Output_15"."KEY" AS "KEY", (1.0 * (CASE WHEN ("DT_Output_15"."Proba_0" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."Proba_0" IS NULL OR "DT_Output_15"."Proba_0" > 0.0) THEN ln("DT_Output_15"."Proba_0") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("DT_Output_15"."Proba_0" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."Proba_0" IS NULL OR "DT_Output_15"."Proba_0" > 0.0) THEN ln("DT_Output_15"."Proba_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("DT_Output_15"."Proba_1" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."Proba_1" IS NULL OR "DT_Output_15"."Proba_1" > 0.0) THEN ln("DT_Output_15"."Proba_1") ELSE -1.79769313486231e+308 END END) / 2)) / 16.0 AS "Score_0", 1.0 * (CASE WHEN ("DT_Output_15"."Proba_0" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."Proba_0" IS NULL OR "DT_Output_15"."Proba_0" > 0.0) THEN ln("DT_Output_15"."Proba_0") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("DT_Output_15"."Proba_0" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."Proba_0" IS NULL OR "DT_Output_15"."Proba_0" > 0.0) THEN ln("DT_Output_15"."Proba_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("DT_Output_15"."Proba_1" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."Proba_1" IS NULL OR "DT_Output_15"."Proba_1" > 0.0) THEN ln("DT_Output_15"."Proba_1") ELSE -1.79769313486231e+308 END END) / 2) AS "Proba_0", (1.0 * (CASE WHEN ("DT_Output_15"."Proba_1" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."Proba_1" IS NULL OR "DT_Output_15"."Proba_1" > 0.0) THEN ln("DT_Output_15"."Proba_1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("DT_Output_15"."Proba_0" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."Proba_0" IS NULL OR "DT_Output_15"."Proba_0" > 0.0) THEN ln("DT_Output_15"."Proba_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("DT_Output_15"."Proba_1" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."Proba_1" IS NULL OR "DT_Output_15"."Proba_1" > 0.0) THEN ln("DT_Output_15"."Proba_1") ELSE -1.79769313486231e+308 END END) / 2)) / 16.0 AS "Score_1", 1.0 * (CASE WHEN ("DT_Output_15"."Proba_1" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."Proba_1" IS NULL OR "DT_Output_15"."Proba_1" > 0.0) THEN ln("DT_Output_15"."Proba_1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("DT_Output_15"."Proba_0" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."Proba_0" IS NULL OR "DT_Output_15"."Proba_0" > 0.0) THEN ln("DT_Output_15"."Proba_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("DT_Output_15"."Proba_1" <= 0.0) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."Proba_1" IS NULL OR "DT_Output_15"."Proba_1" > 0.0) THEN ln("DT_Output_15"."Proba_1") ELSE -1.79769313486231e+308 END END) / 2) AS "Proba_1" 
FROM "DT_Output_15")
 SELECT "ADB_B1"."KEY", "ADB_B1"."Score_0", "ADB_B1"."Proba_0", "ADB_B1"."Score_1", "ADB_B1"."Proba_1" 
FROM (SELECT "ADB_esu_1"."KEY" AS "KEY", "ADB_esu_1"."Score_0" AS "Score_0", "ADB_esu_1"."Proba_0" AS "Proba_0", "ADB_esu_1"."Score_1" AS "Score_1", "ADB_esu_1"."Proba_1" AS "Proba_1" 
FROM (SELECT "ADB_Model_10"."KEY" AS "KEY", "ADB_Model_10"."Score_0" AS "Score_0", "ADB_Model_10"."Proba_0" AS "Proba_0", "ADB_Model_10"."Score_1" AS "Score_1", "ADB_Model_10"."Proba_1" AS "Proba_1" 
FROM "ADB_Model_10" UNION ALL SELECT "ADB_Model_11"."KEY" AS "KEY", "ADB_Model_11"."Score_0" AS "Score_0", "ADB_Model_11"."Proba_0" AS "Proba_0", "ADB_Model_11"."Score_1" AS "Score_1", "ADB_Model_11"."Proba_1" AS "Proba_1" 
FROM "ADB_Model_11" UNION ALL SELECT "ADB_Model_12"."KEY" AS "KEY", "ADB_Model_12"."Score_0" AS "Score_0", "ADB_Model_12"."Proba_0" AS "Proba_0", "ADB_Model_12"."Score_1" AS "Score_1", "ADB_Model_12"."Proba_1" AS "Proba_1" 
FROM "ADB_Model_12" UNION ALL SELECT "ADB_Model_13"."KEY" AS "KEY", "ADB_Model_13"."Score_0" AS "Score_0", "ADB_Model_13"."Proba_0" AS "Proba_0", "ADB_Model_13"."Score_1" AS "Score_1", "ADB_Model_13"."Proba_1" AS "Proba_1" 
FROM "ADB_Model_13" UNION ALL SELECT "ADB_Model_14"."KEY" AS "KEY", "ADB_Model_14"."Score_0" AS "Score_0", "ADB_Model_14"."Proba_0" AS "Proba_0", "ADB_Model_14"."Score_1" AS "Score_1", "ADB_Model_14"."Proba_1" AS "Proba_1" 
FROM "ADB_Model_14" UNION ALL SELECT "ADB_Model_15"."KEY" AS "KEY", "ADB_Model_15"."Score_0" AS "Score_0", "ADB_Model_15"."Proba_0" AS "Proba_0", "ADB_Model_15"."Score_1" AS "Score_1", "ADB_Model_15"."Proba_1" AS "Proba_1" 
FROM "ADB_Model_15") AS "ADB_esu_1") AS "ADB_B1") AS "U"

-- Code For temporary table tmp_20180416231446_rbpncr_adb_ part 1/2. Create 


CREATE GLOBAL TEMPORARY TABLE tmp_20180416231446_rbpncr_adb_  (
	"KEY" BIGINT, 
	"Score_0" FLOAT, 
	"Proba_0" FLOAT, 
	"Score_1" FLOAT, 
	"Proba_1" FLOAT
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table tmp_20180416231446_rbpncr_adb_ part 2/2. Populate

INSERT INTO tmp_20180416231446_rbpncr_adb_ ("KEY", "Score_0", "Proba_0", "Score_1", "Proba_1") SELECT "U"."KEY", "U"."Score_0", "U"."Proba_0", "U"."Score_1", "U"."Proba_1" 
FROM (SELECT "ADB_Union"."KEY", "ADB_Union"."Score_0", "ADB_Union"."Proba_0", "ADB_Union"."Score_1", "ADB_Union"."Proba_1" 
FROM (SELECT "ADB_EnsembleUnion"."KEY" AS "KEY", "ADB_EnsembleUnion"."Score_0" AS "Score_0", "ADB_EnsembleUnion"."Proba_0" AS "Proba_0", "ADB_EnsembleUnion"."Score_1" AS "Score_1", "ADB_EnsembleUnion"."Proba_1" AS "Proba_1" 
FROM (SELECT "ADB_B0"."KEY" AS "KEY", "ADB_B0"."Score_0" AS "Score_0", "ADB_B0"."Proba_0" AS "Proba_0", "ADB_B0"."Score_1" AS "Score_1", "ADB_B0"."Proba_1" AS "Proba_1" 
FROM tmp_20180416231446_equ5yc_adb_ AS "ADB_B0" UNION ALL SELECT "ADB_B1"."KEY" AS "KEY", "ADB_B1"."Score_0" AS "Score_0", "ADB_B1"."Proba_0" AS "Proba_0", "ADB_B1"."Score_1" AS "Score_1", "ADB_B1"."Proba_1" AS "Proba_1" 
FROM tmp_20180416231446_jpouml_adb_ AS "ADB_B1") AS "ADB_EnsembleUnion") AS "ADB_Union") AS "U"

-- Code For temporary table tmp_20180416231446_inuf32_adb_ part 1/2. Create 


CREATE GLOBAL TEMPORARY TABLE tmp_20180416231446_inuf32_adb_  (
	"KEY" BIGINT, 
	"Score_0" FLOAT, 
	"Proba_0" FLOAT, 
	"Score_1" FLOAT, 
	"Proba_1" FLOAT
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table tmp_20180416231446_inuf32_adb_ part 2/2. Populate

INSERT INTO tmp_20180416231446_inuf32_adb_ ("KEY", "Score_0", "Proba_0", "Score_1", "Proba_1") SELECT "U"."KEY", "U"."Score_0", "U"."Proba_0", "U"."Score_1", "U"."Proba_1" 
FROM (SELECT "ADB_sum"."KEY", "ADB_sum"."Score_0", "ADB_sum"."Proba_0", "ADB_sum"."Score_1", "ADB_sum"."Proba_1" 
FROM (SELECT "T"."KEY" AS "KEY", CAST("T"."Score_0" AS FLOAT) AS "Score_0", CAST("T"."Proba_0" AS FLOAT) AS "Proba_0", CAST("T"."Score_1" AS FLOAT) AS "Score_1", CAST("T"."Proba_1" AS FLOAT) AS "Proba_1" 
FROM (SELECT "ADB_Union"."KEY" AS "KEY", sum("ADB_Union"."Score_0") AS "Score_0", sum("ADB_Union"."Proba_0") AS "Proba_0", sum("ADB_Union"."Score_1") AS "Score_1", sum("ADB_Union"."Proba_1") AS "Proba_1" 
FROM tmp_20180416231446_rbpncr_adb_ AS "ADB_Union" GROUP BY "ADB_Union"."KEY") AS "T") AS "ADB_sum") AS "U"

-- Model deployment code

WITH "AdaBoost_AVG_Scores_BN" AS 
(SELECT "ADB_sum"."KEY" AS "KEY", "ADB_sum"."Score_0" AS "Score_0", "ADB_sum"."Proba_0" AS "Proba_0", "ADB_sum"."Score_1" AS "Score_1", "ADB_sum"."Proba_1" AS "Proba_1" 
FROM tmp_20180416231446_inuf32_adb_ AS "ADB_sum"), 
"AdaBoost_AVG_Scores" AS 
(SELECT "AdaBoost_AVG_Scores_BN"."KEY" AS "KEY", -("AdaBoost_AVG_Scores_BN"."Score_1" - "AdaBoost_AVG_Scores_BN"."Score_0") AS "Score_0", exp(("AdaBoost_AVG_Scores_BN"."Proba_0" / 16.0) / 1) / (exp(("AdaBoost_AVG_Scores_BN"."Proba_0" / 16.0) / 1) + exp(("AdaBoost_AVG_Scores_BN"."Proba_1" / 16.0) / 1)) AS "Proba_0", CAST(NULL AS FLOAT) AS "LogProba_0", "AdaBoost_AVG_Scores_BN"."Score_1" - "AdaBoost_AVG_Scores_BN"."Score_0" AS "Score_1", exp(("AdaBoost_AVG_Scores_BN"."Proba_1" / 16.0) / 1) / (exp(("AdaBoost_AVG_Scores_BN"."Proba_0" / 16.0) / 1) + exp(("AdaBoost_AVG_Scores_BN"."Proba_1" / 16.0) / 1)) AS "Proba_1", CAST(NULL AS FLOAT) AS "LogProba_1" 
FROM "AdaBoost_AVG_Scores_BN"), 
orig_cte AS 
(SELECT "AdaBoost_AVG_Scores"."KEY" AS "KEY", "AdaBoost_AVG_Scores"."Score_0" AS "Score_0", "AdaBoost_AVG_Scores"."Score_1" AS "Score_1", "AdaBoost_AVG_Scores"."Proba_0" AS "Proba_0", "AdaBoost_AVG_Scores"."Proba_1" AS "Proba_1", "AdaBoost_AVG_Scores"."LogProba_0" AS "LogProba_0", "AdaBoost_AVG_Scores"."LogProba_1" AS "LogProba_1", CAST(NULL AS BIGINT) AS "Decision", CAST(NULL AS FLOAT) AS "DecisionProba" 
FROM "AdaBoost_AVG_Scores"), 
score_class_union AS 
(SELECT scu."KEY_u" AS "KEY_u", scu."class" AS "class", scu."LogProba" AS "LogProba", scu."Proba" AS "Proba", scu."Score" AS "Score" 
FROM (SELECT orig_cte."KEY" AS "KEY_u", 0 AS "class", orig_cte."LogProba_0" AS "LogProba", orig_cte."Proba_0" AS "Proba", orig_cte."Score_0" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 1 AS "class", orig_cte."LogProba_1" AS "LogProba", orig_cte."Proba_1" AS "Proba", orig_cte."Score_1" AS "Score" 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte."KEY" AS "KEY", orig_cte."Score_0" AS "Score_0", orig_cte."Score_1" AS "Score_1", orig_cte."Proba_0" AS "Proba_0", orig_cte."Proba_1" AS "Proba_1", orig_cte."LogProba_0" AS "LogProba_0", orig_cte."LogProba_1" AS "LogProba_1", orig_cte."Decision" AS "Decision", orig_cte."DecisionProba" AS "DecisionProba", max_select."KEY_m" AS "KEY_m", max_select."max_Score" AS "max_Score" 
FROM orig_cte LEFT OUTER JOIN (SELECT score_class_union."KEY_u" AS "KEY_m", max(score_class_union."Score") AS "max_Score" 
FROM score_class_union GROUP BY score_class_union."KEY_u") AS max_select ON orig_cte."KEY" = max_select."KEY_m"), 
union_with_max AS 
(SELECT score_class_union."KEY_u" AS "KEY_u", score_class_union."class" AS "class", score_class_union."LogProba" AS "LogProba", score_class_union."Proba" AS "Proba", score_class_union."Score" AS "Score", score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."Decision" AS "Decision", score_max."DecisionProba" AS "DecisionProba", score_max."KEY_m" AS "KEY_m", score_max."max_Score" AS "max_Score" 
FROM score_class_union LEFT OUTER JOIN score_max ON score_class_union."KEY_u" = score_max."KEY"), 
arg_max_cte AS 
(SELECT score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."Decision" AS "Decision", score_max."DecisionProba" AS "DecisionProba", score_max."KEY_m" AS "KEY_m", score_max."max_Score" AS "max_Score", "arg_max_t_Score"."KEY_Score" AS "KEY_Score", "arg_max_t_Score"."arg_max_Score" AS "arg_max_Score" 
FROM score_max LEFT OUTER JOIN (SELECT union_with_max."KEY" AS "KEY_Score", min(union_with_max."class") AS "arg_max_Score" 
FROM union_with_max 
WHERE union_with_max."max_Score" <= union_with_max."Score" GROUP BY union_with_max."KEY") AS "arg_max_t_Score" ON score_max."KEY" = "arg_max_t_Score"."KEY_Score")
 SELECT arg_max_cte."KEY" AS "KEY", arg_max_cte."Score_0" AS "Score_0", arg_max_cte."Score_1" AS "Score_1", arg_max_cte."Proba_0" AS "Proba_0", arg_max_cte."Proba_1" AS "Proba_1", CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN ln(arg_max_cte."Proba_0") ELSE -1.79769313486231e+308 END AS "LogProba_0", CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN ln(arg_max_cte."Proba_1") ELSE -1.79769313486231e+308 END AS "LogProba_1", arg_max_cte."arg_max_Score" AS "Decision", CASE WHEN (arg_max_cte."arg_max_Score" = 0) THEN arg_max_cte."Proba_0" WHEN (arg_max_cte."arg_max_Score" = 1) THEN arg_max_cte."Proba_1" END AS "DecisionProba" 
FROM arg_max_cte