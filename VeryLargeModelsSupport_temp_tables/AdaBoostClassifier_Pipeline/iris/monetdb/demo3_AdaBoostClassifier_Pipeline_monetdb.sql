-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2018

-- Model : AdaBoostClassifier_Pipeline
-- Dataset : iris
-- Database : monetdb


-- This SQL code can contain one or more statements, to be executed in the order they appear in this file.



-- Code For temporary table tmp_20180417042017_jblo4x_ads_imp_1_out part 1/2. Create 


CREATE TEMPORARY TABLE tmp_20180417042017_jblo4x_ads_imp_1_out (
	"KEY" BIGINT NOT NULL, 
	imputer_output_2 FLOAT, 
	imputer_output_3 FLOAT, 
	imputer_output_4 FLOAT, 
	imputer_output_5 FLOAT, 
	PRIMARY KEY ("KEY")
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table tmp_20180417042017_jblo4x_ads_imp_1_out part 2/2. Populate

INSERT INTO tmp_20180417042017_jblo4x_ads_imp_1_out ("KEY", imputer_output_2, imputer_output_3, imputer_output_4, imputer_output_5) SELECT "U"."KEY", "U".imputer_output_2, "U".imputer_output_3, "U".imputer_output_4, "U".imputer_output_5 
FROM (SELECT "ADS_imp_1_OUT"."KEY", "ADS_imp_1_OUT".imputer_output_2, "ADS_imp_1_OUT".imputer_output_3, "ADS_imp_1_OUT".imputer_output_4, "ADS_imp_1_OUT".imputer_output_5 
FROM (SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" IS NULL) THEN 5.8474999999999975 ELSE "ADS"."Feature_0" END AS imputer_output_2, CASE WHEN ("ADS"."Feature_1" IS NULL) THEN 3.0366666666666657 ELSE "ADS"."Feature_1" END AS imputer_output_3, CASE WHEN ("ADS"."Feature_2" IS NULL) THEN 3.8450000000000006 ELSE "ADS"."Feature_2" END AS imputer_output_4, CASE WHEN ("ADS"."Feature_3" IS NULL) THEN 1.245 ELSE "ADS"."Feature_3" END AS imputer_output_5 
FROM iris AS "ADS") AS "ADS_imp_1_OUT") AS "U"

-- Code For temporary table tmp_20180417042017_d3fbux_ads_sca_2_out part 1/2. Create 


CREATE TEMPORARY TABLE tmp_20180417042017_d3fbux_ads_sca_2_out (
	"KEY" BIGINT NOT NULL, 
	scaler_output_2 FLOAT, 
	scaler_output_3 FLOAT, 
	scaler_output_4 FLOAT, 
	scaler_output_5 FLOAT, 
	PRIMARY KEY ("KEY")
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table tmp_20180417042017_d3fbux_ads_sca_2_out part 2/2. Populate

INSERT INTO tmp_20180417042017_d3fbux_ads_sca_2_out ("KEY", scaler_output_2, scaler_output_3, scaler_output_4, scaler_output_5) SELECT "U"."KEY", "U".scaler_output_2, "U".scaler_output_3, "U".scaler_output_4, "U".scaler_output_5 
FROM (SELECT "ADS_sca_2_OUT"."KEY", "ADS_sca_2_OUT".scaler_output_2, "ADS_sca_2_OUT".scaler_output_3, "ADS_sca_2_OUT".scaler_output_4, "ADS_sca_2_OUT".scaler_output_5 
FROM (SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", (CAST("ADS_imp_1_OUT".imputer_output_2 AS FLOAT) - 5.8474999999999975) / 0.827039146594646 AS scaler_output_2, (CAST("ADS_imp_1_OUT".imputer_output_3 AS FLOAT) - 3.0366666666666657) / 0.43625935201691934 AS scaler_output_3, (CAST("ADS_imp_1_OUT".imputer_output_4 AS FLOAT) - 3.8450000000000006) / 1.709817241695732 AS scaler_output_4, (CAST("ADS_imp_1_OUT".imputer_output_5 AS FLOAT) - 1.245) / 0.7498722113355939 AS scaler_output_5 
FROM tmp_20180417042017_jblo4x_ads_imp_1_out AS "ADS_imp_1_OUT") AS "ADS_sca_2_OUT") AS "U"

-- Code For temporary table tmp_20180417042017_1xedom_adb_b0 part 1/2. Create 


CREATE TEMPORARY TABLE tmp_20180417042017_1xedom_adb_b0 (
	"KEY" BIGINT, 
	"Score_0" FLOAT, 
	"Proba_0" FLOAT, 
	"Score_1" FLOAT, 
	"Proba_1" FLOAT, 
	"Score_2" FLOAT, 
	"Proba_2" FLOAT
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table tmp_20180417042017_1xedom_adb_b0 part 2/2. Populate

INSERT INTO tmp_20180417042017_1xedom_adb_b0 ("KEY", "Score_0", "Proba_0", "Score_1", "Proba_1", "Score_2", "Proba_2") SELECT "U"."KEY", "U"."Score_0", "U"."Proba_0", "U"."Score_1", "U"."Proba_1", "U"."Score_2", "U"."Proba_2" 
FROM (WITH "DT_node_lookup" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.8158766627311707) THEN 1 ELSE 2 END AS node_id_2 
FROM tmp_20180417042017_d3fbux_ads_sca_2_out AS "ADS_sca_2_OUT"), 
"DT_node_data" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values".threshold AS FLOAT) AS threshold, CAST("Values".count AS FLOAT) AS count, CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Proba_0" AS FLOAT) AS "Proba_0", CAST("Values"."LogProba_0" AS FLOAT) AS "LogProba_0", CAST("Values"."Proba_1" AS FLOAT) AS "Proba_1", CAST("Values"."LogProba_1" AS FLOAT) AS "LogProba_1", CAST("Values"."Proba_2" AS FLOAT) AS "Proba_2", CAST("Values"."LogProba_2" AS FLOAT) AS "LogProba_2", CAST("Values"."Decision" AS FLOAT) AS "Decision", CAST("Values"."DecisionProba" AS FLOAT) AS "DecisionProba" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 37 AS count, 1 AS depth, 0 AS parent_id, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 83 AS count, 1 AS depth, 0 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.4819277108433735 AS "Proba_1", -0.7299611536826617 AS "LogProba_1", 0.5180722891566266 AS "Proba_2", -0.6576404921030353 AS "LogProba_2", 2 AS "Decision", 0.5180722891566266 AS "DecisionProba") AS "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".node_id AS node_id, "DT_node_data".feature AS feature, "DT_node_data".threshold AS threshold, "DT_node_data".count AS count, "DT_node_data".depth AS depth, "DT_node_data".parent_id AS parent_id, "DT_node_data"."Proba_0" AS "Proba_0", "DT_node_data"."LogProba_0" AS "LogProba_0", "DT_node_data"."Proba_1" AS "Proba_1", "DT_node_data"."LogProba_1" AS "LogProba_1", "DT_node_data"."Proba_2" AS "Proba_2", "DT_node_data"."LogProba_2" AS "LogProba_2", "DT_node_data"."Decision" AS "Decision", "DT_node_data"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".node_id), 
"ADB_Model_0" AS 
(SELECT "DT_Output"."KEY" AS "KEY", (2.0 * (CASE WHEN ("DT_Output"."Proba_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output"."Proba_0" IS NULL OR "DT_Output"."Proba_0" > 1e-100) THEN "DT_Output"."Proba_0" ELSE 1e-100 END) END - (CASE WHEN ("DT_Output"."Proba_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output"."Proba_0" IS NULL OR "DT_Output"."Proba_0" > 1e-100) THEN "DT_Output"."Proba_0" ELSE 1e-100 END) END + CASE WHEN ("DT_Output"."Proba_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output"."Proba_1" IS NULL OR "DT_Output"."Proba_1" > 1e-100) THEN "DT_Output"."Proba_1" ELSE 1e-100 END) END + CASE WHEN ("DT_Output"."Proba_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output"."Proba_2" IS NULL OR "DT_Output"."Proba_2" > 1e-100) THEN "DT_Output"."Proba_2" ELSE 1e-100 END) END) / 3)) / 16.0 AS "Score_0", 2.0 * (CASE WHEN ("DT_Output"."Proba_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output"."Proba_0" IS NULL OR "DT_Output"."Proba_0" > 1e-100) THEN "DT_Output"."Proba_0" ELSE 1e-100 END) END - (CASE WHEN ("DT_Output"."Proba_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output"."Proba_0" IS NULL OR "DT_Output"."Proba_0" > 1e-100) THEN "DT_Output"."Proba_0" ELSE 1e-100 END) END + CASE WHEN ("DT_Output"."Proba_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output"."Proba_1" IS NULL OR "DT_Output"."Proba_1" > 1e-100) THEN "DT_Output"."Proba_1" ELSE 1e-100 END) END + CASE WHEN ("DT_Output"."Proba_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output"."Proba_2" IS NULL OR "DT_Output"."Proba_2" > 1e-100) THEN "DT_Output"."Proba_2" ELSE 1e-100 END) END) / 3) AS "Proba_0", (2.0 * (CASE WHEN ("DT_Output"."Proba_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output"."Proba_1" IS NULL OR "DT_Output"."Proba_1" > 1e-100) THEN "DT_Output"."Proba_1" ELSE 1e-100 END) END - (CASE WHEN ("DT_Output"."Proba_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output"."Proba_0" IS NULL OR "DT_Output"."Proba_0" > 1e-100) THEN "DT_Output"."Proba_0" ELSE 1e-100 END) END + CASE WHEN ("DT_Output"."Proba_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output"."Proba_1" IS NULL OR "DT_Output"."Proba_1" > 1e-100) THEN "DT_Output"."Proba_1" ELSE 1e-100 END) END + CASE WHEN ("DT_Output"."Proba_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output"."Proba_2" IS NULL OR "DT_Output"."Proba_2" > 1e-100) THEN "DT_Output"."Proba_2" ELSE 1e-100 END) END) / 3)) / 16.0 AS "Score_1", 2.0 * (CASE WHEN ("DT_Output"."Proba_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output"."Proba_1" IS NULL OR "DT_Output"."Proba_1" > 1e-100) THEN "DT_Output"."Proba_1" ELSE 1e-100 END) END - (CASE WHEN ("DT_Output"."Proba_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output"."Proba_0" IS NULL OR "DT_Output"."Proba_0" > 1e-100) THEN "DT_Output"."Proba_0" ELSE 1e-100 END) END + CASE WHEN ("DT_Output"."Proba_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output"."Proba_1" IS NULL OR "DT_Output"."Proba_1" > 1e-100) THEN "DT_Output"."Proba_1" ELSE 1e-100 END) END + CASE WHEN ("DT_Output"."Proba_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output"."Proba_2" IS NULL OR "DT_Output"."Proba_2" > 1e-100) THEN "DT_Output"."Proba_2" ELSE 1e-100 END) END) / 3) AS "Proba_1", (2.0 * (CASE WHEN ("DT_Output"."Proba_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output"."Proba_2" IS NULL OR "DT_Output"."Proba_2" > 1e-100) THEN "DT_Output"."Proba_2" ELSE 1e-100 END) END - (CASE WHEN ("DT_Output"."Proba_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output"."Proba_0" IS NULL OR "DT_Output"."Proba_0" > 1e-100) THEN "DT_Output"."Proba_0" ELSE 1e-100 END) END + CASE WHEN ("DT_Output"."Proba_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output"."Proba_1" IS NULL OR "DT_Output"."Proba_1" > 1e-100) THEN "DT_Output"."Proba_1" ELSE 1e-100 END) END + CASE WHEN ("DT_Output"."Proba_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output"."Proba_2" IS NULL OR "DT_Output"."Proba_2" > 1e-100) THEN "DT_Output"."Proba_2" ELSE 1e-100 END) END) / 3)) / 16.0 AS "Score_2", 2.0 * (CASE WHEN ("DT_Output"."Proba_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output"."Proba_2" IS NULL OR "DT_Output"."Proba_2" > 1e-100) THEN "DT_Output"."Proba_2" ELSE 1e-100 END) END - (CASE WHEN ("DT_Output"."Proba_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output"."Proba_0" IS NULL OR "DT_Output"."Proba_0" > 1e-100) THEN "DT_Output"."Proba_0" ELSE 1e-100 END) END + CASE WHEN ("DT_Output"."Proba_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output"."Proba_1" IS NULL OR "DT_Output"."Proba_1" > 1e-100) THEN "DT_Output"."Proba_1" ELSE 1e-100 END) END + CASE WHEN ("DT_Output"."Proba_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output"."Proba_2" IS NULL OR "DT_Output"."Proba_2" > 1e-100) THEN "DT_Output"."Proba_2" ELSE 1e-100 END) END) / 3) AS "Proba_2" 
FROM "DT_Output"), 
"DT_node_lookup_1" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.5877821445465088) THEN 1 ELSE 2 END AS node_id_2 
FROM tmp_20180417042017_d3fbux_ads_sca_2_out AS "ADS_sca_2_OUT"), 
"DT_node_data_1" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values".threshold AS FLOAT) AS threshold, CAST("Values".count AS FLOAT) AS count, CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Proba_0" AS FLOAT) AS "Proba_0", CAST("Values"."LogProba_0" AS FLOAT) AS "LogProba_0", CAST("Values"."Proba_1" AS FLOAT) AS "Proba_1", CAST("Values"."LogProba_1" AS FLOAT) AS "LogProba_1", CAST("Values"."Proba_2" AS FLOAT) AS "Proba_2", CAST("Values"."LogProba_2" AS FLOAT) AS "LogProba_2", CAST("Values"."Decision" AS FLOAT) AS "Decision", CAST("Values"."DecisionProba" AS FLOAT) AS "DecisionProba" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 76 AS count, 1 AS depth, 0 AS parent_id, 4.412618350835303e-06 AS "Proba_0", -12.331042314345506 AS "LogProba_0", 0.9521202749995236 AS "Proba_1", -0.04906391288569328 AS "LogProba_1", 0.04787531238212566 AS "Proba_2", -3.039155306549598 AS "LogProba_2", 1 AS "Decision", 0.9521202749995236 AS "DecisionProba" UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 44 AS count, 1 AS depth, 0 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.07292255511588465 AS "Proba_1", -2.6183572897981136 AS "LogProba_1", 0.9270774448841154 AS "Proba_2", -0.07571817334154111 AS "LogProba_2", 2 AS "Decision", 0.9270774448841154 AS "DecisionProba") AS "Values"), 
"DT_Output_1" AS 
(SELECT "DT_node_lookup_1"."KEY" AS "KEY", "DT_node_lookup_1".node_id_2 AS node_id_2, "DT_node_data_1".node_id AS node_id, "DT_node_data_1".feature AS feature, "DT_node_data_1".threshold AS threshold, "DT_node_data_1".count AS count, "DT_node_data_1".depth AS depth, "DT_node_data_1".parent_id AS parent_id, "DT_node_data_1"."Proba_0" AS "Proba_0", "DT_node_data_1"."LogProba_0" AS "LogProba_0", "DT_node_data_1"."Proba_1" AS "Proba_1", "DT_node_data_1"."LogProba_1" AS "LogProba_1", "DT_node_data_1"."Proba_2" AS "Proba_2", "DT_node_data_1"."LogProba_2" AS "LogProba_2", "DT_node_data_1"."Decision" AS "Decision", "DT_node_data_1"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup_1" LEFT OUTER JOIN "DT_node_data_1" ON "DT_node_lookup_1".node_id_2 = "DT_node_data_1".node_id), 
"ADB_Model_1" AS 
(SELECT "DT_Output_1"."KEY" AS "KEY", (2.0 * (CASE WHEN ("DT_Output_1"."Proba_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_1"."Proba_0" IS NULL OR "DT_Output_1"."Proba_0" > 1e-100) THEN "DT_Output_1"."Proba_0" ELSE 1e-100 END) END - (CASE WHEN ("DT_Output_1"."Proba_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_1"."Proba_0" IS NULL OR "DT_Output_1"."Proba_0" > 1e-100) THEN "DT_Output_1"."Proba_0" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_1"."Proba_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_1"."Proba_1" IS NULL OR "DT_Output_1"."Proba_1" > 1e-100) THEN "DT_Output_1"."Proba_1" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_1"."Proba_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_1"."Proba_2" IS NULL OR "DT_Output_1"."Proba_2" > 1e-100) THEN "DT_Output_1"."Proba_2" ELSE 1e-100 END) END) / 3)) / 16.0 AS "Score_0", 2.0 * (CASE WHEN ("DT_Output_1"."Proba_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_1"."Proba_0" IS NULL OR "DT_Output_1"."Proba_0" > 1e-100) THEN "DT_Output_1"."Proba_0" ELSE 1e-100 END) END - (CASE WHEN ("DT_Output_1"."Proba_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_1"."Proba_0" IS NULL OR "DT_Output_1"."Proba_0" > 1e-100) THEN "DT_Output_1"."Proba_0" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_1"."Proba_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_1"."Proba_1" IS NULL OR "DT_Output_1"."Proba_1" > 1e-100) THEN "DT_Output_1"."Proba_1" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_1"."Proba_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_1"."Proba_2" IS NULL OR "DT_Output_1"."Proba_2" > 1e-100) THEN "DT_Output_1"."Proba_2" ELSE 1e-100 END) END) / 3) AS "Proba_0", (2.0 * (CASE WHEN ("DT_Output_1"."Proba_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_1"."Proba_1" IS NULL OR "DT_Output_1"."Proba_1" > 1e-100) THEN "DT_Output_1"."Proba_1" ELSE 1e-100 END) END - (CASE WHEN ("DT_Output_1"."Proba_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_1"."Proba_0" IS NULL OR "DT_Output_1"."Proba_0" > 1e-100) THEN "DT_Output_1"."Proba_0" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_1"."Proba_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_1"."Proba_1" IS NULL OR "DT_Output_1"."Proba_1" > 1e-100) THEN "DT_Output_1"."Proba_1" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_1"."Proba_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_1"."Proba_2" IS NULL OR "DT_Output_1"."Proba_2" > 1e-100) THEN "DT_Output_1"."Proba_2" ELSE 1e-100 END) END) / 3)) / 16.0 AS "Score_1", 2.0 * (CASE WHEN ("DT_Output_1"."Proba_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_1"."Proba_1" IS NULL OR "DT_Output_1"."Proba_1" > 1e-100) THEN "DT_Output_1"."Proba_1" ELSE 1e-100 END) END - (CASE WHEN ("DT_Output_1"."Proba_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_1"."Proba_0" IS NULL OR "DT_Output_1"."Proba_0" > 1e-100) THEN "DT_Output_1"."Proba_0" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_1"."Proba_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_1"."Proba_1" IS NULL OR "DT_Output_1"."Proba_1" > 1e-100) THEN "DT_Output_1"."Proba_1" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_1"."Proba_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_1"."Proba_2" IS NULL OR "DT_Output_1"."Proba_2" > 1e-100) THEN "DT_Output_1"."Proba_2" ELSE 1e-100 END) END) / 3) AS "Proba_1", (2.0 * (CASE WHEN ("DT_Output_1"."Proba_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_1"."Proba_2" IS NULL OR "DT_Output_1"."Proba_2" > 1e-100) THEN "DT_Output_1"."Proba_2" ELSE 1e-100 END) END - (CASE WHEN ("DT_Output_1"."Proba_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_1"."Proba_0" IS NULL OR "DT_Output_1"."Proba_0" > 1e-100) THEN "DT_Output_1"."Proba_0" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_1"."Proba_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_1"."Proba_1" IS NULL OR "DT_Output_1"."Proba_1" > 1e-100) THEN "DT_Output_1"."Proba_1" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_1"."Proba_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_1"."Proba_2" IS NULL OR "DT_Output_1"."Proba_2" > 1e-100) THEN "DT_Output_1"."Proba_2" ELSE 1e-100 END) END) / 3)) / 16.0 AS "Score_2", 2.0 * (CASE WHEN ("DT_Output_1"."Proba_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_1"."Proba_2" IS NULL OR "DT_Output_1"."Proba_2" > 1e-100) THEN "DT_Output_1"."Proba_2" ELSE 1e-100 END) END - (CASE WHEN ("DT_Output_1"."Proba_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_1"."Proba_0" IS NULL OR "DT_Output_1"."Proba_0" > 1e-100) THEN "DT_Output_1"."Proba_0" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_1"."Proba_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_1"."Proba_1" IS NULL OR "DT_Output_1"."Proba_1" > 1e-100) THEN "DT_Output_1"."Proba_1" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_1"."Proba_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_1"."Proba_2" IS NULL OR "DT_Output_1"."Proba_2" > 1e-100) THEN "DT_Output_1"."Proba_2" ELSE 1e-100 END) END) / 3) AS "Proba_2" 
FROM "DT_Output_1"), 
"DT_node_lookup_2" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.5934344530105591) THEN 1 ELSE 2 END AS node_id_2 
FROM tmp_20180417042017_d3fbux_ads_sca_2_out AS "ADS_sca_2_OUT"), 
"DT_node_data_2" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values".threshold AS FLOAT) AS threshold, CAST("Values".count AS FLOAT) AS count, CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Proba_0" AS FLOAT) AS "Proba_0", CAST("Values"."LogProba_0" AS FLOAT) AS "LogProba_0", CAST("Values"."Proba_1" AS FLOAT) AS "Proba_1", CAST("Values"."LogProba_1" AS FLOAT) AS "LogProba_1", CAST("Values"."Proba_2" AS FLOAT) AS "Proba_2", CAST("Values"."LogProba_2" AS FLOAT) AS "LogProba_2", CAST("Values"."Decision" AS FLOAT) AS "Decision", CAST("Values"."DecisionProba" AS FLOAT) AS "DecisionProba" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 37 AS count, 1 AS depth, 0 AS parent_id, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 83 AS count, 1 AS depth, 0 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.5000000000000002 AS "Proba_1", -0.6931471805599448 AS "LogProba_1", 0.4999999999999998 AS "Proba_2", -0.6931471805599457 AS "LogProba_2", 1 AS "Decision", 0.5000000000000002 AS "DecisionProba") AS "Values"), 
"DT_Output_2" AS 
(SELECT "DT_node_lookup_2"."KEY" AS "KEY", "DT_node_lookup_2".node_id_2 AS node_id_2, "DT_node_data_2".node_id AS node_id, "DT_node_data_2".feature AS feature, "DT_node_data_2".threshold AS threshold, "DT_node_data_2".count AS count, "DT_node_data_2".depth AS depth, "DT_node_data_2".parent_id AS parent_id, "DT_node_data_2"."Proba_0" AS "Proba_0", "DT_node_data_2"."LogProba_0" AS "LogProba_0", "DT_node_data_2"."Proba_1" AS "Proba_1", "DT_node_data_2"."LogProba_1" AS "LogProba_1", "DT_node_data_2"."Proba_2" AS "Proba_2", "DT_node_data_2"."LogProba_2" AS "LogProba_2", "DT_node_data_2"."Decision" AS "Decision", "DT_node_data_2"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup_2" LEFT OUTER JOIN "DT_node_data_2" ON "DT_node_lookup_2".node_id_2 = "DT_node_data_2".node_id), 
"ADB_Model_2" AS 
(SELECT "DT_Output_2"."KEY" AS "KEY", (2.0 * (CASE WHEN ("DT_Output_2"."Proba_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_2"."Proba_0" IS NULL OR "DT_Output_2"."Proba_0" > 1e-100) THEN "DT_Output_2"."Proba_0" ELSE 1e-100 END) END - (CASE WHEN ("DT_Output_2"."Proba_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_2"."Proba_0" IS NULL OR "DT_Output_2"."Proba_0" > 1e-100) THEN "DT_Output_2"."Proba_0" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_2"."Proba_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_2"."Proba_1" IS NULL OR "DT_Output_2"."Proba_1" > 1e-100) THEN "DT_Output_2"."Proba_1" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_2"."Proba_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_2"."Proba_2" IS NULL OR "DT_Output_2"."Proba_2" > 1e-100) THEN "DT_Output_2"."Proba_2" ELSE 1e-100 END) END) / 3)) / 16.0 AS "Score_0", 2.0 * (CASE WHEN ("DT_Output_2"."Proba_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_2"."Proba_0" IS NULL OR "DT_Output_2"."Proba_0" > 1e-100) THEN "DT_Output_2"."Proba_0" ELSE 1e-100 END) END - (CASE WHEN ("DT_Output_2"."Proba_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_2"."Proba_0" IS NULL OR "DT_Output_2"."Proba_0" > 1e-100) THEN "DT_Output_2"."Proba_0" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_2"."Proba_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_2"."Proba_1" IS NULL OR "DT_Output_2"."Proba_1" > 1e-100) THEN "DT_Output_2"."Proba_1" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_2"."Proba_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_2"."Proba_2" IS NULL OR "DT_Output_2"."Proba_2" > 1e-100) THEN "DT_Output_2"."Proba_2" ELSE 1e-100 END) END) / 3) AS "Proba_0", (2.0 * (CASE WHEN ("DT_Output_2"."Proba_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_2"."Proba_1" IS NULL OR "DT_Output_2"."Proba_1" > 1e-100) THEN "DT_Output_2"."Proba_1" ELSE 1e-100 END) END - (CASE WHEN ("DT_Output_2"."Proba_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_2"."Proba_0" IS NULL OR "DT_Output_2"."Proba_0" > 1e-100) THEN "DT_Output_2"."Proba_0" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_2"."Proba_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_2"."Proba_1" IS NULL OR "DT_Output_2"."Proba_1" > 1e-100) THEN "DT_Output_2"."Proba_1" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_2"."Proba_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_2"."Proba_2" IS NULL OR "DT_Output_2"."Proba_2" > 1e-100) THEN "DT_Output_2"."Proba_2" ELSE 1e-100 END) END) / 3)) / 16.0 AS "Score_1", 2.0 * (CASE WHEN ("DT_Output_2"."Proba_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_2"."Proba_1" IS NULL OR "DT_Output_2"."Proba_1" > 1e-100) THEN "DT_Output_2"."Proba_1" ELSE 1e-100 END) END - (CASE WHEN ("DT_Output_2"."Proba_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_2"."Proba_0" IS NULL OR "DT_Output_2"."Proba_0" > 1e-100) THEN "DT_Output_2"."Proba_0" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_2"."Proba_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_2"."Proba_1" IS NULL OR "DT_Output_2"."Proba_1" > 1e-100) THEN "DT_Output_2"."Proba_1" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_2"."Proba_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_2"."Proba_2" IS NULL OR "DT_Output_2"."Proba_2" > 1e-100) THEN "DT_Output_2"."Proba_2" ELSE 1e-100 END) END) / 3) AS "Proba_1", (2.0 * (CASE WHEN ("DT_Output_2"."Proba_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_2"."Proba_2" IS NULL OR "DT_Output_2"."Proba_2" > 1e-100) THEN "DT_Output_2"."Proba_2" ELSE 1e-100 END) END - (CASE WHEN ("DT_Output_2"."Proba_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_2"."Proba_0" IS NULL OR "DT_Output_2"."Proba_0" > 1e-100) THEN "DT_Output_2"."Proba_0" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_2"."Proba_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_2"."Proba_1" IS NULL OR "DT_Output_2"."Proba_1" > 1e-100) THEN "DT_Output_2"."Proba_1" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_2"."Proba_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_2"."Proba_2" IS NULL OR "DT_Output_2"."Proba_2" > 1e-100) THEN "DT_Output_2"."Proba_2" ELSE 1e-100 END) END) / 3)) / 16.0 AS "Score_2", 2.0 * (CASE WHEN ("DT_Output_2"."Proba_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_2"."Proba_2" IS NULL OR "DT_Output_2"."Proba_2" > 1e-100) THEN "DT_Output_2"."Proba_2" ELSE 1e-100 END) END - (CASE WHEN ("DT_Output_2"."Proba_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_2"."Proba_0" IS NULL OR "DT_Output_2"."Proba_0" > 1e-100) THEN "DT_Output_2"."Proba_0" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_2"."Proba_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_2"."Proba_1" IS NULL OR "DT_Output_2"."Proba_1" > 1e-100) THEN "DT_Output_2"."Proba_1" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_2"."Proba_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_2"."Proba_2" IS NULL OR "DT_Output_2"."Proba_2" > 1e-100) THEN "DT_Output_2"."Proba_2" ELSE 1e-100 END) END) / 3) AS "Proba_2" 
FROM "DT_Output_2"), 
"DT_node_lookup_3" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.5400919914245605) THEN 1 ELSE 2 END AS node_id_2 
FROM tmp_20180417042017_d3fbux_ads_sca_2_out AS "ADS_sca_2_OUT"), 
"DT_node_data_3" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values".threshold AS FLOAT) AS threshold, CAST("Values".count AS FLOAT) AS count, CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Proba_0" AS FLOAT) AS "Proba_0", CAST("Values"."LogProba_0" AS FLOAT) AS "LogProba_0", CAST("Values"."Proba_1" AS FLOAT) AS "Proba_1", CAST("Values"."LogProba_1" AS FLOAT) AS "LogProba_1", CAST("Values"."Proba_2" AS FLOAT) AS "Proba_2", CAST("Values"."LogProba_2" AS FLOAT) AS "LogProba_2", CAST("Values"."Decision" AS FLOAT) AS "Decision", CAST("Values"."DecisionProba" AS FLOAT) AS "DecisionProba" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 79 AS count, 1 AS depth, 0 AS parent_id, 4.937970304777942e-06 AS "Proba_0", -12.218556180672584 AS "LogProba_0", 0.9999503857736846 AS "Proba_1", -4.96154571418796e-05 AS "LogProba_1", 4.4676256010536464e-05 AS "Proba_2", -10.01606838292033 AS "LogProba_2", 1 AS "Decision", 0.9999503857736846 AS "DecisionProba" UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 41 AS count, 1 AS depth, 0 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.026446267524541277 AS "Proba_1", -3.632640245019473 AS "LogProba_1", 0.9735537324754588 AS "Proba_2", -0.026802260546228366 AS "LogProba_2", 2 AS "Decision", 0.9735537324754588 AS "DecisionProba") AS "Values"), 
"DT_Output_3" AS 
(SELECT "DT_node_lookup_3"."KEY" AS "KEY", "DT_node_lookup_3".node_id_2 AS node_id_2, "DT_node_data_3".node_id AS node_id, "DT_node_data_3".feature AS feature, "DT_node_data_3".threshold AS threshold, "DT_node_data_3".count AS count, "DT_node_data_3".depth AS depth, "DT_node_data_3".parent_id AS parent_id, "DT_node_data_3"."Proba_0" AS "Proba_0", "DT_node_data_3"."LogProba_0" AS "LogProba_0", "DT_node_data_3"."Proba_1" AS "Proba_1", "DT_node_data_3"."LogProba_1" AS "LogProba_1", "DT_node_data_3"."Proba_2" AS "Proba_2", "DT_node_data_3"."LogProba_2" AS "LogProba_2", "DT_node_data_3"."Decision" AS "Decision", "DT_node_data_3"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup_3" LEFT OUTER JOIN "DT_node_data_3" ON "DT_node_lookup_3".node_id_2 = "DT_node_data_3".node_id), 
"ADB_Model_3" AS 
(SELECT "DT_Output_3"."KEY" AS "KEY", (2.0 * (CASE WHEN ("DT_Output_3"."Proba_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_3"."Proba_0" IS NULL OR "DT_Output_3"."Proba_0" > 1e-100) THEN "DT_Output_3"."Proba_0" ELSE 1e-100 END) END - (CASE WHEN ("DT_Output_3"."Proba_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_3"."Proba_0" IS NULL OR "DT_Output_3"."Proba_0" > 1e-100) THEN "DT_Output_3"."Proba_0" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_3"."Proba_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_3"."Proba_1" IS NULL OR "DT_Output_3"."Proba_1" > 1e-100) THEN "DT_Output_3"."Proba_1" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_3"."Proba_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_3"."Proba_2" IS NULL OR "DT_Output_3"."Proba_2" > 1e-100) THEN "DT_Output_3"."Proba_2" ELSE 1e-100 END) END) / 3)) / 16.0 AS "Score_0", 2.0 * (CASE WHEN ("DT_Output_3"."Proba_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_3"."Proba_0" IS NULL OR "DT_Output_3"."Proba_0" > 1e-100) THEN "DT_Output_3"."Proba_0" ELSE 1e-100 END) END - (CASE WHEN ("DT_Output_3"."Proba_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_3"."Proba_0" IS NULL OR "DT_Output_3"."Proba_0" > 1e-100) THEN "DT_Output_3"."Proba_0" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_3"."Proba_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_3"."Proba_1" IS NULL OR "DT_Output_3"."Proba_1" > 1e-100) THEN "DT_Output_3"."Proba_1" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_3"."Proba_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_3"."Proba_2" IS NULL OR "DT_Output_3"."Proba_2" > 1e-100) THEN "DT_Output_3"."Proba_2" ELSE 1e-100 END) END) / 3) AS "Proba_0", (2.0 * (CASE WHEN ("DT_Output_3"."Proba_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_3"."Proba_1" IS NULL OR "DT_Output_3"."Proba_1" > 1e-100) THEN "DT_Output_3"."Proba_1" ELSE 1e-100 END) END - (CASE WHEN ("DT_Output_3"."Proba_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_3"."Proba_0" IS NULL OR "DT_Output_3"."Proba_0" > 1e-100) THEN "DT_Output_3"."Proba_0" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_3"."Proba_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_3"."Proba_1" IS NULL OR "DT_Output_3"."Proba_1" > 1e-100) THEN "DT_Output_3"."Proba_1" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_3"."Proba_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_3"."Proba_2" IS NULL OR "DT_Output_3"."Proba_2" > 1e-100) THEN "DT_Output_3"."Proba_2" ELSE 1e-100 END) END) / 3)) / 16.0 AS "Score_1", 2.0 * (CASE WHEN ("DT_Output_3"."Proba_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_3"."Proba_1" IS NULL OR "DT_Output_3"."Proba_1" > 1e-100) THEN "DT_Output_3"."Proba_1" ELSE 1e-100 END) END - (CASE WHEN ("DT_Output_3"."Proba_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_3"."Proba_0" IS NULL OR "DT_Output_3"."Proba_0" > 1e-100) THEN "DT_Output_3"."Proba_0" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_3"."Proba_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_3"."Proba_1" IS NULL OR "DT_Output_3"."Proba_1" > 1e-100) THEN "DT_Output_3"."Proba_1" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_3"."Proba_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_3"."Proba_2" IS NULL OR "DT_Output_3"."Proba_2" > 1e-100) THEN "DT_Output_3"."Proba_2" ELSE 1e-100 END) END) / 3) AS "Proba_1", (2.0 * (CASE WHEN ("DT_Output_3"."Proba_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_3"."Proba_2" IS NULL OR "DT_Output_3"."Proba_2" > 1e-100) THEN "DT_Output_3"."Proba_2" ELSE 1e-100 END) END - (CASE WHEN ("DT_Output_3"."Proba_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_3"."Proba_0" IS NULL OR "DT_Output_3"."Proba_0" > 1e-100) THEN "DT_Output_3"."Proba_0" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_3"."Proba_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_3"."Proba_1" IS NULL OR "DT_Output_3"."Proba_1" > 1e-100) THEN "DT_Output_3"."Proba_1" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_3"."Proba_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_3"."Proba_2" IS NULL OR "DT_Output_3"."Proba_2" > 1e-100) THEN "DT_Output_3"."Proba_2" ELSE 1e-100 END) END) / 3)) / 16.0 AS "Score_2", 2.0 * (CASE WHEN ("DT_Output_3"."Proba_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_3"."Proba_2" IS NULL OR "DT_Output_3"."Proba_2" > 1e-100) THEN "DT_Output_3"."Proba_2" ELSE 1e-100 END) END - (CASE WHEN ("DT_Output_3"."Proba_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_3"."Proba_0" IS NULL OR "DT_Output_3"."Proba_0" > 1e-100) THEN "DT_Output_3"."Proba_0" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_3"."Proba_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_3"."Proba_1" IS NULL OR "DT_Output_3"."Proba_1" > 1e-100) THEN "DT_Output_3"."Proba_1" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_3"."Proba_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_3"."Proba_2" IS NULL OR "DT_Output_3"."Proba_2" > 1e-100) THEN "DT_Output_3"."Proba_2" ELSE 1e-100 END) END) / 3) AS "Proba_2" 
FROM "DT_Output_3"), 
"DT_node_lookup_4" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.8158766627311707) THEN 1 ELSE 2 END AS node_id_2 
FROM tmp_20180417042017_d3fbux_ads_sca_2_out AS "ADS_sca_2_OUT"), 
"DT_node_data_4" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values".threshold AS FLOAT) AS threshold, CAST("Values".count AS FLOAT) AS count, CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Proba_0" AS FLOAT) AS "Proba_0", CAST("Values"."LogProba_0" AS FLOAT) AS "LogProba_0", CAST("Values"."Proba_1" AS FLOAT) AS "Proba_1", CAST("Values"."LogProba_1" AS FLOAT) AS "LogProba_1", CAST("Values"."Proba_2" AS FLOAT) AS "Proba_2", CAST("Values"."LogProba_2" AS FLOAT) AS "LogProba_2", CAST("Values"."Decision" AS FLOAT) AS "Decision", CAST("Values"."DecisionProba" AS FLOAT) AS "DecisionProba" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 37 AS count, 1 AS depth, 0 AS parent_id, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 83 AS count, 1 AS depth, 0 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.5000000000000008 AS "Proba_1", -0.6931471805599437 AS "LogProba_1", 0.4999999999999991 AS "Proba_2", -0.6931471805599471 AS "LogProba_2", 1 AS "Decision", 0.5000000000000008 AS "DecisionProba") AS "Values"), 
"DT_Output_4" AS 
(SELECT "DT_node_lookup_4"."KEY" AS "KEY", "DT_node_lookup_4".node_id_2 AS node_id_2, "DT_node_data_4".node_id AS node_id, "DT_node_data_4".feature AS feature, "DT_node_data_4".threshold AS threshold, "DT_node_data_4".count AS count, "DT_node_data_4".depth AS depth, "DT_node_data_4".parent_id AS parent_id, "DT_node_data_4"."Proba_0" AS "Proba_0", "DT_node_data_4"."LogProba_0" AS "LogProba_0", "DT_node_data_4"."Proba_1" AS "Proba_1", "DT_node_data_4"."LogProba_1" AS "LogProba_1", "DT_node_data_4"."Proba_2" AS "Proba_2", "DT_node_data_4"."LogProba_2" AS "LogProba_2", "DT_node_data_4"."Decision" AS "Decision", "DT_node_data_4"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup_4" LEFT OUTER JOIN "DT_node_data_4" ON "DT_node_lookup_4".node_id_2 = "DT_node_data_4".node_id), 
"ADB_Model_4" AS 
(SELECT "DT_Output_4"."KEY" AS "KEY", (2.0 * (CASE WHEN ("DT_Output_4"."Proba_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_4"."Proba_0" IS NULL OR "DT_Output_4"."Proba_0" > 1e-100) THEN "DT_Output_4"."Proba_0" ELSE 1e-100 END) END - (CASE WHEN ("DT_Output_4"."Proba_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_4"."Proba_0" IS NULL OR "DT_Output_4"."Proba_0" > 1e-100) THEN "DT_Output_4"."Proba_0" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_4"."Proba_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_4"."Proba_1" IS NULL OR "DT_Output_4"."Proba_1" > 1e-100) THEN "DT_Output_4"."Proba_1" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_4"."Proba_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_4"."Proba_2" IS NULL OR "DT_Output_4"."Proba_2" > 1e-100) THEN "DT_Output_4"."Proba_2" ELSE 1e-100 END) END) / 3)) / 16.0 AS "Score_0", 2.0 * (CASE WHEN ("DT_Output_4"."Proba_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_4"."Proba_0" IS NULL OR "DT_Output_4"."Proba_0" > 1e-100) THEN "DT_Output_4"."Proba_0" ELSE 1e-100 END) END - (CASE WHEN ("DT_Output_4"."Proba_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_4"."Proba_0" IS NULL OR "DT_Output_4"."Proba_0" > 1e-100) THEN "DT_Output_4"."Proba_0" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_4"."Proba_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_4"."Proba_1" IS NULL OR "DT_Output_4"."Proba_1" > 1e-100) THEN "DT_Output_4"."Proba_1" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_4"."Proba_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_4"."Proba_2" IS NULL OR "DT_Output_4"."Proba_2" > 1e-100) THEN "DT_Output_4"."Proba_2" ELSE 1e-100 END) END) / 3) AS "Proba_0", (2.0 * (CASE WHEN ("DT_Output_4"."Proba_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_4"."Proba_1" IS NULL OR "DT_Output_4"."Proba_1" > 1e-100) THEN "DT_Output_4"."Proba_1" ELSE 1e-100 END) END - (CASE WHEN ("DT_Output_4"."Proba_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_4"."Proba_0" IS NULL OR "DT_Output_4"."Proba_0" > 1e-100) THEN "DT_Output_4"."Proba_0" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_4"."Proba_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_4"."Proba_1" IS NULL OR "DT_Output_4"."Proba_1" > 1e-100) THEN "DT_Output_4"."Proba_1" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_4"."Proba_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_4"."Proba_2" IS NULL OR "DT_Output_4"."Proba_2" > 1e-100) THEN "DT_Output_4"."Proba_2" ELSE 1e-100 END) END) / 3)) / 16.0 AS "Score_1", 2.0 * (CASE WHEN ("DT_Output_4"."Proba_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_4"."Proba_1" IS NULL OR "DT_Output_4"."Proba_1" > 1e-100) THEN "DT_Output_4"."Proba_1" ELSE 1e-100 END) END - (CASE WHEN ("DT_Output_4"."Proba_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_4"."Proba_0" IS NULL OR "DT_Output_4"."Proba_0" > 1e-100) THEN "DT_Output_4"."Proba_0" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_4"."Proba_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_4"."Proba_1" IS NULL OR "DT_Output_4"."Proba_1" > 1e-100) THEN "DT_Output_4"."Proba_1" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_4"."Proba_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_4"."Proba_2" IS NULL OR "DT_Output_4"."Proba_2" > 1e-100) THEN "DT_Output_4"."Proba_2" ELSE 1e-100 END) END) / 3) AS "Proba_1", (2.0 * (CASE WHEN ("DT_Output_4"."Proba_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_4"."Proba_2" IS NULL OR "DT_Output_4"."Proba_2" > 1e-100) THEN "DT_Output_4"."Proba_2" ELSE 1e-100 END) END - (CASE WHEN ("DT_Output_4"."Proba_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_4"."Proba_0" IS NULL OR "DT_Output_4"."Proba_0" > 1e-100) THEN "DT_Output_4"."Proba_0" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_4"."Proba_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_4"."Proba_1" IS NULL OR "DT_Output_4"."Proba_1" > 1e-100) THEN "DT_Output_4"."Proba_1" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_4"."Proba_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_4"."Proba_2" IS NULL OR "DT_Output_4"."Proba_2" > 1e-100) THEN "DT_Output_4"."Proba_2" ELSE 1e-100 END) END) / 3)) / 16.0 AS "Score_2", 2.0 * (CASE WHEN ("DT_Output_4"."Proba_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_4"."Proba_2" IS NULL OR "DT_Output_4"."Proba_2" > 1e-100) THEN "DT_Output_4"."Proba_2" ELSE 1e-100 END) END - (CASE WHEN ("DT_Output_4"."Proba_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_4"."Proba_0" IS NULL OR "DT_Output_4"."Proba_0" > 1e-100) THEN "DT_Output_4"."Proba_0" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_4"."Proba_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_4"."Proba_1" IS NULL OR "DT_Output_4"."Proba_1" > 1e-100) THEN "DT_Output_4"."Proba_1" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_4"."Proba_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_4"."Proba_2" IS NULL OR "DT_Output_4"."Proba_2" > 1e-100) THEN "DT_Output_4"."Proba_2" ELSE 1e-100 END) END) / 3) AS "Proba_2" 
FROM "DT_Output_4"), 
"DT_node_lookup_5" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.6462678909301758) THEN 1 ELSE 2 END AS node_id_2 
FROM tmp_20180417042017_d3fbux_ads_sca_2_out AS "ADS_sca_2_OUT"), 
"DT_node_data_5" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values".threshold AS FLOAT) AS threshold, CAST("Values".count AS FLOAT) AS count, CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Proba_0" AS FLOAT) AS "Proba_0", CAST("Values"."LogProba_0" AS FLOAT) AS "LogProba_0", CAST("Values"."Proba_1" AS FLOAT) AS "Proba_1", CAST("Values"."LogProba_1" AS FLOAT) AS "LogProba_1", CAST("Values"."Proba_2" AS FLOAT) AS "Proba_2", CAST("Values"."LogProba_2" AS FLOAT) AS "LogProba_2", CAST("Values"."Decision" AS FLOAT) AS "Decision", CAST("Values"."DecisionProba" AS FLOAT) AS "DecisionProba" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 81 AS count, 1 AS depth, 0 AS parent_id, 4.776435899510506e-06 AS "Proba_0", -12.25181591729698 AS "LogProba_0", 0.9968914731370432 AS "Proba_1", -0.0031133683684890653 AS "LogProba_1", 0.0031037504270571997 AS "Proba_2", -5.775144083547964 AS "LogProba_2", 1 AS "Decision", 0.9968914731370432 AS "DecisionProba" UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 39 AS count, 1 AS depth, 0 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 1.7080242117155547e-05 AS "Proba_1", -10.977588194226831 AS "LogProba_1", 0.9999829197578829 AS "Proba_2", -1.7080387986103168e-05 AS "LogProba_2", 2 AS "Decision", 0.9999829197578829 AS "DecisionProba") AS "Values"), 
"DT_Output_5" AS 
(SELECT "DT_node_lookup_5"."KEY" AS "KEY", "DT_node_lookup_5".node_id_2 AS node_id_2, "DT_node_data_5".node_id AS node_id, "DT_node_data_5".feature AS feature, "DT_node_data_5".threshold AS threshold, "DT_node_data_5".count AS count, "DT_node_data_5".depth AS depth, "DT_node_data_5".parent_id AS parent_id, "DT_node_data_5"."Proba_0" AS "Proba_0", "DT_node_data_5"."LogProba_0" AS "LogProba_0", "DT_node_data_5"."Proba_1" AS "Proba_1", "DT_node_data_5"."LogProba_1" AS "LogProba_1", "DT_node_data_5"."Proba_2" AS "Proba_2", "DT_node_data_5"."LogProba_2" AS "LogProba_2", "DT_node_data_5"."Decision" AS "Decision", "DT_node_data_5"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup_5" LEFT OUTER JOIN "DT_node_data_5" ON "DT_node_lookup_5".node_id_2 = "DT_node_data_5".node_id), 
"ADB_Model_5" AS 
(SELECT "DT_Output_5"."KEY" AS "KEY", (2.0 * (CASE WHEN ("DT_Output_5"."Proba_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_5"."Proba_0" IS NULL OR "DT_Output_5"."Proba_0" > 1e-100) THEN "DT_Output_5"."Proba_0" ELSE 1e-100 END) END - (CASE WHEN ("DT_Output_5"."Proba_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_5"."Proba_0" IS NULL OR "DT_Output_5"."Proba_0" > 1e-100) THEN "DT_Output_5"."Proba_0" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_5"."Proba_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_5"."Proba_1" IS NULL OR "DT_Output_5"."Proba_1" > 1e-100) THEN "DT_Output_5"."Proba_1" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_5"."Proba_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_5"."Proba_2" IS NULL OR "DT_Output_5"."Proba_2" > 1e-100) THEN "DT_Output_5"."Proba_2" ELSE 1e-100 END) END) / 3)) / 16.0 AS "Score_0", 2.0 * (CASE WHEN ("DT_Output_5"."Proba_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_5"."Proba_0" IS NULL OR "DT_Output_5"."Proba_0" > 1e-100) THEN "DT_Output_5"."Proba_0" ELSE 1e-100 END) END - (CASE WHEN ("DT_Output_5"."Proba_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_5"."Proba_0" IS NULL OR "DT_Output_5"."Proba_0" > 1e-100) THEN "DT_Output_5"."Proba_0" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_5"."Proba_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_5"."Proba_1" IS NULL OR "DT_Output_5"."Proba_1" > 1e-100) THEN "DT_Output_5"."Proba_1" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_5"."Proba_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_5"."Proba_2" IS NULL OR "DT_Output_5"."Proba_2" > 1e-100) THEN "DT_Output_5"."Proba_2" ELSE 1e-100 END) END) / 3) AS "Proba_0", (2.0 * (CASE WHEN ("DT_Output_5"."Proba_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_5"."Proba_1" IS NULL OR "DT_Output_5"."Proba_1" > 1e-100) THEN "DT_Output_5"."Proba_1" ELSE 1e-100 END) END - (CASE WHEN ("DT_Output_5"."Proba_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_5"."Proba_0" IS NULL OR "DT_Output_5"."Proba_0" > 1e-100) THEN "DT_Output_5"."Proba_0" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_5"."Proba_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_5"."Proba_1" IS NULL OR "DT_Output_5"."Proba_1" > 1e-100) THEN "DT_Output_5"."Proba_1" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_5"."Proba_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_5"."Proba_2" IS NULL OR "DT_Output_5"."Proba_2" > 1e-100) THEN "DT_Output_5"."Proba_2" ELSE 1e-100 END) END) / 3)) / 16.0 AS "Score_1", 2.0 * (CASE WHEN ("DT_Output_5"."Proba_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_5"."Proba_1" IS NULL OR "DT_Output_5"."Proba_1" > 1e-100) THEN "DT_Output_5"."Proba_1" ELSE 1e-100 END) END - (CASE WHEN ("DT_Output_5"."Proba_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_5"."Proba_0" IS NULL OR "DT_Output_5"."Proba_0" > 1e-100) THEN "DT_Output_5"."Proba_0" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_5"."Proba_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_5"."Proba_1" IS NULL OR "DT_Output_5"."Proba_1" > 1e-100) THEN "DT_Output_5"."Proba_1" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_5"."Proba_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_5"."Proba_2" IS NULL OR "DT_Output_5"."Proba_2" > 1e-100) THEN "DT_Output_5"."Proba_2" ELSE 1e-100 END) END) / 3) AS "Proba_1", (2.0 * (CASE WHEN ("DT_Output_5"."Proba_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_5"."Proba_2" IS NULL OR "DT_Output_5"."Proba_2" > 1e-100) THEN "DT_Output_5"."Proba_2" ELSE 1e-100 END) END - (CASE WHEN ("DT_Output_5"."Proba_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_5"."Proba_0" IS NULL OR "DT_Output_5"."Proba_0" > 1e-100) THEN "DT_Output_5"."Proba_0" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_5"."Proba_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_5"."Proba_1" IS NULL OR "DT_Output_5"."Proba_1" > 1e-100) THEN "DT_Output_5"."Proba_1" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_5"."Proba_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_5"."Proba_2" IS NULL OR "DT_Output_5"."Proba_2" > 1e-100) THEN "DT_Output_5"."Proba_2" ELSE 1e-100 END) END) / 3)) / 16.0 AS "Score_2", 2.0 * (CASE WHEN ("DT_Output_5"."Proba_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_5"."Proba_2" IS NULL OR "DT_Output_5"."Proba_2" > 1e-100) THEN "DT_Output_5"."Proba_2" ELSE 1e-100 END) END - (CASE WHEN ("DT_Output_5"."Proba_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_5"."Proba_0" IS NULL OR "DT_Output_5"."Proba_0" > 1e-100) THEN "DT_Output_5"."Proba_0" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_5"."Proba_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_5"."Proba_1" IS NULL OR "DT_Output_5"."Proba_1" > 1e-100) THEN "DT_Output_5"."Proba_1" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_5"."Proba_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_5"."Proba_2" IS NULL OR "DT_Output_5"."Proba_2" > 1e-100) THEN "DT_Output_5"."Proba_2" ELSE 1e-100 END) END) / 3) AS "Proba_2" 
FROM "DT_Output_5"), 
"DT_node_lookup_6" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.5934344530105591) THEN 1 ELSE 2 END AS node_id_2 
FROM tmp_20180417042017_d3fbux_ads_sca_2_out AS "ADS_sca_2_OUT"), 
"DT_node_data_6" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values".threshold AS FLOAT) AS threshold, CAST("Values".count AS FLOAT) AS count, CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Proba_0" AS FLOAT) AS "Proba_0", CAST("Values"."LogProba_0" AS FLOAT) AS "LogProba_0", CAST("Values"."Proba_1" AS FLOAT) AS "Proba_1", CAST("Values"."LogProba_1" AS FLOAT) AS "LogProba_1", CAST("Values"."Proba_2" AS FLOAT) AS "Proba_2", CAST("Values"."LogProba_2" AS FLOAT) AS "LogProba_2", CAST("Values"."Decision" AS FLOAT) AS "Decision", CAST("Values"."DecisionProba" AS FLOAT) AS "DecisionProba" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 37 AS count, 1 AS depth, 0 AS parent_id, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 83 AS count, 1 AS depth, 0 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.5000000000000006 AS "Proba_1", -0.6931471805599442 AS "LogProba_1", 0.49999999999999944 AS "Proba_2", -0.6931471805599464 AS "LogProba_2", 1 AS "Decision", 0.5000000000000006 AS "DecisionProba") AS "Values"), 
"DT_Output_6" AS 
(SELECT "DT_node_lookup_6"."KEY" AS "KEY", "DT_node_lookup_6".node_id_2 AS node_id_2, "DT_node_data_6".node_id AS node_id, "DT_node_data_6".feature AS feature, "DT_node_data_6".threshold AS threshold, "DT_node_data_6".count AS count, "DT_node_data_6".depth AS depth, "DT_node_data_6".parent_id AS parent_id, "DT_node_data_6"."Proba_0" AS "Proba_0", "DT_node_data_6"."LogProba_0" AS "LogProba_0", "DT_node_data_6"."Proba_1" AS "Proba_1", "DT_node_data_6"."LogProba_1" AS "LogProba_1", "DT_node_data_6"."Proba_2" AS "Proba_2", "DT_node_data_6"."LogProba_2" AS "LogProba_2", "DT_node_data_6"."Decision" AS "Decision", "DT_node_data_6"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup_6" LEFT OUTER JOIN "DT_node_data_6" ON "DT_node_lookup_6".node_id_2 = "DT_node_data_6".node_id), 
"ADB_Model_6" AS 
(SELECT "DT_Output_6"."KEY" AS "KEY", (2.0 * (CASE WHEN ("DT_Output_6"."Proba_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_6"."Proba_0" IS NULL OR "DT_Output_6"."Proba_0" > 1e-100) THEN "DT_Output_6"."Proba_0" ELSE 1e-100 END) END - (CASE WHEN ("DT_Output_6"."Proba_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_6"."Proba_0" IS NULL OR "DT_Output_6"."Proba_0" > 1e-100) THEN "DT_Output_6"."Proba_0" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_6"."Proba_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_6"."Proba_1" IS NULL OR "DT_Output_6"."Proba_1" > 1e-100) THEN "DT_Output_6"."Proba_1" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_6"."Proba_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_6"."Proba_2" IS NULL OR "DT_Output_6"."Proba_2" > 1e-100) THEN "DT_Output_6"."Proba_2" ELSE 1e-100 END) END) / 3)) / 16.0 AS "Score_0", 2.0 * (CASE WHEN ("DT_Output_6"."Proba_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_6"."Proba_0" IS NULL OR "DT_Output_6"."Proba_0" > 1e-100) THEN "DT_Output_6"."Proba_0" ELSE 1e-100 END) END - (CASE WHEN ("DT_Output_6"."Proba_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_6"."Proba_0" IS NULL OR "DT_Output_6"."Proba_0" > 1e-100) THEN "DT_Output_6"."Proba_0" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_6"."Proba_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_6"."Proba_1" IS NULL OR "DT_Output_6"."Proba_1" > 1e-100) THEN "DT_Output_6"."Proba_1" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_6"."Proba_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_6"."Proba_2" IS NULL OR "DT_Output_6"."Proba_2" > 1e-100) THEN "DT_Output_6"."Proba_2" ELSE 1e-100 END) END) / 3) AS "Proba_0", (2.0 * (CASE WHEN ("DT_Output_6"."Proba_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_6"."Proba_1" IS NULL OR "DT_Output_6"."Proba_1" > 1e-100) THEN "DT_Output_6"."Proba_1" ELSE 1e-100 END) END - (CASE WHEN ("DT_Output_6"."Proba_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_6"."Proba_0" IS NULL OR "DT_Output_6"."Proba_0" > 1e-100) THEN "DT_Output_6"."Proba_0" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_6"."Proba_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_6"."Proba_1" IS NULL OR "DT_Output_6"."Proba_1" > 1e-100) THEN "DT_Output_6"."Proba_1" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_6"."Proba_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_6"."Proba_2" IS NULL OR "DT_Output_6"."Proba_2" > 1e-100) THEN "DT_Output_6"."Proba_2" ELSE 1e-100 END) END) / 3)) / 16.0 AS "Score_1", 2.0 * (CASE WHEN ("DT_Output_6"."Proba_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_6"."Proba_1" IS NULL OR "DT_Output_6"."Proba_1" > 1e-100) THEN "DT_Output_6"."Proba_1" ELSE 1e-100 END) END - (CASE WHEN ("DT_Output_6"."Proba_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_6"."Proba_0" IS NULL OR "DT_Output_6"."Proba_0" > 1e-100) THEN "DT_Output_6"."Proba_0" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_6"."Proba_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_6"."Proba_1" IS NULL OR "DT_Output_6"."Proba_1" > 1e-100) THEN "DT_Output_6"."Proba_1" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_6"."Proba_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_6"."Proba_2" IS NULL OR "DT_Output_6"."Proba_2" > 1e-100) THEN "DT_Output_6"."Proba_2" ELSE 1e-100 END) END) / 3) AS "Proba_1", (2.0 * (CASE WHEN ("DT_Output_6"."Proba_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_6"."Proba_2" IS NULL OR "DT_Output_6"."Proba_2" > 1e-100) THEN "DT_Output_6"."Proba_2" ELSE 1e-100 END) END - (CASE WHEN ("DT_Output_6"."Proba_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_6"."Proba_0" IS NULL OR "DT_Output_6"."Proba_0" > 1e-100) THEN "DT_Output_6"."Proba_0" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_6"."Proba_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_6"."Proba_1" IS NULL OR "DT_Output_6"."Proba_1" > 1e-100) THEN "DT_Output_6"."Proba_1" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_6"."Proba_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_6"."Proba_2" IS NULL OR "DT_Output_6"."Proba_2" > 1e-100) THEN "DT_Output_6"."Proba_2" ELSE 1e-100 END) END) / 3)) / 16.0 AS "Score_2", 2.0 * (CASE WHEN ("DT_Output_6"."Proba_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_6"."Proba_2" IS NULL OR "DT_Output_6"."Proba_2" > 1e-100) THEN "DT_Output_6"."Proba_2" ELSE 1e-100 END) END - (CASE WHEN ("DT_Output_6"."Proba_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_6"."Proba_0" IS NULL OR "DT_Output_6"."Proba_0" > 1e-100) THEN "DT_Output_6"."Proba_0" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_6"."Proba_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_6"."Proba_1" IS NULL OR "DT_Output_6"."Proba_1" > 1e-100) THEN "DT_Output_6"."Proba_1" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_6"."Proba_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_6"."Proba_2" IS NULL OR "DT_Output_6"."Proba_2" > 1e-100) THEN "DT_Output_6"."Proba_2" ELSE 1e-100 END) END) / 3) AS "Proba_2" 
FROM "DT_Output_6"), 
"DT_node_lookup_7" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.5400919914245605) THEN 1 ELSE 2 END AS node_id_2 
FROM tmp_20180417042017_d3fbux_ads_sca_2_out AS "ADS_sca_2_OUT"), 
"DT_node_data_7" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values".threshold AS FLOAT) AS threshold, CAST("Values".count AS FLOAT) AS count, CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Proba_0" AS FLOAT) AS "Proba_0", CAST("Values"."LogProba_0" AS FLOAT) AS "LogProba_0", CAST("Values"."Proba_1" AS FLOAT) AS "Proba_1", CAST("Values"."LogProba_1" AS FLOAT) AS "LogProba_1", CAST("Values"."Proba_2" AS FLOAT) AS "Proba_2", CAST("Values"."LogProba_2" AS FLOAT) AS "LogProba_2", CAST("Values"."Decision" AS FLOAT) AS "Decision", CAST("Values"."DecisionProba" AS FLOAT) AS "DecisionProba" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 79 AS count, 1 AS depth, 0 AS parent_id, 4.820822504482422e-06 AS "Proba_0", -12.242566000376321 AS "LogProba_0", 0.999931832803407 AS "Proba_1", -6.816952008190875e-05 AS "LogProba_1", 6.334637408853025e-05 AS "Proba_2", -9.66689288900676 AS "LogProba_2", 1 AS "Decision", 0.999931832803407 AS "DecisionProba" UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 41 AS count, 1 AS depth, 0 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0031507476384588905 AS "Proba_1", -5.760115508764088 AS "LogProba_1", 0.9968492523615411 AS "Proba_2", -0.0031557216945443793 AS "LogProba_2", 2 AS "Decision", 0.9968492523615411 AS "DecisionProba") AS "Values"), 
"DT_Output_7" AS 
(SELECT "DT_node_lookup_7"."KEY" AS "KEY", "DT_node_lookup_7".node_id_2 AS node_id_2, "DT_node_data_7".node_id AS node_id, "DT_node_data_7".feature AS feature, "DT_node_data_7".threshold AS threshold, "DT_node_data_7".count AS count, "DT_node_data_7".depth AS depth, "DT_node_data_7".parent_id AS parent_id, "DT_node_data_7"."Proba_0" AS "Proba_0", "DT_node_data_7"."LogProba_0" AS "LogProba_0", "DT_node_data_7"."Proba_1" AS "Proba_1", "DT_node_data_7"."LogProba_1" AS "LogProba_1", "DT_node_data_7"."Proba_2" AS "Proba_2", "DT_node_data_7"."LogProba_2" AS "LogProba_2", "DT_node_data_7"."Decision" AS "Decision", "DT_node_data_7"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup_7" LEFT OUTER JOIN "DT_node_data_7" ON "DT_node_lookup_7".node_id_2 = "DT_node_data_7".node_id), 
"ADB_Model_7" AS 
(SELECT "DT_Output_7"."KEY" AS "KEY", (2.0 * (CASE WHEN ("DT_Output_7"."Proba_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_7"."Proba_0" IS NULL OR "DT_Output_7"."Proba_0" > 1e-100) THEN "DT_Output_7"."Proba_0" ELSE 1e-100 END) END - (CASE WHEN ("DT_Output_7"."Proba_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_7"."Proba_0" IS NULL OR "DT_Output_7"."Proba_0" > 1e-100) THEN "DT_Output_7"."Proba_0" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_7"."Proba_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_7"."Proba_1" IS NULL OR "DT_Output_7"."Proba_1" > 1e-100) THEN "DT_Output_7"."Proba_1" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_7"."Proba_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_7"."Proba_2" IS NULL OR "DT_Output_7"."Proba_2" > 1e-100) THEN "DT_Output_7"."Proba_2" ELSE 1e-100 END) END) / 3)) / 16.0 AS "Score_0", 2.0 * (CASE WHEN ("DT_Output_7"."Proba_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_7"."Proba_0" IS NULL OR "DT_Output_7"."Proba_0" > 1e-100) THEN "DT_Output_7"."Proba_0" ELSE 1e-100 END) END - (CASE WHEN ("DT_Output_7"."Proba_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_7"."Proba_0" IS NULL OR "DT_Output_7"."Proba_0" > 1e-100) THEN "DT_Output_7"."Proba_0" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_7"."Proba_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_7"."Proba_1" IS NULL OR "DT_Output_7"."Proba_1" > 1e-100) THEN "DT_Output_7"."Proba_1" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_7"."Proba_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_7"."Proba_2" IS NULL OR "DT_Output_7"."Proba_2" > 1e-100) THEN "DT_Output_7"."Proba_2" ELSE 1e-100 END) END) / 3) AS "Proba_0", (2.0 * (CASE WHEN ("DT_Output_7"."Proba_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_7"."Proba_1" IS NULL OR "DT_Output_7"."Proba_1" > 1e-100) THEN "DT_Output_7"."Proba_1" ELSE 1e-100 END) END - (CASE WHEN ("DT_Output_7"."Proba_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_7"."Proba_0" IS NULL OR "DT_Output_7"."Proba_0" > 1e-100) THEN "DT_Output_7"."Proba_0" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_7"."Proba_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_7"."Proba_1" IS NULL OR "DT_Output_7"."Proba_1" > 1e-100) THEN "DT_Output_7"."Proba_1" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_7"."Proba_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_7"."Proba_2" IS NULL OR "DT_Output_7"."Proba_2" > 1e-100) THEN "DT_Output_7"."Proba_2" ELSE 1e-100 END) END) / 3)) / 16.0 AS "Score_1", 2.0 * (CASE WHEN ("DT_Output_7"."Proba_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_7"."Proba_1" IS NULL OR "DT_Output_7"."Proba_1" > 1e-100) THEN "DT_Output_7"."Proba_1" ELSE 1e-100 END) END - (CASE WHEN ("DT_Output_7"."Proba_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_7"."Proba_0" IS NULL OR "DT_Output_7"."Proba_0" > 1e-100) THEN "DT_Output_7"."Proba_0" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_7"."Proba_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_7"."Proba_1" IS NULL OR "DT_Output_7"."Proba_1" > 1e-100) THEN "DT_Output_7"."Proba_1" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_7"."Proba_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_7"."Proba_2" IS NULL OR "DT_Output_7"."Proba_2" > 1e-100) THEN "DT_Output_7"."Proba_2" ELSE 1e-100 END) END) / 3) AS "Proba_1", (2.0 * (CASE WHEN ("DT_Output_7"."Proba_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_7"."Proba_2" IS NULL OR "DT_Output_7"."Proba_2" > 1e-100) THEN "DT_Output_7"."Proba_2" ELSE 1e-100 END) END - (CASE WHEN ("DT_Output_7"."Proba_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_7"."Proba_0" IS NULL OR "DT_Output_7"."Proba_0" > 1e-100) THEN "DT_Output_7"."Proba_0" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_7"."Proba_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_7"."Proba_1" IS NULL OR "DT_Output_7"."Proba_1" > 1e-100) THEN "DT_Output_7"."Proba_1" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_7"."Proba_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_7"."Proba_2" IS NULL OR "DT_Output_7"."Proba_2" > 1e-100) THEN "DT_Output_7"."Proba_2" ELSE 1e-100 END) END) / 3)) / 16.0 AS "Score_2", 2.0 * (CASE WHEN ("DT_Output_7"."Proba_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_7"."Proba_2" IS NULL OR "DT_Output_7"."Proba_2" > 1e-100) THEN "DT_Output_7"."Proba_2" ELSE 1e-100 END) END - (CASE WHEN ("DT_Output_7"."Proba_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_7"."Proba_0" IS NULL OR "DT_Output_7"."Proba_0" > 1e-100) THEN "DT_Output_7"."Proba_0" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_7"."Proba_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_7"."Proba_1" IS NULL OR "DT_Output_7"."Proba_1" > 1e-100) THEN "DT_Output_7"."Proba_1" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_7"."Proba_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_7"."Proba_2" IS NULL OR "DT_Output_7"."Proba_2" > 1e-100) THEN "DT_Output_7"."Proba_2" ELSE 1e-100 END) END) / 3) AS "Proba_2" 
FROM "DT_Output_7"), 
"DT_node_lookup_8" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.5934344530105591) THEN 1 ELSE 2 END AS node_id_2 
FROM tmp_20180417042017_d3fbux_ads_sca_2_out AS "ADS_sca_2_OUT"), 
"DT_node_data_8" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values".threshold AS FLOAT) AS threshold, CAST("Values".count AS FLOAT) AS count, CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Proba_0" AS FLOAT) AS "Proba_0", CAST("Values"."LogProba_0" AS FLOAT) AS "LogProba_0", CAST("Values"."Proba_1" AS FLOAT) AS "Proba_1", CAST("Values"."LogProba_1" AS FLOAT) AS "LogProba_1", CAST("Values"."Proba_2" AS FLOAT) AS "Proba_2", CAST("Values"."LogProba_2" AS FLOAT) AS "LogProba_2", CAST("Values"."Decision" AS FLOAT) AS "Decision", CAST("Values"."DecisionProba" AS FLOAT) AS "DecisionProba" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 37 AS count, 1 AS depth, 0 AS parent_id, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 83 AS count, 1 AS depth, 0 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.5000000000000004 AS "Proba_1", -0.6931471805599444 AS "LogProba_1", 0.4999999999999996 AS "Proba_2", -0.6931471805599461 AS "LogProba_2", 1 AS "Decision", 0.5000000000000004 AS "DecisionProba") AS "Values"), 
"DT_Output_8" AS 
(SELECT "DT_node_lookup_8"."KEY" AS "KEY", "DT_node_lookup_8".node_id_2 AS node_id_2, "DT_node_data_8".node_id AS node_id, "DT_node_data_8".feature AS feature, "DT_node_data_8".threshold AS threshold, "DT_node_data_8".count AS count, "DT_node_data_8".depth AS depth, "DT_node_data_8".parent_id AS parent_id, "DT_node_data_8"."Proba_0" AS "Proba_0", "DT_node_data_8"."LogProba_0" AS "LogProba_0", "DT_node_data_8"."Proba_1" AS "Proba_1", "DT_node_data_8"."LogProba_1" AS "LogProba_1", "DT_node_data_8"."Proba_2" AS "Proba_2", "DT_node_data_8"."LogProba_2" AS "LogProba_2", "DT_node_data_8"."Decision" AS "Decision", "DT_node_data_8"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup_8" LEFT OUTER JOIN "DT_node_data_8" ON "DT_node_lookup_8".node_id_2 = "DT_node_data_8".node_id), 
"ADB_Model_8" AS 
(SELECT "DT_Output_8"."KEY" AS "KEY", (2.0 * (CASE WHEN ("DT_Output_8"."Proba_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_8"."Proba_0" IS NULL OR "DT_Output_8"."Proba_0" > 1e-100) THEN "DT_Output_8"."Proba_0" ELSE 1e-100 END) END - (CASE WHEN ("DT_Output_8"."Proba_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_8"."Proba_0" IS NULL OR "DT_Output_8"."Proba_0" > 1e-100) THEN "DT_Output_8"."Proba_0" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_8"."Proba_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_8"."Proba_1" IS NULL OR "DT_Output_8"."Proba_1" > 1e-100) THEN "DT_Output_8"."Proba_1" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_8"."Proba_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_8"."Proba_2" IS NULL OR "DT_Output_8"."Proba_2" > 1e-100) THEN "DT_Output_8"."Proba_2" ELSE 1e-100 END) END) / 3)) / 16.0 AS "Score_0", 2.0 * (CASE WHEN ("DT_Output_8"."Proba_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_8"."Proba_0" IS NULL OR "DT_Output_8"."Proba_0" > 1e-100) THEN "DT_Output_8"."Proba_0" ELSE 1e-100 END) END - (CASE WHEN ("DT_Output_8"."Proba_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_8"."Proba_0" IS NULL OR "DT_Output_8"."Proba_0" > 1e-100) THEN "DT_Output_8"."Proba_0" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_8"."Proba_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_8"."Proba_1" IS NULL OR "DT_Output_8"."Proba_1" > 1e-100) THEN "DT_Output_8"."Proba_1" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_8"."Proba_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_8"."Proba_2" IS NULL OR "DT_Output_8"."Proba_2" > 1e-100) THEN "DT_Output_8"."Proba_2" ELSE 1e-100 END) END) / 3) AS "Proba_0", (2.0 * (CASE WHEN ("DT_Output_8"."Proba_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_8"."Proba_1" IS NULL OR "DT_Output_8"."Proba_1" > 1e-100) THEN "DT_Output_8"."Proba_1" ELSE 1e-100 END) END - (CASE WHEN ("DT_Output_8"."Proba_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_8"."Proba_0" IS NULL OR "DT_Output_8"."Proba_0" > 1e-100) THEN "DT_Output_8"."Proba_0" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_8"."Proba_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_8"."Proba_1" IS NULL OR "DT_Output_8"."Proba_1" > 1e-100) THEN "DT_Output_8"."Proba_1" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_8"."Proba_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_8"."Proba_2" IS NULL OR "DT_Output_8"."Proba_2" > 1e-100) THEN "DT_Output_8"."Proba_2" ELSE 1e-100 END) END) / 3)) / 16.0 AS "Score_1", 2.0 * (CASE WHEN ("DT_Output_8"."Proba_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_8"."Proba_1" IS NULL OR "DT_Output_8"."Proba_1" > 1e-100) THEN "DT_Output_8"."Proba_1" ELSE 1e-100 END) END - (CASE WHEN ("DT_Output_8"."Proba_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_8"."Proba_0" IS NULL OR "DT_Output_8"."Proba_0" > 1e-100) THEN "DT_Output_8"."Proba_0" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_8"."Proba_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_8"."Proba_1" IS NULL OR "DT_Output_8"."Proba_1" > 1e-100) THEN "DT_Output_8"."Proba_1" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_8"."Proba_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_8"."Proba_2" IS NULL OR "DT_Output_8"."Proba_2" > 1e-100) THEN "DT_Output_8"."Proba_2" ELSE 1e-100 END) END) / 3) AS "Proba_1", (2.0 * (CASE WHEN ("DT_Output_8"."Proba_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_8"."Proba_2" IS NULL OR "DT_Output_8"."Proba_2" > 1e-100) THEN "DT_Output_8"."Proba_2" ELSE 1e-100 END) END - (CASE WHEN ("DT_Output_8"."Proba_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_8"."Proba_0" IS NULL OR "DT_Output_8"."Proba_0" > 1e-100) THEN "DT_Output_8"."Proba_0" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_8"."Proba_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_8"."Proba_1" IS NULL OR "DT_Output_8"."Proba_1" > 1e-100) THEN "DT_Output_8"."Proba_1" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_8"."Proba_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_8"."Proba_2" IS NULL OR "DT_Output_8"."Proba_2" > 1e-100) THEN "DT_Output_8"."Proba_2" ELSE 1e-100 END) END) / 3)) / 16.0 AS "Score_2", 2.0 * (CASE WHEN ("DT_Output_8"."Proba_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_8"."Proba_2" IS NULL OR "DT_Output_8"."Proba_2" > 1e-100) THEN "DT_Output_8"."Proba_2" ELSE 1e-100 END) END - (CASE WHEN ("DT_Output_8"."Proba_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_8"."Proba_0" IS NULL OR "DT_Output_8"."Proba_0" > 1e-100) THEN "DT_Output_8"."Proba_0" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_8"."Proba_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_8"."Proba_1" IS NULL OR "DT_Output_8"."Proba_1" > 1e-100) THEN "DT_Output_8"."Proba_1" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_8"."Proba_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_8"."Proba_2" IS NULL OR "DT_Output_8"."Proba_2" > 1e-100) THEN "DT_Output_8"."Proba_2" ELSE 1e-100 END) END) / 3) AS "Proba_2" 
FROM "DT_Output_8"), 
"DT_node_lookup_9" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.6462678909301758) THEN 1 ELSE 2 END AS node_id_2 
FROM tmp_20180417042017_d3fbux_ads_sca_2_out AS "ADS_sca_2_OUT"), 
"DT_node_data_9" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values".threshold AS FLOAT) AS threshold, CAST("Values".count AS FLOAT) AS count, CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Proba_0" AS FLOAT) AS "Proba_0", CAST("Values"."LogProba_0" AS FLOAT) AS "LogProba_0", CAST("Values"."Proba_1" AS FLOAT) AS "Proba_1", CAST("Values"."LogProba_1" AS FLOAT) AS "LogProba_1", CAST("Values"."Proba_2" AS FLOAT) AS "Proba_2", CAST("Values"."LogProba_2" AS FLOAT) AS "LogProba_2", CAST("Values"."Decision" AS FLOAT) AS "Decision", CAST("Values"."DecisionProba" AS FLOAT) AS "DecisionProba" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 81 AS count, 1 AS depth, 0 AS parent_id, 4.793617328869877e-06 AS "Proba_0", -12.248225248068874 AS "LogProba_0", 0.9986735916405715 AS "Proba_1", -0.0013272888176474045 AS "LogProba_1", 0.0013216147420995158 AS "Proba_2", -6.628901000523458 AS "LogProba_2", 1 AS "Decision", 0.9986735916405715 AS "DecisionProba" UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 39 AS count, 1 AS depth, 0 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 2.647608842412024e-05 AS "Proba_1", -10.53926855592921 AS "LogProba_1", 0.9999735239115759 AS "Proba_2", -2.647643892191455e-05 AS "LogProba_2", 2 AS "Decision", 0.9999735239115759 AS "DecisionProba") AS "Values"), 
"DT_Output_9" AS 
(SELECT "DT_node_lookup_9"."KEY" AS "KEY", "DT_node_lookup_9".node_id_2 AS node_id_2, "DT_node_data_9".node_id AS node_id, "DT_node_data_9".feature AS feature, "DT_node_data_9".threshold AS threshold, "DT_node_data_9".count AS count, "DT_node_data_9".depth AS depth, "DT_node_data_9".parent_id AS parent_id, "DT_node_data_9"."Proba_0" AS "Proba_0", "DT_node_data_9"."LogProba_0" AS "LogProba_0", "DT_node_data_9"."Proba_1" AS "Proba_1", "DT_node_data_9"."LogProba_1" AS "LogProba_1", "DT_node_data_9"."Proba_2" AS "Proba_2", "DT_node_data_9"."LogProba_2" AS "LogProba_2", "DT_node_data_9"."Decision" AS "Decision", "DT_node_data_9"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup_9" LEFT OUTER JOIN "DT_node_data_9" ON "DT_node_lookup_9".node_id_2 = "DT_node_data_9".node_id), 
"ADB_Model_9" AS 
(SELECT "DT_Output_9"."KEY" AS "KEY", (2.0 * (CASE WHEN ("DT_Output_9"."Proba_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_9"."Proba_0" IS NULL OR "DT_Output_9"."Proba_0" > 1e-100) THEN "DT_Output_9"."Proba_0" ELSE 1e-100 END) END - (CASE WHEN ("DT_Output_9"."Proba_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_9"."Proba_0" IS NULL OR "DT_Output_9"."Proba_0" > 1e-100) THEN "DT_Output_9"."Proba_0" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_9"."Proba_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_9"."Proba_1" IS NULL OR "DT_Output_9"."Proba_1" > 1e-100) THEN "DT_Output_9"."Proba_1" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_9"."Proba_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_9"."Proba_2" IS NULL OR "DT_Output_9"."Proba_2" > 1e-100) THEN "DT_Output_9"."Proba_2" ELSE 1e-100 END) END) / 3)) / 16.0 AS "Score_0", 2.0 * (CASE WHEN ("DT_Output_9"."Proba_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_9"."Proba_0" IS NULL OR "DT_Output_9"."Proba_0" > 1e-100) THEN "DT_Output_9"."Proba_0" ELSE 1e-100 END) END - (CASE WHEN ("DT_Output_9"."Proba_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_9"."Proba_0" IS NULL OR "DT_Output_9"."Proba_0" > 1e-100) THEN "DT_Output_9"."Proba_0" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_9"."Proba_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_9"."Proba_1" IS NULL OR "DT_Output_9"."Proba_1" > 1e-100) THEN "DT_Output_9"."Proba_1" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_9"."Proba_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_9"."Proba_2" IS NULL OR "DT_Output_9"."Proba_2" > 1e-100) THEN "DT_Output_9"."Proba_2" ELSE 1e-100 END) END) / 3) AS "Proba_0", (2.0 * (CASE WHEN ("DT_Output_9"."Proba_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_9"."Proba_1" IS NULL OR "DT_Output_9"."Proba_1" > 1e-100) THEN "DT_Output_9"."Proba_1" ELSE 1e-100 END) END - (CASE WHEN ("DT_Output_9"."Proba_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_9"."Proba_0" IS NULL OR "DT_Output_9"."Proba_0" > 1e-100) THEN "DT_Output_9"."Proba_0" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_9"."Proba_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_9"."Proba_1" IS NULL OR "DT_Output_9"."Proba_1" > 1e-100) THEN "DT_Output_9"."Proba_1" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_9"."Proba_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_9"."Proba_2" IS NULL OR "DT_Output_9"."Proba_2" > 1e-100) THEN "DT_Output_9"."Proba_2" ELSE 1e-100 END) END) / 3)) / 16.0 AS "Score_1", 2.0 * (CASE WHEN ("DT_Output_9"."Proba_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_9"."Proba_1" IS NULL OR "DT_Output_9"."Proba_1" > 1e-100) THEN "DT_Output_9"."Proba_1" ELSE 1e-100 END) END - (CASE WHEN ("DT_Output_9"."Proba_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_9"."Proba_0" IS NULL OR "DT_Output_9"."Proba_0" > 1e-100) THEN "DT_Output_9"."Proba_0" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_9"."Proba_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_9"."Proba_1" IS NULL OR "DT_Output_9"."Proba_1" > 1e-100) THEN "DT_Output_9"."Proba_1" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_9"."Proba_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_9"."Proba_2" IS NULL OR "DT_Output_9"."Proba_2" > 1e-100) THEN "DT_Output_9"."Proba_2" ELSE 1e-100 END) END) / 3) AS "Proba_1", (2.0 * (CASE WHEN ("DT_Output_9"."Proba_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_9"."Proba_2" IS NULL OR "DT_Output_9"."Proba_2" > 1e-100) THEN "DT_Output_9"."Proba_2" ELSE 1e-100 END) END - (CASE WHEN ("DT_Output_9"."Proba_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_9"."Proba_0" IS NULL OR "DT_Output_9"."Proba_0" > 1e-100) THEN "DT_Output_9"."Proba_0" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_9"."Proba_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_9"."Proba_1" IS NULL OR "DT_Output_9"."Proba_1" > 1e-100) THEN "DT_Output_9"."Proba_1" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_9"."Proba_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_9"."Proba_2" IS NULL OR "DT_Output_9"."Proba_2" > 1e-100) THEN "DT_Output_9"."Proba_2" ELSE 1e-100 END) END) / 3)) / 16.0 AS "Score_2", 2.0 * (CASE WHEN ("DT_Output_9"."Proba_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_9"."Proba_2" IS NULL OR "DT_Output_9"."Proba_2" > 1e-100) THEN "DT_Output_9"."Proba_2" ELSE 1e-100 END) END - (CASE WHEN ("DT_Output_9"."Proba_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_9"."Proba_0" IS NULL OR "DT_Output_9"."Proba_0" > 1e-100) THEN "DT_Output_9"."Proba_0" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_9"."Proba_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_9"."Proba_1" IS NULL OR "DT_Output_9"."Proba_1" > 1e-100) THEN "DT_Output_9"."Proba_1" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_9"."Proba_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_9"."Proba_2" IS NULL OR "DT_Output_9"."Proba_2" > 1e-100) THEN "DT_Output_9"."Proba_2" ELSE 1e-100 END) END) / 3) AS "Proba_2" 
FROM "DT_Output_9")
 SELECT "ADB_B0"."KEY", "ADB_B0"."Score_0", "ADB_B0"."Proba_0", "ADB_B0"."Score_1", "ADB_B0"."Proba_1", "ADB_B0"."Score_2", "ADB_B0"."Proba_2" 
FROM (SELECT "ADB_esu_0"."KEY" AS "KEY", "ADB_esu_0"."Score_0" AS "Score_0", "ADB_esu_0"."Proba_0" AS "Proba_0", "ADB_esu_0"."Score_1" AS "Score_1", "ADB_esu_0"."Proba_1" AS "Proba_1", "ADB_esu_0"."Score_2" AS "Score_2", "ADB_esu_0"."Proba_2" AS "Proba_2" 
FROM (SELECT "ADB_Model_0"."KEY" AS "KEY", "ADB_Model_0"."Score_0" AS "Score_0", "ADB_Model_0"."Proba_0" AS "Proba_0", "ADB_Model_0"."Score_1" AS "Score_1", "ADB_Model_0"."Proba_1" AS "Proba_1", "ADB_Model_0"."Score_2" AS "Score_2", "ADB_Model_0"."Proba_2" AS "Proba_2" 
FROM "ADB_Model_0" UNION ALL SELECT "ADB_Model_1"."KEY" AS "KEY", "ADB_Model_1"."Score_0" AS "Score_0", "ADB_Model_1"."Proba_0" AS "Proba_0", "ADB_Model_1"."Score_1" AS "Score_1", "ADB_Model_1"."Proba_1" AS "Proba_1", "ADB_Model_1"."Score_2" AS "Score_2", "ADB_Model_1"."Proba_2" AS "Proba_2" 
FROM "ADB_Model_1" UNION ALL SELECT "ADB_Model_2"."KEY" AS "KEY", "ADB_Model_2"."Score_0" AS "Score_0", "ADB_Model_2"."Proba_0" AS "Proba_0", "ADB_Model_2"."Score_1" AS "Score_1", "ADB_Model_2"."Proba_1" AS "Proba_1", "ADB_Model_2"."Score_2" AS "Score_2", "ADB_Model_2"."Proba_2" AS "Proba_2" 
FROM "ADB_Model_2" UNION ALL SELECT "ADB_Model_3"."KEY" AS "KEY", "ADB_Model_3"."Score_0" AS "Score_0", "ADB_Model_3"."Proba_0" AS "Proba_0", "ADB_Model_3"."Score_1" AS "Score_1", "ADB_Model_3"."Proba_1" AS "Proba_1", "ADB_Model_3"."Score_2" AS "Score_2", "ADB_Model_3"."Proba_2" AS "Proba_2" 
FROM "ADB_Model_3" UNION ALL SELECT "ADB_Model_4"."KEY" AS "KEY", "ADB_Model_4"."Score_0" AS "Score_0", "ADB_Model_4"."Proba_0" AS "Proba_0", "ADB_Model_4"."Score_1" AS "Score_1", "ADB_Model_4"."Proba_1" AS "Proba_1", "ADB_Model_4"."Score_2" AS "Score_2", "ADB_Model_4"."Proba_2" AS "Proba_2" 
FROM "ADB_Model_4" UNION ALL SELECT "ADB_Model_5"."KEY" AS "KEY", "ADB_Model_5"."Score_0" AS "Score_0", "ADB_Model_5"."Proba_0" AS "Proba_0", "ADB_Model_5"."Score_1" AS "Score_1", "ADB_Model_5"."Proba_1" AS "Proba_1", "ADB_Model_5"."Score_2" AS "Score_2", "ADB_Model_5"."Proba_2" AS "Proba_2" 
FROM "ADB_Model_5" UNION ALL SELECT "ADB_Model_6"."KEY" AS "KEY", "ADB_Model_6"."Score_0" AS "Score_0", "ADB_Model_6"."Proba_0" AS "Proba_0", "ADB_Model_6"."Score_1" AS "Score_1", "ADB_Model_6"."Proba_1" AS "Proba_1", "ADB_Model_6"."Score_2" AS "Score_2", "ADB_Model_6"."Proba_2" AS "Proba_2" 
FROM "ADB_Model_6" UNION ALL SELECT "ADB_Model_7"."KEY" AS "KEY", "ADB_Model_7"."Score_0" AS "Score_0", "ADB_Model_7"."Proba_0" AS "Proba_0", "ADB_Model_7"."Score_1" AS "Score_1", "ADB_Model_7"."Proba_1" AS "Proba_1", "ADB_Model_7"."Score_2" AS "Score_2", "ADB_Model_7"."Proba_2" AS "Proba_2" 
FROM "ADB_Model_7" UNION ALL SELECT "ADB_Model_8"."KEY" AS "KEY", "ADB_Model_8"."Score_0" AS "Score_0", "ADB_Model_8"."Proba_0" AS "Proba_0", "ADB_Model_8"."Score_1" AS "Score_1", "ADB_Model_8"."Proba_1" AS "Proba_1", "ADB_Model_8"."Score_2" AS "Score_2", "ADB_Model_8"."Proba_2" AS "Proba_2" 
FROM "ADB_Model_8" UNION ALL SELECT "ADB_Model_9"."KEY" AS "KEY", "ADB_Model_9"."Score_0" AS "Score_0", "ADB_Model_9"."Proba_0" AS "Proba_0", "ADB_Model_9"."Score_1" AS "Score_1", "ADB_Model_9"."Proba_1" AS "Proba_1", "ADB_Model_9"."Score_2" AS "Score_2", "ADB_Model_9"."Proba_2" AS "Proba_2" 
FROM "ADB_Model_9") AS "ADB_esu_0") AS "ADB_B0") AS "U"

-- Code For temporary table tmp_20180417042017_bw0do3_adb_b1 part 1/2. Create 


CREATE TEMPORARY TABLE tmp_20180417042017_bw0do3_adb_b1 (
	"KEY" BIGINT, 
	"Score_0" FLOAT, 
	"Proba_0" FLOAT, 
	"Score_1" FLOAT, 
	"Proba_1" FLOAT, 
	"Score_2" FLOAT, 
	"Proba_2" FLOAT
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table tmp_20180417042017_bw0do3_adb_b1 part 2/2. Populate

INSERT INTO tmp_20180417042017_bw0do3_adb_b1 ("KEY", "Score_0", "Proba_0", "Score_1", "Proba_1", "Score_2", "Proba_2") SELECT "U"."KEY", "U"."Score_0", "U"."Proba_0", "U"."Score_1", "U"."Proba_1", "U"."Score_2", "U"."Proba_2" 
FROM (WITH "DT_node_lookup_10" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.8158766627311707) THEN 1 ELSE 2 END AS node_id_2 
FROM tmp_20180417042017_d3fbux_ads_sca_2_out AS "ADS_sca_2_OUT"), 
"DT_node_data_10" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values".threshold AS FLOAT) AS threshold, CAST("Values".count AS FLOAT) AS count, CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Proba_0" AS FLOAT) AS "Proba_0", CAST("Values"."LogProba_0" AS FLOAT) AS "LogProba_0", CAST("Values"."Proba_1" AS FLOAT) AS "Proba_1", CAST("Values"."LogProba_1" AS FLOAT) AS "LogProba_1", CAST("Values"."Proba_2" AS FLOAT) AS "Proba_2", CAST("Values"."LogProba_2" AS FLOAT) AS "LogProba_2", CAST("Values"."Decision" AS FLOAT) AS "Decision", CAST("Values"."DecisionProba" AS FLOAT) AS "DecisionProba" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 37 AS count, 1 AS depth, 0 AS parent_id, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 83 AS count, 1 AS depth, 0 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.49999999999999994 AS "Proba_1", -0.6931471805599454 AS "LogProba_1", 0.5000000000000001 AS "Proba_2", -0.6931471805599451 AS "LogProba_2", 2 AS "Decision", 0.5000000000000001 AS "DecisionProba") AS "Values"), 
"DT_Output_10" AS 
(SELECT "DT_node_lookup_10"."KEY" AS "KEY", "DT_node_lookup_10".node_id_2 AS node_id_2, "DT_node_data_10".node_id AS node_id, "DT_node_data_10".feature AS feature, "DT_node_data_10".threshold AS threshold, "DT_node_data_10".count AS count, "DT_node_data_10".depth AS depth, "DT_node_data_10".parent_id AS parent_id, "DT_node_data_10"."Proba_0" AS "Proba_0", "DT_node_data_10"."LogProba_0" AS "LogProba_0", "DT_node_data_10"."Proba_1" AS "Proba_1", "DT_node_data_10"."LogProba_1" AS "LogProba_1", "DT_node_data_10"."Proba_2" AS "Proba_2", "DT_node_data_10"."LogProba_2" AS "LogProba_2", "DT_node_data_10"."Decision" AS "Decision", "DT_node_data_10"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup_10" LEFT OUTER JOIN "DT_node_data_10" ON "DT_node_lookup_10".node_id_2 = "DT_node_data_10".node_id), 
"ADB_Model_10" AS 
(SELECT "DT_Output_10"."KEY" AS "KEY", (2.0 * (CASE WHEN ("DT_Output_10"."Proba_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_10"."Proba_0" IS NULL OR "DT_Output_10"."Proba_0" > 1e-100) THEN "DT_Output_10"."Proba_0" ELSE 1e-100 END) END - (CASE WHEN ("DT_Output_10"."Proba_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_10"."Proba_0" IS NULL OR "DT_Output_10"."Proba_0" > 1e-100) THEN "DT_Output_10"."Proba_0" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_10"."Proba_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_10"."Proba_1" IS NULL OR "DT_Output_10"."Proba_1" > 1e-100) THEN "DT_Output_10"."Proba_1" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_10"."Proba_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_10"."Proba_2" IS NULL OR "DT_Output_10"."Proba_2" > 1e-100) THEN "DT_Output_10"."Proba_2" ELSE 1e-100 END) END) / 3)) / 16.0 AS "Score_0", 2.0 * (CASE WHEN ("DT_Output_10"."Proba_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_10"."Proba_0" IS NULL OR "DT_Output_10"."Proba_0" > 1e-100) THEN "DT_Output_10"."Proba_0" ELSE 1e-100 END) END - (CASE WHEN ("DT_Output_10"."Proba_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_10"."Proba_0" IS NULL OR "DT_Output_10"."Proba_0" > 1e-100) THEN "DT_Output_10"."Proba_0" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_10"."Proba_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_10"."Proba_1" IS NULL OR "DT_Output_10"."Proba_1" > 1e-100) THEN "DT_Output_10"."Proba_1" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_10"."Proba_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_10"."Proba_2" IS NULL OR "DT_Output_10"."Proba_2" > 1e-100) THEN "DT_Output_10"."Proba_2" ELSE 1e-100 END) END) / 3) AS "Proba_0", (2.0 * (CASE WHEN ("DT_Output_10"."Proba_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_10"."Proba_1" IS NULL OR "DT_Output_10"."Proba_1" > 1e-100) THEN "DT_Output_10"."Proba_1" ELSE 1e-100 END) END - (CASE WHEN ("DT_Output_10"."Proba_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_10"."Proba_0" IS NULL OR "DT_Output_10"."Proba_0" > 1e-100) THEN "DT_Output_10"."Proba_0" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_10"."Proba_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_10"."Proba_1" IS NULL OR "DT_Output_10"."Proba_1" > 1e-100) THEN "DT_Output_10"."Proba_1" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_10"."Proba_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_10"."Proba_2" IS NULL OR "DT_Output_10"."Proba_2" > 1e-100) THEN "DT_Output_10"."Proba_2" ELSE 1e-100 END) END) / 3)) / 16.0 AS "Score_1", 2.0 * (CASE WHEN ("DT_Output_10"."Proba_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_10"."Proba_1" IS NULL OR "DT_Output_10"."Proba_1" > 1e-100) THEN "DT_Output_10"."Proba_1" ELSE 1e-100 END) END - (CASE WHEN ("DT_Output_10"."Proba_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_10"."Proba_0" IS NULL OR "DT_Output_10"."Proba_0" > 1e-100) THEN "DT_Output_10"."Proba_0" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_10"."Proba_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_10"."Proba_1" IS NULL OR "DT_Output_10"."Proba_1" > 1e-100) THEN "DT_Output_10"."Proba_1" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_10"."Proba_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_10"."Proba_2" IS NULL OR "DT_Output_10"."Proba_2" > 1e-100) THEN "DT_Output_10"."Proba_2" ELSE 1e-100 END) END) / 3) AS "Proba_1", (2.0 * (CASE WHEN ("DT_Output_10"."Proba_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_10"."Proba_2" IS NULL OR "DT_Output_10"."Proba_2" > 1e-100) THEN "DT_Output_10"."Proba_2" ELSE 1e-100 END) END - (CASE WHEN ("DT_Output_10"."Proba_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_10"."Proba_0" IS NULL OR "DT_Output_10"."Proba_0" > 1e-100) THEN "DT_Output_10"."Proba_0" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_10"."Proba_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_10"."Proba_1" IS NULL OR "DT_Output_10"."Proba_1" > 1e-100) THEN "DT_Output_10"."Proba_1" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_10"."Proba_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_10"."Proba_2" IS NULL OR "DT_Output_10"."Proba_2" > 1e-100) THEN "DT_Output_10"."Proba_2" ELSE 1e-100 END) END) / 3)) / 16.0 AS "Score_2", 2.0 * (CASE WHEN ("DT_Output_10"."Proba_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_10"."Proba_2" IS NULL OR "DT_Output_10"."Proba_2" > 1e-100) THEN "DT_Output_10"."Proba_2" ELSE 1e-100 END) END - (CASE WHEN ("DT_Output_10"."Proba_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_10"."Proba_0" IS NULL OR "DT_Output_10"."Proba_0" > 1e-100) THEN "DT_Output_10"."Proba_0" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_10"."Proba_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_10"."Proba_1" IS NULL OR "DT_Output_10"."Proba_1" > 1e-100) THEN "DT_Output_10"."Proba_1" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_10"."Proba_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_10"."Proba_2" IS NULL OR "DT_Output_10"."Proba_2" > 1e-100) THEN "DT_Output_10"."Proba_2" ELSE 1e-100 END) END) / 3) AS "Proba_2" 
FROM "DT_Output_10"), 
"DT_node_lookup_11" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.5400919914245605) THEN 1 ELSE 2 END AS node_id_2 
FROM tmp_20180417042017_d3fbux_ads_sca_2_out AS "ADS_sca_2_OUT"), 
"DT_node_data_11" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values".threshold AS FLOAT) AS threshold, CAST("Values".count AS FLOAT) AS count, CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Proba_0" AS FLOAT) AS "Proba_0", CAST("Values"."LogProba_0" AS FLOAT) AS "LogProba_0", CAST("Values"."Proba_1" AS FLOAT) AS "Proba_1", CAST("Values"."LogProba_1" AS FLOAT) AS "LogProba_1", CAST("Values"."Proba_2" AS FLOAT) AS "Proba_2", CAST("Values"."LogProba_2" AS FLOAT) AS "LogProba_2", CAST("Values"."Decision" AS FLOAT) AS "Decision", CAST("Values"."DecisionProba" AS FLOAT) AS "DecisionProba" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 79 AS count, 1 AS depth, 0 AS parent_id, 4.81196669298056e-06 AS "Proba_0", -12.244404681534034 AS "LogProba_0", 0.9998977442279475 AS "Proba_1", -0.00010226100053036314 AS "LogProba_1", 9.744380535948514e-05 AS "Proba_2", -9.23623470140436 AS "LogProba_2", 1 AS "Decision", 0.9998977442279475 AS "DecisionProba" UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 41 AS count, 1 AS depth, 0 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0013923137600357898 AS "Proba_1", -6.576788340144635 AS "LogProba_1", 0.9986076862399642 AS "Proba_2", -0.001393283929463707 AS "LogProba_2", 2 AS "Decision", 0.9986076862399642 AS "DecisionProba") AS "Values"), 
"DT_Output_11" AS 
(SELECT "DT_node_lookup_11"."KEY" AS "KEY", "DT_node_lookup_11".node_id_2 AS node_id_2, "DT_node_data_11".node_id AS node_id, "DT_node_data_11".feature AS feature, "DT_node_data_11".threshold AS threshold, "DT_node_data_11".count AS count, "DT_node_data_11".depth AS depth, "DT_node_data_11".parent_id AS parent_id, "DT_node_data_11"."Proba_0" AS "Proba_0", "DT_node_data_11"."LogProba_0" AS "LogProba_0", "DT_node_data_11"."Proba_1" AS "Proba_1", "DT_node_data_11"."LogProba_1" AS "LogProba_1", "DT_node_data_11"."Proba_2" AS "Proba_2", "DT_node_data_11"."LogProba_2" AS "LogProba_2", "DT_node_data_11"."Decision" AS "Decision", "DT_node_data_11"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup_11" LEFT OUTER JOIN "DT_node_data_11" ON "DT_node_lookup_11".node_id_2 = "DT_node_data_11".node_id), 
"ADB_Model_11" AS 
(SELECT "DT_Output_11"."KEY" AS "KEY", (2.0 * (CASE WHEN ("DT_Output_11"."Proba_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_11"."Proba_0" IS NULL OR "DT_Output_11"."Proba_0" > 1e-100) THEN "DT_Output_11"."Proba_0" ELSE 1e-100 END) END - (CASE WHEN ("DT_Output_11"."Proba_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_11"."Proba_0" IS NULL OR "DT_Output_11"."Proba_0" > 1e-100) THEN "DT_Output_11"."Proba_0" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_11"."Proba_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_11"."Proba_1" IS NULL OR "DT_Output_11"."Proba_1" > 1e-100) THEN "DT_Output_11"."Proba_1" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_11"."Proba_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_11"."Proba_2" IS NULL OR "DT_Output_11"."Proba_2" > 1e-100) THEN "DT_Output_11"."Proba_2" ELSE 1e-100 END) END) / 3)) / 16.0 AS "Score_0", 2.0 * (CASE WHEN ("DT_Output_11"."Proba_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_11"."Proba_0" IS NULL OR "DT_Output_11"."Proba_0" > 1e-100) THEN "DT_Output_11"."Proba_0" ELSE 1e-100 END) END - (CASE WHEN ("DT_Output_11"."Proba_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_11"."Proba_0" IS NULL OR "DT_Output_11"."Proba_0" > 1e-100) THEN "DT_Output_11"."Proba_0" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_11"."Proba_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_11"."Proba_1" IS NULL OR "DT_Output_11"."Proba_1" > 1e-100) THEN "DT_Output_11"."Proba_1" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_11"."Proba_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_11"."Proba_2" IS NULL OR "DT_Output_11"."Proba_2" > 1e-100) THEN "DT_Output_11"."Proba_2" ELSE 1e-100 END) END) / 3) AS "Proba_0", (2.0 * (CASE WHEN ("DT_Output_11"."Proba_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_11"."Proba_1" IS NULL OR "DT_Output_11"."Proba_1" > 1e-100) THEN "DT_Output_11"."Proba_1" ELSE 1e-100 END) END - (CASE WHEN ("DT_Output_11"."Proba_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_11"."Proba_0" IS NULL OR "DT_Output_11"."Proba_0" > 1e-100) THEN "DT_Output_11"."Proba_0" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_11"."Proba_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_11"."Proba_1" IS NULL OR "DT_Output_11"."Proba_1" > 1e-100) THEN "DT_Output_11"."Proba_1" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_11"."Proba_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_11"."Proba_2" IS NULL OR "DT_Output_11"."Proba_2" > 1e-100) THEN "DT_Output_11"."Proba_2" ELSE 1e-100 END) END) / 3)) / 16.0 AS "Score_1", 2.0 * (CASE WHEN ("DT_Output_11"."Proba_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_11"."Proba_1" IS NULL OR "DT_Output_11"."Proba_1" > 1e-100) THEN "DT_Output_11"."Proba_1" ELSE 1e-100 END) END - (CASE WHEN ("DT_Output_11"."Proba_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_11"."Proba_0" IS NULL OR "DT_Output_11"."Proba_0" > 1e-100) THEN "DT_Output_11"."Proba_0" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_11"."Proba_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_11"."Proba_1" IS NULL OR "DT_Output_11"."Proba_1" > 1e-100) THEN "DT_Output_11"."Proba_1" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_11"."Proba_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_11"."Proba_2" IS NULL OR "DT_Output_11"."Proba_2" > 1e-100) THEN "DT_Output_11"."Proba_2" ELSE 1e-100 END) END) / 3) AS "Proba_1", (2.0 * (CASE WHEN ("DT_Output_11"."Proba_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_11"."Proba_2" IS NULL OR "DT_Output_11"."Proba_2" > 1e-100) THEN "DT_Output_11"."Proba_2" ELSE 1e-100 END) END - (CASE WHEN ("DT_Output_11"."Proba_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_11"."Proba_0" IS NULL OR "DT_Output_11"."Proba_0" > 1e-100) THEN "DT_Output_11"."Proba_0" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_11"."Proba_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_11"."Proba_1" IS NULL OR "DT_Output_11"."Proba_1" > 1e-100) THEN "DT_Output_11"."Proba_1" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_11"."Proba_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_11"."Proba_2" IS NULL OR "DT_Output_11"."Proba_2" > 1e-100) THEN "DT_Output_11"."Proba_2" ELSE 1e-100 END) END) / 3)) / 16.0 AS "Score_2", 2.0 * (CASE WHEN ("DT_Output_11"."Proba_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_11"."Proba_2" IS NULL OR "DT_Output_11"."Proba_2" > 1e-100) THEN "DT_Output_11"."Proba_2" ELSE 1e-100 END) END - (CASE WHEN ("DT_Output_11"."Proba_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_11"."Proba_0" IS NULL OR "DT_Output_11"."Proba_0" > 1e-100) THEN "DT_Output_11"."Proba_0" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_11"."Proba_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_11"."Proba_1" IS NULL OR "DT_Output_11"."Proba_1" > 1e-100) THEN "DT_Output_11"."Proba_1" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_11"."Proba_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_11"."Proba_2" IS NULL OR "DT_Output_11"."Proba_2" > 1e-100) THEN "DT_Output_11"."Proba_2" ELSE 1e-100 END) END) / 3) AS "Proba_2" 
FROM "DT_Output_11"), 
"DT_node_lookup_12" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.5934344530105591) THEN 1 ELSE 2 END AS node_id_2 
FROM tmp_20180417042017_d3fbux_ads_sca_2_out AS "ADS_sca_2_OUT"), 
"DT_node_data_12" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values".threshold AS FLOAT) AS threshold, CAST("Values".count AS FLOAT) AS count, CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Proba_0" AS FLOAT) AS "Proba_0", CAST("Values"."LogProba_0" AS FLOAT) AS "LogProba_0", CAST("Values"."Proba_1" AS FLOAT) AS "Proba_1", CAST("Values"."LogProba_1" AS FLOAT) AS "LogProba_1", CAST("Values"."Proba_2" AS FLOAT) AS "Proba_2", CAST("Values"."LogProba_2" AS FLOAT) AS "LogProba_2", CAST("Values"."Decision" AS FLOAT) AS "Decision", CAST("Values"."DecisionProba" AS FLOAT) AS "DecisionProba" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 37 AS count, 1 AS depth, 0 AS parent_id, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 83 AS count, 1 AS depth, 0 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.5000000000000002 AS "Proba_1", -0.6931471805599448 AS "LogProba_1", 0.49999999999999983 AS "Proba_2", -0.6931471805599456 AS "LogProba_2", 1 AS "Decision", 0.5000000000000002 AS "DecisionProba") AS "Values"), 
"DT_Output_12" AS 
(SELECT "DT_node_lookup_12"."KEY" AS "KEY", "DT_node_lookup_12".node_id_2 AS node_id_2, "DT_node_data_12".node_id AS node_id, "DT_node_data_12".feature AS feature, "DT_node_data_12".threshold AS threshold, "DT_node_data_12".count AS count, "DT_node_data_12".depth AS depth, "DT_node_data_12".parent_id AS parent_id, "DT_node_data_12"."Proba_0" AS "Proba_0", "DT_node_data_12"."LogProba_0" AS "LogProba_0", "DT_node_data_12"."Proba_1" AS "Proba_1", "DT_node_data_12"."LogProba_1" AS "LogProba_1", "DT_node_data_12"."Proba_2" AS "Proba_2", "DT_node_data_12"."LogProba_2" AS "LogProba_2", "DT_node_data_12"."Decision" AS "Decision", "DT_node_data_12"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup_12" LEFT OUTER JOIN "DT_node_data_12" ON "DT_node_lookup_12".node_id_2 = "DT_node_data_12".node_id), 
"ADB_Model_12" AS 
(SELECT "DT_Output_12"."KEY" AS "KEY", (2.0 * (CASE WHEN ("DT_Output_12"."Proba_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_12"."Proba_0" IS NULL OR "DT_Output_12"."Proba_0" > 1e-100) THEN "DT_Output_12"."Proba_0" ELSE 1e-100 END) END - (CASE WHEN ("DT_Output_12"."Proba_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_12"."Proba_0" IS NULL OR "DT_Output_12"."Proba_0" > 1e-100) THEN "DT_Output_12"."Proba_0" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_12"."Proba_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_12"."Proba_1" IS NULL OR "DT_Output_12"."Proba_1" > 1e-100) THEN "DT_Output_12"."Proba_1" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_12"."Proba_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_12"."Proba_2" IS NULL OR "DT_Output_12"."Proba_2" > 1e-100) THEN "DT_Output_12"."Proba_2" ELSE 1e-100 END) END) / 3)) / 16.0 AS "Score_0", 2.0 * (CASE WHEN ("DT_Output_12"."Proba_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_12"."Proba_0" IS NULL OR "DT_Output_12"."Proba_0" > 1e-100) THEN "DT_Output_12"."Proba_0" ELSE 1e-100 END) END - (CASE WHEN ("DT_Output_12"."Proba_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_12"."Proba_0" IS NULL OR "DT_Output_12"."Proba_0" > 1e-100) THEN "DT_Output_12"."Proba_0" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_12"."Proba_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_12"."Proba_1" IS NULL OR "DT_Output_12"."Proba_1" > 1e-100) THEN "DT_Output_12"."Proba_1" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_12"."Proba_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_12"."Proba_2" IS NULL OR "DT_Output_12"."Proba_2" > 1e-100) THEN "DT_Output_12"."Proba_2" ELSE 1e-100 END) END) / 3) AS "Proba_0", (2.0 * (CASE WHEN ("DT_Output_12"."Proba_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_12"."Proba_1" IS NULL OR "DT_Output_12"."Proba_1" > 1e-100) THEN "DT_Output_12"."Proba_1" ELSE 1e-100 END) END - (CASE WHEN ("DT_Output_12"."Proba_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_12"."Proba_0" IS NULL OR "DT_Output_12"."Proba_0" > 1e-100) THEN "DT_Output_12"."Proba_0" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_12"."Proba_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_12"."Proba_1" IS NULL OR "DT_Output_12"."Proba_1" > 1e-100) THEN "DT_Output_12"."Proba_1" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_12"."Proba_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_12"."Proba_2" IS NULL OR "DT_Output_12"."Proba_2" > 1e-100) THEN "DT_Output_12"."Proba_2" ELSE 1e-100 END) END) / 3)) / 16.0 AS "Score_1", 2.0 * (CASE WHEN ("DT_Output_12"."Proba_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_12"."Proba_1" IS NULL OR "DT_Output_12"."Proba_1" > 1e-100) THEN "DT_Output_12"."Proba_1" ELSE 1e-100 END) END - (CASE WHEN ("DT_Output_12"."Proba_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_12"."Proba_0" IS NULL OR "DT_Output_12"."Proba_0" > 1e-100) THEN "DT_Output_12"."Proba_0" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_12"."Proba_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_12"."Proba_1" IS NULL OR "DT_Output_12"."Proba_1" > 1e-100) THEN "DT_Output_12"."Proba_1" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_12"."Proba_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_12"."Proba_2" IS NULL OR "DT_Output_12"."Proba_2" > 1e-100) THEN "DT_Output_12"."Proba_2" ELSE 1e-100 END) END) / 3) AS "Proba_1", (2.0 * (CASE WHEN ("DT_Output_12"."Proba_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_12"."Proba_2" IS NULL OR "DT_Output_12"."Proba_2" > 1e-100) THEN "DT_Output_12"."Proba_2" ELSE 1e-100 END) END - (CASE WHEN ("DT_Output_12"."Proba_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_12"."Proba_0" IS NULL OR "DT_Output_12"."Proba_0" > 1e-100) THEN "DT_Output_12"."Proba_0" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_12"."Proba_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_12"."Proba_1" IS NULL OR "DT_Output_12"."Proba_1" > 1e-100) THEN "DT_Output_12"."Proba_1" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_12"."Proba_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_12"."Proba_2" IS NULL OR "DT_Output_12"."Proba_2" > 1e-100) THEN "DT_Output_12"."Proba_2" ELSE 1e-100 END) END) / 3)) / 16.0 AS "Score_2", 2.0 * (CASE WHEN ("DT_Output_12"."Proba_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_12"."Proba_2" IS NULL OR "DT_Output_12"."Proba_2" > 1e-100) THEN "DT_Output_12"."Proba_2" ELSE 1e-100 END) END - (CASE WHEN ("DT_Output_12"."Proba_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_12"."Proba_0" IS NULL OR "DT_Output_12"."Proba_0" > 1e-100) THEN "DT_Output_12"."Proba_0" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_12"."Proba_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_12"."Proba_1" IS NULL OR "DT_Output_12"."Proba_1" > 1e-100) THEN "DT_Output_12"."Proba_1" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_12"."Proba_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_12"."Proba_2" IS NULL OR "DT_Output_12"."Proba_2" > 1e-100) THEN "DT_Output_12"."Proba_2" ELSE 1e-100 END) END) / 3) AS "Proba_2" 
FROM "DT_Output_12"), 
"DT_node_lookup_13" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.6462678909301758) THEN 1 ELSE 2 END AS node_id_2 
FROM tmp_20180417042017_d3fbux_ads_sca_2_out AS "ADS_sca_2_OUT"), 
"DT_node_data_13" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values".threshold AS FLOAT) AS threshold, CAST("Values".count AS FLOAT) AS count, CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Proba_0" AS FLOAT) AS "Proba_0", CAST("Values"."LogProba_0" AS FLOAT) AS "LogProba_0", CAST("Values"."Proba_1" AS FLOAT) AS "Proba_1", CAST("Values"."LogProba_1" AS FLOAT) AS "LogProba_1", CAST("Values"."Proba_2" AS FLOAT) AS "Proba_2", CAST("Values"."LogProba_2" AS FLOAT) AS "LogProba_2", CAST("Values"."Decision" AS FLOAT) AS "Decision", CAST("Values"."DecisionProba" AS FLOAT) AS "DecisionProba" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 81 AS count, 1 AS depth, 0 AS parent_id, 4.798116221942719e-06 AS "Proba_0", -12.247287170842494 AS "LogProba_0", 0.999124428950558 AS "Proba_1", -0.0008759545856651541 AS "LogProba_1", 0.0008707729332201233 AS "Proba_2", -7.046129311746439 AS "LogProba_2", 1 AS "Decision", 0.999124428950558 AS "DecisionProba" UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 39 AS count, 1 AS depth, 0 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 6.0884107962139915e-05 AS "Proba_1", -9.70653837030521 AS "LogProba_1", 0.9999391158920379 AS "Proba_2", -6.0885961474657036e-05 AS "LogProba_2", 2 AS "Decision", 0.9999391158920379 AS "DecisionProba") AS "Values"), 
"DT_Output_13" AS 
(SELECT "DT_node_lookup_13"."KEY" AS "KEY", "DT_node_lookup_13".node_id_2 AS node_id_2, "DT_node_data_13".node_id AS node_id, "DT_node_data_13".feature AS feature, "DT_node_data_13".threshold AS threshold, "DT_node_data_13".count AS count, "DT_node_data_13".depth AS depth, "DT_node_data_13".parent_id AS parent_id, "DT_node_data_13"."Proba_0" AS "Proba_0", "DT_node_data_13"."LogProba_0" AS "LogProba_0", "DT_node_data_13"."Proba_1" AS "Proba_1", "DT_node_data_13"."LogProba_1" AS "LogProba_1", "DT_node_data_13"."Proba_2" AS "Proba_2", "DT_node_data_13"."LogProba_2" AS "LogProba_2", "DT_node_data_13"."Decision" AS "Decision", "DT_node_data_13"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup_13" LEFT OUTER JOIN "DT_node_data_13" ON "DT_node_lookup_13".node_id_2 = "DT_node_data_13".node_id), 
"ADB_Model_13" AS 
(SELECT "DT_Output_13"."KEY" AS "KEY", (2.0 * (CASE WHEN ("DT_Output_13"."Proba_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_13"."Proba_0" IS NULL OR "DT_Output_13"."Proba_0" > 1e-100) THEN "DT_Output_13"."Proba_0" ELSE 1e-100 END) END - (CASE WHEN ("DT_Output_13"."Proba_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_13"."Proba_0" IS NULL OR "DT_Output_13"."Proba_0" > 1e-100) THEN "DT_Output_13"."Proba_0" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_13"."Proba_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_13"."Proba_1" IS NULL OR "DT_Output_13"."Proba_1" > 1e-100) THEN "DT_Output_13"."Proba_1" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_13"."Proba_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_13"."Proba_2" IS NULL OR "DT_Output_13"."Proba_2" > 1e-100) THEN "DT_Output_13"."Proba_2" ELSE 1e-100 END) END) / 3)) / 16.0 AS "Score_0", 2.0 * (CASE WHEN ("DT_Output_13"."Proba_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_13"."Proba_0" IS NULL OR "DT_Output_13"."Proba_0" > 1e-100) THEN "DT_Output_13"."Proba_0" ELSE 1e-100 END) END - (CASE WHEN ("DT_Output_13"."Proba_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_13"."Proba_0" IS NULL OR "DT_Output_13"."Proba_0" > 1e-100) THEN "DT_Output_13"."Proba_0" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_13"."Proba_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_13"."Proba_1" IS NULL OR "DT_Output_13"."Proba_1" > 1e-100) THEN "DT_Output_13"."Proba_1" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_13"."Proba_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_13"."Proba_2" IS NULL OR "DT_Output_13"."Proba_2" > 1e-100) THEN "DT_Output_13"."Proba_2" ELSE 1e-100 END) END) / 3) AS "Proba_0", (2.0 * (CASE WHEN ("DT_Output_13"."Proba_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_13"."Proba_1" IS NULL OR "DT_Output_13"."Proba_1" > 1e-100) THEN "DT_Output_13"."Proba_1" ELSE 1e-100 END) END - (CASE WHEN ("DT_Output_13"."Proba_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_13"."Proba_0" IS NULL OR "DT_Output_13"."Proba_0" > 1e-100) THEN "DT_Output_13"."Proba_0" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_13"."Proba_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_13"."Proba_1" IS NULL OR "DT_Output_13"."Proba_1" > 1e-100) THEN "DT_Output_13"."Proba_1" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_13"."Proba_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_13"."Proba_2" IS NULL OR "DT_Output_13"."Proba_2" > 1e-100) THEN "DT_Output_13"."Proba_2" ELSE 1e-100 END) END) / 3)) / 16.0 AS "Score_1", 2.0 * (CASE WHEN ("DT_Output_13"."Proba_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_13"."Proba_1" IS NULL OR "DT_Output_13"."Proba_1" > 1e-100) THEN "DT_Output_13"."Proba_1" ELSE 1e-100 END) END - (CASE WHEN ("DT_Output_13"."Proba_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_13"."Proba_0" IS NULL OR "DT_Output_13"."Proba_0" > 1e-100) THEN "DT_Output_13"."Proba_0" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_13"."Proba_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_13"."Proba_1" IS NULL OR "DT_Output_13"."Proba_1" > 1e-100) THEN "DT_Output_13"."Proba_1" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_13"."Proba_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_13"."Proba_2" IS NULL OR "DT_Output_13"."Proba_2" > 1e-100) THEN "DT_Output_13"."Proba_2" ELSE 1e-100 END) END) / 3) AS "Proba_1", (2.0 * (CASE WHEN ("DT_Output_13"."Proba_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_13"."Proba_2" IS NULL OR "DT_Output_13"."Proba_2" > 1e-100) THEN "DT_Output_13"."Proba_2" ELSE 1e-100 END) END - (CASE WHEN ("DT_Output_13"."Proba_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_13"."Proba_0" IS NULL OR "DT_Output_13"."Proba_0" > 1e-100) THEN "DT_Output_13"."Proba_0" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_13"."Proba_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_13"."Proba_1" IS NULL OR "DT_Output_13"."Proba_1" > 1e-100) THEN "DT_Output_13"."Proba_1" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_13"."Proba_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_13"."Proba_2" IS NULL OR "DT_Output_13"."Proba_2" > 1e-100) THEN "DT_Output_13"."Proba_2" ELSE 1e-100 END) END) / 3)) / 16.0 AS "Score_2", 2.0 * (CASE WHEN ("DT_Output_13"."Proba_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_13"."Proba_2" IS NULL OR "DT_Output_13"."Proba_2" > 1e-100) THEN "DT_Output_13"."Proba_2" ELSE 1e-100 END) END - (CASE WHEN ("DT_Output_13"."Proba_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_13"."Proba_0" IS NULL OR "DT_Output_13"."Proba_0" > 1e-100) THEN "DT_Output_13"."Proba_0" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_13"."Proba_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_13"."Proba_1" IS NULL OR "DT_Output_13"."Proba_1" > 1e-100) THEN "DT_Output_13"."Proba_1" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_13"."Proba_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_13"."Proba_2" IS NULL OR "DT_Output_13"."Proba_2" > 1e-100) THEN "DT_Output_13"."Proba_2" ELSE 1e-100 END) END) / 3) AS "Proba_2" 
FROM "DT_Output_13"), 
"DT_node_lookup_14" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.8158766627311707) THEN 1 ELSE 2 END AS node_id_2 
FROM tmp_20180417042017_d3fbux_ads_sca_2_out AS "ADS_sca_2_OUT"), 
"DT_node_data_14" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values".threshold AS FLOAT) AS threshold, CAST("Values".count AS FLOAT) AS count, CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Proba_0" AS FLOAT) AS "Proba_0", CAST("Values"."LogProba_0" AS FLOAT) AS "LogProba_0", CAST("Values"."Proba_1" AS FLOAT) AS "Proba_1", CAST("Values"."LogProba_1" AS FLOAT) AS "LogProba_1", CAST("Values"."Proba_2" AS FLOAT) AS "Proba_2", CAST("Values"."LogProba_2" AS FLOAT) AS "LogProba_2", CAST("Values"."Decision" AS FLOAT) AS "Decision", CAST("Values"."DecisionProba" AS FLOAT) AS "DecisionProba" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 37 AS count, 1 AS depth, 0 AS parent_id, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0 AS "Decision", 1.0 AS "DecisionProba" UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 83 AS count, 1 AS depth, 0 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.5000000000000004 AS "Proba_1", -0.6931471805599444 AS "LogProba_1", 0.4999999999999995 AS "Proba_2", -0.6931471805599463 AS "LogProba_2", 1 AS "Decision", 0.5000000000000004 AS "DecisionProba") AS "Values"), 
"DT_Output_14" AS 
(SELECT "DT_node_lookup_14"."KEY" AS "KEY", "DT_node_lookup_14".node_id_2 AS node_id_2, "DT_node_data_14".node_id AS node_id, "DT_node_data_14".feature AS feature, "DT_node_data_14".threshold AS threshold, "DT_node_data_14".count AS count, "DT_node_data_14".depth AS depth, "DT_node_data_14".parent_id AS parent_id, "DT_node_data_14"."Proba_0" AS "Proba_0", "DT_node_data_14"."LogProba_0" AS "LogProba_0", "DT_node_data_14"."Proba_1" AS "Proba_1", "DT_node_data_14"."LogProba_1" AS "LogProba_1", "DT_node_data_14"."Proba_2" AS "Proba_2", "DT_node_data_14"."LogProba_2" AS "LogProba_2", "DT_node_data_14"."Decision" AS "Decision", "DT_node_data_14"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup_14" LEFT OUTER JOIN "DT_node_data_14" ON "DT_node_lookup_14".node_id_2 = "DT_node_data_14".node_id), 
"ADB_Model_14" AS 
(SELECT "DT_Output_14"."KEY" AS "KEY", (2.0 * (CASE WHEN ("DT_Output_14"."Proba_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_14"."Proba_0" IS NULL OR "DT_Output_14"."Proba_0" > 1e-100) THEN "DT_Output_14"."Proba_0" ELSE 1e-100 END) END - (CASE WHEN ("DT_Output_14"."Proba_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_14"."Proba_0" IS NULL OR "DT_Output_14"."Proba_0" > 1e-100) THEN "DT_Output_14"."Proba_0" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_14"."Proba_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_14"."Proba_1" IS NULL OR "DT_Output_14"."Proba_1" > 1e-100) THEN "DT_Output_14"."Proba_1" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_14"."Proba_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_14"."Proba_2" IS NULL OR "DT_Output_14"."Proba_2" > 1e-100) THEN "DT_Output_14"."Proba_2" ELSE 1e-100 END) END) / 3)) / 16.0 AS "Score_0", 2.0 * (CASE WHEN ("DT_Output_14"."Proba_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_14"."Proba_0" IS NULL OR "DT_Output_14"."Proba_0" > 1e-100) THEN "DT_Output_14"."Proba_0" ELSE 1e-100 END) END - (CASE WHEN ("DT_Output_14"."Proba_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_14"."Proba_0" IS NULL OR "DT_Output_14"."Proba_0" > 1e-100) THEN "DT_Output_14"."Proba_0" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_14"."Proba_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_14"."Proba_1" IS NULL OR "DT_Output_14"."Proba_1" > 1e-100) THEN "DT_Output_14"."Proba_1" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_14"."Proba_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_14"."Proba_2" IS NULL OR "DT_Output_14"."Proba_2" > 1e-100) THEN "DT_Output_14"."Proba_2" ELSE 1e-100 END) END) / 3) AS "Proba_0", (2.0 * (CASE WHEN ("DT_Output_14"."Proba_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_14"."Proba_1" IS NULL OR "DT_Output_14"."Proba_1" > 1e-100) THEN "DT_Output_14"."Proba_1" ELSE 1e-100 END) END - (CASE WHEN ("DT_Output_14"."Proba_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_14"."Proba_0" IS NULL OR "DT_Output_14"."Proba_0" > 1e-100) THEN "DT_Output_14"."Proba_0" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_14"."Proba_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_14"."Proba_1" IS NULL OR "DT_Output_14"."Proba_1" > 1e-100) THEN "DT_Output_14"."Proba_1" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_14"."Proba_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_14"."Proba_2" IS NULL OR "DT_Output_14"."Proba_2" > 1e-100) THEN "DT_Output_14"."Proba_2" ELSE 1e-100 END) END) / 3)) / 16.0 AS "Score_1", 2.0 * (CASE WHEN ("DT_Output_14"."Proba_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_14"."Proba_1" IS NULL OR "DT_Output_14"."Proba_1" > 1e-100) THEN "DT_Output_14"."Proba_1" ELSE 1e-100 END) END - (CASE WHEN ("DT_Output_14"."Proba_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_14"."Proba_0" IS NULL OR "DT_Output_14"."Proba_0" > 1e-100) THEN "DT_Output_14"."Proba_0" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_14"."Proba_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_14"."Proba_1" IS NULL OR "DT_Output_14"."Proba_1" > 1e-100) THEN "DT_Output_14"."Proba_1" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_14"."Proba_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_14"."Proba_2" IS NULL OR "DT_Output_14"."Proba_2" > 1e-100) THEN "DT_Output_14"."Proba_2" ELSE 1e-100 END) END) / 3) AS "Proba_1", (2.0 * (CASE WHEN ("DT_Output_14"."Proba_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_14"."Proba_2" IS NULL OR "DT_Output_14"."Proba_2" > 1e-100) THEN "DT_Output_14"."Proba_2" ELSE 1e-100 END) END - (CASE WHEN ("DT_Output_14"."Proba_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_14"."Proba_0" IS NULL OR "DT_Output_14"."Proba_0" > 1e-100) THEN "DT_Output_14"."Proba_0" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_14"."Proba_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_14"."Proba_1" IS NULL OR "DT_Output_14"."Proba_1" > 1e-100) THEN "DT_Output_14"."Proba_1" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_14"."Proba_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_14"."Proba_2" IS NULL OR "DT_Output_14"."Proba_2" > 1e-100) THEN "DT_Output_14"."Proba_2" ELSE 1e-100 END) END) / 3)) / 16.0 AS "Score_2", 2.0 * (CASE WHEN ("DT_Output_14"."Proba_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_14"."Proba_2" IS NULL OR "DT_Output_14"."Proba_2" > 1e-100) THEN "DT_Output_14"."Proba_2" ELSE 1e-100 END) END - (CASE WHEN ("DT_Output_14"."Proba_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_14"."Proba_0" IS NULL OR "DT_Output_14"."Proba_0" > 1e-100) THEN "DT_Output_14"."Proba_0" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_14"."Proba_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_14"."Proba_1" IS NULL OR "DT_Output_14"."Proba_1" > 1e-100) THEN "DT_Output_14"."Proba_1" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_14"."Proba_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_14"."Proba_2" IS NULL OR "DT_Output_14"."Proba_2" > 1e-100) THEN "DT_Output_14"."Proba_2" ELSE 1e-100 END) END) / 3) AS "Proba_2" 
FROM "DT_Output_14"), 
"DT_node_lookup_15" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.5400919914245605) THEN 1 ELSE 2 END AS node_id_2 
FROM tmp_20180417042017_d3fbux_ads_sca_2_out AS "ADS_sca_2_OUT"), 
"DT_node_data_15" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values".threshold AS FLOAT) AS threshold, CAST("Values".count AS FLOAT) AS count, CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Proba_0" AS FLOAT) AS "Proba_0", CAST("Values"."LogProba_0" AS FLOAT) AS "LogProba_0", CAST("Values"."Proba_1" AS FLOAT) AS "Proba_1", CAST("Values"."LogProba_1" AS FLOAT) AS "LogProba_1", CAST("Values"."Proba_2" AS FLOAT) AS "Proba_2", CAST("Values"."LogProba_2" AS FLOAT) AS "LogProba_2", CAST("Values"."Decision" AS FLOAT) AS "Decision", CAST("Values"."DecisionProba" AS FLOAT) AS "DecisionProba" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 79 AS count, 1 AS depth, 0 AS parent_id, 4.809382844138304e-06 AS "Proba_0", -12.244941788910584 AS "LogProba_0", 0.9998473862639816 AS "Proba_1", -0.00015262538267956716 AS "LogProba_1", 0.00014780435317418496 AS "Proba_2", -8.81962109674328 AS "LogProba_2", 1 AS "Decision", 0.9998473862639816 AS "DecisionProba" UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 41 AS count, 1 AS depth, 0 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0009574869821768459 AS "Proba_1", -6.951198432639654 AS "LogProba_1", 0.9990425130178231 AS "Proba_2", -0.0009579456656497651 AS "LogProba_2", 2 AS "Decision", 0.9990425130178231 AS "DecisionProba") AS "Values"), 
"DT_Output_15" AS 
(SELECT "DT_node_lookup_15"."KEY" AS "KEY", "DT_node_lookup_15".node_id_2 AS node_id_2, "DT_node_data_15".node_id AS node_id, "DT_node_data_15".feature AS feature, "DT_node_data_15".threshold AS threshold, "DT_node_data_15".count AS count, "DT_node_data_15".depth AS depth, "DT_node_data_15".parent_id AS parent_id, "DT_node_data_15"."Proba_0" AS "Proba_0", "DT_node_data_15"."LogProba_0" AS "LogProba_0", "DT_node_data_15"."Proba_1" AS "Proba_1", "DT_node_data_15"."LogProba_1" AS "LogProba_1", "DT_node_data_15"."Proba_2" AS "Proba_2", "DT_node_data_15"."LogProba_2" AS "LogProba_2", "DT_node_data_15"."Decision" AS "Decision", "DT_node_data_15"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup_15" LEFT OUTER JOIN "DT_node_data_15" ON "DT_node_lookup_15".node_id_2 = "DT_node_data_15".node_id), 
"ADB_Model_15" AS 
(SELECT "DT_Output_15"."KEY" AS "KEY", (2.0 * (CASE WHEN ("DT_Output_15"."Proba_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_15"."Proba_0" IS NULL OR "DT_Output_15"."Proba_0" > 1e-100) THEN "DT_Output_15"."Proba_0" ELSE 1e-100 END) END - (CASE WHEN ("DT_Output_15"."Proba_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_15"."Proba_0" IS NULL OR "DT_Output_15"."Proba_0" > 1e-100) THEN "DT_Output_15"."Proba_0" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_15"."Proba_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_15"."Proba_1" IS NULL OR "DT_Output_15"."Proba_1" > 1e-100) THEN "DT_Output_15"."Proba_1" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_15"."Proba_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_15"."Proba_2" IS NULL OR "DT_Output_15"."Proba_2" > 1e-100) THEN "DT_Output_15"."Proba_2" ELSE 1e-100 END) END) / 3)) / 16.0 AS "Score_0", 2.0 * (CASE WHEN ("DT_Output_15"."Proba_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_15"."Proba_0" IS NULL OR "DT_Output_15"."Proba_0" > 1e-100) THEN "DT_Output_15"."Proba_0" ELSE 1e-100 END) END - (CASE WHEN ("DT_Output_15"."Proba_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_15"."Proba_0" IS NULL OR "DT_Output_15"."Proba_0" > 1e-100) THEN "DT_Output_15"."Proba_0" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_15"."Proba_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_15"."Proba_1" IS NULL OR "DT_Output_15"."Proba_1" > 1e-100) THEN "DT_Output_15"."Proba_1" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_15"."Proba_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_15"."Proba_2" IS NULL OR "DT_Output_15"."Proba_2" > 1e-100) THEN "DT_Output_15"."Proba_2" ELSE 1e-100 END) END) / 3) AS "Proba_0", (2.0 * (CASE WHEN ("DT_Output_15"."Proba_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_15"."Proba_1" IS NULL OR "DT_Output_15"."Proba_1" > 1e-100) THEN "DT_Output_15"."Proba_1" ELSE 1e-100 END) END - (CASE WHEN ("DT_Output_15"."Proba_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_15"."Proba_0" IS NULL OR "DT_Output_15"."Proba_0" > 1e-100) THEN "DT_Output_15"."Proba_0" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_15"."Proba_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_15"."Proba_1" IS NULL OR "DT_Output_15"."Proba_1" > 1e-100) THEN "DT_Output_15"."Proba_1" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_15"."Proba_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_15"."Proba_2" IS NULL OR "DT_Output_15"."Proba_2" > 1e-100) THEN "DT_Output_15"."Proba_2" ELSE 1e-100 END) END) / 3)) / 16.0 AS "Score_1", 2.0 * (CASE WHEN ("DT_Output_15"."Proba_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_15"."Proba_1" IS NULL OR "DT_Output_15"."Proba_1" > 1e-100) THEN "DT_Output_15"."Proba_1" ELSE 1e-100 END) END - (CASE WHEN ("DT_Output_15"."Proba_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_15"."Proba_0" IS NULL OR "DT_Output_15"."Proba_0" > 1e-100) THEN "DT_Output_15"."Proba_0" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_15"."Proba_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_15"."Proba_1" IS NULL OR "DT_Output_15"."Proba_1" > 1e-100) THEN "DT_Output_15"."Proba_1" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_15"."Proba_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_15"."Proba_2" IS NULL OR "DT_Output_15"."Proba_2" > 1e-100) THEN "DT_Output_15"."Proba_2" ELSE 1e-100 END) END) / 3) AS "Proba_1", (2.0 * (CASE WHEN ("DT_Output_15"."Proba_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_15"."Proba_2" IS NULL OR "DT_Output_15"."Proba_2" > 1e-100) THEN "DT_Output_15"."Proba_2" ELSE 1e-100 END) END - (CASE WHEN ("DT_Output_15"."Proba_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_15"."Proba_0" IS NULL OR "DT_Output_15"."Proba_0" > 1e-100) THEN "DT_Output_15"."Proba_0" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_15"."Proba_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_15"."Proba_1" IS NULL OR "DT_Output_15"."Proba_1" > 1e-100) THEN "DT_Output_15"."Proba_1" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_15"."Proba_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_15"."Proba_2" IS NULL OR "DT_Output_15"."Proba_2" > 1e-100) THEN "DT_Output_15"."Proba_2" ELSE 1e-100 END) END) / 3)) / 16.0 AS "Score_2", 2.0 * (CASE WHEN ("DT_Output_15"."Proba_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_15"."Proba_2" IS NULL OR "DT_Output_15"."Proba_2" > 1e-100) THEN "DT_Output_15"."Proba_2" ELSE 1e-100 END) END - (CASE WHEN ("DT_Output_15"."Proba_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_15"."Proba_0" IS NULL OR "DT_Output_15"."Proba_0" > 1e-100) THEN "DT_Output_15"."Proba_0" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_15"."Proba_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_15"."Proba_1" IS NULL OR "DT_Output_15"."Proba_1" > 1e-100) THEN "DT_Output_15"."Proba_1" ELSE 1e-100 END) END + CASE WHEN ("DT_Output_15"."Proba_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE log(CASE WHEN ("DT_Output_15"."Proba_2" IS NULL OR "DT_Output_15"."Proba_2" > 1e-100) THEN "DT_Output_15"."Proba_2" ELSE 1e-100 END) END) / 3) AS "Proba_2" 
FROM "DT_Output_15")
 SELECT "ADB_B1"."KEY", "ADB_B1"."Score_0", "ADB_B1"."Proba_0", "ADB_B1"."Score_1", "ADB_B1"."Proba_1", "ADB_B1"."Score_2", "ADB_B1"."Proba_2" 
FROM (SELECT "ADB_esu_1"."KEY" AS "KEY", "ADB_esu_1"."Score_0" AS "Score_0", "ADB_esu_1"."Proba_0" AS "Proba_0", "ADB_esu_1"."Score_1" AS "Score_1", "ADB_esu_1"."Proba_1" AS "Proba_1", "ADB_esu_1"."Score_2" AS "Score_2", "ADB_esu_1"."Proba_2" AS "Proba_2" 
FROM (SELECT "ADB_Model_10"."KEY" AS "KEY", "ADB_Model_10"."Score_0" AS "Score_0", "ADB_Model_10"."Proba_0" AS "Proba_0", "ADB_Model_10"."Score_1" AS "Score_1", "ADB_Model_10"."Proba_1" AS "Proba_1", "ADB_Model_10"."Score_2" AS "Score_2", "ADB_Model_10"."Proba_2" AS "Proba_2" 
FROM "ADB_Model_10" UNION ALL SELECT "ADB_Model_11"."KEY" AS "KEY", "ADB_Model_11"."Score_0" AS "Score_0", "ADB_Model_11"."Proba_0" AS "Proba_0", "ADB_Model_11"."Score_1" AS "Score_1", "ADB_Model_11"."Proba_1" AS "Proba_1", "ADB_Model_11"."Score_2" AS "Score_2", "ADB_Model_11"."Proba_2" AS "Proba_2" 
FROM "ADB_Model_11" UNION ALL SELECT "ADB_Model_12"."KEY" AS "KEY", "ADB_Model_12"."Score_0" AS "Score_0", "ADB_Model_12"."Proba_0" AS "Proba_0", "ADB_Model_12"."Score_1" AS "Score_1", "ADB_Model_12"."Proba_1" AS "Proba_1", "ADB_Model_12"."Score_2" AS "Score_2", "ADB_Model_12"."Proba_2" AS "Proba_2" 
FROM "ADB_Model_12" UNION ALL SELECT "ADB_Model_13"."KEY" AS "KEY", "ADB_Model_13"."Score_0" AS "Score_0", "ADB_Model_13"."Proba_0" AS "Proba_0", "ADB_Model_13"."Score_1" AS "Score_1", "ADB_Model_13"."Proba_1" AS "Proba_1", "ADB_Model_13"."Score_2" AS "Score_2", "ADB_Model_13"."Proba_2" AS "Proba_2" 
FROM "ADB_Model_13" UNION ALL SELECT "ADB_Model_14"."KEY" AS "KEY", "ADB_Model_14"."Score_0" AS "Score_0", "ADB_Model_14"."Proba_0" AS "Proba_0", "ADB_Model_14"."Score_1" AS "Score_1", "ADB_Model_14"."Proba_1" AS "Proba_1", "ADB_Model_14"."Score_2" AS "Score_2", "ADB_Model_14"."Proba_2" AS "Proba_2" 
FROM "ADB_Model_14" UNION ALL SELECT "ADB_Model_15"."KEY" AS "KEY", "ADB_Model_15"."Score_0" AS "Score_0", "ADB_Model_15"."Proba_0" AS "Proba_0", "ADB_Model_15"."Score_1" AS "Score_1", "ADB_Model_15"."Proba_1" AS "Proba_1", "ADB_Model_15"."Score_2" AS "Score_2", "ADB_Model_15"."Proba_2" AS "Proba_2" 
FROM "ADB_Model_15") AS "ADB_esu_1") AS "ADB_B1") AS "U"

-- Code For temporary table tmp_20180417042017_crr9gj_adb_union part 1/2. Create 


CREATE TEMPORARY TABLE tmp_20180417042017_crr9gj_adb_union (
	"KEY" BIGINT, 
	"Score_0" FLOAT, 
	"Proba_0" FLOAT, 
	"Score_1" FLOAT, 
	"Proba_1" FLOAT, 
	"Score_2" FLOAT, 
	"Proba_2" FLOAT
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table tmp_20180417042017_crr9gj_adb_union part 2/2. Populate

INSERT INTO tmp_20180417042017_crr9gj_adb_union ("KEY", "Score_0", "Proba_0", "Score_1", "Proba_1", "Score_2", "Proba_2") SELECT "U"."KEY", "U"."Score_0", "U"."Proba_0", "U"."Score_1", "U"."Proba_1", "U"."Score_2", "U"."Proba_2" 
FROM (SELECT "ADB_Union"."KEY", "ADB_Union"."Score_0", "ADB_Union"."Proba_0", "ADB_Union"."Score_1", "ADB_Union"."Proba_1", "ADB_Union"."Score_2", "ADB_Union"."Proba_2" 
FROM (SELECT "ADB_EnsembleUnion"."KEY" AS "KEY", "ADB_EnsembleUnion"."Score_0" AS "Score_0", "ADB_EnsembleUnion"."Proba_0" AS "Proba_0", "ADB_EnsembleUnion"."Score_1" AS "Score_1", "ADB_EnsembleUnion"."Proba_1" AS "Proba_1", "ADB_EnsembleUnion"."Score_2" AS "Score_2", "ADB_EnsembleUnion"."Proba_2" AS "Proba_2" 
FROM (SELECT "ADB_B0"."KEY" AS "KEY", "ADB_B0"."Score_0" AS "Score_0", "ADB_B0"."Proba_0" AS "Proba_0", "ADB_B0"."Score_1" AS "Score_1", "ADB_B0"."Proba_1" AS "Proba_1", "ADB_B0"."Score_2" AS "Score_2", "ADB_B0"."Proba_2" AS "Proba_2" 
FROM tmp_20180417042017_1xedom_adb_b0 AS "ADB_B0" UNION ALL SELECT "ADB_B1"."KEY" AS "KEY", "ADB_B1"."Score_0" AS "Score_0", "ADB_B1"."Proba_0" AS "Proba_0", "ADB_B1"."Score_1" AS "Score_1", "ADB_B1"."Proba_1" AS "Proba_1", "ADB_B1"."Score_2" AS "Score_2", "ADB_B1"."Proba_2" AS "Proba_2" 
FROM tmp_20180417042017_bw0do3_adb_b1 AS "ADB_B1") AS "ADB_EnsembleUnion") AS "ADB_Union") AS "U"

-- Code For temporary table tmp_20180417042017_yf5bl3_adb_sum part 1/2. Create 


CREATE TEMPORARY TABLE tmp_20180417042017_yf5bl3_adb_sum (
	"KEY" BIGINT NOT NULL, 
	"Score_0" FLOAT, 
	"Proba_0" FLOAT, 
	"Score_1" FLOAT, 
	"Proba_1" FLOAT, 
	"Score_2" FLOAT, 
	"Proba_2" FLOAT, 
	PRIMARY KEY ("KEY")
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table tmp_20180417042017_yf5bl3_adb_sum part 2/2. Populate

INSERT INTO tmp_20180417042017_yf5bl3_adb_sum ("KEY", "Score_0", "Proba_0", "Score_1", "Proba_1", "Score_2", "Proba_2") SELECT "U"."KEY", "U"."Score_0", "U"."Proba_0", "U"."Score_1", "U"."Proba_1", "U"."Score_2", "U"."Proba_2" 
FROM (SELECT "ADB_sum"."KEY", "ADB_sum"."Score_0", "ADB_sum"."Proba_0", "ADB_sum"."Score_1", "ADB_sum"."Proba_1", "ADB_sum"."Score_2", "ADB_sum"."Proba_2" 
FROM (SELECT "T"."KEY" AS "KEY", CAST("T"."Score_0" AS FLOAT) AS "Score_0", CAST("T"."Proba_0" AS FLOAT) AS "Proba_0", CAST("T"."Score_1" AS FLOAT) AS "Score_1", CAST("T"."Proba_1" AS FLOAT) AS "Proba_1", CAST("T"."Score_2" AS FLOAT) AS "Score_2", CAST("T"."Proba_2" AS FLOAT) AS "Proba_2" 
FROM (SELECT "ADB_Union"."KEY" AS "KEY", sum("ADB_Union"."Score_0") AS "Score_0", sum("ADB_Union"."Proba_0") AS "Proba_0", sum("ADB_Union"."Score_1") AS "Score_1", sum("ADB_Union"."Proba_1") AS "Proba_1", sum("ADB_Union"."Score_2") AS "Score_2", sum("ADB_Union"."Proba_2") AS "Proba_2" 
FROM tmp_20180417042017_crr9gj_adb_union AS "ADB_Union" GROUP BY "ADB_Union"."KEY") AS "T") AS "ADB_sum") AS "U"

-- Model deployment code

WITH "AdaBoost_AVG_Scores_BN" AS 
(SELECT "ADB_sum"."KEY" AS "KEY", "ADB_sum"."Score_0" AS "Score_0", "ADB_sum"."Proba_0" AS "Proba_0", "ADB_sum"."Score_1" AS "Score_1", "ADB_sum"."Proba_1" AS "Proba_1", "ADB_sum"."Score_2" AS "Score_2", "ADB_sum"."Proba_2" AS "Proba_2" 
FROM tmp_20180417042017_yf5bl3_adb_sum AS "ADB_sum"), 
"AdaBoost_AVG_Scores" AS 
(SELECT "AdaBoost_AVG_Scores_BN"."KEY" AS "KEY", "AdaBoost_AVG_Scores_BN"."Score_0" AS "Score_0", exp(("AdaBoost_AVG_Scores_BN"."Proba_0" / 16.0) / 2) / (exp(("AdaBoost_AVG_Scores_BN"."Proba_0" / 16.0) / 2) + exp(("AdaBoost_AVG_Scores_BN"."Proba_1" / 16.0) / 2) + exp(("AdaBoost_AVG_Scores_BN"."Proba_2" / 16.0) / 2)) AS "Proba_0", CAST(NULL AS FLOAT) AS "LogProba_0", "AdaBoost_AVG_Scores_BN"."Score_1" AS "Score_1", exp(("AdaBoost_AVG_Scores_BN"."Proba_1" / 16.0) / 2) / (exp(("AdaBoost_AVG_Scores_BN"."Proba_0" / 16.0) / 2) + exp(("AdaBoost_AVG_Scores_BN"."Proba_1" / 16.0) / 2) + exp(("AdaBoost_AVG_Scores_BN"."Proba_2" / 16.0) / 2)) AS "Proba_1", CAST(NULL AS FLOAT) AS "LogProba_1", "AdaBoost_AVG_Scores_BN"."Score_2" AS "Score_2", exp(("AdaBoost_AVG_Scores_BN"."Proba_2" / 16.0) / 2) / (exp(("AdaBoost_AVG_Scores_BN"."Proba_0" / 16.0) / 2) + exp(("AdaBoost_AVG_Scores_BN"."Proba_1" / 16.0) / 2) + exp(("AdaBoost_AVG_Scores_BN"."Proba_2" / 16.0) / 2)) AS "Proba_2", CAST(NULL AS FLOAT) AS "LogProba_2" 
FROM "AdaBoost_AVG_Scores_BN"), 
orig_cte AS 
(SELECT "AdaBoost_AVG_Scores"."KEY" AS "KEY", "AdaBoost_AVG_Scores"."Score_0" AS "Score_0", "AdaBoost_AVG_Scores"."Score_1" AS "Score_1", "AdaBoost_AVG_Scores"."Score_2" AS "Score_2", "AdaBoost_AVG_Scores"."Proba_0" AS "Proba_0", "AdaBoost_AVG_Scores"."Proba_1" AS "Proba_1", "AdaBoost_AVG_Scores"."Proba_2" AS "Proba_2", "AdaBoost_AVG_Scores"."LogProba_0" AS "LogProba_0", "AdaBoost_AVG_Scores"."LogProba_1" AS "LogProba_1", "AdaBoost_AVG_Scores"."LogProba_2" AS "LogProba_2", CAST(NULL AS BIGINT) AS "Decision", CAST(NULL AS FLOAT) AS "DecisionProba" 
FROM "AdaBoost_AVG_Scores"), 
score_class_union AS 
(SELECT scu."KEY_u" AS "KEY_u", scu.class AS class, scu."LogProba" AS "LogProba", scu."Proba" AS "Proba", scu."Score" AS "Score" 
FROM (SELECT orig_cte."KEY" AS "KEY_u", 0 AS class, orig_cte."LogProba_0" AS "LogProba", orig_cte."Proba_0" AS "Proba", orig_cte."Score_0" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 1 AS class, orig_cte."LogProba_1" AS "LogProba", orig_cte."Proba_1" AS "Proba", orig_cte."Score_1" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 2 AS class, orig_cte."LogProba_2" AS "LogProba", orig_cte."Proba_2" AS "Proba", orig_cte."Score_2" AS "Score" 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte."KEY" AS "KEY", orig_cte."Score_0" AS "Score_0", orig_cte."Score_1" AS "Score_1", orig_cte."Score_2" AS "Score_2", orig_cte."Proba_0" AS "Proba_0", orig_cte."Proba_1" AS "Proba_1", orig_cte."Proba_2" AS "Proba_2", orig_cte."LogProba_0" AS "LogProba_0", orig_cte."LogProba_1" AS "LogProba_1", orig_cte."LogProba_2" AS "LogProba_2", orig_cte."Decision" AS "Decision", orig_cte."DecisionProba" AS "DecisionProba", max_select."KEY_m" AS "KEY_m", max_select."max_Score" AS "max_Score" 
FROM orig_cte LEFT OUTER JOIN (SELECT score_class_union."KEY_u" AS "KEY_m", max(score_class_union."Score") AS "max_Score" 
FROM score_class_union GROUP BY score_class_union."KEY_u") AS max_select ON orig_cte."KEY" = max_select."KEY_m"), 
union_with_max AS 
(SELECT score_class_union."KEY_u" AS "KEY_u", score_class_union.class AS class, score_class_union."LogProba" AS "LogProba", score_class_union."Proba" AS "Proba", score_class_union."Score" AS "Score", score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Score_2" AS "Score_2", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."Proba_2" AS "Proba_2", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."LogProba_2" AS "LogProba_2", score_max."Decision" AS "Decision", score_max."DecisionProba" AS "DecisionProba", score_max."KEY_m" AS "KEY_m", score_max."max_Score" AS "max_Score" 
FROM score_class_union LEFT OUTER JOIN score_max ON score_class_union."KEY_u" = score_max."KEY"), 
arg_max_cte AS 
(SELECT score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Score_2" AS "Score_2", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."Proba_2" AS "Proba_2", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."LogProba_2" AS "LogProba_2", score_max."Decision" AS "Decision", score_max."DecisionProba" AS "DecisionProba", score_max."KEY_m" AS "KEY_m", score_max."max_Score" AS "max_Score", "arg_max_t_Score"."KEY_Score" AS "KEY_Score", "arg_max_t_Score"."arg_max_Score" AS "arg_max_Score" 
FROM score_max LEFT OUTER JOIN (SELECT union_with_max."KEY" AS "KEY_Score", min(union_with_max.class) AS "arg_max_Score" 
FROM union_with_max 
WHERE union_with_max."Score" >= union_with_max."max_Score" GROUP BY union_with_max."KEY") AS "arg_max_t_Score" ON score_max."KEY" = "arg_max_t_Score"."KEY_Score")
 SELECT arg_max_cte."KEY" AS "KEY", arg_max_cte."Score_0" AS "Score_0", arg_max_cte."Score_1" AS "Score_1", arg_max_cte."Score_2" AS "Score_2", arg_max_cte."Proba_0" AS "Proba_0", arg_max_cte."Proba_1" AS "Proba_1", arg_max_cte."Proba_2" AS "Proba_2", log(CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 1e-100) THEN arg_max_cte."Proba_0" ELSE 1e-100 END) AS "LogProba_0", log(CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 1e-100) THEN arg_max_cte."Proba_1" ELSE 1e-100 END) AS "LogProba_1", log(CASE WHEN (arg_max_cte."Proba_2" IS NULL OR arg_max_cte."Proba_2" > 1e-100) THEN arg_max_cte."Proba_2" ELSE 1e-100 END) AS "LogProba_2", arg_max_cte."arg_max_Score" AS "Decision", CASE WHEN (arg_max_cte."arg_max_Score" = 0) THEN arg_max_cte."Proba_0" WHEN (arg_max_cte."arg_max_Score" = 1) THEN arg_max_cte."Proba_1" WHEN (arg_max_cte."arg_max_Score" = 2) THEN arg_max_cte."Proba_2" END AS "DecisionProba" 
FROM arg_max_cte