-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2018

-- Model : BaggingClassifier_Pipeline
-- Dataset : FourClass_10
-- Database : mssql


-- This SQL code can contain one or more statements, to be executed in the order they appear in this file.



-- Code For temporary table ##TMP_20180416232943_U839X7_ADS_imp_1_OUT part 1/2. Create 


CREATE TABLE ##TMP_20180416232943_U839X7_ADS_imp_1_OUT (
	[KEY] BIGINT NULL, 
	impter_2 FLOAT(53) NULL, 
	impter_3 FLOAT(53) NULL, 
	impter_4 FLOAT(53) NULL, 
	impter_5 FLOAT(53) NULL, 
	impter_6 FLOAT(53) NULL, 
	impter_7 FLOAT(53) NULL, 
	impter_8 FLOAT(53) NULL, 
	impter_9 FLOAT(53) NULL, 
	impter_10 FLOAT(53) NULL, 
	impter_11 FLOAT(53) NULL
)



-- Code For temporary table ##TMP_20180416232943_U839X7_ADS_imp_1_OUT part 2/2. Populate

INSERT INTO ##TMP_20180416232943_U839X7_ADS_imp_1_OUT ([KEY], impter_2, impter_3, impter_4, impter_5, impter_6, impter_7, impter_8, impter_9, impter_10, impter_11) SELECT [ADS_imp_1_OUT].[KEY], [ADS_imp_1_OUT].impter_2, [ADS_imp_1_OUT].impter_3, [ADS_imp_1_OUT].impter_4, [ADS_imp_1_OUT].impter_5, [ADS_imp_1_OUT].impter_6, [ADS_imp_1_OUT].impter_7, [ADS_imp_1_OUT].impter_8, [ADS_imp_1_OUT].impter_9, [ADS_imp_1_OUT].impter_10, [ADS_imp_1_OUT].impter_11 
FROM (SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_0] IS NULL) THEN -0.003903374463034205 ELSE [ADS].[Feature_0] END AS impter_2, CASE WHEN ([ADS].[Feature_1] IS NULL) THEN 0.6152232215702322 ELSE [ADS].[Feature_1] END AS impter_3, CASE WHEN ([ADS].[Feature_2] IS NULL) THEN 0.042796236914291665 ELSE [ADS].[Feature_2] END AS impter_4, CASE WHEN ([ADS].[Feature_3] IS NULL) THEN 0.7709819558904074 ELSE [ADS].[Feature_3] END AS impter_5, CASE WHEN ([ADS].[Feature_4] IS NULL) THEN -0.43300733624893334 ELSE [ADS].[Feature_4] END AS impter_6, CASE WHEN ([ADS].[Feature_5] IS NULL) THEN -0.0424956965794036 ELSE [ADS].[Feature_5] END AS impter_7, CASE WHEN ([ADS].[Feature_6] IS NULL) THEN -0.29809080119845455 ELSE [ADS].[Feature_6] END AS impter_8, CASE WHEN ([ADS].[Feature_7] IS NULL) THEN 0.14672241507251663 ELSE [ADS].[Feature_7] END AS impter_9, CASE WHEN ([ADS].[Feature_8] IS NULL) THEN 0.01746942384662034 ELSE [ADS].[Feature_8] END AS impter_10, CASE WHEN ([ADS].[Feature_9] IS NULL) THEN 0.11507331415602866 ELSE [ADS].[Feature_9] END AS impter_11 
FROM [FourClass_10] AS [ADS]) AS [ADS_imp_1_OUT]

-- Code For temporary table ##TMP_20180416232943_130CRO_ADS_sca_2_OUT part 1/2. Create 


CREATE TABLE ##TMP_20180416232943_130CRO_ADS_sca_2_OUT (
	[KEY] BIGINT NULL, 
	scaler_2 FLOAT NULL, 
	scaler_3 FLOAT NULL, 
	scaler_4 FLOAT NULL, 
	scaler_5 FLOAT NULL, 
	scaler_6 FLOAT NULL, 
	scaler_7 FLOAT NULL, 
	scaler_8 FLOAT NULL, 
	scaler_9 FLOAT NULL, 
	scaler_10 FLOAT NULL, 
	scaler_11 FLOAT NULL
)



-- Code For temporary table ##TMP_20180416232943_130CRO_ADS_sca_2_OUT part 2/2. Populate

INSERT INTO ##TMP_20180416232943_130CRO_ADS_sca_2_OUT ([KEY], scaler_2, scaler_3, scaler_4, scaler_5, scaler_6, scaler_7, scaler_8, scaler_9, scaler_10, scaler_11) SELECT [ADS_sca_2_OUT].[KEY], [ADS_sca_2_OUT].scaler_2, [ADS_sca_2_OUT].scaler_3, [ADS_sca_2_OUT].scaler_4, [ADS_sca_2_OUT].scaler_5, [ADS_sca_2_OUT].scaler_6, [ADS_sca_2_OUT].scaler_7, [ADS_sca_2_OUT].scaler_8, [ADS_sca_2_OUT].scaler_9, [ADS_sca_2_OUT].scaler_10, [ADS_sca_2_OUT].scaler_11 
FROM (SELECT [ADS_imp_1_OUT].[KEY] AS [KEY], (CAST([ADS_imp_1_OUT].impter_2 AS FLOAT(53)) - -0.003903374463034205) / 0.9795060640183997 AS scaler_2, (CAST([ADS_imp_1_OUT].impter_3 AS FLOAT(53)) - 0.6152232215702322) / 1.3900807236205235 AS scaler_3, (CAST([ADS_imp_1_OUT].impter_4 AS FLOAT(53)) - 0.042796236914291665) / 1.4962685135870766 AS scaler_4, (CAST([ADS_imp_1_OUT].impter_5 AS FLOAT(53)) - 0.7709819558904074) / 2.3333561060111743 AS scaler_5, (CAST([ADS_imp_1_OUT].impter_6 AS FLOAT(53)) - -0.43300733624893334) / 1.4029757772648748 AS scaler_6, (CAST([ADS_imp_1_OUT].impter_7 AS FLOAT(53)) - -0.0424956965794036) / 0.9558091076873229 AS scaler_7, (CAST([ADS_imp_1_OUT].impter_8 AS FLOAT(53)) - -0.29809080119845455) / 1.017013180721433 AS scaler_8, (CAST([ADS_imp_1_OUT].impter_9 AS FLOAT(53)) - 0.14672241507251663) / 1.600798539929603 AS scaler_9, (CAST([ADS_imp_1_OUT].impter_10 AS FLOAT(53)) - 0.01746942384662034) / 1.1487296361671415 AS scaler_10, (CAST([ADS_imp_1_OUT].impter_11 AS FLOAT(53)) - 0.11507331415602866) / 0.9690911857336224 AS scaler_11 
FROM ##TMP_20180416232943_U839X7_ADS_imp_1_OUT AS [ADS_imp_1_OUT]) AS [ADS_sca_2_OUT]

-- Code For temporary table ##TMP_20180416232944_702B77_BAG_B0 part 1/2. Create 


CREATE TABLE ##TMP_20180416232944_702B77_BAG_B0 (
	[KEY] BIGINT NULL, 
	[Score_0] FLOAT(53) NULL, 
	[Proba_0] FLOAT(53) NULL, 
	[LogProba_0] FLOAT(53) NULL, 
	[Score_1] FLOAT(53) NULL, 
	[Proba_1] FLOAT(53) NULL, 
	[LogProba_1] FLOAT(53) NULL, 
	[Score_2] FLOAT(53) NULL, 
	[Proba_2] FLOAT(53) NULL, 
	[LogProba_2] FLOAT(53) NULL, 
	[Score_3] FLOAT(53) NULL, 
	[Proba_3] FLOAT(53) NULL, 
	[LogProba_3] FLOAT(53) NULL
)



-- Code For temporary table ##TMP_20180416232944_702B77_BAG_B0 part 2/2. Populate

WITH [DT_node_lookup] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_6 <= -0.20496699213981628) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_3 <= -0.7135223150253296) THEN 2 ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_9 <= -0.10785947740077972) THEN 4 ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_9 <= 0.7079376578330994) THEN 6 ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_6 <= -1.2704921960830688) THEN 8 ELSE 9 END END END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_5 <= -0.06224329397082329) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_8 <= 1.4334330558776855) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_4 <= -1.7257757186889648) THEN 13 ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_4 <= 0.41027945280075073) THEN 15 ELSE 16 END END ELSE 17 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_8 <= -0.8759022951126099) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_9 <= 0.5932292938232422) THEN 20 ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_10 <= -0.11427998542785645) THEN 22 ELSE 23 END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_2 <= 0.44471752643585205) THEN 25 ELSE 26 END END END END AS node_id_2 
FROM ##TMP_20180416232943_130CRO_ADS_sca_2_OUT AS [ADS_sca_2_OUT]), 
[DT_node_data] AS 
(SELECT [Values].node_id AS node_id, CAST([Values].feature AS FLOAT(53)) AS feature, CAST([Values].threshold AS FLOAT(53)) AS threshold, CAST([Values].count AS FLOAT(53)) AS count, CAST([Values].depth AS FLOAT(53)) AS depth, CAST([Values].parent_id AS FLOAT(53)) AS parent_id, CAST([Values].[Proba_0] AS FLOAT(53)) AS [Proba_0], CAST([Values].[LogProba_0] AS FLOAT(53)) AS [LogProba_0], CAST([Values].[Proba_1] AS FLOAT(53)) AS [Proba_1], CAST([Values].[LogProba_1] AS FLOAT(53)) AS [LogProba_1], CAST([Values].[Proba_2] AS FLOAT(53)) AS [Proba_2], CAST([Values].[LogProba_2] AS FLOAT(53)) AS [LogProba_2], CAST([Values].[Proba_3] AS FLOAT(53)) AS [Proba_3], CAST([Values].[LogProba_3] AS FLOAT(53)) AS [LogProba_3], CAST([Values].[Decision] AS FLOAT(53)) AS [Decision], CAST([Values].[DecisionProba] AS FLOAT(53)) AS [DecisionProba] 
FROM (SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 7 AS count, 2 AS depth, 1 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 1.0 AS [Proba_2], 0.0 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 2 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 6 AS count, 3 AS depth, 3 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 1.0 AS [Proba_3], 0.0 AS [LogProba_3], 3 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 3 AS count, 4 AS depth, 5 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 1.0 AS [Proba_1], 0.0 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 1 AS count, 5 AS depth, 7 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 1.0 AS [Proba_1], 0.0 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 2 AS count, 5 AS depth, 7 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 1.0 AS [Proba_2], 0.0 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 2 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 1 AS count, 4 AS depth, 12 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 1.0 AS [Proba_2], 0.0 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 2 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 14 AS count, 5 AS depth, 14 AS parent_id, 0.9583333333333334 AS [Proba_0], -0.04255961441879589 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.041666666666666664 AS [Proba_3], -3.1780538303479458 AS [LogProba_3], 0 AS [Decision], 0.9583333333333334 AS [DecisionProba] UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 1 AS count, 5 AS depth, 14 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 1.0 AS [Proba_3], 0.0 AS [LogProba_3], 3 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 3 AS count, 3 AS depth, 11 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 1.0 AS [Proba_2], 0.0 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 2 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 3 AS count, 4 AS depth, 19 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 1.0 AS [Proba_3], 0.0 AS [LogProba_3], 3 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 2 AS count, 5 AS depth, 21 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 1.0 AS [Proba_1], 0.0 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 1 AS count, 5 AS depth, 21 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 1.0 AS [Proba_2], 0.0 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 2 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 5 AS count, 4 AS depth, 24 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 1.0 AS [Proba_1], 0.0 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 1 AS count, 4 AS depth, 24 AS parent_id, 1.0 AS [Proba_0], 0.0 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0 AS [Decision], 1.0 AS [DecisionProba]) AS [Values]), 
[DT_Output] AS 
(SELECT [DT_node_lookup].[KEY] AS [KEY], [DT_node_lookup].node_id_2 AS node_id_2, [DT_node_data].node_id AS node_id, [DT_node_data].feature AS feature, [DT_node_data].threshold AS threshold, [DT_node_data].count AS count, [DT_node_data].depth AS depth, [DT_node_data].parent_id AS parent_id, [DT_node_data].[Proba_0] AS [Proba_0], [DT_node_data].[LogProba_0] AS [LogProba_0], [DT_node_data].[Proba_1] AS [Proba_1], [DT_node_data].[LogProba_1] AS [LogProba_1], [DT_node_data].[Proba_2] AS [Proba_2], [DT_node_data].[LogProba_2] AS [LogProba_2], [DT_node_data].[Proba_3] AS [Proba_3], [DT_node_data].[LogProba_3] AS [LogProba_3], [DT_node_data].[Decision] AS [Decision], [DT_node_data].[DecisionProba] AS [DecisionProba] 
FROM [DT_node_lookup] LEFT OUTER JOIN [DT_node_data] ON [DT_node_lookup].node_id_2 = [DT_node_data].node_id), 
[BAG_Model_0] AS 
(SELECT [DT_Output].[KEY] AS [KEY], CAST(NULL AS FLOAT(53)) AS [Score_0], [DT_Output].[Proba_0] AS [Proba_0], [DT_Output].[LogProba_0] AS [LogProba_0], CAST(NULL AS FLOAT(53)) AS [Score_1], [DT_Output].[Proba_1] AS [Proba_1], [DT_Output].[LogProba_1] AS [LogProba_1], CAST(NULL AS FLOAT(53)) AS [Score_2], [DT_Output].[Proba_2] AS [Proba_2], [DT_Output].[LogProba_2] AS [LogProba_2], CAST(NULL AS FLOAT(53)) AS [Score_3], [DT_Output].[Proba_3] AS [Proba_3], [DT_Output].[LogProba_3] AS [LogProba_3] 
FROM [DT_Output]), 
[DT_node_lookup_1] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_5 <= -0.07589028030633926) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_6 <= 0.055714450776576996) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_3 <= -0.18067404627799988) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_7 <= 0.12190598249435425) THEN 4 ELSE 5 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_11 <= -0.15214082598686218) THEN 7 ELSE 8 END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_5 <= -1.2971596717834473) THEN 10 ELSE 11 END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_10 <= 0.8861697912216187) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_2 <= -1.5039697885513306) THEN 14 ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_3 <= -0.5353317856788635) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_2 <= -0.34406259655952454) THEN 17 ELSE 18 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_6 <= -0.9074655771255493) THEN 20 ELSE 21 END END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_7 <= 0.8208808302879333) THEN 23 ELSE 24 END END END AS node_id_2 
FROM ##TMP_20180416232943_130CRO_ADS_sca_2_OUT AS [ADS_sca_2_OUT]), 
[DT_node_data_1] AS 
(SELECT [Values].node_id AS node_id, CAST([Values].feature AS FLOAT(53)) AS feature, CAST([Values].threshold AS FLOAT(53)) AS threshold, CAST([Values].count AS FLOAT(53)) AS count, CAST([Values].depth AS FLOAT(53)) AS depth, CAST([Values].parent_id AS FLOAT(53)) AS parent_id, CAST([Values].[Proba_0] AS FLOAT(53)) AS [Proba_0], CAST([Values].[LogProba_0] AS FLOAT(53)) AS [LogProba_0], CAST([Values].[Proba_1] AS FLOAT(53)) AS [Proba_1], CAST([Values].[LogProba_1] AS FLOAT(53)) AS [LogProba_1], CAST([Values].[Proba_2] AS FLOAT(53)) AS [Proba_2], CAST([Values].[LogProba_2] AS FLOAT(53)) AS [LogProba_2], CAST([Values].[Proba_3] AS FLOAT(53)) AS [Proba_3], CAST([Values].[LogProba_3] AS FLOAT(53)) AS [LogProba_3], CAST([Values].[Decision] AS FLOAT(53)) AS [Decision], CAST([Values].[DecisionProba] AS FLOAT(53)) AS [DecisionProba] 
FROM (SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 1 AS count, 4 AS depth, 3 AS parent_id, 1.0 AS [Proba_0], 0.0 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 7 AS count, 4 AS depth, 3 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 1.0 AS [Proba_2], 0.0 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 2 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 1 AS count, 4 AS depth, 6 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 1.0 AS [Proba_2], 0.0 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 2 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 4 AS count, 4 AS depth, 6 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 1.0 AS [Proba_3], 0.0 AS [LogProba_3], 3 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 1 AS count, 3 AS depth, 9 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 1.0 AS [Proba_2], 0.0 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 2 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 9 AS count, 3 AS depth, 9 AS parent_id, 1.0 AS [Proba_0], 0.0 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 1 AS count, 3 AS depth, 13 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 1.0 AS [Proba_3], 0.0 AS [LogProba_3], 3 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 2 AS count, 5 AS depth, 16 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 1.0 AS [Proba_1], 0.0 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 2 AS count, 5 AS depth, 16 AS parent_id, 1.0 AS [Proba_0], 0.0 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 3 AS count, 5 AS depth, 19 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.3333333333333333 AS [Proba_1], -1.0986122886681098 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.6666666666666666 AS [Proba_3], -0.40546510810816444 AS [LogProba_3], 3 AS [Decision], 0.6666666666666666 AS [DecisionProba] UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 14 AS count, 5 AS depth, 19 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.96 AS [Proba_1], -0.040821994520255166 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.04 AS [Proba_3], -3.2188758248682006 AS [LogProba_3], 1 AS [Decision], 0.96 AS [DecisionProba] UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 2 AS count, 3 AS depth, 22 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 1.0 AS [Proba_3], 0.0 AS [LogProba_3], 3 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 2 AS count, 3 AS depth, 22 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 1.0 AS [Proba_2], 0.0 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 2 AS [Decision], 1.0 AS [DecisionProba]) AS [Values]), 
[DT_Output_1] AS 
(SELECT [DT_node_lookup_1].[KEY] AS [KEY], [DT_node_lookup_1].node_id_2 AS node_id_2, [DT_node_data_1].node_id AS node_id, [DT_node_data_1].feature AS feature, [DT_node_data_1].threshold AS threshold, [DT_node_data_1].count AS count, [DT_node_data_1].depth AS depth, [DT_node_data_1].parent_id AS parent_id, [DT_node_data_1].[Proba_0] AS [Proba_0], [DT_node_data_1].[LogProba_0] AS [LogProba_0], [DT_node_data_1].[Proba_1] AS [Proba_1], [DT_node_data_1].[LogProba_1] AS [LogProba_1], [DT_node_data_1].[Proba_2] AS [Proba_2], [DT_node_data_1].[LogProba_2] AS [LogProba_2], [DT_node_data_1].[Proba_3] AS [Proba_3], [DT_node_data_1].[LogProba_3] AS [LogProba_3], [DT_node_data_1].[Decision] AS [Decision], [DT_node_data_1].[DecisionProba] AS [DecisionProba] 
FROM [DT_node_lookup_1] LEFT OUTER JOIN [DT_node_data_1] ON [DT_node_lookup_1].node_id_2 = [DT_node_data_1].node_id), 
[BAG_Model_1] AS 
(SELECT [DT_Output_1].[KEY] AS [KEY], CAST(NULL AS FLOAT(53)) AS [Score_0], [DT_Output_1].[Proba_0] AS [Proba_0], [DT_Output_1].[LogProba_0] AS [LogProba_0], CAST(NULL AS FLOAT(53)) AS [Score_1], [DT_Output_1].[Proba_1] AS [Proba_1], [DT_Output_1].[LogProba_1] AS [LogProba_1], CAST(NULL AS FLOAT(53)) AS [Score_2], [DT_Output_1].[Proba_2] AS [Proba_2], [DT_Output_1].[LogProba_2] AS [LogProba_2], CAST(NULL AS FLOAT(53)) AS [Score_3], [DT_Output_1].[Proba_3] AS [Proba_3], [DT_Output_1].[LogProba_3] AS [LogProba_3] 
FROM [DT_Output_1]), 
[DT_node_lookup_2] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_3 <= -0.2613316476345062) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_9 <= 0.2546616494655609) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_7 <= 0.12190598249435425) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_6 <= 0.6188681125640869) THEN 4 ELSE 5 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_4 <= 1.2549768686294556) THEN 7 ELSE 8 END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_3 <= -0.8593521118164062) THEN 10 ELSE 11 END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_9 <= 0.18635690212249756) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_6 <= 1.0030708312988281) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_4 <= -1.2985427379608154) THEN 15 ELSE 16 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_7 <= -0.08975870162248611) THEN 18 ELSE 19 END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_10 <= -0.9956725239753723) THEN 21 ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_6 <= 0.6862696409225464) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_9 <= 0.289800763130188) THEN 24 ELSE 25 END ELSE 26 END END END END AS node_id_2 
FROM ##TMP_20180416232943_130CRO_ADS_sca_2_OUT AS [ADS_sca_2_OUT]), 
[DT_node_data_2] AS 
(SELECT [Values].node_id AS node_id, CAST([Values].feature AS FLOAT(53)) AS feature, CAST([Values].threshold AS FLOAT(53)) AS threshold, CAST([Values].count AS FLOAT(53)) AS count, CAST([Values].depth AS FLOAT(53)) AS depth, CAST([Values].parent_id AS FLOAT(53)) AS parent_id, CAST([Values].[Proba_0] AS FLOAT(53)) AS [Proba_0], CAST([Values].[LogProba_0] AS FLOAT(53)) AS [LogProba_0], CAST([Values].[Proba_1] AS FLOAT(53)) AS [Proba_1], CAST([Values].[LogProba_1] AS FLOAT(53)) AS [LogProba_1], CAST([Values].[Proba_2] AS FLOAT(53)) AS [Proba_2], CAST([Values].[LogProba_2] AS FLOAT(53)) AS [LogProba_2], CAST([Values].[Proba_3] AS FLOAT(53)) AS [Proba_3], CAST([Values].[LogProba_3] AS FLOAT(53)) AS [LogProba_3], CAST([Values].[Decision] AS FLOAT(53)) AS [Decision], CAST([Values].[DecisionProba] AS FLOAT(53)) AS [DecisionProba] 
FROM (SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 2 AS count, 4 AS depth, 3 AS parent_id, 1.0 AS [Proba_0], 0.0 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 1 AS count, 4 AS depth, 3 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 1.0 AS [Proba_2], 0.0 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 2 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 8 AS count, 4 AS depth, 6 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 1.0 AS [Proba_2], 0.0 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 2 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 1 AS count, 4 AS depth, 6 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 1.0 AS [Proba_1], 0.0 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 4 AS count, 3 AS depth, 9 AS parent_id, 1.0 AS [Proba_0], 0.0 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 1 AS count, 3 AS depth, 9 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 1.0 AS [Proba_1], 0.0 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 1 AS count, 4 AS depth, 14 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 1.0 AS [Proba_2], 0.0 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 2 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 13 AS count, 4 AS depth, 14 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 1.0 AS [Proba_3], 0.0 AS [LogProba_3], 3 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 1 AS count, 4 AS depth, 17 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 1.0 AS [Proba_1], 0.0 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 1 AS count, 4 AS depth, 17 AS parent_id, 1.0 AS [Proba_0], 0.0 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 4 AS count, 3 AS depth, 20 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 1.0 AS [Proba_1], 0.0 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 1 AS count, 5 AS depth, 23 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 1.0 AS [Proba_1], 0.0 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 6 AS count, 5 AS depth, 23 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 1.0 AS [Proba_2], 0.0 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 2 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 2 AS count, 4 AS depth, 22 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 1.0 AS [Proba_1], 0.0 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 1 AS [Decision], 1.0 AS [DecisionProba]) AS [Values]), 
[DT_Output_2] AS 
(SELECT [DT_node_lookup_2].[KEY] AS [KEY], [DT_node_lookup_2].node_id_2 AS node_id_2, [DT_node_data_2].node_id AS node_id, [DT_node_data_2].feature AS feature, [DT_node_data_2].threshold AS threshold, [DT_node_data_2].count AS count, [DT_node_data_2].depth AS depth, [DT_node_data_2].parent_id AS parent_id, [DT_node_data_2].[Proba_0] AS [Proba_0], [DT_node_data_2].[LogProba_0] AS [LogProba_0], [DT_node_data_2].[Proba_1] AS [Proba_1], [DT_node_data_2].[LogProba_1] AS [LogProba_1], [DT_node_data_2].[Proba_2] AS [Proba_2], [DT_node_data_2].[LogProba_2] AS [LogProba_2], [DT_node_data_2].[Proba_3] AS [Proba_3], [DT_node_data_2].[LogProba_3] AS [LogProba_3], [DT_node_data_2].[Decision] AS [Decision], [DT_node_data_2].[DecisionProba] AS [DecisionProba] 
FROM [DT_node_lookup_2] LEFT OUTER JOIN [DT_node_data_2] ON [DT_node_lookup_2].node_id_2 = [DT_node_data_2].node_id), 
[BAG_Model_2] AS 
(SELECT [DT_Output_2].[KEY] AS [KEY], CAST(NULL AS FLOAT(53)) AS [Score_0], [DT_Output_2].[Proba_0] AS [Proba_0], [DT_Output_2].[LogProba_0] AS [LogProba_0], CAST(NULL AS FLOAT(53)) AS [Score_1], [DT_Output_2].[Proba_1] AS [Proba_1], [DT_Output_2].[LogProba_1] AS [LogProba_1], CAST(NULL AS FLOAT(53)) AS [Score_2], [DT_Output_2].[Proba_2] AS [Proba_2], [DT_Output_2].[LogProba_2] AS [LogProba_2], CAST(NULL AS FLOAT(53)) AS [Score_3], [DT_Output_2].[Proba_3] AS [Proba_3], [DT_Output_2].[LogProba_3] AS [LogProba_3] 
FROM [DT_Output_2]), 
[DT_node_lookup_3] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_5 <= -0.04181967303156853) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_6 <= 0.037758152931928635) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_3 <= -0.7135223150253296) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_5 <= -0.6424866914749146) THEN 4 ELSE 5 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_4 <= -1.2985427379608154) THEN 7 ELSE 8 END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_8 <= 1.5459498167037964) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_7 <= 1.0352771282196045) THEN 11 ELSE 12 END ELSE 13 END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_11 <= -2.4598770141601562) THEN 15 ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_3 <= -0.5353317856788635) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_8 <= -0.4873635172843933) THEN 18 ELSE 19 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_9 <= -0.2956913411617279) THEN 21 ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_3 <= 1.5061954259872437) THEN 23 ELSE 24 END END END END END AS node_id_2 
FROM ##TMP_20180416232943_130CRO_ADS_sca_2_OUT AS [ADS_sca_2_OUT]), 
[DT_node_data_3] AS 
(SELECT [Values].node_id AS node_id, CAST([Values].feature AS FLOAT(53)) AS feature, CAST([Values].threshold AS FLOAT(53)) AS threshold, CAST([Values].count AS FLOAT(53)) AS count, CAST([Values].depth AS FLOAT(53)) AS depth, CAST([Values].parent_id AS FLOAT(53)) AS parent_id, CAST([Values].[Proba_0] AS FLOAT(53)) AS [Proba_0], CAST([Values].[LogProba_0] AS FLOAT(53)) AS [LogProba_0], CAST([Values].[Proba_1] AS FLOAT(53)) AS [Proba_1], CAST([Values].[LogProba_1] AS FLOAT(53)) AS [LogProba_1], CAST([Values].[Proba_2] AS FLOAT(53)) AS [Proba_2], CAST([Values].[LogProba_2] AS FLOAT(53)) AS [LogProba_2], CAST([Values].[Proba_3] AS FLOAT(53)) AS [Proba_3], CAST([Values].[LogProba_3] AS FLOAT(53)) AS [LogProba_3], CAST([Values].[Decision] AS FLOAT(53)) AS [Decision], CAST([Values].[DecisionProba] AS FLOAT(53)) AS [DecisionProba] 
FROM (SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 5 AS count, 4 AS depth, 3 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 1.0 AS [Proba_2], 0.0 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 2 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 1 AS count, 4 AS depth, 3 AS parent_id, 1.0 AS [Proba_0], 0.0 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 2 AS count, 4 AS depth, 6 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 1.0 AS [Proba_2], 0.0 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 2 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 4 AS count, 4 AS depth, 6 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 1.0 AS [Proba_3], 0.0 AS [LogProba_3], 3 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 12 AS count, 4 AS depth, 10 AS parent_id, 1.0 AS [Proba_0], 0.0 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 1 AS count, 4 AS depth, 10 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 1.0 AS [Proba_2], 0.0 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 2 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 2 AS count, 3 AS depth, 9 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 1.0 AS [Proba_2], 0.0 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 2 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 1 AS count, 2 AS depth, 14 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 1.0 AS [Proba_2], 0.0 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 2 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 1 AS count, 4 AS depth, 17 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 1.0 AS [Proba_1], 0.0 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 2 AS count, 4 AS depth, 17 AS parent_id, 1.0 AS [Proba_0], 0.0 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 2 AS count, 4 AS depth, 20 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 1.0 AS [Proba_3], 0.0 AS [LogProba_3], 3 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 13 AS count, 5 AS depth, 22 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.9583333333333334 AS [Proba_1], -0.04255961441879589 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.041666666666666664 AS [Proba_3], -3.1780538303479458 AS [LogProba_3], 1 AS [Decision], 0.9583333333333334 AS [DecisionProba] UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 2 AS count, 5 AS depth, 22 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 1.0 AS [Proba_3], 0.0 AS [LogProba_3], 3 AS [Decision], 1.0 AS [DecisionProba]) AS [Values]), 
[DT_Output_3] AS 
(SELECT [DT_node_lookup_3].[KEY] AS [KEY], [DT_node_lookup_3].node_id_2 AS node_id_2, [DT_node_data_3].node_id AS node_id, [DT_node_data_3].feature AS feature, [DT_node_data_3].threshold AS threshold, [DT_node_data_3].count AS count, [DT_node_data_3].depth AS depth, [DT_node_data_3].parent_id AS parent_id, [DT_node_data_3].[Proba_0] AS [Proba_0], [DT_node_data_3].[LogProba_0] AS [LogProba_0], [DT_node_data_3].[Proba_1] AS [Proba_1], [DT_node_data_3].[LogProba_1] AS [LogProba_1], [DT_node_data_3].[Proba_2] AS [Proba_2], [DT_node_data_3].[LogProba_2] AS [LogProba_2], [DT_node_data_3].[Proba_3] AS [Proba_3], [DT_node_data_3].[LogProba_3] AS [LogProba_3], [DT_node_data_3].[Decision] AS [Decision], [DT_node_data_3].[DecisionProba] AS [DecisionProba] 
FROM [DT_node_lookup_3] LEFT OUTER JOIN [DT_node_data_3] ON [DT_node_lookup_3].node_id_2 = [DT_node_data_3].node_id), 
[BAG_Model_3] AS 
(SELECT [DT_Output_3].[KEY] AS [KEY], CAST(NULL AS FLOAT(53)) AS [Score_0], [DT_Output_3].[Proba_0] AS [Proba_0], [DT_Output_3].[LogProba_0] AS [LogProba_0], CAST(NULL AS FLOAT(53)) AS [Score_1], [DT_Output_3].[Proba_1] AS [Proba_1], [DT_Output_3].[LogProba_1] AS [LogProba_1], CAST(NULL AS FLOAT(53)) AS [Score_2], [DT_Output_3].[Proba_2] AS [Proba_2], [DT_Output_3].[LogProba_2] AS [LogProba_2], CAST(NULL AS FLOAT(53)) AS [Score_3], [DT_Output_3].[Proba_3] AS [Proba_3], [DT_Output_3].[LogProba_3] AS [LogProba_3] 
FROM [DT_Output_3]), 
[DT_node_lookup_4] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_4 <= 0.6909968852996826) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_10 <= -1.375739574432373) THEN 2 ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_5 <= -1.0915334224700928) THEN 4 ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_3 <= -0.5756765604019165) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_6 <= -1.0733897686004639) THEN 7 ELSE 8 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_9 <= -0.38386064767837524) THEN 10 ELSE 11 END END END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_3 <= 1.2995936870574951) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_8 <= -0.4136694669723511) THEN 14 ELSE 15 END ELSE 16 END END AS node_id_2 
FROM ##TMP_20180416232943_130CRO_ADS_sca_2_OUT AS [ADS_sca_2_OUT]), 
[DT_node_data_4] AS 
(SELECT [Values].node_id AS node_id, CAST([Values].feature AS FLOAT(53)) AS feature, CAST([Values].threshold AS FLOAT(53)) AS threshold, CAST([Values].count AS FLOAT(53)) AS count, CAST([Values].depth AS FLOAT(53)) AS depth, CAST([Values].parent_id AS FLOAT(53)) AS parent_id, CAST([Values].[Proba_0] AS FLOAT(53)) AS [Proba_0], CAST([Values].[LogProba_0] AS FLOAT(53)) AS [LogProba_0], CAST([Values].[Proba_1] AS FLOAT(53)) AS [Proba_1], CAST([Values].[LogProba_1] AS FLOAT(53)) AS [LogProba_1], CAST([Values].[Proba_2] AS FLOAT(53)) AS [Proba_2], CAST([Values].[LogProba_2] AS FLOAT(53)) AS [LogProba_2], CAST([Values].[Proba_3] AS FLOAT(53)) AS [Proba_3], CAST([Values].[LogProba_3] AS FLOAT(53)) AS [LogProba_3], CAST([Values].[Decision] AS FLOAT(53)) AS [Decision], CAST([Values].[DecisionProba] AS FLOAT(53)) AS [DecisionProba] 
FROM (SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 4 AS count, 2 AS depth, 1 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 1.0 AS [Proba_3], 0.0 AS [LogProba_3], 3 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 6 AS count, 3 AS depth, 3 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 1.0 AS [Proba_2], 0.0 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 2 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 1 AS count, 5 AS depth, 6 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 1.0 AS [Proba_2], 0.0 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 2 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 7 AS count, 5 AS depth, 6 AS parent_id, 1.0 AS [Proba_0], 0.0 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 7 AS count, 5 AS depth, 9 AS parent_id, 0.2727272727272727 AS [Proba_0], -1.2992829841302609 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.7272727272727273 AS [Proba_3], -0.3184537311185346 AS [LogProba_3], 3 AS [Decision], 0.7272727272727273 AS [DecisionProba] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 11 AS count, 5 AS depth, 9 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.3333333333333333 AS [Proba_1], -1.0986122886681098 AS [LogProba_1], 0.6111111111111112 AS [Proba_2], -0.49247648509779407 AS [LogProba_2], 0.05555555555555555 AS [Proba_3], -2.890371757896165 AS [LogProba_3], 2 AS [Decision], 0.6111111111111112 AS [DecisionProba] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 9 AS count, 3 AS depth, 13 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 1.0 AS [Proba_1], 0.0 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 1 AS count, 3 AS depth, 13 AS parent_id, 1.0 AS [Proba_0], 0.0 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 2 AS count, 2 AS depth, 12 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 1.0 AS [Proba_3], 0.0 AS [LogProba_3], 3 AS [Decision], 1.0 AS [DecisionProba]) AS [Values]), 
[DT_Output_4] AS 
(SELECT [DT_node_lookup_4].[KEY] AS [KEY], [DT_node_lookup_4].node_id_2 AS node_id_2, [DT_node_data_4].node_id AS node_id, [DT_node_data_4].feature AS feature, [DT_node_data_4].threshold AS threshold, [DT_node_data_4].count AS count, [DT_node_data_4].depth AS depth, [DT_node_data_4].parent_id AS parent_id, [DT_node_data_4].[Proba_0] AS [Proba_0], [DT_node_data_4].[LogProba_0] AS [LogProba_0], [DT_node_data_4].[Proba_1] AS [Proba_1], [DT_node_data_4].[LogProba_1] AS [LogProba_1], [DT_node_data_4].[Proba_2] AS [Proba_2], [DT_node_data_4].[LogProba_2] AS [LogProba_2], [DT_node_data_4].[Proba_3] AS [Proba_3], [DT_node_data_4].[LogProba_3] AS [LogProba_3], [DT_node_data_4].[Decision] AS [Decision], [DT_node_data_4].[DecisionProba] AS [DecisionProba] 
FROM [DT_node_lookup_4] LEFT OUTER JOIN [DT_node_data_4] ON [DT_node_lookup_4].node_id_2 = [DT_node_data_4].node_id), 
[BAG_Model_4] AS 
(SELECT [DT_Output_4].[KEY] AS [KEY], CAST(NULL AS FLOAT(53)) AS [Score_0], [DT_Output_4].[Proba_0] AS [Proba_0], [DT_Output_4].[LogProba_0] AS [LogProba_0], CAST(NULL AS FLOAT(53)) AS [Score_1], [DT_Output_4].[Proba_1] AS [Proba_1], [DT_Output_4].[LogProba_1] AS [LogProba_1], CAST(NULL AS FLOAT(53)) AS [Score_2], [DT_Output_4].[Proba_2] AS [Proba_2], [DT_Output_4].[LogProba_2] AS [LogProba_2], CAST(NULL AS FLOAT(53)) AS [Score_3], [DT_Output_4].[Proba_3] AS [Proba_3], [DT_Output_4].[LogProba_3] AS [LogProba_3] 
FROM [DT_Output_4]), 
[DT_node_lookup_5] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_9 <= 0.13469922542572021) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_5 <= -0.6293138265609741) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_7 <= 0.12190598249435425) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_11 <= 0.011103138327598572) THEN 4 ELSE 5 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_3 <= -0.7135223150253296) THEN 7 ELSE 8 END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_3 <= -0.8707321286201477) THEN 10 ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_6 <= 0.23468829691410065) THEN 12 ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_5 <= 1.0432679653167725) THEN 14 ELSE 15 END END END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_3 <= -0.31972384452819824) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_8 <= -0.5153167843818665) THEN 18 ELSE 19 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_4 <= 0.14891165494918823) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_9 <= 0.289800763130188) THEN 22 ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_6 <= 0.6862696409225464) THEN 24 ELSE 25 END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_3 <= 1.0567511320114136) THEN 27 ELSE 28 END END END END AS node_id_2 
FROM ##TMP_20180416232943_130CRO_ADS_sca_2_OUT AS [ADS_sca_2_OUT]), 
[DT_node_data_5] AS 
(SELECT [Values].node_id AS node_id, CAST([Values].feature AS FLOAT(53)) AS feature, CAST([Values].threshold AS FLOAT(53)) AS threshold, CAST([Values].count AS FLOAT(53)) AS count, CAST([Values].depth AS FLOAT(53)) AS depth, CAST([Values].parent_id AS FLOAT(53)) AS parent_id, CAST([Values].[Proba_0] AS FLOAT(53)) AS [Proba_0], CAST([Values].[LogProba_0] AS FLOAT(53)) AS [LogProba_0], CAST([Values].[Proba_1] AS FLOAT(53)) AS [Proba_1], CAST([Values].[LogProba_1] AS FLOAT(53)) AS [LogProba_1], CAST([Values].[Proba_2] AS FLOAT(53)) AS [Proba_2], CAST([Values].[LogProba_2] AS FLOAT(53)) AS [LogProba_2], CAST([Values].[Proba_3] AS FLOAT(53)) AS [Proba_3], CAST([Values].[LogProba_3] AS FLOAT(53)) AS [LogProba_3], CAST([Values].[Decision] AS FLOAT(53)) AS [Decision], CAST([Values].[DecisionProba] AS FLOAT(53)) AS [DecisionProba] 
FROM (SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 1 AS count, 4 AS depth, 3 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 1.0 AS [Proba_2], 0.0 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 2 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 3 AS count, 4 AS depth, 3 AS parent_id, 1.0 AS [Proba_0], 0.0 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 5 AS count, 4 AS depth, 6 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 1.0 AS [Proba_2], 0.0 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 2 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 2 AS count, 4 AS depth, 6 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 1.0 AS [Proba_3], 0.0 AS [LogProba_3], 3 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 1 AS count, 3 AS depth, 9 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 1.0 AS [Proba_1], 0.0 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 13 AS count, 4 AS depth, 11 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 1.0 AS [Proba_3], 0.0 AS [LogProba_3], 3 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 1 AS count, 5 AS depth, 13 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 1.0 AS [Proba_1], 0.0 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 1 AS count, 5 AS depth, 13 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 1.0 AS [Proba_3], 0.0 AS [LogProba_3], 3 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 1 AS count, 3 AS depth, 17 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 1.0 AS [Proba_1], 0.0 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 9 AS count, 3 AS depth, 17 AS parent_id, 1.0 AS [Proba_0], 0.0 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 2 AS count, 4 AS depth, 21 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 1.0 AS [Proba_1], 0.0 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 6 AS count, 5 AS depth, 23 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 1.0 AS [Proba_2], 0.0 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 2 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 2 AS count, 5 AS depth, 23 AS parent_id, 0.5 AS [Proba_0], -0.6931471805599453 AS [LogProba_0], 0.5 AS [Proba_1], -0.6931471805599453 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0 AS [Decision], 0.5 AS [DecisionProba] UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 6 AS count, 4 AS depth, 26 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 1.0 AS [Proba_1], 0.0 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 28 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 1 AS count, 4 AS depth, 26 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 1.0 AS [Proba_2], 0.0 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 2 AS [Decision], 1.0 AS [DecisionProba]) AS [Values]), 
[DT_Output_5] AS 
(SELECT [DT_node_lookup_5].[KEY] AS [KEY], [DT_node_lookup_5].node_id_2 AS node_id_2, [DT_node_data_5].node_id AS node_id, [DT_node_data_5].feature AS feature, [DT_node_data_5].threshold AS threshold, [DT_node_data_5].count AS count, [DT_node_data_5].depth AS depth, [DT_node_data_5].parent_id AS parent_id, [DT_node_data_5].[Proba_0] AS [Proba_0], [DT_node_data_5].[LogProba_0] AS [LogProba_0], [DT_node_data_5].[Proba_1] AS [Proba_1], [DT_node_data_5].[LogProba_1] AS [LogProba_1], [DT_node_data_5].[Proba_2] AS [Proba_2], [DT_node_data_5].[LogProba_2] AS [LogProba_2], [DT_node_data_5].[Proba_3] AS [Proba_3], [DT_node_data_5].[LogProba_3] AS [LogProba_3], [DT_node_data_5].[Decision] AS [Decision], [DT_node_data_5].[DecisionProba] AS [DecisionProba] 
FROM [DT_node_lookup_5] LEFT OUTER JOIN [DT_node_data_5] ON [DT_node_lookup_5].node_id_2 = [DT_node_data_5].node_id), 
[BAG_Model_5] AS 
(SELECT [DT_Output_5].[KEY] AS [KEY], CAST(NULL AS FLOAT(53)) AS [Score_0], [DT_Output_5].[Proba_0] AS [Proba_0], [DT_Output_5].[LogProba_0] AS [LogProba_0], CAST(NULL AS FLOAT(53)) AS [Score_1], [DT_Output_5].[Proba_1] AS [Proba_1], [DT_Output_5].[LogProba_1] AS [LogProba_1], CAST(NULL AS FLOAT(53)) AS [Score_2], [DT_Output_5].[Proba_2] AS [Proba_2], [DT_Output_5].[LogProba_2] AS [LogProba_2], CAST(NULL AS FLOAT(53)) AS [Score_3], [DT_Output_5].[Proba_3] AS [Proba_3], [DT_Output_5].[LogProba_3] AS [LogProba_3] 
FROM [DT_Output_5]), 
[DT_node_lookup_6] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_5 <= -0.024253899231553078) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_10 <= -0.06688699126243591) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_9 <= 0.012722700834274292) THEN 3 ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_3 <= -0.5041590929031372) THEN 5 ELSE 6 END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_5 <= -0.8025107383728027) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_3 <= 0.26682788133621216) THEN 9 ELSE 10 END ELSE 11 END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_9 <= 0.16974785923957825) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_4 <= 0.0903819128870964) THEN 14 ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_11 <= 1.0717089176177979) THEN 16 ELSE 17 END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_11 <= -1.7593052387237549) THEN 19 ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_4 <= 0.12697471678256989) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_5 <= 0.4062139391899109) THEN 22 ELSE 23 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_9 <= 0.2709335684776306) THEN 25 ELSE 26 END END END END END AS node_id_2 
FROM ##TMP_20180416232943_130CRO_ADS_sca_2_OUT AS [ADS_sca_2_OUT]), 
[DT_node_data_6] AS 
(SELECT [Values].node_id AS node_id, CAST([Values].feature AS FLOAT(53)) AS feature, CAST([Values].threshold AS FLOAT(53)) AS threshold, CAST([Values].count AS FLOAT(53)) AS count, CAST([Values].depth AS FLOAT(53)) AS depth, CAST([Values].parent_id AS FLOAT(53)) AS parent_id, CAST([Values].[Proba_0] AS FLOAT(53)) AS [Proba_0], CAST([Values].[LogProba_0] AS FLOAT(53)) AS [LogProba_0], CAST([Values].[Proba_1] AS FLOAT(53)) AS [Proba_1], CAST([Values].[LogProba_1] AS FLOAT(53)) AS [LogProba_1], CAST([Values].[Proba_2] AS FLOAT(53)) AS [Proba_2], CAST([Values].[LogProba_2] AS FLOAT(53)) AS [LogProba_2], CAST([Values].[Proba_3] AS FLOAT(53)) AS [Proba_3], CAST([Values].[LogProba_3] AS FLOAT(53)) AS [LogProba_3], CAST([Values].[Decision] AS FLOAT(53)) AS [Decision], CAST([Values].[DecisionProba] AS FLOAT(53)) AS [DecisionProba] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 6 AS count, 3 AS depth, 2 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 1.0 AS [Proba_3], 0.0 AS [LogProba_3], 3 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 2 AS count, 4 AS depth, 4 AS parent_id, 1.0 AS [Proba_0], 0.0 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 1 AS count, 4 AS depth, 4 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 1.0 AS [Proba_2], 0.0 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 2 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 7 AS count, 4 AS depth, 8 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 1.0 AS [Proba_2], 0.0 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 2 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 1 AS count, 4 AS depth, 8 AS parent_id, 1.0 AS [Proba_0], 0.0 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 6 AS count, 3 AS depth, 7 AS parent_id, 1.0 AS [Proba_0], 0.0 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 2 AS count, 3 AS depth, 13 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 1.0 AS [Proba_1], 0.0 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 7 AS count, 4 AS depth, 15 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 1.0 AS [Proba_3], 0.0 AS [LogProba_3], 3 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 1 AS count, 4 AS depth, 15 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 1.0 AS [Proba_1], 0.0 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 1 AS count, 3 AS depth, 18 AS parent_id, 1.0 AS [Proba_0], 0.0 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 1 AS count, 5 AS depth, 21 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 1.0 AS [Proba_3], 0.0 AS [LogProba_3], 3 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 2 AS count, 5 AS depth, 21 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.5 AS [Proba_1], -0.6931471805599453 AS [LogProba_1], 0.5 AS [Proba_2], -0.6931471805599453 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 1 AS [Decision], 0.5 AS [DecisionProba] UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 2 AS count, 5 AS depth, 24 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.6666666666666666 AS [Proba_1], -0.40546510810816444 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.3333333333333333 AS [Proba_3], -1.0986122886681098 AS [LogProba_3], 1 AS [Decision], 0.6666666666666666 AS [DecisionProba] UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 10 AS count, 5 AS depth, 24 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 1.0 AS [Proba_1], 0.0 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 1 AS [Decision], 1.0 AS [DecisionProba]) AS [Values]), 
[DT_Output_6] AS 
(SELECT [DT_node_lookup_6].[KEY] AS [KEY], [DT_node_lookup_6].node_id_2 AS node_id_2, [DT_node_data_6].node_id AS node_id, [DT_node_data_6].feature AS feature, [DT_node_data_6].threshold AS threshold, [DT_node_data_6].count AS count, [DT_node_data_6].depth AS depth, [DT_node_data_6].parent_id AS parent_id, [DT_node_data_6].[Proba_0] AS [Proba_0], [DT_node_data_6].[LogProba_0] AS [LogProba_0], [DT_node_data_6].[Proba_1] AS [Proba_1], [DT_node_data_6].[LogProba_1] AS [LogProba_1], [DT_node_data_6].[Proba_2] AS [Proba_2], [DT_node_data_6].[LogProba_2] AS [LogProba_2], [DT_node_data_6].[Proba_3] AS [Proba_3], [DT_node_data_6].[LogProba_3] AS [LogProba_3], [DT_node_data_6].[Decision] AS [Decision], [DT_node_data_6].[DecisionProba] AS [DecisionProba] 
FROM [DT_node_lookup_6] LEFT OUTER JOIN [DT_node_data_6] ON [DT_node_lookup_6].node_id_2 = [DT_node_data_6].node_id), 
[BAG_Model_6] AS 
(SELECT [DT_Output_6].[KEY] AS [KEY], CAST(NULL AS FLOAT(53)) AS [Score_0], [DT_Output_6].[Proba_0] AS [Proba_0], [DT_Output_6].[LogProba_0] AS [LogProba_0], CAST(NULL AS FLOAT(53)) AS [Score_1], [DT_Output_6].[Proba_1] AS [Proba_1], [DT_Output_6].[LogProba_1] AS [LogProba_1], CAST(NULL AS FLOAT(53)) AS [Score_2], [DT_Output_6].[Proba_2] AS [Proba_2], [DT_Output_6].[LogProba_2] AS [LogProba_2], CAST(NULL AS FLOAT(53)) AS [Score_3], [DT_Output_6].[Proba_3] AS [Proba_3], [DT_Output_6].[LogProba_3] AS [LogProba_3] 
FROM [DT_Output_6]), 
[DT_node_lookup_7] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_6 <= 0.14664795994758606) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_5 <= -0.8025107383728027) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_10 <= -1.15753173828125) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_9 <= 0.03788093477487564) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_5 <= -0.6293138265609741) THEN 7 ELSE 8 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_3 <= 0.9205475449562073) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_3 <= -0.6457916498184204) THEN 11 ELSE 12 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_9 <= 1.9031763076782227) THEN 14 ELSE 15 END END END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_5 <= -0.06224329397082329) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_4 <= -1.0106614828109741) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_10 <= 0.30411645770072937) THEN 19 ELSE 20 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_7 <= -1.0761847496032715) THEN 22 ELSE 23 END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_2 <= -0.2765464782714844) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_5 <= 1.3132025003433228) THEN 26 ELSE 27 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_5 <= 0.6029440760612488) THEN 29 ELSE 30 END END END END AS node_id_2 
FROM ##TMP_20180416232943_130CRO_ADS_sca_2_OUT AS [ADS_sca_2_OUT]), 
[DT_node_data_7] AS 
(SELECT [Values].node_id AS node_id, CAST([Values].feature AS FLOAT(53)) AS feature, CAST([Values].threshold AS FLOAT(53)) AS threshold, CAST([Values].count AS FLOAT(53)) AS count, CAST([Values].depth AS FLOAT(53)) AS depth, CAST([Values].parent_id AS FLOAT(53)) AS parent_id, CAST([Values].[Proba_0] AS FLOAT(53)) AS [Proba_0], CAST([Values].[LogProba_0] AS FLOAT(53)) AS [LogProba_0], CAST([Values].[Proba_1] AS FLOAT(53)) AS [Proba_1], CAST([Values].[LogProba_1] AS FLOAT(53)) AS [LogProba_1], CAST([Values].[Proba_2] AS FLOAT(53)) AS [Proba_2], CAST([Values].[LogProba_2] AS FLOAT(53)) AS [LogProba_2], CAST([Values].[Proba_3] AS FLOAT(53)) AS [Proba_3], CAST([Values].[LogProba_3] AS FLOAT(53)) AS [LogProba_3], CAST([Values].[Decision] AS FLOAT(53)) AS [Decision], CAST([Values].[DecisionProba] AS FLOAT(53)) AS [DecisionProba] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 1.0 AS [Proba_3], 0.0 AS [LogProba_3], 3 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 9 AS count, 3 AS depth, 2 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 1.0 AS [Proba_2], 0.0 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 2 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 1 AS count, 4 AS depth, 6 AS parent_id, 1.0 AS [Proba_0], 0.0 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 14 AS count, 4 AS depth, 6 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 1.0 AS [Proba_3], 0.0 AS [LogProba_3], 3 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 1 AS count, 5 AS depth, 10 AS parent_id, 1.0 AS [Proba_0], 0.0 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 3 AS count, 5 AS depth, 10 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 1.0 AS [Proba_2], 0.0 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 2 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 2 AS count, 5 AS depth, 13 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 1.0 AS [Proba_1], 0.0 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 1 AS count, 5 AS depth, 13 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 1.0 AS [Proba_2], 0.0 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 2 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 2 AS count, 4 AS depth, 18 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 1.0 AS [Proba_2], 0.0 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 2 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 1 AS count, 4 AS depth, 18 AS parent_id, 1.0 AS [Proba_0], 0.0 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 1 AS count, 4 AS depth, 21 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 1.0 AS [Proba_2], 0.0 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 2 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 9 AS count, 4 AS depth, 21 AS parent_id, 1.0 AS [Proba_0], 0.0 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 7 AS count, 4 AS depth, 25 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 1.0 AS [Proba_1], 0.0 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 1 AS count, 4 AS depth, 25 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 1.0 AS [Proba_3], 0.0 AS [LogProba_3], 3 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 29 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 2 AS count, 4 AS depth, 28 AS parent_id, 1.0 AS [Proba_0], 0.0 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 2 AS count, 4 AS depth, 28 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 1.0 AS [Proba_1], 0.0 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 1 AS [Decision], 1.0 AS [DecisionProba]) AS [Values]), 
[DT_Output_7] AS 
(SELECT [DT_node_lookup_7].[KEY] AS [KEY], [DT_node_lookup_7].node_id_2 AS node_id_2, [DT_node_data_7].node_id AS node_id, [DT_node_data_7].feature AS feature, [DT_node_data_7].threshold AS threshold, [DT_node_data_7].count AS count, [DT_node_data_7].depth AS depth, [DT_node_data_7].parent_id AS parent_id, [DT_node_data_7].[Proba_0] AS [Proba_0], [DT_node_data_7].[LogProba_0] AS [LogProba_0], [DT_node_data_7].[Proba_1] AS [Proba_1], [DT_node_data_7].[LogProba_1] AS [LogProba_1], [DT_node_data_7].[Proba_2] AS [Proba_2], [DT_node_data_7].[LogProba_2] AS [LogProba_2], [DT_node_data_7].[Proba_3] AS [Proba_3], [DT_node_data_7].[LogProba_3] AS [LogProba_3], [DT_node_data_7].[Decision] AS [Decision], [DT_node_data_7].[DecisionProba] AS [DecisionProba] 
FROM [DT_node_lookup_7] LEFT OUTER JOIN [DT_node_data_7] ON [DT_node_lookup_7].node_id_2 = [DT_node_data_7].node_id), 
[BAG_Model_7] AS 
(SELECT [DT_Output_7].[KEY] AS [KEY], CAST(NULL AS FLOAT(53)) AS [Score_0], [DT_Output_7].[Proba_0] AS [Proba_0], [DT_Output_7].[LogProba_0] AS [LogProba_0], CAST(NULL AS FLOAT(53)) AS [Score_1], [DT_Output_7].[Proba_1] AS [Proba_1], [DT_Output_7].[LogProba_1] AS [LogProba_1], CAST(NULL AS FLOAT(53)) AS [Score_2], [DT_Output_7].[Proba_2] AS [Proba_2], [DT_Output_7].[LogProba_2] AS [LogProba_2], CAST(NULL AS FLOAT(53)) AS [Score_3], [DT_Output_7].[Proba_3] AS [Proba_3], [DT_Output_7].[LogProba_3] AS [LogProba_3] 
FROM [DT_Output_7]), 
[DT_node_lookup_8] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_5 <= 0.06916628777980804) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_5 <= -1.0899336338043213) THEN 2 ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_6 <= 0.055714450776576996) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_3 <= -0.17495721578598022) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_9 <= 0.30720651149749756) THEN 6 ELSE 7 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_9 <= 0.4066825211048126) THEN 9 ELSE 10 END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_7 <= 1.1410517692565918) THEN 12 ELSE 13 END END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_9 <= 0.2709335684776306) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_5 <= 0.5198379158973694) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_5 <= 0.27204814553260803) THEN 17 ELSE 18 END ELSE 19 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_9 <= 1.8647207021713257) THEN 21 ELSE 22 END END END AS node_id_2 
FROM ##TMP_20180416232943_130CRO_ADS_sca_2_OUT AS [ADS_sca_2_OUT]), 
[DT_node_data_8] AS 
(SELECT [Values].node_id AS node_id, CAST([Values].feature AS FLOAT(53)) AS feature, CAST([Values].threshold AS FLOAT(53)) AS threshold, CAST([Values].count AS FLOAT(53)) AS count, CAST([Values].depth AS FLOAT(53)) AS depth, CAST([Values].parent_id AS FLOAT(53)) AS parent_id, CAST([Values].[Proba_0] AS FLOAT(53)) AS [Proba_0], CAST([Values].[LogProba_0] AS FLOAT(53)) AS [LogProba_0], CAST([Values].[Proba_1] AS FLOAT(53)) AS [Proba_1], CAST([Values].[LogProba_1] AS FLOAT(53)) AS [LogProba_1], CAST([Values].[Proba_2] AS FLOAT(53)) AS [Proba_2], CAST([Values].[LogProba_2] AS FLOAT(53)) AS [LogProba_2], CAST([Values].[Proba_3] AS FLOAT(53)) AS [Proba_3], CAST([Values].[LogProba_3] AS FLOAT(53)) AS [LogProba_3], CAST([Values].[Decision] AS FLOAT(53)) AS [Decision], CAST([Values].[DecisionProba] AS FLOAT(53)) AS [DecisionProba] 
FROM (SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 9 AS count, 2 AS depth, 1 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 1.0 AS [Proba_2], 0.0 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 2 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 3 AS count, 5 AS depth, 5 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 1.0 AS [Proba_2], 0.0 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 2 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 1 AS count, 5 AS depth, 5 AS parent_id, 1.0 AS [Proba_0], 0.0 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 4 AS count, 5 AS depth, 8 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 1.0 AS [Proba_3], 0.0 AS [LogProba_3], 3 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 1 AS count, 5 AS depth, 8 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 1.0 AS [Proba_2], 0.0 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 2 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 12 AS count, 4 AS depth, 11 AS parent_id, 1.0 AS [Proba_0], 0.0 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 1 AS count, 4 AS depth, 11 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 1.0 AS [Proba_2], 0.0 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 2 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 1 AS count, 4 AS depth, 16 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 1.0 AS [Proba_3], 0.0 AS [LogProba_3], 3 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 3 AS count, 4 AS depth, 16 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 1.0 AS [Proba_1], 0.0 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 5 AS count, 3 AS depth, 15 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 1.0 AS [Proba_3], 0.0 AS [LogProba_3], 3 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 9 AS count, 3 AS depth, 20 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 1.0 AS [Proba_1], 0.0 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 2 AS count, 3 AS depth, 20 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 1.0 AS [Proba_2], 0.0 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 2 AS [Decision], 1.0 AS [DecisionProba]) AS [Values]), 
[DT_Output_8] AS 
(SELECT [DT_node_lookup_8].[KEY] AS [KEY], [DT_node_lookup_8].node_id_2 AS node_id_2, [DT_node_data_8].node_id AS node_id, [DT_node_data_8].feature AS feature, [DT_node_data_8].threshold AS threshold, [DT_node_data_8].count AS count, [DT_node_data_8].depth AS depth, [DT_node_data_8].parent_id AS parent_id, [DT_node_data_8].[Proba_0] AS [Proba_0], [DT_node_data_8].[LogProba_0] AS [LogProba_0], [DT_node_data_8].[Proba_1] AS [Proba_1], [DT_node_data_8].[LogProba_1] AS [LogProba_1], [DT_node_data_8].[Proba_2] AS [Proba_2], [DT_node_data_8].[LogProba_2] AS [LogProba_2], [DT_node_data_8].[Proba_3] AS [Proba_3], [DT_node_data_8].[LogProba_3] AS [LogProba_3], [DT_node_data_8].[Decision] AS [Decision], [DT_node_data_8].[DecisionProba] AS [DecisionProba] 
FROM [DT_node_lookup_8] LEFT OUTER JOIN [DT_node_data_8] ON [DT_node_lookup_8].node_id_2 = [DT_node_data_8].node_id), 
[BAG_Model_8] AS 
(SELECT [DT_Output_8].[KEY] AS [KEY], CAST(NULL AS FLOAT(53)) AS [Score_0], [DT_Output_8].[Proba_0] AS [Proba_0], [DT_Output_8].[LogProba_0] AS [LogProba_0], CAST(NULL AS FLOAT(53)) AS [Score_1], [DT_Output_8].[Proba_1] AS [Proba_1], [DT_Output_8].[LogProba_1] AS [LogProba_1], CAST(NULL AS FLOAT(53)) AS [Score_2], [DT_Output_8].[Proba_2] AS [Proba_2], [DT_Output_8].[LogProba_2] AS [LogProba_2], CAST(NULL AS FLOAT(53)) AS [Score_3], [DT_Output_8].[Proba_3] AS [Proba_3], [DT_Output_8].[LogProba_3] AS [LogProba_3] 
FROM [DT_Output_8]), 
[DT_node_lookup_9] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_5 <= -0.39379823207855225) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_5 <= -1.146536111831665) THEN 2 ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_6 <= -0.22245632112026215) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_10 <= -0.8591018319129944) THEN 5 ELSE 6 END ELSE 7 END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_9 <= 0.18635690212249756) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_6 <= 0.2101670354604721) THEN 10 ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_9 <= -0.047089215368032455) THEN 12 ELSE 13 END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_5 <= 0.3651570677757263) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_3 <= 0.09014090895652771) THEN 16 ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_3 <= 0.9381917715072632) THEN 18 ELSE 19 END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_10 <= 0.8899189829826355) THEN 21 ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_2 <= 1.4410680532455444) THEN 23 ELSE 24 END END END END END AS node_id_2 
FROM ##TMP_20180416232943_130CRO_ADS_sca_2_OUT AS [ADS_sca_2_OUT]), 
[DT_node_data_9] AS 
(SELECT [Values].node_id AS node_id, CAST([Values].feature AS FLOAT(53)) AS feature, CAST([Values].threshold AS FLOAT(53)) AS threshold, CAST([Values].count AS FLOAT(53)) AS count, CAST([Values].depth AS FLOAT(53)) AS depth, CAST([Values].parent_id AS FLOAT(53)) AS parent_id, CAST([Values].[Proba_0] AS FLOAT(53)) AS [Proba_0], CAST([Values].[LogProba_0] AS FLOAT(53)) AS [LogProba_0], CAST([Values].[Proba_1] AS FLOAT(53)) AS [Proba_1], CAST([Values].[LogProba_1] AS FLOAT(53)) AS [LogProba_1], CAST([Values].[Proba_2] AS FLOAT(53)) AS [Proba_2], CAST([Values].[LogProba_2] AS FLOAT(53)) AS [LogProba_2], CAST([Values].[Proba_3] AS FLOAT(53)) AS [Proba_3], CAST([Values].[LogProba_3] AS FLOAT(53)) AS [LogProba_3], CAST([Values].[Decision] AS FLOAT(53)) AS [Decision], CAST([Values].[DecisionProba] AS FLOAT(53)) AS [DecisionProba] 
FROM (SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 7 AS count, 2 AS depth, 1 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 1.0 AS [Proba_2], 0.0 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 2 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 1 AS count, 4 AS depth, 4 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 1.0 AS [Proba_3], 0.0 AS [LogProba_3], 3 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 2 AS count, 4 AS depth, 4 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 1.0 AS [Proba_2], 0.0 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 2 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 8 AS count, 3 AS depth, 3 AS parent_id, 1.0 AS [Proba_0], 0.0 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 11 AS count, 3 AS depth, 9 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 1.0 AS [Proba_3], 0.0 AS [LogProba_3], 3 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 1 AS count, 4 AS depth, 11 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 1.0 AS [Proba_1], 0.0 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 1 AS count, 4 AS depth, 11 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 1.0 AS [Proba_3], 0.0 AS [LogProba_3], 3 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 2 AS count, 4 AS depth, 15 AS parent_id, 1.0 AS [Proba_0], 0.0 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 1 AS count, 5 AS depth, 17 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 1.0 AS [Proba_2], 0.0 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 2 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 1 AS count, 5 AS depth, 17 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 1.0 AS [Proba_3], 0.0 AS [LogProba_3], 3 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 10 AS count, 4 AS depth, 20 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 1.0 AS [Proba_1], 0.0 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 2 AS count, 5 AS depth, 22 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 1.0 AS [Proba_2], 0.0 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 2 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 1 AS count, 5 AS depth, 22 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 1.0 AS [Proba_1], 0.0 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 1 AS [Decision], 1.0 AS [DecisionProba]) AS [Values]), 
[DT_Output_9] AS 
(SELECT [DT_node_lookup_9].[KEY] AS [KEY], [DT_node_lookup_9].node_id_2 AS node_id_2, [DT_node_data_9].node_id AS node_id, [DT_node_data_9].feature AS feature, [DT_node_data_9].threshold AS threshold, [DT_node_data_9].count AS count, [DT_node_data_9].depth AS depth, [DT_node_data_9].parent_id AS parent_id, [DT_node_data_9].[Proba_0] AS [Proba_0], [DT_node_data_9].[LogProba_0] AS [LogProba_0], [DT_node_data_9].[Proba_1] AS [Proba_1], [DT_node_data_9].[LogProba_1] AS [LogProba_1], [DT_node_data_9].[Proba_2] AS [Proba_2], [DT_node_data_9].[LogProba_2] AS [LogProba_2], [DT_node_data_9].[Proba_3] AS [Proba_3], [DT_node_data_9].[LogProba_3] AS [LogProba_3], [DT_node_data_9].[Decision] AS [Decision], [DT_node_data_9].[DecisionProba] AS [DecisionProba] 
FROM [DT_node_lookup_9] LEFT OUTER JOIN [DT_node_data_9] ON [DT_node_lookup_9].node_id_2 = [DT_node_data_9].node_id), 
[BAG_Model_9] AS 
(SELECT [DT_Output_9].[KEY] AS [KEY], CAST(NULL AS FLOAT(53)) AS [Score_0], [DT_Output_9].[Proba_0] AS [Proba_0], [DT_Output_9].[LogProba_0] AS [LogProba_0], CAST(NULL AS FLOAT(53)) AS [Score_1], [DT_Output_9].[Proba_1] AS [Proba_1], [DT_Output_9].[LogProba_1] AS [LogProba_1], CAST(NULL AS FLOAT(53)) AS [Score_2], [DT_Output_9].[Proba_2] AS [Proba_2], [DT_Output_9].[LogProba_2] AS [LogProba_2], CAST(NULL AS FLOAT(53)) AS [Score_3], [DT_Output_9].[Proba_3] AS [Proba_3], [DT_Output_9].[LogProba_3] AS [LogProba_3] 
FROM [DT_Output_9])
 INSERT INTO ##TMP_20180416232944_702B77_BAG_B0 ([KEY], [Score_0], [Proba_0], [LogProba_0], [Score_1], [Proba_1], [LogProba_1], [Score_2], [Proba_2], [LogProba_2], [Score_3], [Proba_3], [LogProba_3]) SELECT [BAG_B0].[KEY], [BAG_B0].[Score_0], [BAG_B0].[Proba_0], [BAG_B0].[LogProba_0], [BAG_B0].[Score_1], [BAG_B0].[Proba_1], [BAG_B0].[LogProba_1], [BAG_B0].[Score_2], [BAG_B0].[Proba_2], [BAG_B0].[LogProba_2], [BAG_B0].[Score_3], [BAG_B0].[Proba_3], [BAG_B0].[LogProba_3] 
FROM (SELECT [BAG_esu_0].[KEY] AS [KEY], [BAG_esu_0].[Score_0] AS [Score_0], [BAG_esu_0].[Proba_0] AS [Proba_0], [BAG_esu_0].[LogProba_0] AS [LogProba_0], [BAG_esu_0].[Score_1] AS [Score_1], [BAG_esu_0].[Proba_1] AS [Proba_1], [BAG_esu_0].[LogProba_1] AS [LogProba_1], [BAG_esu_0].[Score_2] AS [Score_2], [BAG_esu_0].[Proba_2] AS [Proba_2], [BAG_esu_0].[LogProba_2] AS [LogProba_2], [BAG_esu_0].[Score_3] AS [Score_3], [BAG_esu_0].[Proba_3] AS [Proba_3], [BAG_esu_0].[LogProba_3] AS [LogProba_3] 
FROM (SELECT [BAG_Model_0].[KEY] AS [KEY], [BAG_Model_0].[Score_0] AS [Score_0], [BAG_Model_0].[Proba_0] AS [Proba_0], [BAG_Model_0].[LogProba_0] AS [LogProba_0], [BAG_Model_0].[Score_1] AS [Score_1], [BAG_Model_0].[Proba_1] AS [Proba_1], [BAG_Model_0].[LogProba_1] AS [LogProba_1], [BAG_Model_0].[Score_2] AS [Score_2], [BAG_Model_0].[Proba_2] AS [Proba_2], [BAG_Model_0].[LogProba_2] AS [LogProba_2], [BAG_Model_0].[Score_3] AS [Score_3], [BAG_Model_0].[Proba_3] AS [Proba_3], [BAG_Model_0].[LogProba_3] AS [LogProba_3] 
FROM [BAG_Model_0] UNION ALL SELECT [BAG_Model_1].[KEY] AS [KEY], [BAG_Model_1].[Score_0] AS [Score_0], [BAG_Model_1].[Proba_0] AS [Proba_0], [BAG_Model_1].[LogProba_0] AS [LogProba_0], [BAG_Model_1].[Score_1] AS [Score_1], [BAG_Model_1].[Proba_1] AS [Proba_1], [BAG_Model_1].[LogProba_1] AS [LogProba_1], [BAG_Model_1].[Score_2] AS [Score_2], [BAG_Model_1].[Proba_2] AS [Proba_2], [BAG_Model_1].[LogProba_2] AS [LogProba_2], [BAG_Model_1].[Score_3] AS [Score_3], [BAG_Model_1].[Proba_3] AS [Proba_3], [BAG_Model_1].[LogProba_3] AS [LogProba_3] 
FROM [BAG_Model_1] UNION ALL SELECT [BAG_Model_2].[KEY] AS [KEY], [BAG_Model_2].[Score_0] AS [Score_0], [BAG_Model_2].[Proba_0] AS [Proba_0], [BAG_Model_2].[LogProba_0] AS [LogProba_0], [BAG_Model_2].[Score_1] AS [Score_1], [BAG_Model_2].[Proba_1] AS [Proba_1], [BAG_Model_2].[LogProba_1] AS [LogProba_1], [BAG_Model_2].[Score_2] AS [Score_2], [BAG_Model_2].[Proba_2] AS [Proba_2], [BAG_Model_2].[LogProba_2] AS [LogProba_2], [BAG_Model_2].[Score_3] AS [Score_3], [BAG_Model_2].[Proba_3] AS [Proba_3], [BAG_Model_2].[LogProba_3] AS [LogProba_3] 
FROM [BAG_Model_2] UNION ALL SELECT [BAG_Model_3].[KEY] AS [KEY], [BAG_Model_3].[Score_0] AS [Score_0], [BAG_Model_3].[Proba_0] AS [Proba_0], [BAG_Model_3].[LogProba_0] AS [LogProba_0], [BAG_Model_3].[Score_1] AS [Score_1], [BAG_Model_3].[Proba_1] AS [Proba_1], [BAG_Model_3].[LogProba_1] AS [LogProba_1], [BAG_Model_3].[Score_2] AS [Score_2], [BAG_Model_3].[Proba_2] AS [Proba_2], [BAG_Model_3].[LogProba_2] AS [LogProba_2], [BAG_Model_3].[Score_3] AS [Score_3], [BAG_Model_3].[Proba_3] AS [Proba_3], [BAG_Model_3].[LogProba_3] AS [LogProba_3] 
FROM [BAG_Model_3] UNION ALL SELECT [BAG_Model_4].[KEY] AS [KEY], [BAG_Model_4].[Score_0] AS [Score_0], [BAG_Model_4].[Proba_0] AS [Proba_0], [BAG_Model_4].[LogProba_0] AS [LogProba_0], [BAG_Model_4].[Score_1] AS [Score_1], [BAG_Model_4].[Proba_1] AS [Proba_1], [BAG_Model_4].[LogProba_1] AS [LogProba_1], [BAG_Model_4].[Score_2] AS [Score_2], [BAG_Model_4].[Proba_2] AS [Proba_2], [BAG_Model_4].[LogProba_2] AS [LogProba_2], [BAG_Model_4].[Score_3] AS [Score_3], [BAG_Model_4].[Proba_3] AS [Proba_3], [BAG_Model_4].[LogProba_3] AS [LogProba_3] 
FROM [BAG_Model_4] UNION ALL SELECT [BAG_Model_5].[KEY] AS [KEY], [BAG_Model_5].[Score_0] AS [Score_0], [BAG_Model_5].[Proba_0] AS [Proba_0], [BAG_Model_5].[LogProba_0] AS [LogProba_0], [BAG_Model_5].[Score_1] AS [Score_1], [BAG_Model_5].[Proba_1] AS [Proba_1], [BAG_Model_5].[LogProba_1] AS [LogProba_1], [BAG_Model_5].[Score_2] AS [Score_2], [BAG_Model_5].[Proba_2] AS [Proba_2], [BAG_Model_5].[LogProba_2] AS [LogProba_2], [BAG_Model_5].[Score_3] AS [Score_3], [BAG_Model_5].[Proba_3] AS [Proba_3], [BAG_Model_5].[LogProba_3] AS [LogProba_3] 
FROM [BAG_Model_5] UNION ALL SELECT [BAG_Model_6].[KEY] AS [KEY], [BAG_Model_6].[Score_0] AS [Score_0], [BAG_Model_6].[Proba_0] AS [Proba_0], [BAG_Model_6].[LogProba_0] AS [LogProba_0], [BAG_Model_6].[Score_1] AS [Score_1], [BAG_Model_6].[Proba_1] AS [Proba_1], [BAG_Model_6].[LogProba_1] AS [LogProba_1], [BAG_Model_6].[Score_2] AS [Score_2], [BAG_Model_6].[Proba_2] AS [Proba_2], [BAG_Model_6].[LogProba_2] AS [LogProba_2], [BAG_Model_6].[Score_3] AS [Score_3], [BAG_Model_6].[Proba_3] AS [Proba_3], [BAG_Model_6].[LogProba_3] AS [LogProba_3] 
FROM [BAG_Model_6] UNION ALL SELECT [BAG_Model_7].[KEY] AS [KEY], [BAG_Model_7].[Score_0] AS [Score_0], [BAG_Model_7].[Proba_0] AS [Proba_0], [BAG_Model_7].[LogProba_0] AS [LogProba_0], [BAG_Model_7].[Score_1] AS [Score_1], [BAG_Model_7].[Proba_1] AS [Proba_1], [BAG_Model_7].[LogProba_1] AS [LogProba_1], [BAG_Model_7].[Score_2] AS [Score_2], [BAG_Model_7].[Proba_2] AS [Proba_2], [BAG_Model_7].[LogProba_2] AS [LogProba_2], [BAG_Model_7].[Score_3] AS [Score_3], [BAG_Model_7].[Proba_3] AS [Proba_3], [BAG_Model_7].[LogProba_3] AS [LogProba_3] 
FROM [BAG_Model_7] UNION ALL SELECT [BAG_Model_8].[KEY] AS [KEY], [BAG_Model_8].[Score_0] AS [Score_0], [BAG_Model_8].[Proba_0] AS [Proba_0], [BAG_Model_8].[LogProba_0] AS [LogProba_0], [BAG_Model_8].[Score_1] AS [Score_1], [BAG_Model_8].[Proba_1] AS [Proba_1], [BAG_Model_8].[LogProba_1] AS [LogProba_1], [BAG_Model_8].[Score_2] AS [Score_2], [BAG_Model_8].[Proba_2] AS [Proba_2], [BAG_Model_8].[LogProba_2] AS [LogProba_2], [BAG_Model_8].[Score_3] AS [Score_3], [BAG_Model_8].[Proba_3] AS [Proba_3], [BAG_Model_8].[LogProba_3] AS [LogProba_3] 
FROM [BAG_Model_8] UNION ALL SELECT [BAG_Model_9].[KEY] AS [KEY], [BAG_Model_9].[Score_0] AS [Score_0], [BAG_Model_9].[Proba_0] AS [Proba_0], [BAG_Model_9].[LogProba_0] AS [LogProba_0], [BAG_Model_9].[Score_1] AS [Score_1], [BAG_Model_9].[Proba_1] AS [Proba_1], [BAG_Model_9].[LogProba_1] AS [LogProba_1], [BAG_Model_9].[Score_2] AS [Score_2], [BAG_Model_9].[Proba_2] AS [Proba_2], [BAG_Model_9].[LogProba_2] AS [LogProba_2], [BAG_Model_9].[Score_3] AS [Score_3], [BAG_Model_9].[Proba_3] AS [Proba_3], [BAG_Model_9].[LogProba_3] AS [LogProba_3] 
FROM [BAG_Model_9]) AS [BAG_esu_0]) AS [BAG_B0]

-- Code For temporary table ##TMP_20180416232944_LKDIO5_BAG_B1 part 1/2. Create 


CREATE TABLE ##TMP_20180416232944_LKDIO5_BAG_B1 (
	[KEY] BIGINT NULL, 
	[Score_0] FLOAT(53) NULL, 
	[Proba_0] FLOAT(53) NULL, 
	[LogProba_0] FLOAT(53) NULL, 
	[Score_1] FLOAT(53) NULL, 
	[Proba_1] FLOAT(53) NULL, 
	[LogProba_1] FLOAT(53) NULL, 
	[Score_2] FLOAT(53) NULL, 
	[Proba_2] FLOAT(53) NULL, 
	[LogProba_2] FLOAT(53) NULL, 
	[Score_3] FLOAT(53) NULL, 
	[Proba_3] FLOAT(53) NULL, 
	[LogProba_3] FLOAT(53) NULL
)



-- Code For temporary table ##TMP_20180416232944_LKDIO5_BAG_B1 part 2/2. Populate

WITH [DT_node_lookup_10] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_5 <= -0.6293008327484131) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_7 <= 0.21149110794067383) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_7 <= -0.34059810638427734) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_2 <= -1.0364435911178589) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_9 <= 0.13469922542572021) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_6 <= 0.18601790070533752) THEN 10 ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_5 <= 1.125637412071228) THEN 12 ELSE 13 END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_3 <= -0.4133424758911133) THEN 15 ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_10 <= -0.5202423334121704) THEN 17 ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_9 <= 0.4906497001647949) THEN 19 ELSE 20 END END END END END AS node_id_2 
FROM ##TMP_20180416232943_130CRO_ADS_sca_2_OUT AS [ADS_sca_2_OUT]), 
[DT_node_data_10] AS 
(SELECT [Values].node_id AS node_id, CAST([Values].feature AS FLOAT(53)) AS feature, CAST([Values].threshold AS FLOAT(53)) AS threshold, CAST([Values].count AS FLOAT(53)) AS count, CAST([Values].depth AS FLOAT(53)) AS depth, CAST([Values].parent_id AS FLOAT(53)) AS parent_id, CAST([Values].[Proba_0] AS FLOAT(53)) AS [Proba_0], CAST([Values].[LogProba_0] AS FLOAT(53)) AS [LogProba_0], CAST([Values].[Proba_1] AS FLOAT(53)) AS [Proba_1], CAST([Values].[LogProba_1] AS FLOAT(53)) AS [LogProba_1], CAST([Values].[Proba_2] AS FLOAT(53)) AS [Proba_2], CAST([Values].[LogProba_2] AS FLOAT(53)) AS [LogProba_2], CAST([Values].[Proba_3] AS FLOAT(53)) AS [Proba_3], CAST([Values].[LogProba_3] AS FLOAT(53)) AS [LogProba_3], CAST([Values].[Decision] AS FLOAT(53)) AS [Decision], CAST([Values].[DecisionProba] AS FLOAT(53)) AS [DecisionProba] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 3 AS count, 3 AS depth, 2 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 1.0 AS [Proba_2], 0.0 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 2 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 5 AS count, 3 AS depth, 2 AS parent_id, 1.0 AS [Proba_0], 0.0 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 1 AS count, 3 AS depth, 5 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 1.0 AS [Proba_3], 0.0 AS [LogProba_3], 3 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 10 AS count, 3 AS depth, 5 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 1.0 AS [Proba_2], 0.0 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 2 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 11 AS count, 3 AS depth, 9 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 1.0 AS [Proba_3], 0.0 AS [LogProba_3], 3 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 3 AS count, 4 AS depth, 11 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 1.0 AS [Proba_1], 0.0 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 1 AS count, 4 AS depth, 11 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 1.0 AS [Proba_3], 0.0 AS [LogProba_3], 3 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 4 AS count, 3 AS depth, 14 AS parent_id, 1.0 AS [Proba_0], 0.0 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 7 AS count, 4 AS depth, 16 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 1.0 AS [Proba_1], 0.0 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 2 AS count, 5 AS depth, 18 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.5 AS [Proba_1], -0.6931471805599453 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.5 AS [Proba_3], -0.6931471805599453 AS [LogProba_3], 1 AS [Decision], 0.5 AS [DecisionProba] UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 3 AS count, 5 AS depth, 18 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 1.0 AS [Proba_2], 0.0 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 2 AS [Decision], 1.0 AS [DecisionProba]) AS [Values]), 
[DT_Output_10] AS 
(SELECT [DT_node_lookup_10].[KEY] AS [KEY], [DT_node_lookup_10].node_id_2 AS node_id_2, [DT_node_data_10].node_id AS node_id, [DT_node_data_10].feature AS feature, [DT_node_data_10].threshold AS threshold, [DT_node_data_10].count AS count, [DT_node_data_10].depth AS depth, [DT_node_data_10].parent_id AS parent_id, [DT_node_data_10].[Proba_0] AS [Proba_0], [DT_node_data_10].[LogProba_0] AS [LogProba_0], [DT_node_data_10].[Proba_1] AS [Proba_1], [DT_node_data_10].[LogProba_1] AS [LogProba_1], [DT_node_data_10].[Proba_2] AS [Proba_2], [DT_node_data_10].[LogProba_2] AS [LogProba_2], [DT_node_data_10].[Proba_3] AS [Proba_3], [DT_node_data_10].[LogProba_3] AS [LogProba_3], [DT_node_data_10].[Decision] AS [Decision], [DT_node_data_10].[DecisionProba] AS [DecisionProba] 
FROM [DT_node_lookup_10] LEFT OUTER JOIN [DT_node_data_10] ON [DT_node_lookup_10].node_id_2 = [DT_node_data_10].node_id), 
[BAG_Model_10] AS 
(SELECT [DT_Output_10].[KEY] AS [KEY], CAST(NULL AS FLOAT(53)) AS [Score_0], [DT_Output_10].[Proba_0] AS [Proba_0], [DT_Output_10].[LogProba_0] AS [LogProba_0], CAST(NULL AS FLOAT(53)) AS [Score_1], [DT_Output_10].[Proba_1] AS [Proba_1], [DT_Output_10].[LogProba_1] AS [LogProba_1], CAST(NULL AS FLOAT(53)) AS [Score_2], [DT_Output_10].[Proba_2] AS [Proba_2], [DT_Output_10].[LogProba_2] AS [LogProba_2], CAST(NULL AS FLOAT(53)) AS [Score_3], [DT_Output_10].[Proba_3] AS [Proba_3], [DT_Output_10].[LogProba_3] AS [LogProba_3] 
FROM [DT_Output_10]), 
[DT_node_lookup_11] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_5 <= -1.146536111831665) THEN 1 ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_5 <= 0.3390423059463501) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_6 <= 0.055714450776576996) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_9 <= -0.12061124294996262) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_4 <= -1.2985427379608154) THEN 6 ELSE 7 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_4 <= -0.6120464205741882) THEN 9 ELSE 10 END END ELSE 11 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_9 <= 0.16974785923957825) THEN 13 ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_4 <= 0.14891165494918823) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_3 <= 0.3889448046684265) THEN 16 ELSE 17 END ELSE 18 END END END END AS node_id_2 
FROM ##TMP_20180416232943_130CRO_ADS_sca_2_OUT AS [ADS_sca_2_OUT]), 
[DT_node_data_11] AS 
(SELECT [Values].node_id AS node_id, CAST([Values].feature AS FLOAT(53)) AS feature, CAST([Values].threshold AS FLOAT(53)) AS threshold, CAST([Values].count AS FLOAT(53)) AS count, CAST([Values].depth AS FLOAT(53)) AS depth, CAST([Values].parent_id AS FLOAT(53)) AS parent_id, CAST([Values].[Proba_0] AS FLOAT(53)) AS [Proba_0], CAST([Values].[LogProba_0] AS FLOAT(53)) AS [LogProba_0], CAST([Values].[Proba_1] AS FLOAT(53)) AS [Proba_1], CAST([Values].[LogProba_1] AS FLOAT(53)) AS [LogProba_1], CAST([Values].[Proba_2] AS FLOAT(53)) AS [Proba_2], CAST([Values].[LogProba_2] AS FLOAT(53)) AS [LogProba_2], CAST([Values].[Proba_3] AS FLOAT(53)) AS [Proba_3], CAST([Values].[LogProba_3] AS FLOAT(53)) AS [LogProba_3], CAST([Values].[Decision] AS FLOAT(53)) AS [Decision], CAST([Values].[DecisionProba] AS FLOAT(53)) AS [DecisionProba] 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 9 AS count, 1 AS depth, 0 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 1.0 AS [Proba_2], 0.0 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 2 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 1 AS count, 5 AS depth, 5 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 1.0 AS [Proba_2], 0.0 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 2 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 9 AS count, 5 AS depth, 5 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 1.0 AS [Proba_3], 0.0 AS [LogProba_3], 3 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 2 AS count, 5 AS depth, 8 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 1.0 AS [Proba_2], 0.0 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 2 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 1 AS count, 5 AS depth, 8 AS parent_id, 1.0 AS [Proba_0], 0.0 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 12 AS count, 3 AS depth, 3 AS parent_id, 1.0 AS [Proba_0], 0.0 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 5 AS count, 3 AS depth, 12 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 1.0 AS [Proba_3], 0.0 AS [LogProba_3], 3 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 2 AS count, 5 AS depth, 15 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 1.0 AS [Proba_2], 0.0 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 2 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 1 AS count, 5 AS depth, 15 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 1.0 AS [Proba_1], 0.0 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 10 AS count, 4 AS depth, 14 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 1.0 AS [Proba_1], 0.0 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 1 AS [Decision], 1.0 AS [DecisionProba]) AS [Values]), 
[DT_Output_11] AS 
(SELECT [DT_node_lookup_11].[KEY] AS [KEY], [DT_node_lookup_11].node_id_2 AS node_id_2, [DT_node_data_11].node_id AS node_id, [DT_node_data_11].feature AS feature, [DT_node_data_11].threshold AS threshold, [DT_node_data_11].count AS count, [DT_node_data_11].depth AS depth, [DT_node_data_11].parent_id AS parent_id, [DT_node_data_11].[Proba_0] AS [Proba_0], [DT_node_data_11].[LogProba_0] AS [LogProba_0], [DT_node_data_11].[Proba_1] AS [Proba_1], [DT_node_data_11].[LogProba_1] AS [LogProba_1], [DT_node_data_11].[Proba_2] AS [Proba_2], [DT_node_data_11].[LogProba_2] AS [LogProba_2], [DT_node_data_11].[Proba_3] AS [Proba_3], [DT_node_data_11].[LogProba_3] AS [LogProba_3], [DT_node_data_11].[Decision] AS [Decision], [DT_node_data_11].[DecisionProba] AS [DecisionProba] 
FROM [DT_node_lookup_11] LEFT OUTER JOIN [DT_node_data_11] ON [DT_node_lookup_11].node_id_2 = [DT_node_data_11].node_id), 
[BAG_Model_11] AS 
(SELECT [DT_Output_11].[KEY] AS [KEY], CAST(NULL AS FLOAT(53)) AS [Score_0], [DT_Output_11].[Proba_0] AS [Proba_0], [DT_Output_11].[LogProba_0] AS [LogProba_0], CAST(NULL AS FLOAT(53)) AS [Score_1], [DT_Output_11].[Proba_1] AS [Proba_1], [DT_Output_11].[LogProba_1] AS [LogProba_1], CAST(NULL AS FLOAT(53)) AS [Score_2], [DT_Output_11].[Proba_2] AS [Proba_2], [DT_Output_11].[LogProba_2] AS [LogProba_2], CAST(NULL AS FLOAT(53)) AS [Score_3], [DT_Output_11].[Proba_3] AS [Proba_3], [DT_Output_11].[LogProba_3] AS [LogProba_3] 
FROM [DT_Output_11]), 
[DT_node_lookup_12] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_3 <= -0.46353819966316223) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_9 <= 0.121327705681324) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_2 <= 2.1401240825653076) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_5 <= 0.4057677686214447) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_9 <= 0.13469922542572021) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_6 <= 1.0030708312988281) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_6 <= 0.161614328622818) THEN 11 ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_10 <= 0.332025408744812) THEN 13 ELSE 14 END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_5 <= -0.432115375995636) THEN 16 ELSE 17 END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_4 <= 0.1137549951672554) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_11 <= -0.06389793008565903) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_5 <= -0.18983598053455353) THEN 21 ELSE 22 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_6 <= 0.32665199041366577) THEN 24 ELSE 25 END END ELSE 26 END END END AS node_id_2 
FROM ##TMP_20180416232943_130CRO_ADS_sca_2_OUT AS [ADS_sca_2_OUT]), 
[DT_node_data_12] AS 
(SELECT [Values].node_id AS node_id, CAST([Values].feature AS FLOAT(53)) AS feature, CAST([Values].threshold AS FLOAT(53)) AS threshold, CAST([Values].count AS FLOAT(53)) AS count, CAST([Values].depth AS FLOAT(53)) AS depth, CAST([Values].parent_id AS FLOAT(53)) AS parent_id, CAST([Values].[Proba_0] AS FLOAT(53)) AS [Proba_0], CAST([Values].[LogProba_0] AS FLOAT(53)) AS [LogProba_0], CAST([Values].[Proba_1] AS FLOAT(53)) AS [Proba_1], CAST([Values].[LogProba_1] AS FLOAT(53)) AS [LogProba_1], CAST([Values].[Proba_2] AS FLOAT(53)) AS [Proba_2], CAST([Values].[LogProba_2] AS FLOAT(53)) AS [LogProba_2], CAST([Values].[Proba_3] AS FLOAT(53)) AS [Proba_3], CAST([Values].[LogProba_3] AS FLOAT(53)) AS [LogProba_3], CAST([Values].[Decision] AS FLOAT(53)) AS [Decision], CAST([Values].[DecisionProba] AS FLOAT(53)) AS [DecisionProba] 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 8 AS count, 3 AS depth, 2 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 1.0 AS [Proba_2], 0.0 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 2 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, 1.0 AS [Proba_0], 0.0 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 9 AS count, 3 AS depth, 5 AS parent_id, 1.0 AS [Proba_0], 0.0 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 1 AS count, 3 AS depth, 5 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 1.0 AS [Proba_1], 0.0 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 13 AS count, 4 AS depth, 10 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 1.0 AS [Proba_3], 0.0 AS [LogProba_3], 3 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 1 AS count, 5 AS depth, 12 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 1.0 AS [Proba_3], 0.0 AS [LogProba_3], 3 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 1 AS count, 5 AS depth, 12 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 1.0 AS [Proba_1], 0.0 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 2 AS count, 4 AS depth, 15 AS parent_id, 1.0 AS [Proba_0], 0.0 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 1 AS count, 4 AS depth, 15 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 1.0 AS [Proba_1], 0.0 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 1 AS count, 5 AS depth, 20 AS parent_id, 1.0 AS [Proba_0], 0.0 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 2 AS count, 5 AS depth, 20 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 1.0 AS [Proba_1], 0.0 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 4 AS count, 5 AS depth, 23 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.8333333333333334 AS [Proba_2], -0.1823215567939546 AS [LogProba_2], 0.16666666666666666 AS [Proba_3], -1.791759469228055 AS [LogProba_3], 2 AS [Decision], 0.8333333333333334 AS [DecisionProba] UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 1 AS count, 5 AS depth, 23 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 1.0 AS [Proba_1], 0.0 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 9 AS count, 3 AS depth, 18 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 1.0 AS [Proba_1], 0.0 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 1 AS [Decision], 1.0 AS [DecisionProba]) AS [Values]), 
[DT_Output_12] AS 
(SELECT [DT_node_lookup_12].[KEY] AS [KEY], [DT_node_lookup_12].node_id_2 AS node_id_2, [DT_node_data_12].node_id AS node_id, [DT_node_data_12].feature AS feature, [DT_node_data_12].threshold AS threshold, [DT_node_data_12].count AS count, [DT_node_data_12].depth AS depth, [DT_node_data_12].parent_id AS parent_id, [DT_node_data_12].[Proba_0] AS [Proba_0], [DT_node_data_12].[LogProba_0] AS [LogProba_0], [DT_node_data_12].[Proba_1] AS [Proba_1], [DT_node_data_12].[LogProba_1] AS [LogProba_1], [DT_node_data_12].[Proba_2] AS [Proba_2], [DT_node_data_12].[LogProba_2] AS [LogProba_2], [DT_node_data_12].[Proba_3] AS [Proba_3], [DT_node_data_12].[LogProba_3] AS [LogProba_3], [DT_node_data_12].[Decision] AS [Decision], [DT_node_data_12].[DecisionProba] AS [DecisionProba] 
FROM [DT_node_lookup_12] LEFT OUTER JOIN [DT_node_data_12] ON [DT_node_lookup_12].node_id_2 = [DT_node_data_12].node_id), 
[BAG_Model_12] AS 
(SELECT [DT_Output_12].[KEY] AS [KEY], CAST(NULL AS FLOAT(53)) AS [Score_0], [DT_Output_12].[Proba_0] AS [Proba_0], [DT_Output_12].[LogProba_0] AS [LogProba_0], CAST(NULL AS FLOAT(53)) AS [Score_1], [DT_Output_12].[Proba_1] AS [Proba_1], [DT_Output_12].[LogProba_1] AS [LogProba_1], CAST(NULL AS FLOAT(53)) AS [Score_2], [DT_Output_12].[Proba_2] AS [Proba_2], [DT_Output_12].[LogProba_2] AS [LogProba_2], CAST(NULL AS FLOAT(53)) AS [Score_3], [DT_Output_12].[Proba_3] AS [Proba_3], [DT_Output_12].[LogProba_3] AS [LogProba_3] 
FROM [DT_Output_12]), 
[DT_node_lookup_13] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_6 <= 0.7317953109741211) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_9 <= 0.13469922542572021) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_3 <= -0.5756765604019165) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_3 <= -0.9766426086425781) THEN 4 ELSE 5 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_6 <= 0.14677950739860535) THEN 7 ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_7 <= 0.1948721706867218) THEN 9 ELSE 10 END END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_8 <= -0.127114400267601) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_9 <= 1.8272850513458252) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_7 <= 1.9231358766555786) THEN 14 ELSE 15 END ELSE 16 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_3 <= -0.6457916498184204) THEN 18 ELSE 19 END END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_8 <= -0.5359943509101868) THEN 21 ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_7 <= 0.26232412457466125) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_3 <= 0.9030447006225586) THEN 24 ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_10 <= 1.6438356637954712) THEN 26 ELSE 27 END END ELSE 28 END END END AS node_id_2 
FROM ##TMP_20180416232943_130CRO_ADS_sca_2_OUT AS [ADS_sca_2_OUT]), 
[DT_node_data_13] AS 
(SELECT [Values].node_id AS node_id, CAST([Values].feature AS FLOAT(53)) AS feature, CAST([Values].threshold AS FLOAT(53)) AS threshold, CAST([Values].count AS FLOAT(53)) AS count, CAST([Values].depth AS FLOAT(53)) AS depth, CAST([Values].parent_id AS FLOAT(53)) AS parent_id, CAST([Values].[Proba_0] AS FLOAT(53)) AS [Proba_0], CAST([Values].[LogProba_0] AS FLOAT(53)) AS [LogProba_0], CAST([Values].[Proba_1] AS FLOAT(53)) AS [Proba_1], CAST([Values].[LogProba_1] AS FLOAT(53)) AS [LogProba_1], CAST([Values].[Proba_2] AS FLOAT(53)) AS [Proba_2], CAST([Values].[LogProba_2] AS FLOAT(53)) AS [LogProba_2], CAST([Values].[Proba_3] AS FLOAT(53)) AS [Proba_3], CAST([Values].[LogProba_3] AS FLOAT(53)) AS [LogProba_3], CAST([Values].[Decision] AS FLOAT(53)) AS [Decision], CAST([Values].[DecisionProba] AS FLOAT(53)) AS [DecisionProba] 
FROM (SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 3 AS count, 4 AS depth, 3 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 1.0 AS [Proba_2], 0.0 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 2 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 2 AS count, 4 AS depth, 3 AS parent_id, 1.0 AS [Proba_0], 0.0 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 11 AS count, 4 AS depth, 6 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 1.0 AS [Proba_3], 0.0 AS [LogProba_3], 3 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 1 AS count, 5 AS depth, 8 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 1.0 AS [Proba_3], 0.0 AS [LogProba_3], 3 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 1 AS count, 5 AS depth, 8 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 1.0 AS [Proba_1], 0.0 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 12 AS count, 5 AS depth, 13 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.8888888888888888 AS [Proba_1], -0.11778303565638351 AS [LogProba_1], 0.05555555555555555 AS [Proba_2], -2.890371757896165 AS [LogProba_2], 0.05555555555555555 AS [Proba_3], -2.890371757896165 AS [LogProba_3], 1 AS [Decision], 0.8888888888888888 AS [DecisionProba] UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 1 AS count, 5 AS depth, 13 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 1.0 AS [Proba_2], 0.0 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 2 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 2 AS count, 4 AS depth, 12 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 1.0 AS [Proba_2], 0.0 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 2 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 2 AS count, 4 AS depth, 17 AS parent_id, 1.0 AS [Proba_0], 0.0 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 3 AS count, 4 AS depth, 17 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 1.0 AS [Proba_2], 0.0 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 2 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 2 AS count, 2 AS depth, 20 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 1.0 AS [Proba_1], 0.0 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 8 AS count, 4 AS depth, 23 AS parent_id, 1.0 AS [Proba_0], 0.0 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 1 AS count, 5 AS depth, 25 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 1.0 AS [Proba_1], 0.0 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 1 AS count, 5 AS depth, 25 AS parent_id, 1.0 AS [Proba_0], 0.0 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 28 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 1 AS count, 3 AS depth, 22 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 1.0 AS [Proba_2], 0.0 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 2 AS [Decision], 1.0 AS [DecisionProba]) AS [Values]), 
[DT_Output_13] AS 
(SELECT [DT_node_lookup_13].[KEY] AS [KEY], [DT_node_lookup_13].node_id_2 AS node_id_2, [DT_node_data_13].node_id AS node_id, [DT_node_data_13].feature AS feature, [DT_node_data_13].threshold AS threshold, [DT_node_data_13].count AS count, [DT_node_data_13].depth AS depth, [DT_node_data_13].parent_id AS parent_id, [DT_node_data_13].[Proba_0] AS [Proba_0], [DT_node_data_13].[LogProba_0] AS [LogProba_0], [DT_node_data_13].[Proba_1] AS [Proba_1], [DT_node_data_13].[LogProba_1] AS [LogProba_1], [DT_node_data_13].[Proba_2] AS [Proba_2], [DT_node_data_13].[LogProba_2] AS [LogProba_2], [DT_node_data_13].[Proba_3] AS [Proba_3], [DT_node_data_13].[LogProba_3] AS [LogProba_3], [DT_node_data_13].[Decision] AS [Decision], [DT_node_data_13].[DecisionProba] AS [DecisionProba] 
FROM [DT_node_lookup_13] LEFT OUTER JOIN [DT_node_data_13] ON [DT_node_lookup_13].node_id_2 = [DT_node_data_13].node_id), 
[BAG_Model_13] AS 
(SELECT [DT_Output_13].[KEY] AS [KEY], CAST(NULL AS FLOAT(53)) AS [Score_0], [DT_Output_13].[Proba_0] AS [Proba_0], [DT_Output_13].[LogProba_0] AS [LogProba_0], CAST(NULL AS FLOAT(53)) AS [Score_1], [DT_Output_13].[Proba_1] AS [Proba_1], [DT_Output_13].[LogProba_1] AS [LogProba_1], CAST(NULL AS FLOAT(53)) AS [Score_2], [DT_Output_13].[Proba_2] AS [Proba_2], [DT_Output_13].[LogProba_2] AS [LogProba_2], CAST(NULL AS FLOAT(53)) AS [Score_3], [DT_Output_13].[Proba_3] AS [Proba_3], [DT_Output_13].[LogProba_3] AS [LogProba_3] 
FROM [DT_Output_13]), 
[DT_node_lookup_14] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_6 <= 0.16372588276863098) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_9 <= -0.05820202827453613) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_3 <= -0.5756765604019165) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_7 <= 0.12190598249435425) THEN 4 ELSE 5 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_7 <= -1.9583714008331299) THEN 7 ELSE 8 END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_2 <= 0.5615823268890381) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_11 <= 0.10855816304683685) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_5 <= -0.07403384149074554) THEN 12 ELSE 13 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_6 <= -0.42016297578811646) THEN 15 ELSE 16 END END ELSE 17 END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_5 <= 0.332256555557251) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_5 <= -1.245943307876587) THEN 20 ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_7 <= 0.39308997988700867) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_3 <= 0.9030447006225586) THEN 23 ELSE 24 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_7 <= 1.1418178081512451) THEN 26 ELSE 27 END END END ELSE 28 END END AS node_id_2 
FROM ##TMP_20180416232943_130CRO_ADS_sca_2_OUT AS [ADS_sca_2_OUT]), 
[DT_node_data_14] AS 
(SELECT [Values].node_id AS node_id, CAST([Values].feature AS FLOAT(53)) AS feature, CAST([Values].threshold AS FLOAT(53)) AS threshold, CAST([Values].count AS FLOAT(53)) AS count, CAST([Values].depth AS FLOAT(53)) AS depth, CAST([Values].parent_id AS FLOAT(53)) AS parent_id, CAST([Values].[Proba_0] AS FLOAT(53)) AS [Proba_0], CAST([Values].[LogProba_0] AS FLOAT(53)) AS [LogProba_0], CAST([Values].[Proba_1] AS FLOAT(53)) AS [Proba_1], CAST([Values].[LogProba_1] AS FLOAT(53)) AS [LogProba_1], CAST([Values].[Proba_2] AS FLOAT(53)) AS [Proba_2], CAST([Values].[LogProba_2] AS FLOAT(53)) AS [LogProba_2], CAST([Values].[Proba_3] AS FLOAT(53)) AS [Proba_3], CAST([Values].[LogProba_3] AS FLOAT(53)) AS [LogProba_3], CAST([Values].[Decision] AS FLOAT(53)) AS [Decision], CAST([Values].[DecisionProba] AS FLOAT(53)) AS [DecisionProba] 
FROM (SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 2 AS count, 4 AS depth, 3 AS parent_id, 1.0 AS [Proba_0], 0.0 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 5 AS count, 4 AS depth, 3 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 1.0 AS [Proba_2], 0.0 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 2 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 1 AS count, 4 AS depth, 6 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 1.0 AS [Proba_2], 0.0 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 2 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 12 AS count, 4 AS depth, 6 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 1.0 AS [Proba_3], 0.0 AS [LogProba_3], 3 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 1 AS count, 5 AS depth, 11 AS parent_id, 1.0 AS [Proba_0], 0.0 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 4 AS count, 5 AS depth, 11 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 1.0 AS [Proba_1], 0.0 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 2 AS count, 5 AS depth, 14 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 1.0 AS [Proba_2], 0.0 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 2 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 2 AS count, 5 AS depth, 14 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 1.0 AS [Proba_3], 0.0 AS [LogProba_3], 3 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 5 AS count, 3 AS depth, 9 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 1.0 AS [Proba_2], 0.0 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 2 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 2 AS count, 3 AS depth, 19 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 1.0 AS [Proba_2], 0.0 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 2 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 9 AS count, 5 AS depth, 22 AS parent_id, 1.0 AS [Proba_0], 0.0 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 2 AS count, 5 AS depth, 22 AS parent_id, 0.75 AS [Proba_0], -0.2876820724517809 AS [LogProba_0], 0.25 AS [Proba_1], -1.3862943611198906 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0 AS [Decision], 0.75 AS [DecisionProba] UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 1 AS count, 5 AS depth, 25 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 1.0 AS [Proba_1], 0.0 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 1 AS count, 5 AS depth, 25 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 1.0 AS [Proba_2], 0.0 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 2 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 28 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 4 AS count, 2 AS depth, 18 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 1.0 AS [Proba_1], 0.0 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 1 AS [Decision], 1.0 AS [DecisionProba]) AS [Values]), 
[DT_Output_14] AS 
(SELECT [DT_node_lookup_14].[KEY] AS [KEY], [DT_node_lookup_14].node_id_2 AS node_id_2, [DT_node_data_14].node_id AS node_id, [DT_node_data_14].feature AS feature, [DT_node_data_14].threshold AS threshold, [DT_node_data_14].count AS count, [DT_node_data_14].depth AS depth, [DT_node_data_14].parent_id AS parent_id, [DT_node_data_14].[Proba_0] AS [Proba_0], [DT_node_data_14].[LogProba_0] AS [LogProba_0], [DT_node_data_14].[Proba_1] AS [Proba_1], [DT_node_data_14].[LogProba_1] AS [LogProba_1], [DT_node_data_14].[Proba_2] AS [Proba_2], [DT_node_data_14].[LogProba_2] AS [LogProba_2], [DT_node_data_14].[Proba_3] AS [Proba_3], [DT_node_data_14].[LogProba_3] AS [LogProba_3], [DT_node_data_14].[Decision] AS [Decision], [DT_node_data_14].[DecisionProba] AS [DecisionProba] 
FROM [DT_node_lookup_14] LEFT OUTER JOIN [DT_node_data_14] ON [DT_node_lookup_14].node_id_2 = [DT_node_data_14].node_id), 
[BAG_Model_14] AS 
(SELECT [DT_Output_14].[KEY] AS [KEY], CAST(NULL AS FLOAT(53)) AS [Score_0], [DT_Output_14].[Proba_0] AS [Proba_0], [DT_Output_14].[LogProba_0] AS [LogProba_0], CAST(NULL AS FLOAT(53)) AS [Score_1], [DT_Output_14].[Proba_1] AS [Proba_1], [DT_Output_14].[LogProba_1] AS [LogProba_1], CAST(NULL AS FLOAT(53)) AS [Score_2], [DT_Output_14].[Proba_2] AS [Proba_2], [DT_Output_14].[LogProba_2] AS [LogProba_2], CAST(NULL AS FLOAT(53)) AS [Score_3], [DT_Output_14].[Proba_3] AS [Proba_3], [DT_Output_14].[LogProba_3] AS [LogProba_3] 
FROM [DT_Output_14]), 
[DT_node_lookup_15] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_5 <= 0.12131558358669281) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_6 <= 0.055714450776576996) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_3 <= 0.16096457839012146) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_10 <= -0.4466950297355652) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_3 <= -0.7765675783157349) THEN 5 ELSE 6 END ELSE 7 END ELSE 8 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_8 <= 1.4334330558776855) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_4 <= -1.7257757186889648) THEN 11 ELSE 12 END ELSE 13 END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_10 <= 0.8861697912216187) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_9 <= -0.2896479070186615) THEN 16 ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_11 <= -1.7593052387237549) THEN 18 ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_10 <= 0.2743743360042572) THEN 20 ELSE 21 END END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_9 <= 0.31594333052635193) THEN 23 ELSE 24 END END END AS node_id_2 
FROM ##TMP_20180416232943_130CRO_ADS_sca_2_OUT AS [ADS_sca_2_OUT]), 
[DT_node_data_15] AS 
(SELECT [Values].node_id AS node_id, CAST([Values].feature AS FLOAT(53)) AS feature, CAST([Values].threshold AS FLOAT(53)) AS threshold, CAST([Values].count AS FLOAT(53)) AS count, CAST([Values].depth AS FLOAT(53)) AS depth, CAST([Values].parent_id AS FLOAT(53)) AS parent_id, CAST([Values].[Proba_0] AS FLOAT(53)) AS [Proba_0], CAST([Values].[LogProba_0] AS FLOAT(53)) AS [LogProba_0], CAST([Values].[Proba_1] AS FLOAT(53)) AS [Proba_1], CAST([Values].[LogProba_1] AS FLOAT(53)) AS [LogProba_1], CAST([Values].[Proba_2] AS FLOAT(53)) AS [Proba_2], CAST([Values].[LogProba_2] AS FLOAT(53)) AS [LogProba_2], CAST([Values].[Proba_3] AS FLOAT(53)) AS [Proba_3], CAST([Values].[LogProba_3] AS FLOAT(53)) AS [LogProba_3], CAST([Values].[Decision] AS FLOAT(53)) AS [Decision], CAST([Values].[DecisionProba] AS FLOAT(53)) AS [DecisionProba] 
FROM (SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 1 AS count, 5 AS depth, 4 AS parent_id, 1.0 AS [Proba_0], 0.0 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 3 AS count, 5 AS depth, 4 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 1.0 AS [Proba_3], 0.0 AS [LogProba_3], 3 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 6 AS count, 4 AS depth, 3 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 1.0 AS [Proba_2], 0.0 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 2 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 6 AS count, 3 AS depth, 2 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 1.0 AS [Proba_3], 0.0 AS [LogProba_3], 3 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 1 AS count, 4 AS depth, 10 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 1.0 AS [Proba_2], 0.0 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 2 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 7 AS count, 4 AS depth, 10 AS parent_id, 1.0 AS [Proba_0], 0.0 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 2 AS count, 3 AS depth, 9 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 1.0 AS [Proba_2], 0.0 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 2 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 3 AS count, 3 AS depth, 15 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 1.0 AS [Proba_3], 0.0 AS [LogProba_3], 3 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 1 AS count, 4 AS depth, 17 AS parent_id, 1.0 AS [Proba_0], 0.0 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 11 AS count, 5 AS depth, 19 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 1.0 AS [Proba_1], 0.0 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 5 AS count, 5 AS depth, 19 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.8 AS [Proba_1], -0.2231435513142097 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.2 AS [Proba_3], -1.6094379124341003 AS [LogProba_3], 1 AS [Decision], 0.8 AS [DecisionProba] UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 2 AS count, 3 AS depth, 22 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 1.0 AS [Proba_3], 0.0 AS [LogProba_3], 3 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 3 AS count, 3 AS depth, 22 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 1.0 AS [Proba_2], 0.0 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 2 AS [Decision], 1.0 AS [DecisionProba]) AS [Values]), 
[DT_Output_15] AS 
(SELECT [DT_node_lookup_15].[KEY] AS [KEY], [DT_node_lookup_15].node_id_2 AS node_id_2, [DT_node_data_15].node_id AS node_id, [DT_node_data_15].feature AS feature, [DT_node_data_15].threshold AS threshold, [DT_node_data_15].count AS count, [DT_node_data_15].depth AS depth, [DT_node_data_15].parent_id AS parent_id, [DT_node_data_15].[Proba_0] AS [Proba_0], [DT_node_data_15].[LogProba_0] AS [LogProba_0], [DT_node_data_15].[Proba_1] AS [Proba_1], [DT_node_data_15].[LogProba_1] AS [LogProba_1], [DT_node_data_15].[Proba_2] AS [Proba_2], [DT_node_data_15].[LogProba_2] AS [LogProba_2], [DT_node_data_15].[Proba_3] AS [Proba_3], [DT_node_data_15].[LogProba_3] AS [LogProba_3], [DT_node_data_15].[Decision] AS [Decision], [DT_node_data_15].[DecisionProba] AS [DecisionProba] 
FROM [DT_node_lookup_15] LEFT OUTER JOIN [DT_node_data_15] ON [DT_node_lookup_15].node_id_2 = [DT_node_data_15].node_id), 
[BAG_Model_15] AS 
(SELECT [DT_Output_15].[KEY] AS [KEY], CAST(NULL AS FLOAT(53)) AS [Score_0], [DT_Output_15].[Proba_0] AS [Proba_0], [DT_Output_15].[LogProba_0] AS [LogProba_0], CAST(NULL AS FLOAT(53)) AS [Score_1], [DT_Output_15].[Proba_1] AS [Proba_1], [DT_Output_15].[LogProba_1] AS [LogProba_1], CAST(NULL AS FLOAT(53)) AS [Score_2], [DT_Output_15].[Proba_2] AS [Proba_2], [DT_Output_15].[LogProba_2] AS [LogProba_2], CAST(NULL AS FLOAT(53)) AS [Score_3], [DT_Output_15].[Proba_3] AS [Proba_3], [DT_Output_15].[LogProba_3] AS [LogProba_3] 
FROM [DT_Output_15])
 INSERT INTO ##TMP_20180416232944_LKDIO5_BAG_B1 ([KEY], [Score_0], [Proba_0], [LogProba_0], [Score_1], [Proba_1], [LogProba_1], [Score_2], [Proba_2], [LogProba_2], [Score_3], [Proba_3], [LogProba_3]) SELECT [BAG_B1].[KEY], [BAG_B1].[Score_0], [BAG_B1].[Proba_0], [BAG_B1].[LogProba_0], [BAG_B1].[Score_1], [BAG_B1].[Proba_1], [BAG_B1].[LogProba_1], [BAG_B1].[Score_2], [BAG_B1].[Proba_2], [BAG_B1].[LogProba_2], [BAG_B1].[Score_3], [BAG_B1].[Proba_3], [BAG_B1].[LogProba_3] 
FROM (SELECT [BAG_esu_1].[KEY] AS [KEY], [BAG_esu_1].[Score_0] AS [Score_0], [BAG_esu_1].[Proba_0] AS [Proba_0], [BAG_esu_1].[LogProba_0] AS [LogProba_0], [BAG_esu_1].[Score_1] AS [Score_1], [BAG_esu_1].[Proba_1] AS [Proba_1], [BAG_esu_1].[LogProba_1] AS [LogProba_1], [BAG_esu_1].[Score_2] AS [Score_2], [BAG_esu_1].[Proba_2] AS [Proba_2], [BAG_esu_1].[LogProba_2] AS [LogProba_2], [BAG_esu_1].[Score_3] AS [Score_3], [BAG_esu_1].[Proba_3] AS [Proba_3], [BAG_esu_1].[LogProba_3] AS [LogProba_3] 
FROM (SELECT [BAG_Model_10].[KEY] AS [KEY], [BAG_Model_10].[Score_0] AS [Score_0], [BAG_Model_10].[Proba_0] AS [Proba_0], [BAG_Model_10].[LogProba_0] AS [LogProba_0], [BAG_Model_10].[Score_1] AS [Score_1], [BAG_Model_10].[Proba_1] AS [Proba_1], [BAG_Model_10].[LogProba_1] AS [LogProba_1], [BAG_Model_10].[Score_2] AS [Score_2], [BAG_Model_10].[Proba_2] AS [Proba_2], [BAG_Model_10].[LogProba_2] AS [LogProba_2], [BAG_Model_10].[Score_3] AS [Score_3], [BAG_Model_10].[Proba_3] AS [Proba_3], [BAG_Model_10].[LogProba_3] AS [LogProba_3] 
FROM [BAG_Model_10] UNION ALL SELECT [BAG_Model_11].[KEY] AS [KEY], [BAG_Model_11].[Score_0] AS [Score_0], [BAG_Model_11].[Proba_0] AS [Proba_0], [BAG_Model_11].[LogProba_0] AS [LogProba_0], [BAG_Model_11].[Score_1] AS [Score_1], [BAG_Model_11].[Proba_1] AS [Proba_1], [BAG_Model_11].[LogProba_1] AS [LogProba_1], [BAG_Model_11].[Score_2] AS [Score_2], [BAG_Model_11].[Proba_2] AS [Proba_2], [BAG_Model_11].[LogProba_2] AS [LogProba_2], [BAG_Model_11].[Score_3] AS [Score_3], [BAG_Model_11].[Proba_3] AS [Proba_3], [BAG_Model_11].[LogProba_3] AS [LogProba_3] 
FROM [BAG_Model_11] UNION ALL SELECT [BAG_Model_12].[KEY] AS [KEY], [BAG_Model_12].[Score_0] AS [Score_0], [BAG_Model_12].[Proba_0] AS [Proba_0], [BAG_Model_12].[LogProba_0] AS [LogProba_0], [BAG_Model_12].[Score_1] AS [Score_1], [BAG_Model_12].[Proba_1] AS [Proba_1], [BAG_Model_12].[LogProba_1] AS [LogProba_1], [BAG_Model_12].[Score_2] AS [Score_2], [BAG_Model_12].[Proba_2] AS [Proba_2], [BAG_Model_12].[LogProba_2] AS [LogProba_2], [BAG_Model_12].[Score_3] AS [Score_3], [BAG_Model_12].[Proba_3] AS [Proba_3], [BAG_Model_12].[LogProba_3] AS [LogProba_3] 
FROM [BAG_Model_12] UNION ALL SELECT [BAG_Model_13].[KEY] AS [KEY], [BAG_Model_13].[Score_0] AS [Score_0], [BAG_Model_13].[Proba_0] AS [Proba_0], [BAG_Model_13].[LogProba_0] AS [LogProba_0], [BAG_Model_13].[Score_1] AS [Score_1], [BAG_Model_13].[Proba_1] AS [Proba_1], [BAG_Model_13].[LogProba_1] AS [LogProba_1], [BAG_Model_13].[Score_2] AS [Score_2], [BAG_Model_13].[Proba_2] AS [Proba_2], [BAG_Model_13].[LogProba_2] AS [LogProba_2], [BAG_Model_13].[Score_3] AS [Score_3], [BAG_Model_13].[Proba_3] AS [Proba_3], [BAG_Model_13].[LogProba_3] AS [LogProba_3] 
FROM [BAG_Model_13] UNION ALL SELECT [BAG_Model_14].[KEY] AS [KEY], [BAG_Model_14].[Score_0] AS [Score_0], [BAG_Model_14].[Proba_0] AS [Proba_0], [BAG_Model_14].[LogProba_0] AS [LogProba_0], [BAG_Model_14].[Score_1] AS [Score_1], [BAG_Model_14].[Proba_1] AS [Proba_1], [BAG_Model_14].[LogProba_1] AS [LogProba_1], [BAG_Model_14].[Score_2] AS [Score_2], [BAG_Model_14].[Proba_2] AS [Proba_2], [BAG_Model_14].[LogProba_2] AS [LogProba_2], [BAG_Model_14].[Score_3] AS [Score_3], [BAG_Model_14].[Proba_3] AS [Proba_3], [BAG_Model_14].[LogProba_3] AS [LogProba_3] 
FROM [BAG_Model_14] UNION ALL SELECT [BAG_Model_15].[KEY] AS [KEY], [BAG_Model_15].[Score_0] AS [Score_0], [BAG_Model_15].[Proba_0] AS [Proba_0], [BAG_Model_15].[LogProba_0] AS [LogProba_0], [BAG_Model_15].[Score_1] AS [Score_1], [BAG_Model_15].[Proba_1] AS [Proba_1], [BAG_Model_15].[LogProba_1] AS [LogProba_1], [BAG_Model_15].[Score_2] AS [Score_2], [BAG_Model_15].[Proba_2] AS [Proba_2], [BAG_Model_15].[LogProba_2] AS [LogProba_2], [BAG_Model_15].[Score_3] AS [Score_3], [BAG_Model_15].[Proba_3] AS [Proba_3], [BAG_Model_15].[LogProba_3] AS [LogProba_3] 
FROM [BAG_Model_15]) AS [BAG_esu_1]) AS [BAG_B1]

-- Code For temporary table ##TMP_20180416232944_NA6FGP_BAG_Union part 1/2. Create 


CREATE TABLE ##TMP_20180416232944_NA6FGP_BAG_Union (
	[KEY] BIGINT NULL, 
	[Score_0] FLOAT(53) NULL, 
	[Proba_0] FLOAT(53) NULL, 
	[LogProba_0] FLOAT(53) NULL, 
	[Score_1] FLOAT(53) NULL, 
	[Proba_1] FLOAT(53) NULL, 
	[LogProba_1] FLOAT(53) NULL, 
	[Score_2] FLOAT(53) NULL, 
	[Proba_2] FLOAT(53) NULL, 
	[LogProba_2] FLOAT(53) NULL, 
	[Score_3] FLOAT(53) NULL, 
	[Proba_3] FLOAT(53) NULL, 
	[LogProba_3] FLOAT(53) NULL
)



-- Code For temporary table ##TMP_20180416232944_NA6FGP_BAG_Union part 2/2. Populate

INSERT INTO ##TMP_20180416232944_NA6FGP_BAG_Union ([KEY], [Score_0], [Proba_0], [LogProba_0], [Score_1], [Proba_1], [LogProba_1], [Score_2], [Proba_2], [LogProba_2], [Score_3], [Proba_3], [LogProba_3]) SELECT [BAG_Union].[KEY], [BAG_Union].[Score_0], [BAG_Union].[Proba_0], [BAG_Union].[LogProba_0], [BAG_Union].[Score_1], [BAG_Union].[Proba_1], [BAG_Union].[LogProba_1], [BAG_Union].[Score_2], [BAG_Union].[Proba_2], [BAG_Union].[LogProba_2], [BAG_Union].[Score_3], [BAG_Union].[Proba_3], [BAG_Union].[LogProba_3] 
FROM (SELECT [BAG_EnsembleUnion].[KEY] AS [KEY], [BAG_EnsembleUnion].[Score_0] AS [Score_0], [BAG_EnsembleUnion].[Proba_0] AS [Proba_0], [BAG_EnsembleUnion].[LogProba_0] AS [LogProba_0], [BAG_EnsembleUnion].[Score_1] AS [Score_1], [BAG_EnsembleUnion].[Proba_1] AS [Proba_1], [BAG_EnsembleUnion].[LogProba_1] AS [LogProba_1], [BAG_EnsembleUnion].[Score_2] AS [Score_2], [BAG_EnsembleUnion].[Proba_2] AS [Proba_2], [BAG_EnsembleUnion].[LogProba_2] AS [LogProba_2], [BAG_EnsembleUnion].[Score_3] AS [Score_3], [BAG_EnsembleUnion].[Proba_3] AS [Proba_3], [BAG_EnsembleUnion].[LogProba_3] AS [LogProba_3] 
FROM (SELECT [BAG_B0].[KEY] AS [KEY], [BAG_B0].[Score_0] AS [Score_0], [BAG_B0].[Proba_0] AS [Proba_0], [BAG_B0].[LogProba_0] AS [LogProba_0], [BAG_B0].[Score_1] AS [Score_1], [BAG_B0].[Proba_1] AS [Proba_1], [BAG_B0].[LogProba_1] AS [LogProba_1], [BAG_B0].[Score_2] AS [Score_2], [BAG_B0].[Proba_2] AS [Proba_2], [BAG_B0].[LogProba_2] AS [LogProba_2], [BAG_B0].[Score_3] AS [Score_3], [BAG_B0].[Proba_3] AS [Proba_3], [BAG_B0].[LogProba_3] AS [LogProba_3] 
FROM ##TMP_20180416232944_702B77_BAG_B0 AS [BAG_B0] UNION ALL SELECT [BAG_B1].[KEY] AS [KEY], [BAG_B1].[Score_0] AS [Score_0], [BAG_B1].[Proba_0] AS [Proba_0], [BAG_B1].[LogProba_0] AS [LogProba_0], [BAG_B1].[Score_1] AS [Score_1], [BAG_B1].[Proba_1] AS [Proba_1], [BAG_B1].[LogProba_1] AS [LogProba_1], [BAG_B1].[Score_2] AS [Score_2], [BAG_B1].[Proba_2] AS [Proba_2], [BAG_B1].[LogProba_2] AS [LogProba_2], [BAG_B1].[Score_3] AS [Score_3], [BAG_B1].[Proba_3] AS [Proba_3], [BAG_B1].[LogProba_3] AS [LogProba_3] 
FROM ##TMP_20180416232944_LKDIO5_BAG_B1 AS [BAG_B1]) AS [BAG_EnsembleUnion]) AS [BAG_Union]

-- Code For temporary table ##TMP_20180416232944_MBFKK2_BAG_avg part 1/2. Create 


CREATE TABLE ##TMP_20180416232944_MBFKK2_BAG_avg (
	[KEY] BIGINT NULL, 
	[Score_0] FLOAT(53) NULL, 
	[Proba_0] FLOAT(53) NULL, 
	[LogProba_0] FLOAT(53) NULL, 
	[Score_1] FLOAT(53) NULL, 
	[Proba_1] FLOAT(53) NULL, 
	[LogProba_1] FLOAT(53) NULL, 
	[Score_2] FLOAT(53) NULL, 
	[Proba_2] FLOAT(53) NULL, 
	[LogProba_2] FLOAT(53) NULL, 
	[Score_3] FLOAT(53) NULL, 
	[Proba_3] FLOAT(53) NULL, 
	[LogProba_3] FLOAT(53) NULL
)



-- Code For temporary table ##TMP_20180416232944_MBFKK2_BAG_avg part 2/2. Populate

INSERT INTO ##TMP_20180416232944_MBFKK2_BAG_avg ([KEY], [Score_0], [Proba_0], [LogProba_0], [Score_1], [Proba_1], [LogProba_1], [Score_2], [Proba_2], [LogProba_2], [Score_3], [Proba_3], [LogProba_3]) SELECT [BAG_avg].[KEY], [BAG_avg].[Score_0], [BAG_avg].[Proba_0], [BAG_avg].[LogProba_0], [BAG_avg].[Score_1], [BAG_avg].[Proba_1], [BAG_avg].[LogProba_1], [BAG_avg].[Score_2], [BAG_avg].[Proba_2], [BAG_avg].[LogProba_2], [BAG_avg].[Score_3], [BAG_avg].[Proba_3], [BAG_avg].[LogProba_3] 
FROM (SELECT [T].[KEY] AS [KEY], CAST([T].[Score_0] AS FLOAT(53)) AS [Score_0], CAST([T].[Proba_0] AS FLOAT(53)) AS [Proba_0], CAST([T].[LogProba_0] AS FLOAT(53)) AS [LogProba_0], CAST([T].[Score_1] AS FLOAT(53)) AS [Score_1], CAST([T].[Proba_1] AS FLOAT(53)) AS [Proba_1], CAST([T].[LogProba_1] AS FLOAT(53)) AS [LogProba_1], CAST([T].[Score_2] AS FLOAT(53)) AS [Score_2], CAST([T].[Proba_2] AS FLOAT(53)) AS [Proba_2], CAST([T].[LogProba_2] AS FLOAT(53)) AS [LogProba_2], CAST([T].[Score_3] AS FLOAT(53)) AS [Score_3], CAST([T].[Proba_3] AS FLOAT(53)) AS [Proba_3], CAST([T].[LogProba_3] AS FLOAT(53)) AS [LogProba_3] 
FROM (SELECT [BAG_Union].[KEY] AS [KEY], avg(CAST([BAG_Union].[Score_0] AS FLOAT(53))) AS [Score_0], avg(CAST([BAG_Union].[Proba_0] AS FLOAT(53))) AS [Proba_0], CAST(NULL AS FLOAT(53)) AS [LogProba_0], avg(CAST([BAG_Union].[Score_1] AS FLOAT(53))) AS [Score_1], avg(CAST([BAG_Union].[Proba_1] AS FLOAT(53))) AS [Proba_1], CAST(NULL AS FLOAT(53)) AS [LogProba_1], avg(CAST([BAG_Union].[Score_2] AS FLOAT(53))) AS [Score_2], avg(CAST([BAG_Union].[Proba_2] AS FLOAT(53))) AS [Proba_2], CAST(NULL AS FLOAT(53)) AS [LogProba_2], avg(CAST([BAG_Union].[Score_3] AS FLOAT(53))) AS [Score_3], avg(CAST([BAG_Union].[Proba_3] AS FLOAT(53))) AS [Proba_3], CAST(NULL AS FLOAT(53)) AS [LogProba_3] 
FROM ##TMP_20180416232944_NA6FGP_BAG_Union AS [BAG_Union] GROUP BY [BAG_Union].[KEY]) AS [T]) AS [BAG_avg]

-- Model deployment code

WITH orig_cte AS 
(SELECT [BAG_avg].[KEY] AS [KEY], [BAG_avg].[Score_0] AS [Score_0], [BAG_avg].[Score_1] AS [Score_1], [BAG_avg].[Score_2] AS [Score_2], [BAG_avg].[Score_3] AS [Score_3], [BAG_avg].[Proba_0] AS [Proba_0], [BAG_avg].[Proba_1] AS [Proba_1], [BAG_avg].[Proba_2] AS [Proba_2], [BAG_avg].[Proba_3] AS [Proba_3], [BAG_avg].[LogProba_0] AS [LogProba_0], [BAG_avg].[LogProba_1] AS [LogProba_1], [BAG_avg].[LogProba_2] AS [LogProba_2], [BAG_avg].[LogProba_3] AS [LogProba_3], CAST(NULL AS BIGINT) AS [Decision], CAST(NULL AS FLOAT(53)) AS [DecisionProba] 
FROM ##TMP_20180416232944_MBFKK2_BAG_avg AS [BAG_avg]), 
score_class_union AS 
(SELECT scu.[KEY_u] AS [KEY_u], scu.class AS class, scu.[LogProba] AS [LogProba], scu.[Proba] AS [Proba], scu.[Score] AS [Score] 
FROM (SELECT orig_cte.[KEY] AS [KEY_u], 0 AS class, orig_cte.[LogProba_0] AS [LogProba], orig_cte.[Proba_0] AS [Proba], orig_cte.[Score_0] AS [Score] 
FROM orig_cte UNION ALL SELECT orig_cte.[KEY] AS [KEY_u], 1 AS class, orig_cte.[LogProba_1] AS [LogProba], orig_cte.[Proba_1] AS [Proba], orig_cte.[Score_1] AS [Score] 
FROM orig_cte UNION ALL SELECT orig_cte.[KEY] AS [KEY_u], 2 AS class, orig_cte.[LogProba_2] AS [LogProba], orig_cte.[Proba_2] AS [Proba], orig_cte.[Score_2] AS [Score] 
FROM orig_cte UNION ALL SELECT orig_cte.[KEY] AS [KEY_u], 3 AS class, orig_cte.[LogProba_3] AS [LogProba], orig_cte.[Proba_3] AS [Proba], orig_cte.[Score_3] AS [Score] 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte.[KEY] AS [KEY], orig_cte.[Score_0] AS [Score_0], orig_cte.[Score_1] AS [Score_1], orig_cte.[Score_2] AS [Score_2], orig_cte.[Score_3] AS [Score_3], orig_cte.[Proba_0] AS [Proba_0], orig_cte.[Proba_1] AS [Proba_1], orig_cte.[Proba_2] AS [Proba_2], orig_cte.[Proba_3] AS [Proba_3], orig_cte.[LogProba_0] AS [LogProba_0], orig_cte.[LogProba_1] AS [LogProba_1], orig_cte.[LogProba_2] AS [LogProba_2], orig_cte.[LogProba_3] AS [LogProba_3], orig_cte.[Decision] AS [Decision], orig_cte.[DecisionProba] AS [DecisionProba], max_select.[KEY_m] AS [KEY_m], max_select.[max_Proba] AS [max_Proba] 
FROM orig_cte LEFT OUTER JOIN (SELECT score_class_union.[KEY_u] AS [KEY_m], max(score_class_union.[Proba]) AS [max_Proba] 
FROM score_class_union GROUP BY score_class_union.[KEY_u]) AS max_select ON orig_cte.[KEY] = max_select.[KEY_m]), 
union_with_max AS 
(SELECT score_class_union.[KEY_u] AS [KEY_u], score_class_union.class AS class, score_class_union.[LogProba] AS [LogProba], score_class_union.[Proba] AS [Proba], score_class_union.[Score] AS [Score], score_max.[KEY] AS [KEY], score_max.[Score_0] AS [Score_0], score_max.[Score_1] AS [Score_1], score_max.[Score_2] AS [Score_2], score_max.[Score_3] AS [Score_3], score_max.[Proba_0] AS [Proba_0], score_max.[Proba_1] AS [Proba_1], score_max.[Proba_2] AS [Proba_2], score_max.[Proba_3] AS [Proba_3], score_max.[LogProba_0] AS [LogProba_0], score_max.[LogProba_1] AS [LogProba_1], score_max.[LogProba_2] AS [LogProba_2], score_max.[LogProba_3] AS [LogProba_3], score_max.[Decision] AS [Decision], score_max.[DecisionProba] AS [DecisionProba], score_max.[KEY_m] AS [KEY_m], score_max.[max_Proba] AS [max_Proba] 
FROM score_class_union LEFT OUTER JOIN score_max ON score_class_union.[KEY_u] = score_max.[KEY]), 
arg_max_cte AS 
(SELECT score_max.[KEY] AS [KEY], score_max.[Score_0] AS [Score_0], score_max.[Score_1] AS [Score_1], score_max.[Score_2] AS [Score_2], score_max.[Score_3] AS [Score_3], score_max.[Proba_0] AS [Proba_0], score_max.[Proba_1] AS [Proba_1], score_max.[Proba_2] AS [Proba_2], score_max.[Proba_3] AS [Proba_3], score_max.[LogProba_0] AS [LogProba_0], score_max.[LogProba_1] AS [LogProba_1], score_max.[LogProba_2] AS [LogProba_2], score_max.[LogProba_3] AS [LogProba_3], score_max.[Decision] AS [Decision], score_max.[DecisionProba] AS [DecisionProba], score_max.[KEY_m] AS [KEY_m], score_max.[max_Proba] AS [max_Proba], [arg_max_t_Proba].[KEY_Proba] AS [KEY_Proba], [arg_max_t_Proba].[arg_max_Proba] AS [arg_max_Proba] 
FROM score_max LEFT OUTER JOIN (SELECT union_with_max.[KEY] AS [KEY_Proba], min(union_with_max.class) AS [arg_max_Proba] 
FROM union_with_max 
WHERE union_with_max.[Proba] >= union_with_max.[max_Proba] GROUP BY union_with_max.[KEY]) AS [arg_max_t_Proba] ON score_max.[KEY] = [arg_max_t_Proba].[KEY_Proba])
 SELECT arg_max_cte.[KEY] AS [KEY], arg_max_cte.[Score_0] AS [Score_0], arg_max_cte.[Score_1] AS [Score_1], arg_max_cte.[Score_2] AS [Score_2], arg_max_cte.[Score_3] AS [Score_3], arg_max_cte.[Proba_0] AS [Proba_0], arg_max_cte.[Proba_1] AS [Proba_1], arg_max_cte.[Proba_2] AS [Proba_2], arg_max_cte.[Proba_3] AS [Proba_3], CASE WHEN (arg_max_cte.[Proba_0] IS NULL OR arg_max_cte.[Proba_0] > 0.0) THEN log(arg_max_cte.[Proba_0]) ELSE -1.79769313486231e+308 END AS [LogProba_0], CASE WHEN (arg_max_cte.[Proba_1] IS NULL OR arg_max_cte.[Proba_1] > 0.0) THEN log(arg_max_cte.[Proba_1]) ELSE -1.79769313486231e+308 END AS [LogProba_1], CASE WHEN (arg_max_cte.[Proba_2] IS NULL OR arg_max_cte.[Proba_2] > 0.0) THEN log(arg_max_cte.[Proba_2]) ELSE -1.79769313486231e+308 END AS [LogProba_2], CASE WHEN (arg_max_cte.[Proba_3] IS NULL OR arg_max_cte.[Proba_3] > 0.0) THEN log(arg_max_cte.[Proba_3]) ELSE -1.79769313486231e+308 END AS [LogProba_3], arg_max_cte.[arg_max_Proba] AS [Decision], arg_max_cte.[max_Proba] AS [DecisionProba] 
FROM arg_max_cte