-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2018

-- Model : BaggingClassifier_Pipeline
-- Dataset : iris_date_tgt
-- Database : firebird


-- This SQL code can contain one or more statements, to be executed in the order they appear in this file.



-- Code For temporary table TMP_20180417042508_54NU4T_ADS_I part 1/2. Create 


CREATE GLOBAL TEMPORARY TABLE "TMP_20180417042508_54NU4T_ADS_I" (
	"KEY" BIGINT, 
	imputer_output_2 FLOAT, 
	imputer_output_3 FLOAT, 
	imputer_output_4 FLOAT, 
	imputer_output_5 FLOAT
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table TMP_20180417042508_54NU4T_ADS_I part 2/2. Populate

INSERT INTO "TMP_20180417042508_54NU4T_ADS_I" ("KEY", imputer_output_2, imputer_output_3, imputer_output_4, imputer_output_5) SELECT "U"."KEY", "U".imputer_output_2, "U".imputer_output_3, "U".imputer_output_4, "U".imputer_output_5 
FROM (SELECT "ADS_imp_1_OUT"."KEY", "ADS_imp_1_OUT".imputer_output_2, "ADS_imp_1_OUT".imputer_output_3, "ADS_imp_1_OUT".imputer_output_4, "ADS_imp_1_OUT".imputer_output_5 
FROM (SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" IS NULL) THEN 5.8474999999999975 ELSE "ADS"."Feature_0" END AS imputer_output_2, CASE WHEN ("ADS"."Feature_1" IS NULL) THEN 3.0366666666666657 ELSE "ADS"."Feature_1" END AS imputer_output_3, CASE WHEN ("ADS"."Feature_2" IS NULL) THEN 3.8450000000000006 ELSE "ADS"."Feature_2" END AS imputer_output_4, CASE WHEN ("ADS"."Feature_3" IS NULL) THEN 1.245 ELSE "ADS"."Feature_3" END AS imputer_output_5 
FROM iris_date_tgt AS "ADS") AS "ADS_imp_1_OUT") AS "U"

-- Code For temporary table TMP_20180417042508_4DAFDZ_ADS_S part 1/2. Create 


CREATE GLOBAL TEMPORARY TABLE "TMP_20180417042508_4DAFDZ_ADS_S" (
	"KEY" BIGINT, 
	scaler_output_2 FLOAT, 
	scaler_output_3 FLOAT, 
	scaler_output_4 FLOAT, 
	scaler_output_5 FLOAT
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table TMP_20180417042508_4DAFDZ_ADS_S part 2/2. Populate

INSERT INTO "TMP_20180417042508_4DAFDZ_ADS_S" ("KEY", scaler_output_2, scaler_output_3, scaler_output_4, scaler_output_5) SELECT "U"."KEY", "U".scaler_output_2, "U".scaler_output_3, "U".scaler_output_4, "U".scaler_output_5 
FROM (SELECT "ADS_sca_2_OUT"."KEY", "ADS_sca_2_OUT".scaler_output_2, "ADS_sca_2_OUT".scaler_output_3, "ADS_sca_2_OUT".scaler_output_4, "ADS_sca_2_OUT".scaler_output_5 
FROM (SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", (CAST("ADS_imp_1_OUT".imputer_output_2 AS FLOAT) - 5.8474999999999975) / 0.827039146594646 AS scaler_output_2, (CAST("ADS_imp_1_OUT".imputer_output_3 AS FLOAT) - 3.0366666666666657) / 0.43625935201691934 AS scaler_output_3, (CAST("ADS_imp_1_OUT".imputer_output_4 AS FLOAT) - 3.8450000000000006) / 1.709817241695732 AS scaler_output_4, (CAST("ADS_imp_1_OUT".imputer_output_5 AS FLOAT) - 1.245) / 0.7498722113355939 AS scaler_output_5 
FROM "TMP_20180417042508_54NU4T_ADS_I" AS "ADS_imp_1_OUT") AS "ADS_sca_2_OUT") AS "U"

-- Code For temporary table TMP_20180417042508_8XR3KH_BAG_B part 1/2. Create 


CREATE GLOBAL TEMPORARY TABLE "TMP_20180417042508_8XR3KH_BAG_B" (
	"KEY" BIGINT, 
	"Score_1789-07-14T00:00:00.000000000" FLOAT, 
	"Proba_1789-07-14T00:00:00.000000000" FLOAT, 
	"LogProba_1789-07-14T00:00:00.000000000" FLOAT, 
	"Score_1789-08-14T00:00:00.000000000" FLOAT, 
	"Proba_1789-08-14T00:00:00.000000000" FLOAT, 
	"LogProba_1789-08-14T00:00:00.000000000" FLOAT, 
	"Score_1789-09-14T00:00:00.000000000" FLOAT, 
	"Proba_1789-09-14T00:00:00.000000000" FLOAT, 
	"LogProba_1789-09-14T00:00:00.000000000" FLOAT
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table TMP_20180417042508_8XR3KH_BAG_B part 2/2. Populate

INSERT INTO "TMP_20180417042508_8XR3KH_BAG_B" ("KEY", "Score_1789-07-14T00:00:00.000000000", "Proba_1789-07-14T00:00:00.000000000", "LogProba_1789-07-14T00:00:00.000000000", "Score_1789-08-14T00:00:00.000000000", "Proba_1789-08-14T00:00:00.000000000", "LogProba_1789-08-14T00:00:00.000000000", "Score_1789-09-14T00:00:00.000000000", "Proba_1789-09-14T00:00:00.000000000", "LogProba_1789-09-14T00:00:00.000000000") SELECT "U"."KEY", "U"."Score_1789-07-14T00:00:00_1", "U"."Proba_1789-07-14T00:00:00_2", "U"."LogProba_1789-07-14T00:00_3", "U"."Score_1789-08-14T00:00:00_4", "U"."Proba_1789-08-14T00:00:00_5", "U"."LogProba_1789-08-14T00:00_6", "U"."Score_1789-09-14T00:00:00_7", "U"."Proba_1789-09-14T00:00:00_8", "U"."LogProba_1789-09-14T00:00_9" 
FROM (WITH "DT_node_lookup" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.5400919914245605) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.7281479835510254) THEN 2 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.6462678909301758) THEN 4 ELSE 5 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.6734480857849121) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.6571015119552612) THEN 8 ELSE 9 END ELSE 10 END END AS node_id_2 
FROM "TMP_20180417042508_4DAFDZ_ADS_S" AS "ADS_sca_2_OUT"), 
"DT_node_data" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values".threshold AS FLOAT) AS threshold, CAST("Values"."count" AS FLOAT) AS "count", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Proba_0" AS FLOAT) AS "Proba_0", CAST("Values"."LogProba_0" AS FLOAT) AS "LogProba_0", CAST("Values"."Proba_1" AS FLOAT) AS "Proba_1", CAST("Values"."LogProba_1" AS FLOAT) AS "LogProba_1", CAST("Values"."Proba_2" AS FLOAT) AS "Proba_2", CAST("Values"."LogProba_2" AS FLOAT) AS "LogProba_2", CAST("Values"."Decision" AS FLOAT) AS "Decision", CAST("Values"."DecisionProba" AS FLOAT) AS "DecisionProba" 
FROM (SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 25 AS "count", 2 AS depth, 1 AS parent_id, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -1e+20 AS "LogProba_1", 0.0 AS "Proba_2", -1e+20 AS "LogProba_2", 0 AS "Decision", 1.0 AS "DecisionProba" FROM rdb$database UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 24 AS "count", 3 AS depth, 3 AS parent_id, 0.0 AS "Proba_0", -1e+20 AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 0.0 AS "Proba_2", -1e+20 AS "LogProba_2", 1 AS "Decision", 1.0 AS "DecisionProba" FROM rdb$database UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 3 AS depth, 3 AS parent_id, 0.0 AS "Proba_0", -1e+20 AS "LogProba_0", 0.0 AS "Proba_1", -1e+20 AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 2 AS "Decision", 1.0 AS "DecisionProba" FROM rdb$database UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 3 AS depth, 7 AS parent_id, 0.0 AS "Proba_0", -1e+20 AS "LogProba_0", 0.0 AS "Proba_1", -1e+20 AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 2 AS "Decision", 1.0 AS "DecisionProba" FROM rdb$database UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 3 AS depth, 7 AS parent_id, 0.0 AS "Proba_0", -1e+20 AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 0.0 AS "Proba_2", -1e+20 AS "LogProba_2", 1 AS "Decision", 1.0 AS "DecisionProba" FROM rdb$database UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 24 AS "count", 2 AS depth, 6 AS parent_id, 0.0 AS "Proba_0", -1e+20 AS "LogProba_0", 0.0 AS "Proba_1", -1e+20 AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 2 AS "Decision", 1.0 AS "DecisionProba" FROM rdb$database) AS "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".node_id AS node_id, "DT_node_data".feature AS feature, "DT_node_data".threshold AS threshold, "DT_node_data"."count" AS "count", "DT_node_data".depth AS depth, "DT_node_data".parent_id AS parent_id, "DT_node_data"."Proba_0" AS "Proba_0", "DT_node_data"."LogProba_0" AS "LogProba_0", "DT_node_data"."Proba_1" AS "Proba_1", "DT_node_data"."LogProba_1" AS "LogProba_1", "DT_node_data"."Proba_2" AS "Proba_2", "DT_node_data"."LogProba_2" AS "LogProba_2", "DT_node_data"."Decision" AS "Decision", "DT_node_data"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".node_id), 
"BAG_Model_0" AS 
(SELECT "DT_Output"."KEY" AS "KEY", CAST(NULL AS FLOAT) AS "Score_1789-07-14T00:00:00.000000000", "DT_Output"."Proba_0" AS "Proba_1789-07-14T00:00:00.000000000", "DT_Output"."LogProba_0" AS "LogProba_1789-07-14T00:00:00.000000000", CAST(NULL AS FLOAT) AS "Score_1789-08-14T00:00:00.000000000", "DT_Output"."Proba_1" AS "Proba_1789-08-14T00:00:00.000000000", "DT_Output"."LogProba_1" AS "LogProba_1789-08-14T00:00:00.000000000", CAST(NULL AS FLOAT) AS "Score_1789-09-14T00:00:00.000000000", "DT_Output"."Proba_2" AS "Proba_1789-09-14T00:00:00.000000000", "DT_Output"."LogProba_2" AS "LogProba_1789-09-14T00:00:00.000000000" 
FROM "DT_Output"), 
"DT_node_lookup_1" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.5934344530105591) THEN 1 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.5877821445465088) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.6067700386047363) THEN 4 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.12393608689308167) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.6734480857849121) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.7047536373138428) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.3657625913619995) THEN 11 ELSE 12 END ELSE 13 END ELSE 14 END END END AS node_id_2 
FROM "TMP_20180417042508_4DAFDZ_ADS_S" AS "ADS_sca_2_OUT"), 
"DT_node_data_1" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values".threshold AS FLOAT) AS threshold, CAST("Values"."count" AS FLOAT) AS "count", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Proba_0" AS FLOAT) AS "Proba_0", CAST("Values"."LogProba_0" AS FLOAT) AS "LogProba_0", CAST("Values"."Proba_1" AS FLOAT) AS "Proba_1", CAST("Values"."LogProba_1" AS FLOAT) AS "LogProba_1", CAST("Values"."Proba_2" AS FLOAT) AS "Proba_2", CAST("Values"."LogProba_2" AS FLOAT) AS "LogProba_2", CAST("Values"."Decision" AS FLOAT) AS "Decision", CAST("Values"."DecisionProba" AS FLOAT) AS "DecisionProba" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 21 AS "count", 1 AS depth, 0 AS parent_id, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -1e+20 AS "LogProba_1", 0.0 AS "Proba_2", -1e+20 AS "LogProba_2", 0 AS "Decision", 1.0 AS "DecisionProba" FROM rdb$database UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS "count", 3 AS depth, 3 AS parent_id, 0.0 AS "Proba_0", -1e+20 AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 0.0 AS "Proba_2", -1e+20 AS "LogProba_2", 1 AS "Decision", 1.0 AS "DecisionProba" FROM rdb$database UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 4 AS depth, 5 AS parent_id, 0.0 AS "Proba_0", -1e+20 AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 0.0 AS "Proba_2", -1e+20 AS "LogProba_2", 1 AS "Decision", 1.0 AS "DecisionProba" FROM rdb$database UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 4 AS depth, 5 AS parent_id, 0.0 AS "Proba_0", -1e+20 AS "LogProba_0", 0.0 AS "Proba_1", -1e+20 AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 2 AS "Decision", 1.0 AS "DecisionProba" FROM rdb$database UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 10 AS parent_id, 0.0 AS "Proba_0", -1e+20 AS "LogProba_0", 0.0 AS "Proba_1", -1e+20 AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 2 AS "Decision", 1.0 AS "DecisionProba" FROM rdb$database UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 5 AS depth, 10 AS parent_id, 0.0 AS "Proba_0", -1e+20 AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 0.0 AS "Proba_2", -1e+20 AS "LogProba_2", 1 AS "Decision", 1.0 AS "DecisionProba" FROM rdb$database UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 4 AS depth, 9 AS parent_id, 0.0 AS "Proba_0", -1e+20 AS "LogProba_0", 0.0 AS "Proba_1", -1e+20 AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 2 AS "Decision", 1.0 AS "DecisionProba" FROM rdb$database UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 23 AS "count", 3 AS depth, 8 AS parent_id, 0.0 AS "Proba_0", -1e+20 AS "LogProba_0", 0.0 AS "Proba_1", -1e+20 AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 2 AS "Decision", 1.0 AS "DecisionProba" FROM rdb$database) AS "Values"), 
"DT_Output_1" AS 
(SELECT "DT_node_lookup_1"."KEY" AS "KEY", "DT_node_lookup_1".node_id_2 AS node_id_2, "DT_node_data_1".node_id AS node_id, "DT_node_data_1".feature AS feature, "DT_node_data_1".threshold AS threshold, "DT_node_data_1"."count" AS "count", "DT_node_data_1".depth AS depth, "DT_node_data_1".parent_id AS parent_id, "DT_node_data_1"."Proba_0" AS "Proba_0", "DT_node_data_1"."LogProba_0" AS "LogProba_0", "DT_node_data_1"."Proba_1" AS "Proba_1", "DT_node_data_1"."LogProba_1" AS "LogProba_1", "DT_node_data_1"."Proba_2" AS "Proba_2", "DT_node_data_1"."LogProba_2" AS "LogProba_2", "DT_node_data_1"."Decision" AS "Decision", "DT_node_data_1"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup_1" LEFT OUTER JOIN "DT_node_data_1" ON "DT_node_lookup_1".node_id_2 = "DT_node_data_1".node_id), 
"BAG_Model_1" AS 
(SELECT "DT_Output_1"."KEY" AS "KEY", CAST(NULL AS FLOAT) AS "Score_1789-07-14T00:00:00.000000000", "DT_Output_1"."Proba_0" AS "Proba_1789-07-14T00:00:00.000000000", "DT_Output_1"."LogProba_0" AS "LogProba_1789-07-14T00:00:00.000000000", CAST(NULL AS FLOAT) AS "Score_1789-08-14T00:00:00.000000000", "DT_Output_1"."Proba_1" AS "Proba_1789-08-14T00:00:00.000000000", "DT_Output_1"."LogProba_1" AS "LogProba_1789-08-14T00:00:00.000000000", CAST(NULL AS FLOAT) AS "Score_1789-09-14T00:00:00.000000000", "DT_Output_1"."Proba_2" AS "Proba_1789-09-14T00:00:00.000000000", "DT_Output_1"."LogProba_2" AS "LogProba_1789-09-14T00:00:00.000000000" 
FROM "DT_Output_1"), 
"DT_node_lookup_2" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.529296338558197) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.8158766627311707) THEN 2 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.5400919914245605) THEN 4 ELSE 5 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.273379921913147) THEN 7 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.6734480857849121) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.47341400384902954) THEN 10 ELSE 11 END ELSE 12 END END END AS node_id_2 
FROM "TMP_20180417042508_4DAFDZ_ADS_S" AS "ADS_sca_2_OUT"), 
"DT_node_data_2" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values".threshold AS FLOAT) AS threshold, CAST("Values"."count" AS FLOAT) AS "count", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Proba_0" AS FLOAT) AS "Proba_0", CAST("Values"."LogProba_0" AS FLOAT) AS "LogProba_0", CAST("Values"."Proba_1" AS FLOAT) AS "Proba_1", CAST("Values"."LogProba_1" AS FLOAT) AS "LogProba_1", CAST("Values"."Proba_2" AS FLOAT) AS "Proba_2", CAST("Values"."LogProba_2" AS FLOAT) AS "LogProba_2", CAST("Values"."Decision" AS FLOAT) AS "Decision", CAST("Values"."DecisionProba" AS FLOAT) AS "DecisionProba" 
FROM (SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 22 AS "count", 2 AS depth, 1 AS parent_id, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -1e+20 AS "LogProba_1", 0.0 AS "Proba_2", -1e+20 AS "LogProba_2", 0 AS "Decision", 1.0 AS "DecisionProba" FROM rdb$database UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 25 AS "count", 3 AS depth, 3 AS parent_id, 0.0 AS "Proba_0", -1e+20 AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 0.0 AS "Proba_2", -1e+20 AS "LogProba_2", 1 AS "Decision", 1.0 AS "DecisionProba" FROM rdb$database UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 3 AS depth, 3 AS parent_id, 0.0 AS "Proba_0", -1e+20 AS "LogProba_0", 0.0 AS "Proba_1", -1e+20 AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 2 AS "Decision", 1.0 AS "DecisionProba" FROM rdb$database UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 2 AS depth, 6 AS parent_id, 0.0 AS "Proba_0", -1e+20 AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 0.0 AS "Proba_2", -1e+20 AS "LogProba_2", 1 AS "Decision", 1.0 AS "DecisionProba" FROM rdb$database UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 4 AS depth, 9 AS parent_id, 0.0 AS "Proba_0", -1e+20 AS "LogProba_0", 0.0 AS "Proba_1", -1e+20 AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 2 AS "Decision", 1.0 AS "DecisionProba" FROM rdb$database UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 4 AS depth, 9 AS parent_id, 0.0 AS "Proba_0", -1e+20 AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 0.0 AS "Proba_2", -1e+20 AS "LogProba_2", 1 AS "Decision", 1.0 AS "DecisionProba" FROM rdb$database UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 22 AS "count", 3 AS depth, 8 AS parent_id, 0.0 AS "Proba_0", -1e+20 AS "LogProba_0", 0.0 AS "Proba_1", -1e+20 AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 2 AS "Decision", 1.0 AS "DecisionProba" FROM rdb$database) AS "Values"), 
"DT_Output_2" AS 
(SELECT "DT_node_lookup_2"."KEY" AS "KEY", "DT_node_lookup_2".node_id_2 AS node_id_2, "DT_node_data_2".node_id AS node_id, "DT_node_data_2".feature AS feature, "DT_node_data_2".threshold AS threshold, "DT_node_data_2"."count" AS "count", "DT_node_data_2".depth AS depth, "DT_node_data_2".parent_id AS parent_id, "DT_node_data_2"."Proba_0" AS "Proba_0", "DT_node_data_2"."LogProba_0" AS "LogProba_0", "DT_node_data_2"."Proba_1" AS "Proba_1", "DT_node_data_2"."LogProba_1" AS "LogProba_1", "DT_node_data_2"."Proba_2" AS "Proba_2", "DT_node_data_2"."LogProba_2" AS "LogProba_2", "DT_node_data_2"."Decision" AS "Decision", "DT_node_data_2"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup_2" LEFT OUTER JOIN "DT_node_data_2" ON "DT_node_lookup_2".node_id_2 = "DT_node_data_2".node_id), 
"BAG_Model_2" AS 
(SELECT "DT_Output_2"."KEY" AS "KEY", CAST(NULL AS FLOAT) AS "Score_1789-07-14T00:00:00.000000000", "DT_Output_2"."Proba_0" AS "Proba_1789-07-14T00:00:00.000000000", "DT_Output_2"."LogProba_0" AS "LogProba_1789-07-14T00:00:00.000000000", CAST(NULL AS FLOAT) AS "Score_1789-08-14T00:00:00.000000000", "DT_Output_2"."Proba_1" AS "Proba_1789-08-14T00:00:00.000000000", "DT_Output_2"."LogProba_1" AS "LogProba_1789-08-14T00:00:00.000000000", CAST(NULL AS FLOAT) AS "Score_1789-09-14T00:00:00.000000000", "DT_Output_2"."Proba_2" AS "Proba_1789-09-14T00:00:00.000000000", "DT_Output_2"."LogProba_2" AS "LogProba_1789-09-14T00:00:00.000000000" 
FROM "DT_Output_2"), 
"DT_node_lookup_3" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.8158766627311707) THEN 1 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.6734480857849121) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -1.0851964950561523) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -1.3447659015655518) THEN 5 ELSE 6 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -1.803208827972412) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.4201735854148865) THEN 9 ELSE 10 END ELSE 11 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.5877821445465088) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20180417042508_4DAFDZ_ADS_S" AS "ADS_sca_2_OUT"), 
"DT_node_data_3" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values".threshold AS FLOAT) AS threshold, CAST("Values"."count" AS FLOAT) AS "count", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Proba_0" AS FLOAT) AS "Proba_0", CAST("Values"."LogProba_0" AS FLOAT) AS "LogProba_0", CAST("Values"."Proba_1" AS FLOAT) AS "Proba_1", CAST("Values"."LogProba_1" AS FLOAT) AS "LogProba_1", CAST("Values"."Proba_2" AS FLOAT) AS "Proba_2", CAST("Values"."LogProba_2" AS FLOAT) AS "LogProba_2", CAST("Values"."Decision" AS FLOAT) AS "Decision", CAST("Values"."DecisionProba" AS FLOAT) AS "DecisionProba" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 25 AS "count", 1 AS depth, 0 AS parent_id, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -1e+20 AS "LogProba_1", 0.0 AS "Proba_2", -1e+20 AS "LogProba_2", 0 AS "Decision", 1.0 AS "DecisionProba" FROM rdb$database UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 4 AS depth, 4 AS parent_id, 0.0 AS "Proba_0", -1e+20 AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 0.0 AS "Proba_2", -1e+20 AS "LogProba_2", 1 AS "Decision", 1.0 AS "DecisionProba" FROM rdb$database UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 4 AS depth, 4 AS parent_id, 0.0 AS "Proba_0", -1e+20 AS "LogProba_0", 0.0 AS "Proba_1", -1e+20 AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 2 AS "Decision", 1.0 AS "DecisionProba" FROM rdb$database UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 8 AS parent_id, 0.0 AS "Proba_0", -1e+20 AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 0.0 AS "Proba_2", -1e+20 AS "LogProba_2", 1 AS "Decision", 1.0 AS "DecisionProba" FROM rdb$database UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 8 AS parent_id, 0.0 AS "Proba_0", -1e+20 AS "LogProba_0", 0.0 AS "Proba_1", -1e+20 AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 2 AS "Decision", 1.0 AS "DecisionProba" FROM rdb$database UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 24 AS "count", 4 AS depth, 7 AS parent_id, 0.0 AS "Proba_0", -1e+20 AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 0.0 AS "Proba_2", -1e+20 AS "LogProba_2", 1 AS "Decision", 1.0 AS "DecisionProba" FROM rdb$database UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 3 AS depth, 12 AS parent_id, 0.0 AS "Proba_0", -1e+20 AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 0.0 AS "Proba_2", -1e+20 AS "LogProba_2", 1 AS "Decision", 1.0 AS "DecisionProba" FROM rdb$database UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 23 AS "count", 3 AS depth, 12 AS parent_id, 0.0 AS "Proba_0", -1e+20 AS "LogProba_0", 0.0 AS "Proba_1", -1e+20 AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 2 AS "Decision", 1.0 AS "DecisionProba" FROM rdb$database) AS "Values"), 
"DT_Output_3" AS 
(SELECT "DT_node_lookup_3"."KEY" AS "KEY", "DT_node_lookup_3".node_id_2 AS node_id_2, "DT_node_data_3".node_id AS node_id, "DT_node_data_3".feature AS feature, "DT_node_data_3".threshold AS threshold, "DT_node_data_3"."count" AS "count", "DT_node_data_3".depth AS depth, "DT_node_data_3".parent_id AS parent_id, "DT_node_data_3"."Proba_0" AS "Proba_0", "DT_node_data_3"."LogProba_0" AS "LogProba_0", "DT_node_data_3"."Proba_1" AS "Proba_1", "DT_node_data_3"."LogProba_1" AS "LogProba_1", "DT_node_data_3"."Proba_2" AS "Proba_2", "DT_node_data_3"."LogProba_2" AS "LogProba_2", "DT_node_data_3"."Decision" AS "Decision", "DT_node_data_3"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup_3" LEFT OUTER JOIN "DT_node_data_3" ON "DT_node_lookup_3".node_id_2 = "DT_node_data_3".node_id), 
"BAG_Model_3" AS 
(SELECT "DT_Output_3"."KEY" AS "KEY", CAST(NULL AS FLOAT) AS "Score_1789-07-14T00:00:00.000000000", "DT_Output_3"."Proba_0" AS "Proba_1789-07-14T00:00:00.000000000", "DT_Output_3"."LogProba_0" AS "LogProba_1789-07-14T00:00:00.000000000", CAST(NULL AS FLOAT) AS "Score_1789-08-14T00:00:00.000000000", "DT_Output_3"."Proba_1" AS "Proba_1789-08-14T00:00:00.000000000", "DT_Output_3"."LogProba_1" AS "LogProba_1789-08-14T00:00:00.000000000", CAST(NULL AS FLOAT) AS "Score_1789-09-14T00:00:00.000000000", "DT_Output_3"."Proba_2" AS "Proba_1789-09-14T00:00:00.000000000", "DT_Output_3"."LogProba_2" AS "LogProba_1789-09-14T00:00:00.000000000" 
FROM "DT_Output_3"), 
"DT_node_lookup_4" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.5934344530105591) THEN 1 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.6462678909301758) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.6067700386047363) THEN 4 ELSE 5 END ELSE 6 END END AS node_id_2 
FROM "TMP_20180417042508_4DAFDZ_ADS_S" AS "ADS_sca_2_OUT"), 
"DT_node_data_4" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values".threshold AS FLOAT) AS threshold, CAST("Values"."count" AS FLOAT) AS "count", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Proba_0" AS FLOAT) AS "Proba_0", CAST("Values"."LogProba_0" AS FLOAT) AS "LogProba_0", CAST("Values"."Proba_1" AS FLOAT) AS "Proba_1", CAST("Values"."LogProba_1" AS FLOAT) AS "LogProba_1", CAST("Values"."Proba_2" AS FLOAT) AS "Proba_2", CAST("Values"."LogProba_2" AS FLOAT) AS "LogProba_2", CAST("Values"."Decision" AS FLOAT) AS "Decision", CAST("Values"."DecisionProba" AS FLOAT) AS "DecisionProba" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 24 AS "count", 1 AS depth, 0 AS parent_id, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -1e+20 AS "LogProba_1", 0.0 AS "Proba_2", -1e+20 AS "LogProba_2", 0 AS "Decision", 1.0 AS "DecisionProba" FROM rdb$database UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 22 AS "count", 3 AS depth, 3 AS parent_id, 0.0 AS "Proba_0", -1e+20 AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 0.0 AS "Proba_2", -1e+20 AS "LogProba_2", 1 AS "Decision", 1.0 AS "DecisionProba" FROM rdb$database UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 3 AS depth, 3 AS parent_id, 0.0 AS "Proba_0", -1e+20 AS "LogProba_0", 0.0 AS "Proba_1", -1e+20 AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 2 AS "Decision", 1.0 AS "DecisionProba" FROM rdb$database UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 26 AS "count", 2 AS depth, 2 AS parent_id, 0.0 AS "Proba_0", -1e+20 AS "LogProba_0", 0.0 AS "Proba_1", -1e+20 AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 2 AS "Decision", 1.0 AS "DecisionProba" FROM rdb$database) AS "Values"), 
"DT_Output_4" AS 
(SELECT "DT_node_lookup_4"."KEY" AS "KEY", "DT_node_lookup_4".node_id_2 AS node_id_2, "DT_node_data_4".node_id AS node_id, "DT_node_data_4".feature AS feature, "DT_node_data_4".threshold AS threshold, "DT_node_data_4"."count" AS "count", "DT_node_data_4".depth AS depth, "DT_node_data_4".parent_id AS parent_id, "DT_node_data_4"."Proba_0" AS "Proba_0", "DT_node_data_4"."LogProba_0" AS "LogProba_0", "DT_node_data_4"."Proba_1" AS "Proba_1", "DT_node_data_4"."LogProba_1" AS "LogProba_1", "DT_node_data_4"."Proba_2" AS "Proba_2", "DT_node_data_4"."LogProba_2" AS "LogProba_2", "DT_node_data_4"."Decision" AS "Decision", "DT_node_data_4"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup_4" LEFT OUTER JOIN "DT_node_data_4" ON "DT_node_lookup_4".node_id_2 = "DT_node_data_4".node_id), 
"BAG_Model_4" AS 
(SELECT "DT_Output_4"."KEY" AS "KEY", CAST(NULL AS FLOAT) AS "Score_1789-07-14T00:00:00.000000000", "DT_Output_4"."Proba_0" AS "Proba_1789-07-14T00:00:00.000000000", "DT_Output_4"."LogProba_0" AS "LogProba_1789-07-14T00:00:00.000000000", CAST(NULL AS FLOAT) AS "Score_1789-08-14T00:00:00.000000000", "DT_Output_4"."Proba_1" AS "Proba_1789-08-14T00:00:00.000000000", "DT_Output_4"."LogProba_1" AS "LogProba_1789-08-14T00:00:00.000000000", CAST(NULL AS FLOAT) AS "Score_1789-09-14T00:00:00.000000000", "DT_Output_4"."Proba_2" AS "Proba_1789-09-14T00:00:00.000000000", "DT_Output_4"."LogProba_2" AS "LogProba_1789-09-14T00:00:00.000000000" 
FROM "DT_Output_4"), 
"DT_node_lookup_5" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.529296338558197) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.5934344530105591) THEN 2 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.5400919914245605) THEN 4 ELSE 5 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.6462678909301758) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.5400920510292053) THEN 8 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.1451735943555832) THEN 10 ELSE 11 END END ELSE 12 END END AS node_id_2 
FROM "TMP_20180417042508_4DAFDZ_ADS_S" AS "ADS_sca_2_OUT"), 
"DT_node_data_5" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values".threshold AS FLOAT) AS threshold, CAST("Values"."count" AS FLOAT) AS "count", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Proba_0" AS FLOAT) AS "Proba_0", CAST("Values"."LogProba_0" AS FLOAT) AS "LogProba_0", CAST("Values"."Proba_1" AS FLOAT) AS "Proba_1", CAST("Values"."LogProba_1" AS FLOAT) AS "LogProba_1", CAST("Values"."Proba_2" AS FLOAT) AS "Proba_2", CAST("Values"."LogProba_2" AS FLOAT) AS "LogProba_2", CAST("Values"."Decision" AS FLOAT) AS "Decision", CAST("Values"."DecisionProba" AS FLOAT) AS "DecisionProba" 
FROM (SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 20 AS "count", 2 AS depth, 1 AS parent_id, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -1e+20 AS "LogProba_1", 0.0 AS "Proba_2", -1e+20 AS "LogProba_2", 0 AS "Decision", 1.0 AS "DecisionProba" FROM rdb$database UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 27 AS "count", 3 AS depth, 3 AS parent_id, 0.0 AS "Proba_0", -1e+20 AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 0.0 AS "Proba_2", -1e+20 AS "LogProba_2", 1 AS "Decision", 1.0 AS "DecisionProba" FROM rdb$database UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 3 AS depth, 3 AS parent_id, 0.0 AS "Proba_0", -1e+20 AS "LogProba_0", 0.0 AS "Proba_1", -1e+20 AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 2 AS "Decision", 1.0 AS "DecisionProba" FROM rdb$database UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 3 AS depth, 7 AS parent_id, 0.0 AS "Proba_0", -1e+20 AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 0.0 AS "Proba_2", -1e+20 AS "LogProba_2", 1 AS "Decision", 1.0 AS "DecisionProba" FROM rdb$database UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS "count", 4 AS depth, 9 AS parent_id, 0.0 AS "Proba_0", -1e+20 AS "LogProba_0", 0.0 AS "Proba_1", -1e+20 AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 2 AS "Decision", 1.0 AS "DecisionProba" FROM rdb$database UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 4 AS depth, 9 AS parent_id, 0.0 AS "Proba_0", -1e+20 AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 0.0 AS "Proba_2", -1e+20 AS "LogProba_2", 1 AS "Decision", 1.0 AS "DecisionProba" FROM rdb$database UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 25 AS "count", 2 AS depth, 6 AS parent_id, 0.0 AS "Proba_0", -1e+20 AS "LogProba_0", 0.0 AS "Proba_1", -1e+20 AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 2 AS "Decision", 1.0 AS "DecisionProba" FROM rdb$database) AS "Values"), 
"DT_Output_5" AS 
(SELECT "DT_node_lookup_5"."KEY" AS "KEY", "DT_node_lookup_5".node_id_2 AS node_id_2, "DT_node_data_5".node_id AS node_id, "DT_node_data_5".feature AS feature, "DT_node_data_5".threshold AS threshold, "DT_node_data_5"."count" AS "count", "DT_node_data_5".depth AS depth, "DT_node_data_5".parent_id AS parent_id, "DT_node_data_5"."Proba_0" AS "Proba_0", "DT_node_data_5"."LogProba_0" AS "LogProba_0", "DT_node_data_5"."Proba_1" AS "Proba_1", "DT_node_data_5"."LogProba_1" AS "LogProba_1", "DT_node_data_5"."Proba_2" AS "Proba_2", "DT_node_data_5"."LogProba_2" AS "LogProba_2", "DT_node_data_5"."Decision" AS "Decision", "DT_node_data_5"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup_5" LEFT OUTER JOIN "DT_node_data_5" ON "DT_node_lookup_5".node_id_2 = "DT_node_data_5".node_id), 
"BAG_Model_5" AS 
(SELECT "DT_Output_5"."KEY" AS "KEY", CAST(NULL AS FLOAT) AS "Score_1789-07-14T00:00:00.000000000", "DT_Output_5"."Proba_0" AS "Proba_1789-07-14T00:00:00.000000000", "DT_Output_5"."LogProba_0" AS "LogProba_1789-07-14T00:00:00.000000000", CAST(NULL AS FLOAT) AS "Score_1789-08-14T00:00:00.000000000", "DT_Output_5"."Proba_1" AS "Proba_1789-08-14T00:00:00.000000000", "DT_Output_5"."LogProba_1" AS "LogProba_1789-08-14T00:00:00.000000000", CAST(NULL AS FLOAT) AS "Score_1789-09-14T00:00:00.000000000", "DT_Output_5"."Proba_2" AS "Proba_1789-09-14T00:00:00.000000000", "DT_Output_5"."LogProba_2" AS "LogProba_1789-09-14T00:00:00.000000000" 
FROM "DT_Output_5"), 
"DT_node_lookup_6" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.8158766627311707) THEN 1 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.40673595666885376) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.6755107641220093) THEN 4 ELSE 5 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.5877821445465088) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.1451735943555832) THEN 8 ELSE 9 END ELSE 10 END END END AS node_id_2 
FROM "TMP_20180417042508_4DAFDZ_ADS_S" AS "ADS_sca_2_OUT"), 
"DT_node_data_6" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values".threshold AS FLOAT) AS threshold, CAST("Values"."count" AS FLOAT) AS "count", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Proba_0" AS FLOAT) AS "Proba_0", CAST("Values"."LogProba_0" AS FLOAT) AS "LogProba_0", CAST("Values"."Proba_1" AS FLOAT) AS "Proba_1", CAST("Values"."LogProba_1" AS FLOAT) AS "LogProba_1", CAST("Values"."Proba_2" AS FLOAT) AS "Proba_2", CAST("Values"."LogProba_2" AS FLOAT) AS "LogProba_2", CAST("Values"."Decision" AS FLOAT) AS "Decision", CAST("Values"."DecisionProba" AS FLOAT) AS "DecisionProba" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS "count", 1 AS depth, 0 AS parent_id, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -1e+20 AS "LogProba_1", 0.0 AS "Proba_2", -1e+20 AS "LogProba_2", 0 AS "Decision", 1.0 AS "DecisionProba" FROM rdb$database UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 28 AS "count", 3 AS depth, 3 AS parent_id, 0.0 AS "Proba_0", -1e+20 AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 0.0 AS "Proba_2", -1e+20 AS "LogProba_2", 1 AS "Decision", 1.0 AS "DecisionProba" FROM rdb$database UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 3 AS depth, 3 AS parent_id, 0.0 AS "Proba_0", -1e+20 AS "LogProba_0", 0.0 AS "Proba_1", -1e+20 AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 2 AS "Decision", 1.0 AS "DecisionProba" FROM rdb$database UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 4 AS depth, 7 AS parent_id, 0.0 AS "Proba_0", -1e+20 AS "LogProba_0", 0.0 AS "Proba_1", -1e+20 AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 2 AS "Decision", 1.0 AS "DecisionProba" FROM rdb$database UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 4 AS depth, 7 AS parent_id, 0.0 AS "Proba_0", -1e+20 AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 0.0 AS "Proba_2", -1e+20 AS "LogProba_2", 1 AS "Decision", 1.0 AS "DecisionProba" FROM rdb$database UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 24 AS "count", 3 AS depth, 6 AS parent_id, 0.0 AS "Proba_0", -1e+20 AS "LogProba_0", 0.0 AS "Proba_1", -1e+20 AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 2 AS "Decision", 1.0 AS "DecisionProba" FROM rdb$database) AS "Values"), 
"DT_Output_6" AS 
(SELECT "DT_node_lookup_6"."KEY" AS "KEY", "DT_node_lookup_6".node_id_2 AS node_id_2, "DT_node_data_6".node_id AS node_id, "DT_node_data_6".feature AS feature, "DT_node_data_6".threshold AS threshold, "DT_node_data_6"."count" AS "count", "DT_node_data_6".depth AS depth, "DT_node_data_6".parent_id AS parent_id, "DT_node_data_6"."Proba_0" AS "Proba_0", "DT_node_data_6"."LogProba_0" AS "LogProba_0", "DT_node_data_6"."Proba_1" AS "Proba_1", "DT_node_data_6"."LogProba_1" AS "LogProba_1", "DT_node_data_6"."Proba_2" AS "Proba_2", "DT_node_data_6"."LogProba_2" AS "LogProba_2", "DT_node_data_6"."Decision" AS "Decision", "DT_node_data_6"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup_6" LEFT OUTER JOIN "DT_node_data_6" ON "DT_node_lookup_6".node_id_2 = "DT_node_data_6".node_id), 
"BAG_Model_6" AS 
(SELECT "DT_Output_6"."KEY" AS "KEY", CAST(NULL AS FLOAT) AS "Score_1789-07-14T00:00:00.000000000", "DT_Output_6"."Proba_0" AS "Proba_1789-07-14T00:00:00.000000000", "DT_Output_6"."LogProba_0" AS "LogProba_1789-07-14T00:00:00.000000000", CAST(NULL AS FLOAT) AS "Score_1789-08-14T00:00:00.000000000", "DT_Output_6"."Proba_1" AS "Proba_1789-08-14T00:00:00.000000000", "DT_Output_6"."LogProba_1" AS "LogProba_1789-08-14T00:00:00.000000000", CAST(NULL AS FLOAT) AS "Score_1789-09-14T00:00:00.000000000", "DT_Output_6"."Proba_2" AS "Proba_1789-09-14T00:00:00.000000000", "DT_Output_6"."LogProba_2" AS "LogProba_1789-09-14T00:00:00.000000000" 
FROM "DT_Output_6"), 
"DT_node_lookup_7" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.5934344530105591) THEN 1 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.5877821445465088) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.5400919914245605) THEN 4 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.1451735943555832) THEN 6 ELSE 7 END END ELSE 8 END END AS node_id_2 
FROM "TMP_20180417042508_4DAFDZ_ADS_S" AS "ADS_sca_2_OUT"), 
"DT_node_data_7" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values".threshold AS FLOAT) AS threshold, CAST("Values"."count" AS FLOAT) AS "count", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Proba_0" AS FLOAT) AS "Proba_0", CAST("Values"."LogProba_0" AS FLOAT) AS "LogProba_0", CAST("Values"."Proba_1" AS FLOAT) AS "Proba_1", CAST("Values"."LogProba_1" AS FLOAT) AS "LogProba_1", CAST("Values"."Proba_2" AS FLOAT) AS "Proba_2", CAST("Values"."LogProba_2" AS FLOAT) AS "LogProba_2", CAST("Values"."Decision" AS FLOAT) AS "Decision", CAST("Values"."DecisionProba" AS FLOAT) AS "DecisionProba" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 27 AS "count", 1 AS depth, 0 AS parent_id, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -1e+20 AS "LogProba_1", 0.0 AS "Proba_2", -1e+20 AS "LogProba_2", 0 AS "Decision", 1.0 AS "DecisionProba" FROM rdb$database UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 25 AS "count", 3 AS depth, 3 AS parent_id, 0.0 AS "Proba_0", -1e+20 AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 0.0 AS "Proba_2", -1e+20 AS "LogProba_2", 1 AS "Decision", 1.0 AS "DecisionProba" FROM rdb$database UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 4 AS depth, 5 AS parent_id, 0.0 AS "Proba_0", -1e+20 AS "LogProba_0", 0.0 AS "Proba_1", -1e+20 AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 2 AS "Decision", 1.0 AS "DecisionProba" FROM rdb$database UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 4 AS depth, 5 AS parent_id, 0.0 AS "Proba_0", -1e+20 AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 0.0 AS "Proba_2", -1e+20 AS "LogProba_2", 1 AS "Decision", 1.0 AS "DecisionProba" FROM rdb$database UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 27 AS "count", 2 AS depth, 2 AS parent_id, 0.0 AS "Proba_0", -1e+20 AS "LogProba_0", 0.0 AS "Proba_1", -1e+20 AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 2 AS "Decision", 1.0 AS "DecisionProba" FROM rdb$database) AS "Values"), 
"DT_Output_7" AS 
(SELECT "DT_node_lookup_7"."KEY" AS "KEY", "DT_node_lookup_7".node_id_2 AS node_id_2, "DT_node_data_7".node_id AS node_id, "DT_node_data_7".feature AS feature, "DT_node_data_7".threshold AS threshold, "DT_node_data_7"."count" AS "count", "DT_node_data_7".depth AS depth, "DT_node_data_7".parent_id AS parent_id, "DT_node_data_7"."Proba_0" AS "Proba_0", "DT_node_data_7"."LogProba_0" AS "LogProba_0", "DT_node_data_7"."Proba_1" AS "Proba_1", "DT_node_data_7"."LogProba_1" AS "LogProba_1", "DT_node_data_7"."Proba_2" AS "Proba_2", "DT_node_data_7"."LogProba_2" AS "LogProba_2", "DT_node_data_7"."Decision" AS "Decision", "DT_node_data_7"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup_7" LEFT OUTER JOIN "DT_node_data_7" ON "DT_node_lookup_7".node_id_2 = "DT_node_data_7".node_id), 
"BAG_Model_7" AS 
(SELECT "DT_Output_7"."KEY" AS "KEY", CAST(NULL AS FLOAT) AS "Score_1789-07-14T00:00:00.000000000", "DT_Output_7"."Proba_0" AS "Proba_1789-07-14T00:00:00.000000000", "DT_Output_7"."LogProba_0" AS "LogProba_1789-07-14T00:00:00.000000000", CAST(NULL AS FLOAT) AS "Score_1789-08-14T00:00:00.000000000", "DT_Output_7"."Proba_1" AS "Proba_1789-08-14T00:00:00.000000000", "DT_Output_7"."LogProba_1" AS "LogProba_1789-08-14T00:00:00.000000000", CAST(NULL AS FLOAT) AS "Score_1789-09-14T00:00:00.000000000", "DT_Output_7"."Proba_2" AS "Proba_1789-09-14T00:00:00.000000000", "DT_Output_7"."LogProba_2" AS "LogProba_1789-09-14T00:00:00.000000000" 
FROM "DT_Output_7"), 
"DT_node_lookup_8" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.5877821445465088) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.7267905473709106) THEN 2 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -1.0851964950561523) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.03216718137264252) THEN 5 ELSE 6 END ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.40673595666885376) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.90987229347229) THEN 10 ELSE 11 END ELSE 12 END END AS node_id_2 
FROM "TMP_20180417042508_4DAFDZ_ADS_S" AS "ADS_sca_2_OUT"), 
"DT_node_data_8" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values".threshold AS FLOAT) AS threshold, CAST("Values"."count" AS FLOAT) AS "count", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Proba_0" AS FLOAT) AS "Proba_0", CAST("Values"."LogProba_0" AS FLOAT) AS "LogProba_0", CAST("Values"."Proba_1" AS FLOAT) AS "Proba_1", CAST("Values"."LogProba_1" AS FLOAT) AS "LogProba_1", CAST("Values"."Proba_2" AS FLOAT) AS "Proba_2", CAST("Values"."LogProba_2" AS FLOAT) AS "LogProba_2", CAST("Values"."Decision" AS FLOAT) AS "Decision", CAST("Values"."DecisionProba" AS FLOAT) AS "DecisionProba" 
FROM (SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS "count", 2 AS depth, 1 AS parent_id, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -1e+20 AS "LogProba_1", 0.0 AS "Proba_2", -1e+20 AS "LogProba_2", 0 AS "Decision", 1.0 AS "DecisionProba" FROM rdb$database UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 4 AS depth, 4 AS parent_id, 0.0 AS "Proba_0", -1e+20 AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 0.0 AS "Proba_2", -1e+20 AS "LogProba_2", 1 AS "Decision", 1.0 AS "DecisionProba" FROM rdb$database UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 4 AS depth, 4 AS parent_id, 0.0 AS "Proba_0", -1e+20 AS "LogProba_0", 0.0 AS "Proba_1", -1e+20 AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 2 AS "Decision", 1.0 AS "DecisionProba" FROM rdb$database UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 22 AS "count", 3 AS depth, 3 AS parent_id, 0.0 AS "Proba_0", -1e+20 AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 0.0 AS "Proba_2", -1e+20 AS "LogProba_2", 1 AS "Decision", 1.0 AS "DecisionProba" FROM rdb$database UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS "count", 3 AS depth, 9 AS parent_id, 0.0 AS "Proba_0", -1e+20 AS "LogProba_0", 0.0 AS "Proba_1", -1e+20 AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 2 AS "Decision", 1.0 AS "DecisionProba" FROM rdb$database UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 3 AS depth, 9 AS parent_id, 0.0 AS "Proba_0", -1e+20 AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 0.0 AS "Proba_2", -1e+20 AS "LogProba_2", 1 AS "Decision", 1.0 AS "DecisionProba" FROM rdb$database UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 29 AS "count", 2 AS depth, 8 AS parent_id, 0.0 AS "Proba_0", -1e+20 AS "LogProba_0", 0.0 AS "Proba_1", -1e+20 AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 2 AS "Decision", 1.0 AS "DecisionProba" FROM rdb$database) AS "Values"), 
"DT_Output_8" AS 
(SELECT "DT_node_lookup_8"."KEY" AS "KEY", "DT_node_lookup_8".node_id_2 AS node_id_2, "DT_node_data_8".node_id AS node_id, "DT_node_data_8".feature AS feature, "DT_node_data_8".threshold AS threshold, "DT_node_data_8"."count" AS "count", "DT_node_data_8".depth AS depth, "DT_node_data_8".parent_id AS parent_id, "DT_node_data_8"."Proba_0" AS "Proba_0", "DT_node_data_8"."LogProba_0" AS "LogProba_0", "DT_node_data_8"."Proba_1" AS "Proba_1", "DT_node_data_8"."LogProba_1" AS "LogProba_1", "DT_node_data_8"."Proba_2" AS "Proba_2", "DT_node_data_8"."LogProba_2" AS "LogProba_2", "DT_node_data_8"."Decision" AS "Decision", "DT_node_data_8"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup_8" LEFT OUTER JOIN "DT_node_data_8" ON "DT_node_lookup_8".node_id_2 = "DT_node_data_8".node_id), 
"BAG_Model_8" AS 
(SELECT "DT_Output_8"."KEY" AS "KEY", CAST(NULL AS FLOAT) AS "Score_1789-07-14T00:00:00.000000000", "DT_Output_8"."Proba_0" AS "Proba_1789-07-14T00:00:00.000000000", "DT_Output_8"."LogProba_0" AS "LogProba_1789-07-14T00:00:00.000000000", CAST(NULL AS FLOAT) AS "Score_1789-08-14T00:00:00.000000000", "DT_Output_8"."Proba_1" AS "Proba_1789-08-14T00:00:00.000000000", "DT_Output_8"."LogProba_1" AS "LogProba_1789-08-14T00:00:00.000000000", CAST(NULL AS FLOAT) AS "Score_1789-09-14T00:00:00.000000000", "DT_Output_8"."Proba_2" AS "Proba_1789-09-14T00:00:00.000000000", "DT_Output_8"."LogProba_2" AS "LogProba_1789-09-14T00:00:00.000000000" 
FROM "DT_Output_8"), 
"DT_node_lookup_9" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.7281479835510254) THEN 1 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.40673595666885376) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.6462678909301758) THEN 4 ELSE 5 END ELSE 6 END END AS node_id_2 
FROM "TMP_20180417042508_4DAFDZ_ADS_S" AS "ADS_sca_2_OUT"), 
"DT_node_data_9" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values".threshold AS FLOAT) AS threshold, CAST("Values"."count" AS FLOAT) AS "count", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Proba_0" AS FLOAT) AS "Proba_0", CAST("Values"."LogProba_0" AS FLOAT) AS "LogProba_0", CAST("Values"."Proba_1" AS FLOAT) AS "Proba_1", CAST("Values"."LogProba_1" AS FLOAT) AS "LogProba_1", CAST("Values"."Proba_2" AS FLOAT) AS "Proba_2", CAST("Values"."LogProba_2" AS FLOAT) AS "LogProba_2", CAST("Values"."Decision" AS FLOAT) AS "Decision", CAST("Values"."DecisionProba" AS FLOAT) AS "DecisionProba" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 23 AS "count", 1 AS depth, 0 AS parent_id, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -1e+20 AS "LogProba_1", 0.0 AS "Proba_2", -1e+20 AS "LogProba_2", 0 AS "Decision", 1.0 AS "DecisionProba" FROM rdb$database UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 25 AS "count", 3 AS depth, 3 AS parent_id, 0.0 AS "Proba_0", -1e+20 AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 0.0 AS "Proba_2", -1e+20 AS "LogProba_2", 1 AS "Decision", 1.0 AS "DecisionProba" FROM rdb$database UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 3 AS depth, 3 AS parent_id, 0.0 AS "Proba_0", -1e+20 AS "LogProba_0", 0.0 AS "Proba_1", -1e+20 AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 2 AS "Decision", 1.0 AS "DecisionProba" FROM rdb$database UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 26 AS "count", 2 AS depth, 2 AS parent_id, 0.0 AS "Proba_0", -1e+20 AS "LogProba_0", 0.0 AS "Proba_1", -1e+20 AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 2 AS "Decision", 1.0 AS "DecisionProba" FROM rdb$database) AS "Values"), 
"DT_Output_9" AS 
(SELECT "DT_node_lookup_9"."KEY" AS "KEY", "DT_node_lookup_9".node_id_2 AS node_id_2, "DT_node_data_9".node_id AS node_id, "DT_node_data_9".feature AS feature, "DT_node_data_9".threshold AS threshold, "DT_node_data_9"."count" AS "count", "DT_node_data_9".depth AS depth, "DT_node_data_9".parent_id AS parent_id, "DT_node_data_9"."Proba_0" AS "Proba_0", "DT_node_data_9"."LogProba_0" AS "LogProba_0", "DT_node_data_9"."Proba_1" AS "Proba_1", "DT_node_data_9"."LogProba_1" AS "LogProba_1", "DT_node_data_9"."Proba_2" AS "Proba_2", "DT_node_data_9"."LogProba_2" AS "LogProba_2", "DT_node_data_9"."Decision" AS "Decision", "DT_node_data_9"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup_9" LEFT OUTER JOIN "DT_node_data_9" ON "DT_node_lookup_9".node_id_2 = "DT_node_data_9".node_id), 
"BAG_Model_9" AS 
(SELECT "DT_Output_9"."KEY" AS "KEY", CAST(NULL AS FLOAT) AS "Score_1789-07-14T00:00:00.000000000", "DT_Output_9"."Proba_0" AS "Proba_1789-07-14T00:00:00.000000000", "DT_Output_9"."LogProba_0" AS "LogProba_1789-07-14T00:00:00.000000000", CAST(NULL AS FLOAT) AS "Score_1789-08-14T00:00:00.000000000", "DT_Output_9"."Proba_1" AS "Proba_1789-08-14T00:00:00.000000000", "DT_Output_9"."LogProba_1" AS "LogProba_1789-08-14T00:00:00.000000000", CAST(NULL AS FLOAT) AS "Score_1789-09-14T00:00:00.000000000", "DT_Output_9"."Proba_2" AS "Proba_1789-09-14T00:00:00.000000000", "DT_Output_9"."LogProba_2" AS "LogProba_1789-09-14T00:00:00.000000000" 
FROM "DT_Output_9")
 SELECT "BAG_B0"."KEY", "BAG_B0"."Score_1789-07-14T00:00:00_1", "BAG_B0"."Proba_1789-07-14T00:00:00_2", "BAG_B0"."LogProba_1789-07-14T00:00_3", "BAG_B0"."Score_1789-08-14T00:00:00_4", "BAG_B0"."Proba_1789-08-14T00:00:00_5", "BAG_B0"."LogProba_1789-08-14T00:00_6", "BAG_B0"."Score_1789-09-14T00:00:00_7", "BAG_B0"."Proba_1789-09-14T00:00:00_8", "BAG_B0"."LogProba_1789-09-14T00:00_9" 
FROM (SELECT "BAG_esu_0"."KEY" AS "KEY", "BAG_esu_0"."Score_1789-07-14T00:00:00.000000000" AS "Score_1789-07-14T00:00:00_1", "BAG_esu_0"."Proba_1789-07-14T00:00:00.000000000" AS "Proba_1789-07-14T00:00:00_2", "BAG_esu_0"."LogProba_1789-07-14T00:00:00.000000000" AS "LogProba_1789-07-14T00:00_3", "BAG_esu_0"."Score_1789-08-14T00:00:00.000000000" AS "Score_1789-08-14T00:00:00_4", "BAG_esu_0"."Proba_1789-08-14T00:00:00.000000000" AS "Proba_1789-08-14T00:00:00_5", "BAG_esu_0"."LogProba_1789-08-14T00:00:00.000000000" AS "LogProba_1789-08-14T00:00_6", "BAG_esu_0"."Score_1789-09-14T00:00:00.000000000" AS "Score_1789-09-14T00:00:00_7", "BAG_esu_0"."Proba_1789-09-14T00:00:00.000000000" AS "Proba_1789-09-14T00:00:00_8", "BAG_esu_0"."LogProba_1789-09-14T00:00:00.000000000" AS "LogProba_1789-09-14T00:00_9" 
FROM (SELECT "BAG_Model_0"."KEY" AS "KEY", "BAG_Model_0"."Score_1789-07-14T00:00:00.000000000" AS "Score_1789-07-14T00:00:00.000000000", "BAG_Model_0"."Proba_1789-07-14T00:00:00.000000000" AS "Proba_1789-07-14T00:00:00.000000000", "BAG_Model_0"."LogProba_1789-07-14T00:00:00.000000000" AS "LogProba_1789-07-14T00:00:00.000000000", "BAG_Model_0"."Score_1789-08-14T00:00:00.000000000" AS "Score_1789-08-14T00:00:00.000000000", "BAG_Model_0"."Proba_1789-08-14T00:00:00.000000000" AS "Proba_1789-08-14T00:00:00.000000000", "BAG_Model_0"."LogProba_1789-08-14T00:00:00.000000000" AS "LogProba_1789-08-14T00:00:00.000000000", "BAG_Model_0"."Score_1789-09-14T00:00:00.000000000" AS "Score_1789-09-14T00:00:00.000000000", "BAG_Model_0"."Proba_1789-09-14T00:00:00.000000000" AS "Proba_1789-09-14T00:00:00.000000000", "BAG_Model_0"."LogProba_1789-09-14T00:00:00.000000000" AS "LogProba_1789-09-14T00:00:00.000000000" 
FROM "BAG_Model_0" UNION ALL SELECT "BAG_Model_1"."KEY" AS "KEY", "BAG_Model_1"."Score_1789-07-14T00:00:00.000000000" AS "Score_1789-07-14T00:00:00.000000000", "BAG_Model_1"."Proba_1789-07-14T00:00:00.000000000" AS "Proba_1789-07-14T00:00:00.000000000", "BAG_Model_1"."LogProba_1789-07-14T00:00:00.000000000" AS "LogProba_1789-07-14T00:00:00.000000000", "BAG_Model_1"."Score_1789-08-14T00:00:00.000000000" AS "Score_1789-08-14T00:00:00.000000000", "BAG_Model_1"."Proba_1789-08-14T00:00:00.000000000" AS "Proba_1789-08-14T00:00:00.000000000", "BAG_Model_1"."LogProba_1789-08-14T00:00:00.000000000" AS "LogProba_1789-08-14T00:00:00.000000000", "BAG_Model_1"."Score_1789-09-14T00:00:00.000000000" AS "Score_1789-09-14T00:00:00.000000000", "BAG_Model_1"."Proba_1789-09-14T00:00:00.000000000" AS "Proba_1789-09-14T00:00:00.000000000", "BAG_Model_1"."LogProba_1789-09-14T00:00:00.000000000" AS "LogProba_1789-09-14T00:00:00.000000000" 
FROM "BAG_Model_1" UNION ALL SELECT "BAG_Model_2"."KEY" AS "KEY", "BAG_Model_2"."Score_1789-07-14T00:00:00.000000000" AS "Score_1789-07-14T00:00:00.000000000", "BAG_Model_2"."Proba_1789-07-14T00:00:00.000000000" AS "Proba_1789-07-14T00:00:00.000000000", "BAG_Model_2"."LogProba_1789-07-14T00:00:00.000000000" AS "LogProba_1789-07-14T00:00:00.000000000", "BAG_Model_2"."Score_1789-08-14T00:00:00.000000000" AS "Score_1789-08-14T00:00:00.000000000", "BAG_Model_2"."Proba_1789-08-14T00:00:00.000000000" AS "Proba_1789-08-14T00:00:00.000000000", "BAG_Model_2"."LogProba_1789-08-14T00:00:00.000000000" AS "LogProba_1789-08-14T00:00:00.000000000", "BAG_Model_2"."Score_1789-09-14T00:00:00.000000000" AS "Score_1789-09-14T00:00:00.000000000", "BAG_Model_2"."Proba_1789-09-14T00:00:00.000000000" AS "Proba_1789-09-14T00:00:00.000000000", "BAG_Model_2"."LogProba_1789-09-14T00:00:00.000000000" AS "LogProba_1789-09-14T00:00:00.000000000" 
FROM "BAG_Model_2" UNION ALL SELECT "BAG_Model_3"."KEY" AS "KEY", "BAG_Model_3"."Score_1789-07-14T00:00:00.000000000" AS "Score_1789-07-14T00:00:00.000000000", "BAG_Model_3"."Proba_1789-07-14T00:00:00.000000000" AS "Proba_1789-07-14T00:00:00.000000000", "BAG_Model_3"."LogProba_1789-07-14T00:00:00.000000000" AS "LogProba_1789-07-14T00:00:00.000000000", "BAG_Model_3"."Score_1789-08-14T00:00:00.000000000" AS "Score_1789-08-14T00:00:00.000000000", "BAG_Model_3"."Proba_1789-08-14T00:00:00.000000000" AS "Proba_1789-08-14T00:00:00.000000000", "BAG_Model_3"."LogProba_1789-08-14T00:00:00.000000000" AS "LogProba_1789-08-14T00:00:00.000000000", "BAG_Model_3"."Score_1789-09-14T00:00:00.000000000" AS "Score_1789-09-14T00:00:00.000000000", "BAG_Model_3"."Proba_1789-09-14T00:00:00.000000000" AS "Proba_1789-09-14T00:00:00.000000000", "BAG_Model_3"."LogProba_1789-09-14T00:00:00.000000000" AS "LogProba_1789-09-14T00:00:00.000000000" 
FROM "BAG_Model_3" UNION ALL SELECT "BAG_Model_4"."KEY" AS "KEY", "BAG_Model_4"."Score_1789-07-14T00:00:00.000000000" AS "Score_1789-07-14T00:00:00.000000000", "BAG_Model_4"."Proba_1789-07-14T00:00:00.000000000" AS "Proba_1789-07-14T00:00:00.000000000", "BAG_Model_4"."LogProba_1789-07-14T00:00:00.000000000" AS "LogProba_1789-07-14T00:00:00.000000000", "BAG_Model_4"."Score_1789-08-14T00:00:00.000000000" AS "Score_1789-08-14T00:00:00.000000000", "BAG_Model_4"."Proba_1789-08-14T00:00:00.000000000" AS "Proba_1789-08-14T00:00:00.000000000", "BAG_Model_4"."LogProba_1789-08-14T00:00:00.000000000" AS "LogProba_1789-08-14T00:00:00.000000000", "BAG_Model_4"."Score_1789-09-14T00:00:00.000000000" AS "Score_1789-09-14T00:00:00.000000000", "BAG_Model_4"."Proba_1789-09-14T00:00:00.000000000" AS "Proba_1789-09-14T00:00:00.000000000", "BAG_Model_4"."LogProba_1789-09-14T00:00:00.000000000" AS "LogProba_1789-09-14T00:00:00.000000000" 
FROM "BAG_Model_4" UNION ALL SELECT "BAG_Model_5"."KEY" AS "KEY", "BAG_Model_5"."Score_1789-07-14T00:00:00.000000000" AS "Score_1789-07-14T00:00:00.000000000", "BAG_Model_5"."Proba_1789-07-14T00:00:00.000000000" AS "Proba_1789-07-14T00:00:00.000000000", "BAG_Model_5"."LogProba_1789-07-14T00:00:00.000000000" AS "LogProba_1789-07-14T00:00:00.000000000", "BAG_Model_5"."Score_1789-08-14T00:00:00.000000000" AS "Score_1789-08-14T00:00:00.000000000", "BAG_Model_5"."Proba_1789-08-14T00:00:00.000000000" AS "Proba_1789-08-14T00:00:00.000000000", "BAG_Model_5"."LogProba_1789-08-14T00:00:00.000000000" AS "LogProba_1789-08-14T00:00:00.000000000", "BAG_Model_5"."Score_1789-09-14T00:00:00.000000000" AS "Score_1789-09-14T00:00:00.000000000", "BAG_Model_5"."Proba_1789-09-14T00:00:00.000000000" AS "Proba_1789-09-14T00:00:00.000000000", "BAG_Model_5"."LogProba_1789-09-14T00:00:00.000000000" AS "LogProba_1789-09-14T00:00:00.000000000" 
FROM "BAG_Model_5" UNION ALL SELECT "BAG_Model_6"."KEY" AS "KEY", "BAG_Model_6"."Score_1789-07-14T00:00:00.000000000" AS "Score_1789-07-14T00:00:00.000000000", "BAG_Model_6"."Proba_1789-07-14T00:00:00.000000000" AS "Proba_1789-07-14T00:00:00.000000000", "BAG_Model_6"."LogProba_1789-07-14T00:00:00.000000000" AS "LogProba_1789-07-14T00:00:00.000000000", "BAG_Model_6"."Score_1789-08-14T00:00:00.000000000" AS "Score_1789-08-14T00:00:00.000000000", "BAG_Model_6"."Proba_1789-08-14T00:00:00.000000000" AS "Proba_1789-08-14T00:00:00.000000000", "BAG_Model_6"."LogProba_1789-08-14T00:00:00.000000000" AS "LogProba_1789-08-14T00:00:00.000000000", "BAG_Model_6"."Score_1789-09-14T00:00:00.000000000" AS "Score_1789-09-14T00:00:00.000000000", "BAG_Model_6"."Proba_1789-09-14T00:00:00.000000000" AS "Proba_1789-09-14T00:00:00.000000000", "BAG_Model_6"."LogProba_1789-09-14T00:00:00.000000000" AS "LogProba_1789-09-14T00:00:00.000000000" 
FROM "BAG_Model_6" UNION ALL SELECT "BAG_Model_7"."KEY" AS "KEY", "BAG_Model_7"."Score_1789-07-14T00:00:00.000000000" AS "Score_1789-07-14T00:00:00.000000000", "BAG_Model_7"."Proba_1789-07-14T00:00:00.000000000" AS "Proba_1789-07-14T00:00:00.000000000", "BAG_Model_7"."LogProba_1789-07-14T00:00:00.000000000" AS "LogProba_1789-07-14T00:00:00.000000000", "BAG_Model_7"."Score_1789-08-14T00:00:00.000000000" AS "Score_1789-08-14T00:00:00.000000000", "BAG_Model_7"."Proba_1789-08-14T00:00:00.000000000" AS "Proba_1789-08-14T00:00:00.000000000", "BAG_Model_7"."LogProba_1789-08-14T00:00:00.000000000" AS "LogProba_1789-08-14T00:00:00.000000000", "BAG_Model_7"."Score_1789-09-14T00:00:00.000000000" AS "Score_1789-09-14T00:00:00.000000000", "BAG_Model_7"."Proba_1789-09-14T00:00:00.000000000" AS "Proba_1789-09-14T00:00:00.000000000", "BAG_Model_7"."LogProba_1789-09-14T00:00:00.000000000" AS "LogProba_1789-09-14T00:00:00.000000000" 
FROM "BAG_Model_7" UNION ALL SELECT "BAG_Model_8"."KEY" AS "KEY", "BAG_Model_8"."Score_1789-07-14T00:00:00.000000000" AS "Score_1789-07-14T00:00:00.000000000", "BAG_Model_8"."Proba_1789-07-14T00:00:00.000000000" AS "Proba_1789-07-14T00:00:00.000000000", "BAG_Model_8"."LogProba_1789-07-14T00:00:00.000000000" AS "LogProba_1789-07-14T00:00:00.000000000", "BAG_Model_8"."Score_1789-08-14T00:00:00.000000000" AS "Score_1789-08-14T00:00:00.000000000", "BAG_Model_8"."Proba_1789-08-14T00:00:00.000000000" AS "Proba_1789-08-14T00:00:00.000000000", "BAG_Model_8"."LogProba_1789-08-14T00:00:00.000000000" AS "LogProba_1789-08-14T00:00:00.000000000", "BAG_Model_8"."Score_1789-09-14T00:00:00.000000000" AS "Score_1789-09-14T00:00:00.000000000", "BAG_Model_8"."Proba_1789-09-14T00:00:00.000000000" AS "Proba_1789-09-14T00:00:00.000000000", "BAG_Model_8"."LogProba_1789-09-14T00:00:00.000000000" AS "LogProba_1789-09-14T00:00:00.000000000" 
FROM "BAG_Model_8" UNION ALL SELECT "BAG_Model_9"."KEY" AS "KEY", "BAG_Model_9"."Score_1789-07-14T00:00:00.000000000" AS "Score_1789-07-14T00:00:00.000000000", "BAG_Model_9"."Proba_1789-07-14T00:00:00.000000000" AS "Proba_1789-07-14T00:00:00.000000000", "BAG_Model_9"."LogProba_1789-07-14T00:00:00.000000000" AS "LogProba_1789-07-14T00:00:00.000000000", "BAG_Model_9"."Score_1789-08-14T00:00:00.000000000" AS "Score_1789-08-14T00:00:00.000000000", "BAG_Model_9"."Proba_1789-08-14T00:00:00.000000000" AS "Proba_1789-08-14T00:00:00.000000000", "BAG_Model_9"."LogProba_1789-08-14T00:00:00.000000000" AS "LogProba_1789-08-14T00:00:00.000000000", "BAG_Model_9"."Score_1789-09-14T00:00:00.000000000" AS "Score_1789-09-14T00:00:00.000000000", "BAG_Model_9"."Proba_1789-09-14T00:00:00.000000000" AS "Proba_1789-09-14T00:00:00.000000000", "BAG_Model_9"."LogProba_1789-09-14T00:00:00.000000000" AS "LogProba_1789-09-14T00:00:00.000000000" 
FROM "BAG_Model_9") AS "BAG_esu_0") AS "BAG_B0") AS "U"

-- Code For temporary table TMP_20180417042508_X59FA0_BAG_B part 1/2. Create 


CREATE GLOBAL TEMPORARY TABLE "TMP_20180417042508_X59FA0_BAG_B" (
	"KEY" BIGINT, 
	"Score_1789-07-14T00:00:00.000000000" FLOAT, 
	"Proba_1789-07-14T00:00:00.000000000" FLOAT, 
	"LogProba_1789-07-14T00:00:00.000000000" FLOAT, 
	"Score_1789-08-14T00:00:00.000000000" FLOAT, 
	"Proba_1789-08-14T00:00:00.000000000" FLOAT, 
	"LogProba_1789-08-14T00:00:00.000000000" FLOAT, 
	"Score_1789-09-14T00:00:00.000000000" FLOAT, 
	"Proba_1789-09-14T00:00:00.000000000" FLOAT, 
	"LogProba_1789-09-14T00:00:00.000000000" FLOAT
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table TMP_20180417042508_X59FA0_BAG_B part 2/2. Populate

INSERT INTO "TMP_20180417042508_X59FA0_BAG_B" ("KEY", "Score_1789-07-14T00:00:00.000000000", "Proba_1789-07-14T00:00:00.000000000", "LogProba_1789-07-14T00:00:00.000000000", "Score_1789-08-14T00:00:00.000000000", "Proba_1789-08-14T00:00:00.000000000", "LogProba_1789-08-14T00:00:00.000000000", "Score_1789-09-14T00:00:00.000000000", "Proba_1789-09-14T00:00:00.000000000", "LogProba_1789-09-14T00:00:00.000000000") SELECT "U"."KEY", "U"."Score_1789-07-14T00:00:00_1", "U"."Proba_1789-07-14T00:00:00_2", "U"."LogProba_1789-07-14T00:00_3", "U"."Score_1789-08-14T00:00:00_4", "U"."Proba_1789-08-14T00:00:00_5", "U"."LogProba_1789-08-14T00:00_6", "U"."Score_1789-09-14T00:00:00_7", "U"."Proba_1789-09-14T00:00:00_8", "U"."LogProba_1789-09-14T00:00_9" 
FROM (WITH "DT_node_lookup_10" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.7281479835510254) THEN 1 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.40673595666885376) THEN 3 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.5877821445465088) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.1451735943555832) THEN 6 ELSE 7 END ELSE 8 END END END AS node_id_2 
FROM "TMP_20180417042508_4DAFDZ_ADS_S" AS "ADS_sca_2_OUT"), 
"DT_node_data_10" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values".threshold AS FLOAT) AS threshold, CAST("Values"."count" AS FLOAT) AS "count", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Proba_0" AS FLOAT) AS "Proba_0", CAST("Values"."LogProba_0" AS FLOAT) AS "LogProba_0", CAST("Values"."Proba_1" AS FLOAT) AS "Proba_1", CAST("Values"."LogProba_1" AS FLOAT) AS "LogProba_1", CAST("Values"."Proba_2" AS FLOAT) AS "Proba_2", CAST("Values"."LogProba_2" AS FLOAT) AS "LogProba_2", CAST("Values"."Decision" AS FLOAT) AS "Decision", CAST("Values"."DecisionProba" AS FLOAT) AS "DecisionProba" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 24 AS "count", 1 AS depth, 0 AS parent_id, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -1e+20 AS "LogProba_1", 0.0 AS "Proba_2", -1e+20 AS "LogProba_2", 0 AS "Decision", 1.0 AS "DecisionProba" FROM rdb$database UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 26 AS "count", 2 AS depth, 2 AS parent_id, 0.0 AS "Proba_0", -1e+20 AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 0.0 AS "Proba_2", -1e+20 AS "LogProba_2", 1 AS "Decision", 1.0 AS "DecisionProba" FROM rdb$database UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 4 AS depth, 5 AS parent_id, 0.0 AS "Proba_0", -1e+20 AS "LogProba_0", 0.0 AS "Proba_1", -1e+20 AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 2 AS "Decision", 1.0 AS "DecisionProba" FROM rdb$database UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 4 AS depth, 5 AS parent_id, 0.0 AS "Proba_0", -1e+20 AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 0.0 AS "Proba_2", -1e+20 AS "LogProba_2", 1 AS "Decision", 1.0 AS "DecisionProba" FROM rdb$database UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 22 AS "count", 3 AS depth, 4 AS parent_id, 0.0 AS "Proba_0", -1e+20 AS "LogProba_0", 0.0 AS "Proba_1", -1e+20 AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 2 AS "Decision", 1.0 AS "DecisionProba" FROM rdb$database) AS "Values"), 
"DT_Output_10" AS 
(SELECT "DT_node_lookup_10"."KEY" AS "KEY", "DT_node_lookup_10".node_id_2 AS node_id_2, "DT_node_data_10".node_id AS node_id, "DT_node_data_10".feature AS feature, "DT_node_data_10".threshold AS threshold, "DT_node_data_10"."count" AS "count", "DT_node_data_10".depth AS depth, "DT_node_data_10".parent_id AS parent_id, "DT_node_data_10"."Proba_0" AS "Proba_0", "DT_node_data_10"."LogProba_0" AS "LogProba_0", "DT_node_data_10"."Proba_1" AS "Proba_1", "DT_node_data_10"."LogProba_1" AS "LogProba_1", "DT_node_data_10"."Proba_2" AS "Proba_2", "DT_node_data_10"."LogProba_2" AS "LogProba_2", "DT_node_data_10"."Decision" AS "Decision", "DT_node_data_10"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup_10" LEFT OUTER JOIN "DT_node_data_10" ON "DT_node_lookup_10".node_id_2 = "DT_node_data_10".node_id), 
"BAG_Model_10" AS 
(SELECT "DT_Output_10"."KEY" AS "KEY", CAST(NULL AS FLOAT) AS "Score_1789-07-14T00:00:00.000000000", "DT_Output_10"."Proba_0" AS "Proba_1789-07-14T00:00:00.000000000", "DT_Output_10"."LogProba_0" AS "LogProba_1789-07-14T00:00:00.000000000", CAST(NULL AS FLOAT) AS "Score_1789-08-14T00:00:00.000000000", "DT_Output_10"."Proba_1" AS "Proba_1789-08-14T00:00:00.000000000", "DT_Output_10"."LogProba_1" AS "LogProba_1789-08-14T00:00:00.000000000", CAST(NULL AS FLOAT) AS "Score_1789-09-14T00:00:00.000000000", "DT_Output_10"."Proba_2" AS "Proba_1789-09-14T00:00:00.000000000", "DT_Output_10"."LogProba_2" AS "LogProba_1789-09-14T00:00:00.000000000" 
FROM "DT_Output_10"), 
"DT_node_lookup_11" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.6462678909301758) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.8158766627311707) THEN 2 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.8734821677207947) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -1.0851964950561523) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.03216718137264252) THEN 6 ELSE 7 END ELSE 8 END ELSE 9 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.7047536373138428) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.7889590263366699) THEN 12 ELSE 13 END ELSE 14 END END AS node_id_2 
FROM "TMP_20180417042508_4DAFDZ_ADS_S" AS "ADS_sca_2_OUT"), 
"DT_node_data_11" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values".threshold AS FLOAT) AS threshold, CAST("Values"."count" AS FLOAT) AS "count", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Proba_0" AS FLOAT) AS "Proba_0", CAST("Values"."LogProba_0" AS FLOAT) AS "LogProba_0", CAST("Values"."Proba_1" AS FLOAT) AS "Proba_1", CAST("Values"."LogProba_1" AS FLOAT) AS "LogProba_1", CAST("Values"."Proba_2" AS FLOAT) AS "Proba_2", CAST("Values"."LogProba_2" AS FLOAT) AS "LogProba_2", CAST("Values"."Decision" AS FLOAT) AS "Decision", CAST("Values"."DecisionProba" AS FLOAT) AS "DecisionProba" 
FROM (SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 21 AS "count", 2 AS depth, 1 AS parent_id, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -1e+20 AS "LogProba_1", 0.0 AS "Proba_2", -1e+20 AS "LogProba_2", 0 AS "Decision", 1.0 AS "DecisionProba" FROM rdb$database UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 5 AS parent_id, 0.0 AS "Proba_0", -1e+20 AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 0.0 AS "Proba_2", -1e+20 AS "LogProba_2", 1 AS "Decision", 1.0 AS "DecisionProba" FROM rdb$database UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 5 AS parent_id, 0.0 AS "Proba_0", -1e+20 AS "LogProba_0", 0.0 AS "Proba_1", -1e+20 AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 2 AS "Decision", 1.0 AS "DecisionProba" FROM rdb$database UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 24 AS "count", 4 AS depth, 4 AS parent_id, 0.0 AS "Proba_0", -1e+20 AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 0.0 AS "Proba_2", -1e+20 AS "LogProba_2", 1 AS "Decision", 1.0 AS "DecisionProba" FROM rdb$database UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 3 AS depth, 3 AS parent_id, 0.0 AS "Proba_0", -1e+20 AS "LogProba_0", 0.0 AS "Proba_1", -1e+20 AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 2 AS "Decision", 1.0 AS "DecisionProba" FROM rdb$database UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 3 AS depth, 11 AS parent_id, 0.0 AS "Proba_0", -1e+20 AS "LogProba_0", 0.0 AS "Proba_1", -1e+20 AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 2 AS "Decision", 1.0 AS "DecisionProba" FROM rdb$database UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 3 AS depth, 11 AS parent_id, 0.0 AS "Proba_0", -1e+20 AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 0.0 AS "Proba_2", -1e+20 AS "LogProba_2", 1 AS "Decision", 1.0 AS "DecisionProba" FROM rdb$database UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 24 AS "count", 2 AS depth, 10 AS parent_id, 0.0 AS "Proba_0", -1e+20 AS "LogProba_0", 0.0 AS "Proba_1", -1e+20 AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 2 AS "Decision", 1.0 AS "DecisionProba" FROM rdb$database) AS "Values"), 
"DT_Output_11" AS 
(SELECT "DT_node_lookup_11"."KEY" AS "KEY", "DT_node_lookup_11".node_id_2 AS node_id_2, "DT_node_data_11".node_id AS node_id, "DT_node_data_11".feature AS feature, "DT_node_data_11".threshold AS threshold, "DT_node_data_11"."count" AS "count", "DT_node_data_11".depth AS depth, "DT_node_data_11".parent_id AS parent_id, "DT_node_data_11"."Proba_0" AS "Proba_0", "DT_node_data_11"."LogProba_0" AS "LogProba_0", "DT_node_data_11"."Proba_1" AS "Proba_1", "DT_node_data_11"."LogProba_1" AS "LogProba_1", "DT_node_data_11"."Proba_2" AS "Proba_2", "DT_node_data_11"."LogProba_2" AS "LogProba_2", "DT_node_data_11"."Decision" AS "Decision", "DT_node_data_11"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup_11" LEFT OUTER JOIN "DT_node_data_11" ON "DT_node_lookup_11".node_id_2 = "DT_node_data_11".node_id), 
"BAG_Model_11" AS 
(SELECT "DT_Output_11"."KEY" AS "KEY", CAST(NULL AS FLOAT) AS "Score_1789-07-14T00:00:00.000000000", "DT_Output_11"."Proba_0" AS "Proba_1789-07-14T00:00:00.000000000", "DT_Output_11"."LogProba_0" AS "LogProba_1789-07-14T00:00:00.000000000", CAST(NULL AS FLOAT) AS "Score_1789-08-14T00:00:00.000000000", "DT_Output_11"."Proba_1" AS "Proba_1789-08-14T00:00:00.000000000", "DT_Output_11"."LogProba_1" AS "LogProba_1789-08-14T00:00:00.000000000", CAST(NULL AS FLOAT) AS "Score_1789-09-14T00:00:00.000000000", "DT_Output_11"."Proba_2" AS "Proba_1789-09-14T00:00:00.000000000", "DT_Output_11"."LogProba_2" AS "LogProba_1789-09-14T00:00:00.000000000" 
FROM "DT_Output_11"), 
"DT_node_lookup_12" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.8158766627311707) THEN 1 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.5400919914245605) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.6462678909301758) THEN 4 ELSE 5 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.6734480857849121) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.6571015119552612) THEN 8 ELSE 9 END ELSE 10 END END END AS node_id_2 
FROM "TMP_20180417042508_4DAFDZ_ADS_S" AS "ADS_sca_2_OUT"), 
"DT_node_data_12" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values".threshold AS FLOAT) AS threshold, CAST("Values"."count" AS FLOAT) AS "count", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Proba_0" AS FLOAT) AS "Proba_0", CAST("Values"."LogProba_0" AS FLOAT) AS "LogProba_0", CAST("Values"."Proba_1" AS FLOAT) AS "Proba_1", CAST("Values"."LogProba_1" AS FLOAT) AS "LogProba_1", CAST("Values"."Proba_2" AS FLOAT) AS "Proba_2", CAST("Values"."LogProba_2" AS FLOAT) AS "LogProba_2", CAST("Values"."Decision" AS FLOAT) AS "Decision", CAST("Values"."DecisionProba" AS FLOAT) AS "DecisionProba" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS "count", 1 AS depth, 0 AS parent_id, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -1e+20 AS "LogProba_1", 0.0 AS "Proba_2", -1e+20 AS "LogProba_2", 0 AS "Decision", 1.0 AS "DecisionProba" FROM rdb$database UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 31 AS "count", 3 AS depth, 3 AS parent_id, 0.0 AS "Proba_0", -1e+20 AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 0.0 AS "Proba_2", -1e+20 AS "LogProba_2", 1 AS "Decision", 1.0 AS "DecisionProba" FROM rdb$database UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS "count", 3 AS depth, 3 AS parent_id, 0.0 AS "Proba_0", -1e+20 AS "LogProba_0", 0.0 AS "Proba_1", -1e+20 AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 2 AS "Decision", 1.0 AS "DecisionProba" FROM rdb$database UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 4 AS depth, 7 AS parent_id, 0.0 AS "Proba_0", -1e+20 AS "LogProba_0", 0.0 AS "Proba_1", -1e+20 AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 2 AS "Decision", 1.0 AS "DecisionProba" FROM rdb$database UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 4 AS depth, 7 AS parent_id, 0.0 AS "Proba_0", -1e+20 AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 0.0 AS "Proba_2", -1e+20 AS "LogProba_2", 1 AS "Decision", 1.0 AS "DecisionProba" FROM rdb$database UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 23 AS "count", 3 AS depth, 6 AS parent_id, 0.0 AS "Proba_0", -1e+20 AS "LogProba_0", 0.0 AS "Proba_1", -1e+20 AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 2 AS "Decision", 1.0 AS "DecisionProba" FROM rdb$database) AS "Values"), 
"DT_Output_12" AS 
(SELECT "DT_node_lookup_12"."KEY" AS "KEY", "DT_node_lookup_12".node_id_2 AS node_id_2, "DT_node_data_12".node_id AS node_id, "DT_node_data_12".feature AS feature, "DT_node_data_12".threshold AS threshold, "DT_node_data_12"."count" AS "count", "DT_node_data_12".depth AS depth, "DT_node_data_12".parent_id AS parent_id, "DT_node_data_12"."Proba_0" AS "Proba_0", "DT_node_data_12"."LogProba_0" AS "LogProba_0", "DT_node_data_12"."Proba_1" AS "Proba_1", "DT_node_data_12"."LogProba_1" AS "LogProba_1", "DT_node_data_12"."Proba_2" AS "Proba_2", "DT_node_data_12"."LogProba_2" AS "LogProba_2", "DT_node_data_12"."Decision" AS "Decision", "DT_node_data_12"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup_12" LEFT OUTER JOIN "DT_node_data_12" ON "DT_node_lookup_12".node_id_2 = "DT_node_data_12".node_id), 
"BAG_Model_12" AS 
(SELECT "DT_Output_12"."KEY" AS "KEY", CAST(NULL AS FLOAT) AS "Score_1789-07-14T00:00:00.000000000", "DT_Output_12"."Proba_0" AS "Proba_1789-07-14T00:00:00.000000000", "DT_Output_12"."LogProba_0" AS "LogProba_1789-07-14T00:00:00.000000000", CAST(NULL AS FLOAT) AS "Score_1789-08-14T00:00:00.000000000", "DT_Output_12"."Proba_1" AS "Proba_1789-08-14T00:00:00.000000000", "DT_Output_12"."LogProba_1" AS "LogProba_1789-08-14T00:00:00.000000000", CAST(NULL AS FLOAT) AS "Score_1789-09-14T00:00:00.000000000", "DT_Output_12"."Proba_2" AS "Proba_1789-09-14T00:00:00.000000000", "DT_Output_12"."LogProba_2" AS "LogProba_1789-09-14T00:00:00.000000000" 
FROM "DT_Output_12"), 
"DT_node_lookup_13" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.5877821445465088) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.5934344530105591) THEN 2 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -1.0851964950561523) THEN 4 ELSE 5 END END ELSE 6 END AS node_id_2 
FROM "TMP_20180417042508_4DAFDZ_ADS_S" AS "ADS_sca_2_OUT"), 
"DT_node_data_13" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values".threshold AS FLOAT) AS threshold, CAST("Values"."count" AS FLOAT) AS "count", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Proba_0" AS FLOAT) AS "Proba_0", CAST("Values"."LogProba_0" AS FLOAT) AS "LogProba_0", CAST("Values"."Proba_1" AS FLOAT) AS "Proba_1", CAST("Values"."LogProba_1" AS FLOAT) AS "LogProba_1", CAST("Values"."Proba_2" AS FLOAT) AS "Proba_2", CAST("Values"."LogProba_2" AS FLOAT) AS "LogProba_2", CAST("Values"."Decision" AS FLOAT) AS "Decision", CAST("Values"."DecisionProba" AS FLOAT) AS "DecisionProba" 
FROM (SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 23 AS "count", 2 AS depth, 1 AS parent_id, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -1e+20 AS "LogProba_1", 0.0 AS "Proba_2", -1e+20 AS "LogProba_2", 0 AS "Decision", 1.0 AS "DecisionProba" FROM rdb$database UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 3 AS depth, 3 AS parent_id, 0.0 AS "Proba_0", -1e+20 AS "LogProba_0", 0.0 AS "Proba_1", -1e+20 AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 2 AS "Decision", 1.0 AS "DecisionProba" FROM rdb$database UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 23 AS "count", 3 AS depth, 3 AS parent_id, 0.0 AS "Proba_0", -1e+20 AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 0.0 AS "Proba_2", -1e+20 AS "LogProba_2", 1 AS "Decision", 1.0 AS "DecisionProba" FROM rdb$database UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 29 AS "count", 1 AS depth, 0 AS parent_id, 0.0 AS "Proba_0", -1e+20 AS "LogProba_0", 0.0 AS "Proba_1", -1e+20 AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 2 AS "Decision", 1.0 AS "DecisionProba" FROM rdb$database) AS "Values"), 
"DT_Output_13" AS 
(SELECT "DT_node_lookup_13"."KEY" AS "KEY", "DT_node_lookup_13".node_id_2 AS node_id_2, "DT_node_data_13".node_id AS node_id, "DT_node_data_13".feature AS feature, "DT_node_data_13".threshold AS threshold, "DT_node_data_13"."count" AS "count", "DT_node_data_13".depth AS depth, "DT_node_data_13".parent_id AS parent_id, "DT_node_data_13"."Proba_0" AS "Proba_0", "DT_node_data_13"."LogProba_0" AS "LogProba_0", "DT_node_data_13"."Proba_1" AS "Proba_1", "DT_node_data_13"."LogProba_1" AS "LogProba_1", "DT_node_data_13"."Proba_2" AS "Proba_2", "DT_node_data_13"."LogProba_2" AS "LogProba_2", "DT_node_data_13"."Decision" AS "Decision", "DT_node_data_13"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup_13" LEFT OUTER JOIN "DT_node_data_13" ON "DT_node_lookup_13".node_id_2 = "DT_node_data_13".node_id), 
"BAG_Model_13" AS 
(SELECT "DT_Output_13"."KEY" AS "KEY", CAST(NULL AS FLOAT) AS "Score_1789-07-14T00:00:00.000000000", "DT_Output_13"."Proba_0" AS "Proba_1789-07-14T00:00:00.000000000", "DT_Output_13"."LogProba_0" AS "LogProba_1789-07-14T00:00:00.000000000", CAST(NULL AS FLOAT) AS "Score_1789-08-14T00:00:00.000000000", "DT_Output_13"."Proba_1" AS "Proba_1789-08-14T00:00:00.000000000", "DT_Output_13"."LogProba_1" AS "LogProba_1789-08-14T00:00:00.000000000", CAST(NULL AS FLOAT) AS "Score_1789-09-14T00:00:00.000000000", "DT_Output_13"."Proba_2" AS "Proba_1789-09-14T00:00:00.000000000", "DT_Output_13"."LogProba_2" AS "LogProba_1789-09-14T00:00:00.000000000" 
FROM "DT_Output_13"), 
"DT_node_lookup_14" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.8158766627311707) THEN 1 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.6462678909301758) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.6067700386047363) THEN 4 ELSE 5 END ELSE 6 END END AS node_id_2 
FROM "TMP_20180417042508_4DAFDZ_ADS_S" AS "ADS_sca_2_OUT"), 
"DT_node_data_14" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values".threshold AS FLOAT) AS threshold, CAST("Values"."count" AS FLOAT) AS "count", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Proba_0" AS FLOAT) AS "Proba_0", CAST("Values"."LogProba_0" AS FLOAT) AS "LogProba_0", CAST("Values"."Proba_1" AS FLOAT) AS "Proba_1", CAST("Values"."LogProba_1" AS FLOAT) AS "LogProba_1", CAST("Values"."Proba_2" AS FLOAT) AS "Proba_2", CAST("Values"."LogProba_2" AS FLOAT) AS "LogProba_2", CAST("Values"."Decision" AS FLOAT) AS "Decision", CAST("Values"."DecisionProba" AS FLOAT) AS "DecisionProba" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 24 AS "count", 1 AS depth, 0 AS parent_id, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -1e+20 AS "LogProba_1", 0.0 AS "Proba_2", -1e+20 AS "LogProba_2", 0 AS "Decision", 1.0 AS "DecisionProba" FROM rdb$database UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 24 AS "count", 3 AS depth, 3 AS parent_id, 0.0 AS "Proba_0", -1e+20 AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 0.0 AS "Proba_2", -1e+20 AS "LogProba_2", 1 AS "Decision", 1.0 AS "DecisionProba" FROM rdb$database UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 3 AS depth, 3 AS parent_id, 0.0 AS "Proba_0", -1e+20 AS "LogProba_0", 0.0 AS "Proba_1", -1e+20 AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 2 AS "Decision", 1.0 AS "DecisionProba" FROM rdb$database UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 30 AS "count", 2 AS depth, 2 AS parent_id, 0.0 AS "Proba_0", -1e+20 AS "LogProba_0", 0.0 AS "Proba_1", -1e+20 AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 2 AS "Decision", 1.0 AS "DecisionProba" FROM rdb$database) AS "Values"), 
"DT_Output_14" AS 
(SELECT "DT_node_lookup_14"."KEY" AS "KEY", "DT_node_lookup_14".node_id_2 AS node_id_2, "DT_node_data_14".node_id AS node_id, "DT_node_data_14".feature AS feature, "DT_node_data_14".threshold AS threshold, "DT_node_data_14"."count" AS "count", "DT_node_data_14".depth AS depth, "DT_node_data_14".parent_id AS parent_id, "DT_node_data_14"."Proba_0" AS "Proba_0", "DT_node_data_14"."LogProba_0" AS "LogProba_0", "DT_node_data_14"."Proba_1" AS "Proba_1", "DT_node_data_14"."LogProba_1" AS "LogProba_1", "DT_node_data_14"."Proba_2" AS "Proba_2", "DT_node_data_14"."LogProba_2" AS "LogProba_2", "DT_node_data_14"."Decision" AS "Decision", "DT_node_data_14"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup_14" LEFT OUTER JOIN "DT_node_data_14" ON "DT_node_lookup_14".node_id_2 = "DT_node_data_14".node_id), 
"BAG_Model_14" AS 
(SELECT "DT_Output_14"."KEY" AS "KEY", CAST(NULL AS FLOAT) AS "Score_1789-07-14T00:00:00.000000000", "DT_Output_14"."Proba_0" AS "Proba_1789-07-14T00:00:00.000000000", "DT_Output_14"."LogProba_0" AS "LogProba_1789-07-14T00:00:00.000000000", CAST(NULL AS FLOAT) AS "Score_1789-08-14T00:00:00.000000000", "DT_Output_14"."Proba_1" AS "Proba_1789-08-14T00:00:00.000000000", "DT_Output_14"."LogProba_1" AS "LogProba_1789-08-14T00:00:00.000000000", CAST(NULL AS FLOAT) AS "Score_1789-09-14T00:00:00.000000000", "DT_Output_14"."Proba_2" AS "Proba_1789-09-14T00:00:00.000000000", "DT_Output_14"."LogProba_2" AS "LogProba_1789-09-14T00:00:00.000000000" 
FROM "DT_Output_14"), 
"DT_node_lookup_15" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.8158766627311707) THEN 1 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.6734480857849121) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.8509681224822998) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -1.0851964950561523) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.1400238573551178) THEN 6 ELSE 7 END ELSE 8 END ELSE 9 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.5877821445465088) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.12393608689308167) THEN 12 ELSE 13 END ELSE 14 END END END AS node_id_2 
FROM "TMP_20180417042508_4DAFDZ_ADS_S" AS "ADS_sca_2_OUT"), 
"DT_node_data_15" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values".threshold AS FLOAT) AS threshold, CAST("Values"."count" AS FLOAT) AS "count", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Proba_0" AS FLOAT) AS "Proba_0", CAST("Values"."LogProba_0" AS FLOAT) AS "LogProba_0", CAST("Values"."Proba_1" AS FLOAT) AS "Proba_1", CAST("Values"."LogProba_1" AS FLOAT) AS "LogProba_1", CAST("Values"."Proba_2" AS FLOAT) AS "Proba_2", CAST("Values"."LogProba_2" AS FLOAT) AS "LogProba_2", CAST("Values"."Decision" AS FLOAT) AS "Decision", CAST("Values"."DecisionProba" AS FLOAT) AS "DecisionProba" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 24 AS "count", 1 AS depth, 0 AS parent_id, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -1e+20 AS "LogProba_1", 0.0 AS "Proba_2", -1e+20 AS "LogProba_2", 0 AS "Decision", 1.0 AS "DecisionProba" FROM rdb$database UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 5 AS parent_id, 0.0 AS "Proba_0", -1e+20 AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 0.0 AS "Proba_2", -1e+20 AS "LogProba_2", 1 AS "Decision", 1.0 AS "DecisionProba" FROM rdb$database UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 5 AS parent_id, 0.0 AS "Proba_0", -1e+20 AS "LogProba_0", 0.0 AS "Proba_1", -1e+20 AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 2 AS "Decision", 1.0 AS "DecisionProba" FROM rdb$database UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 23 AS "count", 4 AS depth, 4 AS parent_id, 0.0 AS "Proba_0", -1e+20 AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 0.0 AS "Proba_2", -1e+20 AS "LogProba_2", 1 AS "Decision", 1.0 AS "DecisionProba" FROM rdb$database UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 3 AS depth, 3 AS parent_id, 0.0 AS "Proba_0", -1e+20 AS "LogProba_0", 0.0 AS "Proba_1", -1e+20 AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 2 AS "Decision", 1.0 AS "DecisionProba" FROM rdb$database UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 4 AS depth, 11 AS parent_id, 0.0 AS "Proba_0", -1e+20 AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 0.0 AS "Proba_2", -1e+20 AS "LogProba_2", 1 AS "Decision", 1.0 AS "DecisionProba" FROM rdb$database UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 4 AS depth, 11 AS parent_id, 0.0 AS "Proba_0", -1e+20 AS "LogProba_0", 0.0 AS "Proba_1", -1e+20 AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 2 AS "Decision", 1.0 AS "DecisionProba" FROM rdb$database UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 22 AS "count", 3 AS depth, 10 AS parent_id, 0.0 AS "Proba_0", -1e+20 AS "LogProba_0", 0.0 AS "Proba_1", -1e+20 AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 2 AS "Decision", 1.0 AS "DecisionProba" FROM rdb$database) AS "Values"), 
"DT_Output_15" AS 
(SELECT "DT_node_lookup_15"."KEY" AS "KEY", "DT_node_lookup_15".node_id_2 AS node_id_2, "DT_node_data_15".node_id AS node_id, "DT_node_data_15".feature AS feature, "DT_node_data_15".threshold AS threshold, "DT_node_data_15"."count" AS "count", "DT_node_data_15".depth AS depth, "DT_node_data_15".parent_id AS parent_id, "DT_node_data_15"."Proba_0" AS "Proba_0", "DT_node_data_15"."LogProba_0" AS "LogProba_0", "DT_node_data_15"."Proba_1" AS "Proba_1", "DT_node_data_15"."LogProba_1" AS "LogProba_1", "DT_node_data_15"."Proba_2" AS "Proba_2", "DT_node_data_15"."LogProba_2" AS "LogProba_2", "DT_node_data_15"."Decision" AS "Decision", "DT_node_data_15"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup_15" LEFT OUTER JOIN "DT_node_data_15" ON "DT_node_lookup_15".node_id_2 = "DT_node_data_15".node_id), 
"BAG_Model_15" AS 
(SELECT "DT_Output_15"."KEY" AS "KEY", CAST(NULL AS FLOAT) AS "Score_1789-07-14T00:00:00.000000000", "DT_Output_15"."Proba_0" AS "Proba_1789-07-14T00:00:00.000000000", "DT_Output_15"."LogProba_0" AS "LogProba_1789-07-14T00:00:00.000000000", CAST(NULL AS FLOAT) AS "Score_1789-08-14T00:00:00.000000000", "DT_Output_15"."Proba_1" AS "Proba_1789-08-14T00:00:00.000000000", "DT_Output_15"."LogProba_1" AS "LogProba_1789-08-14T00:00:00.000000000", CAST(NULL AS FLOAT) AS "Score_1789-09-14T00:00:00.000000000", "DT_Output_15"."Proba_2" AS "Proba_1789-09-14T00:00:00.000000000", "DT_Output_15"."LogProba_2" AS "LogProba_1789-09-14T00:00:00.000000000" 
FROM "DT_Output_15")
 SELECT "BAG_B1"."KEY", "BAG_B1"."Score_1789-07-14T00:00:00_1", "BAG_B1"."Proba_1789-07-14T00:00:00_2", "BAG_B1"."LogProba_1789-07-14T00:00_3", "BAG_B1"."Score_1789-08-14T00:00:00_4", "BAG_B1"."Proba_1789-08-14T00:00:00_5", "BAG_B1"."LogProba_1789-08-14T00:00_6", "BAG_B1"."Score_1789-09-14T00:00:00_7", "BAG_B1"."Proba_1789-09-14T00:00:00_8", "BAG_B1"."LogProba_1789-09-14T00:00_9" 
FROM (SELECT "BAG_esu_1"."KEY" AS "KEY", "BAG_esu_1"."Score_1789-07-14T00:00:00.000000000" AS "Score_1789-07-14T00:00:00_1", "BAG_esu_1"."Proba_1789-07-14T00:00:00.000000000" AS "Proba_1789-07-14T00:00:00_2", "BAG_esu_1"."LogProba_1789-07-14T00:00:00.000000000" AS "LogProba_1789-07-14T00:00_3", "BAG_esu_1"."Score_1789-08-14T00:00:00.000000000" AS "Score_1789-08-14T00:00:00_4", "BAG_esu_1"."Proba_1789-08-14T00:00:00.000000000" AS "Proba_1789-08-14T00:00:00_5", "BAG_esu_1"."LogProba_1789-08-14T00:00:00.000000000" AS "LogProba_1789-08-14T00:00_6", "BAG_esu_1"."Score_1789-09-14T00:00:00.000000000" AS "Score_1789-09-14T00:00:00_7", "BAG_esu_1"."Proba_1789-09-14T00:00:00.000000000" AS "Proba_1789-09-14T00:00:00_8", "BAG_esu_1"."LogProba_1789-09-14T00:00:00.000000000" AS "LogProba_1789-09-14T00:00_9" 
FROM (SELECT "BAG_Model_10"."KEY" AS "KEY", "BAG_Model_10"."Score_1789-07-14T00:00:00.000000000" AS "Score_1789-07-14T00:00:00.000000000", "BAG_Model_10"."Proba_1789-07-14T00:00:00.000000000" AS "Proba_1789-07-14T00:00:00.000000000", "BAG_Model_10"."LogProba_1789-07-14T00:00:00.000000000" AS "LogProba_1789-07-14T00:00:00.000000000", "BAG_Model_10"."Score_1789-08-14T00:00:00.000000000" AS "Score_1789-08-14T00:00:00.000000000", "BAG_Model_10"."Proba_1789-08-14T00:00:00.000000000" AS "Proba_1789-08-14T00:00:00.000000000", "BAG_Model_10"."LogProba_1789-08-14T00:00:00.000000000" AS "LogProba_1789-08-14T00:00:00.000000000", "BAG_Model_10"."Score_1789-09-14T00:00:00.000000000" AS "Score_1789-09-14T00:00:00.000000000", "BAG_Model_10"."Proba_1789-09-14T00:00:00.000000000" AS "Proba_1789-09-14T00:00:00.000000000", "BAG_Model_10"."LogProba_1789-09-14T00:00:00.000000000" AS "LogProba_1789-09-14T00:00:00.000000000" 
FROM "BAG_Model_10" UNION ALL SELECT "BAG_Model_11"."KEY" AS "KEY", "BAG_Model_11"."Score_1789-07-14T00:00:00.000000000" AS "Score_1789-07-14T00:00:00.000000000", "BAG_Model_11"."Proba_1789-07-14T00:00:00.000000000" AS "Proba_1789-07-14T00:00:00.000000000", "BAG_Model_11"."LogProba_1789-07-14T00:00:00.000000000" AS "LogProba_1789-07-14T00:00:00.000000000", "BAG_Model_11"."Score_1789-08-14T00:00:00.000000000" AS "Score_1789-08-14T00:00:00.000000000", "BAG_Model_11"."Proba_1789-08-14T00:00:00.000000000" AS "Proba_1789-08-14T00:00:00.000000000", "BAG_Model_11"."LogProba_1789-08-14T00:00:00.000000000" AS "LogProba_1789-08-14T00:00:00.000000000", "BAG_Model_11"."Score_1789-09-14T00:00:00.000000000" AS "Score_1789-09-14T00:00:00.000000000", "BAG_Model_11"."Proba_1789-09-14T00:00:00.000000000" AS "Proba_1789-09-14T00:00:00.000000000", "BAG_Model_11"."LogProba_1789-09-14T00:00:00.000000000" AS "LogProba_1789-09-14T00:00:00.000000000" 
FROM "BAG_Model_11" UNION ALL SELECT "BAG_Model_12"."KEY" AS "KEY", "BAG_Model_12"."Score_1789-07-14T00:00:00.000000000" AS "Score_1789-07-14T00:00:00.000000000", "BAG_Model_12"."Proba_1789-07-14T00:00:00.000000000" AS "Proba_1789-07-14T00:00:00.000000000", "BAG_Model_12"."LogProba_1789-07-14T00:00:00.000000000" AS "LogProba_1789-07-14T00:00:00.000000000", "BAG_Model_12"."Score_1789-08-14T00:00:00.000000000" AS "Score_1789-08-14T00:00:00.000000000", "BAG_Model_12"."Proba_1789-08-14T00:00:00.000000000" AS "Proba_1789-08-14T00:00:00.000000000", "BAG_Model_12"."LogProba_1789-08-14T00:00:00.000000000" AS "LogProba_1789-08-14T00:00:00.000000000", "BAG_Model_12"."Score_1789-09-14T00:00:00.000000000" AS "Score_1789-09-14T00:00:00.000000000", "BAG_Model_12"."Proba_1789-09-14T00:00:00.000000000" AS "Proba_1789-09-14T00:00:00.000000000", "BAG_Model_12"."LogProba_1789-09-14T00:00:00.000000000" AS "LogProba_1789-09-14T00:00:00.000000000" 
FROM "BAG_Model_12" UNION ALL SELECT "BAG_Model_13"."KEY" AS "KEY", "BAG_Model_13"."Score_1789-07-14T00:00:00.000000000" AS "Score_1789-07-14T00:00:00.000000000", "BAG_Model_13"."Proba_1789-07-14T00:00:00.000000000" AS "Proba_1789-07-14T00:00:00.000000000", "BAG_Model_13"."LogProba_1789-07-14T00:00:00.000000000" AS "LogProba_1789-07-14T00:00:00.000000000", "BAG_Model_13"."Score_1789-08-14T00:00:00.000000000" AS "Score_1789-08-14T00:00:00.000000000", "BAG_Model_13"."Proba_1789-08-14T00:00:00.000000000" AS "Proba_1789-08-14T00:00:00.000000000", "BAG_Model_13"."LogProba_1789-08-14T00:00:00.000000000" AS "LogProba_1789-08-14T00:00:00.000000000", "BAG_Model_13"."Score_1789-09-14T00:00:00.000000000" AS "Score_1789-09-14T00:00:00.000000000", "BAG_Model_13"."Proba_1789-09-14T00:00:00.000000000" AS "Proba_1789-09-14T00:00:00.000000000", "BAG_Model_13"."LogProba_1789-09-14T00:00:00.000000000" AS "LogProba_1789-09-14T00:00:00.000000000" 
FROM "BAG_Model_13" UNION ALL SELECT "BAG_Model_14"."KEY" AS "KEY", "BAG_Model_14"."Score_1789-07-14T00:00:00.000000000" AS "Score_1789-07-14T00:00:00.000000000", "BAG_Model_14"."Proba_1789-07-14T00:00:00.000000000" AS "Proba_1789-07-14T00:00:00.000000000", "BAG_Model_14"."LogProba_1789-07-14T00:00:00.000000000" AS "LogProba_1789-07-14T00:00:00.000000000", "BAG_Model_14"."Score_1789-08-14T00:00:00.000000000" AS "Score_1789-08-14T00:00:00.000000000", "BAG_Model_14"."Proba_1789-08-14T00:00:00.000000000" AS "Proba_1789-08-14T00:00:00.000000000", "BAG_Model_14"."LogProba_1789-08-14T00:00:00.000000000" AS "LogProba_1789-08-14T00:00:00.000000000", "BAG_Model_14"."Score_1789-09-14T00:00:00.000000000" AS "Score_1789-09-14T00:00:00.000000000", "BAG_Model_14"."Proba_1789-09-14T00:00:00.000000000" AS "Proba_1789-09-14T00:00:00.000000000", "BAG_Model_14"."LogProba_1789-09-14T00:00:00.000000000" AS "LogProba_1789-09-14T00:00:00.000000000" 
FROM "BAG_Model_14" UNION ALL SELECT "BAG_Model_15"."KEY" AS "KEY", "BAG_Model_15"."Score_1789-07-14T00:00:00.000000000" AS "Score_1789-07-14T00:00:00.000000000", "BAG_Model_15"."Proba_1789-07-14T00:00:00.000000000" AS "Proba_1789-07-14T00:00:00.000000000", "BAG_Model_15"."LogProba_1789-07-14T00:00:00.000000000" AS "LogProba_1789-07-14T00:00:00.000000000", "BAG_Model_15"."Score_1789-08-14T00:00:00.000000000" AS "Score_1789-08-14T00:00:00.000000000", "BAG_Model_15"."Proba_1789-08-14T00:00:00.000000000" AS "Proba_1789-08-14T00:00:00.000000000", "BAG_Model_15"."LogProba_1789-08-14T00:00:00.000000000" AS "LogProba_1789-08-14T00:00:00.000000000", "BAG_Model_15"."Score_1789-09-14T00:00:00.000000000" AS "Score_1789-09-14T00:00:00.000000000", "BAG_Model_15"."Proba_1789-09-14T00:00:00.000000000" AS "Proba_1789-09-14T00:00:00.000000000", "BAG_Model_15"."LogProba_1789-09-14T00:00:00.000000000" AS "LogProba_1789-09-14T00:00:00.000000000" 
FROM "BAG_Model_15") AS "BAG_esu_1") AS "BAG_B1") AS "U"

-- Code For temporary table TMP_20180417042508_GG4PM9_BAG_U part 1/2. Create 


CREATE GLOBAL TEMPORARY TABLE "TMP_20180417042508_GG4PM9_BAG_U" (
	"KEY" BIGINT, 
	"Score_1789-07-14T00:00:00.000000000" FLOAT, 
	"Proba_1789-07-14T00:00:00.000000000" FLOAT, 
	"LogProba_1789-07-14T00:00:00.000000000" FLOAT, 
	"Score_1789-08-14T00:00:00.000000000" FLOAT, 
	"Proba_1789-08-14T00:00:00.000000000" FLOAT, 
	"LogProba_1789-08-14T00:00:00.000000000" FLOAT, 
	"Score_1789-09-14T00:00:00.000000000" FLOAT, 
	"Proba_1789-09-14T00:00:00.000000000" FLOAT, 
	"LogProba_1789-09-14T00:00:00.000000000" FLOAT
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table TMP_20180417042508_GG4PM9_BAG_U part 2/2. Populate

INSERT INTO "TMP_20180417042508_GG4PM9_BAG_U" ("KEY", "Score_1789-07-14T00:00:00.000000000", "Proba_1789-07-14T00:00:00.000000000", "LogProba_1789-07-14T00:00:00.000000000", "Score_1789-08-14T00:00:00.000000000", "Proba_1789-08-14T00:00:00.000000000", "LogProba_1789-08-14T00:00:00.000000000", "Score_1789-09-14T00:00:00.000000000", "Proba_1789-09-14T00:00:00.000000000", "LogProba_1789-09-14T00:00:00.000000000") SELECT "U"."KEY", "U"."Score_1789-07-14T00:00:00_1", "U"."Proba_1789-07-14T00:00:00_2", "U"."LogProba_1789-07-14T00:00_3", "U"."Score_1789-08-14T00:00:00_4", "U"."Proba_1789-08-14T00:00:00_5", "U"."LogProba_1789-08-14T00:00_6", "U"."Score_1789-09-14T00:00:00_7", "U"."Proba_1789-09-14T00:00:00_8", "U"."LogProba_1789-09-14T00:00_9" 
FROM (SELECT "BAG_Union"."KEY", "BAG_Union"."Score_1789-07-14T00:00:00_1", "BAG_Union"."Proba_1789-07-14T00:00:00_2", "BAG_Union"."LogProba_1789-07-14T00:00_3", "BAG_Union"."Score_1789-08-14T00:00:00_4", "BAG_Union"."Proba_1789-08-14T00:00:00_5", "BAG_Union"."LogProba_1789-08-14T00:00_6", "BAG_Union"."Score_1789-09-14T00:00:00_7", "BAG_Union"."Proba_1789-09-14T00:00:00_8", "BAG_Union"."LogProba_1789-09-14T00:00_9" 
FROM (SELECT "BAG_EnsembleUnion"."KEY" AS "KEY", "BAG_EnsembleUnion"."Score_1789-07-14T00:00:00_1" AS "Score_1789-07-14T00:00:00_1", "BAG_EnsembleUnion"."Proba_1789-07-14T00:00:00_2" AS "Proba_1789-07-14T00:00:00_2", "BAG_EnsembleUnion"."LogProba_1789-07-14T00:00_3" AS "LogProba_1789-07-14T00:00_3", "BAG_EnsembleUnion"."Score_1789-08-14T00:00:00_4" AS "Score_1789-08-14T00:00:00_4", "BAG_EnsembleUnion"."Proba_1789-08-14T00:00:00_5" AS "Proba_1789-08-14T00:00:00_5", "BAG_EnsembleUnion"."LogProba_1789-08-14T00:00_6" AS "LogProba_1789-08-14T00:00_6", "BAG_EnsembleUnion"."Score_1789-09-14T00:00:00_7" AS "Score_1789-09-14T00:00:00_7", "BAG_EnsembleUnion"."Proba_1789-09-14T00:00:00_8" AS "Proba_1789-09-14T00:00:00_8", "BAG_EnsembleUnion"."LogProba_1789-09-14T00:00_9" AS "LogProba_1789-09-14T00:00_9" 
FROM (SELECT "BAG_B0"."KEY" AS "KEY", "BAG_B0"."Score_1789-07-14T00:00:00.000000000" AS "Score_1789-07-14T00:00:00_1", "BAG_B0"."Proba_1789-07-14T00:00:00.000000000" AS "Proba_1789-07-14T00:00:00_2", "BAG_B0"."LogProba_1789-07-14T00:00:00.000000000" AS "LogProba_1789-07-14T00:00_3", "BAG_B0"."Score_1789-08-14T00:00:00.000000000" AS "Score_1789-08-14T00:00:00_4", "BAG_B0"."Proba_1789-08-14T00:00:00.000000000" AS "Proba_1789-08-14T00:00:00_5", "BAG_B0"."LogProba_1789-08-14T00:00:00.000000000" AS "LogProba_1789-08-14T00:00_6", "BAG_B0"."Score_1789-09-14T00:00:00.000000000" AS "Score_1789-09-14T00:00:00_7", "BAG_B0"."Proba_1789-09-14T00:00:00.000000000" AS "Proba_1789-09-14T00:00:00_8", "BAG_B0"."LogProba_1789-09-14T00:00:00.000000000" AS "LogProba_1789-09-14T00:00_9" 
FROM "TMP_20180417042508_8XR3KH_BAG_B" AS "BAG_B0" UNION ALL SELECT "BAG_B1"."KEY" AS "KEY", "BAG_B1"."Score_1789-07-14T00:00:00.000000000" AS "Score_1789-07-14T00:00:00_1", "BAG_B1"."Proba_1789-07-14T00:00:00.000000000" AS "Proba_1789-07-14T00:00:00_2", "BAG_B1"."LogProba_1789-07-14T00:00:00.000000000" AS "LogProba_1789-07-14T00:00_3", "BAG_B1"."Score_1789-08-14T00:00:00.000000000" AS "Score_1789-08-14T00:00:00_4", "BAG_B1"."Proba_1789-08-14T00:00:00.000000000" AS "Proba_1789-08-14T00:00:00_5", "BAG_B1"."LogProba_1789-08-14T00:00:00.000000000" AS "LogProba_1789-08-14T00:00_6", "BAG_B1"."Score_1789-09-14T00:00:00.000000000" AS "Score_1789-09-14T00:00:00_7", "BAG_B1"."Proba_1789-09-14T00:00:00.000000000" AS "Proba_1789-09-14T00:00:00_8", "BAG_B1"."LogProba_1789-09-14T00:00:00.000000000" AS "LogProba_1789-09-14T00:00_9" 
FROM "TMP_20180417042508_X59FA0_BAG_B" AS "BAG_B1") AS "BAG_EnsembleUnion") AS "BAG_Union") AS "U"

-- Code For temporary table TMP_20180417042508_T0OVU4_BAG_A part 1/2. Create 


CREATE GLOBAL TEMPORARY TABLE "TMP_20180417042508_T0OVU4_BAG_A" (
	"KEY" BIGINT, 
	"Score_1789-07-14T00:00:00.000000000" FLOAT, 
	"Proba_1789-07-14T00:00:00.000000000" FLOAT, 
	"LogProba_1789-07-14T00:00:00.000000000" FLOAT, 
	"Score_1789-08-14T00:00:00.000000000" FLOAT, 
	"Proba_1789-08-14T00:00:00.000000000" FLOAT, 
	"LogProba_1789-08-14T00:00:00.000000000" FLOAT, 
	"Score_1789-09-14T00:00:00.000000000" FLOAT, 
	"Proba_1789-09-14T00:00:00.000000000" FLOAT, 
	"LogProba_1789-09-14T00:00:00.000000000" FLOAT
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table TMP_20180417042508_T0OVU4_BAG_A part 2/2. Populate

INSERT INTO "TMP_20180417042508_T0OVU4_BAG_A" ("KEY", "Score_1789-07-14T00:00:00.000000000", "Proba_1789-07-14T00:00:00.000000000", "LogProba_1789-07-14T00:00:00.000000000", "Score_1789-08-14T00:00:00.000000000", "Proba_1789-08-14T00:00:00.000000000", "LogProba_1789-08-14T00:00:00.000000000", "Score_1789-09-14T00:00:00.000000000", "Proba_1789-09-14T00:00:00.000000000", "LogProba_1789-09-14T00:00:00.000000000") SELECT "U"."KEY", "U"."Score_1789-07-14T00:00:00.000000000", "U"."Proba_1789-07-14T00:00:00.000000000", "U"."LogProba_1789-07-14T00:00:00.000000000", "U"."Score_1789-08-14T00:00:00.000000000", "U"."Proba_1789-08-14T00:00:00.000000000", "U"."LogProba_1789-08-14T00:00:00.000000000", "U"."Score_1789-09-14T00:00:00.000000000", "U"."Proba_1789-09-14T00:00:00.000000000", "U"."LogProba_1789-09-14T00:00:00.000000000" 
FROM (SELECT "BAG_avg"."KEY", "BAG_avg"."Score_1789-07-14T00:00:00.000000000", "BAG_avg"."Proba_1789-07-14T00:00:00.000000000", "BAG_avg"."LogProba_1789-07-14T00:00:00.000000000", "BAG_avg"."Score_1789-08-14T00:00:00.000000000", "BAG_avg"."Proba_1789-08-14T00:00:00.000000000", "BAG_avg"."LogProba_1789-08-14T00:00:00.000000000", "BAG_avg"."Score_1789-09-14T00:00:00.000000000", "BAG_avg"."Proba_1789-09-14T00:00:00.000000000", "BAG_avg"."LogProba_1789-09-14T00:00:00.000000000" 
FROM (SELECT "T"."KEY" AS "KEY", CAST("T"."Score_1789-07-14T00:00:00.000000000" AS FLOAT) AS "Score_1789-07-14T00:00:00.000000000", CAST("T"."Proba_1789-07-14T00:00:00.000000000" AS FLOAT) AS "Proba_1789-07-14T00:00:00.000000000", CAST("T"."LogProba_1789-07-14T00:00:00.000000000" AS FLOAT) AS "LogProba_1789-07-14T00:00:00.000000000", CAST("T"."Score_1789-08-14T00:00:00.000000000" AS FLOAT) AS "Score_1789-08-14T00:00:00.000000000", CAST("T"."Proba_1789-08-14T00:00:00.000000000" AS FLOAT) AS "Proba_1789-08-14T00:00:00.000000000", CAST("T"."LogProba_1789-08-14T00:00:00.000000000" AS FLOAT) AS "LogProba_1789-08-14T00:00:00.000000000", CAST("T"."Score_1789-09-14T00:00:00.000000000" AS FLOAT) AS "Score_1789-09-14T00:00:00.000000000", CAST("T"."Proba_1789-09-14T00:00:00.000000000" AS FLOAT) AS "Proba_1789-09-14T00:00:00.000000000", CAST("T"."LogProba_1789-09-14T00:00:00.000000000" AS FLOAT) AS "LogProba_1789-09-14T00:00:00.000000000" 
FROM (SELECT "BAG_Union"."KEY" AS "KEY", avg(CAST("BAG_Union"."Score_1789-07-14T00:00:00.000000000" AS FLOAT)) AS "Score_1789-07-14T00:00:00.000000000", avg(CAST("BAG_Union"."Proba_1789-07-14T00:00:00.000000000" AS FLOAT)) AS "Proba_1789-07-14T00:00:00.000000000", CAST(NULL AS FLOAT) AS "LogProba_1789-07-14T00:00:00.000000000", avg(CAST("BAG_Union"."Score_1789-08-14T00:00:00.000000000" AS FLOAT)) AS "Score_1789-08-14T00:00:00.000000000", avg(CAST("BAG_Union"."Proba_1789-08-14T00:00:00.000000000" AS FLOAT)) AS "Proba_1789-08-14T00:00:00.000000000", CAST(NULL AS FLOAT) AS "LogProba_1789-08-14T00:00:00.000000000", avg(CAST("BAG_Union"."Score_1789-09-14T00:00:00.000000000" AS FLOAT)) AS "Score_1789-09-14T00:00:00.000000000", avg(CAST("BAG_Union"."Proba_1789-09-14T00:00:00.000000000" AS FLOAT)) AS "Proba_1789-09-14T00:00:00.000000000", CAST(NULL AS FLOAT) AS "LogProba_1789-09-14T00:00:00.000000000" 
FROM "TMP_20180417042508_GG4PM9_BAG_U" AS "BAG_Union" GROUP BY "BAG_Union"."KEY") AS "T") AS "BAG_avg") AS "U"

-- Model deployment code

WITH orig_cte AS 
(SELECT "BAG_avg"."KEY" AS "KEY", "BAG_avg"."Score_1789-07-14T00:00:00.000000000" AS "Score_1789-07-14T00:00:00_1", "BAG_avg"."Score_1789-08-14T00:00:00.000000000" AS "Score_1789-08-14T00:00:00_2", "BAG_avg"."Score_1789-09-14T00:00:00.000000000" AS "Score_1789-09-14T00:00:00_3", "BAG_avg"."Proba_1789-07-14T00:00:00.000000000" AS "Proba_1789-07-14T00:00:00_4", "BAG_avg"."Proba_1789-08-14T00:00:00.000000000" AS "Proba_1789-08-14T00:00:00_5", "BAG_avg"."Proba_1789-09-14T00:00:00.000000000" AS "Proba_1789-09-14T00:00:00_6", "BAG_avg"."LogProba_1789-07-14T00:00:00.000000000" AS "LogProba_1789-07-14T00:00_7", "BAG_avg"."LogProba_1789-08-14T00:00:00.000000000" AS "LogProba_1789-08-14T00:00_8", "BAG_avg"."LogProba_1789-09-14T00:00:00.000000000" AS "LogProba_1789-09-14T00:00_9", CAST(NULL AS BIGINT) AS "Decision", CAST(NULL AS FLOAT) AS "DecisionProba" 
FROM "TMP_20180417042508_T0OVU4_BAG_A" AS "BAG_avg"), 
score_class_union AS 
(SELECT scu."KEY_u" AS "KEY_u", scu.class AS class, scu."LogProba" AS "LogProba", scu."Proba" AS "Proba", scu."Score" AS "Score" 
FROM (SELECT orig_cte."KEY" AS "KEY_u", '1789-07-14T00:00:00.000000000' AS class, orig_cte."LogProba_1789-07-14T00:00_7" AS "LogProba", orig_cte."Proba_1789-07-14T00:00:00_4" AS "Proba", orig_cte."Score_1789-07-14T00:00:00_1" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", '1789-08-14T00:00:00.000000000' AS class, orig_cte."LogProba_1789-08-14T00:00_8" AS "LogProba", orig_cte."Proba_1789-08-14T00:00:00_5" AS "Proba", orig_cte."Score_1789-08-14T00:00:00_2" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", '1789-09-14T00:00:00.000000000' AS class, orig_cte."LogProba_1789-09-14T00:00_9" AS "LogProba", orig_cte."Proba_1789-09-14T00:00:00_6" AS "Proba", orig_cte."Score_1789-09-14T00:00:00_3" AS "Score" 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte."KEY" AS "KEY", orig_cte."Score_1789-07-14T00:00:00_1" AS "Score_1789-07-14T00:00:00_1", orig_cte."Score_1789-08-14T00:00:00_2" AS "Score_1789-08-14T00:00:00_2", orig_cte."Score_1789-09-14T00:00:00_3" AS "Score_1789-09-14T00:00:00_3", orig_cte."Proba_1789-07-14T00:00:00_4" AS "Proba_1789-07-14T00:00:00_4", orig_cte."Proba_1789-08-14T00:00:00_5" AS "Proba_1789-08-14T00:00:00_5", orig_cte."Proba_1789-09-14T00:00:00_6" AS "Proba_1789-09-14T00:00:00_6", orig_cte."LogProba_1789-07-14T00:00_7" AS "LogProba_1789-07-14T00:00_7", orig_cte."LogProba_1789-08-14T00:00_8" AS "LogProba_1789-08-14T00:00_8", orig_cte."LogProba_1789-09-14T00:00_9" AS "LogProba_1789-09-14T00:00_9", orig_cte."Decision" AS "Decision", orig_cte."DecisionProba" AS "DecisionProba", max_select."KEY_m" AS "KEY_m", max_select."max_Proba" AS "max_Proba" 
FROM orig_cte LEFT OUTER JOIN (SELECT score_class_union."KEY_u" AS "KEY_m", max(score_class_union."Proba") AS "max_Proba" 
FROM score_class_union GROUP BY score_class_union."KEY_u") AS max_select ON orig_cte."KEY" = max_select."KEY_m"), 
union_with_max AS 
(SELECT score_class_union."KEY_u" AS "KEY_u", score_class_union.class AS class, score_class_union."LogProba" AS "LogProba", score_class_union."Proba" AS "Proba", score_class_union."Score" AS "Score", score_max."KEY" AS "KEY", score_max."Score_1789-07-14T00:00:00_1" AS "Score_1789-07-14T00:00:00_1", score_max."Score_1789-08-14T00:00:00_2" AS "Score_1789-08-14T00:00:00_2", score_max."Score_1789-09-14T00:00:00_3" AS "Score_1789-09-14T00:00:00_3", score_max."Proba_1789-07-14T00:00:00_4" AS "Proba_1789-07-14T00:00:00_4", score_max."Proba_1789-08-14T00:00:00_5" AS "Proba_1789-08-14T00:00:00_5", score_max."Proba_1789-09-14T00:00:00_6" AS "Proba_1789-09-14T00:00:00_6", score_max."LogProba_1789-07-14T00:00_7" AS "LogProba_1789-07-14T00:00_7", score_max."LogProba_1789-08-14T00:00_8" AS "LogProba_1789-08-14T00:00_8", score_max."LogProba_1789-09-14T00:00_9" AS "LogProba_1789-09-14T00:00_9", score_max."Decision" AS "Decision", score_max."DecisionProba" AS "DecisionProba", score_max."KEY_m" AS "KEY_m", score_max."max_Proba" AS "max_Proba" 
FROM score_class_union LEFT OUTER JOIN score_max ON score_class_union."KEY_u" = score_max."KEY"), 
arg_max_cte AS 
(SELECT score_max."KEY" AS "KEY", score_max."Score_1789-07-14T00:00:00_1" AS "Score_1789-07-14T00:00:00_1", score_max."Score_1789-08-14T00:00:00_2" AS "Score_1789-08-14T00:00:00_2", score_max."Score_1789-09-14T00:00:00_3" AS "Score_1789-09-14T00:00:00_3", score_max."Proba_1789-07-14T00:00:00_4" AS "Proba_1789-07-14T00:00:00_4", score_max."Proba_1789-08-14T00:00:00_5" AS "Proba_1789-08-14T00:00:00_5", score_max."Proba_1789-09-14T00:00:00_6" AS "Proba_1789-09-14T00:00:00_6", score_max."LogProba_1789-07-14T00:00_7" AS "LogProba_1789-07-14T00:00_7", score_max."LogProba_1789-08-14T00:00_8" AS "LogProba_1789-08-14T00:00_8", score_max."LogProba_1789-09-14T00:00_9" AS "LogProba_1789-09-14T00:00_9", score_max."Decision" AS "Decision", score_max."DecisionProba" AS "DecisionProba", score_max."KEY_m" AS "KEY_m", score_max."max_Proba" AS "max_Proba", "arg_max_t_Proba"."KEY_Proba" AS "KEY_Proba", "arg_max_t_Proba"."arg_max_Proba" AS "arg_max_Proba" 
FROM score_max LEFT OUTER JOIN (SELECT union_with_max."KEY" AS "KEY_Proba", min(union_with_max.class) AS "arg_max_Proba" 
FROM union_with_max 
WHERE union_with_max."Proba" >= union_with_max."max_Proba" GROUP BY union_with_max."KEY") AS "arg_max_t_Proba" ON score_max."KEY" = "arg_max_t_Proba"."KEY_Proba")
 SELECT arg_max_cte."KEY" AS "KEY", arg_max_cte."Score_1789-07-14T00:00:00_1" AS "Score_1789-07-14T00:00:00.000000000", arg_max_cte."Score_1789-08-14T00:00:00_2" AS "Score_1789-08-14T00:00:00.000000000", arg_max_cte."Score_1789-09-14T00:00:00_3" AS "Score_1789-09-14T00:00:00.000000000", arg_max_cte."Proba_1789-07-14T00:00:00_4" AS "Proba_1789-07-14T00:00:00.000000000", arg_max_cte."Proba_1789-08-14T00:00:00_5" AS "Proba_1789-08-14T00:00:00.000000000", arg_max_cte."Proba_1789-09-14T00:00:00_6" AS "Proba_1789-09-14T00:00:00.000000000", CASE WHEN (arg_max_cte."Proba_1789-07-14T00:00:00_4" IS NULL OR arg_max_cte."Proba_1789-07-14T00:00:00_4" > 0.0) THEN ln(arg_max_cte."Proba_1789-07-14T00:00:00_4") ELSE -1e+20 END AS "LogProba_1789-07-14T00:00:00.000000000", CASE WHEN (arg_max_cte."Proba_1789-08-14T00:00:00_5" IS NULL OR arg_max_cte."Proba_1789-08-14T00:00:00_5" > 0.0) THEN ln(arg_max_cte."Proba_1789-08-14T00:00:00_5") ELSE -1e+20 END AS "LogProba_1789-08-14T00:00:00.000000000", CASE WHEN (arg_max_cte."Proba_1789-09-14T00:00:00_6" IS NULL OR arg_max_cte."Proba_1789-09-14T00:00:00_6" > 0.0) THEN ln(arg_max_cte."Proba_1789-09-14T00:00:00_6") ELSE -1e+20 END AS "LogProba_1789-09-14T00:00:00.000000000", arg_max_cte."arg_max_Proba" AS "Decision", arg_max_cte."max_Proba" AS "DecisionProba" 
FROM arg_max_cte