-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2018

-- Model : BaggingRegressor_Pipeline
-- Dataset : RandomReg_10
-- Database : firebird


-- This SQL code can contain one or more statements, to be executed in the order they appear in this file.



-- Code For temporary table TMP_20180417011538_DY3EUA_ADS_I part 1/2. Create 


CREATE GLOBAL TEMPORARY TABLE "TMP_20180417011538_DY3EUA_ADS_I" (
	"KEY" BIGINT, 
	impter_2 FLOAT, 
	impter_3 FLOAT, 
	impter_4 FLOAT, 
	impter_5 FLOAT, 
	impter_6 FLOAT, 
	impter_7 FLOAT, 
	impter_8 FLOAT, 
	impter_9 FLOAT, 
	impter_10 FLOAT, 
	impter_11 FLOAT
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table TMP_20180417011538_DY3EUA_ADS_I part 2/2. Populate

INSERT INTO "TMP_20180417011538_DY3EUA_ADS_I" ("KEY", impter_2, impter_3, impter_4, impter_5, impter_6, impter_7, impter_8, impter_9, impter_10, impter_11) SELECT "U"."KEY", "U".impter_2, "U".impter_3, "U".impter_4, "U".impter_5, "U".impter_6, "U".impter_7, "U".impter_8, "U".impter_9, "U".impter_10, "U".impter_11 
FROM (SELECT "ADS_imp_1_OUT"."KEY", "ADS_imp_1_OUT".impter_2, "ADS_imp_1_OUT".impter_3, "ADS_imp_1_OUT".impter_4, "ADS_imp_1_OUT".impter_5, "ADS_imp_1_OUT".impter_6, "ADS_imp_1_OUT".impter_7, "ADS_imp_1_OUT".impter_8, "ADS_imp_1_OUT".impter_9, "ADS_imp_1_OUT".impter_10, "ADS_imp_1_OUT".impter_11 
FROM (SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" IS NULL) THEN 0.16680947298137394 ELSE "ADS"."Feature_0" END AS impter_2, CASE WHEN ("ADS"."Feature_1" IS NULL) THEN -0.16351271994443456 ELSE "ADS"."Feature_1" END AS impter_3, CASE WHEN ("ADS"."Feature_2" IS NULL) THEN 0.19149292241003152 ELSE "ADS"."Feature_2" END AS impter_4, CASE WHEN ("ADS"."Feature_3" IS NULL) THEN 0.058384844753055345 ELSE "ADS"."Feature_3" END AS impter_5, CASE WHEN ("ADS"."Feature_4" IS NULL) THEN -0.09933205162122274 ELSE "ADS"."Feature_4" END AS impter_6, CASE WHEN ("ADS"."Feature_5" IS NULL) THEN 0.21293121660488037 ELSE "ADS"."Feature_5" END AS impter_7, CASE WHEN ("ADS"."Feature_6" IS NULL) THEN 0.047865568690029614 ELSE "ADS"."Feature_6" END AS impter_8, CASE WHEN ("ADS"."Feature_7" IS NULL) THEN 0.05078698959084227 ELSE "ADS"."Feature_7" END AS impter_9, CASE WHEN ("ADS"."Feature_8" IS NULL) THEN -0.1913199225908187 ELSE "ADS"."Feature_8" END AS impter_10, CASE WHEN ("ADS"."Feature_9" IS NULL) THEN 0.19940405677473352 ELSE "ADS"."Feature_9" END AS impter_11 
FROM "RandomReg_10" AS "ADS") AS "ADS_imp_1_OUT") AS "U"

-- Code For temporary table TMP_20180417011538_F1YGVN_ADS_S part 1/2. Create 


CREATE GLOBAL TEMPORARY TABLE "TMP_20180417011538_F1YGVN_ADS_S" (
	"KEY" BIGINT, 
	scaler_2 FLOAT, 
	scaler_3 FLOAT, 
	scaler_4 FLOAT, 
	scaler_5 FLOAT, 
	scaler_6 FLOAT, 
	scaler_7 FLOAT, 
	scaler_8 FLOAT, 
	scaler_9 FLOAT, 
	scaler_10 FLOAT, 
	scaler_11 FLOAT
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table TMP_20180417011538_F1YGVN_ADS_S part 2/2. Populate

INSERT INTO "TMP_20180417011538_F1YGVN_ADS_S" ("KEY", scaler_2, scaler_3, scaler_4, scaler_5, scaler_6, scaler_7, scaler_8, scaler_9, scaler_10, scaler_11) SELECT "U"."KEY", "U".scaler_2, "U".scaler_3, "U".scaler_4, "U".scaler_5, "U".scaler_6, "U".scaler_7, "U".scaler_8, "U".scaler_9, "U".scaler_10, "U".scaler_11 
FROM (SELECT "ADS_sca_2_OUT"."KEY", "ADS_sca_2_OUT".scaler_2, "ADS_sca_2_OUT".scaler_3, "ADS_sca_2_OUT".scaler_4, "ADS_sca_2_OUT".scaler_5, "ADS_sca_2_OUT".scaler_6, "ADS_sca_2_OUT".scaler_7, "ADS_sca_2_OUT".scaler_8, "ADS_sca_2_OUT".scaler_9, "ADS_sca_2_OUT".scaler_10, "ADS_sca_2_OUT".scaler_11 
FROM (SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", (CAST("ADS_imp_1_OUT".impter_2 AS FLOAT) - 0.16680947298137394) / 1.0289835997047314 AS scaler_2, (CAST("ADS_imp_1_OUT".impter_3 AS FLOAT) - -0.16351271994443456) / 0.9915812535046814 AS scaler_3, (CAST("ADS_imp_1_OUT".impter_4 AS FLOAT) - 0.19149292241003152) / 0.9321147629147756 AS scaler_4, (CAST("ADS_imp_1_OUT".impter_5 AS FLOAT) - 0.058384844753055345) / 1.0855729329506805 AS scaler_5, (CAST("ADS_imp_1_OUT".impter_6 AS FLOAT) - -0.09933205162122274) / 1.0743904412882828 AS scaler_6, (CAST("ADS_imp_1_OUT".impter_7 AS FLOAT) - 0.21293121660488037) / 0.9358074381886248 AS scaler_7, (CAST("ADS_imp_1_OUT".impter_8 AS FLOAT) - 0.047865568690029614) / 1.1363574090613386 AS scaler_8, (CAST("ADS_imp_1_OUT".impter_9 AS FLOAT) - 0.05078698959084227) / 0.9725457460098452 AS scaler_9, (CAST("ADS_imp_1_OUT".impter_10 AS FLOAT) - -0.1913199225908187) / 1.1415974677936562 AS scaler_10, (CAST("ADS_imp_1_OUT".impter_11 AS FLOAT) - 0.19940405677473352) / 0.882245682091319 AS scaler_11 
FROM "TMP_20180417011538_DY3EUA_ADS_I" AS "ADS_imp_1_OUT") AS "ADS_sca_2_OUT") AS "U"

-- Code For temporary table TMP_20180417011538_FE36HU_BAG_B part 1/2. Create 


CREATE GLOBAL TEMPORARY TABLE "TMP_20180417011538_FE36HU_BAG_B" (
	"KEY" BIGINT, 
	"Estimator" FLOAT
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table TMP_20180417011538_FE36HU_BAG_B part 2/2. Populate

INSERT INTO "TMP_20180417011538_FE36HU_BAG_B" ("KEY", "Estimator") SELECT "U"."KEY", "U"."Estimator" 
FROM (WITH "DT_node_lookup" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= 0.5968424081802368) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= -0.3798469603061676) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= 1.5122902393341064) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= -0.4780315160751343) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= -1.0161685943603516) THEN 5 ELSE 6 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= -1.761682391166687) THEN 8 ELSE 9 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= -0.5166343450546265) THEN 11 ELSE 12 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= -0.3954513967037201) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= -1.4288303852081299) THEN 15 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= -0.8729816675186157) THEN 17 ELSE 18 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 1.0448696613311768) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= 0.12294390052556992) THEN 21 ELSE 22 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= -0.12812240421772003) THEN 24 ELSE 25 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= -0.4683295488357544) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= 1.5136516094207764) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= 1.2387386560440063) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= 0.1715525984764099) THEN 30 ELSE 31 END ELSE 32 END ELSE 33 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= 0.5281001329421997) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= -0.8354120254516602) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= 1.361190915107727) THEN 37 ELSE 38 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= 0.06756183505058289) THEN 40 ELSE 41 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= 0.9063423871994019) THEN 43 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= 1.2210365533828735) THEN 45 ELSE 46 END END END END END AS node_id_2 
FROM "TMP_20180417011538_F1YGVN_ADS_S" AS "ADS_sca_2_OUT"), 
"DT_node_data" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values".threshold AS FLOAT) AS threshold, CAST("Values"."count" AS FLOAT) AS "count", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 5 AS depth, 4 AS parent_id, -405.2074819205236 AS "Estimator" FROM rdb$database UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS "count", 5 AS depth, 4 AS parent_id, -242.07063404110843 AS "Estimator" FROM rdb$database UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 7 AS parent_id, -268.1904323885528 AS "Estimator" FROM rdb$database UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS "count", 5 AS depth, 7 AS parent_id, -98.62910020709616 AS "Estimator" FROM rdb$database UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 4 AS depth, 10 AS parent_id, -1.7789086303776003 AS "Estimator" FROM rdb$database UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 4 AS depth, 10 AS parent_id, 133.8707138905623 AS "Estimator" FROM rdb$database UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 4 AS depth, 14 AS parent_id, -9.185160907179679 AS "Estimator" FROM rdb$database UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 16 AS parent_id, -154.40083699334056 AS "Estimator" FROM rdb$database UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 5 AS depth, 16 AS parent_id, -257.81327335251797 AS "Estimator" FROM rdb$database UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS "count", 5 AS depth, 20 AS parent_id, 41.46822647392525 AS "Estimator" FROM rdb$database UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS "count", 5 AS depth, 20 AS parent_id, 172.11640989037147 AS "Estimator" FROM rdb$database UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS "count", 5 AS depth, 23 AS parent_id, 199.53096616939501 AS "Estimator" FROM rdb$database UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 5 AS depth, 23 AS parent_id, 323.5464879669397 AS "Estimator" FROM rdb$database UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 29 AS parent_id, 60.83005801950535 AS "Estimator" FROM rdb$database UNION ALL SELECT 31 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 29 AS parent_id, 58.56592202346141 AS "Estimator" FROM rdb$database UNION ALL SELECT 32 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 4 AS depth, 28 AS parent_id, 23.511748777975313 AS "Estimator" FROM rdb$database UNION ALL SELECT 33 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 3 AS depth, 27 AS parent_id, 116.8891961793557 AS "Estimator" FROM rdb$database UNION ALL SELECT 37 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 36 AS parent_id, 259.87552025822583 AS "Estimator" FROM rdb$database UNION ALL SELECT 38 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 36 AS parent_id, 325.0738816201826 AS "Estimator" FROM rdb$database UNION ALL SELECT 40 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 39 AS parent_id, 194.4087167101487 AS "Estimator" FROM rdb$database UNION ALL SELECT 41 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 39 AS parent_id, 228.58868551702315 AS "Estimator" FROM rdb$database UNION ALL SELECT 43 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 4 AS depth, 42 AS parent_id, 447.6909835452225 AS "Estimator" FROM rdb$database UNION ALL SELECT 45 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 44 AS parent_id, 393.261092787257 AS "Estimator" FROM rdb$database UNION ALL SELECT 46 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 5 AS depth, 44 AS parent_id, 355.99351619859897 AS "Estimator" FROM rdb$database) AS "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".node_id AS node_id, "DT_node_data".feature AS feature, "DT_node_data".threshold AS threshold, "DT_node_data"."count" AS "count", "DT_node_data".depth AS depth, "DT_node_data".parent_id AS parent_id, "DT_node_data"."Estimator" AS "Estimator" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".node_id), 
"BAG_Model_0" AS 
(SELECT "DT_Output"."KEY" AS "KEY", "DT_Output"."Estimator" AS "Estimator" 
FROM "DT_Output"), 
"DT_node_lookup_1" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= -0.9428368806838989) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= -1.2679386138916016) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= 0.4619877338409424) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= -0.6295563578605652) THEN 4 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= 0.39995259046554565) THEN 6 ELSE 7 END END ELSE 8 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= -1.4116946458816528) THEN 10 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= -0.4546669125556946) THEN 12 ELSE 13 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= -0.17482367157936096) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= -0.2454001009464264) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 0.5875247120857239) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= 0.7279279828071594) THEN 18 ELSE 19 END ELSE 20 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 0.8959313631057739) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= -1.1340858936309814) THEN 23 ELSE 24 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= -0.2944139242172241) THEN 26 ELSE 27 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= -0.739884614944458) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= 1.2133164405822754) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= -0.9330978393554688) THEN 31 ELSE 32 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= -1.5038838386535645) THEN 34 ELSE 35 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= -0.7899761199951172) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= -0.5092946887016296) THEN 38 ELSE 39 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= 0.6652275323867798) THEN 41 ELSE 42 END END END END END AS node_id_2 
FROM "TMP_20180417011538_F1YGVN_ADS_S" AS "ADS_sca_2_OUT"), 
"DT_node_data_1" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values".threshold AS FLOAT) AS threshold, CAST("Values"."count" AS FLOAT) AS "count", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 4 AS depth, 3 AS parent_id, -284.890410429711 AS "Estimator" FROM rdb$database UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 5 AS parent_id, -165.64587304935068 AS "Estimator" FROM rdb$database UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 5 AS parent_id, -210.35491750133752 AS "Estimator" FROM rdb$database UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 3 AS depth, 2 AS parent_id, -53.55855810403281 AS "Estimator" FROM rdb$database UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 3 AS depth, 9 AS parent_id, -351.3842930876292 AS "Estimator" FROM rdb$database UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 4 AS depth, 11 AS parent_id, -459.030670753418 AS "Estimator" FROM rdb$database UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 4 AS depth, 11 AS parent_id, -422.39029400237723 AS "Estimator" FROM rdb$database UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS "count", 5 AS depth, 17 AS parent_id, -155.5341988547945 AS "Estimator" FROM rdb$database UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 5 AS depth, 17 AS parent_id, -244.20935844983507 AS "Estimator" FROM rdb$database UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 4 AS depth, 16 AS parent_id, -9.185160907179679 AS "Estimator" FROM rdb$database UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 22 AS parent_id, -223.26828856161853 AS "Estimator" FROM rdb$database UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS "count", 5 AS depth, 22 AS parent_id, -2.6022185522222703 AS "Estimator" FROM rdb$database UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 25 AS parent_id, 144.424454256417 AS "Estimator" FROM rdb$database UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 25 AS parent_id, 156.85798347147366 AS "Estimator" FROM rdb$database UNION ALL SELECT 31 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 30 AS parent_id, 11.979848483268036 AS "Estimator" FROM rdb$database UNION ALL SELECT 32 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 30 AS parent_id, 23.511748777975313 AS "Estimator" FROM rdb$database UNION ALL SELECT 34 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 33 AS parent_id, -27.42654029072463 AS "Estimator" FROM rdb$database UNION ALL SELECT 35 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 33 AS parent_id, -32.3700606387813 AS "Estimator" FROM rdb$database UNION ALL SELECT 38 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 5 AS depth, 37 AS parent_id, -14.482521662072362 AS "Estimator" FROM rdb$database UNION ALL SELECT 39 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 37 AS parent_id, -33.337014733450744 AS "Estimator" FROM rdb$database UNION ALL SELECT 41 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS "count", 5 AS depth, 40 AS parent_id, 210.19737687026083 AS "Estimator" FROM rdb$database UNION ALL SELECT 42 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS "count", 5 AS depth, 40 AS parent_id, 373.2958762353178 AS "Estimator" FROM rdb$database) AS "Values"), 
"DT_Output_1" AS 
(SELECT "DT_node_lookup_1"."KEY" AS "KEY", "DT_node_lookup_1".node_id_2 AS node_id_2, "DT_node_data_1".node_id AS node_id, "DT_node_data_1".feature AS feature, "DT_node_data_1".threshold AS threshold, "DT_node_data_1"."count" AS "count", "DT_node_data_1".depth AS depth, "DT_node_data_1".parent_id AS parent_id, "DT_node_data_1"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_1" LEFT OUTER JOIN "DT_node_data_1" ON "DT_node_lookup_1".node_id_2 = "DT_node_data_1".node_id), 
"BAG_Model_1" AS 
(SELECT "DT_Output_1"."KEY" AS "KEY", "DT_Output_1"."Estimator" AS "Estimator" 
FROM "DT_Output_1"), 
"DT_node_lookup_2" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= 0.809576153755188) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 0.9782909154891968) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= 0.014573076739907265) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= 0.04512178152799606) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= -0.4225664734840393) THEN 5 ELSE 6 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= -0.44942522048950195) THEN 8 ELSE 9 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= 1.3991467952728271) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= -0.27082371711730957) THEN 12 ELSE 13 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= -0.05861467123031616) THEN 15 ELSE 16 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 1.9898145198822021) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= 0.6017025113105774) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= -0.12937447428703308) THEN 20 ELSE 21 END ELSE 22 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= 0.6308369636535645) THEN 24 ELSE 25 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= 0.2623572051525116) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= -0.6946526765823364) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 0.6101154088973999) THEN 29 ELSE 30 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= 0.814159095287323) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= 0.8622722029685974) THEN 33 ELSE 34 END ELSE 35 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= 0.23263978958129883) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= -0.060503359884023666) THEN 38 ELSE 39 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= -0.2787798047065735) THEN 41 ELSE 42 END END END END AS node_id_2 
FROM "TMP_20180417011538_F1YGVN_ADS_S" AS "ADS_sca_2_OUT"), 
"DT_node_data_2" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values".threshold AS FLOAT) AS threshold, CAST("Values"."count" AS FLOAT) AS "count", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS "count", 5 AS depth, 4 AS parent_id, -296.8393166750528 AS "Estimator" FROM rdb$database UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS "count", 5 AS depth, 4 AS parent_id, -177.75033458301976 AS "Estimator" FROM rdb$database UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS "count", 5 AS depth, 7 AS parent_id, -141.6348852658934 AS "Estimator" FROM rdb$database UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS "count", 5 AS depth, 7 AS parent_id, -31.80056391393078 AS "Estimator" FROM rdb$database UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS "count", 5 AS depth, 11 AS parent_id, -102.85089819030136 AS "Estimator" FROM rdb$database UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS "count", 5 AS depth, 11 AS parent_id, 12.145058713842305 AS "Estimator" FROM rdb$database UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 14 AS parent_id, 290.70915409731754 AS "Estimator" FROM rdb$database UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 14 AS parent_id, 320.6826523308587 AS "Estimator" FROM rdb$database UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 5 AS depth, 19 AS parent_id, 150.6412188639453 AS "Estimator" FROM rdb$database UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 19 AS parent_id, 191.5521549407964 AS "Estimator" FROM rdb$database UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 4 AS depth, 18 AS parent_id, 259.87552025822583 AS "Estimator" FROM rdb$database UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 4 AS depth, 23 AS parent_id, 447.6909835452225 AS "Estimator" FROM rdb$database UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 4 AS depth, 23 AS parent_id, 316.51213779149236 AS "Estimator" FROM rdb$database UNION ALL SELECT 29 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 4 AS depth, 28 AS parent_id, 228.58868551702315 AS "Estimator" FROM rdb$database UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 4 AS depth, 28 AS parent_id, 325.0738816201826 AS "Estimator" FROM rdb$database UNION ALL SELECT 33 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 5 AS depth, 32 AS parent_id, 60.60536391637268 AS "Estimator" FROM rdb$database UNION ALL SELECT 34 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 32 AS parent_id, 113.4408795258052 AS "Estimator" FROM rdb$database UNION ALL SELECT 35 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 4 AS depth, 31 AS parent_id, 198.97164294103214 AS "Estimator" FROM rdb$database UNION ALL SELECT 38 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 4 AS depth, 37 AS parent_id, 243.63801061508232 AS "Estimator" FROM rdb$database UNION ALL SELECT 39 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 4 AS depth, 37 AS parent_id, 277.9812845098006 AS "Estimator" FROM rdb$database UNION ALL SELECT 41 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 4 AS depth, 40 AS parent_id, 360.6157244330813 AS "Estimator" FROM rdb$database UNION ALL SELECT 42 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 4 AS depth, 40 AS parent_id, 393.261092787257 AS "Estimator" FROM rdb$database) AS "Values"), 
"DT_Output_2" AS 
(SELECT "DT_node_lookup_2"."KEY" AS "KEY", "DT_node_lookup_2".node_id_2 AS node_id_2, "DT_node_data_2".node_id AS node_id, "DT_node_data_2".feature AS feature, "DT_node_data_2".threshold AS threshold, "DT_node_data_2"."count" AS "count", "DT_node_data_2".depth AS depth, "DT_node_data_2".parent_id AS parent_id, "DT_node_data_2"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_2" LEFT OUTER JOIN "DT_node_data_2" ON "DT_node_lookup_2".node_id_2 = "DT_node_data_2".node_id), 
"BAG_Model_2" AS 
(SELECT "DT_Output_2"."KEY" AS "KEY", "DT_Output_2"."Estimator" AS "Estimator" 
FROM "DT_Output_2"), 
"DT_node_lookup_3" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 0.4185757637023926) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= -0.0977436825633049) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= -0.9847835302352905) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= -1.0613932609558105) THEN 4 ELSE 5 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= 0.10032571852207184) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= -0.27099406719207764) THEN 8 ELSE 9 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= -1.6788382530212402) THEN 11 ELSE 12 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= 0.15018826723098755) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= -0.2280818521976471) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= -0.4127510190010071) THEN 16 ELSE 17 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= 0.026385191828012466) THEN 19 ELSE 20 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= 0.569673478603363) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= -0.06553857028484344) THEN 23 ELSE 24 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= 0.09259194135665894) THEN 26 ELSE 27 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= -1.6506280899047852) THEN 29 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= -0.03073575161397457) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= -0.3158585727214813) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= -0.7451171875) THEN 33 ELSE 34 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= -0.8034176230430603) THEN 36 ELSE 37 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= 0.46682029962539673) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= 0.020799100399017334) THEN 40 ELSE 41 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= 1.6469647884368896) THEN 43 ELSE 44 END END END END END AS node_id_2 
FROM "TMP_20180417011538_F1YGVN_ADS_S" AS "ADS_sca_2_OUT"), 
"DT_node_data_3" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values".threshold AS FLOAT) AS threshold, CAST("Values"."count" AS FLOAT) AS "count", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 4 AS depth, 3 AS parent_id, -351.3842930876292 AS "Estimator" FROM rdb$database UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 4 AS depth, 3 AS parent_id, -459.030670753418 AS "Estimator" FROM rdb$database UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS "count", 5 AS depth, 7 AS parent_id, -210.69664064319215 AS "Estimator" FROM rdb$database UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 7 AS parent_id, -305.6750972104841 AS "Estimator" FROM rdb$database UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 10 AS parent_id, -53.55855810403281 AS "Estimator" FROM rdb$database UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 5 AS depth, 10 AS parent_id, -122.95886223941 AS "Estimator" FROM rdb$database UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 5 AS depth, 15 AS parent_id, -116.6762085558222 AS "Estimator" FROM rdb$database UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 5 AS depth, 15 AS parent_id, -216.97685028819683 AS "Estimator" FROM rdb$database UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 18 AS parent_id, -181.5117298102302 AS "Estimator" FROM rdb$database UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS "count", 5 AS depth, 18 AS parent_id, 17.619280054329796 AS "Estimator" FROM rdb$database UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS "count", 5 AS depth, 22 AS parent_id, 15.08637447863128 AS "Estimator" FROM rdb$database UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 5 AS depth, 22 AS parent_id, 128.21020798682676 AS "Estimator" FROM rdb$database UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 25 AS parent_id, 320.6826523308587 AS "Estimator" FROM rdb$database UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 5 AS depth, 25 AS parent_id, 376.9384086101691 AS "Estimator" FROM rdb$database UNION ALL SELECT 29 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 2 AS depth, 28 AS parent_id, -298.79907558939374 AS "Estimator" FROM rdb$database UNION ALL SELECT 33 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 32 AS parent_id, -9.185160907179679 AS "Estimator" FROM rdb$database UNION ALL SELECT 34 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 32 AS parent_id, -67.71218597426643 AS "Estimator" FROM rdb$database UNION ALL SELECT 36 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 35 AS parent_id, 351.37130796411674 AS "Estimator" FROM rdb$database UNION ALL SELECT 37 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS "count", 5 AS depth, 35 AS parent_id, 148.1109056250043 AS "Estimator" FROM rdb$database UNION ALL SELECT 40 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 5 AS depth, 39 AS parent_id, 169.37489455103199 AS "Estimator" FROM rdb$database UNION ALL SELECT 41 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS "count", 5 AS depth, 39 AS parent_id, 265.0347129627642 AS "Estimator" FROM rdb$database UNION ALL SELECT 43 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS "count", 5 AS depth, 42 AS parent_id, 314.9874715901854 AS "Estimator" FROM rdb$database UNION ALL SELECT 44 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 42 AS parent_id, 479.70721604450864 AS "Estimator" FROM rdb$database) AS "Values"), 
"DT_Output_3" AS 
(SELECT "DT_node_lookup_3"."KEY" AS "KEY", "DT_node_lookup_3".node_id_2 AS node_id_2, "DT_node_data_3".node_id AS node_id, "DT_node_data_3".feature AS feature, "DT_node_data_3".threshold AS threshold, "DT_node_data_3"."count" AS "count", "DT_node_data_3".depth AS depth, "DT_node_data_3".parent_id AS parent_id, "DT_node_data_3"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_3" LEFT OUTER JOIN "DT_node_data_3" ON "DT_node_lookup_3".node_id_2 = "DT_node_data_3".node_id), 
"BAG_Model_3" AS 
(SELECT "DT_Output_3"."KEY" AS "KEY", "DT_Output_3"."Estimator" AS "Estimator" 
FROM "DT_Output_3"), 
"DT_node_lookup_4" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= -0.7928295135498047) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= 0.2923084795475006) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= -1.8589808940887451) THEN 3 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= -1.1683640480041504) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= -1.5423946380615234) THEN 6 ELSE 7 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= -0.33297401666641235) THEN 9 ELSE 10 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 0.13702774047851562) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= -1.1580843925476074) THEN 13 ELSE 14 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= 0.7820444703102112) THEN 16 ELSE 17 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= 0.0016293618828058243) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 0.17639854550361633) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= 0.435245156288147) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= 0.47935765981674194) THEN 22 ELSE 23 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= 0.12735484540462494) THEN 25 ELSE 26 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= 0.08869194984436035) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= 0.9192926287651062) THEN 29 ELSE 30 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= 0.08243445307016373) THEN 32 ELSE 33 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= -0.7241815328598022) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= 0.014819040894508362) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= 0.19140076637268066) THEN 37 ELSE 38 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= -0.7194504141807556) THEN 40 ELSE 41 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= -0.07108019292354584) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= -0.015767760574817657) THEN 44 ELSE 45 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= 0.8856830596923828) THEN 47 ELSE 48 END END END END END AS node_id_2 
FROM "TMP_20180417011538_F1YGVN_ADS_S" AS "ADS_sca_2_OUT"), 
"DT_node_data_4" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values".threshold AS FLOAT) AS threshold, CAST("Values"."count" AS FLOAT) AS "count", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 3 AS depth, 2 AS parent_id, -459.030670753418 AS "Estimator" FROM rdb$database UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS "count", 5 AS depth, 5 AS parent_id, -248.32160218228188 AS "Estimator" FROM rdb$database UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS "count", 5 AS depth, 5 AS parent_id, -147.90439308994004 AS "Estimator" FROM rdb$database UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 5 AS depth, 8 AS parent_id, -280.43388966888915 AS "Estimator" FROM rdb$database UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 8 AS parent_id, -351.3842930876292 AS "Estimator" FROM rdb$database UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 4 AS depth, 12 AS parent_id, -20.27001010137917 AS "Estimator" FROM rdb$database UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 4 AS depth, 12 AS parent_id, -53.55855810403281 AS "Estimator" FROM rdb$database UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 4 AS depth, 15 AS parent_id, 259.87552025822583 AS "Estimator" FROM rdb$database UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 4 AS depth, 15 AS parent_id, 235.3201708856319 AS "Estimator" FROM rdb$database UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 5 AS depth, 21 AS parent_id, -200.84036412184003 AS "Estimator" FROM rdb$database UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 5 AS depth, 21 AS parent_id, -134.4576341722804 AS "Estimator" FROM rdb$database UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 5 AS depth, 24 AS parent_id, 27.468904490490246 AS "Estimator" FROM rdb$database UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 5 AS depth, 24 AS parent_id, -65.1682960187446 AS "Estimator" FROM rdb$database UNION ALL SELECT 29 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS "count", 5 AS depth, 28 AS parent_id, -5.736516341880559 AS "Estimator" FROM rdb$database UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 5 AS depth, 28 AS parent_id, 34.804100287796395 AS "Estimator" FROM rdb$database UNION ALL SELECT 32 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 31 AS parent_id, 156.85798347147366 AS "Estimator" FROM rdb$database UNION ALL SELECT 33 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 31 AS parent_id, 144.424454256417 AS "Estimator" FROM rdb$database UNION ALL SELECT 37 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 5 AS depth, 36 AS parent_id, -33.01469670189426 AS "Estimator" FROM rdb$database UNION ALL SELECT 38 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 5 AS depth, 36 AS parent_id, -1.7010602277926026 AS "Estimator" FROM rdb$database UNION ALL SELECT 40 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 39 AS parent_id, 116.8891961793557 AS "Estimator" FROM rdb$database UNION ALL SELECT 41 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 39 AS parent_id, 58.56592202346141 AS "Estimator" FROM rdb$database UNION ALL SELECT 44 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS "count", 5 AS depth, 43 AS parent_id, 53.72934572915507 AS "Estimator" FROM rdb$database UNION ALL SELECT 45 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 5 AS depth, 43 AS parent_id, 285.43270621338684 AS "Estimator" FROM rdb$database UNION ALL SELECT 47 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS "count", 5 AS depth, 46 AS parent_id, 257.2478167667274 AS "Estimator" FROM rdb$database UNION ALL SELECT 48 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 5 AS depth, 46 AS parent_id, 371.49751388447316 AS "Estimator" FROM rdb$database) AS "Values"), 
"DT_Output_4" AS 
(SELECT "DT_node_lookup_4"."KEY" AS "KEY", "DT_node_lookup_4".node_id_2 AS node_id_2, "DT_node_data_4".node_id AS node_id, "DT_node_data_4".feature AS feature, "DT_node_data_4".threshold AS threshold, "DT_node_data_4"."count" AS "count", "DT_node_data_4".depth AS depth, "DT_node_data_4".parent_id AS parent_id, "DT_node_data_4"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_4" LEFT OUTER JOIN "DT_node_data_4" ON "DT_node_lookup_4".node_id_2 = "DT_node_data_4".node_id), 
"BAG_Model_4" AS 
(SELECT "DT_Output_4"."KEY" AS "KEY", "DT_Output_4"."Estimator" AS "Estimator" 
FROM "DT_Output_4"), 
"DT_node_lookup_5" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= -0.007927309721708298) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= -0.9403623342514038) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= -0.9394272565841675) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= -0.06141167879104614) THEN 4 ELSE 5 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= 0.9025056958198547) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= 0.7692941427230835) THEN 8 ELSE 9 END ELSE 10 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= 0.015268662944436073) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= 0.07251989096403122) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= -0.7382878065109253) THEN 14 ELSE 15 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= 0.5075057744979858) THEN 17 ELSE 18 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= 0.9470257759094238) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= 0.6026085019111633) THEN 21 ELSE 22 END ELSE 23 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= 0.029281165450811386) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 0.8083431720733643) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= -0.7062302827835083) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 0.10636130720376968) THEN 28 ELSE 29 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= -0.1874106079339981) THEN 31 ELSE 32 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= 0.41880154609680176) THEN 34 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= 0.4929808974266052) THEN 36 ELSE 37 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= 0.1847696751356125) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= 0.09593190252780914) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= 0.01517878845334053) THEN 41 ELSE 42 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= 0.4655503034591675) THEN 44 ELSE 45 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= 2.044734001159668) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= -0.6538205146789551) THEN 48 ELSE 49 END ELSE 50 END END END END AS node_id_2 
FROM "TMP_20180417011538_F1YGVN_ADS_S" AS "ADS_sca_2_OUT"), 
"DT_node_data_5" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values".threshold AS FLOAT) AS threshold, CAST("Values"."count" AS FLOAT) AS "count", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 4 AS depth, 3 AS parent_id, -351.3842930876292 AS "Estimator" FROM rdb$database UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 4 AS depth, 3 AS parent_id, -422.39029400237723 AS "Estimator" FROM rdb$database UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS "count", 5 AS depth, 7 AS parent_id, -104.92167060892582 AS "Estimator" FROM rdb$database UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 5 AS depth, 7 AS parent_id, -191.063284323481 AS "Estimator" FROM rdb$database UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 4 AS depth, 6 AS parent_id, -305.6750972104841 AS "Estimator" FROM rdb$database UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 5 AS depth, 13 AS parent_id, -192.83109115096553 AS "Estimator" FROM rdb$database UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 5 AS depth, 13 AS parent_id, -120.67653414105177 AS "Estimator" FROM rdb$database UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS "count", 5 AS depth, 16 AS parent_id, -18.88939923472416 AS "Estimator" FROM rdb$database UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 5 AS depth, 16 AS parent_id, -114.01123052917626 AS "Estimator" FROM rdb$database UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS "count", 5 AS depth, 20 AS parent_id, 103.60520840434049 AS "Estimator" FROM rdb$database UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS "count", 5 AS depth, 20 AS parent_id, -18.883085331926868 AS "Estimator" FROM rdb$database UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 4 AS depth, 19 AS parent_id, 393.261092787257 AS "Estimator" FROM rdb$database UNION ALL SELECT 28 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 27 AS parent_id, -181.5117298102302 AS "Estimator" FROM rdb$database UNION ALL SELECT 29 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 27 AS parent_id, -251.2683418956458 AS "Estimator" FROM rdb$database UNION ALL SELECT 31 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS "count", 5 AS depth, 30 AS parent_id, 22.30851676353701 AS "Estimator" FROM rdb$database UNION ALL SELECT 32 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 5 AS depth, 30 AS parent_id, -33.06227029601031 AS "Estimator" FROM rdb$database UNION ALL SELECT 34 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 4 AS depth, 33 AS parent_id, 156.85798347147366 AS "Estimator" FROM rdb$database UNION ALL SELECT 36 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 35 AS parent_id, 277.9812845098006 AS "Estimator" FROM rdb$database UNION ALL SELECT 37 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 35 AS parent_id, 235.3201708856319 AS "Estimator" FROM rdb$database UNION ALL SELECT 41 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 5 AS depth, 40 AS parent_id, 79.5768303814577 AS "Estimator" FROM rdb$database UNION ALL SELECT 42 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 40 AS parent_id, 198.97164294103217 AS "Estimator" FROM rdb$database UNION ALL SELECT 44 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 5 AS depth, 43 AS parent_id, 210.4674417575487 AS "Estimator" FROM rdb$database UNION ALL SELECT 45 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS "count", 5 AS depth, 43 AS parent_id, 329.52203269548926 AS "Estimator" FROM rdb$database UNION ALL SELECT 48 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 5 AS depth, 47 AS parent_id, 270.15339820458973 AS "Estimator" FROM rdb$database UNION ALL SELECT 49 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS "count", 5 AS depth, 47 AS parent_id, 344.4919380068218 AS "Estimator" FROM rdb$database UNION ALL SELECT 50 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 4 AS depth, 46 AS parent_id, 479.70721604450864 AS "Estimator" FROM rdb$database) AS "Values"), 
"DT_Output_5" AS 
(SELECT "DT_node_lookup_5"."KEY" AS "KEY", "DT_node_lookup_5".node_id_2 AS node_id_2, "DT_node_data_5".node_id AS node_id, "DT_node_data_5".feature AS feature, "DT_node_data_5".threshold AS threshold, "DT_node_data_5"."count" AS "count", "DT_node_data_5".depth AS depth, "DT_node_data_5".parent_id AS parent_id, "DT_node_data_5"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_5" LEFT OUTER JOIN "DT_node_data_5" ON "DT_node_lookup_5".node_id_2 = "DT_node_data_5".node_id), 
"BAG_Model_5" AS 
(SELECT "DT_Output_5"."KEY" AS "KEY", "DT_Output_5"."Estimator" AS "Estimator" 
FROM "DT_Output_5"), 
"DT_node_lookup_6" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= -0.007927309721708298) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= -0.6461533308029175) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= -0.7652519345283508) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= -1.3587387800216675) THEN 4 ELSE 5 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= 0.4619877338409424) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= -0.15017151832580566) THEN 8 ELSE 9 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= 1.0033684968948364) THEN 11 ELSE 12 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= 0.7406691908836365) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= -0.6827855110168457) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= 0.3240702152252197) THEN 16 ELSE 17 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= 1.028967022895813) THEN 19 ELSE 20 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= 0.4961199462413788) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= 1.5310096740722656) THEN 23 ELSE 24 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= -0.1660155951976776) THEN 26 ELSE 27 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= -0.2180408239364624) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= 0.11110728979110718) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= -0.11874869465827942) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= -0.3447260558605194) THEN 32 ELSE 33 END ELSE 34 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= -1.734428882598877) THEN 36 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= 0.20415765047073364) THEN 38 ELSE 39 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= -1.2978788614273071) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= -0.2148299515247345) THEN 42 ELSE 43 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= -1.2278449535369873) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= 0.6635289192199707) THEN 46 ELSE 47 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= 0.46682029962539673) THEN 49 ELSE 50 END END END END END AS node_id_2 
FROM "TMP_20180417011538_F1YGVN_ADS_S" AS "ADS_sca_2_OUT"), 
"DT_node_data_6" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values".threshold AS FLOAT) AS threshold, CAST("Values"."count" AS FLOAT) AS "count", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 4 AS depth, 3 AS parent_id, -459.030670753418 AS "Estimator" FROM rdb$database UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 4 AS depth, 3 AS parent_id, -422.39029400237723 AS "Estimator" FROM rdb$database UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 5 AS depth, 7 AS parent_id, -202.31673701056397 AS "Estimator" FROM rdb$database UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 5 AS depth, 7 AS parent_id, -147.92721988532008 AS "Estimator" FROM rdb$database UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 10 AS parent_id, -53.55855810403281 AS "Estimator" FROM rdb$database UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 10 AS parent_id, -101.20974879377152 AS "Estimator" FROM rdb$database UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 15 AS parent_id, -223.26828856161853 AS "Estimator" FROM rdb$database UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 15 AS parent_id, -140.8312353487667 AS "Estimator" FROM rdb$database UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS "count", 5 AS depth, 18 AS parent_id, -74.45046084947587 AS "Estimator" FROM rdb$database UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 5 AS depth, 18 AS parent_id, -17.441292989654784 AS "Estimator" FROM rdb$database UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 5 AS depth, 22 AS parent_id, 58.674636164574274 AS "Estimator" FROM rdb$database UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 22 AS parent_id, 44.29871810773542 AS "Estimator" FROM rdb$database UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 25 AS parent_id, 11.979848483268036 AS "Estimator" FROM rdb$database UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 25 AS parent_id, -8.541514583322922 AS "Estimator" FROM rdb$database UNION ALL SELECT 32 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 31 AS parent_id, -268.1904323885528 AS "Estimator" FROM rdb$database UNION ALL SELECT 33 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 31 AS parent_id, -154.40083699334056 AS "Estimator" FROM rdb$database UNION ALL SELECT 34 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 4 AS depth, 30 AS parent_id, 144.424454256417 AS "Estimator" FROM rdb$database UNION ALL SELECT 36 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 4 AS depth, 35 AS parent_id, 156.85798347147366 AS "Estimator" FROM rdb$database UNION ALL SELECT 38 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS "count", 5 AS depth, 37 AS parent_id, 36.64726905648302 AS "Estimator" FROM rdb$database UNION ALL SELECT 39 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS "count", 5 AS depth, 37 AS parent_id, -1.8090427707124448 AS "Estimator" FROM rdb$database UNION ALL SELECT 42 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 4 AS depth, 41 AS parent_id, -298.79907558939374 AS "Estimator" FROM rdb$database UNION ALL SELECT 43 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 4 AS depth, 41 AS parent_id, -20.4235287408218 AS "Estimator" FROM rdb$database UNION ALL SELECT 46 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 45 AS parent_id, -27.42654029072463 AS "Estimator" FROM rdb$database UNION ALL SELECT 47 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 45 AS parent_id, 113.4408795258052 AS "Estimator" FROM rdb$database UNION ALL SELECT 49 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS "count", 5 AS depth, 48 AS parent_id, 220.69433824924843 AS "Estimator" FROM rdb$database UNION ALL SELECT 50 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS "count", 5 AS depth, 48 AS parent_id, 389.66883267552987 AS "Estimator" FROM rdb$database) AS "Values"), 
"DT_Output_6" AS 
(SELECT "DT_node_lookup_6"."KEY" AS "KEY", "DT_node_lookup_6".node_id_2 AS node_id_2, "DT_node_data_6".node_id AS node_id, "DT_node_data_6".feature AS feature, "DT_node_data_6".threshold AS threshold, "DT_node_data_6"."count" AS "count", "DT_node_data_6".depth AS depth, "DT_node_data_6".parent_id AS parent_id, "DT_node_data_6"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_6" LEFT OUTER JOIN "DT_node_data_6" ON "DT_node_lookup_6".node_id_2 = "DT_node_data_6".node_id), 
"BAG_Model_6" AS 
(SELECT "DT_Output_6"."KEY" AS "KEY", "DT_Output_6"."Estimator" AS "Estimator" 
FROM "DT_Output_6"), 
"DT_node_lookup_7" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 0.8083431720733643) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= 0.7477214932441711) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= -0.9403623342514038) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= -0.6311492919921875) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= -0.7764221429824829) THEN 5 ELSE 6 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= 0.15906177461147308) THEN 8 ELSE 9 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= -0.01286462601274252) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= -0.8831796050071716) THEN 12 ELSE 13 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= 0.14383190870285034) THEN 15 ELSE 16 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= 0.7082182168960571) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= -1.646566390991211) THEN 19 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 0.5387722253799438) THEN 21 ELSE 22 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= 0.4694274663925171) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= 1.6634272336959839) THEN 25 ELSE 26 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= 0.7375079393386841) THEN 28 ELSE 29 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= -0.30469074845314026) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 0.9782909154891968) THEN 32 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= 0.08243445307016373) THEN 34 ELSE 35 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= 0.3019660413265228) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= -0.845077395439148) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= 0.7820444703102112) THEN 39 ELSE 40 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= -0.46967995166778564) THEN 42 ELSE 43 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= 1.9758014678955078) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= -1.0312672853469849) THEN 46 ELSE 47 END ELSE 48 END END END END AS node_id_2 
FROM "TMP_20180417011538_F1YGVN_ADS_S" AS "ADS_sca_2_OUT"), 
"DT_node_data_7" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values".threshold AS FLOAT) AS threshold, CAST("Values"."count" AS FLOAT) AS "count", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 4 AS parent_id, -422.39029400237723 AS "Estimator" FROM rdb$database UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS "count", 5 AS depth, 4 AS parent_id, -278.4070414726523 AS "Estimator" FROM rdb$database UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS "count", 5 AS depth, 7 AS parent_id, -194.2074617845642 AS "Estimator" FROM rdb$database UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 5 AS depth, 7 AS parent_id, -69.44228833394571 AS "Estimator" FROM rdb$database UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS "count", 5 AS depth, 11 AS parent_id, -224.07377768185083 AS "Estimator" FROM rdb$database UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS "count", 5 AS depth, 11 AS parent_id, -67.8740888192385 AS "Estimator" FROM rdb$database UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 5 AS depth, 14 AS parent_id, 212.28993399393994 AS "Estimator" FROM rdb$database UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS "count", 5 AS depth, 14 AS parent_id, 13.66733519279175 AS "Estimator" FROM rdb$database UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 4 AS depth, 18 AS parent_id, -284.890410429711 AS "Estimator" FROM rdb$database UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 5 AS depth, 20 AS parent_id, -26.697877154088868 AS "Estimator" FROM rdb$database UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 20 AS parent_id, 62.64480580928396 AS "Estimator" FROM rdb$database UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 5 AS depth, 24 AS parent_id, 240.96884028801762 AS "Estimator" FROM rdb$database UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 24 AS parent_id, 113.4408795258052 AS "Estimator" FROM rdb$database UNION ALL SELECT 28 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 27 AS parent_id, 479.70721604450864 AS "Estimator" FROM rdb$database UNION ALL SELECT 29 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 5 AS depth, 27 AS parent_id, 376.9384086101691 AS "Estimator" FROM rdb$database UNION ALL SELECT 32 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 3 AS depth, 31 AS parent_id, -9.185160907179679 AS "Estimator" FROM rdb$database UNION ALL SELECT 34 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 4 AS depth, 33 AS parent_id, 156.85798347147366 AS "Estimator" FROM rdb$database UNION ALL SELECT 35 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 4 AS depth, 33 AS parent_id, 144.424454256417 AS "Estimator" FROM rdb$database UNION ALL SELECT 39 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 38 AS parent_id, 259.87552025822583 AS "Estimator" FROM rdb$database UNION ALL SELECT 40 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 38 AS parent_id, 235.3201708856319 AS "Estimator" FROM rdb$database UNION ALL SELECT 42 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 41 AS parent_id, 194.4087167101487 AS "Estimator" FROM rdb$database UNION ALL SELECT 43 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 41 AS parent_id, 191.5521549407964 AS "Estimator" FROM rdb$database UNION ALL SELECT 46 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 45 AS parent_id, 349.4216823421892 AS "Estimator" FROM rdb$database UNION ALL SELECT 47 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 5 AS depth, 45 AS parent_id, 318.6525737486649 AS "Estimator" FROM rdb$database UNION ALL SELECT 48 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 4 AS depth, 44 AS parent_id, 277.9812845098006 AS "Estimator" FROM rdb$database) AS "Values"), 
"DT_Output_7" AS 
(SELECT "DT_node_lookup_7"."KEY" AS "KEY", "DT_node_lookup_7".node_id_2 AS node_id_2, "DT_node_data_7".node_id AS node_id, "DT_node_data_7".feature AS feature, "DT_node_data_7".threshold AS threshold, "DT_node_data_7"."count" AS "count", "DT_node_data_7".depth AS depth, "DT_node_data_7".parent_id AS parent_id, "DT_node_data_7"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_7" LEFT OUTER JOIN "DT_node_data_7" ON "DT_node_lookup_7".node_id_2 = "DT_node_data_7".node_id), 
"BAG_Model_7" AS 
(SELECT "DT_Output_7"."KEY" AS "KEY", "DT_Output_7"."Estimator" AS "Estimator" 
FROM "DT_Output_7"), 
"DT_node_lookup_8" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= 1.3744688034057617) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= -0.9524809122085571) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= -0.3639063835144043) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= -0.33297401666641235) THEN 4 ELSE 5 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= 0.7384552359580994) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= -1.0936015844345093) THEN 8 ELSE 9 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= -1.8198654651641846) THEN 11 ELSE 12 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= 0.12877562642097473) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= -0.6499930620193481) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= -0.8770161271095276) THEN 16 ELSE 17 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= -1.051876187324524) THEN 19 ELSE 20 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= -0.40758830308914185) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= 0.8533129692077637) THEN 23 ELSE 24 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= -1.0294378995895386) THEN 26 ELSE 27 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= 2.3095710277557373) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= -0.7102735638618469) THEN 30 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= 1.1313903331756592) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= 1.5917079448699951) THEN 33 ELSE 34 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= -0.4509758949279785) THEN 36 ELSE 37 END END END ELSE 38 END END AS node_id_2 
FROM "TMP_20180417011538_F1YGVN_ADS_S" AS "ADS_sca_2_OUT"), 
"DT_node_data_8" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values".threshold AS FLOAT) AS threshold, CAST("Values"."count" AS FLOAT) AS "count", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 4 AS depth, 3 AS parent_id, -298.79907558939374 AS "Estimator" FROM rdb$database UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 4 AS depth, 3 AS parent_id, -351.3842930876292 AS "Estimator" FROM rdb$database UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 7 AS parent_id, -165.64587304935068 AS "Estimator" FROM rdb$database UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS "count", 5 AS depth, 7 AS parent_id, -80.35271335228391 AS "Estimator" FROM rdb$database UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 10 AS parent_id, -284.890410429711 AS "Estimator" FROM rdb$database UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 5 AS depth, 10 AS parent_id, -215.90421619322228 AS "Estimator" FROM rdb$database UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 5 AS depth, 15 AS parent_id, -147.70083070777562 AS "Estimator" FROM rdb$database UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS "count", 5 AS depth, 15 AS parent_id, -241.49883785185892 AS "Estimator" FROM rdb$database UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 18 AS parent_id, -182.332005662268 AS "Estimator" FROM rdb$database UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS "count", 5 AS depth, 18 AS parent_id, -13.103235906353564 AS "Estimator" FROM rdb$database UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS "count", 5 AS depth, 22 AS parent_id, 37.973325215090554 AS "Estimator" FROM rdb$database UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 22 AS parent_id, 131.0368050808161 AS "Estimator" FROM rdb$database UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 25 AS parent_id, -33.337014733450744 AS "Estimator" FROM rdb$database UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS "count", 5 AS depth, 25 AS parent_id, 236.03797400232807 AS "Estimator" FROM rdb$database UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 3 AS depth, 29 AS parent_id, 290.70915409731754 AS "Estimator" FROM rdb$database UNION ALL SELECT 33 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 32 AS parent_id, 320.6826523308587 AS "Estimator" FROM rdb$database UNION ALL SELECT 34 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 32 AS parent_id, 325.0738816201826 AS "Estimator" FROM rdb$database UNION ALL SELECT 36 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 35 AS parent_id, 351.37130796411674 AS "Estimator" FROM rdb$database UNION ALL SELECT 37 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 35 AS parent_id, 360.61572443308125 AS "Estimator" FROM rdb$database UNION ALL SELECT 38 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 2 AS depth, 28 AS parent_id, 447.6909835452225 AS "Estimator" FROM rdb$database) AS "Values"), 
"DT_Output_8" AS 
(SELECT "DT_node_lookup_8"."KEY" AS "KEY", "DT_node_lookup_8".node_id_2 AS node_id_2, "DT_node_data_8".node_id AS node_id, "DT_node_data_8".feature AS feature, "DT_node_data_8".threshold AS threshold, "DT_node_data_8"."count" AS "count", "DT_node_data_8".depth AS depth, "DT_node_data_8".parent_id AS parent_id, "DT_node_data_8"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_8" LEFT OUTER JOIN "DT_node_data_8" ON "DT_node_lookup_8".node_id_2 = "DT_node_data_8".node_id), 
"BAG_Model_8" AS 
(SELECT "DT_Output_8"."KEY" AS "KEY", "DT_Output_8"."Estimator" AS "Estimator" 
FROM "DT_Output_8"), 
"DT_node_lookup_9" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= 0.5968424081802368) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= -0.6538745164871216) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= -0.8218451738357544) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= -0.7203118205070496) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= -1.006524682044983) THEN 5 ELSE 6 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= -0.36383628845214844) THEN 8 ELSE 9 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 0.6580809950828552) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= -0.008691178634762764) THEN 12 ELSE 13 END ELSE 14 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= 0.029281165450811386) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= -0.24797630310058594) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= -0.3956315815448761) THEN 18 ELSE 19 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= 1.2112603187561035) THEN 21 ELSE 22 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= 0.19795075058937073) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 1.4712038040161133) THEN 25 ELSE 26 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= 0.4255680441856384) THEN 28 ELSE 29 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= 0.7794442772865295) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= 1.2716922760009766) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= 0.7718353867530823) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= -0.6338682174682617) THEN 34 ELSE 35 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= 0.6410861611366272) THEN 37 ELSE 38 END END ELSE 39 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= 1.1398407220840454) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= -0.8674601316452026) THEN 42 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= 0.3618583381175995) THEN 44 ELSE 45 END END ELSE 46 END END END AS node_id_2 
FROM "TMP_20180417011538_F1YGVN_ADS_S" AS "ADS_sca_2_OUT"), 
"DT_node_data_9" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values".threshold AS FLOAT) AS threshold, CAST("Values"."count" AS FLOAT) AS "count", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 4 AS parent_id, -459.030670753418 AS "Estimator" FROM rdb$database UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 4 AS parent_id, -422.39029400237723 AS "Estimator" FROM rdb$database UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 7 AS parent_id, -305.6750972104841 AS "Estimator" FROM rdb$database UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 5 AS depth, 7 AS parent_id, -255.70566701747688 AS "Estimator" FROM rdb$database UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS "count", 5 AS depth, 11 AS parent_id, -87.58168137550874 AS "Estimator" FROM rdb$database UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 5 AS depth, 11 AS parent_id, -269.31768956004163 AS "Estimator" FROM rdb$database UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 4 AS depth, 10 AS parent_id, 235.3201708856319 AS "Estimator" FROM rdb$database UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 17 AS parent_id, -80.36713172562187 AS "Estimator" FROM rdb$database UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS "count", 5 AS depth, 17 AS parent_id, -179.40108890307974 AS "Estimator" FROM rdb$database UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS "count", 5 AS depth, 20 AS parent_id, 5.200960840615618 AS "Estimator" FROM rdb$database UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS "count", 5 AS depth, 20 AS parent_id, 152.78222778259249 AS "Estimator" FROM rdb$database UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS "count", 5 AS depth, 24 AS parent_id, 225.16672153439853 AS "Estimator" FROM rdb$database UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 5 AS depth, 24 AS parent_id, 313.56051428540366 AS "Estimator" FROM rdb$database UNION ALL SELECT 28 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS "count", 5 AS depth, 27 AS parent_id, 87.07542544694495 AS "Estimator" FROM rdb$database UNION ALL SELECT 29 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 27 AS parent_id, 198.97164294103217 AS "Estimator" FROM rdb$database UNION ALL SELECT 34 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 33 AS parent_id, 325.0738816201826 AS "Estimator" FROM rdb$database UNION ALL SELECT 35 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 33 AS parent_id, 320.6826523308587 AS "Estimator" FROM rdb$database UNION ALL SELECT 37 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 36 AS parent_id, 360.61572443308125 AS "Estimator" FROM rdb$database UNION ALL SELECT 38 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 36 AS parent_id, 351.37130796411674 AS "Estimator" FROM rdb$database UNION ALL SELECT 39 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 3 AS depth, 31 AS parent_id, 447.6909835452225 AS "Estimator" FROM rdb$database UNION ALL SELECT 42 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 4 AS depth, 41 AS parent_id, 194.4087167101487 AS "Estimator" FROM rdb$database UNION ALL SELECT 44 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 5 AS depth, 43 AS parent_id, 246.88551254371106 AS "Estimator" FROM rdb$database UNION ALL SELECT 45 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 43 AS parent_id, 290.70915409731754 AS "Estimator" FROM rdb$database UNION ALL SELECT 46 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 3 AS depth, 40 AS parent_id, 58.56592202346141 AS "Estimator" FROM rdb$database) AS "Values"), 
"DT_Output_9" AS 
(SELECT "DT_node_lookup_9"."KEY" AS "KEY", "DT_node_lookup_9".node_id_2 AS node_id_2, "DT_node_data_9".node_id AS node_id, "DT_node_data_9".feature AS feature, "DT_node_data_9".threshold AS threshold, "DT_node_data_9"."count" AS "count", "DT_node_data_9".depth AS depth, "DT_node_data_9".parent_id AS parent_id, "DT_node_data_9"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_9" LEFT OUTER JOIN "DT_node_data_9" ON "DT_node_lookup_9".node_id_2 = "DT_node_data_9".node_id), 
"BAG_Model_9" AS 
(SELECT "DT_Output_9"."KEY" AS "KEY", "DT_Output_9"."Estimator" AS "Estimator" 
FROM "DT_Output_9")
 SELECT "BAG_B0"."KEY", "BAG_B0"."Estimator" 
FROM (SELECT "BAG_esu_0"."KEY" AS "KEY", "BAG_esu_0"."Estimator" AS "Estimator" 
FROM (SELECT "BAG_Model_0"."KEY" AS "KEY", "BAG_Model_0"."Estimator" AS "Estimator" 
FROM "BAG_Model_0" UNION ALL SELECT "BAG_Model_1"."KEY" AS "KEY", "BAG_Model_1"."Estimator" AS "Estimator" 
FROM "BAG_Model_1" UNION ALL SELECT "BAG_Model_2"."KEY" AS "KEY", "BAG_Model_2"."Estimator" AS "Estimator" 
FROM "BAG_Model_2" UNION ALL SELECT "BAG_Model_3"."KEY" AS "KEY", "BAG_Model_3"."Estimator" AS "Estimator" 
FROM "BAG_Model_3" UNION ALL SELECT "BAG_Model_4"."KEY" AS "KEY", "BAG_Model_4"."Estimator" AS "Estimator" 
FROM "BAG_Model_4" UNION ALL SELECT "BAG_Model_5"."KEY" AS "KEY", "BAG_Model_5"."Estimator" AS "Estimator" 
FROM "BAG_Model_5" UNION ALL SELECT "BAG_Model_6"."KEY" AS "KEY", "BAG_Model_6"."Estimator" AS "Estimator" 
FROM "BAG_Model_6" UNION ALL SELECT "BAG_Model_7"."KEY" AS "KEY", "BAG_Model_7"."Estimator" AS "Estimator" 
FROM "BAG_Model_7" UNION ALL SELECT "BAG_Model_8"."KEY" AS "KEY", "BAG_Model_8"."Estimator" AS "Estimator" 
FROM "BAG_Model_8" UNION ALL SELECT "BAG_Model_9"."KEY" AS "KEY", "BAG_Model_9"."Estimator" AS "Estimator" 
FROM "BAG_Model_9") AS "BAG_esu_0") AS "BAG_B0") AS "U"

-- Code For temporary table TMP_20180417011538_L8VJDB_BAG_B part 1/2. Create 


CREATE GLOBAL TEMPORARY TABLE "TMP_20180417011538_L8VJDB_BAG_B" (
	"KEY" BIGINT, 
	"Estimator" FLOAT
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table TMP_20180417011538_L8VJDB_BAG_B part 2/2. Populate

INSERT INTO "TMP_20180417011538_L8VJDB_BAG_B" ("KEY", "Estimator") SELECT "U"."KEY", "U"."Estimator" 
FROM (WITH "DT_node_lookup_10" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= -0.14761683344841003) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= -0.7928295135498047) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= -0.037589069455862045) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= -0.09779385477304459) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= -0.21820063889026642) THEN 5 ELSE 6 END ELSE 7 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= -1.2921054363250732) THEN 9 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= 1.1245399713516235) THEN 11 ELSE 12 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 1.4129769802093506) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= 0.8996148705482483) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= -1.5609650611877441) THEN 16 ELSE 17 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= -1.158886432647705) THEN 19 ELSE 20 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= 1.4861890077590942) THEN 22 ELSE 23 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 0.14351950585842133) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= 0.9470257759094238) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= 0.30570173263549805) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= 1.2788571119308472) THEN 28 ELSE 29 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= 0.08295764029026031) THEN 31 ELSE 32 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= -0.22109383344650269) THEN 34 ELSE 35 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= 0.46682029962539673) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= -0.22441938519477844) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= -0.511897087097168) THEN 39 ELSE 40 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= 0.2658329904079437) THEN 42 ELSE 43 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= 1.8639471530914307) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= 0.9868417382240295) THEN 46 ELSE 47 END ELSE 48 END END END END AS node_id_2 
FROM "TMP_20180417011538_F1YGVN_ADS_S" AS "ADS_sca_2_OUT"), 
"DT_node_data_10" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values".threshold AS FLOAT) AS threshold, CAST("Values"."count" AS FLOAT) AS "count", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 4 AS parent_id, -351.3842930876292 AS "Estimator" FROM rdb$database UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 5 AS depth, 4 AS parent_id, -302.2370863999389 AS "Estimator" FROM rdb$database UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 4 AS depth, 3 AS parent_id, -422.39029400237723 AS "Estimator" FROM rdb$database UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 4 AS depth, 8 AS parent_id, -268.1904323885528 AS "Estimator" FROM rdb$database UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 10 AS parent_id, -186.24037602901686 AS "Estimator" FROM rdb$database UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 5 AS depth, 10 AS parent_id, -220.54552688833127 AS "Estimator" FROM rdb$database UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 15 AS parent_id, -181.5117298102302 AS "Estimator" FROM rdb$database UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS "count", 5 AS depth, 15 AS parent_id, -10.107002207882893 AS "Estimator" FROM rdb$database UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 18 AS parent_id, -140.8312353487667 AS "Estimator" FROM rdb$database UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 18 AS parent_id, -223.26828856161853 AS "Estimator" FROM rdb$database UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 4 AS depth, 21 AS parent_id, 191.5521549407964 AS "Estimator" FROM rdb$database UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 4 AS depth, 21 AS parent_id, 447.6909835452225 AS "Estimator" FROM rdb$database UNION ALL SELECT 28 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS "count", 5 AS depth, 27 AS parent_id, 68.71818078600755 AS "Estimator" FROM rdb$database UNION ALL SELECT 29 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 5 AS depth, 27 AS parent_id, -4.1450808090555675 AS "Estimator" FROM rdb$database UNION ALL SELECT 31 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 30 AS parent_id, -237.15037500402434 AS "Estimator" FROM rdb$database UNION ALL SELECT 32 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 5 AS depth, 30 AS parent_id, -90.66860045260819 AS "Estimator" FROM rdb$database UNION ALL SELECT 34 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 4 AS depth, 33 AS parent_id, 360.61572443308125 AS "Estimator" FROM rdb$database UNION ALL SELECT 35 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 4 AS depth, 33 AS parent_id, 393.261092787257 AS "Estimator" FROM rdb$database UNION ALL SELECT 39 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 38 AS parent_id, 62.64480580928396 AS "Estimator" FROM rdb$database UNION ALL SELECT 40 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 38 AS parent_id, 144.424454256417 AS "Estimator" FROM rdb$database UNION ALL SELECT 42 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS "count", 5 AS depth, 41 AS parent_id, 258.9702911953818 AS "Estimator" FROM rdb$database UNION ALL SELECT 43 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 5 AS depth, 41 AS parent_id, 196.6901798255904 AS "Estimator" FROM rdb$database UNION ALL SELECT 46 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS "count", 5 AS depth, 45 AS parent_id, 331.2414647411023 AS "Estimator" FROM rdb$database UNION ALL SELECT 47 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 45 AS parent_id, 228.58868551702315 AS "Estimator" FROM rdb$database UNION ALL SELECT 48 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 4 AS depth, 44 AS parent_id, 479.70721604450864 AS "Estimator" FROM rdb$database) AS "Values"), 
"DT_Output_10" AS 
(SELECT "DT_node_lookup_10"."KEY" AS "KEY", "DT_node_lookup_10".node_id_2 AS node_id_2, "DT_node_data_10".node_id AS node_id, "DT_node_data_10".feature AS feature, "DT_node_data_10".threshold AS threshold, "DT_node_data_10"."count" AS "count", "DT_node_data_10".depth AS depth, "DT_node_data_10".parent_id AS parent_id, "DT_node_data_10"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_10" LEFT OUTER JOIN "DT_node_data_10" ON "DT_node_lookup_10".node_id_2 = "DT_node_data_10".node_id), 
"BAG_Model_10" AS 
(SELECT "DT_Output_10"."KEY" AS "KEY", "DT_Output_10"."Estimator" AS "Estimator" 
FROM "DT_Output_10"), 
"DT_node_lookup_11" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= 1.3744688034057617) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 0.5463548898696899) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= -0.24096271395683289) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= -0.4059848487377167) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= 0.7489032745361328) THEN 5 ELSE 6 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= 0.435245156288147) THEN 8 ELSE 9 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= 0.015268662944436073) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= -1.2609769105911255) THEN 12 ELSE 13 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= -0.7315464615821838) THEN 15 ELSE 16 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= 0.692154049873352) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= 0.37174221873283386) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 1.4766360521316528) THEN 20 ELSE 21 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 1.9546775817871094) THEN 23 ELSE 24 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= -0.36062175035476685) THEN 26 ELSE 27 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= -1.6898996829986572) THEN 29 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 1.4639790058135986) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= 1.0750964879989624) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= 0.4519040584564209) THEN 33 ELSE 34 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= -0.4534766376018524) THEN 36 ELSE 37 END END ELSE 38 END END END AS node_id_2 
FROM "TMP_20180417011538_F1YGVN_ADS_S" AS "ADS_sca_2_OUT"), 
"DT_node_data_11" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values".threshold AS FLOAT) AS threshold, CAST("Values"."count" AS FLOAT) AS "count", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS "count", 5 AS depth, 4 AS parent_id, -279.51404384458317 AS "Estimator" FROM rdb$database UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 4 AS parent_id, -33.10367734893197 AS "Estimator" FROM rdb$database UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS "count", 5 AS depth, 7 AS parent_id, -147.94072491211594 AS "Estimator" FROM rdb$database UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS "count", 5 AS depth, 7 AS parent_id, -57.74343346612257 AS "Estimator" FROM rdb$database UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS "count", 5 AS depth, 11 AS parent_id, -223.701358526806 AS "Estimator" FROM rdb$database UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS "count", 5 AS depth, 11 AS parent_id, -59.482116826569 AS "Estimator" FROM rdb$database UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS "count", 5 AS depth, 14 AS parent_id, -9.877803496887982 AS "Estimator" FROM rdb$database UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS "count", 5 AS depth, 14 AS parent_id, 234.9576999227116 AS "Estimator" FROM rdb$database UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS "count", 5 AS depth, 19 AS parent_id, 248.4594837465909 AS "Estimator" FROM rdb$database UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 5 AS depth, 19 AS parent_id, 169.37489455103199 AS "Estimator" FROM rdb$database UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 22 AS parent_id, 349.42168234218923 AS "Estimator" FROM rdb$database UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 22 AS parent_id, 316.51213779149236 AS "Estimator" FROM rdb$database UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 4 AS depth, 25 AS parent_id, 62.64480580928396 AS "Estimator" FROM rdb$database UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 4 AS depth, 25 AS parent_id, -9.185160907179679 AS "Estimator" FROM rdb$database UNION ALL SELECT 29 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 2 AS depth, 28 AS parent_id, 116.8891961793557 AS "Estimator" FROM rdb$database UNION ALL SELECT 33 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 5 AS depth, 32 AS parent_id, 355.99351619859897 AS "Estimator" FROM rdb$database UNION ALL SELECT 34 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 5 AS depth, 32 AS parent_id, 322.43914404658824 AS "Estimator" FROM rdb$database UNION ALL SELECT 36 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 35 AS parent_id, 290.70915409731754 AS "Estimator" FROM rdb$database UNION ALL SELECT 37 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 35 AS parent_id, 243.63801061508232 AS "Estimator" FROM rdb$database UNION ALL SELECT 38 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 3 AS depth, 30 AS parent_id, 447.6909835452225 AS "Estimator" FROM rdb$database) AS "Values"), 
"DT_Output_11" AS 
(SELECT "DT_node_lookup_11"."KEY" AS "KEY", "DT_node_lookup_11".node_id_2 AS node_id_2, "DT_node_data_11".node_id AS node_id, "DT_node_data_11".feature AS feature, "DT_node_data_11".threshold AS threshold, "DT_node_data_11"."count" AS "count", "DT_node_data_11".depth AS depth, "DT_node_data_11".parent_id AS parent_id, "DT_node_data_11"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_11" LEFT OUTER JOIN "DT_node_data_11" ON "DT_node_lookup_11".node_id_2 = "DT_node_data_11".node_id), 
"BAG_Model_11" AS 
(SELECT "DT_Output_11"."KEY" AS "KEY", "DT_Output_11"."Estimator" AS "Estimator" 
FROM "DT_Output_11"), 
"DT_node_lookup_12" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= 0.07141511887311935) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 0.34513598680496216) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= -1.0795968770980835) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= 0.5263814926147461) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= -0.046369969844818115) THEN 5 ELSE 6 END ELSE 7 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= 0.6540780067443848) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= 0.8646484613418579) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= -0.47950613498687744) THEN 13 ELSE 14 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= 0.36121538281440735) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= -0.12887254357337952) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= 1.5617499351501465) THEN 18 ELSE 19 END ELSE 20 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= -0.08463533222675323) THEN 22 ELSE 23 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= -0.9524809122085571) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= -0.46485865116119385) THEN 26 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= -0.7613807916641235) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= -2.0146644115448) THEN 29 ELSE 30 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= 0.005976766347885132) THEN 32 ELSE 33 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= -0.8129599094390869) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= -1.8326380252838135) THEN 36 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= -0.05869223177433014) THEN 38 ELSE 39 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= 1.659529685974121) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= 0.1847696751356125) THEN 42 ELSE 43 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= 0.7151849269866943) THEN 45 ELSE 46 END END END END END AS node_id_2 
FROM "TMP_20180417011538_F1YGVN_ADS_S" AS "ADS_sca_2_OUT"), 
"DT_node_data_12" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values".threshold AS FLOAT) AS threshold, CAST("Values"."count" AS FLOAT) AS "count", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 4 AS parent_id, -351.3842930876292 AS "Estimator" FROM rdb$database UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 5 AS depth, 4 AS parent_id, -261.02039271686766 AS "Estimator" FROM rdb$database UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 4 AS depth, 3 AS parent_id, -154.40083699334056 AS "Estimator" FROM rdb$database UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS "count", 5 AS depth, 9 AS parent_id, -148.3033043201361 AS "Estimator" FROM rdb$database UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS "count", 5 AS depth, 9 AS parent_id, -53.646713296481664 AS "Estimator" FROM rdb$database UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 5 AS depth, 12 AS parent_id, 2.894562869633976 AS "Estimator" FROM rdb$database UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 5 AS depth, 12 AS parent_id, 54.027615667111796 AS "Estimator" FROM rdb$database UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 17 AS parent_id, 37.34665341388054 AS "Estimator" FROM rdb$database UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 17 AS parent_id, 8.923656244969493 AS "Estimator" FROM rdb$database UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 4 AS depth, 16 AS parent_id, -27.42654029072463 AS "Estimator" FROM rdb$database UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 4 AS depth, 21 AS parent_id, 144.424454256417 AS "Estimator" FROM rdb$database UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 4 AS depth, 21 AS parent_id, 277.9812845098006 AS "Estimator" FROM rdb$database UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 3 AS depth, 25 AS parent_id, 325.0738816201826 AS "Estimator" FROM rdb$database UNION ALL SELECT 29 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 28 AS parent_id, -210.35491750133752 AS "Estimator" FROM rdb$database UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 5 AS depth, 28 AS parent_id, -301.0910827964239 AS "Estimator" FROM rdb$database UNION ALL SELECT 32 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 31 AS parent_id, -101.20974879377154 AS "Estimator" FROM rdb$database UNION ALL SELECT 33 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 31 AS parent_id, -165.64587304935068 AS "Estimator" FROM rdb$database UNION ALL SELECT 36 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 4 AS depth, 35 AS parent_id, 58.56592202346141 AS "Estimator" FROM rdb$database UNION ALL SELECT 38 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 37 AS parent_id, -8.541514583322922 AS "Estimator" FROM rdb$database UNION ALL SELECT 39 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 5 AS depth, 37 AS parent_id, -24.728024071698115 AS "Estimator" FROM rdb$database UNION ALL SELECT 42 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS "count", 5 AS depth, 41 AS parent_id, 178.16748523167632 AS "Estimator" FROM rdb$database UNION ALL SELECT 43 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS "count", 5 AS depth, 41 AS parent_id, 276.9984668874918 AS "Estimator" FROM rdb$database UNION ALL SELECT 45 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 44 AS parent_id, 447.6909835452225 AS "Estimator" FROM rdb$database UNION ALL SELECT 46 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 44 AS parent_id, 479.70721604450864 AS "Estimator" FROM rdb$database) AS "Values"), 
"DT_Output_12" AS 
(SELECT "DT_node_lookup_12"."KEY" AS "KEY", "DT_node_lookup_12".node_id_2 AS node_id_2, "DT_node_data_12".node_id AS node_id, "DT_node_data_12".feature AS feature, "DT_node_data_12".threshold AS threshold, "DT_node_data_12"."count" AS "count", "DT_node_data_12".depth AS depth, "DT_node_data_12".parent_id AS parent_id, "DT_node_data_12"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_12" LEFT OUTER JOIN "DT_node_data_12" ON "DT_node_lookup_12".node_id_2 = "DT_node_data_12".node_id), 
"BAG_Model_12" AS 
(SELECT "DT_Output_12"."KEY" AS "KEY", "DT_Output_12"."Estimator" AS "Estimator" 
FROM "DT_Output_12"), 
"DT_node_lookup_13" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 0.5733436346054077) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= -0.9403623342514038) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= -1.1683640480041504) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= -0.7743398547172546) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= -0.8429703712463379) THEN 5 ELSE 6 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= -0.5570704340934753) THEN 8 ELSE 9 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= -0.7485634088516235) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= -1.043335199356079) THEN 12 ELSE 13 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= -0.33297401666641235) THEN 15 ELSE 16 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= 0.07141511887311935) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= 0.7111697196960449) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 0.2539488971233368) THEN 20 ELSE 21 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= -1.4027109146118164) THEN 23 ELSE 24 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= 0.49287089705467224) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 0.14913317561149597) THEN 27 ELSE 28 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= 0.763214111328125) THEN 30 ELSE 31 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= -0.40230631828308105) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= 1.1881287097930908) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= -0.4976687431335449) THEN 35 ELSE 36 END ELSE 37 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= 0.38173192739486694) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= 0.30690106749534607) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= -0.12937447428703308) THEN 41 ELSE 42 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= 0.03796053305268288) THEN 44 ELSE 45 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= -0.4384416937828064) THEN 47 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= -0.0244731605052948) THEN 49 ELSE 50 END END END END END AS node_id_2 
FROM "TMP_20180417011538_F1YGVN_ADS_S" AS "ADS_sca_2_OUT"), 
"DT_node_data_13" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values".threshold AS FLOAT) AS threshold, CAST("Values"."count" AS FLOAT) AS "count", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 4 AS parent_id, -230.736136275325 AS "Estimator" FROM rdb$database UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 5 AS depth, 4 AS parent_id, -298.74686828355976 AS "Estimator" FROM rdb$database UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 5 AS depth, 7 AS parent_id, -78.8780402474348 AS "Estimator" FROM rdb$database UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 5 AS depth, 7 AS parent_id, -175.94312453918377 AS "Estimator" FROM rdb$database UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 11 AS parent_id, -422.39029400237723 AS "Estimator" FROM rdb$database UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 11 AS parent_id, -459.030670753418 AS "Estimator" FROM rdb$database UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 14 AS parent_id, -298.79907558939374 AS "Estimator" FROM rdb$database UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 14 AS parent_id, -351.3842930876292 AS "Estimator" FROM rdb$database UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS "count", 5 AS depth, 19 AS parent_id, -141.94613915313002 AS "Estimator" FROM rdb$database UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 5 AS depth, 19 AS parent_id, 6.036912424622535 AS "Estimator" FROM rdb$database UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 22 AS parent_id, -154.40083699334056 AS "Estimator" FROM rdb$database UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS "count", 5 AS depth, 22 AS parent_id, 14.734113255047495 AS "Estimator" FROM rdb$database UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 5 AS depth, 26 AS parent_id, 108.76911660152867 AS "Estimator" FROM rdb$database UNION ALL SELECT 28 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS "count", 5 AS depth, 26 AS parent_id, 340.4981657801722 AS "Estimator" FROM rdb$database UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS "count", 5 AS depth, 29 AS parent_id, -10.8893497000069 AS "Estimator" FROM rdb$database UNION ALL SELECT 31 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 5 AS depth, 29 AS parent_id, 136.81863919098882 AS "Estimator" FROM rdb$database UNION ALL SELECT 35 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 4 AS depth, 34 AS parent_id, 8.923656244969493 AS "Estimator" FROM rdb$database UNION ALL SELECT 36 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 4 AS depth, 34 AS parent_id, 38.71263785211542 AS "Estimator" FROM rdb$database UNION ALL SELECT 37 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 3 AS depth, 33 AS parent_id, 113.4408795258052 AS "Estimator" FROM rdb$database UNION ALL SELECT 41 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 40 AS parent_id, 144.424454256417 AS "Estimator" FROM rdb$database UNION ALL SELECT 42 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 40 AS parent_id, 191.5521549407964 AS "Estimator" FROM rdb$database UNION ALL SELECT 44 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 5 AS depth, 43 AS parent_id, 255.02914017707042 AS "Estimator" FROM rdb$database UNION ALL SELECT 45 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 43 AS parent_id, 235.3201708856319 AS "Estimator" FROM rdb$database UNION ALL SELECT 47 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 4 AS depth, 46 AS parent_id, 310.60889077931495 AS "Estimator" FROM rdb$database UNION ALL SELECT 49 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 48 AS parent_id, 351.37130796411674 AS "Estimator" FROM rdb$database UNION ALL SELECT 50 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 48 AS parent_id, 349.42168234218923 AS "Estimator" FROM rdb$database) AS "Values"), 
"DT_Output_13" AS 
(SELECT "DT_node_lookup_13"."KEY" AS "KEY", "DT_node_lookup_13".node_id_2 AS node_id_2, "DT_node_data_13".node_id AS node_id, "DT_node_data_13".feature AS feature, "DT_node_data_13".threshold AS threshold, "DT_node_data_13"."count" AS "count", "DT_node_data_13".depth AS depth, "DT_node_data_13".parent_id AS parent_id, "DT_node_data_13"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_13" LEFT OUTER JOIN "DT_node_data_13" ON "DT_node_lookup_13".node_id_2 = "DT_node_data_13".node_id), 
"BAG_Model_13" AS 
(SELECT "DT_Output_13"."KEY" AS "KEY", "DT_Output_13"."Estimator" AS "Estimator" 
FROM "DT_Output_13"), 
"DT_node_lookup_14" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= -0.7928295135498047) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= -0.02689894288778305) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= -1.3474148511886597) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= 0.11131975054740906) THEN 4 ELSE 5 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= -1.403998851776123) THEN 7 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= -1.6699602603912354) THEN 9 ELSE 10 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= 0.07942460477352142) THEN 12 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= -0.5254598259925842) THEN 14 ELSE 15 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= 0.029281165450811386) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= -0.2280818521976471) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= 0.7118693590164185) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= -1.8952226638793945) THEN 20 ELSE 21 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= -0.12799367308616638) THEN 23 ELSE 24 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= -0.3696195185184479) THEN 26 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= 0.14834314584732056) THEN 28 ELSE 29 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= 0.9415285587310791) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= -0.12170685827732086) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= 0.2743969261646271) THEN 33 ELSE 34 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= 0.2094932645559311) THEN 36 ELSE 37 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= 0.03570308908820152) THEN 39 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= 1.352135419845581) THEN 41 ELSE 42 END END END END END AS node_id_2 
FROM "TMP_20180417011538_F1YGVN_ADS_S" AS "ADS_sca_2_OUT"), 
"DT_node_data_14" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values".threshold AS FLOAT) AS threshold, CAST("Values"."count" AS FLOAT) AS "count", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 4 AS depth, 3 AS parent_id, -186.24037602901686 AS "Estimator" FROM rdb$database UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 4 AS depth, 3 AS parent_id, -101.20974879377152 AS "Estimator" FROM rdb$database UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 4 AS depth, 6 AS parent_id, -351.3842930876292 AS "Estimator" FROM rdb$database UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 8 AS parent_id, -230.736136275325 AS "Estimator" FROM rdb$database UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS "count", 5 AS depth, 8 AS parent_id, -287.88930607959395 AS "Estimator" FROM rdb$database UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 3 AS depth, 11 AS parent_id, -103.03861456879999 AS "Estimator" FROM rdb$database UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 4 AS depth, 13 AS parent_id, -53.55855810403281 AS "Estimator" FROM rdb$database UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 4 AS depth, 13 AS parent_id, -20.27001010137917 AS "Estimator" FROM rdb$database UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 19 AS parent_id, -251.2683418956458 AS "Estimator" FROM rdb$database UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS "count", 5 AS depth, 19 AS parent_id, -170.8778001713565 AS "Estimator" FROM rdb$database UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 22 AS parent_id, 44.29871810773541 AS "Estimator" FROM rdb$database UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 5 AS depth, 22 AS parent_id, -90.0890135165784 AS "Estimator" FROM rdb$database UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 4 AS depth, 25 AS parent_id, -223.26828856161853 AS "Estimator" FROM rdb$database UNION ALL SELECT 28 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS "count", 5 AS depth, 27 AS parent_id, 90.25777353775368 AS "Estimator" FROM rdb$database UNION ALL SELECT 29 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS "count", 5 AS depth, 27 AS parent_id, -8.266291844230304 AS "Estimator" FROM rdb$database UNION ALL SELECT 33 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 5 AS depth, 32 AS parent_id, 126.85391768517226 AS "Estimator" FROM rdb$database UNION ALL SELECT 34 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS "count", 5 AS depth, 32 AS parent_id, 16.41270630142355 AS "Estimator" FROM rdb$database UNION ALL SELECT 36 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS "count", 5 AS depth, 35 AS parent_id, 142.01519675614708 AS "Estimator" FROM rdb$database UNION ALL SELECT 37 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS "count", 5 AS depth, 35 AS parent_id, 256.3697614247275 AS "Estimator" FROM rdb$database UNION ALL SELECT 39 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 4 AS depth, 38 AS parent_id, 243.63801061508232 AS "Estimator" FROM rdb$database UNION ALL SELECT 41 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 40 AS parent_id, 393.261092787257 AS "Estimator" FROM rdb$database UNION ALL SELECT 42 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 5 AS depth, 40 AS parent_id, 466.9007230447942 AS "Estimator" FROM rdb$database) AS "Values"), 
"DT_Output_14" AS 
(SELECT "DT_node_lookup_14"."KEY" AS "KEY", "DT_node_lookup_14".node_id_2 AS node_id_2, "DT_node_data_14".node_id AS node_id, "DT_node_data_14".feature AS feature, "DT_node_data_14".threshold AS threshold, "DT_node_data_14"."count" AS "count", "DT_node_data_14".depth AS depth, "DT_node_data_14".parent_id AS parent_id, "DT_node_data_14"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_14" LEFT OUTER JOIN "DT_node_data_14" ON "DT_node_lookup_14".node_id_2 = "DT_node_data_14".node_id), 
"BAG_Model_14" AS 
(SELECT "DT_Output_14"."KEY" AS "KEY", "DT_Output_14"."Estimator" AS "Estimator" 
FROM "DT_Output_14"), 
"DT_node_lookup_15" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= -0.7831640839576721) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 0.6611059904098511) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= -0.3639063835144043) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= -0.5081993937492371) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= -0.397009938955307) THEN 5 ELSE 6 END ELSE 7 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= -0.6446855664253235) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= -0.37134435772895813) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= -1.4342997074127197) THEN 13 ELSE 14 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= 0.8160295486450195) THEN 16 ELSE 17 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 0.4198857247829437) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= 0.6365488171577454) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= 0.6820541024208069) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= 0.005953516811132431) THEN 22 ELSE 23 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= -0.2738999128341675) THEN 25 ELSE 26 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= -0.8943517804145813) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= 1.0833008289337158) THEN 29 ELSE 30 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= 0.8130553960800171) THEN 32 ELSE 33 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= -0.0786014124751091) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= -0.5449564456939697) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= 0.8746321201324463) THEN 37 ELSE 38 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= -1.147948145866394) THEN 40 ELSE 41 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= 1.2802700996398926) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= -0.6169857978820801) THEN 44 ELSE 45 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= -0.005341321229934692) THEN 47 ELSE 48 END END END END END AS node_id_2 
FROM "TMP_20180417011538_F1YGVN_ADS_S" AS "ADS_sca_2_OUT"), 
"DT_node_data_15" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values".threshold AS FLOAT) AS threshold, CAST("Values"."count" AS FLOAT) AS "count", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 4 AS parent_id, -351.3842930876292 AS "Estimator" FROM rdb$database UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 4 AS parent_id, -298.79907558939374 AS "Estimator" FROM rdb$database UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 4 AS depth, 3 AS parent_id, -459.030670753418 AS "Estimator" FROM rdb$database UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 5 AS depth, 9 AS parent_id, -273.7570917356055 AS "Estimator" FROM rdb$database UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 9 AS parent_id, -230.736136275325 AS "Estimator" FROM rdb$database UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 5 AS depth, 12 AS parent_id, -188.0003952753441 AS "Estimator" FROM rdb$database UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS "count", 5 AS depth, 12 AS parent_id, -81.43203056443055 AS "Estimator" FROM rdb$database UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 3 AS depth, 15 AS parent_id, 325.0738816201826 AS "Estimator" FROM rdb$database UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 3 AS depth, 15 AS parent_id, 235.3201708856319 AS "Estimator" FROM rdb$database UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS "count", 5 AS depth, 21 AS parent_id, -110.57931123012992 AS "Estimator" FROM rdb$database UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS "count", 5 AS depth, 21 AS parent_id, 3.776947440020895 AS "Estimator" FROM rdb$database UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS "count", 5 AS depth, 24 AS parent_id, 15.489340422486551 AS "Estimator" FROM rdb$database UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 5 AS depth, 24 AS parent_id, 136.81863919098882 AS "Estimator" FROM rdb$database UNION ALL SELECT 29 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 28 AS parent_id, -9.617958070006466 AS "Estimator" FROM rdb$database UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 28 AS parent_id, 58.56592202346141 AS "Estimator" FROM rdb$database UNION ALL SELECT 32 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS "count", 5 AS depth, 31 AS parent_id, 221.960847427731 AS "Estimator" FROM rdb$database UNION ALL SELECT 33 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 5 AS depth, 31 AS parent_id, 340.64918838196996 AS "Estimator" FROM rdb$database UNION ALL SELECT 37 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 36 AS parent_id, -27.42654029072463 AS "Estimator" FROM rdb$database UNION ALL SELECT 38 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 36 AS parent_id, 8.923656244969493 AS "Estimator" FROM rdb$database UNION ALL SELECT 40 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 39 AS parent_id, 156.85798347147366 AS "Estimator" FROM rdb$database UNION ALL SELECT 41 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 39 AS parent_id, 144.424454256417 AS "Estimator" FROM rdb$database UNION ALL SELECT 44 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 43 AS parent_id, 113.4408795258052 AS "Estimator" FROM rdb$database UNION ALL SELECT 45 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS "count", 5 AS depth, 43 AS parent_id, 290.8269455889381 AS "Estimator" FROM rdb$database UNION ALL SELECT 47 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 46 AS parent_id, 447.6909835452225 AS "Estimator" FROM rdb$database UNION ALL SELECT 48 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 46 AS parent_id, 479.70721604450864 AS "Estimator" FROM rdb$database) AS "Values"), 
"DT_Output_15" AS 
(SELECT "DT_node_lookup_15"."KEY" AS "KEY", "DT_node_lookup_15".node_id_2 AS node_id_2, "DT_node_data_15".node_id AS node_id, "DT_node_data_15".feature AS feature, "DT_node_data_15".threshold AS threshold, "DT_node_data_15"."count" AS "count", "DT_node_data_15".depth AS depth, "DT_node_data_15".parent_id AS parent_id, "DT_node_data_15"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_15" LEFT OUTER JOIN "DT_node_data_15" ON "DT_node_lookup_15".node_id_2 = "DT_node_data_15".node_id), 
"BAG_Model_15" AS 
(SELECT "DT_Output_15"."KEY" AS "KEY", "DT_Output_15"."Estimator" AS "Estimator" 
FROM "DT_Output_15")
 SELECT "BAG_B1"."KEY", "BAG_B1"."Estimator" 
FROM (SELECT "BAG_esu_1"."KEY" AS "KEY", "BAG_esu_1"."Estimator" AS "Estimator" 
FROM (SELECT "BAG_Model_10"."KEY" AS "KEY", "BAG_Model_10"."Estimator" AS "Estimator" 
FROM "BAG_Model_10" UNION ALL SELECT "BAG_Model_11"."KEY" AS "KEY", "BAG_Model_11"."Estimator" AS "Estimator" 
FROM "BAG_Model_11" UNION ALL SELECT "BAG_Model_12"."KEY" AS "KEY", "BAG_Model_12"."Estimator" AS "Estimator" 
FROM "BAG_Model_12" UNION ALL SELECT "BAG_Model_13"."KEY" AS "KEY", "BAG_Model_13"."Estimator" AS "Estimator" 
FROM "BAG_Model_13" UNION ALL SELECT "BAG_Model_14"."KEY" AS "KEY", "BAG_Model_14"."Estimator" AS "Estimator" 
FROM "BAG_Model_14" UNION ALL SELECT "BAG_Model_15"."KEY" AS "KEY", "BAG_Model_15"."Estimator" AS "Estimator" 
FROM "BAG_Model_15") AS "BAG_esu_1") AS "BAG_B1") AS "U"

-- Code For temporary table TMP_20180417011538_1F741V_BAG_U part 1/2. Create 


CREATE GLOBAL TEMPORARY TABLE "TMP_20180417011538_1F741V_BAG_U" (
	"KEY" BIGINT, 
	"Estimator" FLOAT
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table TMP_20180417011538_1F741V_BAG_U part 2/2. Populate

INSERT INTO "TMP_20180417011538_1F741V_BAG_U" ("KEY", "Estimator") SELECT "U"."KEY", "U"."Estimator" 
FROM (SELECT "BAG_Union"."KEY", "BAG_Union"."Estimator" 
FROM (SELECT "BAG_EnsembleUnion"."KEY" AS "KEY", "BAG_EnsembleUnion"."Estimator" AS "Estimator" 
FROM (SELECT "BAG_B0"."KEY" AS "KEY", "BAG_B0"."Estimator" AS "Estimator" 
FROM "TMP_20180417011538_FE36HU_BAG_B" AS "BAG_B0" UNION ALL SELECT "BAG_B1"."KEY" AS "KEY", "BAG_B1"."Estimator" AS "Estimator" 
FROM "TMP_20180417011538_L8VJDB_BAG_B" AS "BAG_B1") AS "BAG_EnsembleUnion") AS "BAG_Union") AS "U"

-- Code For temporary table TMP_20180417011538_E0LND0_BAG_A part 1/2. Create 


CREATE GLOBAL TEMPORARY TABLE "TMP_20180417011538_E0LND0_BAG_A" (
	"KEY" BIGINT, 
	"Estimator" FLOAT
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table TMP_20180417011538_E0LND0_BAG_A part 2/2. Populate

INSERT INTO "TMP_20180417011538_E0LND0_BAG_A" ("KEY", "Estimator") SELECT "U"."KEY", "U"."Estimator" 
FROM (SELECT "BAG_avg"."KEY", "BAG_avg"."Estimator" 
FROM (SELECT "T"."KEY" AS "KEY", CAST("T"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT "BAG_Union"."KEY" AS "KEY", avg(CAST("BAG_Union"."Estimator" AS FLOAT)) AS "Estimator" 
FROM "TMP_20180417011538_1F741V_BAG_U" AS "BAG_Union" GROUP BY "BAG_Union"."KEY") AS "T") AS "BAG_avg") AS "U"

-- Model deployment code

SELECT "BAG_avg"."KEY" AS "KEY", "BAG_avg"."Estimator" AS "Estimator" 
FROM "TMP_20180417011538_E0LND0_BAG_A" AS "BAG_avg"