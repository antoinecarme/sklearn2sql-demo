-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2018

-- Model : BaggingRegressor_Pipeline
-- Dataset : RandomReg_10
-- Database : teradata


-- This SQL code can contain one or more statements, to be executed in the order they appear in this file.



-- Code For temporary table tmp_20180417011539_u3mh3a_ads_ part 1/2. Create 


CREATE GLOBAL TEMPORARY TABLE tmp_20180417011539_u3mh3a_ads_  (
	"KEY" BIGINT, 
	impter_2 FLOAT, 
	impter_3 FLOAT, 
	impter_4 FLOAT, 
	impter_5 FLOAT, 
	impter_6 FLOAT, 
	impter_7 FLOAT, 
	impter_8 FLOAT, 
	impter_9 FLOAT, 
	impter_10 FLOAT, 
	impter_11 FLOAT
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table tmp_20180417011539_u3mh3a_ads_ part 2/2. Populate

INSERT INTO tmp_20180417011539_u3mh3a_ads_ ("KEY", impter_2, impter_3, impter_4, impter_5, impter_6, impter_7, impter_8, impter_9, impter_10, impter_11) SELECT "U"."KEY", "U".impter_2, "U".impter_3, "U".impter_4, "U".impter_5, "U".impter_6, "U".impter_7, "U".impter_8, "U".impter_9, "U".impter_10, "U".impter_11 
FROM (SELECT "ADS_imp_1_OUT"."KEY", "ADS_imp_1_OUT".impter_2, "ADS_imp_1_OUT".impter_3, "ADS_imp_1_OUT".impter_4, "ADS_imp_1_OUT".impter_5, "ADS_imp_1_OUT".impter_6, "ADS_imp_1_OUT".impter_7, "ADS_imp_1_OUT".impter_8, "ADS_imp_1_OUT".impter_9, "ADS_imp_1_OUT".impter_10, "ADS_imp_1_OUT".impter_11 
FROM (SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" IS NULL) THEN 0.16680947298137394 ELSE "ADS"."Feature_0" END AS impter_2, CASE WHEN ("ADS"."Feature_1" IS NULL) THEN -0.16351271994443456 ELSE "ADS"."Feature_1" END AS impter_3, CASE WHEN ("ADS"."Feature_2" IS NULL) THEN 0.19149292241003152 ELSE "ADS"."Feature_2" END AS impter_4, CASE WHEN ("ADS"."Feature_3" IS NULL) THEN 0.058384844753055345 ELSE "ADS"."Feature_3" END AS impter_5, CASE WHEN ("ADS"."Feature_4" IS NULL) THEN -0.09933205162122274 ELSE "ADS"."Feature_4" END AS impter_6, CASE WHEN ("ADS"."Feature_5" IS NULL) THEN 0.21293121660488037 ELSE "ADS"."Feature_5" END AS impter_7, CASE WHEN ("ADS"."Feature_6" IS NULL) THEN 0.047865568690029614 ELSE "ADS"."Feature_6" END AS impter_8, CASE WHEN ("ADS"."Feature_7" IS NULL) THEN 0.05078698959084227 ELSE "ADS"."Feature_7" END AS impter_9, CASE WHEN ("ADS"."Feature_8" IS NULL) THEN -0.1913199225908187 ELSE "ADS"."Feature_8" END AS impter_10, CASE WHEN ("ADS"."Feature_9" IS NULL) THEN 0.19940405677473352 ELSE "ADS"."Feature_9" END AS impter_11 
FROM "RandomReg_10" AS "ADS") AS "ADS_imp_1_OUT") AS "U"

-- Code For temporary table tmp_20180417011539_mu01rm_ads_ part 1/2. Create 


CREATE GLOBAL TEMPORARY TABLE tmp_20180417011539_mu01rm_ads_  (
	"KEY" BIGINT, 
	scaler_2 FLOAT, 
	scaler_3 FLOAT, 
	scaler_4 FLOAT, 
	scaler_5 FLOAT, 
	scaler_6 FLOAT, 
	scaler_7 FLOAT, 
	scaler_8 FLOAT, 
	scaler_9 FLOAT, 
	scaler_10 FLOAT, 
	scaler_11 FLOAT
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table tmp_20180417011539_mu01rm_ads_ part 2/2. Populate

INSERT INTO tmp_20180417011539_mu01rm_ads_ ("KEY", scaler_2, scaler_3, scaler_4, scaler_5, scaler_6, scaler_7, scaler_8, scaler_9, scaler_10, scaler_11) SELECT "U"."KEY", "U".scaler_2, "U".scaler_3, "U".scaler_4, "U".scaler_5, "U".scaler_6, "U".scaler_7, "U".scaler_8, "U".scaler_9, "U".scaler_10, "U".scaler_11 
FROM (SELECT "ADS_sca_2_OUT"."KEY", "ADS_sca_2_OUT".scaler_2, "ADS_sca_2_OUT".scaler_3, "ADS_sca_2_OUT".scaler_4, "ADS_sca_2_OUT".scaler_5, "ADS_sca_2_OUT".scaler_6, "ADS_sca_2_OUT".scaler_7, "ADS_sca_2_OUT".scaler_8, "ADS_sca_2_OUT".scaler_9, "ADS_sca_2_OUT".scaler_10, "ADS_sca_2_OUT".scaler_11 
FROM (SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", (CAST("ADS_imp_1_OUT".impter_2 AS FLOAT) - 0.166809472981374) / 1.028983599704731 AS scaler_2, (CAST("ADS_imp_1_OUT".impter_3 AS FLOAT) - -0.163512719944435) / 0.991581253504681 AS scaler_3, (CAST("ADS_imp_1_OUT".impter_4 AS FLOAT) - 0.191492922410032) / 0.932114762914776 AS scaler_4, (CAST("ADS_imp_1_OUT".impter_5 AS FLOAT) - 0.058384844753055) / 1.08557293295068 AS scaler_5, (CAST("ADS_imp_1_OUT".impter_6 AS FLOAT) - -0.099332051621223) / 1.074390441288283 AS scaler_6, (CAST("ADS_imp_1_OUT".impter_7 AS FLOAT) - 0.21293121660488) / 0.935807438188625 AS scaler_7, (CAST("ADS_imp_1_OUT".impter_8 AS FLOAT) - 0.04786556869003) / 1.136357409061339 AS scaler_8, (CAST("ADS_imp_1_OUT".impter_9 AS FLOAT) - 0.050786989590842) / 0.972545746009845 AS scaler_9, (CAST("ADS_imp_1_OUT".impter_10 AS FLOAT) - -0.191319922590819) / 1.141597467793656 AS scaler_10, (CAST("ADS_imp_1_OUT".impter_11 AS FLOAT) - 0.199404056774734) / 0.882245682091319 AS scaler_11 
FROM tmp_20180417011539_u3mh3a_ads_ AS "ADS_imp_1_OUT") AS "ADS_sca_2_OUT") AS "U"

-- Code For temporary table tmp_20180417011539_fsivyl_bag_ part 1/2. Create 


CREATE GLOBAL TEMPORARY TABLE tmp_20180417011539_fsivyl_bag_  (
	"KEY" BIGINT, 
	"Estimator" FLOAT
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table tmp_20180417011539_fsivyl_bag_ part 2/2. Populate

INSERT INTO tmp_20180417011539_fsivyl_bag_ ("KEY", "Estimator") SELECT "U"."KEY", "U"."Estimator" 
FROM (WITH "DT_node_lookup" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= 0.596842408180237) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= -0.379846960306168) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= 1.512290239334106) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= -0.478031516075134) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= -1.016168594360352) THEN 5 ELSE 6 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= -1.761682391166687) THEN 8 ELSE 9 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= -0.516634345054626) THEN 11 ELSE 12 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= -0.39545139670372) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= -1.42883038520813) THEN 15 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= -0.872981667518616) THEN 17 ELSE 18 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 1.044869661331177) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= 0.12294390052557) THEN 21 ELSE 22 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= -0.12812240421772) THEN 24 ELSE 25 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= -0.468329548835754) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= 1.513651609420776) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= 1.238738656044006) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= 0.17155259847641) THEN 30 ELSE 31 END ELSE 32 END ELSE 33 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= 0.5281001329422) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= -0.83541202545166) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= 1.361190915107727) THEN 37 ELSE 38 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= 0.067561835050583) THEN 40 ELSE 41 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= 0.906342387199402) THEN 43 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= 1.221036553382874) THEN 45 ELSE 46 END END END END END AS node_id_2 
FROM tmp_20180417011539_mu01rm_ads_ AS "ADS_sca_2_OUT"), 
"DT_node_data" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values"."threshold" AS FLOAT) AS "threshold", CAST("Values"."count" AS FLOAT) AS "count", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS "count", 5 AS depth, 4 AS parent_id, -405.2074819205236 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 4 AS "count", 5 AS depth, 4 AS parent_id, -242.07063404110843 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 7 AS parent_id, -268.1904323885528 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 9 AS "count", 5 AS depth, 7 AS parent_id, -98.62910020709616 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 4 AS depth, 10 AS parent_id, -1.7789086303776 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 4 AS depth, 10 AS parent_id, 133.8707138905623 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 4 AS depth, 14 AS parent_id, -9.185160907179679 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 16 AS parent_id, -154.4008369933406 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS "count", 5 AS depth, 16 AS parent_id, -257.81327335251797 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 7 AS "count", 5 AS depth, 20 AS parent_id, 41.46822647392525 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 4 AS "count", 5 AS depth, 20 AS parent_id, 172.11640989037144 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 3 AS "count", 5 AS depth, 23 AS parent_id, 199.53096616939501 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS "count", 5 AS depth, 23 AS parent_id, 323.5464879669397 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 29 AS parent_id, 60.83005801950535 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 31 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 29 AS parent_id, 58.56592202346141 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 32 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 4 AS depth, 28 AS parent_id, 23.511748777975313 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 33 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 3 AS depth, 27 AS parent_id, 116.8891961793557 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 37 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 36 AS parent_id, 259.87552025822583 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 38 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 36 AS parent_id, 325.0738816201826 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 40 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 39 AS parent_id, 194.4087167101487 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 41 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 39 AS parent_id, 228.58868551702312 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 43 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 4 AS depth, 42 AS parent_id, 447.6909835452225 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 45 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 44 AS parent_id, 393.261092787257 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 46 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS "count", 5 AS depth, 44 AS parent_id, 355.99351619859897 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte) AS "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".node_id AS node_id, "DT_node_data".feature AS feature, "DT_node_data"."threshold" AS "threshold", "DT_node_data"."count" AS "count", "DT_node_data".depth AS depth, "DT_node_data".parent_id AS parent_id, "DT_node_data"."Estimator" AS "Estimator" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".node_id), 
"BAG_Model_0" AS 
(SELECT "DT_Output"."KEY" AS "KEY", "DT_Output"."Estimator" AS "Estimator" 
FROM "DT_Output"), 
"DT_node_lookup_1" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= -0.942836880683899) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= -1.267938613891602) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= 0.461987733840942) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= -0.629556357860565) THEN 4 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= 0.399952590465546) THEN 6 ELSE 7 END END ELSE 8 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= -1.411694645881653) THEN 10 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= -0.454666912555695) THEN 12 ELSE 13 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= -0.174823671579361) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= -0.245400100946426) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 0.587524712085724) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= 0.727927982807159) THEN 18 ELSE 19 END ELSE 20 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 0.895931363105774) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= -1.134085893630982) THEN 23 ELSE 24 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= -0.294413924217224) THEN 26 ELSE 27 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= -0.739884614944458) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= 1.213316440582276) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= -0.933097839355469) THEN 31 ELSE 32 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= -1.503883838653564) THEN 34 ELSE 35 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= -0.789976119995117) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= -0.50929468870163) THEN 38 ELSE 39 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= 0.66522753238678) THEN 41 ELSE 42 END END END END END AS node_id_2 
FROM tmp_20180417011539_mu01rm_ads_ AS "ADS_sca_2_OUT"), 
"DT_node_data_1" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values"."threshold" AS FLOAT) AS "threshold", CAST("Values"."count" AS FLOAT) AS "count", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 4 AS depth, 3 AS parent_id, -284.890410429711 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 5 AS parent_id, -165.64587304935068 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 5 AS parent_id, -210.35491750133752 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 3 AS depth, 2 AS parent_id, -53.55855810403282 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 3 AS depth, 9 AS parent_id, -351.3842930876292 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 4 AS depth, 11 AS parent_id, -459.030670753418 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 4 AS depth, 11 AS parent_id, -422.39029400237723 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 4 AS "count", 5 AS depth, 17 AS parent_id, -155.53419885479448 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS "count", 5 AS depth, 17 AS parent_id, -244.20935844983507 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 4 AS depth, 16 AS parent_id, -9.185160907179679 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 22 AS parent_id, -223.26828856161853 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 8 AS "count", 5 AS depth, 22 AS parent_id, -2.60221855222227 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 25 AS parent_id, 144.424454256417 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 25 AS parent_id, 156.85798347147366 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 31 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 30 AS parent_id, 11.979848483268036 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 32 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 30 AS parent_id, 23.511748777975313 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 34 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 33 AS parent_id, -27.42654029072463 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 35 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 33 AS parent_id, -32.3700606387813 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 38 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS "count", 5 AS depth, 37 AS parent_id, -14.482521662072362 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 39 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 37 AS parent_id, -33.337014733450744 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 41 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 13 AS "count", 5 AS depth, 40 AS parent_id, 210.19737687026083 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 42 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 4 AS "count", 5 AS depth, 40 AS parent_id, 373.29587623531773 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte) AS "Values"), 
"DT_Output_1" AS 
(SELECT "DT_node_lookup_1"."KEY" AS "KEY", "DT_node_lookup_1".node_id_2 AS node_id_2, "DT_node_data_1".node_id AS node_id, "DT_node_data_1".feature AS feature, "DT_node_data_1"."threshold" AS "threshold", "DT_node_data_1"."count" AS "count", "DT_node_data_1".depth AS depth, "DT_node_data_1".parent_id AS parent_id, "DT_node_data_1"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_1" LEFT OUTER JOIN "DT_node_data_1" ON "DT_node_lookup_1".node_id_2 = "DT_node_data_1".node_id), 
"BAG_Model_1" AS 
(SELECT "DT_Output_1"."KEY" AS "KEY", "DT_Output_1"."Estimator" AS "Estimator" 
FROM "DT_Output_1"), 
"DT_node_lookup_2" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= 0.809576153755188) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 0.978290915489197) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= 0.014573076739907) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= 0.045121781527996) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= -0.422566473484039) THEN 5 ELSE 6 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= -0.449425220489502) THEN 8 ELSE 9 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= 1.399146795272827) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= -0.27082371711731) THEN 12 ELSE 13 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= -0.058614671230316) THEN 15 ELSE 16 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 1.989814519882202) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= 0.601702511310577) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= -0.129374474287033) THEN 20 ELSE 21 END ELSE 22 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= 0.630836963653564) THEN 24 ELSE 25 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= 0.262357205152512) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= -0.694652676582336) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 0.6101154088974) THEN 29 ELSE 30 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= 0.814159095287323) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= 0.862272202968597) THEN 33 ELSE 34 END ELSE 35 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= 0.232639789581299) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= -0.060503359884024) THEN 38 ELSE 39 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= -0.278779804706574) THEN 41 ELSE 42 END END END END AS node_id_2 
FROM tmp_20180417011539_mu01rm_ads_ AS "ADS_sca_2_OUT"), 
"DT_node_data_2" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values"."threshold" AS FLOAT) AS "threshold", CAST("Values"."count" AS FLOAT) AS "count", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 4 AS "count", 5 AS depth, 4 AS parent_id, -296.8393166750528 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 3 AS "count", 5 AS depth, 4 AS parent_id, -177.75033458301976 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 3 AS "count", 5 AS depth, 7 AS parent_id, -141.6348852658934 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 3 AS "count", 5 AS depth, 7 AS parent_id, -31.80056391393078 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 4 AS "count", 5 AS depth, 11 AS parent_id, -102.85089819030136 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 11 AS "count", 5 AS depth, 11 AS parent_id, 12.145058713842303 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 14 AS parent_id, 290.7091540973176 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 14 AS parent_id, 320.6826523308587 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS "count", 5 AS depth, 19 AS parent_id, 150.6412188639453 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 19 AS parent_id, 191.5521549407964 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 4 AS depth, 18 AS parent_id, 259.87552025822583 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 4 AS depth, 23 AS parent_id, 447.6909835452225 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 4 AS depth, 23 AS parent_id, 316.51213779149236 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 29 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 4 AS depth, 28 AS parent_id, 228.58868551702312 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 4 AS depth, 28 AS parent_id, 325.0738816201826 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 33 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS "count", 5 AS depth, 32 AS parent_id, 60.60536391637268 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 34 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 32 AS parent_id, 113.4408795258052 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 35 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 4 AS depth, 31 AS parent_id, 198.97164294103212 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 38 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 4 AS depth, 37 AS parent_id, 243.63801061508232 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 39 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 4 AS depth, 37 AS parent_id, 277.9812845098006 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 41 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 4 AS depth, 40 AS parent_id, 360.61572443308125 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 42 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 4 AS depth, 40 AS parent_id, 393.261092787257 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte) AS "Values"), 
"DT_Output_2" AS 
(SELECT "DT_node_lookup_2"."KEY" AS "KEY", "DT_node_lookup_2".node_id_2 AS node_id_2, "DT_node_data_2".node_id AS node_id, "DT_node_data_2".feature AS feature, "DT_node_data_2"."threshold" AS "threshold", "DT_node_data_2"."count" AS "count", "DT_node_data_2".depth AS depth, "DT_node_data_2".parent_id AS parent_id, "DT_node_data_2"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_2" LEFT OUTER JOIN "DT_node_data_2" ON "DT_node_lookup_2".node_id_2 = "DT_node_data_2".node_id), 
"BAG_Model_2" AS 
(SELECT "DT_Output_2"."KEY" AS "KEY", "DT_Output_2"."Estimator" AS "Estimator" 
FROM "DT_Output_2"), 
"DT_node_lookup_3" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 0.418575763702393) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= -0.097743682563305) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= -0.98478353023529) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= -1.06139326095581) THEN 4 ELSE 5 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= 0.100325718522072) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= -0.270994067192078) THEN 8 ELSE 9 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= -1.67883825302124) THEN 11 ELSE 12 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= 0.150188267230988) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= -0.228081852197647) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= -0.412751019001007) THEN 16 ELSE 17 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= 0.026385191828012) THEN 19 ELSE 20 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= 0.569673478603363) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= -0.065538570284843) THEN 23 ELSE 24 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= 0.092591941356659) THEN 26 ELSE 27 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= -1.650628089904785) THEN 29 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= -0.030735751613975) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= -0.315858572721481) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= -0.7451171875) THEN 33 ELSE 34 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= -0.80341762304306) THEN 36 ELSE 37 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= 0.466820299625397) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= 0.020799100399017) THEN 40 ELSE 41 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= 1.64696478843689) THEN 43 ELSE 44 END END END END END AS node_id_2 
FROM tmp_20180417011539_mu01rm_ads_ AS "ADS_sca_2_OUT"), 
"DT_node_data_3" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values"."threshold" AS FLOAT) AS "threshold", CAST("Values"."count" AS FLOAT) AS "count", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 4 AS depth, 3 AS parent_id, -351.3842930876292 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 4 AS depth, 3 AS parent_id, -459.030670753418 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 4 AS "count", 5 AS depth, 7 AS parent_id, -210.69664064319215 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 7 AS parent_id, -305.67509721048407 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 10 AS parent_id, -53.55855810403282 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS "count", 5 AS depth, 10 AS parent_id, -122.95886223941 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS "count", 5 AS depth, 15 AS parent_id, -116.67620855582219 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS "count", 5 AS depth, 15 AS parent_id, -216.97685028819683 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 18 AS parent_id, -181.5117298102302 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 6 AS "count", 5 AS depth, 18 AS parent_id, 17.619280054329796 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 3 AS "count", 5 AS depth, 22 AS parent_id, 15.08637447863128 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS "count", 5 AS depth, 22 AS parent_id, 128.21020798682676 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 25 AS parent_id, 320.6826523308587 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS "count", 5 AS depth, 25 AS parent_id, 376.93840861016906 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 29 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 2 AS depth, 28 AS parent_id, -298.79907558939374 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 33 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 32 AS parent_id, -9.185160907179679 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 34 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 32 AS parent_id, -67.71218597426643 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 36 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 35 AS parent_id, 351.37130796411674 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 37 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 5 AS "count", 5 AS depth, 35 AS parent_id, 148.1109056250043 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 40 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS "count", 5 AS depth, 39 AS parent_id, 169.374894551032 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 41 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 4 AS "count", 5 AS depth, 39 AS parent_id, 265.0347129627642 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 43 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 3 AS "count", 5 AS depth, 42 AS parent_id, 314.9874715901854 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 44 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 42 AS parent_id, 479.7072160445087 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte) AS "Values"), 
"DT_Output_3" AS 
(SELECT "DT_node_lookup_3"."KEY" AS "KEY", "DT_node_lookup_3".node_id_2 AS node_id_2, "DT_node_data_3".node_id AS node_id, "DT_node_data_3".feature AS feature, "DT_node_data_3"."threshold" AS "threshold", "DT_node_data_3"."count" AS "count", "DT_node_data_3".depth AS depth, "DT_node_data_3".parent_id AS parent_id, "DT_node_data_3"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_3" LEFT OUTER JOIN "DT_node_data_3" ON "DT_node_lookup_3".node_id_2 = "DT_node_data_3".node_id), 
"BAG_Model_3" AS 
(SELECT "DT_Output_3"."KEY" AS "KEY", "DT_Output_3"."Estimator" AS "Estimator" 
FROM "DT_Output_3"), 
"DT_node_lookup_4" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= -0.792829513549805) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= 0.292308479547501) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= -1.858980894088745) THEN 3 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= -1.16836404800415) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= -1.542394638061524) THEN 6 ELSE 7 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= -0.332974016666412) THEN 9 ELSE 10 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 0.137027740478516) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= -1.158084392547608) THEN 13 ELSE 14 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= 0.782044470310211) THEN 16 ELSE 17 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= 0.001629361882806) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 0.176398545503616) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= 0.435245156288147) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= 0.479357659816742) THEN 22 ELSE 23 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= 0.127354845404625) THEN 25 ELSE 26 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= 0.08869194984436) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= 0.919292628765106) THEN 29 ELSE 30 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= 0.082434453070164) THEN 32 ELSE 33 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= -0.724181532859802) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= 0.014819040894508) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= 0.191400766372681) THEN 37 ELSE 38 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= -0.719450414180756) THEN 40 ELSE 41 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= -0.071080192923546) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= -0.015767760574818) THEN 44 ELSE 45 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= 0.885683059692383) THEN 47 ELSE 48 END END END END END AS node_id_2 
FROM tmp_20180417011539_mu01rm_ads_ AS "ADS_sca_2_OUT"), 
"DT_node_data_4" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values"."threshold" AS FLOAT) AS "threshold", CAST("Values"."count" AS FLOAT) AS "count", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 3 AS depth, 2 AS parent_id, -459.030670753418 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 3 AS "count", 5 AS depth, 5 AS parent_id, -248.32160218228188 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 4 AS "count", 5 AS depth, 5 AS parent_id, -147.90439308994004 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS "count", 5 AS depth, 8 AS parent_id, -280.43388966888915 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 8 AS parent_id, -351.3842930876292 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 4 AS depth, 12 AS parent_id, -20.27001010137917 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 4 AS depth, 12 AS parent_id, -53.55855810403282 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 4 AS depth, 15 AS parent_id, 259.87552025822583 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 4 AS depth, 15 AS parent_id, 235.3201708856319 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS "count", 5 AS depth, 21 AS parent_id, -200.84036412184003 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS "count", 5 AS depth, 21 AS parent_id, -134.4576341722804 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS "count", 5 AS depth, 24 AS parent_id, 27.468904490490242 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS "count", 5 AS depth, 24 AS parent_id, -65.1682960187446 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 29 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 3 AS "count", 5 AS depth, 28 AS parent_id, -5.736516341880559 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS "count", 5 AS depth, 28 AS parent_id, 34.804100287796395 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 32 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 31 AS parent_id, 156.85798347147366 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 33 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 31 AS parent_id, 144.424454256417 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 37 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS "count", 5 AS depth, 36 AS parent_id, -33.01469670189426 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 38 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS "count", 5 AS depth, 36 AS parent_id, -1.701060227792602 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 40 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 39 AS parent_id, 116.8891961793557 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 41 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 39 AS parent_id, 58.56592202346141 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 44 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 3 AS "count", 5 AS depth, 43 AS parent_id, 53.72934572915507 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 45 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS "count", 5 AS depth, 43 AS parent_id, 285.43270621338684 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 47 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 5 AS "count", 5 AS depth, 46 AS parent_id, 257.2478167667274 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 48 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS "count", 5 AS depth, 46 AS parent_id, 371.49751388447316 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte) AS "Values"), 
"DT_Output_4" AS 
(SELECT "DT_node_lookup_4"."KEY" AS "KEY", "DT_node_lookup_4".node_id_2 AS node_id_2, "DT_node_data_4".node_id AS node_id, "DT_node_data_4".feature AS feature, "DT_node_data_4"."threshold" AS "threshold", "DT_node_data_4"."count" AS "count", "DT_node_data_4".depth AS depth, "DT_node_data_4".parent_id AS parent_id, "DT_node_data_4"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_4" LEFT OUTER JOIN "DT_node_data_4" ON "DT_node_lookup_4".node_id_2 = "DT_node_data_4".node_id), 
"BAG_Model_4" AS 
(SELECT "DT_Output_4"."KEY" AS "KEY", "DT_Output_4"."Estimator" AS "Estimator" 
FROM "DT_Output_4"), 
"DT_node_lookup_5" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= -0.007927309721708) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= -0.940362334251404) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= -0.939427256584168) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= -0.061411678791046) THEN 4 ELSE 5 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= 0.902505695819855) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= 0.769294142723084) THEN 8 ELSE 9 END ELSE 10 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= 0.015268662944436) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= 0.072519890964031) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= -0.738287806510925) THEN 14 ELSE 15 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= 0.507505774497986) THEN 17 ELSE 18 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= 0.947025775909424) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= 0.602608501911163) THEN 21 ELSE 22 END ELSE 23 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= 0.029281165450811) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 0.808343172073364) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= -0.706230282783508) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 0.10636130720377) THEN 28 ELSE 29 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= -0.187410607933998) THEN 31 ELSE 32 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= 0.418801546096802) THEN 34 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= 0.492980897426605) THEN 36 ELSE 37 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= 0.184769675135612) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= 0.095931902527809) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= 0.015178788453341) THEN 41 ELSE 42 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= 0.465550303459168) THEN 44 ELSE 45 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= 2.044734001159668) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= -0.653820514678955) THEN 48 ELSE 49 END ELSE 50 END END END END AS node_id_2 
FROM tmp_20180417011539_mu01rm_ads_ AS "ADS_sca_2_OUT"), 
"DT_node_data_5" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values"."threshold" AS FLOAT) AS "threshold", CAST("Values"."count" AS FLOAT) AS "count", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 4 AS depth, 3 AS parent_id, -351.3842930876292 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 4 AS depth, 3 AS parent_id, -422.39029400237723 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 4 AS "count", 5 AS depth, 7 AS parent_id, -104.92167060892582 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS "count", 5 AS depth, 7 AS parent_id, -191.063284323481 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 4 AS depth, 6 AS parent_id, -305.67509721048407 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS "count", 5 AS depth, 13 AS parent_id, -192.83109115096553 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS "count", 5 AS depth, 13 AS parent_id, -120.67653414105177 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 4 AS "count", 5 AS depth, 16 AS parent_id, -18.88939923472416 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS "count", 5 AS depth, 16 AS parent_id, -114.01123052917626 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 4 AS "count", 5 AS depth, 20 AS parent_id, 103.60520840434047 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 3 AS "count", 5 AS depth, 20 AS parent_id, -18.883085331926868 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 4 AS depth, 19 AS parent_id, 393.261092787257 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 28 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 27 AS parent_id, -181.5117298102302 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 29 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 27 AS parent_id, -251.2683418956458 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 31 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 5 AS "count", 5 AS depth, 30 AS parent_id, 22.30851676353701 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 32 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS "count", 5 AS depth, 30 AS parent_id, -33.06227029601031 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 34 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 4 AS depth, 33 AS parent_id, 156.85798347147366 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 36 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 35 AS parent_id, 277.9812845098006 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 37 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 35 AS parent_id, 235.3201708856319 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 41 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS "count", 5 AS depth, 40 AS parent_id, 79.5768303814577 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 42 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 40 AS parent_id, 198.97164294103217 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 44 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS "count", 5 AS depth, 43 AS parent_id, 210.4674417575487 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 45 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 3 AS "count", 5 AS depth, 43 AS parent_id, 329.52203269548926 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 48 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS "count", 5 AS depth, 47 AS parent_id, 270.15339820458973 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 49 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 4 AS "count", 5 AS depth, 47 AS parent_id, 344.4919380068218 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 50 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 4 AS depth, 46 AS parent_id, 479.7072160445087 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte) AS "Values"), 
"DT_Output_5" AS 
(SELECT "DT_node_lookup_5"."KEY" AS "KEY", "DT_node_lookup_5".node_id_2 AS node_id_2, "DT_node_data_5".node_id AS node_id, "DT_node_data_5".feature AS feature, "DT_node_data_5"."threshold" AS "threshold", "DT_node_data_5"."count" AS "count", "DT_node_data_5".depth AS depth, "DT_node_data_5".parent_id AS parent_id, "DT_node_data_5"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_5" LEFT OUTER JOIN "DT_node_data_5" ON "DT_node_lookup_5".node_id_2 = "DT_node_data_5".node_id), 
"BAG_Model_5" AS 
(SELECT "DT_Output_5"."KEY" AS "KEY", "DT_Output_5"."Estimator" AS "Estimator" 
FROM "DT_Output_5"), 
"DT_node_lookup_6" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= -0.007927309721708) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= -0.646153330802918) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= -0.765251934528351) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= -1.358738780021668) THEN 4 ELSE 5 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= 0.461987733840942) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= -0.150171518325806) THEN 8 ELSE 9 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= 1.003368496894836) THEN 11 ELSE 12 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= 0.740669190883636) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= -0.682785511016846) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= 0.32407021522522) THEN 16 ELSE 17 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= 1.028967022895813) THEN 19 ELSE 20 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= 0.496119946241379) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= 1.531009674072266) THEN 23 ELSE 24 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= -0.166015595197678) THEN 26 ELSE 27 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= -0.218040823936462) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= 0.111107289791107) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= -0.118748694658279) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= -0.344726055860519) THEN 32 ELSE 33 END ELSE 34 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= -1.734428882598877) THEN 36 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= 0.204157650470734) THEN 38 ELSE 39 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= -1.297878861427307) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= -0.214829951524734) THEN 42 ELSE 43 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= -1.227844953536987) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= 0.663528919219971) THEN 46 ELSE 47 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= 0.466820299625397) THEN 49 ELSE 50 END END END END END AS node_id_2 
FROM tmp_20180417011539_mu01rm_ads_ AS "ADS_sca_2_OUT"), 
"DT_node_data_6" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values"."threshold" AS FLOAT) AS "threshold", CAST("Values"."count" AS FLOAT) AS "count", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 4 AS depth, 3 AS parent_id, -459.030670753418 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 4 AS depth, 3 AS parent_id, -422.39029400237723 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS "count", 5 AS depth, 7 AS parent_id, -202.31673701056397 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS "count", 5 AS depth, 7 AS parent_id, -147.92721988532008 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 10 AS parent_id, -53.55855810403282 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 10 AS parent_id, -101.20974879377152 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 15 AS parent_id, -223.26828856161853 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 15 AS parent_id, -140.8312353487667 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 3 AS "count", 5 AS depth, 18 AS parent_id, -74.45046084947587 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS "count", 5 AS depth, 18 AS parent_id, -17.441292989654784 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS "count", 5 AS depth, 22 AS parent_id, 58.674636164574274 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 22 AS parent_id, 44.29871810773542 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 25 AS parent_id, 11.979848483268036 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 25 AS parent_id, -8.541514583322922 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 32 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 31 AS parent_id, -268.1904323885528 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 33 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 31 AS parent_id, -154.4008369933406 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 34 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 4 AS depth, 30 AS parent_id, 144.424454256417 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 36 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 4 AS depth, 35 AS parent_id, 156.85798347147366 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 38 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 3 AS "count", 5 AS depth, 37 AS parent_id, 36.64726905648302 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 39 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 3 AS "count", 5 AS depth, 37 AS parent_id, -1.809042770712445 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 42 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 4 AS depth, 41 AS parent_id, -298.79907558939374 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 43 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 4 AS depth, 41 AS parent_id, -20.4235287408218 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 46 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 45 AS parent_id, -27.42654029072463 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 47 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 45 AS parent_id, 113.4408795258052 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 49 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 10 AS "count", 5 AS depth, 48 AS parent_id, 220.6943382492484 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 50 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 5 AS "count", 5 AS depth, 48 AS parent_id, 389.66883267552987 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte) AS "Values"), 
"DT_Output_6" AS 
(SELECT "DT_node_lookup_6"."KEY" AS "KEY", "DT_node_lookup_6".node_id_2 AS node_id_2, "DT_node_data_6".node_id AS node_id, "DT_node_data_6".feature AS feature, "DT_node_data_6"."threshold" AS "threshold", "DT_node_data_6"."count" AS "count", "DT_node_data_6".depth AS depth, "DT_node_data_6".parent_id AS parent_id, "DT_node_data_6"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_6" LEFT OUTER JOIN "DT_node_data_6" ON "DT_node_lookup_6".node_id_2 = "DT_node_data_6".node_id), 
"BAG_Model_6" AS 
(SELECT "DT_Output_6"."KEY" AS "KEY", "DT_Output_6"."Estimator" AS "Estimator" 
FROM "DT_Output_6"), 
"DT_node_lookup_7" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 0.808343172073364) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= 0.747721493244171) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= -0.940362334251404) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= -0.631149291992188) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= -0.776422142982483) THEN 5 ELSE 6 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= 0.159061774611473) THEN 8 ELSE 9 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= -0.012864626012743) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= -0.883179605007172) THEN 12 ELSE 13 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= 0.14383190870285) THEN 15 ELSE 16 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= 0.708218216896057) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= -1.646566390991211) THEN 19 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 0.538772225379944) THEN 21 ELSE 22 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= 0.469427466392517) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= 1.663427233695984) THEN 25 ELSE 26 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= 0.737507939338684) THEN 28 ELSE 29 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= -0.30469074845314) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 0.978290915489197) THEN 32 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= 0.082434453070164) THEN 34 ELSE 35 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= 0.301966041326523) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= -0.845077395439148) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= 0.782044470310211) THEN 39 ELSE 40 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= -0.469679951667786) THEN 42 ELSE 43 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= 1.975801467895508) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= -1.031267285346985) THEN 46 ELSE 47 END ELSE 48 END END END END AS node_id_2 
FROM tmp_20180417011539_mu01rm_ads_ AS "ADS_sca_2_OUT"), 
"DT_node_data_7" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values"."threshold" AS FLOAT) AS "threshold", CAST("Values"."count" AS FLOAT) AS "count", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 4 AS parent_id, -422.39029400237723 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 3 AS "count", 5 AS depth, 4 AS parent_id, -278.4070414726523 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 3 AS "count", 5 AS depth, 7 AS parent_id, -194.2074617845642 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS "count", 5 AS depth, 7 AS parent_id, -69.44228833394571 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 5 AS "count", 5 AS depth, 11 AS parent_id, -224.07377768185083 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 12 AS "count", 5 AS depth, 11 AS parent_id, -67.8740888192385 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS "count", 5 AS depth, 14 AS parent_id, 212.28993399393994 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 8 AS "count", 5 AS depth, 14 AS parent_id, 13.66733519279175 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 4 AS depth, 18 AS parent_id, -284.890410429711 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS "count", 5 AS depth, 20 AS parent_id, -26.697877154088868 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 20 AS parent_id, 62.64480580928396 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS "count", 5 AS depth, 24 AS parent_id, 240.96884028801765 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 24 AS parent_id, 113.4408795258052 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 28 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 27 AS parent_id, 479.7072160445087 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 29 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS "count", 5 AS depth, 27 AS parent_id, 376.93840861016906 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 32 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 3 AS depth, 31 AS parent_id, -9.185160907179679 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 34 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 4 AS depth, 33 AS parent_id, 156.85798347147366 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 35 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 4 AS depth, 33 AS parent_id, 144.424454256417 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 39 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 38 AS parent_id, 259.87552025822583 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 40 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 38 AS parent_id, 235.3201708856319 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 42 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 41 AS parent_id, 194.4087167101487 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 43 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 41 AS parent_id, 191.5521549407964 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 46 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 45 AS parent_id, 349.4216823421892 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 47 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS "count", 5 AS depth, 45 AS parent_id, 318.6525737486649 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 48 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 4 AS depth, 44 AS parent_id, 277.9812845098006 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte) AS "Values"), 
"DT_Output_7" AS 
(SELECT "DT_node_lookup_7"."KEY" AS "KEY", "DT_node_lookup_7".node_id_2 AS node_id_2, "DT_node_data_7".node_id AS node_id, "DT_node_data_7".feature AS feature, "DT_node_data_7"."threshold" AS "threshold", "DT_node_data_7"."count" AS "count", "DT_node_data_7".depth AS depth, "DT_node_data_7".parent_id AS parent_id, "DT_node_data_7"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_7" LEFT OUTER JOIN "DT_node_data_7" ON "DT_node_lookup_7".node_id_2 = "DT_node_data_7".node_id), 
"BAG_Model_7" AS 
(SELECT "DT_Output_7"."KEY" AS "KEY", "DT_Output_7"."Estimator" AS "Estimator" 
FROM "DT_Output_7"), 
"DT_node_lookup_8" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= 1.374468803405762) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= -0.952480912208557) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= -0.363906383514404) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= -0.332974016666412) THEN 4 ELSE 5 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= 0.738455235958099) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= -1.093601584434509) THEN 8 ELSE 9 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= -1.819865465164184) THEN 11 ELSE 12 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= 0.128775626420975) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= -0.649993062019348) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= -0.877016127109528) THEN 16 ELSE 17 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= -1.051876187324524) THEN 19 ELSE 20 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= -0.407588303089142) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= 0.853312969207764) THEN 23 ELSE 24 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= -1.029437899589539) THEN 26 ELSE 27 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= 2.309571027755738) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= -0.710273563861847) THEN 30 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= 1.131390333175659) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= 1.591707944869995) THEN 33 ELSE 34 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= -0.450975894927978) THEN 36 ELSE 37 END END END ELSE 38 END END AS node_id_2 
FROM tmp_20180417011539_mu01rm_ads_ AS "ADS_sca_2_OUT"), 
"DT_node_data_8" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values"."threshold" AS FLOAT) AS "threshold", CAST("Values"."count" AS FLOAT) AS "count", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 4 AS depth, 3 AS parent_id, -298.79907558939374 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 4 AS depth, 3 AS parent_id, -351.3842930876292 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 7 AS parent_id, -165.64587304935068 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 4 AS "count", 5 AS depth, 7 AS parent_id, -80.35271335228391 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 10 AS parent_id, -284.890410429711 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS "count", 5 AS depth, 10 AS parent_id, -215.90421619322228 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS "count", 5 AS depth, 15 AS parent_id, -147.70083070777562 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 3 AS "count", 5 AS depth, 15 AS parent_id, -241.49883785185892 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 18 AS parent_id, -182.332005662268 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 16 AS "count", 5 AS depth, 18 AS parent_id, -13.103235906353564 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 4 AS "count", 5 AS depth, 22 AS parent_id, 37.973325215090554 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 22 AS parent_id, 131.0368050808161 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 25 AS parent_id, -33.337014733450744 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 7 AS "count", 5 AS depth, 25 AS parent_id, 236.03797400232807 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 3 AS depth, 29 AS parent_id, 290.7091540973176 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 33 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 32 AS parent_id, 320.6826523308587 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 34 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 32 AS parent_id, 325.0738816201826 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 36 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 35 AS parent_id, 351.37130796411674 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 37 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 35 AS parent_id, 360.61572443308125 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 38 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 2 AS depth, 28 AS parent_id, 447.6909835452225 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte) AS "Values"), 
"DT_Output_8" AS 
(SELECT "DT_node_lookup_8"."KEY" AS "KEY", "DT_node_lookup_8".node_id_2 AS node_id_2, "DT_node_data_8".node_id AS node_id, "DT_node_data_8".feature AS feature, "DT_node_data_8"."threshold" AS "threshold", "DT_node_data_8"."count" AS "count", "DT_node_data_8".depth AS depth, "DT_node_data_8".parent_id AS parent_id, "DT_node_data_8"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_8" LEFT OUTER JOIN "DT_node_data_8" ON "DT_node_lookup_8".node_id_2 = "DT_node_data_8".node_id), 
"BAG_Model_8" AS 
(SELECT "DT_Output_8"."KEY" AS "KEY", "DT_Output_8"."Estimator" AS "Estimator" 
FROM "DT_Output_8"), 
"DT_node_lookup_9" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= 0.596842408180237) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= -0.653874516487122) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= -0.821845173835754) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= -0.72031182050705) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= -1.006524682044983) THEN 5 ELSE 6 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= -0.363836288452148) THEN 8 ELSE 9 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 0.658080995082855) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= -0.008691178634763) THEN 12 ELSE 13 END ELSE 14 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= 0.029281165450811) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= -0.247976303100586) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= -0.395631581544876) THEN 18 ELSE 19 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= 1.211260318756104) THEN 21 ELSE 22 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= 0.197950750589371) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 1.471203804016113) THEN 25 ELSE 26 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= 0.425568044185638) THEN 28 ELSE 29 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= 0.77944427728653) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= 1.271692276000976) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= 0.771835386753082) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= -0.633868217468262) THEN 34 ELSE 35 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= 0.641086161136627) THEN 37 ELSE 38 END END ELSE 39 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= 1.139840722084046) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= -0.867460131645203) THEN 42 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= 0.3618583381176) THEN 44 ELSE 45 END END ELSE 46 END END END AS node_id_2 
FROM tmp_20180417011539_mu01rm_ads_ AS "ADS_sca_2_OUT"), 
"DT_node_data_9" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values"."threshold" AS FLOAT) AS "threshold", CAST("Values"."count" AS FLOAT) AS "count", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 4 AS parent_id, -459.030670753418 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 4 AS parent_id, -422.39029400237723 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 7 AS parent_id, -305.67509721048407 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS "count", 5 AS depth, 7 AS parent_id, -255.70566701747688 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 5 AS "count", 5 AS depth, 11 AS parent_id, -87.58168137550874 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS "count", 5 AS depth, 11 AS parent_id, -269.31768956004163 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 4 AS depth, 10 AS parent_id, 235.3201708856319 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 17 AS parent_id, -80.36713172562187 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 3 AS "count", 5 AS depth, 17 AS parent_id, -179.40108890307974 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 8 AS "count", 5 AS depth, 20 AS parent_id, 5.200960840615618 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 3 AS "count", 5 AS depth, 20 AS parent_id, 152.78222778259249 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 3 AS "count", 5 AS depth, 24 AS parent_id, 225.16672153439853 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS "count", 5 AS depth, 24 AS parent_id, 313.56051428540366 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 28 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 4 AS "count", 5 AS depth, 27 AS parent_id, 87.07542544694495 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 29 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 27 AS parent_id, 198.97164294103217 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 34 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 33 AS parent_id, 325.0738816201826 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 35 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 33 AS parent_id, 320.6826523308587 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 37 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 36 AS parent_id, 360.61572443308125 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 38 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 36 AS parent_id, 351.37130796411674 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 39 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 3 AS depth, 31 AS parent_id, 447.6909835452225 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 42 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 4 AS depth, 41 AS parent_id, 194.4087167101487 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 44 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS "count", 5 AS depth, 43 AS parent_id, 246.88551254371106 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 45 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 43 AS parent_id, 290.7091540973176 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 46 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 3 AS depth, 40 AS parent_id, 58.56592202346141 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte) AS "Values"), 
"DT_Output_9" AS 
(SELECT "DT_node_lookup_9"."KEY" AS "KEY", "DT_node_lookup_9".node_id_2 AS node_id_2, "DT_node_data_9".node_id AS node_id, "DT_node_data_9".feature AS feature, "DT_node_data_9"."threshold" AS "threshold", "DT_node_data_9"."count" AS "count", "DT_node_data_9".depth AS depth, "DT_node_data_9".parent_id AS parent_id, "DT_node_data_9"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_9" LEFT OUTER JOIN "DT_node_data_9" ON "DT_node_lookup_9".node_id_2 = "DT_node_data_9".node_id), 
"BAG_Model_9" AS 
(SELECT "DT_Output_9"."KEY" AS "KEY", "DT_Output_9"."Estimator" AS "Estimator" 
FROM "DT_Output_9")
 SELECT "BAG_B0"."KEY", "BAG_B0"."Estimator" 
FROM (SELECT "BAG_esu_0"."KEY" AS "KEY", "BAG_esu_0"."Estimator" AS "Estimator" 
FROM (SELECT "BAG_Model_0"."KEY" AS "KEY", "BAG_Model_0"."Estimator" AS "Estimator" 
FROM "BAG_Model_0" UNION ALL SELECT "BAG_Model_1"."KEY" AS "KEY", "BAG_Model_1"."Estimator" AS "Estimator" 
FROM "BAG_Model_1" UNION ALL SELECT "BAG_Model_2"."KEY" AS "KEY", "BAG_Model_2"."Estimator" AS "Estimator" 
FROM "BAG_Model_2" UNION ALL SELECT "BAG_Model_3"."KEY" AS "KEY", "BAG_Model_3"."Estimator" AS "Estimator" 
FROM "BAG_Model_3" UNION ALL SELECT "BAG_Model_4"."KEY" AS "KEY", "BAG_Model_4"."Estimator" AS "Estimator" 
FROM "BAG_Model_4" UNION ALL SELECT "BAG_Model_5"."KEY" AS "KEY", "BAG_Model_5"."Estimator" AS "Estimator" 
FROM "BAG_Model_5" UNION ALL SELECT "BAG_Model_6"."KEY" AS "KEY", "BAG_Model_6"."Estimator" AS "Estimator" 
FROM "BAG_Model_6" UNION ALL SELECT "BAG_Model_7"."KEY" AS "KEY", "BAG_Model_7"."Estimator" AS "Estimator" 
FROM "BAG_Model_7" UNION ALL SELECT "BAG_Model_8"."KEY" AS "KEY", "BAG_Model_8"."Estimator" AS "Estimator" 
FROM "BAG_Model_8" UNION ALL SELECT "BAG_Model_9"."KEY" AS "KEY", "BAG_Model_9"."Estimator" AS "Estimator" 
FROM "BAG_Model_9") AS "BAG_esu_0") AS "BAG_B0") AS "U"

-- Code For temporary table tmp_20180417011539_y82nul_bag_ part 1/2. Create 


CREATE GLOBAL TEMPORARY TABLE tmp_20180417011539_y82nul_bag_  (
	"KEY" BIGINT, 
	"Estimator" FLOAT
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table tmp_20180417011539_y82nul_bag_ part 2/2. Populate

INSERT INTO tmp_20180417011539_y82nul_bag_ ("KEY", "Estimator") SELECT "U"."KEY", "U"."Estimator" 
FROM (WITH "DT_node_lookup_10" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= -0.14761683344841) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= -0.792829513549805) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= -0.037589069455862) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= -0.097793854773045) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= -0.218200638890266) THEN 5 ELSE 6 END ELSE 7 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= -1.292105436325073) THEN 9 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= 1.124539971351624) THEN 11 ELSE 12 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 1.41297698020935) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= 0.899614870548248) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= -1.560965061187744) THEN 16 ELSE 17 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= -1.158886432647705) THEN 19 ELSE 20 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= 1.486189007759094) THEN 22 ELSE 23 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 0.143519505858421) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= 0.947025775909424) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= 0.305701732635498) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= 1.278857111930847) THEN 28 ELSE 29 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= 0.08295764029026) THEN 31 ELSE 32 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= -0.221093833446503) THEN 34 ELSE 35 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= 0.466820299625397) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= -0.224419385194778) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= -0.511897087097168) THEN 39 ELSE 40 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= 0.265832990407944) THEN 42 ELSE 43 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= 1.863947153091431) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= 0.98684173822403) THEN 46 ELSE 47 END ELSE 48 END END END END AS node_id_2 
FROM tmp_20180417011539_mu01rm_ads_ AS "ADS_sca_2_OUT"), 
"DT_node_data_10" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values"."threshold" AS FLOAT) AS "threshold", CAST("Values"."count" AS FLOAT) AS "count", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 4 AS parent_id, -351.3842930876292 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS "count", 5 AS depth, 4 AS parent_id, -302.2370863999389 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 4 AS depth, 3 AS parent_id, -422.39029400237723 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 4 AS depth, 8 AS parent_id, -268.1904323885528 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 10 AS parent_id, -186.24037602901686 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS "count", 5 AS depth, 10 AS parent_id, -220.54552688833127 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 15 AS parent_id, -181.5117298102302 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 12 AS "count", 5 AS depth, 15 AS parent_id, -10.107002207882893 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 18 AS parent_id, -140.8312353487667 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 18 AS parent_id, -223.26828856161853 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 4 AS depth, 21 AS parent_id, 191.5521549407964 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 4 AS depth, 21 AS parent_id, 447.6909835452225 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 28 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 4 AS "count", 5 AS depth, 27 AS parent_id, 68.71818078600755 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 29 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS "count", 5 AS depth, 27 AS parent_id, -4.145080809055568 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 31 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 30 AS parent_id, -237.15037500402434 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 32 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS "count", 5 AS depth, 30 AS parent_id, -90.66860045260819 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 34 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 4 AS depth, 33 AS parent_id, 360.61572443308125 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 35 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 4 AS depth, 33 AS parent_id, 393.261092787257 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 39 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 38 AS parent_id, 62.64480580928396 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 40 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 38 AS parent_id, 144.424454256417 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 42 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 3 AS "count", 5 AS depth, 41 AS parent_id, 258.9702911953818 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 43 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS "count", 5 AS depth, 41 AS parent_id, 196.6901798255904 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 46 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 5 AS "count", 5 AS depth, 45 AS parent_id, 331.2414647411023 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 47 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 45 AS parent_id, 228.58868551702312 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 48 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 4 AS depth, 44 AS parent_id, 479.7072160445087 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte) AS "Values"), 
"DT_Output_10" AS 
(SELECT "DT_node_lookup_10"."KEY" AS "KEY", "DT_node_lookup_10".node_id_2 AS node_id_2, "DT_node_data_10".node_id AS node_id, "DT_node_data_10".feature AS feature, "DT_node_data_10"."threshold" AS "threshold", "DT_node_data_10"."count" AS "count", "DT_node_data_10".depth AS depth, "DT_node_data_10".parent_id AS parent_id, "DT_node_data_10"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_10" LEFT OUTER JOIN "DT_node_data_10" ON "DT_node_lookup_10".node_id_2 = "DT_node_data_10".node_id), 
"BAG_Model_10" AS 
(SELECT "DT_Output_10"."KEY" AS "KEY", "DT_Output_10"."Estimator" AS "Estimator" 
FROM "DT_Output_10"), 
"DT_node_lookup_11" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= 1.374468803405762) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 0.54635488986969) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= -0.240962713956833) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= -0.405984848737717) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= 0.748903274536133) THEN 5 ELSE 6 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= 0.435245156288147) THEN 8 ELSE 9 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= 0.015268662944436) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= -1.260976910591126) THEN 12 ELSE 13 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= -0.731546461582184) THEN 15 ELSE 16 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= 0.692154049873352) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= 0.371742218732834) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 1.476636052131653) THEN 20 ELSE 21 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 1.95467758178711) THEN 23 ELSE 24 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= -0.360621750354767) THEN 26 ELSE 27 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= -1.689899682998657) THEN 29 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 1.463979005813599) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= 1.075096487998962) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= 0.451904058456421) THEN 33 ELSE 34 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= -0.453476637601852) THEN 36 ELSE 37 END END ELSE 38 END END END AS node_id_2 
FROM tmp_20180417011539_mu01rm_ads_ AS "ADS_sca_2_OUT"), 
"DT_node_data_11" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values"."threshold" AS FLOAT) AS "threshold", CAST("Values"."count" AS FLOAT) AS "count", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 5 AS "count", 5 AS depth, 4 AS parent_id, -279.51404384458317 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 4 AS parent_id, -33.10367734893197 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 6 AS "count", 5 AS depth, 7 AS parent_id, -147.94072491211594 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 3 AS "count", 5 AS depth, 7 AS parent_id, -57.74343346612257 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 3 AS "count", 5 AS depth, 11 AS parent_id, -223.701358526806 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 9 AS "count", 5 AS depth, 11 AS parent_id, -59.482116826569 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 3 AS "count", 5 AS depth, 14 AS parent_id, -9.877803496887982 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 5 AS "count", 5 AS depth, 14 AS parent_id, 234.9576999227116 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 3 AS "count", 5 AS depth, 19 AS parent_id, 248.4594837465909 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS "count", 5 AS depth, 19 AS parent_id, 169.374894551032 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 22 AS parent_id, 349.42168234218923 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 22 AS parent_id, 316.51213779149236 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 4 AS depth, 25 AS parent_id, 62.64480580928396 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 4 AS depth, 25 AS parent_id, -9.185160907179679 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 29 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 2 AS depth, 28 AS parent_id, 116.8891961793557 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 33 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS "count", 5 AS depth, 32 AS parent_id, 355.99351619859897 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 34 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS "count", 5 AS depth, 32 AS parent_id, 322.43914404658824 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 36 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 35 AS parent_id, 290.7091540973176 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 37 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 35 AS parent_id, 243.63801061508232 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 38 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 3 AS depth, 30 AS parent_id, 447.6909835452225 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte) AS "Values"), 
"DT_Output_11" AS 
(SELECT "DT_node_lookup_11"."KEY" AS "KEY", "DT_node_lookup_11".node_id_2 AS node_id_2, "DT_node_data_11".node_id AS node_id, "DT_node_data_11".feature AS feature, "DT_node_data_11"."threshold" AS "threshold", "DT_node_data_11"."count" AS "count", "DT_node_data_11".depth AS depth, "DT_node_data_11".parent_id AS parent_id, "DT_node_data_11"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_11" LEFT OUTER JOIN "DT_node_data_11" ON "DT_node_lookup_11".node_id_2 = "DT_node_data_11".node_id), 
"BAG_Model_11" AS 
(SELECT "DT_Output_11"."KEY" AS "KEY", "DT_Output_11"."Estimator" AS "Estimator" 
FROM "DT_Output_11"), 
"DT_node_lookup_12" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= 0.071415118873119) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 0.345135986804962) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= -1.079596877098084) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= 0.526381492614746) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= -0.046369969844818) THEN 5 ELSE 6 END ELSE 7 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= 0.654078006744385) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= 0.864648461341858) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= -0.479506134986877) THEN 13 ELSE 14 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= 0.361215382814407) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= -0.12887254357338) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= 1.561749935150146) THEN 18 ELSE 19 END ELSE 20 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= -0.084635332226753) THEN 22 ELSE 23 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= -0.952480912208557) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= -0.464858651161194) THEN 26 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= -0.761380791664124) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= -2.0146644115448) THEN 29 ELSE 30 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= 0.005976766347885) THEN 32 ELSE 33 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= -0.812959909439087) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= -1.832638025283814) THEN 36 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= -0.05869223177433) THEN 38 ELSE 39 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= 1.659529685974121) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= 0.184769675135612) THEN 42 ELSE 43 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= 0.715184926986694) THEN 45 ELSE 46 END END END END END AS node_id_2 
FROM tmp_20180417011539_mu01rm_ads_ AS "ADS_sca_2_OUT"), 
"DT_node_data_12" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values"."threshold" AS FLOAT) AS "threshold", CAST("Values"."count" AS FLOAT) AS "count", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 4 AS parent_id, -351.3842930876292 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS "count", 5 AS depth, 4 AS parent_id, -261.02039271686766 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 4 AS depth, 3 AS parent_id, -154.4008369933406 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 10 AS "count", 5 AS depth, 9 AS parent_id, -148.3033043201361 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 3 AS "count", 5 AS depth, 9 AS parent_id, -53.646713296481664 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS "count", 5 AS depth, 12 AS parent_id, 2.894562869633976 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS "count", 5 AS depth, 12 AS parent_id, 54.02761566711179 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 17 AS parent_id, 37.34665341388054 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 17 AS parent_id, 8.923656244969493 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 4 AS depth, 16 AS parent_id, -27.42654029072463 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 4 AS depth, 21 AS parent_id, 144.424454256417 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 4 AS depth, 21 AS parent_id, 277.9812845098006 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 3 AS depth, 25 AS parent_id, 325.0738816201826 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 29 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 28 AS parent_id, -210.35491750133752 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS "count", 5 AS depth, 28 AS parent_id, -301.09108279642396 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 32 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 31 AS parent_id, -101.20974879377154 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 33 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 31 AS parent_id, -165.64587304935068 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 36 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 4 AS depth, 35 AS parent_id, 58.56592202346141 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 38 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 37 AS parent_id, -8.541514583322922 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 39 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS "count", 5 AS depth, 37 AS parent_id, -24.728024071698115 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 42 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 8 AS "count", 5 AS depth, 41 AS parent_id, 178.16748523167632 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 43 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 8 AS "count", 5 AS depth, 41 AS parent_id, 276.9984668874918 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 45 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 44 AS parent_id, 447.6909835452225 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 46 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 44 AS parent_id, 479.7072160445087 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte) AS "Values"), 
"DT_Output_12" AS 
(SELECT "DT_node_lookup_12"."KEY" AS "KEY", "DT_node_lookup_12".node_id_2 AS node_id_2, "DT_node_data_12".node_id AS node_id, "DT_node_data_12".feature AS feature, "DT_node_data_12"."threshold" AS "threshold", "DT_node_data_12"."count" AS "count", "DT_node_data_12".depth AS depth, "DT_node_data_12".parent_id AS parent_id, "DT_node_data_12"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_12" LEFT OUTER JOIN "DT_node_data_12" ON "DT_node_lookup_12".node_id_2 = "DT_node_data_12".node_id), 
"BAG_Model_12" AS 
(SELECT "DT_Output_12"."KEY" AS "KEY", "DT_Output_12"."Estimator" AS "Estimator" 
FROM "DT_Output_12"), 
"DT_node_lookup_13" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 0.573343634605408) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= -0.940362334251404) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= -1.16836404800415) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= -0.774339854717255) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= -0.842970371246338) THEN 5 ELSE 6 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= -0.557070434093475) THEN 8 ELSE 9 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= -0.748563408851624) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= -1.043335199356079) THEN 12 ELSE 13 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= -0.332974016666412) THEN 15 ELSE 16 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= 0.071415118873119) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= 0.711169719696045) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 0.253948897123337) THEN 20 ELSE 21 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= -1.402710914611816) THEN 23 ELSE 24 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= 0.492870897054672) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 0.149133175611496) THEN 27 ELSE 28 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= 0.763214111328125) THEN 30 ELSE 31 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= -0.402306318283081) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= 1.188128709793091) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= -0.497668743133545) THEN 35 ELSE 36 END ELSE 37 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= 0.381731927394867) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= 0.306901067495346) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= -0.129374474287033) THEN 41 ELSE 42 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= 0.037960533052683) THEN 44 ELSE 45 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= -0.438441693782806) THEN 47 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= -0.024473160505295) THEN 49 ELSE 50 END END END END END AS node_id_2 
FROM tmp_20180417011539_mu01rm_ads_ AS "ADS_sca_2_OUT"), 
"DT_node_data_13" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values"."threshold" AS FLOAT) AS "threshold", CAST("Values"."count" AS FLOAT) AS "count", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 4 AS parent_id, -230.73613627532504 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS "count", 5 AS depth, 4 AS parent_id, -298.74686828355976 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS "count", 5 AS depth, 7 AS parent_id, -78.8780402474348 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS "count", 5 AS depth, 7 AS parent_id, -175.94312453918377 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 11 AS parent_id, -422.39029400237723 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 11 AS parent_id, -459.030670753418 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 14 AS parent_id, -298.79907558939374 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 14 AS parent_id, -351.3842930876292 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 10 AS "count", 5 AS depth, 19 AS parent_id, -141.94613915313002 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS "count", 5 AS depth, 19 AS parent_id, 6.036912424622535 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 22 AS parent_id, -154.4008369933406 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 5 AS "count", 5 AS depth, 22 AS parent_id, 14.734113255047493 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS "count", 5 AS depth, 26 AS parent_id, 108.76911660152867 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 28 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 3 AS "count", 5 AS depth, 26 AS parent_id, 340.4981657801722 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 4 AS "count", 5 AS depth, 29 AS parent_id, -10.8893497000069 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 31 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS "count", 5 AS depth, 29 AS parent_id, 136.81863919098882 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 35 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 4 AS depth, 34 AS parent_id, 8.923656244969493 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 36 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 4 AS depth, 34 AS parent_id, 38.71263785211542 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 37 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 3 AS depth, 33 AS parent_id, 113.4408795258052 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 41 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 40 AS parent_id, 144.424454256417 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 42 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 40 AS parent_id, 191.5521549407964 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 44 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS "count", 5 AS depth, 43 AS parent_id, 255.02914017707045 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 45 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 43 AS parent_id, 235.3201708856319 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 47 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 4 AS depth, 46 AS parent_id, 310.60889077931495 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 49 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 48 AS parent_id, 351.37130796411674 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 50 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 48 AS parent_id, 349.42168234218923 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte) AS "Values"), 
"DT_Output_13" AS 
(SELECT "DT_node_lookup_13"."KEY" AS "KEY", "DT_node_lookup_13".node_id_2 AS node_id_2, "DT_node_data_13".node_id AS node_id, "DT_node_data_13".feature AS feature, "DT_node_data_13"."threshold" AS "threshold", "DT_node_data_13"."count" AS "count", "DT_node_data_13".depth AS depth, "DT_node_data_13".parent_id AS parent_id, "DT_node_data_13"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_13" LEFT OUTER JOIN "DT_node_data_13" ON "DT_node_lookup_13".node_id_2 = "DT_node_data_13".node_id), 
"BAG_Model_13" AS 
(SELECT "DT_Output_13"."KEY" AS "KEY", "DT_Output_13"."Estimator" AS "Estimator" 
FROM "DT_Output_13"), 
"DT_node_lookup_14" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= -0.792829513549805) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= -0.026898942887783) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= -1.34741485118866) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= 0.111319750547409) THEN 4 ELSE 5 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= -1.403998851776123) THEN 7 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= -1.669960260391235) THEN 9 ELSE 10 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= 0.079424604773521) THEN 12 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= -0.525459825992584) THEN 14 ELSE 15 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= 0.029281165450811) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= -0.228081852197647) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= 0.711869359016418) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= -1.895222663879394) THEN 20 ELSE 21 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= -0.127993673086166) THEN 23 ELSE 24 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= -0.369619518518448) THEN 26 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= 0.148343145847321) THEN 28 ELSE 29 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= 0.941528558731079) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= -0.121706858277321) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= 0.274396926164627) THEN 33 ELSE 34 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= 0.209493264555931) THEN 36 ELSE 37 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= 0.035703089088202) THEN 39 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= 1.352135419845581) THEN 41 ELSE 42 END END END END END AS node_id_2 
FROM tmp_20180417011539_mu01rm_ads_ AS "ADS_sca_2_OUT"), 
"DT_node_data_14" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values"."threshold" AS FLOAT) AS "threshold", CAST("Values"."count" AS FLOAT) AS "count", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 4 AS depth, 3 AS parent_id, -186.24037602901686 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 4 AS depth, 3 AS parent_id, -101.20974879377152 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 4 AS depth, 6 AS parent_id, -351.3842930876292 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 8 AS parent_id, -230.73613627532504 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 4 AS "count", 5 AS depth, 8 AS parent_id, -287.88930607959395 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 3 AS depth, 11 AS parent_id, -103.03861456879999 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 4 AS depth, 13 AS parent_id, -53.55855810403282 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 4 AS depth, 13 AS parent_id, -20.27001010137917 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 19 AS parent_id, -251.2683418956458 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 4 AS "count", 5 AS depth, 19 AS parent_id, -170.8778001713565 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 22 AS parent_id, 44.29871810773541 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS "count", 5 AS depth, 22 AS parent_id, -90.0890135165784 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 4 AS depth, 25 AS parent_id, -223.26828856161853 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 28 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 5 AS "count", 5 AS depth, 27 AS parent_id, 90.25777353775368 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 29 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 7 AS "count", 5 AS depth, 27 AS parent_id, -8.266291844230304 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 33 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS "count", 5 AS depth, 32 AS parent_id, 126.85391768517226 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 34 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 4 AS "count", 5 AS depth, 32 AS parent_id, 16.41270630142355 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 36 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 5 AS "count", 5 AS depth, 35 AS parent_id, 142.01519675614708 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 37 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 6 AS "count", 5 AS depth, 35 AS parent_id, 256.3697614247275 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 39 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 4 AS depth, 38 AS parent_id, 243.63801061508232 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 41 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 40 AS parent_id, 393.261092787257 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 42 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS "count", 5 AS depth, 40 AS parent_id, 466.9007230447942 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte) AS "Values"), 
"DT_Output_14" AS 
(SELECT "DT_node_lookup_14"."KEY" AS "KEY", "DT_node_lookup_14".node_id_2 AS node_id_2, "DT_node_data_14".node_id AS node_id, "DT_node_data_14".feature AS feature, "DT_node_data_14"."threshold" AS "threshold", "DT_node_data_14"."count" AS "count", "DT_node_data_14".depth AS depth, "DT_node_data_14".parent_id AS parent_id, "DT_node_data_14"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_14" LEFT OUTER JOIN "DT_node_data_14" ON "DT_node_lookup_14".node_id_2 = "DT_node_data_14".node_id), 
"BAG_Model_14" AS 
(SELECT "DT_Output_14"."KEY" AS "KEY", "DT_Output_14"."Estimator" AS "Estimator" 
FROM "DT_Output_14"), 
"DT_node_lookup_15" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= -0.783164083957672) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 0.661105990409851) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= -0.363906383514404) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= -0.508199393749237) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= -0.397009938955307) THEN 5 ELSE 6 END ELSE 7 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= -0.644685566425324) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= -0.371344357728958) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= -1.43429970741272) THEN 13 ELSE 14 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= 0.81602954864502) THEN 16 ELSE 17 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 0.419885724782944) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= 0.636548817157745) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= 0.682054102420807) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= 0.005953516811132) THEN 22 ELSE 23 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= -0.273899912834167) THEN 25 ELSE 26 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= -0.894351780414581) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= 1.083300828933716) THEN 29 ELSE 30 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= 0.813055396080017) THEN 32 ELSE 33 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= -0.078601412475109) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= -0.54495644569397) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= 0.874632120132446) THEN 37 ELSE 38 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= -1.147948145866394) THEN 40 ELSE 41 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= 1.280270099639892) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= -0.61698579788208) THEN 44 ELSE 45 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= -0.005341321229935) THEN 47 ELSE 48 END END END END END AS node_id_2 
FROM tmp_20180417011539_mu01rm_ads_ AS "ADS_sca_2_OUT"), 
"DT_node_data_15" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values"."threshold" AS FLOAT) AS "threshold", CAST("Values"."count" AS FLOAT) AS "count", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 4 AS parent_id, -351.3842930876292 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 4 AS parent_id, -298.79907558939374 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 4 AS depth, 3 AS parent_id, -459.030670753418 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS "count", 5 AS depth, 9 AS parent_id, -273.7570917356055 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 9 AS parent_id, -230.73613627532504 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS "count", 5 AS depth, 12 AS parent_id, -188.0003952753441 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 3 AS "count", 5 AS depth, 12 AS parent_id, -81.43203056443055 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 3 AS depth, 15 AS parent_id, 325.0738816201826 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 3 AS depth, 15 AS parent_id, 235.3201708856319 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 7 AS "count", 5 AS depth, 21 AS parent_id, -110.57931123012992 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 6 AS "count", 5 AS depth, 21 AS parent_id, 3.776947440020895 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 3 AS "count", 5 AS depth, 24 AS parent_id, 15.48934042248655 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS "count", 5 AS depth, 24 AS parent_id, 136.81863919098882 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 29 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 28 AS parent_id, -9.617958070006466 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 28 AS parent_id, 58.56592202346141 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 32 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 4 AS "count", 5 AS depth, 31 AS parent_id, 221.960847427731 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 33 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS "count", 5 AS depth, 31 AS parent_id, 340.64918838196996 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 37 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 36 AS parent_id, -27.42654029072463 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 38 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 36 AS parent_id, 8.923656244969493 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 40 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 39 AS parent_id, 156.85798347147366 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 41 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 39 AS parent_id, 144.424454256417 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 44 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 43 AS parent_id, 113.4408795258052 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 45 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 5 AS "count", 5 AS depth, 43 AS parent_id, 290.8269455889381 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 47 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 46 AS parent_id, 447.6909835452225 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 48 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 46 AS parent_id, 479.7072160445087 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte) AS "Values"), 
"DT_Output_15" AS 
(SELECT "DT_node_lookup_15"."KEY" AS "KEY", "DT_node_lookup_15".node_id_2 AS node_id_2, "DT_node_data_15".node_id AS node_id, "DT_node_data_15".feature AS feature, "DT_node_data_15"."threshold" AS "threshold", "DT_node_data_15"."count" AS "count", "DT_node_data_15".depth AS depth, "DT_node_data_15".parent_id AS parent_id, "DT_node_data_15"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_15" LEFT OUTER JOIN "DT_node_data_15" ON "DT_node_lookup_15".node_id_2 = "DT_node_data_15".node_id), 
"BAG_Model_15" AS 
(SELECT "DT_Output_15"."KEY" AS "KEY", "DT_Output_15"."Estimator" AS "Estimator" 
FROM "DT_Output_15")
 SELECT "BAG_B1"."KEY", "BAG_B1"."Estimator" 
FROM (SELECT "BAG_esu_1"."KEY" AS "KEY", "BAG_esu_1"."Estimator" AS "Estimator" 
FROM (SELECT "BAG_Model_10"."KEY" AS "KEY", "BAG_Model_10"."Estimator" AS "Estimator" 
FROM "BAG_Model_10" UNION ALL SELECT "BAG_Model_11"."KEY" AS "KEY", "BAG_Model_11"."Estimator" AS "Estimator" 
FROM "BAG_Model_11" UNION ALL SELECT "BAG_Model_12"."KEY" AS "KEY", "BAG_Model_12"."Estimator" AS "Estimator" 
FROM "BAG_Model_12" UNION ALL SELECT "BAG_Model_13"."KEY" AS "KEY", "BAG_Model_13"."Estimator" AS "Estimator" 
FROM "BAG_Model_13" UNION ALL SELECT "BAG_Model_14"."KEY" AS "KEY", "BAG_Model_14"."Estimator" AS "Estimator" 
FROM "BAG_Model_14" UNION ALL SELECT "BAG_Model_15"."KEY" AS "KEY", "BAG_Model_15"."Estimator" AS "Estimator" 
FROM "BAG_Model_15") AS "BAG_esu_1") AS "BAG_B1") AS "U"

-- Code For temporary table tmp_20180417011539_ime3ob_bag_ part 1/2. Create 


CREATE GLOBAL TEMPORARY TABLE tmp_20180417011539_ime3ob_bag_  (
	"KEY" BIGINT, 
	"Estimator" FLOAT
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table tmp_20180417011539_ime3ob_bag_ part 2/2. Populate

INSERT INTO tmp_20180417011539_ime3ob_bag_ ("KEY", "Estimator") SELECT "U"."KEY", "U"."Estimator" 
FROM (SELECT "BAG_Union"."KEY", "BAG_Union"."Estimator" 
FROM (SELECT "BAG_EnsembleUnion"."KEY" AS "KEY", "BAG_EnsembleUnion"."Estimator" AS "Estimator" 
FROM (SELECT "BAG_B0"."KEY" AS "KEY", "BAG_B0"."Estimator" AS "Estimator" 
FROM tmp_20180417011539_fsivyl_bag_ AS "BAG_B0" UNION ALL SELECT "BAG_B1"."KEY" AS "KEY", "BAG_B1"."Estimator" AS "Estimator" 
FROM tmp_20180417011539_y82nul_bag_ AS "BAG_B1") AS "BAG_EnsembleUnion") AS "BAG_Union") AS "U"

-- Code For temporary table tmp_20180417011539_8i2ij1_bag_ part 1/2. Create 


CREATE GLOBAL TEMPORARY TABLE tmp_20180417011539_8i2ij1_bag_  (
	"KEY" BIGINT, 
	"Estimator" FLOAT
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table tmp_20180417011539_8i2ij1_bag_ part 2/2. Populate

INSERT INTO tmp_20180417011539_8i2ij1_bag_ ("KEY", "Estimator") SELECT "U"."KEY", "U"."Estimator" 
FROM (SELECT "BAG_avg"."KEY", "BAG_avg"."Estimator" 
FROM (SELECT "T"."KEY" AS "KEY", CAST("T"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT "BAG_Union"."KEY" AS "KEY", avg(CAST("BAG_Union"."Estimator" AS FLOAT)) AS "Estimator" 
FROM tmp_20180417011539_ime3ob_bag_ AS "BAG_Union" GROUP BY "BAG_Union"."KEY") AS "T") AS "BAG_avg") AS "U"

-- Model deployment code

SELECT "BAG_avg"."KEY" AS "KEY", "BAG_avg"."Estimator" AS "Estimator" 
FROM tmp_20180417011539_8i2ij1_bag_ AS "BAG_avg"