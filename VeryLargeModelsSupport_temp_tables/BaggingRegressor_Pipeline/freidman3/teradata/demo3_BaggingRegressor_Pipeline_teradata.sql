-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2018

-- Model : BaggingRegressor_Pipeline
-- Dataset : freidman3
-- Database : teradata


-- This SQL code can contain one or more statements, to be executed in the order they appear in this file.



-- Code For temporary table tmp_20180417041704_unb9xy_ads_ part 1/2. Create 


CREATE GLOBAL TEMPORARY TABLE tmp_20180417041704_unb9xy_ads_  (
	"KEY" BIGINT, 
	imputer_output_2 FLOAT, 
	imputer_output_3 FLOAT, 
	imputer_output_4 FLOAT, 
	imputer_output_5 FLOAT
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table tmp_20180417041704_unb9xy_ads_ part 2/2. Populate

INSERT INTO tmp_20180417041704_unb9xy_ads_ ("KEY", imputer_output_2, imputer_output_3, imputer_output_4, imputer_output_5) SELECT "U"."KEY", "U".imputer_output_2, "U".imputer_output_3, "U".imputer_output_4, "U".imputer_output_5 
FROM (SELECT "ADS_imp_1_OUT"."KEY", "ADS_imp_1_OUT".imputer_output_2, "ADS_imp_1_OUT".imputer_output_3, "ADS_imp_1_OUT".imputer_output_4, "ADS_imp_1_OUT".imputer_output_5 
FROM (SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" IS NULL) THEN 43.79128122207401 ELSE "ADS"."Feature_0" END AS imputer_output_2, CASE WHEN ("ADS"."Feature_1" IS NULL) THEN 945.9672833084396 ELSE "ADS"."Feature_1" END AS imputer_output_3, CASE WHEN ("ADS"."Feature_2" IS NULL) THEN 0.5310009099975209 ELSE "ADS"."Feature_2" END AS imputer_output_4, CASE WHEN ("ADS"."Feature_3" IS NULL) THEN 6.139967152050499 ELSE "ADS"."Feature_3" END AS imputer_output_5 
FROM freidman3 AS "ADS") AS "ADS_imp_1_OUT") AS "U"

-- Code For temporary table tmp_20180417041704_bndhwq_ads_ part 1/2. Create 


CREATE GLOBAL TEMPORARY TABLE tmp_20180417041704_bndhwq_ads_  (
	"KEY" BIGINT, 
	scaler_output_2 FLOAT, 
	scaler_output_3 FLOAT, 
	scaler_output_4 FLOAT, 
	scaler_output_5 FLOAT
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table tmp_20180417041704_bndhwq_ads_ part 2/2. Populate

INSERT INTO tmp_20180417041704_bndhwq_ads_ ("KEY", scaler_output_2, scaler_output_3, scaler_output_4, scaler_output_5) SELECT "U"."KEY", "U".scaler_output_2, "U".scaler_output_3, "U".scaler_output_4, "U".scaler_output_5 
FROM (SELECT "ADS_sca_2_OUT"."KEY", "ADS_sca_2_OUT".scaler_output_2, "ADS_sca_2_OUT".scaler_output_3, "ADS_sca_2_OUT".scaler_output_4, "ADS_sca_2_OUT".scaler_output_5 
FROM (SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", (CAST("ADS_imp_1_OUT".imputer_output_2 AS FLOAT) - 43.79128122207402) / 26.03562357622511 AS scaler_output_2, (CAST("ADS_imp_1_OUT".imputer_output_3 AS FLOAT) - 945.9672833084397) / 461.4552766146446 AS scaler_output_3, (CAST("ADS_imp_1_OUT".imputer_output_4 AS FLOAT) - 0.531000909997521) / 0.290186328214479 AS scaler_output_4, (CAST("ADS_imp_1_OUT".imputer_output_5 AS FLOAT) - 6.139967152050499) / 3.072917242564058 AS scaler_output_5 
FROM tmp_20180417041704_unb9xy_ads_ AS "ADS_imp_1_OUT") AS "ADS_sca_2_OUT") AS "U"

-- Code For temporary table tmp_20180417041704_dejw6e_bag_ part 1/2. Create 


CREATE GLOBAL TEMPORARY TABLE tmp_20180417041704_dejw6e_bag_  (
	"KEY" BIGINT, 
	"Estimator" FLOAT
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table tmp_20180417041704_dejw6e_bag_ part 2/2. Populate

INSERT INTO tmp_20180417041704_dejw6e_bag_ ("KEY", "Estimator") SELECT "U"."KEY", "U"."Estimator" 
FROM (WITH "DT_node_lookup" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.686560153961182) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 1.081881999969482) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.192907109856606) THEN 3 ELSE 4 END ELSE 5 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.373935908079147) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.196351662278175) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -1.346356153488159) THEN 9 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.660830020904541) THEN 11 ELSE 12 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.360541820526123) THEN 14 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.329863935709) THEN 16 ELSE 17 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -1.495688199996948) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -1.54426896572113) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.551451921463013) THEN 21 ELSE 22 END ELSE 23 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.923691868782044) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.17494834959507) THEN 26 ELSE 27 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.185848534107208) THEN 29 ELSE 30 END END END END END AS node_id_2 
FROM tmp_20180417041704_bndhwq_ads_ AS "ADS_sca_2_OUT"), 
"DT_node_data" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values"."threshold" AS FLOAT) AS "threshold", CAST("Values"."count" AS FLOAT) AS "count", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 3 AS depth, 2 AS parent_id, 0.484866921406469 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 3 AS depth, 2 AS parent_id, 0.383424731855921 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 2 AS depth, 1 AS parent_id, 0.610016838130485 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 4 AS depth, 8 AS parent_id, 1.554328847029144 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 10 AS parent_id, 1.409299843352078 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 4 AS "count", 5 AS depth, 10 AS parent_id, 1.356333954557992 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 4 AS depth, 13 AS parent_id, 0.705071467546473 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 5 AS "count", 5 AS depth, 15 AS parent_id, 1.137493862461588 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS "count", 5 AS depth, 15 AS parent_id, 1.330343550370627 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 20 AS parent_id, 1.161007135905221 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 20 AS parent_id, 1.144056434914594 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 4 AS depth, 19 AS parent_id, 1.278877589279357 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS "count", 5 AS depth, 25 AS parent_id, 1.497152352870656 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 3 AS "count", 5 AS depth, 25 AS parent_id, 1.328924919947955 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 29 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 17 AS "count", 5 AS depth, 28 AS parent_id, 1.536313037051289 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 8 AS "count", 5 AS depth, 28 AS parent_id, 1.489472047585632 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte) AS "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".node_id AS node_id, "DT_node_data".feature AS feature, "DT_node_data"."threshold" AS "threshold", "DT_node_data"."count" AS "count", "DT_node_data".depth AS depth, "DT_node_data".parent_id AS parent_id, "DT_node_data"."Estimator" AS "Estimator" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".node_id), 
"BAG_Model_0" AS 
(SELECT "DT_Output"."KEY" AS "KEY", "DT_Output"."Estimator" AS "Estimator" 
FROM "DT_Output"), 
"DT_node_lookup_1" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.72988510131836) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.657966732978821) THEN 2 ELSE 3 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.778099536895752) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.954033970832825) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.477620720863342) THEN 7 ELSE 8 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.329863935709) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.826434671878815) THEN 11 ELSE 12 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.982645511627197) THEN 14 ELSE 15 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.923691868782044) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.567963719367981) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -1.717117786407471) THEN 19 ELSE 20 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -1.373855113983154) THEN 22 ELSE 23 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.493838608264923) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.070241272449493) THEN 26 ELSE 27 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.252220273017883) THEN 29 ELSE 30 END END END END END AS node_id_2 
FROM tmp_20180417041704_bndhwq_ads_ AS "ADS_sca_2_OUT"), 
"DT_node_data_1" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values"."threshold" AS FLOAT) AS "threshold", CAST("Values"."count" AS FLOAT) AS "count", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 2 AS depth, 1 AS parent_id, 0.610016838130485 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 2 AS depth, 1 AS parent_id, 0.383424731855921 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 4 AS depth, 6 AS parent_id, 0.807910923031799 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 4 AS depth, 6 AS parent_id, 0.705071467546473 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 3 AS "count", 5 AS depth, 10 AS parent_id, 1.268794477573898 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 4 AS "count", 5 AS depth, 10 AS parent_id, 1.103016095231678 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 13 AS parent_id, 1.409299843352078 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS "count", 5 AS depth, 13 AS parent_id, 1.34468905220722 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 18 AS parent_id, 1.535967090204416 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS "count", 5 AS depth, 18 AS parent_id, 1.431302438485138 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 21 AS parent_id, 1.46088900931266 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 6 AS "count", 5 AS depth, 21 AS parent_id, 1.186482022632482 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 25 AS parent_id, 1.425180217485532 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS "count", 5 AS depth, 25 AS parent_id, 1.35886856686114 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 29 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 13 AS "count", 5 AS depth, 28 AS parent_id, 1.530221394579286 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 9 AS "count", 5 AS depth, 28 AS parent_id, 1.495992736452191 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte) AS "Values"), 
"DT_Output_1" AS 
(SELECT "DT_node_lookup_1"."KEY" AS "KEY", "DT_node_lookup_1".node_id_2 AS node_id_2, "DT_node_data_1".node_id AS node_id, "DT_node_data_1".feature AS feature, "DT_node_data_1"."threshold" AS "threshold", "DT_node_data_1"."count" AS "count", "DT_node_data_1".depth AS depth, "DT_node_data_1".parent_id AS parent_id, "DT_node_data_1"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_1" LEFT OUTER JOIN "DT_node_data_1" ON "DT_node_lookup_1".node_id_2 = "DT_node_data_1".node_id), 
"BAG_Model_1" AS 
(SELECT "DT_Output_1"."KEY" AS "KEY", "DT_Output_1"."Estimator" AS "Estimator" 
FROM "DT_Output_1"), 
"DT_node_lookup_2" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.334355235099792) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.06683275103569) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.156954973936081) THEN 3 ELSE 4 END ELSE 5 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -1.072701096534729) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.040250442922115) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.468605101108551) THEN 9 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -1.340183019638062) THEN 11 ELSE 12 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -1.518192887306214) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -1.547419905662536) THEN 15 ELSE 16 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.734063625335693) THEN 18 ELSE 19 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.521620273590088) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 1.2749183177948) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.866053462028503) THEN 23 ELSE 24 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 1.673033356666565) THEN 26 ELSE 27 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.261494129896164) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -1.387879371643066) THEN 30 ELSE 31 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.615314364433289) THEN 33 ELSE 34 END END END END END AS node_id_2 
FROM tmp_20180417041704_bndhwq_ads_ AS "ADS_sca_2_OUT"), 
"DT_node_data_2" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values"."threshold" AS FLOAT) AS "threshold", CAST("Values"."count" AS FLOAT) AS "count", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 3 AS depth, 2 AS parent_id, 0.383424731855921 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 3 AS depth, 2 AS parent_id, 0.484866921406469 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 2 AS depth, 1 AS parent_id, 0.705071467546473 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 4 AS depth, 8 AS parent_id, 1.535967090204416 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS "count", 5 AS depth, 10 AS parent_id, 1.450859994756936 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 10 AS parent_id, 1.161007135905221 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 14 AS parent_id, 1.144056434914594 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 14 AS parent_id, 1.11561476395637 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 17 AS parent_id, 1.38449451720808 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS "count", 5 AS depth, 17 AS parent_id, 1.272218062008273 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 22 AS parent_id, 1.536711230505171 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 22 AS parent_id, 1.349842993228629 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 25 AS parent_id, 1.106344120317223 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 25 AS parent_id, 1.081892001298726 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 3 AS "count", 5 AS depth, 29 AS parent_id, 1.567781003074441 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 31 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 15 AS "count", 5 AS depth, 29 AS parent_id, 1.532493855489065 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 33 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 32 AS parent_id, 1.2794872288207 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 34 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 11 AS "count", 5 AS depth, 32 AS parent_id, 1.490095235323458 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte) AS "Values"), 
"DT_Output_2" AS 
(SELECT "DT_node_lookup_2"."KEY" AS "KEY", "DT_node_lookup_2".node_id_2 AS node_id_2, "DT_node_data_2".node_id AS node_id, "DT_node_data_2".feature AS feature, "DT_node_data_2"."threshold" AS "threshold", "DT_node_data_2"."count" AS "count", "DT_node_data_2".depth AS depth, "DT_node_data_2".parent_id AS parent_id, "DT_node_data_2"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_2" LEFT OUTER JOIN "DT_node_data_2" ON "DT_node_lookup_2".node_id_2 = "DT_node_data_2".node_id), 
"BAG_Model_2" AS 
(SELECT "DT_Output_2"."KEY" AS "KEY", "DT_Output_2"."Estimator" AS "Estimator" 
FROM "DT_Output_2"), 
"DT_node_lookup_3" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.360541820526123) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.72988510131836) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 1.081881999969482) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.929659008979797) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.477620720863342) THEN 7 ELSE 8 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.208854854106903) THEN 10 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.644135475158691) THEN 12 ELSE 13 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 1.238775610923767) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -1.495688199996948) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.65307742357254) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -1.717117786407471) THEN 18 ELSE 19 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.898442566394806) THEN 21 ELSE 22 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.940309286117554) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.108010053634644) THEN 25 ELSE 26 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -1.113467812538147) THEN 28 ELSE 29 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.606260120868683) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -1.091903567314148) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -1.520304679870606) THEN 33 ELSE 34 END ELSE 35 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.551808297634125) THEN 37 ELSE 38 END END END END AS node_id_2 
FROM tmp_20180417041704_bndhwq_ads_ AS "ADS_sca_2_OUT"), 
"DT_node_data_3" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values"."threshold" AS FLOAT) AS "threshold", CAST("Values"."count" AS FLOAT) AS "count", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 3 AS depth, 2 AS parent_id, 0.383424731855921 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 3 AS depth, 2 AS parent_id, 0.610016838130485 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 4 AS depth, 6 AS parent_id, 0.807910923031799 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 4 AS depth, 6 AS parent_id, 0.705071467546473 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 4 AS depth, 9 AS parent_id, 1.140916252454616 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 11 AS parent_id, 1.409299843352078 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 11 AS parent_id, 1.350090108150775 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 17 AS parent_id, 1.535967090204416 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 17 AS parent_id, 1.451860940436235 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS "count", 5 AS depth, 20 AS parent_id, 1.13377171273591 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 20 AS parent_id, 1.278877589279357 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 24 AS parent_id, 1.314325621172093 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 24 AS parent_id, 1.346361479569162 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 28 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 7 AS "count", 5 AS depth, 27 AS parent_id, 1.56002598305888 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 29 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 22 AS "count", 5 AS depth, 27 AS parent_id, 1.491775677430847 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 33 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 32 AS parent_id, 1.081892001298726 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 34 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 32 AS parent_id, 1.027484351922333 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 35 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 4 AS depth, 31 AS parent_id, 1.157786043431624 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 37 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 4 AS depth, 36 AS parent_id, 1.2794872288207 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 38 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 4 AS depth, 36 AS parent_id, 1.494966264557594 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte) AS "Values"), 
"DT_Output_3" AS 
(SELECT "DT_node_lookup_3"."KEY" AS "KEY", "DT_node_lookup_3".node_id_2 AS node_id_2, "DT_node_data_3".node_id AS node_id, "DT_node_data_3".feature AS feature, "DT_node_data_3"."threshold" AS "threshold", "DT_node_data_3"."count" AS "count", "DT_node_data_3".depth AS depth, "DT_node_data_3".parent_id AS parent_id, "DT_node_data_3"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_3" LEFT OUTER JOIN "DT_node_data_3" ON "DT_node_lookup_3".node_id_2 = "DT_node_data_3".node_id), 
"BAG_Model_3" AS 
(SELECT "DT_Output_3"."KEY" AS "KEY", "DT_Output_3"."Estimator" AS "Estimator" 
FROM "DT_Output_3"), 
"DT_node_lookup_4" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.43090009689331) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -1.206621408462524) THEN 2 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.560266017913818) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.796563506126404) THEN 5 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.149870961904526) THEN 7 ELSE 8 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.36364483833313) THEN 10 ELSE 11 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.68163388967514) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -1.615892291069031) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.0467689037323) THEN 15 ELSE 16 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.1599440574646) THEN 18 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -1.283869028091431) THEN 20 ELSE 21 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.137576952576637) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.78878265619278) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.495384961366653) THEN 25 ELSE 26 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 1.100449085235596) THEN 28 ELSE 29 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.98177170753479) THEN 31 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.189958930015564) THEN 33 ELSE 34 END END END END END AS node_id_2 
FROM tmp_20180417041704_bndhwq_ads_ AS "ADS_sca_2_OUT"), 
"DT_node_data_4" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values"."threshold" AS FLOAT) AS "threshold", CAST("Values"."count" AS FLOAT) AS "count", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 2 AS depth, 1 AS parent_id, 1.409299843352078 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 4 AS depth, 4 AS parent_id, 0.610016838130485 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 6 AS parent_id, 0.484866921406469 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS "count", 5 AS depth, 6 AS parent_id, 0.379296148916493 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 4 AS depth, 9 AS parent_id, 1.368717577036428 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 4 AS depth, 9 AS parent_id, 0.705071467546473 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 4 AS depth, 14 AS parent_id, 1.161007135905221 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 4 AS depth, 14 AS parent_id, 1.535967090204416 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 4 AS depth, 17 AS parent_id, 1.341344197483337 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 4 AS "count", 5 AS depth, 19 AS parent_id, 1.464838277794978 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 23 AS "count", 5 AS depth, 19 AS parent_id, 1.523327532260326 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 24 AS parent_id, 1.076547084481779 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 24 AS parent_id, 1.027484351922333 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 28 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 4 AS "count", 5 AS depth, 27 AS parent_id, 1.158414685305809 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 29 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 27 AS parent_id, 1.278877589279357 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 31 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 4 AS depth, 30 AS parent_id, 1.346361479569162 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 33 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 32 AS parent_id, 1.478328126979838 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 34 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS "count", 5 AS depth, 32 AS parent_id, 1.507541267679435 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte) AS "Values"), 
"DT_Output_4" AS 
(SELECT "DT_node_lookup_4"."KEY" AS "KEY", "DT_node_lookup_4".node_id_2 AS node_id_2, "DT_node_data_4".node_id AS node_id, "DT_node_data_4".feature AS feature, "DT_node_data_4"."threshold" AS "threshold", "DT_node_data_4"."count" AS "count", "DT_node_data_4".depth AS depth, "DT_node_data_4".parent_id AS parent_id, "DT_node_data_4"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_4" LEFT OUTER JOIN "DT_node_data_4" ON "DT_node_lookup_4".node_id_2 = "DT_node_data_4".node_id), 
"BAG_Model_4" AS 
(SELECT "DT_Output_4"."KEY" AS "KEY", "DT_Output_4"."Estimator" AS "Estimator" 
FROM "DT_Output_4"), 
"DT_node_lookup_5" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.360541820526123) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.587432563304901) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.467974483966827) THEN 3 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.664646208286285) THEN 5 ELSE 6 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.78369790315628) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -1.124764919281006) THEN 9 ELSE 10 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.149870961904526) THEN 12 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.295665681362152) THEN 14 ELSE 15 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.844056963920593) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -1.267771124839783) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.353822559118271) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -1.617783069610596) THEN 20 ELSE 21 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.332937359809876) THEN 23 ELSE 24 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.169748425483704) THEN 26 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.797401309013367) THEN 28 ELSE 29 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 1.004984140396118) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 1.180036306381226) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.413519382476807) THEN 33 ELSE 34 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 1.850005149841308) THEN 36 ELSE 37 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.824334263801575) THEN 39 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.026924937963486) THEN 41 ELSE 42 END END END END END AS node_id_2 
FROM tmp_20180417041704_bndhwq_ads_ AS "ADS_sca_2_OUT"), 
"DT_node_data_5" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values"."threshold" AS FLOAT) AS "threshold", CAST("Values"."count" AS FLOAT) AS "count", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 3 AS depth, 2 AS parent_id, 1.140916252454616 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 4 AS depth, 4 AS parent_id, 1.368717577036428 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 4 AS depth, 4 AS parent_id, 1.409299843352078 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 4 AS depth, 8 AS parent_id, 0.807910923031799 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 4 AS depth, 8 AS parent_id, 0.705071467546473 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 4 AS depth, 11 AS parent_id, 0.484866921406469 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 13 AS parent_id, 0.375167565977065 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 13 AS parent_id, 0.383424731855921 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 19 AS parent_id, 1.535967090204416 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 19 AS parent_id, 1.410743936534041 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 22 AS parent_id, 1.11561476395637 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 22 AS parent_id, 1.38449451720808 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 4 AS depth, 25 AS parent_id, 1.314325621172093 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 28 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 10 AS "count", 5 AS depth, 27 AS parent_id, 1.551722027334309 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 29 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 19 AS "count", 5 AS depth, 27 AS parent_id, 1.501012146003087 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 33 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 32 AS parent_id, 1.346361479569162 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 34 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 32 AS parent_id, 1.26722341655496 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 36 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 3 AS "count", 5 AS depth, 35 AS parent_id, 1.13606219955448 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 37 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS "count", 5 AS depth, 35 AS parent_id, 1.054688176610529 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 39 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 4 AS depth, 38 AS parent_id, 1.278877589279357 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 41 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 40 AS parent_id, 1.467082620400384 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 42 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 3 AS "count", 5 AS depth, 40 AS parent_id, 1.501814088006071 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte) AS "Values"), 
"DT_Output_5" AS 
(SELECT "DT_node_lookup_5"."KEY" AS "KEY", "DT_node_lookup_5".node_id_2 AS node_id_2, "DT_node_data_5".node_id AS node_id, "DT_node_data_5".feature AS feature, "DT_node_data_5"."threshold" AS "threshold", "DT_node_data_5"."count" AS "count", "DT_node_data_5".depth AS depth, "DT_node_data_5".parent_id AS parent_id, "DT_node_data_5"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_5" LEFT OUTER JOIN "DT_node_data_5" ON "DT_node_lookup_5".node_id_2 = "DT_node_data_5".node_id), 
"BAG_Model_5" AS 
(SELECT "DT_Output_5"."KEY" AS "KEY", "DT_Output_5"."Estimator" AS "Estimator" 
FROM "DT_Output_5"), 
"DT_node_lookup_6" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.360541820526123) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.587432563304901) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.755156576633453) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -1.02828860282898) THEN 4 ELSE 5 END ELSE 6 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.564067721366882) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.295665681362152) THEN 9 ELSE 10 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -1.124764919281006) THEN 12 ELSE 13 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.349178671836853) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 1.180036306381226) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.275411516427994) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.130769371986389) THEN 18 ELSE 19 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -1.518192887306214) THEN 21 ELSE 22 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 1.752188205718994) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 1.405125617980957) THEN 25 ELSE 26 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.495384961366653) THEN 28 ELSE 29 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.143561840057373) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.225070238113403) THEN 32 ELSE 33 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.171947225928307) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -1.19354248046875) THEN 36 ELSE 37 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.025099143385887) THEN 39 ELSE 40 END END END END END AS node_id_2 
FROM tmp_20180417041704_bndhwq_ads_ AS "ADS_sca_2_OUT"), 
"DT_node_data_6" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values"."threshold" AS FLOAT) AS "threshold", CAST("Values"."count" AS FLOAT) AS "count", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 4 AS depth, 3 AS parent_id, 1.140916252454616 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 4 AS depth, 3 AS parent_id, 1.368717577036428 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 3 AS depth, 2 AS parent_id, 0.610016838130485 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 4 AS depth, 8 AS parent_id, 0.375167565977065 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 4 AS depth, 8 AS parent_id, 0.383424731855921 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 4 AS depth, 11 AS parent_id, 0.807910923031799 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 4 AS depth, 11 AS parent_id, 0.705071467546473 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 17 AS parent_id, 1.410743936534041 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS "count", 5 AS depth, 17 AS parent_id, 1.460710168204782 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS "count", 5 AS depth, 20 AS parent_id, 1.145876345255604 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 5 AS "count", 5 AS depth, 20 AS parent_id, 1.329354239811861 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS "count", 5 AS depth, 24 AS parent_id, 1.125200277615908 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS "count", 5 AS depth, 24 AS parent_id, 1.198353105227982 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 28 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 27 AS parent_id, 1.076547084481779 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 29 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 27 AS parent_id, 1.027484351922333 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 32 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 4 AS depth, 31 AS parent_id, 1.314325621172093 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 33 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 4 AS depth, 31 AS parent_id, 1.081892001298726 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 36 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 3 AS "count", 5 AS depth, 35 AS parent_id, 1.55559363141818 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 37 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 12 AS "count", 5 AS depth, 35 AS parent_id, 1.533709488343741 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 39 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 3 AS "count", 5 AS depth, 38 AS parent_id, 1.46679899066016 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 40 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 6 AS "count", 5 AS depth, 38 AS parent_id, 1.495249738550219 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte) AS "Values"), 
"DT_Output_6" AS 
(SELECT "DT_node_lookup_6"."KEY" AS "KEY", "DT_node_lookup_6".node_id_2 AS node_id_2, "DT_node_data_6".node_id AS node_id, "DT_node_data_6".feature AS feature, "DT_node_data_6"."threshold" AS "threshold", "DT_node_data_6"."count" AS "count", "DT_node_data_6".depth AS depth, "DT_node_data_6".parent_id AS parent_id, "DT_node_data_6"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_6" LEFT OUTER JOIN "DT_node_data_6" ON "DT_node_lookup_6".node_id_2 = "DT_node_data_6".node_id), 
"BAG_Model_6" AS 
(SELECT "DT_Output_6"."KEY" AS "KEY", "DT_Output_6"."Estimator" AS "Estimator" 
FROM "DT_Output_6"), 
"DT_node_lookup_7" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.983869314193726) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.931237876415253) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.49834805727005) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.71422266960144) THEN 6 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.287641674280167) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.826434671878815) THEN 9 ELSE 10 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.746135115623474) THEN 12 ELSE 13 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -1.495688199996948) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.545360624790192) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -1.518192887306214) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.648103594779968) THEN 18 ELSE 19 END ELSE 20 END ELSE 21 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.445918887853622) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -1.337495803833008) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -1.463056325912476) THEN 25 ELSE 26 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.596397578716278) THEN 28 ELSE 29 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.459932029247284) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 1.582097291946411) THEN 32 ELSE 33 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.656968235969544) THEN 35 ELSE 36 END END END END END AS node_id_2 
FROM tmp_20180417041704_bndhwq_ads_ AS "ADS_sca_2_OUT"), 
"DT_node_data_7" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values"."threshold" AS FLOAT) AS "threshold", CAST("Values"."count" AS FLOAT) AS "count", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 3 AS depth, 2 AS parent_id, 0.705071467546473 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 3 AS depth, 2 AS parent_id, 0.375167565977065 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 3 AS depth, 5 AS parent_id, 0.383424731855921 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 3 AS "count", 5 AS depth, 8 AS parent_id, 1.22582170925682 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 3 AS "count", 5 AS depth, 8 AS parent_id, 1.100717661419554 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 3 AS "count", 5 AS depth, 11 AS parent_id, 1.335253308935402 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 11 AS parent_id, 1.536711230505171 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS "count", 5 AS depth, 17 AS parent_id, 1.138310949930796 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 17 AS parent_id, 1.027484351922333 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 4 AS depth, 16 AS parent_id, 1.278877589279357 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 3 AS depth, 15 AS parent_id, 1.451860940436235 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 24 AS parent_id, 1.52208363384976 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS "count", 5 AS depth, 24 AS parent_id, 1.427458960793581 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 28 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 10 AS "count", 5 AS depth, 27 AS parent_id, 1.552309658325162 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 29 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 12 AS "count", 5 AS depth, 27 AS parent_id, 1.514370753346007 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 32 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 3 AS "count", 5 AS depth, 31 AS parent_id, 1.310401720861246 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 33 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 31 AS parent_id, 1.157786043431624 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 35 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 34 AS parent_id, 1.346361479569162 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 36 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 9 AS "count", 5 AS depth, 34 AS parent_id, 1.489102908602728 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte) AS "Values"), 
"DT_Output_7" AS 
(SELECT "DT_node_lookup_7"."KEY" AS "KEY", "DT_node_lookup_7".node_id_2 AS node_id_2, "DT_node_data_7".node_id AS node_id, "DT_node_data_7".feature AS feature, "DT_node_data_7"."threshold" AS "threshold", "DT_node_data_7"."count" AS "count", "DT_node_data_7".depth AS depth, "DT_node_data_7".parent_id AS parent_id, "DT_node_data_7"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_7" LEFT OUTER JOIN "DT_node_data_7" ON "DT_node_lookup_7".node_id_2 = "DT_node_data_7".node_id), 
"BAG_Model_7" AS 
(SELECT "DT_Output_7"."KEY" AS "KEY", "DT_Output_7"."Estimator" AS "Estimator" 
FROM "DT_Output_7"), 
"DT_node_lookup_8" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.481613039970398) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.590480208396912) THEN 2 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -1.084075689315796) THEN 4 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.274560332298279) THEN 6 ELSE 7 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.208998054265976) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -1.337495803833008) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.23203356564045) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.377940565347672) THEN 12 ELSE 13 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -1.463056325912476) THEN 15 ELSE 16 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.283025741577148) THEN 18 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.888046622276306) THEN 20 ELSE 21 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.549424529075623) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.938457727432251) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.197148025035858) THEN 25 ELSE 26 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.520885407924652) THEN 28 ELSE 29 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.26058903336525) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.401416152715683) THEN 32 ELSE 33 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.119624048471451) THEN 35 ELSE 36 END END END END END AS node_id_2 
FROM tmp_20180417041704_bndhwq_ads_ AS "ADS_sca_2_OUT"), 
"DT_node_data_8" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values"."threshold" AS FLOAT) AS "threshold", CAST("Values"."count" AS FLOAT) AS "count", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 2 AS depth, 1 AS parent_id, 1.350090108150775 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 3 AS depth, 3 AS parent_id, 0.807910923031799 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 4 AS depth, 5 AS parent_id, 0.383424731855921 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 4 AS depth, 5 AS parent_id, 0.375167565977065 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 11 AS parent_id, 1.410743936534041 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 11 AS parent_id, 1.36789414049365 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 14 AS parent_id, 1.52208363384976 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 14 AS parent_id, 1.46088900931266 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 4 AS depth, 17 AS parent_id, 1.368717577036428 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 9 AS "count", 5 AS depth, 19 AS parent_id, 1.55585660471318 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 16 AS "count", 5 AS depth, 19 AS parent_id, 1.514126242604231 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS "count", 5 AS depth, 24 AS parent_id, 1.111952583850707 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 3 AS "count", 5 AS depth, 24 AS parent_id, 1.161036795782917 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 28 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 27 AS parent_id, 1.278877589279357 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 29 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 27 AS parent_id, 1.38449451720808 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 32 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 31 AS parent_id, 1.349842993228629 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 33 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 31 AS parent_id, 1.314325621172093 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 35 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 3 AS "count", 5 AS depth, 34 AS parent_id, 1.466657175790048 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 36 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 5 AS "count", 5 AS depth, 34 AS parent_id, 1.489123778130218 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte) AS "Values"), 
"DT_Output_8" AS 
(SELECT "DT_node_lookup_8"."KEY" AS "KEY", "DT_node_lookup_8".node_id_2 AS node_id_2, "DT_node_data_8".node_id AS node_id, "DT_node_data_8".feature AS feature, "DT_node_data_8"."threshold" AS "threshold", "DT_node_data_8"."count" AS "count", "DT_node_data_8".depth AS depth, "DT_node_data_8".parent_id AS parent_id, "DT_node_data_8"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_8" LEFT OUTER JOIN "DT_node_data_8" ON "DT_node_lookup_8".node_id_2 = "DT_node_data_8".node_id), 
"BAG_Model_8" AS 
(SELECT "DT_Output_8"."KEY" AS "KEY", "DT_Output_8"."Estimator" AS "Estimator" 
FROM "DT_Output_8"), 
"DT_node_lookup_9" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.686560153961182) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.657966732978821) THEN 2 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.192907109856606) THEN 4 ELSE 5 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 1.102112770080566) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.042446136474609) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.228693917393684) THEN 9 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.644135475158691) THEN 11 ELSE 12 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.358915746212006) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -1.387879371643066) THEN 15 ELSE 16 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -1.385697841644287) THEN 18 ELSE 19 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 1.004984140396118) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.78878265619278) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -1.494538426399231) THEN 23 ELSE 24 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.388088583946228) THEN 26 ELSE 27 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 1.318803429603577) THEN 29 ELSE 30 END END END END AS node_id_2 
FROM tmp_20180417041704_bndhwq_ads_ AS "ADS_sca_2_OUT"), 
"DT_node_data_9" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values"."threshold" AS FLOAT) AS "threshold", CAST("Values"."count" AS FLOAT) AS "count", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 2 AS depth, 1 AS parent_id, 0.610016838130485 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 3 AS depth, 3 AS parent_id, 0.484866921406469 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 3 AS depth, 3 AS parent_id, 0.383424731855921 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 4 AS depth, 8 AS parent_id, 1.196826503768119 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 10 AS parent_id, 1.409299843352078 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS "count", 5 AS depth, 10 AS parent_id, 1.357541095705036 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 6 AS "count", 5 AS depth, 14 AS parent_id, 1.560306680279617 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 9 AS "count", 5 AS depth, 14 AS parent_id, 1.535496438463299 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 17 AS parent_id, 1.278877589279357 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 15 AS "count", 5 AS depth, 17 AS parent_id, 1.485599175294939 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 22 AS parent_id, 1.027484351922333 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS "count", 5 AS depth, 22 AS parent_id, 1.079219542890252 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS "count", 5 AS depth, 25 AS parent_id, 1.123491428022023 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 3 AS "count", 5 AS depth, 25 AS parent_id, 1.232299662141041 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 29 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 4 AS depth, 28 AS parent_id, 1.467082620400384 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 4 AS depth, 28 AS parent_id, 1.493223318496025 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte) AS "Values"), 
"DT_Output_9" AS 
(SELECT "DT_node_lookup_9"."KEY" AS "KEY", "DT_node_lookup_9".node_id_2 AS node_id_2, "DT_node_data_9".node_id AS node_id, "DT_node_data_9".feature AS feature, "DT_node_data_9"."threshold" AS "threshold", "DT_node_data_9"."count" AS "count", "DT_node_data_9".depth AS depth, "DT_node_data_9".parent_id AS parent_id, "DT_node_data_9"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_9" LEFT OUTER JOIN "DT_node_data_9" ON "DT_node_lookup_9".node_id_2 = "DT_node_data_9".node_id), 
"BAG_Model_9" AS 
(SELECT "DT_Output_9"."KEY" AS "KEY", "DT_Output_9"."Estimator" AS "Estimator" 
FROM "DT_Output_9")
 SELECT "BAG_B0"."KEY", "BAG_B0"."Estimator" 
FROM (SELECT "BAG_esu_0"."KEY" AS "KEY", "BAG_esu_0"."Estimator" AS "Estimator" 
FROM (SELECT "BAG_Model_0"."KEY" AS "KEY", "BAG_Model_0"."Estimator" AS "Estimator" 
FROM "BAG_Model_0" UNION ALL SELECT "BAG_Model_1"."KEY" AS "KEY", "BAG_Model_1"."Estimator" AS "Estimator" 
FROM "BAG_Model_1" UNION ALL SELECT "BAG_Model_2"."KEY" AS "KEY", "BAG_Model_2"."Estimator" AS "Estimator" 
FROM "BAG_Model_2" UNION ALL SELECT "BAG_Model_3"."KEY" AS "KEY", "BAG_Model_3"."Estimator" AS "Estimator" 
FROM "BAG_Model_3" UNION ALL SELECT "BAG_Model_4"."KEY" AS "KEY", "BAG_Model_4"."Estimator" AS "Estimator" 
FROM "BAG_Model_4" UNION ALL SELECT "BAG_Model_5"."KEY" AS "KEY", "BAG_Model_5"."Estimator" AS "Estimator" 
FROM "BAG_Model_5" UNION ALL SELECT "BAG_Model_6"."KEY" AS "KEY", "BAG_Model_6"."Estimator" AS "Estimator" 
FROM "BAG_Model_6" UNION ALL SELECT "BAG_Model_7"."KEY" AS "KEY", "BAG_Model_7"."Estimator" AS "Estimator" 
FROM "BAG_Model_7" UNION ALL SELECT "BAG_Model_8"."KEY" AS "KEY", "BAG_Model_8"."Estimator" AS "Estimator" 
FROM "BAG_Model_8" UNION ALL SELECT "BAG_Model_9"."KEY" AS "KEY", "BAG_Model_9"."Estimator" AS "Estimator" 
FROM "BAG_Model_9") AS "BAG_esu_0") AS "BAG_B0") AS "U"

-- Code For temporary table tmp_20180417041704_lwadji_bag_ part 1/2. Create 


CREATE GLOBAL TEMPORARY TABLE tmp_20180417041704_lwadji_bag_  (
	"KEY" BIGINT, 
	"Estimator" FLOAT
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table tmp_20180417041704_lwadji_bag_ part 2/2. Populate

INSERT INTO tmp_20180417041704_lwadji_bag_ ("KEY", "Estimator") SELECT "U"."KEY", "U"."Estimator" 
FROM (WITH "DT_node_lookup_10" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.635791301727295) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.71299934387207) THEN 2 ELSE 3 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.349178671836853) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -1.080142736434936) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -1.21438717842102) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.243174239993095) THEN 8 ELSE 9 END ELSE 10 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -1.518192887306214) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -1.547419905662536) THEN 13 ELSE 14 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.778099536895752) THEN 16 ELSE 17 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 1.681832551956177) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.123557567596436) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -1.093891978263855) THEN 21 ELSE 22 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.860677480697632) THEN 24 ELSE 25 END END ELSE 26 END END END AS node_id_2 
FROM tmp_20180417041704_bndhwq_ads_ AS "ADS_sca_2_OUT"), 
"DT_node_data_10" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values"."threshold" AS FLOAT) AS "threshold", CAST("Values"."count" AS FLOAT) AS "count", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 2 AS depth, 1 AS parent_id, 0.383424731855921 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 2 AS depth, 1 AS parent_id, 0.375167565977065 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS "count", 5 AS depth, 7 AS parent_id, 1.531920818404568 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS "count", 5 AS depth, 7 AS parent_id, 1.570131515595306 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 4 AS depth, 6 AS parent_id, 1.451860940436235 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS "count", 5 AS depth, 12 AS parent_id, 1.152531785409907 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 12 AS parent_id, 1.11561476395637 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 3 AS "count", 5 AS depth, 15 AS parent_id, 1.13649066716452 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 7 AS "count", 5 AS depth, 15 AS parent_id, 1.350489482065436 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 7 AS "count", 5 AS depth, 20 AS parent_id, 1.559295443411238 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 10 AS "count", 5 AS depth, 20 AS parent_id, 1.528047175547499 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS "count", 5 AS depth, 23 AS parent_id, 1.343852838526249 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 10 AS "count", 5 AS depth, 23 AS parent_id, 1.472635883023754 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 3 AS depth, 18 AS parent_id, 1.081892001298726 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte) AS "Values"), 
"DT_Output_10" AS 
(SELECT "DT_node_lookup_10"."KEY" AS "KEY", "DT_node_lookup_10".node_id_2 AS node_id_2, "DT_node_data_10".node_id AS node_id, "DT_node_data_10".feature AS feature, "DT_node_data_10"."threshold" AS "threshold", "DT_node_data_10"."count" AS "count", "DT_node_data_10".depth AS depth, "DT_node_data_10".parent_id AS parent_id, "DT_node_data_10"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_10" LEFT OUTER JOIN "DT_node_data_10" ON "DT_node_lookup_10".node_id_2 = "DT_node_data_10".node_id), 
"BAG_Model_10" AS 
(SELECT "DT_Output_10"."KEY" AS "KEY", "DT_Output_10"."Estimator" AS "Estimator" 
FROM "DT_Output_10"), 
"DT_node_lookup_11" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.686560153961182) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.156954973936081) THEN 2 ELSE 3 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.983869314193726) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.954033970832825) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.477620720863342) THEN 7 ELSE 8 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.228693917393684) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.391517758369446) THEN 11 ELSE 12 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.169748425483704) THEN 14 ELSE 15 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 1.796966671943664) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.445918887853622) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.767800509929657) THEN 19 ELSE 20 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.377918899059296) THEN 22 ELSE 23 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -1.494538426399231) THEN 25 ELSE 26 END END END END AS node_id_2 
FROM tmp_20180417041704_bndhwq_ads_ AS "ADS_sca_2_OUT"), 
"DT_node_data_11" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values"."threshold" AS FLOAT) AS "threshold", CAST("Values"."count" AS FLOAT) AS "count", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 2 AS depth, 1 AS parent_id, 0.383424731855921 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 2 AS depth, 1 AS parent_id, 0.484866921406469 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 4 AS depth, 6 AS parent_id, 0.807910923031799 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 4 AS depth, 6 AS parent_id, 0.705071467546473 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 3 AS "count", 5 AS depth, 10 AS parent_id, 1.113403664625336 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 10 AS parent_id, 1.196826503768119 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 4 AS "count", 5 AS depth, 13 AS parent_id, 1.360480963216072 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 13 AS parent_id, 1.536711230505171 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 9 AS "count", 5 AS depth, 18 AS parent_id, 1.556934959724412 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 15 AS "count", 5 AS depth, 18 AS parent_id, 1.510995479052773 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 5 AS "count", 5 AS depth, 21 AS parent_id, 1.248940362730871 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 8 AS "count", 5 AS depth, 21 AS parent_id, 1.463658588622523 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 4 AS depth, 24 AS parent_id, 1.027484351922333 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 4 AS depth, 24 AS parent_id, 1.076547084481779 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte) AS "Values"), 
"DT_Output_11" AS 
(SELECT "DT_node_lookup_11"."KEY" AS "KEY", "DT_node_lookup_11".node_id_2 AS node_id_2, "DT_node_data_11".node_id AS node_id, "DT_node_data_11".feature AS feature, "DT_node_data_11"."threshold" AS "threshold", "DT_node_data_11"."count" AS "count", "DT_node_data_11".depth AS depth, "DT_node_data_11".parent_id AS parent_id, "DT_node_data_11"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_11" LEFT OUTER JOIN "DT_node_data_11" ON "DT_node_lookup_11".node_id_2 = "DT_node_data_11".node_id), 
"BAG_Model_11" AS 
(SELECT "DT_Output_11"."KEY" AS "KEY", "DT_Output_11"."Estimator" AS "Estimator" 
FROM "DT_Output_11"), 
"DT_node_lookup_12" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.481613039970398) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.804104328155518) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.564067721366882) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.30288577079773) THEN 4 ELSE 5 END ELSE 6 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.380174398422241) THEN 8 ELSE 9 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.68163388967514) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -1.267771124839783) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.545360624790192) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -1.638396978378296) THEN 14 ELSE 15 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.844110250473022) THEN 17 ELSE 18 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.089585781097412) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.273288786411285) THEN 21 ELSE 22 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.232371479272842) THEN 24 ELSE 25 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.139867424964905) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.81378710269928) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.78878265619278) THEN 29 ELSE 30 END ELSE 31 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.169115096330643) THEN 33 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 1.545040845870972) THEN 35 ELSE 36 END END END END END AS node_id_2 
FROM tmp_20180417041704_bndhwq_ads_ AS "ADS_sca_2_OUT"), 
"DT_node_data_12" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values"."threshold" AS FLOAT) AS "threshold", CAST("Values"."count" AS FLOAT) AS "count", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 4 AS depth, 3 AS parent_id, 0.484866921406469 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 4 AS depth, 3 AS parent_id, 0.375167565977065 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 3 AS depth, 2 AS parent_id, 0.807910923031799 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 3 AS depth, 7 AS parent_id, 1.140916252454616 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 3 AS depth, 7 AS parent_id, 1.409299843352078 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 13 AS parent_id, 1.161007135905221 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 13 AS parent_id, 1.11561476395637 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS "count", 5 AS depth, 16 AS parent_id, 1.479896323692296 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 16 AS parent_id, 1.38449451720808 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 20 AS parent_id, 1.368717577036428 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS "count", 5 AS depth, 20 AS parent_id, 1.332338005379589 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 16 AS "count", 5 AS depth, 23 AS parent_id, 1.536735122164262 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 9 AS "count", 5 AS depth, 23 AS parent_id, 1.486967407763781 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 29 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS "count", 5 AS depth, 28 AS parent_id, 1.079219542890252 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 8 AS "count", 5 AS depth, 28 AS parent_id, 1.217108953349463 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 31 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 4 AS depth, 27 AS parent_id, 1.467082620400384 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 33 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 4 AS depth, 32 AS parent_id, 1.346361479569162 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 35 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 3 AS "count", 5 AS depth, 34 AS parent_id, 1.492303278068459 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 36 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 34 AS parent_id, 1.509900148942003 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte) AS "Values"), 
"DT_Output_12" AS 
(SELECT "DT_node_lookup_12"."KEY" AS "KEY", "DT_node_lookup_12".node_id_2 AS node_id_2, "DT_node_data_12".node_id AS node_id, "DT_node_data_12".feature AS feature, "DT_node_data_12"."threshold" AS "threshold", "DT_node_data_12"."count" AS "count", "DT_node_data_12".depth AS depth, "DT_node_data_12".parent_id AS parent_id, "DT_node_data_12"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_12" LEFT OUTER JOIN "DT_node_data_12" ON "DT_node_lookup_12".node_id_2 = "DT_node_data_12".node_id), 
"BAG_Model_12" AS 
(SELECT "DT_Output_12"."KEY" AS "KEY", "DT_Output_12"."Estimator" AS "Estimator" 
FROM "DT_Output_12"), 
"DT_node_lookup_13" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.143561840057373) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.804104328155518) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.849343299865723) THEN 3 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.30288577079773) THEN 5 ELSE 6 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.743170738220215) THEN 8 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.637014627456665) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -1.109902381896973) THEN 11 ELSE 12 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.17572009563446) THEN 14 ELSE 15 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 1.796966671943664) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.401717603206634) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.094359278678894) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.689851999282837) THEN 20 ELSE 21 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.027333766222) THEN 23 ELSE 24 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -1.707088470458984) THEN 26 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.282100439071655) THEN 28 ELSE 29 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -1.494538426399231) THEN 31 ELSE 32 END END END AS node_id_2 
FROM tmp_20180417041704_bndhwq_ads_ AS "ADS_sca_2_OUT"), 
"DT_node_data_13" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values"."threshold" AS FLOAT) AS "threshold", CAST("Values"."count" AS FLOAT) AS "count", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 3 AS depth, 2 AS parent_id, 0.807910923031799 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 4 AS depth, 4 AS parent_id, 0.484866921406469 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 4 AS depth, 4 AS parent_id, 0.375167565977065 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 3 AS depth, 7 AS parent_id, 0.610016838130485 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 10 AS parent_id, 1.409299843352078 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 10 AS parent_id, 1.350090108150775 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 13 AS parent_id, 1.081892001298726 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 13 AS parent_id, 1.140916252454616 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS "count", 5 AS depth, 19 AS parent_id, 1.536215136971334 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 19 AS parent_id, 1.425180217485532 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 3 AS "count", 5 AS depth, 22 AS parent_id, 1.110441634458446 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 22 AS parent_id, 1.346361479569162 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 4 AS depth, 25 AS parent_id, 1.161007135905221 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 28 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 10 AS "count", 5 AS depth, 27 AS parent_id, 1.470394926775901 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 29 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 23 AS "count", 5 AS depth, 27 AS parent_id, 1.523849725091282 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 31 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 3 AS depth, 30 AS parent_id, 1.027484351922333 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 32 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 3 AS depth, 30 AS parent_id, 1.076547084481779 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte) AS "Values"), 
"DT_Output_13" AS 
(SELECT "DT_node_lookup_13"."KEY" AS "KEY", "DT_node_lookup_13".node_id_2 AS node_id_2, "DT_node_data_13".node_id AS node_id, "DT_node_data_13".feature AS feature, "DT_node_data_13"."threshold" AS "threshold", "DT_node_data_13"."count" AS "count", "DT_node_data_13".depth AS depth, "DT_node_data_13".parent_id AS parent_id, "DT_node_data_13"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_13" LEFT OUTER JOIN "DT_node_data_13" ON "DT_node_lookup_13".node_id_2 = "DT_node_data_13".node_id), 
"BAG_Model_13" AS 
(SELECT "DT_Output_13"."KEY" AS "KEY", "DT_Output_13"."Estimator" AS "Estimator" 
FROM "DT_Output_13"), 
"DT_node_lookup_14" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.360541820526123) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.626136422157288) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.380174398422241) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -1.084075689315796) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.088734947144985) THEN 7 ELSE 8 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.149870961904526) THEN 10 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.746216535568237) THEN 12 ELSE 13 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.800916969776154) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.461875259876251) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -1.073432683944702) THEN 17 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.145551860332489) THEN 19 ELSE 20 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 1.499348044395447) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.97459888458252) THEN 23 ELSE 24 END ELSE 25 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.763424038887024) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.221994191408157) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.646949112415314) THEN 29 ELSE 30 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.66877418756485) THEN 32 ELSE 33 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.115176230669022) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -1.093891978263855) THEN 36 ELSE 37 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.747966766357422) THEN 39 ELSE 40 END END END END END AS node_id_2 
FROM tmp_20180417041704_bndhwq_ads_ AS "ADS_sca_2_OUT"), 
"DT_node_data_14" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values"."threshold" AS FLOAT) AS "threshold", CAST("Values"."count" AS FLOAT) AS "count", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 3 AS depth, 2 AS parent_id, 1.140916252454616 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 3 AS depth, 2 AS parent_id, 1.409299843352078 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 4 AS depth, 6 AS parent_id, 0.807910923031799 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 4 AS depth, 6 AS parent_id, 0.705071467546473 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 4 AS depth, 9 AS parent_id, 0.484866921406469 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 11 AS parent_id, 0.383424731855921 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 11 AS parent_id, 0.375167565977065 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 4 AS depth, 16 AS parent_id, 1.410743936534041 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 3 AS "count", 5 AS depth, 18 AS parent_id, 1.544506892265261 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 18 AS parent_id, 1.496561917506885 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 3 AS "count", 5 AS depth, 22 AS parent_id, 1.120298622219344 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 5 AS "count", 5 AS depth, 22 AS parent_id, 1.218902528434392 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 4 AS depth, 21 AS parent_id, 1.46088900931266 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 29 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS "count", 5 AS depth, 28 AS parent_id, 1.351744644800284 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 28 AS parent_id, 1.314325621172093 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 32 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 31 AS parent_id, 1.477951453333812 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 33 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 31 AS parent_id, 1.536711230505171 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 36 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS "count", 5 AS depth, 35 AS parent_id, 1.563847019915812 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 37 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 12 AS "count", 5 AS depth, 35 AS parent_id, 1.531178717824901 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 39 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 9 AS "count", 5 AS depth, 38 AS parent_id, 1.485497248062477 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 40 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 4 AS "count", 5 AS depth, 38 AS parent_id, 1.510057069792298 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte) AS "Values"), 
"DT_Output_14" AS 
(SELECT "DT_node_lookup_14"."KEY" AS "KEY", "DT_node_lookup_14".node_id_2 AS node_id_2, "DT_node_data_14".node_id AS node_id, "DT_node_data_14".feature AS feature, "DT_node_data_14"."threshold" AS "threshold", "DT_node_data_14"."count" AS "count", "DT_node_data_14".depth AS depth, "DT_node_data_14".parent_id AS parent_id, "DT_node_data_14"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_14" LEFT OUTER JOIN "DT_node_data_14" ON "DT_node_lookup_14".node_id_2 = "DT_node_data_14".node_id), 
"BAG_Model_14" AS 
(SELECT "DT_Output_14"."KEY" AS "KEY", "DT_Output_14"."Estimator" AS "Estimator" 
FROM "DT_Output_14"), 
"DT_node_lookup_15" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.686560153961182) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.680695652961731) THEN 2 ELSE 3 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.778099536895752) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.287641674280167) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.978816211223602) THEN 7 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 1.850005149841308) THEN 9 ELSE 10 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -1.28856348991394) THEN 12 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.320627927780151) THEN 14 ELSE 15 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 1.102112770080566) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.155167996883392) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -1.198581457138062) THEN 19 ELSE 20 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -1.267771124839783) THEN 22 ELSE 23 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.652382671833038) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 1.180036306381226) THEN 26 ELSE 27 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.224992096424103) THEN 29 ELSE 30 END END END END END AS node_id_2 
FROM tmp_20180417041704_bndhwq_ads_ AS "ADS_sca_2_OUT"), 
"DT_node_data_15" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values"."threshold" AS FLOAT) AS "threshold", CAST("Values"."count" AS FLOAT) AS "count", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 2 AS depth, 1 AS parent_id, 0.610016838130485 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 2 AS depth, 1 AS parent_id, 0.484866921406469 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 4 AS depth, 6 AS parent_id, 0.705071467546473 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 4 AS "count", 5 AS depth, 8 AS parent_id, 1.15095480084985 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 8 AS parent_id, 1.081892001298726 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 4 AS depth, 11 AS parent_id, 1.536711230505171 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 13 AS parent_id, 1.409299843352078 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 13 AS parent_id, 1.346361479569162 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 7 AS "count", 5 AS depth, 18 AS parent_id, 1.56328866540723 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 11 AS "count", 5 AS depth, 18 AS parent_id, 1.522636928937985 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS "count", 5 AS depth, 21 AS parent_id, 1.331686053243718 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 12 AS "count", 5 AS depth, 21 AS parent_id, 1.476705276554949 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 25 AS parent_id, 1.26722341655496 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 3 AS "count", 5 AS depth, 25 AS parent_id, 1.098036076558325 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 29 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 28 AS parent_id, 1.349842993228629 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 3 AS "count", 5 AS depth, 28 AS parent_id, 1.480588705963597 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte) AS "Values"), 
"DT_Output_15" AS 
(SELECT "DT_node_lookup_15"."KEY" AS "KEY", "DT_node_lookup_15".node_id_2 AS node_id_2, "DT_node_data_15".node_id AS node_id, "DT_node_data_15".feature AS feature, "DT_node_data_15"."threshold" AS "threshold", "DT_node_data_15"."count" AS "count", "DT_node_data_15".depth AS depth, "DT_node_data_15".parent_id AS parent_id, "DT_node_data_15"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_15" LEFT OUTER JOIN "DT_node_data_15" ON "DT_node_lookup_15".node_id_2 = "DT_node_data_15".node_id), 
"BAG_Model_15" AS 
(SELECT "DT_Output_15"."KEY" AS "KEY", "DT_Output_15"."Estimator" AS "Estimator" 
FROM "DT_Output_15")
 SELECT "BAG_B1"."KEY", "BAG_B1"."Estimator" 
FROM (SELECT "BAG_esu_1"."KEY" AS "KEY", "BAG_esu_1"."Estimator" AS "Estimator" 
FROM (SELECT "BAG_Model_10"."KEY" AS "KEY", "BAG_Model_10"."Estimator" AS "Estimator" 
FROM "BAG_Model_10" UNION ALL SELECT "BAG_Model_11"."KEY" AS "KEY", "BAG_Model_11"."Estimator" AS "Estimator" 
FROM "BAG_Model_11" UNION ALL SELECT "BAG_Model_12"."KEY" AS "KEY", "BAG_Model_12"."Estimator" AS "Estimator" 
FROM "BAG_Model_12" UNION ALL SELECT "BAG_Model_13"."KEY" AS "KEY", "BAG_Model_13"."Estimator" AS "Estimator" 
FROM "BAG_Model_13" UNION ALL SELECT "BAG_Model_14"."KEY" AS "KEY", "BAG_Model_14"."Estimator" AS "Estimator" 
FROM "BAG_Model_14" UNION ALL SELECT "BAG_Model_15"."KEY" AS "KEY", "BAG_Model_15"."Estimator" AS "Estimator" 
FROM "BAG_Model_15") AS "BAG_esu_1") AS "BAG_B1") AS "U"

-- Code For temporary table tmp_20180417041704_doqz71_bag_ part 1/2. Create 


CREATE GLOBAL TEMPORARY TABLE tmp_20180417041704_doqz71_bag_  (
	"KEY" BIGINT, 
	"Estimator" FLOAT
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table tmp_20180417041704_doqz71_bag_ part 2/2. Populate

INSERT INTO tmp_20180417041704_doqz71_bag_ ("KEY", "Estimator") SELECT "U"."KEY", "U"."Estimator" 
FROM (SELECT "BAG_Union"."KEY", "BAG_Union"."Estimator" 
FROM (SELECT "BAG_EnsembleUnion"."KEY" AS "KEY", "BAG_EnsembleUnion"."Estimator" AS "Estimator" 
FROM (SELECT "BAG_B0"."KEY" AS "KEY", "BAG_B0"."Estimator" AS "Estimator" 
FROM tmp_20180417041704_dejw6e_bag_ AS "BAG_B0" UNION ALL SELECT "BAG_B1"."KEY" AS "KEY", "BAG_B1"."Estimator" AS "Estimator" 
FROM tmp_20180417041704_lwadji_bag_ AS "BAG_B1") AS "BAG_EnsembleUnion") AS "BAG_Union") AS "U"

-- Code For temporary table tmp_20180417041704_b8bcr0_bag_ part 1/2. Create 


CREATE GLOBAL TEMPORARY TABLE tmp_20180417041704_b8bcr0_bag_  (
	"KEY" BIGINT, 
	"Estimator" FLOAT
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table tmp_20180417041704_b8bcr0_bag_ part 2/2. Populate

INSERT INTO tmp_20180417041704_b8bcr0_bag_ ("KEY", "Estimator") SELECT "U"."KEY", "U"."Estimator" 
FROM (SELECT "BAG_avg"."KEY", "BAG_avg"."Estimator" 
FROM (SELECT "T"."KEY" AS "KEY", CAST("T"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT "BAG_Union"."KEY" AS "KEY", avg(CAST("BAG_Union"."Estimator" AS FLOAT)) AS "Estimator" 
FROM tmp_20180417041704_doqz71_bag_ AS "BAG_Union" GROUP BY "BAG_Union"."KEY") AS "T") AS "BAG_avg") AS "U"

-- Model deployment code

SELECT "BAG_avg"."KEY" AS "KEY", "BAG_avg"."Estimator" AS "Estimator" 
FROM tmp_20180417041704_b8bcr0_bag_ AS "BAG_avg"