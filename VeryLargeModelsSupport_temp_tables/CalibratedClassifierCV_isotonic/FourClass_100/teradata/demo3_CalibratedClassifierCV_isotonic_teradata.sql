-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2018

-- Model : CalibratedClassifierCV_isotonic
-- Dataset : FourClass_100
-- Database : teradata


-- This SQL code can contain one or more statements, to be executed in the order they appear in this file.



-- Code For temporary table tmp_20180416233456_otngkp_calp part 1/2. Create 


CREATE GLOBAL TEMPORARY TABLE tmp_20180416233456_otngkp_calp  (
	"KEY" BIGINT, 
	"Proba_0" FLOAT, 
	"Proba_1" FLOAT, 
	"Proba_2" FLOAT, 
	"Proba_3" FLOAT
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table tmp_20180416233456_otngkp_calp part 2/2. Populate

INSERT INTO tmp_20180416233456_otngkp_calp ("KEY", "Proba_0", "Proba_1", "Proba_2", "Proba_3") SELECT "U"."KEY", "U"."Proba_0", "U"."Proba_1", "U"."Proba_2", "U"."Proba_3" 
FROM (WITH "DT_node_lookup" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_64" <= -1.028859853744507) THEN CASE WHEN ("ADS"."Feature_42" <= -4.898281097412109) THEN CASE WHEN ("ADS"."Feature_2" <= -0.654782891273498) THEN CASE WHEN ("ADS"."Feature_67" <= 0.803257286548614) THEN 4 ELSE CASE WHEN ("ADS"."Feature_77" <= 1.727736949920654) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_80" <= 0.971495747566223) THEN CASE WHEN ("ADS"."Feature_55" <= 7.817846298217773) THEN 10 ELSE 11 END ELSE 12 END END ELSE CASE WHEN ("ADS"."Feature_13" <= 0.727516412734985) THEN CASE WHEN ("ADS"."Feature_84" <= -4.851293087005615) THEN CASE WHEN ("ADS"."Feature_15" <= -2.073054313659668) THEN 16 ELSE 17 END ELSE CASE WHEN ("ADS"."Feature_52" <= -0.235115230083466) THEN 19 ELSE 20 END END ELSE CASE WHEN ("ADS"."Feature_27" <= 1.664585471153259) THEN CASE WHEN ("ADS"."Feature_99" <= -4.34831953048706) THEN 23 ELSE 24 END ELSE CASE WHEN ("ADS"."Feature_11" <= 0.735724806785584) THEN 26 ELSE 27 END END END END ELSE CASE WHEN ("ADS"."Feature_68" <= -1.940861940383911) THEN CASE WHEN ("ADS"."Feature_40" <= 0.195589736104012) THEN CASE WHEN ("ADS"."Feature_33" <= -0.582301318645477) THEN CASE WHEN ("ADS"."Feature_34" <= 1.624741315841675) THEN 32 ELSE 33 END ELSE CASE WHEN ("ADS"."Feature_5" <= -0.042959645390511) THEN 35 ELSE 36 END END ELSE CASE WHEN ("ADS"."Feature_4" <= 0.846810162067413) THEN CASE WHEN ("ADS"."Feature_19" <= -0.90208888053894) THEN 39 ELSE 40 END ELSE CASE WHEN ("ADS"."Feature_11" <= -0.319635331630707) THEN 42 ELSE 43 END END END ELSE CASE WHEN ("ADS"."Feature_16" <= -1.16616678237915) THEN CASE WHEN ("ADS"."Feature_54" <= 3.522892713546753) THEN CASE WHEN ("ADS"."Feature_98" <= 0.917712450027466) THEN 47 ELSE 48 END ELSE CASE WHEN ("ADS"."Feature_90" <= -3.6621835231781) THEN 50 ELSE 51 END END ELSE CASE WHEN ("ADS"."Feature_87" <= -0.699018716812134) THEN CASE WHEN ("ADS"."Feature_94" <= -0.68941605091095) THEN 54 ELSE 55 END ELSE CASE WHEN ("ADS"."Feature_27" <= 3.596300601959228) THEN 57 ELSE 58 END END END END END AS node_id_2 
FROM "FourClass_100" AS "ADS"), 
"DT_node_data" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values"."threshold" AS FLOAT) AS "threshold", CAST("Values"."count" AS FLOAT) AS "count", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Proba_0" AS FLOAT) AS "Proba_0", CAST("Values"."LogProba_0" AS FLOAT) AS "LogProba_0", CAST("Values"."Proba_1" AS FLOAT) AS "Proba_1", CAST("Values"."LogProba_1" AS FLOAT) AS "LogProba_1", CAST("Values"."Proba_2" AS FLOAT) AS "Proba_2", CAST("Values"."LogProba_2" AS FLOAT) AS "LogProba_2", CAST("Values"."Proba_3" AS FLOAT) AS "Proba_3", CAST("Values"."LogProba_3" AS FLOAT) AS "LogProba_3", CAST("Values"."Decision" AS FLOAT) AS "Decision", CAST("Values"."DecisionProba" AS FLOAT) AS "DecisionProba" 
FROM (SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 6 AS "count", 4 AS depth, 3 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 1.0 AS "Proba_3", 0.0 AS "LogProba_3", 3 AS "Decision", 1.0 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 5 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 1 AS "Decision", 1.0 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 5 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 2 AS "Decision", 1.0 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 20 AS "count", 5 AS depth, 9 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 1 AS "Decision", 1.0 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 9 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 2 AS "Decision", 1.0 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS "count", 4 AS depth, 8 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 1.0 AS "Proba_3", 0.0 AS "LogProba_3", 3 AS "Decision", 1.0 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 5 AS "count", 5 AS depth, 15 AS parent_id, 0.2 AS "Proba_0", -1.6094379124341 AS "LogProba_0", 0.4 AS "Proba_1", -0.916290731874155 AS "LogProba_1", 0.4 AS "Proba_2", -0.916290731874155 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 1 AS "Decision", 0.4 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 11 AS "count", 5 AS depth, 15 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 1.0 AS "Proba_3", 0.0 AS "LogProba_3", 3 AS "Decision", 1.0 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 57 AS "count", 5 AS depth, 18 AS parent_id, 0.350877192982456 AS "Proba_0", -1.047318994280559 AS "LogProba_0", 0.192982456140351 AS "Proba_1", -1.64515599503618 AS "LogProba_1", 0.298245614035088 AS "Proba_2", -1.209837923778334 AS "LogProba_2", 0.157894736842105 AS "Proba_3", -1.845826690498331 AS "LogProba_3", 0 AS "Decision", 0.350877192982456 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 40 AS "count", 5 AS depth, 18 AS parent_id, 0.8 AS "Proba_0", -0.22314355131421 AS "LogProba_0", 0.125 AS "Proba_1", -2.079441541679836 AS "LogProba_1", 0.075 AS "Proba_2", -2.590267165445826 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0 AS "Decision", 0.8 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 14 AS "count", 5 AS depth, 22 AS parent_id, 0.142857142857143 AS "Proba_0", -1.945910149055314 AS "LogProba_0", 0.071428571428571 AS "Proba_1", -2.639057329615259 AS "LogProba_1", 0.714285714285714 AS "Proba_2", -0.336472236621213 AS "LogProba_2", 0.071428571428571 AS "Proba_3", -2.639057329615259 AS "LogProba_3", 2 AS "Decision", 0.714285714285714 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 60 AS "count", 5 AS depth, 22 AS parent_id, 0.366666666666667 AS "Proba_0", -1.003302108863785 AS "LogProba_0", 0.416666666666667 AS "Proba_1", -0.8754687373539 AS "LogProba_1", 0.1 AS "Proba_2", -2.302585092994046 AS "LogProba_2", 0.116666666666667 AS "Proba_3", -2.148434413166788 AS "LogProba_3", 1 AS "Decision", 0.416666666666667 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 23 AS "count", 5 AS depth, 25 AS parent_id, 0.043478260869565 AS "Proba_0", -3.13549421592915 AS "LogProba_0", 0.91304347826087 AS "Proba_1", -0.090971778205727 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.043478260869565 AS "Proba_3", -3.13549421592915 AS "LogProba_3", 1 AS "Decision", 0.91304347826087 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 5 AS "count", 5 AS depth, 25 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.2 AS "Proba_1", -1.6094379124341 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.8 AS "Proba_3", -0.22314355131421 AS "LogProba_3", 3 AS "Decision", 0.8 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 32 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 16 AS "count", 5 AS depth, 31 AS parent_id, 0.0625 AS "Proba_0", -2.772588722239781 AS "LogProba_0", 0.1875 AS "Proba_1", -1.673976433571672 AS "LogProba_1", 0.125 AS "Proba_2", -2.079441541679836 AS "LogProba_2", 0.625 AS "Proba_3", -0.470003629245736 AS "LogProba_3", 3 AS "Decision", 0.625 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 33 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 5 AS "count", 5 AS depth, 31 AS parent_id, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0 AS "Decision", 1.0 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 35 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 24 AS "count", 5 AS depth, 34 AS parent_id, 0.125 AS "Proba_0", -2.079441541679836 AS "LogProba_0", 0.375 AS "Proba_1", -0.980829253011726 AS "LogProba_1", 0.375 AS "Proba_2", -0.980829253011726 AS "LogProba_2", 0.125 AS "Proba_3", -2.079441541679836 AS "LogProba_3", 1 AS "Decision", 0.375 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 36 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 17 AS "count", 5 AS depth, 34 AS parent_id, 0.058823529411765 AS "Proba_0", -2.833213344056216 AS "LogProba_0", 0.88235294117647 AS "Proba_1", -0.125163142954006 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.058823529411765 AS "Proba_3", -2.833213344056216 AS "LogProba_3", 1 AS "Decision", 0.88235294117647 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 39 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 10 AS "count", 5 AS depth, 38 AS parent_id, 0.1 AS "Proba_0", -2.302585092994046 AS "LogProba_0", 0.1 AS "Proba_1", -2.302585092994046 AS "LogProba_1", 0.4 AS "Proba_2", -0.916290731874155 AS "LogProba_2", 0.4 AS "Proba_3", -0.916290731874155 AS "LogProba_3", 2 AS "Decision", 0.4 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 40 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 44 AS "count", 5 AS depth, 38 AS parent_id, 0.704545454545455 AS "Proba_0", -0.350202429433115 AS "LogProba_0", 0.022727272727273 AS "Proba_1", -3.784189633918261 AS "LogProba_1", 0.181818181818182 AS "Proba_2", -1.704748092238425 AS "LogProba_2", 0.090909090909091 AS "Proba_3", -2.39789527279837 AS "LogProba_3", 0 AS "Decision", 0.704545454545455 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 42 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 5 AS "count", 5 AS depth, 41 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 2 AS "Decision", 1.0 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 43 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 4 AS "count", 5 AS depth, 41 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.75 AS "Proba_1", -0.287682072451781 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.25 AS "Proba_3", -1.38629436111989 AS "LogProba_3", 1 AS "Decision", 0.75 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 47 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 59 AS "count", 5 AS depth, 46 AS parent_id, 0.11864406779661 AS "Proba_0", -2.131627294850406 AS "LogProba_0", 0.050847457627119 AS "Proba_1", -2.97892515523761 AS "LogProba_1", 0.101694915254237 AS "Proba_2", -2.285777974677664 AS "LogProba_2", 0.728813559322034 AS "Proba_3", -0.316337328212157 AS "LogProba_3", 3 AS "Decision", 0.728813559322034 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 48 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 5 AS "count", 5 AS depth, 46 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.2 AS "Proba_1", -1.6094379124341 AS "LogProba_1", 0.8 AS "Proba_2", -0.22314355131421 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 2 AS "Decision", 0.8 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 50 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 5 AS "count", 5 AS depth, 49 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 2 AS "Decision", 1.0 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 51 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 4 AS "count", 5 AS depth, 49 AS parent_id, 0.75 AS "Proba_0", -0.287682072451781 AS "LogProba_0", 0.25 AS "Proba_1", -1.38629436111989 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0 AS "Decision", 0.75 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 54 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 13 AS "count", 5 AS depth, 53 AS parent_id, 0.076923076923077 AS "Proba_0", -2.564949357461536 AS "LogProba_0", 0.153846153846154 AS "Proba_1", -1.871802176901591 AS "LogProba_1", 0.230769230769231 AS "Proba_2", -1.466337068793427 AS "LogProba_2", 0.538461538461538 AS "Proba_3", -0.619039208406224 AS "LogProba_3", 3 AS "Decision", 0.538461538461538 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 55 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 53 AS "count", 5 AS depth, 53 AS parent_id, 0.037735849056604 AS "Proba_0", -3.277144732992176 AS "LogProba_0", 0.113207547169811 AS "Proba_1", -2.178532444324067 AS "LogProba_1", 0.773584905660377 AS "Proba_2", -0.256719846847814 AS "LogProba_2", 0.075471698113208 AS "Proba_3", -2.583997552432231 AS "LogProba_3", 2 AS "Decision", 0.773584905660377 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 57 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 71 AS "count", 5 AS depth, 56 AS parent_id, 0.183098591549296 AS "Proba_0", -1.697730519579779 AS "LogProba_0", 0.211267605633803 AS "Proba_1", -1.554629675939106 AS "LogProba_1", 0.323943661971831 AS "Proba_2", -1.127185661112166 AS "LogProba_2", 0.28169014084507 AS "Proba_3", -1.266947603487324 AS "LogProba_3", 2 AS "Decision", 0.323943661971831 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 58 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 18 AS "count", 5 AS depth, 56 AS parent_id, 0.055555555555556 AS "Proba_0", -2.890371757896165 AS "LogProba_0", 0.111111111111111 AS "Proba_1", -2.19722457733622 AS "LogProba_1", 0.055555555555556 AS "Proba_2", -2.890371757896165 AS "LogProba_2", 0.777777777777778 AS "Proba_3", -0.251314428280906 AS "LogProba_3", 3 AS "Decision", 0.777777777777778 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte) AS "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".node_id AS node_id, "DT_node_data".feature AS feature, "DT_node_data"."threshold" AS "threshold", "DT_node_data"."count" AS "count", "DT_node_data".depth AS depth, "DT_node_data".parent_id AS parent_id, "DT_node_data"."Proba_0" AS "Proba_0", "DT_node_data"."LogProba_0" AS "LogProba_0", "DT_node_data"."Proba_1" AS "Proba_1", "DT_node_data"."LogProba_1" AS "LogProba_1", "DT_node_data"."Proba_2" AS "Proba_2", "DT_node_data"."LogProba_2" AS "LogProba_2", "DT_node_data"."Proba_3" AS "Proba_3", "DT_node_data"."LogProba_3" AS "LogProba_3", "DT_node_data"."Decision" AS "Decision", "DT_node_data"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".node_id), 
"Calibrated_Model_0" AS 
(SELECT "DT_Output"."KEY" AS "KEY", CAST(NULL AS FLOAT) AS "Score_0", CAST(NULL AS FLOAT) AS "Score_1", CAST(NULL AS FLOAT) AS "Score_2", CAST(NULL AS FLOAT) AS "Score_3", "DT_Output"."Proba_0" AS "Proba_0", "DT_Output"."Proba_1" AS "Proba_1", "DT_Output"."Proba_2" AS "Proba_2", "DT_Output"."Proba_3" AS "Proba_3", "DT_Output"."LogProba_0" AS "LogProba_0", "DT_Output"."LogProba_1" AS "LogProba_1", "DT_Output"."LogProba_2" AS "LogProba_2", "DT_Output"."LogProba_3" AS "LogProba_3", CAST(NULL AS BIGINT) AS "Decision", CAST(NULL AS FLOAT) AS "DecisionProba", coalesce(CAST(NULL AS FLOAT), "DT_Output"."Proba_0") AS "ScoreOrProba_0", coalesce(CAST(NULL AS FLOAT), "DT_Output"."Proba_1") AS "ScoreOrProba_1", coalesce(CAST(NULL AS FLOAT), "DT_Output"."Proba_2") AS "ScoreOrProba_2", coalesce(CAST(NULL AS FLOAT), "DT_Output"."Proba_3") AS "ScoreOrProba_3" 
FROM "DT_Output"), 
isotonic_cte_0 AS 
(SELECT "Calibrated_Model_0"."KEY" AS "KEY", CASE WHEN ("Calibrated_Model_0"."ScoreOrProba_0" < 0.0) THEN 0.108752705627706 WHEN ("Calibrated_Model_0"."ScoreOrProba_0" < 0.0625) THEN ("Calibrated_Model_0"."ScoreOrProba_0" - 0.0) * 0.0 + 0.108752705627706 WHEN ("Calibrated_Model_0"."ScoreOrProba_0" < 0.1) THEN ("Calibrated_Model_0"."ScoreOrProba_0" - 0.0625) * 7.108476454554886 + 0.108752705627706 WHEN ("Calibrated_Model_0"."ScoreOrProba_0" < 0.704545454545455) THEN ("Calibrated_Model_0"."ScoreOrProba_0" - 0.1) * 0.0 + 0.375320572673514 WHEN ("Calibrated_Model_0"."ScoreOrProba_0" < 0.75) THEN ("Calibrated_Model_0"."ScoreOrProba_0" - 0.704545454545455) * 5.885804544039844 + 0.375320572673514 WHEN ("Calibrated_Model_0"."ScoreOrProba_0" < 1.0) THEN ("Calibrated_Model_0"."ScoreOrProba_0" - 0.75) * 0.0 + 0.642857142857143 ELSE 0.642857142857143 END AS "Proba_0", CASE WHEN ("Calibrated_Model_0"."ScoreOrProba_1" < 0.0) THEN 0.176084198385236 WHEN ("Calibrated_Model_0"."ScoreOrProba_1" < 0.75) THEN ("Calibrated_Model_0"."ScoreOrProba_1" - 0.0) * 0.0 + 0.176084198385236 WHEN ("Calibrated_Model_0"."ScoreOrProba_1" < 0.88235294117647) THEN ("Calibrated_Model_0"."ScoreOrProba_1" - 0.75) * 1.417060804119628 + 0.176084198385236 WHEN ("Calibrated_Model_0"."ScoreOrProba_1" < 0.91304347826087) THEN ("Calibrated_Model_0"."ScoreOrProba_1" - 0.88235294117647) * 12.821753246753257 + 0.363636363636364 WHEN ("Calibrated_Model_0"."ScoreOrProba_1" < 1.0) THEN ("Calibrated_Model_0"."ScoreOrProba_1" - 0.91304347826087) * 0.0 + 0.757142857142857 ELSE 0.757142857142857 END AS "Proba_1", CASE WHEN ("Calibrated_Model_0"."ScoreOrProba_2" < 0.0) THEN 0.144599303135888 WHEN ("Calibrated_Model_0"."ScoreOrProba_2" < 0.055555555555556) THEN ("Calibrated_Model_0"."ScoreOrProba_2" - 0.0) * 0.0 + 0.144599303135888 WHEN ("Calibrated_Model_0"."ScoreOrProba_2" < 0.075) THEN ("Calibrated_Model_0"."ScoreOrProba_2" - 0.055555555555556) * 3.915205106432818 + 0.144599303135888 WHEN ("Calibrated_Model_0"."ScoreOrProba_2" < 0.101694915254237) THEN ("Calibrated_Model_0"."ScoreOrProba_2" - 0.075) * 0.0 + 0.220728291316527 WHEN ("Calibrated_Model_0"."ScoreOrProba_2" < 0.125) THEN ("Calibrated_Model_0"."ScoreOrProba_2" - 0.101694915254237) * 4.184738137679317 + 0.220728291316527 WHEN ("Calibrated_Model_0"."ScoreOrProba_2" < 0.4) THEN ("Calibrated_Model_0"."ScoreOrProba_2" - 0.125) * 0.0 + 0.318253968253968 WHEN ("Calibrated_Model_0"."ScoreOrProba_2" < 0.714285714285714) THEN ("Calibrated_Model_0"."ScoreOrProba_2" - 0.4) * 0.047979797979798 + 0.318253968253968 WHEN ("Calibrated_Model_0"."ScoreOrProba_2" < 0.773584905660377) THEN ("Calibrated_Model_0"."ScoreOrProba_2" - 0.714285714285714) * 1.756628787878787 + 0.333333333333333 WHEN ("Calibrated_Model_0"."ScoreOrProba_2" < 0.8) THEN ("Calibrated_Model_0"."ScoreOrProba_2" - 0.773584905660377) * 0.0 + 0.4375 WHEN ("Calibrated_Model_0"."ScoreOrProba_2" < 1.0) THEN ("Calibrated_Model_0"."ScoreOrProba_2" - 0.8) * 1.145833333333334 + 0.4375 ELSE 0.666666666666667 END AS "Proba_2", CASE WHEN ("Calibrated_Model_0"."ScoreOrProba_3" < 0.0) THEN 0.093434343434343 WHEN ("Calibrated_Model_0"."ScoreOrProba_3" < 0.075471698113208) THEN ("Calibrated_Model_0"."ScoreOrProba_3" - 0.0) * 0.0 + 0.093434343434343 WHEN ("Calibrated_Model_0"."ScoreOrProba_3" < 0.090909090909091) THEN ("Calibrated_Model_0"."ScoreOrProba_3" - 0.075471698113208) * 2.044753086419753 + 0.093434343434343 WHEN ("Calibrated_Model_0"."ScoreOrProba_3" < 0.116666666666667) THEN ("Calibrated_Model_0"."ScoreOrProba_3" - 0.090909090909091) * 1.490876350540216 + 0.125 WHEN ("Calibrated_Model_0"."ScoreOrProba_3" < 0.625) THEN ("Calibrated_Model_0"."ScoreOrProba_3" - 0.116666666666667) * 0.0 + 0.163401360544218 WHEN ("Calibrated_Model_0"."ScoreOrProba_3" < 0.728813559322034) THEN ("Calibrated_Model_0"."ScoreOrProba_3" - 0.625) * 1.924706100127126 + 0.163401360544218 WHEN ("Calibrated_Model_0"."ScoreOrProba_3" < 0.8) THEN ("Calibrated_Model_0"."ScoreOrProba_3" - 0.728813559322034) * 0.0 + 0.363211951447246 WHEN ("Calibrated_Model_0"."ScoreOrProba_3" < 1.0) THEN ("Calibrated_Model_0"."ScoreOrProba_3" - 0.8) * 0.406162464985994 + 0.363211951447246 ELSE 0.444444444444444 END AS "Proba_3" 
FROM "Calibrated_Model_0"), 
"Normalized_Probas" AS 
(SELECT isotonic_cte_0."KEY" AS "KEY", isotonic_cte_0."Proba_0" / (isotonic_cte_0."Proba_0" + isotonic_cte_0."Proba_1" + isotonic_cte_0."Proba_2" + isotonic_cte_0."Proba_3") AS "Proba_0", isotonic_cte_0."Proba_1" / (isotonic_cte_0."Proba_0" + isotonic_cte_0."Proba_1" + isotonic_cte_0."Proba_2" + isotonic_cte_0."Proba_3") AS "Proba_1", isotonic_cte_0."Proba_2" / (isotonic_cte_0."Proba_0" + isotonic_cte_0."Proba_1" + isotonic_cte_0."Proba_2" + isotonic_cte_0."Proba_3") AS "Proba_2", isotonic_cte_0."Proba_3" / (isotonic_cte_0."Proba_0" + isotonic_cte_0."Proba_1" + isotonic_cte_0."Proba_2" + isotonic_cte_0."Proba_3") AS "Proba_3" 
FROM isotonic_cte_0), 
"DT_node_lookup_1" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_64" <= -1.171564221382141) THEN CASE WHEN ("ADS"."Feature_2" <= 0.206375062465668) THEN CASE WHEN ("ADS"."Feature_13" <= 0.398741215467453) THEN CASE WHEN ("ADS"."Feature_17" <= -0.776417016983032) THEN CASE WHEN ("ADS"."Feature_43" <= 5.79266357421875) THEN 5 ELSE 6 END ELSE CASE WHEN ("ADS"."Feature_84" <= -6.077953338623047) THEN 8 ELSE 9 END END ELSE CASE WHEN ("ADS"."Feature_57" <= 6.204127311706543) THEN CASE WHEN ("ADS"."Feature_24" <= -1.495949268341064) THEN 12 ELSE 13 END ELSE 14 END END ELSE CASE WHEN ("ADS"."Feature_42" <= 1.920913934707642) THEN CASE WHEN ("ADS"."Feature_50" <= -2.52088451385498) THEN CASE WHEN ("ADS"."Feature_66" <= -0.477440178394318) THEN 18 ELSE 19 END ELSE CASE WHEN ("ADS"."Feature_87" <= 5.9334716796875) THEN 21 ELSE 22 END END ELSE CASE WHEN ("ADS"."Feature_52" <= -0.312247693538666) THEN CASE WHEN ("ADS"."Feature_56" <= -3.829965353012085) THEN 25 ELSE 26 END ELSE CASE WHEN ("ADS"."Feature_19" <= 0.413404703140259) THEN 28 ELSE 29 END END END END ELSE CASE WHEN ("ADS"."Feature_68" <= -3.142474174499512) THEN CASE WHEN ("ADS"."Feature_40" <= 0.301142483949661) THEN CASE WHEN ("ADS"."Feature_64" <= 5.771607398986816) THEN CASE WHEN ("ADS"."Feature_31" <= -3.196165084838867) THEN 34 ELSE 35 END ELSE CASE WHEN ("ADS"."Feature_98" <= -0.572585880756378) THEN 37 ELSE 38 END END ELSE CASE WHEN ("ADS"."Feature_50" <= 4.340896606445312) THEN CASE WHEN ("ADS"."Feature_0" <= 1.587741374969482) THEN 41 ELSE 42 END ELSE CASE WHEN ("ADS"."Feature_48" <= -3.493406772613526) THEN 44 ELSE 45 END END END ELSE CASE WHEN ("ADS"."Feature_87" <= -0.886691570281982) THEN CASE WHEN ("ADS"."Feature_92" <= -0.35968092083931) THEN CASE WHEN ("ADS"."Feature_77" <= 0.261848658323288) THEN 49 ELSE 50 END ELSE CASE WHEN ("ADS"."Feature_31" <= 5.495255470275879) THEN 52 ELSE 53 END END ELSE CASE WHEN ("ADS"."Feature_60" <= -0.486171871423721) THEN CASE WHEN ("ADS"."Feature_29" <= 5.733975410461426) THEN 56 ELSE 57 END ELSE CASE WHEN ("ADS"."Feature_95" <= -2.17936372756958) THEN 59 ELSE 60 END END END END END AS node_id_2 
FROM "FourClass_100" AS "ADS"), 
"DT_node_data_1" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values"."threshold" AS FLOAT) AS "threshold", CAST("Values"."count" AS FLOAT) AS "count", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Proba_0" AS FLOAT) AS "Proba_0", CAST("Values"."LogProba_0" AS FLOAT) AS "LogProba_0", CAST("Values"."Proba_1" AS FLOAT) AS "Proba_1", CAST("Values"."LogProba_1" AS FLOAT) AS "LogProba_1", CAST("Values"."Proba_2" AS FLOAT) AS "Proba_2", CAST("Values"."LogProba_2" AS FLOAT) AS "LogProba_2", CAST("Values"."Proba_3" AS FLOAT) AS "Proba_3", CAST("Values"."LogProba_3" AS FLOAT) AS "LogProba_3", CAST("Values"."Decision" AS FLOAT) AS "Decision", CAST("Values"."DecisionProba" AS FLOAT) AS "DecisionProba" 
FROM (SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 29 AS "count", 5 AS depth, 4 AS parent_id, 0.96551724137931 AS "Proba_0", -0.03509131981127 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.03448275862069 AS "Proba_2", -3.367295829986474 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0 AS "Decision", 0.96551724137931 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS "count", 5 AS depth, 4 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.5 AS "Proba_1", -0.693147180559945 AS "LogProba_1", 0.5 AS "Proba_2", -0.693147180559945 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 1 AS "Decision", 0.5 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 4 AS "count", 5 AS depth, 7 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 1.0 AS "Proba_3", 0.0 AS "LogProba_3", 3 AS "Decision", 1.0 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 34 AS "count", 5 AS depth, 7 AS parent_id, 0.411764705882353 AS "Proba_0", -0.887303195000903 AS "LogProba_0", 0.205882352941176 AS "Proba_1", -1.580450375560848 AS "LogProba_1", 0.264705882352941 AS "Proba_2", -1.329135947279942 AS "LogProba_2", 0.117647058823529 AS "Proba_3", -2.140066163496271 AS "LogProba_3", 0 AS "Decision", 0.411764705882353 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 21 AS "count", 5 AS depth, 11 AS parent_id, 0.571428571428571 AS "Proba_0", -0.559615787935423 AS "LogProba_0", 0.142857142857143 AS "Proba_1", -1.945910149055314 AS "LogProba_1", 0.095238095238095 AS "Proba_2", -2.351375257163478 AS "LogProba_2", 0.19047619047619 AS "Proba_3", -1.658228076603532 AS "LogProba_3", 0 AS "Decision", 0.571428571428571 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 37 AS "count", 5 AS depth, 11 AS parent_id, 0.162162162162162 AS "Proba_0", -1.81915844341617 AS "LogProba_0", 0.513513513513514 AS "Proba_1", -0.666478933477784 AS "LogProba_1", 0.189189189189189 AS "Proba_2", -1.665007763588911 AS "LogProba_2", 0.135135135135135 AS "Proba_3", -2.001480000210124 AS "LogProba_3", 1 AS "Decision", 0.513513513513514 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 5 AS "count", 4 AS depth, 10 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 1.0 AS "Proba_3", 0.0 AS "LogProba_3", 3 AS "Decision", 1.0 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 11 AS "count", 5 AS depth, 17 AS parent_id, 0.090909090909091 AS "Proba_0", -2.39789527279837 AS "LogProba_0", 0.090909090909091 AS "Proba_1", -2.39789527279837 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.818181818181818 AS "Proba_3", -0.200670695462151 AS "LogProba_3", 3 AS "Decision", 0.818181818181818 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 11 AS "count", 5 AS depth, 17 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.454545454545454 AS "Proba_1", -0.78845736036427 AS "LogProba_1", 0.454545454545454 AS "Proba_2", -0.78845736036427 AS "LogProba_2", 0.090909090909091 AS "Proba_3", -2.39789527279837 AS "LogProba_3", 1 AS "Decision", 0.454545454545454 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 49 AS "count", 5 AS depth, 20 AS parent_id, 0.102040816326531 AS "Proba_0", -2.282382385676526 AS "LogProba_0", 0.816326530612245 AS "Proba_1", -0.20294084399669 AS "LogProba_1", 0.061224489795918 AS "Proba_2", -2.793208009442517 AS "LogProba_2", 0.020408163265306 AS "Proba_3", -3.891820298110627 AS "LogProba_3", 1 AS "Decision", 0.816326530612245 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 4 AS "count", 5 AS depth, 20 AS parent_id, 0.5 AS "Proba_0", -0.693147180559945 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.5 AS "Proba_2", -0.693147180559945 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0 AS "Decision", 0.5 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 4 AS "count", 5 AS depth, 24 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 1.0 AS "Proba_3", 0.0 AS "LogProba_3", 3 AS "Decision", 1.0 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 16 AS "count", 5 AS depth, 24 AS parent_id, 0.1875 AS "Proba_0", -1.673976433571672 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.75 AS "Proba_2", -0.287682072451781 AS "LogProba_2", 0.0625 AS "Proba_3", -2.772588722239781 AS "LogProba_3", 2 AS "Decision", 0.75 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 28 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 5 AS "count", 5 AS depth, 27 AS parent_id, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0 AS "Decision", 1.0 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 29 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 3 AS "count", 5 AS depth, 27 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 1 AS "Decision", 1.0 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 34 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 10 AS "count", 5 AS depth, 33 AS parent_id, 0.2 AS "Proba_0", -1.6094379124341 AS "LogProba_0", 0.2 AS "Proba_1", -1.6094379124341 AS "LogProba_1", 0.5 AS "Proba_2", -0.693147180559945 AS "LogProba_2", 0.1 AS "Proba_3", -2.302585092994046 AS "LogProba_3", 2 AS "Decision", 0.5 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 35 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 35 AS "count", 5 AS depth, 33 AS parent_id, 0.142857142857143 AS "Proba_0", -1.945910149055314 AS "LogProba_0", 0.685714285714286 AS "Proba_1", -0.377294231141468 AS "LogProba_1", 0.057142857142857 AS "Proba_2", -2.862200880929468 AS "LogProba_2", 0.114285714285714 AS "Proba_3", -2.169053700369523 AS "LogProba_3", 1 AS "Decision", 0.685714285714286 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 37 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 3 AS "count", 5 AS depth, 36 AS parent_id, 0.333333333333333 AS "Proba_0", -1.09861228866811 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.666666666666667 AS "Proba_2", -0.405465108108164 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 2 AS "Decision", 0.666666666666667 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 38 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 5 AS "count", 5 AS depth, 36 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 1.0 AS "Proba_3", 0.0 AS "LogProba_3", 3 AS "Decision", 1.0 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 41 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 40 AS "count", 5 AS depth, 40 AS parent_id, 0.7 AS "Proba_0", -0.356674943938732 AS "LogProba_0", 0.125 AS "Proba_1", -2.079441541679836 AS "LogProba_1", 0.075 AS "Proba_2", -2.590267165445826 AS "LogProba_2", 0.1 AS "Proba_3", -2.302585092994046 AS "LogProba_3", 0 AS "Decision", 0.7 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 42 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 3 AS "count", 5 AS depth, 40 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 2 AS "Decision", 1.0 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 44 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 43 AS parent_id, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0 AS "Decision", 1.0 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 45 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 7 AS "count", 5 AS depth, 43 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 2 AS "Decision", 1.0 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 49 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 24 AS "count", 5 AS depth, 48 AS parent_id, 0.083333333333333 AS "Proba_0", -2.484906649788 AS "LogProba_0", 0.25 AS "Proba_1", -1.38629436111989 AS "LogProba_1", 0.041666666666667 AS "Proba_2", -3.178053830347946 AS "LogProba_2", 0.625 AS "Proba_3", -0.470003629245736 AS "LogProba_3", 3 AS "Decision", 0.625 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 50 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 15 AS "count", 5 AS depth, 48 AS parent_id, 0.066666666666667 AS "Proba_0", -2.70805020110221 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.6 AS "Proba_2", -0.510825623765991 AS "LogProba_2", 0.333333333333333 AS "Proba_3", -1.09861228866811 AS "LogProba_3", 2 AS "Decision", 0.6 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 52 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 45 AS "count", 5 AS depth, 51 AS parent_id, 0.044444444444444 AS "Proba_0", -3.113515309210374 AS "LogProba_0", 0.022222222222222 AS "Proba_1", -3.80666248977032 AS "LogProba_1", 0.844444444444444 AS "Proba_2", -0.169076330043934 AS "LogProba_2", 0.088888888888889 AS "Proba_3", -2.42036812865043 AS "LogProba_3", 2 AS "Decision", 0.844444444444444 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 53 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 5 AS "count", 5 AS depth, 51 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.6 AS "Proba_1", -0.510825623765991 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.4 AS "Proba_3", -0.916290731874155 AS "LogProba_3", 1 AS "Decision", 0.6 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 56 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 51 AS "count", 5 AS depth, 55 AS parent_id, 0.07843137254902 AS "Proba_0", -2.545531271604436 AS "LogProba_0", 0.117647058823529 AS "Proba_1", -2.140066163496271 AS "LogProba_1", 0.07843137254902 AS "Proba_2", -2.545531271604436 AS "LogProba_2", 0.725490196078431 AS "Proba_3", -0.320907720080101 AS "LogProba_3", 3 AS "Decision", 0.725490196078431 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 57 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 4 AS "count", 5 AS depth, 55 AS parent_id, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0 AS "Decision", 1.0 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 59 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 38 AS "count", 5 AS depth, 58 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.078947368421053 AS "Proba_1", -2.538973871058276 AS "LogProba_1", 0.394736842105263 AS "Proba_2", -0.929535958624176 AS "LogProba_2", 0.526315789473684 AS "Proba_3", -0.641853886172395 AS "LogProba_3", 3 AS "Decision", 0.526315789473684 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 60 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 78 AS "count", 5 AS depth, 58 AS parent_id, 0.269230769230769 AS "Proba_0", -1.312186388966169 AS "LogProba_0", 0.256410256410256 AS "Proba_1", -1.360976553135601 AS "LogProba_1", 0.256410256410256 AS "Proba_2", -1.360976553135601 AS "LogProba_2", 0.217948717948718 AS "Proba_3", -1.523495482633376 AS "LogProba_3", 0 AS "Decision", 0.269230769230769 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte) AS "Values"), 
"DT_Output_1" AS 
(SELECT "DT_node_lookup_1"."KEY" AS "KEY", "DT_node_lookup_1".node_id_2 AS node_id_2, "DT_node_data_1".node_id AS node_id, "DT_node_data_1".feature AS feature, "DT_node_data_1"."threshold" AS "threshold", "DT_node_data_1"."count" AS "count", "DT_node_data_1".depth AS depth, "DT_node_data_1".parent_id AS parent_id, "DT_node_data_1"."Proba_0" AS "Proba_0", "DT_node_data_1"."LogProba_0" AS "LogProba_0", "DT_node_data_1"."Proba_1" AS "Proba_1", "DT_node_data_1"."LogProba_1" AS "LogProba_1", "DT_node_data_1"."Proba_2" AS "Proba_2", "DT_node_data_1"."LogProba_2" AS "LogProba_2", "DT_node_data_1"."Proba_3" AS "Proba_3", "DT_node_data_1"."LogProba_3" AS "LogProba_3", "DT_node_data_1"."Decision" AS "Decision", "DT_node_data_1"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup_1" LEFT OUTER JOIN "DT_node_data_1" ON "DT_node_lookup_1".node_id_2 = "DT_node_data_1".node_id), 
"Calibrated_Model_1" AS 
(SELECT "DT_Output_1"."KEY" AS "KEY", CAST(NULL AS FLOAT) AS "Score_0", CAST(NULL AS FLOAT) AS "Score_1", CAST(NULL AS FLOAT) AS "Score_2", CAST(NULL AS FLOAT) AS "Score_3", "DT_Output_1"."Proba_0" AS "Proba_0", "DT_Output_1"."Proba_1" AS "Proba_1", "DT_Output_1"."Proba_2" AS "Proba_2", "DT_Output_1"."Proba_3" AS "Proba_3", "DT_Output_1"."LogProba_0" AS "LogProba_0", "DT_Output_1"."LogProba_1" AS "LogProba_1", "DT_Output_1"."LogProba_2" AS "LogProba_2", "DT_Output_1"."LogProba_3" AS "LogProba_3", CAST(NULL AS BIGINT) AS "Decision", CAST(NULL AS FLOAT) AS "DecisionProba", coalesce(CAST(NULL AS FLOAT), "DT_Output_1"."Proba_0") AS "ScoreOrProba_0", coalesce(CAST(NULL AS FLOAT), "DT_Output_1"."Proba_1") AS "ScoreOrProba_1", coalesce(CAST(NULL AS FLOAT), "DT_Output_1"."Proba_2") AS "ScoreOrProba_2", coalesce(CAST(NULL AS FLOAT), "DT_Output_1"."Proba_3") AS "ScoreOrProba_3" 
FROM "DT_Output_1"), 
isotonic_cte_1 AS 
(SELECT "Calibrated_Model_1"."KEY" AS "KEY", CASE WHEN ("Calibrated_Model_1"."ScoreOrProba_0" < 0.0) THEN 0.108108108108108 WHEN ("Calibrated_Model_1"."ScoreOrProba_0" < 0.044444444444444) THEN ("Calibrated_Model_1"."ScoreOrProba_0" - 0.0) * 0.0 + 0.108108108108108 WHEN ("Calibrated_Model_1"."ScoreOrProba_0" < 0.066666666666667) THEN ("Calibrated_Model_1"."ScoreOrProba_0" - 0.044444444444444) * 3.604770762665498 + 0.108108108108108 WHEN ("Calibrated_Model_1"."ScoreOrProba_0" < 0.2) THEN ("Calibrated_Model_1"."ScoreOrProba_0" - 0.066666666666667) * 0.0 + 0.18821412505623 WHEN ("Calibrated_Model_1"."ScoreOrProba_0" < 0.269230769230769) THEN ("Calibrated_Model_1"."ScoreOrProba_0" - 0.2) * 0.290610786224822 + 0.18821412505623 WHEN ("Calibrated_Model_1"."ScoreOrProba_0" < 0.411764705882353) THEN ("Calibrated_Model_1"."ScoreOrProba_0" - 0.269230769230769) * 1.682974300831444 + 0.208333333333333 WHEN ("Calibrated_Model_1"."ScoreOrProba_0" < 1.0) THEN ("Calibrated_Model_1"."ScoreOrProba_0" - 0.411764705882353) * 0.0 + 0.448214285714286 ELSE 0.448214285714286 END AS "Proba_0", CASE WHEN ("Calibrated_Model_1"."ScoreOrProba_1" < 0.0) THEN 0.075516693163752 WHEN ("Calibrated_Model_1"."ScoreOrProba_1" < 0.090909090909091) THEN ("Calibrated_Model_1"."ScoreOrProba_1" - 0.0) * 0.0 + 0.075516693163752 WHEN ("Calibrated_Model_1"."ScoreOrProba_1" < 0.117647058823529) THEN ("Calibrated_Model_1"."ScoreOrProba_1" - 0.090909090909091) * 2.37012012012012 + 0.075516693163752 WHEN ("Calibrated_Model_1"."ScoreOrProba_1" < 0.125) THEN ("Calibrated_Model_1"."ScoreOrProba_1" - 0.117647058823529) * 0.0 + 0.138888888888889 WHEN ("Calibrated_Model_1"."ScoreOrProba_1" < 0.142857142857143) THEN ("Calibrated_Model_1"."ScoreOrProba_1" - 0.125) * 8.222222222222225 + 0.138888888888889 WHEN ("Calibrated_Model_1"."ScoreOrProba_1" < 0.2) THEN ("Calibrated_Model_1"."ScoreOrProba_1" - 0.142857142857143) * 0.199179292929292 + 0.285714285714286 WHEN ("Calibrated_Model_1"."ScoreOrProba_1" < 0.5) THEN ("Calibrated_Model_1"."ScoreOrProba_1" - 0.2) * 0.0 + 0.29709595959596 WHEN ("Calibrated_Model_1"."ScoreOrProba_1" < 0.513513513513514) THEN ("Calibrated_Model_1"."ScoreOrProba_1" - 0.5) * 6.476437451437471 + 0.29709595959596 WHEN ("Calibrated_Model_1"."ScoreOrProba_1" < 0.685714285714286) THEN ("Calibrated_Model_1"."ScoreOrProba_1" - 0.513513513513514) * 0.048589047644984 + 0.384615384615385 WHEN ("Calibrated_Model_1"."ScoreOrProba_1" < 1.0) THEN ("Calibrated_Model_1"."ScoreOrProba_1" - 0.685714285714286) * 0.0 + 0.392982456140351 ELSE 0.392982456140351 END AS "Proba_1", CASE WHEN ("Calibrated_Model_1"."ScoreOrProba_2" < 0.0) THEN 0.095238095238095 WHEN ("Calibrated_Model_1"."ScoreOrProba_2" < 0.03448275862069) THEN ("Calibrated_Model_1"."ScoreOrProba_2" - 0.0) * 2.694689009820589 + 0.095238095238095 WHEN ("Calibrated_Model_1"."ScoreOrProba_2" < 0.264705882352941) THEN ("Calibrated_Model_1"."ScoreOrProba_2" - 0.03448275862069) * 0.0 + 0.188158405921564 WHEN ("Calibrated_Model_1"."ScoreOrProba_2" < 0.394736842105263) THEN ("Calibrated_Model_1"."ScoreOrProba_2" - 0.264705882352941) * 0.272019878269878 + 0.188158405921564 WHEN ("Calibrated_Model_1"."ScoreOrProba_2" < 0.5) THEN ("Calibrated_Model_1"."ScoreOrProba_2" - 0.394736842105263) * 0.0 + 0.223529411764706 WHEN ("Calibrated_Model_1"."ScoreOrProba_2" < 0.6) THEN ("Calibrated_Model_1"."ScoreOrProba_2" - 0.5) * 0.264705882352941 + 0.223529411764706 WHEN ("Calibrated_Model_1"."ScoreOrProba_2" < 0.75) THEN ("Calibrated_Model_1"."ScoreOrProba_2" - 0.6) * 1.296296296296296 + 0.25 WHEN ("Calibrated_Model_1"."ScoreOrProba_2" < 0.844444444444444) THEN ("Calibrated_Model_1"."ScoreOrProba_2" - 0.75) * 1.911764705882353 + 0.444444444444444 WHEN ("Calibrated_Model_1"."ScoreOrProba_2" < 1.0) THEN ("Calibrated_Model_1"."ScoreOrProba_2" - 0.844444444444444) * 0.267857142857143 + 0.625 ELSE 0.666666666666667 END AS "Proba_2", CASE WHEN ("Calibrated_Model_1"."ScoreOrProba_3" < 0.0) THEN 0.094497607655502 WHEN ("Calibrated_Model_1"."ScoreOrProba_3" < 0.020408163265306) THEN ("Calibrated_Model_1"."ScoreOrProba_3" - 0.0) * 0.0 + 0.094497607655502 WHEN ("Calibrated_Model_1"."ScoreOrProba_3" < 0.0625) THEN ("Calibrated_Model_1"."ScoreOrProba_3" - 0.020408163265306) * 2.35340439110774 + 0.094497607655502 WHEN ("Calibrated_Model_1"."ScoreOrProba_3" < 0.333333333333333) THEN ("Calibrated_Model_1"."ScoreOrProba_3" - 0.0625) * 0.0 + 0.193556721056721 WHEN ("Calibrated_Model_1"."ScoreOrProba_3" < 0.526315789473684) THEN ("Calibrated_Model_1"."ScoreOrProba_3" - 0.333333333333333) * 0.755086166062102 + 0.193556721056721 WHEN ("Calibrated_Model_1"."ScoreOrProba_3" < 0.725490196078431) THEN ("Calibrated_Model_1"."ScoreOrProba_3" - 0.526315789473684) * 0.0 + 0.339275103980986 WHEN ("Calibrated_Model_1"."ScoreOrProba_3" < 0.818181818181818) THEN ("Calibrated_Model_1"."ScoreOrProba_3" - 0.725490196078431) * 3.737545787545785 + 0.339275103980986 WHEN ("Calibrated_Model_1"."ScoreOrProba_3" < 1.0) THEN ("Calibrated_Model_1"."ScoreOrProba_3" - 0.818181818181818) * 0.0 + 0.685714285714286 ELSE 0.685714285714286 END AS "Proba_3" 
FROM "Calibrated_Model_1"), 
"Normalized_Probas_1" AS 
(SELECT isotonic_cte_1."KEY" AS "KEY", isotonic_cte_1."Proba_0" / (isotonic_cte_1."Proba_0" + isotonic_cte_1."Proba_1" + isotonic_cte_1."Proba_2" + isotonic_cte_1."Proba_3") AS "Proba_0", isotonic_cte_1."Proba_1" / (isotonic_cte_1."Proba_0" + isotonic_cte_1."Proba_1" + isotonic_cte_1."Proba_2" + isotonic_cte_1."Proba_3") AS "Proba_1", isotonic_cte_1."Proba_2" / (isotonic_cte_1."Proba_0" + isotonic_cte_1."Proba_1" + isotonic_cte_1."Proba_2" + isotonic_cte_1."Proba_3") AS "Proba_2", isotonic_cte_1."Proba_3" / (isotonic_cte_1."Proba_0" + isotonic_cte_1."Proba_1" + isotonic_cte_1."Proba_2" + isotonic_cte_1."Proba_3") AS "Proba_3" 
FROM isotonic_cte_1), 
"DT_node_lookup_2" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_64" <= -0.099118202924728) THEN CASE WHEN ("ADS"."Feature_84" <= -5.753730773925781) THEN CASE WHEN ("ADS"."Feature_38" <= 1.733831882476807) THEN CASE WHEN ("ADS"."Feature_76" <= -1.830063581466675) THEN 4 ELSE 5 END ELSE CASE WHEN ("ADS"."Feature_17" <= -1.889402747154236) THEN CASE WHEN ("ADS"."Feature_59" <= 0.080441609025002) THEN 8 ELSE 9 END ELSE CASE WHEN ("ADS"."Feature_54" <= -4.692051410675049) THEN 11 ELSE 12 END END END ELSE CASE WHEN ("ADS"."Feature_8" <= 1.666485548019409) THEN CASE WHEN ("ADS"."Feature_17" <= -0.776417016983032) THEN CASE WHEN ("ADS"."Feature_34" <= -1.83215582370758) THEN 16 ELSE 17 END ELSE CASE WHEN ("ADS"."Feature_31" <= -2.449028968811035) THEN 19 ELSE 20 END END ELSE CASE WHEN ("ADS"."Feature_15" <= -2.989201545715332) THEN CASE WHEN ("ADS"."Feature_47" <= 4.589432716369629) THEN 23 ELSE 24 END ELSE CASE WHEN ("ADS"."Feature_92" <= -2.82370924949646) THEN 26 ELSE 27 END END END END ELSE CASE WHEN ("ADS"."Feature_9" <= 2.063434600830078) THEN CASE WHEN ("ADS"."Feature_25" <= -0.351886570453644) THEN CASE WHEN ("ADS"."Feature_34" <= 4.06359052658081) THEN CASE WHEN ("ADS"."Feature_84" <= 2.732713222503662) THEN 32 ELSE 33 END ELSE CASE WHEN ("ADS"."Feature_32" <= 1.018109202384949) THEN 35 ELSE 36 END END ELSE CASE WHEN ("ADS"."Feature_16" <= -1.843178510665894) THEN CASE WHEN ("ADS"."Feature_52" <= -2.76525354385376) THEN 39 ELSE 40 END ELSE CASE WHEN ("ADS"."Feature_59" <= 0.301548898220062) THEN 42 ELSE 43 END END END ELSE CASE WHEN ("ADS"."Feature_37" <= -0.215552389621735) THEN CASE WHEN ("ADS"."Feature_70" <= 0.122750468552113) THEN CASE WHEN ("ADS"."Feature_87" <= -3.143617868423462) THEN 47 ELSE 48 END ELSE CASE WHEN ("ADS"."Feature_43" <= 4.018385410308838) THEN 50 ELSE 51 END END ELSE CASE WHEN ("ADS"."Feature_16" <= -0.037594497203827) THEN CASE WHEN ("ADS"."Feature_90" <= -13.732048034667969) THEN 54 ELSE 55 END ELSE CASE WHEN ("ADS"."Feature_88" <= 2.198800563812256) THEN 57 ELSE 58 END END END END END AS node_id_2 
FROM "FourClass_100" AS "ADS"), 
"DT_node_data_2" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values"."threshold" AS FLOAT) AS "threshold", CAST("Values"."count" AS FLOAT) AS "count", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Proba_0" AS FLOAT) AS "Proba_0", CAST("Values"."LogProba_0" AS FLOAT) AS "LogProba_0", CAST("Values"."Proba_1" AS FLOAT) AS "Proba_1", CAST("Values"."LogProba_1" AS FLOAT) AS "LogProba_1", CAST("Values"."Proba_2" AS FLOAT) AS "Proba_2", CAST("Values"."LogProba_2" AS FLOAT) AS "LogProba_2", CAST("Values"."Proba_3" AS FLOAT) AS "Proba_3", CAST("Values"."LogProba_3" AS FLOAT) AS "LogProba_3", CAST("Values"."Decision" AS FLOAT) AS "Decision", CAST("Values"."DecisionProba" AS FLOAT) AS "DecisionProba" 
FROM (SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 4 AS depth, 3 AS parent_id, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0 AS "Decision", 1.0 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 15 AS "count", 4 AS depth, 3 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 1.0 AS "Proba_3", 0.0 AS "LogProba_3", 3 AS "Decision", 1.0 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS "count", 5 AS depth, 7 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 1 AS "Decision", 1.0 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS "count", 5 AS depth, 7 AS parent_id, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0 AS "Decision", 1.0 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS "count", 5 AS depth, 10 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 1.0 AS "Proba_3", 0.0 AS "LogProba_3", 3 AS "Decision", 1.0 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 5 AS "count", 5 AS depth, 10 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 2 AS "Decision", 1.0 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 26 AS "count", 5 AS depth, 15 AS parent_id, 0.269230769230769 AS "Proba_0", -1.312186388966169 AS "LogProba_0", 0.461538461538462 AS "Proba_1", -0.773189888233482 AS "LogProba_1", 0.153846153846154 AS "Proba_2", -1.871802176901591 AS "LogProba_2", 0.115384615384615 AS "Proba_3", -2.159484249353372 AS "LogProba_3", 1 AS "Decision", 0.461538461538462 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 55 AS "count", 5 AS depth, 15 AS parent_id, 0.818181818181818 AS "Proba_0", -0.200670695462151 AS "LogProba_0", 0.127272727272727 AS "Proba_1", -2.061423036177158 AS "LogProba_1", 0.018181818181818 AS "Proba_2", -4.007333185232471 AS "LogProba_2", 0.036363636363636 AS "Proba_3", -3.314186004672526 AS "LogProba_3", 0 AS "Decision", 0.818181818181818 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 27 AS "count", 5 AS depth, 18 AS parent_id, 0.592592592592592 AS "Proba_0", -0.523248143764548 AS "LogProba_0", 0.111111111111111 AS "Proba_1", -2.19722457733622 AS "LogProba_1", 0.185185185185185 AS "Proba_2", -1.686398953570229 AS "LogProba_2", 0.111111111111111 AS "Proba_3", -2.19722457733622 AS "LogProba_3", 0 AS "Decision", 0.592592592592592 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 73 AS "count", 5 AS depth, 18 AS parent_id, 0.178082191780822 AS "Proba_0", -1.725510083686854 AS "LogProba_0", 0.424657534246575 AS "Proba_1", -0.856472236663245 AS "LogProba_1", 0.26027397260274 AS "Proba_2", -1.346020461981951 AS "LogProba_2", 0.136986301369863 AS "Proba_3", -1.987874348154346 AS "LogProba_3", 1 AS "Decision", 0.424657534246575 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 21 AS "count", 5 AS depth, 22 AS parent_id, 0.142857142857143 AS "Proba_0", -1.945910149055314 AS "LogProba_0", 0.047619047619048 AS "Proba_1", -3.044522437723423 AS "LogProba_1", 0.666666666666667 AS "Proba_2", -0.405465108108164 AS "LogProba_2", 0.142857142857143 AS "Proba_3", -1.945910149055314 AS "LogProba_3", 2 AS "Decision", 0.666666666666667 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 4 AS "count", 5 AS depth, 22 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 1 AS "Decision", 1.0 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 25 AS "count", 5 AS depth, 25 AS parent_id, 0.04 AS "Proba_0", -3.2188758248682 AS "LogProba_0", 0.8 AS "Proba_1", -0.22314355131421 AS "LogProba_1", 0.08 AS "Proba_2", -2.525728644308256 AS "LogProba_2", 0.08 AS "Proba_3", -2.525728644308256 AS "LogProba_3", 1 AS "Decision", 0.8 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 63 AS "count", 5 AS depth, 25 AS parent_id, 0.206349206349206 AS "Proba_0", -1.578185368929996 AS "LogProba_0", 0.349206349206349 AS "Proba_1", -1.052092273033217 AS "LogProba_1", 0.079365079365079 AS "Proba_2", -2.533696813957432 AS "LogProba_2", 0.365079365079365 AS "Proba_3", -1.007640510462383 AS "LogProba_3", 3 AS "Decision", 0.365079365079365 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 32 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 69 AS "count", 5 AS depth, 31 AS parent_id, 0.057971014492754 AS "Proba_0", -2.847812143477369 AS "LogProba_0", 0.130434782608696 AS "Proba_1", -2.03688192726104 AS "LogProba_1", 0.072463768115942 AS "Proba_2", -2.624668592163159 AS "LogProba_2", 0.739130434782609 AS "Proba_3", -0.302280871872934 AS "LogProba_3", 3 AS "Decision", 0.739130434782609 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 33 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 18 AS "count", 5 AS depth, 31 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.333333333333333 AS "Proba_1", -1.09861228866811 AS "LogProba_1", 0.444444444444444 AS "Proba_2", -0.810930216216329 AS "LogProba_2", 0.222222222222222 AS "Proba_3", -1.504077396776274 AS "LogProba_3", 2 AS "Decision", 0.444444444444444 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 35 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 5 AS "count", 5 AS depth, 34 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 1 AS "Decision", 1.0 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 36 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 5 AS "count", 5 AS depth, 34 AS parent_id, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0 AS "Decision", 1.0 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 39 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 9 AS "count", 5 AS depth, 38 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.111111111111111 AS "Proba_2", -2.19722457733622 AS "LogProba_2", 0.888888888888889 AS "Proba_3", -0.117783035656384 AS "LogProba_3", 3 AS "Decision", 0.888888888888889 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 40 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 14 AS "count", 5 AS depth, 38 AS parent_id, 0.357142857142857 AS "Proba_0", -1.029619417181158 AS "LogProba_0", 0.357142857142857 AS "Proba_1", -1.029619417181158 AS "LogProba_1", 0.071428571428571 AS "Proba_2", -2.639057329615259 AS "LogProba_2", 0.214285714285714 AS "Proba_3", -1.540445040947149 AS "LogProba_3", 0 AS "Decision", 0.357142857142857 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 42 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 49 AS "count", 5 AS depth, 41 AS parent_id, 0.163265306122449 AS "Proba_0", -1.812378756430791 AS "LogProba_0", 0.061224489795918 AS "Proba_1", -2.793208009442517 AS "LogProba_1", 0.653061224489796 AS "Proba_2", -0.4260843953109 AS "LogProba_2", 0.122448979591837 AS "Proba_3", -2.100060828882572 AS "LogProba_3", 2 AS "Decision", 0.653061224489796 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 43 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 27 AS "count", 5 AS depth, 41 AS parent_id, 0.037037037037037 AS "Proba_0", -3.295836866004329 AS "LogProba_0", 0.37037037037037 AS "Proba_1", -0.993251773010284 AS "LogProba_1", 0.222222222222222 AS "Proba_2", -1.504077396776274 AS "LogProba_2", 0.37037037037037 AS "Proba_3", -0.993251773010284 AS "LogProba_3", 1 AS "Decision", 0.37037037037037 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 47 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 4 AS "count", 5 AS depth, 46 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.5 AS "Proba_1", -0.693147180559945 AS "LogProba_1", 0.25 AS "Proba_2", -1.38629436111989 AS "LogProba_2", 0.25 AS "Proba_3", -1.38629436111989 AS "LogProba_3", 1 AS "Decision", 0.5 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 48 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 18 AS "count", 5 AS depth, 46 AS parent_id, 0.888888888888889 AS "Proba_0", -0.117783035656384 AS "LogProba_0", 0.055555555555556 AS "Proba_1", -2.890371757896165 AS "LogProba_1", 0.055555555555556 AS "Proba_2", -2.890371757896165 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0 AS "Decision", 0.888888888888889 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 50 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 8 AS "count", 5 AS depth, 49 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 2 AS "Decision", 1.0 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 51 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 3 AS "count", 5 AS depth, 49 AS parent_id, 0.666666666666667 AS "Proba_0", -0.405465108108164 AS "LogProba_0", 0.333333333333333 AS "Proba_1", -1.09861228866811 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0 AS "Decision", 0.666666666666667 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 54 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 4 AS "count", 5 AS depth, 53 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 1.0 AS "Proba_3", 0.0 AS "LogProba_3", 3 AS "Decision", 1.0 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 55 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 18 AS "count", 5 AS depth, 53 AS parent_id, 0.277777777777778 AS "Proba_0", -1.280933845462064 AS "LogProba_0", 0.222222222222222 AS "Proba_1", -1.504077396776274 AS "LogProba_1", 0.444444444444444 AS "Proba_2", -0.810930216216329 AS "LogProba_2", 0.055555555555556 AS "Proba_3", -2.890371757896165 AS "LogProba_3", 2 AS "Decision", 0.444444444444444 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 57 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 27 AS "count", 5 AS depth, 56 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.037037037037037 AS "Proba_1", -3.295836866004329 AS "LogProba_1", 0.962962962962963 AS "Proba_2", -0.037740327982847 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 2 AS "Decision", 0.962962962962963 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 58 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 56 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 1.0 AS "Proba_3", 0.0 AS "LogProba_3", 3 AS "Decision", 1.0 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte) AS "Values"), 
"DT_Output_2" AS 
(SELECT "DT_node_lookup_2"."KEY" AS "KEY", "DT_node_lookup_2".node_id_2 AS node_id_2, "DT_node_data_2".node_id AS node_id, "DT_node_data_2".feature AS feature, "DT_node_data_2"."threshold" AS "threshold", "DT_node_data_2"."count" AS "count", "DT_node_data_2".depth AS depth, "DT_node_data_2".parent_id AS parent_id, "DT_node_data_2"."Proba_0" AS "Proba_0", "DT_node_data_2"."LogProba_0" AS "LogProba_0", "DT_node_data_2"."Proba_1" AS "Proba_1", "DT_node_data_2"."LogProba_1" AS "LogProba_1", "DT_node_data_2"."Proba_2" AS "Proba_2", "DT_node_data_2"."LogProba_2" AS "LogProba_2", "DT_node_data_2"."Proba_3" AS "Proba_3", "DT_node_data_2"."LogProba_3" AS "LogProba_3", "DT_node_data_2"."Decision" AS "Decision", "DT_node_data_2"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup_2" LEFT OUTER JOIN "DT_node_data_2" ON "DT_node_lookup_2".node_id_2 = "DT_node_data_2".node_id), 
"Calibrated_Model_2" AS 
(SELECT "DT_Output_2"."KEY" AS "KEY", CAST(NULL AS FLOAT) AS "Score_0", CAST(NULL AS FLOAT) AS "Score_1", CAST(NULL AS FLOAT) AS "Score_2", CAST(NULL AS FLOAT) AS "Score_3", "DT_Output_2"."Proba_0" AS "Proba_0", "DT_Output_2"."Proba_1" AS "Proba_1", "DT_Output_2"."Proba_2" AS "Proba_2", "DT_Output_2"."Proba_3" AS "Proba_3", "DT_Output_2"."LogProba_0" AS "LogProba_0", "DT_Output_2"."LogProba_1" AS "LogProba_1", "DT_Output_2"."LogProba_2" AS "LogProba_2", "DT_Output_2"."LogProba_3" AS "LogProba_3", CAST(NULL AS BIGINT) AS "Decision", CAST(NULL AS FLOAT) AS "DecisionProba", coalesce(CAST(NULL AS FLOAT), "DT_Output_2"."Proba_0") AS "ScoreOrProba_0", coalesce(CAST(NULL AS FLOAT), "DT_Output_2"."Proba_1") AS "ScoreOrProba_1", coalesce(CAST(NULL AS FLOAT), "DT_Output_2"."Proba_2") AS "ScoreOrProba_2", coalesce(CAST(NULL AS FLOAT), "DT_Output_2"."Proba_3") AS "ScoreOrProba_3" 
FROM "DT_Output_2"), 
isotonic_cte_2 AS 
(SELECT "Calibrated_Model_2"."KEY" AS "KEY", CASE WHEN ("Calibrated_Model_2"."ScoreOrProba_0" < 0.0) THEN 0.115574348132488 WHEN ("Calibrated_Model_2"."ScoreOrProba_0" < 0.04) THEN ("Calibrated_Model_2"."ScoreOrProba_0" - 0.0) * 0.0 + 0.115574348132488 WHEN ("Calibrated_Model_2"."ScoreOrProba_0" < 0.057971014492754) THEN ("Calibrated_Model_2"."ScoreOrProba_0" - 0.04) * 1.915620950692218 + 0.115574348132488 WHEN ("Calibrated_Model_2"."ScoreOrProba_0" < 0.142857142857143) THEN ("Calibrated_Model_2"."ScoreOrProba_0" - 0.057971014492754) * 1.035165879884605 + 0.15 WHEN ("Calibrated_Model_2"."ScoreOrProba_0" < 0.277777777777778) THEN ("Calibrated_Model_2"."ScoreOrProba_0" - 0.142857142857143) * 0.0 + 0.23787122375832 WHEN ("Calibrated_Model_2"."ScoreOrProba_0" < 0.357142857142857) THEN ("Calibrated_Model_2"."ScoreOrProba_0" - 0.277777777777778) * 0.248277126099707 + 0.23787122375832 WHEN ("Calibrated_Model_2"."ScoreOrProba_0" < 0.592592592592592) THEN ("Calibrated_Model_2"."ScoreOrProba_0" - 0.357142857142857) * 0.0 + 0.257575757575758 WHEN ("Calibrated_Model_2"."ScoreOrProba_0" < 0.818181818181818) THEN ("Calibrated_Model_2"."ScoreOrProba_0" - 0.592592592592592) * 0.224722253394681 + 0.257575757575758 WHEN ("Calibrated_Model_2"."ScoreOrProba_0" < 0.888888888888889) THEN ("Calibrated_Model_2"."ScoreOrProba_0" - 0.818181818181818) * 0.0 + 0.308270676691729 ELSE 0.308270676691729 END AS "Proba_0", CASE WHEN ("Calibrated_Model_2"."ScoreOrProba_1" < 0.0) THEN 0.0625 WHEN ("Calibrated_Model_2"."ScoreOrProba_1" < 0.037037037037037) THEN ("Calibrated_Model_2"."ScoreOrProba_1" - 0.0) * 2.0625 + 0.0625 WHEN ("Calibrated_Model_2"."ScoreOrProba_1" < 0.055555555555556) THEN ("Calibrated_Model_2"."ScoreOrProba_1" - 0.037037037037037) * 0.0 + 0.138888888888889 WHEN ("Calibrated_Model_2"."ScoreOrProba_1" < 0.061224489795918) THEN ("Calibrated_Model_2"."ScoreOrProba_1" - 0.055555555555556) * 14.222392344497601 + 0.138888888888889 WHEN ("Calibrated_Model_2"."ScoreOrProba_1" < 0.130434782608696) THEN ("Calibrated_Model_2"."ScoreOrProba_1" - 0.061224489795918) * 0.0 + 0.219514695830485 WHEN ("Calibrated_Model_2"."ScoreOrProba_1" < 0.222222222222222) THEN ("Calibrated_Model_2"."ScoreOrProba_1" - 0.130434782608696) * 0.144654998740872 + 0.219514695830485 WHEN ("Calibrated_Model_2"."ScoreOrProba_1" < 0.37037037037037) THEN ("Calibrated_Model_2"."ScoreOrProba_1" - 0.222222222222222) * 0.0 + 0.232792207792208 WHEN ("Calibrated_Model_2"."ScoreOrProba_1" < 0.424657534246575) THEN ("Calibrated_Model_2"."ScoreOrProba_1" - 0.37037037037037) * 1.158777000810464 + 0.232792207792208 WHEN ("Calibrated_Model_2"."ScoreOrProba_1" < 0.5) THEN ("Calibrated_Model_2"."ScoreOrProba_1" - 0.424657534246575) * 0.0 + 0.295698924731183 WHEN ("Calibrated_Model_2"."ScoreOrProba_1" < 0.8) THEN ("Calibrated_Model_2"."ScoreOrProba_1" - 0.5) * 0.514336917562724 + 0.295698924731183 WHEN ("Calibrated_Model_2"."ScoreOrProba_1" < 1.0) THEN ("Calibrated_Model_2"."ScoreOrProba_1" - 0.8) * 0.0 + 0.45 ELSE 0.45 END AS "Proba_1", CASE WHEN ("Calibrated_Model_2"."ScoreOrProba_2" < 0.0) THEN 0.216469745793054 WHEN ("Calibrated_Model_2"."ScoreOrProba_2" < 0.08) THEN ("Calibrated_Model_2"."ScoreOrProba_2" - 0.0) * 0.0 + 0.216469745793054 WHEN ("Calibrated_Model_2"."ScoreOrProba_2" < 0.111111111111111) THEN ("Calibrated_Model_2"."ScoreOrProba_2" - 0.08) * 4.058357902165686 + 0.216469745793054 WHEN ("Calibrated_Model_2"."ScoreOrProba_2" < 1.0) THEN ("Calibrated_Model_2"."ScoreOrProba_2" - 0.111111111111111) * 0.0 + 0.342729769415986 ELSE 0.342729769415986 END AS "Proba_2", CASE WHEN ("Calibrated_Model_2"."ScoreOrProba_3" < 0.0) THEN 0.188995215311005 WHEN ("Calibrated_Model_2"."ScoreOrProba_3" < 0.036363636363636) THEN ("Calibrated_Model_2"."ScoreOrProba_3" - 0.0) * 0.0 + 0.188995215311005 WHEN ("Calibrated_Model_2"."ScoreOrProba_3" < 0.055555555555556) THEN ("Calibrated_Model_2"."ScoreOrProba_3" - 0.036363636363636) * 0.820124225188246 + 0.188995215311005 WHEN ("Calibrated_Model_2"."ScoreOrProba_3" < 0.142857142857143) THEN ("Calibrated_Model_2"."ScoreOrProba_3" - 0.055555555555556) * 0.0 + 0.204734973168153 WHEN ("Calibrated_Model_2"."ScoreOrProba_3" < 0.214285714285714) THEN ("Calibrated_Model_2"."ScoreOrProba_3" - 0.142857142857143) * 1.022599264534748 + 0.204734973168153 WHEN ("Calibrated_Model_2"."ScoreOrProba_3" < 0.25) THEN ("Calibrated_Model_2"."ScoreOrProba_3" - 0.214285714285714) * 0.0 + 0.277777777777778 WHEN ("Calibrated_Model_2"."ScoreOrProba_3" < 0.365079365079365) THEN ("Calibrated_Model_2"."ScoreOrProba_3" - 0.25) * 0.322884012539186 + 0.277777777777778 WHEN ("Calibrated_Model_2"."ScoreOrProba_3" < 0.37037037037037) THEN ("Calibrated_Model_2"."ScoreOrProba_3" - 0.365079365079365) * 0.0 + 0.314935064935065 WHEN ("Calibrated_Model_2"."ScoreOrProba_3" < 0.739130434782609) THEN ("Calibrated_Model_2"."ScoreOrProba_3" - 0.37037037037037) * 0.125219758407531 + 0.314935064935065 WHEN ("Calibrated_Model_2"."ScoreOrProba_3" < 1.0) THEN ("Calibrated_Model_2"."ScoreOrProba_3" - 0.739130434782609) * 0.0 + 0.361111111111111 ELSE 0.361111111111111 END AS "Proba_3" 
FROM "Calibrated_Model_2"), 
"Normalized_Probas_2" AS 
(SELECT isotonic_cte_2."KEY" AS "KEY", isotonic_cte_2."Proba_0" / (isotonic_cte_2."Proba_0" + isotonic_cte_2."Proba_1" + isotonic_cte_2."Proba_2" + isotonic_cte_2."Proba_3") AS "Proba_0", isotonic_cte_2."Proba_1" / (isotonic_cte_2."Proba_0" + isotonic_cte_2."Proba_1" + isotonic_cte_2."Proba_2" + isotonic_cte_2."Proba_3") AS "Proba_1", isotonic_cte_2."Proba_2" / (isotonic_cte_2."Proba_0" + isotonic_cte_2."Proba_1" + isotonic_cte_2."Proba_2" + isotonic_cte_2."Proba_3") AS "Proba_2", isotonic_cte_2."Proba_3" / (isotonic_cte_2."Proba_0" + isotonic_cte_2."Proba_1" + isotonic_cte_2."Proba_2" + isotonic_cte_2."Proba_3") AS "Proba_3" 
FROM isotonic_cte_2), 
"DT_node_lookup_3" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_31" <= 0.869181334972382) THEN CASE WHEN ("ADS"."Feature_34" <= 3.632711887359619) THEN CASE WHEN ("ADS"."Feature_64" <= -2.385992288589478) THEN CASE WHEN ("ADS"."Feature_27" <= 2.247759819030762) THEN CASE WHEN ("ADS"."Feature_53" <= 3.399199485778808) THEN 5 ELSE 6 END ELSE CASE WHEN ("ADS"."Feature_69" <= 2.27402400970459) THEN 8 ELSE 9 END END ELSE CASE WHEN ("ADS"."Feature_53" <= 5.256118774414062) THEN CASE WHEN ("ADS"."Feature_9" <= 1.079104661941528) THEN 12 ELSE 13 END ELSE CASE WHEN ("ADS"."Feature_48" <= -2.082662582397461) THEN 15 ELSE 16 END END END ELSE CASE WHEN ("ADS"."Feature_31" <= -8.03959846496582) THEN 18 ELSE CASE WHEN ("ADS"."Feature_85" <= -4.101077079772949) THEN CASE WHEN ("ADS"."Feature_32" <= 0.483491778373718) THEN 21 ELSE 22 END ELSE CASE WHEN ("ADS"."Feature_8" <= 1.672619462013245) THEN 24 ELSE 25 END END END END ELSE CASE WHEN ("ADS"."Feature_50" <= -1.564562916755676) THEN CASE WHEN ("ADS"."Feature_68" <= -0.397998094558716) THEN CASE WHEN ("ADS"."Feature_79" <= -0.291501939296722) THEN CASE WHEN ("ADS"."Feature_33" <= 0.248087331652641) THEN 30 ELSE 31 END ELSE CASE WHEN ("ADS"."Feature_28" <= 4.127140998840332) THEN 33 ELSE 34 END END ELSE CASE WHEN ("ADS"."Feature_16" <= -3.479151487350464) THEN 36 ELSE CASE WHEN ("ADS"."Feature_96" <= 0.412875294685364) THEN 38 ELSE 39 END END END ELSE CASE WHEN ("ADS"."Feature_64" <= 4.786234378814697) THEN CASE WHEN ("ADS"."Feature_43" <= -0.59915280342102) THEN CASE WHEN ("ADS"."Feature_38" <= -3.312044382095337) THEN 43 ELSE 44 END ELSE CASE WHEN ("ADS"."Feature_39" <= -5.96095085144043) THEN 46 ELSE 47 END END ELSE CASE WHEN ("ADS"."Feature_17" <= 3.405032634735108) THEN CASE WHEN ("ADS"."Feature_43" <= 0.178122162818909) THEN 50 ELSE 51 END ELSE 52 END END END END AS node_id_2 
FROM "FourClass_100" AS "ADS"), 
"DT_node_data_3" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values"."threshold" AS FLOAT) AS "threshold", CAST("Values"."count" AS FLOAT) AS "count", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Proba_0" AS FLOAT) AS "Proba_0", CAST("Values"."LogProba_0" AS FLOAT) AS "LogProba_0", CAST("Values"."Proba_1" AS FLOAT) AS "Proba_1", CAST("Values"."LogProba_1" AS FLOAT) AS "LogProba_1", CAST("Values"."Proba_2" AS FLOAT) AS "Proba_2", CAST("Values"."LogProba_2" AS FLOAT) AS "LogProba_2", CAST("Values"."Proba_3" AS FLOAT) AS "Proba_3", CAST("Values"."LogProba_3" AS FLOAT) AS "LogProba_3", CAST("Values"."Decision" AS FLOAT) AS "Decision", CAST("Values"."DecisionProba" AS FLOAT) AS "DecisionProba" 
FROM (SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 47 AS "count", 5 AS depth, 4 AS parent_id, 0.595744680851064 AS "Proba_0", -0.517943091534855 AS "LogProba_0", 0.127659574468085 AS "Proba_1", -2.058388132482004 AS "LogProba_1", 0.127659574468085 AS "Proba_2", -2.058388132482004 AS "LogProba_2", 0.148936170212766 AS "Proba_3", -1.904237452654746 AS "LogProba_3", 0 AS "Decision", 0.595744680851064 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 17 AS "count", 5 AS depth, 4 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.352941176470588 AS "Proba_1", -1.041453874828161 AS "LogProba_1", 0.235294117647059 AS "Proba_2", -1.446918982936325 AS "LogProba_2", 0.411764705882353 AS "Proba_3", -0.887303195000903 AS "LogProba_3", 3 AS "Decision", 0.411764705882353 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 14 AS "count", 5 AS depth, 7 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 1 AS "Decision", 1.0 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 8 AS "count", 5 AS depth, 7 AS parent_id, 0.375 AS "Proba_0", -0.980829253011726 AS "LogProba_0", 0.25 AS "Proba_1", -1.38629436111989 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.375 AS "Proba_3", -0.980829253011726 AS "LogProba_3", 0 AS "Decision", 0.375 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 108 AS "count", 5 AS depth, 11 AS parent_id, 0.138888888888889 AS "Proba_0", -1.97408102602201 AS "LogProba_0", 0.12037037037037 AS "Proba_1", -2.117181869662683 AS "LogProba_1", 0.166666666666667 AS "Proba_2", -1.791759469228055 AS "LogProba_2", 0.574074074074074 AS "Proba_3", -0.554996842079128 AS "LogProba_3", 3 AS "Decision", 0.574074074074074 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 94 AS "count", 5 AS depth, 11 AS parent_id, 0.223404255319149 AS "Proba_0", -1.498772344546581 AS "LogProba_0", 0.127659574468085 AS "Proba_1", -2.058388132482004 AS "LogProba_1", 0.436170212765957 AS "Proba_2", -0.829722715565696 AS "LogProba_2", 0.212765957446808 AS "Proba_3", -1.547562508716013 AS "LogProba_3", 2 AS "Decision", 0.436170212765957 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 9 AS "count", 5 AS depth, 14 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.222222222222222 AS "Proba_1", -1.504077396776274 AS "LogProba_1", 0.333333333333333 AS "Proba_2", -1.09861228866811 AS "LogProba_2", 0.444444444444444 AS "Proba_3", -0.810930216216329 AS "LogProba_3", 3 AS "Decision", 0.444444444444444 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 21 AS "count", 5 AS depth, 14 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 2 AS "Decision", 1.0 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 4 AS "count", 3 AS depth, 17 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 1.0 AS "Proba_3", 0.0 AS "LogProba_3", 3 AS "Decision", 1.0 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 4 AS "count", 5 AS depth, 20 AS parent_id, 0.25 AS "Proba_0", -1.38629436111989 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.75 AS "Proba_3", -0.287682072451781 AS "LogProba_3", 3 AS "Decision", 0.75 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 4 AS "count", 5 AS depth, 20 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 1 AS "Decision", 1.0 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 42 AS "count", 5 AS depth, 23 AS parent_id, 0.880952380952381 AS "Proba_0", -0.126751705639144 AS "LogProba_0", 0.023809523809524 AS "Proba_1", -3.737669618283368 AS "LogProba_1", 0.071428571428571 AS "Proba_2", -2.639057329615259 AS "LogProba_2", 0.023809523809524 AS "Proba_3", -3.737669618283368 AS "LogProba_3", 0 AS "Decision", 0.880952380952381 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 15 AS "count", 5 AS depth, 23 AS parent_id, 0.333333333333333 AS "Proba_0", -1.09861228866811 AS "LogProba_0", 0.066666666666667 AS "Proba_1", -2.70805020110221 AS "LogProba_1", 0.333333333333333 AS "Proba_2", -1.09861228866811 AS "LogProba_2", 0.266666666666667 AS "Proba_3", -1.32175583998232 AS "LogProba_3", 0 AS "Decision", 0.333333333333333 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 8 AS "count", 5 AS depth, 29 AS parent_id, 0.125 AS "Proba_0", -2.079441541679836 AS "LogProba_0", 0.25 AS "Proba_1", -1.38629436111989 AS "LogProba_1", 0.375 AS "Proba_2", -0.980829253011726 AS "LogProba_2", 0.25 AS "Proba_3", -1.38629436111989 AS "LogProba_3", 2 AS "Decision", 0.375 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 31 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 9 AS "count", 5 AS depth, 29 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 1 AS "Decision", 1.0 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 33 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 13 AS "count", 5 AS depth, 32 AS parent_id, 0.076923076923077 AS "Proba_0", -2.564949357461536 AS "LogProba_0", 0.153846153846154 AS "Proba_1", -1.871802176901591 AS "LogProba_1", 0.076923076923077 AS "Proba_2", -2.564949357461536 AS "LogProba_2", 0.692307692307692 AS "Proba_3", -0.367724780125317 AS "LogProba_3", 3 AS "Decision", 0.692307692307692 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 34 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 5 AS "count", 5 AS depth, 32 AS parent_id, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0 AS "Decision", 1.0 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 36 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 5 AS "count", 4 AS depth, 35 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 1.0 AS "Proba_3", 0.0 AS "LogProba_3", 3 AS "Decision", 1.0 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 38 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 18 AS "count", 5 AS depth, 37 AS parent_id, 0.055555555555556 AS "Proba_0", -2.890371757896165 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.888888888888889 AS "Proba_2", -0.117783035656384 AS "LogProba_2", 0.055555555555556 AS "Proba_3", -2.890371757896165 AS "LogProba_3", 2 AS "Decision", 0.888888888888889 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 39 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 6 AS "count", 5 AS depth, 37 AS parent_id, 0.166666666666667 AS "Proba_0", -1.791759469228055 AS "LogProba_0", 0.166666666666667 AS "Proba_1", -1.791759469228055 AS "LogProba_1", 0.166666666666667 AS "Proba_2", -1.791759469228055 AS "LogProba_2", 0.5 AS "Proba_3", -0.693147180559945 AS "LogProba_3", 3 AS "Decision", 0.5 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 43 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 7 AS "count", 5 AS depth, 42 AS parent_id, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0 AS "Decision", 1.0 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 44 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 38 AS "count", 5 AS depth, 42 AS parent_id, 0.131578947368421 AS "Proba_0", -2.028148247292286 AS "LogProba_0", 0.421052631578947 AS "Proba_1", -0.864997437486605 AS "LogProba_1", 0.368421052631579 AS "Proba_2", -0.998528830111127 AS "LogProba_2", 0.078947368421053 AS "Proba_3", -2.538973871058276 AS "LogProba_3", 1 AS "Decision", 0.421052631578947 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 46 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 7 AS "count", 5 AS depth, 45 AS parent_id, 0.285714285714286 AS "Proba_0", -1.252762968495368 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.142857142857143 AS "Proba_2", -1.945910149055314 AS "LogProba_2", 0.571428571428571 AS "Proba_3", -0.559615787935423 AS "LogProba_3", 3 AS "Decision", 0.571428571428571 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 47 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 80 AS "count", 5 AS depth, 45 AS parent_id, 0.125 AS "Proba_0", -2.079441541679836 AS "LogProba_0", 0.725 AS "Proba_1", -0.321583624127462 AS "LogProba_1", 0.0875 AS "Proba_2", -2.436116485618568 AS "LogProba_2", 0.0625 AS "Proba_3", -2.772588722239781 AS "LogProba_3", 1 AS "Decision", 0.725 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 50 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 8 AS "count", 5 AS depth, 49 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.25 AS "Proba_2", -1.38629436111989 AS "LogProba_2", 0.75 AS "Proba_3", -0.287682072451781 AS "LogProba_3", 3 AS "Decision", 0.75 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 51 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 5 AS "count", 5 AS depth, 49 AS parent_id, 0.8 AS "Proba_0", -0.22314355131421 AS "LogProba_0", 0.2 AS "Proba_1", -1.6094379124341 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0 AS "Decision", 0.8 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 52 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 6 AS "count", 4 AS depth, 48 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 2 AS "Decision", 1.0 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte) AS "Values"), 
"DT_Output_3" AS 
(SELECT "DT_node_lookup_3"."KEY" AS "KEY", "DT_node_lookup_3".node_id_2 AS node_id_2, "DT_node_data_3".node_id AS node_id, "DT_node_data_3".feature AS feature, "DT_node_data_3"."threshold" AS "threshold", "DT_node_data_3"."count" AS "count", "DT_node_data_3".depth AS depth, "DT_node_data_3".parent_id AS parent_id, "DT_node_data_3"."Proba_0" AS "Proba_0", "DT_node_data_3"."LogProba_0" AS "LogProba_0", "DT_node_data_3"."Proba_1" AS "Proba_1", "DT_node_data_3"."LogProba_1" AS "LogProba_1", "DT_node_data_3"."Proba_2" AS "Proba_2", "DT_node_data_3"."LogProba_2" AS "LogProba_2", "DT_node_data_3"."Proba_3" AS "Proba_3", "DT_node_data_3"."LogProba_3" AS "LogProba_3", "DT_node_data_3"."Decision" AS "Decision", "DT_node_data_3"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup_3" LEFT OUTER JOIN "DT_node_data_3" ON "DT_node_lookup_3".node_id_2 = "DT_node_data_3".node_id), 
"Calibrated_Model_3" AS 
(SELECT "DT_Output_3"."KEY" AS "KEY", CAST(NULL AS FLOAT) AS "Score_0", CAST(NULL AS FLOAT) AS "Score_1", CAST(NULL AS FLOAT) AS "Score_2", CAST(NULL AS FLOAT) AS "Score_3", "DT_Output_3"."Proba_0" AS "Proba_0", "DT_Output_3"."Proba_1" AS "Proba_1", "DT_Output_3"."Proba_2" AS "Proba_2", "DT_Output_3"."Proba_3" AS "Proba_3", "DT_Output_3"."LogProba_0" AS "LogProba_0", "DT_Output_3"."LogProba_1" AS "LogProba_1", "DT_Output_3"."LogProba_2" AS "LogProba_2", "DT_Output_3"."LogProba_3" AS "LogProba_3", CAST(NULL AS BIGINT) AS "Decision", CAST(NULL AS FLOAT) AS "DecisionProba", coalesce(CAST(NULL AS FLOAT), "DT_Output_3"."Proba_0") AS "ScoreOrProba_0", coalesce(CAST(NULL AS FLOAT), "DT_Output_3"."Proba_1") AS "ScoreOrProba_1", coalesce(CAST(NULL AS FLOAT), "DT_Output_3"."Proba_2") AS "ScoreOrProba_2", coalesce(CAST(NULL AS FLOAT), "DT_Output_3"."Proba_3") AS "ScoreOrProba_3" 
FROM "DT_Output_3"), 
isotonic_cte_3 AS 
(SELECT "Calibrated_Model_3"."KEY" AS "KEY", CASE WHEN ("Calibrated_Model_3"."ScoreOrProba_0" < 0.0) THEN 0.166666666666667 WHEN ("Calibrated_Model_3"."ScoreOrProba_0" < 0.055555555555556) THEN ("Calibrated_Model_3"."ScoreOrProba_0" - 0.0) * 1.371302260957435 + 0.166666666666667 WHEN ("Calibrated_Model_3"."ScoreOrProba_0" < 0.285714285714286) THEN ("Calibrated_Model_3"."ScoreOrProba_0" - 0.055555555555556) * 0.0 + 0.242850125608746 WHEN ("Calibrated_Model_3"."ScoreOrProba_0" < 0.333333333333333) THEN ("Calibrated_Model_3"."ScoreOrProba_0" - 0.285714285714286) * 0.150147362216326 + 0.242850125608746 WHEN ("Calibrated_Model_3"."ScoreOrProba_0" < 0.375) THEN ("Calibrated_Model_3"."ScoreOrProba_0" - 0.333333333333333) * 0.4 + 0.25 WHEN ("Calibrated_Model_3"."ScoreOrProba_0" < 0.8) THEN ("Calibrated_Model_3"."ScoreOrProba_0" - 0.375) * 0.0 + 0.266666666666667 WHEN ("Calibrated_Model_3"."ScoreOrProba_0" < 0.880952380952381) THEN ("Calibrated_Model_3"."ScoreOrProba_0" - 0.8) * 1.85294117647059 + 0.266666666666667 WHEN ("Calibrated_Model_3"."ScoreOrProba_0" < 1.0) THEN ("Calibrated_Model_3"."ScoreOrProba_0" - 0.880952380952381) * 0.7 + 0.416666666666667 ELSE 0.5 END AS "Proba_0", CASE WHEN ("Calibrated_Model_3"."ScoreOrProba_1" < 0.0) THEN 0.166666666666667 WHEN ("Calibrated_Model_3"."ScoreOrProba_1" < 0.023809523809524) THEN ("Calibrated_Model_3"."ScoreOrProba_1" - 0.0) * 0.0 + 0.166666666666667 WHEN ("Calibrated_Model_3"."ScoreOrProba_1" < 0.066666666666667) THEN ("Calibrated_Model_3"."ScoreOrProba_1" - 0.023809523809524) * 0.847578347578348 + 0.166666666666667 WHEN ("Calibrated_Model_3"."ScoreOrProba_1" < 0.127659574468085) THEN ("Calibrated_Model_3"."ScoreOrProba_1" - 0.066666666666667) * 0.0 + 0.202991452991453 WHEN ("Calibrated_Model_3"."ScoreOrProba_1" < 0.153846153846154) THEN ("Calibrated_Model_3"."ScoreOrProba_1" - 0.127659574468085) * 1.158680555555554 + 0.202991452991453 WHEN ("Calibrated_Model_3"."ScoreOrProba_1" < 0.166666666666667) THEN ("Calibrated_Model_3"."ScoreOrProba_1" - 0.153846153846154) * 0.0 + 0.233333333333333 WHEN ("Calibrated_Model_3"."ScoreOrProba_1" < 0.2) THEN ("Calibrated_Model_3"."ScoreOrProba_1" - 0.166666666666667) * 8.998225377107358 + 0.233333333333333 WHEN ("Calibrated_Model_3"."ScoreOrProba_1" < 1.0) THEN ("Calibrated_Model_3"."ScoreOrProba_1" - 0.2) * 0.0 + 0.533274179236912 ELSE 0.533274179236912 END AS "Proba_1", CASE WHEN ("Calibrated_Model_3"."ScoreOrProba_2" < 0.0) THEN 0.0625 WHEN ("Calibrated_Model_3"."ScoreOrProba_2" < 0.071428571428571) THEN ("Calibrated_Model_3"."ScoreOrProba_2" - 0.0) * 0.291666666666667 + 0.0625 WHEN ("Calibrated_Model_3"."ScoreOrProba_2" < 0.076923076923077) THEN ("Calibrated_Model_3"."ScoreOrProba_2" - 0.071428571428571) * 0.0 + 0.083333333333333 WHEN ("Calibrated_Model_3"."ScoreOrProba_2" < 0.0875) THEN ("Calibrated_Model_3"."ScoreOrProba_2" - 0.076923076923077) * 6.645586297760218 + 0.083333333333333 WHEN ("Calibrated_Model_3"."ScoreOrProba_2" < 0.142857142857143) THEN ("Calibrated_Model_3"."ScoreOrProba_2" - 0.0875) * 0.0 + 0.153623188405797 WHEN ("Calibrated_Model_3"."ScoreOrProba_2" < 0.166666666666667) THEN ("Calibrated_Model_3"."ScoreOrProba_2" - 0.142857142857143) * 1.714492753623187 + 0.153623188405797 WHEN ("Calibrated_Model_3"."ScoreOrProba_2" < 0.25) THEN ("Calibrated_Model_3"."ScoreOrProba_2" - 0.166666666666667) * 0.0 + 0.194444444444444 WHEN ("Calibrated_Model_3"."ScoreOrProba_2" < 0.333333333333333) THEN ("Calibrated_Model_3"."ScoreOrProba_2" - 0.25) * 0.700432900432901 + 0.194444444444444 WHEN ("Calibrated_Model_3"."ScoreOrProba_2" < 0.375) THEN ("Calibrated_Model_3"."ScoreOrProba_2" - 0.333333333333333) * 0.0 + 0.252813852813853 WHEN ("Calibrated_Model_3"."ScoreOrProba_2" < 0.436170212765957) THEN ("Calibrated_Model_3"."ScoreOrProba_2" - 0.375) * 1.37895381313672 + 0.252813852813853 WHEN ("Calibrated_Model_3"."ScoreOrProba_2" < 1.0) THEN ("Calibrated_Model_3"."ScoreOrProba_2" - 0.436170212765957) * 0.0 + 0.337164750957854 ELSE 0.337164750957854 END AS "Proba_2", CASE WHEN ("Calibrated_Model_3"."ScoreOrProba_3" < 0.0) THEN 0.121579643851544 WHEN ("Calibrated_Model_3"."ScoreOrProba_3" < 0.571428571428571) THEN ("Calibrated_Model_3"."ScoreOrProba_3" - 0.0) * 0.0 + 0.121579643851544 WHEN ("Calibrated_Model_3"."ScoreOrProba_3" < 0.574074074074074) THEN ("Calibrated_Model_3"."ScoreOrProba_3" - 0.571428571428571) * 46.76597154719295 + 0.121579643851544 WHEN ("Calibrated_Model_3"."ScoreOrProba_3" < 0.75) THEN ("Calibrated_Model_3"."ScoreOrProba_3" - 0.574074074074074) * 0.0 + 0.245299145299145 WHEN ("Calibrated_Model_3"."ScoreOrProba_3" < 1.0) THEN ("Calibrated_Model_3"."ScoreOrProba_3" - 0.75) * 3.018803418803418 + 0.245299145299145 ELSE 1.0 END AS "Proba_3" 
FROM "Calibrated_Model_3"), 
"Normalized_Probas_3" AS 
(SELECT isotonic_cte_3."KEY" AS "KEY", isotonic_cte_3."Proba_0" / (isotonic_cte_3."Proba_0" + isotonic_cte_3."Proba_1" + isotonic_cte_3."Proba_2" + isotonic_cte_3."Proba_3") AS "Proba_0", isotonic_cte_3."Proba_1" / (isotonic_cte_3."Proba_0" + isotonic_cte_3."Proba_1" + isotonic_cte_3."Proba_2" + isotonic_cte_3."Proba_3") AS "Proba_1", isotonic_cte_3."Proba_2" / (isotonic_cte_3."Proba_0" + isotonic_cte_3."Proba_1" + isotonic_cte_3."Proba_2" + isotonic_cte_3."Proba_3") AS "Proba_2", isotonic_cte_3."Proba_3" / (isotonic_cte_3."Proba_0" + isotonic_cte_3."Proba_1" + isotonic_cte_3."Proba_2" + isotonic_cte_3."Proba_3") AS "Proba_3" 
FROM isotonic_cte_3)
 SELECT "CalProb_B0"."KEY", "CalProb_B0"."Proba_0", "CalProb_B0"."Proba_1", "CalProb_B0"."Proba_2", "CalProb_B0"."Proba_3" 
FROM (SELECT "CalProb_esu_0"."KEY" AS "KEY", "CalProb_esu_0"."Proba_0" AS "Proba_0", "CalProb_esu_0"."Proba_1" AS "Proba_1", "CalProb_esu_0"."Proba_2" AS "Proba_2", "CalProb_esu_0"."Proba_3" AS "Proba_3" 
FROM (SELECT "Normalized_Probas"."KEY" AS "KEY", "Normalized_Probas"."Proba_0" AS "Proba_0", "Normalized_Probas"."Proba_1" AS "Proba_1", "Normalized_Probas"."Proba_2" AS "Proba_2", "Normalized_Probas"."Proba_3" AS "Proba_3" 
FROM "Normalized_Probas" UNION ALL SELECT "Normalized_Probas_1"."KEY" AS "KEY", "Normalized_Probas_1"."Proba_0" AS "Proba_0", "Normalized_Probas_1"."Proba_1" AS "Proba_1", "Normalized_Probas_1"."Proba_2" AS "Proba_2", "Normalized_Probas_1"."Proba_3" AS "Proba_3" 
FROM "Normalized_Probas_1" UNION ALL SELECT "Normalized_Probas_2"."KEY" AS "KEY", "Normalized_Probas_2"."Proba_0" AS "Proba_0", "Normalized_Probas_2"."Proba_1" AS "Proba_1", "Normalized_Probas_2"."Proba_2" AS "Proba_2", "Normalized_Probas_2"."Proba_3" AS "Proba_3" 
FROM "Normalized_Probas_2" UNION ALL SELECT "Normalized_Probas_3"."KEY" AS "KEY", "Normalized_Probas_3"."Proba_0" AS "Proba_0", "Normalized_Probas_3"."Proba_1" AS "Proba_1", "Normalized_Probas_3"."Proba_2" AS "Proba_2", "Normalized_Probas_3"."Proba_3" AS "Proba_3" 
FROM "Normalized_Probas_3") AS "CalProb_esu_0") AS "CalProb_B0") AS "U"

-- Code For temporary table tmp_20180416233456_35aj3h_calp part 1/2. Create 


CREATE GLOBAL TEMPORARY TABLE tmp_20180416233456_35aj3h_calp  (
	"KEY" BIGINT, 
	"Proba_0" FLOAT, 
	"Proba_1" FLOAT, 
	"Proba_2" FLOAT, 
	"Proba_3" FLOAT
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table tmp_20180416233456_35aj3h_calp part 2/2. Populate

INSERT INTO tmp_20180416233456_35aj3h_calp ("KEY", "Proba_0", "Proba_1", "Proba_2", "Proba_3") SELECT "U"."KEY", "U"."Proba_0", "U"."Proba_1", "U"."Proba_2", "U"."Proba_3" 
FROM (SELECT "CalProb_Union"."KEY", "CalProb_Union"."Proba_0", "CalProb_Union"."Proba_1", "CalProb_Union"."Proba_2", "CalProb_Union"."Proba_3" 
FROM (SELECT "CalProb_EnsembleUnion"."KEY" AS "KEY", "CalProb_EnsembleUnion"."Proba_0" AS "Proba_0", "CalProb_EnsembleUnion"."Proba_1" AS "Proba_1", "CalProb_EnsembleUnion"."Proba_2" AS "Proba_2", "CalProb_EnsembleUnion"."Proba_3" AS "Proba_3" 
FROM (SELECT "CalProb_B0"."KEY" AS "KEY", "CalProb_B0"."Proba_0" AS "Proba_0", "CalProb_B0"."Proba_1" AS "Proba_1", "CalProb_B0"."Proba_2" AS "Proba_2", "CalProb_B0"."Proba_3" AS "Proba_3" 
FROM tmp_20180416233456_otngkp_calp AS "CalProb_B0") AS "CalProb_EnsembleUnion") AS "CalProb_Union") AS "U"

-- Code For temporary table tmp_20180416233456_m47ykf_calp part 1/2. Create 


CREATE GLOBAL TEMPORARY TABLE tmp_20180416233456_m47ykf_calp  (
	"KEY" BIGINT, 
	"Proba_0" FLOAT, 
	"Proba_1" FLOAT, 
	"Proba_2" FLOAT, 
	"Proba_3" FLOAT
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table tmp_20180416233456_m47ykf_calp part 2/2. Populate

INSERT INTO tmp_20180416233456_m47ykf_calp ("KEY", "Proba_0", "Proba_1", "Proba_2", "Proba_3") SELECT "U"."KEY", "U"."Proba_0", "U"."Proba_1", "U"."Proba_2", "U"."Proba_3" 
FROM (SELECT "CalProb_avg"."KEY", "CalProb_avg"."Proba_0", "CalProb_avg"."Proba_1", "CalProb_avg"."Proba_2", "CalProb_avg"."Proba_3" 
FROM (SELECT "T"."KEY" AS "KEY", CAST("T"."Proba_0" AS FLOAT) AS "Proba_0", CAST("T"."Proba_1" AS FLOAT) AS "Proba_1", CAST("T"."Proba_2" AS FLOAT) AS "Proba_2", CAST("T"."Proba_3" AS FLOAT) AS "Proba_3" 
FROM (SELECT "CalProb_Union"."KEY" AS "KEY", avg(CAST("CalProb_Union"."Proba_0" AS FLOAT)) AS "Proba_0", avg(CAST("CalProb_Union"."Proba_1" AS FLOAT)) AS "Proba_1", avg(CAST("CalProb_Union"."Proba_2" AS FLOAT)) AS "Proba_2", avg(CAST("CalProb_Union"."Proba_3" AS FLOAT)) AS "Proba_3" 
FROM tmp_20180416233456_35aj3h_calp AS "CalProb_Union" GROUP BY "CalProb_Union"."KEY") AS "T") AS "CalProb_avg") AS "U"

-- Model deployment code

WITH orig_cte AS 
(SELECT "CalProb_avg"."KEY" AS "KEY", CAST(NULL AS FLOAT) AS "Score_0", CAST(NULL AS FLOAT) AS "Score_1", CAST(NULL AS FLOAT) AS "Score_2", CAST(NULL AS FLOAT) AS "Score_3", "CalProb_avg"."Proba_0" AS "Proba_0", "CalProb_avg"."Proba_1" AS "Proba_1", "CalProb_avg"."Proba_2" AS "Proba_2", "CalProb_avg"."Proba_3" AS "Proba_3", CAST(NULL AS FLOAT) AS "LogProba_0", CAST(NULL AS FLOAT) AS "LogProba_1", CAST(NULL AS FLOAT) AS "LogProba_2", CAST(NULL AS FLOAT) AS "LogProba_3", CAST(NULL AS BIGINT) AS "Decision", CAST(NULL AS FLOAT) AS "DecisionProba" 
FROM tmp_20180416233456_m47ykf_calp AS "CalProb_avg"), 
score_class_union AS 
(SELECT scu."KEY_u" AS "KEY_u", scu."class" AS "class", scu."LogProba" AS "LogProba", scu."Proba" AS "Proba", scu."Score" AS "Score" 
FROM (SELECT orig_cte."KEY" AS "KEY_u", 0 AS "class", orig_cte."LogProba_0" AS "LogProba", orig_cte."Proba_0" AS "Proba", orig_cte."Score_0" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 1 AS "class", orig_cte."LogProba_1" AS "LogProba", orig_cte."Proba_1" AS "Proba", orig_cte."Score_1" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 2 AS "class", orig_cte."LogProba_2" AS "LogProba", orig_cte."Proba_2" AS "Proba", orig_cte."Score_2" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 3 AS "class", orig_cte."LogProba_3" AS "LogProba", orig_cte."Proba_3" AS "Proba", orig_cte."Score_3" AS "Score" 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte."KEY" AS "KEY", orig_cte."Score_0" AS "Score_0", orig_cte."Score_1" AS "Score_1", orig_cte."Score_2" AS "Score_2", orig_cte."Score_3" AS "Score_3", orig_cte."Proba_0" AS "Proba_0", orig_cte."Proba_1" AS "Proba_1", orig_cte."Proba_2" AS "Proba_2", orig_cte."Proba_3" AS "Proba_3", orig_cte."LogProba_0" AS "LogProba_0", orig_cte."LogProba_1" AS "LogProba_1", orig_cte."LogProba_2" AS "LogProba_2", orig_cte."LogProba_3" AS "LogProba_3", orig_cte."Decision" AS "Decision", orig_cte."DecisionProba" AS "DecisionProba", max_select."KEY_m" AS "KEY_m", max_select."max_Proba" AS "max_Proba" 
FROM orig_cte LEFT OUTER JOIN (SELECT score_class_union."KEY_u" AS "KEY_m", max(score_class_union."Proba") AS "max_Proba" 
FROM score_class_union GROUP BY score_class_union."KEY_u") AS max_select ON orig_cte."KEY" = max_select."KEY_m"), 
union_with_max AS 
(SELECT score_class_union."KEY_u" AS "KEY_u", score_class_union."class" AS "class", score_class_union."LogProba" AS "LogProba", score_class_union."Proba" AS "Proba", score_class_union."Score" AS "Score", score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Score_2" AS "Score_2", score_max."Score_3" AS "Score_3", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."Proba_2" AS "Proba_2", score_max."Proba_3" AS "Proba_3", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."LogProba_2" AS "LogProba_2", score_max."LogProba_3" AS "LogProba_3", score_max."Decision" AS "Decision", score_max."DecisionProba" AS "DecisionProba", score_max."KEY_m" AS "KEY_m", score_max."max_Proba" AS "max_Proba" 
FROM score_class_union LEFT OUTER JOIN score_max ON score_class_union."KEY_u" = score_max."KEY"), 
arg_max_cte AS 
(SELECT score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Score_2" AS "Score_2", score_max."Score_3" AS "Score_3", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."Proba_2" AS "Proba_2", score_max."Proba_3" AS "Proba_3", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."LogProba_2" AS "LogProba_2", score_max."LogProba_3" AS "LogProba_3", score_max."Decision" AS "Decision", score_max."DecisionProba" AS "DecisionProba", score_max."KEY_m" AS "KEY_m", score_max."max_Proba" AS "max_Proba", "arg_max_t_Proba"."KEY_Proba" AS "KEY_Proba", "arg_max_t_Proba"."arg_max_Proba" AS "arg_max_Proba" 
FROM score_max LEFT OUTER JOIN (SELECT union_with_max."KEY" AS "KEY_Proba", min(union_with_max."class") AS "arg_max_Proba" 
FROM union_with_max 
WHERE union_with_max."Proba" >= union_with_max."max_Proba" GROUP BY union_with_max."KEY") AS "arg_max_t_Proba" ON score_max."KEY" = "arg_max_t_Proba"."KEY_Proba")
 SELECT arg_max_cte."KEY" AS "KEY", arg_max_cte."Score_0" AS "Score_0", arg_max_cte."Score_1" AS "Score_1", arg_max_cte."Score_2" AS "Score_2", arg_max_cte."Score_3" AS "Score_3", arg_max_cte."Proba_0" AS "Proba_0", arg_max_cte."Proba_1" AS "Proba_1", arg_max_cte."Proba_2" AS "Proba_2", arg_max_cte."Proba_3" AS "Proba_3", CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN ln(arg_max_cte."Proba_0") ELSE -1.79769313486231e+308 END AS "LogProba_0", CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN ln(arg_max_cte."Proba_1") ELSE -1.79769313486231e+308 END AS "LogProba_1", CASE WHEN (arg_max_cte."Proba_2" IS NULL OR arg_max_cte."Proba_2" > 0.0) THEN ln(arg_max_cte."Proba_2") ELSE -1.79769313486231e+308 END AS "LogProba_2", CASE WHEN (arg_max_cte."Proba_3" IS NULL OR arg_max_cte."Proba_3" > 0.0) THEN ln(arg_max_cte."Proba_3") ELSE -1.79769313486231e+308 END AS "LogProba_3", arg_max_cte."arg_max_Proba" AS "Decision", arg_max_cte."max_Proba" AS "DecisionProba" 
FROM arg_max_cte