-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2018

-- Model : CalibratedClassifierCV_sigmoid
-- Dataset : digits
-- Database : mssql


-- This SQL code can contain one or more statements, to be executed in the order they appear in this file.



-- Code For temporary table ##TMP_20180417025322_HLAAGO_CalProb_B0 part 1/2. Create 


CREATE TABLE ##TMP_20180417025322_HLAAGO_CalProb_B0 (
	[KEY] BIGINT NULL, 
	[Proba_0] FLOAT NULL, 
	[Proba_1] FLOAT NULL, 
	[Proba_2] FLOAT NULL, 
	[Proba_3] FLOAT NULL, 
	[Proba_4] FLOAT NULL, 
	[Proba_5] FLOAT NULL, 
	[Proba_6] FLOAT NULL, 
	[Proba_7] FLOAT NULL, 
	[Proba_8] FLOAT NULL, 
	[Proba_9] FLOAT NULL
)



-- Code For temporary table ##TMP_20180417025322_HLAAGO_CalProb_B0 part 2/2. Populate

WITH [DT_node_lookup] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_36] <= 0.5) THEN CASE WHEN ([ADS].[Feature_28] <= 2.5) THEN CASE WHEN ([ADS].[Feature_21] <= 0.5) THEN CASE WHEN ([ADS].[Feature_5] <= 10.0) THEN CASE WHEN ([ADS].[Feature_41] <= 5.5) THEN 5 ELSE 6 END ELSE 7 END ELSE CASE WHEN ([ADS].[Feature_62] <= 7.5) THEN CASE WHEN ([ADS].[Feature_50] <= 2.5) THEN 10 ELSE 11 END ELSE 12 END END ELSE CASE WHEN ([ADS].[Feature_21] <= 9.5) THEN CASE WHEN ([ADS].[Feature_5] <= 2.5) THEN CASE WHEN ([ADS].[Feature_42] <= 5.5) THEN 16 ELSE 17 END ELSE CASE WHEN ([ADS].[Feature_28] <= 6.5) THEN 19 ELSE 20 END END ELSE CASE WHEN ([ADS].[Feature_33] <= 1.5) THEN 22 ELSE CASE WHEN ([ADS].[Feature_59] <= 13.5) THEN 24 ELSE 25 END END END END ELSE CASE WHEN ([ADS].[Feature_21] <= 0.5) THEN CASE WHEN ([ADS].[Feature_42] <= 8.5) THEN CASE WHEN ([ADS].[Feature_5] <= 2.5) THEN CASE WHEN ([ADS].[Feature_9] <= 0.5) THEN 30 ELSE 31 END ELSE CASE WHEN ([ADS].[Feature_2] <= 0.5) THEN 33 ELSE 34 END END ELSE CASE WHEN ([ADS].[Feature_54] <= 0.5) THEN CASE WHEN ([ADS].[Feature_59] <= 11.5) THEN 37 ELSE 38 END ELSE CASE WHEN ([ADS].[Feature_9] <= 3.0) THEN 40 ELSE 41 END END END ELSE CASE WHEN ([ADS].[Feature_33] <= 5.5) THEN CASE WHEN ([ADS].[Feature_60] <= 7.5) THEN CASE WHEN ([ADS].[Feature_53] <= 4.5) THEN 45 ELSE 46 END ELSE CASE WHEN ([ADS].[Feature_43] <= 1.5) THEN 48 ELSE 49 END END ELSE CASE WHEN ([ADS].[Feature_26] <= 9.0) THEN 51 ELSE CASE WHEN ([ADS].[Feature_13] <= 13.5) THEN 53 ELSE 54 END END END END END AS node_id_2 
FROM digits AS [ADS]), 
[DT_node_data] AS 
(SELECT [Values].node_id AS node_id, CAST([Values].feature AS FLOAT(53)) AS feature, CAST([Values].threshold AS FLOAT(53)) AS threshold, CAST([Values].count AS FLOAT(53)) AS count, CAST([Values].depth AS FLOAT(53)) AS depth, CAST([Values].parent_id AS FLOAT(53)) AS parent_id, CAST([Values].[Proba_0] AS FLOAT(53)) AS [Proba_0], CAST([Values].[LogProba_0] AS FLOAT(53)) AS [LogProba_0], CAST([Values].[Proba_1] AS FLOAT(53)) AS [Proba_1], CAST([Values].[LogProba_1] AS FLOAT(53)) AS [LogProba_1], CAST([Values].[Proba_2] AS FLOAT(53)) AS [Proba_2], CAST([Values].[LogProba_2] AS FLOAT(53)) AS [LogProba_2], CAST([Values].[Proba_3] AS FLOAT(53)) AS [Proba_3], CAST([Values].[LogProba_3] AS FLOAT(53)) AS [LogProba_3], CAST([Values].[Proba_4] AS FLOAT(53)) AS [Proba_4], CAST([Values].[LogProba_4] AS FLOAT(53)) AS [LogProba_4], CAST([Values].[Proba_5] AS FLOAT(53)) AS [Proba_5], CAST([Values].[LogProba_5] AS FLOAT(53)) AS [LogProba_5], CAST([Values].[Proba_6] AS FLOAT(53)) AS [Proba_6], CAST([Values].[LogProba_6] AS FLOAT(53)) AS [LogProba_6], CAST([Values].[Proba_7] AS FLOAT(53)) AS [Proba_7], CAST([Values].[LogProba_7] AS FLOAT(53)) AS [LogProba_7], CAST([Values].[Proba_8] AS FLOAT(53)) AS [Proba_8], CAST([Values].[LogProba_8] AS FLOAT(53)) AS [LogProba_8], CAST([Values].[Proba_9] AS FLOAT(53)) AS [Proba_9], CAST([Values].[LogProba_9] AS FLOAT(53)) AS [LogProba_9], CAST([Values].[Decision] AS FLOAT(53)) AS [Decision], CAST([Values].[DecisionProba] AS FLOAT(53)) AS [DecisionProba] 
FROM (SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 3 AS count, 5 AS depth, 4 AS parent_id, 0.3333333333333333 AS [Proba_0], -1.0986122886681098 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.3333333333333333 AS [Proba_2], -1.0986122886681098 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0.0 AS [Proba_4], -1.79769313486231e+308 AS [LogProba_4], 0.0 AS [Proba_5], -1.79769313486231e+308 AS [LogProba_5], 0.3333333333333333 AS [Proba_6], -1.0986122886681098 AS [LogProba_6], 0.0 AS [Proba_7], -1.79769313486231e+308 AS [LogProba_7], 0.0 AS [Proba_8], -1.79769313486231e+308 AS [LogProba_8], 0.0 AS [Proba_9], -1.79769313486231e+308 AS [LogProba_9], 0 AS [Decision], 0.3333333333333333 AS [DecisionProba] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 3 AS count, 5 AS depth, 4 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 1.0 AS [Proba_4], 0.0 AS [LogProba_4], 0.0 AS [Proba_5], -1.79769313486231e+308 AS [LogProba_5], 0.0 AS [Proba_6], -1.79769313486231e+308 AS [LogProba_6], 0.0 AS [Proba_7], -1.79769313486231e+308 AS [LogProba_7], 0.0 AS [Proba_8], -1.79769313486231e+308 AS [LogProba_8], 0.0 AS [Proba_9], -1.79769313486231e+308 AS [LogProba_9], 4 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 3 AS count, 4 AS depth, 3 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0.0 AS [Proba_4], -1.79769313486231e+308 AS [LogProba_4], 1.0 AS [Proba_5], 0.0 AS [LogProba_5], 0.0 AS [Proba_6], -1.79769313486231e+308 AS [LogProba_6], 0.0 AS [Proba_7], -1.79769313486231e+308 AS [LogProba_7], 0.0 AS [Proba_8], -1.79769313486231e+308 AS [LogProba_8], 0.0 AS [Proba_9], -1.79769313486231e+308 AS [LogProba_9], 5 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 1 AS count, 5 AS depth, 9 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 1.0 AS [Proba_4], 0.0 AS [LogProba_4], 0.0 AS [Proba_5], -1.79769313486231e+308 AS [LogProba_5], 0.0 AS [Proba_6], -1.79769313486231e+308 AS [LogProba_6], 0.0 AS [Proba_7], -1.79769313486231e+308 AS [LogProba_7], 0.0 AS [Proba_8], -1.79769313486231e+308 AS [LogProba_8], 0.0 AS [Proba_9], -1.79769313486231e+308 AS [LogProba_9], 4 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 97 AS count, 5 AS depth, 9 AS parent_id, 1.0 AS [Proba_0], 0.0 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0.0 AS [Proba_4], -1.79769313486231e+308 AS [LogProba_4], 0.0 AS [Proba_5], -1.79769313486231e+308 AS [LogProba_5], 0.0 AS [Proba_6], -1.79769313486231e+308 AS [LogProba_6], 0.0 AS [Proba_7], -1.79769313486231e+308 AS [LogProba_7], 0.0 AS [Proba_8], -1.79769313486231e+308 AS [LogProba_8], 0.0 AS [Proba_9], -1.79769313486231e+308 AS [LogProba_9], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 1 AS count, 4 AS depth, 8 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 1.0 AS [Proba_2], 0.0 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0.0 AS [Proba_4], -1.79769313486231e+308 AS [LogProba_4], 0.0 AS [Proba_5], -1.79769313486231e+308 AS [LogProba_5], 0.0 AS [Proba_6], -1.79769313486231e+308 AS [LogProba_6], 0.0 AS [Proba_7], -1.79769313486231e+308 AS [LogProba_7], 0.0 AS [Proba_8], -1.79769313486231e+308 AS [LogProba_8], 0.0 AS [Proba_9], -1.79769313486231e+308 AS [LogProba_9], 2 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 2 AS count, 5 AS depth, 15 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0.0 AS [Proba_4], -1.79769313486231e+308 AS [LogProba_4], 0.0 AS [Proba_5], -1.79769313486231e+308 AS [LogProba_5], 0.0 AS [Proba_6], -1.79769313486231e+308 AS [LogProba_6], 0.0 AS [Proba_7], -1.79769313486231e+308 AS [LogProba_7], 0.0 AS [Proba_8], -1.79769313486231e+308 AS [LogProba_8], 1.0 AS [Proba_9], 0.0 AS [LogProba_9], 9 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 3 AS count, 5 AS depth, 15 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.3333333333333333 AS [Proba_2], -1.0986122886681098 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0.0 AS [Proba_4], -1.79769313486231e+308 AS [LogProba_4], 0.0 AS [Proba_5], -1.79769313486231e+308 AS [LogProba_5], 0.6666666666666666 AS [Proba_6], -0.40546510810816444 AS [LogProba_6], 0.0 AS [Proba_7], -1.79769313486231e+308 AS [LogProba_7], 0.0 AS [Proba_8], -1.79769313486231e+308 AS [LogProba_8], 0.0 AS [Proba_9], -1.79769313486231e+308 AS [LogProba_9], 6 AS [Decision], 0.6666666666666666 AS [DecisionProba] UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 1 AS count, 5 AS depth, 18 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0.0 AS [Proba_4], -1.79769313486231e+308 AS [LogProba_4], 0.0 AS [Proba_5], -1.79769313486231e+308 AS [LogProba_5], 0.0 AS [Proba_6], -1.79769313486231e+308 AS [LogProba_6], 0.0 AS [Proba_7], -1.79769313486231e+308 AS [LogProba_7], 1.0 AS [Proba_8], 0.0 AS [LogProba_8], 0.0 AS [Proba_9], -1.79769313486231e+308 AS [LogProba_9], 8 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 8 AS count, 5 AS depth, 18 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0.0 AS [Proba_4], -1.79769313486231e+308 AS [LogProba_4], 1.0 AS [Proba_5], 0.0 AS [LogProba_5], 0.0 AS [Proba_6], -1.79769313486231e+308 AS [LogProba_6], 0.0 AS [Proba_7], -1.79769313486231e+308 AS [LogProba_7], 0.0 AS [Proba_8], -1.79769313486231e+308 AS [LogProba_8], 0.0 AS [Proba_9], -1.79769313486231e+308 AS [LogProba_9], 5 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 33 AS count, 4 AS depth, 21 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0.0 AS [Proba_4], -1.79769313486231e+308 AS [LogProba_4], 0.0 AS [Proba_5], -1.79769313486231e+308 AS [LogProba_5], 0.0 AS [Proba_6], -1.79769313486231e+308 AS [LogProba_6], 0.0 AS [Proba_7], -1.79769313486231e+308 AS [LogProba_7], 0.0 AS [Proba_8], -1.79769313486231e+308 AS [LogProba_8], 1.0 AS [Proba_9], 0.0 AS [LogProba_9], 9 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 1 AS count, 5 AS depth, 23 AS parent_id, 1.0 AS [Proba_0], 0.0 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0.0 AS [Proba_4], -1.79769313486231e+308 AS [LogProba_4], 0.0 AS [Proba_5], -1.79769313486231e+308 AS [LogProba_5], 0.0 AS [Proba_6], -1.79769313486231e+308 AS [LogProba_6], 0.0 AS [Proba_7], -1.79769313486231e+308 AS [LogProba_7], 0.0 AS [Proba_8], -1.79769313486231e+308 AS [LogProba_8], 0.0 AS [Proba_9], -1.79769313486231e+308 AS [LogProba_9], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 1 AS count, 5 AS depth, 23 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0.0 AS [Proba_4], -1.79769313486231e+308 AS [LogProba_4], 0.0 AS [Proba_5], -1.79769313486231e+308 AS [LogProba_5], 0.0 AS [Proba_6], -1.79769313486231e+308 AS [LogProba_6], 0.0 AS [Proba_7], -1.79769313486231e+308 AS [LogProba_7], 1.0 AS [Proba_8], 0.0 AS [LogProba_8], 0.0 AS [Proba_9], -1.79769313486231e+308 AS [LogProba_9], 8 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 31 AS count, 5 AS depth, 29 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.6774193548387096 AS [Proba_1], -0.3894647667617233 AS [LogProba_1], 0.06451612903225806 AS [Proba_2], -2.740840023925201 AS [LogProba_2], 0.03225806451612903 AS [Proba_3], -3.4339872044851463 AS [LogProba_3], 0.16129032258064516 AS [Proba_4], -1.824549292051046 AS [LogProba_4], 0.0 AS [Proba_5], -1.79769313486231e+308 AS [LogProba_5], 0.06451612903225806 AS [Proba_6], -2.740840023925201 AS [LogProba_6], 0.0 AS [Proba_7], -1.79769313486231e+308 AS [LogProba_7], 0.0 AS [Proba_8], -1.79769313486231e+308 AS [LogProba_8], 0.0 AS [Proba_9], -1.79769313486231e+308 AS [LogProba_9], 1 AS [Decision], 0.6774193548387096 AS [DecisionProba] UNION ALL SELECT 31 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 38 AS count, 5 AS depth, 29 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.02631578947368421 AS [Proba_1], -3.6375861597263857 AS [LogProba_1], 0.5789473684210527 AS [Proba_2], -0.5465437063680699 AS [LogProba_2], 0.18421052631578946 AS [Proba_3], -1.6916760106710724 AS [LogProba_3], 0.0 AS [Proba_4], -1.79769313486231e+308 AS [LogProba_4], 0.02631578947368421 AS [Proba_5], -3.6375861597263857 AS [LogProba_5], 0.0 AS [Proba_6], -1.79769313486231e+308 AS [LogProba_6], 0.07894736842105263 AS [Proba_7], -2.538973871058276 AS [LogProba_7], 0.07894736842105263 AS [Proba_8], -2.538973871058276 AS [LogProba_8], 0.02631578947368421 AS [Proba_9], -3.6375861597263857 AS [LogProba_9], 2 AS [Decision], 0.5789473684210527 AS [DecisionProba] UNION ALL SELECT 33 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 3 AS count, 5 AS depth, 32 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0.6666666666666666 AS [Proba_4], -0.40546510810816444 AS [LogProba_4], 0.0 AS [Proba_5], -1.79769313486231e+308 AS [LogProba_5], 0.0 AS [Proba_6], -1.79769313486231e+308 AS [LogProba_6], 0.3333333333333333 AS [Proba_7], -1.0986122886681098 AS [LogProba_7], 0.0 AS [Proba_8], -1.79769313486231e+308 AS [LogProba_8], 0.0 AS [Proba_9], -1.79769313486231e+308 AS [LogProba_9], 4 AS [Decision], 0.6666666666666666 AS [DecisionProba] UNION ALL SELECT 34 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 90 AS count, 5 AS depth, 32 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.011111111111111112 AS [Proba_3], -4.499809670330265 AS [LogProba_3], 0.0 AS [Proba_4], -1.79769313486231e+308 AS [LogProba_4], 0.9888888888888889 AS [Proba_5], -0.011173300598125189 AS [LogProba_5], 0.0 AS [Proba_6], -1.79769313486231e+308 AS [LogProba_6], 0.0 AS [Proba_7], -1.79769313486231e+308 AS [LogProba_7], 0.0 AS [Proba_8], -1.79769313486231e+308 AS [LogProba_8], 0.0 AS [Proba_9], -1.79769313486231e+308 AS [LogProba_9], 5 AS [Decision], 0.9888888888888889 AS [DecisionProba] UNION ALL SELECT 37 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 16 AS count, 5 AS depth, 36 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 1.0 AS [Proba_4], 0.0 AS [LogProba_4], 0.0 AS [Proba_5], -1.79769313486231e+308 AS [LogProba_5], 0.0 AS [Proba_6], -1.79769313486231e+308 AS [LogProba_6], 0.0 AS [Proba_7], -1.79769313486231e+308 AS [LogProba_7], 0.0 AS [Proba_8], -1.79769313486231e+308 AS [LogProba_8], 0.0 AS [Proba_9], -1.79769313486231e+308 AS [LogProba_9], 4 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 38 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 10 AS count, 5 AS depth, 36 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.7 AS [Proba_1], -0.35667494393873245 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0.0 AS [Proba_4], -1.79769313486231e+308 AS [LogProba_4], 0.1 AS [Proba_5], -2.3025850929940455 AS [LogProba_5], 0.2 AS [Proba_6], -1.6094379124341003 AS [LogProba_6], 0.0 AS [Proba_7], -1.79769313486231e+308 AS [LogProba_7], 0.0 AS [Proba_8], -1.79769313486231e+308 AS [LogProba_8], 0.0 AS [Proba_9], -1.79769313486231e+308 AS [LogProba_9], 1 AS [Decision], 0.7 AS [DecisionProba] UNION ALL SELECT 40 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 97 AS count, 5 AS depth, 39 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0.0 AS [Proba_4], -1.79769313486231e+308 AS [LogProba_4], 0.010309278350515464 AS [Proba_5], -4.574710978503383 AS [LogProba_5], 0.9896907216494846 AS [Proba_6], -0.010362787035546547 AS [LogProba_6], 0.0 AS [Proba_7], -1.79769313486231e+308 AS [LogProba_7], 0.0 AS [Proba_8], -1.79769313486231e+308 AS [LogProba_8], 0.0 AS [Proba_9], -1.79769313486231e+308 AS [LogProba_9], 6 AS [Decision], 0.9896907216494846 AS [DecisionProba] UNION ALL SELECT 41 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 6 AS count, 5 AS depth, 39 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 1.0 AS [Proba_2], 0.0 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0.0 AS [Proba_4], -1.79769313486231e+308 AS [LogProba_4], 0.0 AS [Proba_5], -1.79769313486231e+308 AS [LogProba_5], 0.0 AS [Proba_6], -1.79769313486231e+308 AS [LogProba_6], 0.0 AS [Proba_7], -1.79769313486231e+308 AS [LogProba_7], 0.0 AS [Proba_8], -1.79769313486231e+308 AS [LogProba_8], 0.0 AS [Proba_9], -1.79769313486231e+308 AS [LogProba_9], 2 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 45 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 107 AS count, 5 AS depth, 44 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.018691588785046728 AS [Proba_1], -3.979681653901961 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.018691588785046728 AS [Proba_3], -3.979681653901961 AS [LogProba_3], 0.04672897196261682 AS [Proba_4], -3.0633909220278057 AS [LogProba_4], 0.0 AS [Proba_5], -1.79769313486231e+308 AS [LogProba_5], 0.0 AS [Proba_6], -1.79769313486231e+308 AS [LogProba_6], 0.794392523364486 AS [Proba_7], -0.23017757797158975 AS [LogProba_7], 0.037383177570093455 AS [Proba_8], -3.2865344733420154 AS [LogProba_8], 0.08411214953271028 AS [Proba_9], -2.4756042571256867 AS [LogProba_9], 7 AS [Decision], 0.794392523364486 AS [DecisionProba] UNION ALL SELECT 46 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 16 AS count, 5 AS depth, 44 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.1875 AS [Proba_1], -1.6739764335716716 AS [LogProba_1], 0.25 AS [Proba_2], -1.3862943611198906 AS [LogProba_2], 0.25 AS [Proba_3], -1.3862943611198906 AS [LogProba_3], 0.0 AS [Proba_4], -1.79769313486231e+308 AS [LogProba_4], 0.0625 AS [Proba_5], -2.772588722239781 AS [LogProba_5], 0.0 AS [Proba_6], -1.79769313486231e+308 AS [LogProba_6], 0.0 AS [Proba_7], -1.79769313486231e+308 AS [LogProba_7], 0.125 AS [Proba_8], -2.0794415416798357 AS [LogProba_8], 0.125 AS [Proba_9], -2.0794415416798357 AS [LogProba_9], 2 AS [Decision], 0.25 AS [DecisionProba] UNION ALL SELECT 48 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 168 AS count, 5 AS depth, 47 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.05952380952380952 AS [Proba_1], -2.8213788864092133 AS [LogProba_1], 0.011904761904761904 AS [Proba_2], -4.430816798843313 AS [LogProba_2], 0.49404761904761907 AS [Proba_3], -0.7051233716066609 AS [LogProba_3], 0.011904761904761904 AS [Proba_4], -4.430816798843313 AS [LogProba_4], 0.023809523809523808 AS [Proba_5], -3.7376696182833684 AS [LogProba_5], 0.0 AS [Proba_6], -1.79769313486231e+308 AS [LogProba_6], 0.0 AS [Proba_7], -1.79769313486231e+308 AS [LogProba_7], 0.06547619047619048 AS [Proba_8], -2.7260687066048885 AS [LogProba_8], 0.3333333333333333 AS [Proba_9], -1.0986122886681098 AS [LogProba_9], 3 AS [Decision], 0.49404761904761907 AS [DecisionProba] UNION ALL SELECT 49 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 251 AS count, 5 AS depth, 47 AS parent_id, 0.01195219123505976 AS [Proba_0], -4.426840650463674 AS [LogProba_0], 0.24701195219123506 AS [Proba_1], -1.3983185540866923 AS [LogProba_1], 0.2868525896414343 AS [Proba_2], -1.2487868201157284 AS [LogProba_2], 0.0398406374501992 AS [Proba_3], -3.222867846137738 AS [LogProba_3], 0.035856573705179286 AS [Proba_4], -3.3282283617955644 AS [LogProba_4], 0.0 AS [Proba_5], -1.79769313486231e+308 AS [LogProba_5], 0.00398406374501992 AS [Proba_6], -5.5254529391317835 AS [LogProba_6], 0.03187250996015936 AS [Proba_7], -3.446011397451948 AS [LogProba_7], 0.3147410358565737 AS [Proba_8], -1.1560050866647624 AS [LogProba_8], 0.027888446215139442 AS [Proba_9], -3.5795427900764705 AS [LogProba_9], 8 AS [Decision], 0.3147410358565737 AS [DecisionProba] UNION ALL SELECT 51 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 6 AS count, 4 AS depth, 50 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0.0 AS [Proba_4], -1.79769313486231e+308 AS [LogProba_4], 0.0 AS [Proba_5], -1.79769313486231e+308 AS [LogProba_5], 0.0 AS [Proba_6], -1.79769313486231e+308 AS [LogProba_6], 1.0 AS [Proba_7], 0.0 AS [LogProba_7], 0.0 AS [Proba_8], -1.79769313486231e+308 AS [LogProba_8], 0.0 AS [Proba_9], -1.79769313486231e+308 AS [LogProba_9], 7 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 53 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 71 AS count, 5 AS depth, 52 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.014084507042253521 AS [Proba_1], -4.2626798770413155 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0.971830985915493 AS [Proba_4], -0.028573372444056 AS [LogProba_4], 0.0 AS [Proba_5], -1.79769313486231e+308 AS [LogProba_5], 0.014084507042253521 AS [Proba_6], -4.2626798770413155 AS [LogProba_6], 0.0 AS [Proba_7], -1.79769313486231e+308 AS [LogProba_7], 0.0 AS [Proba_8], -1.79769313486231e+308 AS [LogProba_8], 0.0 AS [Proba_9], -1.79769313486231e+308 AS [LogProba_9], 4 AS [Decision], 0.971830985915493 AS [DecisionProba] UNION ALL SELECT 54 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 8 AS count, 5 AS depth, 52 AS parent_id, 0.125 AS [Proba_0], -2.0794415416798357 AS [LogProba_0], 0.375 AS [Proba_1], -0.9808292530117262 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0.125 AS [Proba_4], -2.0794415416798357 AS [LogProba_4], 0.0 AS [Proba_5], -1.79769313486231e+308 AS [LogProba_5], 0.125 AS [Proba_6], -2.0794415416798357 AS [LogProba_6], 0.25 AS [Proba_7], -1.3862943611198906 AS [LogProba_7], 0.0 AS [Proba_8], -1.79769313486231e+308 AS [LogProba_8], 0.0 AS [Proba_9], -1.79769313486231e+308 AS [LogProba_9], 1 AS [Decision], 0.375 AS [DecisionProba]) AS [Values]), 
[DT_Output] AS 
(SELECT [DT_node_lookup].[KEY] AS [KEY], [DT_node_lookup].node_id_2 AS node_id_2, [DT_node_data].node_id AS node_id, [DT_node_data].feature AS feature, [DT_node_data].threshold AS threshold, [DT_node_data].count AS count, [DT_node_data].depth AS depth, [DT_node_data].parent_id AS parent_id, [DT_node_data].[Proba_0] AS [Proba_0], [DT_node_data].[LogProba_0] AS [LogProba_0], [DT_node_data].[Proba_1] AS [Proba_1], [DT_node_data].[LogProba_1] AS [LogProba_1], [DT_node_data].[Proba_2] AS [Proba_2], [DT_node_data].[LogProba_2] AS [LogProba_2], [DT_node_data].[Proba_3] AS [Proba_3], [DT_node_data].[LogProba_3] AS [LogProba_3], [DT_node_data].[Proba_4] AS [Proba_4], [DT_node_data].[LogProba_4] AS [LogProba_4], [DT_node_data].[Proba_5] AS [Proba_5], [DT_node_data].[LogProba_5] AS [LogProba_5], [DT_node_data].[Proba_6] AS [Proba_6], [DT_node_data].[LogProba_6] AS [LogProba_6], [DT_node_data].[Proba_7] AS [Proba_7], [DT_node_data].[LogProba_7] AS [LogProba_7], [DT_node_data].[Proba_8] AS [Proba_8], [DT_node_data].[LogProba_8] AS [LogProba_8], [DT_node_data].[Proba_9] AS [Proba_9], [DT_node_data].[LogProba_9] AS [LogProba_9], [DT_node_data].[Decision] AS [Decision], [DT_node_data].[DecisionProba] AS [DecisionProba] 
FROM [DT_node_lookup] LEFT OUTER JOIN [DT_node_data] ON [DT_node_lookup].node_id_2 = [DT_node_data].node_id), 
[Calibrated_Model_0] AS 
(SELECT [DT_Output].[KEY] AS [KEY], CAST(NULL AS FLOAT(53)) AS [Score_0], CAST(NULL AS FLOAT(53)) AS [Score_1], CAST(NULL AS FLOAT(53)) AS [Score_2], CAST(NULL AS FLOAT(53)) AS [Score_3], CAST(NULL AS FLOAT(53)) AS [Score_4], CAST(NULL AS FLOAT(53)) AS [Score_5], CAST(NULL AS FLOAT(53)) AS [Score_6], CAST(NULL AS FLOAT(53)) AS [Score_7], CAST(NULL AS FLOAT(53)) AS [Score_8], CAST(NULL AS FLOAT(53)) AS [Score_9], [DT_Output].[Proba_0] AS [Proba_0], [DT_Output].[Proba_1] AS [Proba_1], [DT_Output].[Proba_2] AS [Proba_2], [DT_Output].[Proba_3] AS [Proba_3], [DT_Output].[Proba_4] AS [Proba_4], [DT_Output].[Proba_5] AS [Proba_5], [DT_Output].[Proba_6] AS [Proba_6], [DT_Output].[Proba_7] AS [Proba_7], [DT_Output].[Proba_8] AS [Proba_8], [DT_Output].[Proba_9] AS [Proba_9], [DT_Output].[LogProba_0] AS [LogProba_0], [DT_Output].[LogProba_1] AS [LogProba_1], [DT_Output].[LogProba_2] AS [LogProba_2], [DT_Output].[LogProba_3] AS [LogProba_3], [DT_Output].[LogProba_4] AS [LogProba_4], [DT_Output].[LogProba_5] AS [LogProba_5], [DT_Output].[LogProba_6] AS [LogProba_6], [DT_Output].[LogProba_7] AS [LogProba_7], [DT_Output].[LogProba_8] AS [LogProba_8], [DT_Output].[LogProba_9] AS [LogProba_9], CAST(NULL AS BIGINT) AS [Decision], CAST(NULL AS FLOAT(53)) AS [DecisionProba], coalesce(CAST(NULL AS FLOAT(53)), [DT_Output].[Proba_0]) AS [ScoreOrProba_0], coalesce(CAST(NULL AS FLOAT(53)), [DT_Output].[Proba_1]) AS [ScoreOrProba_1], coalesce(CAST(NULL AS FLOAT(53)), [DT_Output].[Proba_2]) AS [ScoreOrProba_2], coalesce(CAST(NULL AS FLOAT(53)), [DT_Output].[Proba_3]) AS [ScoreOrProba_3], coalesce(CAST(NULL AS FLOAT(53)), [DT_Output].[Proba_4]) AS [ScoreOrProba_4], coalesce(CAST(NULL AS FLOAT(53)), [DT_Output].[Proba_5]) AS [ScoreOrProba_5], coalesce(CAST(NULL AS FLOAT(53)), [DT_Output].[Proba_6]) AS [ScoreOrProba_6], coalesce(CAST(NULL AS FLOAT(53)), [DT_Output].[Proba_7]) AS [ScoreOrProba_7], coalesce(CAST(NULL AS FLOAT(53)), [DT_Output].[Proba_8]) AS [ScoreOrProba_8], coalesce(CAST(NULL AS FLOAT(53)), [DT_Output].[Proba_9]) AS [ScoreOrProba_9] 
FROM [DT_Output]), 
sigmoid_calibration_0 AS 
(SELECT [Calibrated_Model_0].[KEY] AS [KEY], 1.0 / (1.0 + exp(CASE WHEN (CASE WHEN (-100.0 <= -(8.73221258153009 * [Calibrated_Model_0].[ScoreOrProba_0] + -5.878442239535413)) THEN -(8.73221258153009 * [Calibrated_Model_0].[ScoreOrProba_0] + -5.878442239535413) ELSE -100.0 END <= 100.0) THEN CASE WHEN (-100.0 <= -(8.73221258153009 * [Calibrated_Model_0].[ScoreOrProba_0] + -5.878442239535413)) THEN -(8.73221258153009 * [Calibrated_Model_0].[ScoreOrProba_0] + -5.878442239535413) ELSE -100.0 END ELSE 100.0 END)) AS [Proba_0], 1.0 / (1.0 + exp(CASE WHEN (CASE WHEN (-100.0 <= -(7.064526585249316 * [Calibrated_Model_0].[ScoreOrProba_1] + -3.2728608146332046)) THEN -(7.064526585249316 * [Calibrated_Model_0].[ScoreOrProba_1] + -3.2728608146332046) ELSE -100.0 END <= 100.0) THEN CASE WHEN (-100.0 <= -(7.064526585249316 * [Calibrated_Model_0].[ScoreOrProba_1] + -3.2728608146332046)) THEN -(7.064526585249316 * [Calibrated_Model_0].[ScoreOrProba_1] + -3.2728608146332046) ELSE -100.0 END ELSE 100.0 END)) AS [Proba_1], 1.0 / (1.0 + exp(CASE WHEN (CASE WHEN (-100.0 <= -(11.09836847089827 * [Calibrated_Model_0].[ScoreOrProba_2] + -4.145474202059758)) THEN -(11.09836847089827 * [Calibrated_Model_0].[ScoreOrProba_2] + -4.145474202059758) ELSE -100.0 END <= 100.0) THEN CASE WHEN (-100.0 <= -(11.09836847089827 * [Calibrated_Model_0].[ScoreOrProba_2] + -4.145474202059758)) THEN -(11.09836847089827 * [Calibrated_Model_0].[ScoreOrProba_2] + -4.145474202059758) ELSE -100.0 END ELSE 100.0 END)) AS [Proba_2], 1.0 / (1.0 + exp(CASE WHEN (CASE WHEN (-100.0 <= -(8.51197745769166 * [Calibrated_Model_0].[ScoreOrProba_3] + -4.089499278949158)) THEN -(8.51197745769166 * [Calibrated_Model_0].[ScoreOrProba_3] + -4.089499278949158) ELSE -100.0 END <= 100.0) THEN CASE WHEN (-100.0 <= -(8.51197745769166 * [Calibrated_Model_0].[ScoreOrProba_3] + -4.089499278949158)) THEN -(8.51197745769166 * [Calibrated_Model_0].[ScoreOrProba_3] + -4.089499278949158) ELSE -100.0 END ELSE 100.0 END)) AS [Proba_3], 1.0 / (1.0 + exp(CASE WHEN (CASE WHEN (-100.0 <= -(5.176342371745256 * [Calibrated_Model_0].[ScoreOrProba_4] + -3.5413511826155903)) THEN -(5.176342371745256 * [Calibrated_Model_0].[ScoreOrProba_4] + -3.5413511826155903) ELSE -100.0 END <= 100.0) THEN CASE WHEN (-100.0 <= -(5.176342371745256 * [Calibrated_Model_0].[ScoreOrProba_4] + -3.5413511826155903)) THEN -(5.176342371745256 * [Calibrated_Model_0].[ScoreOrProba_4] + -3.5413511826155903) ELSE -100.0 END ELSE 100.0 END)) AS [Proba_4], 1.0 / (1.0 + exp(CASE WHEN (CASE WHEN (-100.0 <= -(7.694096039927011 * [Calibrated_Model_0].[ScoreOrProba_5] + -4.0652253992036735)) THEN -(7.694096039927011 * [Calibrated_Model_0].[ScoreOrProba_5] + -4.0652253992036735) ELSE -100.0 END <= 100.0) THEN CASE WHEN (-100.0 <= -(7.694096039927011 * [Calibrated_Model_0].[ScoreOrProba_5] + -4.0652253992036735)) THEN -(7.694096039927011 * [Calibrated_Model_0].[ScoreOrProba_5] + -4.0652253992036735) ELSE -100.0 END ELSE 100.0 END)) AS [Proba_5], 1.0 / (1.0 + exp(CASE WHEN (CASE WHEN (-100.0 <= -(8.472230331406383 * [Calibrated_Model_0].[ScoreOrProba_6] + -4.379363788201262)) THEN -(8.472230331406383 * [Calibrated_Model_0].[ScoreOrProba_6] + -4.379363788201262) ELSE -100.0 END <= 100.0) THEN CASE WHEN (-100.0 <= -(8.472230331406383 * [Calibrated_Model_0].[ScoreOrProba_6] + -4.379363788201262)) THEN -(8.472230331406383 * [Calibrated_Model_0].[ScoreOrProba_6] + -4.379363788201262) ELSE -100.0 END ELSE 100.0 END)) AS [Proba_6], 1.0 / (1.0 + exp(CASE WHEN (CASE WHEN (-100.0 <= -(7.6032683941289605 * [Calibrated_Model_0].[ScoreOrProba_7] + -4.859230442747872)) THEN -(7.6032683941289605 * [Calibrated_Model_0].[ScoreOrProba_7] + -4.859230442747872) ELSE -100.0 END <= 100.0) THEN CASE WHEN (-100.0 <= -(7.6032683941289605 * [Calibrated_Model_0].[ScoreOrProba_7] + -4.859230442747872)) THEN -(7.6032683941289605 * [Calibrated_Model_0].[ScoreOrProba_7] + -4.859230442747872) ELSE -100.0 END ELSE 100.0 END)) AS [Proba_7], 1.0 / (1.0 + exp(CASE WHEN (CASE WHEN (-100.0 <= -(9.546367604252454 * [Calibrated_Model_0].[ScoreOrProba_8] + -3.803915694251885)) THEN -(9.546367604252454 * [Calibrated_Model_0].[ScoreOrProba_8] + -3.803915694251885) ELSE -100.0 END <= 100.0) THEN CASE WHEN (-100.0 <= -(9.546367604252454 * [Calibrated_Model_0].[ScoreOrProba_8] + -3.803915694251885)) THEN -(9.546367604252454 * [Calibrated_Model_0].[ScoreOrProba_8] + -3.803915694251885) ELSE -100.0 END ELSE 100.0 END)) AS [Proba_8], 1.0 / (1.0 + exp(CASE WHEN (CASE WHEN (-100.0 <= -(6.736710654710172 * [Calibrated_Model_0].[ScoreOrProba_9] + -3.602580893410793)) THEN -(6.736710654710172 * [Calibrated_Model_0].[ScoreOrProba_9] + -3.602580893410793) ELSE -100.0 END <= 100.0) THEN CASE WHEN (-100.0 <= -(6.736710654710172 * [Calibrated_Model_0].[ScoreOrProba_9] + -3.602580893410793)) THEN -(6.736710654710172 * [Calibrated_Model_0].[ScoreOrProba_9] + -3.602580893410793) ELSE -100.0 END ELSE 100.0 END)) AS [Proba_9] 
FROM [Calibrated_Model_0]), 
[Normalized_Probas] AS 
(SELECT sigmoid_calibration_0.[KEY] AS [KEY], sigmoid_calibration_0.[Proba_0] / (sigmoid_calibration_0.[Proba_0] + sigmoid_calibration_0.[Proba_1] + sigmoid_calibration_0.[Proba_2] + sigmoid_calibration_0.[Proba_3] + sigmoid_calibration_0.[Proba_4] + sigmoid_calibration_0.[Proba_5] + sigmoid_calibration_0.[Proba_6] + sigmoid_calibration_0.[Proba_7] + sigmoid_calibration_0.[Proba_8] + sigmoid_calibration_0.[Proba_9]) AS [Proba_0], sigmoid_calibration_0.[Proba_1] / (sigmoid_calibration_0.[Proba_0] + sigmoid_calibration_0.[Proba_1] + sigmoid_calibration_0.[Proba_2] + sigmoid_calibration_0.[Proba_3] + sigmoid_calibration_0.[Proba_4] + sigmoid_calibration_0.[Proba_5] + sigmoid_calibration_0.[Proba_6] + sigmoid_calibration_0.[Proba_7] + sigmoid_calibration_0.[Proba_8] + sigmoid_calibration_0.[Proba_9]) AS [Proba_1], sigmoid_calibration_0.[Proba_2] / (sigmoid_calibration_0.[Proba_0] + sigmoid_calibration_0.[Proba_1] + sigmoid_calibration_0.[Proba_2] + sigmoid_calibration_0.[Proba_3] + sigmoid_calibration_0.[Proba_4] + sigmoid_calibration_0.[Proba_5] + sigmoid_calibration_0.[Proba_6] + sigmoid_calibration_0.[Proba_7] + sigmoid_calibration_0.[Proba_8] + sigmoid_calibration_0.[Proba_9]) AS [Proba_2], sigmoid_calibration_0.[Proba_3] / (sigmoid_calibration_0.[Proba_0] + sigmoid_calibration_0.[Proba_1] + sigmoid_calibration_0.[Proba_2] + sigmoid_calibration_0.[Proba_3] + sigmoid_calibration_0.[Proba_4] + sigmoid_calibration_0.[Proba_5] + sigmoid_calibration_0.[Proba_6] + sigmoid_calibration_0.[Proba_7] + sigmoid_calibration_0.[Proba_8] + sigmoid_calibration_0.[Proba_9]) AS [Proba_3], sigmoid_calibration_0.[Proba_4] / (sigmoid_calibration_0.[Proba_0] + sigmoid_calibration_0.[Proba_1] + sigmoid_calibration_0.[Proba_2] + sigmoid_calibration_0.[Proba_3] + sigmoid_calibration_0.[Proba_4] + sigmoid_calibration_0.[Proba_5] + sigmoid_calibration_0.[Proba_6] + sigmoid_calibration_0.[Proba_7] + sigmoid_calibration_0.[Proba_8] + sigmoid_calibration_0.[Proba_9]) AS [Proba_4], sigmoid_calibration_0.[Proba_5] / (sigmoid_calibration_0.[Proba_0] + sigmoid_calibration_0.[Proba_1] + sigmoid_calibration_0.[Proba_2] + sigmoid_calibration_0.[Proba_3] + sigmoid_calibration_0.[Proba_4] + sigmoid_calibration_0.[Proba_5] + sigmoid_calibration_0.[Proba_6] + sigmoid_calibration_0.[Proba_7] + sigmoid_calibration_0.[Proba_8] + sigmoid_calibration_0.[Proba_9]) AS [Proba_5], sigmoid_calibration_0.[Proba_6] / (sigmoid_calibration_0.[Proba_0] + sigmoid_calibration_0.[Proba_1] + sigmoid_calibration_0.[Proba_2] + sigmoid_calibration_0.[Proba_3] + sigmoid_calibration_0.[Proba_4] + sigmoid_calibration_0.[Proba_5] + sigmoid_calibration_0.[Proba_6] + sigmoid_calibration_0.[Proba_7] + sigmoid_calibration_0.[Proba_8] + sigmoid_calibration_0.[Proba_9]) AS [Proba_6], sigmoid_calibration_0.[Proba_7] / (sigmoid_calibration_0.[Proba_0] + sigmoid_calibration_0.[Proba_1] + sigmoid_calibration_0.[Proba_2] + sigmoid_calibration_0.[Proba_3] + sigmoid_calibration_0.[Proba_4] + sigmoid_calibration_0.[Proba_5] + sigmoid_calibration_0.[Proba_6] + sigmoid_calibration_0.[Proba_7] + sigmoid_calibration_0.[Proba_8] + sigmoid_calibration_0.[Proba_9]) AS [Proba_7], sigmoid_calibration_0.[Proba_8] / (sigmoid_calibration_0.[Proba_0] + sigmoid_calibration_0.[Proba_1] + sigmoid_calibration_0.[Proba_2] + sigmoid_calibration_0.[Proba_3] + sigmoid_calibration_0.[Proba_4] + sigmoid_calibration_0.[Proba_5] + sigmoid_calibration_0.[Proba_6] + sigmoid_calibration_0.[Proba_7] + sigmoid_calibration_0.[Proba_8] + sigmoid_calibration_0.[Proba_9]) AS [Proba_8], sigmoid_calibration_0.[Proba_9] / (sigmoid_calibration_0.[Proba_0] + sigmoid_calibration_0.[Proba_1] + sigmoid_calibration_0.[Proba_2] + sigmoid_calibration_0.[Proba_3] + sigmoid_calibration_0.[Proba_4] + sigmoid_calibration_0.[Proba_5] + sigmoid_calibration_0.[Proba_6] + sigmoid_calibration_0.[Proba_7] + sigmoid_calibration_0.[Proba_8] + sigmoid_calibration_0.[Proba_9]) AS [Proba_9] 
FROM sigmoid_calibration_0), 
[DT_node_lookup_1] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_36] <= 0.5) THEN CASE WHEN ([ADS].[Feature_42] <= 6.0) THEN CASE WHEN ([ADS].[Feature_21] <= 7.0) THEN CASE WHEN ([ADS].[Feature_22] <= 4.0) THEN 4 ELSE 5 END ELSE CASE WHEN ([ADS].[Feature_13] <= 1.5) THEN 7 ELSE CASE WHEN ([ADS].[Feature_9] <= 9.5) THEN 9 ELSE 10 END END END ELSE CASE WHEN ([ADS].[Feature_13] <= 1.5) THEN CASE WHEN ([ADS].[Feature_54] <= 2.5) THEN 13 ELSE CASE WHEN ([ADS].[Feature_57] <= 2.0) THEN 15 ELSE 16 END END ELSE CASE WHEN ([ADS].[Feature_37] <= 1.0) THEN CASE WHEN ([ADS].[Feature_28] <= 2.5) THEN 19 ELSE 20 END ELSE CASE WHEN ([ADS].[Feature_26] <= 2.0) THEN 22 ELSE 23 END END END END ELSE CASE WHEN ([ADS].[Feature_21] <= 0.5) THEN CASE WHEN ([ADS].[Feature_42] <= 8.5) THEN CASE WHEN ([ADS].[Feature_5] <= 2.0) THEN CASE WHEN ([ADS].[Feature_19] <= 12.5) THEN 28 ELSE 29 END ELSE CASE WHEN ([ADS].[Feature_18] <= 4.5) THEN 31 ELSE 32 END END ELSE CASE WHEN ([ADS].[Feature_54] <= 4.0) THEN CASE WHEN ([ADS].[Feature_45] <= 1.5) THEN 35 ELSE 36 END ELSE CASE WHEN ([ADS].[Feature_58] <= 9.0) THEN 38 ELSE 39 END END END ELSE CASE WHEN ([ADS].[Feature_33] <= 3.5) THEN CASE WHEN ([ADS].[Feature_43] <= 1.5) THEN CASE WHEN ([ADS].[Feature_26] <= 3.5) THEN 43 ELSE 44 END ELSE CASE WHEN ([ADS].[Feature_60] <= 7.5) THEN 46 ELSE 47 END END ELSE CASE WHEN ([ADS].[Feature_13] <= 9.5) THEN CASE WHEN ([ADS].[Feature_2] <= 5.0) THEN 50 ELSE 51 END ELSE CASE WHEN ([ADS].[Feature_19] <= 3.0) THEN 53 ELSE 54 END END END END END AS node_id_2 
FROM digits AS [ADS]), 
[DT_node_data_1] AS 
(SELECT [Values].node_id AS node_id, CAST([Values].feature AS FLOAT(53)) AS feature, CAST([Values].threshold AS FLOAT(53)) AS threshold, CAST([Values].count AS FLOAT(53)) AS count, CAST([Values].depth AS FLOAT(53)) AS depth, CAST([Values].parent_id AS FLOAT(53)) AS parent_id, CAST([Values].[Proba_0] AS FLOAT(53)) AS [Proba_0], CAST([Values].[LogProba_0] AS FLOAT(53)) AS [LogProba_0], CAST([Values].[Proba_1] AS FLOAT(53)) AS [Proba_1], CAST([Values].[LogProba_1] AS FLOAT(53)) AS [LogProba_1], CAST([Values].[Proba_2] AS FLOAT(53)) AS [Proba_2], CAST([Values].[LogProba_2] AS FLOAT(53)) AS [LogProba_2], CAST([Values].[Proba_3] AS FLOAT(53)) AS [Proba_3], CAST([Values].[LogProba_3] AS FLOAT(53)) AS [LogProba_3], CAST([Values].[Proba_4] AS FLOAT(53)) AS [Proba_4], CAST([Values].[LogProba_4] AS FLOAT(53)) AS [LogProba_4], CAST([Values].[Proba_5] AS FLOAT(53)) AS [Proba_5], CAST([Values].[LogProba_5] AS FLOAT(53)) AS [LogProba_5], CAST([Values].[Proba_6] AS FLOAT(53)) AS [Proba_6], CAST([Values].[LogProba_6] AS FLOAT(53)) AS [LogProba_6], CAST([Values].[Proba_7] AS FLOAT(53)) AS [Proba_7], CAST([Values].[LogProba_7] AS FLOAT(53)) AS [LogProba_7], CAST([Values].[Proba_8] AS FLOAT(53)) AS [Proba_8], CAST([Values].[LogProba_8] AS FLOAT(53)) AS [LogProba_8], CAST([Values].[Proba_9] AS FLOAT(53)) AS [Proba_9], CAST([Values].[LogProba_9] AS FLOAT(53)) AS [LogProba_9], CAST([Values].[Decision] AS FLOAT(53)) AS [Decision], CAST([Values].[DecisionProba] AS FLOAT(53)) AS [DecisionProba] 
FROM (SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 11 AS count, 4 AS depth, 3 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0.0 AS [Proba_4], -1.79769313486231e+308 AS [LogProba_4], 1.0 AS [Proba_5], 0.0 AS [LogProba_5], 0.0 AS [Proba_6], -1.79769313486231e+308 AS [LogProba_6], 0.0 AS [Proba_7], -1.79769313486231e+308 AS [LogProba_7], 0.0 AS [Proba_8], -1.79769313486231e+308 AS [LogProba_8], 0.0 AS [Proba_9], -1.79769313486231e+308 AS [LogProba_9], 5 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 1 AS count, 4 AS depth, 3 AS parent_id, 1.0 AS [Proba_0], 0.0 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0.0 AS [Proba_4], -1.79769313486231e+308 AS [LogProba_4], 0.0 AS [Proba_5], -1.79769313486231e+308 AS [LogProba_5], 0.0 AS [Proba_6], -1.79769313486231e+308 AS [LogProba_6], 0.0 AS [Proba_7], -1.79769313486231e+308 AS [LogProba_7], 0.0 AS [Proba_8], -1.79769313486231e+308 AS [LogProba_8], 0.0 AS [Proba_9], -1.79769313486231e+308 AS [LogProba_9], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 1 AS count, 4 AS depth, 6 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0.0 AS [Proba_4], -1.79769313486231e+308 AS [LogProba_4], 1.0 AS [Proba_5], 0.0 AS [LogProba_5], 0.0 AS [Proba_6], -1.79769313486231e+308 AS [LogProba_6], 0.0 AS [Proba_7], -1.79769313486231e+308 AS [LogProba_7], 0.0 AS [Proba_8], -1.79769313486231e+308 AS [LogProba_8], 0.0 AS [Proba_9], -1.79769313486231e+308 AS [LogProba_9], 5 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 41 AS count, 5 AS depth, 8 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0.0 AS [Proba_4], -1.79769313486231e+308 AS [LogProba_4], 0.0 AS [Proba_5], -1.79769313486231e+308 AS [LogProba_5], 0.0 AS [Proba_6], -1.79769313486231e+308 AS [LogProba_6], 0.0 AS [Proba_7], -1.79769313486231e+308 AS [LogProba_7], 0.0 AS [Proba_8], -1.79769313486231e+308 AS [LogProba_8], 1.0 AS [Proba_9], 0.0 AS [LogProba_9], 9 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 1 AS count, 5 AS depth, 8 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 1.0 AS [Proba_3], 0.0 AS [LogProba_3], 0.0 AS [Proba_4], -1.79769313486231e+308 AS [LogProba_4], 0.0 AS [Proba_5], -1.79769313486231e+308 AS [LogProba_5], 0.0 AS [Proba_6], -1.79769313486231e+308 AS [LogProba_6], 0.0 AS [Proba_7], -1.79769313486231e+308 AS [LogProba_7], 0.0 AS [Proba_8], -1.79769313486231e+308 AS [LogProba_8], 0.0 AS [Proba_9], -1.79769313486231e+308 AS [LogProba_9], 3 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 6 AS count, 4 AS depth, 12 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 1.0 AS [Proba_4], 0.0 AS [LogProba_4], 0.0 AS [Proba_5], -1.79769313486231e+308 AS [LogProba_5], 0.0 AS [Proba_6], -1.79769313486231e+308 AS [LogProba_6], 0.0 AS [Proba_7], -1.79769313486231e+308 AS [LogProba_7], 0.0 AS [Proba_8], -1.79769313486231e+308 AS [LogProba_8], 0.0 AS [Proba_9], -1.79769313486231e+308 AS [LogProba_9], 4 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 4 AS count, 5 AS depth, 14 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0.0 AS [Proba_4], -1.79769313486231e+308 AS [LogProba_4], 0.0 AS [Proba_5], -1.79769313486231e+308 AS [LogProba_5], 1.0 AS [Proba_6], 0.0 AS [LogProba_6], 0.0 AS [Proba_7], -1.79769313486231e+308 AS [LogProba_7], 0.0 AS [Proba_8], -1.79769313486231e+308 AS [LogProba_8], 0.0 AS [Proba_9], -1.79769313486231e+308 AS [LogProba_9], 6 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 1 AS count, 5 AS depth, 14 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 1.0 AS [Proba_2], 0.0 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0.0 AS [Proba_4], -1.79769313486231e+308 AS [LogProba_4], 0.0 AS [Proba_5], -1.79769313486231e+308 AS [LogProba_5], 0.0 AS [Proba_6], -1.79769313486231e+308 AS [LogProba_6], 0.0 AS [Proba_7], -1.79769313486231e+308 AS [LogProba_7], 0.0 AS [Proba_8], -1.79769313486231e+308 AS [LogProba_8], 0.0 AS [Proba_9], -1.79769313486231e+308 AS [LogProba_9], 2 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 2 AS count, 5 AS depth, 18 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0.0 AS [Proba_4], -1.79769313486231e+308 AS [LogProba_4], 1.0 AS [Proba_5], 0.0 AS [LogProba_5], 0.0 AS [Proba_6], -1.79769313486231e+308 AS [LogProba_6], 0.0 AS [Proba_7], -1.79769313486231e+308 AS [LogProba_7], 0.0 AS [Proba_8], -1.79769313486231e+308 AS [LogProba_8], 0.0 AS [Proba_9], -1.79769313486231e+308 AS [LogProba_9], 5 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 2 AS count, 5 AS depth, 18 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0.0 AS [Proba_4], -1.79769313486231e+308 AS [LogProba_4], 0.0 AS [Proba_5], -1.79769313486231e+308 AS [LogProba_5], 0.0 AS [Proba_6], -1.79769313486231e+308 AS [LogProba_6], 0.0 AS [Proba_7], -1.79769313486231e+308 AS [LogProba_7], 1.0 AS [Proba_8], 0.0 AS [LogProba_8], 0.0 AS [Proba_9], -1.79769313486231e+308 AS [LogProba_9], 8 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 1 AS count, 5 AS depth, 21 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 1.0 AS [Proba_2], 0.0 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0.0 AS [Proba_4], -1.79769313486231e+308 AS [LogProba_4], 0.0 AS [Proba_5], -1.79769313486231e+308 AS [LogProba_5], 0.0 AS [Proba_6], -1.79769313486231e+308 AS [LogProba_6], 0.0 AS [Proba_7], -1.79769313486231e+308 AS [LogProba_7], 0.0 AS [Proba_8], -1.79769313486231e+308 AS [LogProba_8], 0.0 AS [Proba_9], -1.79769313486231e+308 AS [LogProba_9], 2 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 100 AS count, 5 AS depth, 21 AS parent_id, 1.0 AS [Proba_0], 0.0 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0.0 AS [Proba_4], -1.79769313486231e+308 AS [LogProba_4], 0.0 AS [Proba_5], -1.79769313486231e+308 AS [LogProba_5], 0.0 AS [Proba_6], -1.79769313486231e+308 AS [LogProba_6], 0.0 AS [Proba_7], -1.79769313486231e+308 AS [LogProba_7], 0.0 AS [Proba_8], -1.79769313486231e+308 AS [LogProba_8], 0.0 AS [Proba_9], -1.79769313486231e+308 AS [LogProba_9], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 28 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 39 AS count, 5 AS depth, 27 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.5641025641025641 AS [Proba_2], -0.5725191927713306 AS [LogProba_2], 0.20512820512820512 AS [Proba_3], -1.5841201044498106 AS [LogProba_3], 0.0 AS [Proba_4], -1.79769313486231e+308 AS [LogProba_4], 0.05128205128205128 AS [Proba_5], -2.9704144655697013 AS [LogProba_5], 0.0 AS [Proba_6], -1.79769313486231e+308 AS [LogProba_6], 0.10256410256410256 AS [Proba_7], -2.277267285009756 AS [LogProba_7], 0.05128205128205128 AS [Proba_8], -2.9704144655697013 AS [LogProba_8], 0.02564102564102564 AS [Proba_9], -3.6635616461296463 AS [LogProba_9], 2 AS [Decision], 0.5641025641025641 AS [DecisionProba] UNION ALL SELECT 29 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 27 AS count, 5 AS depth, 27 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.7407407407407407 AS [Proba_1], -0.30010459245033816 AS [LogProba_1], 0.07407407407407407 AS [Proba_2], -2.6026896854443837 AS [LogProba_2], 0.037037037037037035 AS [Proba_3], -3.295836866004329 AS [LogProba_3], 0.07407407407407407 AS [Proba_4], -2.6026896854443837 AS [LogProba_4], 0.0 AS [Proba_5], -1.79769313486231e+308 AS [LogProba_5], 0.07407407407407407 AS [Proba_6], -2.6026896854443837 AS [LogProba_6], 0.0 AS [Proba_7], -1.79769313486231e+308 AS [LogProba_7], 0.0 AS [Proba_8], -1.79769313486231e+308 AS [LogProba_8], 0.0 AS [Proba_9], -1.79769313486231e+308 AS [LogProba_9], 1 AS [Decision], 0.7407407407407407 AS [DecisionProba] UNION ALL SELECT 31 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 3 AS count, 5 AS depth, 30 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.3333333333333333 AS [Proba_3], -1.0986122886681098 AS [LogProba_3], 0.3333333333333333 AS [Proba_4], -1.0986122886681098 AS [LogProba_4], 0.0 AS [Proba_5], -1.79769313486231e+308 AS [LogProba_5], 0.0 AS [Proba_6], -1.79769313486231e+308 AS [LogProba_6], 0.3333333333333333 AS [Proba_7], -1.0986122886681098 AS [LogProba_7], 0.0 AS [Proba_8], -1.79769313486231e+308 AS [LogProba_8], 0.0 AS [Proba_9], -1.79769313486231e+308 AS [LogProba_9], 3 AS [Decision], 0.3333333333333333 AS [DecisionProba] UNION ALL SELECT 32 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 86 AS count, 5 AS depth, 30 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0.011627906976744186 AS [Proba_4], -4.454347296253507 AS [LogProba_4], 0.9883720930232558 AS [Proba_5], -0.011696039763191298 AS [LogProba_5], 0.0 AS [Proba_6], -1.79769313486231e+308 AS [LogProba_6], 0.0 AS [Proba_7], -1.79769313486231e+308 AS [LogProba_7], 0.0 AS [Proba_8], -1.79769313486231e+308 AS [LogProba_8], 0.0 AS [Proba_9], -1.79769313486231e+308 AS [LogProba_9], 5 AS [Decision], 0.9883720930232558 AS [DecisionProba] UNION ALL SELECT 35 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 9 AS count, 5 AS depth, 34 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.7777777777777778 AS [Proba_1], -0.25131442828090605 AS [LogProba_1], 0.2222222222222222 AS [Proba_2], -1.5040773967762742 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0.0 AS [Proba_4], -1.79769313486231e+308 AS [LogProba_4], 0.0 AS [Proba_5], -1.79769313486231e+308 AS [LogProba_5], 0.0 AS [Proba_6], -1.79769313486231e+308 AS [LogProba_6], 0.0 AS [Proba_7], -1.79769313486231e+308 AS [LogProba_7], 0.0 AS [Proba_8], -1.79769313486231e+308 AS [LogProba_8], 0.0 AS [Proba_9], -1.79769313486231e+308 AS [LogProba_9], 1 AS [Decision], 0.7777777777777778 AS [DecisionProba] UNION ALL SELECT 36 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 16 AS count, 5 AS depth, 34 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0.625 AS [Proba_4], -0.4700036292457356 AS [LogProba_4], 0.125 AS [Proba_5], -2.0794415416798357 AS [LogProba_5], 0.25 AS [Proba_6], -1.3862943611198906 AS [LogProba_6], 0.0 AS [Proba_7], -1.79769313486231e+308 AS [LogProba_7], 0.0 AS [Proba_8], -1.79769313486231e+308 AS [LogProba_8], 0.0 AS [Proba_9], -1.79769313486231e+308 AS [LogProba_9], 4 AS [Decision], 0.625 AS [DecisionProba] UNION ALL SELECT 38 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 94 AS count, 5 AS depth, 37 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0.0 AS [Proba_4], -1.79769313486231e+308 AS [LogProba_4], 0.0 AS [Proba_5], -1.79769313486231e+308 AS [LogProba_5], 1.0 AS [Proba_6], 0.0 AS [LogProba_6], 0.0 AS [Proba_7], -1.79769313486231e+308 AS [LogProba_7], 0.0 AS [Proba_8], -1.79769313486231e+308 AS [LogProba_8], 0.0 AS [Proba_9], -1.79769313486231e+308 AS [LogProba_9], 6 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 39 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 4 AS count, 5 AS depth, 37 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 1.0 AS [Proba_2], 0.0 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0.0 AS [Proba_4], -1.79769313486231e+308 AS [LogProba_4], 0.0 AS [Proba_5], -1.79769313486231e+308 AS [LogProba_5], 0.0 AS [Proba_6], -1.79769313486231e+308 AS [LogProba_6], 0.0 AS [Proba_7], -1.79769313486231e+308 AS [LogProba_7], 0.0 AS [Proba_8], -1.79769313486231e+308 AS [LogProba_8], 0.0 AS [Proba_9], -1.79769313486231e+308 AS [LogProba_9], 2 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 43 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 92 AS count, 5 AS depth, 42 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.043478260869565216 AS [Proba_2], -3.1354942159291497 AS [LogProba_2], 0.8695652173913043 AS [Proba_3], -0.13976194237515874 AS [LogProba_3], 0.0 AS [Proba_4], -1.79769313486231e+308 AS [LogProba_4], 0.0 AS [Proba_5], -1.79769313486231e+308 AS [LogProba_5], 0.0 AS [Proba_6], -1.79769313486231e+308 AS [LogProba_6], 0.0 AS [Proba_7], -1.79769313486231e+308 AS [LogProba_7], 0.03260869565217391 AS [Proba_8], -3.4231762883809305 AS [LogProba_8], 0.05434782608695652 AS [Proba_9], -2.91235066461494 AS [LogProba_9], 3 AS [Decision], 0.8695652173913043 AS [DecisionProba] UNION ALL SELECT 44 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 85 AS count, 5 AS depth, 42 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.1411764705882353 AS [Proba_1], -1.957744606702316 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.07058823529411765 AS [Proba_3], -2.6508917872622613 AS [LogProba_3], 0.0 AS [Proba_4], -1.79769313486231e+308 AS [LogProba_4], 0.03529411764705882 AS [Proba_5], -3.3440389678222067 AS [LogProba_5], 0.0 AS [Proba_6], -1.79769313486231e+308 AS [LogProba_6], 0.023529411764705882 AS [Proba_7], -3.7495040759303713 AS [LogProba_7], 0.10588235294117647 AS [Proba_8], -2.245426679154097 AS [LogProba_8], 0.6235294117647059 AS [Proba_9], -0.4723593429381946 AS [LogProba_9], 9 AS [Decision], 0.6235294117647059 AS [DecisionProba] UNION ALL SELECT 46 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 102 AS count, 5 AS depth, 45 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0196078431372549 AS [Proba_1], -3.9318256327243257 AS [LogProba_1], 0.029411764705882353 AS [Proba_2], -3.5263605246161616 AS [LogProba_2], 0.0392156862745098 AS [Proba_3], -3.2386784521643803 AS [LogProba_3], 0.0392156862745098 AS [Proba_4], -3.2386784521643803 AS [LogProba_4], 0.00980392156862745 AS [Proba_5], -4.624972813284271 AS [LogProba_5], 0.0 AS [Proba_6], -1.79769313486231e+308 AS [LogProba_6], 0.7450980392156863 AS [Proba_7], -0.29423947299793995 AS [LogProba_7], 0.0392156862745098 AS [Proba_8], -3.2386784521643803 AS [LogProba_8], 0.0784313725490196 AS [Proba_9], -2.5455312716044354 AS [LogProba_9], 7 AS [Decision], 0.7450980392156863 AS [DecisionProba] UNION ALL SELECT 47 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 227 AS count, 5 AS depth, 45 AS parent_id, 0.00881057268722467 AS [Proba_0], -4.7318028369214575 AS [LogProba_0], 0.2422907488986784 AS [Proba_1], -1.4176168322489318 AS [LogProba_1], 0.31277533039647576 AS [Proba_2], -1.1622701404400873 AS [LogProba_2], 0.03524229074889868 AS [Proba_3], -3.3455084758015667 AS [LogProba_3], 0.013215859030837005 AS [Proba_4], -4.326337728813293 AS [LogProba_4], 0.0 AS [Proba_5], -1.79769313486231e+308 AS [LogProba_5], 0.004405286343612335 AS [Proba_6], -5.424950017481403 AS [LogProba_6], 0.030837004405286344 AS [Proba_7], -3.4790398684260895 AS [LogProba_7], 0.3436123348017621 AS [Proba_8], -1.068241190791811 AS [LogProba_8], 0.00881057268722467 AS [Proba_9], -4.7318028369214575 AS [LogProba_9], 8 AS [Decision], 0.3436123348017621 AS [DecisionProba] UNION ALL SELECT 50 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 84 AS count, 5 AS depth, 49 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.03571428571428571 AS [Proba_1], -3.332204510175204 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0.9642857142857143 AS [Proba_4], -0.03636764417087483 AS [LogProba_4], 0.0 AS [Proba_5], -1.79769313486231e+308 AS [LogProba_5], 0.0 AS [Proba_6], -1.79769313486231e+308 AS [LogProba_6], 0.0 AS [Proba_7], -1.79769313486231e+308 AS [LogProba_7], 0.0 AS [Proba_8], -1.79769313486231e+308 AS [LogProba_8], 0.0 AS [Proba_9], -1.79769313486231e+308 AS [LogProba_9], 4 AS [Decision], 0.9642857142857143 AS [DecisionProba] UNION ALL SELECT 51 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 4 AS count, 5 AS depth, 49 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0.0 AS [Proba_4], -1.79769313486231e+308 AS [LogProba_4], 0.25 AS [Proba_5], -1.3862943611198906 AS [LogProba_5], 0.25 AS [Proba_6], -1.3862943611198906 AS [LogProba_6], 0.5 AS [Proba_7], -0.6931471805599453 AS [LogProba_7], 0.0 AS [Proba_8], -1.79769313486231e+308 AS [LogProba_8], 0.0 AS [Proba_9], -1.79769313486231e+308 AS [LogProba_9], 7 AS [Decision], 0.5 AS [DecisionProba] UNION ALL SELECT 53 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 12 AS count, 5 AS depth, 52 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0.0 AS [Proba_4], -1.79769313486231e+308 AS [LogProba_4], 0.0 AS [Proba_5], -1.79769313486231e+308 AS [LogProba_5], 0.0 AS [Proba_6], -1.79769313486231e+308 AS [LogProba_6], 1.0 AS [Proba_7], 0.0 AS [LogProba_7], 0.0 AS [Proba_8], -1.79769313486231e+308 AS [LogProba_8], 0.0 AS [Proba_9], -1.79769313486231e+308 AS [LogProba_9], 7 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 54 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 21 AS count, 5 AS depth, 52 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.5238095238095238 AS [Proba_1], -0.6466271649250525 AS [LogProba_1], 0.047619047619047616 AS [Proba_2], -3.044522437723423 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0.23809523809523808 AS [Proba_4], -1.4350845252893227 AS [LogProba_4], 0.0 AS [Proba_5], -1.79769313486231e+308 AS [LogProba_5], 0.0 AS [Proba_6], -1.79769313486231e+308 AS [LogProba_6], 0.047619047619047616 AS [Proba_7], -3.044522437723423 AS [LogProba_7], 0.14285714285714285 AS [Proba_8], -1.9459101490553135 AS [LogProba_8], 0.0 AS [Proba_9], -1.79769313486231e+308 AS [LogProba_9], 1 AS [Decision], 0.5238095238095238 AS [DecisionProba]) AS [Values]), 
[DT_Output_1] AS 
(SELECT [DT_node_lookup_1].[KEY] AS [KEY], [DT_node_lookup_1].node_id_2 AS node_id_2, [DT_node_data_1].node_id AS node_id, [DT_node_data_1].feature AS feature, [DT_node_data_1].threshold AS threshold, [DT_node_data_1].count AS count, [DT_node_data_1].depth AS depth, [DT_node_data_1].parent_id AS parent_id, [DT_node_data_1].[Proba_0] AS [Proba_0], [DT_node_data_1].[LogProba_0] AS [LogProba_0], [DT_node_data_1].[Proba_1] AS [Proba_1], [DT_node_data_1].[LogProba_1] AS [LogProba_1], [DT_node_data_1].[Proba_2] AS [Proba_2], [DT_node_data_1].[LogProba_2] AS [LogProba_2], [DT_node_data_1].[Proba_3] AS [Proba_3], [DT_node_data_1].[LogProba_3] AS [LogProba_3], [DT_node_data_1].[Proba_4] AS [Proba_4], [DT_node_data_1].[LogProba_4] AS [LogProba_4], [DT_node_data_1].[Proba_5] AS [Proba_5], [DT_node_data_1].[LogProba_5] AS [LogProba_5], [DT_node_data_1].[Proba_6] AS [Proba_6], [DT_node_data_1].[LogProba_6] AS [LogProba_6], [DT_node_data_1].[Proba_7] AS [Proba_7], [DT_node_data_1].[LogProba_7] AS [LogProba_7], [DT_node_data_1].[Proba_8] AS [Proba_8], [DT_node_data_1].[LogProba_8] AS [LogProba_8], [DT_node_data_1].[Proba_9] AS [Proba_9], [DT_node_data_1].[LogProba_9] AS [LogProba_9], [DT_node_data_1].[Decision] AS [Decision], [DT_node_data_1].[DecisionProba] AS [DecisionProba] 
FROM [DT_node_lookup_1] LEFT OUTER JOIN [DT_node_data_1] ON [DT_node_lookup_1].node_id_2 = [DT_node_data_1].node_id), 
[Calibrated_Model_1] AS 
(SELECT [DT_Output_1].[KEY] AS [KEY], CAST(NULL AS FLOAT(53)) AS [Score_0], CAST(NULL AS FLOAT(53)) AS [Score_1], CAST(NULL AS FLOAT(53)) AS [Score_2], CAST(NULL AS FLOAT(53)) AS [Score_3], CAST(NULL AS FLOAT(53)) AS [Score_4], CAST(NULL AS FLOAT(53)) AS [Score_5], CAST(NULL AS FLOAT(53)) AS [Score_6], CAST(NULL AS FLOAT(53)) AS [Score_7], CAST(NULL AS FLOAT(53)) AS [Score_8], CAST(NULL AS FLOAT(53)) AS [Score_9], [DT_Output_1].[Proba_0] AS [Proba_0], [DT_Output_1].[Proba_1] AS [Proba_1], [DT_Output_1].[Proba_2] AS [Proba_2], [DT_Output_1].[Proba_3] AS [Proba_3], [DT_Output_1].[Proba_4] AS [Proba_4], [DT_Output_1].[Proba_5] AS [Proba_5], [DT_Output_1].[Proba_6] AS [Proba_6], [DT_Output_1].[Proba_7] AS [Proba_7], [DT_Output_1].[Proba_8] AS [Proba_8], [DT_Output_1].[Proba_9] AS [Proba_9], [DT_Output_1].[LogProba_0] AS [LogProba_0], [DT_Output_1].[LogProba_1] AS [LogProba_1], [DT_Output_1].[LogProba_2] AS [LogProba_2], [DT_Output_1].[LogProba_3] AS [LogProba_3], [DT_Output_1].[LogProba_4] AS [LogProba_4], [DT_Output_1].[LogProba_5] AS [LogProba_5], [DT_Output_1].[LogProba_6] AS [LogProba_6], [DT_Output_1].[LogProba_7] AS [LogProba_7], [DT_Output_1].[LogProba_8] AS [LogProba_8], [DT_Output_1].[LogProba_9] AS [LogProba_9], CAST(NULL AS BIGINT) AS [Decision], CAST(NULL AS FLOAT(53)) AS [DecisionProba], coalesce(CAST(NULL AS FLOAT(53)), [DT_Output_1].[Proba_0]) AS [ScoreOrProba_0], coalesce(CAST(NULL AS FLOAT(53)), [DT_Output_1].[Proba_1]) AS [ScoreOrProba_1], coalesce(CAST(NULL AS FLOAT(53)), [DT_Output_1].[Proba_2]) AS [ScoreOrProba_2], coalesce(CAST(NULL AS FLOAT(53)), [DT_Output_1].[Proba_3]) AS [ScoreOrProba_3], coalesce(CAST(NULL AS FLOAT(53)), [DT_Output_1].[Proba_4]) AS [ScoreOrProba_4], coalesce(CAST(NULL AS FLOAT(53)), [DT_Output_1].[Proba_5]) AS [ScoreOrProba_5], coalesce(CAST(NULL AS FLOAT(53)), [DT_Output_1].[Proba_6]) AS [ScoreOrProba_6], coalesce(CAST(NULL AS FLOAT(53)), [DT_Output_1].[Proba_7]) AS [ScoreOrProba_7], coalesce(CAST(NULL AS FLOAT(53)), [DT_Output_1].[Proba_8]) AS [ScoreOrProba_8], coalesce(CAST(NULL AS FLOAT(53)), [DT_Output_1].[Proba_9]) AS [ScoreOrProba_9] 
FROM [DT_Output_1]), 
sigmoid_calibration_1 AS 
(SELECT [Calibrated_Model_1].[KEY] AS [KEY], 1.0 / (1.0 + exp(CASE WHEN (CASE WHEN (-100.0 <= -(6.814799895286755 * [Calibrated_Model_1].[ScoreOrProba_0] + -4.429358601004523)) THEN -(6.814799895286755 * [Calibrated_Model_1].[ScoreOrProba_0] + -4.429358601004523) ELSE -100.0 END <= 100.0) THEN CASE WHEN (-100.0 <= -(6.814799895286755 * [Calibrated_Model_1].[ScoreOrProba_0] + -4.429358601004523)) THEN -(6.814799895286755 * [Calibrated_Model_1].[ScoreOrProba_0] + -4.429358601004523) ELSE -100.0 END ELSE 100.0 END)) AS [Proba_0], 1.0 / (1.0 + exp(CASE WHEN (CASE WHEN (-100.0 <= -(6.374562697357415 * [Calibrated_Model_1].[ScoreOrProba_1] + -3.37377403487923)) THEN -(6.374562697357415 * [Calibrated_Model_1].[ScoreOrProba_1] + -3.37377403487923) ELSE -100.0 END <= 100.0) THEN CASE WHEN (-100.0 <= -(6.374562697357415 * [Calibrated_Model_1].[ScoreOrProba_1] + -3.37377403487923)) THEN -(6.374562697357415 * [Calibrated_Model_1].[ScoreOrProba_1] + -3.37377403487923) ELSE -100.0 END ELSE 100.0 END)) AS [Proba_1], 1.0 / (1.0 + exp(CASE WHEN (CASE WHEN (-100.0 <= -(9.431842539403764 * [Calibrated_Model_1].[ScoreOrProba_2] + -3.952758034589159)) THEN -(9.431842539403764 * [Calibrated_Model_1].[ScoreOrProba_2] + -3.952758034589159) ELSE -100.0 END <= 100.0) THEN CASE WHEN (-100.0 <= -(9.431842539403764 * [Calibrated_Model_1].[ScoreOrProba_2] + -3.952758034589159)) THEN -(9.431842539403764 * [Calibrated_Model_1].[ScoreOrProba_2] + -3.952758034589159) ELSE -100.0 END ELSE 100.0 END)) AS [Proba_2], 1.0 / (1.0 + exp(CASE WHEN (CASE WHEN (-100.0 <= -(6.247407020021181 * [Calibrated_Model_1].[ScoreOrProba_3] + -3.2948816392827345)) THEN -(6.247407020021181 * [Calibrated_Model_1].[ScoreOrProba_3] + -3.2948816392827345) ELSE -100.0 END <= 100.0) THEN CASE WHEN (-100.0 <= -(6.247407020021181 * [Calibrated_Model_1].[ScoreOrProba_3] + -3.2948816392827345)) THEN -(6.247407020021181 * [Calibrated_Model_1].[ScoreOrProba_3] + -3.2948816392827345) ELSE -100.0 END ELSE 100.0 END)) AS [Proba_3], 1.0 / (1.0 + exp(CASE WHEN (CASE WHEN (-100.0 <= -(6.619938446160283 * [Calibrated_Model_1].[ScoreOrProba_4] + -3.8014533281311365)) THEN -(6.619938446160283 * [Calibrated_Model_1].[ScoreOrProba_4] + -3.8014533281311365) ELSE -100.0 END <= 100.0) THEN CASE WHEN (-100.0 <= -(6.619938446160283 * [Calibrated_Model_1].[ScoreOrProba_4] + -3.8014533281311365)) THEN -(6.619938446160283 * [Calibrated_Model_1].[ScoreOrProba_4] + -3.8014533281311365) ELSE -100.0 END ELSE 100.0 END)) AS [Proba_4], 1.0 / (1.0 + exp(CASE WHEN (CASE WHEN (-100.0 <= -(7.295430512002231 * [Calibrated_Model_1].[ScoreOrProba_5] + -4.7965512302969815)) THEN -(7.295430512002231 * [Calibrated_Model_1].[ScoreOrProba_5] + -4.7965512302969815) ELSE -100.0 END <= 100.0) THEN CASE WHEN (-100.0 <= -(7.295430512002231 * [Calibrated_Model_1].[ScoreOrProba_5] + -4.7965512302969815)) THEN -(7.295430512002231 * [Calibrated_Model_1].[ScoreOrProba_5] + -4.7965512302969815) ELSE -100.0 END ELSE 100.0 END)) AS [Proba_5], 1.0 / (1.0 + exp(CASE WHEN (CASE WHEN (-100.0 <= -(10.336835417704611 * [Calibrated_Model_1].[ScoreOrProba_6] + -4.221912727702422)) THEN -(10.336835417704611 * [Calibrated_Model_1].[ScoreOrProba_6] + -4.221912727702422) ELSE -100.0 END <= 100.0) THEN CASE WHEN (-100.0 <= -(10.336835417704611 * [Calibrated_Model_1].[ScoreOrProba_6] + -4.221912727702422)) THEN -(10.336835417704611 * [Calibrated_Model_1].[ScoreOrProba_6] + -4.221912727702422) ELSE -100.0 END ELSE 100.0 END)) AS [Proba_6], 1.0 / (1.0 + exp(CASE WHEN (CASE WHEN (-100.0 <= -(7.956483625693362 * [Calibrated_Model_1].[ScoreOrProba_7] + -4.715063048672062)) THEN -(7.956483625693362 * [Calibrated_Model_1].[ScoreOrProba_7] + -4.715063048672062) ELSE -100.0 END <= 100.0) THEN CASE WHEN (-100.0 <= -(7.956483625693362 * [Calibrated_Model_1].[ScoreOrProba_7] + -4.715063048672062)) THEN -(7.956483625693362 * [Calibrated_Model_1].[ScoreOrProba_7] + -4.715063048672062) ELSE -100.0 END ELSE 100.0 END)) AS [Proba_7], 1.0 / (1.0 + exp(CASE WHEN (CASE WHEN (-100.0 <= -(8.910504866006196 * [Calibrated_Model_1].[ScoreOrProba_8] + -3.9459890192321416)) THEN -(8.910504866006196 * [Calibrated_Model_1].[ScoreOrProba_8] + -3.9459890192321416) ELSE -100.0 END <= 100.0) THEN CASE WHEN (-100.0 <= -(8.910504866006196 * [Calibrated_Model_1].[ScoreOrProba_8] + -3.9459890192321416)) THEN -(8.910504866006196 * [Calibrated_Model_1].[ScoreOrProba_8] + -3.9459890192321416) ELSE -100.0 END ELSE 100.0 END)) AS [Proba_8], 1.0 / (1.0 + exp(CASE WHEN (CASE WHEN (-100.0 <= -(5.933906851028889 * [Calibrated_Model_1].[ScoreOrProba_9] + -3.3847110358095835)) THEN -(5.933906851028889 * [Calibrated_Model_1].[ScoreOrProba_9] + -3.3847110358095835) ELSE -100.0 END <= 100.0) THEN CASE WHEN (-100.0 <= -(5.933906851028889 * [Calibrated_Model_1].[ScoreOrProba_9] + -3.3847110358095835)) THEN -(5.933906851028889 * [Calibrated_Model_1].[ScoreOrProba_9] + -3.3847110358095835) ELSE -100.0 END ELSE 100.0 END)) AS [Proba_9] 
FROM [Calibrated_Model_1]), 
[Normalized_Probas_1] AS 
(SELECT sigmoid_calibration_1.[KEY] AS [KEY], sigmoid_calibration_1.[Proba_0] / (sigmoid_calibration_1.[Proba_0] + sigmoid_calibration_1.[Proba_1] + sigmoid_calibration_1.[Proba_2] + sigmoid_calibration_1.[Proba_3] + sigmoid_calibration_1.[Proba_4] + sigmoid_calibration_1.[Proba_5] + sigmoid_calibration_1.[Proba_6] + sigmoid_calibration_1.[Proba_7] + sigmoid_calibration_1.[Proba_8] + sigmoid_calibration_1.[Proba_9]) AS [Proba_0], sigmoid_calibration_1.[Proba_1] / (sigmoid_calibration_1.[Proba_0] + sigmoid_calibration_1.[Proba_1] + sigmoid_calibration_1.[Proba_2] + sigmoid_calibration_1.[Proba_3] + sigmoid_calibration_1.[Proba_4] + sigmoid_calibration_1.[Proba_5] + sigmoid_calibration_1.[Proba_6] + sigmoid_calibration_1.[Proba_7] + sigmoid_calibration_1.[Proba_8] + sigmoid_calibration_1.[Proba_9]) AS [Proba_1], sigmoid_calibration_1.[Proba_2] / (sigmoid_calibration_1.[Proba_0] + sigmoid_calibration_1.[Proba_1] + sigmoid_calibration_1.[Proba_2] + sigmoid_calibration_1.[Proba_3] + sigmoid_calibration_1.[Proba_4] + sigmoid_calibration_1.[Proba_5] + sigmoid_calibration_1.[Proba_6] + sigmoid_calibration_1.[Proba_7] + sigmoid_calibration_1.[Proba_8] + sigmoid_calibration_1.[Proba_9]) AS [Proba_2], sigmoid_calibration_1.[Proba_3] / (sigmoid_calibration_1.[Proba_0] + sigmoid_calibration_1.[Proba_1] + sigmoid_calibration_1.[Proba_2] + sigmoid_calibration_1.[Proba_3] + sigmoid_calibration_1.[Proba_4] + sigmoid_calibration_1.[Proba_5] + sigmoid_calibration_1.[Proba_6] + sigmoid_calibration_1.[Proba_7] + sigmoid_calibration_1.[Proba_8] + sigmoid_calibration_1.[Proba_9]) AS [Proba_3], sigmoid_calibration_1.[Proba_4] / (sigmoid_calibration_1.[Proba_0] + sigmoid_calibration_1.[Proba_1] + sigmoid_calibration_1.[Proba_2] + sigmoid_calibration_1.[Proba_3] + sigmoid_calibration_1.[Proba_4] + sigmoid_calibration_1.[Proba_5] + sigmoid_calibration_1.[Proba_6] + sigmoid_calibration_1.[Proba_7] + sigmoid_calibration_1.[Proba_8] + sigmoid_calibration_1.[Proba_9]) AS [Proba_4], sigmoid_calibration_1.[Proba_5] / (sigmoid_calibration_1.[Proba_0] + sigmoid_calibration_1.[Proba_1] + sigmoid_calibration_1.[Proba_2] + sigmoid_calibration_1.[Proba_3] + sigmoid_calibration_1.[Proba_4] + sigmoid_calibration_1.[Proba_5] + sigmoid_calibration_1.[Proba_6] + sigmoid_calibration_1.[Proba_7] + sigmoid_calibration_1.[Proba_8] + sigmoid_calibration_1.[Proba_9]) AS [Proba_5], sigmoid_calibration_1.[Proba_6] / (sigmoid_calibration_1.[Proba_0] + sigmoid_calibration_1.[Proba_1] + sigmoid_calibration_1.[Proba_2] + sigmoid_calibration_1.[Proba_3] + sigmoid_calibration_1.[Proba_4] + sigmoid_calibration_1.[Proba_5] + sigmoid_calibration_1.[Proba_6] + sigmoid_calibration_1.[Proba_7] + sigmoid_calibration_1.[Proba_8] + sigmoid_calibration_1.[Proba_9]) AS [Proba_6], sigmoid_calibration_1.[Proba_7] / (sigmoid_calibration_1.[Proba_0] + sigmoid_calibration_1.[Proba_1] + sigmoid_calibration_1.[Proba_2] + sigmoid_calibration_1.[Proba_3] + sigmoid_calibration_1.[Proba_4] + sigmoid_calibration_1.[Proba_5] + sigmoid_calibration_1.[Proba_6] + sigmoid_calibration_1.[Proba_7] + sigmoid_calibration_1.[Proba_8] + sigmoid_calibration_1.[Proba_9]) AS [Proba_7], sigmoid_calibration_1.[Proba_8] / (sigmoid_calibration_1.[Proba_0] + sigmoid_calibration_1.[Proba_1] + sigmoid_calibration_1.[Proba_2] + sigmoid_calibration_1.[Proba_3] + sigmoid_calibration_1.[Proba_4] + sigmoid_calibration_1.[Proba_5] + sigmoid_calibration_1.[Proba_6] + sigmoid_calibration_1.[Proba_7] + sigmoid_calibration_1.[Proba_8] + sigmoid_calibration_1.[Proba_9]) AS [Proba_8], sigmoid_calibration_1.[Proba_9] / (sigmoid_calibration_1.[Proba_0] + sigmoid_calibration_1.[Proba_1] + sigmoid_calibration_1.[Proba_2] + sigmoid_calibration_1.[Proba_3] + sigmoid_calibration_1.[Proba_4] + sigmoid_calibration_1.[Proba_5] + sigmoid_calibration_1.[Proba_6] + sigmoid_calibration_1.[Proba_7] + sigmoid_calibration_1.[Proba_8] + sigmoid_calibration_1.[Proba_9]) AS [Proba_9] 
FROM sigmoid_calibration_1), 
[DT_node_lookup_2] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_21] <= 0.5) THEN CASE WHEN ([ADS].[Feature_42] <= 9.5) THEN CASE WHEN ([ADS].[Feature_5] <= 2.5) THEN CASE WHEN ([ADS].[Feature_9] <= 3.0) THEN CASE WHEN ([ADS].[Feature_37] <= 8.0) THEN 5 ELSE 6 END ELSE CASE WHEN ([ADS].[Feature_52] <= 8.0) THEN 8 ELSE 9 END END ELSE CASE WHEN ([ADS].[Feature_18] <= 4.5) THEN CASE WHEN ([ADS].[Feature_29] <= 7.0) THEN 12 ELSE 13 END ELSE 14 END END ELSE CASE WHEN ([ADS].[Feature_54] <= 0.5) THEN CASE WHEN ([ADS].[Feature_37] <= 5.0) THEN CASE WHEN ([ADS].[Feature_28] <= 7.0) THEN 18 ELSE 19 END ELSE CASE WHEN ([ADS].[Feature_5] <= 14.0) THEN 21 ELSE 22 END END ELSE CASE WHEN ([ADS].[Feature_58] <= 9.0) THEN 24 ELSE 25 END END END ELSE CASE WHEN ([ADS].[Feature_28] <= 0.5) THEN CASE WHEN ([ADS].[Feature_36] <= 3.5) THEN CASE WHEN ([ADS].[Feature_62] <= 3.5) THEN CASE WHEN ([ADS].[Feature_59] <= 4.5) THEN 30 ELSE 31 END ELSE CASE WHEN ([ADS].[Feature_3] <= 8.0) THEN 33 ELSE 34 END END ELSE CASE WHEN ([ADS].[Feature_10] <= 4.5) THEN 36 ELSE CASE WHEN ([ADS].[Feature_6] <= 0.5) THEN 38 ELSE 39 END END END ELSE CASE WHEN ([ADS].[Feature_43] <= 2.5) THEN CASE WHEN ([ADS].[Feature_26] <= 0.5) THEN CASE WHEN ([ADS].[Feature_19] <= 10.5) THEN 43 ELSE 44 END ELSE CASE WHEN ([ADS].[Feature_21] <= 9.5) THEN 46 ELSE 47 END END ELSE CASE WHEN ([ADS].[Feature_60] <= 7.5) THEN CASE WHEN ([ADS].[Feature_25] <= 3.5) THEN 50 ELSE 51 END ELSE CASE WHEN ([ADS].[Feature_33] <= 1.5) THEN 53 ELSE 54 END END END END END AS node_id_2 
FROM digits AS [ADS]), 
[DT_node_data_2] AS 
(SELECT [Values].node_id AS node_id, CAST([Values].feature AS FLOAT(53)) AS feature, CAST([Values].threshold AS FLOAT(53)) AS threshold, CAST([Values].count AS FLOAT(53)) AS count, CAST([Values].depth AS FLOAT(53)) AS depth, CAST([Values].parent_id AS FLOAT(53)) AS parent_id, CAST([Values].[Proba_0] AS FLOAT(53)) AS [Proba_0], CAST([Values].[LogProba_0] AS FLOAT(53)) AS [LogProba_0], CAST([Values].[Proba_1] AS FLOAT(53)) AS [Proba_1], CAST([Values].[LogProba_1] AS FLOAT(53)) AS [LogProba_1], CAST([Values].[Proba_2] AS FLOAT(53)) AS [Proba_2], CAST([Values].[LogProba_2] AS FLOAT(53)) AS [LogProba_2], CAST([Values].[Proba_3] AS FLOAT(53)) AS [Proba_3], CAST([Values].[LogProba_3] AS FLOAT(53)) AS [LogProba_3], CAST([Values].[Proba_4] AS FLOAT(53)) AS [Proba_4], CAST([Values].[LogProba_4] AS FLOAT(53)) AS [LogProba_4], CAST([Values].[Proba_5] AS FLOAT(53)) AS [Proba_5], CAST([Values].[LogProba_5] AS FLOAT(53)) AS [LogProba_5], CAST([Values].[Proba_6] AS FLOAT(53)) AS [Proba_6], CAST([Values].[LogProba_6] AS FLOAT(53)) AS [LogProba_6], CAST([Values].[Proba_7] AS FLOAT(53)) AS [Proba_7], CAST([Values].[LogProba_7] AS FLOAT(53)) AS [LogProba_7], CAST([Values].[Proba_8] AS FLOAT(53)) AS [Proba_8], CAST([Values].[LogProba_8] AS FLOAT(53)) AS [LogProba_8], CAST([Values].[Proba_9] AS FLOAT(53)) AS [Proba_9], CAST([Values].[LogProba_9] AS FLOAT(53)) AS [LogProba_9], CAST([Values].[Decision] AS FLOAT(53)) AS [Decision], CAST([Values].[DecisionProba] AS FLOAT(53)) AS [DecisionProba] 
FROM (SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 22 AS count, 5 AS depth, 4 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.8636363636363636 AS [Proba_1], -0.1466034741918754 AS [LogProba_1], 0.09090909090909091 AS [Proba_2], -2.3978952727983707 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0.0 AS [Proba_4], -1.79769313486231e+308 AS [LogProba_4], 0.0 AS [Proba_5], -1.79769313486231e+308 AS [LogProba_5], 0.0 AS [Proba_6], -1.79769313486231e+308 AS [LogProba_6], 0.0 AS [Proba_7], -1.79769313486231e+308 AS [LogProba_7], 0.045454545454545456 AS [Proba_8], -3.0910424533583156 AS [LogProba_8], 0.0 AS [Proba_9], -1.79769313486231e+308 AS [LogProba_9], 1 AS [Decision], 0.8636363636363636 AS [DecisionProba] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 11 AS count, 5 AS depth, 4 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.18181818181818182 AS [Proba_3], -1.7047480922384253 AS [LogProba_3], 0.36363636363636365 AS [Proba_4], -1.0116009116784799 AS [LogProba_4], 0.18181818181818182 AS [Proba_5], -1.7047480922384253 AS [LogProba_5], 0.18181818181818182 AS [Proba_6], -1.7047480922384253 AS [LogProba_6], 0.09090909090909091 AS [Proba_7], -2.3978952727983707 AS [LogProba_7], 0.0 AS [Proba_8], -1.79769313486231e+308 AS [LogProba_8], 0.0 AS [Proba_9], -1.79769313486231e+308 AS [LogProba_9], 4 AS [Decision], 0.36363636363636365 AS [DecisionProba] UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 6 AS count, 5 AS depth, 7 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.16666666666666666 AS [Proba_2], -1.791759469228055 AS [LogProba_2], 0.3333333333333333 AS [Proba_3], -1.0986122886681098 AS [LogProba_3], 0.0 AS [Proba_4], -1.79769313486231e+308 AS [LogProba_4], 0.0 AS [Proba_5], -1.79769313486231e+308 AS [LogProba_5], 0.0 AS [Proba_6], -1.79769313486231e+308 AS [LogProba_6], 0.0 AS [Proba_7], -1.79769313486231e+308 AS [LogProba_7], 0.3333333333333333 AS [Proba_8], -1.0986122886681098 AS [LogProba_8], 0.16666666666666666 AS [Proba_9], -1.791759469228055 AS [LogProba_9], 3 AS [Decision], 0.3333333333333333 AS [DecisionProba] UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 16 AS count, 5 AS depth, 7 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 1.0 AS [Proba_2], 0.0 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0.0 AS [Proba_4], -1.79769313486231e+308 AS [LogProba_4], 0.0 AS [Proba_5], -1.79769313486231e+308 AS [LogProba_5], 0.0 AS [Proba_6], -1.79769313486231e+308 AS [LogProba_6], 0.0 AS [Proba_7], -1.79769313486231e+308 AS [LogProba_7], 0.0 AS [Proba_8], -1.79769313486231e+308 AS [LogProba_8], 0.0 AS [Proba_9], -1.79769313486231e+308 AS [LogProba_9], 2 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 1 AS count, 5 AS depth, 11 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 1.0 AS [Proba_3], 0.0 AS [LogProba_3], 0.0 AS [Proba_4], -1.79769313486231e+308 AS [LogProba_4], 0.0 AS [Proba_5], -1.79769313486231e+308 AS [LogProba_5], 0.0 AS [Proba_6], -1.79769313486231e+308 AS [LogProba_6], 0.0 AS [Proba_7], -1.79769313486231e+308 AS [LogProba_7], 0.0 AS [Proba_8], -1.79769313486231e+308 AS [LogProba_8], 0.0 AS [Proba_9], -1.79769313486231e+308 AS [LogProba_9], 3 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 1 AS count, 5 AS depth, 11 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0.0 AS [Proba_4], -1.79769313486231e+308 AS [LogProba_4], 0.0 AS [Proba_5], -1.79769313486231e+308 AS [LogProba_5], 0.0 AS [Proba_6], -1.79769313486231e+308 AS [LogProba_6], 1.0 AS [Proba_7], 0.0 AS [LogProba_7], 0.0 AS [Proba_8], -1.79769313486231e+308 AS [LogProba_8], 0.0 AS [Proba_9], -1.79769313486231e+308 AS [LogProba_9], 7 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 91 AS count, 4 AS depth, 10 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0.0 AS [Proba_4], -1.79769313486231e+308 AS [LogProba_4], 1.0 AS [Proba_5], 0.0 AS [LogProba_5], 0.0 AS [Proba_6], -1.79769313486231e+308 AS [LogProba_6], 0.0 AS [Proba_7], -1.79769313486231e+308 AS [LogProba_7], 0.0 AS [Proba_8], -1.79769313486231e+308 AS [LogProba_8], 0.0 AS [Proba_9], -1.79769313486231e+308 AS [LogProba_9], 5 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 6 AS count, 5 AS depth, 17 AS parent_id, 0.16666666666666666 AS [Proba_0], -1.791759469228055 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0.0 AS [Proba_4], -1.79769313486231e+308 AS [LogProba_4], 0.16666666666666666 AS [Proba_5], -1.791759469228055 AS [LogProba_5], 0.6666666666666666 AS [Proba_6], -0.40546510810816444 AS [LogProba_6], 0.0 AS [Proba_7], -1.79769313486231e+308 AS [LogProba_7], 0.0 AS [Proba_8], -1.79769313486231e+308 AS [LogProba_8], 0.0 AS [Proba_9], -1.79769313486231e+308 AS [LogProba_9], 6 AS [Decision], 0.6666666666666666 AS [DecisionProba] UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 6 AS count, 5 AS depth, 17 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 1.0 AS [Proba_1], 0.0 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0.0 AS [Proba_4], -1.79769313486231e+308 AS [LogProba_4], 0.0 AS [Proba_5], -1.79769313486231e+308 AS [LogProba_5], 0.0 AS [Proba_6], -1.79769313486231e+308 AS [LogProba_6], 0.0 AS [Proba_7], -1.79769313486231e+308 AS [LogProba_7], 0.0 AS [Proba_8], -1.79769313486231e+308 AS [LogProba_8], 0.0 AS [Proba_9], -1.79769313486231e+308 AS [LogProba_9], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 21 AS count, 5 AS depth, 20 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 1.0 AS [Proba_4], 0.0 AS [LogProba_4], 0.0 AS [Proba_5], -1.79769313486231e+308 AS [LogProba_5], 0.0 AS [Proba_6], -1.79769313486231e+308 AS [LogProba_6], 0.0 AS [Proba_7], -1.79769313486231e+308 AS [LogProba_7], 0.0 AS [Proba_8], -1.79769313486231e+308 AS [LogProba_8], 0.0 AS [Proba_9], -1.79769313486231e+308 AS [LogProba_9], 4 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 1 AS count, 5 AS depth, 20 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0.0 AS [Proba_4], -1.79769313486231e+308 AS [LogProba_4], 1.0 AS [Proba_5], 0.0 AS [LogProba_5], 0.0 AS [Proba_6], -1.79769313486231e+308 AS [LogProba_6], 0.0 AS [Proba_7], -1.79769313486231e+308 AS [LogProba_7], 0.0 AS [Proba_8], -1.79769313486231e+308 AS [LogProba_8], 0.0 AS [Proba_9], -1.79769313486231e+308 AS [LogProba_9], 5 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 99 AS count, 4 AS depth, 23 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0.0 AS [Proba_4], -1.79769313486231e+308 AS [LogProba_4], 0.0 AS [Proba_5], -1.79769313486231e+308 AS [LogProba_5], 1.0 AS [Proba_6], 0.0 AS [LogProba_6], 0.0 AS [Proba_7], -1.79769313486231e+308 AS [LogProba_7], 0.0 AS [Proba_8], -1.79769313486231e+308 AS [LogProba_8], 0.0 AS [Proba_9], -1.79769313486231e+308 AS [LogProba_9], 6 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 8 AS count, 4 AS depth, 23 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 1.0 AS [Proba_2], 0.0 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0.0 AS [Proba_4], -1.79769313486231e+308 AS [LogProba_4], 0.0 AS [Proba_5], -1.79769313486231e+308 AS [LogProba_5], 0.0 AS [Proba_6], -1.79769313486231e+308 AS [LogProba_6], 0.0 AS [Proba_7], -1.79769313486231e+308 AS [LogProba_7], 0.0 AS [Proba_8], -1.79769313486231e+308 AS [LogProba_8], 0.0 AS [Proba_9], -1.79769313486231e+308 AS [LogProba_9], 2 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 1 AS count, 5 AS depth, 29 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 1.0 AS [Proba_4], 0.0 AS [LogProba_4], 0.0 AS [Proba_5], -1.79769313486231e+308 AS [LogProba_5], 0.0 AS [Proba_6], -1.79769313486231e+308 AS [LogProba_6], 0.0 AS [Proba_7], -1.79769313486231e+308 AS [LogProba_7], 0.0 AS [Proba_8], -1.79769313486231e+308 AS [LogProba_8], 0.0 AS [Proba_9], -1.79769313486231e+308 AS [LogProba_9], 4 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 31 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 97 AS count, 5 AS depth, 29 AS parent_id, 1.0 AS [Proba_0], 0.0 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0.0 AS [Proba_4], -1.79769313486231e+308 AS [LogProba_4], 0.0 AS [Proba_5], -1.79769313486231e+308 AS [LogProba_5], 0.0 AS [Proba_6], -1.79769313486231e+308 AS [LogProba_6], 0.0 AS [Proba_7], -1.79769313486231e+308 AS [LogProba_7], 0.0 AS [Proba_8], -1.79769313486231e+308 AS [LogProba_8], 0.0 AS [Proba_9], -1.79769313486231e+308 AS [LogProba_9], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 33 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 1 AS count, 5 AS depth, 32 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 1.0 AS [Proba_1], 0.0 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0.0 AS [Proba_4], -1.79769313486231e+308 AS [LogProba_4], 0.0 AS [Proba_5], -1.79769313486231e+308 AS [LogProba_5], 0.0 AS [Proba_6], -1.79769313486231e+308 AS [LogProba_6], 0.0 AS [Proba_7], -1.79769313486231e+308 AS [LogProba_7], 0.0 AS [Proba_8], -1.79769313486231e+308 AS [LogProba_8], 0.0 AS [Proba_9], -1.79769313486231e+308 AS [LogProba_9], 1 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 34 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 2 AS count, 5 AS depth, 32 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 1.0 AS [Proba_2], 0.0 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0.0 AS [Proba_4], -1.79769313486231e+308 AS [LogProba_4], 0.0 AS [Proba_5], -1.79769313486231e+308 AS [LogProba_5], 0.0 AS [Proba_6], -1.79769313486231e+308 AS [LogProba_6], 0.0 AS [Proba_7], -1.79769313486231e+308 AS [LogProba_7], 0.0 AS [Proba_8], -1.79769313486231e+308 AS [LogProba_8], 0.0 AS [Proba_9], -1.79769313486231e+308 AS [LogProba_9], 2 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 36 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 10 AS count, 4 AS depth, 35 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 1.0 AS [Proba_4], 0.0 AS [LogProba_4], 0.0 AS [Proba_5], -1.79769313486231e+308 AS [LogProba_5], 0.0 AS [Proba_6], -1.79769313486231e+308 AS [LogProba_6], 0.0 AS [Proba_7], -1.79769313486231e+308 AS [LogProba_7], 0.0 AS [Proba_8], -1.79769313486231e+308 AS [LogProba_8], 0.0 AS [Proba_9], -1.79769313486231e+308 AS [LogProba_9], 4 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 38 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 3 AS count, 5 AS depth, 37 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.3333333333333333 AS [Proba_2], -1.0986122886681098 AS [LogProba_2], 0.3333333333333333 AS [Proba_3], -1.0986122886681098 AS [LogProba_3], 0.0 AS [Proba_4], -1.79769313486231e+308 AS [LogProba_4], 0.0 AS [Proba_5], -1.79769313486231e+308 AS [LogProba_5], 0.0 AS [Proba_6], -1.79769313486231e+308 AS [LogProba_6], 0.0 AS [Proba_7], -1.79769313486231e+308 AS [LogProba_7], 0.0 AS [Proba_8], -1.79769313486231e+308 AS [LogProba_8], 0.3333333333333333 AS [Proba_9], -1.0986122886681098 AS [LogProba_9], 2 AS [Decision], 0.3333333333333333 AS [DecisionProba] UNION ALL SELECT 39 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 2 AS count, 5 AS depth, 37 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0.0 AS [Proba_4], -1.79769313486231e+308 AS [LogProba_4], 0.0 AS [Proba_5], -1.79769313486231e+308 AS [LogProba_5], 0.0 AS [Proba_6], -1.79769313486231e+308 AS [LogProba_6], 1.0 AS [Proba_7], 0.0 AS [LogProba_7], 0.0 AS [Proba_8], -1.79769313486231e+308 AS [LogProba_8], 0.0 AS [Proba_9], -1.79769313486231e+308 AS [LogProba_9], 7 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 43 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 72 AS count, 5 AS depth, 42 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.013888888888888888 AS [Proba_2], -4.276666119016055 AS [LogProba_2], 0.9861111111111112 AS [Proba_3], -0.01398624197473984 AS [LogProba_3], 0.0 AS [Proba_4], -1.79769313486231e+308 AS [LogProba_4], 0.0 AS [Proba_5], -1.79769313486231e+308 AS [LogProba_5], 0.0 AS [Proba_6], -1.79769313486231e+308 AS [LogProba_6], 0.0 AS [Proba_7], -1.79769313486231e+308 AS [LogProba_7], 0.0 AS [Proba_8], -1.79769313486231e+308 AS [LogProba_8], 0.0 AS [Proba_9], -1.79769313486231e+308 AS [LogProba_9], 3 AS [Decision], 0.9861111111111112 AS [DecisionProba] UNION ALL SELECT 44 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 4 AS count, 5 AS depth, 42 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.25 AS [Proba_2], -1.3862943611198906 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0.0 AS [Proba_4], -1.79769313486231e+308 AS [LogProba_4], 0.0 AS [Proba_5], -1.79769313486231e+308 AS [LogProba_5], 0.0 AS [Proba_6], -1.79769313486231e+308 AS [LogProba_6], 0.0 AS [Proba_7], -1.79769313486231e+308 AS [LogProba_7], 0.0 AS [Proba_8], -1.79769313486231e+308 AS [LogProba_8], 0.75 AS [Proba_9], -0.2876820724517809 AS [LogProba_9], 9 AS [Decision], 0.75 AS [DecisionProba] UNION ALL SELECT 46 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 44 AS count, 5 AS depth, 45 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.045454545454545456 AS [Proba_1], -3.0910424533583156 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.3409090909090909 AS [Proba_3], -1.0761394328160512 AS [LogProba_3], 0.13636363636363635 AS [Proba_4], -1.9924301646902063 AS [LogProba_4], 0.25 AS [Proba_5], -1.3862943611198906 AS [LogProba_5], 0.022727272727272728 AS [Proba_6], -3.784189633918261 AS [LogProba_6], 0.045454545454545456 AS [Proba_7], -3.0910424533583156 AS [LogProba_7], 0.06818181818181818 AS [Proba_8], -2.6855773452501515 AS [LogProba_8], 0.09090909090909091 AS [Proba_9], -2.3978952727983707 AS [LogProba_9], 3 AS [Decision], 0.3409090909090909 AS [DecisionProba] UNION ALL SELECT 47 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 134 AS count, 5 AS depth, 45 AS parent_id, 0.03731343283582089 AS [Proba_0], -3.288401887516811 AS [LogProba_0], 0.1044776119402985 AS [Proba_1], -2.2587824703356527 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.03731343283582089 AS [Proba_3], -3.288401887516811 AS [LogProba_3], 0.007462686567164179 AS [Proba_4], -4.897839799950911 AS [LogProba_4], 0.007462686567164179 AS [Proba_5], -4.897839799950911 AS [LogProba_5], 0.0 AS [Proba_6], -1.79769313486231e+308 AS [LogProba_6], 0.007462686567164179 AS [Proba_7], -4.897839799950911 AS [LogProba_7], 0.08955223880597014 AS [Proba_8], -2.412933150162911 AS [LogProba_8], 0.7089552238805971 AS [Proba_9], -0.34396290835037047 AS [LogProba_9], 9 AS [Decision], 0.7089552238805971 AS [DecisionProba] UNION ALL SELECT 50 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 105 AS count, 5 AS depth, 49 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.01904761904761905 AS [Proba_1], -3.960813169597578 AS [LogProba_1], 0.02857142857142857 AS [Proba_2], -3.5553480614894135 AS [LogProba_2], 0.0380952380952381 AS [Proba_3], -3.2676659890376327 AS [LogProba_3], 0.009523809523809525 AS [Proba_4], -4.653960350157523 AS [LogProba_4], 0.0 AS [Proba_5], -1.79769313486231e+308 AS [LogProba_5], 0.0 AS [Proba_6], -1.79769313486231e+308 AS [LogProba_6], 0.8666666666666667 AS [Proba_7], -0.1431008436406733 AS [LogProba_7], 0.02857142857142857 AS [Proba_8], -3.5553480614894135 AS [LogProba_8], 0.009523809523809525 AS [Proba_9], -4.653960350157523 AS [LogProba_9], 7 AS [Decision], 0.8666666666666667 AS [DecisionProba] UNION ALL SELECT 51 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 21 AS count, 5 AS depth, 49 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.09523809523809523 AS [Proba_1], -2.3513752571634776 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0.5238095238095238 AS [Proba_4], -0.6466271649250525 AS [LogProba_4], 0.047619047619047616 AS [Proba_5], -3.044522437723423 AS [LogProba_5], 0.0 AS [Proba_6], -1.79769313486231e+308 AS [LogProba_6], 0.19047619047619047 AS [Proba_7], -1.6582280766035324 AS [LogProba_7], 0.047619047619047616 AS [Proba_8], -3.044522437723423 AS [LogProba_8], 0.09523809523809523 AS [Proba_9], -2.3513752571634776 AS [LogProba_9], 4 AS [Decision], 0.5238095238095238 AS [DecisionProba] UNION ALL SELECT 53 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 217 AS count, 5 AS depth, 52 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.23963133640552994 AS [Proba_1], -1.4286536349590322 AS [LogProba_1], 0.35023041474654376 AS [Proba_2], -1.0491640132541284 AS [LogProba_2], 0.03686635944700461 AS [Proba_3], -3.3004558118606235 AS [LogProba_3], 0.0 AS [Proba_4], -1.79769313486231e+308 AS [LogProba_4], 0.0 AS [Proba_5], -1.79769313486231e+308 AS [LogProba_5], 0.0 AS [Proba_6], -1.79769313486231e+308 AS [LogProba_6], 0.013824884792626729 AS [Proba_7], -4.28128506487235 AS [LogProba_7], 0.3456221198156682 AS [Proba_8], -1.0624092400041492 AS [LogProba_8], 0.013824884792626729 AS [Proba_9], -4.28128506487235 AS [LogProba_9], 2 AS [Decision], 0.35023041474654376 AS [DecisionProba] UNION ALL SELECT 54 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 76 AS count, 5 AS depth, 52 AS parent_id, 0.013157894736842105 AS [Proba_0], -4.330733340286331 AS [LogProba_0], 0.15789473684210525 AS [Proba_1], -1.845826690498331 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0.7631578947368421 AS [Proba_4], -0.2702903297399117 AS [LogProba_4], 0.0 AS [Proba_5], -1.79769313486231e+308 AS [LogProba_5], 0.013157894736842105 AS [Proba_6], -4.330733340286331 AS [LogProba_6], 0.0 AS [Proba_7], -1.79769313486231e+308 AS [LogProba_7], 0.05263157894736842 AS [Proba_8], -2.9444389791664407 AS [LogProba_8], 0.0 AS [Proba_9], -1.79769313486231e+308 AS [LogProba_9], 4 AS [Decision], 0.7631578947368421 AS [DecisionProba]) AS [Values]), 
[DT_Output_2] AS 
(SELECT [DT_node_lookup_2].[KEY] AS [KEY], [DT_node_lookup_2].node_id_2 AS node_id_2, [DT_node_data_2].node_id AS node_id, [DT_node_data_2].feature AS feature, [DT_node_data_2].threshold AS threshold, [DT_node_data_2].count AS count, [DT_node_data_2].depth AS depth, [DT_node_data_2].parent_id AS parent_id, [DT_node_data_2].[Proba_0] AS [Proba_0], [DT_node_data_2].[LogProba_0] AS [LogProba_0], [DT_node_data_2].[Proba_1] AS [Proba_1], [DT_node_data_2].[LogProba_1] AS [LogProba_1], [DT_node_data_2].[Proba_2] AS [Proba_2], [DT_node_data_2].[LogProba_2] AS [LogProba_2], [DT_node_data_2].[Proba_3] AS [Proba_3], [DT_node_data_2].[LogProba_3] AS [LogProba_3], [DT_node_data_2].[Proba_4] AS [Proba_4], [DT_node_data_2].[LogProba_4] AS [LogProba_4], [DT_node_data_2].[Proba_5] AS [Proba_5], [DT_node_data_2].[LogProba_5] AS [LogProba_5], [DT_node_data_2].[Proba_6] AS [Proba_6], [DT_node_data_2].[LogProba_6] AS [LogProba_6], [DT_node_data_2].[Proba_7] AS [Proba_7], [DT_node_data_2].[LogProba_7] AS [LogProba_7], [DT_node_data_2].[Proba_8] AS [Proba_8], [DT_node_data_2].[LogProba_8] AS [LogProba_8], [DT_node_data_2].[Proba_9] AS [Proba_9], [DT_node_data_2].[LogProba_9] AS [LogProba_9], [DT_node_data_2].[Decision] AS [Decision], [DT_node_data_2].[DecisionProba] AS [DecisionProba] 
FROM [DT_node_lookup_2] LEFT OUTER JOIN [DT_node_data_2] ON [DT_node_lookup_2].node_id_2 = [DT_node_data_2].node_id), 
[Calibrated_Model_2] AS 
(SELECT [DT_Output_2].[KEY] AS [KEY], CAST(NULL AS FLOAT(53)) AS [Score_0], CAST(NULL AS FLOAT(53)) AS [Score_1], CAST(NULL AS FLOAT(53)) AS [Score_2], CAST(NULL AS FLOAT(53)) AS [Score_3], CAST(NULL AS FLOAT(53)) AS [Score_4], CAST(NULL AS FLOAT(53)) AS [Score_5], CAST(NULL AS FLOAT(53)) AS [Score_6], CAST(NULL AS FLOAT(53)) AS [Score_7], CAST(NULL AS FLOAT(53)) AS [Score_8], CAST(NULL AS FLOAT(53)) AS [Score_9], [DT_Output_2].[Proba_0] AS [Proba_0], [DT_Output_2].[Proba_1] AS [Proba_1], [DT_Output_2].[Proba_2] AS [Proba_2], [DT_Output_2].[Proba_3] AS [Proba_3], [DT_Output_2].[Proba_4] AS [Proba_4], [DT_Output_2].[Proba_5] AS [Proba_5], [DT_Output_2].[Proba_6] AS [Proba_6], [DT_Output_2].[Proba_7] AS [Proba_7], [DT_Output_2].[Proba_8] AS [Proba_8], [DT_Output_2].[Proba_9] AS [Proba_9], [DT_Output_2].[LogProba_0] AS [LogProba_0], [DT_Output_2].[LogProba_1] AS [LogProba_1], [DT_Output_2].[LogProba_2] AS [LogProba_2], [DT_Output_2].[LogProba_3] AS [LogProba_3], [DT_Output_2].[LogProba_4] AS [LogProba_4], [DT_Output_2].[LogProba_5] AS [LogProba_5], [DT_Output_2].[LogProba_6] AS [LogProba_6], [DT_Output_2].[LogProba_7] AS [LogProba_7], [DT_Output_2].[LogProba_8] AS [LogProba_8], [DT_Output_2].[LogProba_9] AS [LogProba_9], CAST(NULL AS BIGINT) AS [Decision], CAST(NULL AS FLOAT(53)) AS [DecisionProba], coalesce(CAST(NULL AS FLOAT(53)), [DT_Output_2].[Proba_0]) AS [ScoreOrProba_0], coalesce(CAST(NULL AS FLOAT(53)), [DT_Output_2].[Proba_1]) AS [ScoreOrProba_1], coalesce(CAST(NULL AS FLOAT(53)), [DT_Output_2].[Proba_2]) AS [ScoreOrProba_2], coalesce(CAST(NULL AS FLOAT(53)), [DT_Output_2].[Proba_3]) AS [ScoreOrProba_3], coalesce(CAST(NULL AS FLOAT(53)), [DT_Output_2].[Proba_4]) AS [ScoreOrProba_4], coalesce(CAST(NULL AS FLOAT(53)), [DT_Output_2].[Proba_5]) AS [ScoreOrProba_5], coalesce(CAST(NULL AS FLOAT(53)), [DT_Output_2].[Proba_6]) AS [ScoreOrProba_6], coalesce(CAST(NULL AS FLOAT(53)), [DT_Output_2].[Proba_7]) AS [ScoreOrProba_7], coalesce(CAST(NULL AS FLOAT(53)), [DT_Output_2].[Proba_8]) AS [ScoreOrProba_8], coalesce(CAST(NULL AS FLOAT(53)), [DT_Output_2].[Proba_9]) AS [ScoreOrProba_9] 
FROM [DT_Output_2]), 
sigmoid_calibration_2 AS 
(SELECT [Calibrated_Model_2].[KEY] AS [KEY], 1.0 / (1.0 + exp(CASE WHEN (CASE WHEN (-100.0 <= -(7.625629541039072 * [Calibrated_Model_2].[ScoreOrProba_0] + -3.9430626687107275)) THEN -(7.625629541039072 * [Calibrated_Model_2].[ScoreOrProba_0] + -3.9430626687107275) ELSE -100.0 END <= 100.0) THEN CASE WHEN (-100.0 <= -(7.625629541039072 * [Calibrated_Model_2].[ScoreOrProba_0] + -3.9430626687107275)) THEN -(7.625629541039072 * [Calibrated_Model_2].[ScoreOrProba_0] + -3.9430626687107275) ELSE -100.0 END ELSE 100.0 END)) AS [Proba_0], 1.0 / (1.0 + exp(CASE WHEN (CASE WHEN (-100.0 <= -(5.0146840908984185 * [Calibrated_Model_2].[ScoreOrProba_1] + -3.0873543296139183)) THEN -(5.0146840908984185 * [Calibrated_Model_2].[ScoreOrProba_1] + -3.0873543296139183) ELSE -100.0 END <= 100.0) THEN CASE WHEN (-100.0 <= -(5.0146840908984185 * [Calibrated_Model_2].[ScoreOrProba_1] + -3.0873543296139183)) THEN -(5.0146840908984185 * [Calibrated_Model_2].[ScoreOrProba_1] + -3.0873543296139183) ELSE -100.0 END ELSE 100.0 END)) AS [Proba_1], 1.0 / (1.0 + exp(CASE WHEN (CASE WHEN (-100.0 <= -(7.377046557677383 * [Calibrated_Model_2].[ScoreOrProba_2] + -3.4556647949741164)) THEN -(7.377046557677383 * [Calibrated_Model_2].[ScoreOrProba_2] + -3.4556647949741164) ELSE -100.0 END <= 100.0) THEN CASE WHEN (-100.0 <= -(7.377046557677383 * [Calibrated_Model_2].[ScoreOrProba_2] + -3.4556647949741164)) THEN -(7.377046557677383 * [Calibrated_Model_2].[ScoreOrProba_2] + -3.4556647949741164) ELSE -100.0 END ELSE 100.0 END)) AS [Proba_2], 1.0 / (1.0 + exp(CASE WHEN (CASE WHEN (-100.0 <= -(7.553850843310039 * [Calibrated_Model_2].[ScoreOrProba_3] + -3.652567699863996)) THEN -(7.553850843310039 * [Calibrated_Model_2].[ScoreOrProba_3] + -3.652567699863996) ELSE -100.0 END <= 100.0) THEN CASE WHEN (-100.0 <= -(7.553850843310039 * [Calibrated_Model_2].[ScoreOrProba_3] + -3.652567699863996)) THEN -(7.553850843310039 * [Calibrated_Model_2].[ScoreOrProba_3] + -3.652567699863996) ELSE -100.0 END ELSE 100.0 END)) AS [Proba_3], 1.0 / (1.0 + exp(CASE WHEN (CASE WHEN (-100.0 <= -(5.9570057499425655 * [Calibrated_Model_2].[ScoreOrProba_4] + -3.737496471744138)) THEN -(5.9570057499425655 * [Calibrated_Model_2].[ScoreOrProba_4] + -3.737496471744138) ELSE -100.0 END <= 100.0) THEN CASE WHEN (-100.0 <= -(5.9570057499425655 * [Calibrated_Model_2].[ScoreOrProba_4] + -3.737496471744138)) THEN -(5.9570057499425655 * [Calibrated_Model_2].[ScoreOrProba_4] + -3.737496471744138) ELSE -100.0 END ELSE 100.0 END)) AS [Proba_4], 1.0 / (1.0 + exp(CASE WHEN (CASE WHEN (-100.0 <= -(7.351221480079234 * [Calibrated_Model_2].[ScoreOrProba_5] + -4.175318972793938)) THEN -(7.351221480079234 * [Calibrated_Model_2].[ScoreOrProba_5] + -4.175318972793938) ELSE -100.0 END <= 100.0) THEN CASE WHEN (-100.0 <= -(7.351221480079234 * [Calibrated_Model_2].[ScoreOrProba_5] + -4.175318972793938)) THEN -(7.351221480079234 * [Calibrated_Model_2].[ScoreOrProba_5] + -4.175318972793938) ELSE -100.0 END ELSE 100.0 END)) AS [Proba_5], 1.0 / (1.0 + exp(CASE WHEN (CASE WHEN (-100.0 <= -(6.851866282225998 * [Calibrated_Model_2].[ScoreOrProba_6] + -4.353270358754326)) THEN -(6.851866282225998 * [Calibrated_Model_2].[ScoreOrProba_6] + -4.353270358754326) ELSE -100.0 END <= 100.0) THEN CASE WHEN (-100.0 <= -(6.851866282225998 * [Calibrated_Model_2].[ScoreOrProba_6] + -4.353270358754326)) THEN -(6.851866282225998 * [Calibrated_Model_2].[ScoreOrProba_6] + -4.353270358754326) ELSE -100.0 END ELSE 100.0 END)) AS [Proba_6], 1.0 / (1.0 + exp(CASE WHEN (CASE WHEN (-100.0 <= -(4.917908894708907 * [Calibrated_Model_2].[ScoreOrProba_7] + -3.215705678377442)) THEN -(4.917908894708907 * [Calibrated_Model_2].[ScoreOrProba_7] + -3.215705678377442) ELSE -100.0 END <= 100.0) THEN CASE WHEN (-100.0 <= -(4.917908894708907 * [Calibrated_Model_2].[ScoreOrProba_7] + -3.215705678377442)) THEN -(4.917908894708907 * [Calibrated_Model_2].[ScoreOrProba_7] + -3.215705678377442) ELSE -100.0 END ELSE 100.0 END)) AS [Proba_7], 1.0 / (1.0 + exp(CASE WHEN (CASE WHEN (-100.0 <= -(9.290934419723856 * [Calibrated_Model_2].[ScoreOrProba_8] + -3.8588810437476573)) THEN -(9.290934419723856 * [Calibrated_Model_2].[ScoreOrProba_8] + -3.8588810437476573) ELSE -100.0 END <= 100.0) THEN CASE WHEN (-100.0 <= -(9.290934419723856 * [Calibrated_Model_2].[ScoreOrProba_8] + -3.8588810437476573)) THEN -(9.290934419723856 * [Calibrated_Model_2].[ScoreOrProba_8] + -3.8588810437476573) ELSE -100.0 END ELSE 100.0 END)) AS [Proba_8], 1.0 / (1.0 + exp(CASE WHEN (CASE WHEN (-100.0 <= -(6.635186336227352 * [Calibrated_Model_2].[ScoreOrProba_9] + -4.134087548782611)) THEN -(6.635186336227352 * [Calibrated_Model_2].[ScoreOrProba_9] + -4.134087548782611) ELSE -100.0 END <= 100.0) THEN CASE WHEN (-100.0 <= -(6.635186336227352 * [Calibrated_Model_2].[ScoreOrProba_9] + -4.134087548782611)) THEN -(6.635186336227352 * [Calibrated_Model_2].[ScoreOrProba_9] + -4.134087548782611) ELSE -100.0 END ELSE 100.0 END)) AS [Proba_9] 
FROM [Calibrated_Model_2]), 
[Normalized_Probas_2] AS 
(SELECT sigmoid_calibration_2.[KEY] AS [KEY], sigmoid_calibration_2.[Proba_0] / (sigmoid_calibration_2.[Proba_0] + sigmoid_calibration_2.[Proba_1] + sigmoid_calibration_2.[Proba_2] + sigmoid_calibration_2.[Proba_3] + sigmoid_calibration_2.[Proba_4] + sigmoid_calibration_2.[Proba_5] + sigmoid_calibration_2.[Proba_6] + sigmoid_calibration_2.[Proba_7] + sigmoid_calibration_2.[Proba_8] + sigmoid_calibration_2.[Proba_9]) AS [Proba_0], sigmoid_calibration_2.[Proba_1] / (sigmoid_calibration_2.[Proba_0] + sigmoid_calibration_2.[Proba_1] + sigmoid_calibration_2.[Proba_2] + sigmoid_calibration_2.[Proba_3] + sigmoid_calibration_2.[Proba_4] + sigmoid_calibration_2.[Proba_5] + sigmoid_calibration_2.[Proba_6] + sigmoid_calibration_2.[Proba_7] + sigmoid_calibration_2.[Proba_8] + sigmoid_calibration_2.[Proba_9]) AS [Proba_1], sigmoid_calibration_2.[Proba_2] / (sigmoid_calibration_2.[Proba_0] + sigmoid_calibration_2.[Proba_1] + sigmoid_calibration_2.[Proba_2] + sigmoid_calibration_2.[Proba_3] + sigmoid_calibration_2.[Proba_4] + sigmoid_calibration_2.[Proba_5] + sigmoid_calibration_2.[Proba_6] + sigmoid_calibration_2.[Proba_7] + sigmoid_calibration_2.[Proba_8] + sigmoid_calibration_2.[Proba_9]) AS [Proba_2], sigmoid_calibration_2.[Proba_3] / (sigmoid_calibration_2.[Proba_0] + sigmoid_calibration_2.[Proba_1] + sigmoid_calibration_2.[Proba_2] + sigmoid_calibration_2.[Proba_3] + sigmoid_calibration_2.[Proba_4] + sigmoid_calibration_2.[Proba_5] + sigmoid_calibration_2.[Proba_6] + sigmoid_calibration_2.[Proba_7] + sigmoid_calibration_2.[Proba_8] + sigmoid_calibration_2.[Proba_9]) AS [Proba_3], sigmoid_calibration_2.[Proba_4] / (sigmoid_calibration_2.[Proba_0] + sigmoid_calibration_2.[Proba_1] + sigmoid_calibration_2.[Proba_2] + sigmoid_calibration_2.[Proba_3] + sigmoid_calibration_2.[Proba_4] + sigmoid_calibration_2.[Proba_5] + sigmoid_calibration_2.[Proba_6] + sigmoid_calibration_2.[Proba_7] + sigmoid_calibration_2.[Proba_8] + sigmoid_calibration_2.[Proba_9]) AS [Proba_4], sigmoid_calibration_2.[Proba_5] / (sigmoid_calibration_2.[Proba_0] + sigmoid_calibration_2.[Proba_1] + sigmoid_calibration_2.[Proba_2] + sigmoid_calibration_2.[Proba_3] + sigmoid_calibration_2.[Proba_4] + sigmoid_calibration_2.[Proba_5] + sigmoid_calibration_2.[Proba_6] + sigmoid_calibration_2.[Proba_7] + sigmoid_calibration_2.[Proba_8] + sigmoid_calibration_2.[Proba_9]) AS [Proba_5], sigmoid_calibration_2.[Proba_6] / (sigmoid_calibration_2.[Proba_0] + sigmoid_calibration_2.[Proba_1] + sigmoid_calibration_2.[Proba_2] + sigmoid_calibration_2.[Proba_3] + sigmoid_calibration_2.[Proba_4] + sigmoid_calibration_2.[Proba_5] + sigmoid_calibration_2.[Proba_6] + sigmoid_calibration_2.[Proba_7] + sigmoid_calibration_2.[Proba_8] + sigmoid_calibration_2.[Proba_9]) AS [Proba_6], sigmoid_calibration_2.[Proba_7] / (sigmoid_calibration_2.[Proba_0] + sigmoid_calibration_2.[Proba_1] + sigmoid_calibration_2.[Proba_2] + sigmoid_calibration_2.[Proba_3] + sigmoid_calibration_2.[Proba_4] + sigmoid_calibration_2.[Proba_5] + sigmoid_calibration_2.[Proba_6] + sigmoid_calibration_2.[Proba_7] + sigmoid_calibration_2.[Proba_8] + sigmoid_calibration_2.[Proba_9]) AS [Proba_7], sigmoid_calibration_2.[Proba_8] / (sigmoid_calibration_2.[Proba_0] + sigmoid_calibration_2.[Proba_1] + sigmoid_calibration_2.[Proba_2] + sigmoid_calibration_2.[Proba_3] + sigmoid_calibration_2.[Proba_4] + sigmoid_calibration_2.[Proba_5] + sigmoid_calibration_2.[Proba_6] + sigmoid_calibration_2.[Proba_7] + sigmoid_calibration_2.[Proba_8] + sigmoid_calibration_2.[Proba_9]) AS [Proba_8], sigmoid_calibration_2.[Proba_9] / (sigmoid_calibration_2.[Proba_0] + sigmoid_calibration_2.[Proba_1] + sigmoid_calibration_2.[Proba_2] + sigmoid_calibration_2.[Proba_3] + sigmoid_calibration_2.[Proba_4] + sigmoid_calibration_2.[Proba_5] + sigmoid_calibration_2.[Proba_6] + sigmoid_calibration_2.[Proba_7] + sigmoid_calibration_2.[Proba_8] + sigmoid_calibration_2.[Proba_9]) AS [Proba_9] 
FROM sigmoid_calibration_2), 
[DT_node_lookup_3] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_36] <= 0.5) THEN CASE WHEN ([ADS].[Feature_28] <= 4.5) THEN CASE WHEN ([ADS].[Feature_21] <= 0.5) THEN CASE WHEN ([ADS].[Feature_6] <= 1.0) THEN CASE WHEN ([ADS].[Feature_49] <= 3.5) THEN 5 ELSE 6 END ELSE 7 END ELSE CASE WHEN ([ADS].[Feature_3] <= 6.0) THEN 9 ELSE 10 END END ELSE CASE WHEN ([ADS].[Feature_21] <= 9.0) THEN CASE WHEN ([ADS].[Feature_5] <= 1.5) THEN CASE WHEN ([ADS].[Feature_12] <= 7.0) THEN 14 ELSE 15 END ELSE CASE WHEN ([ADS].[Feature_60] <= 4.5) THEN 17 ELSE 18 END END ELSE CASE WHEN ([ADS].[Feature_35] <= 4.5) THEN CASE WHEN ([ADS].[Feature_18] <= 2.0) THEN 21 ELSE 22 END ELSE CASE WHEN ([ADS].[Feature_35] <= 8.5) THEN 24 ELSE 25 END END END END ELSE CASE WHEN ([ADS].[Feature_21] <= 0.5) THEN CASE WHEN ([ADS].[Feature_42] <= 8.5) THEN CASE WHEN ([ADS].[Feature_5] <= 2.5) THEN CASE WHEN ([ADS].[Feature_9] <= 0.5) THEN 30 ELSE 31 END ELSE CASE WHEN ([ADS].[Feature_2] <= 0.5) THEN 33 ELSE 34 END END ELSE CASE WHEN ([ADS].[Feature_54] <= 0.5) THEN CASE WHEN ([ADS].[Feature_35] <= 15.5) THEN 37 ELSE 38 END ELSE CASE WHEN ([ADS].[Feature_58] <= 9.5) THEN 40 ELSE 41 END END END ELSE CASE WHEN ([ADS].[Feature_60] <= 7.5) THEN CASE WHEN ([ADS].[Feature_26] <= 12.5) THEN CASE WHEN ([ADS].[Feature_53] <= 7.5) THEN 45 ELSE 46 END ELSE CASE WHEN ([ADS].[Feature_42] <= 3.5) THEN 48 ELSE 49 END END ELSE CASE WHEN ([ADS].[Feature_43] <= 2.5) THEN CASE WHEN ([ADS].[Feature_26] <= 5.5) THEN 52 ELSE 53 END ELSE CASE WHEN ([ADS].[Feature_33] <= 3.5) THEN 55 ELSE 56 END END END END END AS node_id_2 
FROM digits AS [ADS]), 
[DT_node_data_3] AS 
(SELECT [Values].node_id AS node_id, CAST([Values].feature AS FLOAT(53)) AS feature, CAST([Values].threshold AS FLOAT(53)) AS threshold, CAST([Values].count AS FLOAT(53)) AS count, CAST([Values].depth AS FLOAT(53)) AS depth, CAST([Values].parent_id AS FLOAT(53)) AS parent_id, CAST([Values].[Proba_0] AS FLOAT(53)) AS [Proba_0], CAST([Values].[LogProba_0] AS FLOAT(53)) AS [LogProba_0], CAST([Values].[Proba_1] AS FLOAT(53)) AS [Proba_1], CAST([Values].[LogProba_1] AS FLOAT(53)) AS [LogProba_1], CAST([Values].[Proba_2] AS FLOAT(53)) AS [Proba_2], CAST([Values].[LogProba_2] AS FLOAT(53)) AS [LogProba_2], CAST([Values].[Proba_3] AS FLOAT(53)) AS [Proba_3], CAST([Values].[LogProba_3] AS FLOAT(53)) AS [LogProba_3], CAST([Values].[Proba_4] AS FLOAT(53)) AS [Proba_4], CAST([Values].[LogProba_4] AS FLOAT(53)) AS [LogProba_4], CAST([Values].[Proba_5] AS FLOAT(53)) AS [Proba_5], CAST([Values].[LogProba_5] AS FLOAT(53)) AS [LogProba_5], CAST([Values].[Proba_6] AS FLOAT(53)) AS [Proba_6], CAST([Values].[LogProba_6] AS FLOAT(53)) AS [LogProba_6], CAST([Values].[Proba_7] AS FLOAT(53)) AS [Proba_7], CAST([Values].[LogProba_7] AS FLOAT(53)) AS [LogProba_7], CAST([Values].[Proba_8] AS FLOAT(53)) AS [Proba_8], CAST([Values].[LogProba_8] AS FLOAT(53)) AS [LogProba_8], CAST([Values].[Proba_9] AS FLOAT(53)) AS [Proba_9], CAST([Values].[LogProba_9] AS FLOAT(53)) AS [LogProba_9], CAST([Values].[Decision] AS FLOAT(53)) AS [Decision], CAST([Values].[DecisionProba] AS FLOAT(53)) AS [DecisionProba] 
FROM (SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 2 AS count, 5 AS depth, 4 AS parent_id, 0.5 AS [Proba_0], -0.6931471805599453 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0.0 AS [Proba_4], -1.79769313486231e+308 AS [LogProba_4], 0.0 AS [Proba_5], -1.79769313486231e+308 AS [LogProba_5], 0.5 AS [Proba_6], -0.6931471805599453 AS [LogProba_6], 0.0 AS [Proba_7], -1.79769313486231e+308 AS [LogProba_7], 0.0 AS [Proba_8], -1.79769313486231e+308 AS [LogProba_8], 0.0 AS [Proba_9], -1.79769313486231e+308 AS [LogProba_9], 0 AS [Decision], 0.5 AS [DecisionProba] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 2 AS count, 5 AS depth, 4 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 1.0 AS [Proba_4], 0.0 AS [LogProba_4], 0.0 AS [Proba_5], -1.79769313486231e+308 AS [LogProba_5], 0.0 AS [Proba_6], -1.79769313486231e+308 AS [LogProba_6], 0.0 AS [Proba_7], -1.79769313486231e+308 AS [LogProba_7], 0.0 AS [Proba_8], -1.79769313486231e+308 AS [LogProba_8], 0.0 AS [Proba_9], -1.79769313486231e+308 AS [LogProba_9], 4 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 3 AS count, 4 AS depth, 3 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0.0 AS [Proba_4], -1.79769313486231e+308 AS [LogProba_4], 1.0 AS [Proba_5], 0.0 AS [LogProba_5], 0.0 AS [Proba_6], -1.79769313486231e+308 AS [LogProba_6], 0.0 AS [Proba_7], -1.79769313486231e+308 AS [LogProba_7], 0.0 AS [Proba_8], -1.79769313486231e+308 AS [LogProba_8], 0.0 AS [Proba_9], -1.79769313486231e+308 AS [LogProba_9], 5 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 1 AS count, 4 AS depth, 8 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0.0 AS [Proba_4], -1.79769313486231e+308 AS [LogProba_4], 0.0 AS [Proba_5], -1.79769313486231e+308 AS [LogProba_5], 0.0 AS [Proba_6], -1.79769313486231e+308 AS [LogProba_6], 0.0 AS [Proba_7], -1.79769313486231e+308 AS [LogProba_7], 0.0 AS [Proba_8], -1.79769313486231e+308 AS [LogProba_8], 1.0 AS [Proba_9], 0.0 AS [LogProba_9], 9 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 101 AS count, 4 AS depth, 8 AS parent_id, 1.0 AS [Proba_0], 0.0 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0.0 AS [Proba_4], -1.79769313486231e+308 AS [LogProba_4], 0.0 AS [Proba_5], -1.79769313486231e+308 AS [LogProba_5], 0.0 AS [Proba_6], -1.79769313486231e+308 AS [LogProba_6], 0.0 AS [Proba_7], -1.79769313486231e+308 AS [LogProba_7], 0.0 AS [Proba_8], -1.79769313486231e+308 AS [LogProba_8], 0.0 AS [Proba_9], -1.79769313486231e+308 AS [LogProba_9], 0 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 2 AS count, 5 AS depth, 13 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0.0 AS [Proba_4], -1.79769313486231e+308 AS [LogProba_4], 0.0 AS [Proba_5], -1.79769313486231e+308 AS [LogProba_5], 1.0 AS [Proba_6], 0.0 AS [LogProba_6], 0.0 AS [Proba_7], -1.79769313486231e+308 AS [LogProba_7], 0.0 AS [Proba_8], -1.79769313486231e+308 AS [LogProba_8], 0.0 AS [Proba_9], -1.79769313486231e+308 AS [LogProba_9], 6 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 3 AS count, 5 AS depth, 13 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.3333333333333333 AS [Proba_2], -1.0986122886681098 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0.0 AS [Proba_4], -1.79769313486231e+308 AS [LogProba_4], 0.0 AS [Proba_5], -1.79769313486231e+308 AS [LogProba_5], 0.0 AS [Proba_6], -1.79769313486231e+308 AS [LogProba_6], 0.0 AS [Proba_7], -1.79769313486231e+308 AS [LogProba_7], 0.0 AS [Proba_8], -1.79769313486231e+308 AS [LogProba_8], 0.6666666666666666 AS [Proba_9], -0.40546510810816444 AS [LogProba_9], 9 AS [Decision], 0.6666666666666666 AS [DecisionProba] UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 1 AS count, 5 AS depth, 16 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0.0 AS [Proba_4], -1.79769313486231e+308 AS [LogProba_4], 0.0 AS [Proba_5], -1.79769313486231e+308 AS [LogProba_5], 0.0 AS [Proba_6], -1.79769313486231e+308 AS [LogProba_6], 0.0 AS [Proba_7], -1.79769313486231e+308 AS [LogProba_7], 1.0 AS [Proba_8], 0.0 AS [LogProba_8], 0.0 AS [Proba_9], -1.79769313486231e+308 AS [LogProba_9], 8 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 10 AS count, 5 AS depth, 16 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0.0 AS [Proba_4], -1.79769313486231e+308 AS [LogProba_4], 1.0 AS [Proba_5], 0.0 AS [LogProba_5], 0.0 AS [Proba_6], -1.79769313486231e+308 AS [LogProba_6], 0.0 AS [Proba_7], -1.79769313486231e+308 AS [LogProba_7], 0.0 AS [Proba_8], -1.79769313486231e+308 AS [LogProba_8], 0.0 AS [Proba_9], -1.79769313486231e+308 AS [LogProba_9], 5 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 1 AS count, 5 AS depth, 20 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 1.0 AS [Proba_3], 0.0 AS [LogProba_3], 0.0 AS [Proba_4], -1.79769313486231e+308 AS [LogProba_4], 0.0 AS [Proba_5], -1.79769313486231e+308 AS [LogProba_5], 0.0 AS [Proba_6], -1.79769313486231e+308 AS [LogProba_6], 0.0 AS [Proba_7], -1.79769313486231e+308 AS [LogProba_7], 0.0 AS [Proba_8], -1.79769313486231e+308 AS [LogProba_8], 0.0 AS [Proba_9], -1.79769313486231e+308 AS [LogProba_9], 3 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 33 AS count, 5 AS depth, 20 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0.0 AS [Proba_4], -1.79769313486231e+308 AS [LogProba_4], 0.0 AS [Proba_5], -1.79769313486231e+308 AS [LogProba_5], 0.0 AS [Proba_6], -1.79769313486231e+308 AS [LogProba_6], 0.0 AS [Proba_7], -1.79769313486231e+308 AS [LogProba_7], 0.0 AS [Proba_8], -1.79769313486231e+308 AS [LogProba_8], 1.0 AS [Proba_9], 0.0 AS [LogProba_9], 9 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 1 AS count, 5 AS depth, 23 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0.0 AS [Proba_4], -1.79769313486231e+308 AS [LogProba_4], 1.0 AS [Proba_5], 0.0 AS [LogProba_5], 0.0 AS [Proba_6], -1.79769313486231e+308 AS [LogProba_6], 0.0 AS [Proba_7], -1.79769313486231e+308 AS [LogProba_7], 0.0 AS [Proba_8], -1.79769313486231e+308 AS [LogProba_8], 0.0 AS [Proba_9], -1.79769313486231e+308 AS [LogProba_9], 5 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 2 AS count, 5 AS depth, 23 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0.0 AS [Proba_4], -1.79769313486231e+308 AS [LogProba_4], 0.0 AS [Proba_5], -1.79769313486231e+308 AS [LogProba_5], 0.0 AS [Proba_6], -1.79769313486231e+308 AS [LogProba_6], 0.0 AS [Proba_7], -1.79769313486231e+308 AS [LogProba_7], 1.0 AS [Proba_8], 0.0 AS [LogProba_8], 0.0 AS [Proba_9], -1.79769313486231e+308 AS [LogProba_9], 8 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 34 AS count, 5 AS depth, 29 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.7058823529411765 AS [Proba_1], -0.3483066942682157 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.029411764705882353 AS [Proba_3], -3.5263605246161616 AS [LogProba_3], 0.11764705882352941 AS [Proba_4], -2.1400661634962708 AS [LogProba_4], 0.029411764705882353 AS [Proba_5], -3.5263605246161616 AS [LogProba_5], 0.08823529411764706 AS [Proba_6], -2.4277482359480516 AS [LogProba_6], 0.029411764705882353 AS [Proba_7], -3.5263605246161616 AS [LogProba_7], 0.0 AS [Proba_8], -1.79769313486231e+308 AS [LogProba_8], 0.0 AS [Proba_9], -1.79769313486231e+308 AS [LogProba_9], 1 AS [Decision], 0.7058823529411765 AS [DecisionProba] UNION ALL SELECT 31 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 34 AS count, 5 AS depth, 29 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.6176470588235294 AS [Proba_2], -0.4818380868927383 AS [LogProba_2], 0.23529411764705882 AS [Proba_3], -1.4469189829363254 AS [LogProba_3], 0.0 AS [Proba_4], -1.79769313486231e+308 AS [LogProba_4], 0.029411764705882353 AS [Proba_5], -3.5263605246161616 AS [LogProba_5], 0.0 AS [Proba_6], -1.79769313486231e+308 AS [LogProba_6], 0.08823529411764706 AS [Proba_7], -2.4277482359480516 AS [LogProba_7], 0.029411764705882353 AS [Proba_8], -3.5263605246161616 AS [LogProba_8], 0.0 AS [Proba_9], -1.79769313486231e+308 AS [LogProba_9], 2 AS [Decision], 0.6176470588235294 AS [DecisionProba] UNION ALL SELECT 33 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 3 AS count, 5 AS depth, 32 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0.6666666666666666 AS [Proba_4], -0.40546510810816444 AS [LogProba_4], 0.3333333333333333 AS [Proba_5], -1.0986122886681098 AS [LogProba_5], 0.0 AS [Proba_6], -1.79769313486231e+308 AS [LogProba_6], 0.0 AS [Proba_7], -1.79769313486231e+308 AS [LogProba_7], 0.0 AS [Proba_8], -1.79769313486231e+308 AS [LogProba_8], 0.0 AS [Proba_9], -1.79769313486231e+308 AS [LogProba_9], 4 AS [Decision], 0.6666666666666666 AS [DecisionProba] UNION ALL SELECT 34 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 85 AS count, 5 AS depth, 32 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0.0 AS [Proba_4], -1.79769313486231e+308 AS [LogProba_4], 1.0 AS [Proba_5], 0.0 AS [LogProba_5], 0.0 AS [Proba_6], -1.79769313486231e+308 AS [LogProba_6], 0.0 AS [Proba_7], -1.79769313486231e+308 AS [LogProba_7], 0.0 AS [Proba_8], -1.79769313486231e+308 AS [LogProba_8], 0.0 AS [Proba_9], -1.79769313486231e+308 AS [LogProba_9], 5 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 37 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 16 AS count, 5 AS depth, 36 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0.9375 AS [Proba_4], -0.06453852113757118 AS [LogProba_4], 0.0 AS [Proba_5], -1.79769313486231e+308 AS [LogProba_5], 0.0625 AS [Proba_6], -2.772588722239781 AS [LogProba_6], 0.0 AS [Proba_7], -1.79769313486231e+308 AS [LogProba_7], 0.0 AS [Proba_8], -1.79769313486231e+308 AS [LogProba_8], 0.0 AS [Proba_9], -1.79769313486231e+308 AS [LogProba_9], 4 AS [Decision], 0.9375 AS [DecisionProba] UNION ALL SELECT 38 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 5 AS count, 5 AS depth, 36 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.6 AS [Proba_1], -0.5108256237659907 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0.0 AS [Proba_4], -1.79769313486231e+308 AS [LogProba_4], 0.0 AS [Proba_5], -1.79769313486231e+308 AS [LogProba_5], 0.4 AS [Proba_6], -0.916290731874155 AS [LogProba_6], 0.0 AS [Proba_7], -1.79769313486231e+308 AS [LogProba_7], 0.0 AS [Proba_8], -1.79769313486231e+308 AS [LogProba_8], 0.0 AS [Proba_9], -1.79769313486231e+308 AS [LogProba_9], 1 AS [Decision], 0.6 AS [DecisionProba] UNION ALL SELECT 40 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 97 AS count, 5 AS depth, 39 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0.0 AS [Proba_4], -1.79769313486231e+308 AS [LogProba_4], 0.010309278350515464 AS [Proba_5], -4.574710978503383 AS [LogProba_5], 0.9896907216494846 AS [Proba_6], -0.010362787035546547 AS [LogProba_6], 0.0 AS [Proba_7], -1.79769313486231e+308 AS [LogProba_7], 0.0 AS [Proba_8], -1.79769313486231e+308 AS [LogProba_8], 0.0 AS [Proba_9], -1.79769313486231e+308 AS [LogProba_9], 6 AS [Decision], 0.9896907216494846 AS [DecisionProba] UNION ALL SELECT 41 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 5 AS count, 5 AS depth, 39 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 1.0 AS [Proba_2], 0.0 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0.0 AS [Proba_4], -1.79769313486231e+308 AS [LogProba_4], 0.0 AS [Proba_5], -1.79769313486231e+308 AS [LogProba_5], 0.0 AS [Proba_6], -1.79769313486231e+308 AS [LogProba_6], 0.0 AS [Proba_7], -1.79769313486231e+308 AS [LogProba_7], 0.0 AS [Proba_8], -1.79769313486231e+308 AS [LogProba_8], 0.0 AS [Proba_9], -1.79769313486231e+308 AS [LogProba_9], 2 AS [Decision], 1.0 AS [DecisionProba] UNION ALL SELECT 45 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 96 AS count, 5 AS depth, 44 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.010416666666666666 AS [Proba_1], -4.564348191467836 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.03125 AS [Proba_3], -3.4657359027997265 AS [LogProba_3], 0.020833333333333332 AS [Proba_4], -3.871201010907891 AS [LogProba_4], 0.0 AS [Proba_5], -1.79769313486231e+308 AS [LogProba_5], 0.0 AS [Proba_6], -1.79769313486231e+308 AS [LogProba_6], 0.8854166666666666 AS [Proba_7], -0.12169693497751982 AS [LogProba_7], 0.041666666666666664 AS [Proba_8], -3.1780538303479458 AS [LogProba_8], 0.010416666666666666 AS [Proba_9], -4.564348191467836 AS [LogProba_9], 7 AS [Decision], 0.8854166666666666 AS [DecisionProba] UNION ALL SELECT 46 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 8 AS count, 5 AS depth, 44 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.5 AS [Proba_1], -0.6931471805599453 AS [LogProba_1], 0.25 AS [Proba_2], -1.3862943611198906 AS [LogProba_2], 0.25 AS [Proba_3], -1.3862943611198906 AS [LogProba_3], 0.0 AS [Proba_4], -1.79769313486231e+308 AS [LogProba_4], 0.0 AS [Proba_5], -1.79769313486231e+308 AS [LogProba_5], 0.0 AS [Proba_6], -1.79769313486231e+308 AS [LogProba_6], 0.0 AS [Proba_7], -1.79769313486231e+308 AS [LogProba_7], 0.0 AS [Proba_8], -1.79769313486231e+308 AS [LogProba_8], 0.0 AS [Proba_9], -1.79769313486231e+308 AS [LogProba_9], 1 AS [Decision], 0.5 AS [DecisionProba] UNION ALL SELECT 48 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 23 AS count, 5 AS depth, 47 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.08695652173913043 AS [Proba_1], -2.4423470353692043 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0.08695652173913043 AS [Proba_4], -2.4423470353692043 AS [LogProba_4], 0.08695652173913043 AS [Proba_5], -2.4423470353692043 AS [LogProba_5], 0.0 AS [Proba_6], -1.79769313486231e+308 AS [LogProba_6], 0.34782608695652173 AS [Proba_7], -1.0560526742493137 AS [LogProba_7], 0.0 AS [Proba_8], -1.79769313486231e+308 AS [LogProba_8], 0.391304347826087 AS [Proba_9], -0.9382696385929302 AS [LogProba_9], 9 AS [Decision], 0.391304347826087 AS [DecisionProba] UNION ALL SELECT 49 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 16 AS count, 5 AS depth, 47 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.125 AS [Proba_1], -2.0794415416798357 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0.875 AS [Proba_4], -0.13353139262452263 AS [LogProba_4], 0.0 AS [Proba_5], -1.79769313486231e+308 AS [LogProba_5], 0.0 AS [Proba_6], -1.79769313486231e+308 AS [LogProba_6], 0.0 AS [Proba_7], -1.79769313486231e+308 AS [LogProba_7], 0.0 AS [Proba_8], -1.79769313486231e+308 AS [LogProba_8], 0.0 AS [Proba_9], -1.79769313486231e+308 AS [LogProba_9], 4 AS [Decision], 0.875 AS [DecisionProba] UNION ALL SELECT 52 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 102 AS count, 5 AS depth, 51 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.00980392156862745 AS [Proba_1], -4.624972813284271 AS [LogProba_1], 0.029411764705882353 AS [Proba_2], -3.5263605246161616 AS [LogProba_2], 0.8431372549019608 AS [Proba_3], -0.17062551703076334 AS [LogProba_3], 0.0 AS [Proba_4], -1.79769313486231e+308 AS [LogProba_4], 0.0 AS [Proba_5], -1.79769313486231e+308 AS [LogProba_5], 0.0 AS [Proba_6], -1.79769313486231e+308 AS [LogProba_6], 0.0 AS [Proba_7], -1.79769313486231e+308 AS [LogProba_7], 0.0392156862745098 AS [Proba_8], -3.2386784521643803 AS [LogProba_8], 0.0784313725490196 AS [Proba_9], -2.5455312716044354 AS [LogProba_9], 3 AS [Decision], 0.8431372549019608 AS [DecisionProba] UNION ALL SELECT 53 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 84 AS count, 5 AS depth, 51 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.09523809523809523 AS [Proba_1], -2.3513752571634776 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.03571428571428571 AS [Proba_3], -3.332204510175204 AS [LogProba_3], 0.08333333333333333 AS [Proba_4], -2.4849066497880004 AS [LogProba_4], 0.03571428571428571 AS [Proba_5], -3.332204510175204 AS [LogProba_5], 0.0 AS [Proba_6], -1.79769313486231e+308 AS [LogProba_6], 0.023809523809523808 AS [Proba_7], -3.7376696182833684 AS [LogProba_7], 0.08333333333333333 AS [Proba_8], -2.4849066497880004 AS [LogProba_8], 0.6428571428571429 AS [Proba_9], -0.4418327522790392 AS [LogProba_9], 9 AS [Decision], 0.6428571428571429 AS [DecisionProba] UNION ALL SELECT 55 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 229 AS count, 5 AS depth, 54 AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.22707423580786026 AS [Proba_1], -1.4824782849728122 AS [LogProba_1], 0.3406113537117904 AS [Proba_2], -1.0770131768646478 AS [LogProba_2], 0.021834061135371178 AS [Proba_3], -3.8242840911201395 AS [LogProba_3], 0.013100436681222707 AS [Proba_4], -4.33510971488613 AS [LogProba_4], 0.0 AS [Proba_5], -1.79769313486231e+308 AS [LogProba_5], 0.004366812227074236 AS [Proba_6], -5.43372200355424 AS [LogProba_6], 0.026200873362445413 AS [Proba_7], -3.6419625343261846 AS [LogProba_7], 0.3537117903930131 AS [Proba_8], -1.0392728488818008 AS [LogProba_8], 0.013100436681222707 AS [Proba_9], -4.33510971488613 AS [LogProba_9], 8 AS [Decision], 0.3537117903930131 AS [DecisionProba] UNION ALL SELECT 56 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT(53)) AS threshold, 83 AS count, 5 AS depth, 54 AS parent_id, 0.024096385542168676 AS [Proba_0], -3.7256934272366524 AS [LogProba_0], 0.1686746987951807 AS [Proba_1], -1.7797832781813394 AS [LogProba_1], 0.012048192771084338 AS [Proba_2], -4.418840607796598 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0.7590361445783133 AS [Proba_4], -0.27570588140506525 AS [LogProba_4], 0.0 AS [Proba_5], -1.79769313486231e+308 AS [LogProba_5], 0.012048192771084338 AS [Proba_6], -4.418840607796598 AS [LogProba_6], 0.0 AS [Proba_7], -1.79769313486231e+308 AS [LogProba_7], 0.024096385542168676 AS [Proba_8], -3.7256934272366524 AS [LogProba_8], 0.0 AS [Proba_9], -1.79769313486231e+308 AS [LogProba_9], 4 AS [Decision], 0.7590361445783133 AS [DecisionProba]) AS [Values]), 
[DT_Output_3] AS 
(SELECT [DT_node_lookup_3].[KEY] AS [KEY], [DT_node_lookup_3].node_id_2 AS node_id_2, [DT_node_data_3].node_id AS node_id, [DT_node_data_3].feature AS feature, [DT_node_data_3].threshold AS threshold, [DT_node_data_3].count AS count, [DT_node_data_3].depth AS depth, [DT_node_data_3].parent_id AS parent_id, [DT_node_data_3].[Proba_0] AS [Proba_0], [DT_node_data_3].[LogProba_0] AS [LogProba_0], [DT_node_data_3].[Proba_1] AS [Proba_1], [DT_node_data_3].[LogProba_1] AS [LogProba_1], [DT_node_data_3].[Proba_2] AS [Proba_2], [DT_node_data_3].[LogProba_2] AS [LogProba_2], [DT_node_data_3].[Proba_3] AS [Proba_3], [DT_node_data_3].[LogProba_3] AS [LogProba_3], [DT_node_data_3].[Proba_4] AS [Proba_4], [DT_node_data_3].[LogProba_4] AS [LogProba_4], [DT_node_data_3].[Proba_5] AS [Proba_5], [DT_node_data_3].[LogProba_5] AS [LogProba_5], [DT_node_data_3].[Proba_6] AS [Proba_6], [DT_node_data_3].[LogProba_6] AS [LogProba_6], [DT_node_data_3].[Proba_7] AS [Proba_7], [DT_node_data_3].[LogProba_7] AS [LogProba_7], [DT_node_data_3].[Proba_8] AS [Proba_8], [DT_node_data_3].[LogProba_8] AS [LogProba_8], [DT_node_data_3].[Proba_9] AS [Proba_9], [DT_node_data_3].[LogProba_9] AS [LogProba_9], [DT_node_data_3].[Decision] AS [Decision], [DT_node_data_3].[DecisionProba] AS [DecisionProba] 
FROM [DT_node_lookup_3] LEFT OUTER JOIN [DT_node_data_3] ON [DT_node_lookup_3].node_id_2 = [DT_node_data_3].node_id), 
[Calibrated_Model_3] AS 
(SELECT [DT_Output_3].[KEY] AS [KEY], CAST(NULL AS FLOAT(53)) AS [Score_0], CAST(NULL AS FLOAT(53)) AS [Score_1], CAST(NULL AS FLOAT(53)) AS [Score_2], CAST(NULL AS FLOAT(53)) AS [Score_3], CAST(NULL AS FLOAT(53)) AS [Score_4], CAST(NULL AS FLOAT(53)) AS [Score_5], CAST(NULL AS FLOAT(53)) AS [Score_6], CAST(NULL AS FLOAT(53)) AS [Score_7], CAST(NULL AS FLOAT(53)) AS [Score_8], CAST(NULL AS FLOAT(53)) AS [Score_9], [DT_Output_3].[Proba_0] AS [Proba_0], [DT_Output_3].[Proba_1] AS [Proba_1], [DT_Output_3].[Proba_2] AS [Proba_2], [DT_Output_3].[Proba_3] AS [Proba_3], [DT_Output_3].[Proba_4] AS [Proba_4], [DT_Output_3].[Proba_5] AS [Proba_5], [DT_Output_3].[Proba_6] AS [Proba_6], [DT_Output_3].[Proba_7] AS [Proba_7], [DT_Output_3].[Proba_8] AS [Proba_8], [DT_Output_3].[Proba_9] AS [Proba_9], [DT_Output_3].[LogProba_0] AS [LogProba_0], [DT_Output_3].[LogProba_1] AS [LogProba_1], [DT_Output_3].[LogProba_2] AS [LogProba_2], [DT_Output_3].[LogProba_3] AS [LogProba_3], [DT_Output_3].[LogProba_4] AS [LogProba_4], [DT_Output_3].[LogProba_5] AS [LogProba_5], [DT_Output_3].[LogProba_6] AS [LogProba_6], [DT_Output_3].[LogProba_7] AS [LogProba_7], [DT_Output_3].[LogProba_8] AS [LogProba_8], [DT_Output_3].[LogProba_9] AS [LogProba_9], CAST(NULL AS BIGINT) AS [Decision], CAST(NULL AS FLOAT(53)) AS [DecisionProba], coalesce(CAST(NULL AS FLOAT(53)), [DT_Output_3].[Proba_0]) AS [ScoreOrProba_0], coalesce(CAST(NULL AS FLOAT(53)), [DT_Output_3].[Proba_1]) AS [ScoreOrProba_1], coalesce(CAST(NULL AS FLOAT(53)), [DT_Output_3].[Proba_2]) AS [ScoreOrProba_2], coalesce(CAST(NULL AS FLOAT(53)), [DT_Output_3].[Proba_3]) AS [ScoreOrProba_3], coalesce(CAST(NULL AS FLOAT(53)), [DT_Output_3].[Proba_4]) AS [ScoreOrProba_4], coalesce(CAST(NULL AS FLOAT(53)), [DT_Output_3].[Proba_5]) AS [ScoreOrProba_5], coalesce(CAST(NULL AS FLOAT(53)), [DT_Output_3].[Proba_6]) AS [ScoreOrProba_6], coalesce(CAST(NULL AS FLOAT(53)), [DT_Output_3].[Proba_7]) AS [ScoreOrProba_7], coalesce(CAST(NULL AS FLOAT(53)), [DT_Output_3].[Proba_8]) AS [ScoreOrProba_8], coalesce(CAST(NULL AS FLOAT(53)), [DT_Output_3].[Proba_9]) AS [ScoreOrProba_9] 
FROM [DT_Output_3]), 
sigmoid_calibration_3 AS 
(SELECT [Calibrated_Model_3].[KEY] AS [KEY], 1.0 / (1.0 + exp(CASE WHEN (CASE WHEN (-100.0 <= -(7.071063566254344 * [Calibrated_Model_3].[ScoreOrProba_0] + -4.809888521292988)) THEN -(7.071063566254344 * [Calibrated_Model_3].[ScoreOrProba_0] + -4.809888521292988) ELSE -100.0 END <= 100.0) THEN CASE WHEN (-100.0 <= -(7.071063566254344 * [Calibrated_Model_3].[ScoreOrProba_0] + -4.809888521292988)) THEN -(7.071063566254344 * [Calibrated_Model_3].[ScoreOrProba_0] + -4.809888521292988) ELSE -100.0 END ELSE 100.0 END)) AS [Proba_0], 1.0 / (1.0 + exp(CASE WHEN (CASE WHEN (-100.0 <= -(6.1247755412425 * [Calibrated_Model_3].[ScoreOrProba_1] + -3.103051096517907)) THEN -(6.1247755412425 * [Calibrated_Model_3].[ScoreOrProba_1] + -3.103051096517907) ELSE -100.0 END <= 100.0) THEN CASE WHEN (-100.0 <= -(6.1247755412425 * [Calibrated_Model_3].[ScoreOrProba_1] + -3.103051096517907)) THEN -(6.1247755412425 * [Calibrated_Model_3].[ScoreOrProba_1] + -3.103051096517907) ELSE -100.0 END ELSE 100.0 END)) AS [Proba_1], 1.0 / (1.0 + exp(CASE WHEN (CASE WHEN (-100.0 <= -(6.912622947916193 * [Calibrated_Model_3].[ScoreOrProba_2] + -3.459266609161967)) THEN -(6.912622947916193 * [Calibrated_Model_3].[ScoreOrProba_2] + -3.459266609161967) ELSE -100.0 END <= 100.0) THEN CASE WHEN (-100.0 <= -(6.912622947916193 * [Calibrated_Model_3].[ScoreOrProba_2] + -3.459266609161967)) THEN -(6.912622947916193 * [Calibrated_Model_3].[ScoreOrProba_2] + -3.459266609161967) ELSE -100.0 END ELSE 100.0 END)) AS [Proba_2], 1.0 / (1.0 + exp(CASE WHEN (CASE WHEN (-100.0 <= -(5.400557250927744 * [Calibrated_Model_3].[ScoreOrProba_3] + -3.385200713277814)) THEN -(5.400557250927744 * [Calibrated_Model_3].[ScoreOrProba_3] + -3.385200713277814) ELSE -100.0 END <= 100.0) THEN CASE WHEN (-100.0 <= -(5.400557250927744 * [Calibrated_Model_3].[ScoreOrProba_3] + -3.385200713277814)) THEN -(5.400557250927744 * [Calibrated_Model_3].[ScoreOrProba_3] + -3.385200713277814) ELSE -100.0 END ELSE 100.0 END)) AS [Proba_3], 1.0 / (1.0 + exp(CASE WHEN (CASE WHEN (-100.0 <= -(5.944425617782349 * [Calibrated_Model_3].[ScoreOrProba_4] + -3.443796877352818)) THEN -(5.944425617782349 * [Calibrated_Model_3].[ScoreOrProba_4] + -3.443796877352818) ELSE -100.0 END <= 100.0) THEN CASE WHEN (-100.0 <= -(5.944425617782349 * [Calibrated_Model_3].[ScoreOrProba_4] + -3.443796877352818)) THEN -(5.944425617782349 * [Calibrated_Model_3].[ScoreOrProba_4] + -3.443796877352818) ELSE -100.0 END ELSE 100.0 END)) AS [Proba_4], 1.0 / (1.0 + exp(CASE WHEN (CASE WHEN (-100.0 <= -(7.6307855140539145 * [Calibrated_Model_3].[ScoreOrProba_5] + -4.779998110421693)) THEN -(7.6307855140539145 * [Calibrated_Model_3].[ScoreOrProba_5] + -4.779998110421693) ELSE -100.0 END <= 100.0) THEN CASE WHEN (-100.0 <= -(7.6307855140539145 * [Calibrated_Model_3].[ScoreOrProba_5] + -4.779998110421693)) THEN -(7.6307855140539145 * [Calibrated_Model_3].[ScoreOrProba_5] + -4.779998110421693) ELSE -100.0 END ELSE 100.0 END)) AS [Proba_5], 1.0 / (1.0 + exp(CASE WHEN (CASE WHEN (-100.0 <= -(8.28716694846762 * [Calibrated_Model_3].[ScoreOrProba_6] + -4.975427677668192)) THEN -(8.28716694846762 * [Calibrated_Model_3].[ScoreOrProba_6] + -4.975427677668192) ELSE -100.0 END <= 100.0) THEN CASE WHEN (-100.0 <= -(8.28716694846762 * [Calibrated_Model_3].[ScoreOrProba_6] + -4.975427677668192)) THEN -(8.28716694846762 * [Calibrated_Model_3].[ScoreOrProba_6] + -4.975427677668192) ELSE -100.0 END ELSE 100.0 END)) AS [Proba_6], 1.0 / (1.0 + exp(CASE WHEN (CASE WHEN (-100.0 <= -(6.649525095831689 * [Calibrated_Model_3].[ScoreOrProba_7] + -4.107099022626102)) THEN -(6.649525095831689 * [Calibrated_Model_3].[ScoreOrProba_7] + -4.107099022626102) ELSE -100.0 END <= 100.0) THEN CASE WHEN (-100.0 <= -(6.649525095831689 * [Calibrated_Model_3].[ScoreOrProba_7] + -4.107099022626102)) THEN -(6.649525095831689 * [Calibrated_Model_3].[ScoreOrProba_7] + -4.107099022626102) ELSE -100.0 END ELSE 100.0 END)) AS [Proba_7], 1.0 / (1.0 + exp(CASE WHEN (CASE WHEN (-100.0 <= -(7.827974766673212 * [Calibrated_Model_3].[ScoreOrProba_8] + -3.5006349897078852)) THEN -(7.827974766673212 * [Calibrated_Model_3].[ScoreOrProba_8] + -3.5006349897078852) ELSE -100.0 END <= 100.0) THEN CASE WHEN (-100.0 <= -(7.827974766673212 * [Calibrated_Model_3].[ScoreOrProba_8] + -3.5006349897078852)) THEN -(7.827974766673212 * [Calibrated_Model_3].[ScoreOrProba_8] + -3.5006349897078852) ELSE -100.0 END ELSE 100.0 END)) AS [Proba_8], 1.0 / (1.0 + exp(CASE WHEN (CASE WHEN (-100.0 <= -(6.180593596166691 * [Calibrated_Model_3].[ScoreOrProba_9] + -3.900251982667443)) THEN -(6.180593596166691 * [Calibrated_Model_3].[ScoreOrProba_9] + -3.900251982667443) ELSE -100.0 END <= 100.0) THEN CASE WHEN (-100.0 <= -(6.180593596166691 * [Calibrated_Model_3].[ScoreOrProba_9] + -3.900251982667443)) THEN -(6.180593596166691 * [Calibrated_Model_3].[ScoreOrProba_9] + -3.900251982667443) ELSE -100.0 END ELSE 100.0 END)) AS [Proba_9] 
FROM [Calibrated_Model_3]), 
[Normalized_Probas_3] AS 
(SELECT sigmoid_calibration_3.[KEY] AS [KEY], sigmoid_calibration_3.[Proba_0] / (sigmoid_calibration_3.[Proba_0] + sigmoid_calibration_3.[Proba_1] + sigmoid_calibration_3.[Proba_2] + sigmoid_calibration_3.[Proba_3] + sigmoid_calibration_3.[Proba_4] + sigmoid_calibration_3.[Proba_5] + sigmoid_calibration_3.[Proba_6] + sigmoid_calibration_3.[Proba_7] + sigmoid_calibration_3.[Proba_8] + sigmoid_calibration_3.[Proba_9]) AS [Proba_0], sigmoid_calibration_3.[Proba_1] / (sigmoid_calibration_3.[Proba_0] + sigmoid_calibration_3.[Proba_1] + sigmoid_calibration_3.[Proba_2] + sigmoid_calibration_3.[Proba_3] + sigmoid_calibration_3.[Proba_4] + sigmoid_calibration_3.[Proba_5] + sigmoid_calibration_3.[Proba_6] + sigmoid_calibration_3.[Proba_7] + sigmoid_calibration_3.[Proba_8] + sigmoid_calibration_3.[Proba_9]) AS [Proba_1], sigmoid_calibration_3.[Proba_2] / (sigmoid_calibration_3.[Proba_0] + sigmoid_calibration_3.[Proba_1] + sigmoid_calibration_3.[Proba_2] + sigmoid_calibration_3.[Proba_3] + sigmoid_calibration_3.[Proba_4] + sigmoid_calibration_3.[Proba_5] + sigmoid_calibration_3.[Proba_6] + sigmoid_calibration_3.[Proba_7] + sigmoid_calibration_3.[Proba_8] + sigmoid_calibration_3.[Proba_9]) AS [Proba_2], sigmoid_calibration_3.[Proba_3] / (sigmoid_calibration_3.[Proba_0] + sigmoid_calibration_3.[Proba_1] + sigmoid_calibration_3.[Proba_2] + sigmoid_calibration_3.[Proba_3] + sigmoid_calibration_3.[Proba_4] + sigmoid_calibration_3.[Proba_5] + sigmoid_calibration_3.[Proba_6] + sigmoid_calibration_3.[Proba_7] + sigmoid_calibration_3.[Proba_8] + sigmoid_calibration_3.[Proba_9]) AS [Proba_3], sigmoid_calibration_3.[Proba_4] / (sigmoid_calibration_3.[Proba_0] + sigmoid_calibration_3.[Proba_1] + sigmoid_calibration_3.[Proba_2] + sigmoid_calibration_3.[Proba_3] + sigmoid_calibration_3.[Proba_4] + sigmoid_calibration_3.[Proba_5] + sigmoid_calibration_3.[Proba_6] + sigmoid_calibration_3.[Proba_7] + sigmoid_calibration_3.[Proba_8] + sigmoid_calibration_3.[Proba_9]) AS [Proba_4], sigmoid_calibration_3.[Proba_5] / (sigmoid_calibration_3.[Proba_0] + sigmoid_calibration_3.[Proba_1] + sigmoid_calibration_3.[Proba_2] + sigmoid_calibration_3.[Proba_3] + sigmoid_calibration_3.[Proba_4] + sigmoid_calibration_3.[Proba_5] + sigmoid_calibration_3.[Proba_6] + sigmoid_calibration_3.[Proba_7] + sigmoid_calibration_3.[Proba_8] + sigmoid_calibration_3.[Proba_9]) AS [Proba_5], sigmoid_calibration_3.[Proba_6] / (sigmoid_calibration_3.[Proba_0] + sigmoid_calibration_3.[Proba_1] + sigmoid_calibration_3.[Proba_2] + sigmoid_calibration_3.[Proba_3] + sigmoid_calibration_3.[Proba_4] + sigmoid_calibration_3.[Proba_5] + sigmoid_calibration_3.[Proba_6] + sigmoid_calibration_3.[Proba_7] + sigmoid_calibration_3.[Proba_8] + sigmoid_calibration_3.[Proba_9]) AS [Proba_6], sigmoid_calibration_3.[Proba_7] / (sigmoid_calibration_3.[Proba_0] + sigmoid_calibration_3.[Proba_1] + sigmoid_calibration_3.[Proba_2] + sigmoid_calibration_3.[Proba_3] + sigmoid_calibration_3.[Proba_4] + sigmoid_calibration_3.[Proba_5] + sigmoid_calibration_3.[Proba_6] + sigmoid_calibration_3.[Proba_7] + sigmoid_calibration_3.[Proba_8] + sigmoid_calibration_3.[Proba_9]) AS [Proba_7], sigmoid_calibration_3.[Proba_8] / (sigmoid_calibration_3.[Proba_0] + sigmoid_calibration_3.[Proba_1] + sigmoid_calibration_3.[Proba_2] + sigmoid_calibration_3.[Proba_3] + sigmoid_calibration_3.[Proba_4] + sigmoid_calibration_3.[Proba_5] + sigmoid_calibration_3.[Proba_6] + sigmoid_calibration_3.[Proba_7] + sigmoid_calibration_3.[Proba_8] + sigmoid_calibration_3.[Proba_9]) AS [Proba_8], sigmoid_calibration_3.[Proba_9] / (sigmoid_calibration_3.[Proba_0] + sigmoid_calibration_3.[Proba_1] + sigmoid_calibration_3.[Proba_2] + sigmoid_calibration_3.[Proba_3] + sigmoid_calibration_3.[Proba_4] + sigmoid_calibration_3.[Proba_5] + sigmoid_calibration_3.[Proba_6] + sigmoid_calibration_3.[Proba_7] + sigmoid_calibration_3.[Proba_8] + sigmoid_calibration_3.[Proba_9]) AS [Proba_9] 
FROM sigmoid_calibration_3)
 INSERT INTO ##TMP_20180417025322_HLAAGO_CalProb_B0 ([KEY], [Proba_0], [Proba_1], [Proba_2], [Proba_3], [Proba_4], [Proba_5], [Proba_6], [Proba_7], [Proba_8], [Proba_9]) SELECT [CalProb_B0].[KEY], [CalProb_B0].[Proba_0], [CalProb_B0].[Proba_1], [CalProb_B0].[Proba_2], [CalProb_B0].[Proba_3], [CalProb_B0].[Proba_4], [CalProb_B0].[Proba_5], [CalProb_B0].[Proba_6], [CalProb_B0].[Proba_7], [CalProb_B0].[Proba_8], [CalProb_B0].[Proba_9] 
FROM (SELECT [CalProb_esu_0].[KEY] AS [KEY], [CalProb_esu_0].[Proba_0] AS [Proba_0], [CalProb_esu_0].[Proba_1] AS [Proba_1], [CalProb_esu_0].[Proba_2] AS [Proba_2], [CalProb_esu_0].[Proba_3] AS [Proba_3], [CalProb_esu_0].[Proba_4] AS [Proba_4], [CalProb_esu_0].[Proba_5] AS [Proba_5], [CalProb_esu_0].[Proba_6] AS [Proba_6], [CalProb_esu_0].[Proba_7] AS [Proba_7], [CalProb_esu_0].[Proba_8] AS [Proba_8], [CalProb_esu_0].[Proba_9] AS [Proba_9] 
FROM (SELECT [Normalized_Probas].[KEY] AS [KEY], [Normalized_Probas].[Proba_0] AS [Proba_0], [Normalized_Probas].[Proba_1] AS [Proba_1], [Normalized_Probas].[Proba_2] AS [Proba_2], [Normalized_Probas].[Proba_3] AS [Proba_3], [Normalized_Probas].[Proba_4] AS [Proba_4], [Normalized_Probas].[Proba_5] AS [Proba_5], [Normalized_Probas].[Proba_6] AS [Proba_6], [Normalized_Probas].[Proba_7] AS [Proba_7], [Normalized_Probas].[Proba_8] AS [Proba_8], [Normalized_Probas].[Proba_9] AS [Proba_9] 
FROM [Normalized_Probas] UNION ALL SELECT [Normalized_Probas_1].[KEY] AS [KEY], [Normalized_Probas_1].[Proba_0] AS [Proba_0], [Normalized_Probas_1].[Proba_1] AS [Proba_1], [Normalized_Probas_1].[Proba_2] AS [Proba_2], [Normalized_Probas_1].[Proba_3] AS [Proba_3], [Normalized_Probas_1].[Proba_4] AS [Proba_4], [Normalized_Probas_1].[Proba_5] AS [Proba_5], [Normalized_Probas_1].[Proba_6] AS [Proba_6], [Normalized_Probas_1].[Proba_7] AS [Proba_7], [Normalized_Probas_1].[Proba_8] AS [Proba_8], [Normalized_Probas_1].[Proba_9] AS [Proba_9] 
FROM [Normalized_Probas_1] UNION ALL SELECT [Normalized_Probas_2].[KEY] AS [KEY], [Normalized_Probas_2].[Proba_0] AS [Proba_0], [Normalized_Probas_2].[Proba_1] AS [Proba_1], [Normalized_Probas_2].[Proba_2] AS [Proba_2], [Normalized_Probas_2].[Proba_3] AS [Proba_3], [Normalized_Probas_2].[Proba_4] AS [Proba_4], [Normalized_Probas_2].[Proba_5] AS [Proba_5], [Normalized_Probas_2].[Proba_6] AS [Proba_6], [Normalized_Probas_2].[Proba_7] AS [Proba_7], [Normalized_Probas_2].[Proba_8] AS [Proba_8], [Normalized_Probas_2].[Proba_9] AS [Proba_9] 
FROM [Normalized_Probas_2] UNION ALL SELECT [Normalized_Probas_3].[KEY] AS [KEY], [Normalized_Probas_3].[Proba_0] AS [Proba_0], [Normalized_Probas_3].[Proba_1] AS [Proba_1], [Normalized_Probas_3].[Proba_2] AS [Proba_2], [Normalized_Probas_3].[Proba_3] AS [Proba_3], [Normalized_Probas_3].[Proba_4] AS [Proba_4], [Normalized_Probas_3].[Proba_5] AS [Proba_5], [Normalized_Probas_3].[Proba_6] AS [Proba_6], [Normalized_Probas_3].[Proba_7] AS [Proba_7], [Normalized_Probas_3].[Proba_8] AS [Proba_8], [Normalized_Probas_3].[Proba_9] AS [Proba_9] 
FROM [Normalized_Probas_3]) AS [CalProb_esu_0]) AS [CalProb_B0]

-- Code For temporary table ##TMP_20180417025322_O0FD2N_CalProb_Union part 1/2. Create 


CREATE TABLE ##TMP_20180417025322_O0FD2N_CalProb_Union (
	[KEY] BIGINT NULL, 
	[Proba_0] FLOAT NULL, 
	[Proba_1] FLOAT NULL, 
	[Proba_2] FLOAT NULL, 
	[Proba_3] FLOAT NULL, 
	[Proba_4] FLOAT NULL, 
	[Proba_5] FLOAT NULL, 
	[Proba_6] FLOAT NULL, 
	[Proba_7] FLOAT NULL, 
	[Proba_8] FLOAT NULL, 
	[Proba_9] FLOAT NULL
)



-- Code For temporary table ##TMP_20180417025322_O0FD2N_CalProb_Union part 2/2. Populate

INSERT INTO ##TMP_20180417025322_O0FD2N_CalProb_Union ([KEY], [Proba_0], [Proba_1], [Proba_2], [Proba_3], [Proba_4], [Proba_5], [Proba_6], [Proba_7], [Proba_8], [Proba_9]) SELECT [CalProb_Union].[KEY], [CalProb_Union].[Proba_0], [CalProb_Union].[Proba_1], [CalProb_Union].[Proba_2], [CalProb_Union].[Proba_3], [CalProb_Union].[Proba_4], [CalProb_Union].[Proba_5], [CalProb_Union].[Proba_6], [CalProb_Union].[Proba_7], [CalProb_Union].[Proba_8], [CalProb_Union].[Proba_9] 
FROM (SELECT [CalProb_EnsembleUnion].[KEY] AS [KEY], [CalProb_EnsembleUnion].[Proba_0] AS [Proba_0], [CalProb_EnsembleUnion].[Proba_1] AS [Proba_1], [CalProb_EnsembleUnion].[Proba_2] AS [Proba_2], [CalProb_EnsembleUnion].[Proba_3] AS [Proba_3], [CalProb_EnsembleUnion].[Proba_4] AS [Proba_4], [CalProb_EnsembleUnion].[Proba_5] AS [Proba_5], [CalProb_EnsembleUnion].[Proba_6] AS [Proba_6], [CalProb_EnsembleUnion].[Proba_7] AS [Proba_7], [CalProb_EnsembleUnion].[Proba_8] AS [Proba_8], [CalProb_EnsembleUnion].[Proba_9] AS [Proba_9] 
FROM (SELECT [CalProb_B0].[KEY] AS [KEY], [CalProb_B0].[Proba_0] AS [Proba_0], [CalProb_B0].[Proba_1] AS [Proba_1], [CalProb_B0].[Proba_2] AS [Proba_2], [CalProb_B0].[Proba_3] AS [Proba_3], [CalProb_B0].[Proba_4] AS [Proba_4], [CalProb_B0].[Proba_5] AS [Proba_5], [CalProb_B0].[Proba_6] AS [Proba_6], [CalProb_B0].[Proba_7] AS [Proba_7], [CalProb_B0].[Proba_8] AS [Proba_8], [CalProb_B0].[Proba_9] AS [Proba_9] 
FROM ##TMP_20180417025322_HLAAGO_CalProb_B0 AS [CalProb_B0]) AS [CalProb_EnsembleUnion]) AS [CalProb_Union]

-- Code For temporary table ##TMP_20180417025322_GU9K9Q_CalProb_avg part 1/2. Create 


CREATE TABLE ##TMP_20180417025322_GU9K9Q_CalProb_avg (
	[KEY] BIGINT NULL, 
	[Proba_0] FLOAT(53) NULL, 
	[Proba_1] FLOAT(53) NULL, 
	[Proba_2] FLOAT(53) NULL, 
	[Proba_3] FLOAT(53) NULL, 
	[Proba_4] FLOAT(53) NULL, 
	[Proba_5] FLOAT(53) NULL, 
	[Proba_6] FLOAT(53) NULL, 
	[Proba_7] FLOAT(53) NULL, 
	[Proba_8] FLOAT(53) NULL, 
	[Proba_9] FLOAT(53) NULL
)



-- Code For temporary table ##TMP_20180417025322_GU9K9Q_CalProb_avg part 2/2. Populate

INSERT INTO ##TMP_20180417025322_GU9K9Q_CalProb_avg ([KEY], [Proba_0], [Proba_1], [Proba_2], [Proba_3], [Proba_4], [Proba_5], [Proba_6], [Proba_7], [Proba_8], [Proba_9]) SELECT [CalProb_avg].[KEY], [CalProb_avg].[Proba_0], [CalProb_avg].[Proba_1], [CalProb_avg].[Proba_2], [CalProb_avg].[Proba_3], [CalProb_avg].[Proba_4], [CalProb_avg].[Proba_5], [CalProb_avg].[Proba_6], [CalProb_avg].[Proba_7], [CalProb_avg].[Proba_8], [CalProb_avg].[Proba_9] 
FROM (SELECT [T].[KEY] AS [KEY], CAST([T].[Proba_0] AS FLOAT(53)) AS [Proba_0], CAST([T].[Proba_1] AS FLOAT(53)) AS [Proba_1], CAST([T].[Proba_2] AS FLOAT(53)) AS [Proba_2], CAST([T].[Proba_3] AS FLOAT(53)) AS [Proba_3], CAST([T].[Proba_4] AS FLOAT(53)) AS [Proba_4], CAST([T].[Proba_5] AS FLOAT(53)) AS [Proba_5], CAST([T].[Proba_6] AS FLOAT(53)) AS [Proba_6], CAST([T].[Proba_7] AS FLOAT(53)) AS [Proba_7], CAST([T].[Proba_8] AS FLOAT(53)) AS [Proba_8], CAST([T].[Proba_9] AS FLOAT(53)) AS [Proba_9] 
FROM (SELECT [CalProb_Union].[KEY] AS [KEY], avg(CAST([CalProb_Union].[Proba_0] AS FLOAT(53))) AS [Proba_0], avg(CAST([CalProb_Union].[Proba_1] AS FLOAT(53))) AS [Proba_1], avg(CAST([CalProb_Union].[Proba_2] AS FLOAT(53))) AS [Proba_2], avg(CAST([CalProb_Union].[Proba_3] AS FLOAT(53))) AS [Proba_3], avg(CAST([CalProb_Union].[Proba_4] AS FLOAT(53))) AS [Proba_4], avg(CAST([CalProb_Union].[Proba_5] AS FLOAT(53))) AS [Proba_5], avg(CAST([CalProb_Union].[Proba_6] AS FLOAT(53))) AS [Proba_6], avg(CAST([CalProb_Union].[Proba_7] AS FLOAT(53))) AS [Proba_7], avg(CAST([CalProb_Union].[Proba_8] AS FLOAT(53))) AS [Proba_8], avg(CAST([CalProb_Union].[Proba_9] AS FLOAT(53))) AS [Proba_9] 
FROM ##TMP_20180417025322_O0FD2N_CalProb_Union AS [CalProb_Union] GROUP BY [CalProb_Union].[KEY]) AS [T]) AS [CalProb_avg]

-- Model deployment code

WITH orig_cte AS 
(SELECT [CalProb_avg].[KEY] AS [KEY], CAST(NULL AS FLOAT(53)) AS [Score_0], CAST(NULL AS FLOAT(53)) AS [Score_1], CAST(NULL AS FLOAT(53)) AS [Score_2], CAST(NULL AS FLOAT(53)) AS [Score_3], CAST(NULL AS FLOAT(53)) AS [Score_4], CAST(NULL AS FLOAT(53)) AS [Score_5], CAST(NULL AS FLOAT(53)) AS [Score_6], CAST(NULL AS FLOAT(53)) AS [Score_7], CAST(NULL AS FLOAT(53)) AS [Score_8], CAST(NULL AS FLOAT(53)) AS [Score_9], [CalProb_avg].[Proba_0] AS [Proba_0], [CalProb_avg].[Proba_1] AS [Proba_1], [CalProb_avg].[Proba_2] AS [Proba_2], [CalProb_avg].[Proba_3] AS [Proba_3], [CalProb_avg].[Proba_4] AS [Proba_4], [CalProb_avg].[Proba_5] AS [Proba_5], [CalProb_avg].[Proba_6] AS [Proba_6], [CalProb_avg].[Proba_7] AS [Proba_7], [CalProb_avg].[Proba_8] AS [Proba_8], [CalProb_avg].[Proba_9] AS [Proba_9], CAST(NULL AS FLOAT(53)) AS [LogProba_0], CAST(NULL AS FLOAT(53)) AS [LogProba_1], CAST(NULL AS FLOAT(53)) AS [LogProba_2], CAST(NULL AS FLOAT(53)) AS [LogProba_3], CAST(NULL AS FLOAT(53)) AS [LogProba_4], CAST(NULL AS FLOAT(53)) AS [LogProba_5], CAST(NULL AS FLOAT(53)) AS [LogProba_6], CAST(NULL AS FLOAT(53)) AS [LogProba_7], CAST(NULL AS FLOAT(53)) AS [LogProba_8], CAST(NULL AS FLOAT(53)) AS [LogProba_9], CAST(NULL AS BIGINT) AS [Decision], CAST(NULL AS FLOAT(53)) AS [DecisionProba] 
FROM ##TMP_20180417025322_GU9K9Q_CalProb_avg AS [CalProb_avg]), 
score_class_union AS 
(SELECT scu.[KEY_u] AS [KEY_u], scu.class AS class, scu.[LogProba] AS [LogProba], scu.[Proba] AS [Proba], scu.[Score] AS [Score] 
FROM (SELECT orig_cte.[KEY] AS [KEY_u], 0 AS class, orig_cte.[LogProba_0] AS [LogProba], orig_cte.[Proba_0] AS [Proba], orig_cte.[Score_0] AS [Score] 
FROM orig_cte UNION ALL SELECT orig_cte.[KEY] AS [KEY_u], 1 AS class, orig_cte.[LogProba_1] AS [LogProba], orig_cte.[Proba_1] AS [Proba], orig_cte.[Score_1] AS [Score] 
FROM orig_cte UNION ALL SELECT orig_cte.[KEY] AS [KEY_u], 2 AS class, orig_cte.[LogProba_2] AS [LogProba], orig_cte.[Proba_2] AS [Proba], orig_cte.[Score_2] AS [Score] 
FROM orig_cte UNION ALL SELECT orig_cte.[KEY] AS [KEY_u], 3 AS class, orig_cte.[LogProba_3] AS [LogProba], orig_cte.[Proba_3] AS [Proba], orig_cte.[Score_3] AS [Score] 
FROM orig_cte UNION ALL SELECT orig_cte.[KEY] AS [KEY_u], 4 AS class, orig_cte.[LogProba_4] AS [LogProba], orig_cte.[Proba_4] AS [Proba], orig_cte.[Score_4] AS [Score] 
FROM orig_cte UNION ALL SELECT orig_cte.[KEY] AS [KEY_u], 5 AS class, orig_cte.[LogProba_5] AS [LogProba], orig_cte.[Proba_5] AS [Proba], orig_cte.[Score_5] AS [Score] 
FROM orig_cte UNION ALL SELECT orig_cte.[KEY] AS [KEY_u], 6 AS class, orig_cte.[LogProba_6] AS [LogProba], orig_cte.[Proba_6] AS [Proba], orig_cte.[Score_6] AS [Score] 
FROM orig_cte UNION ALL SELECT orig_cte.[KEY] AS [KEY_u], 7 AS class, orig_cte.[LogProba_7] AS [LogProba], orig_cte.[Proba_7] AS [Proba], orig_cte.[Score_7] AS [Score] 
FROM orig_cte UNION ALL SELECT orig_cte.[KEY] AS [KEY_u], 8 AS class, orig_cte.[LogProba_8] AS [LogProba], orig_cte.[Proba_8] AS [Proba], orig_cte.[Score_8] AS [Score] 
FROM orig_cte UNION ALL SELECT orig_cte.[KEY] AS [KEY_u], 9 AS class, orig_cte.[LogProba_9] AS [LogProba], orig_cte.[Proba_9] AS [Proba], orig_cte.[Score_9] AS [Score] 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte.[KEY] AS [KEY], orig_cte.[Score_0] AS [Score_0], orig_cte.[Score_1] AS [Score_1], orig_cte.[Score_2] AS [Score_2], orig_cte.[Score_3] AS [Score_3], orig_cte.[Score_4] AS [Score_4], orig_cte.[Score_5] AS [Score_5], orig_cte.[Score_6] AS [Score_6], orig_cte.[Score_7] AS [Score_7], orig_cte.[Score_8] AS [Score_8], orig_cte.[Score_9] AS [Score_9], orig_cte.[Proba_0] AS [Proba_0], orig_cte.[Proba_1] AS [Proba_1], orig_cte.[Proba_2] AS [Proba_2], orig_cte.[Proba_3] AS [Proba_3], orig_cte.[Proba_4] AS [Proba_4], orig_cte.[Proba_5] AS [Proba_5], orig_cte.[Proba_6] AS [Proba_6], orig_cte.[Proba_7] AS [Proba_7], orig_cte.[Proba_8] AS [Proba_8], orig_cte.[Proba_9] AS [Proba_9], orig_cte.[LogProba_0] AS [LogProba_0], orig_cte.[LogProba_1] AS [LogProba_1], orig_cte.[LogProba_2] AS [LogProba_2], orig_cte.[LogProba_3] AS [LogProba_3], orig_cte.[LogProba_4] AS [LogProba_4], orig_cte.[LogProba_5] AS [LogProba_5], orig_cte.[LogProba_6] AS [LogProba_6], orig_cte.[LogProba_7] AS [LogProba_7], orig_cte.[LogProba_8] AS [LogProba_8], orig_cte.[LogProba_9] AS [LogProba_9], orig_cte.[Decision] AS [Decision], orig_cte.[DecisionProba] AS [DecisionProba], max_select.[KEY_m] AS [KEY_m], max_select.[max_Proba] AS [max_Proba] 
FROM orig_cte LEFT OUTER JOIN (SELECT score_class_union.[KEY_u] AS [KEY_m], max(score_class_union.[Proba]) AS [max_Proba] 
FROM score_class_union GROUP BY score_class_union.[KEY_u]) AS max_select ON orig_cte.[KEY] = max_select.[KEY_m]), 
union_with_max AS 
(SELECT score_class_union.[KEY_u] AS [KEY_u], score_class_union.class AS class, score_class_union.[LogProba] AS [LogProba], score_class_union.[Proba] AS [Proba], score_class_union.[Score] AS [Score], score_max.[KEY] AS [KEY], score_max.[Score_0] AS [Score_0], score_max.[Score_1] AS [Score_1], score_max.[Score_2] AS [Score_2], score_max.[Score_3] AS [Score_3], score_max.[Score_4] AS [Score_4], score_max.[Score_5] AS [Score_5], score_max.[Score_6] AS [Score_6], score_max.[Score_7] AS [Score_7], score_max.[Score_8] AS [Score_8], score_max.[Score_9] AS [Score_9], score_max.[Proba_0] AS [Proba_0], score_max.[Proba_1] AS [Proba_1], score_max.[Proba_2] AS [Proba_2], score_max.[Proba_3] AS [Proba_3], score_max.[Proba_4] AS [Proba_4], score_max.[Proba_5] AS [Proba_5], score_max.[Proba_6] AS [Proba_6], score_max.[Proba_7] AS [Proba_7], score_max.[Proba_8] AS [Proba_8], score_max.[Proba_9] AS [Proba_9], score_max.[LogProba_0] AS [LogProba_0], score_max.[LogProba_1] AS [LogProba_1], score_max.[LogProba_2] AS [LogProba_2], score_max.[LogProba_3] AS [LogProba_3], score_max.[LogProba_4] AS [LogProba_4], score_max.[LogProba_5] AS [LogProba_5], score_max.[LogProba_6] AS [LogProba_6], score_max.[LogProba_7] AS [LogProba_7], score_max.[LogProba_8] AS [LogProba_8], score_max.[LogProba_9] AS [LogProba_9], score_max.[Decision] AS [Decision], score_max.[DecisionProba] AS [DecisionProba], score_max.[KEY_m] AS [KEY_m], score_max.[max_Proba] AS [max_Proba] 
FROM score_class_union LEFT OUTER JOIN score_max ON score_class_union.[KEY_u] = score_max.[KEY]), 
arg_max_cte AS 
(SELECT score_max.[KEY] AS [KEY], score_max.[Score_0] AS [Score_0], score_max.[Score_1] AS [Score_1], score_max.[Score_2] AS [Score_2], score_max.[Score_3] AS [Score_3], score_max.[Score_4] AS [Score_4], score_max.[Score_5] AS [Score_5], score_max.[Score_6] AS [Score_6], score_max.[Score_7] AS [Score_7], score_max.[Score_8] AS [Score_8], score_max.[Score_9] AS [Score_9], score_max.[Proba_0] AS [Proba_0], score_max.[Proba_1] AS [Proba_1], score_max.[Proba_2] AS [Proba_2], score_max.[Proba_3] AS [Proba_3], score_max.[Proba_4] AS [Proba_4], score_max.[Proba_5] AS [Proba_5], score_max.[Proba_6] AS [Proba_6], score_max.[Proba_7] AS [Proba_7], score_max.[Proba_8] AS [Proba_8], score_max.[Proba_9] AS [Proba_9], score_max.[LogProba_0] AS [LogProba_0], score_max.[LogProba_1] AS [LogProba_1], score_max.[LogProba_2] AS [LogProba_2], score_max.[LogProba_3] AS [LogProba_3], score_max.[LogProba_4] AS [LogProba_4], score_max.[LogProba_5] AS [LogProba_5], score_max.[LogProba_6] AS [LogProba_6], score_max.[LogProba_7] AS [LogProba_7], score_max.[LogProba_8] AS [LogProba_8], score_max.[LogProba_9] AS [LogProba_9], score_max.[Decision] AS [Decision], score_max.[DecisionProba] AS [DecisionProba], score_max.[KEY_m] AS [KEY_m], score_max.[max_Proba] AS [max_Proba], [arg_max_t_Proba].[KEY_Proba] AS [KEY_Proba], [arg_max_t_Proba].[arg_max_Proba] AS [arg_max_Proba] 
FROM score_max LEFT OUTER JOIN (SELECT union_with_max.[KEY] AS [KEY_Proba], min(union_with_max.class) AS [arg_max_Proba] 
FROM union_with_max 
WHERE union_with_max.[Proba] >= union_with_max.[max_Proba] GROUP BY union_with_max.[KEY]) AS [arg_max_t_Proba] ON score_max.[KEY] = [arg_max_t_Proba].[KEY_Proba])
 SELECT arg_max_cte.[KEY] AS [KEY], arg_max_cte.[Score_0] AS [Score_0], arg_max_cte.[Score_1] AS [Score_1], arg_max_cte.[Score_2] AS [Score_2], arg_max_cte.[Score_3] AS [Score_3], arg_max_cte.[Score_4] AS [Score_4], arg_max_cte.[Score_5] AS [Score_5], arg_max_cte.[Score_6] AS [Score_6], arg_max_cte.[Score_7] AS [Score_7], arg_max_cte.[Score_8] AS [Score_8], arg_max_cte.[Score_9] AS [Score_9], arg_max_cte.[Proba_0] AS [Proba_0], arg_max_cte.[Proba_1] AS [Proba_1], arg_max_cte.[Proba_2] AS [Proba_2], arg_max_cte.[Proba_3] AS [Proba_3], arg_max_cte.[Proba_4] AS [Proba_4], arg_max_cte.[Proba_5] AS [Proba_5], arg_max_cte.[Proba_6] AS [Proba_6], arg_max_cte.[Proba_7] AS [Proba_7], arg_max_cte.[Proba_8] AS [Proba_8], arg_max_cte.[Proba_9] AS [Proba_9], CASE WHEN (arg_max_cte.[Proba_0] IS NULL OR arg_max_cte.[Proba_0] > 0.0) THEN log(arg_max_cte.[Proba_0]) ELSE -1.79769313486231e+308 END AS [LogProba_0], CASE WHEN (arg_max_cte.[Proba_1] IS NULL OR arg_max_cte.[Proba_1] > 0.0) THEN log(arg_max_cte.[Proba_1]) ELSE -1.79769313486231e+308 END AS [LogProba_1], CASE WHEN (arg_max_cte.[Proba_2] IS NULL OR arg_max_cte.[Proba_2] > 0.0) THEN log(arg_max_cte.[Proba_2]) ELSE -1.79769313486231e+308 END AS [LogProba_2], CASE WHEN (arg_max_cte.[Proba_3] IS NULL OR arg_max_cte.[Proba_3] > 0.0) THEN log(arg_max_cte.[Proba_3]) ELSE -1.79769313486231e+308 END AS [LogProba_3], CASE WHEN (arg_max_cte.[Proba_4] IS NULL OR arg_max_cte.[Proba_4] > 0.0) THEN log(arg_max_cte.[Proba_4]) ELSE -1.79769313486231e+308 END AS [LogProba_4], CASE WHEN (arg_max_cte.[Proba_5] IS NULL OR arg_max_cte.[Proba_5] > 0.0) THEN log(arg_max_cte.[Proba_5]) ELSE -1.79769313486231e+308 END AS [LogProba_5], CASE WHEN (arg_max_cte.[Proba_6] IS NULL OR arg_max_cte.[Proba_6] > 0.0) THEN log(arg_max_cte.[Proba_6]) ELSE -1.79769313486231e+308 END AS [LogProba_6], CASE WHEN (arg_max_cte.[Proba_7] IS NULL OR arg_max_cte.[Proba_7] > 0.0) THEN log(arg_max_cte.[Proba_7]) ELSE -1.79769313486231e+308 END AS [LogProba_7], CASE WHEN (arg_max_cte.[Proba_8] IS NULL OR arg_max_cte.[Proba_8] > 0.0) THEN log(arg_max_cte.[Proba_8]) ELSE -1.79769313486231e+308 END AS [LogProba_8], CASE WHEN (arg_max_cte.[Proba_9] IS NULL OR arg_max_cte.[Proba_9] > 0.0) THEN log(arg_max_cte.[Proba_9]) ELSE -1.79769313486231e+308 END AS [LogProba_9], arg_max_cte.[arg_max_Proba] AS [Decision], arg_max_cte.[max_Proba] AS [DecisionProba] 
FROM arg_max_cte