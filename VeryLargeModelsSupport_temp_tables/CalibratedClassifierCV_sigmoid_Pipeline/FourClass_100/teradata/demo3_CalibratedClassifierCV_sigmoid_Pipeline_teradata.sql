-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2018

-- Model : CalibratedClassifierCV_sigmoid_Pipeline
-- Dataset : FourClass_100
-- Database : teradata


-- This SQL code can contain one or more statements, to be executed in the order they appear in this file.



-- Code For temporary table tmp_20180416233448_mw0l5z_ads_ part 1/2. Create 


CREATE GLOBAL TEMPORARY TABLE tmp_20180416233448_mw0l5z_ads_  (
	"KEY" BIGINT, 
	impter_2 FLOAT, 
	impter_3 FLOAT, 
	impter_4 FLOAT, 
	impter_5 FLOAT, 
	impter_6 FLOAT, 
	impter_7 FLOAT, 
	impter_8 FLOAT, 
	impter_9 FLOAT, 
	impter_10 FLOAT, 
	impter_11 FLOAT, 
	impter_12 FLOAT, 
	impter_13 FLOAT, 
	impter_14 FLOAT, 
	impter_15 FLOAT, 
	impter_16 FLOAT, 
	impter_17 FLOAT, 
	impter_18 FLOAT, 
	impter_19 FLOAT, 
	impter_20 FLOAT, 
	impter_21 FLOAT, 
	impter_22 FLOAT, 
	impter_23 FLOAT, 
	impter_24 FLOAT, 
	impter_25 FLOAT, 
	impter_26 FLOAT, 
	impter_27 FLOAT, 
	impter_28 FLOAT, 
	impter_29 FLOAT, 
	impter_30 FLOAT, 
	impter_31 FLOAT, 
	impter_32 FLOAT, 
	impter_33 FLOAT, 
	impter_34 FLOAT, 
	impter_35 FLOAT, 
	impter_36 FLOAT, 
	impter_37 FLOAT, 
	impter_38 FLOAT, 
	impter_39 FLOAT, 
	impter_40 FLOAT, 
	impter_41 FLOAT, 
	impter_42 FLOAT, 
	impter_43 FLOAT, 
	impter_44 FLOAT, 
	impter_45 FLOAT, 
	impter_46 FLOAT, 
	impter_47 FLOAT, 
	impter_48 FLOAT, 
	impter_49 FLOAT, 
	impter_50 FLOAT, 
	impter_51 FLOAT, 
	impter_52 FLOAT, 
	impter_53 FLOAT, 
	impter_54 FLOAT, 
	impter_55 FLOAT, 
	impter_56 FLOAT, 
	impter_57 FLOAT, 
	impter_58 FLOAT, 
	impter_59 FLOAT, 
	impter_60 FLOAT, 
	impter_61 FLOAT, 
	impter_62 FLOAT, 
	impter_63 FLOAT, 
	impter_64 FLOAT, 
	impter_65 FLOAT, 
	impter_66 FLOAT, 
	impter_67 FLOAT, 
	impter_68 FLOAT, 
	impter_69 FLOAT, 
	impter_70 FLOAT, 
	impter_71 FLOAT, 
	impter_72 FLOAT, 
	impter_73 FLOAT, 
	impter_74 FLOAT, 
	impter_75 FLOAT, 
	impter_76 FLOAT, 
	impter_77 FLOAT, 
	impter_78 FLOAT, 
	impter_79 FLOAT, 
	impter_80 FLOAT, 
	impter_81 FLOAT, 
	impter_82 FLOAT, 
	impter_83 FLOAT, 
	impter_84 FLOAT, 
	impter_85 FLOAT, 
	impter_86 FLOAT, 
	impter_87 FLOAT, 
	impter_88 FLOAT, 
	impter_89 FLOAT, 
	impter_90 FLOAT, 
	impter_91 FLOAT, 
	impter_92 FLOAT, 
	impter_93 FLOAT, 
	impter_94 FLOAT, 
	impter_95 FLOAT, 
	impter_96 FLOAT, 
	impter_97 FLOAT, 
	impter_98 FLOAT, 
	impter_99 FLOAT, 
	impter_100 FLOAT, 
	impter_101 FLOAT
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table tmp_20180416233448_mw0l5z_ads_ part 2/2. Populate

INSERT INTO tmp_20180416233448_mw0l5z_ads_ ("KEY", impter_2, impter_3, impter_4, impter_5, impter_6, impter_7, impter_8, impter_9, impter_10, impter_11, impter_12, impter_13, impter_14, impter_15, impter_16, impter_17, impter_18, impter_19, impter_20, impter_21, impter_22, impter_23, impter_24, impter_25, impter_26, impter_27, impter_28, impter_29, impter_30, impter_31, impter_32, impter_33, impter_34, impter_35, impter_36, impter_37, impter_38, impter_39, impter_40, impter_41, impter_42, impter_43, impter_44, impter_45, impter_46, impter_47, impter_48, impter_49, impter_50, impter_51, impter_52, impter_53, impter_54, impter_55, impter_56, impter_57, impter_58, impter_59, impter_60, impter_61, impter_62, impter_63, impter_64, impter_65, impter_66, impter_67, impter_68, impter_69, impter_70, impter_71, impter_72, impter_73, impter_74, impter_75, impter_76, impter_77, impter_78, impter_79, impter_80, impter_81, impter_82, impter_83, impter_84, impter_85, impter_86, impter_87, impter_88, impter_89, impter_90, impter_91, impter_92, impter_93, impter_94, impter_95, impter_96, impter_97, impter_98, impter_99, impter_100, impter_101) SELECT "U"."KEY", "U".impter_2, "U".impter_3, "U".impter_4, "U".impter_5, "U".impter_6, "U".impter_7, "U".impter_8, "U".impter_9, "U".impter_10, "U".impter_11, "U".impter_12, "U".impter_13, "U".impter_14, "U".impter_15, "U".impter_16, "U".impter_17, "U".impter_18, "U".impter_19, "U".impter_20, "U".impter_21, "U".impter_22, "U".impter_23, "U".impter_24, "U".impter_25, "U".impter_26, "U".impter_27, "U".impter_28, "U".impter_29, "U".impter_30, "U".impter_31, "U".impter_32, "U".impter_33, "U".impter_34, "U".impter_35, "U".impter_36, "U".impter_37, "U".impter_38, "U".impter_39, "U".impter_40, "U".impter_41, "U".impter_42, "U".impter_43, "U".impter_44, "U".impter_45, "U".impter_46, "U".impter_47, "U".impter_48, "U".impter_49, "U".impter_50, "U".impter_51, "U".impter_52, "U".impter_53, "U".impter_54, "U".impter_55, "U".impter_56, "U".impter_57, "U".impter_58, "U".impter_59, "U".impter_60, "U".impter_61, "U".impter_62, "U".impter_63, "U".impter_64, "U".impter_65, "U".impter_66, "U".impter_67, "U".impter_68, "U".impter_69, "U".impter_70, "U".impter_71, "U".impter_72, "U".impter_73, "U".impter_74, "U".impter_75, "U".impter_76, "U".impter_77, "U".impter_78, "U".impter_79, "U".impter_80, "U".impter_81, "U".impter_82, "U".impter_83, "U".impter_84, "U".impter_85, "U".impter_86, "U".impter_87, "U".impter_88, "U".impter_89, "U".impter_90, "U".impter_91, "U".impter_92, "U".impter_93, "U".impter_94, "U".impter_95, "U".impter_96, "U".impter_97, "U".impter_98, "U".impter_99, "U".impter_100, "U".impter_101 
FROM (SELECT "ADS_imp_1_OUT"."KEY", "ADS_imp_1_OUT".impter_2, "ADS_imp_1_OUT".impter_3, "ADS_imp_1_OUT".impter_4, "ADS_imp_1_OUT".impter_5, "ADS_imp_1_OUT".impter_6, "ADS_imp_1_OUT".impter_7, "ADS_imp_1_OUT".impter_8, "ADS_imp_1_OUT".impter_9, "ADS_imp_1_OUT".impter_10, "ADS_imp_1_OUT".impter_11, "ADS_imp_1_OUT".impter_12, "ADS_imp_1_OUT".impter_13, "ADS_imp_1_OUT".impter_14, "ADS_imp_1_OUT".impter_15, "ADS_imp_1_OUT".impter_16, "ADS_imp_1_OUT".impter_17, "ADS_imp_1_OUT".impter_18, "ADS_imp_1_OUT".impter_19, "ADS_imp_1_OUT".impter_20, "ADS_imp_1_OUT".impter_21, "ADS_imp_1_OUT".impter_22, "ADS_imp_1_OUT".impter_23, "ADS_imp_1_OUT".impter_24, "ADS_imp_1_OUT".impter_25, "ADS_imp_1_OUT".impter_26, "ADS_imp_1_OUT".impter_27, "ADS_imp_1_OUT".impter_28, "ADS_imp_1_OUT".impter_29, "ADS_imp_1_OUT".impter_30, "ADS_imp_1_OUT".impter_31, "ADS_imp_1_OUT".impter_32, "ADS_imp_1_OUT".impter_33, "ADS_imp_1_OUT".impter_34, "ADS_imp_1_OUT".impter_35, "ADS_imp_1_OUT".impter_36, "ADS_imp_1_OUT".impter_37, "ADS_imp_1_OUT".impter_38, "ADS_imp_1_OUT".impter_39, "ADS_imp_1_OUT".impter_40, "ADS_imp_1_OUT".impter_41, "ADS_imp_1_OUT".impter_42, "ADS_imp_1_OUT".impter_43, "ADS_imp_1_OUT".impter_44, "ADS_imp_1_OUT".impter_45, "ADS_imp_1_OUT".impter_46, "ADS_imp_1_OUT".impter_47, "ADS_imp_1_OUT".impter_48, "ADS_imp_1_OUT".impter_49, "ADS_imp_1_OUT".impter_50, "ADS_imp_1_OUT".impter_51, "ADS_imp_1_OUT".impter_52, "ADS_imp_1_OUT".impter_53, "ADS_imp_1_OUT".impter_54, "ADS_imp_1_OUT".impter_55, "ADS_imp_1_OUT".impter_56, "ADS_imp_1_OUT".impter_57, "ADS_imp_1_OUT".impter_58, "ADS_imp_1_OUT".impter_59, "ADS_imp_1_OUT".impter_60, "ADS_imp_1_OUT".impter_61, "ADS_imp_1_OUT".impter_62, "ADS_imp_1_OUT".impter_63, "ADS_imp_1_OUT".impter_64, "ADS_imp_1_OUT".impter_65, "ADS_imp_1_OUT".impter_66, "ADS_imp_1_OUT".impter_67, "ADS_imp_1_OUT".impter_68, "ADS_imp_1_OUT".impter_69, "ADS_imp_1_OUT".impter_70, "ADS_imp_1_OUT".impter_71, "ADS_imp_1_OUT".impter_72, "ADS_imp_1_OUT".impter_73, "ADS_imp_1_OUT".impter_74, "ADS_imp_1_OUT".impter_75, "ADS_imp_1_OUT".impter_76, "ADS_imp_1_OUT".impter_77, "ADS_imp_1_OUT".impter_78, "ADS_imp_1_OUT".impter_79, "ADS_imp_1_OUT".impter_80, "ADS_imp_1_OUT".impter_81, "ADS_imp_1_OUT".impter_82, "ADS_imp_1_OUT".impter_83, "ADS_imp_1_OUT".impter_84, "ADS_imp_1_OUT".impter_85, "ADS_imp_1_OUT".impter_86, "ADS_imp_1_OUT".impter_87, "ADS_imp_1_OUT".impter_88, "ADS_imp_1_OUT".impter_89, "ADS_imp_1_OUT".impter_90, "ADS_imp_1_OUT".impter_91, "ADS_imp_1_OUT".impter_92, "ADS_imp_1_OUT".impter_93, "ADS_imp_1_OUT".impter_94, "ADS_imp_1_OUT".impter_95, "ADS_imp_1_OUT".impter_96, "ADS_imp_1_OUT".impter_97, "ADS_imp_1_OUT".impter_98, "ADS_imp_1_OUT".impter_99, "ADS_imp_1_OUT".impter_100, "ADS_imp_1_OUT".impter_101 
FROM (SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" IS NULL) THEN 0.006535740121159998 ELSE "ADS"."Feature_0" END AS impter_2, CASE WHEN ("ADS"."Feature_1" IS NULL) THEN 0.16767827125978743 ELSE "ADS"."Feature_1" END AS impter_3, CASE WHEN ("ADS"."Feature_2" IS NULL) THEN -0.05514704173583139 ELSE "ADS"."Feature_2" END AS impter_4, CASE WHEN ("ADS"."Feature_3" IS NULL) THEN 0.0015211693051869056 ELSE "ADS"."Feature_3" END AS impter_5, CASE WHEN ("ADS"."Feature_4" IS NULL) THEN 0.03142760191039923 ELSE "ADS"."Feature_4" END AS impter_6, CASE WHEN ("ADS"."Feature_5" IS NULL) THEN 0.026179683178748685 ELSE "ADS"."Feature_5" END AS impter_7, CASE WHEN ("ADS"."Feature_6" IS NULL) THEN -0.011254713122120081 ELSE "ADS"."Feature_6" END AS impter_8, CASE WHEN ("ADS"."Feature_7" IS NULL) THEN -0.016886211800947296 ELSE "ADS"."Feature_7" END AS impter_9, CASE WHEN ("ADS"."Feature_8" IS NULL) THEN -0.027342702964496257 ELSE "ADS"."Feature_8" END AS impter_10, CASE WHEN ("ADS"."Feature_9" IS NULL) THEN -0.16370127884822097 ELSE "ADS"."Feature_9" END AS impter_11, CASE WHEN ("ADS"."Feature_10" IS NULL) THEN 0.03541225073893643 ELSE "ADS"."Feature_10" END AS impter_12, CASE WHEN ("ADS"."Feature_11" IS NULL) THEN -0.028529123475633158 ELSE "ADS"."Feature_11" END AS impter_13, CASE WHEN ("ADS"."Feature_12" IS NULL) THEN -0.026749444989609742 ELSE "ADS"."Feature_12" END AS impter_14, CASE WHEN ("ADS"."Feature_13" IS NULL) THEN 0.38601982291131526 ELSE "ADS"."Feature_13" END AS impter_15, CASE WHEN ("ADS"."Feature_14" IS NULL) THEN 0.01621452573135814 ELSE "ADS"."Feature_14" END AS impter_16, CASE WHEN ("ADS"."Feature_15" IS NULL) THEN 0.22723775077839256 ELSE "ADS"."Feature_15" END AS impter_17, CASE WHEN ("ADS"."Feature_16" IS NULL) THEN 0.5663734566941232 ELSE "ADS"."Feature_16" END AS impter_18, CASE WHEN ("ADS"."Feature_17" IS NULL) THEN 0.2776964106161551 ELSE "ADS"."Feature_17" END AS impter_19, CASE WHEN ("ADS"."Feature_18" IS NULL) THEN 0.005994326812351447 ELSE "ADS"."Feature_18" END AS impter_20, CASE WHEN ("ADS"."Feature_19" IS NULL) THEN -0.021852534469692157 ELSE "ADS"."Feature_19" END AS impter_21, CASE WHEN ("ADS"."Feature_20" IS NULL) THEN -0.028375425917008895 ELSE "ADS"."Feature_20" END AS impter_22, CASE WHEN ("ADS"."Feature_21" IS NULL) THEN 0.015164323296291698 ELSE "ADS"."Feature_21" END AS impter_23, CASE WHEN ("ADS"."Feature_22" IS NULL) THEN 0.017469134548764743 ELSE "ADS"."Feature_22" END AS impter_24, CASE WHEN ("ADS"."Feature_23" IS NULL) THEN 0.03493909449429536 ELSE "ADS"."Feature_23" END AS impter_25, CASE WHEN ("ADS"."Feature_24" IS NULL) THEN -0.1443616076343936 ELSE "ADS"."Feature_24" END AS impter_26, CASE WHEN ("ADS"."Feature_25" IS NULL) THEN 0.1461046774436175 ELSE "ADS"."Feature_25" END AS impter_27, CASE WHEN ("ADS"."Feature_26" IS NULL) THEN 0.06761584237384538 ELSE "ADS"."Feature_26" END AS impter_28, CASE WHEN ("ADS"."Feature_27" IS NULL) THEN -0.3083684560804083 ELSE "ADS"."Feature_27" END AS impter_29, CASE WHEN ("ADS"."Feature_28" IS NULL) THEN 0.9525753017609152 ELSE "ADS"."Feature_28" END AS impter_30, CASE WHEN ("ADS"."Feature_29" IS NULL) THEN -0.05813383910109171 ELSE "ADS"."Feature_29" END AS impter_31, CASE WHEN ("ADS"."Feature_30" IS NULL) THEN -0.013124412714914525 ELSE "ADS"."Feature_30" END AS impter_32, CASE WHEN ("ADS"."Feature_31" IS NULL) THEN -0.3375512543306959 ELSE "ADS"."Feature_31" END AS impter_33, CASE WHEN ("ADS"."Feature_32" IS NULL) THEN 0.03902651459317101 ELSE "ADS"."Feature_32" END AS impter_34, CASE WHEN ("ADS"."Feature_33" IS NULL) THEN -0.0402939442131795 ELSE "ADS"."Feature_33" END AS impter_35, CASE WHEN ("ADS"."Feature_34" IS NULL) THEN -0.17161188573704908 ELSE "ADS"."Feature_34" END AS impter_36, CASE WHEN ("ADS"."Feature_35" IS NULL) THEN 0.012647786868640112 ELSE "ADS"."Feature_35" END AS impter_37, CASE WHEN ("ADS"."Feature_36" IS NULL) THEN 0.005193735308514513 ELSE "ADS"."Feature_36" END AS impter_38, CASE WHEN ("ADS"."Feature_37" IS NULL) THEN -0.017160876576937396 ELSE "ADS"."Feature_37" END AS impter_39, CASE WHEN ("ADS"."Feature_38" IS NULL) THEN 0.045036155997948996 ELSE "ADS"."Feature_38" END AS impter_40, CASE WHEN ("ADS"."Feature_39" IS NULL) THEN -0.12035820022636322 ELSE "ADS"."Feature_39" END AS impter_41, CASE WHEN ("ADS"."Feature_40" IS NULL) THEN -0.17640392282213266 ELSE "ADS"."Feature_40" END AS impter_42, CASE WHEN ("ADS"."Feature_41" IS NULL) THEN -0.015157075927040681 ELSE "ADS"."Feature_41" END AS impter_43, CASE WHEN ("ADS"."Feature_42" IS NULL) THEN -0.3068740190578085 ELSE "ADS"."Feature_42" END AS impter_44, CASE WHEN ("ADS"."Feature_43" IS NULL) THEN -0.04035458069305412 ELSE "ADS"."Feature_43" END AS impter_45, CASE WHEN ("ADS"."Feature_44" IS NULL) THEN -0.00789981512459992 ELSE "ADS"."Feature_44" END AS impter_46, CASE WHEN ("ADS"."Feature_45" IS NULL) THEN 0.002647932254171184 ELSE "ADS"."Feature_45" END AS impter_47, CASE WHEN ("ADS"."Feature_46" IS NULL) THEN -0.1492108459830671 ELSE "ADS"."Feature_46" END AS impter_48, CASE WHEN ("ADS"."Feature_47" IS NULL) THEN 0.24895399236878446 ELSE "ADS"."Feature_47" END AS impter_49, CASE WHEN ("ADS"."Feature_48" IS NULL) THEN -0.7004243979718509 ELSE "ADS"."Feature_48" END AS impter_50, CASE WHEN ("ADS"."Feature_49" IS NULL) THEN 0.025527673750135163 ELSE "ADS"."Feature_49" END AS impter_51, CASE WHEN ("ADS"."Feature_50" IS NULL) THEN -0.15642138685028584 ELSE "ADS"."Feature_50" END AS impter_52, CASE WHEN ("ADS"."Feature_51" IS NULL) THEN -0.12783857717811203 ELSE "ADS"."Feature_51" END AS impter_53, CASE WHEN ("ADS"."Feature_52" IS NULL) THEN -0.3698795238326839 ELSE "ADS"."Feature_52" END AS impter_54, CASE WHEN ("ADS"."Feature_53" IS NULL) THEN 0.04105474558890989 ELSE "ADS"."Feature_53" END AS impter_55, CASE WHEN ("ADS"."Feature_54" IS NULL) THEN -0.10047427531359215 ELSE "ADS"."Feature_54" END AS impter_56, CASE WHEN ("ADS"."Feature_55" IS NULL) THEN -0.1312728865356366 ELSE "ADS"."Feature_55" END AS impter_57, CASE WHEN ("ADS"."Feature_56" IS NULL) THEN 0.3685784313653654 ELSE "ADS"."Feature_56" END AS impter_58, CASE WHEN ("ADS"."Feature_57" IS NULL) THEN 0.22281246520596887 ELSE "ADS"."Feature_57" END AS impter_59, CASE WHEN ("ADS"."Feature_58" IS NULL) THEN -0.006274087618403553 ELSE "ADS"."Feature_58" END AS impter_60, CASE WHEN ("ADS"."Feature_59" IS NULL) THEN 0.014268598957774136 ELSE "ADS"."Feature_59" END AS impter_61, CASE WHEN ("ADS"."Feature_60" IS NULL) THEN -0.028545511573860538 ELSE "ADS"."Feature_60" END AS impter_62, CASE WHEN ("ADS"."Feature_61" IS NULL) THEN -0.4374918318496328 ELSE "ADS"."Feature_61" END AS impter_63, CASE WHEN ("ADS"."Feature_62" IS NULL) THEN -0.3689927805875731 ELSE "ADS"."Feature_62" END AS impter_64, CASE WHEN ("ADS"."Feature_63" IS NULL) THEN 0.0011690418193188894 ELSE "ADS"."Feature_63" END AS impter_65, CASE WHEN ("ADS"."Feature_64" IS NULL) THEN -0.011564873717580429 ELSE "ADS"."Feature_64" END AS impter_66, CASE WHEN ("ADS"."Feature_65" IS NULL) THEN -0.04358769989694412 ELSE "ADS"."Feature_65" END AS impter_67, CASE WHEN ("ADS"."Feature_66" IS NULL) THEN -0.1618634137390173 ELSE "ADS"."Feature_66" END AS impter_68, CASE WHEN ("ADS"."Feature_67" IS NULL) THEN -0.01727264153501617 ELSE "ADS"."Feature_67" END AS impter_69, CASE WHEN ("ADS"."Feature_68" IS NULL) THEN -0.36403022036864674 ELSE "ADS"."Feature_68" END AS impter_70, CASE WHEN ("ADS"."Feature_69" IS NULL) THEN -0.049273006502403176 ELSE "ADS"."Feature_69" END AS impter_71, CASE WHEN ("ADS"."Feature_70" IS NULL) THEN -0.015468512657334297 ELSE "ADS"."Feature_70" END AS impter_72, CASE WHEN ("ADS"."Feature_71" IS NULL) THEN -0.19162939351279548 ELSE "ADS"."Feature_71" END AS impter_73, CASE WHEN ("ADS"."Feature_72" IS NULL) THEN 0.023782830321603186 ELSE "ADS"."Feature_72" END AS impter_74, CASE WHEN ("ADS"."Feature_73" IS NULL) THEN 0.020454799672569742 ELSE "ADS"."Feature_73" END AS impter_75, CASE WHEN ("ADS"."Feature_74" IS NULL) THEN -0.17335534659313448 ELSE "ADS"."Feature_74" END AS impter_76, CASE WHEN ("ADS"."Feature_75" IS NULL) THEN 0.02758228824576348 ELSE "ADS"."Feature_75" END AS impter_77, CASE WHEN ("ADS"."Feature_76" IS NULL) THEN -0.015452336678168777 ELSE "ADS"."Feature_76" END AS impter_78, CASE WHEN ("ADS"."Feature_77" IS NULL) THEN -0.0425555457732581 ELSE "ADS"."Feature_77" END AS impter_79, CASE WHEN ("ADS"."Feature_78" IS NULL) THEN -0.009425736580365328 ELSE "ADS"."Feature_78" END AS impter_80, CASE WHEN ("ADS"."Feature_79" IS NULL) THEN 0.007423677489325057 ELSE "ADS"."Feature_79" END AS impter_81, CASE WHEN ("ADS"."Feature_80" IS NULL) THEN 0.0498533264368169 ELSE "ADS"."Feature_80" END AS impter_82, CASE WHEN ("ADS"."Feature_81" IS NULL) THEN 0.027960221179443 ELSE "ADS"."Feature_81" END AS impter_83, CASE WHEN ("ADS"."Feature_82" IS NULL) THEN -0.005270502487579236 ELSE "ADS"."Feature_82" END AS impter_84, CASE WHEN ("ADS"."Feature_83" IS NULL) THEN -0.053393611774246875 ELSE "ADS"."Feature_83" END AS impter_85, CASE WHEN ("ADS"."Feature_84" IS NULL) THEN 0.17162033288561043 ELSE "ADS"."Feature_84" END AS impter_86, CASE WHEN ("ADS"."Feature_85" IS NULL) THEN 0.037211997007404414 ELSE "ADS"."Feature_85" END AS impter_87, CASE WHEN ("ADS"."Feature_86" IS NULL) THEN 0.01843497333044896 ELSE "ADS"."Feature_86" END AS impter_88, CASE WHEN ("ADS"."Feature_87" IS NULL) THEN 0.5605216326173627 ELSE "ADS"."Feature_87" END AS impter_89, CASE WHEN ("ADS"."Feature_88" IS NULL) THEN -0.05285046291900049 ELSE "ADS"."Feature_88" END AS impter_90, CASE WHEN ("ADS"."Feature_89" IS NULL) THEN 0.07939021734244131 ELSE "ADS"."Feature_89" END AS impter_91, CASE WHEN ("ADS"."Feature_90" IS NULL) THEN -2.088667163118704 ELSE "ADS"."Feature_90" END AS impter_92, CASE WHEN ("ADS"."Feature_91" IS NULL) THEN -1.0831020638954625 ELSE "ADS"."Feature_91" END AS impter_93, CASE WHEN ("ADS"."Feature_92" IS NULL) THEN -0.30470236282124374 ELSE "ADS"."Feature_92" END AS impter_94, CASE WHEN ("ADS"."Feature_93" IS NULL) THEN -0.9354262595637257 ELSE "ADS"."Feature_93" END AS impter_95, CASE WHEN ("ADS"."Feature_94" IS NULL) THEN -0.09841121992703274 ELSE "ADS"."Feature_94" END AS impter_96, CASE WHEN ("ADS"."Feature_95" IS NULL) THEN -0.5316534843603434 ELSE "ADS"."Feature_95" END AS impter_97, CASE WHEN ("ADS"."Feature_96" IS NULL) THEN 0.014127422137804999 ELSE "ADS"."Feature_96" END AS impter_98, CASE WHEN ("ADS"."Feature_97" IS NULL) THEN -0.012631277412677116 ELSE "ADS"."Feature_97" END AS impter_99, CASE WHEN ("ADS"."Feature_98" IS NULL) THEN 0.031286881233113274 ELSE "ADS"."Feature_98" END AS impter_100, CASE WHEN ("ADS"."Feature_99" IS NULL) THEN -0.45039051538460234 ELSE "ADS"."Feature_99" END AS impter_101 
FROM "FourClass_100" AS "ADS") AS "ADS_imp_1_OUT") AS "U"

-- Code For temporary table tmp_20180416233448_lwwtk6_ads_ part 1/2. Create 


CREATE GLOBAL TEMPORARY TABLE tmp_20180416233448_lwwtk6_ads_  (
	"KEY" BIGINT, 
	scaler_2 FLOAT, 
	scaler_3 FLOAT, 
	scaler_4 FLOAT, 
	scaler_5 FLOAT, 
	scaler_6 FLOAT, 
	scaler_7 FLOAT, 
	scaler_8 FLOAT, 
	scaler_9 FLOAT, 
	scaler_10 FLOAT, 
	scaler_11 FLOAT, 
	scaler_12 FLOAT, 
	scaler_13 FLOAT, 
	scaler_14 FLOAT, 
	scaler_15 FLOAT, 
	scaler_16 FLOAT, 
	scaler_17 FLOAT, 
	scaler_18 FLOAT, 
	scaler_19 FLOAT, 
	scaler_20 FLOAT, 
	scaler_21 FLOAT, 
	scaler_22 FLOAT, 
	scaler_23 FLOAT, 
	scaler_24 FLOAT, 
	scaler_25 FLOAT, 
	scaler_26 FLOAT, 
	scaler_27 FLOAT, 
	scaler_28 FLOAT, 
	scaler_29 FLOAT, 
	scaler_30 FLOAT, 
	scaler_31 FLOAT, 
	scaler_32 FLOAT, 
	scaler_33 FLOAT, 
	scaler_34 FLOAT, 
	scaler_35 FLOAT, 
	scaler_36 FLOAT, 
	scaler_37 FLOAT, 
	scaler_38 FLOAT, 
	scaler_39 FLOAT, 
	scaler_40 FLOAT, 
	scaler_41 FLOAT, 
	scaler_42 FLOAT, 
	scaler_43 FLOAT, 
	scaler_44 FLOAT, 
	scaler_45 FLOAT, 
	scaler_46 FLOAT, 
	scaler_47 FLOAT, 
	scaler_48 FLOAT, 
	scaler_49 FLOAT, 
	scaler_50 FLOAT, 
	scaler_51 FLOAT, 
	scaler_52 FLOAT, 
	scaler_53 FLOAT, 
	scaler_54 FLOAT, 
	scaler_55 FLOAT, 
	scaler_56 FLOAT, 
	scaler_57 FLOAT, 
	scaler_58 FLOAT, 
	scaler_59 FLOAT, 
	scaler_60 FLOAT, 
	scaler_61 FLOAT, 
	scaler_62 FLOAT, 
	scaler_63 FLOAT, 
	scaler_64 FLOAT, 
	scaler_65 FLOAT, 
	scaler_66 FLOAT, 
	scaler_67 FLOAT, 
	scaler_68 FLOAT, 
	scaler_69 FLOAT, 
	scaler_70 FLOAT, 
	scaler_71 FLOAT, 
	scaler_72 FLOAT, 
	scaler_73 FLOAT, 
	scaler_74 FLOAT, 
	scaler_75 FLOAT, 
	scaler_76 FLOAT, 
	scaler_77 FLOAT, 
	scaler_78 FLOAT, 
	scaler_79 FLOAT, 
	scaler_80 FLOAT, 
	scaler_81 FLOAT, 
	scaler_82 FLOAT, 
	scaler_83 FLOAT, 
	scaler_84 FLOAT, 
	scaler_85 FLOAT, 
	scaler_86 FLOAT, 
	scaler_87 FLOAT, 
	scaler_88 FLOAT, 
	scaler_89 FLOAT, 
	scaler_90 FLOAT, 
	scaler_91 FLOAT, 
	scaler_92 FLOAT, 
	scaler_93 FLOAT, 
	scaler_94 FLOAT, 
	scaler_95 FLOAT, 
	scaler_96 FLOAT, 
	scaler_97 FLOAT, 
	scaler_98 FLOAT, 
	scaler_99 FLOAT, 
	scaler_100 FLOAT, 
	scaler_101 FLOAT
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table tmp_20180416233448_lwwtk6_ads_ part 2/2. Populate

INSERT INTO tmp_20180416233448_lwwtk6_ads_ ("KEY", scaler_2, scaler_3, scaler_4, scaler_5, scaler_6, scaler_7, scaler_8, scaler_9, scaler_10, scaler_11, scaler_12, scaler_13, scaler_14, scaler_15, scaler_16, scaler_17, scaler_18, scaler_19, scaler_20, scaler_21, scaler_22, scaler_23, scaler_24, scaler_25, scaler_26, scaler_27, scaler_28, scaler_29, scaler_30, scaler_31, scaler_32, scaler_33, scaler_34, scaler_35, scaler_36, scaler_37, scaler_38, scaler_39, scaler_40, scaler_41, scaler_42, scaler_43, scaler_44, scaler_45, scaler_46, scaler_47, scaler_48, scaler_49, scaler_50, scaler_51, scaler_52, scaler_53, scaler_54, scaler_55, scaler_56, scaler_57, scaler_58, scaler_59, scaler_60, scaler_61, scaler_62, scaler_63, scaler_64, scaler_65, scaler_66, scaler_67, scaler_68, scaler_69, scaler_70, scaler_71, scaler_72, scaler_73, scaler_74, scaler_75, scaler_76, scaler_77, scaler_78, scaler_79, scaler_80, scaler_81, scaler_82, scaler_83, scaler_84, scaler_85, scaler_86, scaler_87, scaler_88, scaler_89, scaler_90, scaler_91, scaler_92, scaler_93, scaler_94, scaler_95, scaler_96, scaler_97, scaler_98, scaler_99, scaler_100, scaler_101) SELECT "U"."KEY", "U".scaler_2, "U".scaler_3, "U".scaler_4, "U".scaler_5, "U".scaler_6, "U".scaler_7, "U".scaler_8, "U".scaler_9, "U".scaler_10, "U".scaler_11, "U".scaler_12, "U".scaler_13, "U".scaler_14, "U".scaler_15, "U".scaler_16, "U".scaler_17, "U".scaler_18, "U".scaler_19, "U".scaler_20, "U".scaler_21, "U".scaler_22, "U".scaler_23, "U".scaler_24, "U".scaler_25, "U".scaler_26, "U".scaler_27, "U".scaler_28, "U".scaler_29, "U".scaler_30, "U".scaler_31, "U".scaler_32, "U".scaler_33, "U".scaler_34, "U".scaler_35, "U".scaler_36, "U".scaler_37, "U".scaler_38, "U".scaler_39, "U".scaler_40, "U".scaler_41, "U".scaler_42, "U".scaler_43, "U".scaler_44, "U".scaler_45, "U".scaler_46, "U".scaler_47, "U".scaler_48, "U".scaler_49, "U".scaler_50, "U".scaler_51, "U".scaler_52, "U".scaler_53, "U".scaler_54, "U".scaler_55, "U".scaler_56, "U".scaler_57, "U".scaler_58, "U".scaler_59, "U".scaler_60, "U".scaler_61, "U".scaler_62, "U".scaler_63, "U".scaler_64, "U".scaler_65, "U".scaler_66, "U".scaler_67, "U".scaler_68, "U".scaler_69, "U".scaler_70, "U".scaler_71, "U".scaler_72, "U".scaler_73, "U".scaler_74, "U".scaler_75, "U".scaler_76, "U".scaler_77, "U".scaler_78, "U".scaler_79, "U".scaler_80, "U".scaler_81, "U".scaler_82, "U".scaler_83, "U".scaler_84, "U".scaler_85, "U".scaler_86, "U".scaler_87, "U".scaler_88, "U".scaler_89, "U".scaler_90, "U".scaler_91, "U".scaler_92, "U".scaler_93, "U".scaler_94, "U".scaler_95, "U".scaler_96, "U".scaler_97, "U".scaler_98, "U".scaler_99, "U".scaler_100, "U".scaler_101 
FROM (SELECT "ADS_sca_2_OUT"."KEY", "ADS_sca_2_OUT".scaler_2, "ADS_sca_2_OUT".scaler_3, "ADS_sca_2_OUT".scaler_4, "ADS_sca_2_OUT".scaler_5, "ADS_sca_2_OUT".scaler_6, "ADS_sca_2_OUT".scaler_7, "ADS_sca_2_OUT".scaler_8, "ADS_sca_2_OUT".scaler_9, "ADS_sca_2_OUT".scaler_10, "ADS_sca_2_OUT".scaler_11, "ADS_sca_2_OUT".scaler_12, "ADS_sca_2_OUT".scaler_13, "ADS_sca_2_OUT".scaler_14, "ADS_sca_2_OUT".scaler_15, "ADS_sca_2_OUT".scaler_16, "ADS_sca_2_OUT".scaler_17, "ADS_sca_2_OUT".scaler_18, "ADS_sca_2_OUT".scaler_19, "ADS_sca_2_OUT".scaler_20, "ADS_sca_2_OUT".scaler_21, "ADS_sca_2_OUT".scaler_22, "ADS_sca_2_OUT".scaler_23, "ADS_sca_2_OUT".scaler_24, "ADS_sca_2_OUT".scaler_25, "ADS_sca_2_OUT".scaler_26, "ADS_sca_2_OUT".scaler_27, "ADS_sca_2_OUT".scaler_28, "ADS_sca_2_OUT".scaler_29, "ADS_sca_2_OUT".scaler_30, "ADS_sca_2_OUT".scaler_31, "ADS_sca_2_OUT".scaler_32, "ADS_sca_2_OUT".scaler_33, "ADS_sca_2_OUT".scaler_34, "ADS_sca_2_OUT".scaler_35, "ADS_sca_2_OUT".scaler_36, "ADS_sca_2_OUT".scaler_37, "ADS_sca_2_OUT".scaler_38, "ADS_sca_2_OUT".scaler_39, "ADS_sca_2_OUT".scaler_40, "ADS_sca_2_OUT".scaler_41, "ADS_sca_2_OUT".scaler_42, "ADS_sca_2_OUT".scaler_43, "ADS_sca_2_OUT".scaler_44, "ADS_sca_2_OUT".scaler_45, "ADS_sca_2_OUT".scaler_46, "ADS_sca_2_OUT".scaler_47, "ADS_sca_2_OUT".scaler_48, "ADS_sca_2_OUT".scaler_49, "ADS_sca_2_OUT".scaler_50, "ADS_sca_2_OUT".scaler_51, "ADS_sca_2_OUT".scaler_52, "ADS_sca_2_OUT".scaler_53, "ADS_sca_2_OUT".scaler_54, "ADS_sca_2_OUT".scaler_55, "ADS_sca_2_OUT".scaler_56, "ADS_sca_2_OUT".scaler_57, "ADS_sca_2_OUT".scaler_58, "ADS_sca_2_OUT".scaler_59, "ADS_sca_2_OUT".scaler_60, "ADS_sca_2_OUT".scaler_61, "ADS_sca_2_OUT".scaler_62, "ADS_sca_2_OUT".scaler_63, "ADS_sca_2_OUT".scaler_64, "ADS_sca_2_OUT".scaler_65, "ADS_sca_2_OUT".scaler_66, "ADS_sca_2_OUT".scaler_67, "ADS_sca_2_OUT".scaler_68, "ADS_sca_2_OUT".scaler_69, "ADS_sca_2_OUT".scaler_70, "ADS_sca_2_OUT".scaler_71, "ADS_sca_2_OUT".scaler_72, "ADS_sca_2_OUT".scaler_73, "ADS_sca_2_OUT".scaler_74, "ADS_sca_2_OUT".scaler_75, "ADS_sca_2_OUT".scaler_76, "ADS_sca_2_OUT".scaler_77, "ADS_sca_2_OUT".scaler_78, "ADS_sca_2_OUT".scaler_79, "ADS_sca_2_OUT".scaler_80, "ADS_sca_2_OUT".scaler_81, "ADS_sca_2_OUT".scaler_82, "ADS_sca_2_OUT".scaler_83, "ADS_sca_2_OUT".scaler_84, "ADS_sca_2_OUT".scaler_85, "ADS_sca_2_OUT".scaler_86, "ADS_sca_2_OUT".scaler_87, "ADS_sca_2_OUT".scaler_88, "ADS_sca_2_OUT".scaler_89, "ADS_sca_2_OUT".scaler_90, "ADS_sca_2_OUT".scaler_91, "ADS_sca_2_OUT".scaler_92, "ADS_sca_2_OUT".scaler_93, "ADS_sca_2_OUT".scaler_94, "ADS_sca_2_OUT".scaler_95, "ADS_sca_2_OUT".scaler_96, "ADS_sca_2_OUT".scaler_97, "ADS_sca_2_OUT".scaler_98, "ADS_sca_2_OUT".scaler_99, "ADS_sca_2_OUT".scaler_100, "ADS_sca_2_OUT".scaler_101 
FROM (SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", (CAST("ADS_imp_1_OUT".impter_2 AS FLOAT) - 0.00653574012116) / 0.985821711919416 AS scaler_2, (CAST("ADS_imp_1_OUT".impter_3 AS FLOAT) - 0.167678271259787) / 4.178932779057346 AS scaler_3, (CAST("ADS_imp_1_OUT".impter_4 AS FLOAT) - -0.055147041735831) / 4.08515606391014 AS scaler_4, (CAST("ADS_imp_1_OUT".impter_5 AS FLOAT) - 0.001521169305187) / 1.058399422125588 AS scaler_5, (CAST("ADS_imp_1_OUT".impter_6 AS FLOAT) - 0.031427601910399) / 0.958502901404168 AS scaler_6, (CAST("ADS_imp_1_OUT".impter_7 AS FLOAT) - 0.026179683178749) / 0.993854807715344 AS scaler_7, (CAST("ADS_imp_1_OUT".impter_8 AS FLOAT) - -0.01125471312212) / 0.995945599636728 AS scaler_8, (CAST("ADS_imp_1_OUT".impter_9 AS FLOAT) - -0.016886211800947) / 1.04542967803467 AS scaler_9, (CAST("ADS_imp_1_OUT".impter_10 AS FLOAT) - -0.027342702964496) / 4.331356741820494 AS scaler_10, (CAST("ADS_imp_1_OUT".impter_11 AS FLOAT) - -0.163701278848221) / 4.458898205934484 AS scaler_11, (CAST("ADS_imp_1_OUT".impter_12 AS FLOAT) - 0.035412250738936) / 1.036616487810755 AS scaler_12, (CAST("ADS_imp_1_OUT".impter_13 AS FLOAT) - -0.028529123475633) / 1.004676205552298 AS scaler_13, (CAST("ADS_imp_1_OUT".impter_14 AS FLOAT) - -0.02674944498961) / 0.999624026710058 AS scaler_14, (CAST("ADS_imp_1_OUT".impter_15 AS FLOAT) - 0.386019822911315) / 4.144804786518486 AS scaler_15, (CAST("ADS_imp_1_OUT".impter_16 AS FLOAT) - 0.016214525731358) / 1.017281296667399 AS scaler_16, (CAST("ADS_imp_1_OUT".impter_17 AS FLOAT) - 0.227237750778393) / 4.367112620179618 AS scaler_17, (CAST("ADS_imp_1_OUT".impter_18 AS FLOAT) - 0.566373456694123) / 4.118156884045948 AS scaler_18, (CAST("ADS_imp_1_OUT".impter_19 AS FLOAT) - 0.277696410616155) / 4.014328975715426 AS scaler_19, (CAST("ADS_imp_1_OUT".impter_20 AS FLOAT) - 0.005994326812351) / 0.972439502321079 AS scaler_20, (CAST("ADS_imp_1_OUT".impter_21 AS FLOAT) - -0.021852534469692) / 0.985687517726374 AS scaler_21, (CAST("ADS_imp_1_OUT".impter_22 AS FLOAT) - -0.028375425917009) / 1.023103469868883 AS scaler_22, (CAST("ADS_imp_1_OUT".impter_23 AS FLOAT) - 0.015164323296292) / 4.353145169181992 AS scaler_23, (CAST("ADS_imp_1_OUT".impter_24 AS FLOAT) - 0.017469134548765) / 1.001805654268762 AS scaler_24, (CAST("ADS_imp_1_OUT".impter_25 AS FLOAT) - 0.034939094494295) / 0.992721649767531 AS scaler_25, (CAST("ADS_imp_1_OUT".impter_26 AS FLOAT) - -0.144361607634394) / 4.467397668863504 AS scaler_26, (CAST("ADS_imp_1_OUT".impter_27 AS FLOAT) - 0.146104677443618) / 4.107342778563649 AS scaler_27, (CAST("ADS_imp_1_OUT".impter_28 AS FLOAT) - 0.067615842373845) / 4.277643036456076 AS scaler_28, (CAST("ADS_imp_1_OUT".impter_29 AS FLOAT) - -0.308368456080408) / 4.030195686259092 AS scaler_29, (CAST("ADS_imp_1_OUT".impter_30 AS FLOAT) - 0.952575301760915) / 4.017302623019134 AS scaler_30, (CAST("ADS_imp_1_OUT".impter_31 AS FLOAT) - -0.058133839101092) / 4.03353195749377 AS scaler_31, (CAST("ADS_imp_1_OUT".impter_32 AS FLOAT) - -0.013124412714915) / 0.955198781566282 AS scaler_32, (CAST("ADS_imp_1_OUT".impter_33 AS FLOAT) - -0.337551254330696) / 4.106571680414476 AS scaler_33, (CAST("ADS_imp_1_OUT".impter_34 AS FLOAT) - 0.039026514593171) / 0.990359225336864 AS scaler_34, (CAST("ADS_imp_1_OUT".impter_35 AS FLOAT) - -0.04029394421318) / 1.015296116761204 AS scaler_35, (CAST("ADS_imp_1_OUT".impter_36 AS FLOAT) - -0.171611885737049) / 4.179229563019858 AS scaler_36, (CAST("ADS_imp_1_OUT".impter_37 AS FLOAT) - 0.01264778686864) / 1.007830761864778 AS scaler_37, (CAST("ADS_imp_1_OUT".impter_38 AS FLOAT) - 0.005193735308515) / 4.297332183672822 AS scaler_38, (CAST("ADS_imp_1_OUT".impter_39 AS FLOAT) - -0.017160876576937) / 1.017378855706664 AS scaler_39, (CAST("ADS_imp_1_OUT".impter_40 AS FLOAT) - 0.045036155997949) / 3.904281136786187 AS scaler_40, (CAST("ADS_imp_1_OUT".impter_41 AS FLOAT) - -0.120358200226363) / 3.984028603622864 AS scaler_41, (CAST("ADS_imp_1_OUT".impter_42 AS FLOAT) - -0.176403922822133) / 4.069314637621373 AS scaler_42, (CAST("ADS_imp_1_OUT".impter_43 AS FLOAT) - -0.015157075927041) / 1.029157389545088 AS scaler_43, (CAST("ADS_imp_1_OUT".impter_44 AS FLOAT) - -0.306874019057808) / 4.347912512213832 AS scaler_44, (CAST("ADS_imp_1_OUT".impter_45 AS FLOAT) - -0.040354580693054) / 4.05064377380716 AS scaler_45, (CAST("ADS_imp_1_OUT".impter_46 AS FLOAT) - -0.0078998151246) / 1.006375476591226 AS scaler_46, (CAST("ADS_imp_1_OUT".impter_47 AS FLOAT) - 0.002647932254171) / 1.002144775585071 AS scaler_47, (CAST("ADS_imp_1_OUT".impter_48 AS FLOAT) - -0.149210845983067) / 4.103402009893949 AS scaler_48, (CAST("ADS_imp_1_OUT".impter_49 AS FLOAT) - 0.248953992368784) / 4.232200380326286 AS scaler_49, (CAST("ADS_imp_1_OUT".impter_50 AS FLOAT) - -0.700424397971851) / 4.220766541993596 AS scaler_50, (CAST("ADS_imp_1_OUT".impter_51 AS FLOAT) - 0.025527673750135) / 1.020674092725397 AS scaler_51, (CAST("ADS_imp_1_OUT".impter_52 AS FLOAT) - -0.156421386850286) / 4.078310671245766 AS scaler_52, (CAST("ADS_imp_1_OUT".impter_53 AS FLOAT) - -0.127838577178112) / 4.247236801364964 AS scaler_53, (CAST("ADS_imp_1_OUT".impter_54 AS FLOAT) - -0.369879523832684) / 4.037675848477055 AS scaler_54, (CAST("ADS_imp_1_OUT".impter_55 AS FLOAT) - 0.04105474558891) / 4.445571371438813 AS scaler_55, (CAST("ADS_imp_1_OUT".impter_56 AS FLOAT) - -0.100474275313592) / 4.045836826444958 AS scaler_56, (CAST("ADS_imp_1_OUT".impter_57 AS FLOAT) - -0.131272886535637) / 4.256606009499922 AS scaler_57, (CAST("ADS_imp_1_OUT".impter_58 AS FLOAT) - 0.368578431365365) / 4.04294690880675 AS scaler_58, (CAST("ADS_imp_1_OUT".impter_59 AS FLOAT) - 0.222812465205969) / 4.252398068764952 AS scaler_59, (CAST("ADS_imp_1_OUT".impter_60 AS FLOAT) - -0.006274087618404) / 1.013175429895288 AS scaler_60, (CAST("ADS_imp_1_OUT".impter_61 AS FLOAT) - 0.014268598957774) / 0.975232456173164 AS scaler_61, (CAST("ADS_imp_1_OUT".impter_62 AS FLOAT) - -0.028545511573861) / 0.99601766121793 AS scaler_62, (CAST("ADS_imp_1_OUT".impter_63 AS FLOAT) - -0.437491831849633) / 4.238759256560504 AS scaler_63, (CAST("ADS_imp_1_OUT".impter_64 AS FLOAT) - -0.368992780587573) / 4.18274187652401 AS scaler_64, (CAST("ADS_imp_1_OUT".impter_65 AS FLOAT) - 0.001169041819319) / 1.043336524991625 AS scaler_65, (CAST("ADS_imp_1_OUT".impter_66 AS FLOAT) - -0.01156487371758) / 4.081504294152238 AS scaler_66, (CAST("ADS_imp_1_OUT".impter_67 AS FLOAT) - -0.043587699896944) / 1.058664519012294 AS scaler_67, (CAST("ADS_imp_1_OUT".impter_68 AS FLOAT) - -0.161863413739017) / 4.259666235165136 AS scaler_68, (CAST("ADS_imp_1_OUT".impter_69 AS FLOAT) - -0.017272641535016) / 1.010305833440296 AS scaler_69, (CAST("ADS_imp_1_OUT".impter_70 AS FLOAT) - -0.364030220368647) / 4.23529048916204 AS scaler_70, (CAST("ADS_imp_1_OUT".impter_71 AS FLOAT) - -0.049273006502403) / 4.310802365306347 AS scaler_71, (CAST("ADS_imp_1_OUT".impter_72 AS FLOAT) - -0.015468512657334) / 1.010660801531323 AS scaler_72, (CAST("ADS_imp_1_OUT".impter_73 AS FLOAT) - -0.191629393512795) / 4.116044965548444 AS scaler_73, (CAST("ADS_imp_1_OUT".impter_74 AS FLOAT) - 0.023782830321603) / 0.997185935238241 AS scaler_74, (CAST("ADS_imp_1_OUT".impter_75 AS FLOAT) - 0.02045479967257) / 0.96404748767937 AS scaler_75, (CAST("ADS_imp_1_OUT".impter_76 AS FLOAT) - -0.173355346593134) / 4.268840083291991 AS scaler_76, (CAST("ADS_imp_1_OUT".impter_77 AS FLOAT) - 0.027582288245763) / 1.002873637150224 AS scaler_77, (CAST("ADS_imp_1_OUT".impter_78 AS FLOAT) - -0.015452336678169) / 0.951796972877656 AS scaler_78, (CAST("ADS_imp_1_OUT".impter_79 AS FLOAT) - -0.042555545773258) / 1.026041980115793 AS scaler_79, (CAST("ADS_imp_1_OUT".impter_80 AS FLOAT) - -0.009425736580365) / 0.981547933162807 AS scaler_80, (CAST("ADS_imp_1_OUT".impter_81 AS FLOAT) - 0.007423677489325) / 1.017144763796163 AS scaler_81, (CAST("ADS_imp_1_OUT".impter_82 AS FLOAT) - 0.049853326436817) / 1.013812175189716 AS scaler_82, (CAST("ADS_imp_1_OUT".impter_83 AS FLOAT) - 0.027960221179443) / 1.004933108786332 AS scaler_83, (CAST("ADS_imp_1_OUT".impter_84 AS FLOAT) - -0.005270502487579) / 1.023325284914829 AS scaler_84, (CAST("ADS_imp_1_OUT".impter_85 AS FLOAT) - -0.053393611774247) / 1.004589191993288 AS scaler_85, (CAST("ADS_imp_1_OUT".impter_86 AS FLOAT) - 0.17162033288561) / 4.24884427578287 AS scaler_86, (CAST("ADS_imp_1_OUT".impter_87 AS FLOAT) - 0.037211997007404) / 4.254048583081736 AS scaler_87, (CAST("ADS_imp_1_OUT".impter_88 AS FLOAT) - 0.018434973330449) / 3.949728840889438 AS scaler_88, (CAST("ADS_imp_1_OUT".impter_89 AS FLOAT) - 0.560521632617363) / 4.331332438981666 AS scaler_89, (CAST("ADS_imp_1_OUT".impter_90 AS FLOAT) - -0.052850462919) / 1.0358397102155 AS scaler_90, (CAST("ADS_imp_1_OUT".impter_91 AS FLOAT) - 0.079390217342441) / 0.969876446027829 AS scaler_91, (CAST("ADS_imp_1_OUT".impter_92 AS FLOAT) - -2.088667163118704) / 15.30221524651991 AS scaler_92, (CAST("ADS_imp_1_OUT".impter_93 AS FLOAT) - -1.083102063895462) / 4.36710902027052 AS scaler_93, (CAST("ADS_imp_1_OUT".impter_94 AS FLOAT) - -0.304702362821244) / 4.204292362348631 AS scaler_94, (CAST("ADS_imp_1_OUT".impter_95 AS FLOAT) - -0.935426259563726) / 15.357005766716696 AS scaler_95, (CAST("ADS_imp_1_OUT".impter_96 AS FLOAT) - -0.098411219927033) / 0.952484869943965 AS scaler_96, (CAST("ADS_imp_1_OUT".impter_97 AS FLOAT) - -0.531653484360343) / 3.977000718240084 AS scaler_97, (CAST("ADS_imp_1_OUT".impter_98 AS FLOAT) - 0.014127422137805) / 0.987925892541105 AS scaler_98, (CAST("ADS_imp_1_OUT".impter_99 AS FLOAT) - -0.012631277412677) / 1.015196444834118 AS scaler_99, (CAST("ADS_imp_1_OUT".impter_100 AS FLOAT) - 0.031286881233113) / 0.989361802421023 AS scaler_100, (CAST("ADS_imp_1_OUT".impter_101 AS FLOAT) - -0.450390515384602) / 4.244700325091398 AS scaler_101 
FROM tmp_20180416233448_mw0l5z_ads_ AS "ADS_imp_1_OUT") AS "ADS_sca_2_OUT") AS "U"

-- Code For temporary table tmp_20180416233449_22fc9e_calp part 1/2. Create 


CREATE GLOBAL TEMPORARY TABLE tmp_20180416233449_22fc9e_calp  (
	"KEY" BIGINT, 
	"Proba_0" FLOAT, 
	"Proba_1" FLOAT, 
	"Proba_2" FLOAT, 
	"Proba_3" FLOAT
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table tmp_20180416233449_22fc9e_calp part 2/2. Populate

INSERT INTO tmp_20180416233449_22fc9e_calp ("KEY", "Proba_0", "Proba_1", "Proba_2", "Proba_3") SELECT "U"."KEY", "U"."Proba_0", "U"."Proba_1", "U"."Proba_2", "U"."Proba_3" 
FROM (WITH "DT_node_lookup" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_66 <= -0.24924510717392) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_44 <= -1.056002736091614) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= -0.146784082055092) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_69 <= 0.812159895896912) THEN 4 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_79 <= 1.725360631942749) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_82 <= 0.909085988998413) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_57 <= 1.867478251457214) THEN 10 ELSE 11 END ELSE 12 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_15 <= 0.082391478121281) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_86 <= -1.182183504104614) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_17 <= -0.52673065662384) THEN 16 ELSE 17 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_54 <= 0.033376701176167) THEN 19 ELSE 20 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_29 <= 0.489542961120606) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_101 <= -0.918304920196533) THEN 23 ELSE 24 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_13 <= 0.760696768760681) THEN 26 ELSE 27 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_70 <= -0.372307807207108) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_42 <= 0.091414332389832) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_35 <= -0.533841669559479) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_36 <= 0.429828822612762) THEN 32 ELSE 33 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= -0.069566830992699) THEN 35 ELSE 36 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= 0.850683450698852) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_21 <= -0.893017649650574) THEN 39 ELSE 40 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_13 <= -0.289751261472702) THEN 42 ELSE 43 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_18 <= -0.420707672834396) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_56 <= 0.895579099655151) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_100 <= 0.895956873893738) THEN 47 ELSE 48 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_92 <= -0.102829314768314) THEN 50 ELSE 51 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_89 <= -0.290797412395477) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_96 <= -0.620487332344055) THEN 54 ELSE 55 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_29 <= 0.968853414058685) THEN 57 ELSE 58 END END END END END AS node_id_2 
FROM tmp_20180416233448_lwwtk6_ads_ AS "ADS_sca_2_OUT"), 
"DT_node_data" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values"."threshold" AS FLOAT) AS "threshold", CAST("Values"."count" AS FLOAT) AS "count", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Proba_0" AS FLOAT) AS "Proba_0", CAST("Values"."LogProba_0" AS FLOAT) AS "LogProba_0", CAST("Values"."Proba_1" AS FLOAT) AS "Proba_1", CAST("Values"."LogProba_1" AS FLOAT) AS "LogProba_1", CAST("Values"."Proba_2" AS FLOAT) AS "Proba_2", CAST("Values"."LogProba_2" AS FLOAT) AS "LogProba_2", CAST("Values"."Proba_3" AS FLOAT) AS "Proba_3", CAST("Values"."LogProba_3" AS FLOAT) AS "LogProba_3", CAST("Values"."Decision" AS FLOAT) AS "Decision", CAST("Values"."DecisionProba" AS FLOAT) AS "DecisionProba" 
FROM (SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 6 AS "count", 4 AS depth, 3 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 1.0 AS "Proba_3", 0.0 AS "LogProba_3", 3 AS "Decision", 1.0 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 5 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 1 AS "Decision", 1.0 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 5 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 2 AS "Decision", 1.0 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 20 AS "count", 5 AS depth, 9 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 1 AS "Decision", 1.0 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 9 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 2 AS "Decision", 1.0 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS "count", 4 AS depth, 8 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 1.0 AS "Proba_3", 0.0 AS "LogProba_3", 3 AS "Decision", 1.0 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 5 AS "count", 5 AS depth, 15 AS parent_id, 0.2 AS "Proba_0", -1.6094379124341 AS "LogProba_0", 0.4 AS "Proba_1", -0.916290731874155 AS "LogProba_1", 0.4 AS "Proba_2", -0.916290731874155 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 1 AS "Decision", 0.4 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 11 AS "count", 5 AS depth, 15 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 1.0 AS "Proba_3", 0.0 AS "LogProba_3", 3 AS "Decision", 1.0 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 57 AS "count", 5 AS depth, 18 AS parent_id, 0.350877192982456 AS "Proba_0", -1.047318994280559 AS "LogProba_0", 0.192982456140351 AS "Proba_1", -1.64515599503618 AS "LogProba_1", 0.298245614035088 AS "Proba_2", -1.209837923778334 AS "LogProba_2", 0.157894736842105 AS "Proba_3", -1.845826690498331 AS "LogProba_3", 0 AS "Decision", 0.350877192982456 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 40 AS "count", 5 AS depth, 18 AS parent_id, 0.8 AS "Proba_0", -0.22314355131421 AS "LogProba_0", 0.125 AS "Proba_1", -2.079441541679836 AS "LogProba_1", 0.075 AS "Proba_2", -2.590267165445826 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0 AS "Decision", 0.8 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 14 AS "count", 5 AS depth, 22 AS parent_id, 0.142857142857143 AS "Proba_0", -1.945910149055314 AS "LogProba_0", 0.071428571428571 AS "Proba_1", -2.639057329615259 AS "LogProba_1", 0.714285714285714 AS "Proba_2", -0.336472236621213 AS "LogProba_2", 0.071428571428571 AS "Proba_3", -2.639057329615259 AS "LogProba_3", 2 AS "Decision", 0.714285714285714 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 60 AS "count", 5 AS depth, 22 AS parent_id, 0.366666666666667 AS "Proba_0", -1.003302108863785 AS "LogProba_0", 0.416666666666667 AS "Proba_1", -0.8754687373539 AS "LogProba_1", 0.1 AS "Proba_2", -2.302585092994046 AS "LogProba_2", 0.116666666666667 AS "Proba_3", -2.148434413166788 AS "LogProba_3", 1 AS "Decision", 0.416666666666667 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 23 AS "count", 5 AS depth, 25 AS parent_id, 0.043478260869565 AS "Proba_0", -3.13549421592915 AS "LogProba_0", 0.91304347826087 AS "Proba_1", -0.090971778205727 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.043478260869565 AS "Proba_3", -3.13549421592915 AS "LogProba_3", 1 AS "Decision", 0.91304347826087 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 5 AS "count", 5 AS depth, 25 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.2 AS "Proba_1", -1.6094379124341 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.8 AS "Proba_3", -0.22314355131421 AS "LogProba_3", 3 AS "Decision", 0.8 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 32 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 16 AS "count", 5 AS depth, 31 AS parent_id, 0.0625 AS "Proba_0", -2.772588722239781 AS "LogProba_0", 0.1875 AS "Proba_1", -1.673976433571672 AS "LogProba_1", 0.125 AS "Proba_2", -2.079441541679836 AS "LogProba_2", 0.625 AS "Proba_3", -0.470003629245736 AS "LogProba_3", 3 AS "Decision", 0.625 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 33 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 5 AS "count", 5 AS depth, 31 AS parent_id, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0 AS "Decision", 1.0 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 35 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 24 AS "count", 5 AS depth, 34 AS parent_id, 0.125 AS "Proba_0", -2.079441541679836 AS "LogProba_0", 0.375 AS "Proba_1", -0.980829253011726 AS "LogProba_1", 0.375 AS "Proba_2", -0.980829253011726 AS "LogProba_2", 0.125 AS "Proba_3", -2.079441541679836 AS "LogProba_3", 1 AS "Decision", 0.375 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 36 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 17 AS "count", 5 AS depth, 34 AS parent_id, 0.058823529411765 AS "Proba_0", -2.833213344056216 AS "LogProba_0", 0.88235294117647 AS "Proba_1", -0.125163142954006 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.058823529411765 AS "Proba_3", -2.833213344056216 AS "LogProba_3", 1 AS "Decision", 0.88235294117647 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 39 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 10 AS "count", 5 AS depth, 38 AS parent_id, 0.1 AS "Proba_0", -2.302585092994046 AS "LogProba_0", 0.1 AS "Proba_1", -2.302585092994046 AS "LogProba_1", 0.4 AS "Proba_2", -0.916290731874155 AS "LogProba_2", 0.4 AS "Proba_3", -0.916290731874155 AS "LogProba_3", 2 AS "Decision", 0.4 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 40 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 44 AS "count", 5 AS depth, 38 AS parent_id, 0.704545454545455 AS "Proba_0", -0.350202429433115 AS "LogProba_0", 0.022727272727273 AS "Proba_1", -3.784189633918261 AS "LogProba_1", 0.181818181818182 AS "Proba_2", -1.704748092238425 AS "LogProba_2", 0.090909090909091 AS "Proba_3", -2.39789527279837 AS "LogProba_3", 0 AS "Decision", 0.704545454545455 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 42 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 5 AS "count", 5 AS depth, 41 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 2 AS "Decision", 1.0 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 43 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 4 AS "count", 5 AS depth, 41 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.75 AS "Proba_1", -0.287682072451781 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.25 AS "Proba_3", -1.38629436111989 AS "LogProba_3", 1 AS "Decision", 0.75 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 47 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 59 AS "count", 5 AS depth, 46 AS parent_id, 0.11864406779661 AS "Proba_0", -2.131627294850406 AS "LogProba_0", 0.050847457627119 AS "Proba_1", -2.97892515523761 AS "LogProba_1", 0.101694915254237 AS "Proba_2", -2.285777974677664 AS "LogProba_2", 0.728813559322034 AS "Proba_3", -0.316337328212157 AS "LogProba_3", 3 AS "Decision", 0.728813559322034 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 48 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 5 AS "count", 5 AS depth, 46 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.2 AS "Proba_1", -1.6094379124341 AS "LogProba_1", 0.8 AS "Proba_2", -0.22314355131421 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 2 AS "Decision", 0.8 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 50 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 5 AS "count", 5 AS depth, 49 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 2 AS "Decision", 1.0 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 51 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 4 AS "count", 5 AS depth, 49 AS parent_id, 0.75 AS "Proba_0", -0.287682072451781 AS "LogProba_0", 0.25 AS "Proba_1", -1.38629436111989 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0 AS "Decision", 0.75 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 54 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 13 AS "count", 5 AS depth, 53 AS parent_id, 0.076923076923077 AS "Proba_0", -2.564949357461536 AS "LogProba_0", 0.153846153846154 AS "Proba_1", -1.871802176901591 AS "LogProba_1", 0.230769230769231 AS "Proba_2", -1.466337068793427 AS "LogProba_2", 0.538461538461538 AS "Proba_3", -0.619039208406224 AS "LogProba_3", 3 AS "Decision", 0.538461538461538 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 55 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 53 AS "count", 5 AS depth, 53 AS parent_id, 0.037735849056604 AS "Proba_0", -3.277144732992176 AS "LogProba_0", 0.113207547169811 AS "Proba_1", -2.178532444324067 AS "LogProba_1", 0.773584905660377 AS "Proba_2", -0.256719846847814 AS "LogProba_2", 0.075471698113208 AS "Proba_3", -2.583997552432231 AS "LogProba_3", 2 AS "Decision", 0.773584905660377 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 57 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 71 AS "count", 5 AS depth, 56 AS parent_id, 0.183098591549296 AS "Proba_0", -1.697730519579779 AS "LogProba_0", 0.211267605633803 AS "Proba_1", -1.554629675939106 AS "LogProba_1", 0.323943661971831 AS "Proba_2", -1.127185661112166 AS "LogProba_2", 0.28169014084507 AS "Proba_3", -1.266947603487324 AS "LogProba_3", 2 AS "Decision", 0.323943661971831 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 58 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 18 AS "count", 5 AS depth, 56 AS parent_id, 0.055555555555556 AS "Proba_0", -2.890371757896165 AS "LogProba_0", 0.111111111111111 AS "Proba_1", -2.19722457733622 AS "LogProba_1", 0.055555555555556 AS "Proba_2", -2.890371757896165 AS "LogProba_2", 0.777777777777778 AS "Proba_3", -0.251314428280906 AS "LogProba_3", 3 AS "Decision", 0.777777777777778 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte) AS "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".node_id AS node_id, "DT_node_data".feature AS feature, "DT_node_data"."threshold" AS "threshold", "DT_node_data"."count" AS "count", "DT_node_data".depth AS depth, "DT_node_data".parent_id AS parent_id, "DT_node_data"."Proba_0" AS "Proba_0", "DT_node_data"."LogProba_0" AS "LogProba_0", "DT_node_data"."Proba_1" AS "Proba_1", "DT_node_data"."LogProba_1" AS "LogProba_1", "DT_node_data"."Proba_2" AS "Proba_2", "DT_node_data"."LogProba_2" AS "LogProba_2", "DT_node_data"."Proba_3" AS "Proba_3", "DT_node_data"."LogProba_3" AS "LogProba_3", "DT_node_data"."Decision" AS "Decision", "DT_node_data"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".node_id), 
"Calibrated_Model_0" AS 
(SELECT "DT_Output"."KEY" AS "KEY", CAST(NULL AS FLOAT) AS "Score_0", CAST(NULL AS FLOAT) AS "Score_1", CAST(NULL AS FLOAT) AS "Score_2", CAST(NULL AS FLOAT) AS "Score_3", "DT_Output"."Proba_0" AS "Proba_0", "DT_Output"."Proba_1" AS "Proba_1", "DT_Output"."Proba_2" AS "Proba_2", "DT_Output"."Proba_3" AS "Proba_3", "DT_Output"."LogProba_0" AS "LogProba_0", "DT_Output"."LogProba_1" AS "LogProba_1", "DT_Output"."LogProba_2" AS "LogProba_2", "DT_Output"."LogProba_3" AS "LogProba_3", CAST(NULL AS BIGINT) AS "Decision", CAST(NULL AS FLOAT) AS "DecisionProba", coalesce(CAST(NULL AS FLOAT), "DT_Output"."Proba_0") AS "ScoreOrProba_0", coalesce(CAST(NULL AS FLOAT), "DT_Output"."Proba_1") AS "ScoreOrProba_1", coalesce(CAST(NULL AS FLOAT), "DT_Output"."Proba_2") AS "ScoreOrProba_2", coalesce(CAST(NULL AS FLOAT), "DT_Output"."Proba_3") AS "ScoreOrProba_3" 
FROM "DT_Output"), 
sigmoid_calibration_0 AS 
(SELECT "Calibrated_Model_0"."KEY" AS "KEY", 1.0 / (1.0 + exp(least(greatest(-100.0, -(1.672293155957573 * "Calibrated_Model_0"."ScoreOrProba_0" + -1.566477492346626)), 100.0))) AS "Proba_0", 1.0 / (1.0 + exp(least(greatest(-100.0, -(1.663605787371982 * "Calibrated_Model_0"."ScoreOrProba_1" + -1.611038186761964)), 100.0))) AS "Proba_1", 1.0 / (1.0 + exp(least(greatest(-100.0, -(1.947872954399886 * "Calibrated_Model_0"."ScoreOrProba_2" + -1.591746273543836)), 100.0))) AS "Proba_2", 1.0 / (1.0 + exp(least(greatest(-100.0, -(1.362722204882272 * "Calibrated_Model_0"."ScoreOrProba_3" + -1.451591005201451)), 100.0))) AS "Proba_3" 
FROM "Calibrated_Model_0"), 
"Normalized_Probas" AS 
(SELECT sigmoid_calibration_0."KEY" AS "KEY", sigmoid_calibration_0."Proba_0" / (sigmoid_calibration_0."Proba_0" + sigmoid_calibration_0."Proba_1" + sigmoid_calibration_0."Proba_2" + sigmoid_calibration_0."Proba_3") AS "Proba_0", sigmoid_calibration_0."Proba_1" / (sigmoid_calibration_0."Proba_0" + sigmoid_calibration_0."Proba_1" + sigmoid_calibration_0."Proba_2" + sigmoid_calibration_0."Proba_3") AS "Proba_1", sigmoid_calibration_0."Proba_2" / (sigmoid_calibration_0."Proba_0" + sigmoid_calibration_0."Proba_1" + sigmoid_calibration_0."Proba_2" + sigmoid_calibration_0."Proba_3") AS "Proba_2", sigmoid_calibration_0."Proba_3" / (sigmoid_calibration_0."Proba_0" + sigmoid_calibration_0."Proba_1" + sigmoid_calibration_0."Proba_2" + sigmoid_calibration_0."Proba_3") AS "Proba_3" 
FROM sigmoid_calibration_0), 
"DT_node_lookup_1" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_66 <= -0.28420877456665) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 0.064017653465271) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_15 <= 0.003069238271564) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_19 <= -0.26258772611618) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_45 <= 1.440022468566894) THEN 5 ELSE 6 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_86 <= -1.470887899398804) THEN 8 ELSE 9 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_59 <= 1.406574487686157) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_26 <= -0.302544713020325) THEN 12 ELSE 13 END ELSE 14 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_44 <= 0.512381076812744) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_52 <= -0.579765319824219) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_68 <= -0.074084863066673) THEN 18 ELSE 19 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_89 <= 1.240484356880188) THEN 21 ELSE 22 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_54 <= 0.014273516833782) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_58 <= -1.038486003875732) THEN 25 ELSE 26 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_21 <= 0.441577315330505) THEN 28 ELSE 29 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_70 <= -0.656022071838379) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_42 <= 0.117353022098541) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_66 <= 1.416921854019165) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_33 <= -0.696107149124146) THEN 34 ELSE 35 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_100 <= -0.610365986824036) THEN 37 ELSE 38 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_52 <= 1.102740526199341) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= 1.603946924209595) THEN 41 ELSE 42 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_50 <= -0.661723971366882) THEN 44 ELSE 45 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_89 <= -0.334126532077789) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_94 <= -0.013076768256724) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_79 <= 0.296678125858307) THEN 49 ELSE 50 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_33 <= 1.420359134674072) THEN 52 ELSE 53 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_62 <= -0.45945605635643) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_31 <= 1.435989379882812) THEN 56 ELSE 57 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_97 <= -0.414309799671173) THEN 59 ELSE 60 END END END END END AS node_id_2 
FROM tmp_20180416233448_lwwtk6_ads_ AS "ADS_sca_2_OUT"), 
"DT_node_data_1" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values"."threshold" AS FLOAT) AS "threshold", CAST("Values"."count" AS FLOAT) AS "count", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Proba_0" AS FLOAT) AS "Proba_0", CAST("Values"."LogProba_0" AS FLOAT) AS "LogProba_0", CAST("Values"."Proba_1" AS FLOAT) AS "Proba_1", CAST("Values"."LogProba_1" AS FLOAT) AS "LogProba_1", CAST("Values"."Proba_2" AS FLOAT) AS "Proba_2", CAST("Values"."LogProba_2" AS FLOAT) AS "LogProba_2", CAST("Values"."Proba_3" AS FLOAT) AS "Proba_3", CAST("Values"."LogProba_3" AS FLOAT) AS "LogProba_3", CAST("Values"."Decision" AS FLOAT) AS "Decision", CAST("Values"."DecisionProba" AS FLOAT) AS "DecisionProba" 
FROM (SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 29 AS "count", 5 AS depth, 4 AS parent_id, 0.96551724137931 AS "Proba_0", -0.03509131981127 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.03448275862069 AS "Proba_2", -3.367295829986474 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0 AS "Decision", 0.96551724137931 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS "count", 5 AS depth, 4 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.5 AS "Proba_1", -0.693147180559945 AS "LogProba_1", 0.5 AS "Proba_2", -0.693147180559945 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 1 AS "Decision", 0.5 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 4 AS "count", 5 AS depth, 7 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 1.0 AS "Proba_3", 0.0 AS "LogProba_3", 3 AS "Decision", 1.0 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 34 AS "count", 5 AS depth, 7 AS parent_id, 0.411764705882353 AS "Proba_0", -0.887303195000903 AS "LogProba_0", 0.205882352941176 AS "Proba_1", -1.580450375560848 AS "LogProba_1", 0.264705882352941 AS "Proba_2", -1.329135947279942 AS "LogProba_2", 0.117647058823529 AS "Proba_3", -2.140066163496271 AS "LogProba_3", 0 AS "Decision", 0.411764705882353 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 21 AS "count", 5 AS depth, 11 AS parent_id, 0.571428571428571 AS "Proba_0", -0.559615787935423 AS "LogProba_0", 0.142857142857143 AS "Proba_1", -1.945910149055314 AS "LogProba_1", 0.095238095238095 AS "Proba_2", -2.351375257163478 AS "LogProba_2", 0.19047619047619 AS "Proba_3", -1.658228076603532 AS "LogProba_3", 0 AS "Decision", 0.571428571428571 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 37 AS "count", 5 AS depth, 11 AS parent_id, 0.162162162162162 AS "Proba_0", -1.81915844341617 AS "LogProba_0", 0.513513513513514 AS "Proba_1", -0.666478933477784 AS "LogProba_1", 0.189189189189189 AS "Proba_2", -1.665007763588911 AS "LogProba_2", 0.135135135135135 AS "Proba_3", -2.001480000210124 AS "LogProba_3", 1 AS "Decision", 0.513513513513514 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 5 AS "count", 4 AS depth, 10 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 1.0 AS "Proba_3", 0.0 AS "LogProba_3", 3 AS "Decision", 1.0 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 11 AS "count", 5 AS depth, 17 AS parent_id, 0.090909090909091 AS "Proba_0", -2.39789527279837 AS "LogProba_0", 0.090909090909091 AS "Proba_1", -2.39789527279837 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.818181818181818 AS "Proba_3", -0.200670695462151 AS "LogProba_3", 3 AS "Decision", 0.818181818181818 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 11 AS "count", 5 AS depth, 17 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.454545454545454 AS "Proba_1", -0.78845736036427 AS "LogProba_1", 0.454545454545454 AS "Proba_2", -0.78845736036427 AS "LogProba_2", 0.090909090909091 AS "Proba_3", -2.39789527279837 AS "LogProba_3", 1 AS "Decision", 0.454545454545454 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 49 AS "count", 5 AS depth, 20 AS parent_id, 0.102040816326531 AS "Proba_0", -2.282382385676526 AS "LogProba_0", 0.816326530612245 AS "Proba_1", -0.20294084399669 AS "LogProba_1", 0.061224489795918 AS "Proba_2", -2.793208009442517 AS "LogProba_2", 0.020408163265306 AS "Proba_3", -3.891820298110627 AS "LogProba_3", 1 AS "Decision", 0.816326530612245 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 4 AS "count", 5 AS depth, 20 AS parent_id, 0.5 AS "Proba_0", -0.693147180559945 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.5 AS "Proba_2", -0.693147180559945 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0 AS "Decision", 0.5 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 4 AS "count", 5 AS depth, 24 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 1.0 AS "Proba_3", 0.0 AS "LogProba_3", 3 AS "Decision", 1.0 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 16 AS "count", 5 AS depth, 24 AS parent_id, 0.1875 AS "Proba_0", -1.673976433571672 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.75 AS "Proba_2", -0.287682072451781 AS "LogProba_2", 0.0625 AS "Proba_3", -2.772588722239781 AS "LogProba_3", 2 AS "Decision", 0.75 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 28 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 5 AS "count", 5 AS depth, 27 AS parent_id, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0 AS "Decision", 1.0 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 29 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 3 AS "count", 5 AS depth, 27 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 1 AS "Decision", 1.0 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 34 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 10 AS "count", 5 AS depth, 33 AS parent_id, 0.2 AS "Proba_0", -1.6094379124341 AS "LogProba_0", 0.2 AS "Proba_1", -1.6094379124341 AS "LogProba_1", 0.5 AS "Proba_2", -0.693147180559945 AS "LogProba_2", 0.1 AS "Proba_3", -2.302585092994046 AS "LogProba_3", 2 AS "Decision", 0.5 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 35 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 35 AS "count", 5 AS depth, 33 AS parent_id, 0.142857142857143 AS "Proba_0", -1.945910149055314 AS "LogProba_0", 0.685714285714286 AS "Proba_1", -0.377294231141468 AS "LogProba_1", 0.057142857142857 AS "Proba_2", -2.862200880929468 AS "LogProba_2", 0.114285714285714 AS "Proba_3", -2.169053700369523 AS "LogProba_3", 1 AS "Decision", 0.685714285714286 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 37 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 3 AS "count", 5 AS depth, 36 AS parent_id, 0.333333333333333 AS "Proba_0", -1.09861228866811 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.666666666666667 AS "Proba_2", -0.405465108108164 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 2 AS "Decision", 0.666666666666667 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 38 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 5 AS "count", 5 AS depth, 36 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 1.0 AS "Proba_3", 0.0 AS "LogProba_3", 3 AS "Decision", 1.0 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 41 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 40 AS "count", 5 AS depth, 40 AS parent_id, 0.7 AS "Proba_0", -0.356674943938732 AS "LogProba_0", 0.125 AS "Proba_1", -2.079441541679836 AS "LogProba_1", 0.075 AS "Proba_2", -2.590267165445826 AS "LogProba_2", 0.1 AS "Proba_3", -2.302585092994046 AS "LogProba_3", 0 AS "Decision", 0.7 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 42 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 3 AS "count", 5 AS depth, 40 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 2 AS "Decision", 1.0 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 44 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 43 AS parent_id, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0 AS "Decision", 1.0 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 45 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 7 AS "count", 5 AS depth, 43 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 2 AS "Decision", 1.0 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 49 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 24 AS "count", 5 AS depth, 48 AS parent_id, 0.083333333333333 AS "Proba_0", -2.484906649788 AS "LogProba_0", 0.25 AS "Proba_1", -1.38629436111989 AS "LogProba_1", 0.041666666666667 AS "Proba_2", -3.178053830347946 AS "LogProba_2", 0.625 AS "Proba_3", -0.470003629245736 AS "LogProba_3", 3 AS "Decision", 0.625 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 50 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 15 AS "count", 5 AS depth, 48 AS parent_id, 0.066666666666667 AS "Proba_0", -2.70805020110221 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.6 AS "Proba_2", -0.510825623765991 AS "LogProba_2", 0.333333333333333 AS "Proba_3", -1.09861228866811 AS "LogProba_3", 2 AS "Decision", 0.6 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 52 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 45 AS "count", 5 AS depth, 51 AS parent_id, 0.044444444444444 AS "Proba_0", -3.113515309210374 AS "LogProba_0", 0.022222222222222 AS "Proba_1", -3.80666248977032 AS "LogProba_1", 0.844444444444444 AS "Proba_2", -0.169076330043934 AS "LogProba_2", 0.088888888888889 AS "Proba_3", -2.42036812865043 AS "LogProba_3", 2 AS "Decision", 0.844444444444444 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 53 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 5 AS "count", 5 AS depth, 51 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.6 AS "Proba_1", -0.510825623765991 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.4 AS "Proba_3", -0.916290731874155 AS "LogProba_3", 1 AS "Decision", 0.6 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 56 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 51 AS "count", 5 AS depth, 55 AS parent_id, 0.07843137254902 AS "Proba_0", -2.545531271604436 AS "LogProba_0", 0.117647058823529 AS "Proba_1", -2.140066163496271 AS "LogProba_1", 0.07843137254902 AS "Proba_2", -2.545531271604436 AS "LogProba_2", 0.725490196078431 AS "Proba_3", -0.320907720080101 AS "LogProba_3", 3 AS "Decision", 0.725490196078431 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 57 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 4 AS "count", 5 AS depth, 55 AS parent_id, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0 AS "Decision", 1.0 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 59 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 38 AS "count", 5 AS depth, 58 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.078947368421053 AS "Proba_1", -2.538973871058276 AS "LogProba_1", 0.394736842105263 AS "Proba_2", -0.929535958624176 AS "LogProba_2", 0.526315789473684 AS "Proba_3", -0.641853886172395 AS "LogProba_3", 3 AS "Decision", 0.526315789473684 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 60 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 78 AS "count", 5 AS depth, 58 AS parent_id, 0.269230769230769 AS "Proba_0", -1.312186388966169 AS "LogProba_0", 0.256410256410256 AS "Proba_1", -1.360976553135601 AS "LogProba_1", 0.256410256410256 AS "Proba_2", -1.360976553135601 AS "LogProba_2", 0.217948717948718 AS "Proba_3", -1.523495482633376 AS "LogProba_3", 0 AS "Decision", 0.269230769230769 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte) AS "Values"), 
"DT_Output_1" AS 
(SELECT "DT_node_lookup_1"."KEY" AS "KEY", "DT_node_lookup_1".node_id_2 AS node_id_2, "DT_node_data_1".node_id AS node_id, "DT_node_data_1".feature AS feature, "DT_node_data_1"."threshold" AS "threshold", "DT_node_data_1"."count" AS "count", "DT_node_data_1".depth AS depth, "DT_node_data_1".parent_id AS parent_id, "DT_node_data_1"."Proba_0" AS "Proba_0", "DT_node_data_1"."LogProba_0" AS "LogProba_0", "DT_node_data_1"."Proba_1" AS "Proba_1", "DT_node_data_1"."LogProba_1" AS "LogProba_1", "DT_node_data_1"."Proba_2" AS "Proba_2", "DT_node_data_1"."LogProba_2" AS "LogProba_2", "DT_node_data_1"."Proba_3" AS "Proba_3", "DT_node_data_1"."LogProba_3" AS "LogProba_3", "DT_node_data_1"."Decision" AS "Decision", "DT_node_data_1"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup_1" LEFT OUTER JOIN "DT_node_data_1" ON "DT_node_lookup_1".node_id_2 = "DT_node_data_1".node_id), 
"Calibrated_Model_1" AS 
(SELECT "DT_Output_1"."KEY" AS "KEY", CAST(NULL AS FLOAT) AS "Score_0", CAST(NULL AS FLOAT) AS "Score_1", CAST(NULL AS FLOAT) AS "Score_2", CAST(NULL AS FLOAT) AS "Score_3", "DT_Output_1"."Proba_0" AS "Proba_0", "DT_Output_1"."Proba_1" AS "Proba_1", "DT_Output_1"."Proba_2" AS "Proba_2", "DT_Output_1"."Proba_3" AS "Proba_3", "DT_Output_1"."LogProba_0" AS "LogProba_0", "DT_Output_1"."LogProba_1" AS "LogProba_1", "DT_Output_1"."LogProba_2" AS "LogProba_2", "DT_Output_1"."LogProba_3" AS "LogProba_3", CAST(NULL AS BIGINT) AS "Decision", CAST(NULL AS FLOAT) AS "DecisionProba", coalesce(CAST(NULL AS FLOAT), "DT_Output_1"."Proba_0") AS "ScoreOrProba_0", coalesce(CAST(NULL AS FLOAT), "DT_Output_1"."Proba_1") AS "ScoreOrProba_1", coalesce(CAST(NULL AS FLOAT), "DT_Output_1"."Proba_2") AS "ScoreOrProba_2", coalesce(CAST(NULL AS FLOAT), "DT_Output_1"."Proba_3") AS "ScoreOrProba_3" 
FROM "DT_Output_1"), 
sigmoid_calibration_1 AS 
(SELECT "Calibrated_Model_1"."KEY" AS "KEY", 1.0 / (1.0 + exp(least(greatest(-100.0, -(1.62866129525134 * "Calibrated_Model_1"."ScoreOrProba_0" + -1.503784468158702)), 100.0))) AS "Proba_0", 1.0 / (1.0 + exp(least(greatest(-100.0, -(1.896253266562996 * "Calibrated_Model_1"."ScoreOrProba_1" + -1.633791627545751)), 100.0))) AS "Proba_1", 1.0 / (1.0 + exp(least(greatest(-100.0, -(2.099020473569121 * "Calibrated_Model_1"."ScoreOrProba_2" + -1.720025501310114)), 100.0))) AS "Proba_2", 1.0 / (1.0 + exp(least(greatest(-100.0, -(1.872889970119703 * "Calibrated_Model_1"."ScoreOrProba_3" + -1.655067290047459)), 100.0))) AS "Proba_3" 
FROM "Calibrated_Model_1"), 
"Normalized_Probas_1" AS 
(SELECT sigmoid_calibration_1."KEY" AS "KEY", sigmoid_calibration_1."Proba_0" / (sigmoid_calibration_1."Proba_0" + sigmoid_calibration_1."Proba_1" + sigmoid_calibration_1."Proba_2" + sigmoid_calibration_1."Proba_3") AS "Proba_0", sigmoid_calibration_1."Proba_1" / (sigmoid_calibration_1."Proba_0" + sigmoid_calibration_1."Proba_1" + sigmoid_calibration_1."Proba_2" + sigmoid_calibration_1."Proba_3") AS "Proba_1", sigmoid_calibration_1."Proba_2" / (sigmoid_calibration_1."Proba_0" + sigmoid_calibration_1."Proba_1" + sigmoid_calibration_1."Proba_2" + sigmoid_calibration_1."Proba_3") AS "Proba_2", sigmoid_calibration_1."Proba_3" / (sigmoid_calibration_1."Proba_0" + sigmoid_calibration_1."Proba_1" + sigmoid_calibration_1."Proba_2" + sigmoid_calibration_1."Proba_3") AS "Proba_3" 
FROM sigmoid_calibration_1), 
"DT_node_lookup_2" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_66 <= -0.021451242268085) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_86 <= -1.394579648971558) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_40 <= 0.432549744844437) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_78 <= -1.906510829925537) THEN 4 ELSE 5 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_19 <= -0.539840936660767) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_61 <= 0.067853569984436) THEN 8 ELSE 9 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_56 <= -1.134889364242554) THEN 11 ELSE 12 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= 0.391061842441559) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_19 <= -0.26258772611618) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_36 <= -0.397332549095154) THEN 16 ELSE 17 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_33 <= -0.514170408248901) THEN 19 ELSE 20 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_17 <= -0.73651397228241) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_49 <= 1.02558434009552) THEN 23 ELSE 24 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_94 <= -0.599151253700256) THEN 26 ELSE 27 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= 0.499481171369553) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_27 <= -0.12124414741993) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_36 <= 1.01339316368103) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_86 <= 0.602774024009705) THEN 32 ELSE 33 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_34 <= 0.988613605499268) THEN 35 ELSE 36 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_18 <= -0.585104465484619) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_54 <= -0.593255639076233) THEN 39 ELSE 40 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_61 <= 0.294576227664948) THEN 42 ELSE 43 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_39 <= -0.19500258564949) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_72 <= 0.136760994791985) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_89 <= -0.855196297168732) THEN 47 ELSE 48 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_45 <= 1.001998782157898) THEN 50 ELSE 51 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_18 <= -0.146659761667252) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_92 <= -0.760895073413849) THEN 54 ELSE 55 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_90 <= 2.173744678497314) THEN 57 ELSE 58 END END END END END AS node_id_2 
FROM tmp_20180416233448_lwwtk6_ads_ AS "ADS_sca_2_OUT"), 
"DT_node_data_2" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values"."threshold" AS FLOAT) AS "threshold", CAST("Values"."count" AS FLOAT) AS "count", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Proba_0" AS FLOAT) AS "Proba_0", CAST("Values"."LogProba_0" AS FLOAT) AS "LogProba_0", CAST("Values"."Proba_1" AS FLOAT) AS "Proba_1", CAST("Values"."LogProba_1" AS FLOAT) AS "LogProba_1", CAST("Values"."Proba_2" AS FLOAT) AS "Proba_2", CAST("Values"."LogProba_2" AS FLOAT) AS "LogProba_2", CAST("Values"."Proba_3" AS FLOAT) AS "Proba_3", CAST("Values"."LogProba_3" AS FLOAT) AS "LogProba_3", CAST("Values"."Decision" AS FLOAT) AS "Decision", CAST("Values"."DecisionProba" AS FLOAT) AS "DecisionProba" 
FROM (SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 4 AS depth, 3 AS parent_id, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0 AS "Decision", 1.0 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 15 AS "count", 4 AS depth, 3 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 1.0 AS "Proba_3", 0.0 AS "LogProba_3", 3 AS "Decision", 1.0 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS "count", 5 AS depth, 7 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 1 AS "Decision", 1.0 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS "count", 5 AS depth, 7 AS parent_id, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0 AS "Decision", 1.0 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS "count", 5 AS depth, 10 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 1.0 AS "Proba_3", 0.0 AS "LogProba_3", 3 AS "Decision", 1.0 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 5 AS "count", 5 AS depth, 10 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 2 AS "Decision", 1.0 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 26 AS "count", 5 AS depth, 15 AS parent_id, 0.269230769230769 AS "Proba_0", -1.312186388966169 AS "LogProba_0", 0.461538461538462 AS "Proba_1", -0.773189888233482 AS "LogProba_1", 0.153846153846154 AS "Proba_2", -1.871802176901591 AS "LogProba_2", 0.115384615384615 AS "Proba_3", -2.159484249353372 AS "LogProba_3", 1 AS "Decision", 0.461538461538462 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 55 AS "count", 5 AS depth, 15 AS parent_id, 0.818181818181818 AS "Proba_0", -0.200670695462151 AS "LogProba_0", 0.127272727272727 AS "Proba_1", -2.061423036177158 AS "LogProba_1", 0.018181818181818 AS "Proba_2", -4.007333185232471 AS "LogProba_2", 0.036363636363636 AS "Proba_3", -3.314186004672526 AS "LogProba_3", 0 AS "Decision", 0.818181818181818 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 27 AS "count", 5 AS depth, 18 AS parent_id, 0.592592592592592 AS "Proba_0", -0.523248143764548 AS "LogProba_0", 0.111111111111111 AS "Proba_1", -2.19722457733622 AS "LogProba_1", 0.185185185185185 AS "Proba_2", -1.686398953570229 AS "LogProba_2", 0.111111111111111 AS "Proba_3", -2.19722457733622 AS "LogProba_3", 0 AS "Decision", 0.592592592592592 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 73 AS "count", 5 AS depth, 18 AS parent_id, 0.178082191780822 AS "Proba_0", -1.725510083686854 AS "LogProba_0", 0.424657534246575 AS "Proba_1", -0.856472236663245 AS "LogProba_1", 0.26027397260274 AS "Proba_2", -1.346020461981951 AS "LogProba_2", 0.136986301369863 AS "Proba_3", -1.987874348154346 AS "LogProba_3", 1 AS "Decision", 0.424657534246575 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 21 AS "count", 5 AS depth, 22 AS parent_id, 0.142857142857143 AS "Proba_0", -1.945910149055314 AS "LogProba_0", 0.047619047619048 AS "Proba_1", -3.044522437723423 AS "LogProba_1", 0.666666666666667 AS "Proba_2", -0.405465108108164 AS "LogProba_2", 0.142857142857143 AS "Proba_3", -1.945910149055314 AS "LogProba_3", 2 AS "Decision", 0.666666666666667 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 4 AS "count", 5 AS depth, 22 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 1 AS "Decision", 1.0 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 25 AS "count", 5 AS depth, 25 AS parent_id, 0.04 AS "Proba_0", -3.2188758248682 AS "LogProba_0", 0.8 AS "Proba_1", -0.22314355131421 AS "LogProba_1", 0.08 AS "Proba_2", -2.525728644308256 AS "LogProba_2", 0.08 AS "Proba_3", -2.525728644308256 AS "LogProba_3", 1 AS "Decision", 0.8 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 63 AS "count", 5 AS depth, 25 AS parent_id, 0.206349206349206 AS "Proba_0", -1.578185368929996 AS "LogProba_0", 0.349206349206349 AS "Proba_1", -1.052092273033217 AS "LogProba_1", 0.079365079365079 AS "Proba_2", -2.533696813957432 AS "LogProba_2", 0.365079365079365 AS "Proba_3", -1.007640510462383 AS "LogProba_3", 3 AS "Decision", 0.365079365079365 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 32 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 69 AS "count", 5 AS depth, 31 AS parent_id, 0.057971014492754 AS "Proba_0", -2.847812143477369 AS "LogProba_0", 0.130434782608696 AS "Proba_1", -2.03688192726104 AS "LogProba_1", 0.072463768115942 AS "Proba_2", -2.624668592163159 AS "LogProba_2", 0.739130434782609 AS "Proba_3", -0.302280871872934 AS "LogProba_3", 3 AS "Decision", 0.739130434782609 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 33 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 18 AS "count", 5 AS depth, 31 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.333333333333333 AS "Proba_1", -1.09861228866811 AS "LogProba_1", 0.444444444444444 AS "Proba_2", -0.810930216216329 AS "LogProba_2", 0.222222222222222 AS "Proba_3", -1.504077396776274 AS "LogProba_3", 2 AS "Decision", 0.444444444444444 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 35 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 5 AS "count", 5 AS depth, 34 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 1 AS "Decision", 1.0 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 36 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 5 AS "count", 5 AS depth, 34 AS parent_id, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0 AS "Decision", 1.0 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 39 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 9 AS "count", 5 AS depth, 38 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.111111111111111 AS "Proba_2", -2.19722457733622 AS "LogProba_2", 0.888888888888889 AS "Proba_3", -0.117783035656384 AS "LogProba_3", 3 AS "Decision", 0.888888888888889 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 40 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 14 AS "count", 5 AS depth, 38 AS parent_id, 0.357142857142857 AS "Proba_0", -1.029619417181158 AS "LogProba_0", 0.357142857142857 AS "Proba_1", -1.029619417181158 AS "LogProba_1", 0.071428571428571 AS "Proba_2", -2.639057329615259 AS "LogProba_2", 0.214285714285714 AS "Proba_3", -1.540445040947149 AS "LogProba_3", 0 AS "Decision", 0.357142857142857 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 42 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 49 AS "count", 5 AS depth, 41 AS parent_id, 0.163265306122449 AS "Proba_0", -1.812378756430791 AS "LogProba_0", 0.061224489795918 AS "Proba_1", -2.793208009442517 AS "LogProba_1", 0.653061224489796 AS "Proba_2", -0.4260843953109 AS "LogProba_2", 0.122448979591837 AS "Proba_3", -2.100060828882572 AS "LogProba_3", 2 AS "Decision", 0.653061224489796 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 43 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 27 AS "count", 5 AS depth, 41 AS parent_id, 0.037037037037037 AS "Proba_0", -3.295836866004329 AS "LogProba_0", 0.37037037037037 AS "Proba_1", -0.993251773010284 AS "LogProba_1", 0.222222222222222 AS "Proba_2", -1.504077396776274 AS "LogProba_2", 0.37037037037037 AS "Proba_3", -0.993251773010284 AS "LogProba_3", 1 AS "Decision", 0.37037037037037 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 47 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 4 AS "count", 5 AS depth, 46 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.5 AS "Proba_1", -0.693147180559945 AS "LogProba_1", 0.25 AS "Proba_2", -1.38629436111989 AS "LogProba_2", 0.25 AS "Proba_3", -1.38629436111989 AS "LogProba_3", 1 AS "Decision", 0.5 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 48 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 18 AS "count", 5 AS depth, 46 AS parent_id, 0.888888888888889 AS "Proba_0", -0.117783035656384 AS "LogProba_0", 0.055555555555556 AS "Proba_1", -2.890371757896165 AS "LogProba_1", 0.055555555555556 AS "Proba_2", -2.890371757896165 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0 AS "Decision", 0.888888888888889 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 50 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 8 AS "count", 5 AS depth, 49 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 2 AS "Decision", 1.0 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 51 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 3 AS "count", 5 AS depth, 49 AS parent_id, 0.666666666666667 AS "Proba_0", -0.405465108108164 AS "LogProba_0", 0.333333333333333 AS "Proba_1", -1.09861228866811 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0 AS "Decision", 0.666666666666667 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 54 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 4 AS "count", 5 AS depth, 53 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 1.0 AS "Proba_3", 0.0 AS "LogProba_3", 3 AS "Decision", 1.0 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 55 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 18 AS "count", 5 AS depth, 53 AS parent_id, 0.277777777777778 AS "Proba_0", -1.280933845462064 AS "LogProba_0", 0.222222222222222 AS "Proba_1", -1.504077396776274 AS "LogProba_1", 0.444444444444444 AS "Proba_2", -0.810930216216329 AS "LogProba_2", 0.055555555555556 AS "Proba_3", -2.890371757896165 AS "LogProba_3", 2 AS "Decision", 0.444444444444444 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 57 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 27 AS "count", 5 AS depth, 56 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.037037037037037 AS "Proba_1", -3.295836866004329 AS "LogProba_1", 0.962962962962963 AS "Proba_2", -0.037740327982847 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 2 AS "Decision", 0.962962962962963 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 58 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS "count", 5 AS depth, 56 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 1.0 AS "Proba_3", 0.0 AS "LogProba_3", 3 AS "Decision", 1.0 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte) AS "Values"), 
"DT_Output_2" AS 
(SELECT "DT_node_lookup_2"."KEY" AS "KEY", "DT_node_lookup_2".node_id_2 AS node_id_2, "DT_node_data_2".node_id AS node_id, "DT_node_data_2".feature AS feature, "DT_node_data_2"."threshold" AS "threshold", "DT_node_data_2"."count" AS "count", "DT_node_data_2".depth AS depth, "DT_node_data_2".parent_id AS parent_id, "DT_node_data_2"."Proba_0" AS "Proba_0", "DT_node_data_2"."LogProba_0" AS "LogProba_0", "DT_node_data_2"."Proba_1" AS "Proba_1", "DT_node_data_2"."LogProba_1" AS "LogProba_1", "DT_node_data_2"."Proba_2" AS "Proba_2", "DT_node_data_2"."LogProba_2" AS "LogProba_2", "DT_node_data_2"."Proba_3" AS "Proba_3", "DT_node_data_2"."LogProba_3" AS "LogProba_3", "DT_node_data_2"."Decision" AS "Decision", "DT_node_data_2"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup_2" LEFT OUTER JOIN "DT_node_data_2" ON "DT_node_lookup_2".node_id_2 = "DT_node_data_2".node_id), 
"Calibrated_Model_2" AS 
(SELECT "DT_Output_2"."KEY" AS "KEY", CAST(NULL AS FLOAT) AS "Score_0", CAST(NULL AS FLOAT) AS "Score_1", CAST(NULL AS FLOAT) AS "Score_2", CAST(NULL AS FLOAT) AS "Score_3", "DT_Output_2"."Proba_0" AS "Proba_0", "DT_Output_2"."Proba_1" AS "Proba_1", "DT_Output_2"."Proba_2" AS "Proba_2", "DT_Output_2"."Proba_3" AS "Proba_3", "DT_Output_2"."LogProba_0" AS "LogProba_0", "DT_Output_2"."LogProba_1" AS "LogProba_1", "DT_Output_2"."LogProba_2" AS "LogProba_2", "DT_Output_2"."LogProba_3" AS "LogProba_3", CAST(NULL AS BIGINT) AS "Decision", CAST(NULL AS FLOAT) AS "DecisionProba", coalesce(CAST(NULL AS FLOAT), "DT_Output_2"."Proba_0") AS "ScoreOrProba_0", coalesce(CAST(NULL AS FLOAT), "DT_Output_2"."Proba_1") AS "ScoreOrProba_1", coalesce(CAST(NULL AS FLOAT), "DT_Output_2"."Proba_2") AS "ScoreOrProba_2", coalesce(CAST(NULL AS FLOAT), "DT_Output_2"."Proba_3") AS "ScoreOrProba_3" 
FROM "DT_Output_2"), 
sigmoid_calibration_2 AS 
(SELECT "Calibrated_Model_2"."KEY" AS "KEY", 1.0 / (1.0 + exp(least(greatest(-100.0, -(0.802177026548737 * "Calibrated_Model_2"."ScoreOrProba_0" + -1.325932118061258)), 100.0))) AS "Proba_0", 1.0 / (1.0 + exp(least(greatest(-100.0, -(1.797428023311522 * "Calibrated_Model_2"."ScoreOrProba_1" + -1.547484196819949)), 100.0))) AS "Proba_1", 1.0 / (1.0 + exp(least(greatest(-100.0, -(0.097753152936842 * "Calibrated_Model_2"."ScoreOrProba_2" + -1.128524593951722)), 100.0))) AS "Proba_2", 1.0 / (1.0 + exp(least(greatest(-100.0, -(1.41341514198862 * "Calibrated_Model_2"."ScoreOrProba_3" + -1.410886765123436)), 100.0))) AS "Proba_3" 
FROM "Calibrated_Model_2"), 
"Normalized_Probas_2" AS 
(SELECT sigmoid_calibration_2."KEY" AS "KEY", sigmoid_calibration_2."Proba_0" / (sigmoid_calibration_2."Proba_0" + sigmoid_calibration_2."Proba_1" + sigmoid_calibration_2."Proba_2" + sigmoid_calibration_2."Proba_3") AS "Proba_0", sigmoid_calibration_2."Proba_1" / (sigmoid_calibration_2."Proba_0" + sigmoid_calibration_2."Proba_1" + sigmoid_calibration_2."Proba_2" + sigmoid_calibration_2."Proba_3") AS "Proba_1", sigmoid_calibration_2."Proba_2" / (sigmoid_calibration_2."Proba_0" + sigmoid_calibration_2."Proba_1" + sigmoid_calibration_2."Proba_2" + sigmoid_calibration_2."Proba_3") AS "Proba_2", sigmoid_calibration_2."Proba_3" / (sigmoid_calibration_2."Proba_0" + sigmoid_calibration_2."Proba_1" + sigmoid_calibration_2."Proba_2" + sigmoid_calibration_2."Proba_3") AS "Proba_3" 
FROM sigmoid_calibration_2), 
"DT_node_lookup_3" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_33 <= 0.293853998184204) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_36 <= 0.910293102264404) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_66 <= -0.581753015518188) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_29 <= 0.634244203567505) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_55 <= 0.755391061306) THEN 5 ELSE 6 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_71 <= 0.538947701454163) THEN 8 ELSE 9 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_55 <= 1.173092007637024) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= 0.278724908828735) THEN 12 ELSE 13 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_50 <= -0.327485054731369) THEN 15 ELSE 16 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_33 <= -1.875542044639588) THEN 18 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_87 <= -0.972788453102112) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_34 <= 0.448791980743408) THEN 21 ELSE 22 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= 0.392477989196777) THEN 24 ELSE 25 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_52 <= -0.345275700092316) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_70 <= -0.008020205423236) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_81 <= -0.293886959552765) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_35 <= 0.284036636352539) THEN 30 ELSE 31 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_30 <= 0.790223240852356) THEN 33 ELSE 34 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_18 <= -0.982362985610962) THEN 36 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_98 <= 0.403621196746826) THEN 38 ELSE 39 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_66 <= 1.175497770309448) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_45 <= -0.13795293867588) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_40 <= -0.859845995903015) THEN 43 ELSE 44 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_41 <= -1.466001749038696) THEN 46 ELSE 47 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_19 <= 0.779043316841126) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_45 <= 0.053936287760735) THEN 50 ELSE 51 END ELSE 52 END END END END AS node_id_2 
FROM tmp_20180416233448_lwwtk6_ads_ AS "ADS_sca_2_OUT"), 
"DT_node_data_3" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values"."threshold" AS FLOAT) AS "threshold", CAST("Values"."count" AS FLOAT) AS "count", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Proba_0" AS FLOAT) AS "Proba_0", CAST("Values"."LogProba_0" AS FLOAT) AS "LogProba_0", CAST("Values"."Proba_1" AS FLOAT) AS "Proba_1", CAST("Values"."LogProba_1" AS FLOAT) AS "LogProba_1", CAST("Values"."Proba_2" AS FLOAT) AS "Proba_2", CAST("Values"."LogProba_2" AS FLOAT) AS "LogProba_2", CAST("Values"."Proba_3" AS FLOAT) AS "Proba_3", CAST("Values"."LogProba_3" AS FLOAT) AS "LogProba_3", CAST("Values"."Decision" AS FLOAT) AS "Decision", CAST("Values"."DecisionProba" AS FLOAT) AS "DecisionProba" 
FROM (SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 47 AS "count", 5 AS depth, 4 AS parent_id, 0.595744680851064 AS "Proba_0", -0.517943091534855 AS "LogProba_0", 0.127659574468085 AS "Proba_1", -2.058388132482004 AS "LogProba_1", 0.127659574468085 AS "Proba_2", -2.058388132482004 AS "LogProba_2", 0.148936170212766 AS "Proba_3", -1.904237452654746 AS "LogProba_3", 0 AS "Decision", 0.595744680851064 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 17 AS "count", 5 AS depth, 4 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.352941176470588 AS "Proba_1", -1.041453874828161 AS "LogProba_1", 0.235294117647059 AS "Proba_2", -1.446918982936325 AS "LogProba_2", 0.411764705882353 AS "Proba_3", -0.887303195000903 AS "LogProba_3", 3 AS "Decision", 0.411764705882353 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 14 AS "count", 5 AS depth, 7 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 1 AS "Decision", 1.0 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 8 AS "count", 5 AS depth, 7 AS parent_id, 0.375 AS "Proba_0", -0.980829253011726 AS "LogProba_0", 0.25 AS "Proba_1", -1.38629436111989 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.375 AS "Proba_3", -0.980829253011726 AS "LogProba_3", 0 AS "Decision", 0.375 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 108 AS "count", 5 AS depth, 11 AS parent_id, 0.138888888888889 AS "Proba_0", -1.97408102602201 AS "LogProba_0", 0.12037037037037 AS "Proba_1", -2.117181869662683 AS "LogProba_1", 0.166666666666667 AS "Proba_2", -1.791759469228055 AS "LogProba_2", 0.574074074074074 AS "Proba_3", -0.554996842079128 AS "LogProba_3", 3 AS "Decision", 0.574074074074074 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 94 AS "count", 5 AS depth, 11 AS parent_id, 0.223404255319149 AS "Proba_0", -1.498772344546581 AS "LogProba_0", 0.127659574468085 AS "Proba_1", -2.058388132482004 AS "LogProba_1", 0.436170212765957 AS "Proba_2", -0.829722715565696 AS "LogProba_2", 0.212765957446808 AS "Proba_3", -1.547562508716013 AS "LogProba_3", 2 AS "Decision", 0.436170212765957 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 9 AS "count", 5 AS depth, 14 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.222222222222222 AS "Proba_1", -1.504077396776274 AS "LogProba_1", 0.333333333333333 AS "Proba_2", -1.09861228866811 AS "LogProba_2", 0.444444444444444 AS "Proba_3", -0.810930216216329 AS "LogProba_3", 3 AS "Decision", 0.444444444444444 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 21 AS "count", 5 AS depth, 14 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 2 AS "Decision", 1.0 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 4 AS "count", 3 AS depth, 17 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 1.0 AS "Proba_3", 0.0 AS "LogProba_3", 3 AS "Decision", 1.0 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 4 AS "count", 5 AS depth, 20 AS parent_id, 0.25 AS "Proba_0", -1.38629436111989 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.75 AS "Proba_3", -0.287682072451781 AS "LogProba_3", 3 AS "Decision", 0.75 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 4 AS "count", 5 AS depth, 20 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 1 AS "Decision", 1.0 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 42 AS "count", 5 AS depth, 23 AS parent_id, 0.880952380952381 AS "Proba_0", -0.126751705639144 AS "LogProba_0", 0.023809523809524 AS "Proba_1", -3.737669618283368 AS "LogProba_1", 0.071428571428571 AS "Proba_2", -2.639057329615259 AS "LogProba_2", 0.023809523809524 AS "Proba_3", -3.737669618283368 AS "LogProba_3", 0 AS "Decision", 0.880952380952381 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 15 AS "count", 5 AS depth, 23 AS parent_id, 0.333333333333333 AS "Proba_0", -1.09861228866811 AS "LogProba_0", 0.066666666666667 AS "Proba_1", -2.70805020110221 AS "LogProba_1", 0.333333333333333 AS "Proba_2", -1.09861228866811 AS "LogProba_2", 0.266666666666667 AS "Proba_3", -1.32175583998232 AS "LogProba_3", 0 AS "Decision", 0.333333333333333 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 8 AS "count", 5 AS depth, 29 AS parent_id, 0.125 AS "Proba_0", -2.079441541679836 AS "LogProba_0", 0.25 AS "Proba_1", -1.38629436111989 AS "LogProba_1", 0.375 AS "Proba_2", -0.980829253011726 AS "LogProba_2", 0.25 AS "Proba_3", -1.38629436111989 AS "LogProba_3", 2 AS "Decision", 0.375 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 31 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 9 AS "count", 5 AS depth, 29 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 1 AS "Decision", 1.0 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 33 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 13 AS "count", 5 AS depth, 32 AS parent_id, 0.076923076923077 AS "Proba_0", -2.564949357461536 AS "LogProba_0", 0.153846153846154 AS "Proba_1", -1.871802176901591 AS "LogProba_1", 0.076923076923077 AS "Proba_2", -2.564949357461536 AS "LogProba_2", 0.692307692307692 AS "Proba_3", -0.367724780125317 AS "LogProba_3", 3 AS "Decision", 0.692307692307692 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 34 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 5 AS "count", 5 AS depth, 32 AS parent_id, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0 AS "Decision", 1.0 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 36 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 5 AS "count", 4 AS depth, 35 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 1.0 AS "Proba_3", 0.0 AS "LogProba_3", 3 AS "Decision", 1.0 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 38 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 18 AS "count", 5 AS depth, 37 AS parent_id, 0.055555555555556 AS "Proba_0", -2.890371757896165 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.888888888888889 AS "Proba_2", -0.117783035656384 AS "LogProba_2", 0.055555555555556 AS "Proba_3", -2.890371757896165 AS "LogProba_3", 2 AS "Decision", 0.888888888888889 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 39 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 6 AS "count", 5 AS depth, 37 AS parent_id, 0.166666666666667 AS "Proba_0", -1.791759469228055 AS "LogProba_0", 0.166666666666667 AS "Proba_1", -1.791759469228055 AS "LogProba_1", 0.166666666666667 AS "Proba_2", -1.791759469228055 AS "LogProba_2", 0.5 AS "Proba_3", -0.693147180559945 AS "LogProba_3", 3 AS "Decision", 0.5 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 43 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 7 AS "count", 5 AS depth, 42 AS parent_id, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0 AS "Decision", 1.0 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 44 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 38 AS "count", 5 AS depth, 42 AS parent_id, 0.131578947368421 AS "Proba_0", -2.028148247292286 AS "LogProba_0", 0.421052631578947 AS "Proba_1", -0.864997437486605 AS "LogProba_1", 0.368421052631579 AS "Proba_2", -0.998528830111127 AS "LogProba_2", 0.078947368421053 AS "Proba_3", -2.538973871058276 AS "LogProba_3", 1 AS "Decision", 0.421052631578947 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 46 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 7 AS "count", 5 AS depth, 45 AS parent_id, 0.285714285714286 AS "Proba_0", -1.252762968495368 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.142857142857143 AS "Proba_2", -1.945910149055314 AS "LogProba_2", 0.571428571428571 AS "Proba_3", -0.559615787935423 AS "LogProba_3", 3 AS "Decision", 0.571428571428571 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 47 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 80 AS "count", 5 AS depth, 45 AS parent_id, 0.125 AS "Proba_0", -2.079441541679836 AS "LogProba_0", 0.725 AS "Proba_1", -0.321583624127462 AS "LogProba_1", 0.0875 AS "Proba_2", -2.436116485618568 AS "LogProba_2", 0.0625 AS "Proba_3", -2.772588722239781 AS "LogProba_3", 1 AS "Decision", 0.725 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 50 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 8 AS "count", 5 AS depth, 49 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.25 AS "Proba_2", -1.38629436111989 AS "LogProba_2", 0.75 AS "Proba_3", -0.287682072451781 AS "LogProba_3", 3 AS "Decision", 0.75 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 51 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 5 AS "count", 5 AS depth, 49 AS parent_id, 0.8 AS "Proba_0", -0.22314355131421 AS "LogProba_0", 0.2 AS "Proba_1", -1.6094379124341 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0 AS "Decision", 0.8 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 52 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 6 AS "count", 4 AS depth, 48 AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 2 AS "Decision", 1.0 AS "DecisionProba" 
FROM (SELECT 0.0 AS "X") AS dummy_cte) AS "Values"), 
"DT_Output_3" AS 
(SELECT "DT_node_lookup_3"."KEY" AS "KEY", "DT_node_lookup_3".node_id_2 AS node_id_2, "DT_node_data_3".node_id AS node_id, "DT_node_data_3".feature AS feature, "DT_node_data_3"."threshold" AS "threshold", "DT_node_data_3"."count" AS "count", "DT_node_data_3".depth AS depth, "DT_node_data_3".parent_id AS parent_id, "DT_node_data_3"."Proba_0" AS "Proba_0", "DT_node_data_3"."LogProba_0" AS "LogProba_0", "DT_node_data_3"."Proba_1" AS "Proba_1", "DT_node_data_3"."LogProba_1" AS "LogProba_1", "DT_node_data_3"."Proba_2" AS "Proba_2", "DT_node_data_3"."LogProba_2" AS "LogProba_2", "DT_node_data_3"."Proba_3" AS "Proba_3", "DT_node_data_3"."LogProba_3" AS "LogProba_3", "DT_node_data_3"."Decision" AS "Decision", "DT_node_data_3"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup_3" LEFT OUTER JOIN "DT_node_data_3" ON "DT_node_lookup_3".node_id_2 = "DT_node_data_3".node_id), 
"Calibrated_Model_3" AS 
(SELECT "DT_Output_3"."KEY" AS "KEY", CAST(NULL AS FLOAT) AS "Score_0", CAST(NULL AS FLOAT) AS "Score_1", CAST(NULL AS FLOAT) AS "Score_2", CAST(NULL AS FLOAT) AS "Score_3", "DT_Output_3"."Proba_0" AS "Proba_0", "DT_Output_3"."Proba_1" AS "Proba_1", "DT_Output_3"."Proba_2" AS "Proba_2", "DT_Output_3"."Proba_3" AS "Proba_3", "DT_Output_3"."LogProba_0" AS "LogProba_0", "DT_Output_3"."LogProba_1" AS "LogProba_1", "DT_Output_3"."LogProba_2" AS "LogProba_2", "DT_Output_3"."LogProba_3" AS "LogProba_3", CAST(NULL AS BIGINT) AS "Decision", CAST(NULL AS FLOAT) AS "DecisionProba", coalesce(CAST(NULL AS FLOAT), "DT_Output_3"."Proba_0") AS "ScoreOrProba_0", coalesce(CAST(NULL AS FLOAT), "DT_Output_3"."Proba_1") AS "ScoreOrProba_1", coalesce(CAST(NULL AS FLOAT), "DT_Output_3"."Proba_2") AS "ScoreOrProba_2", coalesce(CAST(NULL AS FLOAT), "DT_Output_3"."Proba_3") AS "ScoreOrProba_3" 
FROM "DT_Output_3"), 
sigmoid_calibration_3 AS 
(SELECT "Calibrated_Model_3"."KEY" AS "KEY", 1.0 / (1.0 + exp(least(greatest(-100.0, -(0.812750668010106 * "Calibrated_Model_3"."ScoreOrProba_0" + -1.301459930203952)), 100.0))) AS "Proba_0", 1.0 / (1.0 + exp(least(greatest(-100.0, -(1.183612806962809 * "Calibrated_Model_3"."ScoreOrProba_1" + -1.42417392510228)), 100.0))) AS "Proba_1", 1.0 / (1.0 + exp(least(greatest(-100.0, -(1.203552546122547 * "Calibrated_Model_3"."ScoreOrProba_2" + -1.394640770060794)), 100.0))) AS "Proba_2", 1.0 / (1.0 + exp(least(greatest(-100.0, -(1.63938640919762 * "Calibrated_Model_3"."ScoreOrProba_3" + -1.591413792775879)), 100.0))) AS "Proba_3" 
FROM "Calibrated_Model_3"), 
"Normalized_Probas_3" AS 
(SELECT sigmoid_calibration_3."KEY" AS "KEY", sigmoid_calibration_3."Proba_0" / (sigmoid_calibration_3."Proba_0" + sigmoid_calibration_3."Proba_1" + sigmoid_calibration_3."Proba_2" + sigmoid_calibration_3."Proba_3") AS "Proba_0", sigmoid_calibration_3."Proba_1" / (sigmoid_calibration_3."Proba_0" + sigmoid_calibration_3."Proba_1" + sigmoid_calibration_3."Proba_2" + sigmoid_calibration_3."Proba_3") AS "Proba_1", sigmoid_calibration_3."Proba_2" / (sigmoid_calibration_3."Proba_0" + sigmoid_calibration_3."Proba_1" + sigmoid_calibration_3."Proba_2" + sigmoid_calibration_3."Proba_3") AS "Proba_2", sigmoid_calibration_3."Proba_3" / (sigmoid_calibration_3."Proba_0" + sigmoid_calibration_3."Proba_1" + sigmoid_calibration_3."Proba_2" + sigmoid_calibration_3."Proba_3") AS "Proba_3" 
FROM sigmoid_calibration_3)
 SELECT "CalProb_B0"."KEY", "CalProb_B0"."Proba_0", "CalProb_B0"."Proba_1", "CalProb_B0"."Proba_2", "CalProb_B0"."Proba_3" 
FROM (SELECT "CalProb_esu_0"."KEY" AS "KEY", "CalProb_esu_0"."Proba_0" AS "Proba_0", "CalProb_esu_0"."Proba_1" AS "Proba_1", "CalProb_esu_0"."Proba_2" AS "Proba_2", "CalProb_esu_0"."Proba_3" AS "Proba_3" 
FROM (SELECT "Normalized_Probas"."KEY" AS "KEY", "Normalized_Probas"."Proba_0" AS "Proba_0", "Normalized_Probas"."Proba_1" AS "Proba_1", "Normalized_Probas"."Proba_2" AS "Proba_2", "Normalized_Probas"."Proba_3" AS "Proba_3" 
FROM "Normalized_Probas" UNION ALL SELECT "Normalized_Probas_1"."KEY" AS "KEY", "Normalized_Probas_1"."Proba_0" AS "Proba_0", "Normalized_Probas_1"."Proba_1" AS "Proba_1", "Normalized_Probas_1"."Proba_2" AS "Proba_2", "Normalized_Probas_1"."Proba_3" AS "Proba_3" 
FROM "Normalized_Probas_1" UNION ALL SELECT "Normalized_Probas_2"."KEY" AS "KEY", "Normalized_Probas_2"."Proba_0" AS "Proba_0", "Normalized_Probas_2"."Proba_1" AS "Proba_1", "Normalized_Probas_2"."Proba_2" AS "Proba_2", "Normalized_Probas_2"."Proba_3" AS "Proba_3" 
FROM "Normalized_Probas_2" UNION ALL SELECT "Normalized_Probas_3"."KEY" AS "KEY", "Normalized_Probas_3"."Proba_0" AS "Proba_0", "Normalized_Probas_3"."Proba_1" AS "Proba_1", "Normalized_Probas_3"."Proba_2" AS "Proba_2", "Normalized_Probas_3"."Proba_3" AS "Proba_3" 
FROM "Normalized_Probas_3") AS "CalProb_esu_0") AS "CalProb_B0") AS "U"

-- Code For temporary table tmp_20180416233449_oebha8_calp part 1/2. Create 


CREATE GLOBAL TEMPORARY TABLE tmp_20180416233449_oebha8_calp  (
	"KEY" BIGINT, 
	"Proba_0" FLOAT, 
	"Proba_1" FLOAT, 
	"Proba_2" FLOAT, 
	"Proba_3" FLOAT
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table tmp_20180416233449_oebha8_calp part 2/2. Populate

INSERT INTO tmp_20180416233449_oebha8_calp ("KEY", "Proba_0", "Proba_1", "Proba_2", "Proba_3") SELECT "U"."KEY", "U"."Proba_0", "U"."Proba_1", "U"."Proba_2", "U"."Proba_3" 
FROM (SELECT "CalProb_Union"."KEY", "CalProb_Union"."Proba_0", "CalProb_Union"."Proba_1", "CalProb_Union"."Proba_2", "CalProb_Union"."Proba_3" 
FROM (SELECT "CalProb_EnsembleUnion"."KEY" AS "KEY", "CalProb_EnsembleUnion"."Proba_0" AS "Proba_0", "CalProb_EnsembleUnion"."Proba_1" AS "Proba_1", "CalProb_EnsembleUnion"."Proba_2" AS "Proba_2", "CalProb_EnsembleUnion"."Proba_3" AS "Proba_3" 
FROM (SELECT "CalProb_B0"."KEY" AS "KEY", "CalProb_B0"."Proba_0" AS "Proba_0", "CalProb_B0"."Proba_1" AS "Proba_1", "CalProb_B0"."Proba_2" AS "Proba_2", "CalProb_B0"."Proba_3" AS "Proba_3" 
FROM tmp_20180416233449_22fc9e_calp AS "CalProb_B0") AS "CalProb_EnsembleUnion") AS "CalProb_Union") AS "U"

-- Code For temporary table tmp_20180416233449_zhyoa0_calp part 1/2. Create 


CREATE GLOBAL TEMPORARY TABLE tmp_20180416233449_zhyoa0_calp  (
	"KEY" BIGINT, 
	"Proba_0" FLOAT, 
	"Proba_1" FLOAT, 
	"Proba_2" FLOAT, 
	"Proba_3" FLOAT
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table tmp_20180416233449_zhyoa0_calp part 2/2. Populate

INSERT INTO tmp_20180416233449_zhyoa0_calp ("KEY", "Proba_0", "Proba_1", "Proba_2", "Proba_3") SELECT "U"."KEY", "U"."Proba_0", "U"."Proba_1", "U"."Proba_2", "U"."Proba_3" 
FROM (SELECT "CalProb_avg"."KEY", "CalProb_avg"."Proba_0", "CalProb_avg"."Proba_1", "CalProb_avg"."Proba_2", "CalProb_avg"."Proba_3" 
FROM (SELECT "T"."KEY" AS "KEY", CAST("T"."Proba_0" AS FLOAT) AS "Proba_0", CAST("T"."Proba_1" AS FLOAT) AS "Proba_1", CAST("T"."Proba_2" AS FLOAT) AS "Proba_2", CAST("T"."Proba_3" AS FLOAT) AS "Proba_3" 
FROM (SELECT "CalProb_Union"."KEY" AS "KEY", avg(CAST("CalProb_Union"."Proba_0" AS FLOAT)) AS "Proba_0", avg(CAST("CalProb_Union"."Proba_1" AS FLOAT)) AS "Proba_1", avg(CAST("CalProb_Union"."Proba_2" AS FLOAT)) AS "Proba_2", avg(CAST("CalProb_Union"."Proba_3" AS FLOAT)) AS "Proba_3" 
FROM tmp_20180416233449_oebha8_calp AS "CalProb_Union" GROUP BY "CalProb_Union"."KEY") AS "T") AS "CalProb_avg") AS "U"

-- Model deployment code

WITH orig_cte AS 
(SELECT "CalProb_avg"."KEY" AS "KEY", CAST(NULL AS FLOAT) AS "Score_0", CAST(NULL AS FLOAT) AS "Score_1", CAST(NULL AS FLOAT) AS "Score_2", CAST(NULL AS FLOAT) AS "Score_3", "CalProb_avg"."Proba_0" AS "Proba_0", "CalProb_avg"."Proba_1" AS "Proba_1", "CalProb_avg"."Proba_2" AS "Proba_2", "CalProb_avg"."Proba_3" AS "Proba_3", CAST(NULL AS FLOAT) AS "LogProba_0", CAST(NULL AS FLOAT) AS "LogProba_1", CAST(NULL AS FLOAT) AS "LogProba_2", CAST(NULL AS FLOAT) AS "LogProba_3", CAST(NULL AS BIGINT) AS "Decision", CAST(NULL AS FLOAT) AS "DecisionProba" 
FROM tmp_20180416233449_zhyoa0_calp AS "CalProb_avg"), 
score_class_union AS 
(SELECT scu."KEY_u" AS "KEY_u", scu."class" AS "class", scu."LogProba" AS "LogProba", scu."Proba" AS "Proba", scu."Score" AS "Score" 
FROM (SELECT orig_cte."KEY" AS "KEY_u", 0 AS "class", orig_cte."LogProba_0" AS "LogProba", orig_cte."Proba_0" AS "Proba", orig_cte."Score_0" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 1 AS "class", orig_cte."LogProba_1" AS "LogProba", orig_cte."Proba_1" AS "Proba", orig_cte."Score_1" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 2 AS "class", orig_cte."LogProba_2" AS "LogProba", orig_cte."Proba_2" AS "Proba", orig_cte."Score_2" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 3 AS "class", orig_cte."LogProba_3" AS "LogProba", orig_cte."Proba_3" AS "Proba", orig_cte."Score_3" AS "Score" 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte."KEY" AS "KEY", orig_cte."Score_0" AS "Score_0", orig_cte."Score_1" AS "Score_1", orig_cte."Score_2" AS "Score_2", orig_cte."Score_3" AS "Score_3", orig_cte."Proba_0" AS "Proba_0", orig_cte."Proba_1" AS "Proba_1", orig_cte."Proba_2" AS "Proba_2", orig_cte."Proba_3" AS "Proba_3", orig_cte."LogProba_0" AS "LogProba_0", orig_cte."LogProba_1" AS "LogProba_1", orig_cte."LogProba_2" AS "LogProba_2", orig_cte."LogProba_3" AS "LogProba_3", orig_cte."Decision" AS "Decision", orig_cte."DecisionProba" AS "DecisionProba", max_select."KEY_m" AS "KEY_m", max_select."max_Proba" AS "max_Proba" 
FROM orig_cte LEFT OUTER JOIN (SELECT score_class_union."KEY_u" AS "KEY_m", max(score_class_union."Proba") AS "max_Proba" 
FROM score_class_union GROUP BY score_class_union."KEY_u") AS max_select ON orig_cte."KEY" = max_select."KEY_m"), 
union_with_max AS 
(SELECT score_class_union."KEY_u" AS "KEY_u", score_class_union."class" AS "class", score_class_union."LogProba" AS "LogProba", score_class_union."Proba" AS "Proba", score_class_union."Score" AS "Score", score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Score_2" AS "Score_2", score_max."Score_3" AS "Score_3", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."Proba_2" AS "Proba_2", score_max."Proba_3" AS "Proba_3", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."LogProba_2" AS "LogProba_2", score_max."LogProba_3" AS "LogProba_3", score_max."Decision" AS "Decision", score_max."DecisionProba" AS "DecisionProba", score_max."KEY_m" AS "KEY_m", score_max."max_Proba" AS "max_Proba" 
FROM score_class_union LEFT OUTER JOIN score_max ON score_class_union."KEY_u" = score_max."KEY"), 
arg_max_cte AS 
(SELECT score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Score_2" AS "Score_2", score_max."Score_3" AS "Score_3", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."Proba_2" AS "Proba_2", score_max."Proba_3" AS "Proba_3", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."LogProba_2" AS "LogProba_2", score_max."LogProba_3" AS "LogProba_3", score_max."Decision" AS "Decision", score_max."DecisionProba" AS "DecisionProba", score_max."KEY_m" AS "KEY_m", score_max."max_Proba" AS "max_Proba", "arg_max_t_Proba"."KEY_Proba" AS "KEY_Proba", "arg_max_t_Proba"."arg_max_Proba" AS "arg_max_Proba" 
FROM score_max LEFT OUTER JOIN (SELECT union_with_max."KEY" AS "KEY_Proba", min(union_with_max."class") AS "arg_max_Proba" 
FROM union_with_max 
WHERE union_with_max."Proba" >= union_with_max."max_Proba" GROUP BY union_with_max."KEY") AS "arg_max_t_Proba" ON score_max."KEY" = "arg_max_t_Proba"."KEY_Proba")
 SELECT arg_max_cte."KEY" AS "KEY", arg_max_cte."Score_0" AS "Score_0", arg_max_cte."Score_1" AS "Score_1", arg_max_cte."Score_2" AS "Score_2", arg_max_cte."Score_3" AS "Score_3", arg_max_cte."Proba_0" AS "Proba_0", arg_max_cte."Proba_1" AS "Proba_1", arg_max_cte."Proba_2" AS "Proba_2", arg_max_cte."Proba_3" AS "Proba_3", CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN ln(arg_max_cte."Proba_0") ELSE -1.79769313486231e+308 END AS "LogProba_0", CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN ln(arg_max_cte."Proba_1") ELSE -1.79769313486231e+308 END AS "LogProba_1", CASE WHEN (arg_max_cte."Proba_2" IS NULL OR arg_max_cte."Proba_2" > 0.0) THEN ln(arg_max_cte."Proba_2") ELSE -1.79769313486231e+308 END AS "LogProba_2", CASE WHEN (arg_max_cte."Proba_3" IS NULL OR arg_max_cte."Proba_3" > 0.0) THEN ln(arg_max_cte."Proba_3") ELSE -1.79769313486231e+308 END AS "LogProba_3", arg_max_cte."arg_max_Proba" AS "Decision", arg_max_cte."max_Proba" AS "DecisionProba" 
FROM arg_max_cte