-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2018

-- Model : CalibratedClassifierCV_sigmoid_Pipeline
-- Dataset : iris_date_tgt
-- Database : hive


-- This SQL code can contain one or more statements, to be executed in the order they appear in this file.



-- Code For temporary table tmp_20180417042521_4dj8xr_ads_imp_1_out part 1/2. Create 

CREATE TEMPORARY TABLE `tmp_20180417042521_4dj8xr_ads_imp_1_out` STORED AS ORC AS SELECT `ADS_imp_1_OUT`.`KEY`, `ADS_imp_1_OUT`.`imputer_output_2`, `ADS_imp_1_OUT`.`imputer_output_3`, `ADS_imp_1_OUT`.`imputer_output_4`, `ADS_imp_1_OUT`.`imputer_output_5` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_0` IS NULL) THEN 5.8474999999999975 ELSE `ADS`.`Feature_0` END AS `imputer_output_2`, CASE WHEN (`ADS`.`Feature_1` IS NULL) THEN 3.0366666666666657 ELSE `ADS`.`Feature_1` END AS `imputer_output_3`, CASE WHEN (`ADS`.`Feature_2` IS NULL) THEN 3.8450000000000006 ELSE `ADS`.`Feature_2` END AS `imputer_output_4`, CASE WHEN (`ADS`.`Feature_3` IS NULL) THEN 1.245 ELSE `ADS`.`Feature_3` END AS `imputer_output_5` 
FROM `iris_date_tgt` AS `ADS`) AS `ADS_imp_1_OUT`

-- Code For temporary table tmp_20180417042521_4dj8xr_ads_imp_1_out part 2/2. Populate

SELECT * FROM `tmp_20180417042521_4dj8xr_ads_imp_1_out`

-- Code For temporary table tmp_20180417042521_wuwir8_ads_sca_2_out part 1/2. Create 

CREATE TEMPORARY TABLE `tmp_20180417042521_wuwir8_ads_sca_2_out` STORED AS ORC AS SELECT `ADS_sca_2_OUT`.`KEY`, `ADS_sca_2_OUT`.`scaler_output_2`, `ADS_sca_2_OUT`.`scaler_output_3`, `ADS_sca_2_OUT`.`scaler_output_4`, `ADS_sca_2_OUT`.`scaler_output_5` 
FROM (SELECT `ADS_imp_1_OUT`.`KEY` AS `KEY`, (CAST(`ADS_imp_1_OUT`.`imputer_output_2` AS FLOAT) - 5.8474999999999975) / 0.827039146594646 AS `scaler_output_2`, (CAST(`ADS_imp_1_OUT`.`imputer_output_3` AS FLOAT) - 3.0366666666666657) / 0.43625935201691934 AS `scaler_output_3`, (CAST(`ADS_imp_1_OUT`.`imputer_output_4` AS FLOAT) - 3.8450000000000006) / 1.709817241695732 AS `scaler_output_4`, (CAST(`ADS_imp_1_OUT`.`imputer_output_5` AS FLOAT) - 1.245) / 0.7498722113355939 AS `scaler_output_5` 
FROM `tmp_20180417042521_4dj8xr_ads_imp_1_out` AS `ADS_imp_1_OUT`) AS `ADS_sca_2_OUT`

-- Code For temporary table tmp_20180417042521_wuwir8_ads_sca_2_out part 2/2. Populate

SELECT * FROM `tmp_20180417042521_wuwir8_ads_sca_2_out`

-- Code For temporary table tmp_20180417042521_oegekx_calprob_b0 part 1/2. Create 

CREATE TEMPORARY TABLE `tmp_20180417042521_oegekx_calprob_b0` STORED AS ORC AS WITH `DT_node_lookup` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.`scaler_output_5` <= -0.6601125001907349) THEN 1 ELSE CASE WHEN (`ADS_sca_2_OUT`.`scaler_output_4` <= 0.529296338558197) THEN 3 ELSE CASE WHEN (`ADS_sca_2_OUT`.`scaler_output_4` <= 0.7047536373138428) THEN CASE WHEN (`ADS_sca_2_OUT`.`scaler_output_3` <= 0.030562859028577805) THEN CASE WHEN (`ADS_sca_2_OUT`.`scaler_output_5` <= 0.6734480857849121) THEN 7 ELSE 8 END ELSE 9 END ELSE 10 END END END AS `node_id_2` 
FROM `tmp_20180417042521_wuwir8_ads_sca_2_out` AS `ADS_sca_2_OUT`), 
`DT_node_data` AS 
(SELECT `Values`.`node_id` AS `node_id`, CAST(`Values`.`feature` AS FLOAT) AS `feature`, CAST(`Values`.`threshold` AS FLOAT) AS `threshold`, CAST(`Values`.`count` AS FLOAT) AS `count`, CAST(`Values`.`depth` AS FLOAT) AS `depth`, CAST(`Values`.`parent_id` AS FLOAT) AS `parent_id`, CAST(`Proba_1789-07-14T00:00:00.000000000` AS FLOAT) AS `Proba_1789-07-14T00:00:00.000000000`, CAST(`LogProba_1789-07-14T00:00:00.000000000` AS FLOAT) AS `LogProba_1789-07-14T00:00:00.000000000`, CAST(`Proba_1789-08-14T00:00:00.000000000` AS FLOAT) AS `Proba_1789-08-14T00:00:00.000000000`, CAST(`LogProba_1789-08-14T00:00:00.000000000` AS FLOAT) AS `LogProba_1789-08-14T00:00:00.000000000`, CAST(`Proba_1789-09-14T00:00:00.000000000` AS FLOAT) AS `Proba_1789-09-14T00:00:00.000000000`, CAST(`LogProba_1789-09-14T00:00:00.000000000` AS FLOAT) AS `LogProba_1789-09-14T00:00:00.000000000`, CAST(`Values`.`Decision` AS FLOAT) AS `Decision`, CAST(`Values`.`DecisionProba` AS FLOAT) AS `DecisionProba` 
FROM (SELECT 1 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 27 AS `count`, 1 AS `depth`, 0 AS `parent_id`, 1.0 AS `Proba_1789-07-14T00:00:00.000000000`, 0.0 AS `LogProba_1789-07-14T00:00:00.000000000`, 0.0 AS `Proba_1789-08-14T00:00:00.000000000`, -1.79769313486231e+308 AS `LogProba_1789-08-14T00:00:00.000000000`, 0.0 AS `Proba_1789-09-14T00:00:00.000000000`, -1.79769313486231e+308 AS `LogProba_1789-09-14T00:00:00.000000000`, '1789-07-14T00:00:00.000000000' AS `Decision`, 1.0 AS `DecisionProba` UNION ALL SELECT 3 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 26 AS `count`, 2 AS `depth`, 2 AS `parent_id`, 0.0 AS `Proba_1789-07-14T00:00:00.000000000`, -1.79769313486231e+308 AS `LogProba_1789-07-14T00:00:00.000000000`, 1.0 AS `Proba_1789-08-14T00:00:00.000000000`, 0.0 AS `LogProba_1789-08-14T00:00:00.000000000`, 0.0 AS `Proba_1789-09-14T00:00:00.000000000`, -1.79769313486231e+308 AS `LogProba_1789-09-14T00:00:00.000000000`, '1789-08-14T00:00:00.000000000' AS `Decision`, 1.0 AS `DecisionProba` UNION ALL SELECT 7 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 3 AS `count`, 5 AS `depth`, 6 AS `parent_id`, 0.0 AS `Proba_1789-07-14T00:00:00.000000000`, -1.79769313486231e+308 AS `LogProba_1789-07-14T00:00:00.000000000`, 0.6666666666666666 AS `Proba_1789-08-14T00:00:00.000000000`, -0.40546510810816444 AS `LogProba_1789-08-14T00:00:00.000000000`, 0.3333333333333333 AS `Proba_1789-09-14T00:00:00.000000000`, -1.0986122886681098 AS `LogProba_1789-09-14T00:00:00.000000000`, '1789-08-14T00:00:00.000000000' AS `Decision`, 0.6666666666666666 AS `DecisionProba` UNION ALL SELECT 8 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 5 AS `count`, 5 AS `depth`, 6 AS `parent_id`, 0.0 AS `Proba_1789-07-14T00:00:00.000000000`, -1.79769313486231e+308 AS `LogProba_1789-07-14T00:00:00.000000000`, 0.0 AS `Proba_1789-08-14T00:00:00.000000000`, -1.79769313486231e+308 AS `LogProba_1789-08-14T00:00:00.000000000`, 1.0 AS `Proba_1789-09-14T00:00:00.000000000`, 0.0 AS `LogProba_1789-09-14T00:00:00.000000000`, '1789-09-14T00:00:00.000000000' AS `Decision`, 1.0 AS `DecisionProba` UNION ALL SELECT 9 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 2 AS `count`, 4 AS `depth`, 5 AS `parent_id`, 0.0 AS `Proba_1789-07-14T00:00:00.000000000`, -1.79769313486231e+308 AS `LogProba_1789-07-14T00:00:00.000000000`, 1.0 AS `Proba_1789-08-14T00:00:00.000000000`, 0.0 AS `LogProba_1789-08-14T00:00:00.000000000`, 0.0 AS `Proba_1789-09-14T00:00:00.000000000`, -1.79769313486231e+308 AS `LogProba_1789-09-14T00:00:00.000000000`, '1789-08-14T00:00:00.000000000' AS `Decision`, 1.0 AS `DecisionProba` UNION ALL SELECT 10 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 26 AS `count`, 3 AS `depth`, 4 AS `parent_id`, 0.0 AS `Proba_1789-07-14T00:00:00.000000000`, -1.79769313486231e+308 AS `LogProba_1789-07-14T00:00:00.000000000`, 0.0 AS `Proba_1789-08-14T00:00:00.000000000`, -1.79769313486231e+308 AS `LogProba_1789-08-14T00:00:00.000000000`, 1.0 AS `Proba_1789-09-14T00:00:00.000000000`, 0.0 AS `LogProba_1789-09-14T00:00:00.000000000`, '1789-09-14T00:00:00.000000000' AS `Decision`, 1.0 AS `DecisionProba`) AS `Values`), 
`DT_Output` AS 
(SELECT `DT_node_lookup`.`KEY` AS `KEY`, `DT_node_lookup`.`node_id_2` AS `node_id_2`, `DT_node_data`.`node_id` AS `node_id`, `DT_node_data`.`feature` AS `feature`, `DT_node_data`.`threshold` AS `threshold`, `DT_node_data`.`count` AS `count`, `DT_node_data`.`depth` AS `depth`, `DT_node_data`.`parent_id` AS `parent_id`, `Proba_1789-07-14T00:00:00.000000000` AS `Proba_1789-07-14T00:00:00.000000000`, `LogProba_1789-07-14T00:00:00.000000000` AS `LogProba_1789-07-14T00:00:00.000000000`, `Proba_1789-08-14T00:00:00.000000000` AS `Proba_1789-08-14T00:00:00.000000000`, `LogProba_1789-08-14T00:00:00.000000000` AS `LogProba_1789-08-14T00:00:00.000000000`, `Proba_1789-09-14T00:00:00.000000000` AS `Proba_1789-09-14T00:00:00.000000000`, `LogProba_1789-09-14T00:00:00.000000000` AS `LogProba_1789-09-14T00:00:00.000000000`, `DT_node_data`.`Decision` AS `Decision`, `DT_node_data`.`DecisionProba` AS `DecisionProba` 
FROM `DT_node_lookup` LEFT OUTER JOIN `DT_node_data` ON `DT_node_lookup`.`node_id_2` = `DT_node_data`.`node_id`), 
`Calibrated_Model_0` AS 
(SELECT `DT_Output`.`KEY` AS `KEY`, CAST(NULL AS FLOAT) AS `Score_1789-07-14T00:00:00.000000000`, CAST(NULL AS FLOAT) AS `Score_1789-08-14T00:00:00.000000000`, CAST(NULL AS FLOAT) AS `Score_1789-09-14T00:00:00.000000000`, `Proba_1789-07-14T00:00:00.000000000` AS `Proba_1789-07-14T00:00:00.000000000`, `Proba_1789-08-14T00:00:00.000000000` AS `Proba_1789-08-14T00:00:00.000000000`, `Proba_1789-09-14T00:00:00.000000000` AS `Proba_1789-09-14T00:00:00.000000000`, `LogProba_1789-07-14T00:00:00.000000000` AS `LogProba_1789-07-14T00:00:00.000000000`, `LogProba_1789-08-14T00:00:00.000000000` AS `LogProba_1789-08-14T00:00:00.000000000`, `LogProba_1789-09-14T00:00:00.000000000` AS `LogProba_1789-09-14T00:00:00.000000000`, CAST(NULL AS BIGINT) AS `Decision`, CAST(NULL AS FLOAT) AS `DecisionProba`, coalesce(CAST(NULL AS FLOAT), `Proba_1789-07-14T00:00:00.000000000`) AS `ScoreOrProba_1789-07-14T00:00:00.000000000`, coalesce(CAST(NULL AS FLOAT), `Proba_1789-08-14T00:00:00.000000000`) AS `ScoreOrProba_1789-08-14T00:00:00.000000000`, coalesce(CAST(NULL AS FLOAT), `Proba_1789-09-14T00:00:00.000000000`) AS `ScoreOrProba_1789-09-14T00:00:00.000000000` 
FROM `DT_Output`), 
`sigmoid_calibration_0` AS 
(SELECT `Calibrated_Model_0`.`KEY` AS `KEY`, 1.0 / (1.0 + exp(CASE WHEN (CASE WHEN (-100.0 <= -(5.488937334779731 * `ScoreOrProba_1789-07-14T00:00:00.000000000` + -3.0910424939613868)) THEN -(5.488937334779731 * `ScoreOrProba_1789-07-14T00:00:00.000000000` + -3.0910424939613868) ELSE -100.0 END <= 100.0) THEN CASE WHEN (-100.0 <= -(5.488937334779731 * `ScoreOrProba_1789-07-14T00:00:00.000000000` + -3.0910424939613868)) THEN -(5.488937334779731 * `ScoreOrProba_1789-07-14T00:00:00.000000000` + -3.0910424939613868) ELSE -100.0 END ELSE 100.0 END)) AS `Proba_1789-07-14T00:00:00.000000000`, 1.0 / (1.0 + exp(CASE WHEN (CASE WHEN (-100.0 <= -(4.718121478468529 * `ScoreOrProba_1789-08-14T00:00:00.000000000` + -2.95244363385918)) THEN -(4.718121478468529 * `ScoreOrProba_1789-08-14T00:00:00.000000000` + -2.95244363385918) ELSE -100.0 END <= 100.0) THEN CASE WHEN (-100.0 <= -(4.718121478468529 * `ScoreOrProba_1789-08-14T00:00:00.000000000` + -2.95244363385918)) THEN -(4.718121478468529 * `ScoreOrProba_1789-08-14T00:00:00.000000000` + -2.95244363385918) ELSE -100.0 END ELSE 100.0 END)) AS `Proba_1789-08-14T00:00:00.000000000`, 1.0 / (1.0 + exp(CASE WHEN (CASE WHEN (-100.0 <= -(4.801955584523639 * `ScoreOrProba_1789-09-14T00:00:00.000000000` + -2.4323200933644706)) THEN -(4.801955584523639 * `ScoreOrProba_1789-09-14T00:00:00.000000000` + -2.4323200933644706) ELSE -100.0 END <= 100.0) THEN CASE WHEN (-100.0 <= -(4.801955584523639 * `ScoreOrProba_1789-09-14T00:00:00.000000000` + -2.4323200933644706)) THEN -(4.801955584523639 * `ScoreOrProba_1789-09-14T00:00:00.000000000` + -2.4323200933644706) ELSE -100.0 END ELSE 100.0 END)) AS `Proba_1789-09-14T00:00:00.000000000` 
FROM `Calibrated_Model_0`), 
`Normalized_Probas` AS 
(SELECT `sigmoid_calibration_0`.`KEY` AS `KEY`, `Proba_1789-07-14T00:00:00.000000000` / (`Proba_1789-07-14T00:00:00.000000000` + `Proba_1789-08-14T00:00:00.000000000` + `Proba_1789-09-14T00:00:00.000000000`) AS `Proba_1789-07-14T00:00:00.000000000`, `Proba_1789-08-14T00:00:00.000000000` / (`Proba_1789-07-14T00:00:00.000000000` + `Proba_1789-08-14T00:00:00.000000000` + `Proba_1789-09-14T00:00:00.000000000`) AS `Proba_1789-08-14T00:00:00.000000000`, `Proba_1789-09-14T00:00:00.000000000` / (`Proba_1789-07-14T00:00:00.000000000` + `Proba_1789-08-14T00:00:00.000000000` + `Proba_1789-09-14T00:00:00.000000000`) AS `Proba_1789-09-14T00:00:00.000000000` 
FROM `sigmoid_calibration_0`), 
`DT_node_lookup_1` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.`scaler_output_5` <= -0.5934344530105591) THEN 1 ELSE CASE WHEN (`ADS_sca_2_OUT`.`scaler_output_4` <= 0.6462678909301758) THEN CASE WHEN (`ADS_sca_2_OUT`.`scaler_output_5` <= 0.5400919914245605) THEN 4 ELSE CASE WHEN (`ADS_sca_2_OUT`.`scaler_output_3` <= 0.1451735943555832) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS_sca_2_OUT`.`scaler_output_4` <= 0.7047536373138428) THEN CASE WHEN (`ADS_sca_2_OUT`.`scaler_output_2` <= 0.7889590263366699) THEN 10 ELSE 11 END ELSE 12 END END END AS `node_id_2` 
FROM `tmp_20180417042521_wuwir8_ads_sca_2_out` AS `ADS_sca_2_OUT`), 
`DT_node_data_1` AS 
(SELECT `Values`.`node_id` AS `node_id`, CAST(`Values`.`feature` AS FLOAT) AS `feature`, CAST(`Values`.`threshold` AS FLOAT) AS `threshold`, CAST(`Values`.`count` AS FLOAT) AS `count`, CAST(`Values`.`depth` AS FLOAT) AS `depth`, CAST(`Values`.`parent_id` AS FLOAT) AS `parent_id`, CAST(`Proba_1789-07-14T00:00:00.000000000` AS FLOAT) AS `Proba_1789-07-14T00:00:00.000000000`, CAST(`LogProba_1789-07-14T00:00:00.000000000` AS FLOAT) AS `LogProba_1789-07-14T00:00:00.000000000`, CAST(`Proba_1789-08-14T00:00:00.000000000` AS FLOAT) AS `Proba_1789-08-14T00:00:00.000000000`, CAST(`LogProba_1789-08-14T00:00:00.000000000` AS FLOAT) AS `LogProba_1789-08-14T00:00:00.000000000`, CAST(`Proba_1789-09-14T00:00:00.000000000` AS FLOAT) AS `Proba_1789-09-14T00:00:00.000000000`, CAST(`LogProba_1789-09-14T00:00:00.000000000` AS FLOAT) AS `LogProba_1789-09-14T00:00:00.000000000`, CAST(`Values`.`Decision` AS FLOAT) AS `Decision`, CAST(`Values`.`DecisionProba` AS FLOAT) AS `DecisionProba` 
FROM (SELECT 1 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 28 AS `count`, 1 AS `depth`, 0 AS `parent_id`, 1.0 AS `Proba_1789-07-14T00:00:00.000000000`, 0.0 AS `LogProba_1789-07-14T00:00:00.000000000`, 0.0 AS `Proba_1789-08-14T00:00:00.000000000`, -1.79769313486231e+308 AS `LogProba_1789-08-14T00:00:00.000000000`, 0.0 AS `Proba_1789-09-14T00:00:00.000000000`, -1.79769313486231e+308 AS `LogProba_1789-09-14T00:00:00.000000000`, '1789-07-14T00:00:00.000000000' AS `Decision`, 1.0 AS `DecisionProba` UNION ALL SELECT 4 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 28 AS `count`, 3 AS `depth`, 3 AS `parent_id`, 0.0 AS `Proba_1789-07-14T00:00:00.000000000`, -1.79769313486231e+308 AS `LogProba_1789-07-14T00:00:00.000000000`, 1.0 AS `Proba_1789-08-14T00:00:00.000000000`, 0.0 AS `LogProba_1789-08-14T00:00:00.000000000`, 0.0 AS `Proba_1789-09-14T00:00:00.000000000`, -1.79769313486231e+308 AS `LogProba_1789-09-14T00:00:00.000000000`, '1789-08-14T00:00:00.000000000' AS `Decision`, 1.0 AS `DecisionProba` UNION ALL SELECT 6 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 4 AS `count`, 4 AS `depth`, 5 AS `parent_id`, 0.0 AS `Proba_1789-07-14T00:00:00.000000000`, -1.79769313486231e+308 AS `LogProba_1789-07-14T00:00:00.000000000`, 0.0 AS `Proba_1789-08-14T00:00:00.000000000`, -1.79769313486231e+308 AS `LogProba_1789-08-14T00:00:00.000000000`, 1.0 AS `Proba_1789-09-14T00:00:00.000000000`, 0.0 AS `LogProba_1789-09-14T00:00:00.000000000`, '1789-09-14T00:00:00.000000000' AS `Decision`, 1.0 AS `DecisionProba` UNION ALL SELECT 7 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 1 AS `count`, 4 AS `depth`, 5 AS `parent_id`, 0.0 AS `Proba_1789-07-14T00:00:00.000000000`, -1.79769313486231e+308 AS `LogProba_1789-07-14T00:00:00.000000000`, 1.0 AS `Proba_1789-08-14T00:00:00.000000000`, 0.0 AS `LogProba_1789-08-14T00:00:00.000000000`, 0.0 AS `Proba_1789-09-14T00:00:00.000000000`, -1.79769313486231e+308 AS `LogProba_1789-09-14T00:00:00.000000000`, '1789-08-14T00:00:00.000000000' AS `Decision`, 1.0 AS `DecisionProba` UNION ALL SELECT 10 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 2 AS `count`, 4 AS `depth`, 9 AS `parent_id`, 0.0 AS `Proba_1789-07-14T00:00:00.000000000`, -1.79769313486231e+308 AS `LogProba_1789-07-14T00:00:00.000000000`, 0.0 AS `Proba_1789-08-14T00:00:00.000000000`, -1.79769313486231e+308 AS `LogProba_1789-08-14T00:00:00.000000000`, 1.0 AS `Proba_1789-09-14T00:00:00.000000000`, 0.0 AS `LogProba_1789-09-14T00:00:00.000000000`, '1789-09-14T00:00:00.000000000' AS `Decision`, 1.0 AS `DecisionProba` UNION ALL SELECT 11 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 1 AS `count`, 4 AS `depth`, 9 AS `parent_id`, 0.0 AS `Proba_1789-07-14T00:00:00.000000000`, -1.79769313486231e+308 AS `LogProba_1789-07-14T00:00:00.000000000`, 1.0 AS `Proba_1789-08-14T00:00:00.000000000`, 0.0 AS `LogProba_1789-08-14T00:00:00.000000000`, 0.0 AS `Proba_1789-09-14T00:00:00.000000000`, -1.79769313486231e+308 AS `LogProba_1789-09-14T00:00:00.000000000`, '1789-08-14T00:00:00.000000000' AS `Decision`, 1.0 AS `DecisionProba` UNION ALL SELECT 12 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 26 AS `count`, 3 AS `depth`, 8 AS `parent_id`, 0.0 AS `Proba_1789-07-14T00:00:00.000000000`, -1.79769313486231e+308 AS `LogProba_1789-07-14T00:00:00.000000000`, 0.0 AS `Proba_1789-08-14T00:00:00.000000000`, -1.79769313486231e+308 AS `LogProba_1789-08-14T00:00:00.000000000`, 1.0 AS `Proba_1789-09-14T00:00:00.000000000`, 0.0 AS `LogProba_1789-09-14T00:00:00.000000000`, '1789-09-14T00:00:00.000000000' AS `Decision`, 1.0 AS `DecisionProba`) AS `Values`), 
`DT_Output_1` AS 
(SELECT `DT_node_lookup_1`.`KEY` AS `KEY`, `DT_node_lookup_1`.`node_id_2` AS `node_id_2`, `DT_node_data_1`.`node_id` AS `node_id`, `DT_node_data_1`.`feature` AS `feature`, `DT_node_data_1`.`threshold` AS `threshold`, `DT_node_data_1`.`count` AS `count`, `DT_node_data_1`.`depth` AS `depth`, `DT_node_data_1`.`parent_id` AS `parent_id`, `Proba_1789-07-14T00:00:00.000000000` AS `Proba_1789-07-14T00:00:00.000000000`, `LogProba_1789-07-14T00:00:00.000000000` AS `LogProba_1789-07-14T00:00:00.000000000`, `Proba_1789-08-14T00:00:00.000000000` AS `Proba_1789-08-14T00:00:00.000000000`, `LogProba_1789-08-14T00:00:00.000000000` AS `LogProba_1789-08-14T00:00:00.000000000`, `Proba_1789-09-14T00:00:00.000000000` AS `Proba_1789-09-14T00:00:00.000000000`, `LogProba_1789-09-14T00:00:00.000000000` AS `LogProba_1789-09-14T00:00:00.000000000`, `DT_node_data_1`.`Decision` AS `Decision`, `DT_node_data_1`.`DecisionProba` AS `DecisionProba` 
FROM `DT_node_lookup_1` LEFT OUTER JOIN `DT_node_data_1` ON `DT_node_lookup_1`.`node_id_2` = `DT_node_data_1`.`node_id`), 
`Calibrated_Model_1` AS 
(SELECT `DT_Output_1`.`KEY` AS `KEY`, CAST(NULL AS FLOAT) AS `Score_1789-07-14T00:00:00.000000000`, CAST(NULL AS FLOAT) AS `Score_1789-08-14T00:00:00.000000000`, CAST(NULL AS FLOAT) AS `Score_1789-09-14T00:00:00.000000000`, `Proba_1789-07-14T00:00:00.000000000` AS `Proba_1789-07-14T00:00:00.000000000`, `Proba_1789-08-14T00:00:00.000000000` AS `Proba_1789-08-14T00:00:00.000000000`, `Proba_1789-09-14T00:00:00.000000000` AS `Proba_1789-09-14T00:00:00.000000000`, `LogProba_1789-07-14T00:00:00.000000000` AS `LogProba_1789-07-14T00:00:00.000000000`, `LogProba_1789-08-14T00:00:00.000000000` AS `LogProba_1789-08-14T00:00:00.000000000`, `LogProba_1789-09-14T00:00:00.000000000` AS `LogProba_1789-09-14T00:00:00.000000000`, CAST(NULL AS BIGINT) AS `Decision`, CAST(NULL AS FLOAT) AS `DecisionProba`, coalesce(CAST(NULL AS FLOAT), `Proba_1789-07-14T00:00:00.000000000`) AS `ScoreOrProba_1789-07-14T00:00:00.000000000`, coalesce(CAST(NULL AS FLOAT), `Proba_1789-08-14T00:00:00.000000000`) AS `ScoreOrProba_1789-08-14T00:00:00.000000000`, coalesce(CAST(NULL AS FLOAT), `Proba_1789-09-14T00:00:00.000000000`) AS `ScoreOrProba_1789-09-14T00:00:00.000000000` 
FROM `DT_Output_1`), 
`sigmoid_calibration_1` AS 
(SELECT `Calibrated_Model_1`.`KEY` AS `KEY`, 1.0 / (1.0 + exp(CASE WHEN (CASE WHEN (-100.0 <= -(5.393626322122635 * `ScoreOrProba_1789-07-14T00:00:00.000000000` + -3.091045517303994)) THEN -(5.393626322122635 * `ScoreOrProba_1789-07-14T00:00:00.000000000` + -3.091045517303994) ELSE -100.0 END <= 100.0) THEN CASE WHEN (-100.0 <= -(5.393626322122635 * `ScoreOrProba_1789-07-14T00:00:00.000000000` + -3.091045517303994)) THEN -(5.393626322122635 * `ScoreOrProba_1789-07-14T00:00:00.000000000` + -3.091045517303994) ELSE -100.0 END ELSE 100.0 END)) AS `Proba_1789-07-14T00:00:00.000000000`, 1.0 / (1.0 + exp(CASE WHEN (CASE WHEN (-100.0 <= -(5.442417342523719 * `ScoreOrProba_1789-08-14T00:00:00.000000000` + -3.0445224878196573)) THEN -(5.442417342523719 * `ScoreOrProba_1789-08-14T00:00:00.000000000` + -3.0445224878196573) ELSE -100.0 END <= 100.0) THEN CASE WHEN (-100.0 <= -(5.442417342523719 * `ScoreOrProba_1789-08-14T00:00:00.000000000` + -3.0445224878196573)) THEN -(5.442417342523719 * `ScoreOrProba_1789-08-14T00:00:00.000000000` + -3.0445224878196573) ELSE -100.0 END ELSE 100.0 END)) AS `Proba_1789-08-14T00:00:00.000000000`, 1.0 / (1.0 + exp(CASE WHEN (CASE WHEN (-100.0 <= -(5.480638259777759 * `ScoreOrProba_1789-09-14T00:00:00.000000000` + -2.995732594243071)) THEN -(5.480638259777759 * `ScoreOrProba_1789-09-14T00:00:00.000000000` + -2.995732594243071) ELSE -100.0 END <= 100.0) THEN CASE WHEN (-100.0 <= -(5.480638259777759 * `ScoreOrProba_1789-09-14T00:00:00.000000000` + -2.995732594243071)) THEN -(5.480638259777759 * `ScoreOrProba_1789-09-14T00:00:00.000000000` + -2.995732594243071) ELSE -100.0 END ELSE 100.0 END)) AS `Proba_1789-09-14T00:00:00.000000000` 
FROM `Calibrated_Model_1`), 
`Normalized_Probas_1` AS 
(SELECT `sigmoid_calibration_1`.`KEY` AS `KEY`, `Proba_1789-07-14T00:00:00.000000000` / (`Proba_1789-07-14T00:00:00.000000000` + `Proba_1789-08-14T00:00:00.000000000` + `Proba_1789-09-14T00:00:00.000000000`) AS `Proba_1789-07-14T00:00:00.000000000`, `Proba_1789-08-14T00:00:00.000000000` / (`Proba_1789-07-14T00:00:00.000000000` + `Proba_1789-08-14T00:00:00.000000000` + `Proba_1789-09-14T00:00:00.000000000`) AS `Proba_1789-08-14T00:00:00.000000000`, `Proba_1789-09-14T00:00:00.000000000` / (`Proba_1789-07-14T00:00:00.000000000` + `Proba_1789-08-14T00:00:00.000000000` + `Proba_1789-09-14T00:00:00.000000000`) AS `Proba_1789-09-14T00:00:00.000000000` 
FROM `sigmoid_calibration_1`), 
`DT_node_lookup_2` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.`scaler_output_5` <= -0.5934344530105591) THEN 1 ELSE CASE WHEN (`ADS_sca_2_OUT`.`scaler_output_5` <= 0.6734480857849121) THEN CASE WHEN (`ADS_sca_2_OUT`.`scaler_output_4` <= 0.6462678909301758) THEN CASE WHEN (`ADS_sca_2_OUT`.`scaler_output_2` <= -1.0851964950561523) THEN 5 ELSE 6 END ELSE CASE WHEN (`ADS_sca_2_OUT`.`scaler_output_5` <= 0.5400919914245605) THEN 8 ELSE 9 END END ELSE 10 END END AS `node_id_2` 
FROM `tmp_20180417042521_wuwir8_ads_sca_2_out` AS `ADS_sca_2_OUT`), 
`DT_node_data_2` AS 
(SELECT `Values`.`node_id` AS `node_id`, CAST(`Values`.`feature` AS FLOAT) AS `feature`, CAST(`Values`.`threshold` AS FLOAT) AS `threshold`, CAST(`Values`.`count` AS FLOAT) AS `count`, CAST(`Values`.`depth` AS FLOAT) AS `depth`, CAST(`Values`.`parent_id` AS FLOAT) AS `parent_id`, CAST(`Proba_1789-07-14T00:00:00.000000000` AS FLOAT) AS `Proba_1789-07-14T00:00:00.000000000`, CAST(`LogProba_1789-07-14T00:00:00.000000000` AS FLOAT) AS `LogProba_1789-07-14T00:00:00.000000000`, CAST(`Proba_1789-08-14T00:00:00.000000000` AS FLOAT) AS `Proba_1789-08-14T00:00:00.000000000`, CAST(`LogProba_1789-08-14T00:00:00.000000000` AS FLOAT) AS `LogProba_1789-08-14T00:00:00.000000000`, CAST(`Proba_1789-09-14T00:00:00.000000000` AS FLOAT) AS `Proba_1789-09-14T00:00:00.000000000`, CAST(`LogProba_1789-09-14T00:00:00.000000000` AS FLOAT) AS `LogProba_1789-09-14T00:00:00.000000000`, CAST(`Values`.`Decision` AS FLOAT) AS `Decision`, CAST(`Values`.`DecisionProba` AS FLOAT) AS `DecisionProba` 
FROM (SELECT 1 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 28 AS `count`, 1 AS `depth`, 0 AS `parent_id`, 1.0 AS `Proba_1789-07-14T00:00:00.000000000`, 0.0 AS `LogProba_1789-07-14T00:00:00.000000000`, 0.0 AS `Proba_1789-08-14T00:00:00.000000000`, -1.79769313486231e+308 AS `LogProba_1789-08-14T00:00:00.000000000`, 0.0 AS `Proba_1789-09-14T00:00:00.000000000`, -1.79769313486231e+308 AS `LogProba_1789-09-14T00:00:00.000000000`, '1789-07-14T00:00:00.000000000' AS `Decision`, 1.0 AS `DecisionProba` UNION ALL SELECT 5 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 1 AS `count`, 4 AS `depth`, 4 AS `parent_id`, 0.0 AS `Proba_1789-07-14T00:00:00.000000000`, -1.79769313486231e+308 AS `LogProba_1789-07-14T00:00:00.000000000`, 0.0 AS `Proba_1789-08-14T00:00:00.000000000`, -1.79769313486231e+308 AS `LogProba_1789-08-14T00:00:00.000000000`, 1.0 AS `Proba_1789-09-14T00:00:00.000000000`, 0.0 AS `LogProba_1789-09-14T00:00:00.000000000`, '1789-09-14T00:00:00.000000000' AS `Decision`, 1.0 AS `DecisionProba` UNION ALL SELECT 6 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 29 AS `count`, 4 AS `depth`, 4 AS `parent_id`, 0.0 AS `Proba_1789-07-14T00:00:00.000000000`, -1.79769313486231e+308 AS `LogProba_1789-07-14T00:00:00.000000000`, 1.0 AS `Proba_1789-08-14T00:00:00.000000000`, 0.0 AS `LogProba_1789-08-14T00:00:00.000000000`, 0.0 AS `Proba_1789-09-14T00:00:00.000000000`, -1.79769313486231e+308 AS `LogProba_1789-09-14T00:00:00.000000000`, '1789-08-14T00:00:00.000000000' AS `Decision`, 1.0 AS `DecisionProba` UNION ALL SELECT 8 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 2 AS `count`, 4 AS `depth`, 7 AS `parent_id`, 0.0 AS `Proba_1789-07-14T00:00:00.000000000`, -1.79769313486231e+308 AS `LogProba_1789-07-14T00:00:00.000000000`, 0.0 AS `Proba_1789-08-14T00:00:00.000000000`, -1.79769313486231e+308 AS `LogProba_1789-08-14T00:00:00.000000000`, 1.0 AS `Proba_1789-09-14T00:00:00.000000000`, 0.0 AS `LogProba_1789-09-14T00:00:00.000000000`, '1789-09-14T00:00:00.000000000' AS `Decision`, 1.0 AS `DecisionProba` UNION ALL SELECT 9 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 1 AS `count`, 4 AS `depth`, 7 AS `parent_id`, 0.0 AS `Proba_1789-07-14T00:00:00.000000000`, -1.79769313486231e+308 AS `LogProba_1789-07-14T00:00:00.000000000`, 1.0 AS `Proba_1789-08-14T00:00:00.000000000`, 0.0 AS `LogProba_1789-08-14T00:00:00.000000000`, 0.0 AS `Proba_1789-09-14T00:00:00.000000000`, -1.79769313486231e+308 AS `LogProba_1789-09-14T00:00:00.000000000`, '1789-08-14T00:00:00.000000000' AS `Decision`, 1.0 AS `DecisionProba` UNION ALL SELECT 10 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 29 AS `count`, 2 AS `depth`, 2 AS `parent_id`, 0.0 AS `Proba_1789-07-14T00:00:00.000000000`, -1.79769313486231e+308 AS `LogProba_1789-07-14T00:00:00.000000000`, 0.0 AS `Proba_1789-08-14T00:00:00.000000000`, -1.79769313486231e+308 AS `LogProba_1789-08-14T00:00:00.000000000`, 1.0 AS `Proba_1789-09-14T00:00:00.000000000`, 0.0 AS `LogProba_1789-09-14T00:00:00.000000000`, '1789-09-14T00:00:00.000000000' AS `Decision`, 1.0 AS `DecisionProba`) AS `Values`), 
`DT_Output_2` AS 
(SELECT `DT_node_lookup_2`.`KEY` AS `KEY`, `DT_node_lookup_2`.`node_id_2` AS `node_id_2`, `DT_node_data_2`.`node_id` AS `node_id`, `DT_node_data_2`.`feature` AS `feature`, `DT_node_data_2`.`threshold` AS `threshold`, `DT_node_data_2`.`count` AS `count`, `DT_node_data_2`.`depth` AS `depth`, `DT_node_data_2`.`parent_id` AS `parent_id`, `Proba_1789-07-14T00:00:00.000000000` AS `Proba_1789-07-14T00:00:00.000000000`, `LogProba_1789-07-14T00:00:00.000000000` AS `LogProba_1789-07-14T00:00:00.000000000`, `Proba_1789-08-14T00:00:00.000000000` AS `Proba_1789-08-14T00:00:00.000000000`, `LogProba_1789-08-14T00:00:00.000000000` AS `LogProba_1789-08-14T00:00:00.000000000`, `Proba_1789-09-14T00:00:00.000000000` AS `Proba_1789-09-14T00:00:00.000000000`, `LogProba_1789-09-14T00:00:00.000000000` AS `LogProba_1789-09-14T00:00:00.000000000`, `DT_node_data_2`.`Decision` AS `Decision`, `DT_node_data_2`.`DecisionProba` AS `DecisionProba` 
FROM `DT_node_lookup_2` LEFT OUTER JOIN `DT_node_data_2` ON `DT_node_lookup_2`.`node_id_2` = `DT_node_data_2`.`node_id`), 
`Calibrated_Model_2` AS 
(SELECT `DT_Output_2`.`KEY` AS `KEY`, CAST(NULL AS FLOAT) AS `Score_1789-07-14T00:00:00.000000000`, CAST(NULL AS FLOAT) AS `Score_1789-08-14T00:00:00.000000000`, CAST(NULL AS FLOAT) AS `Score_1789-09-14T00:00:00.000000000`, `Proba_1789-07-14T00:00:00.000000000` AS `Proba_1789-07-14T00:00:00.000000000`, `Proba_1789-08-14T00:00:00.000000000` AS `Proba_1789-08-14T00:00:00.000000000`, `Proba_1789-09-14T00:00:00.000000000` AS `Proba_1789-09-14T00:00:00.000000000`, `LogProba_1789-07-14T00:00:00.000000000` AS `LogProba_1789-07-14T00:00:00.000000000`, `LogProba_1789-08-14T00:00:00.000000000` AS `LogProba_1789-08-14T00:00:00.000000000`, `LogProba_1789-09-14T00:00:00.000000000` AS `LogProba_1789-09-14T00:00:00.000000000`, CAST(NULL AS BIGINT) AS `Decision`, CAST(NULL AS FLOAT) AS `DecisionProba`, coalesce(CAST(NULL AS FLOAT), `Proba_1789-07-14T00:00:00.000000000`) AS `ScoreOrProba_1789-07-14T00:00:00.000000000`, coalesce(CAST(NULL AS FLOAT), `Proba_1789-08-14T00:00:00.000000000`) AS `ScoreOrProba_1789-08-14T00:00:00.000000000`, coalesce(CAST(NULL AS FLOAT), `Proba_1789-09-14T00:00:00.000000000`) AS `ScoreOrProba_1789-09-14T00:00:00.000000000` 
FROM `DT_Output_2`), 
`sigmoid_calibration_2` AS 
(SELECT `Calibrated_Model_2`.`KEY` AS `KEY`, 1.0 / (1.0 + exp(CASE WHEN (CASE WHEN (-100.0 <= -(5.393626322122635 * `ScoreOrProba_1789-07-14T00:00:00.000000000` + -3.091045517303994)) THEN -(5.393626322122635 * `ScoreOrProba_1789-07-14T00:00:00.000000000` + -3.091045517303994) ELSE -100.0 END <= 100.0) THEN CASE WHEN (-100.0 <= -(5.393626322122635 * `ScoreOrProba_1789-07-14T00:00:00.000000000` + -3.091045517303994)) THEN -(5.393626322122635 * `ScoreOrProba_1789-07-14T00:00:00.000000000` + -3.091045517303994) ELSE -100.0 END ELSE 100.0 END)) AS `Proba_1789-07-14T00:00:00.000000000`, 1.0 / (1.0 + exp(CASE WHEN (CASE WHEN (-100.0 <= -(4.346958263204309 * `ScoreOrProba_1789-08-14T00:00:00.000000000` + -1.949062502016408)) THEN -(4.346958263204309 * `ScoreOrProba_1789-08-14T00:00:00.000000000` + -1.949062502016408) ELSE -100.0 END <= 100.0) THEN CASE WHEN (-100.0 <= -(4.346958263204309 * `ScoreOrProba_1789-08-14T00:00:00.000000000` + -1.949062502016408)) THEN -(4.346958263204309 * `ScoreOrProba_1789-08-14T00:00:00.000000000` + -1.949062502016408) ELSE -100.0 END ELSE 100.0 END)) AS `Proba_1789-08-14T00:00:00.000000000`, 1.0 / (1.0 + exp(CASE WHEN (CASE WHEN (-100.0 <= -(4.310987825487246 * `ScoreOrProba_1789-09-14T00:00:00.000000000` + -2.995735836256492)) THEN -(4.310987825487246 * `ScoreOrProba_1789-09-14T00:00:00.000000000` + -2.995735836256492) ELSE -100.0 END <= 100.0) THEN CASE WHEN (-100.0 <= -(4.310987825487246 * `ScoreOrProba_1789-09-14T00:00:00.000000000` + -2.995735836256492)) THEN -(4.310987825487246 * `ScoreOrProba_1789-09-14T00:00:00.000000000` + -2.995735836256492) ELSE -100.0 END ELSE 100.0 END)) AS `Proba_1789-09-14T00:00:00.000000000` 
FROM `Calibrated_Model_2`), 
`Normalized_Probas_2` AS 
(SELECT `sigmoid_calibration_2`.`KEY` AS `KEY`, `Proba_1789-07-14T00:00:00.000000000` / (`Proba_1789-07-14T00:00:00.000000000` + `Proba_1789-08-14T00:00:00.000000000` + `Proba_1789-09-14T00:00:00.000000000`) AS `Proba_1789-07-14T00:00:00.000000000`, `Proba_1789-08-14T00:00:00.000000000` / (`Proba_1789-07-14T00:00:00.000000000` + `Proba_1789-08-14T00:00:00.000000000` + `Proba_1789-09-14T00:00:00.000000000`) AS `Proba_1789-08-14T00:00:00.000000000`, `Proba_1789-09-14T00:00:00.000000000` / (`Proba_1789-07-14T00:00:00.000000000` + `Proba_1789-08-14T00:00:00.000000000` + `Proba_1789-09-14T00:00:00.000000000`) AS `Proba_1789-09-14T00:00:00.000000000` 
FROM `sigmoid_calibration_2`), 
`DT_node_lookup_3` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.`scaler_output_5` <= -0.5934344530105591) THEN 1 ELSE CASE WHEN (`ADS_sca_2_OUT`.`scaler_output_4` <= 0.5877821445465088) THEN CASE WHEN (`ADS_sca_2_OUT`.`scaler_output_5` <= 0.5400919914245605) THEN 4 ELSE CASE WHEN (`ADS_sca_2_OUT`.`scaler_output_3` <= 0.1451735943555832) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS_sca_2_OUT`.`scaler_output_3` <= -1.115544319152832) THEN CASE WHEN (`ADS_sca_2_OUT`.`scaler_output_4` <= 0.6462678909301758) THEN 10 ELSE 11 END ELSE 12 END END END AS `node_id_2` 
FROM `tmp_20180417042521_wuwir8_ads_sca_2_out` AS `ADS_sca_2_OUT`), 
`DT_node_data_3` AS 
(SELECT `Values`.`node_id` AS `node_id`, CAST(`Values`.`feature` AS FLOAT) AS `feature`, CAST(`Values`.`threshold` AS FLOAT) AS `threshold`, CAST(`Values`.`count` AS FLOAT) AS `count`, CAST(`Values`.`depth` AS FLOAT) AS `depth`, CAST(`Values`.`parent_id` AS FLOAT) AS `parent_id`, CAST(`Proba_1789-07-14T00:00:00.000000000` AS FLOAT) AS `Proba_1789-07-14T00:00:00.000000000`, CAST(`LogProba_1789-07-14T00:00:00.000000000` AS FLOAT) AS `LogProba_1789-07-14T00:00:00.000000000`, CAST(`Proba_1789-08-14T00:00:00.000000000` AS FLOAT) AS `Proba_1789-08-14T00:00:00.000000000`, CAST(`LogProba_1789-08-14T00:00:00.000000000` AS FLOAT) AS `LogProba_1789-08-14T00:00:00.000000000`, CAST(`Proba_1789-09-14T00:00:00.000000000` AS FLOAT) AS `Proba_1789-09-14T00:00:00.000000000`, CAST(`LogProba_1789-09-14T00:00:00.000000000` AS FLOAT) AS `LogProba_1789-09-14T00:00:00.000000000`, CAST(`Values`.`Decision` AS FLOAT) AS `Decision`, CAST(`Values`.`DecisionProba` AS FLOAT) AS `DecisionProba` 
FROM (SELECT 1 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 28 AS `count`, 1 AS `depth`, 0 AS `parent_id`, 1.0 AS `Proba_1789-07-14T00:00:00.000000000`, 0.0 AS `LogProba_1789-07-14T00:00:00.000000000`, 0.0 AS `Proba_1789-08-14T00:00:00.000000000`, -1.79769313486231e+308 AS `LogProba_1789-08-14T00:00:00.000000000`, 0.0 AS `Proba_1789-09-14T00:00:00.000000000`, -1.79769313486231e+308 AS `LogProba_1789-09-14T00:00:00.000000000`, '1789-07-14T00:00:00.000000000' AS `Decision`, 1.0 AS `DecisionProba` UNION ALL SELECT 4 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 28 AS `count`, 3 AS `depth`, 3 AS `parent_id`, 0.0 AS `Proba_1789-07-14T00:00:00.000000000`, -1.79769313486231e+308 AS `LogProba_1789-07-14T00:00:00.000000000`, 1.0 AS `Proba_1789-08-14T00:00:00.000000000`, 0.0 AS `LogProba_1789-08-14T00:00:00.000000000`, 0.0 AS `Proba_1789-09-14T00:00:00.000000000`, -1.79769313486231e+308 AS `LogProba_1789-09-14T00:00:00.000000000`, '1789-08-14T00:00:00.000000000' AS `Decision`, 1.0 AS `DecisionProba` UNION ALL SELECT 6 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 2 AS `count`, 4 AS `depth`, 5 AS `parent_id`, 0.0 AS `Proba_1789-07-14T00:00:00.000000000`, -1.79769313486231e+308 AS `LogProba_1789-07-14T00:00:00.000000000`, 0.0 AS `Proba_1789-08-14T00:00:00.000000000`, -1.79769313486231e+308 AS `LogProba_1789-08-14T00:00:00.000000000`, 1.0 AS `Proba_1789-09-14T00:00:00.000000000`, 0.0 AS `LogProba_1789-09-14T00:00:00.000000000`, '1789-09-14T00:00:00.000000000' AS `Decision`, 1.0 AS `DecisionProba` UNION ALL SELECT 7 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 1 AS `count`, 4 AS `depth`, 5 AS `parent_id`, 0.0 AS `Proba_1789-07-14T00:00:00.000000000`, -1.79769313486231e+308 AS `LogProba_1789-07-14T00:00:00.000000000`, 1.0 AS `Proba_1789-08-14T00:00:00.000000000`, 0.0 AS `LogProba_1789-08-14T00:00:00.000000000`, 0.0 AS `Proba_1789-09-14T00:00:00.000000000`, -1.79769313486231e+308 AS `LogProba_1789-09-14T00:00:00.000000000`, '1789-08-14T00:00:00.000000000' AS `Decision`, 1.0 AS `DecisionProba` UNION ALL SELECT 10 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 1 AS `count`, 4 AS `depth`, 9 AS `parent_id`, 0.0 AS `Proba_1789-07-14T00:00:00.000000000`, -1.79769313486231e+308 AS `LogProba_1789-07-14T00:00:00.000000000`, 1.0 AS `Proba_1789-08-14T00:00:00.000000000`, 0.0 AS `LogProba_1789-08-14T00:00:00.000000000`, 0.0 AS `Proba_1789-09-14T00:00:00.000000000`, -1.79769313486231e+308 AS `LogProba_1789-09-14T00:00:00.000000000`, '1789-08-14T00:00:00.000000000' AS `Decision`, 1.0 AS `DecisionProba` UNION ALL SELECT 11 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 2 AS `count`, 4 AS `depth`, 9 AS `parent_id`, 0.0 AS `Proba_1789-07-14T00:00:00.000000000`, -1.79769313486231e+308 AS `LogProba_1789-07-14T00:00:00.000000000`, 0.0 AS `Proba_1789-08-14T00:00:00.000000000`, -1.79769313486231e+308 AS `LogProba_1789-08-14T00:00:00.000000000`, 1.0 AS `Proba_1789-09-14T00:00:00.000000000`, 0.0 AS `LogProba_1789-09-14T00:00:00.000000000`, '1789-09-14T00:00:00.000000000' AS `Decision`, 1.0 AS `DecisionProba` UNION ALL SELECT 12 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 29 AS `count`, 3 AS `depth`, 8 AS `parent_id`, 0.0 AS `Proba_1789-07-14T00:00:00.000000000`, -1.79769313486231e+308 AS `LogProba_1789-07-14T00:00:00.000000000`, 0.0 AS `Proba_1789-08-14T00:00:00.000000000`, -1.79769313486231e+308 AS `LogProba_1789-08-14T00:00:00.000000000`, 1.0 AS `Proba_1789-09-14T00:00:00.000000000`, 0.0 AS `LogProba_1789-09-14T00:00:00.000000000`, '1789-09-14T00:00:00.000000000' AS `Decision`, 1.0 AS `DecisionProba`) AS `Values`), 
`DT_Output_3` AS 
(SELECT `DT_node_lookup_3`.`KEY` AS `KEY`, `DT_node_lookup_3`.`node_id_2` AS `node_id_2`, `DT_node_data_3`.`node_id` AS `node_id`, `DT_node_data_3`.`feature` AS `feature`, `DT_node_data_3`.`threshold` AS `threshold`, `DT_node_data_3`.`count` AS `count`, `DT_node_data_3`.`depth` AS `depth`, `DT_node_data_3`.`parent_id` AS `parent_id`, `Proba_1789-07-14T00:00:00.000000000` AS `Proba_1789-07-14T00:00:00.000000000`, `LogProba_1789-07-14T00:00:00.000000000` AS `LogProba_1789-07-14T00:00:00.000000000`, `Proba_1789-08-14T00:00:00.000000000` AS `Proba_1789-08-14T00:00:00.000000000`, `LogProba_1789-08-14T00:00:00.000000000` AS `LogProba_1789-08-14T00:00:00.000000000`, `Proba_1789-09-14T00:00:00.000000000` AS `Proba_1789-09-14T00:00:00.000000000`, `LogProba_1789-09-14T00:00:00.000000000` AS `LogProba_1789-09-14T00:00:00.000000000`, `DT_node_data_3`.`Decision` AS `Decision`, `DT_node_data_3`.`DecisionProba` AS `DecisionProba` 
FROM `DT_node_lookup_3` LEFT OUTER JOIN `DT_node_data_3` ON `DT_node_lookup_3`.`node_id_2` = `DT_node_data_3`.`node_id`), 
`Calibrated_Model_3` AS 
(SELECT `DT_Output_3`.`KEY` AS `KEY`, CAST(NULL AS FLOAT) AS `Score_1789-07-14T00:00:00.000000000`, CAST(NULL AS FLOAT) AS `Score_1789-08-14T00:00:00.000000000`, CAST(NULL AS FLOAT) AS `Score_1789-09-14T00:00:00.000000000`, `Proba_1789-07-14T00:00:00.000000000` AS `Proba_1789-07-14T00:00:00.000000000`, `Proba_1789-08-14T00:00:00.000000000` AS `Proba_1789-08-14T00:00:00.000000000`, `Proba_1789-09-14T00:00:00.000000000` AS `Proba_1789-09-14T00:00:00.000000000`, `LogProba_1789-07-14T00:00:00.000000000` AS `LogProba_1789-07-14T00:00:00.000000000`, `LogProba_1789-08-14T00:00:00.000000000` AS `LogProba_1789-08-14T00:00:00.000000000`, `LogProba_1789-09-14T00:00:00.000000000` AS `LogProba_1789-09-14T00:00:00.000000000`, CAST(NULL AS BIGINT) AS `Decision`, CAST(NULL AS FLOAT) AS `DecisionProba`, coalesce(CAST(NULL AS FLOAT), `Proba_1789-07-14T00:00:00.000000000`) AS `ScoreOrProba_1789-07-14T00:00:00.000000000`, coalesce(CAST(NULL AS FLOAT), `Proba_1789-08-14T00:00:00.000000000`) AS `ScoreOrProba_1789-08-14T00:00:00.000000000`, coalesce(CAST(NULL AS FLOAT), `Proba_1789-09-14T00:00:00.000000000`) AS `ScoreOrProba_1789-09-14T00:00:00.000000000` 
FROM `DT_Output_3`), 
`sigmoid_calibration_3` AS 
(SELECT `Calibrated_Model_3`.`KEY` AS `KEY`, 1.0 / (1.0 + exp(CASE WHEN (CASE WHEN (-100.0 <= -(5.3471066241328655 * `ScoreOrProba_1789-07-14T00:00:00.000000000` + -3.0445258104151054)) THEN -(5.3471066241328655 * `ScoreOrProba_1789-07-14T00:00:00.000000000` + -3.0445258104151054) ELSE -100.0 END <= 100.0) THEN CASE WHEN (-100.0 <= -(5.3471066241328655 * `ScoreOrProba_1789-07-14T00:00:00.000000000` + -3.0445258104151054)) THEN -(5.3471066241328655 * `ScoreOrProba_1789-07-14T00:00:00.000000000` + -3.0445258104151054) ELSE -100.0 END ELSE 100.0 END)) AS `Proba_1789-07-14T00:00:00.000000000`, 1.0 / (1.0 + exp(CASE WHEN (CASE WHEN (-100.0 <= -(4.295450701778823 * `ScoreOrProba_1789-08-14T00:00:00.000000000` + -1.8975549276218453)) THEN -(4.295450701778823 * `ScoreOrProba_1789-08-14T00:00:00.000000000` + -1.8975549276218453) ELSE -100.0 END <= 100.0) THEN CASE WHEN (-100.0 <= -(4.295450701778823 * `ScoreOrProba_1789-08-14T00:00:00.000000000` + -1.8975549276218453)) THEN -(4.295450701778823 * `ScoreOrProba_1789-08-14T00:00:00.000000000` + -1.8975549276218453) ELSE -100.0 END ELSE 100.0 END)) AS `Proba_1789-08-14T00:00:00.000000000`, 1.0 / (1.0 + exp(CASE WHEN (CASE WHEN (-100.0 <= -(4.214379795150796 * `ScoreOrProba_1789-09-14T00:00:00.000000000` + -2.99573366824266)) THEN -(4.214379795150796 * `ScoreOrProba_1789-09-14T00:00:00.000000000` + -2.99573366824266) ELSE -100.0 END <= 100.0) THEN CASE WHEN (-100.0 <= -(4.214379795150796 * `ScoreOrProba_1789-09-14T00:00:00.000000000` + -2.99573366824266)) THEN -(4.214379795150796 * `ScoreOrProba_1789-09-14T00:00:00.000000000` + -2.99573366824266) ELSE -100.0 END ELSE 100.0 END)) AS `Proba_1789-09-14T00:00:00.000000000` 
FROM `Calibrated_Model_3`), 
`Normalized_Probas_3` AS 
(SELECT `sigmoid_calibration_3`.`KEY` AS `KEY`, `Proba_1789-07-14T00:00:00.000000000` / (`Proba_1789-07-14T00:00:00.000000000` + `Proba_1789-08-14T00:00:00.000000000` + `Proba_1789-09-14T00:00:00.000000000`) AS `Proba_1789-07-14T00:00:00.000000000`, `Proba_1789-08-14T00:00:00.000000000` / (`Proba_1789-07-14T00:00:00.000000000` + `Proba_1789-08-14T00:00:00.000000000` + `Proba_1789-09-14T00:00:00.000000000`) AS `Proba_1789-08-14T00:00:00.000000000`, `Proba_1789-09-14T00:00:00.000000000` / (`Proba_1789-07-14T00:00:00.000000000` + `Proba_1789-08-14T00:00:00.000000000` + `Proba_1789-09-14T00:00:00.000000000`) AS `Proba_1789-09-14T00:00:00.000000000` 
FROM `sigmoid_calibration_3`)
 SELECT `CalProb_B0`.`KEY`, `Proba_1789-07-14T00:00:00.000000000`, `Proba_1789-08-14T00:00:00.000000000`, `Proba_1789-09-14T00:00:00.000000000` 
FROM (SELECT `CalProb_esu_0`.`KEY` AS `KEY`, `Proba_1789-07-14T00:00:00.000000000` AS `Proba_1789-07-14T00:00:00.000000000`, `Proba_1789-08-14T00:00:00.000000000` AS `Proba_1789-08-14T00:00:00.000000000`, `Proba_1789-09-14T00:00:00.000000000` AS `Proba_1789-09-14T00:00:00.000000000` 
FROM (SELECT `Normalized_Probas`.`KEY` AS `KEY`, `Proba_1789-07-14T00:00:00.000000000` AS `Proba_1789-07-14T00:00:00.000000000`, `Proba_1789-08-14T00:00:00.000000000` AS `Proba_1789-08-14T00:00:00.000000000`, `Proba_1789-09-14T00:00:00.000000000` AS `Proba_1789-09-14T00:00:00.000000000` 
FROM `Normalized_Probas` UNION ALL SELECT `Normalized_Probas_1`.`KEY` AS `KEY`, `Proba_1789-07-14T00:00:00.000000000` AS `Proba_1789-07-14T00:00:00.000000000`, `Proba_1789-08-14T00:00:00.000000000` AS `Proba_1789-08-14T00:00:00.000000000`, `Proba_1789-09-14T00:00:00.000000000` AS `Proba_1789-09-14T00:00:00.000000000` 
FROM `Normalized_Probas_1` UNION ALL SELECT `Normalized_Probas_2`.`KEY` AS `KEY`, `Proba_1789-07-14T00:00:00.000000000` AS `Proba_1789-07-14T00:00:00.000000000`, `Proba_1789-08-14T00:00:00.000000000` AS `Proba_1789-08-14T00:00:00.000000000`, `Proba_1789-09-14T00:00:00.000000000` AS `Proba_1789-09-14T00:00:00.000000000` 
FROM `Normalized_Probas_2` UNION ALL SELECT `Normalized_Probas_3`.`KEY` AS `KEY`, `Proba_1789-07-14T00:00:00.000000000` AS `Proba_1789-07-14T00:00:00.000000000`, `Proba_1789-08-14T00:00:00.000000000` AS `Proba_1789-08-14T00:00:00.000000000`, `Proba_1789-09-14T00:00:00.000000000` AS `Proba_1789-09-14T00:00:00.000000000` 
FROM `Normalized_Probas_3`) AS `CalProb_esu_0`) AS `CalProb_B0`

-- Code For temporary table tmp_20180417042521_oegekx_calprob_b0 part 2/2. Populate

SELECT * FROM `tmp_20180417042521_oegekx_calprob_b0`

-- Code For temporary table tmp_20180417042521_amg5p1_calprob_union part 1/2. Create 

CREATE TEMPORARY TABLE `tmp_20180417042521_amg5p1_calprob_union` STORED AS ORC AS SELECT `CalProb_Union`.`KEY`, `Proba_1789-07-14T00:00:00.000000000`, `Proba_1789-08-14T00:00:00.000000000`, `Proba_1789-09-14T00:00:00.000000000` 
FROM (SELECT `CalProb_EnsembleUnion`.`KEY` AS `KEY`, `Proba_1789-07-14T00:00:00.000000000` AS `Proba_1789-07-14T00:00:00.000000000`, `Proba_1789-08-14T00:00:00.000000000` AS `Proba_1789-08-14T00:00:00.000000000`, `Proba_1789-09-14T00:00:00.000000000` AS `Proba_1789-09-14T00:00:00.000000000` 
FROM (SELECT `CalProb_B0`.`KEY` AS `KEY`, `Proba_1789-07-14T00:00:00.000000000` AS `Proba_1789-07-14T00:00:00.000000000`, `Proba_1789-08-14T00:00:00.000000000` AS `Proba_1789-08-14T00:00:00.000000000`, `Proba_1789-09-14T00:00:00.000000000` AS `Proba_1789-09-14T00:00:00.000000000` 
FROM `tmp_20180417042521_oegekx_calprob_b0` AS `CalProb_B0`) AS `CalProb_EnsembleUnion`) AS `CalProb_Union`

-- Code For temporary table tmp_20180417042521_amg5p1_calprob_union part 2/2. Populate

SELECT * FROM `tmp_20180417042521_amg5p1_calprob_union`

-- Code For temporary table tmp_20180417042521_94kog6_calprob_avg part 1/2. Create 

CREATE TEMPORARY TABLE `tmp_20180417042521_94kog6_calprob_avg` STORED AS ORC AS SELECT `CalProb_avg`.`KEY`, `Proba_1789-07-14T00:00:00.000000000`, `Proba_1789-08-14T00:00:00.000000000`, `Proba_1789-09-14T00:00:00.000000000` 
FROM (SELECT `T`.`KEY` AS `KEY`, CAST(`Proba_1789-07-14T00:00:00.000000000` AS FLOAT) AS `Proba_1789-07-14T00:00:00.000000000`, CAST(`Proba_1789-08-14T00:00:00.000000000` AS FLOAT) AS `Proba_1789-08-14T00:00:00.000000000`, CAST(`Proba_1789-09-14T00:00:00.000000000` AS FLOAT) AS `Proba_1789-09-14T00:00:00.000000000` 
FROM (SELECT `CalProb_Union`.`KEY` AS `KEY`, avg(CAST(`Proba_1789-07-14T00:00:00.000000000` AS FLOAT)) AS `Proba_1789-07-14T00:00:00.000000000`, avg(CAST(`Proba_1789-08-14T00:00:00.000000000` AS FLOAT)) AS `Proba_1789-08-14T00:00:00.000000000`, avg(CAST(`Proba_1789-09-14T00:00:00.000000000` AS FLOAT)) AS `Proba_1789-09-14T00:00:00.000000000` 
FROM `tmp_20180417042521_amg5p1_calprob_union` AS `CalProb_Union` GROUP BY `CalProb_Union`.`KEY`) AS `T`) AS `CalProb_avg`

-- Code For temporary table tmp_20180417042521_94kog6_calprob_avg part 2/2. Populate

SELECT * FROM `tmp_20180417042521_94kog6_calprob_avg`

-- Model deployment code

WITH `orig_cte` AS 
(SELECT `CalProb_avg`.`KEY` AS `KEY`, CAST(NULL AS FLOAT) AS `Score_1789-07-14T00:00:00.000000000`, CAST(NULL AS FLOAT) AS `Score_1789-08-14T00:00:00.000000000`, CAST(NULL AS FLOAT) AS `Score_1789-09-14T00:00:00.000000000`, `Proba_1789-07-14T00:00:00.000000000` AS `Proba_1789-07-14T00:00:00.000000000`, `Proba_1789-08-14T00:00:00.000000000` AS `Proba_1789-08-14T00:00:00.000000000`, `Proba_1789-09-14T00:00:00.000000000` AS `Proba_1789-09-14T00:00:00.000000000`, CAST(NULL AS FLOAT) AS `LogProba_1789-07-14T00:00:00.000000000`, CAST(NULL AS FLOAT) AS `LogProba_1789-08-14T00:00:00.000000000`, CAST(NULL AS FLOAT) AS `LogProba_1789-09-14T00:00:00.000000000`, CAST(NULL AS BIGINT) AS `Decision`, CAST(NULL AS FLOAT) AS `DecisionProba` 
FROM `tmp_20180417042521_94kog6_calprob_avg` AS `CalProb_avg`), 
`score_class_union` AS 
(SELECT `scu`.`KEY_u` AS `KEY_u`, `scu`.`class` AS `class`, `scu`.`LogProba` AS `LogProba`, `scu`.`Proba` AS `Proba`, `scu`.`Score` AS `Score` 
FROM (SELECT `orig_cte`.`KEY` AS `KEY_u`, '1789-07-14T00:00:00.000000000' AS `class`, `LogProba_1789-07-14T00:00:00.000000000` AS `LogProba`, `Proba_1789-07-14T00:00:00.000000000` AS `Proba`, `Score_1789-07-14T00:00:00.000000000` AS `Score` 
FROM `orig_cte` UNION ALL SELECT `orig_cte`.`KEY` AS `KEY_u`, '1789-08-14T00:00:00.000000000' AS `class`, `LogProba_1789-08-14T00:00:00.000000000` AS `LogProba`, `Proba_1789-08-14T00:00:00.000000000` AS `Proba`, `Score_1789-08-14T00:00:00.000000000` AS `Score` 
FROM `orig_cte` UNION ALL SELECT `orig_cte`.`KEY` AS `KEY_u`, '1789-09-14T00:00:00.000000000' AS `class`, `LogProba_1789-09-14T00:00:00.000000000` AS `LogProba`, `Proba_1789-09-14T00:00:00.000000000` AS `Proba`, `Score_1789-09-14T00:00:00.000000000` AS `Score` 
FROM `orig_cte`) AS `scu`), 
`score_max` AS 
(SELECT `orig_cte`.`KEY` AS `KEY`, `Score_1789-07-14T00:00:00.000000000` AS `Score_1789-07-14T00:00:00.000000000`, `Score_1789-08-14T00:00:00.000000000` AS `Score_1789-08-14T00:00:00.000000000`, `Score_1789-09-14T00:00:00.000000000` AS `Score_1789-09-14T00:00:00.000000000`, `Proba_1789-07-14T00:00:00.000000000` AS `Proba_1789-07-14T00:00:00.000000000`, `Proba_1789-08-14T00:00:00.000000000` AS `Proba_1789-08-14T00:00:00.000000000`, `Proba_1789-09-14T00:00:00.000000000` AS `Proba_1789-09-14T00:00:00.000000000`, `LogProba_1789-07-14T00:00:00.000000000` AS `LogProba_1789-07-14T00:00:00.000000000`, `LogProba_1789-08-14T00:00:00.000000000` AS `LogProba_1789-08-14T00:00:00.000000000`, `LogProba_1789-09-14T00:00:00.000000000` AS `LogProba_1789-09-14T00:00:00.000000000`, `orig_cte`.`Decision` AS `Decision`, `orig_cte`.`DecisionProba` AS `DecisionProba`, `max_select`.`KEY_m` AS `KEY_m`, `max_select`.`max_Proba` AS `max_Proba` 
FROM `orig_cte` LEFT OUTER JOIN (SELECT `score_class_union`.`KEY_u` AS `KEY_m`, max(`score_class_union`.`Proba`) AS `max_Proba` 
FROM `score_class_union` GROUP BY `score_class_union`.`KEY_u`) AS `max_select` ON `orig_cte`.`KEY` = `max_select`.`KEY_m`), 
`union_with_max` AS 
(SELECT `score_class_union`.`KEY_u` AS `KEY_u`, `score_class_union`.`class` AS `class`, `score_class_union`.`LogProba` AS `LogProba`, `score_class_union`.`Proba` AS `Proba`, `score_class_union`.`Score` AS `Score`, `score_max`.`KEY` AS `KEY`, `Score_1789-07-14T00:00:00.000000000` AS `Score_1789-07-14T00:00:00.000000000`, `Score_1789-08-14T00:00:00.000000000` AS `Score_1789-08-14T00:00:00.000000000`, `Score_1789-09-14T00:00:00.000000000` AS `Score_1789-09-14T00:00:00.000000000`, `Proba_1789-07-14T00:00:00.000000000` AS `Proba_1789-07-14T00:00:00.000000000`, `Proba_1789-08-14T00:00:00.000000000` AS `Proba_1789-08-14T00:00:00.000000000`, `Proba_1789-09-14T00:00:00.000000000` AS `Proba_1789-09-14T00:00:00.000000000`, `LogProba_1789-07-14T00:00:00.000000000` AS `LogProba_1789-07-14T00:00:00.000000000`, `LogProba_1789-08-14T00:00:00.000000000` AS `LogProba_1789-08-14T00:00:00.000000000`, `LogProba_1789-09-14T00:00:00.000000000` AS `LogProba_1789-09-14T00:00:00.000000000`, `score_max`.`Decision` AS `Decision`, `score_max`.`DecisionProba` AS `DecisionProba`, `score_max`.`KEY_m` AS `KEY_m`, `score_max`.`max_Proba` AS `max_Proba` 
FROM `score_class_union` LEFT OUTER JOIN `score_max` ON `score_class_union`.`KEY_u` = `score_max`.`KEY`), 
`arg_max_cte` AS 
(SELECT `score_max`.`KEY` AS `KEY`, `Score_1789-07-14T00:00:00.000000000` AS `Score_1789-07-14T00:00:00.000000000`, `Score_1789-08-14T00:00:00.000000000` AS `Score_1789-08-14T00:00:00.000000000`, `Score_1789-09-14T00:00:00.000000000` AS `Score_1789-09-14T00:00:00.000000000`, `Proba_1789-07-14T00:00:00.000000000` AS `Proba_1789-07-14T00:00:00.000000000`, `Proba_1789-08-14T00:00:00.000000000` AS `Proba_1789-08-14T00:00:00.000000000`, `Proba_1789-09-14T00:00:00.000000000` AS `Proba_1789-09-14T00:00:00.000000000`, `LogProba_1789-07-14T00:00:00.000000000` AS `LogProba_1789-07-14T00:00:00.000000000`, `LogProba_1789-08-14T00:00:00.000000000` AS `LogProba_1789-08-14T00:00:00.000000000`, `LogProba_1789-09-14T00:00:00.000000000` AS `LogProba_1789-09-14T00:00:00.000000000`, `score_max`.`Decision` AS `Decision`, `score_max`.`DecisionProba` AS `DecisionProba`, `score_max`.`KEY_m` AS `KEY_m`, `score_max`.`max_Proba` AS `max_Proba`, `arg_max_t_Proba`.`KEY_Proba` AS `KEY_Proba`, `arg_max_t_Proba`.`arg_max_Proba` AS `arg_max_Proba` 
FROM `score_max` LEFT OUTER JOIN (SELECT `union_with_max`.`KEY` AS `KEY_Proba`, min(`union_with_max`.`class`) AS `arg_max_Proba` 
FROM `union_with_max` 
WHERE `union_with_max`.`Proba` >= `union_with_max`.`max_Proba` GROUP BY `union_with_max`.`KEY`) AS `arg_max_t_Proba` ON `score_max`.`KEY` = `arg_max_t_Proba`.`KEY_Proba`)
 SELECT `arg_max_cte`.`KEY` AS `KEY`, `Score_1789-07-14T00:00:00.000000000` AS `Score_1789-07-14T00:00:00.000000000`, `Score_1789-08-14T00:00:00.000000000` AS `Score_1789-08-14T00:00:00.000000000`, `Score_1789-09-14T00:00:00.000000000` AS `Score_1789-09-14T00:00:00.000000000`, `Proba_1789-07-14T00:00:00.000000000` AS `Proba_1789-07-14T00:00:00.000000000`, `Proba_1789-08-14T00:00:00.000000000` AS `Proba_1789-08-14T00:00:00.000000000`, `Proba_1789-09-14T00:00:00.000000000` AS `Proba_1789-09-14T00:00:00.000000000`, CASE WHEN (`Proba_1789-07-14T00:00:00.000000000` IS NULL OR `Proba_1789-07-14T00:00:00.000000000` > 0.0) THEN log(`Proba_1789-07-14T00:00:00.000000000`) ELSE -1.79769313486231e+308 END AS `LogProba_1789-07-14T00:00:00.000000000`, CASE WHEN (`Proba_1789-08-14T00:00:00.000000000` IS NULL OR `Proba_1789-08-14T00:00:00.000000000` > 0.0) THEN log(`Proba_1789-08-14T00:00:00.000000000`) ELSE -1.79769313486231e+308 END AS `LogProba_1789-08-14T00:00:00.000000000`, CASE WHEN (`Proba_1789-09-14T00:00:00.000000000` IS NULL OR `Proba_1789-09-14T00:00:00.000000000` > 0.0) THEN log(`Proba_1789-09-14T00:00:00.000000000`) ELSE -1.79769313486231e+308 END AS `LogProba_1789-09-14T00:00:00.000000000`, `arg_max_cte`.`arg_max_Proba` AS `Decision`, `arg_max_cte`.`max_Proba` AS `DecisionProba` 
FROM `arg_max_cte`