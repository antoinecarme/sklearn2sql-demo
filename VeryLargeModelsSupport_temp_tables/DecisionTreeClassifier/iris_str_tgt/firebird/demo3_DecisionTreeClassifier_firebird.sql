-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2018

-- Model : DecisionTreeClassifier
-- Dataset : iris_str_tgt
-- Database : firebird


-- This SQL code can contain one or more statements, to be executed in the order they appear in this file.



-- Model deployment code

WITH "DT_node_lookup" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_3" <= 0.800000011920929) THEN 1 ELSE CASE WHEN ("ADS"."Feature_2" <= 4.850000381469727) THEN CASE WHEN ("ADS"."Feature_3" <= 1.6500000953674316) THEN 4 ELSE CASE WHEN ("ADS"."Feature_1" <= 3.0999999046325684) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_3" <= 1.75) THEN CASE WHEN ("ADS"."Feature_2" <= 5.050000190734863) THEN CASE WHEN ("ADS"."Feature_1" <= 2.3499999046325684) THEN 11 ELSE 12 END ELSE 13 END ELSE 14 END END END AS node_id_2 
FROM iris_str_tgt AS "ADS"), 
"DT_node_data" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values".threshold AS FLOAT) AS threshold, CAST("Values"."count" AS FLOAT) AS "count", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Proba_CLASS_0" AS FLOAT) AS "Proba_CLASS_0", CAST("Values"."LogProba_CLASS_0" AS FLOAT) AS "LogProba_CLASS_0", CAST("Values"."Proba_CLASS_1" AS FLOAT) AS "Proba_CLASS_1", CAST("Values"."LogProba_CLASS_1" AS FLOAT) AS "LogProba_CLASS_1", CAST("Values"."Proba_CLASS_2" AS FLOAT) AS "Proba_CLASS_2", CAST("Values"."LogProba_CLASS_2" AS FLOAT) AS "LogProba_CLASS_2", CAST("Values"."Decision" AS FLOAT) AS "Decision", CAST("Values"."DecisionProba" AS FLOAT) AS "DecisionProba" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 37 AS "count", 1 AS depth, 0 AS parent_id, 1.0 AS "Proba_CLASS_0", 0.0 AS "LogProba_CLASS_0", 0.0 AS "Proba_CLASS_1", -1e+20 AS "LogProba_CLASS_1", 0.0 AS "Proba_CLASS_2", -1e+20 AS "LogProba_CLASS_2", 'CLASS_0' AS "Decision", 1.0 AS "DecisionProba" FROM rdb$database UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 36 AS "count", 3 AS depth, 3 AS parent_id, 0.0 AS "Proba_CLASS_0", -1e+20 AS "LogProba_CLASS_0", 1.0 AS "Proba_CLASS_1", 0.0 AS "LogProba_CLASS_1", 0.0 AS "Proba_CLASS_2", -1e+20 AS "LogProba_CLASS_2", 'CLASS_1' AS "Decision", 1.0 AS "DecisionProba" FROM rdb$database UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS "count", 4 AS depth, 5 AS parent_id, 0.0 AS "Proba_CLASS_0", -1e+20 AS "LogProba_CLASS_0", 0.0 AS "Proba_CLASS_1", -1e+20 AS "LogProba_CLASS_1", 1.0 AS "Proba_CLASS_2", 0.0 AS "LogProba_CLASS_2", 'CLASS_2' AS "Decision", 1.0 AS "DecisionProba" FROM rdb$database UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 4 AS depth, 5 AS parent_id, 0.0 AS "Proba_CLASS_0", -1e+20 AS "LogProba_CLASS_0", 1.0 AS "Proba_CLASS_1", 0.0 AS "LogProba_CLASS_1", 0.0 AS "Proba_CLASS_2", -1e+20 AS "LogProba_CLASS_2", 'CLASS_1' AS "Decision", 1.0 AS "DecisionProba" FROM rdb$database UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS "count", 5 AS depth, 10 AS parent_id, 0.0 AS "Proba_CLASS_0", -1e+20 AS "LogProba_CLASS_0", 0.0 AS "Proba_CLASS_1", -1e+20 AS "LogProba_CLASS_1", 1.0 AS "Proba_CLASS_2", 0.0 AS "LogProba_CLASS_2", 'CLASS_2' AS "Decision", 1.0 AS "DecisionProba" FROM rdb$database UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS "count", 5 AS depth, 10 AS parent_id, 0.0 AS "Proba_CLASS_0", -1e+20 AS "LogProba_CLASS_0", 1.0 AS "Proba_CLASS_1", 0.0 AS "LogProba_CLASS_1", 0.0 AS "Proba_CLASS_2", -1e+20 AS "LogProba_CLASS_2", 'CLASS_1' AS "Decision", 1.0 AS "DecisionProba" FROM rdb$database UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS "count", 4 AS depth, 9 AS parent_id, 0.0 AS "Proba_CLASS_0", -1e+20 AS "LogProba_CLASS_0", 0.0 AS "Proba_CLASS_1", -1e+20 AS "LogProba_CLASS_1", 1.0 AS "Proba_CLASS_2", 0.0 AS "LogProba_CLASS_2", 'CLASS_2' AS "Decision", 1.0 AS "DecisionProba" FROM rdb$database UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 37 AS "count", 3 AS depth, 8 AS parent_id, 0.0 AS "Proba_CLASS_0", -1e+20 AS "LogProba_CLASS_0", 0.0 AS "Proba_CLASS_1", -1e+20 AS "LogProba_CLASS_1", 1.0 AS "Proba_CLASS_2", 0.0 AS "LogProba_CLASS_2", 'CLASS_2' AS "Decision", 1.0 AS "DecisionProba" FROM rdb$database) AS "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".node_id AS node_id, "DT_node_data".feature AS feature, "DT_node_data".threshold AS threshold, "DT_node_data"."count" AS "count", "DT_node_data".depth AS depth, "DT_node_data".parent_id AS parent_id, "DT_node_data"."Proba_CLASS_0" AS "Proba_CLASS_0", "DT_node_data"."LogProba_CLASS_0" AS "LogProba_CLASS_0", "DT_node_data"."Proba_CLASS_1" AS "Proba_CLASS_1", "DT_node_data"."LogProba_CLASS_1" AS "LogProba_CLASS_1", "DT_node_data"."Proba_CLASS_2" AS "Proba_CLASS_2", "DT_node_data"."LogProba_CLASS_2" AS "LogProba_CLASS_2", "DT_node_data"."Decision" AS "Decision", "DT_node_data"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".node_id)
 SELECT "DT_Output"."KEY" AS "KEY", CAST(NULL AS FLOAT) AS "Score_CLASS_0", CAST(NULL AS FLOAT) AS "Score_CLASS_1", CAST(NULL AS FLOAT) AS "Score_CLASS_2", "DT_Output"."Proba_CLASS_0" AS "Proba_CLASS_0", "DT_Output"."Proba_CLASS_1" AS "Proba_CLASS_1", "DT_Output"."Proba_CLASS_2" AS "Proba_CLASS_2", "DT_Output"."LogProba_CLASS_0" AS "LogProba_CLASS_0", "DT_Output"."LogProba_CLASS_1" AS "LogProba_CLASS_1", "DT_Output"."LogProba_CLASS_2" AS "LogProba_CLASS_2", "DT_Output"."Decision" AS "Decision", "DT_Output"."DecisionProba" AS "DecisionProba" 
FROM "DT_Output"