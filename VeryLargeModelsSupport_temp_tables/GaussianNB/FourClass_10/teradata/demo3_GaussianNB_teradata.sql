-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2018

-- Model : GaussianNB
-- Dataset : FourClass_10
-- Database : teradata


-- This SQL code can contain one or more statements, to be executed in the order they appear in this file.



-- Model deployment code

WITH "RawScores" AS 
(SELECT "ADS"."KEY" AS "KEY", CAST(NULL AS FLOAT) AS "LogProba_0", CAST(NULL AS FLOAT) AS "Proba_0", -1.491654876777717 + (-0.5 * 2.279568234557392 - (0.5 * (CAST("ADS"."Feature_0" AS FLOAT) - 0.121972324020858) * (CAST("ADS"."Feature_0" AS FLOAT) - 0.121972324020858)) / 1.5553353291646597) + (-0.5 * 2.09872681504149 - (0.5 * (CAST("ADS"."Feature_1" AS FLOAT) - -0.204209064143351) * (CAST("ADS"."Feature_1" AS FLOAT) - -0.204209064143351)) / 1.2980326196044893) + (-0.5 * 1.950790204308714 - (0.5 * (CAST("ADS"."Feature_2" AS FLOAT) - -0.178668022966001) * (CAST("ADS"."Feature_2" AS FLOAT) - -0.178668022966001)) / 1.119534683590659) + (-0.5 * 1.623957973054578 - (0.5 * (CAST("ADS"."Feature_3" AS FLOAT) - -0.338489162809258) * (CAST("ADS"."Feature_3" AS FLOAT) - -0.338489162809258)) / 0.807413707514524) + (-0.5 * 1.643217572054308 - (0.5 * (CAST("ADS"."Feature_4" AS FLOAT) - 0.692046433348698) * (CAST("ADS"."Feature_4" AS FLOAT) - 0.692046433348698)) / 0.8231148856087814) + (-0.5 * 0.590680328526258 - (0.5 * (CAST("ADS"."Feature_5" AS FLOAT) - -0.232889543871415) * (CAST("ADS"."Feature_5" AS FLOAT) - -0.232889543871415)) / 0.2873090716734153) + (-0.5 * 0.599257579450034 - (0.5 * (CAST("ADS"."Feature_6" AS FLOAT) - 0.148905014543642) * (CAST("ADS"."Feature_6" AS FLOAT) - 0.148905014543642)) / 0.28978399250919723) + (-0.5 * 2.512235856273208 - (0.5 * (CAST("ADS"."Feature_7" AS FLOAT) - 0.344261465699858) * (CAST("ADS"."Feature_7" AS FLOAT) - 0.344261465699858)) / 1.9627740217881728) + (-0.5 * 1.978404583779192 - (0.5 * (CAST("ADS"."Feature_8" AS FLOAT) - 0.481062539936806) * (CAST("ADS"."Feature_8" AS FLOAT) - 0.481062539936806)) / 1.150880748340327) + (-0.5 * 2.01066944059928 - (0.5 * (CAST("ADS"."Feature_9" AS FLOAT) - 0.210725722984837) * (CAST("ADS"."Feature_9" AS FLOAT) - 0.210725722984837)) / 1.1886192914192353) AS "Score_0", CAST(NULL AS FLOAT) AS "LogProba_1", CAST(NULL AS FLOAT) AS "Proba_1", -1.38629436111989 + (-0.5 * 1.542361750008069 - (0.5 * (CAST("ADS"."Feature_0" AS FLOAT) - -0.055804457113659) * (CAST("ADS"."Feature_0" AS FLOAT) - -0.055804457113659)) / 0.7441480169661928) + (-0.5 * 1.90478501360188 - (0.5 * (CAST("ADS"."Feature_1" AS FLOAT) - 1.116424156345659) * (CAST("ADS"."Feature_1" AS FLOAT) - 1.116424156345659)) / 1.0691970510541402) + (-0.5 * 2.598587528449008 - (0.5 * (CAST("ADS"."Feature_2" AS FLOAT) - 1.232091266694883) * (CAST("ADS"."Feature_2" AS FLOAT) - 1.232091266694883)) / 2.139795924363826) + (-0.5 * 2.879063726678674 - (0.5 * (CAST("ADS"."Feature_3" AS FLOAT) - 2.856201176409192) * (CAST("ADS"."Feature_3" AS FLOAT) - 2.856201176409192)) / 2.83257632656276) + (-0.5 * 2.900378180548634 - (0.5 * (CAST("ADS"."Feature_4" AS FLOAT) - -0.194677735407704) * (CAST("ADS"."Feature_4" AS FLOAT) - -0.194677735407704)) / 2.893599168042484) + (-0.5 * 1.723554939658442 - (0.5 * (CAST("ADS"."Feature_5" AS FLOAT) - -0.308859790178418) * (CAST("ADS"."Feature_5" AS FLOAT) - -0.308859790178418)) / 0.8919705820140024) + (-0.5 * 1.461038700407599 - (0.5 * (CAST("ADS"."Feature_6" AS FLOAT) - -1.209000909324474) * (CAST("ADS"."Feature_6" AS FLOAT) - -1.209000909324474)) / 0.6860269502139601) + (-0.5 * 1.962818059540812 - (0.5 * (CAST("ADS"."Feature_7" AS FLOAT) - 1.225433769419759) * (CAST("ADS"."Feature_7" AS FLOAT) - 1.225433769419759)) / 1.1330815914976922) + (-0.5 * 1.952223575336184 - (0.5 * (CAST("ADS"."Feature_8" AS FLOAT) - -0.216885934061671) * (CAST("ADS"."Feature_8" AS FLOAT) - -0.216885934061671)) / 1.121140542791448) + (-0.5 * 1.631880706651073 - (0.5 * (CAST("ADS"."Feature_9" AS FLOAT) - 0.046430005146285) * (CAST("ADS"."Feature_9" AS FLOAT) - 0.046430005146285)) / 0.8138360388374362) AS "Score_1", CAST(NULL AS FLOAT) AS "LogProba_2", CAST(NULL AS FLOAT) AS "Proba_2", -1.38629436111989 + (-0.5 * 1.731467302427601 - (0.5 * (CAST("ADS"."Feature_0" AS FLOAT) - 0.040527414301685) * (CAST("ADS"."Feature_0" AS FLOAT) - 0.040527414301685)) / 0.8990561717501684) + (-0.5 * 2.617399528512052 - (0.5 * (CAST("ADS"."Feature_1" AS FLOAT) - -0.201696366889481) * (CAST("ADS"."Feature_1" AS FLOAT) - -0.201696366889481)) / 2.1804307785140757) + (-0.5 * 2.100742073582641 - (0.5 * (CAST("ADS"."Feature_2" AS FLOAT) - -1.065660222353177) * (CAST("ADS"."Feature_2" AS FLOAT) - -1.065660222353177)) / 1.3006511285278701) + (-0.5 * 3.674253658479502 - (0.5 * (CAST("ADS"."Feature_3" AS FLOAT) - -0.933951975193258) * (CAST("ADS"."Feature_3" AS FLOAT) - -0.933951975193258)) / 6.273764618376192) + (-0.5 * 2.271132297204806 - (0.5 * (CAST("ADS"."Feature_4" AS FLOAT) - -0.92738539488336) * (CAST("ADS"."Feature_4" AS FLOAT) - -0.92738539488336)) / 1.542269805220253) + (-0.5 * 2.135237414349638 - (0.5 * (CAST("ADS"."Feature_5" AS FLOAT) - 0.180750853837477) * (CAST("ADS"."Feature_5" AS FLOAT) - 0.180750853837477)) / 1.3463003486072516) + (-0.5 * 1.992831738943699 - (0.5 * (CAST("ADS"."Feature_6" AS FLOAT) - 0.336730803418236) * (CAST("ADS"."Feature_6" AS FLOAT) - 0.336730803418236)) / 1.1676050353285106) + (-0.5 * 3.200238433738506 - (0.5 * (CAST("ADS"."Feature_7" AS FLOAT) - -0.040979081558846) * (CAST("ADS"."Feature_7" AS FLOAT) - -0.040979081558846)) / 3.905404516616854) + (-0.5 * 1.115688228971543 - (0.5 * (CAST("ADS"."Feature_8" AS FLOAT) - 0.269658006083996) * (CAST("ADS"."Feature_8" AS FLOAT) - 0.269658006083996)) / 0.48568799956621594) + (-0.5 * 1.777490357472133 - (0.5 * (CAST("ADS"."Feature_9" AS FLOAT) - 0.141874980635683) * (CAST("ADS"."Feature_9" AS FLOAT) - 0.141874980635683)) / 0.9414004152308103) AS "Score_2", CAST(NULL AS FLOAT) AS "LogProba_3", CAST(NULL AS FLOAT) AS "Proba_3", -1.290984181315566 + (-0.5 * 1.475491102096098 - (0.5 * (CAST("ADS"."Feature_0" AS FLOAT) - -0.100101406053577) * (CAST("ADS"."Feature_0" AS FLOAT) - -0.100101406053577)) / 0.6960136795512221) + (-0.5 * 1.494300738534976 - (0.5 * (CAST("ADS"."Feature_1" AS FLOAT) - 1.572684776867062) * (CAST("ADS"."Feature_1" AS FLOAT) - 1.572684776867062)) / 0.7092293451100524) + (-0.5 * 2.334372261075296 - (0.5 * (CAST("ADS"."Feature_2" AS FLOAT) - 0.150504658168055) * (CAST("ADS"."Feature_2" AS FLOAT) - 0.150504658168055)) / 1.6429529379426115) + (-0.5 * 2.91657888591792 - (0.5 * (CAST("ADS"."Feature_3" AS FLOAT) - 1.333017153521842) * (CAST("ADS"."Feature_3" AS FLOAT) - 1.333017153521842)) / 2.9408593057393206) + (-0.5 * 1.4361016920836 - (0.5 * (CAST("ADS"."Feature_4" AS FLOAT) - -1.120734549744089) * (CAST("ADS"."Feature_4" AS FLOAT) - -1.120734549744089)) / 0.6691310328199525) + (-0.5 * 1.704038984724394 - (0.5 * (CAST("ADS"."Feature_5" AS FLOAT) - 0.152478854097818) * (CAST("ADS"."Feature_5" AS FLOAT) - 0.152478854097818)) / 0.8747316882183717) + (-0.5 * 1.224657730722691 - (0.5 * (CAST("ADS"."Feature_6" AS FLOAT) - -0.412825101797143) * (CAST("ADS"."Feature_6" AS FLOAT) - -0.412825101797143)) / 0.5416044528896263) + (-0.5 * 1.901957846682802 - (0.5 * (CAST("ADS"."Feature_7" AS FLOAT) - -0.824909406091562) * (CAST("ADS"."Feature_7" AS FLOAT) - -0.824909406091562)) / 1.0661785214754689) + (-0.5 * 2.508813000021146 - (0.5 * (CAST("ADS"."Feature_8" AS FLOAT) - -0.378046056889971) * (CAST("ADS"."Feature_8" AS FLOAT) - -0.378046056889971)) / 1.9560672132251689) + (-0.5 * 1.654951038394506 - (0.5 * (CAST("ADS"."Feature_9" AS FLOAT) - 0.074850109232539) * (CAST("ADS"."Feature_9" AS FLOAT) - 0.074850109232539)) / 0.8328297595291985) AS "Score_3" 
FROM "FourClass_10" AS "ADS"), 
orig_cte AS 
(SELECT "RawScores"."KEY" AS "KEY", "RawScores"."Score_0" AS "Score_0", "RawScores"."Score_1" AS "Score_1", "RawScores"."Score_2" AS "Score_2", "RawScores"."Score_3" AS "Score_3", "RawScores"."Proba_0" AS "Proba_0", "RawScores"."Proba_1" AS "Proba_1", "RawScores"."Proba_2" AS "Proba_2", "RawScores"."Proba_3" AS "Proba_3", "RawScores"."LogProba_0" AS "LogProba_0", "RawScores"."LogProba_1" AS "LogProba_1", "RawScores"."LogProba_2" AS "LogProba_2", "RawScores"."LogProba_3" AS "LogProba_3", CAST(NULL AS BIGINT) AS "Decision", CAST(NULL AS FLOAT) AS "DecisionProba" 
FROM "RawScores"), 
score_class_union AS 
(SELECT scu."KEY_u" AS "KEY_u", scu."class" AS "class", scu."LogProba" AS "LogProba", scu."Proba" AS "Proba", scu."Score" AS "Score" 
FROM (SELECT orig_cte."KEY" AS "KEY_u", 0 AS "class", orig_cte."LogProba_0" AS "LogProba", orig_cte."Proba_0" AS "Proba", orig_cte."Score_0" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 1 AS "class", orig_cte."LogProba_1" AS "LogProba", orig_cte."Proba_1" AS "Proba", orig_cte."Score_1" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 2 AS "class", orig_cte."LogProba_2" AS "LogProba", orig_cte."Proba_2" AS "Proba", orig_cte."Score_2" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 3 AS "class", orig_cte."LogProba_3" AS "LogProba", orig_cte."Proba_3" AS "Proba", orig_cte."Score_3" AS "Score" 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte."KEY" AS "KEY", orig_cte."Score_0" AS "Score_0", orig_cte."Score_1" AS "Score_1", orig_cte."Score_2" AS "Score_2", orig_cte."Score_3" AS "Score_3", orig_cte."Proba_0" AS "Proba_0", orig_cte."Proba_1" AS "Proba_1", orig_cte."Proba_2" AS "Proba_2", orig_cte."Proba_3" AS "Proba_3", orig_cte."LogProba_0" AS "LogProba_0", orig_cte."LogProba_1" AS "LogProba_1", orig_cte."LogProba_2" AS "LogProba_2", orig_cte."LogProba_3" AS "LogProba_3", orig_cte."Decision" AS "Decision", orig_cte."DecisionProba" AS "DecisionProba", max_select."KEY_m" AS "KEY_m", max_select."max_Score" AS "max_Score" 
FROM orig_cte LEFT OUTER JOIN (SELECT score_class_union."KEY_u" AS "KEY_m", max(score_class_union."Score") AS "max_Score" 
FROM score_class_union GROUP BY score_class_union."KEY_u") AS max_select ON orig_cte."KEY" = max_select."KEY_m"), 
score_soft_max_deltas AS 
(SELECT score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Score_2" AS "Score_2", score_max."Score_3" AS "Score_3", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."Proba_2" AS "Proba_2", score_max."Proba_3" AS "Proba_3", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."LogProba_2" AS "LogProba_2", score_max."LogProba_3" AS "LogProba_3", score_max."Decision" AS "Decision", score_max."DecisionProba" AS "DecisionProba", score_max."KEY_m" AS "KEY_m", score_max."max_Score" AS "max_Score", exp(score_max."Score_0" - score_max."max_Score") AS "exp_delta_Score_0", exp(score_max."Score_1" - score_max."max_Score") AS "exp_delta_Score_1", exp(score_max."Score_2" - score_max."max_Score") AS "exp_delta_Score_2", exp(score_max."Score_3" - score_max."max_Score") AS "exp_delta_Score_3" 
FROM score_max), 
score_class_union_soft AS 
(SELECT soft_scu."KEY" AS "KEY", soft_scu."class" AS "class", soft_scu."exp_delta_Score" AS "exp_delta_Score" 
FROM (SELECT score_soft_max_deltas."KEY" AS "KEY", 0 AS "class", score_soft_max_deltas."exp_delta_Score_0" AS "exp_delta_Score" 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas."KEY" AS "KEY", 1 AS "class", score_soft_max_deltas."exp_delta_Score_1" AS "exp_delta_Score" 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas."KEY" AS "KEY", 2 AS "class", score_soft_max_deltas."exp_delta_Score_2" AS "exp_delta_Score" 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas."KEY" AS "KEY", 3 AS "class", score_soft_max_deltas."exp_delta_Score_3" AS "exp_delta_Score" 
FROM score_soft_max_deltas) AS soft_scu), 
score_soft_max AS 
(SELECT score_soft_max_deltas."KEY" AS "KEY", score_soft_max_deltas."Score_0" AS "Score_0", score_soft_max_deltas."Score_1" AS "Score_1", score_soft_max_deltas."Score_2" AS "Score_2", score_soft_max_deltas."Score_3" AS "Score_3", score_soft_max_deltas."Proba_0" AS "Proba_0", score_soft_max_deltas."Proba_1" AS "Proba_1", score_soft_max_deltas."Proba_2" AS "Proba_2", score_soft_max_deltas."Proba_3" AS "Proba_3", score_soft_max_deltas."LogProba_0" AS "LogProba_0", score_soft_max_deltas."LogProba_1" AS "LogProba_1", score_soft_max_deltas."LogProba_2" AS "LogProba_2", score_soft_max_deltas."LogProba_3" AS "LogProba_3", score_soft_max_deltas."Decision" AS "Decision", score_soft_max_deltas."DecisionProba" AS "DecisionProba", score_soft_max_deltas."KEY_m" AS "KEY_m", score_soft_max_deltas."max_Score" AS "max_Score", score_soft_max_deltas."exp_delta_Score_0" AS "exp_delta_Score_0", score_soft_max_deltas."exp_delta_Score_1" AS "exp_delta_Score_1", score_soft_max_deltas."exp_delta_Score_2" AS "exp_delta_Score_2", score_soft_max_deltas."exp_delta_Score_3" AS "exp_delta_Score_3", sum_exp_t."KEY_sum" AS "KEY_sum", sum_exp_t."sum_ExpDeltaScore" AS "sum_ExpDeltaScore" 
FROM score_soft_max_deltas LEFT OUTER JOIN (SELECT score_class_union_soft."KEY" AS "KEY_sum", sum(score_class_union_soft."exp_delta_Score") AS "sum_ExpDeltaScore" 
FROM score_class_union_soft GROUP BY score_class_union_soft."KEY") AS sum_exp_t ON score_soft_max_deltas."KEY" = sum_exp_t."KEY_sum"), 
union_with_max AS 
(SELECT score_class_union."KEY_u" AS "KEY_u", score_class_union."class" AS "class", score_class_union."LogProba" AS "LogProba", score_class_union."Proba" AS "Proba", score_class_union."Score" AS "Score", score_soft_max."KEY" AS "KEY", score_soft_max."Score_0" AS "Score_0", score_soft_max."Score_1" AS "Score_1", score_soft_max."Score_2" AS "Score_2", score_soft_max."Score_3" AS "Score_3", score_soft_max."Proba_0" AS "Proba_0", score_soft_max."Proba_1" AS "Proba_1", score_soft_max."Proba_2" AS "Proba_2", score_soft_max."Proba_3" AS "Proba_3", score_soft_max."LogProba_0" AS "LogProba_0", score_soft_max."LogProba_1" AS "LogProba_1", score_soft_max."LogProba_2" AS "LogProba_2", score_soft_max."LogProba_3" AS "LogProba_3", score_soft_max."Decision" AS "Decision", score_soft_max."DecisionProba" AS "DecisionProba", score_soft_max."KEY_m" AS "KEY_m", score_soft_max."max_Score" AS "max_Score", score_soft_max."exp_delta_Score_0" AS "exp_delta_Score_0", score_soft_max."exp_delta_Score_1" AS "exp_delta_Score_1", score_soft_max."exp_delta_Score_2" AS "exp_delta_Score_2", score_soft_max."exp_delta_Score_3" AS "exp_delta_Score_3", score_soft_max."KEY_sum" AS "KEY_sum", score_soft_max."sum_ExpDeltaScore" AS "sum_ExpDeltaScore" 
FROM score_class_union LEFT OUTER JOIN score_soft_max ON score_class_union."KEY_u" = score_soft_max."KEY"), 
arg_max_cte AS 
(SELECT score_soft_max."KEY" AS "KEY", score_soft_max."Score_0" AS "Score_0", score_soft_max."Score_1" AS "Score_1", score_soft_max."Score_2" AS "Score_2", score_soft_max."Score_3" AS "Score_3", score_soft_max."Proba_0" AS "Proba_0", score_soft_max."Proba_1" AS "Proba_1", score_soft_max."Proba_2" AS "Proba_2", score_soft_max."Proba_3" AS "Proba_3", score_soft_max."LogProba_0" AS "LogProba_0", score_soft_max."LogProba_1" AS "LogProba_1", score_soft_max."LogProba_2" AS "LogProba_2", score_soft_max."LogProba_3" AS "LogProba_3", score_soft_max."Decision" AS "Decision", score_soft_max."DecisionProba" AS "DecisionProba", score_soft_max."KEY_m" AS "KEY_m", score_soft_max."max_Score" AS "max_Score", score_soft_max."exp_delta_Score_0" AS "exp_delta_Score_0", score_soft_max."exp_delta_Score_1" AS "exp_delta_Score_1", score_soft_max."exp_delta_Score_2" AS "exp_delta_Score_2", score_soft_max."exp_delta_Score_3" AS "exp_delta_Score_3", score_soft_max."KEY_sum" AS "KEY_sum", score_soft_max."sum_ExpDeltaScore" AS "sum_ExpDeltaScore", "arg_max_t_Score"."KEY_Score" AS "KEY_Score", "arg_max_t_Score"."arg_max_Score" AS "arg_max_Score", soft_max_comp."KEY_softmax" AS "KEY_softmax", soft_max_comp."SoftProba_0" AS "SoftProba_0", soft_max_comp."SoftProba_1" AS "SoftProba_1", soft_max_comp."SoftProba_2" AS "SoftProba_2", soft_max_comp."SoftProba_3" AS "SoftProba_3" 
FROM score_soft_max LEFT OUTER JOIN (SELECT union_with_max."KEY" AS "KEY_Score", min(union_with_max."class") AS "arg_max_Score" 
FROM union_with_max 
WHERE union_with_max."max_Score" <= union_with_max."Score" GROUP BY union_with_max."KEY") AS "arg_max_t_Score" ON score_soft_max."KEY" = "arg_max_t_Score"."KEY_Score" LEFT OUTER JOIN (SELECT score_soft_max."KEY" AS "KEY_softmax", score_soft_max."exp_delta_Score_0" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_0", score_soft_max."exp_delta_Score_1" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_1", score_soft_max."exp_delta_Score_2" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_2", score_soft_max."exp_delta_Score_3" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_3" 
FROM score_soft_max) AS soft_max_comp ON soft_max_comp."KEY_softmax" = "arg_max_t_Score"."KEY_Score")
 SELECT arg_max_cte."KEY" AS "KEY", CAST(NULL AS FLOAT) AS "Score_0", CAST(NULL AS FLOAT) AS "Score_1", CAST(NULL AS FLOAT) AS "Score_2", CAST(NULL AS FLOAT) AS "Score_3", arg_max_cte."SoftProba_0" AS "Proba_0", arg_max_cte."SoftProba_1" AS "Proba_1", arg_max_cte."SoftProba_2" AS "Proba_2", arg_max_cte."SoftProba_3" AS "Proba_3", CASE WHEN (arg_max_cte."SoftProba_0" IS NULL OR arg_max_cte."SoftProba_0" > 0.0) THEN ln(arg_max_cte."SoftProba_0") ELSE -1.79769313486231e+308 END AS "LogProba_0", CASE WHEN (arg_max_cte."SoftProba_1" IS NULL OR arg_max_cte."SoftProba_1" > 0.0) THEN ln(arg_max_cte."SoftProba_1") ELSE -1.79769313486231e+308 END AS "LogProba_1", CASE WHEN (arg_max_cte."SoftProba_2" IS NULL OR arg_max_cte."SoftProba_2" > 0.0) THEN ln(arg_max_cte."SoftProba_2") ELSE -1.79769313486231e+308 END AS "LogProba_2", CASE WHEN (arg_max_cte."SoftProba_3" IS NULL OR arg_max_cte."SoftProba_3" > 0.0) THEN ln(arg_max_cte."SoftProba_3") ELSE -1.79769313486231e+308 END AS "LogProba_3", arg_max_cte."arg_max_Score" AS "Decision", greatest(arg_max_cte."SoftProba_0", arg_max_cte."SoftProba_1", arg_max_cte."SoftProba_2", arg_max_cte."SoftProba_3") AS "DecisionProba" 
FROM arg_max_cte