-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2018

-- Model : GradientBoostingClassifier_Pipeline
-- Dataset : FourClass_100
-- Database : sqlite


-- This SQL code can contain one or more statements, to be executed in the order they appear in this file.



-- Code For temporary table TMP_20180416233616_6KZC1X_ADS_imp_1_OUT part 1/2. Create 


CREATE TEMPORARY TABLE "TMP_20180416233616_6KZC1X_ADS_imp_1_OUT" (
	"KEY" BIGINT NOT NULL, 
	impter_2 FLOAT, 
	impter_3 FLOAT, 
	impter_4 FLOAT, 
	impter_5 FLOAT, 
	impter_6 FLOAT, 
	impter_7 FLOAT, 
	impter_8 FLOAT, 
	impter_9 FLOAT, 
	impter_10 FLOAT, 
	impter_11 FLOAT, 
	impter_12 FLOAT, 
	impter_13 FLOAT, 
	impter_14 FLOAT, 
	impter_15 FLOAT, 
	impter_16 FLOAT, 
	impter_17 FLOAT, 
	impter_18 FLOAT, 
	impter_19 FLOAT, 
	impter_20 FLOAT, 
	impter_21 FLOAT, 
	impter_22 FLOAT, 
	impter_23 FLOAT, 
	impter_24 FLOAT, 
	impter_25 FLOAT, 
	impter_26 FLOAT, 
	impter_27 FLOAT, 
	impter_28 FLOAT, 
	impter_29 FLOAT, 
	impter_30 FLOAT, 
	impter_31 FLOAT, 
	impter_32 FLOAT, 
	impter_33 FLOAT, 
	impter_34 FLOAT, 
	impter_35 FLOAT, 
	impter_36 FLOAT, 
	impter_37 FLOAT, 
	impter_38 FLOAT, 
	impter_39 FLOAT, 
	impter_40 FLOAT, 
	impter_41 FLOAT, 
	impter_42 FLOAT, 
	impter_43 FLOAT, 
	impter_44 FLOAT, 
	impter_45 FLOAT, 
	impter_46 FLOAT, 
	impter_47 FLOAT, 
	impter_48 FLOAT, 
	impter_49 FLOAT, 
	impter_50 FLOAT, 
	impter_51 FLOAT, 
	impter_52 FLOAT, 
	impter_53 FLOAT, 
	impter_54 FLOAT, 
	impter_55 FLOAT, 
	impter_56 FLOAT, 
	impter_57 FLOAT, 
	impter_58 FLOAT, 
	impter_59 FLOAT, 
	impter_60 FLOAT, 
	impter_61 FLOAT, 
	impter_62 FLOAT, 
	impter_63 FLOAT, 
	impter_64 FLOAT, 
	impter_65 FLOAT, 
	impter_66 FLOAT, 
	impter_67 FLOAT, 
	impter_68 FLOAT, 
	impter_69 FLOAT, 
	impter_70 FLOAT, 
	impter_71 FLOAT, 
	impter_72 FLOAT, 
	impter_73 FLOAT, 
	impter_74 FLOAT, 
	impter_75 FLOAT, 
	impter_76 FLOAT, 
	impter_77 FLOAT, 
	impter_78 FLOAT, 
	impter_79 FLOAT, 
	impter_80 FLOAT, 
	impter_81 FLOAT, 
	impter_82 FLOAT, 
	impter_83 FLOAT, 
	impter_84 FLOAT, 
	impter_85 FLOAT, 
	impter_86 FLOAT, 
	impter_87 FLOAT, 
	impter_88 FLOAT, 
	impter_89 FLOAT, 
	impter_90 FLOAT, 
	impter_91 FLOAT, 
	impter_92 FLOAT, 
	impter_93 FLOAT, 
	impter_94 FLOAT, 
	impter_95 FLOAT, 
	impter_96 FLOAT, 
	impter_97 FLOAT, 
	impter_98 FLOAT, 
	impter_99 FLOAT, 
	impter_100 FLOAT, 
	impter_101 FLOAT, 
	PRIMARY KEY ("KEY")
)



-- Code For temporary table TMP_20180416233616_6KZC1X_ADS_imp_1_OUT part 2/2. Populate

INSERT INTO "TMP_20180416233616_6KZC1X_ADS_imp_1_OUT" ("KEY", impter_2, impter_3, impter_4, impter_5, impter_6, impter_7, impter_8, impter_9, impter_10, impter_11, impter_12, impter_13, impter_14, impter_15, impter_16, impter_17, impter_18, impter_19, impter_20, impter_21, impter_22, impter_23, impter_24, impter_25, impter_26, impter_27, impter_28, impter_29, impter_30, impter_31, impter_32, impter_33, impter_34, impter_35, impter_36, impter_37, impter_38, impter_39, impter_40, impter_41, impter_42, impter_43, impter_44, impter_45, impter_46, impter_47, impter_48, impter_49, impter_50, impter_51, impter_52, impter_53, impter_54, impter_55, impter_56, impter_57, impter_58, impter_59, impter_60, impter_61, impter_62, impter_63, impter_64, impter_65, impter_66, impter_67, impter_68, impter_69, impter_70, impter_71, impter_72, impter_73, impter_74, impter_75, impter_76, impter_77, impter_78, impter_79, impter_80, impter_81, impter_82, impter_83, impter_84, impter_85, impter_86, impter_87, impter_88, impter_89, impter_90, impter_91, impter_92, impter_93, impter_94, impter_95, impter_96, impter_97, impter_98, impter_99, impter_100, impter_101) SELECT "ADS_imp_1_OUT"."KEY", "ADS_imp_1_OUT".impter_2, "ADS_imp_1_OUT".impter_3, "ADS_imp_1_OUT".impter_4, "ADS_imp_1_OUT".impter_5, "ADS_imp_1_OUT".impter_6, "ADS_imp_1_OUT".impter_7, "ADS_imp_1_OUT".impter_8, "ADS_imp_1_OUT".impter_9, "ADS_imp_1_OUT".impter_10, "ADS_imp_1_OUT".impter_11, "ADS_imp_1_OUT".impter_12, "ADS_imp_1_OUT".impter_13, "ADS_imp_1_OUT".impter_14, "ADS_imp_1_OUT".impter_15, "ADS_imp_1_OUT".impter_16, "ADS_imp_1_OUT".impter_17, "ADS_imp_1_OUT".impter_18, "ADS_imp_1_OUT".impter_19, "ADS_imp_1_OUT".impter_20, "ADS_imp_1_OUT".impter_21, "ADS_imp_1_OUT".impter_22, "ADS_imp_1_OUT".impter_23, "ADS_imp_1_OUT".impter_24, "ADS_imp_1_OUT".impter_25, "ADS_imp_1_OUT".impter_26, "ADS_imp_1_OUT".impter_27, "ADS_imp_1_OUT".impter_28, "ADS_imp_1_OUT".impter_29, "ADS_imp_1_OUT".impter_30, "ADS_imp_1_OUT".impter_31, "ADS_imp_1_OUT".impter_32, "ADS_imp_1_OUT".impter_33, "ADS_imp_1_OUT".impter_34, "ADS_imp_1_OUT".impter_35, "ADS_imp_1_OUT".impter_36, "ADS_imp_1_OUT".impter_37, "ADS_imp_1_OUT".impter_38, "ADS_imp_1_OUT".impter_39, "ADS_imp_1_OUT".impter_40, "ADS_imp_1_OUT".impter_41, "ADS_imp_1_OUT".impter_42, "ADS_imp_1_OUT".impter_43, "ADS_imp_1_OUT".impter_44, "ADS_imp_1_OUT".impter_45, "ADS_imp_1_OUT".impter_46, "ADS_imp_1_OUT".impter_47, "ADS_imp_1_OUT".impter_48, "ADS_imp_1_OUT".impter_49, "ADS_imp_1_OUT".impter_50, "ADS_imp_1_OUT".impter_51, "ADS_imp_1_OUT".impter_52, "ADS_imp_1_OUT".impter_53, "ADS_imp_1_OUT".impter_54, "ADS_imp_1_OUT".impter_55, "ADS_imp_1_OUT".impter_56, "ADS_imp_1_OUT".impter_57, "ADS_imp_1_OUT".impter_58, "ADS_imp_1_OUT".impter_59, "ADS_imp_1_OUT".impter_60, "ADS_imp_1_OUT".impter_61, "ADS_imp_1_OUT".impter_62, "ADS_imp_1_OUT".impter_63, "ADS_imp_1_OUT".impter_64, "ADS_imp_1_OUT".impter_65, "ADS_imp_1_OUT".impter_66, "ADS_imp_1_OUT".impter_67, "ADS_imp_1_OUT".impter_68, "ADS_imp_1_OUT".impter_69, "ADS_imp_1_OUT".impter_70, "ADS_imp_1_OUT".impter_71, "ADS_imp_1_OUT".impter_72, "ADS_imp_1_OUT".impter_73, "ADS_imp_1_OUT".impter_74, "ADS_imp_1_OUT".impter_75, "ADS_imp_1_OUT".impter_76, "ADS_imp_1_OUT".impter_77, "ADS_imp_1_OUT".impter_78, "ADS_imp_1_OUT".impter_79, "ADS_imp_1_OUT".impter_80, "ADS_imp_1_OUT".impter_81, "ADS_imp_1_OUT".impter_82, "ADS_imp_1_OUT".impter_83, "ADS_imp_1_OUT".impter_84, "ADS_imp_1_OUT".impter_85, "ADS_imp_1_OUT".impter_86, "ADS_imp_1_OUT".impter_87, "ADS_imp_1_OUT".impter_88, "ADS_imp_1_OUT".impter_89, "ADS_imp_1_OUT".impter_90, "ADS_imp_1_OUT".impter_91, "ADS_imp_1_OUT".impter_92, "ADS_imp_1_OUT".impter_93, "ADS_imp_1_OUT".impter_94, "ADS_imp_1_OUT".impter_95, "ADS_imp_1_OUT".impter_96, "ADS_imp_1_OUT".impter_97, "ADS_imp_1_OUT".impter_98, "ADS_imp_1_OUT".impter_99, "ADS_imp_1_OUT".impter_100, "ADS_imp_1_OUT".impter_101 
FROM (SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" IS NULL) THEN 0.006535740121159998 ELSE "ADS"."Feature_0" END AS impter_2, CASE WHEN ("ADS"."Feature_1" IS NULL) THEN 0.16767827125978743 ELSE "ADS"."Feature_1" END AS impter_3, CASE WHEN ("ADS"."Feature_2" IS NULL) THEN -0.05514704173583139 ELSE "ADS"."Feature_2" END AS impter_4, CASE WHEN ("ADS"."Feature_3" IS NULL) THEN 0.0015211693051869056 ELSE "ADS"."Feature_3" END AS impter_5, CASE WHEN ("ADS"."Feature_4" IS NULL) THEN 0.03142760191039923 ELSE "ADS"."Feature_4" END AS impter_6, CASE WHEN ("ADS"."Feature_5" IS NULL) THEN 0.026179683178748685 ELSE "ADS"."Feature_5" END AS impter_7, CASE WHEN ("ADS"."Feature_6" IS NULL) THEN -0.011254713122120081 ELSE "ADS"."Feature_6" END AS impter_8, CASE WHEN ("ADS"."Feature_7" IS NULL) THEN -0.016886211800947296 ELSE "ADS"."Feature_7" END AS impter_9, CASE WHEN ("ADS"."Feature_8" IS NULL) THEN -0.027342702964496257 ELSE "ADS"."Feature_8" END AS impter_10, CASE WHEN ("ADS"."Feature_9" IS NULL) THEN -0.16370127884822097 ELSE "ADS"."Feature_9" END AS impter_11, CASE WHEN ("ADS"."Feature_10" IS NULL) THEN 0.03541225073893643 ELSE "ADS"."Feature_10" END AS impter_12, CASE WHEN ("ADS"."Feature_11" IS NULL) THEN -0.028529123475633158 ELSE "ADS"."Feature_11" END AS impter_13, CASE WHEN ("ADS"."Feature_12" IS NULL) THEN -0.026749444989609742 ELSE "ADS"."Feature_12" END AS impter_14, CASE WHEN ("ADS"."Feature_13" IS NULL) THEN 0.38601982291131526 ELSE "ADS"."Feature_13" END AS impter_15, CASE WHEN ("ADS"."Feature_14" IS NULL) THEN 0.01621452573135814 ELSE "ADS"."Feature_14" END AS impter_16, CASE WHEN ("ADS"."Feature_15" IS NULL) THEN 0.22723775077839256 ELSE "ADS"."Feature_15" END AS impter_17, CASE WHEN ("ADS"."Feature_16" IS NULL) THEN 0.5663734566941232 ELSE "ADS"."Feature_16" END AS impter_18, CASE WHEN ("ADS"."Feature_17" IS NULL) THEN 0.2776964106161551 ELSE "ADS"."Feature_17" END AS impter_19, CASE WHEN ("ADS"."Feature_18" IS NULL) THEN 0.005994326812351447 ELSE "ADS"."Feature_18" END AS impter_20, CASE WHEN ("ADS"."Feature_19" IS NULL) THEN -0.021852534469692157 ELSE "ADS"."Feature_19" END AS impter_21, CASE WHEN ("ADS"."Feature_20" IS NULL) THEN -0.028375425917008895 ELSE "ADS"."Feature_20" END AS impter_22, CASE WHEN ("ADS"."Feature_21" IS NULL) THEN 0.015164323296291698 ELSE "ADS"."Feature_21" END AS impter_23, CASE WHEN ("ADS"."Feature_22" IS NULL) THEN 0.017469134548764743 ELSE "ADS"."Feature_22" END AS impter_24, CASE WHEN ("ADS"."Feature_23" IS NULL) THEN 0.03493909449429536 ELSE "ADS"."Feature_23" END AS impter_25, CASE WHEN ("ADS"."Feature_24" IS NULL) THEN -0.1443616076343936 ELSE "ADS"."Feature_24" END AS impter_26, CASE WHEN ("ADS"."Feature_25" IS NULL) THEN 0.1461046774436175 ELSE "ADS"."Feature_25" END AS impter_27, CASE WHEN ("ADS"."Feature_26" IS NULL) THEN 0.06761584237384538 ELSE "ADS"."Feature_26" END AS impter_28, CASE WHEN ("ADS"."Feature_27" IS NULL) THEN -0.3083684560804083 ELSE "ADS"."Feature_27" END AS impter_29, CASE WHEN ("ADS"."Feature_28" IS NULL) THEN 0.9525753017609152 ELSE "ADS"."Feature_28" END AS impter_30, CASE WHEN ("ADS"."Feature_29" IS NULL) THEN -0.05813383910109171 ELSE "ADS"."Feature_29" END AS impter_31, CASE WHEN ("ADS"."Feature_30" IS NULL) THEN -0.013124412714914525 ELSE "ADS"."Feature_30" END AS impter_32, CASE WHEN ("ADS"."Feature_31" IS NULL) THEN -0.3375512543306959 ELSE "ADS"."Feature_31" END AS impter_33, CASE WHEN ("ADS"."Feature_32" IS NULL) THEN 0.03902651459317101 ELSE "ADS"."Feature_32" END AS impter_34, CASE WHEN ("ADS"."Feature_33" IS NULL) THEN -0.0402939442131795 ELSE "ADS"."Feature_33" END AS impter_35, CASE WHEN ("ADS"."Feature_34" IS NULL) THEN -0.17161188573704908 ELSE "ADS"."Feature_34" END AS impter_36, CASE WHEN ("ADS"."Feature_35" IS NULL) THEN 0.012647786868640112 ELSE "ADS"."Feature_35" END AS impter_37, CASE WHEN ("ADS"."Feature_36" IS NULL) THEN 0.005193735308514513 ELSE "ADS"."Feature_36" END AS impter_38, CASE WHEN ("ADS"."Feature_37" IS NULL) THEN -0.017160876576937396 ELSE "ADS"."Feature_37" END AS impter_39, CASE WHEN ("ADS"."Feature_38" IS NULL) THEN 0.045036155997948996 ELSE "ADS"."Feature_38" END AS impter_40, CASE WHEN ("ADS"."Feature_39" IS NULL) THEN -0.12035820022636322 ELSE "ADS"."Feature_39" END AS impter_41, CASE WHEN ("ADS"."Feature_40" IS NULL) THEN -0.17640392282213266 ELSE "ADS"."Feature_40" END AS impter_42, CASE WHEN ("ADS"."Feature_41" IS NULL) THEN -0.015157075927040681 ELSE "ADS"."Feature_41" END AS impter_43, CASE WHEN ("ADS"."Feature_42" IS NULL) THEN -0.3068740190578085 ELSE "ADS"."Feature_42" END AS impter_44, CASE WHEN ("ADS"."Feature_43" IS NULL) THEN -0.04035458069305412 ELSE "ADS"."Feature_43" END AS impter_45, CASE WHEN ("ADS"."Feature_44" IS NULL) THEN -0.00789981512459992 ELSE "ADS"."Feature_44" END AS impter_46, CASE WHEN ("ADS"."Feature_45" IS NULL) THEN 0.002647932254171184 ELSE "ADS"."Feature_45" END AS impter_47, CASE WHEN ("ADS"."Feature_46" IS NULL) THEN -0.1492108459830671 ELSE "ADS"."Feature_46" END AS impter_48, CASE WHEN ("ADS"."Feature_47" IS NULL) THEN 0.24895399236878446 ELSE "ADS"."Feature_47" END AS impter_49, CASE WHEN ("ADS"."Feature_48" IS NULL) THEN -0.7004243979718509 ELSE "ADS"."Feature_48" END AS impter_50, CASE WHEN ("ADS"."Feature_49" IS NULL) THEN 0.025527673750135163 ELSE "ADS"."Feature_49" END AS impter_51, CASE WHEN ("ADS"."Feature_50" IS NULL) THEN -0.15642138685028584 ELSE "ADS"."Feature_50" END AS impter_52, CASE WHEN ("ADS"."Feature_51" IS NULL) THEN -0.12783857717811203 ELSE "ADS"."Feature_51" END AS impter_53, CASE WHEN ("ADS"."Feature_52" IS NULL) THEN -0.3698795238326839 ELSE "ADS"."Feature_52" END AS impter_54, CASE WHEN ("ADS"."Feature_53" IS NULL) THEN 0.04105474558890989 ELSE "ADS"."Feature_53" END AS impter_55, CASE WHEN ("ADS"."Feature_54" IS NULL) THEN -0.10047427531359215 ELSE "ADS"."Feature_54" END AS impter_56, CASE WHEN ("ADS"."Feature_55" IS NULL) THEN -0.1312728865356366 ELSE "ADS"."Feature_55" END AS impter_57, CASE WHEN ("ADS"."Feature_56" IS NULL) THEN 0.3685784313653654 ELSE "ADS"."Feature_56" END AS impter_58, CASE WHEN ("ADS"."Feature_57" IS NULL) THEN 0.22281246520596887 ELSE "ADS"."Feature_57" END AS impter_59, CASE WHEN ("ADS"."Feature_58" IS NULL) THEN -0.006274087618403553 ELSE "ADS"."Feature_58" END AS impter_60, CASE WHEN ("ADS"."Feature_59" IS NULL) THEN 0.014268598957774136 ELSE "ADS"."Feature_59" END AS impter_61, CASE WHEN ("ADS"."Feature_60" IS NULL) THEN -0.028545511573860538 ELSE "ADS"."Feature_60" END AS impter_62, CASE WHEN ("ADS"."Feature_61" IS NULL) THEN -0.4374918318496328 ELSE "ADS"."Feature_61" END AS impter_63, CASE WHEN ("ADS"."Feature_62" IS NULL) THEN -0.3689927805875731 ELSE "ADS"."Feature_62" END AS impter_64, CASE WHEN ("ADS"."Feature_63" IS NULL) THEN 0.0011690418193188894 ELSE "ADS"."Feature_63" END AS impter_65, CASE WHEN ("ADS"."Feature_64" IS NULL) THEN -0.011564873717580429 ELSE "ADS"."Feature_64" END AS impter_66, CASE WHEN ("ADS"."Feature_65" IS NULL) THEN -0.04358769989694412 ELSE "ADS"."Feature_65" END AS impter_67, CASE WHEN ("ADS"."Feature_66" IS NULL) THEN -0.1618634137390173 ELSE "ADS"."Feature_66" END AS impter_68, CASE WHEN ("ADS"."Feature_67" IS NULL) THEN -0.01727264153501617 ELSE "ADS"."Feature_67" END AS impter_69, CASE WHEN ("ADS"."Feature_68" IS NULL) THEN -0.36403022036864674 ELSE "ADS"."Feature_68" END AS impter_70, CASE WHEN ("ADS"."Feature_69" IS NULL) THEN -0.049273006502403176 ELSE "ADS"."Feature_69" END AS impter_71, CASE WHEN ("ADS"."Feature_70" IS NULL) THEN -0.015468512657334297 ELSE "ADS"."Feature_70" END AS impter_72, CASE WHEN ("ADS"."Feature_71" IS NULL) THEN -0.19162939351279548 ELSE "ADS"."Feature_71" END AS impter_73, CASE WHEN ("ADS"."Feature_72" IS NULL) THEN 0.023782830321603186 ELSE "ADS"."Feature_72" END AS impter_74, CASE WHEN ("ADS"."Feature_73" IS NULL) THEN 0.020454799672569742 ELSE "ADS"."Feature_73" END AS impter_75, CASE WHEN ("ADS"."Feature_74" IS NULL) THEN -0.17335534659313448 ELSE "ADS"."Feature_74" END AS impter_76, CASE WHEN ("ADS"."Feature_75" IS NULL) THEN 0.02758228824576348 ELSE "ADS"."Feature_75" END AS impter_77, CASE WHEN ("ADS"."Feature_76" IS NULL) THEN -0.015452336678168777 ELSE "ADS"."Feature_76" END AS impter_78, CASE WHEN ("ADS"."Feature_77" IS NULL) THEN -0.0425555457732581 ELSE "ADS"."Feature_77" END AS impter_79, CASE WHEN ("ADS"."Feature_78" IS NULL) THEN -0.009425736580365328 ELSE "ADS"."Feature_78" END AS impter_80, CASE WHEN ("ADS"."Feature_79" IS NULL) THEN 0.007423677489325057 ELSE "ADS"."Feature_79" END AS impter_81, CASE WHEN ("ADS"."Feature_80" IS NULL) THEN 0.0498533264368169 ELSE "ADS"."Feature_80" END AS impter_82, CASE WHEN ("ADS"."Feature_81" IS NULL) THEN 0.027960221179443 ELSE "ADS"."Feature_81" END AS impter_83, CASE WHEN ("ADS"."Feature_82" IS NULL) THEN -0.005270502487579236 ELSE "ADS"."Feature_82" END AS impter_84, CASE WHEN ("ADS"."Feature_83" IS NULL) THEN -0.053393611774246875 ELSE "ADS"."Feature_83" END AS impter_85, CASE WHEN ("ADS"."Feature_84" IS NULL) THEN 0.17162033288561043 ELSE "ADS"."Feature_84" END AS impter_86, CASE WHEN ("ADS"."Feature_85" IS NULL) THEN 0.037211997007404414 ELSE "ADS"."Feature_85" END AS impter_87, CASE WHEN ("ADS"."Feature_86" IS NULL) THEN 0.01843497333044896 ELSE "ADS"."Feature_86" END AS impter_88, CASE WHEN ("ADS"."Feature_87" IS NULL) THEN 0.5605216326173627 ELSE "ADS"."Feature_87" END AS impter_89, CASE WHEN ("ADS"."Feature_88" IS NULL) THEN -0.05285046291900049 ELSE "ADS"."Feature_88" END AS impter_90, CASE WHEN ("ADS"."Feature_89" IS NULL) THEN 0.07939021734244131 ELSE "ADS"."Feature_89" END AS impter_91, CASE WHEN ("ADS"."Feature_90" IS NULL) THEN -2.088667163118704 ELSE "ADS"."Feature_90" END AS impter_92, CASE WHEN ("ADS"."Feature_91" IS NULL) THEN -1.0831020638954625 ELSE "ADS"."Feature_91" END AS impter_93, CASE WHEN ("ADS"."Feature_92" IS NULL) THEN -0.30470236282124374 ELSE "ADS"."Feature_92" END AS impter_94, CASE WHEN ("ADS"."Feature_93" IS NULL) THEN -0.9354262595637257 ELSE "ADS"."Feature_93" END AS impter_95, CASE WHEN ("ADS"."Feature_94" IS NULL) THEN -0.09841121992703274 ELSE "ADS"."Feature_94" END AS impter_96, CASE WHEN ("ADS"."Feature_95" IS NULL) THEN -0.5316534843603434 ELSE "ADS"."Feature_95" END AS impter_97, CASE WHEN ("ADS"."Feature_96" IS NULL) THEN 0.014127422137804999 ELSE "ADS"."Feature_96" END AS impter_98, CASE WHEN ("ADS"."Feature_97" IS NULL) THEN -0.012631277412677116 ELSE "ADS"."Feature_97" END AS impter_99, CASE WHEN ("ADS"."Feature_98" IS NULL) THEN 0.031286881233113274 ELSE "ADS"."Feature_98" END AS impter_100, CASE WHEN ("ADS"."Feature_99" IS NULL) THEN -0.45039051538460234 ELSE "ADS"."Feature_99" END AS impter_101 
FROM "FourClass_100" AS "ADS") AS "ADS_imp_1_OUT"

-- Code For temporary table TMP_20180416233616_DKUVME_ADS_sca_2_OUT part 1/2. Create 


CREATE TEMPORARY TABLE "TMP_20180416233616_DKUVME_ADS_sca_2_OUT" (
	"KEY" BIGINT NOT NULL, 
	scaler_2 FLOAT, 
	scaler_3 FLOAT, 
	scaler_4 FLOAT, 
	scaler_5 FLOAT, 
	scaler_6 FLOAT, 
	scaler_7 FLOAT, 
	scaler_8 FLOAT, 
	scaler_9 FLOAT, 
	scaler_10 FLOAT, 
	scaler_11 FLOAT, 
	scaler_12 FLOAT, 
	scaler_13 FLOAT, 
	scaler_14 FLOAT, 
	scaler_15 FLOAT, 
	scaler_16 FLOAT, 
	scaler_17 FLOAT, 
	scaler_18 FLOAT, 
	scaler_19 FLOAT, 
	scaler_20 FLOAT, 
	scaler_21 FLOAT, 
	scaler_22 FLOAT, 
	scaler_23 FLOAT, 
	scaler_24 FLOAT, 
	scaler_25 FLOAT, 
	scaler_26 FLOAT, 
	scaler_27 FLOAT, 
	scaler_28 FLOAT, 
	scaler_29 FLOAT, 
	scaler_30 FLOAT, 
	scaler_31 FLOAT, 
	scaler_32 FLOAT, 
	scaler_33 FLOAT, 
	scaler_34 FLOAT, 
	scaler_35 FLOAT, 
	scaler_36 FLOAT, 
	scaler_37 FLOAT, 
	scaler_38 FLOAT, 
	scaler_39 FLOAT, 
	scaler_40 FLOAT, 
	scaler_41 FLOAT, 
	scaler_42 FLOAT, 
	scaler_43 FLOAT, 
	scaler_44 FLOAT, 
	scaler_45 FLOAT, 
	scaler_46 FLOAT, 
	scaler_47 FLOAT, 
	scaler_48 FLOAT, 
	scaler_49 FLOAT, 
	scaler_50 FLOAT, 
	scaler_51 FLOAT, 
	scaler_52 FLOAT, 
	scaler_53 FLOAT, 
	scaler_54 FLOAT, 
	scaler_55 FLOAT, 
	scaler_56 FLOAT, 
	scaler_57 FLOAT, 
	scaler_58 FLOAT, 
	scaler_59 FLOAT, 
	scaler_60 FLOAT, 
	scaler_61 FLOAT, 
	scaler_62 FLOAT, 
	scaler_63 FLOAT, 
	scaler_64 FLOAT, 
	scaler_65 FLOAT, 
	scaler_66 FLOAT, 
	scaler_67 FLOAT, 
	scaler_68 FLOAT, 
	scaler_69 FLOAT, 
	scaler_70 FLOAT, 
	scaler_71 FLOAT, 
	scaler_72 FLOAT, 
	scaler_73 FLOAT, 
	scaler_74 FLOAT, 
	scaler_75 FLOAT, 
	scaler_76 FLOAT, 
	scaler_77 FLOAT, 
	scaler_78 FLOAT, 
	scaler_79 FLOAT, 
	scaler_80 FLOAT, 
	scaler_81 FLOAT, 
	scaler_82 FLOAT, 
	scaler_83 FLOAT, 
	scaler_84 FLOAT, 
	scaler_85 FLOAT, 
	scaler_86 FLOAT, 
	scaler_87 FLOAT, 
	scaler_88 FLOAT, 
	scaler_89 FLOAT, 
	scaler_90 FLOAT, 
	scaler_91 FLOAT, 
	scaler_92 FLOAT, 
	scaler_93 FLOAT, 
	scaler_94 FLOAT, 
	scaler_95 FLOAT, 
	scaler_96 FLOAT, 
	scaler_97 FLOAT, 
	scaler_98 FLOAT, 
	scaler_99 FLOAT, 
	scaler_100 FLOAT, 
	scaler_101 FLOAT, 
	PRIMARY KEY ("KEY")
)



-- Code For temporary table TMP_20180416233616_DKUVME_ADS_sca_2_OUT part 2/2. Populate

INSERT INTO "TMP_20180416233616_DKUVME_ADS_sca_2_OUT" ("KEY", scaler_2, scaler_3, scaler_4, scaler_5, scaler_6, scaler_7, scaler_8, scaler_9, scaler_10, scaler_11, scaler_12, scaler_13, scaler_14, scaler_15, scaler_16, scaler_17, scaler_18, scaler_19, scaler_20, scaler_21, scaler_22, scaler_23, scaler_24, scaler_25, scaler_26, scaler_27, scaler_28, scaler_29, scaler_30, scaler_31, scaler_32, scaler_33, scaler_34, scaler_35, scaler_36, scaler_37, scaler_38, scaler_39, scaler_40, scaler_41, scaler_42, scaler_43, scaler_44, scaler_45, scaler_46, scaler_47, scaler_48, scaler_49, scaler_50, scaler_51, scaler_52, scaler_53, scaler_54, scaler_55, scaler_56, scaler_57, scaler_58, scaler_59, scaler_60, scaler_61, scaler_62, scaler_63, scaler_64, scaler_65, scaler_66, scaler_67, scaler_68, scaler_69, scaler_70, scaler_71, scaler_72, scaler_73, scaler_74, scaler_75, scaler_76, scaler_77, scaler_78, scaler_79, scaler_80, scaler_81, scaler_82, scaler_83, scaler_84, scaler_85, scaler_86, scaler_87, scaler_88, scaler_89, scaler_90, scaler_91, scaler_92, scaler_93, scaler_94, scaler_95, scaler_96, scaler_97, scaler_98, scaler_99, scaler_100, scaler_101) SELECT "ADS_sca_2_OUT"."KEY", "ADS_sca_2_OUT".scaler_2, "ADS_sca_2_OUT".scaler_3, "ADS_sca_2_OUT".scaler_4, "ADS_sca_2_OUT".scaler_5, "ADS_sca_2_OUT".scaler_6, "ADS_sca_2_OUT".scaler_7, "ADS_sca_2_OUT".scaler_8, "ADS_sca_2_OUT".scaler_9, "ADS_sca_2_OUT".scaler_10, "ADS_sca_2_OUT".scaler_11, "ADS_sca_2_OUT".scaler_12, "ADS_sca_2_OUT".scaler_13, "ADS_sca_2_OUT".scaler_14, "ADS_sca_2_OUT".scaler_15, "ADS_sca_2_OUT".scaler_16, "ADS_sca_2_OUT".scaler_17, "ADS_sca_2_OUT".scaler_18, "ADS_sca_2_OUT".scaler_19, "ADS_sca_2_OUT".scaler_20, "ADS_sca_2_OUT".scaler_21, "ADS_sca_2_OUT".scaler_22, "ADS_sca_2_OUT".scaler_23, "ADS_sca_2_OUT".scaler_24, "ADS_sca_2_OUT".scaler_25, "ADS_sca_2_OUT".scaler_26, "ADS_sca_2_OUT".scaler_27, "ADS_sca_2_OUT".scaler_28, "ADS_sca_2_OUT".scaler_29, "ADS_sca_2_OUT".scaler_30, "ADS_sca_2_OUT".scaler_31, "ADS_sca_2_OUT".scaler_32, "ADS_sca_2_OUT".scaler_33, "ADS_sca_2_OUT".scaler_34, "ADS_sca_2_OUT".scaler_35, "ADS_sca_2_OUT".scaler_36, "ADS_sca_2_OUT".scaler_37, "ADS_sca_2_OUT".scaler_38, "ADS_sca_2_OUT".scaler_39, "ADS_sca_2_OUT".scaler_40, "ADS_sca_2_OUT".scaler_41, "ADS_sca_2_OUT".scaler_42, "ADS_sca_2_OUT".scaler_43, "ADS_sca_2_OUT".scaler_44, "ADS_sca_2_OUT".scaler_45, "ADS_sca_2_OUT".scaler_46, "ADS_sca_2_OUT".scaler_47, "ADS_sca_2_OUT".scaler_48, "ADS_sca_2_OUT".scaler_49, "ADS_sca_2_OUT".scaler_50, "ADS_sca_2_OUT".scaler_51, "ADS_sca_2_OUT".scaler_52, "ADS_sca_2_OUT".scaler_53, "ADS_sca_2_OUT".scaler_54, "ADS_sca_2_OUT".scaler_55, "ADS_sca_2_OUT".scaler_56, "ADS_sca_2_OUT".scaler_57, "ADS_sca_2_OUT".scaler_58, "ADS_sca_2_OUT".scaler_59, "ADS_sca_2_OUT".scaler_60, "ADS_sca_2_OUT".scaler_61, "ADS_sca_2_OUT".scaler_62, "ADS_sca_2_OUT".scaler_63, "ADS_sca_2_OUT".scaler_64, "ADS_sca_2_OUT".scaler_65, "ADS_sca_2_OUT".scaler_66, "ADS_sca_2_OUT".scaler_67, "ADS_sca_2_OUT".scaler_68, "ADS_sca_2_OUT".scaler_69, "ADS_sca_2_OUT".scaler_70, "ADS_sca_2_OUT".scaler_71, "ADS_sca_2_OUT".scaler_72, "ADS_sca_2_OUT".scaler_73, "ADS_sca_2_OUT".scaler_74, "ADS_sca_2_OUT".scaler_75, "ADS_sca_2_OUT".scaler_76, "ADS_sca_2_OUT".scaler_77, "ADS_sca_2_OUT".scaler_78, "ADS_sca_2_OUT".scaler_79, "ADS_sca_2_OUT".scaler_80, "ADS_sca_2_OUT".scaler_81, "ADS_sca_2_OUT".scaler_82, "ADS_sca_2_OUT".scaler_83, "ADS_sca_2_OUT".scaler_84, "ADS_sca_2_OUT".scaler_85, "ADS_sca_2_OUT".scaler_86, "ADS_sca_2_OUT".scaler_87, "ADS_sca_2_OUT".scaler_88, "ADS_sca_2_OUT".scaler_89, "ADS_sca_2_OUT".scaler_90, "ADS_sca_2_OUT".scaler_91, "ADS_sca_2_OUT".scaler_92, "ADS_sca_2_OUT".scaler_93, "ADS_sca_2_OUT".scaler_94, "ADS_sca_2_OUT".scaler_95, "ADS_sca_2_OUT".scaler_96, "ADS_sca_2_OUT".scaler_97, "ADS_sca_2_OUT".scaler_98, "ADS_sca_2_OUT".scaler_99, "ADS_sca_2_OUT".scaler_100, "ADS_sca_2_OUT".scaler_101 
FROM (SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", (CAST("ADS_imp_1_OUT".impter_2 AS FLOAT) - 0.006535740121159998) / 0.9858217119194165 AS scaler_2, (CAST("ADS_imp_1_OUT".impter_3 AS FLOAT) - 0.16767827125978743) / 4.178932779057346 AS scaler_3, (CAST("ADS_imp_1_OUT".impter_4 AS FLOAT) - -0.05514704173583139) / 4.08515606391014 AS scaler_4, (CAST("ADS_imp_1_OUT".impter_5 AS FLOAT) - 0.0015211693051869056) / 1.0583994221255881 AS scaler_5, (CAST("ADS_imp_1_OUT".impter_6 AS FLOAT) - 0.03142760191039923) / 0.9585029014041677 AS scaler_6, (CAST("ADS_imp_1_OUT".impter_7 AS FLOAT) - 0.026179683178748685) / 0.9938548077153438 AS scaler_7, (CAST("ADS_imp_1_OUT".impter_8 AS FLOAT) - -0.011254713122120081) / 0.9959455996367279 AS scaler_8, (CAST("ADS_imp_1_OUT".impter_9 AS FLOAT) - -0.016886211800947296) / 1.0454296780346695 AS scaler_9, (CAST("ADS_imp_1_OUT".impter_10 AS FLOAT) - -0.027342702964496257) / 4.3313567418204935 AS scaler_10, (CAST("ADS_imp_1_OUT".impter_11 AS FLOAT) - -0.16370127884822097) / 4.458898205934484 AS scaler_11, (CAST("ADS_imp_1_OUT".impter_12 AS FLOAT) - 0.03541225073893643) / 1.036616487810755 AS scaler_12, (CAST("ADS_imp_1_OUT".impter_13 AS FLOAT) - -0.028529123475633158) / 1.0046762055522975 AS scaler_13, (CAST("ADS_imp_1_OUT".impter_14 AS FLOAT) - -0.026749444989609742) / 0.9996240267100583 AS scaler_14, (CAST("ADS_imp_1_OUT".impter_15 AS FLOAT) - 0.38601982291131526) / 4.1448047865184865 AS scaler_15, (CAST("ADS_imp_1_OUT".impter_16 AS FLOAT) - 0.01621452573135814) / 1.0172812966673987 AS scaler_16, (CAST("ADS_imp_1_OUT".impter_17 AS FLOAT) - 0.22723775077839256) / 4.367112620179618 AS scaler_17, (CAST("ADS_imp_1_OUT".impter_18 AS FLOAT) - 0.5663734566941232) / 4.118156884045948 AS scaler_18, (CAST("ADS_imp_1_OUT".impter_19 AS FLOAT) - 0.2776964106161551) / 4.014328975715426 AS scaler_19, (CAST("ADS_imp_1_OUT".impter_20 AS FLOAT) - 0.005994326812351447) / 0.9724395023210792 AS scaler_20, (CAST("ADS_imp_1_OUT".impter_21 AS FLOAT) - -0.021852534469692157) / 0.9856875177263738 AS scaler_21, (CAST("ADS_imp_1_OUT".impter_22 AS FLOAT) - -0.028375425917008895) / 1.023103469868883 AS scaler_22, (CAST("ADS_imp_1_OUT".impter_23 AS FLOAT) - 0.015164323296291698) / 4.3531451691819925 AS scaler_23, (CAST("ADS_imp_1_OUT".impter_24 AS FLOAT) - 0.017469134548764743) / 1.0018056542687617 AS scaler_24, (CAST("ADS_imp_1_OUT".impter_25 AS FLOAT) - 0.03493909449429536) / 0.9927216497675313 AS scaler_25, (CAST("ADS_imp_1_OUT".impter_26 AS FLOAT) - -0.1443616076343936) / 4.467397668863504 AS scaler_26, (CAST("ADS_imp_1_OUT".impter_27 AS FLOAT) - 0.1461046774436175) / 4.107342778563649 AS scaler_27, (CAST("ADS_imp_1_OUT".impter_28 AS FLOAT) - 0.06761584237384538) / 4.277643036456077 AS scaler_28, (CAST("ADS_imp_1_OUT".impter_29 AS FLOAT) - -0.3083684560804083) / 4.030195686259092 AS scaler_29, (CAST("ADS_imp_1_OUT".impter_30 AS FLOAT) - 0.9525753017609152) / 4.017302623019134 AS scaler_30, (CAST("ADS_imp_1_OUT".impter_31 AS FLOAT) - -0.05813383910109171) / 4.03353195749377 AS scaler_31, (CAST("ADS_imp_1_OUT".impter_32 AS FLOAT) - -0.013124412714914525) / 0.9551987815662824 AS scaler_32, (CAST("ADS_imp_1_OUT".impter_33 AS FLOAT) - -0.3375512543306959) / 4.106571680414476 AS scaler_33, (CAST("ADS_imp_1_OUT".impter_34 AS FLOAT) - 0.03902651459317101) / 0.9903592253368643 AS scaler_34, (CAST("ADS_imp_1_OUT".impter_35 AS FLOAT) - -0.0402939442131795) / 1.015296116761204 AS scaler_35, (CAST("ADS_imp_1_OUT".impter_36 AS FLOAT) - -0.17161188573704908) / 4.179229563019859 AS scaler_36, (CAST("ADS_imp_1_OUT".impter_37 AS FLOAT) - 0.012647786868640112) / 1.0078307618647784 AS scaler_37, (CAST("ADS_imp_1_OUT".impter_38 AS FLOAT) - 0.005193735308514513) / 4.297332183672823 AS scaler_38, (CAST("ADS_imp_1_OUT".impter_39 AS FLOAT) - -0.017160876576937396) / 1.0173788557066636 AS scaler_39, (CAST("ADS_imp_1_OUT".impter_40 AS FLOAT) - 0.045036155997948996) / 3.904281136786187 AS scaler_40, (CAST("ADS_imp_1_OUT".impter_41 AS FLOAT) - -0.12035820022636322) / 3.9840286036228636 AS scaler_41, (CAST("ADS_imp_1_OUT".impter_42 AS FLOAT) - -0.17640392282213266) / 4.069314637621373 AS scaler_42, (CAST("ADS_imp_1_OUT".impter_43 AS FLOAT) - -0.015157075927040681) / 1.0291573895450885 AS scaler_43, (CAST("ADS_imp_1_OUT".impter_44 AS FLOAT) - -0.3068740190578085) / 4.347912512213832 AS scaler_44, (CAST("ADS_imp_1_OUT".impter_45 AS FLOAT) - -0.04035458069305412) / 4.050643773807161 AS scaler_45, (CAST("ADS_imp_1_OUT".impter_46 AS FLOAT) - -0.00789981512459992) / 1.0063754765912263 AS scaler_46, (CAST("ADS_imp_1_OUT".impter_47 AS FLOAT) - 0.002647932254171184) / 1.0021447755850712 AS scaler_47, (CAST("ADS_imp_1_OUT".impter_48 AS FLOAT) - -0.1492108459830671) / 4.103402009893949 AS scaler_48, (CAST("ADS_imp_1_OUT".impter_49 AS FLOAT) - 0.24895399236878446) / 4.232200380326287 AS scaler_49, (CAST("ADS_imp_1_OUT".impter_50 AS FLOAT) - -0.7004243979718509) / 4.220766541993596 AS scaler_50, (CAST("ADS_imp_1_OUT".impter_51 AS FLOAT) - 0.025527673750135163) / 1.0206740927253968 AS scaler_51, (CAST("ADS_imp_1_OUT".impter_52 AS FLOAT) - -0.15642138685028584) / 4.078310671245767 AS scaler_52, (CAST("ADS_imp_1_OUT".impter_53 AS FLOAT) - -0.12783857717811203) / 4.247236801364965 AS scaler_53, (CAST("ADS_imp_1_OUT".impter_54 AS FLOAT) - -0.3698795238326839) / 4.037675848477055 AS scaler_54, (CAST("ADS_imp_1_OUT".impter_55 AS FLOAT) - 0.04105474558890989) / 4.445571371438813 AS scaler_55, (CAST("ADS_imp_1_OUT".impter_56 AS FLOAT) - -0.10047427531359215) / 4.045836826444957 AS scaler_56, (CAST("ADS_imp_1_OUT".impter_57 AS FLOAT) - -0.1312728865356366) / 4.256606009499921 AS scaler_57, (CAST("ADS_imp_1_OUT".impter_58 AS FLOAT) - 0.3685784313653654) / 4.04294690880675 AS scaler_58, (CAST("ADS_imp_1_OUT".impter_59 AS FLOAT) - 0.22281246520596887) / 4.252398068764952 AS scaler_59, (CAST("ADS_imp_1_OUT".impter_60 AS FLOAT) - -0.006274087618403553) / 1.013175429895288 AS scaler_60, (CAST("ADS_imp_1_OUT".impter_61 AS FLOAT) - 0.014268598957774136) / 0.9752324561731636 AS scaler_61, (CAST("ADS_imp_1_OUT".impter_62 AS FLOAT) - -0.028545511573860538) / 0.9960176612179306 AS scaler_62, (CAST("ADS_imp_1_OUT".impter_63 AS FLOAT) - -0.4374918318496328) / 4.2387592565605035 AS scaler_63, (CAST("ADS_imp_1_OUT".impter_64 AS FLOAT) - -0.3689927805875731) / 4.18274187652401 AS scaler_64, (CAST("ADS_imp_1_OUT".impter_65 AS FLOAT) - 0.0011690418193188894) / 1.0433365249916253 AS scaler_65, (CAST("ADS_imp_1_OUT".impter_66 AS FLOAT) - -0.011564873717580429) / 4.081504294152238 AS scaler_66, (CAST("ADS_imp_1_OUT".impter_67 AS FLOAT) - -0.04358769989694412) / 1.058664519012294 AS scaler_67, (CAST("ADS_imp_1_OUT".impter_68 AS FLOAT) - -0.1618634137390173) / 4.259666235165136 AS scaler_68, (CAST("ADS_imp_1_OUT".impter_69 AS FLOAT) - -0.01727264153501617) / 1.0103058334402957 AS scaler_69, (CAST("ADS_imp_1_OUT".impter_70 AS FLOAT) - -0.36403022036864674) / 4.23529048916204 AS scaler_70, (CAST("ADS_imp_1_OUT".impter_71 AS FLOAT) - -0.049273006502403176) / 4.310802365306347 AS scaler_71, (CAST("ADS_imp_1_OUT".impter_72 AS FLOAT) - -0.015468512657334297) / 1.010660801531323 AS scaler_72, (CAST("ADS_imp_1_OUT".impter_73 AS FLOAT) - -0.19162939351279548) / 4.1160449655484435 AS scaler_73, (CAST("ADS_imp_1_OUT".impter_74 AS FLOAT) - 0.023782830321603186) / 0.997185935238241 AS scaler_74, (CAST("ADS_imp_1_OUT".impter_75 AS FLOAT) - 0.020454799672569742) / 0.9640474876793701 AS scaler_75, (CAST("ADS_imp_1_OUT".impter_76 AS FLOAT) - -0.17335534659313448) / 4.268840083291991 AS scaler_76, (CAST("ADS_imp_1_OUT".impter_77 AS FLOAT) - 0.02758228824576348) / 1.0028736371502236 AS scaler_77, (CAST("ADS_imp_1_OUT".impter_78 AS FLOAT) - -0.015452336678168777) / 0.9517969728776562 AS scaler_78, (CAST("ADS_imp_1_OUT".impter_79 AS FLOAT) - -0.0425555457732581) / 1.026041980115793 AS scaler_79, (CAST("ADS_imp_1_OUT".impter_80 AS FLOAT) - -0.009425736580365328) / 0.9815479331628068 AS scaler_80, (CAST("ADS_imp_1_OUT".impter_81 AS FLOAT) - 0.007423677489325057) / 1.0171447637961626 AS scaler_81, (CAST("ADS_imp_1_OUT".impter_82 AS FLOAT) - 0.0498533264368169) / 1.013812175189716 AS scaler_82, (CAST("ADS_imp_1_OUT".impter_83 AS FLOAT) - 0.027960221179443) / 1.0049331087863325 AS scaler_83, (CAST("ADS_imp_1_OUT".impter_84 AS FLOAT) - -0.005270502487579236) / 1.0233252849148293 AS scaler_84, (CAST("ADS_imp_1_OUT".impter_85 AS FLOAT) - -0.053393611774246875) / 1.0045891919932883 AS scaler_85, (CAST("ADS_imp_1_OUT".impter_86 AS FLOAT) - 0.17162033288561043) / 4.2488442757828695 AS scaler_86, (CAST("ADS_imp_1_OUT".impter_87 AS FLOAT) - 0.037211997007404414) / 4.254048583081737 AS scaler_87, (CAST("ADS_imp_1_OUT".impter_88 AS FLOAT) - 0.01843497333044896) / 3.9497288408894384 AS scaler_88, (CAST("ADS_imp_1_OUT".impter_89 AS FLOAT) - 0.5605216326173627) / 4.331332438981666 AS scaler_89, (CAST("ADS_imp_1_OUT".impter_90 AS FLOAT) - -0.05285046291900049) / 1.0358397102155001 AS scaler_90, (CAST("ADS_imp_1_OUT".impter_91 AS FLOAT) - 0.07939021734244131) / 0.9698764460278291 AS scaler_91, (CAST("ADS_imp_1_OUT".impter_92 AS FLOAT) - -2.088667163118704) / 15.30221524651991 AS scaler_92, (CAST("ADS_imp_1_OUT".impter_93 AS FLOAT) - -1.0831020638954625) / 4.3671090202705205 AS scaler_93, (CAST("ADS_imp_1_OUT".impter_94 AS FLOAT) - -0.30470236282124374) / 4.204292362348631 AS scaler_94, (CAST("ADS_imp_1_OUT".impter_95 AS FLOAT) - -0.9354262595637257) / 15.357005766716696 AS scaler_95, (CAST("ADS_imp_1_OUT".impter_96 AS FLOAT) - -0.09841121992703274) / 0.952484869943965 AS scaler_96, (CAST("ADS_imp_1_OUT".impter_97 AS FLOAT) - -0.5316534843603434) / 3.977000718240084 AS scaler_97, (CAST("ADS_imp_1_OUT".impter_98 AS FLOAT) - 0.014127422137804999) / 0.9879258925411053 AS scaler_98, (CAST("ADS_imp_1_OUT".impter_99 AS FLOAT) - -0.012631277412677116) / 1.0151964448341175 AS scaler_99, (CAST("ADS_imp_1_OUT".impter_100 AS FLOAT) - 0.031286881233113274) / 0.9893618024210226 AS scaler_100, (CAST("ADS_imp_1_OUT".impter_101 AS FLOAT) - -0.45039051538460234) / 4.244700325091397 AS scaler_101 
FROM "TMP_20180416233616_6KZC1X_ADS_imp_1_OUT" AS "ADS_imp_1_OUT") AS "ADS_sca_2_OUT"

-- Code For temporary table TMP_20180416233616_EFAWWB_GB_B0 part 1/2. Create 


CREATE TEMPORARY TABLE "TMP_20180416233616_EFAWWB_GB_B0" (
	"KEY" BIGINT, 
	"Score_0" FLOAT, 
	"Score_1" FLOAT, 
	"Score_2" FLOAT, 
	"Score_3" FLOAT
)



-- Code For temporary table TMP_20180416233616_EFAWWB_GB_B0 part 2/2. Populate

WITH "DT_node_lookup" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_36 <= 0.4517136812210083) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_66 <= -0.06868205964565277) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 0.5227227210998535) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_49 <= 2.2262978553771973) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= 0.39106184244155884) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_19 <= -0.4885696768760681) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= 0.8776713013648987) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20180416233616_DKUVME_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values".threshold AS FLOAT) AS threshold, CAST("Values".count AS FLOAT) AS count, CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 165 AS count, 3 AS depth, 2 AS parent_id, 0.46107751562816157 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 79 AS count, 3 AS depth, 2 AS parent_id, -0.7443260670614605 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 281 AS count, 3 AS depth, 5 AS parent_id, -0.6555573735597808 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 5 AS parent_id, 2.2123765139266465 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 63 AS count, 3 AS depth, 9 AS parent_id, 2.1231899908651504 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 117 AS count, 3 AS depth, 9 AS parent_id, 0.40806454737482406 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 75 AS count, 3 AS depth, 12 AS parent_id, -0.7307787471027517 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, 12 AS parent_id, 1.1421382371886835 AS "Estimator") AS "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".node_id AS node_id, "DT_node_data".feature AS feature, "DT_node_data".threshold AS threshold, "DT_node_data".count AS count, "DT_node_data".depth AS depth, "DT_node_data".parent_id AS parent_id, "DT_node_data"."Estimator" AS "Estimator" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".node_id), 
"GB_Model_0_0" AS 
(SELECT "DT_Output"."KEY" AS "KEY", "DT_Output"."Estimator" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output"), 
"DT_node_lookup_1" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_33 <= 0.2938539981842041) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_29 <= -0.2826199531555176) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_68 <= -2.6612305641174316) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_70 <= 0.2864289879798889) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_42 <= -0.18312549591064453) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_52 <= -0.3452757000923157) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_44 <= -0.7322684526443481) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20180416233616_DKUVME_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_1" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values".threshold AS FLOAT) AS threshold, CAST("Values".count AS FLOAT) AS count, CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 2 AS parent_id, 2.9532638756882417 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 216 AS count, 3 AS depth, 2 AS parent_id, -0.7587905045017961 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 171 AS count, 3 AS depth, 5 AS parent_id, 0.4054586601391233 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 115 AS count, 3 AS depth, 5 AS parent_id, -0.5462878559034006 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 42 AS count, 3 AS depth, 9 AS parent_id, 0.04907252439938137 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 93 AS count, 3 AS depth, 9 AS parent_id, 1.5310668175018134 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 48 AS count, 3 AS depth, 12 AS parent_id, 1.0029450607607033 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 113 AS count, 3 AS depth, 12 AS parent_id, -0.39525289783151035 AS "Estimator") AS "Values"), 
"DT_Output_1" AS 
(SELECT "DT_node_lookup_1"."KEY" AS "KEY", "DT_node_lookup_1".node_id_2 AS node_id_2, "DT_node_data_1".node_id AS node_id, "DT_node_data_1".feature AS feature, "DT_node_data_1".threshold AS threshold, "DT_node_data_1".count AS count, "DT_node_data_1".depth AS depth, "DT_node_data_1".parent_id AS parent_id, "DT_node_data_1"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_1" LEFT OUTER JOIN "DT_node_data_1" ON "DT_node_lookup_1".node_id_2 = "DT_node_data_1".node_id), 
"GB_Model_0_1" AS 
(SELECT "DT_Output_1"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_1"."Estimator" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_1"), 
"DT_node_lookup_2" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_40 <= 0.23466400802135468) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_70 <= -0.07032842934131622) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_88 <= -0.6326702833175659) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_17 <= -0.9114393591880798) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_63 <= -1.1125068664550781) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_36 <= 0.32749396562576294) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_26 <= 0.23849156498908997) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20180416233616_DKUVME_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_2" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values".threshold AS FLOAT) AS threshold, CAST("Values".count AS FLOAT) AS count, CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 44 AS count, 3 AS depth, 2 AS parent_id, 0.003685484316843566 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 188 AS count, 3 AS depth, 2 AS parent_id, -0.7631277610058678 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 43 AS count, 3 AS depth, 5 AS parent_id, 1.3855015074440942 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 208 AS count, 3 AS depth, 5 AS parent_id, -0.23503738436607802 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 28 AS count, 3 AS depth, 9 AS parent_id, 2.8177302204822334 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 3 AS depth, 9 AS parent_id, -0.3317171633459929 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 151 AS count, 3 AS depth, 12 AS parent_id, -0.20711713759014258 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 126 AS count, 3 AS depth, 12 AS parent_id, 0.7396564224708246 AS "Estimator") AS "Values"), 
"DT_Output_2" AS 
(SELECT "DT_node_lookup_2"."KEY" AS "KEY", "DT_node_lookup_2".node_id_2 AS node_id_2, "DT_node_data_2".node_id AS node_id, "DT_node_data_2".feature AS feature, "DT_node_data_2".threshold AS threshold, "DT_node_data_2".count AS count, "DT_node_data_2".depth AS depth, "DT_node_data_2".parent_id AS parent_id, "DT_node_data_2"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_2" LEFT OUTER JOIN "DT_node_data_2" ON "DT_node_lookup_2".node_id_2 = "DT_node_data_2".node_id), 
"GB_Model_0_2" AS 
(SELECT "DT_Output_2"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_2"."Estimator" AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_2"), 
"DT_node_lookup_3" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_86 <= -0.2933613657951355) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_27 <= -0.13283228874206543) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_52 <= -0.04266424477100372) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_47 <= 0.41482824087142944) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= -1.5035641193389893) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_70 <= -0.12727195024490356) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_66 <= -0.40235328674316406) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20180416233616_DKUVME_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_3" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values".threshold AS FLOAT) AS threshold, CAST("Values".count AS FLOAT) AS count, CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 75 AS count, 3 AS depth, 2 AS parent_id, 1.8342147290629693 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 68 AS count, 3 AS depth, 2 AS parent_id, 0.4102780402420064 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 101 AS count, 3 AS depth, 5 AS parent_id, -0.48392751303649234 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 63 AS count, 3 AS depth, 5 AS parent_id, 0.6397464523670704 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS count, 3 AS depth, 9 AS parent_id, -1.0005168152052903 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 22 AS count, 3 AS depth, 9 AS parent_id, 1.8807321958458105 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 172 AS count, 3 AS depth, 12 AS parent_id, -0.7876573638432443 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 288 AS count, 3 AS depth, 12 AS parent_id, -0.1562045849424564 AS "Estimator") AS "Values"), 
"DT_Output_3" AS 
(SELECT "DT_node_lookup_3"."KEY" AS "KEY", "DT_node_lookup_3".node_id_2 AS node_id_2, "DT_node_data_3".node_id AS node_id, "DT_node_data_3".feature AS feature, "DT_node_data_3".threshold AS threshold, "DT_node_data_3".count AS count, "DT_node_data_3".depth AS depth, "DT_node_data_3".parent_id AS parent_id, "DT_node_data_3"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_3" LEFT OUTER JOIN "DT_node_data_3" ON "DT_node_lookup_3".node_id_2 = "DT_node_data_3".node_id), 
"GB_Model_0_3" AS 
(SELECT "DT_Output_3"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_3"."Estimator" AS "Score_3" 
FROM "DT_Output_3"), 
"DT_node_lookup_4" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_36 <= 0.33914458751678467) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_17 <= 0.13017117977142334) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_95 <= -1.11869215965271) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_66 <= -0.16970783472061157) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= 0.39106184244155884) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_19 <= -1.0106016397476196) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_39 <= -0.9205691814422607) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20180416233616_DKUVME_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_4" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values".threshold AS FLOAT) AS threshold, CAST("Values".count AS FLOAT) AS count, CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 32 AS count, 3 AS depth, 2 AS parent_id, 0.3812246598361148 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 244 AS count, 3 AS depth, 2 AS parent_id, -0.7175941930737698 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 97 AS count, 3 AS depth, 5 AS parent_id, 0.557880662497955 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 120 AS count, 3 AS depth, 5 AS parent_id, -0.36207098364994006 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 38 AS count, 3 AS depth, 9 AS parent_id, 2.0392795748568457 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 171 AS count, 3 AS depth, 9 AS parent_id, 0.4992444844850455 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 3 AS depth, 12 AS parent_id, 0.9220060395544859 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 79 AS count, 3 AS depth, 12 AS parent_id, -0.7248927195132079 AS "Estimator") AS "Values"), 
"DT_Output_4" AS 
(SELECT "DT_node_lookup_4"."KEY" AS "KEY", "DT_node_lookup_4".node_id_2 AS node_id_2, "DT_node_data_4".node_id AS node_id, "DT_node_data_4".feature AS feature, "DT_node_data_4".threshold AS threshold, "DT_node_data_4".count AS count, "DT_node_data_4".depth AS depth, "DT_node_data_4".parent_id AS parent_id, "DT_node_data_4"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_4" LEFT OUTER JOIN "DT_node_data_4" ON "DT_node_lookup_4".node_id_2 = "DT_node_data_4".node_id), 
"GB_Model_1_0" AS 
(SELECT "DT_Output_4"."KEY" AS "KEY", "DT_Output_4"."Estimator" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_4"), 
"DT_node_lookup_5" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_33 <= 0.2938539981842041) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_29 <= -0.2826199531555176) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_68 <= -2.6612305641174316) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_70 <= 0.2864289879798889) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_42 <= -0.18312549591064453) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_52 <= -0.3452757000923157) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_44 <= -0.7322684526443481) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20180416233616_DKUVME_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_5" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values".threshold AS FLOAT) AS threshold, CAST("Values".count AS FLOAT) AS count, CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 2 AS parent_id, 2.3152678795227244 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 216 AS count, 3 AS depth, 2 AS parent_id, -0.7301631283671322 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 171 AS count, 3 AS depth, 5 AS parent_id, 0.3646724360178618 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 115 AS count, 3 AS depth, 5 AS parent_id, -0.5113243808027986 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 42 AS count, 3 AS depth, 9 AS parent_id, 0.053076447138524684 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 93 AS count, 3 AS depth, 9 AS parent_id, 1.2994674794737449 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 48 AS count, 3 AS depth, 12 AS parent_id, 0.8757170132842581 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 113 AS count, 3 AS depth, 12 AS parent_id, -0.3712030236292033 AS "Estimator") AS "Values"), 
"DT_Output_5" AS 
(SELECT "DT_node_lookup_5"."KEY" AS "KEY", "DT_node_lookup_5".node_id_2 AS node_id_2, "DT_node_data_5".node_id AS node_id, "DT_node_data_5".feature AS feature, "DT_node_data_5".threshold AS threshold, "DT_node_data_5".count AS count, "DT_node_data_5".depth AS depth, "DT_node_data_5".parent_id AS parent_id, "DT_node_data_5"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_5" LEFT OUTER JOIN "DT_node_data_5" ON "DT_node_lookup_5".node_id_2 = "DT_node_data_5".node_id), 
"GB_Model_1_1" AS 
(SELECT "DT_Output_5"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_5"."Estimator" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_5"), 
"DT_node_lookup_6" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_17 <= 0.009806754067540169) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_63 <= 0.562813401222229) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_88 <= -1.3287686109542847) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_48 <= -1.527733564376831) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_66 <= 0.4000149369239807) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_68 <= 0.42267632484436035) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_89 <= -0.5889948606491089) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20180416233616_DKUVME_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_6" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values".threshold AS FLOAT) AS threshold, CAST("Values".count AS FLOAT) AS count, CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 33 AS count, 3 AS depth, 2 AS parent_id, 1.8993228749483437 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 257 AS count, 3 AS depth, 2 AS parent_id, 0.44045379545816926 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, 5 AS parent_id, 2.330360107660911 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 118 AS count, 3 AS depth, 5 AS parent_id, -0.551311903741078 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 176 AS count, 3 AS depth, 9 AS parent_id, -0.8097690073051855 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 74 AS count, 3 AS depth, 9 AS parent_id, -0.06815281724204676 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 41 AS count, 3 AS depth, 12 AS parent_id, 1.111443660640517 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 95 AS count, 3 AS depth, 12 AS parent_id, -0.2789135087965411 AS "Estimator") AS "Values"), 
"DT_Output_6" AS 
(SELECT "DT_node_lookup_6"."KEY" AS "KEY", "DT_node_lookup_6".node_id_2 AS node_id_2, "DT_node_data_6".node_id AS node_id, "DT_node_data_6".feature AS feature, "DT_node_data_6".threshold AS threshold, "DT_node_data_6".count AS count, "DT_node_data_6".depth AS depth, "DT_node_data_6".parent_id AS parent_id, "DT_node_data_6"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_6" LEFT OUTER JOIN "DT_node_data_6" ON "DT_node_lookup_6".node_id_2 = "DT_node_data_6".node_id), 
"GB_Model_1_2" AS 
(SELECT "DT_Output_6"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_6"."Estimator" AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_6"), 
"DT_node_lookup_7" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_86 <= -0.4706636071205139) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_27 <= -0.13283228874206543) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_52 <= -0.8087530136108398) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_54 <= -0.525373101234436) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_45 <= -0.24294397234916687) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_66 <= -0.31590425968170166) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= -1.6154675483703613) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20180416233616_DKUVME_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_7" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values".threshold AS FLOAT) AS threshold, CAST("Values".count AS FLOAT) AS count, CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 38 AS count, 3 AS depth, 2 AS parent_id, 1.966206522044408 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 81 AS count, 3 AS depth, 2 AS parent_id, 0.7149726986881452 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 37 AS count, 3 AS depth, 5 AS parent_id, 1.0351817055022439 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 102 AS count, 3 AS depth, 5 AS parent_id, -0.4056692636981687 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 87 AS count, 3 AS depth, 9 AS parent_id, -0.5134586390244552 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 148 AS count, 3 AS depth, 9 AS parent_id, 0.47529367364584185 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS count, 3 AS depth, 12 AS parent_id, 1.0132153673773838 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 294 AS count, 3 AS depth, 12 AS parent_id, -0.6026715497241031 AS "Estimator") AS "Values"), 
"DT_Output_7" AS 
(SELECT "DT_node_lookup_7"."KEY" AS "KEY", "DT_node_lookup_7".node_id_2 AS node_id_2, "DT_node_data_7".node_id AS node_id, "DT_node_data_7".feature AS feature, "DT_node_data_7".threshold AS threshold, "DT_node_data_7".count AS count, "DT_node_data_7".depth AS depth, "DT_node_data_7".parent_id AS parent_id, "DT_node_data_7"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_7" LEFT OUTER JOIN "DT_node_data_7" ON "DT_node_lookup_7".node_id_2 = "DT_node_data_7".node_id), 
"GB_Model_1_3" AS 
(SELECT "DT_Output_7"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_7"."Estimator" AS "Score_3" 
FROM "DT_Output_7"), 
"DT_node_lookup_8" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_19 <= -0.4837368130683899) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_36 <= 0.5660068988800049) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_27 <= -0.20135825872421265) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_50 <= 0.7656858563423157) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_53 <= 0.5165193676948547) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 0.19550010561943054) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_54 <= -0.16432341933250427) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20180416233616_DKUVME_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_8" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values".threshold AS FLOAT) AS threshold, CAST("Values".count AS FLOAT) AS count, CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 82 AS count, 3 AS depth, 2 AS parent_id, -0.6770059565741455 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 90 AS count, 3 AS depth, 2 AS parent_id, 0.7124065219241152 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 65 AS count, 3 AS depth, 5 AS parent_id, 1.6576552956417707 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 3 AS depth, 5 AS parent_id, -0.5283979442431551 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 229 AS count, 3 AS depth, 9 AS parent_id, -0.19151924805927348 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 177 AS count, 3 AS depth, 9 AS parent_id, -0.8174353943401923 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 65 AS count, 3 AS depth, 12 AS parent_id, -0.43715568985985254 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 76 AS count, 3 AS depth, 12 AS parent_id, 0.980729835979138 AS "Estimator") AS "Values"), 
"DT_Output_8" AS 
(SELECT "DT_node_lookup_8"."KEY" AS "KEY", "DT_node_lookup_8".node_id_2 AS node_id_2, "DT_node_data_8".node_id AS node_id, "DT_node_data_8".feature AS feature, "DT_node_data_8".threshold AS threshold, "DT_node_data_8".count AS count, "DT_node_data_8".depth AS depth, "DT_node_data_8".parent_id AS parent_id, "DT_node_data_8"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_8" LEFT OUTER JOIN "DT_node_data_8" ON "DT_node_lookup_8".node_id_2 = "DT_node_data_8".node_id), 
"GB_Model_2_0" AS 
(SELECT "DT_Output_8"."KEY" AS "KEY", "DT_Output_8"."Estimator" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_8"), 
"DT_node_lookup_9" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_33 <= 0.2938539981842041) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_29 <= -0.2826199531555176) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_68 <= -2.6612305641174316) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_66 <= -0.575156033039093) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_42 <= -0.18312549591064453) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_70 <= -0.4421713352203369) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_44 <= -0.7322684526443481) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20180416233616_DKUVME_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_9" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values".threshold AS FLOAT) AS threshold, CAST("Values".count AS FLOAT) AS count, CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 2 AS parent_id, 1.9249621951850155 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 216 AS count, 3 AS depth, 2 AS parent_id, -0.7019322299569851 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 81 AS count, 3 AS depth, 5 AS parent_id, 0.6765093803516228 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 205 AS count, 3 AS depth, 5 AS parent_id, -0.23414876109444827 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 50 AS count, 3 AS depth, 9 AS parent_id, 1.5405902716546398 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 85 AS count, 3 AS depth, 9 AS parent_id, 0.3966645394496718 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 48 AS count, 3 AS depth, 12 AS parent_id, 0.7692075261402554 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 113 AS count, 3 AS depth, 12 AS parent_id, -0.3472998657501609 AS "Estimator") AS "Values"), 
"DT_Output_9" AS 
(SELECT "DT_node_lookup_9"."KEY" AS "KEY", "DT_node_lookup_9".node_id_2 AS node_id_2, "DT_node_data_9".node_id AS node_id, "DT_node_data_9".feature AS feature, "DT_node_data_9".threshold AS threshold, "DT_node_data_9".count AS count, "DT_node_data_9".depth AS depth, "DT_node_data_9".parent_id AS parent_id, "DT_node_data_9"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_9" LEFT OUTER JOIN "DT_node_data_9" ON "DT_node_lookup_9".node_id_2 = "DT_node_data_9".node_id), 
"GB_Model_2_1" AS 
(SELECT "DT_Output_9"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_9"."Estimator" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_9")
 INSERT INTO "TMP_20180416233616_EFAWWB_GB_B0" ("KEY", "Score_0", "Score_1", "Score_2", "Score_3") SELECT "GB_B0"."KEY", "GB_B0"."Score_0", "GB_B0"."Score_1", "GB_B0"."Score_2", "GB_B0"."Score_3" 
FROM (SELECT "GB_esu_0"."KEY" AS "KEY", "GB_esu_0"."Score_0" AS "Score_0", "GB_esu_0"."Score_1" AS "Score_1", "GB_esu_0"."Score_2" AS "Score_2", "GB_esu_0"."Score_3" AS "Score_3" 
FROM (SELECT "GB_Model_0_0"."KEY" AS "KEY", "GB_Model_0_0"."Score_0" AS "Score_0", "GB_Model_0_0"."Score_1" AS "Score_1", "GB_Model_0_0"."Score_2" AS "Score_2", "GB_Model_0_0"."Score_3" AS "Score_3" 
FROM "GB_Model_0_0" UNION ALL SELECT "GB_Model_0_1"."KEY" AS "KEY", "GB_Model_0_1"."Score_0" AS "Score_0", "GB_Model_0_1"."Score_1" AS "Score_1", "GB_Model_0_1"."Score_2" AS "Score_2", "GB_Model_0_1"."Score_3" AS "Score_3" 
FROM "GB_Model_0_1" UNION ALL SELECT "GB_Model_0_2"."KEY" AS "KEY", "GB_Model_0_2"."Score_0" AS "Score_0", "GB_Model_0_2"."Score_1" AS "Score_1", "GB_Model_0_2"."Score_2" AS "Score_2", "GB_Model_0_2"."Score_3" AS "Score_3" 
FROM "GB_Model_0_2" UNION ALL SELECT "GB_Model_0_3"."KEY" AS "KEY", "GB_Model_0_3"."Score_0" AS "Score_0", "GB_Model_0_3"."Score_1" AS "Score_1", "GB_Model_0_3"."Score_2" AS "Score_2", "GB_Model_0_3"."Score_3" AS "Score_3" 
FROM "GB_Model_0_3" UNION ALL SELECT "GB_Model_1_0"."KEY" AS "KEY", "GB_Model_1_0"."Score_0" AS "Score_0", "GB_Model_1_0"."Score_1" AS "Score_1", "GB_Model_1_0"."Score_2" AS "Score_2", "GB_Model_1_0"."Score_3" AS "Score_3" 
FROM "GB_Model_1_0" UNION ALL SELECT "GB_Model_1_1"."KEY" AS "KEY", "GB_Model_1_1"."Score_0" AS "Score_0", "GB_Model_1_1"."Score_1" AS "Score_1", "GB_Model_1_1"."Score_2" AS "Score_2", "GB_Model_1_1"."Score_3" AS "Score_3" 
FROM "GB_Model_1_1" UNION ALL SELECT "GB_Model_1_2"."KEY" AS "KEY", "GB_Model_1_2"."Score_0" AS "Score_0", "GB_Model_1_2"."Score_1" AS "Score_1", "GB_Model_1_2"."Score_2" AS "Score_2", "GB_Model_1_2"."Score_3" AS "Score_3" 
FROM "GB_Model_1_2" UNION ALL SELECT "GB_Model_1_3"."KEY" AS "KEY", "GB_Model_1_3"."Score_0" AS "Score_0", "GB_Model_1_3"."Score_1" AS "Score_1", "GB_Model_1_3"."Score_2" AS "Score_2", "GB_Model_1_3"."Score_3" AS "Score_3" 
FROM "GB_Model_1_3" UNION ALL SELECT "GB_Model_2_0"."KEY" AS "KEY", "GB_Model_2_0"."Score_0" AS "Score_0", "GB_Model_2_0"."Score_1" AS "Score_1", "GB_Model_2_0"."Score_2" AS "Score_2", "GB_Model_2_0"."Score_3" AS "Score_3" 
FROM "GB_Model_2_0" UNION ALL SELECT "GB_Model_2_1"."KEY" AS "KEY", "GB_Model_2_1"."Score_0" AS "Score_0", "GB_Model_2_1"."Score_1" AS "Score_1", "GB_Model_2_1"."Score_2" AS "Score_2", "GB_Model_2_1"."Score_3" AS "Score_3" 
FROM "GB_Model_2_1") AS "GB_esu_0") AS "GB_B0"

-- Code For temporary table TMP_20180416233616_JD4R30_GB_B1 part 1/2. Create 


CREATE TEMPORARY TABLE "TMP_20180416233616_JD4R30_GB_B1" (
	"KEY" BIGINT, 
	"Score_0" FLOAT, 
	"Score_1" FLOAT, 
	"Score_2" FLOAT, 
	"Score_3" FLOAT
)



-- Code For temporary table TMP_20180416233616_JD4R30_GB_B1 part 2/2. Populate

WITH "DT_node_lookup_10" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_40 <= 0.23466400802135468) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_23 <= 0.653800368309021) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_94 <= 1.4900763034820557) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_17 <= 0.007025271654129028) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_36 <= -0.8171613216400146) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_59 <= 1.3971236944198608) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_68 <= 0.48524123430252075) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20180416233616_DKUVME_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_10" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values".threshold AS FLOAT) AS threshold, CAST("Values".count AS FLOAT) AS count, CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 337 AS count, 3 AS depth, 2 AS parent_id, -0.5265909546795908 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 28 AS count, 3 AS depth, 2 AS parent_id, 0.7236942527731726 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 66 AS count, 3 AS depth, 5 AS parent_id, 0.855482072690872 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 52 AS count, 3 AS depth, 5 AS parent_id, -0.4907022795891865 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 63 AS count, 3 AS depth, 9 AS parent_id, 1.576336635545126 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, 9 AS parent_id, -1.0053300270122332 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 168 AS count, 3 AS depth, 12 AS parent_id, -0.25188534077016084 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 77 AS count, 3 AS depth, 12 AS parent_id, 0.8603305235614394 AS "Estimator") AS "Values"), 
"DT_Output_10" AS 
(SELECT "DT_node_lookup_10"."KEY" AS "KEY", "DT_node_lookup_10".node_id_2 AS node_id_2, "DT_node_data_10".node_id AS node_id, "DT_node_data_10".feature AS feature, "DT_node_data_10".threshold AS threshold, "DT_node_data_10".count AS count, "DT_node_data_10".depth AS depth, "DT_node_data_10".parent_id AS parent_id, "DT_node_data_10"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_10" LEFT OUTER JOIN "DT_node_data_10" ON "DT_node_lookup_10".node_id_2 = "DT_node_data_10".node_id), 
"GB_Model_2_2" AS 
(SELECT "DT_Output_10"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_10"."Estimator" AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_10"), 
"DT_node_lookup_11" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_86 <= -0.2933613657951355) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_27 <= -1.1628973484039307) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_85 <= -0.30302000045776367) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_68 <= 0.18960626423358917) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= -0.33124351501464844) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_52 <= -1.577146053314209) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= -1.5035641193389893) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20180416233616_DKUVME_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_11" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values".threshold AS FLOAT) AS threshold, CAST("Values".count AS FLOAT) AS count, CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, 2 AS parent_id, -0.13330856995697912 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 32 AS count, 3 AS depth, 2 AS parent_id, 2.0731038886012056 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 145 AS count, 3 AS depth, 5 AS parent_id, 0.6411820251796839 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 122 AS count, 3 AS depth, 5 AS parent_id, -0.2963804972205661 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, 9 AS parent_id, 0.9950514245863555 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 171 AS count, 3 AS depth, 9 AS parent_id, -0.7580821903334131 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 24 AS count, 3 AS depth, 12 AS parent_id, 1.4048970058560026 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 292 AS count, 3 AS depth, 12 AS parent_id, -0.16687109746048226 AS "Estimator") AS "Values"), 
"DT_Output_11" AS 
(SELECT "DT_node_lookup_11"."KEY" AS "KEY", "DT_node_lookup_11".node_id_2 AS node_id_2, "DT_node_data_11".node_id AS node_id, "DT_node_data_11".feature AS feature, "DT_node_data_11".threshold AS threshold, "DT_node_data_11".count AS count, "DT_node_data_11".depth AS depth, "DT_node_data_11".parent_id AS parent_id, "DT_node_data_11"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_11" LEFT OUTER JOIN "DT_node_data_11" ON "DT_node_lookup_11".node_id_2 = "DT_node_data_11".node_id), 
"GB_Model_2_3" AS 
(SELECT "DT_Output_11"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_11"."Estimator" AS "Score_3" 
FROM "DT_Output_11"), 
"DT_node_lookup_12" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_92 <= 1.657126545906067) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_36 <= 0.4517136812210083) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_17 <= 0.21111923456192017) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_49 <= 0.11001931875944138) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_33 <= -0.7225585579872131) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_19 <= -1.1136705875396729) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_12 <= 1.3955795764923096) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20180416233616_DKUVME_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_12" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values".threshold AS FLOAT) AS threshold, CAST("Values".count AS FLOAT) AS count, CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 307 AS count, 3 AS depth, 2 AS parent_id, -0.5653299229275933 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 201 AS count, 3 AS depth, 2 AS parent_id, 0.08547927287124965 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 136 AS count, 3 AS depth, 5 AS parent_id, -0.21281038164828014 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 119 AS count, 3 AS depth, 5 AS parent_id, 0.839364101335811 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 9 AS parent_id, 2.1684313986143335 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS count, 3 AS depth, 9 AS parent_id, -0.6470687737710429 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 3 AS depth, 12 AS parent_id, 2.530614845001046 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 12 AS parent_id, -1.0321075790511762 AS "Estimator") AS "Values"), 
"DT_Output_12" AS 
(SELECT "DT_node_lookup_12"."KEY" AS "KEY", "DT_node_lookup_12".node_id_2 AS node_id_2, "DT_node_data_12".node_id AS node_id, "DT_node_data_12".feature AS feature, "DT_node_data_12".threshold AS threshold, "DT_node_data_12".count AS count, "DT_node_data_12".depth AS depth, "DT_node_data_12".parent_id AS parent_id, "DT_node_data_12"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_12" LEFT OUTER JOIN "DT_node_data_12" ON "DT_node_lookup_12".node_id_2 = "DT_node_data_12".node_id), 
"GB_Model_3_0" AS 
(SELECT "DT_Output_12"."KEY" AS "KEY", "DT_Output_12"."Estimator" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_12"), 
"DT_node_lookup_13" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_45 <= 0.3580455183982849) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_66 <= -0.2498721480369568) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_29 <= 1.977327585220337) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_42 <= -2.3948023319244385) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_57 <= 0.458151251077652) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_64 <= 0.8744536638259888) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_16 <= -1.4833226203918457) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20180416233616_DKUVME_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_13" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values".threshold AS FLOAT) AS threshold, CAST("Values".count AS FLOAT) AS count, CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 193 AS count, 3 AS depth, 2 AS parent_id, 0.08054611479944439 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, 2 AS parent_id, 2.4925522631381094 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 5 AS parent_id, 2.4375436565146478 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 300 AS count, 3 AS depth, 5 AS parent_id, -0.5627588113813426 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 173 AS count, 3 AS depth, 9 AS parent_id, 0.9707633383263335 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 43 AS count, 3 AS depth, 9 AS parent_id, -0.4565063743856572 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 12 AS parent_id, 1.9550644306374572 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 76 AS count, 3 AS depth, 12 AS parent_id, -0.6220196794745383 AS "Estimator") AS "Values"), 
"DT_Output_13" AS 
(SELECT "DT_node_lookup_13"."KEY" AS "KEY", "DT_node_lookup_13".node_id_2 AS node_id_2, "DT_node_data_13".node_id AS node_id, "DT_node_data_13".feature AS feature, "DT_node_data_13".threshold AS threshold, "DT_node_data_13".count AS count, "DT_node_data_13".depth AS depth, "DT_node_data_13".parent_id AS parent_id, "DT_node_data_13"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_13" LEFT OUTER JOIN "DT_node_data_13" ON "DT_node_lookup_13".node_id_2 = "DT_node_data_13".node_id), 
"GB_Model_3_1" AS 
(SELECT "DT_Output_13"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_13"."Estimator" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_13"), 
"DT_node_lookup_14" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_66 <= 0.8412501215934753) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_40 <= 0.8938565850257874) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_54 <= -1.4181888103485107) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_17 <= 0.7495154142379761) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_33 <= -0.41034236550331116) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= -0.05106404051184654) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_55 <= 0.1811840683221817) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20180416233616_DKUVME_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_14" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values".threshold AS FLOAT) AS threshold, CAST("Values".count AS FLOAT) AS count, CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 39 AS count, 3 AS depth, 2 AS parent_id, 0.7900642439273013 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 486 AS count, 3 AS depth, 2 AS parent_id, -0.391896286481112 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 93 AS count, 3 AS depth, 5 AS parent_id, 0.8516978679448161 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 25 AS count, 3 AS depth, 5 AS parent_id, -0.8412500487771803 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 27 AS count, 3 AS depth, 9 AS parent_id, 0.5234067298943462 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 34 AS count, 3 AS depth, 9 AS parent_id, 1.9985869904667624 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 51 AS count, 3 AS depth, 12 AS parent_id, -0.5988230125475793 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 45 AS count, 3 AS depth, 12 AS parent_id, 0.7563430026586779 AS "Estimator") AS "Values"), 
"DT_Output_14" AS 
(SELECT "DT_node_lookup_14"."KEY" AS "KEY", "DT_node_lookup_14".node_id_2 AS node_id_2, "DT_node_data_14".node_id AS node_id, "DT_node_data_14".feature AS feature, "DT_node_data_14".threshold AS threshold, "DT_node_data_14".count AS count, "DT_node_data_14".depth AS depth, "DT_node_data_14".parent_id AS parent_id, "DT_node_data_14"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_14" LEFT OUTER JOIN "DT_node_data_14" ON "DT_node_lookup_14".node_id_2 = "DT_node_data_14".node_id), 
"GB_Model_3_2" AS 
(SELECT "DT_Output_14"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_14"."Estimator" AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_14"), 
"DT_node_lookup_15" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_70 <= -0.24858278036117554) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_26 <= -1.9594383239746094) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_96 <= -0.25796619057655334) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_52 <= -1.3446013927459717) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_40 <= -0.9827808141708374) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_87 <= 0.1358424425125122) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_19 <= 1.5497785806655884) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20180416233616_DKUVME_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_15" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values".threshold AS FLOAT) AS threshold, CAST("Values".count AS FLOAT) AS count, CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 2 AS parent_id, -0.9849503926859623 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, 2 AS parent_id, 2.3735479234669996 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 29 AS count, 3 AS depth, 5 AS parent_id, 0.5404302244664866 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 295 AS count, 3 AS depth, 5 AS parent_id, -0.5557168918623728 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 44 AS count, 3 AS depth, 9 AS parent_id, 1.7427365314368388 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 36 AS count, 3 AS depth, 9 AS parent_id, 0.4885625727147515 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 359 AS count, 3 AS depth, 12 AS parent_id, -0.024004213189144176 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 26 AS count, 3 AS depth, 12 AS parent_id, 1.3764788816634295 AS "Estimator") AS "Values"), 
"DT_Output_15" AS 
(SELECT "DT_node_lookup_15"."KEY" AS "KEY", "DT_node_lookup_15".node_id_2 AS node_id_2, "DT_node_data_15".node_id AS node_id, "DT_node_data_15".feature AS feature, "DT_node_data_15".threshold AS threshold, "DT_node_data_15".count AS count, "DT_node_data_15".depth AS depth, "DT_node_data_15".parent_id AS parent_id, "DT_node_data_15"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_15" LEFT OUTER JOIN "DT_node_data_15" ON "DT_node_lookup_15".node_id_2 = "DT_node_data_15".node_id), 
"GB_Model_3_3" AS 
(SELECT "DT_Output_15"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_15"."Estimator" AS "Score_3" 
FROM "DT_Output_15"), 
"DT_node_lookup_16" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_19 <= -0.4837368130683899) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_36 <= 0.8799737691879272) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_27 <= -0.3503032326698303) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_50 <= 0.4371145963668823) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_53 <= 0.5165193676948547) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_92 <= 1.657126545906067) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_92 <= -0.07778002321720123) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20180416233616_DKUVME_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_16" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values".threshold AS FLOAT) AS threshold, CAST("Values".count AS FLOAT) AS count, CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 87 AS count, 3 AS depth, 2 AS parent_id, -0.5252381572090826 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 117 AS count, 3 AS depth, 2 AS parent_id, 0.6285426589686317 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 38 AS count, 3 AS depth, 5 AS parent_id, 1.6043898028711945 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS count, 3 AS depth, 5 AS parent_id, -0.009508804821949466 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 390 AS count, 3 AS depth, 9 AS parent_id, -0.493205869478129 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 3 AS depth, 9 AS parent_id, 0.9363810992109954 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 75 AS count, 3 AS depth, 12 AS parent_id, -0.308980486661334 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 66 AS count, 3 AS depth, 12 AS parent_id, 0.998412579505588 AS "Estimator") AS "Values"), 
"DT_Output_16" AS 
(SELECT "DT_node_lookup_16"."KEY" AS "KEY", "DT_node_lookup_16".node_id_2 AS node_id_2, "DT_node_data_16".node_id AS node_id, "DT_node_data_16".feature AS feature, "DT_node_data_16".threshold AS threshold, "DT_node_data_16".count AS count, "DT_node_data_16".depth AS depth, "DT_node_data_16".parent_id AS parent_id, "DT_node_data_16"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_16" LEFT OUTER JOIN "DT_node_data_16" ON "DT_node_lookup_16".node_id_2 = "DT_node_data_16".node_id), 
"GB_Model_4_0" AS 
(SELECT "DT_Output_16"."KEY" AS "KEY", "DT_Output_16"."Estimator" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_16"), 
"DT_node_lookup_17" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_33 <= 0.2938539981842041) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 0.31782376766204834) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_21 <= -2.3082938194274902) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_44 <= 0.45130205154418945) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_52 <= -0.18976891040802002) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_72 <= 0.8356757164001465) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_45 <= 0.4356154799461365) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20180416233616_DKUVME_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_17" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values".threshold AS FLOAT) AS threshold, CAST("Values".count AS FLOAT) AS count, CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 2 AS parent_id, 1.9776430019901166 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 322 AS count, 3 AS depth, 2 AS parent_id, -0.5180021690330411 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 115 AS count, 3 AS depth, 5 AS parent_id, 0.6421682241852277 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 62 AS count, 3 AS depth, 5 AS parent_id, -0.7090772737003405 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 86 AS count, 3 AS depth, 9 AS parent_id, -0.44690126575049605 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 26 AS count, 3 AS depth, 9 AS parent_id, 0.7515371334634852 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 117 AS count, 3 AS depth, 12 AS parent_id, 0.2872727657602635 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 67 AS count, 3 AS depth, 12 AS parent_id, 1.213467702862671 AS "Estimator") AS "Values"), 
"DT_Output_17" AS 
(SELECT "DT_node_lookup_17"."KEY" AS "KEY", "DT_node_lookup_17".node_id_2 AS node_id_2, "DT_node_data_17".node_id AS node_id, "DT_node_data_17".feature AS feature, "DT_node_data_17".threshold AS threshold, "DT_node_data_17".count AS count, "DT_node_data_17".depth AS depth, "DT_node_data_17".parent_id AS parent_id, "DT_node_data_17"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_17" LEFT OUTER JOIN "DT_node_data_17" ON "DT_node_lookup_17".node_id_2 = "DT_node_data_17".node_id), 
"GB_Model_4_1" AS 
(SELECT "DT_Output_17"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_17"."Estimator" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_17"), 
"DT_node_lookup_18" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_63 <= 0.562813401222229) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_17 <= 0.009806754067540169) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_88 <= -1.3287686109542847) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_44 <= 1.8476072549819946) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_93 <= -1.6767315864562988) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_45 <= 0.019457846879959106) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_98 <= -1.4142036437988281) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20180416233616_DKUVME_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_18" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values".threshold AS FLOAT) AS threshold, CAST("Values".count AS FLOAT) AS count, CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 33 AS count, 3 AS depth, 2 AS parent_id, 1.5326667904820934 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 257 AS count, 3 AS depth, 2 AS parent_id, 0.36789748176682185 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 264 AS count, 3 AS depth, 5 AS parent_id, -0.2742075579328963 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 3 AS depth, 5 AS parent_id, 1.436475060457357 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, 9 AS parent_id, 2.5266312047579413 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 9 AS parent_id, -0.9564232810535973 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, 12 AS parent_id, 0.6168330267796639 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 208 AS count, 3 AS depth, 12 AS parent_id, -0.6574706417987013 AS "Estimator") AS "Values"), 
"DT_Output_18" AS 
(SELECT "DT_node_lookup_18"."KEY" AS "KEY", "DT_node_lookup_18".node_id_2 AS node_id_2, "DT_node_data_18".node_id AS node_id, "DT_node_data_18".feature AS feature, "DT_node_data_18".threshold AS threshold, "DT_node_data_18".count AS count, "DT_node_data_18".depth AS depth, "DT_node_data_18".parent_id AS parent_id, "DT_node_data_18"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_18" LEFT OUTER JOIN "DT_node_data_18" ON "DT_node_lookup_18".node_id_2 = "DT_node_data_18".node_id), 
"GB_Model_4_2" AS 
(SELECT "DT_Output_18"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_18"."Estimator" AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_18"), 
"DT_node_lookup_19" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_86 <= -0.4706636071205139) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_27 <= -0.13283228874206543) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_26 <= -0.31074798107147217) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_54 <= -0.48071491718292236) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_45 <= -0.24294397234916687) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= -1.7008095979690552) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_65 <= 1.3423703908920288) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20180416233616_DKUVME_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_19" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values".threshold AS FLOAT) AS threshold, CAST("Values".count AS FLOAT) AS count, CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 64 AS count, 3 AS depth, 2 AS parent_id, 1.3487334826738 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 55 AS count, 3 AS depth, 2 AS parent_id, 0.32198631276883843 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 40 AS count, 3 AS depth, 5 AS parent_id, 0.7882581731811455 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 99 AS count, 3 AS depth, 5 AS parent_id, -0.40179822308616214 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS count, 3 AS depth, 9 AS parent_id, 2.114264090883053 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 224 AS count, 3 AS depth, 9 AS parent_id, 0.013483495686363365 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 281 AS count, 3 AS depth, 12 AS parent_id, -0.5856371012393505 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 26 AS count, 3 AS depth, 12 AS parent_id, 0.5424341777563836 AS "Estimator") AS "Values"), 
"DT_Output_19" AS 
(SELECT "DT_node_lookup_19"."KEY" AS "KEY", "DT_node_lookup_19".node_id_2 AS node_id_2, "DT_node_data_19".node_id AS node_id, "DT_node_data_19".feature AS feature, "DT_node_data_19".threshold AS threshold, "DT_node_data_19".count AS count, "DT_node_data_19".depth AS depth, "DT_node_data_19".parent_id AS parent_id, "DT_node_data_19"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_19" LEFT OUTER JOIN "DT_node_data_19" ON "DT_node_lookup_19".node_id_2 = "DT_node_data_19".node_id), 
"GB_Model_4_3" AS 
(SELECT "DT_Output_19"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_19"."Estimator" AS "Score_3" 
FROM "DT_Output_19")
 INSERT INTO "TMP_20180416233616_JD4R30_GB_B1" ("KEY", "Score_0", "Score_1", "Score_2", "Score_3") SELECT "GB_B1"."KEY", "GB_B1"."Score_0", "GB_B1"."Score_1", "GB_B1"."Score_2", "GB_B1"."Score_3" 
FROM (SELECT "GB_esu_1"."KEY" AS "KEY", "GB_esu_1"."Score_0" AS "Score_0", "GB_esu_1"."Score_1" AS "Score_1", "GB_esu_1"."Score_2" AS "Score_2", "GB_esu_1"."Score_3" AS "Score_3" 
FROM (SELECT "GB_Model_2_2"."KEY" AS "KEY", "GB_Model_2_2"."Score_0" AS "Score_0", "GB_Model_2_2"."Score_1" AS "Score_1", "GB_Model_2_2"."Score_2" AS "Score_2", "GB_Model_2_2"."Score_3" AS "Score_3" 
FROM "GB_Model_2_2" UNION ALL SELECT "GB_Model_2_3"."KEY" AS "KEY", "GB_Model_2_3"."Score_0" AS "Score_0", "GB_Model_2_3"."Score_1" AS "Score_1", "GB_Model_2_3"."Score_2" AS "Score_2", "GB_Model_2_3"."Score_3" AS "Score_3" 
FROM "GB_Model_2_3" UNION ALL SELECT "GB_Model_3_0"."KEY" AS "KEY", "GB_Model_3_0"."Score_0" AS "Score_0", "GB_Model_3_0"."Score_1" AS "Score_1", "GB_Model_3_0"."Score_2" AS "Score_2", "GB_Model_3_0"."Score_3" AS "Score_3" 
FROM "GB_Model_3_0" UNION ALL SELECT "GB_Model_3_1"."KEY" AS "KEY", "GB_Model_3_1"."Score_0" AS "Score_0", "GB_Model_3_1"."Score_1" AS "Score_1", "GB_Model_3_1"."Score_2" AS "Score_2", "GB_Model_3_1"."Score_3" AS "Score_3" 
FROM "GB_Model_3_1" UNION ALL SELECT "GB_Model_3_2"."KEY" AS "KEY", "GB_Model_3_2"."Score_0" AS "Score_0", "GB_Model_3_2"."Score_1" AS "Score_1", "GB_Model_3_2"."Score_2" AS "Score_2", "GB_Model_3_2"."Score_3" AS "Score_3" 
FROM "GB_Model_3_2" UNION ALL SELECT "GB_Model_3_3"."KEY" AS "KEY", "GB_Model_3_3"."Score_0" AS "Score_0", "GB_Model_3_3"."Score_1" AS "Score_1", "GB_Model_3_3"."Score_2" AS "Score_2", "GB_Model_3_3"."Score_3" AS "Score_3" 
FROM "GB_Model_3_3" UNION ALL SELECT "GB_Model_4_0"."KEY" AS "KEY", "GB_Model_4_0"."Score_0" AS "Score_0", "GB_Model_4_0"."Score_1" AS "Score_1", "GB_Model_4_0"."Score_2" AS "Score_2", "GB_Model_4_0"."Score_3" AS "Score_3" 
FROM "GB_Model_4_0" UNION ALL SELECT "GB_Model_4_1"."KEY" AS "KEY", "GB_Model_4_1"."Score_0" AS "Score_0", "GB_Model_4_1"."Score_1" AS "Score_1", "GB_Model_4_1"."Score_2" AS "Score_2", "GB_Model_4_1"."Score_3" AS "Score_3" 
FROM "GB_Model_4_1" UNION ALL SELECT "GB_Model_4_2"."KEY" AS "KEY", "GB_Model_4_2"."Score_0" AS "Score_0", "GB_Model_4_2"."Score_1" AS "Score_1", "GB_Model_4_2"."Score_2" AS "Score_2", "GB_Model_4_2"."Score_3" AS "Score_3" 
FROM "GB_Model_4_2" UNION ALL SELECT "GB_Model_4_3"."KEY" AS "KEY", "GB_Model_4_3"."Score_0" AS "Score_0", "GB_Model_4_3"."Score_1" AS "Score_1", "GB_Model_4_3"."Score_2" AS "Score_2", "GB_Model_4_3"."Score_3" AS "Score_3" 
FROM "GB_Model_4_3") AS "GB_esu_1") AS "GB_B1"

-- Code For temporary table TMP_20180416233616_35BOG9_GB_B2 part 1/2. Create 


CREATE TEMPORARY TABLE "TMP_20180416233616_35BOG9_GB_B2" (
	"KEY" BIGINT, 
	"Score_0" FLOAT, 
	"Score_1" FLOAT, 
	"Score_2" FLOAT, 
	"Score_3" FLOAT
)



-- Code For temporary table TMP_20180416233616_35BOG9_GB_B2 part 2/2. Populate

WITH "DT_node_lookup_20" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_36 <= -0.3963547945022583) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_58 <= -0.8081027269363403) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_59 <= -0.4648457169532776) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_74 <= -1.5805139541625977) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= -0.783643364906311) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_50 <= -0.07706556469202042) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_42 <= -0.17006616294384003) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20180416233616_DKUVME_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_20" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values".threshold AS FLOAT) AS threshold, CAST("Values".count AS FLOAT) AS count, CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 3 AS depth, 2 AS parent_id, 2.0372609210809207 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 45 AS count, 3 AS depth, 2 AS parent_id, -0.20930506337257582 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 5 AS parent_id, 1.3602625073138455 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 204 AS count, 3 AS depth, 5 AS parent_id, -0.7405578972536723 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 55 AS count, 3 AS depth, 9 AS parent_id, 1.6318239376192958 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 64 AS count, 3 AS depth, 9 AS parent_id, 0.14158615873080022 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 195 AS count, 3 AS depth, 12 AS parent_id, -0.4031031714045873 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 220 AS count, 3 AS depth, 12 AS parent_id, 0.30769064277827685 AS "Estimator") AS "Values"), 
"DT_Output_20" AS 
(SELECT "DT_node_lookup_20"."KEY" AS "KEY", "DT_node_lookup_20".node_id_2 AS node_id_2, "DT_node_data_20".node_id AS node_id, "DT_node_data_20".feature AS feature, "DT_node_data_20".threshold AS threshold, "DT_node_data_20".count AS count, "DT_node_data_20".depth AS depth, "DT_node_data_20".parent_id AS parent_id, "DT_node_data_20"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_20" LEFT OUTER JOIN "DT_node_data_20" ON "DT_node_lookup_20".node_id_2 = "DT_node_data_20".node_id), 
"GB_Model_5_0" AS 
(SELECT "DT_Output_20"."KEY" AS "KEY", "DT_Output_20"."Estimator" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_20"), 
"DT_node_lookup_21" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_42 <= 0.2807415723800659) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_26 <= 1.1114366054534912) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 0.061435431241989136) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_89 <= -1.0016224384307861) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_23 <= 2.037313461303711) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_87 <= -1.6971454620361328) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_86 <= -1.3379225730895996) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20180416233616_DKUVME_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_21" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values".threshold AS FLOAT) AS threshold, CAST("Values".count AS FLOAT) AS count, CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 206 AS count, 3 AS depth, 2 AS parent_id, -0.3190682898852337 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 214 AS count, 3 AS depth, 2 AS parent_id, 0.43693940407887427 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 3 AS depth, 5 AS parent_id, -0.9855354148684932 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 57 AS count, 3 AS depth, 5 AS parent_id, 1.33997954450313 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 14 AS count, 3 AS depth, 9 AS parent_id, 1.0445362633482163 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 294 AS count, 3 AS depth, 9 AS parent_id, -0.4916853881753024 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 12 AS parent_id, -0.9039319757511836 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 12 AS parent_id, 2.8929051748938277 AS "Estimator") AS "Values"), 
"DT_Output_21" AS 
(SELECT "DT_node_lookup_21"."KEY" AS "KEY", "DT_node_lookup_21".node_id_2 AS node_id_2, "DT_node_data_21".node_id AS node_id, "DT_node_data_21".feature AS feature, "DT_node_data_21".threshold AS threshold, "DT_node_data_21".count AS count, "DT_node_data_21".depth AS depth, "DT_node_data_21".parent_id AS parent_id, "DT_node_data_21"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_21" LEFT OUTER JOIN "DT_node_data_21" ON "DT_node_lookup_21".node_id_2 = "DT_node_data_21".node_id), 
"GB_Model_5_1" AS 
(SELECT "DT_Output_21"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_21"."Estimator" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_21"), 
"DT_node_lookup_22" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_88 <= -1.5982550382614136) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_68 <= -0.2926334738731384) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= 1.5980671644210815) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_90 <= -1.0456141233444214) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_40 <= -0.9262987375259399) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= 2.2425379753112793) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_89 <= -0.8598697185516357) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20180416233616_DKUVME_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_22" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values".threshold AS FLOAT) AS threshold, CAST("Values".count AS FLOAT) AS count, CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 14 AS count, 3 AS depth, 2 AS parent_id, -1.0004168770700648 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, 2.2400971150850815 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 5 AS parent_id, -1.0260859566073985 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 29 AS count, 3 AS depth, 5 AS parent_id, 1.904241618173877 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 124 AS count, 3 AS depth, 9 AS parent_id, -0.8596206446580111 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 9 AS parent_id, 2.352714915864813 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 118 AS count, 3 AS depth, 12 AS parent_id, 0.731641662910432 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 508 AS count, 3 AS depth, 12 AS parent_id, -0.0961746035918945 AS "Estimator") AS "Values"), 
"DT_Output_22" AS 
(SELECT "DT_node_lookup_22"."KEY" AS "KEY", "DT_node_lookup_22".node_id_2 AS node_id_2, "DT_node_data_22".node_id AS node_id, "DT_node_data_22".feature AS feature, "DT_node_data_22".threshold AS threshold, "DT_node_data_22".count AS count, "DT_node_data_22".depth AS depth, "DT_node_data_22".parent_id AS parent_id, "DT_node_data_22"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_22" LEFT OUTER JOIN "DT_node_data_22" ON "DT_node_lookup_22".node_id_2 = "DT_node_data_22".node_id), 
"GB_Model_5_2" AS 
(SELECT "DT_Output_22"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_22"."Estimator" AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_22"), 
"DT_node_lookup_23" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_70 <= -0.24858278036117554) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_26 <= -1.9594383239746094) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_96 <= -0.25796619057655334) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_45 <= -1.1659590005874634) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_40 <= -0.9827808141708374) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_87 <= 1.143080234527588) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_66 <= -0.45711612701416016) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20180416233616_DKUVME_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_23" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values".threshold AS FLOAT) AS threshold, CAST("Values".count AS FLOAT) AS count, CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 2 AS parent_id, -0.9465776500320069 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, 2 AS parent_id, 1.905671495085038 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 33 AS count, 3 AS depth, 5 AS parent_id, 0.4814806585011914 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 291 AS count, 3 AS depth, 5 AS parent_id, -0.533933536244217 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 68 AS count, 3 AS depth, 9 AS parent_id, 1.2152491250085964 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 3 AS depth, 9 AS parent_id, -0.38568107301934484 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 128 AS count, 3 AS depth, 12 AS parent_id, -0.4189215040149469 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 257 AS count, 3 AS depth, 12 AS parent_id, 0.3029546761708406 AS "Estimator") AS "Values"), 
"DT_Output_23" AS 
(SELECT "DT_node_lookup_23"."KEY" AS "KEY", "DT_node_lookup_23".node_id_2 AS node_id_2, "DT_node_data_23".node_id AS node_id, "DT_node_data_23".feature AS feature, "DT_node_data_23".threshold AS threshold, "DT_node_data_23".count AS count, "DT_node_data_23".depth AS depth, "DT_node_data_23".parent_id AS parent_id, "DT_node_data_23"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_23" LEFT OUTER JOIN "DT_node_data_23" ON "DT_node_lookup_23".node_id_2 = "DT_node_data_23".node_id), 
"GB_Model_5_3" AS 
(SELECT "DT_Output_23"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_23"."Estimator" AS "Score_3" 
FROM "DT_Output_23"), 
"DT_node_lookup_24" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_19 <= -0.4837368130683899) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= 0.3917352855205536) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_36 <= 0.5243270397186279) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_97 <= 1.1148043870925903) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_29 <= 0.5209345817565918) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_17 <= 0.0033285736571997404) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_89 <= 1.8025964498519897) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20180416233616_DKUVME_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_24" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values".threshold AS FLOAT) AS threshold, CAST("Values".count AS FLOAT) AS count, CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 101 AS count, 3 AS depth, 2 AS parent_id, 0.3236848108182636 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 57 AS count, 3 AS depth, 2 AS parent_id, 1.23367084063227 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 82 AS count, 3 AS depth, 5 AS parent_id, -0.5113088675754031 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS count, 3 AS depth, 5 AS parent_id, 1.237935653410687 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 202 AS count, 3 AS depth, 9 AS parent_id, -0.39992918999254845 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 193 AS count, 3 AS depth, 9 AS parent_id, 0.335075114320529 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 150 AS count, 3 AS depth, 12 AS parent_id, -0.7868613127590514 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 12 AS parent_id, 2.6368007421441124 AS "Estimator") AS "Values"), 
"DT_Output_24" AS 
(SELECT "DT_node_lookup_24"."KEY" AS "KEY", "DT_node_lookup_24".node_id_2 AS node_id_2, "DT_node_data_24".node_id AS node_id, "DT_node_data_24".feature AS feature, "DT_node_data_24".threshold AS threshold, "DT_node_data_24".count AS count, "DT_node_data_24".depth AS depth, "DT_node_data_24".parent_id AS parent_id, "DT_node_data_24"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_24" LEFT OUTER JOIN "DT_node_data_24" ON "DT_node_lookup_24".node_id_2 = "DT_node_data_24".node_id), 
"GB_Model_6_0" AS 
(SELECT "DT_Output_24"."KEY" AS "KEY", "DT_Output_24"."Estimator" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_24"), 
"DT_node_lookup_25" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_33 <= 0.2938539981842041) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_76 <= -2.0653295516967773) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_14 <= 0.9181416034698486) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_29 <= -0.059266842901706696) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_42 <= -1.308957815170288) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_52 <= -0.996795654296875) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_57 <= 0.46444442868232727) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20180416233616_DKUVME_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_25" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values".threshold AS FLOAT) AS threshold, CAST("Values".count AS FLOAT) AS count, CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 2 AS parent_id, 2.3881650905470315 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 2 AS parent_id, 3.3385155320468454 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 253 AS count, 3 AS depth, 5 AS parent_id, -0.5841360242902354 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 247 AS count, 3 AS depth, 5 AS parent_id, 0.05242262994519202 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, 9 AS parent_id, -0.5315865147514149 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 27 AS count, 3 AS depth, 9 AS parent_id, 1.6402901710879831 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 178 AS count, 3 AS depth, 12 AS parent_id, 0.4442892295622008 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 83 AS count, 3 AS depth, 12 AS parent_id, -0.4097527174262549 AS "Estimator") AS "Values"), 
"DT_Output_25" AS 
(SELECT "DT_node_lookup_25"."KEY" AS "KEY", "DT_node_lookup_25".node_id_2 AS node_id_2, "DT_node_data_25".node_id AS node_id, "DT_node_data_25".feature AS feature, "DT_node_data_25".threshold AS threshold, "DT_node_data_25".count AS count, "DT_node_data_25".depth AS depth, "DT_node_data_25".parent_id AS parent_id, "DT_node_data_25"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_25" LEFT OUTER JOIN "DT_node_data_25" ON "DT_node_lookup_25".node_id_2 = "DT_node_data_25".node_id), 
"GB_Model_6_1" AS 
(SELECT "DT_Output_25"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_25"."Estimator" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_25"), 
"DT_node_lookup_26" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_63 <= 0.562813401222229) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_17 <= 0.009806754067540169) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_50 <= 0.26147329807281494) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_44 <= 1.8476072549819946) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_93 <= -1.6767315864562988) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_45 <= 0.019457846879959106) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_89 <= 1.7573624849319458) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20180416233616_DKUVME_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_26" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values".threshold AS FLOAT) AS threshold, CAST("Values".count AS FLOAT) AS count, CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 163 AS count, 3 AS depth, 2 AS parent_id, 0.11080658342050136 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 127 AS count, 3 AS depth, 2 AS parent_id, 0.8759831940461106 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 264 AS count, 3 AS depth, 5 AS parent_id, -0.2492045281667601 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 3 AS depth, 5 AS parent_id, 1.2447574211682664 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, 9 AS parent_id, 2.022451748982918 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 9 AS parent_id, -0.9257788974275334 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 208 AS count, 3 AS depth, 12 AS parent_id, -0.6281491686958314 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, 12 AS parent_id, 0.630559178088036 AS "Estimator") AS "Values"), 
"DT_Output_26" AS 
(SELECT "DT_node_lookup_26"."KEY" AS "KEY", "DT_node_lookup_26".node_id_2 AS node_id_2, "DT_node_data_26".node_id AS node_id, "DT_node_data_26".feature AS feature, "DT_node_data_26".threshold AS threshold, "DT_node_data_26".count AS count, "DT_node_data_26".depth AS depth, "DT_node_data_26".parent_id AS parent_id, "DT_node_data_26"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_26" LEFT OUTER JOIN "DT_node_data_26" ON "DT_node_lookup_26".node_id_2 = "DT_node_data_26".node_id), 
"GB_Model_6_2" AS 
(SELECT "DT_Output_26"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_26"."Estimator" AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_26"), 
"DT_node_lookup_27" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_86 <= -0.4706636071205139) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_27 <= -0.13283228874206543) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_92 <= 1.0380864143371582) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_60 <= 0.32237303256988525) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_45 <= -0.24294397234916687) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= -1.7008095979690552) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_80 <= 2.091862678527832) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20180416233616_DKUVME_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_27" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values".threshold AS FLOAT) AS threshold, CAST("Values".count AS FLOAT) AS count, CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 96 AS count, 3 AS depth, 2 AS parent_id, 1.0141174797685344 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 23 AS count, 3 AS depth, 2 AS parent_id, -0.25020565709949205 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 96 AS count, 3 AS depth, 5 AS parent_id, -0.40470704220840314 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 43 AS count, 3 AS depth, 5 AS parent_id, 0.7722052483603264 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS count, 3 AS depth, 9 AS parent_id, 1.7704960794082616 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 224 AS count, 3 AS depth, 9 AS parent_id, 0.009374346716175585 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 305 AS count, 3 AS depth, 12 AS parent_id, -0.478985463919559 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 12 AS parent_id, 2.9692825606231983 AS "Estimator") AS "Values"), 
"DT_Output_27" AS 
(SELECT "DT_node_lookup_27"."KEY" AS "KEY", "DT_node_lookup_27".node_id_2 AS node_id_2, "DT_node_data_27".node_id AS node_id, "DT_node_data_27".feature AS feature, "DT_node_data_27".threshold AS threshold, "DT_node_data_27".count AS count, "DT_node_data_27".depth AS depth, "DT_node_data_27".parent_id AS parent_id, "DT_node_data_27"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_27" LEFT OUTER JOIN "DT_node_data_27" ON "DT_node_lookup_27".node_id_2 = "DT_node_data_27".node_id), 
"GB_Model_6_3" AS 
(SELECT "DT_Output_27"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_27"."Estimator" AS "Score_3" 
FROM "DT_Output_27"), 
"DT_node_lookup_28" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= -0.3351137042045593) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_54 <= -0.16429412364959717) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_64 <= 1.2499008178710938) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_44 <= -0.1658758819103241) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_58 <= -0.3653413653373718) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_70 <= 0.6444548964500427) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_26 <= -0.9090570211410522) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20180416233616_DKUVME_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_28" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values".threshold AS FLOAT) AS threshold, CAST("Values".count AS FLOAT) AS count, CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 104 AS count, 3 AS depth, 2 AS parent_id, -0.4362681568355227 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 21 AS count, 3 AS depth, 2 AS parent_id, 0.9092783322600541 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 74 AS count, 3 AS depth, 5 AS parent_id, 0.1114709064166543 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 91 AS count, 3 AS depth, 5 AS parent_id, 1.1407575122194225 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 121 AS count, 3 AS depth, 9 AS parent_id, 0.5232500622085413 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 52 AS count, 3 AS depth, 9 AS parent_id, -0.5662534356225766 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 50 AS count, 3 AS depth, 12 AS parent_id, 0.348677961881484 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 287 AS count, 3 AS depth, 12 AS parent_id, -0.6134501908660651 AS "Estimator") AS "Values"), 
"DT_Output_28" AS 
(SELECT "DT_node_lookup_28"."KEY" AS "KEY", "DT_node_lookup_28".node_id_2 AS node_id_2, "DT_node_data_28".node_id AS node_id, "DT_node_data_28".feature AS feature, "DT_node_data_28".threshold AS threshold, "DT_node_data_28".count AS count, "DT_node_data_28".depth AS depth, "DT_node_data_28".parent_id AS parent_id, "DT_node_data_28"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_28" LEFT OUTER JOIN "DT_node_data_28" ON "DT_node_lookup_28".node_id_2 = "DT_node_data_28".node_id), 
"GB_Model_7_0" AS 
(SELECT "DT_Output_28"."KEY" AS "KEY", "DT_Output_28"."Estimator" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_28"), 
"DT_node_lookup_29" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_66 <= -0.24924510717391968) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_15 <= 0.06725873053073883) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_44 <= -1.0560027360916138) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_29 <= -0.30656492710113525) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_45 <= 0.4339013993740082) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_76 <= -2.037299633026123) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_62 <= -1.056100845336914) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20180416233616_DKUVME_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_29" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values".threshold AS FLOAT) AS threshold, CAST("Values".count AS FLOAT) AS count, CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 24 AS count, 3 AS depth, 2 AS parent_id, 1.2281559757866702 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 152 AS count, 3 AS depth, 2 AS parent_id, -0.308910901085278 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 63 AS count, 3 AS depth, 5 AS parent_id, -0.09284486053356182 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 99 AS count, 3 AS depth, 5 AS parent_id, 1.0933246219943948 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 9 AS parent_id, 1.8798743133870015 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 314 AS count, 3 AS depth, 9 AS parent_id, -0.5141002647113027 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, 12 AS parent_id, 1.521720664441315 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 128 AS count, 3 AS depth, 12 AS parent_id, 0.06330658628211205 AS "Estimator") AS "Values"), 
"DT_Output_29" AS 
(SELECT "DT_node_lookup_29"."KEY" AS "KEY", "DT_node_lookup_29".node_id_2 AS node_id_2, "DT_node_data_29".node_id AS node_id, "DT_node_data_29".feature AS feature, "DT_node_data_29".threshold AS threshold, "DT_node_data_29".count AS count, "DT_node_data_29".depth AS depth, "DT_node_data_29".parent_id AS parent_id, "DT_node_data_29"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_29" LEFT OUTER JOIN "DT_node_data_29" ON "DT_node_lookup_29".node_id_2 = "DT_node_data_29".node_id), 
"GB_Model_7_1" AS 
(SELECT "DT_Output_29"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_29"."Estimator" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_29")
 INSERT INTO "TMP_20180416233616_35BOG9_GB_B2" ("KEY", "Score_0", "Score_1", "Score_2", "Score_3") SELECT "GB_B2"."KEY", "GB_B2"."Score_0", "GB_B2"."Score_1", "GB_B2"."Score_2", "GB_B2"."Score_3" 
FROM (SELECT "GB_esu_2"."KEY" AS "KEY", "GB_esu_2"."Score_0" AS "Score_0", "GB_esu_2"."Score_1" AS "Score_1", "GB_esu_2"."Score_2" AS "Score_2", "GB_esu_2"."Score_3" AS "Score_3" 
FROM (SELECT "GB_Model_5_0"."KEY" AS "KEY", "GB_Model_5_0"."Score_0" AS "Score_0", "GB_Model_5_0"."Score_1" AS "Score_1", "GB_Model_5_0"."Score_2" AS "Score_2", "GB_Model_5_0"."Score_3" AS "Score_3" 
FROM "GB_Model_5_0" UNION ALL SELECT "GB_Model_5_1"."KEY" AS "KEY", "GB_Model_5_1"."Score_0" AS "Score_0", "GB_Model_5_1"."Score_1" AS "Score_1", "GB_Model_5_1"."Score_2" AS "Score_2", "GB_Model_5_1"."Score_3" AS "Score_3" 
FROM "GB_Model_5_1" UNION ALL SELECT "GB_Model_5_2"."KEY" AS "KEY", "GB_Model_5_2"."Score_0" AS "Score_0", "GB_Model_5_2"."Score_1" AS "Score_1", "GB_Model_5_2"."Score_2" AS "Score_2", "GB_Model_5_2"."Score_3" AS "Score_3" 
FROM "GB_Model_5_2" UNION ALL SELECT "GB_Model_5_3"."KEY" AS "KEY", "GB_Model_5_3"."Score_0" AS "Score_0", "GB_Model_5_3"."Score_1" AS "Score_1", "GB_Model_5_3"."Score_2" AS "Score_2", "GB_Model_5_3"."Score_3" AS "Score_3" 
FROM "GB_Model_5_3" UNION ALL SELECT "GB_Model_6_0"."KEY" AS "KEY", "GB_Model_6_0"."Score_0" AS "Score_0", "GB_Model_6_0"."Score_1" AS "Score_1", "GB_Model_6_0"."Score_2" AS "Score_2", "GB_Model_6_0"."Score_3" AS "Score_3" 
FROM "GB_Model_6_0" UNION ALL SELECT "GB_Model_6_1"."KEY" AS "KEY", "GB_Model_6_1"."Score_0" AS "Score_0", "GB_Model_6_1"."Score_1" AS "Score_1", "GB_Model_6_1"."Score_2" AS "Score_2", "GB_Model_6_1"."Score_3" AS "Score_3" 
FROM "GB_Model_6_1" UNION ALL SELECT "GB_Model_6_2"."KEY" AS "KEY", "GB_Model_6_2"."Score_0" AS "Score_0", "GB_Model_6_2"."Score_1" AS "Score_1", "GB_Model_6_2"."Score_2" AS "Score_2", "GB_Model_6_2"."Score_3" AS "Score_3" 
FROM "GB_Model_6_2" UNION ALL SELECT "GB_Model_6_3"."KEY" AS "KEY", "GB_Model_6_3"."Score_0" AS "Score_0", "GB_Model_6_3"."Score_1" AS "Score_1", "GB_Model_6_3"."Score_2" AS "Score_2", "GB_Model_6_3"."Score_3" AS "Score_3" 
FROM "GB_Model_6_3" UNION ALL SELECT "GB_Model_7_0"."KEY" AS "KEY", "GB_Model_7_0"."Score_0" AS "Score_0", "GB_Model_7_0"."Score_1" AS "Score_1", "GB_Model_7_0"."Score_2" AS "Score_2", "GB_Model_7_0"."Score_3" AS "Score_3" 
FROM "GB_Model_7_0" UNION ALL SELECT "GB_Model_7_1"."KEY" AS "KEY", "GB_Model_7_1"."Score_0" AS "Score_0", "GB_Model_7_1"."Score_1" AS "Score_1", "GB_Model_7_1"."Score_2" AS "Score_2", "GB_Model_7_1"."Score_3" AS "Score_3" 
FROM "GB_Model_7_1") AS "GB_esu_2") AS "GB_B2"

-- Code For temporary table TMP_20180416233616_NG6NVZ_GB_B3 part 1/2. Create 


CREATE TEMPORARY TABLE "TMP_20180416233616_NG6NVZ_GB_B3" (
	"KEY" BIGINT, 
	"Score_0" FLOAT, 
	"Score_1" FLOAT, 
	"Score_2" FLOAT, 
	"Score_3" FLOAT
)



-- Code For temporary table TMP_20180416233616_NG6NVZ_GB_B3 part 2/2. Populate

WITH "DT_node_lookup_30" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_40 <= 0.8934570550918579) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_66 <= 0.8412501215934753) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_54 <= -1.4181888103485107) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_55 <= 0.5972548127174377) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_36 <= -1.072002649307251) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_34 <= -1.4968369007110596) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_42 <= -0.9026205539703369) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20180416233616_DKUVME_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_30" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values".threshold AS FLOAT) AS threshold, CAST("Values".count AS FLOAT) AS count, CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 39 AS count, 3 AS depth, 2 AS parent_id, 0.6632549116769263 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 486 AS count, 3 AS depth, 2 AS parent_id, -0.3558795054572591 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 81 AS count, 3 AS depth, 5 AS parent_id, -0.03567211242163405 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 47 AS count, 3 AS depth, 5 AS parent_id, 1.1584666645501018 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 9 AS parent_id, -0.9852934749723309 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 23 AS count, 3 AS depth, 9 AS parent_id, 1.7663261209653378 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 23 AS count, 3 AS depth, 12 AS parent_id, 1.2145488680060543 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 98 AS count, 3 AS depth, 12 AS parent_id, -0.004161478985287084 AS "Estimator") AS "Values"), 
"DT_Output_30" AS 
(SELECT "DT_node_lookup_30"."KEY" AS "KEY", "DT_node_lookup_30".node_id_2 AS node_id_2, "DT_node_data_30".node_id AS node_id, "DT_node_data_30".feature AS feature, "DT_node_data_30".threshold AS threshold, "DT_node_data_30".count AS count, "DT_node_data_30".depth AS depth, "DT_node_data_30".parent_id AS parent_id, "DT_node_data_30"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_30" LEFT OUTER JOIN "DT_node_data_30" ON "DT_node_lookup_30".node_id_2 = "DT_node_data_30".node_id), 
"GB_Model_7_2" AS 
(SELECT "DT_Output_30"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_30"."Estimator" AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_30"), 
"DT_node_lookup_31" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_70 <= -0.24858278036117554) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_26 <= -1.9594383239746094) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_96 <= -0.25796619057655334) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_52 <= -1.3446013927459717) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_40 <= -0.9827808141708374) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_93 <= -0.054008543491363525) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_19 <= 1.559725046157837) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20180416233616_DKUVME_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_31" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values".threshold AS FLOAT) AS threshold, CAST("Values".count AS FLOAT) AS count, CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 2 AS parent_id, -0.9198534405432452 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, 2 AS parent_id, 1.6794713956110274 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 29 AS count, 3 AS depth, 5 AS parent_id, 0.5371248444645416 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 295 AS count, 3 AS depth, 5 AS parent_id, -0.5059556650144438 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 36 AS count, 3 AS depth, 9 AS parent_id, 1.4439566584291743 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 44 AS count, 3 AS depth, 9 AS parent_id, 0.41921564388845695 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 361 AS count, 3 AS depth, 12 AS parent_id, -0.01733218983525817 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 24 AS count, 3 AS depth, 12 AS parent_id, 1.2276527159460997 AS "Estimator") AS "Values"), 
"DT_Output_31" AS 
(SELECT "DT_node_lookup_31"."KEY" AS "KEY", "DT_node_lookup_31".node_id_2 AS node_id_2, "DT_node_data_31".node_id AS node_id, "DT_node_data_31".feature AS feature, "DT_node_data_31".threshold AS threshold, "DT_node_data_31".count AS count, "DT_node_data_31".depth AS depth, "DT_node_data_31".parent_id AS parent_id, "DT_node_data_31"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_31" LEFT OUTER JOIN "DT_node_data_31" ON "DT_node_lookup_31".node_id_2 = "DT_node_data_31".node_id), 
"GB_Model_7_3" AS 
(SELECT "DT_Output_31"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_31"."Estimator" AS "Score_3" 
FROM "DT_Output_31"), 
"DT_node_lookup_32" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_36 <= -0.3963547945022583) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_58 <= -0.8081027269363403) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_59 <= -0.4648457169532776) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_74 <= -1.5805139541625977) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= -0.783643364906311) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_50 <= -0.07706556469202042) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_42 <= -0.17006616294384003) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20180416233616_DKUVME_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_32" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values".threshold AS FLOAT) AS threshold, CAST("Values".count AS FLOAT) AS count, CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 3 AS depth, 2 AS parent_id, 1.6286073286337621 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 45 AS count, 3 AS depth, 2 AS parent_id, -0.19481618619803087 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 5 AS parent_id, 1.2201397770433582 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 204 AS count, 3 AS depth, 5 AS parent_id, -0.7006058321900406 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 55 AS count, 3 AS depth, 9 AS parent_id, 1.3251004748683666 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 64 AS count, 3 AS depth, 9 AS parent_id, 0.10781312241633065 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 195 AS count, 3 AS depth, 12 AS parent_id, -0.36547504903552075 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 220 AS count, 3 AS depth, 12 AS parent_id, 0.27252938872370147 AS "Estimator") AS "Values"), 
"DT_Output_32" AS 
(SELECT "DT_node_lookup_32"."KEY" AS "KEY", "DT_node_lookup_32".node_id_2 AS node_id_2, "DT_node_data_32".node_id AS node_id, "DT_node_data_32".feature AS feature, "DT_node_data_32".threshold AS threshold, "DT_node_data_32".count AS count, "DT_node_data_32".depth AS depth, "DT_node_data_32".parent_id AS parent_id, "DT_node_data_32"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_32" LEFT OUTER JOIN "DT_node_data_32" ON "DT_node_lookup_32".node_id_2 = "DT_node_data_32".node_id), 
"GB_Model_8_0" AS 
(SELECT "DT_Output_32"."KEY" AS "KEY", "DT_Output_32"."Estimator" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_32"), 
"DT_node_lookup_33" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_45 <= 0.3580455183982849) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_66 <= -0.2498721480369568) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_29 <= 0.744379997253418) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_26 <= 0.9379286766052246) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_94 <= 0.49208784103393555) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_49 <= -0.34674522280693054) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_15 <= 0.5200594663619995) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20180416233616_DKUVME_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_33" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values".threshold AS FLOAT) AS threshold, CAST("Values".count AS FLOAT) AS count, CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 156 AS count, 3 AS depth, 2 AS parent_id, -0.0962617518129227 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 44 AS count, 3 AS depth, 2 AS parent_id, 0.89416143097221 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 257 AS count, 3 AS depth, 5 AS parent_id, -0.6046192582782774 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 46 AS count, 3 AS depth, 5 AS parent_id, 0.2861013143086525 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 65 AS count, 3 AS depth, 9 AS parent_id, 1.1922305541784224 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 134 AS count, 3 AS depth, 9 AS parent_id, 0.25263785933042215 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 71 AS count, 3 AS depth, 12 AS parent_id, -0.7084940598595475 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 27 AS count, 3 AS depth, 12 AS parent_id, 0.6361653545047415 AS "Estimator") AS "Values"), 
"DT_Output_33" AS 
(SELECT "DT_node_lookup_33"."KEY" AS "KEY", "DT_node_lookup_33".node_id_2 AS node_id_2, "DT_node_data_33".node_id AS node_id, "DT_node_data_33".feature AS feature, "DT_node_data_33".threshold AS threshold, "DT_node_data_33".count AS count, "DT_node_data_33".depth AS depth, "DT_node_data_33".parent_id AS parent_id, "DT_node_data_33"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_33" LEFT OUTER JOIN "DT_node_data_33" ON "DT_node_lookup_33".node_id_2 = "DT_node_data_33".node_id), 
"GB_Model_8_1" AS 
(SELECT "DT_Output_33"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_33"."Estimator" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_33"), 
"DT_node_lookup_34" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_68 <= 0.1754646748304367) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_53 <= -0.7121955752372742) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_58 <= 0.28354978561401367) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_92 <= -2.375748634338379) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_88 <= -1.0240107774734497) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_101 <= -0.4197048544883728) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_15 <= 0.043750010430812836) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20180416233616_DKUVME_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_34" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values".threshold AS FLOAT) AS threshold, CAST("Values".count AS FLOAT) AS count, CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 83 AS count, 3 AS depth, 2 AS parent_id, -0.1548304653525664 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 36 AS count, 3 AS depth, 2 AS parent_id, 1.0383051334155586 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 5 AS parent_id, 2.2255114984347912 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 336 AS count, 3 AS depth, 5 AS parent_id, -0.4154214678001794 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 3 AS depth, 9 AS parent_id, -0.009628430019345092 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 33 AS count, 3 AS depth, 9 AS parent_id, 1.7169636475016297 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 145 AS count, 3 AS depth, 12 AS parent_id, 0.547215990906968 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 145 AS count, 3 AS depth, 12 AS parent_id, -0.3661988329368942 AS "Estimator") AS "Values"), 
"DT_Output_34" AS 
(SELECT "DT_node_lookup_34"."KEY" AS "KEY", "DT_node_lookup_34".node_id_2 AS node_id_2, "DT_node_data_34".node_id AS node_id, "DT_node_data_34".feature AS feature, "DT_node_data_34".threshold AS threshold, "DT_node_data_34".count AS count, "DT_node_data_34".depth AS depth, "DT_node_data_34".parent_id AS parent_id, "DT_node_data_34"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_34" LEFT OUTER JOIN "DT_node_data_34" ON "DT_node_lookup_34".node_id_2 = "DT_node_data_34".node_id), 
"GB_Model_8_2" AS 
(SELECT "DT_Output_34"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_34"."Estimator" AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_34"), 
"DT_node_lookup_35" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_86 <= -0.4706636071205139) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_95 <= 0.5070191621780396) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_59 <= 1.542790412902832) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_16 <= -0.8440678119659424) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_15 <= -0.18315890431404114) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_69 <= -1.0938040018081665) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_66 <= 0.25495433807373047) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20180416233616_DKUVME_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_35" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values".threshold AS FLOAT) AS threshold, CAST("Values".count AS FLOAT) AS count, CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 154 AS count, 3 AS depth, 2 AS parent_id, -0.11337514175171624 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 3 AS depth, 2 AS parent_id, 1.6418849443330463 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 3 AS depth, 5 AS parent_id, -0.6216158955421022 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 74 AS count, 3 AS depth, 5 AS parent_id, 1.1584294123299848 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 36 AS count, 3 AS depth, 9 AS parent_id, 0.3896823512450519 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 199 AS count, 3 AS depth, 9 AS parent_id, -0.6562439781948509 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 201 AS count, 3 AS depth, 12 AS parent_id, -0.24240426972820187 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 106 AS count, 3 AS depth, 12 AS parent_id, 0.5349775076754046 AS "Estimator") AS "Values"), 
"DT_Output_35" AS 
(SELECT "DT_node_lookup_35"."KEY" AS "KEY", "DT_node_lookup_35".node_id_2 AS node_id_2, "DT_node_data_35".node_id AS node_id, "DT_node_data_35".feature AS feature, "DT_node_data_35".threshold AS threshold, "DT_node_data_35".count AS count, "DT_node_data_35".depth AS depth, "DT_node_data_35".parent_id AS parent_id, "DT_node_data_35"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_35" LEFT OUTER JOIN "DT_node_data_35" ON "DT_node_lookup_35".node_id_2 = "DT_node_data_35".node_id), 
"GB_Model_8_3" AS 
(SELECT "DT_Output_35"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_35"."Estimator" AS "Score_3" 
FROM "DT_Output_35"), 
"DT_node_lookup_36" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_70 <= -0.3394414782524109) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_49 <= -0.7597110867500305) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_67 <= 1.5532143115997314) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_55 <= 0.16193881630897522) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_66 <= -0.7627311944961548) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_41 <= -0.19014450907707214) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_49 <= 2.200549602508545) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20180416233616_DKUVME_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_36" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values".threshold AS FLOAT) AS threshold, CAST("Values".count AS FLOAT) AS count, CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 60 AS count, 3 AS depth, 2 AS parent_id, -0.7092328585742997 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 2 AS parent_id, 2.0464262981640404 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 132 AS count, 3 AS depth, 5 AS parent_id, 0.8937940285938196 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 106 AS count, 3 AS depth, 5 AS parent_id, -0.00453213295143653 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 49 AS count, 3 AS depth, 9 AS parent_id, -0.45936615876490855 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 70 AS count, 3 AS depth, 9 AS parent_id, 0.8409212957881131 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 377 AS count, 3 AS depth, 12 AS parent_id, -0.45323632456187557 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 12 AS parent_id, 2.237265309753806 AS "Estimator") AS "Values"), 
"DT_Output_36" AS 
(SELECT "DT_node_lookup_36"."KEY" AS "KEY", "DT_node_lookup_36".node_id_2 AS node_id_2, "DT_node_data_36".node_id AS node_id, "DT_node_data_36".feature AS feature, "DT_node_data_36".threshold AS threshold, "DT_node_data_36".count AS count, "DT_node_data_36".depth AS depth, "DT_node_data_36".parent_id AS parent_id, "DT_node_data_36"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_36" LEFT OUTER JOIN "DT_node_data_36" ON "DT_node_lookup_36".node_id_2 = "DT_node_data_36".node_id), 
"GB_Model_9_0" AS 
(SELECT "DT_Output_36"."KEY" AS "KEY", "DT_Output_36"."Estimator" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_36"), 
"DT_node_lookup_37" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_42 <= 0.2807415723800659) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_58 <= -0.5493931770324707) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_61 <= 1.4409403800964355) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_54 <= 0.6049569845199585) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_94 <= -0.3838874101638794) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_62 <= -1.8135039806365967) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_83 <= -1.6919811964035034) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20180416233616_DKUVME_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_37" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values".threshold AS FLOAT) AS threshold, CAST("Values".count AS FLOAT) AS count, CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 130 AS count, 3 AS depth, 2 AS parent_id, -0.471889445631755 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS count, 3 AS depth, 2 AS parent_id, 1.326772454774941 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 250 AS count, 3 AS depth, 5 AS parent_id, 0.14492050001664705 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 94 AS count, 3 AS depth, 5 AS parent_id, 0.9086669496374197 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 9 AS parent_id, 2.358500582174962 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 105 AS count, 3 AS depth, 9 AS parent_id, -0.02154224797894598 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 12 AS parent_id, 1.4547032255433998 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 199 AS count, 3 AS depth, 12 AS parent_id, -0.6415553759477545 AS "Estimator") AS "Values"), 
"DT_Output_37" AS 
(SELECT "DT_node_lookup_37"."KEY" AS "KEY", "DT_node_lookup_37".node_id_2 AS node_id_2, "DT_node_data_37".node_id AS node_id, "DT_node_data_37".feature AS feature, "DT_node_data_37".threshold AS threshold, "DT_node_data_37".count AS count, "DT_node_data_37".depth AS depth, "DT_node_data_37".parent_id AS parent_id, "DT_node_data_37"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_37" LEFT OUTER JOIN "DT_node_data_37" ON "DT_node_lookup_37".node_id_2 = "DT_node_data_37".node_id), 
"GB_Model_9_1" AS 
(SELECT "DT_Output_37"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_37"."Estimator" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_37"), 
"DT_node_lookup_38" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_66 <= -0.009589112363755703) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_17 <= -0.7402669191360474) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_88 <= -0.11818385124206543) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_40 <= 0.8649275302886963) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_89 <= -0.5981148481369019) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_53 <= 0.004806406795978546) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_26 <= 0.23849156498908997) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20180416233616_DKUVME_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_38" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values".threshold AS FLOAT) AS threshold, CAST("Values".count AS FLOAT) AS count, CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 40 AS count, 3 AS depth, 2 AS parent_id, 0.900054286943627 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 57 AS count, 3 AS depth, 2 AS parent_id, -0.29048211274417224 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 254 AS count, 3 AS depth, 5 AS parent_id, -0.5896211685191636 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 62 AS count, 3 AS depth, 5 AS parent_id, 0.2127724770105171 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 61 AS count, 3 AS depth, 9 AS parent_id, 1.3708815748732015 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 42 AS count, 3 AS depth, 9 AS parent_id, 0.06424232726759085 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 171 AS count, 3 AS depth, 12 AS parent_id, -0.317686041925255 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 113 AS count, 3 AS depth, 12 AS parent_id, 0.41207228784095934 AS "Estimator") AS "Values"), 
"DT_Output_38" AS 
(SELECT "DT_node_lookup_38"."KEY" AS "KEY", "DT_node_lookup_38".node_id_2 AS node_id_2, "DT_node_data_38".node_id AS node_id, "DT_node_data_38".feature AS feature, "DT_node_data_38".threshold AS threshold, "DT_node_data_38".count AS count, "DT_node_data_38".depth AS depth, "DT_node_data_38".parent_id AS parent_id, "DT_node_data_38"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_38" LEFT OUTER JOIN "DT_node_data_38" ON "DT_node_lookup_38".node_id_2 = "DT_node_data_38".node_id), 
"GB_Model_9_2" AS 
(SELECT "DT_Output_38"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_38"."Estimator" AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_38"), 
"DT_node_lookup_39" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= 0.4962538778781891) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_27 <= -0.5051404237747192) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_40 <= -0.1721230149269104) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_16 <= -0.3695671558380127) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_48 <= -0.24321553111076355) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_35 <= 1.8205941915512085) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_94 <= -2.0004124641418457) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20180416233616_DKUVME_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_39" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values".threshold AS FLOAT) AS threshold, CAST("Values".count AS FLOAT) AS count, CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 76 AS count, 3 AS depth, 2 AS parent_id, 1.1335245958747624 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 105 AS count, 3 AS depth, 2 AS parent_id, 0.16342890854921438 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 136 AS count, 3 AS depth, 5 AS parent_id, -0.58408416828482 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 242 AS count, 3 AS depth, 5 AS parent_id, 0.20015678235149892 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 98 AS count, 3 AS depth, 9 AS parent_id, -0.13208846055926876 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 9 AS parent_id, 2.505984835417142 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 12 AS parent_id, 1.9038332168376224 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 137 AS count, 3 AS depth, 12 AS parent_id, -0.7302183680078292 AS "Estimator") AS "Values"), 
"DT_Output_39" AS 
(SELECT "DT_node_lookup_39"."KEY" AS "KEY", "DT_node_lookup_39".node_id_2 AS node_id_2, "DT_node_data_39".node_id AS node_id, "DT_node_data_39".feature AS feature, "DT_node_data_39".threshold AS threshold, "DT_node_data_39".count AS count, "DT_node_data_39".depth AS depth, "DT_node_data_39".parent_id AS parent_id, "DT_node_data_39"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_39" LEFT OUTER JOIN "DT_node_data_39" ON "DT_node_lookup_39".node_id_2 = "DT_node_data_39".node_id), 
"GB_Model_9_3" AS 
(SELECT "DT_Output_39"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_39"."Estimator" AS "Score_3" 
FROM "DT_Output_39")
 INSERT INTO "TMP_20180416233616_NG6NVZ_GB_B3" ("KEY", "Score_0", "Score_1", "Score_2", "Score_3") SELECT "GB_B3"."KEY", "GB_B3"."Score_0", "GB_B3"."Score_1", "GB_B3"."Score_2", "GB_B3"."Score_3" 
FROM (SELECT "GB_esu_3"."KEY" AS "KEY", "GB_esu_3"."Score_0" AS "Score_0", "GB_esu_3"."Score_1" AS "Score_1", "GB_esu_3"."Score_2" AS "Score_2", "GB_esu_3"."Score_3" AS "Score_3" 
FROM (SELECT "GB_Model_7_2"."KEY" AS "KEY", "GB_Model_7_2"."Score_0" AS "Score_0", "GB_Model_7_2"."Score_1" AS "Score_1", "GB_Model_7_2"."Score_2" AS "Score_2", "GB_Model_7_2"."Score_3" AS "Score_3" 
FROM "GB_Model_7_2" UNION ALL SELECT "GB_Model_7_3"."KEY" AS "KEY", "GB_Model_7_3"."Score_0" AS "Score_0", "GB_Model_7_3"."Score_1" AS "Score_1", "GB_Model_7_3"."Score_2" AS "Score_2", "GB_Model_7_3"."Score_3" AS "Score_3" 
FROM "GB_Model_7_3" UNION ALL SELECT "GB_Model_8_0"."KEY" AS "KEY", "GB_Model_8_0"."Score_0" AS "Score_0", "GB_Model_8_0"."Score_1" AS "Score_1", "GB_Model_8_0"."Score_2" AS "Score_2", "GB_Model_8_0"."Score_3" AS "Score_3" 
FROM "GB_Model_8_0" UNION ALL SELECT "GB_Model_8_1"."KEY" AS "KEY", "GB_Model_8_1"."Score_0" AS "Score_0", "GB_Model_8_1"."Score_1" AS "Score_1", "GB_Model_8_1"."Score_2" AS "Score_2", "GB_Model_8_1"."Score_3" AS "Score_3" 
FROM "GB_Model_8_1" UNION ALL SELECT "GB_Model_8_2"."KEY" AS "KEY", "GB_Model_8_2"."Score_0" AS "Score_0", "GB_Model_8_2"."Score_1" AS "Score_1", "GB_Model_8_2"."Score_2" AS "Score_2", "GB_Model_8_2"."Score_3" AS "Score_3" 
FROM "GB_Model_8_2" UNION ALL SELECT "GB_Model_8_3"."KEY" AS "KEY", "GB_Model_8_3"."Score_0" AS "Score_0", "GB_Model_8_3"."Score_1" AS "Score_1", "GB_Model_8_3"."Score_2" AS "Score_2", "GB_Model_8_3"."Score_3" AS "Score_3" 
FROM "GB_Model_8_3" UNION ALL SELECT "GB_Model_9_0"."KEY" AS "KEY", "GB_Model_9_0"."Score_0" AS "Score_0", "GB_Model_9_0"."Score_1" AS "Score_1", "GB_Model_9_0"."Score_2" AS "Score_2", "GB_Model_9_0"."Score_3" AS "Score_3" 
FROM "GB_Model_9_0" UNION ALL SELECT "GB_Model_9_1"."KEY" AS "KEY", "GB_Model_9_1"."Score_0" AS "Score_0", "GB_Model_9_1"."Score_1" AS "Score_1", "GB_Model_9_1"."Score_2" AS "Score_2", "GB_Model_9_1"."Score_3" AS "Score_3" 
FROM "GB_Model_9_1" UNION ALL SELECT "GB_Model_9_2"."KEY" AS "KEY", "GB_Model_9_2"."Score_0" AS "Score_0", "GB_Model_9_2"."Score_1" AS "Score_1", "GB_Model_9_2"."Score_2" AS "Score_2", "GB_Model_9_2"."Score_3" AS "Score_3" 
FROM "GB_Model_9_2" UNION ALL SELECT "GB_Model_9_3"."KEY" AS "KEY", "GB_Model_9_3"."Score_0" AS "Score_0", "GB_Model_9_3"."Score_1" AS "Score_1", "GB_Model_9_3"."Score_2" AS "Score_2", "GB_Model_9_3"."Score_3" AS "Score_3" 
FROM "GB_Model_9_3") AS "GB_esu_3") AS "GB_B3"

-- Code For temporary table TMP_20180416233617_M7Z4VM_GB_B4 part 1/2. Create 


CREATE TEMPORARY TABLE "TMP_20180416233617_M7Z4VM_GB_B4" (
	"KEY" BIGINT, 
	"Score_0" FLOAT, 
	"Score_1" FLOAT, 
	"Score_2" FLOAT, 
	"Score_3" FLOAT
)



-- Code For temporary table TMP_20180416233617_M7Z4VM_GB_B4 part 2/2. Populate

WITH "DT_node_lookup_40" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_19 <= -0.35736554861068726) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_36 <= 0.8799737691879272) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_38 <= -1.2395641803741455) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_76 <= 0.16611811518669128) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= 0.4962538778781891) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_36 <= 1.4459152221679688) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_89 <= -0.35966920852661133) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20180416233616_DKUVME_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_40" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values".threshold AS FLOAT) AS threshold, CAST("Values".count AS FLOAT) AS count, CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 21 AS count, 3 AS depth, 2 AS parent_id, 1.3347988258708763 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 217 AS count, 3 AS depth, 2 AS parent_id, -0.01100395179177347 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 34 AS count, 3 AS depth, 5 AS parent_id, 1.2740234932261019 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 3 AS depth, 5 AS parent_id, 0.25705062768486686 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 322 AS count, 3 AS depth, 9 AS parent_id, -0.5039745248683379 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 28 AS count, 3 AS depth, 9 AS parent_id, 0.42894429113359067 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 67 AS count, 3 AS depth, 12 AS parent_id, -0.4581286491732694 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 92 AS count, 3 AS depth, 12 AS parent_id, 0.6346944707935224 AS "Estimator") AS "Values"), 
"DT_Output_40" AS 
(SELECT "DT_node_lookup_40"."KEY" AS "KEY", "DT_node_lookup_40".node_id_2 AS node_id_2, "DT_node_data_40".node_id AS node_id, "DT_node_data_40".feature AS feature, "DT_node_data_40".threshold AS threshold, "DT_node_data_40".count AS count, "DT_node_data_40".depth AS depth, "DT_node_data_40".parent_id AS parent_id, "DT_node_data_40"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_40" LEFT OUTER JOIN "DT_node_data_40" ON "DT_node_lookup_40".node_id_2 = "DT_node_data_40".node_id), 
"GB_Model_10_0" AS 
(SELECT "DT_Output_40"."KEY" AS "KEY", "DT_Output_40"."Estimator" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_40"), 
"DT_node_lookup_41" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_33 <= 0.2938539981842041) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 0.31782376766204834) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_68 <= -2.0305774211883545) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_44 <= 0.45130205154418945) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_88 <= 0.4971619248390198) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_89 <= 0.9293092489242554) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_38 <= -0.7943793535232544) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20180416233616_DKUVME_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_41" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values".threshold AS FLOAT) AS threshold, CAST("Values".count AS FLOAT) AS count, CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, 2 AS parent_id, 1.2381000813094691 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 318 AS count, 3 AS depth, 2 AS parent_id, -0.4726194365229574 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 115 AS count, 3 AS depth, 5 AS parent_id, 0.554607228678325 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 62 AS count, 3 AS depth, 5 AS parent_id, -0.6547427399312454 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 154 AS count, 3 AS depth, 9 AS parent_id, -0.2507005852853268 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 38 AS count, 3 AS depth, 9 AS parent_id, 1.0726324836701577 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 22 AS count, 3 AS depth, 12 AS parent_id, -0.3440569802248558 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 82 AS count, 3 AS depth, 12 AS parent_id, 0.9450789603803782 AS "Estimator") AS "Values"), 
"DT_Output_41" AS 
(SELECT "DT_node_lookup_41"."KEY" AS "KEY", "DT_node_lookup_41".node_id_2 AS node_id_2, "DT_node_data_41".node_id AS node_id, "DT_node_data_41".feature AS feature, "DT_node_data_41".threshold AS threshold, "DT_node_data_41".count AS count, "DT_node_data_41".depth AS depth, "DT_node_data_41".parent_id AS parent_id, "DT_node_data_41"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_41" LEFT OUTER JOIN "DT_node_data_41" ON "DT_node_lookup_41".node_id_2 = "DT_node_data_41".node_id), 
"GB_Model_10_1" AS 
(SELECT "DT_Output_41"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_41"."Estimator" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_41"), 
"DT_node_lookup_42" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_63 <= 0.562813401222229) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_40 <= -0.9262987375259399) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_88 <= -1.7292354106903076) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_17 <= -0.16168107092380524) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_93 <= -1.6767315864562988) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_45 <= 0.019457846879959106) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_51 <= -2.1260263919830322) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20180416233616_DKUVME_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_42" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values".threshold AS FLOAT) AS threshold, CAST("Values".count AS FLOAT) AS count, CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 2 AS parent_id, 1.1566848628747148 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 92 AS count, 3 AS depth, 2 AS parent_id, -0.7015516729218791 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 209 AS count, 3 AS depth, 5 AS parent_id, 0.5792577519854865 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 260 AS count, 3 AS depth, 5 AS parent_id, -0.015535015450154082 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, 9 AS parent_id, 1.6096917210533799 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 9 AS parent_id, -0.8979944050705264 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 12 AS parent_id, 1.4410139378755198 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 218 AS count, 3 AS depth, 12 AS parent_id, -0.5510340445571192 AS "Estimator") AS "Values"), 
"DT_Output_42" AS 
(SELECT "DT_node_lookup_42"."KEY" AS "KEY", "DT_node_lookup_42".node_id_2 AS node_id_2, "DT_node_data_42".node_id AS node_id, "DT_node_data_42".feature AS feature, "DT_node_data_42".threshold AS threshold, "DT_node_data_42".count AS count, "DT_node_data_42".depth AS depth, "DT_node_data_42".parent_id AS parent_id, "DT_node_data_42"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_42" LEFT OUTER JOIN "DT_node_data_42" ON "DT_node_lookup_42".node_id_2 = "DT_node_data_42".node_id), 
"GB_Model_10_2" AS 
(SELECT "DT_Output_42"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_42"."Estimator" AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_42"), 
"DT_node_lookup_43" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_70 <= -0.24858278036117554) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_88 <= -1.3741052150726318) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_19 <= 0.27053534984588623) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_28 <= -2.242111921310425) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_86 <= -0.20918065309524536) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_18 <= -0.5779764652252197) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= -1.623110294342041) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20180416233616_DKUVME_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_43" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values".threshold AS FLOAT) AS threshold, CAST("Values".count AS FLOAT) AS count, CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, 2 AS parent_id, 1.8321782072195645 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 3 AS depth, 2 AS parent_id, 0.03704826463158615 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 5 AS parent_id, 1.8083689172953126 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 306 AS count, 3 AS depth, 5 AS parent_id, -0.4339771708406301 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 58 AS count, 3 AS depth, 9 AS parent_id, 1.1479037977744648 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 126 AS count, 3 AS depth, 9 AS parent_id, 0.21733501197253438 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, 12 AS parent_id, 1.3936294733546457 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 266 AS count, 3 AS depth, 12 AS parent_id, -0.16181269882597557 AS "Estimator") AS "Values"), 
"DT_Output_43" AS 
(SELECT "DT_node_lookup_43"."KEY" AS "KEY", "DT_node_lookup_43".node_id_2 AS node_id_2, "DT_node_data_43".node_id AS node_id, "DT_node_data_43".feature AS feature, "DT_node_data_43".threshold AS threshold, "DT_node_data_43".count AS count, "DT_node_data_43".depth AS depth, "DT_node_data_43".parent_id AS parent_id, "DT_node_data_43"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_43" LEFT OUTER JOIN "DT_node_data_43" ON "DT_node_lookup_43".node_id_2 = "DT_node_data_43".node_id), 
"GB_Model_10_3" AS 
(SELECT "DT_Output_43"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_43"."Estimator" AS "Score_3" 
FROM "DT_Output_43"), 
"DT_node_lookup_44" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_19 <= -0.35736554861068726) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_26 <= 0.41771399974823) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_76 <= -0.06816333532333374) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= -0.4447042644023895) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 0.19550010561943054) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_88 <= -0.10562373697757721) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_49 <= 2.147451162338257) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20180416233616_DKUVME_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_44" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values".threshold AS FLOAT) AS threshold, CAST("Values".count AS FLOAT) AS count, CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 92 AS count, 3 AS depth, 2 AS parent_id, 0.9704732229865253 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 99 AS count, 3 AS depth, 2 AS parent_id, 0.0487589585059932 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 25 AS count, 3 AS depth, 5 AS parent_id, 0.6202103314236485 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 75 AS count, 3 AS depth, 5 AS parent_id, -0.6012055881018028 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 150 AS count, 3 AS depth, 9 AS parent_id, -0.34429166259307387 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 135 AS count, 3 AS depth, 9 AS parent_id, 0.44206661922635565 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 219 AS count, 3 AS depth, 12 AS parent_id, -0.6179757871612773 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 12 AS parent_id, 1.3859205941992032 AS "Estimator") AS "Values"), 
"DT_Output_44" AS 
(SELECT "DT_node_lookup_44"."KEY" AS "KEY", "DT_node_lookup_44".node_id_2 AS node_id_2, "DT_node_data_44".node_id AS node_id, "DT_node_data_44".feature AS feature, "DT_node_data_44".threshold AS threshold, "DT_node_data_44".count AS count, "DT_node_data_44".depth AS depth, "DT_node_data_44".parent_id AS parent_id, "DT_node_data_44"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_44" LEFT OUTER JOIN "DT_node_data_44" ON "DT_node_lookup_44".node_id_2 = "DT_node_data_44".node_id), 
"GB_Model_11_0" AS 
(SELECT "DT_Output_44"."KEY" AS "KEY", "DT_Output_44"."Estimator" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_44"), 
"DT_node_lookup_45" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_57 <= 0.5648888349533081) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_66 <= -0.4368904232978821) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_25 <= -0.2008051574230194) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_42 <= -0.22411450743675232) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_50 <= -0.4031084179878235) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_25 <= 1.2052514553070068) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_23 <= -1.3144326210021973) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20180416233616_DKUVME_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_45" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values".threshold AS FLOAT) AS threshold, CAST("Values".count AS FLOAT) AS count, CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 72 AS count, 3 AS depth, 2 AS parent_id, 1.0097905891595336 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 102 AS count, 3 AS depth, 2 AS parent_id, 0.17504746260029155 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 165 AS count, 3 AS depth, 5 AS parent_id, 0.28456855384235563 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 220 AS count, 3 AS depth, 5 AS parent_id, -0.3631165113802592 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 72 AS count, 3 AS depth, 9 AS parent_id, -0.13124544800478327 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, 9 AS parent_id, 1.8712663514616126 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, 12 AS parent_id, 0.47102673586406896 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 146 AS count, 3 AS depth, 12 AS parent_id, -0.7603806763287421 AS "Estimator") AS "Values"), 
"DT_Output_45" AS 
(SELECT "DT_node_lookup_45"."KEY" AS "KEY", "DT_node_lookup_45".node_id_2 AS node_id_2, "DT_node_data_45".node_id AS node_id, "DT_node_data_45".feature AS feature, "DT_node_data_45".threshold AS threshold, "DT_node_data_45".count AS count, "DT_node_data_45".depth AS depth, "DT_node_data_45".parent_id AS parent_id, "DT_node_data_45"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_45" LEFT OUTER JOIN "DT_node_data_45" ON "DT_node_lookup_45".node_id_2 = "DT_node_data_45".node_id), 
"GB_Model_11_1" AS 
(SELECT "DT_Output_45"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_45"."Estimator" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_45"), 
"DT_node_lookup_46" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_68 <= -0.0688747987151146) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_89 <= 2.0705785751342773) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_78 <= -2.5917654037475586) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_89 <= 2.4408164024353027) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_15 <= 0.043750010430812836) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_73 <= 0.30845338106155396) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_88 <= -1.7038166522979736) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20180416233616_DKUVME_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_46" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values".threshold AS FLOAT) AS threshold, CAST("Values".count AS FLOAT) AS count, CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 2 AS parent_id, 2.3368689008632737 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 363 AS count, 3 AS depth, 2 AS parent_id, -0.31609788228090147 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 5 AS parent_id, 2.3739164905452546 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 5 AS parent_id, 1.7528958315121934 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 137 AS count, 3 AS depth, 9 AS parent_id, 0.8761410573012312 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 81 AS count, 3 AS depth, 9 AS parent_id, -0.07198877736646336 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, 12 AS parent_id, 1.7170153000664914 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 204 AS count, 3 AS depth, 12 AS parent_id, -0.29111431113329883 AS "Estimator") AS "Values"), 
"DT_Output_46" AS 
(SELECT "DT_node_lookup_46"."KEY" AS "KEY", "DT_node_lookup_46".node_id_2 AS node_id_2, "DT_node_data_46".node_id AS node_id, "DT_node_data_46".feature AS feature, "DT_node_data_46".threshold AS threshold, "DT_node_data_46".count AS count, "DT_node_data_46".depth AS depth, "DT_node_data_46".parent_id AS parent_id, "DT_node_data_46"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_46" LEFT OUTER JOIN "DT_node_data_46" ON "DT_node_lookup_46".node_id_2 = "DT_node_data_46".node_id), 
"GB_Model_11_2" AS 
(SELECT "DT_Output_46"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_46"."Estimator" AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_46"), 
"DT_node_lookup_47" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_40 <= 0.23332007229328156) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_86 <= -1.3485548496246338) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_47 <= -0.9912534952163696) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= -0.3296598494052887) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_29 <= 1.0077440738677979) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_93 <= 2.169250965118408) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_95 <= 0.5871189832687378) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20180416233616_DKUVME_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_47" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values".threshold AS FLOAT) AS threshold, CAST("Values".count AS FLOAT) AS count, CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, 2 AS parent_id, -0.5653724084311252 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 40 AS count, 3 AS depth, 2 AS parent_id, 1.2313554875447086 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 149 AS count, 3 AS depth, 5 AS parent_id, -0.42041827078845617 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 286 AS count, 3 AS depth, 5 AS parent_id, 0.30589333014540326 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 263 AS count, 3 AS depth, 9 AS parent_id, -0.49782431096721474 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 9 AS parent_id, 1.6965023809048247 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 40 AS count, 3 AS depth, 12 AS parent_id, 0.02429099506527964 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 3 AS depth, 12 AS parent_id, 1.8383030058233873 AS "Estimator") AS "Values"), 
"DT_Output_47" AS 
(SELECT "DT_node_lookup_47"."KEY" AS "KEY", "DT_node_lookup_47".node_id_2 AS node_id_2, "DT_node_data_47".node_id AS node_id, "DT_node_data_47".feature AS feature, "DT_node_data_47".threshold AS threshold, "DT_node_data_47".count AS count, "DT_node_data_47".depth AS depth, "DT_node_data_47".parent_id AS parent_id, "DT_node_data_47"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_47" LEFT OUTER JOIN "DT_node_data_47" ON "DT_node_lookup_47".node_id_2 = "DT_node_data_47".node_id), 
"GB_Model_11_3" AS 
(SELECT "DT_Output_47"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_47"."Estimator" AS "Score_3" 
FROM "DT_Output_47"), 
"DT_node_lookup_48" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_36 <= -0.3963547945022583) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_58 <= 0.05312246084213257) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_70 <= -1.8532379865646362) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= 2.3459064960479736) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= 0.3894922137260437) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_87 <= -0.2001642882823944) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_85 <= 2.2254281044006348) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20180416233616_DKUVME_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_48" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values".threshold AS FLOAT) AS threshold, CAST("Values".count AS FLOAT) AS count, CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, 2 AS parent_id, 1.6758406855175043 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 130 AS count, 3 AS depth, 2 AS parent_id, -0.1627316043893669 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 129 AS count, 3 AS depth, 5 AS parent_id, -0.8657630098179194 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 5 AS parent_id, 2.516392668156763 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 148 AS count, 3 AS depth, 9 AS parent_id, -0.08007994787483562 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 198 AS count, 3 AS depth, 9 AS parent_id, 0.6309418038337693 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 184 AS count, 3 AS depth, 12 AS parent_id, -0.35268500762889565 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 12 AS parent_id, 2.310151652988916 AS "Estimator") AS "Values"), 
"DT_Output_48" AS 
(SELECT "DT_node_lookup_48"."KEY" AS "KEY", "DT_node_lookup_48".node_id_2 AS node_id_2, "DT_node_data_48".node_id AS node_id, "DT_node_data_48".feature AS feature, "DT_node_data_48".threshold AS threshold, "DT_node_data_48".count AS count, "DT_node_data_48".depth AS depth, "DT_node_data_48".parent_id AS parent_id, "DT_node_data_48"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_48" LEFT OUTER JOIN "DT_node_data_48" ON "DT_node_lookup_48".node_id_2 = "DT_node_data_48".node_id), 
"GB_Model_12_0" AS 
(SELECT "DT_Output_48"."KEY" AS "KEY", "DT_Output_48"."Estimator" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_48"), 
"DT_node_lookup_49" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_88 <= -0.8932062387466431) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_27 <= -1.302964210510254) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_33 <= -0.3235818147659302) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_38 <= 2.6255149841308594) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_52 <= 0.33574214577674866) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_99 <= 1.7070612907409668) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_94 <= 0.03456065058708191) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20180416233616_DKUVME_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_49" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values".threshold AS FLOAT) AS threshold, CAST("Values".count AS FLOAT) AS count, CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, 2 AS parent_id, -0.23714172255089955 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, 2 AS parent_id, 1.7631893069918325 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 138 AS count, 3 AS depth, 5 AS parent_id, -0.7232011862166337 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 5 AS parent_id, 2.748866000082605 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 384 AS count, 3 AS depth, 9 AS parent_id, -0.17528700372138684 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 3 AS depth, 9 AS parent_id, 1.3590096854548896 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 142 AS count, 3 AS depth, 12 AS parent_id, 0.6854416241768289 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 103 AS count, 3 AS depth, 12 AS parent_id, -0.05970163715957093 AS "Estimator") AS "Values"), 
"DT_Output_49" AS 
(SELECT "DT_node_lookup_49"."KEY" AS "KEY", "DT_node_lookup_49".node_id_2 AS node_id_2, "DT_node_data_49".node_id AS node_id, "DT_node_data_49".feature AS feature, "DT_node_data_49".threshold AS threshold, "DT_node_data_49".count AS count, "DT_node_data_49".depth AS depth, "DT_node_data_49".parent_id AS parent_id, "DT_node_data_49"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_49" LEFT OUTER JOIN "DT_node_data_49" ON "DT_node_lookup_49".node_id_2 = "DT_node_data_49".node_id), 
"GB_Model_12_1" AS 
(SELECT "DT_Output_49"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_49"."Estimator" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_49")
 INSERT INTO "TMP_20180416233617_M7Z4VM_GB_B4" ("KEY", "Score_0", "Score_1", "Score_2", "Score_3") SELECT "GB_B4"."KEY", "GB_B4"."Score_0", "GB_B4"."Score_1", "GB_B4"."Score_2", "GB_B4"."Score_3" 
FROM (SELECT "GB_esu_4"."KEY" AS "KEY", "GB_esu_4"."Score_0" AS "Score_0", "GB_esu_4"."Score_1" AS "Score_1", "GB_esu_4"."Score_2" AS "Score_2", "GB_esu_4"."Score_3" AS "Score_3" 
FROM (SELECT "GB_Model_10_0"."KEY" AS "KEY", "GB_Model_10_0"."Score_0" AS "Score_0", "GB_Model_10_0"."Score_1" AS "Score_1", "GB_Model_10_0"."Score_2" AS "Score_2", "GB_Model_10_0"."Score_3" AS "Score_3" 
FROM "GB_Model_10_0" UNION ALL SELECT "GB_Model_10_1"."KEY" AS "KEY", "GB_Model_10_1"."Score_0" AS "Score_0", "GB_Model_10_1"."Score_1" AS "Score_1", "GB_Model_10_1"."Score_2" AS "Score_2", "GB_Model_10_1"."Score_3" AS "Score_3" 
FROM "GB_Model_10_1" UNION ALL SELECT "GB_Model_10_2"."KEY" AS "KEY", "GB_Model_10_2"."Score_0" AS "Score_0", "GB_Model_10_2"."Score_1" AS "Score_1", "GB_Model_10_2"."Score_2" AS "Score_2", "GB_Model_10_2"."Score_3" AS "Score_3" 
FROM "GB_Model_10_2" UNION ALL SELECT "GB_Model_10_3"."KEY" AS "KEY", "GB_Model_10_3"."Score_0" AS "Score_0", "GB_Model_10_3"."Score_1" AS "Score_1", "GB_Model_10_3"."Score_2" AS "Score_2", "GB_Model_10_3"."Score_3" AS "Score_3" 
FROM "GB_Model_10_3" UNION ALL SELECT "GB_Model_11_0"."KEY" AS "KEY", "GB_Model_11_0"."Score_0" AS "Score_0", "GB_Model_11_0"."Score_1" AS "Score_1", "GB_Model_11_0"."Score_2" AS "Score_2", "GB_Model_11_0"."Score_3" AS "Score_3" 
FROM "GB_Model_11_0" UNION ALL SELECT "GB_Model_11_1"."KEY" AS "KEY", "GB_Model_11_1"."Score_0" AS "Score_0", "GB_Model_11_1"."Score_1" AS "Score_1", "GB_Model_11_1"."Score_2" AS "Score_2", "GB_Model_11_1"."Score_3" AS "Score_3" 
FROM "GB_Model_11_1" UNION ALL SELECT "GB_Model_11_2"."KEY" AS "KEY", "GB_Model_11_2"."Score_0" AS "Score_0", "GB_Model_11_2"."Score_1" AS "Score_1", "GB_Model_11_2"."Score_2" AS "Score_2", "GB_Model_11_2"."Score_3" AS "Score_3" 
FROM "GB_Model_11_2" UNION ALL SELECT "GB_Model_11_3"."KEY" AS "KEY", "GB_Model_11_3"."Score_0" AS "Score_0", "GB_Model_11_3"."Score_1" AS "Score_1", "GB_Model_11_3"."Score_2" AS "Score_2", "GB_Model_11_3"."Score_3" AS "Score_3" 
FROM "GB_Model_11_3" UNION ALL SELECT "GB_Model_12_0"."KEY" AS "KEY", "GB_Model_12_0"."Score_0" AS "Score_0", "GB_Model_12_0"."Score_1" AS "Score_1", "GB_Model_12_0"."Score_2" AS "Score_2", "GB_Model_12_0"."Score_3" AS "Score_3" 
FROM "GB_Model_12_0" UNION ALL SELECT "GB_Model_12_1"."KEY" AS "KEY", "GB_Model_12_1"."Score_0" AS "Score_0", "GB_Model_12_1"."Score_1" AS "Score_1", "GB_Model_12_1"."Score_2" AS "Score_2", "GB_Model_12_1"."Score_3" AS "Score_3" 
FROM "GB_Model_12_1") AS "GB_esu_4") AS "GB_B4"

-- Code For temporary table TMP_20180416233617_2DUF5E_GB_B5 part 1/2. Create 


CREATE TEMPORARY TABLE "TMP_20180416233617_2DUF5E_GB_B5" (
	"KEY" BIGINT, 
	"Score_0" FLOAT, 
	"Score_1" FLOAT, 
	"Score_2" FLOAT, 
	"Score_3" FLOAT
)



-- Code For temporary table TMP_20180416233617_2DUF5E_GB_B5 part 2/2. Populate

WITH "DT_node_lookup_50" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_63 <= 0.08172278106212616) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_44 <= 0.8331663608551025) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_88 <= -1.3956695795059204) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_36 <= 0.477016806602478) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_31 <= -1.387010931968689) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_56 <= 0.5434097051620483) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_47 <= -2.0399160385131836) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20180416233616_DKUVME_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_50" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values".threshold AS FLOAT) AS threshold, CAST("Values".count AS FLOAT) AS count, CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 30 AS count, 3 AS depth, 2 AS parent_id, 1.0101691117358398 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 320 AS count, 3 AS depth, 2 AS parent_id, -0.07823618272840241 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 48 AS count, 3 AS depth, 5 AS parent_id, 1.3855606886346266 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 25 AS count, 3 AS depth, 5 AS parent_id, -0.3528566374502665 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 21 AS count, 3 AS depth, 9 AS parent_id, 1.2251951451112302 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, 9 AS parent_id, -0.9418146859528295 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 12 AS parent_id, 1.4522061097027417 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 342 AS count, 3 AS depth, 12 AS parent_id, -0.37427058479488023 AS "Estimator") AS "Values"), 
"DT_Output_50" AS 
(SELECT "DT_node_lookup_50"."KEY" AS "KEY", "DT_node_lookup_50".node_id_2 AS node_id_2, "DT_node_data_50".node_id AS node_id, "DT_node_data_50".feature AS feature, "DT_node_data_50".threshold AS threshold, "DT_node_data_50".count AS count, "DT_node_data_50".depth AS depth, "DT_node_data_50".parent_id AS parent_id, "DT_node_data_50"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_50" LEFT OUTER JOIN "DT_node_data_50" ON "DT_node_lookup_50".node_id_2 = "DT_node_data_50".node_id), 
"GB_Model_12_2" AS 
(SELECT "DT_Output_50"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_50"."Estimator" AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_50"), 
"DT_node_lookup_51" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_70 <= -0.24858278036117554) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_45 <= -1.1659590005874634) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_76 <= 1.4091229438781738) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_52 <= -1.3446013927459717) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_101 <= 0.07949402183294296) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_52 <= -0.03755661100149155) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_19 <= 0.2882452607154846) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20180416233616_DKUVME_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_51" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values".threshold AS FLOAT) AS threshold, CAST("Values".count AS FLOAT) AS count, CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 29 AS count, 3 AS depth, 2 AS parent_id, 0.1450435250404214 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 2 AS parent_id, 2.280705673685834 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 32 AS count, 3 AS depth, 5 AS parent_id, 0.5074820241926122 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 269 AS count, 3 AS depth, 5 AS parent_id, -0.5350551392712266 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 133 AS count, 3 AS depth, 9 AS parent_id, 0.7449871151490713 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 119 AS count, 3 AS depth, 9 AS parent_id, 0.07619592240004966 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 139 AS count, 3 AS depth, 12 AS parent_id, -0.475259827988634 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 74 AS count, 3 AS depth, 12 AS parent_id, 0.3789644079066355 AS "Estimator") AS "Values"), 
"DT_Output_51" AS 
(SELECT "DT_node_lookup_51"."KEY" AS "KEY", "DT_node_lookup_51".node_id_2 AS node_id_2, "DT_node_data_51".node_id AS node_id, "DT_node_data_51".feature AS feature, "DT_node_data_51".threshold AS threshold, "DT_node_data_51".count AS count, "DT_node_data_51".depth AS depth, "DT_node_data_51".parent_id AS parent_id, "DT_node_data_51"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_51" LEFT OUTER JOIN "DT_node_data_51" ON "DT_node_lookup_51".node_id_2 = "DT_node_data_51".node_id), 
"GB_Model_12_3" AS 
(SELECT "DT_Output_51"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_51"."Estimator" AS "Score_3" 
FROM "DT_Output_51"), 
"DT_node_lookup_52" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_70 <= -0.3394414782524109) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_97 <= 1.4670002460479736) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_55 <= 0.15697547793388367) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_19 <= 0.295665442943573) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_66 <= -0.7627311944961548) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_41 <= -0.19014450907707214) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_49 <= 2.200549602508545) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20180416233616_DKUVME_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_52" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values".threshold AS FLOAT) AS threshold, CAST("Values".count AS FLOAT) AS count, CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 152 AS count, 3 AS depth, 2 AS parent_id, 0.48397281785321766 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 127 AS count, 3 AS depth, 2 AS parent_id, -0.2930863742197603 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 3 AS depth, 5 AS parent_id, 1.61617691051322 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 5 AS parent_id, -0.07788812952897944 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 49 AS count, 3 AS depth, 9 AS parent_id, -0.40764303647102107 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 70 AS count, 3 AS depth, 9 AS parent_id, 0.7372047411517713 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 377 AS count, 3 AS depth, 12 AS parent_id, -0.4149374675095408 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 12 AS parent_id, 1.7625943683591714 AS "Estimator") AS "Values"), 
"DT_Output_52" AS 
(SELECT "DT_node_lookup_52"."KEY" AS "KEY", "DT_node_lookup_52".node_id_2 AS node_id_2, "DT_node_data_52".node_id AS node_id, "DT_node_data_52".feature AS feature, "DT_node_data_52".threshold AS threshold, "DT_node_data_52".count AS count, "DT_node_data_52".depth AS depth, "DT_node_data_52".parent_id AS parent_id, "DT_node_data_52"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_52" LEFT OUTER JOIN "DT_node_data_52" ON "DT_node_lookup_52".node_id_2 = "DT_node_data_52".node_id), 
"GB_Model_13_0" AS 
(SELECT "DT_Output_52"."KEY" AS "KEY", "DT_Output_52"."Estimator" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_52"), 
"DT_node_lookup_53" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_45 <= 0.3580455183982849) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_44 <= -1.5815229415893555) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_95 <= 0.627709150314331) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_70 <= -0.5040132999420166) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_57 <= 0.458151251077652) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_64 <= 0.8744536638259888) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_16 <= -1.4833226203918457) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20180416233616_DKUVME_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_53" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values".threshold AS FLOAT) AS threshold, CAST("Values".count AS FLOAT) AS count, CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS count, 3 AS depth, 2 AS parent_id, 1.8356363961352766 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 3 AS depth, 2 AS parent_id, -0.5205673374045147 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 139 AS count, 3 AS depth, 5 AS parent_id, 0.22125220228451348 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 341 AS count, 3 AS depth, 5 AS parent_id, -0.4561226456576156 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 173 AS count, 3 AS depth, 9 AS parent_id, 0.6404203433772104 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 43 AS count, 3 AS depth, 9 AS parent_id, -0.4468290806441748 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 12 AS parent_id, 1.4459156126946606 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 76 AS count, 3 AS depth, 12 AS parent_id, -0.559653684313971 AS "Estimator") AS "Values"), 
"DT_Output_53" AS 
(SELECT "DT_node_lookup_53"."KEY" AS "KEY", "DT_node_lookup_53".node_id_2 AS node_id_2, "DT_node_data_53".node_id AS node_id, "DT_node_data_53".feature AS feature, "DT_node_data_53".threshold AS threshold, "DT_node_data_53".count AS count, "DT_node_data_53".depth AS depth, "DT_node_data_53".parent_id AS parent_id, "DT_node_data_53"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_53" LEFT OUTER JOIN "DT_node_data_53" ON "DT_node_lookup_53".node_id_2 = "DT_node_data_53".node_id), 
"GB_Model_13_1" AS 
(SELECT "DT_Output_53"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_53"."Estimator" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_53"), 
"DT_node_lookup_54" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_66 <= 0.9215594530105591) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_40 <= 0.8938565850257874) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_23 <= 0.7334803342819214) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_17 <= 0.7495154142379761) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= 0.026387926191091537) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_26 <= 0.5697897672653198) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_25 <= 0.4015549123287201) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20180416233616_DKUVME_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_54" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values".threshold AS FLOAT) AS threshold, CAST("Values".count AS FLOAT) AS count, CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 406 AS count, 3 AS depth, 2 AS parent_id, -0.3763302564985492 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 128 AS count, 3 AS depth, 2 AS parent_id, 0.22178923898900293 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 98 AS count, 3 AS depth, 5 AS parent_id, 0.5732210025706347 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 26 AS count, 3 AS depth, 5 AS parent_id, -0.8114073022895463 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 57 AS count, 3 AS depth, 9 AS parent_id, -0.5062726549662904 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 3 AS depth, 9 AS parent_id, 1.0156596358053924 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 41 AS count, 3 AS depth, 12 AS parent_id, 0.4451981329066882 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 28 AS count, 3 AS depth, 12 AS parent_id, 1.4704014015026012 AS "Estimator") AS "Values"), 
"DT_Output_54" AS 
(SELECT "DT_node_lookup_54"."KEY" AS "KEY", "DT_node_lookup_54".node_id_2 AS node_id_2, "DT_node_data_54".node_id AS node_id, "DT_node_data_54".feature AS feature, "DT_node_data_54".threshold AS threshold, "DT_node_data_54".count AS count, "DT_node_data_54".depth AS depth, "DT_node_data_54".parent_id AS parent_id, "DT_node_data_54"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_54" LEFT OUTER JOIN "DT_node_data_54" ON "DT_node_lookup_54".node_id_2 = "DT_node_data_54".node_id), 
"GB_Model_13_2" AS 
(SELECT "DT_Output_54"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_54"."Estimator" AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_54"), 
"DT_node_lookup_55" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= 0.4962538778781891) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_66 <= -0.3163284659385681) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_52 <= -1.85573410987854) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_27 <= -0.5046774744987488) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_85 <= 0.7288131713867188) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_59 <= -2.5297927856445312) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_48 <= 0.03514346852898598) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20180416233616_DKUVME_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_55" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values".threshold AS FLOAT) AS threshold, CAST("Values".count AS FLOAT) AS count, CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 2 AS parent_id, 2.0613866858940137 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 225 AS count, 3 AS depth, 2 AS parent_id, -0.32929058890980845 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 114 AS count, 3 AS depth, 5 AS parent_id, 0.7732225033243991 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 215 AS count, 3 AS depth, 5 AS parent_id, 0.14657454985608687 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 9 AS parent_id, 1.637444693608551 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 175 AS count, 3 AS depth, 9 AS parent_id, -0.592446286870421 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 33 AS count, 3 AS depth, 12 AS parent_id, 0.7583675170776372 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 31 AS count, 3 AS depth, 12 AS parent_id, -0.6589752814877626 AS "Estimator") AS "Values"), 
"DT_Output_55" AS 
(SELECT "DT_node_lookup_55"."KEY" AS "KEY", "DT_node_lookup_55".node_id_2 AS node_id_2, "DT_node_data_55".node_id AS node_id, "DT_node_data_55".feature AS feature, "DT_node_data_55".threshold AS threshold, "DT_node_data_55".count AS count, "DT_node_data_55".depth AS depth, "DT_node_data_55".parent_id AS parent_id, "DT_node_data_55"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_55" LEFT OUTER JOIN "DT_node_data_55" ON "DT_node_lookup_55".node_id_2 = "DT_node_data_55".node_id), 
"GB_Model_13_3" AS 
(SELECT "DT_Output_55"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_55"."Estimator" AS "Score_3" 
FROM "DT_Output_55"), 
"DT_node_lookup_56" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_36 <= -0.3963547945022583) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_60 <= 1.885204792022705) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_58 <= 0.049905531108379364) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= 0.21589213609695435) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_50 <= 0.032788828015327454) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= -0.7924834489822388) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_29 <= -0.23202209174633026) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20180416233616_DKUVME_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_56" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values".threshold AS FLOAT) AS threshold, CAST("Values".count AS FLOAT) AS count, CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 131 AS count, 3 AS depth, 2 AS parent_id, -0.13347914681253598 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 129 AS count, 3 AS depth, 2 AS parent_id, -0.8072950099097401 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 5 AS parent_id, 1.9885563950903755 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 5 AS parent_id, -0.8985242702292654 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 60 AS count, 3 AS depth, 9 AS parent_id, 1.0284485317500704 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 213 AS count, 3 AS depth, 9 AS parent_id, 0.16421069878837405 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 119 AS count, 3 AS depth, 12 AS parent_id, 0.17756466774230886 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 142 AS count, 3 AS depth, 12 AS parent_id, -0.4363512082863713 AS "Estimator") AS "Values"), 
"DT_Output_56" AS 
(SELECT "DT_node_lookup_56"."KEY" AS "KEY", "DT_node_lookup_56".node_id_2 AS node_id_2, "DT_node_data_56".node_id AS node_id, "DT_node_data_56".feature AS feature, "DT_node_data_56".threshold AS threshold, "DT_node_data_56".count AS count, "DT_node_data_56".depth AS depth, "DT_node_data_56".parent_id AS parent_id, "DT_node_data_56"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_56" LEFT OUTER JOIN "DT_node_data_56" ON "DT_node_lookup_56".node_id_2 = "DT_node_data_56".node_id), 
"GB_Model_14_0" AS 
(SELECT "DT_Output_56"."KEY" AS "KEY", "DT_Output_56"."Estimator" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_56"), 
"DT_node_lookup_57" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_42 <= 0.2807415723800659) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_26 <= 1.1114366054534912) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 0.061435431241989136) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_84 <= -0.7215750217437744) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_23 <= 2.037313461303711) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_87 <= -1.6971454620361328) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_62 <= 0.6414724588394165) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20180416233616_DKUVME_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_57" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values".threshold AS FLOAT) AS threshold, CAST("Values".count AS FLOAT) AS count, CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 206 AS count, 3 AS depth, 2 AS parent_id, -0.2795649081263597 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 214 AS count, 3 AS depth, 2 AS parent_id, 0.3200011995840001 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 14 AS count, 3 AS depth, 5 AS parent_id, 1.7431343943329929 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 53 AS count, 3 AS depth, 5 AS parent_id, 0.4851731927286181 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 14 AS count, 3 AS depth, 9 AS parent_id, 0.767259353198737 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 294 AS count, 3 AS depth, 9 AS parent_id, -0.4163753054129728 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 12 AS parent_id, 2.0453601800851 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 12 AS parent_id, -0.8604893514500916 AS "Estimator") AS "Values"), 
"DT_Output_57" AS 
(SELECT "DT_node_lookup_57"."KEY" AS "KEY", "DT_node_lookup_57".node_id_2 AS node_id_2, "DT_node_data_57".node_id AS node_id, "DT_node_data_57".feature AS feature, "DT_node_data_57".threshold AS threshold, "DT_node_data_57".count AS count, "DT_node_data_57".depth AS depth, "DT_node_data_57".parent_id AS parent_id, "DT_node_data_57"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_57" LEFT OUTER JOIN "DT_node_data_57" ON "DT_node_lookup_57".node_id_2 = "DT_node_data_57".node_id), 
"GB_Model_14_1" AS 
(SELECT "DT_Output_57"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_57"."Estimator" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_57"), 
"DT_node_lookup_58" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_68 <= 0.1754646748304367) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_53 <= -0.011633362621068954) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_36 <= -0.9760856628417969) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_78 <= 1.8325004577636719) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_88 <= -1.0240107774734497) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_101 <= -0.4197048544883728) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_89 <= -0.8920264840126038) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20180416233616_DKUVME_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_58" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values".threshold AS FLOAT) AS threshold, CAST("Values".count AS FLOAT) AS count, CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 36 AS count, 3 AS depth, 2 AS parent_id, 0.9437954657353945 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 209 AS count, 3 AS depth, 2 AS parent_id, -0.14217130142789133 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 205 AS count, 3 AS depth, 5 AS parent_id, -0.5627758952459745 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, 5 AS parent_id, 1.281399109702587 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 3 AS depth, 9 AS parent_id, -0.06309055786251355 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 33 AS count, 3 AS depth, 9 AS parent_id, 1.3167558844360165 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 62 AS count, 3 AS depth, 12 AS parent_id, 0.7227640274763236 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 228 AS count, 3 AS depth, 12 AS parent_id, -0.11259454081680689 AS "Estimator") AS "Values"), 
"DT_Output_58" AS 
(SELECT "DT_node_lookup_58"."KEY" AS "KEY", "DT_node_lookup_58".node_id_2 AS node_id_2, "DT_node_data_58".node_id AS node_id, "DT_node_data_58".feature AS feature, "DT_node_data_58".threshold AS threshold, "DT_node_data_58".count AS count, "DT_node_data_58".depth AS depth, "DT_node_data_58".parent_id AS parent_id, "DT_node_data_58"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_58" LEFT OUTER JOIN "DT_node_data_58" ON "DT_node_lookup_58".node_id_2 = "DT_node_data_58".node_id), 
"GB_Model_14_2" AS 
(SELECT "DT_Output_58"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_58"."Estimator" AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_58"), 
"DT_node_lookup_59" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_86 <= -0.10969047993421555) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_40 <= 0.5944983959197998) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_27 <= -0.05759173631668091) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_94 <= 1.755737066268921) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_39 <= -2.5090489387512207) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_24 <= 0.3848026394844055) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_17 <= 0.7651405930519104) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20180416233616_DKUVME_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_59" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values".threshold AS FLOAT) AS threshold, CAST("Values".count AS FLOAT) AS count, CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 130 AS count, 3 AS depth, 2 AS parent_id, 0.6857322192428285 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 123 AS count, 3 AS depth, 2 AS parent_id, 0.04588489284452138 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 89 AS count, 3 AS depth, 5 AS parent_id, -0.4844678943260322 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 5 AS parent_id, 1.5361568513182178 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 9 AS parent_id, 2.3423369494352775 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 9 AS parent_id, 1.8521998136642286 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 360 AS count, 3 AS depth, 12 AS parent_id, -0.36907336965671655 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 92 AS count, 3 AS depth, 12 AS parent_id, 0.3116157000374199 AS "Estimator") AS "Values"), 
"DT_Output_59" AS 
(SELECT "DT_node_lookup_59"."KEY" AS "KEY", "DT_node_lookup_59".node_id_2 AS node_id_2, "DT_node_data_59".node_id AS node_id, "DT_node_data_59".feature AS feature, "DT_node_data_59".threshold AS threshold, "DT_node_data_59".count AS count, "DT_node_data_59".depth AS depth, "DT_node_data_59".parent_id AS parent_id, "DT_node_data_59"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_59" LEFT OUTER JOIN "DT_node_data_59" ON "DT_node_lookup_59".node_id_2 = "DT_node_data_59".node_id), 
"GB_Model_14_3" AS 
(SELECT "DT_Output_59"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_59"."Estimator" AS "Score_3" 
FROM "DT_Output_59")
 INSERT INTO "TMP_20180416233617_2DUF5E_GB_B5" ("KEY", "Score_0", "Score_1", "Score_2", "Score_3") SELECT "GB_B5"."KEY", "GB_B5"."Score_0", "GB_B5"."Score_1", "GB_B5"."Score_2", "GB_B5"."Score_3" 
FROM (SELECT "GB_esu_5"."KEY" AS "KEY", "GB_esu_5"."Score_0" AS "Score_0", "GB_esu_5"."Score_1" AS "Score_1", "GB_esu_5"."Score_2" AS "Score_2", "GB_esu_5"."Score_3" AS "Score_3" 
FROM (SELECT "GB_Model_12_2"."KEY" AS "KEY", "GB_Model_12_2"."Score_0" AS "Score_0", "GB_Model_12_2"."Score_1" AS "Score_1", "GB_Model_12_2"."Score_2" AS "Score_2", "GB_Model_12_2"."Score_3" AS "Score_3" 
FROM "GB_Model_12_2" UNION ALL SELECT "GB_Model_12_3"."KEY" AS "KEY", "GB_Model_12_3"."Score_0" AS "Score_0", "GB_Model_12_3"."Score_1" AS "Score_1", "GB_Model_12_3"."Score_2" AS "Score_2", "GB_Model_12_3"."Score_3" AS "Score_3" 
FROM "GB_Model_12_3" UNION ALL SELECT "GB_Model_13_0"."KEY" AS "KEY", "GB_Model_13_0"."Score_0" AS "Score_0", "GB_Model_13_0"."Score_1" AS "Score_1", "GB_Model_13_0"."Score_2" AS "Score_2", "GB_Model_13_0"."Score_3" AS "Score_3" 
FROM "GB_Model_13_0" UNION ALL SELECT "GB_Model_13_1"."KEY" AS "KEY", "GB_Model_13_1"."Score_0" AS "Score_0", "GB_Model_13_1"."Score_1" AS "Score_1", "GB_Model_13_1"."Score_2" AS "Score_2", "GB_Model_13_1"."Score_3" AS "Score_3" 
FROM "GB_Model_13_1" UNION ALL SELECT "GB_Model_13_2"."KEY" AS "KEY", "GB_Model_13_2"."Score_0" AS "Score_0", "GB_Model_13_2"."Score_1" AS "Score_1", "GB_Model_13_2"."Score_2" AS "Score_2", "GB_Model_13_2"."Score_3" AS "Score_3" 
FROM "GB_Model_13_2" UNION ALL SELECT "GB_Model_13_3"."KEY" AS "KEY", "GB_Model_13_3"."Score_0" AS "Score_0", "GB_Model_13_3"."Score_1" AS "Score_1", "GB_Model_13_3"."Score_2" AS "Score_2", "GB_Model_13_3"."Score_3" AS "Score_3" 
FROM "GB_Model_13_3" UNION ALL SELECT "GB_Model_14_0"."KEY" AS "KEY", "GB_Model_14_0"."Score_0" AS "Score_0", "GB_Model_14_0"."Score_1" AS "Score_1", "GB_Model_14_0"."Score_2" AS "Score_2", "GB_Model_14_0"."Score_3" AS "Score_3" 
FROM "GB_Model_14_0" UNION ALL SELECT "GB_Model_14_1"."KEY" AS "KEY", "GB_Model_14_1"."Score_0" AS "Score_0", "GB_Model_14_1"."Score_1" AS "Score_1", "GB_Model_14_1"."Score_2" AS "Score_2", "GB_Model_14_1"."Score_3" AS "Score_3" 
FROM "GB_Model_14_1" UNION ALL SELECT "GB_Model_14_2"."KEY" AS "KEY", "GB_Model_14_2"."Score_0" AS "Score_0", "GB_Model_14_2"."Score_1" AS "Score_1", "GB_Model_14_2"."Score_2" AS "Score_2", "GB_Model_14_2"."Score_3" AS "Score_3" 
FROM "GB_Model_14_2" UNION ALL SELECT "GB_Model_14_3"."KEY" AS "KEY", "GB_Model_14_3"."Score_0" AS "Score_0", "GB_Model_14_3"."Score_1" AS "Score_1", "GB_Model_14_3"."Score_2" AS "Score_2", "GB_Model_14_3"."Score_3" AS "Score_3" 
FROM "GB_Model_14_3") AS "GB_esu_5") AS "GB_B5"

-- Code For temporary table TMP_20180416233617_7AE2FP_GB_B6 part 1/2. Create 


CREATE TEMPORARY TABLE "TMP_20180416233617_7AE2FP_GB_B6" (
	"KEY" BIGINT, 
	"Score_0" FLOAT, 
	"Score_1" FLOAT, 
	"Score_2" FLOAT, 
	"Score_3" FLOAT
)



-- Code For temporary table TMP_20180416233617_7AE2FP_GB_B6 part 2/2. Populate

WITH "DT_node_lookup_60" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_19 <= -0.35736554861068726) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_26 <= -0.21814817190170288) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_27 <= -1.039336919784546) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= -0.30608126521110535) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= 0.4962538778781891) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_101 <= -2.1417815685272217) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_54 <= 0.03016374632716179) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20180416233616_DKUVME_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_60" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values".threshold AS FLOAT) AS threshold, CAST("Values".count AS FLOAT) AS count, CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 22 AS count, 3 AS depth, 2 AS parent_id, -0.6947021658332985 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 89 AS count, 3 AS depth, 2 AS parent_id, 0.8945261191276268 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 63 AS count, 3 AS depth, 5 AS parent_id, 0.5380689433522015 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 117 AS count, 3 AS depth, 5 AS parent_id, -0.39710305517048944 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 9 AS parent_id, 1.695640556299738 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 346 AS count, 3 AS depth, 9 AS parent_id, -0.4019001512127763 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 82 AS count, 3 AS depth, 12 AS parent_id, -0.2806190044359822 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 77 AS count, 3 AS depth, 12 AS parent_id, 0.6372947916478918 AS "Estimator") AS "Values"), 
"DT_Output_60" AS 
(SELECT "DT_node_lookup_60"."KEY" AS "KEY", "DT_node_lookup_60".node_id_2 AS node_id_2, "DT_node_data_60".node_id AS node_id, "DT_node_data_60".feature AS feature, "DT_node_data_60".threshold AS threshold, "DT_node_data_60".count AS count, "DT_node_data_60".depth AS depth, "DT_node_data_60".parent_id AS parent_id, "DT_node_data_60"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_60" LEFT OUTER JOIN "DT_node_data_60" ON "DT_node_lookup_60".node_id_2 = "DT_node_data_60".node_id), 
"GB_Model_15_0" AS 
(SELECT "DT_Output_60"."KEY" AS "KEY", "DT_Output_60"."Estimator" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_60"), 
"DT_node_lookup_61" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_29 <= -0.7373142242431641) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_50 <= -1.6543097496032715) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_86 <= -0.02000446617603302) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_12 <= 2.538504123687744) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_33 <= -0.7632990479469299) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_76 <= -1.6150873899459839) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_15 <= 0.3756433427333832) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20180416233616_DKUVME_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_61" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values".threshold AS FLOAT) AS threshold, CAST("Values".count AS FLOAT) AS count, CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 2 AS parent_id, -0.9327179842712061 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 2 AS parent_id, 2.0450198902680254 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 157 AS count, 3 AS depth, 5 AS parent_id, -0.611533690971075 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 5 AS parent_id, 1.5349324558769242 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, 9 AS parent_id, 1.2231811685925271 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 126 AS count, 3 AS depth, 9 AS parent_id, -0.5217887811932325 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 327 AS count, 3 AS depth, 12 AS parent_id, 0.007320299755118072 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 174 AS count, 3 AS depth, 12 AS parent_id, 0.5755551008590234 AS "Estimator") AS "Values"), 
"DT_Output_61" AS 
(SELECT "DT_node_lookup_61"."KEY" AS "KEY", "DT_node_lookup_61".node_id_2 AS node_id_2, "DT_node_data_61".node_id AS node_id, "DT_node_data_61".feature AS feature, "DT_node_data_61".threshold AS threshold, "DT_node_data_61".count AS count, "DT_node_data_61".depth AS depth, "DT_node_data_61".parent_id AS parent_id, "DT_node_data_61"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_61" LEFT OUTER JOIN "DT_node_data_61" ON "DT_node_lookup_61".node_id_2 = "DT_node_data_61".node_id), 
"GB_Model_15_1" AS 
(SELECT "DT_Output_61"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_61"."Estimator" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_61"), 
"DT_node_lookup_62" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_40 <= -0.9262987375259399) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_88 <= -1.7311307191848755) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_90 <= 1.0166394710540771) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= 2.2425379753112793) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_68 <= 0.7367584109306335) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_53 <= -0.7412203550338745) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_73 <= 0.2613585591316223) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20180416233616_DKUVME_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_62" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values".threshold AS FLOAT) AS threshold, CAST("Values".count AS FLOAT) AS count, CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 2 AS parent_id, 1.3627532297525666 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 2 AS parent_id, -0.9398775229049989 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 128 AS count, 3 AS depth, 5 AS parent_id, -0.752786694111468 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 5 AS parent_id, 1.603582021379038 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 131 AS count, 3 AS depth, 9 AS parent_id, 0.4031063341623361 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 390 AS count, 3 AS depth, 9 AS parent_id, -0.2032967326478098 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 86 AS count, 3 AS depth, 12 AS parent_id, 0.9004179345398606 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 56 AS count, 3 AS depth, 12 AS parent_id, -0.15846287608131487 AS "Estimator") AS "Values"), 
"DT_Output_62" AS 
(SELECT "DT_node_lookup_62"."KEY" AS "KEY", "DT_node_lookup_62".node_id_2 AS node_id_2, "DT_node_data_62".node_id AS node_id, "DT_node_data_62".feature AS feature, "DT_node_data_62".threshold AS threshold, "DT_node_data_62".count AS count, "DT_node_data_62".depth AS depth, "DT_node_data_62".parent_id AS parent_id, "DT_node_data_62"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_62" LEFT OUTER JOIN "DT_node_data_62" ON "DT_node_lookup_62".node_id_2 = "DT_node_data_62".node_id), 
"GB_Model_15_2" AS 
(SELECT "DT_Output_62"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_62"."Estimator" AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_62"), 
"DT_node_lookup_63" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_45 <= -0.27234718203544617) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_66 <= 0.6272452473640442) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_33 <= 0.15315572917461395) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_53 <= -0.8752514123916626) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_27 <= -0.5052893161773682) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_40 <= 0.06392725557088852) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_65 <= 1.55438232421875) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20180416233616_DKUVME_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_63" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values".threshold AS FLOAT) AS threshold, CAST("Values".count AS FLOAT) AS count, CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 136 AS count, 3 AS depth, 2 AS parent_id, 0.29293111933925625 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 87 AS count, 3 AS depth, 2 AS parent_id, -0.48057586035801114 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 21 AS count, 3 AS depth, 5 AS parent_id, -0.3060330601367557 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 73 AS count, 3 AS depth, 5 AS parent_id, 0.9268258740180613 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 76 AS count, 3 AS depth, 9 AS parent_id, 0.6723546147909949 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 71 AS count, 3 AS depth, 9 AS parent_id, -0.3352751109704091 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 316 AS count, 3 AS depth, 12 AS parent_id, -0.48337341178598114 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 20 AS count, 3 AS depth, 12 AS parent_id, 0.7010265210495501 AS "Estimator") AS "Values"), 
"DT_Output_63" AS 
(SELECT "DT_node_lookup_63"."KEY" AS "KEY", "DT_node_lookup_63".node_id_2 AS node_id_2, "DT_node_data_63".node_id AS node_id, "DT_node_data_63".feature AS feature, "DT_node_data_63".threshold AS threshold, "DT_node_data_63".count AS count, "DT_node_data_63".depth AS depth, "DT_node_data_63".parent_id AS parent_id, "DT_node_data_63"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_63" LEFT OUTER JOIN "DT_node_data_63" ON "DT_node_lookup_63".node_id_2 = "DT_node_data_63".node_id), 
"GB_Model_15_3" AS 
(SELECT "DT_Output_63"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_63"."Estimator" AS "Score_3" 
FROM "DT_Output_63")
 INSERT INTO "TMP_20180416233617_7AE2FP_GB_B6" ("KEY", "Score_0", "Score_1", "Score_2", "Score_3") SELECT "GB_B6"."KEY", "GB_B6"."Score_0", "GB_B6"."Score_1", "GB_B6"."Score_2", "GB_B6"."Score_3" 
FROM (SELECT "GB_esu_6"."KEY" AS "KEY", "GB_esu_6"."Score_0" AS "Score_0", "GB_esu_6"."Score_1" AS "Score_1", "GB_esu_6"."Score_2" AS "Score_2", "GB_esu_6"."Score_3" AS "Score_3" 
FROM (SELECT "GB_Model_15_0"."KEY" AS "KEY", "GB_Model_15_0"."Score_0" AS "Score_0", "GB_Model_15_0"."Score_1" AS "Score_1", "GB_Model_15_0"."Score_2" AS "Score_2", "GB_Model_15_0"."Score_3" AS "Score_3" 
FROM "GB_Model_15_0" UNION ALL SELECT "GB_Model_15_1"."KEY" AS "KEY", "GB_Model_15_1"."Score_0" AS "Score_0", "GB_Model_15_1"."Score_1" AS "Score_1", "GB_Model_15_1"."Score_2" AS "Score_2", "GB_Model_15_1"."Score_3" AS "Score_3" 
FROM "GB_Model_15_1" UNION ALL SELECT "GB_Model_15_2"."KEY" AS "KEY", "GB_Model_15_2"."Score_0" AS "Score_0", "GB_Model_15_2"."Score_1" AS "Score_1", "GB_Model_15_2"."Score_2" AS "Score_2", "GB_Model_15_2"."Score_3" AS "Score_3" 
FROM "GB_Model_15_2" UNION ALL SELECT "GB_Model_15_3"."KEY" AS "KEY", "GB_Model_15_3"."Score_0" AS "Score_0", "GB_Model_15_3"."Score_1" AS "Score_1", "GB_Model_15_3"."Score_2" AS "Score_2", "GB_Model_15_3"."Score_3" AS "Score_3" 
FROM "GB_Model_15_3") AS "GB_esu_6") AS "GB_B6"

-- Code For temporary table TMP_20180416233617_DKN45D_GB_Union part 1/2. Create 


CREATE TEMPORARY TABLE "TMP_20180416233617_DKN45D_GB_Union" (
	"KEY" BIGINT, 
	"Score_0" FLOAT, 
	"Score_1" FLOAT, 
	"Score_2" FLOAT, 
	"Score_3" FLOAT
)



-- Code For temporary table TMP_20180416233617_DKN45D_GB_Union part 2/2. Populate

INSERT INTO "TMP_20180416233617_DKN45D_GB_Union" ("KEY", "Score_0", "Score_1", "Score_2", "Score_3") SELECT "GB_Union"."KEY", "GB_Union"."Score_0", "GB_Union"."Score_1", "GB_Union"."Score_2", "GB_Union"."Score_3" 
FROM (SELECT "GB_EnsembleUnion"."KEY" AS "KEY", "GB_EnsembleUnion"."Score_0" AS "Score_0", "GB_EnsembleUnion"."Score_1" AS "Score_1", "GB_EnsembleUnion"."Score_2" AS "Score_2", "GB_EnsembleUnion"."Score_3" AS "Score_3" 
FROM (SELECT "GB_B0"."KEY" AS "KEY", "GB_B0"."Score_0" AS "Score_0", "GB_B0"."Score_1" AS "Score_1", "GB_B0"."Score_2" AS "Score_2", "GB_B0"."Score_3" AS "Score_3" 
FROM "TMP_20180416233616_EFAWWB_GB_B0" AS "GB_B0" UNION ALL SELECT "GB_B1"."KEY" AS "KEY", "GB_B1"."Score_0" AS "Score_0", "GB_B1"."Score_1" AS "Score_1", "GB_B1"."Score_2" AS "Score_2", "GB_B1"."Score_3" AS "Score_3" 
FROM "TMP_20180416233616_JD4R30_GB_B1" AS "GB_B1" UNION ALL SELECT "GB_B2"."KEY" AS "KEY", "GB_B2"."Score_0" AS "Score_0", "GB_B2"."Score_1" AS "Score_1", "GB_B2"."Score_2" AS "Score_2", "GB_B2"."Score_3" AS "Score_3" 
FROM "TMP_20180416233616_35BOG9_GB_B2" AS "GB_B2" UNION ALL SELECT "GB_B3"."KEY" AS "KEY", "GB_B3"."Score_0" AS "Score_0", "GB_B3"."Score_1" AS "Score_1", "GB_B3"."Score_2" AS "Score_2", "GB_B3"."Score_3" AS "Score_3" 
FROM "TMP_20180416233616_NG6NVZ_GB_B3" AS "GB_B3" UNION ALL SELECT "GB_B4"."KEY" AS "KEY", "GB_B4"."Score_0" AS "Score_0", "GB_B4"."Score_1" AS "Score_1", "GB_B4"."Score_2" AS "Score_2", "GB_B4"."Score_3" AS "Score_3" 
FROM "TMP_20180416233617_M7Z4VM_GB_B4" AS "GB_B4" UNION ALL SELECT "GB_B5"."KEY" AS "KEY", "GB_B5"."Score_0" AS "Score_0", "GB_B5"."Score_1" AS "Score_1", "GB_B5"."Score_2" AS "Score_2", "GB_B5"."Score_3" AS "Score_3" 
FROM "TMP_20180416233617_2DUF5E_GB_B5" AS "GB_B5" UNION ALL SELECT "GB_B6"."KEY" AS "KEY", "GB_B6"."Score_0" AS "Score_0", "GB_B6"."Score_1" AS "Score_1", "GB_B6"."Score_2" AS "Score_2", "GB_B6"."Score_3" AS "Score_3" 
FROM "TMP_20180416233617_7AE2FP_GB_B6" AS "GB_B6") AS "GB_EnsembleUnion") AS "GB_Union"

-- Code For temporary table TMP_20180416233617_DMHO5C_GB_sum part 1/2. Create 


CREATE TEMPORARY TABLE "TMP_20180416233617_DMHO5C_GB_sum" (
	"KEY" BIGINT NOT NULL, 
	"Score_0" FLOAT, 
	"Score_1" FLOAT, 
	"Score_2" FLOAT, 
	"Score_3" FLOAT, 
	PRIMARY KEY ("KEY")
)



-- Code For temporary table TMP_20180416233617_DMHO5C_GB_sum part 2/2. Populate

INSERT INTO "TMP_20180416233617_DMHO5C_GB_sum" ("KEY", "Score_0", "Score_1", "Score_2", "Score_3") SELECT "GB_sum"."KEY", "GB_sum"."Score_0", "GB_sum"."Score_1", "GB_sum"."Score_2", "GB_sum"."Score_3" 
FROM (SELECT "T"."KEY" AS "KEY", CAST("T"."Score_0" AS FLOAT) AS "Score_0", CAST("T"."Score_1" AS FLOAT) AS "Score_1", CAST("T"."Score_2" AS FLOAT) AS "Score_2", CAST("T"."Score_3" AS FLOAT) AS "Score_3" 
FROM (SELECT "GB_Union"."KEY" AS "KEY", sum("GB_Union"."Score_0") AS "Score_0", sum("GB_Union"."Score_1") AS "Score_1", sum("GB_Union"."Score_2") AS "Score_2", sum("GB_Union"."Score_3") AS "Score_3" 
FROM "TMP_20180416233617_DKN45D_GB_Union" AS "GB_Union" GROUP BY "GB_Union"."KEY") AS "T") AS "GB_sum"

-- Model deployment code

WITH orig_cte AS 
(SELECT "GB_sum"."KEY" AS "KEY", 0.245 + 0.1 * "GB_sum"."Score_0" AS "Score_0", 0.24875 + 0.1 * "GB_sum"."Score_1" AS "Score_1", 0.2525 + 0.1 * "GB_sum"."Score_2" AS "Score_2", 0.25375 + 0.1 * "GB_sum"."Score_3" AS "Score_3", CAST(NULL AS FLOAT) AS "Proba_0", CAST(NULL AS FLOAT) AS "Proba_1", CAST(NULL AS FLOAT) AS "Proba_2", CAST(NULL AS FLOAT) AS "Proba_3", CAST(NULL AS FLOAT) AS "LogProba_0", CAST(NULL AS FLOAT) AS "LogProba_1", CAST(NULL AS FLOAT) AS "LogProba_2", CAST(NULL AS FLOAT) AS "LogProba_3", CAST(NULL AS BIGINT) AS "Decision", CAST(NULL AS FLOAT) AS "DecisionProba" 
FROM "TMP_20180416233617_DMHO5C_GB_sum" AS "GB_sum"), 
score_class_union AS 
(SELECT scu."KEY_u" AS "KEY_u", scu.class AS class, scu."LogProba" AS "LogProba", scu."Proba" AS "Proba", scu."Score" AS "Score" 
FROM (SELECT orig_cte."KEY" AS "KEY_u", 0 AS class, orig_cte."LogProba_0" AS "LogProba", orig_cte."Proba_0" AS "Proba", orig_cte."Score_0" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 1 AS class, orig_cte."LogProba_1" AS "LogProba", orig_cte."Proba_1" AS "Proba", orig_cte."Score_1" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 2 AS class, orig_cte."LogProba_2" AS "LogProba", orig_cte."Proba_2" AS "Proba", orig_cte."Score_2" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 3 AS class, orig_cte."LogProba_3" AS "LogProba", orig_cte."Proba_3" AS "Proba", orig_cte."Score_3" AS "Score" 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte."KEY" AS "KEY", orig_cte."Score_0" AS "Score_0", orig_cte."Score_1" AS "Score_1", orig_cte."Score_2" AS "Score_2", orig_cte."Score_3" AS "Score_3", orig_cte."Proba_0" AS "Proba_0", orig_cte."Proba_1" AS "Proba_1", orig_cte."Proba_2" AS "Proba_2", orig_cte."Proba_3" AS "Proba_3", orig_cte."LogProba_0" AS "LogProba_0", orig_cte."LogProba_1" AS "LogProba_1", orig_cte."LogProba_2" AS "LogProba_2", orig_cte."LogProba_3" AS "LogProba_3", orig_cte."Decision" AS "Decision", orig_cte."DecisionProba" AS "DecisionProba", max_select."KEY_m" AS "KEY_m", max_select."max_Score" AS "max_Score" 
FROM orig_cte LEFT OUTER JOIN (SELECT score_class_union."KEY_u" AS "KEY_m", max(score_class_union."Score") AS "max_Score" 
FROM score_class_union GROUP BY score_class_union."KEY_u") AS max_select ON orig_cte."KEY" = max_select."KEY_m"), 
score_soft_max_deltas AS 
(SELECT score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Score_2" AS "Score_2", score_max."Score_3" AS "Score_3", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."Proba_2" AS "Proba_2", score_max."Proba_3" AS "Proba_3", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."LogProba_2" AS "LogProba_2", score_max."LogProba_3" AS "LogProba_3", score_max."Decision" AS "Decision", score_max."DecisionProba" AS "DecisionProba", score_max."KEY_m" AS "KEY_m", score_max."max_Score" AS "max_Score", exp(score_max."Score_0" - score_max."max_Score") AS "exp_delta_Score_0", exp(score_max."Score_1" - score_max."max_Score") AS "exp_delta_Score_1", exp(score_max."Score_2" - score_max."max_Score") AS "exp_delta_Score_2", exp(score_max."Score_3" - score_max."max_Score") AS "exp_delta_Score_3" 
FROM score_max), 
score_class_union_soft AS 
(SELECT soft_scu."KEY" AS "KEY", soft_scu.class AS class, soft_scu."exp_delta_Score" AS "exp_delta_Score" 
FROM (SELECT score_soft_max_deltas."KEY" AS "KEY", 0 AS class, score_soft_max_deltas."exp_delta_Score_0" AS "exp_delta_Score" 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas."KEY" AS "KEY", 1 AS class, score_soft_max_deltas."exp_delta_Score_1" AS "exp_delta_Score" 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas."KEY" AS "KEY", 2 AS class, score_soft_max_deltas."exp_delta_Score_2" AS "exp_delta_Score" 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas."KEY" AS "KEY", 3 AS class, score_soft_max_deltas."exp_delta_Score_3" AS "exp_delta_Score" 
FROM score_soft_max_deltas) AS soft_scu), 
score_soft_max AS 
(SELECT score_soft_max_deltas."KEY" AS "KEY", score_soft_max_deltas."Score_0" AS "Score_0", score_soft_max_deltas."Score_1" AS "Score_1", score_soft_max_deltas."Score_2" AS "Score_2", score_soft_max_deltas."Score_3" AS "Score_3", score_soft_max_deltas."Proba_0" AS "Proba_0", score_soft_max_deltas."Proba_1" AS "Proba_1", score_soft_max_deltas."Proba_2" AS "Proba_2", score_soft_max_deltas."Proba_3" AS "Proba_3", score_soft_max_deltas."LogProba_0" AS "LogProba_0", score_soft_max_deltas."LogProba_1" AS "LogProba_1", score_soft_max_deltas."LogProba_2" AS "LogProba_2", score_soft_max_deltas."LogProba_3" AS "LogProba_3", score_soft_max_deltas."Decision" AS "Decision", score_soft_max_deltas."DecisionProba" AS "DecisionProba", score_soft_max_deltas."KEY_m" AS "KEY_m", score_soft_max_deltas."max_Score" AS "max_Score", score_soft_max_deltas."exp_delta_Score_0" AS "exp_delta_Score_0", score_soft_max_deltas."exp_delta_Score_1" AS "exp_delta_Score_1", score_soft_max_deltas."exp_delta_Score_2" AS "exp_delta_Score_2", score_soft_max_deltas."exp_delta_Score_3" AS "exp_delta_Score_3", sum_exp_t."KEY_sum" AS "KEY_sum", sum_exp_t."sum_ExpDeltaScore" AS "sum_ExpDeltaScore" 
FROM score_soft_max_deltas LEFT OUTER JOIN (SELECT score_class_union_soft."KEY" AS "KEY_sum", sum(score_class_union_soft."exp_delta_Score") AS "sum_ExpDeltaScore" 
FROM score_class_union_soft GROUP BY score_class_union_soft."KEY") AS sum_exp_t ON score_soft_max_deltas."KEY" = sum_exp_t."KEY_sum"), 
union_with_max AS 
(SELECT score_class_union."KEY_u" AS "KEY_u", score_class_union.class AS class, score_class_union."LogProba" AS "LogProba", score_class_union."Proba" AS "Proba", score_class_union."Score" AS "Score", score_soft_max."KEY" AS "KEY", score_soft_max."Score_0" AS "Score_0", score_soft_max."Score_1" AS "Score_1", score_soft_max."Score_2" AS "Score_2", score_soft_max."Score_3" AS "Score_3", score_soft_max."Proba_0" AS "Proba_0", score_soft_max."Proba_1" AS "Proba_1", score_soft_max."Proba_2" AS "Proba_2", score_soft_max."Proba_3" AS "Proba_3", score_soft_max."LogProba_0" AS "LogProba_0", score_soft_max."LogProba_1" AS "LogProba_1", score_soft_max."LogProba_2" AS "LogProba_2", score_soft_max."LogProba_3" AS "LogProba_3", score_soft_max."Decision" AS "Decision", score_soft_max."DecisionProba" AS "DecisionProba", score_soft_max."KEY_m" AS "KEY_m", score_soft_max."max_Score" AS "max_Score", score_soft_max."exp_delta_Score_0" AS "exp_delta_Score_0", score_soft_max."exp_delta_Score_1" AS "exp_delta_Score_1", score_soft_max."exp_delta_Score_2" AS "exp_delta_Score_2", score_soft_max."exp_delta_Score_3" AS "exp_delta_Score_3", score_soft_max."KEY_sum" AS "KEY_sum", score_soft_max."sum_ExpDeltaScore" AS "sum_ExpDeltaScore" 
FROM score_class_union LEFT OUTER JOIN score_soft_max ON score_class_union."KEY_u" = score_soft_max."KEY"), 
arg_max_cte AS 
(SELECT score_soft_max."KEY" AS "KEY", score_soft_max."Score_0" AS "Score_0", score_soft_max."Score_1" AS "Score_1", score_soft_max."Score_2" AS "Score_2", score_soft_max."Score_3" AS "Score_3", score_soft_max."Proba_0" AS "Proba_0", score_soft_max."Proba_1" AS "Proba_1", score_soft_max."Proba_2" AS "Proba_2", score_soft_max."Proba_3" AS "Proba_3", score_soft_max."LogProba_0" AS "LogProba_0", score_soft_max."LogProba_1" AS "LogProba_1", score_soft_max."LogProba_2" AS "LogProba_2", score_soft_max."LogProba_3" AS "LogProba_3", score_soft_max."Decision" AS "Decision", score_soft_max."DecisionProba" AS "DecisionProba", score_soft_max."KEY_m" AS "KEY_m", score_soft_max."max_Score" AS "max_Score", score_soft_max."exp_delta_Score_0" AS "exp_delta_Score_0", score_soft_max."exp_delta_Score_1" AS "exp_delta_Score_1", score_soft_max."exp_delta_Score_2" AS "exp_delta_Score_2", score_soft_max."exp_delta_Score_3" AS "exp_delta_Score_3", score_soft_max."KEY_sum" AS "KEY_sum", score_soft_max."sum_ExpDeltaScore" AS "sum_ExpDeltaScore", "arg_max_t_Score"."KEY_Score" AS "KEY_Score", "arg_max_t_Score"."arg_max_Score" AS "arg_max_Score", soft_max_comp."KEY_softmax" AS "KEY_softmax", soft_max_comp."SoftProba_0" AS "SoftProba_0", soft_max_comp."SoftProba_1" AS "SoftProba_1", soft_max_comp."SoftProba_2" AS "SoftProba_2", soft_max_comp."SoftProba_3" AS "SoftProba_3" 
FROM score_soft_max LEFT OUTER JOIN (SELECT union_with_max."KEY" AS "KEY_Score", min(union_with_max.class) AS "arg_max_Score" 
FROM union_with_max 
WHERE union_with_max."max_Score" <= union_with_max."Score" GROUP BY union_with_max."KEY") AS "arg_max_t_Score" ON score_soft_max."KEY" = "arg_max_t_Score"."KEY_Score" LEFT OUTER JOIN (SELECT score_soft_max."KEY" AS "KEY_softmax", score_soft_max."exp_delta_Score_0" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_0", score_soft_max."exp_delta_Score_1" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_1", score_soft_max."exp_delta_Score_2" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_2", score_soft_max."exp_delta_Score_3" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_3" 
FROM score_soft_max) AS soft_max_comp ON soft_max_comp."KEY_softmax" = "arg_max_t_Score"."KEY_Score")
 SELECT arg_max_cte."KEY" AS "KEY", arg_max_cte."Score_0" AS "Score_0", arg_max_cte."Score_1" AS "Score_1", arg_max_cte."Score_2" AS "Score_2", arg_max_cte."Score_3" AS "Score_3", arg_max_cte."SoftProba_0" AS "Proba_0", arg_max_cte."SoftProba_1" AS "Proba_1", arg_max_cte."SoftProba_2" AS "Proba_2", arg_max_cte."SoftProba_3" AS "Proba_3", CASE WHEN (arg_max_cte."SoftProba_0" IS NULL OR arg_max_cte."SoftProba_0" > 0.0) THEN ln(arg_max_cte."SoftProba_0") ELSE -1.79769313486231e+308 END AS "LogProba_0", CASE WHEN (arg_max_cte."SoftProba_1" IS NULL OR arg_max_cte."SoftProba_1" > 0.0) THEN ln(arg_max_cte."SoftProba_1") ELSE -1.79769313486231e+308 END AS "LogProba_1", CASE WHEN (arg_max_cte."SoftProba_2" IS NULL OR arg_max_cte."SoftProba_2" > 0.0) THEN ln(arg_max_cte."SoftProba_2") ELSE -1.79769313486231e+308 END AS "LogProba_2", CASE WHEN (arg_max_cte."SoftProba_3" IS NULL OR arg_max_cte."SoftProba_3" > 0.0) THEN ln(arg_max_cte."SoftProba_3") ELSE -1.79769313486231e+308 END AS "LogProba_3", arg_max_cte."arg_max_Score" AS "Decision", max(arg_max_cte."SoftProba_0", arg_max_cte."SoftProba_1", arg_max_cte."SoftProba_2", arg_max_cte."SoftProba_3") AS "DecisionProba" 
FROM arg_max_cte