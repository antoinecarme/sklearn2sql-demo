-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2018

-- Model : LGBMRegressor
-- Dataset : boston
-- Database : sqlite


-- This SQL code can contain one or more statements, to be executed in the order they appear in this file.



-- Code For temporary table TMP_20180417023610_Y25HC1_LGBM_B0 part 1/2. Create 


CREATE TEMPORARY TABLE "TMP_20180417023610_Y25HC1_LGBM_B0" (
	"KEY" BIGINT, 
	"Estimator" FLOAT
)



-- Code For temporary table TMP_20180417023610_Y25HC1_LGBM_B0 part 2/2. Populate

WITH "DT_node_lookup" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_5" <= 6.825) THEN CASE WHEN ("ADS"."Feature_12" <= 14.805000000000001) THEN CASE WHEN ("ADS"."Feature_5" <= 6.531500000000001) THEN CASE WHEN ("ADS"."Feature_12" <= 9.700000000000001) THEN CASE WHEN ("ADS"."Feature_0" <= 0.13995000000000005) THEN CASE WHEN ("ADS"."Feature_5" <= 6.208500000000001) THEN 64 ELSE 65 END ELSE 33 END ELSE CASE WHEN ("ADS"."Feature_9" <= 282.50000000000006) THEN 34 ELSE CASE WHEN ("ADS"."Feature_8" <= 4.500000000000001) THEN 70 ELSE CASE WHEN ("ADS"."Feature_6" <= 70.45) THEN 142 ELSE 143 END END END END ELSE 9 END ELSE CASE WHEN ("ADS"."Feature_0" <= 5.8480300000000005) THEN CASE WHEN ("ADS"."Feature_7" <= 2.0001000000000007) THEN 20 ELSE CASE WHEN ("ADS"."Feature_0" <= 0.38474500000000006) THEN 42 ELSE 43 END END ELSE CASE WHEN ("ADS"."Feature_12" <= 21.385) THEN 22 ELSE 23 END END END ELSE CASE WHEN ("ADS"."Feature_5" <= 7.416000000000001) THEN CASE WHEN ("ADS"."Feature_12" <= 5.410000000000001) THEN 12 ELSE 13 END ELSE 7 END END AS node_id_2 
FROM boston AS "ADS"), 
"DT_node_data" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values".threshold AS FLOAT) AS threshold, CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, 3 AS parent_id, 23.68019760161212 AS "Estimator" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 4 AS parent_id, 22.83501241924654 AS "Estimator" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 6 AS parent_id, 23.12476244902847 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 6 AS parent_id, 22.8224124152684 AS "Estimator" UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 10 AS parent_id, 22.18592151054705 AS "Estimator" UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 11 AS parent_id, 22.133845756612594 AS "Estimator" UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 11 AS parent_id, 21.977512419782457 AS "Estimator" UNION ALL SELECT 33 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS depth, 16 AS parent_id, 22.760012416034588 AS "Estimator" UNION ALL SELECT 34 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS depth, 17 AS parent_id, 22.54477432406451 AS "Estimator" UNION ALL SELECT 42 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS depth, 21 AS parent_id, 22.437966964106998 AS "Estimator" UNION ALL SELECT 43 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS depth, 21 AS parent_id, 22.28726243233917 AS "Estimator" UNION ALL SELECT 64 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS depth, 32 AS parent_id, 22.485512422995207 AS "Estimator" UNION ALL SELECT 65 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS depth, 32 AS parent_id, 22.625938357487197 AS "Estimator" UNION ALL SELECT 70 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS depth, 35 AS parent_id, 22.400012429599947 AS "Estimator" UNION ALL SELECT 142 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS depth, 71 AS parent_id, 22.52676243251798 AS "Estimator" UNION ALL SELECT 143 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS depth, 71 AS parent_id, 22.444066474559584 AS "Estimator") AS "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".node_id AS node_id, "DT_node_data".feature AS feature, "DT_node_data".threshold AS threshold, "DT_node_data".depth AS depth, "DT_node_data".parent_id AS parent_id, "DT_node_data"."Estimator" AS "Estimator" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".node_id), 
"LGBM_Model_0" AS 
(SELECT "DT_Output"."KEY" AS "KEY", "DT_Output"."Estimator" AS "Estimator" 
FROM "DT_Output"), 
"DT_node_lookup_1" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_5" <= 6.825) THEN CASE WHEN ("ADS"."Feature_12" <= 14.805000000000001) THEN CASE WHEN ("ADS"."Feature_12" <= 9.700000000000001) THEN CASE WHEN ("ADS"."Feature_5" <= 6.531500000000001) THEN CASE WHEN ("ADS"."Feature_11" <= 390.80000000000007) THEN 32 ELSE CASE WHEN ("ADS"."Feature_5" <= 6.157500000000001) THEN 66 ELSE 67 END END ELSE 17 END ELSE CASE WHEN ("ADS"."Feature_9" <= 282.50000000000006) THEN 18 ELSE CASE WHEN ("ADS"."Feature_8" <= 4.500000000000001) THEN 38 ELSE CASE WHEN ("ADS"."Feature_6" <= 70.45) THEN 78 ELSE 79 END END END END ELSE CASE WHEN ("ADS"."Feature_0" <= 5.8480300000000005) THEN CASE WHEN ("ADS"."Feature_7" <= 2.0001000000000007) THEN 20 ELSE CASE WHEN ("ADS"."Feature_10" <= 19.150000000000002) THEN 42 ELSE 43 END END ELSE CASE WHEN ("ADS"."Feature_12" <= 21.385) THEN 22 ELSE 23 END END END ELSE CASE WHEN ("ADS"."Feature_5" <= 7.416000000000001) THEN CASE WHEN ("ADS"."Feature_12" <= 5.410000000000001) THEN 12 ELSE 13 END ELSE 7 END END AS node_id_2 
FROM boston AS "ADS"), 
"DT_node_data_1" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values".threshold AS FLOAT) AS threshold, CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, 3 AS parent_id, 1.046175335292463 AS "Estimator" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 6 AS parent_id, 0.5185119009017944 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 6 AS parent_id, 0.23127937006950378 AS "Estimator" UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 8 AS parent_id, 0.25936048831790687 AS "Estimator" UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 9 AS parent_id, -0.0324768134525844 AS "Estimator" UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 10 AS parent_id, -0.3733869937333194 AS "Estimator" UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 11 AS parent_id, -0.42285894155502324 AS "Estimator" UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 11 AS parent_id, -0.571375617980957 AS "Estimator" UNION ALL SELECT 32 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS depth, 16 AS parent_id, 0.18230336777400225 AS "Estimator" UNION ALL SELECT 38 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS depth, 19 AS parent_id, -0.16674019930263362 AS "Estimator" UNION ALL SELECT 42 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS depth, 21 AS parent_id, -0.12999023323257763 AS "Estimator" UNION ALL SELECT 43 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS depth, 21 AS parent_id, -0.2742490901833489 AS "Estimator" UNION ALL SELECT 66 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS depth, 33 AS parent_id, -0.09879467114806176 AS "Estimator" UNION ALL SELECT 67 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS depth, 33 AS parent_id, 0.058645646909384855 AS "Estimator" UNION ALL SELECT 78 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS depth, 39 AS parent_id, -0.04958811178803444 AS "Estimator" UNION ALL SELECT 79 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS depth, 39 AS parent_id, -0.12482299310596366 AS "Estimator") AS "Values"), 
"DT_Output_1" AS 
(SELECT "DT_node_lookup_1"."KEY" AS "KEY", "DT_node_lookup_1".node_id_2 AS node_id_2, "DT_node_data_1".node_id AS node_id, "DT_node_data_1".feature AS feature, "DT_node_data_1".threshold AS threshold, "DT_node_data_1".depth AS depth, "DT_node_data_1".parent_id AS parent_id, "DT_node_data_1"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_1" LEFT OUTER JOIN "DT_node_data_1" ON "DT_node_lookup_1".node_id_2 = "DT_node_data_1".node_id), 
"LGBM_Model_1" AS 
(SELECT "DT_Output_1"."KEY" AS "KEY", "DT_Output_1"."Estimator" AS "Estimator" 
FROM "DT_Output_1"), 
"DT_node_lookup_2" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_5" <= 7.097500000000001) THEN CASE WHEN ("ADS"."Feature_12" <= 14.805000000000001) THEN CASE WHEN ("ADS"."Feature_5" <= 6.531500000000001) THEN CASE WHEN ("ADS"."Feature_12" <= 9.700000000000001) THEN CASE WHEN ("ADS"."Feature_0" <= 0.13995000000000005) THEN CASE WHEN ("ADS"."Feature_5" <= 6.208500000000001) THEN 64 ELSE 65 END ELSE 33 END ELSE CASE WHEN ("ADS"."Feature_9" <= 282.50000000000006) THEN 34 ELSE CASE WHEN ("ADS"."Feature_8" <= 4.500000000000001) THEN 70 ELSE CASE WHEN ("ADS"."Feature_6" <= 70.45) THEN 142 ELSE 143 END END END END ELSE CASE WHEN ("ADS"."Feature_12" <= 5.285000000000001) THEN 18 ELSE CASE WHEN ("ADS"."Feature_2" <= 6.080000000000001) THEN 38 ELSE 39 END END END ELSE CASE WHEN ("ADS"."Feature_4" <= 0.6070000000000001) THEN CASE WHEN ("ADS"."Feature_0" <= 0.6718550000000001) THEN 20 ELSE 21 END ELSE CASE WHEN ("ADS"."Feature_0" <= 9.870020000000002) THEN CASE WHEN ("ADS"."Feature_12" <= 19.080000000000002) THEN 44 ELSE 45 END ELSE 23 END END END ELSE CASE WHEN ("ADS"."Feature_5" <= 7.479500000000001) THEN 6 ELSE 7 END END AS node_id_2 
FROM boston AS "ADS"), 
"DT_node_data_2" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values".threshold AS FLOAT) AS threshold, CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, 3 AS parent_id, 0.4872575873420353 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, 3 AS parent_id, 1.0207646484176318 AS "Estimator" UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 9 AS parent_id, 0.41737285366524823 AS "Estimator" UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 10 AS parent_id, -0.13246601084963636 AS "Estimator" UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 10 AS parent_id, -0.2974153137207031 AS "Estimator" UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 11 AS parent_id, -0.5654426789283752 AS "Estimator" UNION ALL SELECT 33 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS depth, 16 AS parent_id, 0.1676879637282003 AS "Estimator" UNION ALL SELECT 34 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS depth, 17 AS parent_id, -0.030852971188280554 AS "Estimator" UNION ALL SELECT 38 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS depth, 19 AS parent_id, 0.22944668382406236 AS "Estimator" UNION ALL SELECT 39 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS depth, 19 AS parent_id, 0.12306558111682536 AS "Estimator" UNION ALL SELECT 44 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS depth, 22 AS parent_id, -0.3007912251684401 AS "Estimator" UNION ALL SELECT 45 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS depth, 22 AS parent_id, -0.4407543814700583 AS "Estimator" UNION ALL SELECT 64 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS depth, 32 AS parent_id, -0.08563497792929411 AS "Estimator" UNION ALL SELECT 65 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS depth, 32 AS parent_id, 0.0398647699367117 AS "Estimator" UNION ALL SELECT 70 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS depth, 35 AS parent_id, -0.1616636018390241 AS "Estimator" UNION ALL SELECT 142 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS depth, 71 AS parent_id, -0.0471087034791708 AS "Estimator" UNION ALL SELECT 143 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS depth, 71 AS parent_id, -0.12190811891813536 AS "Estimator") AS "Values"), 
"DT_Output_2" AS 
(SELECT "DT_node_lookup_2"."KEY" AS "KEY", "DT_node_lookup_2".node_id_2 AS node_id_2, "DT_node_data_2".node_id AS node_id, "DT_node_data_2".feature AS feature, "DT_node_data_2".threshold AS threshold, "DT_node_data_2".depth AS depth, "DT_node_data_2".parent_id AS parent_id, "DT_node_data_2"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_2" LEFT OUTER JOIN "DT_node_data_2" ON "DT_node_lookup_2".node_id_2 = "DT_node_data_2".node_id), 
"LGBM_Model_2" AS 
(SELECT "DT_Output_2"."KEY" AS "KEY", "DT_Output_2"."Estimator" AS "Estimator" 
FROM "DT_Output_2"), 
"DT_node_lookup_3" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_5" <= 7.097500000000001) THEN CASE WHEN ("ADS"."Feature_12" <= 14.805000000000001) THEN CASE WHEN ("ADS"."Feature_5" <= 6.531500000000001) THEN CASE WHEN ("ADS"."Feature_12" <= 9.700000000000001) THEN CASE WHEN ("ADS"."Feature_11" <= 390.80000000000007) THEN 32 ELSE CASE WHEN ("ADS"."Feature_5" <= 6.157500000000001) THEN 66 ELSE 67 END END ELSE CASE WHEN ("ADS"."Feature_9" <= 282.50000000000006) THEN 34 ELSE CASE WHEN ("ADS"."Feature_8" <= 4.500000000000001) THEN 70 ELSE CASE WHEN ("ADS"."Feature_6" <= 70.45) THEN 142 ELSE 143 END END END END ELSE CASE WHEN ("ADS"."Feature_12" <= 5.285000000000001) THEN 18 ELSE CASE WHEN ("ADS"."Feature_2" <= 6.080000000000001) THEN 38 ELSE 39 END END END ELSE CASE WHEN ("ADS"."Feature_4" <= 0.6070000000000001) THEN CASE WHEN ("ADS"."Feature_0" <= 0.6718550000000001) THEN 20 ELSE 21 END ELSE CASE WHEN ("ADS"."Feature_0" <= 9.870020000000002) THEN CASE WHEN ("ADS"."Feature_12" <= 19.080000000000002) THEN 44 ELSE 45 END ELSE 23 END END END ELSE CASE WHEN ("ADS"."Feature_5" <= 7.479500000000001) THEN 6 ELSE 7 END END AS node_id_2 
FROM boston AS "ADS"), 
"DT_node_data_3" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values".threshold AS FLOAT) AS threshold, CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, 3 AS parent_id, 0.4628946996870495 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, 3 AS parent_id, 0.9697264621655146 AS "Estimator" UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 9 AS parent_id, 0.39650421479473946 AS "Estimator" UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 10 AS parent_id, -0.12584271324941745 AS "Estimator" UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 10 AS parent_id, -0.2825445526838303 AS "Estimator" UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 11 AS parent_id, -0.5371705524126689 AS "Estimator" UNION ALL SELECT 32 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS depth, 16 AS parent_id, 0.16862687380751595 AS "Estimator" UNION ALL SELECT 34 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS depth, 17 AS parent_id, -0.029310325502107545 AS "Estimator" UNION ALL SELECT 38 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS depth, 19 AS parent_id, 0.2179743518680334 AS "Estimator" UNION ALL SELECT 39 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS depth, 19 AS parent_id, 0.11691229958087207 AS "Estimator" UNION ALL SELECT 44 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS depth, 22 AS parent_id, -0.28575166728761464 AS "Estimator" UNION ALL SELECT 45 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS depth, 22 AS parent_id, -0.4187166654545328 AS "Estimator" UNION ALL SELECT 66 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS depth, 33 AS parent_id, -0.09198578777057785 AS "Estimator" UNION ALL SELECT 67 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS depth, 33 AS parent_id, 0.052118188159407254 AS "Estimator" UNION ALL SELECT 70 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS depth, 35 AS parent_id, -0.15358042017273282 AS "Estimator" UNION ALL SELECT 142 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS depth, 71 AS parent_id, -0.044753270074725154 AS "Estimator" UNION ALL SELECT 143 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS depth, 71 AS parent_id, -0.11581271548528929 AS "Estimator") AS "Values"), 
"DT_Output_3" AS 
(SELECT "DT_node_lookup_3"."KEY" AS "KEY", "DT_node_lookup_3".node_id_2 AS node_id_2, "DT_node_data_3".node_id AS node_id, "DT_node_data_3".feature AS feature, "DT_node_data_3".threshold AS threshold, "DT_node_data_3".depth AS depth, "DT_node_data_3".parent_id AS parent_id, "DT_node_data_3"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_3" LEFT OUTER JOIN "DT_node_data_3" ON "DT_node_lookup_3".node_id_2 = "DT_node_data_3".node_id), 
"LGBM_Model_3" AS 
(SELECT "DT_Output_3"."KEY" AS "KEY", "DT_Output_3"."Estimator" AS "Estimator" 
FROM "DT_Output_3"), 
"DT_node_lookup_4" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_5" <= 6.825) THEN CASE WHEN ("ADS"."Feature_12" <= 14.805000000000001) THEN CASE WHEN ("ADS"."Feature_12" <= 9.700000000000001) THEN CASE WHEN ("ADS"."Feature_11" <= 385.25000000000006) THEN 16 ELSE CASE WHEN ("ADS"."Feature_5" <= 6.472500000000001) THEN CASE WHEN ("ADS"."Feature_5" <= 6.157500000000001) THEN 68 ELSE 69 END ELSE 35 END END ELSE CASE WHEN ("ADS"."Feature_9" <= 282.50000000000006) THEN 18 ELSE CASE WHEN ("ADS"."Feature_8" <= 4.500000000000001) THEN 38 ELSE CASE WHEN ("ADS"."Feature_6" <= 70.45) THEN 78 ELSE 79 END END END END ELSE CASE WHEN ("ADS"."Feature_0" <= 5.8480300000000005) THEN CASE WHEN ("ADS"."Feature_7" <= 2.0001000000000007) THEN 20 ELSE CASE WHEN ("ADS"."Feature_0" <= 0.30940000000000006) THEN 42 ELSE 43 END END ELSE CASE WHEN ("ADS"."Feature_12" <= 21.385) THEN 22 ELSE 23 END END END ELSE CASE WHEN ("ADS"."Feature_5" <= 7.416000000000001) THEN CASE WHEN ("ADS"."Feature_12" <= 5.410000000000001) THEN 12 ELSE 13 END ELSE 7 END END AS node_id_2 
FROM boston AS "ADS"), 
"DT_node_data_4" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values".threshold AS FLOAT) AS threshold, CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, 3 AS parent_id, 0.9001216561705978 AS "Estimator" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 6 AS parent_id, 0.4488262629508972 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 6 AS parent_id, 0.19552444732189178 AS "Estimator" UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 8 AS parent_id, 0.2758381972766735 AS "Estimator" UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 9 AS parent_id, -0.027844806458978428 AS "Estimator" UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 10 AS parent_id, -0.31943896873430777 AS "Estimator" UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 11 AS parent_id, -0.3637155628204346 AS "Estimator" UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 11 AS parent_id, -0.4923156436284384 AS "Estimator" UNION ALL SELECT 35 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS depth, 17 AS parent_id, 0.16882487437961735 AS "Estimator" UNION ALL SELECT 38 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS depth, 19 AS parent_id, -0.1437976984928052 AS "Estimator" UNION ALL SELECT 42 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS depth, 21 AS parent_id, -0.10740145653486254 AS "Estimator" UNION ALL SELECT 43 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS depth, 21 AS parent_id, -0.23098403357646685 AS "Estimator" UNION ALL SELECT 68 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS depth, 34 AS parent_id, -0.07795563204740377 AS "Estimator" UNION ALL SELECT 69 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS depth, 34 AS parent_id, 0.027667950552243456 AS "Estimator" UNION ALL SELECT 78 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS depth, 39 AS parent_id, -0.04251560464501381 AS "Estimator" UNION ALL SELECT 79 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS depth, 39 AS parent_id, -0.10732435005667962 AS "Estimator") AS "Values"), 
"DT_Output_4" AS 
(SELECT "DT_node_lookup_4"."KEY" AS "KEY", "DT_node_lookup_4".node_id_2 AS node_id_2, "DT_node_data_4".node_id AS node_id, "DT_node_data_4".feature AS feature, "DT_node_data_4".threshold AS threshold, "DT_node_data_4".depth AS depth, "DT_node_data_4".parent_id AS parent_id, "DT_node_data_4"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_4" LEFT OUTER JOIN "DT_node_data_4" ON "DT_node_lookup_4".node_id_2 = "DT_node_data_4".node_id), 
"LGBM_Model_4" AS 
(SELECT "DT_Output_4"."KEY" AS "KEY", "DT_Output_4"."Estimator" AS "Estimator" 
FROM "DT_Output_4"), 
"DT_node_lookup_5" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_5" <= 7.097500000000001) THEN CASE WHEN ("ADS"."Feature_12" <= 14.805000000000001) THEN CASE WHEN ("ADS"."Feature_5" <= 6.531500000000001) THEN CASE WHEN ("ADS"."Feature_12" <= 9.700000000000001) THEN CASE WHEN ("ADS"."Feature_0" <= 0.13995000000000005) THEN CASE WHEN ("ADS"."Feature_5" <= 6.208500000000001) THEN 64 ELSE 65 END ELSE 33 END ELSE CASE WHEN ("ADS"."Feature_7" <= 4.433350000000002) THEN CASE WHEN ("ADS"."Feature_6" <= 70.45) THEN 68 ELSE CASE WHEN ("ADS"."Feature_4" <= 0.6010000000000001) THEN 138 ELSE 139 END END ELSE 35 END END ELSE CASE WHEN ("ADS"."Feature_12" <= 5.285000000000001) THEN 18 ELSE CASE WHEN ("ADS"."Feature_2" <= 6.080000000000001) THEN 38 ELSE 39 END END END ELSE CASE WHEN ("ADS"."Feature_4" <= 0.6635000000000001) THEN CASE WHEN ("ADS"."Feature_10" <= 19.900000000000002) THEN 20 ELSE 21 END ELSE CASE WHEN ("ADS"."Feature_0" <= 9.870020000000002) THEN 22 ELSE 23 END END END ELSE CASE WHEN ("ADS"."Feature_5" <= 7.479500000000001) THEN 6 ELSE 7 END END AS node_id_2 
FROM boston AS "ADS"), 
"DT_node_data_5" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values".threshold AS FLOAT) AS threshold, CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, 3 AS parent_id, 0.41951302687327074 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, 3 AS parent_id, 0.876234057545662 AS "Estimator" UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 9 AS parent_id, 0.3606115233153105 AS "Estimator" UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 10 AS parent_id, -0.11231489549577237 AS "Estimator" UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 10 AS parent_id, -0.26128859628330575 AS "Estimator" UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 11 AS parent_id, -0.32022302318841983 AS "Estimator" UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 11 AS parent_id, -0.4954502146819542 AS "Estimator" UNION ALL SELECT 33 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS depth, 16 AS parent_id, 0.15058369689028372 AS "Estimator" UNION ALL SELECT 35 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS depth, 17 AS parent_id, -0.13262193070517644 AS "Estimator" UNION ALL SELECT 38 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS depth, 19 AS parent_id, 0.1974985801614821 AS "Estimator" UNION ALL SELECT 39 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS depth, 19 AS parent_id, 0.10349609396420419 AS "Estimator" UNION ALL SELECT 64 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS depth, 32 AS parent_id, -0.07593208227306605 AS "Estimator" UNION ALL SELECT 65 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS depth, 32 AS parent_id, 0.028353116392261454 AS "Estimator" UNION ALL SELECT 68 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS depth, 34 AS parent_id, -0.015540200060811535 AS "Estimator" UNION ALL SELECT 138 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS depth, 69 AS parent_id, -0.13518817776983436 AS "Estimator" UNION ALL SELECT 139 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS depth, 69 AS parent_id, -0.0617536703205627 AS "Estimator") AS "Values"), 
"DT_Output_5" AS 
(SELECT "DT_node_lookup_5"."KEY" AS "KEY", "DT_node_lookup_5".node_id_2 AS node_id_2, "DT_node_data_5".node_id AS node_id, "DT_node_data_5".feature AS feature, "DT_node_data_5".threshold AS threshold, "DT_node_data_5".depth AS depth, "DT_node_data_5".parent_id AS parent_id, "DT_node_data_5"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_5" LEFT OUTER JOIN "DT_node_data_5" ON "DT_node_lookup_5".node_id_2 = "DT_node_data_5".node_id), 
"LGBM_Model_5" AS 
(SELECT "DT_Output_5"."KEY" AS "KEY", "DT_Output_5"."Estimator" AS "Estimator" 
FROM "DT_Output_5"), 
"DT_node_lookup_6" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_5" <= 6.825) THEN CASE WHEN ("ADS"."Feature_12" <= 14.805000000000001) THEN CASE WHEN ("ADS"."Feature_12" <= 9.700000000000001) THEN CASE WHEN ("ADS"."Feature_11" <= 385.25000000000006) THEN 16 ELSE CASE WHEN ("ADS"."Feature_5" <= 6.472500000000001) THEN CASE WHEN ("ADS"."Feature_5" <= 6.157500000000001) THEN 68 ELSE 69 END ELSE 35 END END ELSE CASE WHEN ("ADS"."Feature_5" <= 5.851500000000001) THEN 18 ELSE CASE WHEN ("ADS"."Feature_10" <= 18.650000000000002) THEN 38 ELSE CASE WHEN ("ADS"."Feature_2" <= 9.125000000000002) THEN 78 ELSE 79 END END END END ELSE CASE WHEN ("ADS"."Feature_0" <= 5.8480300000000005) THEN CASE WHEN ("ADS"."Feature_7" <= 2.0001000000000007) THEN 20 ELSE CASE WHEN ("ADS"."Feature_10" <= 19.150000000000002) THEN 42 ELSE 43 END END ELSE CASE WHEN ("ADS"."Feature_12" <= 21.385) THEN 22 ELSE 23 END END END ELSE CASE WHEN ("ADS"."Feature_5" <= 7.416000000000001) THEN CASE WHEN ("ADS"."Feature_12" <= 5.410000000000001) THEN 12 ELSE 13 END ELSE 7 END END AS node_id_2 
FROM boston AS "ADS"), 
"DT_node_data_6" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values".threshold AS FLOAT) AS threshold, CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, 3 AS parent_id, 0.8138412051730687 AS "Estimator" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 6 AS parent_id, 0.40702908992767334 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 6 AS parent_id, 0.17512054133415222 AS "Estimator" UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 8 AS parent_id, 0.2546831145205281 AS "Estimator" UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 9 AS parent_id, -0.130439582230368 AS "Estimator" UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 10 AS parent_id, -0.2894724420525811 AS "Estimator" UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 11 AS parent_id, -0.3285521517197291 AS "Estimator" UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 11 AS parent_id, -0.44555837154388434 AS "Estimator" UNION ALL SELECT 35 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS depth, 17 AS parent_id, 0.15131255820092254 AS "Estimator" UNION ALL SELECT 38 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS depth, 19 AS parent_id, -0.019852202046181888 AS "Estimator" UNION ALL SELECT 42 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS depth, 21 AS parent_id, -0.0984124936518215 AS "Estimator" UNION ALL SELECT 43 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS depth, 21 AS parent_id, -0.20983166723024277 AS "Estimator" UNION ALL SELECT 68 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS depth, 34 AS parent_id, -0.07321579882308192 AS "Estimator" UNION ALL SELECT 69 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS depth, 34 AS parent_id, 0.023622583182385335 AS "Estimator" UNION ALL SELECT 78 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS depth, 39 AS parent_id, -0.12303612563293427 AS "Estimator" UNION ALL SELECT 79 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS depth, 39 AS parent_id, -0.06780925784260035 AS "Estimator") AS "Values"), 
"DT_Output_6" AS 
(SELECT "DT_node_lookup_6"."KEY" AS "KEY", "DT_node_lookup_6".node_id_2 AS node_id_2, "DT_node_data_6".node_id AS node_id, "DT_node_data_6".feature AS feature, "DT_node_data_6".threshold AS threshold, "DT_node_data_6".depth AS depth, "DT_node_data_6".parent_id AS parent_id, "DT_node_data_6"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_6" LEFT OUTER JOIN "DT_node_data_6" ON "DT_node_lookup_6".node_id_2 = "DT_node_data_6".node_id), 
"LGBM_Model_6" AS 
(SELECT "DT_Output_6"."KEY" AS "KEY", "DT_Output_6"."Estimator" AS "Estimator" 
FROM "DT_Output_6"), 
"DT_node_lookup_7" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_5" <= 7.097500000000001) THEN CASE WHEN ("ADS"."Feature_12" <= 14.805000000000001) THEN CASE WHEN ("ADS"."Feature_5" <= 6.531500000000001) THEN CASE WHEN ("ADS"."Feature_12" <= 9.700000000000001) THEN CASE WHEN ("ADS"."Feature_7" <= 4.4583) THEN 32 ELSE CASE WHEN ("ADS"."Feature_12" <= 7.550000000000001) THEN 66 ELSE 67 END END ELSE CASE WHEN ("ADS"."Feature_9" <= 282.50000000000006) THEN 34 ELSE CASE WHEN ("ADS"."Feature_8" <= 4.500000000000001) THEN 70 ELSE CASE WHEN ("ADS"."Feature_6" <= 70.45) THEN 142 ELSE 143 END END END END ELSE CASE WHEN ("ADS"."Feature_12" <= 5.410000000000001) THEN 18 ELSE 19 END END ELSE CASE WHEN ("ADS"."Feature_4" <= 0.6695000000000001) THEN CASE WHEN ("ADS"."Feature_10" <= 19.900000000000002) THEN 20 ELSE 21 END ELSE CASE WHEN ("ADS"."Feature_0" <= 9.870020000000002) THEN 22 ELSE 23 END END END ELSE CASE WHEN ("ADS"."Feature_5" <= 7.479500000000001) THEN 6 ELSE 7 END END AS node_id_2 
FROM boston AS "ADS"), 
"DT_node_data_7" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values".threshold AS FLOAT) AS threshold, CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, 3 AS parent_id, 0.3802495740708851 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, 3 AS parent_id, 0.7917302926381429 AS "Estimator" UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 9 AS parent_id, 0.3203236408233643 AS "Estimator" UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 9 AS parent_id, 0.1300610842967504 AS "Estimator" UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 10 AS parent_id, -0.10056861299276353 AS "Estimator" UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 10 AS parent_id, -0.23590683834893367 AS "Estimator" UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 11 AS parent_id, -0.28854868572491865 AS "Estimator" UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 11 AS parent_id, -0.46528554139313877 AS "Estimator" UNION ALL SELECT 32 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS depth, 16 AS parent_id, 0.1500300649739802 AS "Estimator" UNION ALL SELECT 34 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS depth, 17 AS parent_id, -0.020154742257935662 AS "Estimator" UNION ALL SELECT 66 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS depth, 33 AS parent_id, 0.0155150726969753 AS "Estimator" UNION ALL SELECT 67 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS depth, 33 AS parent_id, -0.056125140700134496 AS "Estimator" UNION ALL SELECT 70 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS depth, 35 AS parent_id, -0.1289058318928532 AS "Estimator" UNION ALL SELECT 142 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS depth, 71 AS parent_id, -0.03416315339971334 AS "Estimator" UNION ALL SELECT 143 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS depth, 71 AS parent_id, -0.09554501856501038 AS "Estimator") AS "Values"), 
"DT_Output_7" AS 
(SELECT "DT_node_lookup_7"."KEY" AS "KEY", "DT_node_lookup_7".node_id_2 AS node_id_2, "DT_node_data_7".node_id AS node_id, "DT_node_data_7".feature AS feature, "DT_node_data_7".threshold AS threshold, "DT_node_data_7".depth AS depth, "DT_node_data_7".parent_id AS parent_id, "DT_node_data_7"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_7" LEFT OUTER JOIN "DT_node_data_7" ON "DT_node_lookup_7".node_id_2 = "DT_node_data_7".node_id), 
"LGBM_Model_7" AS 
(SELECT "DT_Output_7"."KEY" AS "KEY", "DT_Output_7"."Estimator" AS "Estimator" 
FROM "DT_Output_7"), 
"DT_node_lookup_8" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_5" <= 6.825) THEN CASE WHEN ("ADS"."Feature_12" <= 14.125000000000002) THEN CASE WHEN ("ADS"."Feature_5" <= 6.531500000000001) THEN CASE WHEN ("ADS"."Feature_4" <= 0.6010000000000001) THEN CASE WHEN ("ADS"."Feature_5" <= 6.057500000000001) THEN CASE WHEN ("ADS"."Feature_5" <= 5.869500000000001) THEN 64 ELSE 65 END ELSE CASE WHEN ("ADS"."Feature_6" <= 69.55000000000001) THEN CASE WHEN ("ADS"."Feature_7" <= 6.303050000000001) THEN 132 ELSE 133 END ELSE 67 END END ELSE 17 END ELSE 9 END ELSE CASE WHEN ("ADS"."Feature_7" <= 2.0754000000000006) THEN CASE WHEN ("ADS"."Feature_0" <= 7.5990150000000005) THEN 20 ELSE CASE WHEN ("ADS"."Feature_6" <= 98.75000000000001) THEN 42 ELSE 43 END END ELSE CASE WHEN ("ADS"."Feature_0" <= 0.6718550000000001) THEN 22 ELSE 23 END END END ELSE CASE WHEN ("ADS"."Feature_5" <= 7.416000000000001) THEN CASE WHEN ("ADS"."Feature_9" <= 298.00000000000006) THEN 12 ELSE 13 END ELSE 7 END END AS node_id_2 
FROM boston AS "ADS"), 
"DT_node_data_8" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values".threshold AS FLOAT) AS threshold, CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, 3 AS parent_id, 0.7358486272670605 AS "Estimator" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 4 AS parent_id, 0.17009789582930113 AS "Estimator" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 6 AS parent_id, 0.3583176061273148 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 6 AS parent_id, 0.13986249430613085 AS "Estimator" UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 8 AS parent_id, 0.09653892383839076 AS "Estimator" UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 10 AS parent_id, -0.25428167043193695 AS "Estimator" UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 11 AS parent_id, -0.0848230911185965 AS "Estimator" UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 11 AS parent_id, -0.22880199338708607 AS "Estimator" UNION ALL SELECT 42 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS depth, 21 AS parent_id, -0.41261228382587434 AS "Estimator" UNION ALL SELECT 43 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS depth, 21 AS parent_id, -0.37265707403421405 AS "Estimator" UNION ALL SELECT 64 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS depth, 32 AS parent_id, -0.1527059193700552 AS "Estimator" UNION ALL SELECT 65 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS depth, 32 AS parent_id, -0.07131623082927295 AS "Estimator" UNION ALL SELECT 67 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS depth, 33 AS parent_id, -0.07668999359011651 AS "Estimator" UNION ALL SELECT 132 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS depth, 66 AS parent_id, 0.04374145536738284 AS "Estimator" UNION ALL SELECT 133 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS depth, 66 AS parent_id, -0.01202952926534982 AS "Estimator") AS "Values"), 
"DT_Output_8" AS 
(SELECT "DT_node_lookup_8"."KEY" AS "KEY", "DT_node_lookup_8".node_id_2 AS node_id_2, "DT_node_data_8".node_id AS node_id, "DT_node_data_8".feature AS feature, "DT_node_data_8".threshold AS threshold, "DT_node_data_8".depth AS depth, "DT_node_data_8".parent_id AS parent_id, "DT_node_data_8"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_8" LEFT OUTER JOIN "DT_node_data_8" ON "DT_node_lookup_8".node_id_2 = "DT_node_data_8".node_id), 
"LGBM_Model_8" AS 
(SELECT "DT_Output_8"."KEY" AS "KEY", "DT_Output_8"."Estimator" AS "Estimator" 
FROM "DT_Output_8"), 
"DT_node_lookup_9" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_5" <= 7.097500000000001) THEN CASE WHEN ("ADS"."Feature_12" <= 14.805000000000001) THEN CASE WHEN ("ADS"."Feature_5" <= 6.531500000000001) THEN CASE WHEN ("ADS"."Feature_12" <= 9.700000000000001) THEN CASE WHEN ("ADS"."Feature_0" <= 0.15487000000000004) THEN CASE WHEN ("ADS"."Feature_10" <= 18.250000000000004) THEN 64 ELSE 65 END ELSE 33 END ELSE CASE WHEN ("ADS"."Feature_9" <= 282.50000000000006) THEN 34 ELSE CASE WHEN ("ADS"."Feature_5" <= 5.851500000000001) THEN 70 ELSE CASE WHEN ("ADS"."Feature_6" <= 74.35000000000001) THEN 142 ELSE 143 END END END END ELSE CASE WHEN ("ADS"."Feature_12" <= 5.410000000000001) THEN 18 ELSE 19 END END ELSE CASE WHEN ("ADS"."Feature_4" <= 0.6695000000000001) THEN CASE WHEN ("ADS"."Feature_10" <= 19.900000000000002) THEN 20 ELSE 21 END ELSE CASE WHEN ("ADS"."Feature_0" <= 9.870020000000002) THEN 22 ELSE 23 END END END ELSE CASE WHEN ("ADS"."Feature_5" <= 7.479500000000001) THEN 6 ELSE 7 END END AS node_id_2 
FROM boston AS "ADS"), 
"DT_node_data_9" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values".threshold AS FLOAT) AS threshold, CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, 3 AS parent_id, 0.344785627864656 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, 3 AS parent_id, 0.7153513232866924 AS "Estimator" UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 9 AS parent_id, 0.2938462805747986 AS "Estimator" UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 9 AS parent_id, 0.11359801598285374 AS "Estimator" UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 10 AS parent_id, -0.09028227347135544 AS "Estimator" UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 10 AS parent_id, -0.21146653473377228 AS "Estimator" UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 11 AS parent_id, -0.2602796187003454 AS "Estimator" UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 11 AS parent_id, -0.4241008526749081 AS "Estimator" UNION ALL SELECT 33 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS depth, 16 AS parent_id, 0.14321047952398658 AS "Estimator" UNION ALL SELECT 34 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS depth, 17 AS parent_id, -0.01592152455732936 AS "Estimator" UNION ALL SELECT 64 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS depth, 32 AS parent_id, 0.02641438170232707 AS "Estimator" UNION ALL SELECT 65 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS depth, 32 AS parent_id, -0.06379776702008465 AS "Estimator" UNION ALL SELECT 70 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS depth, 35 AS parent_id, -0.12189870480270613 AS "Estimator" UNION ALL SELECT 142 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS depth, 71 AS parent_id, -0.03578464906507482 AS "Estimator" UNION ALL SELECT 143 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS depth, 71 AS parent_id, -0.09235967772347586 AS "Estimator") AS "Values"), 
"DT_Output_9" AS 
(SELECT "DT_node_lookup_9"."KEY" AS "KEY", "DT_node_lookup_9".node_id_2 AS node_id_2, "DT_node_data_9".node_id AS node_id, "DT_node_data_9".feature AS feature, "DT_node_data_9".threshold AS threshold, "DT_node_data_9".depth AS depth, "DT_node_data_9".parent_id AS parent_id, "DT_node_data_9"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_9" LEFT OUTER JOIN "DT_node_data_9" ON "DT_node_lookup_9".node_id_2 = "DT_node_data_9".node_id), 
"LGBM_Model_9" AS 
(SELECT "DT_Output_9"."KEY" AS "KEY", "DT_Output_9"."Estimator" AS "Estimator" 
FROM "DT_Output_9")
 INSERT INTO "TMP_20180417023610_Y25HC1_LGBM_B0" ("KEY", "Estimator") SELECT "LGBM_B0"."KEY", "LGBM_B0"."Estimator" 
FROM (SELECT "LGBM_esu_0"."KEY" AS "KEY", "LGBM_esu_0"."Estimator" AS "Estimator" 
FROM (SELECT "LGBM_Model_0"."KEY" AS "KEY", "LGBM_Model_0"."Estimator" AS "Estimator" 
FROM "LGBM_Model_0" UNION ALL SELECT "LGBM_Model_1"."KEY" AS "KEY", "LGBM_Model_1"."Estimator" AS "Estimator" 
FROM "LGBM_Model_1" UNION ALL SELECT "LGBM_Model_2"."KEY" AS "KEY", "LGBM_Model_2"."Estimator" AS "Estimator" 
FROM "LGBM_Model_2" UNION ALL SELECT "LGBM_Model_3"."KEY" AS "KEY", "LGBM_Model_3"."Estimator" AS "Estimator" 
FROM "LGBM_Model_3" UNION ALL SELECT "LGBM_Model_4"."KEY" AS "KEY", "LGBM_Model_4"."Estimator" AS "Estimator" 
FROM "LGBM_Model_4" UNION ALL SELECT "LGBM_Model_5"."KEY" AS "KEY", "LGBM_Model_5"."Estimator" AS "Estimator" 
FROM "LGBM_Model_5" UNION ALL SELECT "LGBM_Model_6"."KEY" AS "KEY", "LGBM_Model_6"."Estimator" AS "Estimator" 
FROM "LGBM_Model_6" UNION ALL SELECT "LGBM_Model_7"."KEY" AS "KEY", "LGBM_Model_7"."Estimator" AS "Estimator" 
FROM "LGBM_Model_7" UNION ALL SELECT "LGBM_Model_8"."KEY" AS "KEY", "LGBM_Model_8"."Estimator" AS "Estimator" 
FROM "LGBM_Model_8" UNION ALL SELECT "LGBM_Model_9"."KEY" AS "KEY", "LGBM_Model_9"."Estimator" AS "Estimator" 
FROM "LGBM_Model_9") AS "LGBM_esu_0") AS "LGBM_B0"

-- Code For temporary table TMP_20180417023610_OE86D7_LGBM_B1 part 1/2. Create 


CREATE TEMPORARY TABLE "TMP_20180417023610_OE86D7_LGBM_B1" (
	"KEY" BIGINT, 
	"Estimator" FLOAT
)



-- Code For temporary table TMP_20180417023610_OE86D7_LGBM_B1 part 2/2. Populate

WITH "DT_node_lookup_10" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_12" <= 9.700000000000001) THEN CASE WHEN ("ADS"."Feature_5" <= 7.147500000000001) THEN CASE WHEN ("ADS"."Feature_5" <= 6.665500000000001) THEN CASE WHEN ("ADS"."Feature_7" <= 3.5949000000000004) THEN 16 ELSE CASE WHEN ("ADS"."Feature_5" <= 6.157500000000001) THEN 34 ELSE CASE WHEN ("ADS"."Feature_6" <= 37.95000000000001) THEN 70 ELSE 71 END END END ELSE 9 END ELSE 5 END ELSE CASE WHEN ("ADS"."Feature_12" <= 15.06) THEN CASE WHEN ("ADS"."Feature_9" <= 282.50000000000006) THEN 12 ELSE CASE WHEN ("ADS"."Feature_12" <= 12.370000000000003) THEN CASE WHEN ("ADS"."Feature_8" <= 5.500000000000001) THEN 52 ELSE 53 END ELSE CASE WHEN ("ADS"."Feature_12" <= 13.395000000000001) THEN 54 ELSE 55 END END END ELSE CASE WHEN ("ADS"."Feature_4" <= 0.6695000000000001) THEN CASE WHEN ("ADS"."Feature_10" <= 19.900000000000002) THEN 28 ELSE 29 END ELSE CASE WHEN ("ADS"."Feature_0" <= 9.870020000000002) THEN 30 ELSE 31 END END END END AS node_id_2 
FROM boston AS "ADS"), 
"DT_node_data_10" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values".threshold AS FLOAT) AS threshold, CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, 2 AS parent_id, 0.5860378943956815 AS "Estimator" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 4 AS parent_id, 0.2369123550561758 AS "Estimator" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 6 AS parent_id, 0.010432008751060652 AS "Estimator" UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 8 AS parent_id, 0.17232977857014964 AS "Estimator" UNION ALL SELECT 28 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 14 AS parent_id, -0.08576816231012345 AS "Estimator" UNION ALL SELECT 29 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 14 AS parent_id, -0.2063874257333351 AS "Estimator" UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 15 AS parent_id, -0.2523491700203755 AS "Estimator" UNION ALL SELECT 31 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 15 AS parent_id, -0.4155867787507864 AS "Estimator" UNION ALL SELECT 34 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS depth, 17 AS parent_id, -0.05970133189111948 AS "Estimator" UNION ALL SELECT 52 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS depth, 26 AS parent_id, -0.07706475724344669 AS "Estimator" UNION ALL SELECT 53 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS depth, 26 AS parent_id, -0.012530059420636723 AS "Estimator" UNION ALL SELECT 54 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS depth, 27 AS parent_id, -0.08677442354912107 AS "Estimator" UNION ALL SELECT 55 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS depth, 27 AS parent_id, -0.12301581096649171 AS "Estimator" UNION ALL SELECT 70 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS depth, 35 AS parent_id, 0.06621707380534365 AS "Estimator" UNION ALL SELECT 71 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS depth, 35 AS parent_id, 0.006380766664039005 AS "Estimator") AS "Values"), 
"DT_Output_10" AS 
(SELECT "DT_node_lookup_10"."KEY" AS "KEY", "DT_node_lookup_10".node_id_2 AS node_id_2, "DT_node_data_10".node_id AS node_id, "DT_node_data_10".feature AS feature, "DT_node_data_10".threshold AS threshold, "DT_node_data_10".depth AS depth, "DT_node_data_10".parent_id AS parent_id, "DT_node_data_10"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_10" LEFT OUTER JOIN "DT_node_data_10" ON "DT_node_lookup_10".node_id_2 = "DT_node_data_10".node_id), 
"LGBM_Model_10" AS 
(SELECT "DT_Output_10"."KEY" AS "KEY", "DT_Output_10"."Estimator" AS "Estimator" 
FROM "DT_Output_10"), 
"DT_node_lookup_11" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_12" <= 5.155000000000001) THEN CASE WHEN ("ADS"."Feature_5" <= 7.416000000000001) THEN 4 ELSE 5 END ELSE CASE WHEN ("ADS"."Feature_12" <= 14.805000000000001) THEN CASE WHEN ("ADS"."Feature_5" <= 6.61) THEN CASE WHEN ("ADS"."Feature_12" <= 9.63) THEN CASE WHEN ("ADS"."Feature_7" <= 4.4583) THEN 48 ELSE CASE WHEN ("ADS"."Feature_12" <= 7.4750000000000005) THEN 98 ELSE 99 END END ELSE CASE WHEN ("ADS"."Feature_7" <= 4.433350000000002) THEN CASE WHEN ("ADS"."Feature_4" <= 0.5350000000000001) THEN 100 ELSE CASE WHEN ("ADS"."Feature_4" <= 0.6010000000000001) THEN 202 ELSE 203 END END ELSE 51 END END ELSE CASE WHEN ("ADS"."Feature_2" <= 4.44) THEN 26 ELSE 27 END END ELSE CASE WHEN ("ADS"."Feature_4" <= 0.6070000000000001) THEN CASE WHEN ("ADS"."Feature_0" <= 0.6718550000000001) THEN 28 ELSE 29 END ELSE CASE WHEN ("ADS"."Feature_12" <= 19.080000000000002) THEN 30 ELSE CASE WHEN ("ADS"."Feature_0" <= 9.870020000000002) THEN 62 ELSE 63 END END END END END AS node_id_2 
FROM boston AS "ADS"), 
"DT_node_data_11" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values".threshold AS FLOAT) AS threshold, CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, 2 AS parent_id, 0.27813505167141556 AS "Estimator" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, 2 AS parent_id, 0.7071466809227354 AS "Estimator" UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 13 AS parent_id, 0.3152088026106358 AS "Estimator" UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 13 AS parent_id, 0.0335807578071304 AS "Estimator" UNION ALL SELECT 28 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 14 AS parent_id, -0.08043880886756458 AS "Estimator" UNION ALL SELECT 29 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 14 AS parent_id, -0.1819016018137336 AS "Estimator" UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 15 AS parent_id, -0.2051392155247075 AS "Estimator" UNION ALL SELECT 48 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS depth, 24 AS parent_id, 0.14149663950438085 AS "Estimator" UNION ALL SELECT 51 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS depth, 25 AS parent_id, -0.10736329283703257 AS "Estimator" UNION ALL SELECT 62 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS depth, 31 AS parent_id, -0.2934186893960704 AS "Estimator" UNION ALL SELECT 63 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS depth, 31 AS parent_id, -0.3881442691968835 AS "Estimator" UNION ALL SELECT 98 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS depth, 49 AS parent_id, 0.020777266133576635 AS "Estimator" UNION ALL SELECT 99 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS depth, 49 AS parent_id, -0.04725646804273129 AS "Estimator" UNION ALL SELECT 100 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS depth, 50 AS parent_id, 0.008669850726922354 AS "Estimator" UNION ALL SELECT 202 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS depth, 101 AS parent_id, -0.10105299612990133 AS "Estimator" UNION ALL SELECT 203 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS depth, 101 AS parent_id, -0.039639872640371325 AS "Estimator") AS "Values"), 
"DT_Output_11" AS 
(SELECT "DT_node_lookup_11"."KEY" AS "KEY", "DT_node_lookup_11".node_id_2 AS node_id_2, "DT_node_data_11".node_id AS node_id, "DT_node_data_11".feature AS feature, "DT_node_data_11".threshold AS threshold, "DT_node_data_11".depth AS depth, "DT_node_data_11".parent_id AS parent_id, "DT_node_data_11"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_11" LEFT OUTER JOIN "DT_node_data_11" ON "DT_node_lookup_11".node_id_2 = "DT_node_data_11".node_id), 
"LGBM_Model_11" AS 
(SELECT "DT_Output_11"."KEY" AS "KEY", "DT_Output_11"."Estimator" AS "Estimator" 
FROM "DT_Output_11"), 
"DT_node_lookup_12" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_12" <= 5.155000000000001) THEN CASE WHEN ("ADS"."Feature_5" <= 7.416000000000001) THEN 4 ELSE 5 END ELSE CASE WHEN ("ADS"."Feature_12" <= 14.805000000000001) THEN CASE WHEN ("ADS"."Feature_5" <= 6.61) THEN CASE WHEN ("ADS"."Feature_12" <= 9.63) THEN CASE WHEN ("ADS"."Feature_7" <= 4.4583) THEN 48 ELSE CASE WHEN ("ADS"."Feature_12" <= 7.4750000000000005) THEN 98 ELSE 99 END END ELSE CASE WHEN ("ADS"."Feature_7" <= 4.433350000000002) THEN CASE WHEN ("ADS"."Feature_4" <= 0.5350000000000001) THEN 100 ELSE CASE WHEN ("ADS"."Feature_4" <= 0.6010000000000001) THEN 202 ELSE 203 END END ELSE 51 END END ELSE CASE WHEN ("ADS"."Feature_2" <= 4.44) THEN 26 ELSE 27 END END ELSE CASE WHEN ("ADS"."Feature_4" <= 0.6695000000000001) THEN CASE WHEN ("ADS"."Feature_10" <= 19.900000000000002) THEN 28 ELSE 29 END ELSE CASE WHEN ("ADS"."Feature_0" <= 9.870020000000002) THEN CASE WHEN ("ADS"."Feature_0" <= 6.418585000000001) THEN 60 ELSE 61 END ELSE 31 END END END END AS node_id_2 
FROM boston AS "ADS"), 
"DT_node_data_12" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values".threshold AS FLOAT) AS threshold, CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, 2 AS parent_id, 0.26422829944640397 AS "Estimator" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, 2 AS parent_id, 0.6717893282572429 AS "Estimator" UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 13 AS parent_id, 0.29944835829734806 AS "Estimator" UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 13 AS parent_id, 0.031901719777480415 AS "Estimator" UNION ALL SELECT 28 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 14 AS parent_id, -0.07745781123638154 AS "Estimator" UNION ALL SELECT 29 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 14 AS parent_id, -0.18036983508350596 AS "Estimator" UNION ALL SELECT 31 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 15 AS parent_id, -0.3652844349543254 AS "Estimator" UNION ALL SELECT 48 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS depth, 24 AS parent_id, 0.13442180725118227 AS "Estimator" UNION ALL SELECT 51 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS depth, 25 AS parent_id, -0.10199512762052042 AS "Estimator" UNION ALL SELECT 60 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS depth, 30 AS parent_id, -0.18643169552087785 AS "Estimator" UNION ALL SELECT 61 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS depth, 30 AS parent_id, -0.26576476991176606 AS "Estimator" UNION ALL SELECT 98 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS depth, 49 AS parent_id, 0.019738402978517117 AS "Estimator" UNION ALL SELECT 99 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS depth, 49 AS parent_id, -0.04489364455640316 AS "Estimator" UNION ALL SELECT 100 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS depth, 50 AS parent_id, 0.008236358144010107 AS "Estimator" UNION ALL SELECT 202 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS depth, 101 AS parent_id, -0.09600034601710461 AS "Estimator" UNION ALL SELECT 203 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS depth, 101 AS parent_id, -0.03765787845849991 AS "Estimator") AS "Values"), 
"DT_Output_12" AS 
(SELECT "DT_node_lookup_12"."KEY" AS "KEY", "DT_node_lookup_12".node_id_2 AS node_id_2, "DT_node_data_12".node_id AS node_id, "DT_node_data_12".feature AS feature, "DT_node_data_12".threshold AS threshold, "DT_node_data_12".depth AS depth, "DT_node_data_12".parent_id AS parent_id, "DT_node_data_12"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_12" LEFT OUTER JOIN "DT_node_data_12" ON "DT_node_lookup_12".node_id_2 = "DT_node_data_12".node_id), 
"LGBM_Model_12" AS 
(SELECT "DT_Output_12"."KEY" AS "KEY", "DT_Output_12"."Estimator" AS "Estimator" 
FROM "DT_Output_12"), 
"DT_node_lookup_13" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_5" <= 7.097500000000001) THEN CASE WHEN ("ADS"."Feature_12" <= 14.805000000000001) THEN CASE WHEN ("ADS"."Feature_5" <= 6.531500000000001) THEN CASE WHEN ("ADS"."Feature_4" <= 0.6190000000000001) THEN CASE WHEN ("ADS"."Feature_10" <= 19.650000000000002) THEN CASE WHEN ("ADS"."Feature_5" <= 5.925000000000002) THEN 64 ELSE CASE WHEN ("ADS"."Feature_6" <= 44.75000000000001) THEN 130 ELSE CASE WHEN ("ADS"."Feature_9" <= 298.00000000000006) THEN 262 ELSE 263 END END END ELSE CASE WHEN ("ADS"."Feature_6" <= 65.35000000000001) THEN 66 ELSE 67 END END ELSE 17 END ELSE CASE WHEN ("ADS"."Feature_12" <= 5.410000000000001) THEN 18 ELSE 19 END END ELSE CASE WHEN ("ADS"."Feature_4" <= 0.6070000000000001) THEN CASE WHEN ("ADS"."Feature_0" <= 0.6718550000000001) THEN 20 ELSE 21 END ELSE CASE WHEN ("ADS"."Feature_12" <= 19.080000000000002) THEN 22 ELSE CASE WHEN ("ADS"."Feature_7" <= 1.5435) THEN 46 ELSE 47 END END END END ELSE CASE WHEN ("ADS"."Feature_5" <= 7.479500000000001) THEN 6 ELSE 7 END END AS node_id_2 
FROM boston AS "ADS"), 
"DT_node_data_13" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values".threshold AS FLOAT) AS threshold, CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, 3 AS parent_id, 0.27782547644206457 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, 3 AS parent_id, 0.5904404213031132 AS "Estimator" UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 8 AS parent_id, 0.08635084241289985 AS "Estimator" UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 9 AS parent_id, 0.24376178890466693 AS "Estimator" UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 9 AS parent_id, 0.08899628555794296 AS "Estimator" UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 10 AS parent_id, -0.07234606708471591 AS "Estimator" UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 10 AS parent_id, -0.16378803327679636 AS "Estimator" UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 11 AS parent_id, -0.177851279956453 AS "Estimator" UNION ALL SELECT 46 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS depth, 23 AS parent_id, -0.2611170183122158 AS "Estimator" UNION ALL SELECT 47 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS depth, 23 AS parent_id, -0.34674515059361094 AS "Estimator" UNION ALL SELECT 64 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS depth, 32 AS parent_id, -0.07469773027779801 AS "Estimator" UNION ALL SELECT 66 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS depth, 33 AS parent_id, -0.08018923572131566 AS "Estimator" UNION ALL SELECT 67 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS depth, 33 AS parent_id, -0.13653991363942625 AS "Estimator" UNION ALL SELECT 130 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS depth, 65 AS parent_id, 0.04071134873323472 AS "Estimator" UNION ALL SELECT 262 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS depth, 131 AS parent_id, 0.009469649292852569 AS "Estimator" UNION ALL SELECT 263 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS depth, 131 AS parent_id, -0.04703592129729011 AS "Estimator") AS "Values"), 
"DT_Output_13" AS 
(SELECT "DT_node_lookup_13"."KEY" AS "KEY", "DT_node_lookup_13".node_id_2 AS node_id_2, "DT_node_data_13".node_id AS node_id, "DT_node_data_13".feature AS feature, "DT_node_data_13".threshold AS threshold, "DT_node_data_13".depth AS depth, "DT_node_data_13".parent_id AS parent_id, "DT_node_data_13"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_13" LEFT OUTER JOIN "DT_node_data_13" ON "DT_node_lookup_13".node_id_2 = "DT_node_data_13".node_id), 
"LGBM_Model_13" AS 
(SELECT "DT_Output_13"."KEY" AS "KEY", "DT_Output_13"."Estimator" AS "Estimator" 
FROM "DT_Output_13"), 
"DT_node_lookup_14" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_12" <= 9.700000000000001) THEN CASE WHEN ("ADS"."Feature_5" <= 7.147500000000001) THEN CASE WHEN ("ADS"."Feature_9" <= 351.50000000000006) THEN CASE WHEN ("ADS"."Feature_5" <= 6.472500000000001) THEN CASE WHEN ("ADS"."Feature_10" <= 19.150000000000002) THEN 32 ELSE 33 END ELSE CASE WHEN ("ADS"."Feature_9" <= 264.50000000000006) THEN 34 ELSE 35 END END ELSE 9 END ELSE 5 END ELSE CASE WHEN ("ADS"."Feature_4" <= 0.6635000000000001) THEN CASE WHEN ("ADS"."Feature_12" <= 15.06) THEN CASE WHEN ("ADS"."Feature_10" <= 17.850000000000005) THEN 24 ELSE CASE WHEN ("ADS"."Feature_2" <= 10.300000000000002) THEN CASE WHEN ("ADS"."Feature_7" <= 4.377250000000001) THEN 100 ELSE 101 END ELSE 51 END END ELSE CASE WHEN ("ADS"."Feature_10" <= 19.900000000000002) THEN 26 ELSE 27 END END ELSE CASE WHEN ("ADS"."Feature_0" <= 7.1948500000000015) THEN 14 ELSE CASE WHEN ("ADS"."Feature_0" <= 13.518950000000002) THEN 30 ELSE 31 END END END END AS node_id_2 
FROM boston AS "ADS"), 
"DT_node_data_14" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values".threshold AS FLOAT) AS threshold, CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, 2 AS parent_id, 0.4838804587339744 AS "Estimator" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 4 AS parent_id, 0.24460956501689823 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, 7 AS parent_id, -0.13749693538217497 AS "Estimator" UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 12 AS parent_id, 0.018409941478499347 AS "Estimator" UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 13 AS parent_id, -0.06996761918067933 AS "Estimator" UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 13 AS parent_id, -0.1674382903643193 AS "Estimator" UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 15 AS parent_id, -0.2535219215684467 AS "Estimator" UNION ALL SELECT 31 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 15 AS parent_id, -0.35988931953907016 AS "Estimator" UNION ALL SELECT 32 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS depth, 16 AS parent_id, 0.013421330647543073 AS "Estimator" UNION ALL SELECT 33 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS depth, 16 AS parent_id, -0.07691802134116492 AS "Estimator" UNION ALL SELECT 34 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS depth, 17 AS parent_id, 0.21765842251479628 AS "Estimator" UNION ALL SELECT 35 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS depth, 17 AS parent_id, 0.0647455788127357 AS "Estimator" UNION ALL SELECT 51 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS depth, 25 AS parent_id, -0.01968176811291226 AS "Estimator" UNION ALL SELECT 100 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS depth, 50 AS parent_id, -0.07522889091855005 AS "Estimator" UNION ALL SELECT 101 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS depth, 50 AS parent_id, -0.11474529519677162 AS "Estimator") AS "Values"), 
"DT_Output_14" AS 
(SELECT "DT_node_lookup_14"."KEY" AS "KEY", "DT_node_lookup_14".node_id_2 AS node_id_2, "DT_node_data_14".node_id AS node_id, "DT_node_data_14".feature AS feature, "DT_node_data_14".threshold AS threshold, "DT_node_data_14".depth AS depth, "DT_node_data_14".parent_id AS parent_id, "DT_node_data_14"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_14" LEFT OUTER JOIN "DT_node_data_14" ON "DT_node_lookup_14".node_id_2 = "DT_node_data_14".node_id), 
"LGBM_Model_14" AS 
(SELECT "DT_Output_14"."KEY" AS "KEY", "DT_Output_14"."Estimator" AS "Estimator" 
FROM "DT_Output_14"), 
"DT_node_lookup_15" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_12" <= 5.155000000000001) THEN CASE WHEN ("ADS"."Feature_5" <= 7.416000000000001) THEN 4 ELSE 5 END ELSE CASE WHEN ("ADS"."Feature_12" <= 15.06) THEN CASE WHEN ("ADS"."Feature_5" <= 6.61) THEN CASE WHEN ("ADS"."Feature_12" <= 9.63) THEN CASE WHEN ("ADS"."Feature_7" <= 4.4583) THEN 48 ELSE CASE WHEN ("ADS"."Feature_12" <= 7.550000000000001) THEN 98 ELSE 99 END END ELSE CASE WHEN ("ADS"."Feature_5" <= 5.851500000000001) THEN 50 ELSE CASE WHEN ("ADS"."Feature_6" <= 74.35000000000001) THEN CASE WHEN ("ADS"."Feature_10" <= 18.650000000000002) THEN 204 ELSE 205 END ELSE CASE WHEN ("ADS"."Feature_12" <= 12.700000000000001) THEN 206 ELSE 207 END END END END ELSE CASE WHEN ("ADS"."Feature_2" <= 4.44) THEN 26 ELSE 27 END END ELSE CASE WHEN ("ADS"."Feature_4" <= 0.6695000000000001) THEN CASE WHEN ("ADS"."Feature_10" <= 19.900000000000002) THEN 28 ELSE 29 END ELSE CASE WHEN ("ADS"."Feature_0" <= 9.870020000000002) THEN 30 ELSE 31 END END END END AS node_id_2 
FROM boston AS "ADS"), 
"DT_node_data_15" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values".threshold AS FLOAT) AS threshold, CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, 2 AS parent_id, 0.22664994047081566 AS "Estimator" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, 2 AS parent_id, 0.5859724743025644 AS "Estimator" UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 13 AS parent_id, 0.25887852919101717 AS "Estimator" UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 13 AS parent_id, 0.018858100425290028 AS "Estimator" UNION ALL SELECT 28 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 14 AS parent_id, -0.06646923637390137 AS "Estimator" UNION ALL SELECT 29 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 14 AS parent_id, -0.15823642476955713 AS "Estimator" UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 15 AS parent_id, -0.19513056217095792 AS "Estimator" UNION ALL SELECT 31 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS depth, 15 AS parent_id, -0.3281416945732557 AS "Estimator" UNION ALL SELECT 48 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS depth, 24 AS parent_id, 0.12246255686749584 AS "Estimator" UNION ALL SELECT 50 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS depth, 25 AS parent_id, -0.09591851468756796 AS "Estimator" UNION ALL SELECT 98 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS depth, 49 AS parent_id, 0.01564817268539358 AS "Estimator" UNION ALL SELECT 99 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS depth, 49 AS parent_id, -0.04485118548061861 AS "Estimator" UNION ALL SELECT 204 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS depth, 102 AS parent_id, 0.02428089998662472 AS "Estimator" UNION ALL SELECT 205 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS depth, 102 AS parent_id, -0.04228363035335428 AS "Estimator" UNION ALL SELECT 206 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS depth, 103 AS parent_id, -0.045083315223455434 AS "Estimator" UNION ALL SELECT 207 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS depth, 103 AS parent_id, -0.0925811946303362 AS "Estimator") AS "Values"), 
"DT_Output_15" AS 
(SELECT "DT_node_lookup_15"."KEY" AS "KEY", "DT_node_lookup_15".node_id_2 AS node_id_2, "DT_node_data_15".node_id AS node_id, "DT_node_data_15".feature AS feature, "DT_node_data_15".threshold AS threshold, "DT_node_data_15".depth AS depth, "DT_node_data_15".parent_id AS parent_id, "DT_node_data_15"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_15" LEFT OUTER JOIN "DT_node_data_15" ON "DT_node_lookup_15".node_id_2 = "DT_node_data_15".node_id), 
"LGBM_Model_15" AS 
(SELECT "DT_Output_15"."KEY" AS "KEY", "DT_Output_15"."Estimator" AS "Estimator" 
FROM "DT_Output_15")
 INSERT INTO "TMP_20180417023610_OE86D7_LGBM_B1" ("KEY", "Estimator") SELECT "LGBM_B1"."KEY", "LGBM_B1"."Estimator" 
FROM (SELECT "LGBM_esu_1"."KEY" AS "KEY", "LGBM_esu_1"."Estimator" AS "Estimator" 
FROM (SELECT "LGBM_Model_10"."KEY" AS "KEY", "LGBM_Model_10"."Estimator" AS "Estimator" 
FROM "LGBM_Model_10" UNION ALL SELECT "LGBM_Model_11"."KEY" AS "KEY", "LGBM_Model_11"."Estimator" AS "Estimator" 
FROM "LGBM_Model_11" UNION ALL SELECT "LGBM_Model_12"."KEY" AS "KEY", "LGBM_Model_12"."Estimator" AS "Estimator" 
FROM "LGBM_Model_12" UNION ALL SELECT "LGBM_Model_13"."KEY" AS "KEY", "LGBM_Model_13"."Estimator" AS "Estimator" 
FROM "LGBM_Model_13" UNION ALL SELECT "LGBM_Model_14"."KEY" AS "KEY", "LGBM_Model_14"."Estimator" AS "Estimator" 
FROM "LGBM_Model_14" UNION ALL SELECT "LGBM_Model_15"."KEY" AS "KEY", "LGBM_Model_15"."Estimator" AS "Estimator" 
FROM "LGBM_Model_15") AS "LGBM_esu_1") AS "LGBM_B1"

-- Code For temporary table TMP_20180417023610_6FOR66_LGBM_Union part 1/2. Create 


CREATE TEMPORARY TABLE "TMP_20180417023610_6FOR66_LGBM_Union" (
	"KEY" BIGINT, 
	"Estimator" FLOAT
)



-- Code For temporary table TMP_20180417023610_6FOR66_LGBM_Union part 2/2. Populate

INSERT INTO "TMP_20180417023610_6FOR66_LGBM_Union" ("KEY", "Estimator") SELECT "LGBM_Union"."KEY", "LGBM_Union"."Estimator" 
FROM (SELECT "LGBM_EnsembleUnion"."KEY" AS "KEY", "LGBM_EnsembleUnion"."Estimator" AS "Estimator" 
FROM (SELECT "LGBM_B0"."KEY" AS "KEY", "LGBM_B0"."Estimator" AS "Estimator" 
FROM "TMP_20180417023610_Y25HC1_LGBM_B0" AS "LGBM_B0" UNION ALL SELECT "LGBM_B1"."KEY" AS "KEY", "LGBM_B1"."Estimator" AS "Estimator" 
FROM "TMP_20180417023610_OE86D7_LGBM_B1" AS "LGBM_B1") AS "LGBM_EnsembleUnion") AS "LGBM_Union"

-- Code For temporary table TMP_20180417023610_RXUOEZ_LGBM_sum part 1/2. Create 


CREATE TEMPORARY TABLE "TMP_20180417023610_RXUOEZ_LGBM_sum" (
	"KEY" BIGINT NOT NULL, 
	"Estimator" FLOAT, 
	PRIMARY KEY ("KEY")
)



-- Code For temporary table TMP_20180417023610_RXUOEZ_LGBM_sum part 2/2. Populate

INSERT INTO "TMP_20180417023610_RXUOEZ_LGBM_sum" ("KEY", "Estimator") SELECT "LGBM_sum"."KEY", "LGBM_sum"."Estimator" 
FROM (SELECT "T"."KEY" AS "KEY", CAST("T"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT "LGBM_Union"."KEY" AS "KEY", sum("LGBM_Union"."Estimator") AS "Estimator" 
FROM "TMP_20180417023610_6FOR66_LGBM_Union" AS "LGBM_Union" GROUP BY "LGBM_Union"."KEY") AS "T") AS "LGBM_sum"

-- Model deployment code

SELECT "LGBM_sum"."KEY" AS "KEY", "LGBM_sum"."Estimator" AS "Estimator" 
FROM "TMP_20180417023610_RXUOEZ_LGBM_sum" AS "LGBM_sum"