-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2018

-- Model : LGBMRegressor_Pipeline
-- Dataset : diabetes
-- Database : teradata


-- This SQL code can contain one or more statements, to be executed in the order they appear in this file.



-- Code For temporary table tmp_20180417025009_ghnnbx_ads_ part 1/2. Create 


CREATE GLOBAL TEMPORARY TABLE tmp_20180417025009_ghnnbx_ads_  (
	"KEY" BIGINT, 
	impter_2 FLOAT, 
	impter_3 FLOAT, 
	impter_4 FLOAT, 
	impter_5 FLOAT, 
	impter_6 FLOAT, 
	impter_7 FLOAT, 
	impter_8 FLOAT, 
	impter_9 FLOAT, 
	impter_10 FLOAT, 
	impter_11 FLOAT
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table tmp_20180417025009_ghnnbx_ads_ part 2/2. Populate

INSERT INTO tmp_20180417025009_ghnnbx_ads_ ("KEY", impter_2, impter_3, impter_4, impter_5, impter_6, impter_7, impter_8, impter_9, impter_10, impter_11) SELECT "U"."KEY", "U".impter_2, "U".impter_3, "U".impter_4, "U".impter_5, "U".impter_6, "U".impter_7, "U".impter_8, "U".impter_9, "U".impter_10, "U".impter_11 
FROM (SELECT "ADS_imp_1_OUT"."KEY", "ADS_imp_1_OUT".impter_2, "ADS_imp_1_OUT".impter_3, "ADS_imp_1_OUT".impter_4, "ADS_imp_1_OUT".impter_5, "ADS_imp_1_OUT".impter_6, "ADS_imp_1_OUT".impter_7, "ADS_imp_1_OUT".impter_8, "ADS_imp_1_OUT".impter_9, "ADS_imp_1_OUT".impter_10, "ADS_imp_1_OUT".impter_11 
FROM (SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" IS NULL) THEN 0.0002686932066652995 ELSE "ADS"."Feature_0" END AS impter_2, CASE WHEN ("ADS"."Feature_1" IS NULL) THEN 0.0007239580580639441 ELSE "ADS"."Feature_1" END AS impter_3, CASE WHEN ("ADS"."Feature_2" IS NULL) THEN 0.0007280719825586765 ELSE "ADS"."Feature_2" END AS impter_4, CASE WHEN ("ADS"."Feature_3" IS NULL) THEN 0.001013565221084393 ELSE "ADS"."Feature_3" END AS impter_5, CASE WHEN ("ADS"."Feature_4" IS NULL) THEN 0.0009763580732882109 ELSE "ADS"."Feature_4" END AS impter_6, CASE WHEN ("ADS"."Feature_5" IS NULL) THEN 0.0017643808242337245 ELSE "ADS"."Feature_5" END AS impter_7, CASE WHEN ("ADS"."Feature_6" IS NULL) THEN -0.0016512815450565026 ELSE "ADS"."Feature_6" END AS impter_8, CASE WHEN ("ADS"."Feature_7" IS NULL) THEN 0.0013905501983388136 ELSE "ADS"."Feature_7" END AS impter_9, CASE WHEN ("ADS"."Feature_8" IS NULL) THEN 0.0012726482548090939 ELSE "ADS"."Feature_8" END AS impter_10, CASE WHEN ("ADS"."Feature_9" IS NULL) THEN 0.001034425005681627 ELSE "ADS"."Feature_9" END AS impter_11 
FROM diabetes AS "ADS") AS "ADS_imp_1_OUT") AS "U"

-- Code For temporary table tmp_20180417025009_iv3383_ads_ part 1/2. Create 


CREATE GLOBAL TEMPORARY TABLE tmp_20180417025009_iv3383_ads_  (
	"KEY" BIGINT, 
	scaler_2 FLOAT, 
	scaler_3 FLOAT, 
	scaler_4 FLOAT, 
	scaler_5 FLOAT, 
	scaler_6 FLOAT, 
	scaler_7 FLOAT, 
	scaler_8 FLOAT, 
	scaler_9 FLOAT, 
	scaler_10 FLOAT, 
	scaler_11 FLOAT
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table tmp_20180417025009_iv3383_ads_ part 2/2. Populate

INSERT INTO tmp_20180417025009_iv3383_ads_ ("KEY", scaler_2, scaler_3, scaler_4, scaler_5, scaler_6, scaler_7, scaler_8, scaler_9, scaler_10, scaler_11) SELECT "U"."KEY", "U".scaler_2, "U".scaler_3, "U".scaler_4, "U".scaler_5, "U".scaler_6, "U".scaler_7, "U".scaler_8, "U".scaler_9, "U".scaler_10, "U".scaler_11 
FROM (SELECT "ADS_sca_2_OUT"."KEY", "ADS_sca_2_OUT".scaler_2, "ADS_sca_2_OUT".scaler_3, "ADS_sca_2_OUT".scaler_4, "ADS_sca_2_OUT".scaler_5, "ADS_sca_2_OUT".scaler_6, "ADS_sca_2_OUT".scaler_7, "ADS_sca_2_OUT".scaler_8, "ADS_sca_2_OUT".scaler_9, "ADS_sca_2_OUT".scaler_10, "ADS_sca_2_OUT".scaler_11 
FROM (SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", (CAST("ADS_imp_1_OUT".impter_2 AS FLOAT) - 0.000268693206665) / 0.047242095836538 AS scaler_2, (CAST("ADS_imp_1_OUT".impter_3 AS FLOAT) - 0.000723958058064) / 0.047605576685039 AS scaler_3, (CAST("ADS_imp_1_OUT".impter_4 AS FLOAT) - 0.000728071982559) / 0.046935911439369 AS scaler_4, (CAST("ADS_imp_1_OUT".impter_5 AS FLOAT) - 0.001013565221084) / 0.048335271948972 AS scaler_5, (CAST("ADS_imp_1_OUT".impter_6 AS FLOAT) - 0.000976358073288) / 0.048050762009702 AS scaler_6, (CAST("ADS_imp_1_OUT".impter_7 AS FLOAT) - 0.001764380824234) / 0.048060808731544 AS scaler_7, (CAST("ADS_imp_1_OUT".impter_8 AS FLOAT) - -0.001651281545057) / 0.04620240378043 AS scaler_8, (CAST("ADS_imp_1_OUT".impter_9 AS FLOAT) - 0.001390550198339) / 0.047363093040532 AS scaler_9, (CAST("ADS_imp_1_OUT".impter_10 AS FLOAT) - 0.001272648254809) / 0.045892861313648 AS scaler_10, (CAST("ADS_imp_1_OUT".impter_11 AS FLOAT) - 0.001034425005682) / 0.047761585195706 AS scaler_11 
FROM tmp_20180417025009_ghnnbx_ads_ AS "ADS_imp_1_OUT") AS "ADS_sca_2_OUT") AS "U"

-- Code For temporary table tmp_20180417025009_sm78kk_lgbm part 1/2. Create 


CREATE GLOBAL TEMPORARY TABLE tmp_20180417025009_sm78kk_lgbm  (
	"KEY" BIGINT, 
	"Estimator" FLOAT
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table tmp_20180417025009_sm78kk_lgbm part 2/2. Populate

INSERT INTO tmp_20180417025009_sm78kk_lgbm ("KEY", "Estimator") SELECT "U"."KEY", "U"."Estimator" 
FROM (WITH "DT_node_lookup" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= -0.031410821697404) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 0.116346152951938) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= 0.49086401591424) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= -0.694657102176562) THEN 16 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= 0.223596660077523) THEN 34 ELSE 35 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= -0.738519311700026) THEN 18 ELSE 19 END END ELSE 5 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 1.207111665740102) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= 0.740202645565904) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= -0.503667928001334) THEN 24 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= 0.146704676631478) THEN 50 ELSE 51 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 0.26560880207032) THEN 26 ELSE 27 END END ELSE 7 END END AS node_id_2 
FROM tmp_20180417025009_iv3383_ads_ AS "ADS_sca_2_OUT"), 
"DT_node_data" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values"."threshold" AS FLOAT) AS "threshold", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS depth, 2 AS parent_id, 154.49102431345986 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS depth, 3 AS parent_id, 158.96734010293355 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 4 AS depth, 8 AS parent_id, 151.01528418182212 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 4 AS depth, 9 AS parent_id, 150.29365589272092 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 4 AS depth, 9 AS parent_id, 151.09140025234595 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 4 AS depth, 12 AS parent_id, 152.9949716817791 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 4 AS depth, 13 AS parent_id, 155.85330501552792 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 4 AS depth, 13 AS parent_id, 158.46997168219463 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 34 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 5 AS depth, 17 AS parent_id, 151.96747168219463 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 35 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 5 AS depth, 17 AS parent_id, 153.2774716821946 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 50 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 5 AS depth, 25 AS parent_id, 154.37291285831458 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 51 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 5 AS depth, 25 AS parent_id, 156.01602431314615 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte) AS "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".node_id AS node_id, "DT_node_data".feature AS feature, "DT_node_data"."threshold" AS "threshold", "DT_node_data".depth AS depth, "DT_node_data".parent_id AS parent_id, "DT_node_data"."Estimator" AS "Estimator" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".node_id), 
"LGBM_Model_0" AS 
(SELECT "DT_Output"."KEY" AS "KEY", "DT_Output"."Estimator" AS "Estimator" 
FROM "DT_Output"), 
"DT_node_lookup_1" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= -0.031410821697404) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 0.116346152951938) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= 0.49086401591424) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= -0.694657102176562) THEN 16 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= 0.223596660077523) THEN 34 ELSE 35 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= -0.738519311700026) THEN 18 ELSE 19 END END ELSE 5 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 0.897104625263466) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= 0.740202645565904) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= -0.503667928001334) THEN 24 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= 0.146704676631478) THEN 50 ELSE 51 END END ELSE 13 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 1.517118706216737) THEN 14 ELSE 15 END END END AS node_id_2 
FROM tmp_20180417025009_iv3383_ads_ AS "ADS_sca_2_OUT"), 
"DT_node_data_1" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values"."threshold" AS FLOAT) AS "threshold", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS depth, 2 AS parent_id, 0.396501374479972 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 3 AS depth, 6 AS parent_id, 2.64865423573388 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 3 AS depth, 7 AS parent_id, 3.03571115732193 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 3 AS depth, 7 AS parent_id, 5.617542032762008 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 4 AS depth, 8 AS parent_id, -2.905451660044492 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 4 AS depth, 9 AS parent_id, -3.590998561131327 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 4 AS depth, 9 AS parent_id, -2.833141436321395 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 4 AS depth, 12 AS parent_id, -1.024748606635974 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 34 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 5 AS depth, 17 AS parent_id, -2.00087351679802 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 35 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 5 AS depth, 17 AS parent_id, -0.756373634338379 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 50 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 5 AS depth, 25 AS parent_id, -0.088288464716503 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 51 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 5 AS depth, 25 AS parent_id, 1.874956390769644 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte) AS "Values"), 
"DT_Output_1" AS 
(SELECT "DT_node_lookup_1"."KEY" AS "KEY", "DT_node_lookup_1".node_id_2 AS node_id_2, "DT_node_data_1".node_id AS node_id, "DT_node_data_1".feature AS feature, "DT_node_data_1"."threshold" AS "threshold", "DT_node_data_1".depth AS depth, "DT_node_data_1".parent_id AS parent_id, "DT_node_data_1"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_1" LEFT OUTER JOIN "DT_node_data_1" ON "DT_node_lookup_1".node_id_2 = "DT_node_data_1".node_id), 
"LGBM_Model_1" AS 
(SELECT "DT_Output_1"."KEY" AS "KEY", "DT_Output_1"."Estimator" AS "Estimator" 
FROM "DT_Output_1"), 
"DT_node_lookup_2" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= -0.031410821697404) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 0.116346152951938) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= 0.49086401591424) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= -0.694657102176562) THEN 16 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= 0.223596660077523) THEN 34 ELSE 35 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= -0.738519311700026) THEN 18 ELSE 19 END END ELSE 5 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 1.207111665740102) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= 0.740202645565904) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= -0.457740959041832) THEN 24 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= 0.992220714860145) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= 0.0) THEN 100 ELSE 101 END ELSE 51 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 0.26560880207032) THEN 26 ELSE 27 END END ELSE 7 END END AS node_id_2 
FROM tmp_20180417025009_iv3383_ads_ AS "ADS_sca_2_OUT"), 
"DT_node_data_2" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values"."threshold" AS FLOAT) AS "threshold", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS depth, 2 AS parent_id, 0.376676295766313 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS depth, 3 AS parent_id, 4.42247857671035 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 4 AS depth, 8 AS parent_id, -2.760179137066007 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 4 AS depth, 9 AS parent_id, -3.411448698922208 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 4 AS depth, 9 AS parent_id, -2.69148428099496 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 4 AS depth, 12 AS parent_id, -0.940956975354089 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 4 AS depth, 13 AS parent_id, 1.558235335350037 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 4 AS depth, 13 AS parent_id, 4.039230431318283 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 34 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 5 AS depth, 17 AS parent_id, -1.900829924345016 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 35 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 5 AS depth, 17 AS parent_id, -0.718554854393005 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 51 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 5 AS depth, 25 AS parent_id, -0.263845673799515 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 100 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 6 AS depth, 50 AS parent_id, 0.327823332764886 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 101 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 6 AS depth, 50 AS parent_id, 2.527766750598776 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte) AS "Values"), 
"DT_Output_2" AS 
(SELECT "DT_node_lookup_2"."KEY" AS "KEY", "DT_node_lookup_2".node_id_2 AS node_id_2, "DT_node_data_2".node_id AS node_id, "DT_node_data_2".feature AS feature, "DT_node_data_2"."threshold" AS "threshold", "DT_node_data_2".depth AS depth, "DT_node_data_2".parent_id AS parent_id, "DT_node_data_2"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_2" LEFT OUTER JOIN "DT_node_data_2" ON "DT_node_lookup_2".node_id_2 = "DT_node_data_2".node_id), 
"LGBM_Model_2" AS 
(SELECT "DT_Output_2"."KEY" AS "KEY", "DT_Output_2"."Estimator" AS "Estimator" 
FROM "DT_Output_2"), 
"DT_node_lookup_3" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= -0.031410821697404) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 0.116346152951938) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= 0.49086401591424) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= -0.694657102176562) THEN 16 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= 0.223596660077523) THEN 34 ELSE 35 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= -0.738519311700026) THEN 18 ELSE 19 END END ELSE 5 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 0.965995078702718) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= 0.960080475681326) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= 0.992220714860145) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= -0.237755240598749) THEN 48 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= -0.182179145284822) THEN 98 ELSE 99 END END ELSE 25 END ELSE 13 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= 0.427883990249215) THEN 14 ELSE 15 END END END AS node_id_2 
FROM tmp_20180417025009_iv3383_ads_ AS "ADS_sca_2_OUT"), 
"DT_node_data_3" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values"."threshold" AS FLOAT) AS "threshold", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS depth, 2 AS parent_id, 0.35784255599505 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 3 AS depth, 6 AS parent_id, 2.480402669661186 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 3 AS depth, 7 AS parent_id, 5.046654764811198 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 3 AS depth, 7 AS parent_id, 2.358886999885242 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 4 AS depth, 8 AS parent_id, -2.622170231118798 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 4 AS depth, 9 AS parent_id, -3.240876183854906 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 4 AS depth, 9 AS parent_id, -2.556910140173776 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 4 AS depth, 12 AS parent_id, -1.27821187376976 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 34 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 5 AS depth, 17 AS parent_id, -1.805788359642029 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 35 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 5 AS depth, 17 AS parent_id, -0.682627180814743 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 48 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 5 AS depth, 24 AS parent_id, -0.667316867113114 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 98 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 6 AS depth, 49 AS parent_id, 0.400243139714003 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 99 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 6 AS depth, 49 AS parent_id, 2.141424208134413 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte) AS "Values"), 
"DT_Output_3" AS 
(SELECT "DT_node_lookup_3"."KEY" AS "KEY", "DT_node_lookup_3".node_id_2 AS node_id_2, "DT_node_data_3".node_id AS node_id, "DT_node_data_3".feature AS feature, "DT_node_data_3"."threshold" AS "threshold", "DT_node_data_3".depth AS depth, "DT_node_data_3".parent_id AS parent_id, "DT_node_data_3"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_3" LEFT OUTER JOIN "DT_node_data_3" ON "DT_node_lookup_3".node_id_2 = "DT_node_data_3".node_id), 
"LGBM_Model_3" AS 
(SELECT "DT_Output_3"."KEY" AS "KEY", "DT_Output_3"."Estimator" AS "Estimator" 
FROM "DT_Output_3"), 
"DT_node_lookup_4" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= -0.031410821697404) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 0.116346152951938) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= 0.49086401591424) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= -0.694657102176562) THEN 16 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= 0.223596660077523) THEN 34 ELSE 35 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= -0.233456709387748) THEN 18 ELSE 19 END END ELSE 5 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 1.471191737257236) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= 0.740202645565904) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= -0.457740959041832) THEN 24 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= 0.606212696594401) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= -0.08758452941678) THEN 100 ELSE 101 END ELSE 51 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= 0.960080475681326) THEN 26 ELSE 27 END END ELSE 7 END END AS node_id_2 
FROM tmp_20180417025009_iv3383_ads_ AS "ADS_sca_2_OUT"), 
"DT_node_data_4" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values"."threshold" AS FLOAT) AS "threshold", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS depth, 2 AS parent_id, 0.339950410943282 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS depth, 3 AS parent_id, 4.782801995674769 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 4 AS depth, 8 AS parent_id, -2.49106170590967 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 4 AS depth, 9 AS parent_id, -2.516725219262613 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 4 AS depth, 9 AS parent_id, -3.16864162560167 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 4 AS depth, 12 AS parent_id, -0.893376896778742 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 4 AS depth, 13 AS parent_id, 1.518445686002572 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 4 AS depth, 13 AS parent_id, 3.804120327646916 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 34 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 5 AS depth, 17 AS parent_id, -1.715498966574669 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 35 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 5 AS depth, 17 AS parent_id, -0.648495850563049 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 51 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 5 AS depth, 25 AS parent_id, 2.291787776080045 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 100 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 6 AS depth, 50 AS parent_id, 1.3108158826828 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 101 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 6 AS depth, 50 AS parent_id, -0.471928158512822 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte) AS "Values"), 
"DT_Output_4" AS 
(SELECT "DT_node_lookup_4"."KEY" AS "KEY", "DT_node_lookup_4".node_id_2 AS node_id_2, "DT_node_data_4".node_id AS node_id, "DT_node_data_4".feature AS feature, "DT_node_data_4"."threshold" AS "threshold", "DT_node_data_4".depth AS depth, "DT_node_data_4".parent_id AS parent_id, "DT_node_data_4"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_4" LEFT OUTER JOIN "DT_node_data_4" ON "DT_node_lookup_4".node_id_2 = "DT_node_data_4".node_id), 
"LGBM_Model_4" AS 
(SELECT "DT_Output_4"."KEY" AS "KEY", "DT_Output_4"."Estimator" AS "Estimator" 
FROM "DT_Output_4"), 
"DT_node_lookup_5" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= -0.050695657045781) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 0.116346152951938) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= 0.49086401591424) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= -0.694657102176562) THEN 16 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= 0.223596660077523) THEN 34 ELSE 35 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= -0.738519311700026) THEN 18 ELSE 19 END END ELSE 5 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 0.897104625263466) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= 0.740202645565904) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= -0.457740959041832) THEN 24 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= 0.146704676631478) THEN 50 ELSE 51 END END ELSE 13 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= 0.427883990249215) THEN 14 ELSE 15 END END END AS node_id_2 
FROM tmp_20180417025009_iv3383_ads_ AS "ADS_sca_2_OUT"), 
"DT_node_data_5" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values"."threshold" AS FLOAT) AS "threshold", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS depth, 2 AS parent_id, 0.222170525869808 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 3 AS depth, 6 AS parent_id, 2.185590327779452 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 3 AS depth, 7 AS parent_id, 4.359449644088746 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 3 AS depth, 7 AS parent_id, 2.167074584960938 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 4 AS depth, 8 AS parent_id, -2.50848767220974 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 4 AS depth, 9 AS parent_id, -2.941844959321775 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 4 AS depth, 9 AS parent_id, -2.245437099315502 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 4 AS depth, 12 AS parent_id, -0.806508947574887 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 34 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 5 AS depth, 17 AS parent_id, -1.629723996222019 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 35 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 5 AS depth, 17 AS parent_id, -0.616071014404297 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 50 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 5 AS depth, 25 AS parent_id, -0.184419721364975 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 51 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 5 AS depth, 25 AS parent_id, 1.493273821382812 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte) AS "Values"), 
"DT_Output_5" AS 
(SELECT "DT_node_lookup_5"."KEY" AS "KEY", "DT_node_lookup_5".node_id_2 AS node_id_2, "DT_node_data_5".node_id AS node_id, "DT_node_data_5".feature AS feature, "DT_node_data_5"."threshold" AS "threshold", "DT_node_data_5".depth AS depth, "DT_node_data_5".parent_id AS parent_id, "DT_node_data_5"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_5" LEFT OUTER JOIN "DT_node_data_5" ON "DT_node_lookup_5".node_id_2 = "DT_node_data_5".node_id), 
"LGBM_Model_5" AS 
(SELECT "DT_Output_5"."KEY" AS "KEY", "DT_Output_5"."Estimator" AS "Estimator" 
FROM "DT_Output_5"), 
"DT_node_lookup_6" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= -0.050695657045781) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 0.116346152951938) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= -0.970769760780918) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= -0.72590336973601) THEN 16 ELSE 17 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= -0.268874154688942) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= -0.868106408679358) THEN 36 ELSE 37 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= -0.506082515341278) THEN 38 ELSE 39 END END END ELSE 5 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 1.471191737257236) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= 0.740202645565904) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= 0.606212696594401) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= -0.08758452941678) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= 0.0) THEN 96 ELSE 97 END ELSE 49 END ELSE 25 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= 0.960080475681326) THEN 26 ELSE 27 END END ELSE 7 END END AS node_id_2 
FROM tmp_20180417025009_iv3383_ads_ AS "ADS_sca_2_OUT"), 
"DT_node_data_6" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values"."threshold" AS FLOAT) AS "threshold", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS depth, 2 AS parent_id, 0.211062013136374 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS depth, 3 AS parent_id, 4.354251197099686 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 4 AS depth, 8 AS parent_id, -2.343231020442077 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 4 AS depth, 8 AS parent_id, -3.119248698949814 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 4 AS depth, 12 AS parent_id, 1.666638607890518 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 4 AS depth, 13 AS parent_id, 1.319695770911252 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 4 AS depth, 13 AS parent_id, 3.479694216067974 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 36 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 5 AS depth, 18 AS parent_id, -1.620442118644714 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 37 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 5 AS depth, 18 AS parent_id, -2.750308445325265 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 38 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 5 AS depth, 19 AS parent_id, -0.39959341826893 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 39 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 5 AS depth, 19 AS parent_id, -1.88271510720253 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 49 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 5 AS depth, 24 AS parent_id, -0.954588280226055 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 96 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 6 AS depth, 48 AS parent_id, 1.387149403350694 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 97 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 6 AS depth, 48 AS parent_id, 0.064636168628931 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte) AS "Values"), 
"DT_Output_6" AS 
(SELECT "DT_node_lookup_6"."KEY" AS "KEY", "DT_node_lookup_6".node_id_2 AS node_id_2, "DT_node_data_6".node_id AS node_id, "DT_node_data_6".feature AS feature, "DT_node_data_6"."threshold" AS "threshold", "DT_node_data_6".depth AS depth, "DT_node_data_6".parent_id AS parent_id, "DT_node_data_6"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_6" LEFT OUTER JOIN "DT_node_data_6" ON "DT_node_lookup_6".node_id_2 = "DT_node_data_6".node_id), 
"LGBM_Model_6" AS 
(SELECT "DT_Output_6"."KEY" AS "KEY", "DT_Output_6"."Estimator" AS "Estimator" 
FROM "DT_Output_6"), 
"DT_node_lookup_7" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= -0.25460048743137) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 0.116346152951938) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= 0.49086401591424) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= -0.694657102176562) THEN 16 ELSE 17 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= 0.069812693185432) THEN 18 ELSE 19 END END ELSE 5 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 1.471191737257236) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= 0.740202645565904) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= 0.606212696594401) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= 0.0) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= 0.0) THEN 96 ELSE 97 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= 0.408336974496398) THEN 98 ELSE 99 END END ELSE 25 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= 0.960080475681326) THEN 26 ELSE 27 END END ELSE 7 END END AS node_id_2 
FROM tmp_20180417025009_iv3383_ads_ AS "ADS_sca_2_OUT"), 
"DT_node_data_7" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values"."threshold" AS FLOAT) AS "threshold", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS depth, 2 AS parent_id, 0.214613598585129 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS depth, 3 AS parent_id, 4.136538574695588 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 4 AS depth, 8 AS parent_id, -2.412517344068598 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 4 AS depth, 8 AS parent_id, -1.08827045688758 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 4 AS depth, 9 AS parent_id, -2.816568328274621 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 4 AS depth, 9 AS parent_id, -2.214027694702148 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 4 AS depth, 12 AS parent_id, 1.583306659592522 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 4 AS depth, 13 AS parent_id, 1.077222874871007 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 4 AS depth, 13 AS parent_id, 3.305709486741286 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 96 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 6 AS depth, 48 AS parent_id, 1.15195819095329 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 97 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 6 AS depth, 48 AS parent_id, -0.366312912851572 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 98 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 6 AS depth, 49 AS parent_id, -1.449330560564995 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 99 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 6 AS depth, 49 AS parent_id, 0.038126456737518 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte) AS "Values"), 
"DT_Output_7" AS 
(SELECT "DT_node_lookup_7"."KEY" AS "KEY", "DT_node_lookup_7".node_id_2 AS node_id_2, "DT_node_data_7".node_id AS node_id, "DT_node_data_7".feature AS feature, "DT_node_data_7"."threshold" AS "threshold", "DT_node_data_7".depth AS depth, "DT_node_data_7".parent_id AS parent_id, "DT_node_data_7"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_7" LEFT OUTER JOIN "DT_node_data_7" ON "DT_node_lookup_7".node_id_2 = "DT_node_data_7".node_id), 
"LGBM_Model_7" AS 
(SELECT "DT_Output_7"."KEY" AS "KEY", "DT_Output_7"."Estimator" AS "Estimator" 
FROM "DT_Output_7"), 
"DT_node_lookup_8" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= -0.031410821697404) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 0.116346152951938) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= 0.49086401591424) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= 0.092439096121813) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= -0.779229741758343) THEN 32 ELSE 33 END ELSE 17 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= -0.233456709387748) THEN 18 ELSE 19 END END ELSE 5 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 1.471191737257236) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= 0.740202645565904) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= -0.503667928001334) THEN 24 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= 1.020856116270082) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= 0.0) THEN 100 ELSE 101 END ELSE 51 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 0.26560880207032) THEN 26 ELSE 27 END END ELSE 7 END END AS node_id_2 
FROM tmp_20180417025009_iv3383_ads_ AS "ADS_sca_2_OUT"), 
"DT_node_data_8" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values"."threshold" AS FLOAT) AS "threshold", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS depth, 2 AS parent_id, 0.278166596513045 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS depth, 3 AS parent_id, 3.946824394663176 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 4 AS depth, 8 AS parent_id, -0.74587622170647 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 4 AS depth, 9 AS parent_id, -2.023190445432792 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 4 AS depth, 9 AS parent_id, -2.664577794075012 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 4 AS depth, 12 AS parent_id, -0.857284525724558 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 4 AS depth, 13 AS parent_id, 1.020382727327801 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 4 AS depth, 13 AS parent_id, 3.069633894953234 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 32 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 5 AS depth, 16 AS parent_id, -1.511051419377327 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 33 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 5 AS depth, 16 AS parent_id, -2.290786595778032 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 51 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 5 AS depth, 25 AS parent_id, -0.40241824558803 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 100 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 6 AS depth, 50 AS parent_id, 2.447789607048035 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 101 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 6 AS depth, 50 AS parent_id, 0.588007586449385 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte) AS "Values"), 
"DT_Output_8" AS 
(SELECT "DT_node_lookup_8"."KEY" AS "KEY", "DT_node_lookup_8".node_id_2 AS node_id_2, "DT_node_data_8".node_id AS node_id, "DT_node_data_8".feature AS feature, "DT_node_data_8"."threshold" AS "threshold", "DT_node_data_8".depth AS depth, "DT_node_data_8".parent_id AS parent_id, "DT_node_data_8"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_8" LEFT OUTER JOIN "DT_node_data_8" ON "DT_node_lookup_8".node_id_2 = "DT_node_data_8".node_id), 
"LGBM_Model_8" AS 
(SELECT "DT_Output_8"."KEY" AS "KEY", "DT_Output_8"."Estimator" AS "Estimator" 
FROM "DT_Output_8"), 
"DT_node_lookup_9" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= -0.25460048743137) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 0.116346152951938) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= 0.49086401591424) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= -0.694657102176562) THEN 16 ELSE 17 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= 0.069812693185432) THEN 18 ELSE 19 END END ELSE 5 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 1.471191737257236) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= 0.740202645565904) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= 0.606212696594401) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= 0.0) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= 0.0) THEN 96 ELSE 97 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= 0.408336974496398) THEN 98 ELSE 99 END END ELSE 25 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= 0.960080475681326) THEN 26 ELSE 27 END END ELSE 7 END END AS node_id_2 
FROM tmp_20180417025009_iv3383_ads_ AS "ADS_sca_2_OUT"), 
"DT_node_data_9" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values"."threshold" AS FLOAT) AS "threshold", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS depth, 2 AS parent_id, 0.189974617958069 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS depth, 3 AS parent_id, 3.739707843780518 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 4 AS depth, 8 AS parent_id, -2.226149979564879 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 4 AS depth, 8 AS parent_id, -0.959062885593724 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 4 AS depth, 9 AS parent_id, -2.562999838590622 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 4 AS depth, 9 AS parent_id, -1.984207925796509 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 4 AS depth, 12 AS parent_id, 1.483741909486276 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 4 AS depth, 13 AS parent_id, 0.948723781550372 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 4 AS depth, 13 AS parent_id, 3.014528377239521 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 96 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 6 AS depth, 48 AS parent_id, 1.069726701577504 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 97 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 6 AS depth, 48 AS parent_id, -0.341378461476415 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 98 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 6 AS depth, 49 AS parent_id, -1.373930842280388 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 99 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 6 AS depth, 49 AS parent_id, 0.031372507810593 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte) AS "Values"), 
"DT_Output_9" AS 
(SELECT "DT_node_lookup_9"."KEY" AS "KEY", "DT_node_lookup_9".node_id_2 AS node_id_2, "DT_node_data_9".node_id AS node_id, "DT_node_data_9".feature AS feature, "DT_node_data_9"."threshold" AS "threshold", "DT_node_data_9".depth AS depth, "DT_node_data_9".parent_id AS parent_id, "DT_node_data_9"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_9" LEFT OUTER JOIN "DT_node_data_9" ON "DT_node_lookup_9".node_id_2 = "DT_node_data_9".node_id), 
"LGBM_Model_9" AS 
(SELECT "DT_Output_9"."KEY" AS "KEY", "DT_Output_9"."Estimator" AS "Estimator" 
FROM "DT_Output_9")
 SELECT "LGBM_B0"."KEY", "LGBM_B0"."Estimator" 
FROM (SELECT "LGBM_esu_0"."KEY" AS "KEY", "LGBM_esu_0"."Estimator" AS "Estimator" 
FROM (SELECT "LGBM_Model_0"."KEY" AS "KEY", "LGBM_Model_0"."Estimator" AS "Estimator" 
FROM "LGBM_Model_0" UNION ALL SELECT "LGBM_Model_1"."KEY" AS "KEY", "LGBM_Model_1"."Estimator" AS "Estimator" 
FROM "LGBM_Model_1" UNION ALL SELECT "LGBM_Model_2"."KEY" AS "KEY", "LGBM_Model_2"."Estimator" AS "Estimator" 
FROM "LGBM_Model_2" UNION ALL SELECT "LGBM_Model_3"."KEY" AS "KEY", "LGBM_Model_3"."Estimator" AS "Estimator" 
FROM "LGBM_Model_3" UNION ALL SELECT "LGBM_Model_4"."KEY" AS "KEY", "LGBM_Model_4"."Estimator" AS "Estimator" 
FROM "LGBM_Model_4" UNION ALL SELECT "LGBM_Model_5"."KEY" AS "KEY", "LGBM_Model_5"."Estimator" AS "Estimator" 
FROM "LGBM_Model_5" UNION ALL SELECT "LGBM_Model_6"."KEY" AS "KEY", "LGBM_Model_6"."Estimator" AS "Estimator" 
FROM "LGBM_Model_6" UNION ALL SELECT "LGBM_Model_7"."KEY" AS "KEY", "LGBM_Model_7"."Estimator" AS "Estimator" 
FROM "LGBM_Model_7" UNION ALL SELECT "LGBM_Model_8"."KEY" AS "KEY", "LGBM_Model_8"."Estimator" AS "Estimator" 
FROM "LGBM_Model_8" UNION ALL SELECT "LGBM_Model_9"."KEY" AS "KEY", "LGBM_Model_9"."Estimator" AS "Estimator" 
FROM "LGBM_Model_9") AS "LGBM_esu_0") AS "LGBM_B0") AS "U"

-- Code For temporary table tmp_20180417025009_3hbnks_lgbm part 1/2. Create 


CREATE GLOBAL TEMPORARY TABLE tmp_20180417025009_3hbnks_lgbm  (
	"KEY" BIGINT, 
	"Estimator" FLOAT
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table tmp_20180417025009_3hbnks_lgbm part 2/2. Populate

INSERT INTO tmp_20180417025009_3hbnks_lgbm ("KEY", "Estimator") SELECT "U"."KEY", "U"."Estimator" 
FROM (WITH "DT_node_lookup_10" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= -0.031410821697404) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 0.552652358067204) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= -0.970769760780918) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= -0.775999124721066) THEN 16 ELSE 17 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= 0.0) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= -0.825156710717845) THEN 36 ELSE 37 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= 0.454272610415658) THEN 38 ELSE 39 END END END ELSE 5 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 0.965995078702718) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= 0.960080475681326) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= 0.992220714860145) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= -0.237755240598749) THEN 48 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= -0.182179145284822) THEN 98 ELSE 99 END END ELSE 25 END ELSE 13 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= 0.427883990249215) THEN 14 ELSE 15 END END END AS node_id_2 
FROM tmp_20180417025009_iv3383_ads_ AS "ADS_sca_2_OUT"), 
"DT_node_data_10" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values"."threshold" AS FLOAT) AS "threshold", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS depth, 2 AS parent_id, 0.602842346827189 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 3 AS depth, 6 AS parent_id, 1.854661523594576 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 3 AS depth, 7 AS parent_id, 3.780128524921559 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 3 AS depth, 7 AS parent_id, 1.484812311828136 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 4 AS depth, 8 AS parent_id, -1.438541260957718 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 4 AS depth, 8 AS parent_id, -2.680873932208746 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 4 AS depth, 12 AS parent_id, -1.395097239017486 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 36 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 5 AS depth, 18 AS parent_id, -1.793566081523896 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 37 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 5 AS depth, 18 AS parent_id, -0.315170036981235 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 38 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 5 AS depth, 19 AS parent_id, -2.576801794483548 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 39 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 5 AS depth, 19 AS parent_id, -1.19804919719696 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 48 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 5 AS depth, 24 AS parent_id, -0.732445460557938 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 98 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 6 AS depth, 49 AS parent_id, 0.352154163867235 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 99 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 6 AS depth, 49 AS parent_id, 1.748685014341027 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte) AS "Values"), 
"DT_Output_10" AS 
(SELECT "DT_node_lookup_10"."KEY" AS "KEY", "DT_node_lookup_10".node_id_2 AS node_id_2, "DT_node_data_10".node_id AS node_id, "DT_node_data_10".feature AS feature, "DT_node_data_10"."threshold" AS "threshold", "DT_node_data_10".depth AS depth, "DT_node_data_10".parent_id AS parent_id, "DT_node_data_10"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_10" LEFT OUTER JOIN "DT_node_data_10" ON "DT_node_lookup_10".node_id_2 = "DT_node_data_10".node_id), 
"LGBM_Model_10" AS 
(SELECT "DT_Output_10"."KEY" AS "KEY", "DT_Output_10"."Estimator" AS "Estimator" 
FROM "DT_Output_10"), 
"DT_node_lookup_11" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= -0.25460048743137) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 0.116346152951938) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= 0.49086401591424) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= -0.694657102176562) THEN 16 ELSE 17 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= -0.584040123680461) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= -0.521207795673767) THEN 36 ELSE 37 END ELSE 19 END END ELSE 5 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 1.471191737257236) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= 0.740202645565904) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= 0.606212696594401) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= 0.0) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= 0.0) THEN 96 ELSE 97 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= 0.408336974496398) THEN 98 ELSE 99 END END ELSE 25 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= 0.960080475681326) THEN 26 ELSE 27 END END ELSE 7 END END AS node_id_2 
FROM tmp_20180417025009_iv3383_ads_ AS "ADS_sca_2_OUT"), 
"DT_node_data_11" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values"."threshold" AS FLOAT) AS "threshold", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS depth, 2 AS parent_id, 0.181552976369858 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS depth, 3 AS parent_id, 3.415976930618286 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 4 AS depth, 8 AS parent_id, -2.029141689229894 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 4 AS depth, 8 AS parent_id, -0.834468117517394 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 4 AS depth, 9 AS parent_id, -2.532336900347756 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 4 AS depth, 12 AS parent_id, 1.364739485360958 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 4 AS depth, 13 AS parent_id, 0.866284413470162 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 4 AS depth, 13 AS parent_id, 2.751697019430308 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 36 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 5 AS depth, 18 AS parent_id, -1.630242299437523 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 37 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 5 AS depth, 18 AS parent_id, -2.180033823251724 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 96 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 6 AS depth, 48 AS parent_id, 1.01649345225758 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 97 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 6 AS depth, 48 AS parent_id, -0.369655662231768 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 98 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 6 AS depth, 49 AS parent_id, -1.322283338904381 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 99 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 6 AS depth, 49 AS parent_id, -0.003603173494339 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte) AS "Values"), 
"DT_Output_11" AS 
(SELECT "DT_node_lookup_11"."KEY" AS "KEY", "DT_node_lookup_11".node_id_2 AS node_id_2, "DT_node_data_11".node_id AS node_id, "DT_node_data_11".feature AS feature, "DT_node_data_11"."threshold" AS "threshold", "DT_node_data_11".depth AS depth, "DT_node_data_11".parent_id AS parent_id, "DT_node_data_11"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_11" LEFT OUTER JOIN "DT_node_data_11" ON "DT_node_lookup_11".node_id_2 = "DT_node_data_11".node_id), 
"LGBM_Model_11" AS 
(SELECT "DT_Output_11"."KEY" AS "KEY", "DT_Output_11"."Estimator" AS "Estimator" 
FROM "DT_Output_11"), 
"DT_node_lookup_12" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= -0.031410821697404) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 0.552652358067204) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= -0.970769760780918) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= -0.775999124721066) THEN 16 ELSE 17 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= 0.0) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= -0.825156710717845) THEN 36 ELSE 37 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= 0.454272610415658) THEN 38 ELSE 39 END END END ELSE 5 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= 1.203190823907201) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= -0.457740959041832) THEN 12 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= -0.943465695338498) THEN 26 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= 1.020856116270082) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= 0.0) THEN 108 ELSE 109 END ELSE 55 END END END ELSE 7 END END AS node_id_2 
FROM tmp_20180417025009_iv3383_ads_ AS "ADS_sca_2_OUT"), 
"DT_node_data_12" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values"."threshold" AS FLOAT) AS "threshold", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS depth, 2 AS parent_id, 0.558842258100156 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS depth, 3 AS parent_id, 2.777959238541754 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 3 AS depth, 6 AS parent_id, -0.599175365219514 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 4 AS depth, 8 AS parent_id, -1.284961346387863 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 4 AS depth, 8 AS parent_id, -2.458157257879934 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 4 AS depth, 13 AS parent_id, 2.150735145735164 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 36 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 5 AS depth, 18 AS parent_id, -1.617115700244904 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 37 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 5 AS depth, 18 AS parent_id, -0.248041115983112 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 38 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 5 AS depth, 19 AS parent_id, -2.37897177650815 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 39 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 5 AS depth, 19 AS parent_id, -1.089806678295136 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 55 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 5 AS depth, 27 AS parent_id, -0.27511573989804 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 108 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 6 AS depth, 54 AS parent_id, 0.265464137948078 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 109 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 6 AS depth, 54 AS parent_id, 1.616382519952182 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte) AS "Values"), 
"DT_Output_12" AS 
(SELECT "DT_node_lookup_12"."KEY" AS "KEY", "DT_node_lookup_12".node_id_2 AS node_id_2, "DT_node_data_12".node_id AS node_id, "DT_node_data_12".feature AS feature, "DT_node_data_12"."threshold" AS "threshold", "DT_node_data_12".depth AS depth, "DT_node_data_12".parent_id AS parent_id, "DT_node_data_12"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_12" LEFT OUTER JOIN "DT_node_data_12" ON "DT_node_lookup_12".node_id_2 = "DT_node_data_12".node_id), 
"LGBM_Model_12" AS 
(SELECT "DT_Output_12"."KEY" AS "KEY", "DT_Output_12"."Estimator" AS "Estimator" 
FROM "DT_Output_12"), 
"DT_node_lookup_13" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= -0.25460048743137) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 0.116346152951938) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= 0.49086401591424) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= -0.694657102176562) THEN 16 ELSE 17 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= -0.584040123680461) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= -0.521207795673767) THEN 36 ELSE 37 END ELSE 19 END END ELSE 5 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 1.517118706216737) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= 0.740202645565904) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= 0.606212696594401) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= 0.0) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= 0.0) THEN 96 ELSE 97 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= 0.408336974496398) THEN 98 ELSE 99 END END ELSE 25 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= 0.960080475681326) THEN 26 ELSE 27 END END ELSE 7 END END AS node_id_2 
FROM tmp_20180417025009_iv3383_ads_ AS "ADS_sca_2_OUT"), 
"DT_node_data_13" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values"."threshold" AS FLOAT) AS "threshold", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS depth, 2 AS parent_id, 0.172888450324535 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS depth, 3 AS parent_id, 3.264838948457138 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 4 AS depth, 8 AS parent_id, -1.850015442790809 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 4 AS depth, 8 AS parent_id, -0.723168396305394 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 4 AS depth, 9 AS parent_id, -2.339770588420686 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 4 AS depth, 12 AS parent_id, 1.250437416029828 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 4 AS depth, 13 AS parent_id, 0.749928354775464 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 4 AS depth, 13 AS parent_id, 2.520111906969989 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 36 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 5 AS depth, 18 AS parent_id, -1.463226389884949 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 37 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 5 AS depth, 18 AS parent_id, -1.980981767177582 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 96 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 6 AS depth, 48 AS parent_id, 0.95668814447191 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 97 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 6 AS depth, 48 AS parent_id, -0.37359617104133 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 98 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 6 AS depth, 49 AS parent_id, -1.273181482553482 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 99 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 6 AS depth, 49 AS parent_id, -0.030035514831543 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte) AS "Values"), 
"DT_Output_13" AS 
(SELECT "DT_node_lookup_13"."KEY" AS "KEY", "DT_node_lookup_13".node_id_2 AS node_id_2, "DT_node_data_13".node_id AS node_id, "DT_node_data_13".feature AS feature, "DT_node_data_13"."threshold" AS "threshold", "DT_node_data_13".depth AS depth, "DT_node_data_13".parent_id AS parent_id, "DT_node_data_13"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_13" LEFT OUTER JOIN "DT_node_data_13" ON "DT_node_lookup_13".node_id_2 = "DT_node_data_13".node_id), 
"LGBM_Model_13" AS 
(SELECT "DT_Output_13"."KEY" AS "KEY", "DT_Output_13"."Estimator" AS "Estimator" 
FROM "DT_Output_13"), 
"DT_node_lookup_14" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= -0.031410821697404) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 0.552652358067204) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= -0.970769760780918) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= -0.775999124721066) THEN 16 ELSE 17 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= 0.0) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= 1.128343887582125) THEN 36 ELSE 37 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= 0.454272610415658) THEN 38 ELSE 39 END END END ELSE 5 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= 1.203190823907201) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= -0.457740959041832) THEN 12 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= -0.943465695338498) THEN 26 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= 1.020856116270082) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= 0.0) THEN 108 ELSE 109 END ELSE 55 END END END ELSE 7 END END AS node_id_2 
FROM tmp_20180417025009_iv3383_ads_ AS "ADS_sca_2_OUT"), 
"DT_node_data_14" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values"."threshold" AS FLOAT) AS "threshold", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS depth, 2 AS parent_id, 0.517914211308515 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS depth, 3 AS parent_id, 2.532556216810879 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 3 AS depth, 6 AS parent_id, -0.572141599257787 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 4 AS depth, 8 AS parent_id, -1.146825239658356 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 4 AS depth, 8 AS parent_id, -2.254711648725694 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 4 AS depth, 13 AS parent_id, 1.997733380140797 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 36 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 5 AS depth, 18 AS parent_id, -0.165543528505274 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 37 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 5 AS depth, 18 AS parent_id, -1.501022576093674 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 38 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 5 AS depth, 19 AS parent_id, -2.197298436505454 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 39 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 5 AS depth, 19 AS parent_id, -0.992323129177094 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 55 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 5 AS depth, 27 AS parent_id, -0.303891919897153 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 108 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 6 AS depth, 54 AS parent_id, 0.19058373078056 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 109 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 6 AS depth, 54 AS parent_id, 1.499976420402527 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte) AS "Values"), 
"DT_Output_14" AS 
(SELECT "DT_node_lookup_14"."KEY" AS "KEY", "DT_node_lookup_14".node_id_2 AS node_id_2, "DT_node_data_14".node_id AS node_id, "DT_node_data_14".feature AS feature, "DT_node_data_14"."threshold" AS "threshold", "DT_node_data_14".depth AS depth, "DT_node_data_14".parent_id AS parent_id, "DT_node_data_14"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_14" LEFT OUTER JOIN "DT_node_data_14" ON "DT_node_lookup_14".node_id_2 = "DT_node_data_14".node_id), 
"LGBM_Model_14" AS 
(SELECT "DT_Output_14"."KEY" AS "KEY", "DT_Output_14"."Estimator" AS "Estimator" 
FROM "DT_Output_14"), 
"DT_node_lookup_15" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= 0.335529184970922) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 0.093382668472188) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= 0.679438022223982) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= -1.018595175459214) THEN 16 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= -0.274033083203825) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= 0.0) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= -0.825156710717845) THEN 136 ELSE 137 END ELSE 69 END ELSE 35 END END ELSE 9 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= 0.312828941413196) THEN 10 ELSE 11 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= 1.238805299164224) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= -0.943465695338498) THEN 12 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= 0.992220714860145) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= -0.465355791587586) THEN 52 ELSE 53 END ELSE 27 END END ELSE 7 END END AS node_id_2 
FROM tmp_20180417025009_iv3383_ads_ AS "ADS_sca_2_OUT"), 
"DT_node_data_15" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values"."threshold" AS FLOAT) AS "threshold", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS depth, 3 AS parent_id, 3.028784154521094 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 3 AS depth, 4 AS parent_id, 0.024437075853348 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 3 AS depth, 5 AS parent_id, -0.493454787586675 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 3 AS depth, 5 AS parent_id, 1.927170972029368 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 3 AS depth, 6 AS parent_id, 2.103559047600318 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 4 AS depth, 8 AS parent_id, -0.53538124750961 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 4 AS depth, 13 AS parent_id, -0.291669534627468 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 35 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 5 AS depth, 17 AS parent_id, -2.540007763323576 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 52 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 5 AS depth, 26 AS parent_id, 0.194584916396575 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 53 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 5 AS depth, 26 AS parent_id, 1.27584781024767 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 69 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 6 AS depth, 34 AS parent_id, -1.818667351435392 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 136 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 7 AS depth, 68 AS parent_id, -1.630347503148592 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 137 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 7 AS depth, 68 AS parent_id, -0.36591363367827 AS "Estimator" 
FROM (SELECT 0.0 AS "X") AS dummy_cte) AS "Values"), 
"DT_Output_15" AS 
(SELECT "DT_node_lookup_15"."KEY" AS "KEY", "DT_node_lookup_15".node_id_2 AS node_id_2, "DT_node_data_15".node_id AS node_id, "DT_node_data_15".feature AS feature, "DT_node_data_15"."threshold" AS "threshold", "DT_node_data_15".depth AS depth, "DT_node_data_15".parent_id AS parent_id, "DT_node_data_15"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_15" LEFT OUTER JOIN "DT_node_data_15" ON "DT_node_lookup_15".node_id_2 = "DT_node_data_15".node_id), 
"LGBM_Model_15" AS 
(SELECT "DT_Output_15"."KEY" AS "KEY", "DT_Output_15"."Estimator" AS "Estimator" 
FROM "DT_Output_15")
 SELECT "LGBM_B1"."KEY", "LGBM_B1"."Estimator" 
FROM (SELECT "LGBM_esu_1"."KEY" AS "KEY", "LGBM_esu_1"."Estimator" AS "Estimator" 
FROM (SELECT "LGBM_Model_10"."KEY" AS "KEY", "LGBM_Model_10"."Estimator" AS "Estimator" 
FROM "LGBM_Model_10" UNION ALL SELECT "LGBM_Model_11"."KEY" AS "KEY", "LGBM_Model_11"."Estimator" AS "Estimator" 
FROM "LGBM_Model_11" UNION ALL SELECT "LGBM_Model_12"."KEY" AS "KEY", "LGBM_Model_12"."Estimator" AS "Estimator" 
FROM "LGBM_Model_12" UNION ALL SELECT "LGBM_Model_13"."KEY" AS "KEY", "LGBM_Model_13"."Estimator" AS "Estimator" 
FROM "LGBM_Model_13" UNION ALL SELECT "LGBM_Model_14"."KEY" AS "KEY", "LGBM_Model_14"."Estimator" AS "Estimator" 
FROM "LGBM_Model_14" UNION ALL SELECT "LGBM_Model_15"."KEY" AS "KEY", "LGBM_Model_15"."Estimator" AS "Estimator" 
FROM "LGBM_Model_15") AS "LGBM_esu_1") AS "LGBM_B1") AS "U"

-- Code For temporary table tmp_20180417025009_wib9w0_lgbm part 1/2. Create 


CREATE GLOBAL TEMPORARY TABLE tmp_20180417025009_wib9w0_lgbm  (
	"KEY" BIGINT, 
	"Estimator" FLOAT
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table tmp_20180417025009_wib9w0_lgbm part 2/2. Populate

INSERT INTO tmp_20180417025009_wib9w0_lgbm ("KEY", "Estimator") SELECT "U"."KEY", "U"."Estimator" 
FROM (SELECT "LGBM_Union"."KEY", "LGBM_Union"."Estimator" 
FROM (SELECT "LGBM_EnsembleUnion"."KEY" AS "KEY", "LGBM_EnsembleUnion"."Estimator" AS "Estimator" 
FROM (SELECT "LGBM_B0"."KEY" AS "KEY", "LGBM_B0"."Estimator" AS "Estimator" 
FROM tmp_20180417025009_sm78kk_lgbm AS "LGBM_B0" UNION ALL SELECT "LGBM_B1"."KEY" AS "KEY", "LGBM_B1"."Estimator" AS "Estimator" 
FROM tmp_20180417025009_3hbnks_lgbm AS "LGBM_B1") AS "LGBM_EnsembleUnion") AS "LGBM_Union") AS "U"

-- Code For temporary table tmp_20180417025009_1he9mh_lgbm part 1/2. Create 


CREATE GLOBAL TEMPORARY TABLE tmp_20180417025009_1he9mh_lgbm  (
	"KEY" BIGINT, 
	"Estimator" FLOAT
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table tmp_20180417025009_1he9mh_lgbm part 2/2. Populate

INSERT INTO tmp_20180417025009_1he9mh_lgbm ("KEY", "Estimator") SELECT "U"."KEY", "U"."Estimator" 
FROM (SELECT "LGBM_sum"."KEY", "LGBM_sum"."Estimator" 
FROM (SELECT "T"."KEY" AS "KEY", CAST("T"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT "LGBM_Union"."KEY" AS "KEY", sum("LGBM_Union"."Estimator") AS "Estimator" 
FROM tmp_20180417025009_wib9w0_lgbm AS "LGBM_Union" GROUP BY "LGBM_Union"."KEY") AS "T") AS "LGBM_sum") AS "U"

-- Model deployment code

SELECT "LGBM_sum"."KEY" AS "KEY", "LGBM_sum"."Estimator" AS "Estimator" 
FROM tmp_20180417025009_1he9mh_lgbm AS "LGBM_sum"