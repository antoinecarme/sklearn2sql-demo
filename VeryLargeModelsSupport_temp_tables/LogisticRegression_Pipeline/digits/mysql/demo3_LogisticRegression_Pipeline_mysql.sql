-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2018

-- Model : LogisticRegression_Pipeline
-- Dataset : digits
-- Database : mysql


-- This SQL code can contain one or more statements, to be executed in the order they appear in this file.



-- Code For temporary table TMP_20180417025619_OFHP28_ADS_imp_1_OUT part 1/2. Create 


CREATE TEMPORARY TABLE `TMP_20180417025619_OFHP28_ADS_imp_1_OUT` (
	`KEY` BIGINT NOT NULL, 
	impter_2 DOUBLE, 
	impter_3 DOUBLE, 
	impter_4 DOUBLE, 
	impter_5 DOUBLE, 
	impter_6 DOUBLE, 
	impter_7 DOUBLE, 
	impter_8 DOUBLE, 
	impter_9 DOUBLE, 
	impter_10 DOUBLE, 
	impter_11 DOUBLE, 
	impter_12 DOUBLE, 
	impter_13 DOUBLE, 
	impter_14 DOUBLE, 
	impter_15 DOUBLE, 
	impter_16 DOUBLE, 
	impter_17 DOUBLE, 
	impter_18 DOUBLE, 
	impter_19 DOUBLE, 
	impter_20 DOUBLE, 
	impter_21 DOUBLE, 
	impter_22 DOUBLE, 
	impter_23 DOUBLE, 
	impter_24 DOUBLE, 
	impter_25 DOUBLE, 
	impter_26 DOUBLE, 
	impter_27 DOUBLE, 
	impter_28 DOUBLE, 
	impter_29 DOUBLE, 
	impter_30 DOUBLE, 
	impter_31 DOUBLE, 
	impter_32 DOUBLE, 
	impter_33 DOUBLE, 
	impter_34 DOUBLE, 
	impter_35 DOUBLE, 
	impter_36 DOUBLE, 
	impter_37 DOUBLE, 
	impter_38 DOUBLE, 
	impter_39 DOUBLE, 
	impter_40 DOUBLE, 
	impter_41 DOUBLE, 
	impter_42 DOUBLE, 
	impter_43 DOUBLE, 
	impter_44 DOUBLE, 
	impter_45 DOUBLE, 
	impter_46 DOUBLE, 
	impter_47 DOUBLE, 
	impter_48 DOUBLE, 
	impter_49 DOUBLE, 
	impter_50 DOUBLE, 
	impter_51 DOUBLE, 
	impter_52 DOUBLE, 
	impter_53 DOUBLE, 
	impter_54 DOUBLE, 
	impter_55 DOUBLE, 
	impter_56 DOUBLE, 
	impter_57 DOUBLE, 
	impter_58 DOUBLE, 
	impter_59 DOUBLE, 
	impter_60 DOUBLE, 
	impter_61 DOUBLE, 
	impter_62 DOUBLE, 
	impter_63 DOUBLE, 
	impter_64 DOUBLE, 
	impter_65 DOUBLE, 
	PRIMARY KEY (`KEY`)
)

 ENGINE=MEMORY

-- Code For temporary table TMP_20180417025619_OFHP28_ADS_imp_1_OUT part 2/2. Populate

INSERT INTO `TMP_20180417025619_OFHP28_ADS_imp_1_OUT` (`KEY`, impter_2, impter_3, impter_4, impter_5, impter_6, impter_7, impter_8, impter_9, impter_10, impter_11, impter_12, impter_13, impter_14, impter_15, impter_16, impter_17, impter_18, impter_19, impter_20, impter_21, impter_22, impter_23, impter_24, impter_25, impter_26, impter_27, impter_28, impter_29, impter_30, impter_31, impter_32, impter_33, impter_34, impter_35, impter_36, impter_37, impter_38, impter_39, impter_40, impter_41, impter_42, impter_43, impter_44, impter_45, impter_46, impter_47, impter_48, impter_49, impter_50, impter_51, impter_52, impter_53, impter_54, impter_55, impter_56, impter_57, impter_58, impter_59, impter_60, impter_61, impter_62, impter_63, impter_64, impter_65) SELECT `U`.`KEY`, `U`.impter_2, `U`.impter_3, `U`.impter_4, `U`.impter_5, `U`.impter_6, `U`.impter_7, `U`.impter_8, `U`.impter_9, `U`.impter_10, `U`.impter_11, `U`.impter_12, `U`.impter_13, `U`.impter_14, `U`.impter_15, `U`.impter_16, `U`.impter_17, `U`.impter_18, `U`.impter_19, `U`.impter_20, `U`.impter_21, `U`.impter_22, `U`.impter_23, `U`.impter_24, `U`.impter_25, `U`.impter_26, `U`.impter_27, `U`.impter_28, `U`.impter_29, `U`.impter_30, `U`.impter_31, `U`.impter_32, `U`.impter_33, `U`.impter_34, `U`.impter_35, `U`.impter_36, `U`.impter_37, `U`.impter_38, `U`.impter_39, `U`.impter_40, `U`.impter_41, `U`.impter_42, `U`.impter_43, `U`.impter_44, `U`.impter_45, `U`.impter_46, `U`.impter_47, `U`.impter_48, `U`.impter_49, `U`.impter_50, `U`.impter_51, `U`.impter_52, `U`.impter_53, `U`.impter_54, `U`.impter_55, `U`.impter_56, `U`.impter_57, `U`.impter_58, `U`.impter_59, `U`.impter_60, `U`.impter_61, `U`.impter_62, `U`.impter_63, `U`.impter_64, `U`.impter_65 
FROM (SELECT `ADS_imp_1_OUT`.`KEY`, `ADS_imp_1_OUT`.impter_2, `ADS_imp_1_OUT`.impter_3, `ADS_imp_1_OUT`.impter_4, `ADS_imp_1_OUT`.impter_5, `ADS_imp_1_OUT`.impter_6, `ADS_imp_1_OUT`.impter_7, `ADS_imp_1_OUT`.impter_8, `ADS_imp_1_OUT`.impter_9, `ADS_imp_1_OUT`.impter_10, `ADS_imp_1_OUT`.impter_11, `ADS_imp_1_OUT`.impter_12, `ADS_imp_1_OUT`.impter_13, `ADS_imp_1_OUT`.impter_14, `ADS_imp_1_OUT`.impter_15, `ADS_imp_1_OUT`.impter_16, `ADS_imp_1_OUT`.impter_17, `ADS_imp_1_OUT`.impter_18, `ADS_imp_1_OUT`.impter_19, `ADS_imp_1_OUT`.impter_20, `ADS_imp_1_OUT`.impter_21, `ADS_imp_1_OUT`.impter_22, `ADS_imp_1_OUT`.impter_23, `ADS_imp_1_OUT`.impter_24, `ADS_imp_1_OUT`.impter_25, `ADS_imp_1_OUT`.impter_26, `ADS_imp_1_OUT`.impter_27, `ADS_imp_1_OUT`.impter_28, `ADS_imp_1_OUT`.impter_29, `ADS_imp_1_OUT`.impter_30, `ADS_imp_1_OUT`.impter_31, `ADS_imp_1_OUT`.impter_32, `ADS_imp_1_OUT`.impter_33, `ADS_imp_1_OUT`.impter_34, `ADS_imp_1_OUT`.impter_35, `ADS_imp_1_OUT`.impter_36, `ADS_imp_1_OUT`.impter_37, `ADS_imp_1_OUT`.impter_38, `ADS_imp_1_OUT`.impter_39, `ADS_imp_1_OUT`.impter_40, `ADS_imp_1_OUT`.impter_41, `ADS_imp_1_OUT`.impter_42, `ADS_imp_1_OUT`.impter_43, `ADS_imp_1_OUT`.impter_44, `ADS_imp_1_OUT`.impter_45, `ADS_imp_1_OUT`.impter_46, `ADS_imp_1_OUT`.impter_47, `ADS_imp_1_OUT`.impter_48, `ADS_imp_1_OUT`.impter_49, `ADS_imp_1_OUT`.impter_50, `ADS_imp_1_OUT`.impter_51, `ADS_imp_1_OUT`.impter_52, `ADS_imp_1_OUT`.impter_53, `ADS_imp_1_OUT`.impter_54, `ADS_imp_1_OUT`.impter_55, `ADS_imp_1_OUT`.impter_56, `ADS_imp_1_OUT`.impter_57, `ADS_imp_1_OUT`.impter_58, `ADS_imp_1_OUT`.impter_59, `ADS_imp_1_OUT`.impter_60, `ADS_imp_1_OUT`.impter_61, `ADS_imp_1_OUT`.impter_62, `ADS_imp_1_OUT`.impter_63, `ADS_imp_1_OUT`.impter_64, `ADS_imp_1_OUT`.impter_65 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_0` IS NULL) THEN 0.0 ELSE `ADS`.`Feature_0` END AS impter_2, CASE WHEN (`ADS`.`Feature_1` IS NULL) THEN 0.2950591510090466 ELSE `ADS`.`Feature_1` END AS impter_3, CASE WHEN (`ADS`.`Feature_2` IS NULL) THEN 5.104384133611691 ELSE `ADS`.`Feature_2` END AS impter_4, CASE WHEN (`ADS`.`Feature_3` IS NULL) THEN 11.791927627000696 ELSE `ADS`.`Feature_3` END AS impter_5, CASE WHEN (`ADS`.`Feature_4` IS NULL) THEN 11.84829505915101 ELSE `ADS`.`Feature_4` END AS impter_6, CASE WHEN (`ADS`.`Feature_5` IS NULL) THEN 5.823242867084203 ELSE `ADS`.`Feature_5` END AS impter_7, CASE WHEN (`ADS`.`Feature_6` IS NULL) THEN 1.394572025052192 ELSE `ADS`.`Feature_6` END AS impter_8, CASE WHEN (`ADS`.`Feature_7` IS NULL) THEN 0.13430758524704245 ELSE `ADS`.`Feature_7` END AS impter_9, CASE WHEN (`ADS`.`Feature_8` IS NULL) THEN 0.0055671537926235215 ELSE `ADS`.`Feature_8` END AS impter_10, CASE WHEN (`ADS`.`Feature_9` IS NULL) THEN 1.977035490605428 ELSE `ADS`.`Feature_9` END AS impter_11, CASE WHEN (`ADS`.`Feature_10` IS NULL) THEN 10.362560890744607 ELSE `ADS`.`Feature_10` END AS impter_12, CASE WHEN (`ADS`.`Feature_11` IS NULL) THEN 12.03061934585943 ELSE `ADS`.`Feature_11` END AS impter_13, CASE WHEN (`ADS`.`Feature_12` IS NULL) THEN 10.271398747390396 ELSE `ADS`.`Feature_12` END AS impter_14, CASE WHEN (`ADS`.`Feature_13` IS NULL) THEN 8.121781489213639 ELSE `ADS`.`Feature_13` END AS impter_15, CASE WHEN (`ADS`.`Feature_14` IS NULL) THEN 1.8921363952679193 ELSE `ADS`.`Feature_14` END AS impter_16, CASE WHEN (`ADS`.`Feature_15` IS NULL) THEN 0.11760612386917188 ELSE `ADS`.`Feature_15` END AS impter_17, CASE WHEN (`ADS`.`Feature_16` IS NULL) THEN 0.0020876826722338203 ELSE `ADS`.`Feature_16` END AS impter_18, CASE WHEN (`ADS`.`Feature_17` IS NULL) THEN 2.5427974947807934 ELSE `ADS`.`Feature_17` END AS impter_19, CASE WHEN (`ADS`.`Feature_18` IS NULL) THEN 9.935281837160751 ELSE `ADS`.`Feature_18` END AS impter_20, CASE WHEN (`ADS`.`Feature_19` IS NULL) THEN 7.099512874043145 ELSE `ADS`.`Feature_19` END AS impter_21, CASE WHEN (`ADS`.`Feature_20` IS NULL) THEN 7.132915796798887 ELSE `ADS`.`Feature_20` END AS impter_22, CASE WHEN (`ADS`.`Feature_21` IS NULL) THEN 7.81419624217119 ELSE `ADS`.`Feature_21` END AS impter_23, CASE WHEN (`ADS`.`Feature_22` IS NULL) THEN 1.8434237995824634 ELSE `ADS`.`Feature_22` END AS impter_24, CASE WHEN (`ADS`.`Feature_23` IS NULL) THEN 0.05775922059846903 ELSE `ADS`.`Feature_23` END AS impter_25, CASE WHEN (`ADS`.`Feature_24` IS NULL) THEN 0.0006958942240779402 ELSE `ADS`.`Feature_24` END AS impter_26, CASE WHEN (`ADS`.`Feature_25` IS NULL) THEN 2.4808629088378567 ELSE `ADS`.`Feature_25` END AS impter_27, CASE WHEN (`ADS`.`Feature_26` IS NULL) THEN 9.143354210160055 ELSE `ADS`.`Feature_26` END AS impter_28, CASE WHEN (`ADS`.`Feature_27` IS NULL) THEN 8.960334029227557 ELSE `ADS`.`Feature_27` END AS impter_29, CASE WHEN (`ADS`.`Feature_28` IS NULL) THEN 10.03688239387613 ELSE `ADS`.`Feature_28` END AS impter_30, CASE WHEN (`ADS`.`Feature_29` IS NULL) THEN 7.5949895615866385 ELSE `ADS`.`Feature_29` END AS impter_31, CASE WHEN (`ADS`.`Feature_30` IS NULL) THEN 2.337508698677801 ELSE `ADS`.`Feature_30` END AS impter_32, CASE WHEN (`ADS`.`Feature_31` IS NULL) THEN 0.0027835768963117608 ELSE `ADS`.`Feature_31` END AS impter_33, CASE WHEN (`ADS`.`Feature_32` IS NULL) THEN 0.0 ELSE `ADS`.`Feature_32` END AS impter_34, CASE WHEN (`ADS`.`Feature_33` IS NULL) THEN 2.3319415448851775 ELSE `ADS`.`Feature_33` END AS impter_35, CASE WHEN (`ADS`.`Feature_34` IS NULL) THEN 7.608907446068198 ELSE `ADS`.`Feature_34` END AS impter_36, CASE WHEN (`ADS`.`Feature_35` IS NULL) THEN 9.028531663187195 ELSE `ADS`.`Feature_35` END AS impter_37, CASE WHEN (`ADS`.`Feature_36` IS NULL) THEN 10.270006958942242 ELSE `ADS`.`Feature_36` END AS impter_38, CASE WHEN (`ADS`.`Feature_37` IS NULL) THEN 8.806541405706332 ELSE `ADS`.`Feature_37` END AS impter_39, CASE WHEN (`ADS`.`Feature_38` IS NULL) THEN 2.8754349338900487 ELSE `ADS`.`Feature_38` END AS impter_40, CASE WHEN (`ADS`.`Feature_39` IS NULL) THEN 0.0 ELSE `ADS`.`Feature_39` END AS impter_41, CASE WHEN (`ADS`.`Feature_40` IS NULL) THEN 0.010438413361169102 ELSE `ADS`.`Feature_40` END AS impter_42, CASE WHEN (`ADS`.`Feature_41` IS NULL) THEN 1.5755045233124565 ELSE `ADS`.`Feature_41` END AS impter_43, CASE WHEN (`ADS`.`Feature_42` IS NULL) THEN 6.858733472512178 ELSE `ADS`.`Feature_42` END AS impter_44, CASE WHEN (`ADS`.`Feature_43` IS NULL) THEN 7.258872651356993 ELSE `ADS`.`Feature_43` END AS impter_45, CASE WHEN (`ADS`.`Feature_44` IS NULL) THEN 7.710508002783577 ELSE `ADS`.`Feature_44` END AS impter_46, CASE WHEN (`ADS`.`Feature_45` IS NULL) THEN 8.281141266527488 ELSE `ADS`.`Feature_45` END AS impter_47, CASE WHEN (`ADS`.`Feature_46` IS NULL) THEN 3.432150313152401 ELSE `ADS`.`Feature_46` END AS impter_48, CASE WHEN (`ADS`.`Feature_47` IS NULL) THEN 0.031315240083507306 ELSE `ADS`.`Feature_47` END AS impter_49, CASE WHEN (`ADS`.`Feature_48` IS NULL) THEN 0.009046624913013222 ELSE `ADS`.`Feature_48` END AS impter_50, CASE WHEN (`ADS`.`Feature_49` IS NULL) THEN 0.708420320111343 ELSE `ADS`.`Feature_49` END AS impter_51, CASE WHEN (`ADS`.`Feature_50` IS NULL) THEN 7.492693110647181 ELSE `ADS`.`Feature_50` END AS impter_52, CASE WHEN (`ADS`.`Feature_51` IS NULL) THEN 9.529575504523313 ELSE `ADS`.`Feature_51` END AS impter_53, CASE WHEN (`ADS`.`Feature_52` IS NULL) THEN 9.541405706332638 ELSE `ADS`.`Feature_52` END AS impter_54, CASE WHEN (`ADS`.`Feature_53` IS NULL) THEN 8.754349338900488 ELSE `ADS`.`Feature_53` END AS impter_55, CASE WHEN (`ADS`.`Feature_54` IS NULL) THEN 3.7397355601948505 ELSE `ADS`.`Feature_54` END AS impter_56, CASE WHEN (`ADS`.`Feature_55` IS NULL) THEN 0.21920668058455114 ELSE `ADS`.`Feature_55` END AS impter_57, CASE WHEN (`ADS`.`Feature_56` IS NULL) THEN 0.0006958942240779402 ELSE `ADS`.`Feature_56` END AS impter_58, CASE WHEN (`ADS`.`Feature_57` IS NULL) THEN 0.26374391092553934 ELSE `ADS`.`Feature_57` END AS impter_59, CASE WHEN (`ADS`.`Feature_58` IS NULL) THEN 5.474599860821155 ELSE `ADS`.`Feature_58` END AS impter_60, CASE WHEN (`ADS`.`Feature_59` IS NULL) THEN 12.097425191370911 ELSE `ADS`.`Feature_59` END AS impter_61, CASE WHEN (`ADS`.`Feature_60` IS NULL) THEN 11.8580375782881 ELSE `ADS`.`Feature_60` END AS impter_62, CASE WHEN (`ADS`.`Feature_61` IS NULL) THEN 6.716771050800278 ELSE `ADS`.`Feature_61` END AS impter_63, CASE WHEN (`ADS`.`Feature_62` IS NULL) THEN 2.0869867780097424 ELSE `ADS`.`Feature_62` END AS impter_64, CASE WHEN (`ADS`.`Feature_63` IS NULL) THEN 0.3862212943632568 ELSE `ADS`.`Feature_63` END AS impter_65 
FROM digits AS `ADS`) AS `ADS_imp_1_OUT`) AS `U`

-- Code For temporary table TMP_20180417025619_7UHRK4_ADS_sca_2_OUT part 1/2. Create 


CREATE TEMPORARY TABLE `TMP_20180417025619_7UHRK4_ADS_sca_2_OUT` (
	`KEY` BIGINT NOT NULL, 
	scaler_2 DOUBLE, 
	scaler_3 DOUBLE, 
	scaler_4 DOUBLE, 
	scaler_5 DOUBLE, 
	scaler_6 DOUBLE, 
	scaler_7 DOUBLE, 
	scaler_8 DOUBLE, 
	scaler_9 DOUBLE, 
	scaler_10 DOUBLE, 
	scaler_11 DOUBLE, 
	scaler_12 DOUBLE, 
	scaler_13 DOUBLE, 
	scaler_14 DOUBLE, 
	scaler_15 DOUBLE, 
	scaler_16 DOUBLE, 
	scaler_17 DOUBLE, 
	scaler_18 DOUBLE, 
	scaler_19 DOUBLE, 
	scaler_20 DOUBLE, 
	scaler_21 DOUBLE, 
	scaler_22 DOUBLE, 
	scaler_23 DOUBLE, 
	scaler_24 DOUBLE, 
	scaler_25 DOUBLE, 
	scaler_26 DOUBLE, 
	scaler_27 DOUBLE, 
	scaler_28 DOUBLE, 
	scaler_29 DOUBLE, 
	scaler_30 DOUBLE, 
	scaler_31 DOUBLE, 
	scaler_32 DOUBLE, 
	scaler_33 DOUBLE, 
	scaler_34 DOUBLE, 
	scaler_35 DOUBLE, 
	scaler_36 DOUBLE, 
	scaler_37 DOUBLE, 
	scaler_38 DOUBLE, 
	scaler_39 DOUBLE, 
	scaler_40 DOUBLE, 
	scaler_41 DOUBLE, 
	scaler_42 DOUBLE, 
	scaler_43 DOUBLE, 
	scaler_44 DOUBLE, 
	scaler_45 DOUBLE, 
	scaler_46 DOUBLE, 
	scaler_47 DOUBLE, 
	scaler_48 DOUBLE, 
	scaler_49 DOUBLE, 
	scaler_50 DOUBLE, 
	scaler_51 DOUBLE, 
	scaler_52 DOUBLE, 
	scaler_53 DOUBLE, 
	scaler_54 DOUBLE, 
	scaler_55 DOUBLE, 
	scaler_56 DOUBLE, 
	scaler_57 DOUBLE, 
	scaler_58 DOUBLE, 
	scaler_59 DOUBLE, 
	scaler_60 DOUBLE, 
	scaler_61 DOUBLE, 
	scaler_62 DOUBLE, 
	scaler_63 DOUBLE, 
	scaler_64 DOUBLE, 
	scaler_65 DOUBLE, 
	PRIMARY KEY (`KEY`)
)

 ENGINE=MEMORY

-- Code For temporary table TMP_20180417025619_7UHRK4_ADS_sca_2_OUT part 2/2. Populate

INSERT INTO `TMP_20180417025619_7UHRK4_ADS_sca_2_OUT` (`KEY`, scaler_2, scaler_3, scaler_4, scaler_5, scaler_6, scaler_7, scaler_8, scaler_9, scaler_10, scaler_11, scaler_12, scaler_13, scaler_14, scaler_15, scaler_16, scaler_17, scaler_18, scaler_19, scaler_20, scaler_21, scaler_22, scaler_23, scaler_24, scaler_25, scaler_26, scaler_27, scaler_28, scaler_29, scaler_30, scaler_31, scaler_32, scaler_33, scaler_34, scaler_35, scaler_36, scaler_37, scaler_38, scaler_39, scaler_40, scaler_41, scaler_42, scaler_43, scaler_44, scaler_45, scaler_46, scaler_47, scaler_48, scaler_49, scaler_50, scaler_51, scaler_52, scaler_53, scaler_54, scaler_55, scaler_56, scaler_57, scaler_58, scaler_59, scaler_60, scaler_61, scaler_62, scaler_63, scaler_64, scaler_65) SELECT `U`.`KEY`, `U`.scaler_2, `U`.scaler_3, `U`.scaler_4, `U`.scaler_5, `U`.scaler_6, `U`.scaler_7, `U`.scaler_8, `U`.scaler_9, `U`.scaler_10, `U`.scaler_11, `U`.scaler_12, `U`.scaler_13, `U`.scaler_14, `U`.scaler_15, `U`.scaler_16, `U`.scaler_17, `U`.scaler_18, `U`.scaler_19, `U`.scaler_20, `U`.scaler_21, `U`.scaler_22, `U`.scaler_23, `U`.scaler_24, `U`.scaler_25, `U`.scaler_26, `U`.scaler_27, `U`.scaler_28, `U`.scaler_29, `U`.scaler_30, `U`.scaler_31, `U`.scaler_32, `U`.scaler_33, `U`.scaler_34, `U`.scaler_35, `U`.scaler_36, `U`.scaler_37, `U`.scaler_38, `U`.scaler_39, `U`.scaler_40, `U`.scaler_41, `U`.scaler_42, `U`.scaler_43, `U`.scaler_44, `U`.scaler_45, `U`.scaler_46, `U`.scaler_47, `U`.scaler_48, `U`.scaler_49, `U`.scaler_50, `U`.scaler_51, `U`.scaler_52, `U`.scaler_53, `U`.scaler_54, `U`.scaler_55, `U`.scaler_56, `U`.scaler_57, `U`.scaler_58, `U`.scaler_59, `U`.scaler_60, `U`.scaler_61, `U`.scaler_62, `U`.scaler_63, `U`.scaler_64, `U`.scaler_65 
FROM (SELECT `ADS_sca_2_OUT`.`KEY`, `ADS_sca_2_OUT`.scaler_2, `ADS_sca_2_OUT`.scaler_3, `ADS_sca_2_OUT`.scaler_4, `ADS_sca_2_OUT`.scaler_5, `ADS_sca_2_OUT`.scaler_6, `ADS_sca_2_OUT`.scaler_7, `ADS_sca_2_OUT`.scaler_8, `ADS_sca_2_OUT`.scaler_9, `ADS_sca_2_OUT`.scaler_10, `ADS_sca_2_OUT`.scaler_11, `ADS_sca_2_OUT`.scaler_12, `ADS_sca_2_OUT`.scaler_13, `ADS_sca_2_OUT`.scaler_14, `ADS_sca_2_OUT`.scaler_15, `ADS_sca_2_OUT`.scaler_16, `ADS_sca_2_OUT`.scaler_17, `ADS_sca_2_OUT`.scaler_18, `ADS_sca_2_OUT`.scaler_19, `ADS_sca_2_OUT`.scaler_20, `ADS_sca_2_OUT`.scaler_21, `ADS_sca_2_OUT`.scaler_22, `ADS_sca_2_OUT`.scaler_23, `ADS_sca_2_OUT`.scaler_24, `ADS_sca_2_OUT`.scaler_25, `ADS_sca_2_OUT`.scaler_26, `ADS_sca_2_OUT`.scaler_27, `ADS_sca_2_OUT`.scaler_28, `ADS_sca_2_OUT`.scaler_29, `ADS_sca_2_OUT`.scaler_30, `ADS_sca_2_OUT`.scaler_31, `ADS_sca_2_OUT`.scaler_32, `ADS_sca_2_OUT`.scaler_33, `ADS_sca_2_OUT`.scaler_34, `ADS_sca_2_OUT`.scaler_35, `ADS_sca_2_OUT`.scaler_36, `ADS_sca_2_OUT`.scaler_37, `ADS_sca_2_OUT`.scaler_38, `ADS_sca_2_OUT`.scaler_39, `ADS_sca_2_OUT`.scaler_40, `ADS_sca_2_OUT`.scaler_41, `ADS_sca_2_OUT`.scaler_42, `ADS_sca_2_OUT`.scaler_43, `ADS_sca_2_OUT`.scaler_44, `ADS_sca_2_OUT`.scaler_45, `ADS_sca_2_OUT`.scaler_46, `ADS_sca_2_OUT`.scaler_47, `ADS_sca_2_OUT`.scaler_48, `ADS_sca_2_OUT`.scaler_49, `ADS_sca_2_OUT`.scaler_50, `ADS_sca_2_OUT`.scaler_51, `ADS_sca_2_OUT`.scaler_52, `ADS_sca_2_OUT`.scaler_53, `ADS_sca_2_OUT`.scaler_54, `ADS_sca_2_OUT`.scaler_55, `ADS_sca_2_OUT`.scaler_56, `ADS_sca_2_OUT`.scaler_57, `ADS_sca_2_OUT`.scaler_58, `ADS_sca_2_OUT`.scaler_59, `ADS_sca_2_OUT`.scaler_60, `ADS_sca_2_OUT`.scaler_61, `ADS_sca_2_OUT`.scaler_62, `ADS_sca_2_OUT`.scaler_63, `ADS_sca_2_OUT`.scaler_64, `ADS_sca_2_OUT`.scaler_65 
FROM (SELECT `ADS_imp_1_OUT`.`KEY` AS `KEY`, (`ADS_imp_1_OUT`.impter_2 - 0.0) / 1.0 AS scaler_2, (`ADS_imp_1_OUT`.impter_3 - 0.2950591510090466) / 0.886335971513945 AS scaler_3, (`ADS_imp_1_OUT`.impter_4 - 5.104384133611691) / 4.714562522364591 AS scaler_4, (`ADS_imp_1_OUT`.impter_5 - 11.791927627000696) / 4.242705177561994 AS scaler_5, (`ADS_imp_1_OUT`.impter_6 - 11.84829505915101) / 4.298607850485783 AS scaler_6, (`ADS_imp_1_OUT`.impter_7 - 5.823242867084203) / 5.664052593352563 AS scaler_7, (`ADS_imp_1_OUT`.impter_8 - 1.394572025052192) / 3.3672537498889787 AS scaler_8, (`ADS_imp_1_OUT`.impter_9 - 0.13430758524704245) / 1.0738488961060884 AS scaler_9, (`ADS_imp_1_OUT`.impter_10 - 0.0055671537926235215) / 0.09121259500521199 AS scaler_10, (`ADS_imp_1_OUT`.impter_11 - 1.977035490605428) / 3.1765759513448373 AS scaler_11, (`ADS_imp_1_OUT`.impter_12 - 10.362560890744607) / 5.427455768043861 AS scaler_12, (`ADS_imp_1_OUT`.impter_13 - 12.03061934585943) / 3.9240043126958595 AS scaler_13, (`ADS_imp_1_OUT`.impter_14 - 10.271398747390396) / 4.751306782008032 AS scaler_14, (`ADS_imp_1_OUT`.impter_15 - 8.121781489213639) / 6.055742470420089 AS scaler_15, (`ADS_imp_1_OUT`.impter_16 - 1.8921363952679193) / 3.6358496015605493 AS scaler_16, (`ADS_imp_1_OUT`.impter_17 - 0.11760612386917188) / 0.8809135848407257 AS scaler_17, (`ADS_imp_1_OUT`.impter_18 - 0.0020876826722338203) / 0.04564344699180706 AS scaler_18, (`ADS_imp_1_OUT`.impter_19 - 2.5427974947807934) / 3.535939148296097 AS scaler_19, (`ADS_imp_1_OUT`.impter_20 - 9.935281837160751) / 5.674233427535142 AS scaler_20, (`ADS_imp_1_OUT`.impter_21 - 7.099512874043145) / 5.828968622118506 AS scaler_21, (`ADS_imp_1_OUT`.impter_22 - 7.132915796798887) / 6.164166380758013 AS scaler_22, (`ADS_imp_1_OUT`.impter_23 - 7.81419624217119) / 6.237214641441282 AS scaler_23, (`ADS_imp_1_OUT`.impter_24 - 1.8434237995824634) / 3.3552968495259408 AS scaler_24, (`ADS_imp_1_OUT`.impter_25 - 0.05775922059846903) / 0.47057168084472595 AS scaler_25, (`ADS_imp_1_OUT`.impter_26 - 0.0006958942240779402) / 0.0263706267522565 AS scaler_26, (`ADS_imp_1_OUT`.impter_27 - 2.4808629088378567) / 3.1579531140532993 AS scaler_27, (`ADS_imp_1_OUT`.impter_28 - 9.143354210160055) / 6.211448620771221 AS scaler_28, (`ADS_imp_1_OUT`.impter_29 - 8.960334029227557) / 5.872499336895779 AS scaler_29, (`ADS_imp_1_OUT`.impter_30 - 10.03688239387613) / 6.131194138822921 AS scaler_30, (`ADS_imp_1_OUT`.impter_31 - 7.5949895615866385) / 5.883009512311774 AS scaler_31, (`ADS_imp_1_OUT`.impter_32 - 2.337508698677801) / 3.7555163121005397 AS scaler_32, (`ADS_imp_1_OUT`.impter_33 - 0.0027835768963117608) / 0.05268613286220741 AS scaler_33, (`ADS_imp_1_OUT`.impter_34 - 0.0) / 1.0 AS scaler_34, (`ADS_imp_1_OUT`.impter_35 - 2.3319415448851775) / 3.520361676701363 AS scaler_35, (`ADS_imp_1_OUT`.impter_36 - 7.608907446068198) / 6.337427127154217 AS scaler_36, (`ADS_imp_1_OUT`.impter_37 - 9.028531663187195) / 6.255398792908601 AS scaler_37, (`ADS_imp_1_OUT`.impter_38 - 10.270006958942242) / 5.918328236602452 AS scaler_38, (`ADS_imp_1_OUT`.impter_39 - 8.806541405706332) / 5.862505948752236 AS scaler_39, (`ADS_imp_1_OUT`.impter_40 - 2.8754349338900487) / 3.521551388880749 AS scaler_40, (`ADS_imp_1_OUT`.impter_41 - 0.0) / 1.0 AS scaler_41, (`ADS_imp_1_OUT`.impter_42 - 0.010438413361169102) / 0.16012222149778146 AS scaler_42, (`ADS_imp_1_OUT`.impter_43 - 1.5755045233124565) / 3.0148158575591246 AS scaler_43, (`ADS_imp_1_OUT`.impter_44 - 6.858733472512178) / 6.5422093407655435 AS scaler_44, (`ADS_imp_1_OUT`.impter_45 - 7.258872651356993) / 6.490917554434448 AS scaler_45, (`ADS_imp_1_OUT`.impter_46 - 7.710508002783577) / 6.292873620677289 AS scaler_46, (`ADS_imp_1_OUT`.impter_47 - 8.281141266527488) / 5.713309549149251 AS scaler_47, (`ADS_imp_1_OUT`.impter_48 - 3.432150313152401) / 4.326500259143386 AS scaler_48, (`ADS_imp_1_OUT`.impter_49 - 0.031315240083507306) / 0.33325414598330405 AS scaler_49, (`ADS_imp_1_OUT`.impter_50 - 0.009046624913013222) / 0.22827664222063312 AS scaler_50, (`ADS_imp_1_OUT`.impter_51 - 0.708420320111343) / 1.7630768232183456 AS scaler_51, (`ADS_imp_1_OUT`.impter_52 - 7.492693110647181) / 5.6747357473393345 AS scaler_52, (`ADS_imp_1_OUT`.impter_53 - 9.529575504523313) / 5.230790022511772 AS scaler_53, (`ADS_imp_1_OUT`.impter_54 - 9.541405706332638) / 5.2515555146947035 AS scaler_54, (`ADS_imp_1_OUT`.impter_55 - 8.754349338900488) / 6.0343648977583975 AS scaler_55, (`ADS_imp_1_OUT`.impter_56 - 3.7397355601948505) / 4.953834269857758 AS scaler_56, (`ADS_imp_1_OUT`.impter_57 - 0.21920668058455114) / 1.0257471420649142 AS scaler_57, (`ADS_imp_1_OUT`.impter_58 - 0.0006958942240779402) / 0.02637062675225659 AS scaler_58, (`ADS_imp_1_OUT`.impter_59 - 0.26374391092553934) / 0.893431165157604 AS scaler_59, (`ADS_imp_1_OUT`.impter_60 - 5.474599860821155) / 5.06659361292149 AS scaler_60, (`ADS_imp_1_OUT`.impter_61 - 12.097425191370911) / 4.359965306758356 AS scaler_61, (`ADS_imp_1_OUT`.impter_62 - 11.8580375782881) / 4.889242282258171 AS scaler_62, (`ADS_imp_1_OUT`.impter_63 - 6.716771050800278) / 5.87255780345831 AS scaler_63, (`ADS_imp_1_OUT`.impter_64 - 2.0869867780097424) / 4.12826085471658 AS scaler_64, (`ADS_imp_1_OUT`.impter_65 - 0.3862212943632568) / 1.915153500596726 AS scaler_65 
FROM `TMP_20180417025619_OFHP28_ADS_imp_1_OUT` AS `ADS_imp_1_OUT`) AS `ADS_sca_2_OUT`) AS `U`

-- Model deployment code

WITH linear_input AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, `ADS_sca_2_OUT`.scaler_2 AS scaler_2, `ADS_sca_2_OUT`.scaler_3 AS scaler_3, `ADS_sca_2_OUT`.scaler_4 AS scaler_4, `ADS_sca_2_OUT`.scaler_5 AS scaler_5, `ADS_sca_2_OUT`.scaler_6 AS scaler_6, `ADS_sca_2_OUT`.scaler_7 AS scaler_7, `ADS_sca_2_OUT`.scaler_8 AS scaler_8, `ADS_sca_2_OUT`.scaler_9 AS scaler_9, `ADS_sca_2_OUT`.scaler_10 AS scaler_10, `ADS_sca_2_OUT`.scaler_11 AS scaler_11, `ADS_sca_2_OUT`.scaler_12 AS scaler_12, `ADS_sca_2_OUT`.scaler_13 AS scaler_13, `ADS_sca_2_OUT`.scaler_14 AS scaler_14, `ADS_sca_2_OUT`.scaler_15 AS scaler_15, `ADS_sca_2_OUT`.scaler_16 AS scaler_16, `ADS_sca_2_OUT`.scaler_17 AS scaler_17, `ADS_sca_2_OUT`.scaler_18 AS scaler_18, `ADS_sca_2_OUT`.scaler_19 AS scaler_19, `ADS_sca_2_OUT`.scaler_20 AS scaler_20, `ADS_sca_2_OUT`.scaler_21 AS scaler_21, `ADS_sca_2_OUT`.scaler_22 AS scaler_22, `ADS_sca_2_OUT`.scaler_23 AS scaler_23, `ADS_sca_2_OUT`.scaler_24 AS scaler_24, `ADS_sca_2_OUT`.scaler_25 AS scaler_25, `ADS_sca_2_OUT`.scaler_26 AS scaler_26, `ADS_sca_2_OUT`.scaler_27 AS scaler_27, `ADS_sca_2_OUT`.scaler_28 AS scaler_28, `ADS_sca_2_OUT`.scaler_29 AS scaler_29, `ADS_sca_2_OUT`.scaler_30 AS scaler_30, `ADS_sca_2_OUT`.scaler_31 AS scaler_31, `ADS_sca_2_OUT`.scaler_32 AS scaler_32, `ADS_sca_2_OUT`.scaler_33 AS scaler_33, `ADS_sca_2_OUT`.scaler_34 AS scaler_34, `ADS_sca_2_OUT`.scaler_35 AS scaler_35, `ADS_sca_2_OUT`.scaler_36 AS scaler_36, `ADS_sca_2_OUT`.scaler_37 AS scaler_37, `ADS_sca_2_OUT`.scaler_38 AS scaler_38, `ADS_sca_2_OUT`.scaler_39 AS scaler_39, `ADS_sca_2_OUT`.scaler_40 AS scaler_40, `ADS_sca_2_OUT`.scaler_41 AS scaler_41, `ADS_sca_2_OUT`.scaler_42 AS scaler_42, `ADS_sca_2_OUT`.scaler_43 AS scaler_43, `ADS_sca_2_OUT`.scaler_44 AS scaler_44, `ADS_sca_2_OUT`.scaler_45 AS scaler_45, `ADS_sca_2_OUT`.scaler_46 AS scaler_46, `ADS_sca_2_OUT`.scaler_47 AS scaler_47, `ADS_sca_2_OUT`.scaler_48 AS scaler_48, `ADS_sca_2_OUT`.scaler_49 AS scaler_49, `ADS_sca_2_OUT`.scaler_50 AS scaler_50, `ADS_sca_2_OUT`.scaler_51 AS scaler_51, `ADS_sca_2_OUT`.scaler_52 AS scaler_52, `ADS_sca_2_OUT`.scaler_53 AS scaler_53, `ADS_sca_2_OUT`.scaler_54 AS scaler_54, `ADS_sca_2_OUT`.scaler_55 AS scaler_55, `ADS_sca_2_OUT`.scaler_56 AS scaler_56, `ADS_sca_2_OUT`.scaler_57 AS scaler_57, `ADS_sca_2_OUT`.scaler_58 AS scaler_58, `ADS_sca_2_OUT`.scaler_59 AS scaler_59, `ADS_sca_2_OUT`.scaler_60 AS scaler_60, `ADS_sca_2_OUT`.scaler_61 AS scaler_61, `ADS_sca_2_OUT`.scaler_62 AS scaler_62, `ADS_sca_2_OUT`.scaler_63 AS scaler_63, `ADS_sca_2_OUT`.scaler_64 AS scaler_64, `ADS_sca_2_OUT`.scaler_65 AS scaler_65 
FROM `TMP_20180417025619_7UHRK4_ADS_sca_2_OUT` AS `ADS_sca_2_OUT`), 
linear_model_cte AS 
(SELECT linear_input.`KEY` AS `KEY`, 0.0 * linear_input.scaler_2 + 0.04477020939158374 * linear_input.scaler_3 + 0.04728165554753349 * linear_input.scaler_4 + 0.31519796870374595 * linear_input.scaler_5 + -0.09363099172492723 * linear_input.scaler_6 + -0.6687960498167628 * linear_input.scaler_7 + -0.1859732524874435 * linear_input.scaler_8 + 0.002265991604016111 * linear_input.scaler_9 + 5.3519989809478765e-05 * linear_input.scaler_10 + -0.20325844610676788 * linear_input.scaler_11 + -0.003125979117517645 * linear_input.scaler_12 + 0.11091005277733992 * linear_input.scaler_13 + 0.6303100090092021 * linear_input.scaler_14 + 0.6887626457763095 * linear_input.scaler_15 + 0.00703266945139163 * linear_input.scaler_16 + -0.18713129662393888 * linear_input.scaler_17 + 0.07316688624793821 * linear_input.scaler_18 + 0.19418715680926205 * linear_input.scaler_19 + 0.07192500681892883 * linear_input.scaler_20 + -0.04495956764378501 * linear_input.scaler_21 + -0.40319114113403826 * linear_input.scaler_22 + 0.5563310868606176 * linear_input.scaler_23 + -0.006026414126456258 * linear_input.scaler_24 + 0.005905691789647596 * linear_input.scaler_25 + 0.06658588626338231 * linear_input.scaler_26 + 0.17985332031855072 * linear_input.scaler_27 + 0.10618947387088676 * linear_input.scaler_28 + -0.47522779296606876 * linear_input.scaler_29 + -1.052072154769856 * linear_input.scaler_30 + -0.12154890729526308 * linear_input.scaler_31 + 0.19832831761219866 * linear_input.scaler_32 + 0.05102660486300659 * linear_input.scaler_33 + 0.0 * linear_input.scaler_34 + 0.19665217470626958 * linear_input.scaler_35 + 0.3623811157260694 * linear_input.scaler_36 + -0.5618733919201456 * linear_input.scaler_37 + -0.6909700598113448 * linear_input.scaler_38 + -0.11978633539987993 * linear_input.scaler_39 + 0.05387319868512964 * linear_input.scaler_40 + 0.0 * linear_input.scaler_41 + -0.021884650795611214 * linear_input.scaler_42 + -0.18647544467784766 * linear_input.scaler_43 + 0.9340610671372629 * linear_input.scaler_44 + -0.8893211488040333 * linear_input.scaler_45 + -0.6472165594653181 * linear_input.scaler_46 + 0.022292981529975487 * linear_input.scaler_47 + 0.16206099141113994 * linear_input.scaler_48 + 0.16795821270167308 * linear_input.scaler_49 + -0.05834502155228175 * linear_input.scaler_50 + -0.23359793566496953 * linear_input.scaler_51 + 0.33334932016517277 * linear_input.scaler_52 + 0.17814295574571384 * linear_input.scaler_53 + 0.46878104749021043 * linear_input.scaler_54 + 0.11199900009502228 * linear_input.scaler_55 + -0.49619361993332856 * linear_input.scaler_56 + -0.28744505845995 * linear_input.scaler_57 + 0.06604708297725052 * linear_input.scaler_58 + -0.09533203168945734 * linear_input.scaler_59 + -0.35826644605944463 * linear_input.scaler_60 + 0.23033485426861547 * linear_input.scaler_61 + -0.5693383498844328 * linear_input.scaler_62 + -0.08900833696736192 * linear_input.scaler_63 + -0.05162992135733972 * linear_input.scaler_64 + -0.12836666114767603 * linear_input.scaler_65 + -5.809312984434714 AS `Score_0`, 0.0 * linear_input.scaler_2 + 0.0812229440769449 * linear_input.scaler_3 + 0.08616726263237873 * linear_input.scaler_4 + 0.30088460507562803 * linear_input.scaler_5 + -1.2040752762123461 * linear_input.scaler_6 + 1.0302188531863605 * linear_input.scaler_7 + -0.07959193206447028 * linear_input.scaler_8 + -0.07929543338656574 * linear_input.scaler_9 + 0.11284148499076335 * linear_input.scaler_10 + -1.2962583918299098 * linear_input.scaler_11 + -1.0548220314043617 * linear_input.scaler_12 + -0.3930937451967947 * linear_input.scaler_13 + 0.4242887854742509 * linear_input.scaler_14 + 0.5621600146361938 * linear_input.scaler_15 + -0.6461697154362726 * linear_input.scaler_16 + 0.02838718714592598 * linear_input.scaler_17 + 0.01461817144284659 * linear_input.scaler_18 + 0.5777017614255779 * linear_input.scaler_19 + 0.2069612391002294 * linear_input.scaler_20 + 1.606701521710451 * linear_input.scaler_21 + 1.0652096011493628 * linear_input.scaler_22 + -0.448630581375639 * linear_input.scaler_23 + 0.2723245614607652 * linear_input.scaler_24 + -0.14860054576832404 * linear_input.scaler_25 + -0.1289908799613887 * linear_input.scaler_26 + -0.06589693738813664 * linear_input.scaler_27 + 0.2703365404418883 * linear_input.scaler_28 + 0.5841936975379782 * linear_input.scaler_29 + 0.07867720506529337 * linear_input.scaler_30 + 0.28438515182361823 * linear_input.scaler_31 + -0.4065059865384487 * linear_input.scaler_32 + 0.13509780699348745 * linear_input.scaler_33 + 0.0 * linear_input.scaler_34 + -0.1845295400380239 * linear_input.scaler_35 + 0.26167925718884666 * linear_input.scaler_36 + -0.3507799204899708 * linear_input.scaler_37 + 0.37180980105809314 * linear_input.scaler_38 + -0.16771426856727012 * linear_input.scaler_39 + -0.38309274481707645 * linear_input.scaler_40 + 0.0 * linear_input.scaler_41 + 0.14435776463568872 * linear_input.scaler_42 + -0.7911319300805987 * linear_input.scaler_43 + -0.32084376294981476 * linear_input.scaler_44 + 0.22110533524823733 * linear_input.scaler_45 + 0.06464218362429322 * linear_input.scaler_46 + -0.5678280095330374 * linear_input.scaler_47 + -0.4953406067085377 * linear_input.scaler_48 + -0.20108401459996517 * linear_input.scaler_49 + 0.015008719865166324 * linear_input.scaler_50 + -0.13448427216032413 * linear_input.scaler_51 + -0.2734611735220546 * linear_input.scaler_52 + 0.5554363595176928 * linear_input.scaler_53 + 0.26581911647732204 * linear_input.scaler_54 + -0.013078613057656677 * linear_input.scaler_55 + -0.4204550085353789 * linear_input.scaler_56 + 0.2112543943106622 * linear_input.scaler_57 + -0.05619309646047118 * linear_input.scaler_58 + -0.04572426176936078 * linear_input.scaler_59 + -0.28402511580530576 * linear_input.scaler_60 + 0.10135777098697842 * linear_input.scaler_61 + 0.41806837439338557 * linear_input.scaler_62 + 0.4386216426628025 * linear_input.scaler_63 + 0.0224100516001284 * linear_input.scaler_64 + 0.05347748604890945 * linear_input.scaler_65 + -6.482235422963445 AS `Score_1`, 0.0 * linear_input.scaler_2 + -0.14591488642736883 * linear_input.scaler_3 + -0.08649004941750767 * linear_input.scaler_4 + -0.03348149738858715 * linear_input.scaler_5 + 0.08135932445741643 * linear_input.scaler_6 + -0.38558808359008934 * linear_input.scaler_7 + -0.16399616952820584 * linear_input.scaler_8 + -0.07284515137100887 * linear_input.scaler_9 + -0.0683981978712254 * linear_input.scaler_10 + 0.4674375856398204 * linear_input.scaler_11 + 0.32895350108544746 * linear_input.scaler_12 + -0.06028801007261455 * linear_input.scaler_13 + 0.42267487544837073 * linear_input.scaler_14 + -0.2250242357918204 * linear_input.scaler_15 + 0.0969646720855503 * linear_input.scaler_16 + 0.010615660207649261 * linear_input.scaler_17 + -0.003626924804225536 * linear_input.scaler_18 + -0.09522451232355766 * linear_input.scaler_19 + 0.2903016754871738 * linear_input.scaler_20 + -0.397118536653536 * linear_input.scaler_21 + 0.39470091740725066 * linear_input.scaler_22 + -0.11869322485666219 * linear_input.scaler_23 + 0.341022304446455 * linear_input.scaler_24 + 0.38861503877902676 * linear_input.scaler_25 + 0.07907997989988827 * linear_input.scaler_26 + -0.34476803998935396 * linear_input.scaler_27 + -0.7415936870762041 * linear_input.scaler_28 + -1.2981936274170922 * linear_input.scaler_29 + -0.30370393160910614 * linear_input.scaler_30 + 0.41531280409204735 * linear_input.scaler_31 + 0.07824132464293453 * linear_input.scaler_32 + 0.04855754691259341 * linear_input.scaler_33 + 0.0 * linear_input.scaler_34 + -0.3860612784809578 * linear_input.scaler_35 + -0.9017555667075116 * linear_input.scaler_36 + -0.06444312319230228 * linear_input.scaler_37 + -0.1280691298542374 * linear_input.scaler_38 + -0.2721794455567588 * linear_input.scaler_39 + -0.7061005038146929 * linear_input.scaler_40 + 0.0 * linear_input.scaler_41 + -0.027520793522269823 * linear_input.scaler_42 + 0.3936647202492765 * linear_input.scaler_43 + 0.3143407046525526 * linear_input.scaler_44 + 1.135462868536382 * linear_input.scaler_45 + -1.0264888577357851 * linear_input.scaler_46 + -0.9830224903295994 * linear_input.scaler_47 + -0.9315713318159252 * linear_input.scaler_48 + 0.21329037259952027 * linear_input.scaler_49 + -0.0832022236682783 * linear_input.scaler_50 + 0.34887883444600537 * linear_input.scaler_51 + -0.06895986651181014 * linear_input.scaler_52 + 0.7958542760259856 * linear_input.scaler_53 + 0.7557812491265249 * linear_input.scaler_54 + 0.8861483633135033 * linear_input.scaler_55 + 0.6644541066915916 * linear_input.scaler_56 + -0.088652083370734 * linear_input.scaler_57 + 0.15746484325659424 * linear_input.scaler_58 + 0.17388172614630287 * linear_input.scaler_59 + 0.05030798744024512 * linear_input.scaler_60 + 0.1989771387262647 * linear_input.scaler_61 + 0.05459613243469837 * linear_input.scaler_62 + 0.386293255714784 * linear_input.scaler_63 + 0.681599258198855 * linear_input.scaler_64 + 0.02867681194379389 * linear_input.scaler_65 + -5.917815422607727 AS `Score_2`, 0.0 * linear_input.scaler_2 + 0.16044369048285786 * linear_input.scaler_3 + -0.8156041309934848 * linear_input.scaler_4 + 0.1890306240322397 * linear_input.scaler_5 + 0.7702150295775292 * linear_input.scaler_6 + -0.27698141455153613 * linear_input.scaler_7 + -0.29115377784765495 * linear_input.scaler_8 + 0.0577911303328886 * linear_input.scaler_9 + -0.08014475583763608 * linear_input.scaler_10 + -0.2176855429639301 * linear_input.scaler_11 + 0.44224563113832793 * linear_input.scaler_12 + 0.14678359382180092 * linear_input.scaler_13 + -0.1346822262999535 * linear_input.scaler_14 + 0.8177121370264738 * linear_input.scaler_15 + 0.8022747563181252 * linear_input.scaler_16 + 0.013964277609951413 * linear_input.scaler_17 + 0.0009532761772371815 * linear_input.scaler_18 + -0.12387444208250922 * linear_input.scaler_19 + -1.103856459009016 * linear_input.scaler_20 + -0.8968721885006913 * linear_input.scaler_21 + 0.9022452126901069 * linear_input.scaler_22 + -0.5804511573724103 * linear_input.scaler_23 + 0.08054326560817299 * linear_input.scaler_24 + 0.0514896388831834 * linear_input.scaler_25 + 0.13674810911923815 * linear_input.scaler_26 + -0.4677639916553575 * linear_input.scaler_27 + -0.7454982590074194 * linear_input.scaler_28 + -0.19003886153343477 * linear_input.scaler_29 + 0.11397875510954972 * linear_input.scaler_30 + -1.2322891949690673 * linear_input.scaler_31 + -1.1634127773799254 * linear_input.scaler_32 + 0.16631517126100512 * linear_input.scaler_33 + 0.0 * linear_input.scaler_34 + 0.10602995951006698 * linear_input.scaler_35 + -0.42404469568857944 * linear_input.scaler_36 + -0.20281747170594455 * linear_input.scaler_37 + 0.1484895800458599 * linear_input.scaler_38 + 0.07636720074221376 * linear_input.scaler_39 + -0.15789448300639086 * linear_input.scaler_40 + 0.0 * linear_input.scaler_41 + 0.20016992286216242 * linear_input.scaler_42 + 0.31879886804262914 * linear_input.scaler_43 + -0.6493120060055658 * linear_input.scaler_44 + -1.5460317072338006 * linear_input.scaler_45 + 0.6038318230757251 * linear_input.scaler_46 + 0.8854094956456681 * linear_input.scaler_47 + 1.0618064584393356 * linear_input.scaler_48 + 0.023989769312836234 * linear_input.scaler_49 + -0.0021222447487458658 * linear_input.scaler_50 + -0.10317082932752272 * linear_input.scaler_51 + 0.046793625366005884 * linear_input.scaler_52 + -0.5758982479850453 * linear_input.scaler_53 + 0.15733950034743574 * linear_input.scaler_54 + -0.039081697577213324 * linear_input.scaler_55 + 0.38255765675400527 * linear_input.scaler_56 + -0.12133923037170384 * linear_input.scaler_57 + 0.08689698924291234 * linear_input.scaler_58 + 0.16354974177536052 * linear_input.scaler_59 + 0.4648035124427296 * linear_input.scaler_60 + -0.015015209353445146 * linear_input.scaler_61 + 0.20799579363153578 * linear_input.scaler_62 + 0.004764577017041595 * linear_input.scaler_63 + -0.08856722934704844 * linear_input.scaler_64 + -0.3385107884022281 * linear_input.scaler_65 + -5.986352042000449 AS `Score_3`, 0.0 * linear_input.scaler_2 + 0.03859333195108708 * linear_input.scaler_3 + -0.35088894309749147 * linear_input.scaler_4 + -0.7850833832490945 * linear_input.scaler_5 + -0.20914263588726795 * linear_input.scaler_6 + -1.0002562081371962 * linear_input.scaler_7 + -0.46759230479907454 * linear_input.scaler_8 + 0.07927600729497758 * linear_input.scaler_9 + 0.0032157442424528048 * linear_input.scaler_10 + 0.40594560598536067 * linear_input.scaler_11 + -0.24911894954302657 * linear_input.scaler_12 + -0.3517358596679271 * linear_input.scaler_13 + -0.7959571045057652 * linear_input.scaler_14 + -0.6397123284176446 * linear_input.scaler_15 + -0.32476990517240245 * linear_input.scaler_16 + 0.012559206466687156 * linear_input.scaler_17 + 0.026921570136943962 * linear_input.scaler_18 + 0.29344940558968574 * linear_input.scaler_19 + 0.4984936725114234 * linear_input.scaler_20 + 0.3674811436181204 * linear_input.scaler_21 + 0.022390328304381524 * linear_input.scaler_22 + 0.5506118024062906 * linear_input.scaler_23 + -0.07257783361821257 * linear_input.scaler_24 + 0.12858551696212375 * linear_input.scaler_25 + 0.17823942226532488 * linear_input.scaler_26 + -0.08745821598726962 * linear_input.scaler_27 + 0.515776212005284 * linear_input.scaler_28 + -0.16601475229166754 * linear_input.scaler_29 + -0.004172282929927067 * linear_input.scaler_30 + 0.004378901170745664 * linear_input.scaler_31 + 0.8523876629319814 * linear_input.scaler_32 + 0.3104309273113982 * linear_input.scaler_33 + 0.0 * linear_input.scaler_34 + 0.3793828677644371 * linear_input.scaler_35 + 0.07933785826839966 * linear_input.scaler_36 + -0.02701630498779441 * linear_input.scaler_37 + 0.5037839805509898 * linear_input.scaler_38 + 0.3493599388079791 * linear_input.scaler_39 + 0.32474057005549994 * linear_input.scaler_40 + 0.0 * linear_input.scaler_41 + 0.3827291135971304 * linear_input.scaler_42 + 0.7794586766643982 * linear_input.scaler_43 + -0.4921261637364983 * linear_input.scaler_44 + 0.9995259545330655 * linear_input.scaler_45 + 0.2196047624122046 * linear_input.scaler_46 + 0.2966734266444942 * linear_input.scaler_47 + -0.06395593390669684 * linear_input.scaler_48 + -0.03980840736140213 * linear_input.scaler_49 + 0.13972150650920012 * linear_input.scaler_50 + 0.48075448854789565 * linear_input.scaler_51 + -0.7072605900334769 * linear_input.scaler_52 + -0.16591956841495734 * linear_input.scaler_53 + 0.12714689709500512 * linear_input.scaler_54 + -0.6842960832769813 * linear_input.scaler_55 + -0.6104195916143169 * linear_input.scaler_56 + 0.15085761863449815 * linear_input.scaler_57 + -0.11027501947679139 * linear_input.scaler_58 + -0.12365232769222773 * linear_input.scaler_59 + -0.04259629820621587 * linear_input.scaler_60 + -0.327775433338097 * linear_input.scaler_61 + -0.0076882467912069855 * linear_input.scaler_62 + -0.5894751536489823 * linear_input.scaler_63 + 0.07217205667239548 * linear_input.scaler_64 + 0.045520126336505436 * linear_input.scaler_65 + -5.814042483063878 AS `Score_4`, 0.0 * linear_input.scaler_2 + -0.06789659833849987 * linear_input.scaler_3 + 0.7764535679586988 * linear_input.scaler_4 + -0.2460040739199521 * linear_input.scaler_5 + 0.5337915170454756 * linear_input.scaler_6 + 0.7108145739452523 * linear_input.scaler_7 + 0.6347393749132342 * linear_input.scaler_8 + -0.28918254991070264 * linear_input.scaler_9 + 0.06945643512580278 * linear_input.scaler_10 + -0.13597335360972887 * linear_input.scaler_11 + 0.18000656689494193 * linear_input.scaler_12 + 0.04415327318807944 * linear_input.scaler_13 + 0.2553627966896888 * linear_input.scaler_14 + -0.49026312873461425 * linear_input.scaler_15 + -0.06441559390083929 * linear_input.scaler_16 + 0.07918147458705903 * linear_input.scaler_17 + -0.05692862121076396 * linear_input.scaler_18 + 0.10334599040552579 * linear_input.scaler_19 + 0.4684499003271261 * linear_input.scaler_20 + -0.14355469102272841 * linear_input.scaler_21 + -1.4069703332754346 * linear_input.scaler_22 + -1.5949305116816281 * linear_input.scaler_23 + -1.1926999675664538 * linear_input.scaler_24 + 0.09963764356563545 * linear_input.scaler_25 + -0.13756555213775915 * linear_input.scaler_26 + 0.33412942088331515 * linear_input.scaler_27 + 0.4860495848917259 * linear_input.scaler_28 + 0.20003790083624232 * linear_input.scaler_29 + 0.5761734936465833 * linear_input.scaler_30 + 0.030214812006462394 * linear_input.scaler_31 + -0.32504153486602716 * linear_input.scaler_32 + -0.061079513962393854 * linear_input.scaler_33 + 0.0 * linear_input.scaler_34 + -0.165050461240139 * linear_input.scaler_35 + 0.4553203348723551 * linear_input.scaler_36 + -0.35008904834134413 * linear_input.scaler_37 + -0.3973581981379872 * linear_input.scaler_38 + -0.24869683929937755 * linear_input.scaler_39 + 0.03621490034650999 * linear_input.scaler_40 + 0.0 * linear_input.scaler_41 + 0.02078707314783615 * linear_input.scaler_42 + -0.19260204098320494 * linear_input.scaler_43 + -0.9805861854821935 * linear_input.scaler_44 + -0.33120524359962533 * linear_input.scaler_45 + -0.14243501340279952 * linear_input.scaler_46 + 0.05991358194883993 * linear_input.scaler_47 + 0.03307444276988 * linear_input.scaler_48 + -0.07424164946109857 * linear_input.scaler_49 + 0.1212837846366655 * linear_input.scaler_50 + -0.06480802903958266 * linear_input.scaler_51 + -0.076400506004656 * linear_input.scaler_52 + -0.28773270004167606 * linear_input.scaler_53 + 0.14198274154219193 * linear_input.scaler_54 + -0.21328932199607828 * linear_input.scaler_55 + -0.2771545612016335 * linear_input.scaler_56 + 0.1986921714621818 * linear_input.scaler_57 + 0.020796582626586384 * linear_input.scaler_58 + 0.1769676886272765 * linear_input.scaler_59 + 0.4378710526045286 * linear_input.scaler_60 + 0.5146728539474174 * linear_input.scaler_61 + -0.09459824170941913 * linear_input.scaler_62 + -0.26457735876374305 * linear_input.scaler_63 + -0.2510764191937221 * linear_input.scaler_64 + -0.23226353791422 * linear_input.scaler_65 + -5.669706361961568 AS `Score_5`, 0.0 * linear_input.scaler_2 + -0.07064021386332912 * linear_input.scaler_3 + -0.4554240220682539 * linear_input.scaler_4 + 0.02316168005348865 * linear_input.scaler_5 + -0.2068015394917455 * linear_input.scaler_6 + -0.0030562300958119556 * linear_input.scaler_7 + -0.2979672034927475 * linear_input.scaler_8 + 0.1364177919229046 * linear_input.scaler_9 + 0.04702406929276581 * linear_input.scaler_10 + -0.2822533203338617 * linear_input.scaler_11 + -0.20676128999119295 * linear_input.scaler_12 + -0.1028478293445327 * linear_input.scaler_13 + -0.3891073384159638 * linear_input.scaler_14 + -0.25677156494636955 * linear_input.scaler_15 + 0.3140088184520657 * linear_input.scaler_16 + 0.050836761371745136 * linear_input.scaler_17 + 0.005328413705446738 * linear_input.scaler_18 + -0.3361319866778697 * linear_input.scaler_19 + 0.13012028175684434 * linear_input.scaler_20 + -0.10819940927782705 * linear_input.scaler_21 + -0.666079000971103 * linear_input.scaler_22 + -1.339108881108871 * linear_input.scaler_23 + -0.1957679036308062 * linear_input.scaler_24 + 0.07504151402300235 * linear_input.scaler_25 + 0.019047588339872003 * linear_input.scaler_26 + -0.08693243490094348 * linear_input.scaler_27 + 0.06278080967749919 * linear_input.scaler_28 + 0.09884110633498552 * linear_input.scaler_29 + -0.20650703638993217 * linear_input.scaler_30 + -0.042574822603695085 * linear_input.scaler_31 + -0.6768930830773842 * linear_input.scaler_32 + -0.0005143870835994141 * linear_input.scaler_33 + 0.0 * linear_input.scaler_34 + 0.271024183205403 * linear_input.scaler_35 + 0.5098324639687056 * linear_input.scaler_36 + 0.3870483455018345 * linear_input.scaler_37 + -0.03789140934701008 * linear_input.scaler_38 + 0.1310818540994269 * linear_input.scaler_39 + -0.1294702766333263 * linear_input.scaler_40 + 0.0 * linear_input.scaler_41 + -0.04373897976946388 * linear_input.scaler_42 + -0.6643147870954091 * linear_input.scaler_43 + 0.9299473320676891 * linear_input.scaler_44 + -0.012263035919891032 * linear_input.scaler_45 + 0.44940595780042464 * linear_input.scaler_46 + 0.08402680321546444 * linear_input.scaler_47 + 0.6852189318752302 * linear_input.scaler_48 + 0.3974772478890692 * linear_input.scaler_49 + 0.060128638751313315 * linear_input.scaler_50 + -0.171262762436002 * linear_input.scaler_51 + 0.5020309522462612 * linear_input.scaler_52 + 0.7179824217236865 * linear_input.scaler_53 + -0.5838371466092404 * linear_input.scaler_54 + 0.6291473623373695 * linear_input.scaler_55 + 0.43169085422277254 * linear_input.scaler_56 + -0.4106726038141533 * linear_input.scaler_57 + 0.06484281737830003 * linear_input.scaler_58 + -0.08808624268801253 * linear_input.scaler_59 + -0.22922319024978266 * linear_input.scaler_60 + -0.24462468819494346 * linear_input.scaler_61 + -0.23052854717726926 * linear_input.scaler_62 + 0.5224993284442941 * linear_input.scaler_63 + -0.15229036040484756 * linear_input.scaler_64 + -0.09915748431628404 * linear_input.scaler_65 + -5.880197657053139 AS `Score_6`, 0.0 * linear_input.scaler_2 + 0.14826582225855567 * linear_input.scaler_3 + 0.16118937113339213 * linear_input.scaler_4 + 0.49658398760888034 * linear_input.scaler_5 + 0.1707435385841955 * linear_input.scaler_6 + 0.457032387941496 * linear_input.scaler_7 + 0.370706683545013 * linear_input.scaler_8 + 0.16379639911838506 * linear_input.scaler_9 + 0.048150687931517486 * linear_input.scaler_10 + -0.01381744236827298 * linear_input.scaler_11 + 0.545858008593778 * linear_input.scaler_12 + 0.12711687196320395 * linear_input.scaler_13 + 1.1252225168598107 * linear_input.scaler_14 + 0.12504490301610913 * linear_input.scaler_15 + -0.14949242533140508 * linear_input.scaler_16 + 0.08704106305612806 * linear_input.scaler_17 + 0.04201521465231871 * linear_input.scaler_18 + -0.3245993437414364 * linear_input.scaler_19 + -0.6715957067582519 * linear_input.scaler_20 + -0.7065780653788379 * linear_input.scaler_21 + -0.3620791625113501 * linear_input.scaler_22 + 0.10620208214670195 * linear_input.scaler_23 + 0.2075048264946161 * linear_input.scaler_24 + -0.0307690909779192 * linear_input.scaler_25 + 0.0632945172995081 * linear_input.scaler_26 + -0.7769136425855171 * linear_input.scaler_27 + -0.04808069756009051 * linear_input.scaler_28 + -0.7458949819001558 * linear_input.scaler_29 + -0.12841966721945272 * linear_input.scaler_30 + 0.2047234845169183 * linear_input.scaler_31 + 0.305101776487471 * linear_input.scaler_32 + -0.1856542064309807 * linear_input.scaler_33 + 0.0 * linear_input.scaler_34 + 0.1532069744972203 * linear_input.scaler_35 + 0.032257879886538894 * linear_input.scaler_36 + 0.2984496563585495 * linear_input.scaler_37 + 0.2958149694163609 * linear_input.scaler_38 + 0.6665581726848503 * linear_input.scaler_39 + 0.45872553233366353 * linear_input.scaler_40 + 0.0 * linear_input.scaler_41 + 0.028136086352938572 * linear_input.scaler_42 + -0.5217341829620206 * linear_input.scaler_43 + 0.2180271955553823 * linear_input.scaler_44 + -0.0037554995218992203 * linear_input.scaler_45 + 0.6768475090460554 * linear_input.scaler_46 + 0.13700129973657643 * linear_input.scaler_47 + -0.05038908761967401 * linear_input.scaler_48 + 0.028282166351524266 * linear_input.scaler_49 + 0.16172029010092112 * linear_input.scaler_50 + -0.16080793203817909 * linear_input.scaler_51 + 0.17646291618784574 * linear_input.scaler_52 + 0.2191134460928046 * linear_input.scaler_53 + -1.3251350649092044 * linear_input.scaler_54 + -1.179753509254788 * linear_input.scaler_55 + 0.01669011554551795 * linear_input.scaler_56 + 0.09479147174973934 * linear_input.scaler_57 + 0.03707848128092378 * linear_input.scaler_58 + -0.4559530103473085 * linear_input.scaler_59 + -0.24152375362560924 * linear_input.scaler_60 + -0.6507340374284689 * linear_input.scaler_61 + -0.6240691265211386 * linear_input.scaler_62 + -0.7317058059040182 * linear_input.scaler_63 + -0.3870155136888203 * linear_input.scaler_64 + 0.1715094228549225 * linear_input.scaler_65 + -5.805986737285208 AS `Score_7`, 0.0 * linear_input.scaler_2 + 0.2012408278285876 * linear_input.scaler_3 + 0.3583817827497258 * linear_input.scaler_4 + -0.76162346127909 * linear_input.scaler_5 + 0.10691375893253828 * linear_input.scaler_6 + 0.15551630677865685 * linear_input.scaler_7 + -0.8226248203255243 * linear_input.scaler_8 + 0.025234098769327612 * linear_input.scaler_9 + 0.038596261215573927 * linear_input.scaler_10 + -0.2625740839525911 * linear_input.scaler_11 + 0.6917095375126208 * linear_input.scaler_12 + 0.04344617133391355 * linear_input.scaler_13 + -0.6411925068624554 * linear_input.scaler_14 + 0.6279429287694276 * linear_input.scaler_15 + -0.021197371249760004 * linear_input.scaler_16 + 0.03777604986877569 * linear_input.scaler_17 + 0.19525581150226518 * linear_input.scaler_18 + 0.497920548765339 * linear_input.scaler_19 + 0.6357574403358502 * linear_input.scaler_20 + 0.3254874489143081 * linear_input.scaler_21 + -0.26525388644281306 * linear_input.scaler_22 + 0.6359472259073597 * linear_input.scaler_23 + 0.7562137639641014 * linear_input.scaler_24 + -0.22283178003604306 * linear_input.scaler_25 + -0.026215924691965493 * linear_input.scaler_26 + -0.13757954887530574 * linear_input.scaler_27 + -0.2299289894771663 * linear_input.scaler_28 + 0.9045552251529004 * linear_input.scaler_29 + 0.0008050824665634109 * linear_input.scaler_30 + 0.1287904316088287 * linear_input.scaler_31 + -0.857570292026303 * linear_input.scaler_32 + 0.01784632630196838 * linear_input.scaler_33 + 0.0 * linear_input.scaler_34 + -0.758464291854137 * linear_input.scaler_35 + -0.6993212060478206 * linear_input.scaler_36 + 1.8342201817462724 * linear_input.scaler_37 + 0.05466806745656721 * linear_input.scaler_38 + -0.4593689917447575 * linear_input.scaler_39 + -1.1454665033895017 * linear_input.scaler_40 + 0.0 * linear_input.scaler_41 + 0.06390586789089713 * linear_input.scaler_42 + 0.28836831001414076 * linear_input.scaler_43 + 1.0292981038904065 * linear_input.scaler_44 + 0.150546539934828 * linear_input.scaler_45 + 0.3427720243519473 * linear_input.scaler_46 + 0.5432947752953464 * linear_input.scaler_47 + 0.16320077245435485 * linear_input.scaler_48 + 0.013450358749168617 * linear_input.scaler_49 + 0.09517417700091146 * linear_input.scaler_50 + -0.06505110214156722 * linear_input.scaler_51 + 0.6029476557102278 * linear_input.scaler_52 + -0.836130030863534 * linear_input.scaler_53 + -0.7596301931046137 * linear_input.scaler_54 + 0.29293246685748553 * linear_input.scaler_55 + -0.16556940179482155 * linear_input.scaler_56 + -0.11248791559031861 * linear_input.scaler_57 + -0.042984373520057 * linear_input.scaler_58 + -0.14197051904941796 * linear_input.scaler_59 + -1.2195754148620916 * linear_input.scaler_60 + 0.24068262550372224 * linear_input.scaler_61 + 0.47807733960601817 * linear_input.scaler_62 + -0.870880970024964 * linear_input.scaler_63 + -0.2849831858522508 * linear_input.scaler_64 + 0.08576941055032511 * linear_input.scaler_65 + -5.600857660416532 AS `Score_8`, 0.0 * linear_input.scaler_2 + -0.1600074017844873 * linear_input.scaler_3 + -0.19723628240432486 * linear_input.scaler_4 + 0.35045053949986976 * linear_input.scaler_5 + -0.043966277008312606 * linear_input.scaler_6 + -0.5244784291764366 * linear_input.scaler_7 + -0.20692955023808754 * linear_input.scaler_8 + -0.07454024250235852 * linear_input.scaler_9 + -0.08429007985908654 * linear_input.scaler_10 + 0.43815583880745307 * linear_input.scaler_11 + 0.1419669574837479 * linear_input.scaler_12 + 0.15826562338356306 * linear_input.scaler_13 + 0.2257555178595223 * linear_input.scaler_14 + 0.07280243277995051 * linear_input.scaler_15 + 0.4782633442218913 * linear_input.scaler_16 + -0.01535493935420905 * linear_input.scaler_17 + -0.08417656558729672 * linear_input.scaler_18 + 0.11226314475919742 * linear_input.scaler_19 + 0.7782765379253638 * linear_input.scaler_20 + 0.5321628174942937 * linear_input.scaler_21 + 0.12331393464412731 * linear_input.scaler_22 + 1.758047067117637 * linear_input.scaler_23 + 0.04166428297888627 * linear_input.scaler_24 + -0.3639624323064181 * linear_input.scaler_25 + 0.045791348975663414 * linear_input.scaler_26 + -0.16198391878365717 * linear_input.scaler_27 + 0.6958495642096856 * linear_input.scaler_28 + 0.718938960460019 * linear_input.scaler_29 + 0.42821335929230697 * linear_input.scaler_30 + 1.0229447359721067 * linear_input.scaler_31 + -0.10600084908956343 * linear_input.scaler_32 + -0.08142133477270898 * linear_input.scaler_33 + 0.0 * linear_input.scaler_34 + -0.7334262418858895 * linear_input.scaler_35 + -0.35368777681292696 * linear_input.scaler_36 + 1.0541042811858834 * linear_input.scaler_37 + -1.2161246970403423 * linear_input.scaler_38 + -0.2707983404971974 * linear_input.scaler_39 + 0.11074011725831362 * linear_input.scaler_40 + 0.0 * linear_input.scaler_41 + 0.37388642557856916 * linear_input.scaler_42 + -0.0921229796183115 * linear_input.scaler_43 + -1.5605756555337795 * linear_input.scaler_44 + -2.2341794913050954 * linear_input.scaler_45 + -0.9206172621404007 * linear_input.scaler_46 + -0.34926751105125575 * linear_input.scaler_47 + -0.6262977150503034 * linear_input.scaler_48 + 0.08766564472812027 * linear_input.scaler_49 + 0.08385893116185715 * linear_input.scaler_50 + 0.26092856985289903 * linear_input.scaler_51 + -0.3395808866614929 * linear_input.scaler_52 + 0.2726908552982673 * linear_input.scaler_53 + -0.3430404835381519 * linear_input.scaler_54 + -0.7271632636627954 * linear_input.scaler_55 + 0.04228078350704733 * linear_input.scaler_56 + 0.13630119782725222 * linear_input.scaler_57 + 0.020658393180517404 * linear_input.scaler_58 + -0.14764331009245324 * linear_input.scaler_59 + -0.0879942428754711 * linear_input.scaler_60 + 0.0707230329727681 * linear_input.scaler_61 + 0.35614063349775654 * linear_input.scaler_62 + 0.08617364120302284 * linear_input.scaler_63 + 0.20415303965803333 * linear_input.scaler_64 + -0.2754137591771401 * linear_input.scaler_65 + -6.515161635337818 AS `Score_9` 
FROM linear_input), 
orig_cte AS 
(SELECT linear_model_cte.`KEY` AS `KEY`, linear_model_cte.`Score_0` AS `Score_0`, linear_model_cte.`Score_1` AS `Score_1`, linear_model_cte.`Score_2` AS `Score_2`, linear_model_cte.`Score_3` AS `Score_3`, linear_model_cte.`Score_4` AS `Score_4`, linear_model_cte.`Score_5` AS `Score_5`, linear_model_cte.`Score_6` AS `Score_6`, linear_model_cte.`Score_7` AS `Score_7`, linear_model_cte.`Score_8` AS `Score_8`, linear_model_cte.`Score_9` AS `Score_9`, (1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte.`Score_0`), 100.0)))) / (1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte.`Score_0`), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte.`Score_1`), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte.`Score_2`), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte.`Score_3`), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte.`Score_4`), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte.`Score_5`), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte.`Score_6`), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte.`Score_7`), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte.`Score_8`), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte.`Score_9`), 100.0)))) AS `Proba_0`, (1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte.`Score_1`), 100.0)))) / (1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte.`Score_0`), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte.`Score_1`), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte.`Score_2`), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte.`Score_3`), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte.`Score_4`), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte.`Score_5`), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte.`Score_6`), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte.`Score_7`), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte.`Score_8`), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte.`Score_9`), 100.0)))) AS `Proba_1`, (1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte.`Score_2`), 100.0)))) / (1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte.`Score_0`), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte.`Score_1`), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte.`Score_2`), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte.`Score_3`), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte.`Score_4`), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte.`Score_5`), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte.`Score_6`), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte.`Score_7`), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte.`Score_8`), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte.`Score_9`), 100.0)))) AS `Proba_2`, (1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte.`Score_3`), 100.0)))) / (1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte.`Score_0`), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte.`Score_1`), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte.`Score_2`), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte.`Score_3`), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte.`Score_4`), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte.`Score_5`), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte.`Score_6`), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte.`Score_7`), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte.`Score_8`), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte.`Score_9`), 100.0)))) AS `Proba_3`, (1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte.`Score_4`), 100.0)))) / (1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte.`Score_0`), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte.`Score_1`), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte.`Score_2`), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte.`Score_3`), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte.`Score_4`), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte.`Score_5`), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte.`Score_6`), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte.`Score_7`), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte.`Score_8`), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte.`Score_9`), 100.0)))) AS `Proba_4`, (1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte.`Score_5`), 100.0)))) / (1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte.`Score_0`), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte.`Score_1`), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte.`Score_2`), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte.`Score_3`), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte.`Score_4`), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte.`Score_5`), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte.`Score_6`), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte.`Score_7`), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte.`Score_8`), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte.`Score_9`), 100.0)))) AS `Proba_5`, (1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte.`Score_6`), 100.0)))) / (1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte.`Score_0`), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte.`Score_1`), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte.`Score_2`), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte.`Score_3`), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte.`Score_4`), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte.`Score_5`), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte.`Score_6`), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte.`Score_7`), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte.`Score_8`), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte.`Score_9`), 100.0)))) AS `Proba_6`, (1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte.`Score_7`), 100.0)))) / (1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte.`Score_0`), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte.`Score_1`), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte.`Score_2`), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte.`Score_3`), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte.`Score_4`), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte.`Score_5`), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte.`Score_6`), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte.`Score_7`), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte.`Score_8`), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte.`Score_9`), 100.0)))) AS `Proba_7`, (1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte.`Score_8`), 100.0)))) / (1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte.`Score_0`), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte.`Score_1`), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte.`Score_2`), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte.`Score_3`), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte.`Score_4`), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte.`Score_5`), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte.`Score_6`), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte.`Score_7`), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte.`Score_8`), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte.`Score_9`), 100.0)))) AS `Proba_8`, (1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte.`Score_9`), 100.0)))) / (1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte.`Score_0`), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte.`Score_1`), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte.`Score_2`), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte.`Score_3`), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte.`Score_4`), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte.`Score_5`), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte.`Score_6`), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte.`Score_7`), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte.`Score_8`), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte.`Score_9`), 100.0)))) AS `Proba_9`, NULL AS `LogProba_0`, NULL AS `LogProba_1`, NULL AS `LogProba_2`, NULL AS `LogProba_3`, NULL AS `LogProba_4`, NULL AS `LogProba_5`, NULL AS `LogProba_6`, NULL AS `LogProba_7`, NULL AS `LogProba_8`, NULL AS `LogProba_9`, CAST(NULL AS SIGNED INTEGER) AS `Decision`, NULL AS `DecisionProba` 
FROM linear_model_cte), 
score_class_union AS 
(SELECT scu.`KEY_u` AS `KEY_u`, scu.class AS class, scu.`LogProba` AS `LogProba`, scu.`Proba` AS `Proba`, scu.`Score` AS `Score` 
FROM (SELECT orig_cte.`KEY` AS `KEY_u`, 0 AS class, orig_cte.`LogProba_0` AS `LogProba`, orig_cte.`Proba_0` AS `Proba`, orig_cte.`Score_0` AS `Score` 
FROM orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY_u`, 1 AS class, orig_cte.`LogProba_1` AS `LogProba`, orig_cte.`Proba_1` AS `Proba`, orig_cte.`Score_1` AS `Score` 
FROM orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY_u`, 2 AS class, orig_cte.`LogProba_2` AS `LogProba`, orig_cte.`Proba_2` AS `Proba`, orig_cte.`Score_2` AS `Score` 
FROM orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY_u`, 3 AS class, orig_cte.`LogProba_3` AS `LogProba`, orig_cte.`Proba_3` AS `Proba`, orig_cte.`Score_3` AS `Score` 
FROM orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY_u`, 4 AS class, orig_cte.`LogProba_4` AS `LogProba`, orig_cte.`Proba_4` AS `Proba`, orig_cte.`Score_4` AS `Score` 
FROM orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY_u`, 5 AS class, orig_cte.`LogProba_5` AS `LogProba`, orig_cte.`Proba_5` AS `Proba`, orig_cte.`Score_5` AS `Score` 
FROM orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY_u`, 6 AS class, orig_cte.`LogProba_6` AS `LogProba`, orig_cte.`Proba_6` AS `Proba`, orig_cte.`Score_6` AS `Score` 
FROM orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY_u`, 7 AS class, orig_cte.`LogProba_7` AS `LogProba`, orig_cte.`Proba_7` AS `Proba`, orig_cte.`Score_7` AS `Score` 
FROM orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY_u`, 8 AS class, orig_cte.`LogProba_8` AS `LogProba`, orig_cte.`Proba_8` AS `Proba`, orig_cte.`Score_8` AS `Score` 
FROM orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY_u`, 9 AS class, orig_cte.`LogProba_9` AS `LogProba`, orig_cte.`Proba_9` AS `Proba`, orig_cte.`Score_9` AS `Score` 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte.`KEY` AS `KEY`, orig_cte.`Score_0` AS `Score_0`, orig_cte.`Score_1` AS `Score_1`, orig_cte.`Score_2` AS `Score_2`, orig_cte.`Score_3` AS `Score_3`, orig_cte.`Score_4` AS `Score_4`, orig_cte.`Score_5` AS `Score_5`, orig_cte.`Score_6` AS `Score_6`, orig_cte.`Score_7` AS `Score_7`, orig_cte.`Score_8` AS `Score_8`, orig_cte.`Score_9` AS `Score_9`, orig_cte.`Proba_0` AS `Proba_0`, orig_cte.`Proba_1` AS `Proba_1`, orig_cte.`Proba_2` AS `Proba_2`, orig_cte.`Proba_3` AS `Proba_3`, orig_cte.`Proba_4` AS `Proba_4`, orig_cte.`Proba_5` AS `Proba_5`, orig_cte.`Proba_6` AS `Proba_6`, orig_cte.`Proba_7` AS `Proba_7`, orig_cte.`Proba_8` AS `Proba_8`, orig_cte.`Proba_9` AS `Proba_9`, orig_cte.`LogProba_0` AS `LogProba_0`, orig_cte.`LogProba_1` AS `LogProba_1`, orig_cte.`LogProba_2` AS `LogProba_2`, orig_cte.`LogProba_3` AS `LogProba_3`, orig_cte.`LogProba_4` AS `LogProba_4`, orig_cte.`LogProba_5` AS `LogProba_5`, orig_cte.`LogProba_6` AS `LogProba_6`, orig_cte.`LogProba_7` AS `LogProba_7`, orig_cte.`LogProba_8` AS `LogProba_8`, orig_cte.`LogProba_9` AS `LogProba_9`, orig_cte.`Decision` AS `Decision`, orig_cte.`DecisionProba` AS `DecisionProba`, max_select.`KEY_m` AS `KEY_m`, max_select.`max_Proba` AS `max_Proba` 
FROM orig_cte LEFT OUTER JOIN (SELECT score_class_union.`KEY_u` AS `KEY_m`, max(score_class_union.`Proba`) AS `max_Proba` 
FROM score_class_union GROUP BY score_class_union.`KEY_u`) AS max_select ON orig_cte.`KEY` = max_select.`KEY_m`), 
union_with_max AS 
(SELECT score_class_union.`KEY_u` AS `KEY_u`, score_class_union.class AS class, score_class_union.`LogProba` AS `LogProba`, score_class_union.`Proba` AS `Proba`, score_class_union.`Score` AS `Score`, score_max.`KEY` AS `KEY`, score_max.`Score_0` AS `Score_0`, score_max.`Score_1` AS `Score_1`, score_max.`Score_2` AS `Score_2`, score_max.`Score_3` AS `Score_3`, score_max.`Score_4` AS `Score_4`, score_max.`Score_5` AS `Score_5`, score_max.`Score_6` AS `Score_6`, score_max.`Score_7` AS `Score_7`, score_max.`Score_8` AS `Score_8`, score_max.`Score_9` AS `Score_9`, score_max.`Proba_0` AS `Proba_0`, score_max.`Proba_1` AS `Proba_1`, score_max.`Proba_2` AS `Proba_2`, score_max.`Proba_3` AS `Proba_3`, score_max.`Proba_4` AS `Proba_4`, score_max.`Proba_5` AS `Proba_5`, score_max.`Proba_6` AS `Proba_6`, score_max.`Proba_7` AS `Proba_7`, score_max.`Proba_8` AS `Proba_8`, score_max.`Proba_9` AS `Proba_9`, score_max.`LogProba_0` AS `LogProba_0`, score_max.`LogProba_1` AS `LogProba_1`, score_max.`LogProba_2` AS `LogProba_2`, score_max.`LogProba_3` AS `LogProba_3`, score_max.`LogProba_4` AS `LogProba_4`, score_max.`LogProba_5` AS `LogProba_5`, score_max.`LogProba_6` AS `LogProba_6`, score_max.`LogProba_7` AS `LogProba_7`, score_max.`LogProba_8` AS `LogProba_8`, score_max.`LogProba_9` AS `LogProba_9`, score_max.`Decision` AS `Decision`, score_max.`DecisionProba` AS `DecisionProba`, score_max.`KEY_m` AS `KEY_m`, score_max.`max_Proba` AS `max_Proba` 
FROM score_class_union LEFT OUTER JOIN score_max ON score_class_union.`KEY_u` = score_max.`KEY`), 
arg_max_cte AS 
(SELECT score_max.`KEY` AS `KEY`, score_max.`Score_0` AS `Score_0`, score_max.`Score_1` AS `Score_1`, score_max.`Score_2` AS `Score_2`, score_max.`Score_3` AS `Score_3`, score_max.`Score_4` AS `Score_4`, score_max.`Score_5` AS `Score_5`, score_max.`Score_6` AS `Score_6`, score_max.`Score_7` AS `Score_7`, score_max.`Score_8` AS `Score_8`, score_max.`Score_9` AS `Score_9`, score_max.`Proba_0` AS `Proba_0`, score_max.`Proba_1` AS `Proba_1`, score_max.`Proba_2` AS `Proba_2`, score_max.`Proba_3` AS `Proba_3`, score_max.`Proba_4` AS `Proba_4`, score_max.`Proba_5` AS `Proba_5`, score_max.`Proba_6` AS `Proba_6`, score_max.`Proba_7` AS `Proba_7`, score_max.`Proba_8` AS `Proba_8`, score_max.`Proba_9` AS `Proba_9`, score_max.`LogProba_0` AS `LogProba_0`, score_max.`LogProba_1` AS `LogProba_1`, score_max.`LogProba_2` AS `LogProba_2`, score_max.`LogProba_3` AS `LogProba_3`, score_max.`LogProba_4` AS `LogProba_4`, score_max.`LogProba_5` AS `LogProba_5`, score_max.`LogProba_6` AS `LogProba_6`, score_max.`LogProba_7` AS `LogProba_7`, score_max.`LogProba_8` AS `LogProba_8`, score_max.`LogProba_9` AS `LogProba_9`, score_max.`Decision` AS `Decision`, score_max.`DecisionProba` AS `DecisionProba`, score_max.`KEY_m` AS `KEY_m`, score_max.`max_Proba` AS `max_Proba`, `arg_max_t_Proba`.`KEY_Proba` AS `KEY_Proba`, `arg_max_t_Proba`.`arg_max_Proba` AS `arg_max_Proba` 
FROM score_max LEFT OUTER JOIN (SELECT union_with_max.`KEY` AS `KEY_Proba`, min(union_with_max.class) AS `arg_max_Proba` 
FROM union_with_max 
WHERE union_with_max.`max_Proba` <= union_with_max.`Proba` GROUP BY union_with_max.`KEY`) AS `arg_max_t_Proba` ON score_max.`KEY` = `arg_max_t_Proba`.`KEY_Proba`)
 SELECT arg_max_cte.`KEY` AS `KEY`, arg_max_cte.`Score_0` AS `Score_0`, arg_max_cte.`Score_1` AS `Score_1`, arg_max_cte.`Score_2` AS `Score_2`, arg_max_cte.`Score_3` AS `Score_3`, arg_max_cte.`Score_4` AS `Score_4`, arg_max_cte.`Score_5` AS `Score_5`, arg_max_cte.`Score_6` AS `Score_6`, arg_max_cte.`Score_7` AS `Score_7`, arg_max_cte.`Score_8` AS `Score_8`, arg_max_cte.`Score_9` AS `Score_9`, arg_max_cte.`Proba_0` AS `Proba_0`, arg_max_cte.`Proba_1` AS `Proba_1`, arg_max_cte.`Proba_2` AS `Proba_2`, arg_max_cte.`Proba_3` AS `Proba_3`, arg_max_cte.`Proba_4` AS `Proba_4`, arg_max_cte.`Proba_5` AS `Proba_5`, arg_max_cte.`Proba_6` AS `Proba_6`, arg_max_cte.`Proba_7` AS `Proba_7`, arg_max_cte.`Proba_8` AS `Proba_8`, arg_max_cte.`Proba_9` AS `Proba_9`, CASE WHEN (arg_max_cte.`Proba_0` IS NULL OR arg_max_cte.`Proba_0` > 0.0) THEN ln(arg_max_cte.`Proba_0`) ELSE -1.79769313486231e+308 END AS `LogProba_0`, CASE WHEN (arg_max_cte.`Proba_1` IS NULL OR arg_max_cte.`Proba_1` > 0.0) THEN ln(arg_max_cte.`Proba_1`) ELSE -1.79769313486231e+308 END AS `LogProba_1`, CASE WHEN (arg_max_cte.`Proba_2` IS NULL OR arg_max_cte.`Proba_2` > 0.0) THEN ln(arg_max_cte.`Proba_2`) ELSE -1.79769313486231e+308 END AS `LogProba_2`, CASE WHEN (arg_max_cte.`Proba_3` IS NULL OR arg_max_cte.`Proba_3` > 0.0) THEN ln(arg_max_cte.`Proba_3`) ELSE -1.79769313486231e+308 END AS `LogProba_3`, CASE WHEN (arg_max_cte.`Proba_4` IS NULL OR arg_max_cte.`Proba_4` > 0.0) THEN ln(arg_max_cte.`Proba_4`) ELSE -1.79769313486231e+308 END AS `LogProba_4`, CASE WHEN (arg_max_cte.`Proba_5` IS NULL OR arg_max_cte.`Proba_5` > 0.0) THEN ln(arg_max_cte.`Proba_5`) ELSE -1.79769313486231e+308 END AS `LogProba_5`, CASE WHEN (arg_max_cte.`Proba_6` IS NULL OR arg_max_cte.`Proba_6` > 0.0) THEN ln(arg_max_cte.`Proba_6`) ELSE -1.79769313486231e+308 END AS `LogProba_6`, CASE WHEN (arg_max_cte.`Proba_7` IS NULL OR arg_max_cte.`Proba_7` > 0.0) THEN ln(arg_max_cte.`Proba_7`) ELSE -1.79769313486231e+308 END AS `LogProba_7`, CASE WHEN (arg_max_cte.`Proba_8` IS NULL OR arg_max_cte.`Proba_8` > 0.0) THEN ln(arg_max_cte.`Proba_8`) ELSE -1.79769313486231e+308 END AS `LogProba_8`, CASE WHEN (arg_max_cte.`Proba_9` IS NULL OR arg_max_cte.`Proba_9` > 0.0) THEN ln(arg_max_cte.`Proba_9`) ELSE -1.79769313486231e+308 END AS `LogProba_9`, arg_max_cte.`arg_max_Proba` AS `Decision`, arg_max_cte.`max_Proba` AS `DecisionProba` 
FROM arg_max_cte