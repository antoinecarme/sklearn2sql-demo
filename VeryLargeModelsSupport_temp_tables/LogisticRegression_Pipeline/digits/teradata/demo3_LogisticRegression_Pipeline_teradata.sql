-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2018

-- Model : LogisticRegression_Pipeline
-- Dataset : digits
-- Database : teradata


-- This SQL code can contain one or more statements, to be executed in the order they appear in this file.



-- Code For temporary table tmp_20180417025620_tdk5iu_ads_ part 1/2. Create 


CREATE GLOBAL TEMPORARY TABLE tmp_20180417025620_tdk5iu_ads_  (
	"KEY" BIGINT, 
	impter_2 FLOAT, 
	impter_3 FLOAT, 
	impter_4 FLOAT, 
	impter_5 FLOAT, 
	impter_6 FLOAT, 
	impter_7 FLOAT, 
	impter_8 FLOAT, 
	impter_9 FLOAT, 
	impter_10 FLOAT, 
	impter_11 FLOAT, 
	impter_12 FLOAT, 
	impter_13 FLOAT, 
	impter_14 FLOAT, 
	impter_15 FLOAT, 
	impter_16 FLOAT, 
	impter_17 FLOAT, 
	impter_18 FLOAT, 
	impter_19 FLOAT, 
	impter_20 FLOAT, 
	impter_21 FLOAT, 
	impter_22 FLOAT, 
	impter_23 FLOAT, 
	impter_24 FLOAT, 
	impter_25 FLOAT, 
	impter_26 FLOAT, 
	impter_27 FLOAT, 
	impter_28 FLOAT, 
	impter_29 FLOAT, 
	impter_30 FLOAT, 
	impter_31 FLOAT, 
	impter_32 FLOAT, 
	impter_33 FLOAT, 
	impter_34 FLOAT, 
	impter_35 FLOAT, 
	impter_36 FLOAT, 
	impter_37 FLOAT, 
	impter_38 FLOAT, 
	impter_39 FLOAT, 
	impter_40 FLOAT, 
	impter_41 FLOAT, 
	impter_42 FLOAT, 
	impter_43 FLOAT, 
	impter_44 FLOAT, 
	impter_45 FLOAT, 
	impter_46 FLOAT, 
	impter_47 FLOAT, 
	impter_48 FLOAT, 
	impter_49 FLOAT, 
	impter_50 FLOAT, 
	impter_51 FLOAT, 
	impter_52 FLOAT, 
	impter_53 FLOAT, 
	impter_54 FLOAT, 
	impter_55 FLOAT, 
	impter_56 FLOAT, 
	impter_57 FLOAT, 
	impter_58 FLOAT, 
	impter_59 FLOAT, 
	impter_60 FLOAT, 
	impter_61 FLOAT, 
	impter_62 FLOAT, 
	impter_63 FLOAT, 
	impter_64 FLOAT, 
	impter_65 FLOAT
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table tmp_20180417025620_tdk5iu_ads_ part 2/2. Populate

INSERT INTO tmp_20180417025620_tdk5iu_ads_ ("KEY", impter_2, impter_3, impter_4, impter_5, impter_6, impter_7, impter_8, impter_9, impter_10, impter_11, impter_12, impter_13, impter_14, impter_15, impter_16, impter_17, impter_18, impter_19, impter_20, impter_21, impter_22, impter_23, impter_24, impter_25, impter_26, impter_27, impter_28, impter_29, impter_30, impter_31, impter_32, impter_33, impter_34, impter_35, impter_36, impter_37, impter_38, impter_39, impter_40, impter_41, impter_42, impter_43, impter_44, impter_45, impter_46, impter_47, impter_48, impter_49, impter_50, impter_51, impter_52, impter_53, impter_54, impter_55, impter_56, impter_57, impter_58, impter_59, impter_60, impter_61, impter_62, impter_63, impter_64, impter_65) SELECT "U"."KEY", "U".impter_2, "U".impter_3, "U".impter_4, "U".impter_5, "U".impter_6, "U".impter_7, "U".impter_8, "U".impter_9, "U".impter_10, "U".impter_11, "U".impter_12, "U".impter_13, "U".impter_14, "U".impter_15, "U".impter_16, "U".impter_17, "U".impter_18, "U".impter_19, "U".impter_20, "U".impter_21, "U".impter_22, "U".impter_23, "U".impter_24, "U".impter_25, "U".impter_26, "U".impter_27, "U".impter_28, "U".impter_29, "U".impter_30, "U".impter_31, "U".impter_32, "U".impter_33, "U".impter_34, "U".impter_35, "U".impter_36, "U".impter_37, "U".impter_38, "U".impter_39, "U".impter_40, "U".impter_41, "U".impter_42, "U".impter_43, "U".impter_44, "U".impter_45, "U".impter_46, "U".impter_47, "U".impter_48, "U".impter_49, "U".impter_50, "U".impter_51, "U".impter_52, "U".impter_53, "U".impter_54, "U".impter_55, "U".impter_56, "U".impter_57, "U".impter_58, "U".impter_59, "U".impter_60, "U".impter_61, "U".impter_62, "U".impter_63, "U".impter_64, "U".impter_65 
FROM (SELECT "ADS_imp_1_OUT"."KEY", "ADS_imp_1_OUT".impter_2, "ADS_imp_1_OUT".impter_3, "ADS_imp_1_OUT".impter_4, "ADS_imp_1_OUT".impter_5, "ADS_imp_1_OUT".impter_6, "ADS_imp_1_OUT".impter_7, "ADS_imp_1_OUT".impter_8, "ADS_imp_1_OUT".impter_9, "ADS_imp_1_OUT".impter_10, "ADS_imp_1_OUT".impter_11, "ADS_imp_1_OUT".impter_12, "ADS_imp_1_OUT".impter_13, "ADS_imp_1_OUT".impter_14, "ADS_imp_1_OUT".impter_15, "ADS_imp_1_OUT".impter_16, "ADS_imp_1_OUT".impter_17, "ADS_imp_1_OUT".impter_18, "ADS_imp_1_OUT".impter_19, "ADS_imp_1_OUT".impter_20, "ADS_imp_1_OUT".impter_21, "ADS_imp_1_OUT".impter_22, "ADS_imp_1_OUT".impter_23, "ADS_imp_1_OUT".impter_24, "ADS_imp_1_OUT".impter_25, "ADS_imp_1_OUT".impter_26, "ADS_imp_1_OUT".impter_27, "ADS_imp_1_OUT".impter_28, "ADS_imp_1_OUT".impter_29, "ADS_imp_1_OUT".impter_30, "ADS_imp_1_OUT".impter_31, "ADS_imp_1_OUT".impter_32, "ADS_imp_1_OUT".impter_33, "ADS_imp_1_OUT".impter_34, "ADS_imp_1_OUT".impter_35, "ADS_imp_1_OUT".impter_36, "ADS_imp_1_OUT".impter_37, "ADS_imp_1_OUT".impter_38, "ADS_imp_1_OUT".impter_39, "ADS_imp_1_OUT".impter_40, "ADS_imp_1_OUT".impter_41, "ADS_imp_1_OUT".impter_42, "ADS_imp_1_OUT".impter_43, "ADS_imp_1_OUT".impter_44, "ADS_imp_1_OUT".impter_45, "ADS_imp_1_OUT".impter_46, "ADS_imp_1_OUT".impter_47, "ADS_imp_1_OUT".impter_48, "ADS_imp_1_OUT".impter_49, "ADS_imp_1_OUT".impter_50, "ADS_imp_1_OUT".impter_51, "ADS_imp_1_OUT".impter_52, "ADS_imp_1_OUT".impter_53, "ADS_imp_1_OUT".impter_54, "ADS_imp_1_OUT".impter_55, "ADS_imp_1_OUT".impter_56, "ADS_imp_1_OUT".impter_57, "ADS_imp_1_OUT".impter_58, "ADS_imp_1_OUT".impter_59, "ADS_imp_1_OUT".impter_60, "ADS_imp_1_OUT".impter_61, "ADS_imp_1_OUT".impter_62, "ADS_imp_1_OUT".impter_63, "ADS_imp_1_OUT".impter_64, "ADS_imp_1_OUT".impter_65 
FROM (SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" IS NULL) THEN 0.0 ELSE "ADS"."Feature_0" END AS impter_2, CASE WHEN ("ADS"."Feature_1" IS NULL) THEN 0.2950591510090466 ELSE "ADS"."Feature_1" END AS impter_3, CASE WHEN ("ADS"."Feature_2" IS NULL) THEN 5.104384133611691 ELSE "ADS"."Feature_2" END AS impter_4, CASE WHEN ("ADS"."Feature_3" IS NULL) THEN 11.791927627000696 ELSE "ADS"."Feature_3" END AS impter_5, CASE WHEN ("ADS"."Feature_4" IS NULL) THEN 11.84829505915101 ELSE "ADS"."Feature_4" END AS impter_6, CASE WHEN ("ADS"."Feature_5" IS NULL) THEN 5.823242867084203 ELSE "ADS"."Feature_5" END AS impter_7, CASE WHEN ("ADS"."Feature_6" IS NULL) THEN 1.394572025052192 ELSE "ADS"."Feature_6" END AS impter_8, CASE WHEN ("ADS"."Feature_7" IS NULL) THEN 0.13430758524704245 ELSE "ADS"."Feature_7" END AS impter_9, CASE WHEN ("ADS"."Feature_8" IS NULL) THEN 0.0055671537926235215 ELSE "ADS"."Feature_8" END AS impter_10, CASE WHEN ("ADS"."Feature_9" IS NULL) THEN 1.977035490605428 ELSE "ADS"."Feature_9" END AS impter_11, CASE WHEN ("ADS"."Feature_10" IS NULL) THEN 10.362560890744607 ELSE "ADS"."Feature_10" END AS impter_12, CASE WHEN ("ADS"."Feature_11" IS NULL) THEN 12.03061934585943 ELSE "ADS"."Feature_11" END AS impter_13, CASE WHEN ("ADS"."Feature_12" IS NULL) THEN 10.271398747390396 ELSE "ADS"."Feature_12" END AS impter_14, CASE WHEN ("ADS"."Feature_13" IS NULL) THEN 8.121781489213639 ELSE "ADS"."Feature_13" END AS impter_15, CASE WHEN ("ADS"."Feature_14" IS NULL) THEN 1.8921363952679193 ELSE "ADS"."Feature_14" END AS impter_16, CASE WHEN ("ADS"."Feature_15" IS NULL) THEN 0.11760612386917188 ELSE "ADS"."Feature_15" END AS impter_17, CASE WHEN ("ADS"."Feature_16" IS NULL) THEN 0.0020876826722338203 ELSE "ADS"."Feature_16" END AS impter_18, CASE WHEN ("ADS"."Feature_17" IS NULL) THEN 2.5427974947807934 ELSE "ADS"."Feature_17" END AS impter_19, CASE WHEN ("ADS"."Feature_18" IS NULL) THEN 9.935281837160751 ELSE "ADS"."Feature_18" END AS impter_20, CASE WHEN ("ADS"."Feature_19" IS NULL) THEN 7.099512874043145 ELSE "ADS"."Feature_19" END AS impter_21, CASE WHEN ("ADS"."Feature_20" IS NULL) THEN 7.132915796798887 ELSE "ADS"."Feature_20" END AS impter_22, CASE WHEN ("ADS"."Feature_21" IS NULL) THEN 7.81419624217119 ELSE "ADS"."Feature_21" END AS impter_23, CASE WHEN ("ADS"."Feature_22" IS NULL) THEN 1.8434237995824634 ELSE "ADS"."Feature_22" END AS impter_24, CASE WHEN ("ADS"."Feature_23" IS NULL) THEN 0.05775922059846903 ELSE "ADS"."Feature_23" END AS impter_25, CASE WHEN ("ADS"."Feature_24" IS NULL) THEN 0.0006958942240779402 ELSE "ADS"."Feature_24" END AS impter_26, CASE WHEN ("ADS"."Feature_25" IS NULL) THEN 2.4808629088378567 ELSE "ADS"."Feature_25" END AS impter_27, CASE WHEN ("ADS"."Feature_26" IS NULL) THEN 9.143354210160055 ELSE "ADS"."Feature_26" END AS impter_28, CASE WHEN ("ADS"."Feature_27" IS NULL) THEN 8.960334029227557 ELSE "ADS"."Feature_27" END AS impter_29, CASE WHEN ("ADS"."Feature_28" IS NULL) THEN 10.03688239387613 ELSE "ADS"."Feature_28" END AS impter_30, CASE WHEN ("ADS"."Feature_29" IS NULL) THEN 7.5949895615866385 ELSE "ADS"."Feature_29" END AS impter_31, CASE WHEN ("ADS"."Feature_30" IS NULL) THEN 2.337508698677801 ELSE "ADS"."Feature_30" END AS impter_32, CASE WHEN ("ADS"."Feature_31" IS NULL) THEN 0.0027835768963117608 ELSE "ADS"."Feature_31" END AS impter_33, CASE WHEN ("ADS"."Feature_32" IS NULL) THEN 0.0 ELSE "ADS"."Feature_32" END AS impter_34, CASE WHEN ("ADS"."Feature_33" IS NULL) THEN 2.3319415448851775 ELSE "ADS"."Feature_33" END AS impter_35, CASE WHEN ("ADS"."Feature_34" IS NULL) THEN 7.608907446068198 ELSE "ADS"."Feature_34" END AS impter_36, CASE WHEN ("ADS"."Feature_35" IS NULL) THEN 9.028531663187195 ELSE "ADS"."Feature_35" END AS impter_37, CASE WHEN ("ADS"."Feature_36" IS NULL) THEN 10.270006958942242 ELSE "ADS"."Feature_36" END AS impter_38, CASE WHEN ("ADS"."Feature_37" IS NULL) THEN 8.806541405706332 ELSE "ADS"."Feature_37" END AS impter_39, CASE WHEN ("ADS"."Feature_38" IS NULL) THEN 2.8754349338900487 ELSE "ADS"."Feature_38" END AS impter_40, CASE WHEN ("ADS"."Feature_39" IS NULL) THEN 0.0 ELSE "ADS"."Feature_39" END AS impter_41, CASE WHEN ("ADS"."Feature_40" IS NULL) THEN 0.010438413361169102 ELSE "ADS"."Feature_40" END AS impter_42, CASE WHEN ("ADS"."Feature_41" IS NULL) THEN 1.5755045233124565 ELSE "ADS"."Feature_41" END AS impter_43, CASE WHEN ("ADS"."Feature_42" IS NULL) THEN 6.858733472512178 ELSE "ADS"."Feature_42" END AS impter_44, CASE WHEN ("ADS"."Feature_43" IS NULL) THEN 7.258872651356993 ELSE "ADS"."Feature_43" END AS impter_45, CASE WHEN ("ADS"."Feature_44" IS NULL) THEN 7.710508002783577 ELSE "ADS"."Feature_44" END AS impter_46, CASE WHEN ("ADS"."Feature_45" IS NULL) THEN 8.281141266527488 ELSE "ADS"."Feature_45" END AS impter_47, CASE WHEN ("ADS"."Feature_46" IS NULL) THEN 3.432150313152401 ELSE "ADS"."Feature_46" END AS impter_48, CASE WHEN ("ADS"."Feature_47" IS NULL) THEN 0.031315240083507306 ELSE "ADS"."Feature_47" END AS impter_49, CASE WHEN ("ADS"."Feature_48" IS NULL) THEN 0.009046624913013222 ELSE "ADS"."Feature_48" END AS impter_50, CASE WHEN ("ADS"."Feature_49" IS NULL) THEN 0.708420320111343 ELSE "ADS"."Feature_49" END AS impter_51, CASE WHEN ("ADS"."Feature_50" IS NULL) THEN 7.492693110647181 ELSE "ADS"."Feature_50" END AS impter_52, CASE WHEN ("ADS"."Feature_51" IS NULL) THEN 9.529575504523313 ELSE "ADS"."Feature_51" END AS impter_53, CASE WHEN ("ADS"."Feature_52" IS NULL) THEN 9.541405706332638 ELSE "ADS"."Feature_52" END AS impter_54, CASE WHEN ("ADS"."Feature_53" IS NULL) THEN 8.754349338900488 ELSE "ADS"."Feature_53" END AS impter_55, CASE WHEN ("ADS"."Feature_54" IS NULL) THEN 3.7397355601948505 ELSE "ADS"."Feature_54" END AS impter_56, CASE WHEN ("ADS"."Feature_55" IS NULL) THEN 0.21920668058455114 ELSE "ADS"."Feature_55" END AS impter_57, CASE WHEN ("ADS"."Feature_56" IS NULL) THEN 0.0006958942240779402 ELSE "ADS"."Feature_56" END AS impter_58, CASE WHEN ("ADS"."Feature_57" IS NULL) THEN 0.26374391092553934 ELSE "ADS"."Feature_57" END AS impter_59, CASE WHEN ("ADS"."Feature_58" IS NULL) THEN 5.474599860821155 ELSE "ADS"."Feature_58" END AS impter_60, CASE WHEN ("ADS"."Feature_59" IS NULL) THEN 12.097425191370911 ELSE "ADS"."Feature_59" END AS impter_61, CASE WHEN ("ADS"."Feature_60" IS NULL) THEN 11.8580375782881 ELSE "ADS"."Feature_60" END AS impter_62, CASE WHEN ("ADS"."Feature_61" IS NULL) THEN 6.716771050800278 ELSE "ADS"."Feature_61" END AS impter_63, CASE WHEN ("ADS"."Feature_62" IS NULL) THEN 2.0869867780097424 ELSE "ADS"."Feature_62" END AS impter_64, CASE WHEN ("ADS"."Feature_63" IS NULL) THEN 0.3862212943632568 ELSE "ADS"."Feature_63" END AS impter_65 
FROM digits AS "ADS") AS "ADS_imp_1_OUT") AS "U"

-- Code For temporary table tmp_20180417025620_oq5yjr_ads_ part 1/2. Create 


CREATE GLOBAL TEMPORARY TABLE tmp_20180417025620_oq5yjr_ads_  (
	"KEY" BIGINT, 
	scaler_2 FLOAT, 
	scaler_3 FLOAT, 
	scaler_4 FLOAT, 
	scaler_5 FLOAT, 
	scaler_6 FLOAT, 
	scaler_7 FLOAT, 
	scaler_8 FLOAT, 
	scaler_9 FLOAT, 
	scaler_10 FLOAT, 
	scaler_11 FLOAT, 
	scaler_12 FLOAT, 
	scaler_13 FLOAT, 
	scaler_14 FLOAT, 
	scaler_15 FLOAT, 
	scaler_16 FLOAT, 
	scaler_17 FLOAT, 
	scaler_18 FLOAT, 
	scaler_19 FLOAT, 
	scaler_20 FLOAT, 
	scaler_21 FLOAT, 
	scaler_22 FLOAT, 
	scaler_23 FLOAT, 
	scaler_24 FLOAT, 
	scaler_25 FLOAT, 
	scaler_26 FLOAT, 
	scaler_27 FLOAT, 
	scaler_28 FLOAT, 
	scaler_29 FLOAT, 
	scaler_30 FLOAT, 
	scaler_31 FLOAT, 
	scaler_32 FLOAT, 
	scaler_33 FLOAT, 
	scaler_34 FLOAT, 
	scaler_35 FLOAT, 
	scaler_36 FLOAT, 
	scaler_37 FLOAT, 
	scaler_38 FLOAT, 
	scaler_39 FLOAT, 
	scaler_40 FLOAT, 
	scaler_41 FLOAT, 
	scaler_42 FLOAT, 
	scaler_43 FLOAT, 
	scaler_44 FLOAT, 
	scaler_45 FLOAT, 
	scaler_46 FLOAT, 
	scaler_47 FLOAT, 
	scaler_48 FLOAT, 
	scaler_49 FLOAT, 
	scaler_50 FLOAT, 
	scaler_51 FLOAT, 
	scaler_52 FLOAT, 
	scaler_53 FLOAT, 
	scaler_54 FLOAT, 
	scaler_55 FLOAT, 
	scaler_56 FLOAT, 
	scaler_57 FLOAT, 
	scaler_58 FLOAT, 
	scaler_59 FLOAT, 
	scaler_60 FLOAT, 
	scaler_61 FLOAT, 
	scaler_62 FLOAT, 
	scaler_63 FLOAT, 
	scaler_64 FLOAT, 
	scaler_65 FLOAT
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table tmp_20180417025620_oq5yjr_ads_ part 2/2. Populate

INSERT INTO tmp_20180417025620_oq5yjr_ads_ ("KEY", scaler_2, scaler_3, scaler_4, scaler_5, scaler_6, scaler_7, scaler_8, scaler_9, scaler_10, scaler_11, scaler_12, scaler_13, scaler_14, scaler_15, scaler_16, scaler_17, scaler_18, scaler_19, scaler_20, scaler_21, scaler_22, scaler_23, scaler_24, scaler_25, scaler_26, scaler_27, scaler_28, scaler_29, scaler_30, scaler_31, scaler_32, scaler_33, scaler_34, scaler_35, scaler_36, scaler_37, scaler_38, scaler_39, scaler_40, scaler_41, scaler_42, scaler_43, scaler_44, scaler_45, scaler_46, scaler_47, scaler_48, scaler_49, scaler_50, scaler_51, scaler_52, scaler_53, scaler_54, scaler_55, scaler_56, scaler_57, scaler_58, scaler_59, scaler_60, scaler_61, scaler_62, scaler_63, scaler_64, scaler_65) SELECT "U"."KEY", "U".scaler_2, "U".scaler_3, "U".scaler_4, "U".scaler_5, "U".scaler_6, "U".scaler_7, "U".scaler_8, "U".scaler_9, "U".scaler_10, "U".scaler_11, "U".scaler_12, "U".scaler_13, "U".scaler_14, "U".scaler_15, "U".scaler_16, "U".scaler_17, "U".scaler_18, "U".scaler_19, "U".scaler_20, "U".scaler_21, "U".scaler_22, "U".scaler_23, "U".scaler_24, "U".scaler_25, "U".scaler_26, "U".scaler_27, "U".scaler_28, "U".scaler_29, "U".scaler_30, "U".scaler_31, "U".scaler_32, "U".scaler_33, "U".scaler_34, "U".scaler_35, "U".scaler_36, "U".scaler_37, "U".scaler_38, "U".scaler_39, "U".scaler_40, "U".scaler_41, "U".scaler_42, "U".scaler_43, "U".scaler_44, "U".scaler_45, "U".scaler_46, "U".scaler_47, "U".scaler_48, "U".scaler_49, "U".scaler_50, "U".scaler_51, "U".scaler_52, "U".scaler_53, "U".scaler_54, "U".scaler_55, "U".scaler_56, "U".scaler_57, "U".scaler_58, "U".scaler_59, "U".scaler_60, "U".scaler_61, "U".scaler_62, "U".scaler_63, "U".scaler_64, "U".scaler_65 
FROM (SELECT "ADS_sca_2_OUT"."KEY", "ADS_sca_2_OUT".scaler_2, "ADS_sca_2_OUT".scaler_3, "ADS_sca_2_OUT".scaler_4, "ADS_sca_2_OUT".scaler_5, "ADS_sca_2_OUT".scaler_6, "ADS_sca_2_OUT".scaler_7, "ADS_sca_2_OUT".scaler_8, "ADS_sca_2_OUT".scaler_9, "ADS_sca_2_OUT".scaler_10, "ADS_sca_2_OUT".scaler_11, "ADS_sca_2_OUT".scaler_12, "ADS_sca_2_OUT".scaler_13, "ADS_sca_2_OUT".scaler_14, "ADS_sca_2_OUT".scaler_15, "ADS_sca_2_OUT".scaler_16, "ADS_sca_2_OUT".scaler_17, "ADS_sca_2_OUT".scaler_18, "ADS_sca_2_OUT".scaler_19, "ADS_sca_2_OUT".scaler_20, "ADS_sca_2_OUT".scaler_21, "ADS_sca_2_OUT".scaler_22, "ADS_sca_2_OUT".scaler_23, "ADS_sca_2_OUT".scaler_24, "ADS_sca_2_OUT".scaler_25, "ADS_sca_2_OUT".scaler_26, "ADS_sca_2_OUT".scaler_27, "ADS_sca_2_OUT".scaler_28, "ADS_sca_2_OUT".scaler_29, "ADS_sca_2_OUT".scaler_30, "ADS_sca_2_OUT".scaler_31, "ADS_sca_2_OUT".scaler_32, "ADS_sca_2_OUT".scaler_33, "ADS_sca_2_OUT".scaler_34, "ADS_sca_2_OUT".scaler_35, "ADS_sca_2_OUT".scaler_36, "ADS_sca_2_OUT".scaler_37, "ADS_sca_2_OUT".scaler_38, "ADS_sca_2_OUT".scaler_39, "ADS_sca_2_OUT".scaler_40, "ADS_sca_2_OUT".scaler_41, "ADS_sca_2_OUT".scaler_42, "ADS_sca_2_OUT".scaler_43, "ADS_sca_2_OUT".scaler_44, "ADS_sca_2_OUT".scaler_45, "ADS_sca_2_OUT".scaler_46, "ADS_sca_2_OUT".scaler_47, "ADS_sca_2_OUT".scaler_48, "ADS_sca_2_OUT".scaler_49, "ADS_sca_2_OUT".scaler_50, "ADS_sca_2_OUT".scaler_51, "ADS_sca_2_OUT".scaler_52, "ADS_sca_2_OUT".scaler_53, "ADS_sca_2_OUT".scaler_54, "ADS_sca_2_OUT".scaler_55, "ADS_sca_2_OUT".scaler_56, "ADS_sca_2_OUT".scaler_57, "ADS_sca_2_OUT".scaler_58, "ADS_sca_2_OUT".scaler_59, "ADS_sca_2_OUT".scaler_60, "ADS_sca_2_OUT".scaler_61, "ADS_sca_2_OUT".scaler_62, "ADS_sca_2_OUT".scaler_63, "ADS_sca_2_OUT".scaler_64, "ADS_sca_2_OUT".scaler_65 
FROM (SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", (CAST("ADS_imp_1_OUT".impter_2 AS FLOAT) - 0.0) / 1.0 AS scaler_2, (CAST("ADS_imp_1_OUT".impter_3 AS FLOAT) - 0.295059151009047) / 0.886335971513945 AS scaler_3, (CAST("ADS_imp_1_OUT".impter_4 AS FLOAT) - 5.104384133611691) / 4.714562522364591 AS scaler_4, (CAST("ADS_imp_1_OUT".impter_5 AS FLOAT) - 11.791927627000696) / 4.242705177561994 AS scaler_5, (CAST("ADS_imp_1_OUT".impter_6 AS FLOAT) - 11.84829505915101) / 4.298607850485783 AS scaler_6, (CAST("ADS_imp_1_OUT".impter_7 AS FLOAT) - 5.823242867084203) / 5.664052593352563 AS scaler_7, (CAST("ADS_imp_1_OUT".impter_8 AS FLOAT) - 1.394572025052192) / 3.367253749888978 AS scaler_8, (CAST("ADS_imp_1_OUT".impter_9 AS FLOAT) - 0.134307585247042) / 1.073848896106088 AS scaler_9, (CAST("ADS_imp_1_OUT".impter_10 AS FLOAT) - 0.005567153792624) / 0.091212595005212 AS scaler_10, (CAST("ADS_imp_1_OUT".impter_11 AS FLOAT) - 1.977035490605428) / 3.176575951344838 AS scaler_11, (CAST("ADS_imp_1_OUT".impter_12 AS FLOAT) - 10.362560890744607) / 5.427455768043861 AS scaler_12, (CAST("ADS_imp_1_OUT".impter_13 AS FLOAT) - 12.03061934585943) / 3.92400431269586 AS scaler_13, (CAST("ADS_imp_1_OUT".impter_14 AS FLOAT) - 10.271398747390396) / 4.751306782008032 AS scaler_14, (CAST("ADS_imp_1_OUT".impter_15 AS FLOAT) - 8.121781489213639) / 6.055742470420089 AS scaler_15, (CAST("ADS_imp_1_OUT".impter_16 AS FLOAT) - 1.892136395267919) / 3.63584960156055 AS scaler_16, (CAST("ADS_imp_1_OUT".impter_17 AS FLOAT) - 0.117606123869172) / 0.880913584840726 AS scaler_17, (CAST("ADS_imp_1_OUT".impter_18 AS FLOAT) - 0.002087682672234) / 0.045643446991807 AS scaler_18, (CAST("ADS_imp_1_OUT".impter_19 AS FLOAT) - 2.542797494780794) / 3.535939148296097 AS scaler_19, (CAST("ADS_imp_1_OUT".impter_20 AS FLOAT) - 9.935281837160751) / 5.674233427535142 AS scaler_20, (CAST("ADS_imp_1_OUT".impter_21 AS FLOAT) - 7.099512874043145) / 5.828968622118506 AS scaler_21, (CAST("ADS_imp_1_OUT".impter_22 AS FLOAT) - 7.132915796798887) / 6.164166380758013 AS scaler_22, (CAST("ADS_imp_1_OUT".impter_23 AS FLOAT) - 7.81419624217119) / 6.237214641441282 AS scaler_23, (CAST("ADS_imp_1_OUT".impter_24 AS FLOAT) - 1.843423799582464) / 3.355296849525941 AS scaler_24, (CAST("ADS_imp_1_OUT".impter_25 AS FLOAT) - 0.057759220598469) / 0.470571680844726 AS scaler_25, (CAST("ADS_imp_1_OUT".impter_26 AS FLOAT) - 0.000695894224078) / 0.026370626752256 AS scaler_26, (CAST("ADS_imp_1_OUT".impter_27 AS FLOAT) - 2.480862908837856) / 3.1579531140533 AS scaler_27, (CAST("ADS_imp_1_OUT".impter_28 AS FLOAT) - 9.143354210160055) / 6.211448620771221 AS scaler_28, (CAST("ADS_imp_1_OUT".impter_29 AS FLOAT) - 8.960334029227557) / 5.872499336895779 AS scaler_29, (CAST("ADS_imp_1_OUT".impter_30 AS FLOAT) - 10.03688239387613) / 6.131194138822921 AS scaler_30, (CAST("ADS_imp_1_OUT".impter_31 AS FLOAT) - 7.594989561586639) / 5.883009512311774 AS scaler_31, (CAST("ADS_imp_1_OUT".impter_32 AS FLOAT) - 2.337508698677801) / 3.75551631210054 AS scaler_32, (CAST("ADS_imp_1_OUT".impter_33 AS FLOAT) - 0.002783576896312) / 0.052686132862207 AS scaler_33, (CAST("ADS_imp_1_OUT".impter_34 AS FLOAT) - 0.0) / 1.0 AS scaler_34, (CAST("ADS_imp_1_OUT".impter_35 AS FLOAT) - 2.331941544885178) / 3.520361676701363 AS scaler_35, (CAST("ADS_imp_1_OUT".impter_36 AS FLOAT) - 7.608907446068198) / 6.337427127154217 AS scaler_36, (CAST("ADS_imp_1_OUT".impter_37 AS FLOAT) - 9.028531663187197) / 6.255398792908601 AS scaler_37, (CAST("ADS_imp_1_OUT".impter_38 AS FLOAT) - 10.270006958942242) / 5.918328236602452 AS scaler_38, (CAST("ADS_imp_1_OUT".impter_39 AS FLOAT) - 8.806541405706332) / 5.862505948752236 AS scaler_39, (CAST("ADS_imp_1_OUT".impter_40 AS FLOAT) - 2.875434933890048) / 3.521551388880749 AS scaler_40, (CAST("ADS_imp_1_OUT".impter_41 AS FLOAT) - 0.0) / 1.0 AS scaler_41, (CAST("ADS_imp_1_OUT".impter_42 AS FLOAT) - 0.010438413361169) / 0.160122221497781 AS scaler_42, (CAST("ADS_imp_1_OUT".impter_43 AS FLOAT) - 1.575504523312456) / 3.014815857559124 AS scaler_43, (CAST("ADS_imp_1_OUT".impter_44 AS FLOAT) - 6.858733472512178) / 6.542209340765544 AS scaler_44, (CAST("ADS_imp_1_OUT".impter_45 AS FLOAT) - 7.258872651356993) / 6.490917554434448 AS scaler_45, (CAST("ADS_imp_1_OUT".impter_46 AS FLOAT) - 7.710508002783577) / 6.292873620677289 AS scaler_46, (CAST("ADS_imp_1_OUT".impter_47 AS FLOAT) - 8.281141266527488) / 5.713309549149251 AS scaler_47, (CAST("ADS_imp_1_OUT".impter_48 AS FLOAT) - 3.432150313152401) / 4.326500259143386 AS scaler_48, (CAST("ADS_imp_1_OUT".impter_49 AS FLOAT) - 0.031315240083507) / 0.333254145983304 AS scaler_49, (CAST("ADS_imp_1_OUT".impter_50 AS FLOAT) - 0.009046624913013) / 0.228276642220633 AS scaler_50, (CAST("ADS_imp_1_OUT".impter_51 AS FLOAT) - 0.708420320111343) / 1.763076823218346 AS scaler_51, (CAST("ADS_imp_1_OUT".impter_52 AS FLOAT) - 7.492693110647181) / 5.674735747339335 AS scaler_52, (CAST("ADS_imp_1_OUT".impter_53 AS FLOAT) - 9.529575504523313) / 5.230790022511772 AS scaler_53, (CAST("ADS_imp_1_OUT".impter_54 AS FLOAT) - 9.541405706332638) / 5.251555514694703 AS scaler_54, (CAST("ADS_imp_1_OUT".impter_55 AS FLOAT) - 8.754349338900488) / 6.034364897758397 AS scaler_55, (CAST("ADS_imp_1_OUT".impter_56 AS FLOAT) - 3.73973556019485) / 4.953834269857758 AS scaler_56, (CAST("ADS_imp_1_OUT".impter_57 AS FLOAT) - 0.219206680584551) / 1.025747142064914 AS scaler_57, (CAST("ADS_imp_1_OUT".impter_58 AS FLOAT) - 0.000695894224078) / 0.026370626752257 AS scaler_58, (CAST("ADS_imp_1_OUT".impter_59 AS FLOAT) - 0.263743910925539) / 0.893431165157604 AS scaler_59, (CAST("ADS_imp_1_OUT".impter_60 AS FLOAT) - 5.474599860821155) / 5.06659361292149 AS scaler_60, (CAST("ADS_imp_1_OUT".impter_61 AS FLOAT) - 12.097425191370911) / 4.359965306758356 AS scaler_61, (CAST("ADS_imp_1_OUT".impter_62 AS FLOAT) - 11.8580375782881) / 4.889242282258171 AS scaler_62, (CAST("ADS_imp_1_OUT".impter_63 AS FLOAT) - 6.716771050800278) / 5.87255780345831 AS scaler_63, (CAST("ADS_imp_1_OUT".impter_64 AS FLOAT) - 2.086986778009742) / 4.12826085471658 AS scaler_64, (CAST("ADS_imp_1_OUT".impter_65 AS FLOAT) - 0.386221294363257) / 1.915153500596726 AS scaler_65 
FROM tmp_20180417025620_tdk5iu_ads_ AS "ADS_imp_1_OUT") AS "ADS_sca_2_OUT") AS "U"

-- Model deployment code

WITH linear_input AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CAST("ADS_sca_2_OUT".scaler_2 AS FLOAT) AS scaler_2, CAST("ADS_sca_2_OUT".scaler_3 AS FLOAT) AS scaler_3, CAST("ADS_sca_2_OUT".scaler_4 AS FLOAT) AS scaler_4, CAST("ADS_sca_2_OUT".scaler_5 AS FLOAT) AS scaler_5, CAST("ADS_sca_2_OUT".scaler_6 AS FLOAT) AS scaler_6, CAST("ADS_sca_2_OUT".scaler_7 AS FLOAT) AS scaler_7, CAST("ADS_sca_2_OUT".scaler_8 AS FLOAT) AS scaler_8, CAST("ADS_sca_2_OUT".scaler_9 AS FLOAT) AS scaler_9, CAST("ADS_sca_2_OUT".scaler_10 AS FLOAT) AS scaler_10, CAST("ADS_sca_2_OUT".scaler_11 AS FLOAT) AS scaler_11, CAST("ADS_sca_2_OUT".scaler_12 AS FLOAT) AS scaler_12, CAST("ADS_sca_2_OUT".scaler_13 AS FLOAT) AS scaler_13, CAST("ADS_sca_2_OUT".scaler_14 AS FLOAT) AS scaler_14, CAST("ADS_sca_2_OUT".scaler_15 AS FLOAT) AS scaler_15, CAST("ADS_sca_2_OUT".scaler_16 AS FLOAT) AS scaler_16, CAST("ADS_sca_2_OUT".scaler_17 AS FLOAT) AS scaler_17, CAST("ADS_sca_2_OUT".scaler_18 AS FLOAT) AS scaler_18, CAST("ADS_sca_2_OUT".scaler_19 AS FLOAT) AS scaler_19, CAST("ADS_sca_2_OUT".scaler_20 AS FLOAT) AS scaler_20, CAST("ADS_sca_2_OUT".scaler_21 AS FLOAT) AS scaler_21, CAST("ADS_sca_2_OUT".scaler_22 AS FLOAT) AS scaler_22, CAST("ADS_sca_2_OUT".scaler_23 AS FLOAT) AS scaler_23, CAST("ADS_sca_2_OUT".scaler_24 AS FLOAT) AS scaler_24, CAST("ADS_sca_2_OUT".scaler_25 AS FLOAT) AS scaler_25, CAST("ADS_sca_2_OUT".scaler_26 AS FLOAT) AS scaler_26, CAST("ADS_sca_2_OUT".scaler_27 AS FLOAT) AS scaler_27, CAST("ADS_sca_2_OUT".scaler_28 AS FLOAT) AS scaler_28, CAST("ADS_sca_2_OUT".scaler_29 AS FLOAT) AS scaler_29, CAST("ADS_sca_2_OUT".scaler_30 AS FLOAT) AS scaler_30, CAST("ADS_sca_2_OUT".scaler_31 AS FLOAT) AS scaler_31, CAST("ADS_sca_2_OUT".scaler_32 AS FLOAT) AS scaler_32, CAST("ADS_sca_2_OUT".scaler_33 AS FLOAT) AS scaler_33, CAST("ADS_sca_2_OUT".scaler_34 AS FLOAT) AS scaler_34, CAST("ADS_sca_2_OUT".scaler_35 AS FLOAT) AS scaler_35, CAST("ADS_sca_2_OUT".scaler_36 AS FLOAT) AS scaler_36, CAST("ADS_sca_2_OUT".scaler_37 AS FLOAT) AS scaler_37, CAST("ADS_sca_2_OUT".scaler_38 AS FLOAT) AS scaler_38, CAST("ADS_sca_2_OUT".scaler_39 AS FLOAT) AS scaler_39, CAST("ADS_sca_2_OUT".scaler_40 AS FLOAT) AS scaler_40, CAST("ADS_sca_2_OUT".scaler_41 AS FLOAT) AS scaler_41, CAST("ADS_sca_2_OUT".scaler_42 AS FLOAT) AS scaler_42, CAST("ADS_sca_2_OUT".scaler_43 AS FLOAT) AS scaler_43, CAST("ADS_sca_2_OUT".scaler_44 AS FLOAT) AS scaler_44, CAST("ADS_sca_2_OUT".scaler_45 AS FLOAT) AS scaler_45, CAST("ADS_sca_2_OUT".scaler_46 AS FLOAT) AS scaler_46, CAST("ADS_sca_2_OUT".scaler_47 AS FLOAT) AS scaler_47, CAST("ADS_sca_2_OUT".scaler_48 AS FLOAT) AS scaler_48, CAST("ADS_sca_2_OUT".scaler_49 AS FLOAT) AS scaler_49, CAST("ADS_sca_2_OUT".scaler_50 AS FLOAT) AS scaler_50, CAST("ADS_sca_2_OUT".scaler_51 AS FLOAT) AS scaler_51, CAST("ADS_sca_2_OUT".scaler_52 AS FLOAT) AS scaler_52, CAST("ADS_sca_2_OUT".scaler_53 AS FLOAT) AS scaler_53, CAST("ADS_sca_2_OUT".scaler_54 AS FLOAT) AS scaler_54, CAST("ADS_sca_2_OUT".scaler_55 AS FLOAT) AS scaler_55, CAST("ADS_sca_2_OUT".scaler_56 AS FLOAT) AS scaler_56, CAST("ADS_sca_2_OUT".scaler_57 AS FLOAT) AS scaler_57, CAST("ADS_sca_2_OUT".scaler_58 AS FLOAT) AS scaler_58, CAST("ADS_sca_2_OUT".scaler_59 AS FLOAT) AS scaler_59, CAST("ADS_sca_2_OUT".scaler_60 AS FLOAT) AS scaler_60, CAST("ADS_sca_2_OUT".scaler_61 AS FLOAT) AS scaler_61, CAST("ADS_sca_2_OUT".scaler_62 AS FLOAT) AS scaler_62, CAST("ADS_sca_2_OUT".scaler_63 AS FLOAT) AS scaler_63, CAST("ADS_sca_2_OUT".scaler_64 AS FLOAT) AS scaler_64, CAST("ADS_sca_2_OUT".scaler_65 AS FLOAT) AS scaler_65 
FROM tmp_20180417025620_oq5yjr_ads_ AS "ADS_sca_2_OUT"), 
linear_model_cte AS 
(SELECT linear_input."KEY" AS "KEY", 0.0 * linear_input.scaler_2 + 0.044770209391584 * linear_input.scaler_3 + 0.047281655547533 * linear_input.scaler_4 + 0.315197968703746 * linear_input.scaler_5 + -0.093630991724927 * linear_input.scaler_6 + -0.668796049816763 * linear_input.scaler_7 + -0.185973252487444 * linear_input.scaler_8 + 0.002265991604016 * linear_input.scaler_9 + 5.3519989809e-05 * linear_input.scaler_10 + -0.203258446106768 * linear_input.scaler_11 + -0.003125979117518 * linear_input.scaler_12 + 0.11091005277734 * linear_input.scaler_13 + 0.630310009009202 * linear_input.scaler_14 + 0.68876264577631 * linear_input.scaler_15 + 0.007032669451392 * linear_input.scaler_16 + -0.187131296623939 * linear_input.scaler_17 + 0.073166886247938 * linear_input.scaler_18 + 0.194187156809262 * linear_input.scaler_19 + 0.071925006818929 * linear_input.scaler_20 + -0.044959567643785 * linear_input.scaler_21 + -0.403191141134038 * linear_input.scaler_22 + 0.556331086860618 * linear_input.scaler_23 + -0.006026414126456 * linear_input.scaler_24 + 0.005905691789648 * linear_input.scaler_25 + 0.066585886263382 * linear_input.scaler_26 + 0.179853320318551 * linear_input.scaler_27 + 0.106189473870887 * linear_input.scaler_28 + -0.475227792966069 * linear_input.scaler_29 + -1.052072154769856 * linear_input.scaler_30 + -0.121548907295263 * linear_input.scaler_31 + 0.198328317612199 * linear_input.scaler_32 + 0.051026604863007 * linear_input.scaler_33 + 0.0 * linear_input.scaler_34 + 0.19665217470627 * linear_input.scaler_35 + 0.362381115726069 * linear_input.scaler_36 + -0.561873391920146 * linear_input.scaler_37 + -0.690970059811345 * linear_input.scaler_38 + -0.11978633539988 * linear_input.scaler_39 + 0.05387319868513 * linear_input.scaler_40 + 0.0 * linear_input.scaler_41 + -0.021884650795611 * linear_input.scaler_42 + -0.186475444677848 * linear_input.scaler_43 + 0.934061067137263 * linear_input.scaler_44 + -0.889321148804033 * linear_input.scaler_45 + -0.647216559465318 * linear_input.scaler_46 + 0.022292981529975 * linear_input.scaler_47 + 0.16206099141114 * linear_input.scaler_48 + 0.167958212701673 * linear_input.scaler_49 + -0.058345021552282 * linear_input.scaler_50 + -0.23359793566497 * linear_input.scaler_51 + 0.333349320165173 * linear_input.scaler_52 + 0.178142955745714 * linear_input.scaler_53 + 0.46878104749021 * linear_input.scaler_54 + 0.111999000095022 * linear_input.scaler_55 + -0.496193619933329 * linear_input.scaler_56 + -0.28744505845995 * linear_input.scaler_57 + 0.066047082977251 * linear_input.scaler_58 + -0.095332031689457 * linear_input.scaler_59 + -0.358266446059445 * linear_input.scaler_60 + 0.230334854268615 * linear_input.scaler_61 + -0.569338349884433 * linear_input.scaler_62 + -0.089008336967362 * linear_input.scaler_63 + -0.05162992135734 * linear_input.scaler_64 + -0.128366661147676 * linear_input.scaler_65 + -5.809312984434714 AS "Score_0", 0.0 * linear_input.scaler_2 + 0.081222944076945 * linear_input.scaler_3 + 0.086167262632379 * linear_input.scaler_4 + 0.300884605075628 * linear_input.scaler_5 + -1.204075276212346 * linear_input.scaler_6 + 1.03021885318636 * linear_input.scaler_7 + -0.07959193206447 * linear_input.scaler_8 + -0.079295433386566 * linear_input.scaler_9 + 0.112841484990763 * linear_input.scaler_10 + -1.29625839182991 * linear_input.scaler_11 + -1.054822031404362 * linear_input.scaler_12 + -0.393093745196795 * linear_input.scaler_13 + 0.424288785474251 * linear_input.scaler_14 + 0.562160014636194 * linear_input.scaler_15 + -0.646169715436272 * linear_input.scaler_16 + 0.028387187145926 * linear_input.scaler_17 + 0.014618171442847 * linear_input.scaler_18 + 0.577701761425578 * linear_input.scaler_19 + 0.206961239100229 * linear_input.scaler_20 + 1.606701521710451 * linear_input.scaler_21 + 1.065209601149363 * linear_input.scaler_22 + -0.448630581375639 * linear_input.scaler_23 + 0.272324561460765 * linear_input.scaler_24 + -0.148600545768324 * linear_input.scaler_25 + -0.128990879961389 * linear_input.scaler_26 + -0.065896937388137 * linear_input.scaler_27 + 0.270336540441888 * linear_input.scaler_28 + 0.584193697537978 * linear_input.scaler_29 + 0.078677205065293 * linear_input.scaler_30 + 0.284385151823618 * linear_input.scaler_31 + -0.406505986538449 * linear_input.scaler_32 + 0.135097806993487 * linear_input.scaler_33 + 0.0 * linear_input.scaler_34 + -0.184529540038024 * linear_input.scaler_35 + 0.261679257188847 * linear_input.scaler_36 + -0.350779920489971 * linear_input.scaler_37 + 0.371809801058093 * linear_input.scaler_38 + -0.16771426856727 * linear_input.scaler_39 + -0.383092744817076 * linear_input.scaler_40 + 0.0 * linear_input.scaler_41 + 0.144357764635689 * linear_input.scaler_42 + -0.791131930080599 * linear_input.scaler_43 + -0.320843762949815 * linear_input.scaler_44 + 0.221105335248237 * linear_input.scaler_45 + 0.064642183624293 * linear_input.scaler_46 + -0.567828009533037 * linear_input.scaler_47 + -0.495340606708538 * linear_input.scaler_48 + -0.201084014599965 * linear_input.scaler_49 + 0.015008719865166 * linear_input.scaler_50 + -0.134484272160324 * linear_input.scaler_51 + -0.273461173522055 * linear_input.scaler_52 + 0.555436359517693 * linear_input.scaler_53 + 0.265819116477322 * linear_input.scaler_54 + -0.013078613057657 * linear_input.scaler_55 + -0.420455008535379 * linear_input.scaler_56 + 0.211254394310662 * linear_input.scaler_57 + -0.056193096460471 * linear_input.scaler_58 + -0.045724261769361 * linear_input.scaler_59 + -0.284025115805306 * linear_input.scaler_60 + 0.101357770986978 * linear_input.scaler_61 + 0.418068374393386 * linear_input.scaler_62 + 0.438621642662802 * linear_input.scaler_63 + 0.022410051600128 * linear_input.scaler_64 + 0.053477486048909 * linear_input.scaler_65 + -6.482235422963445 AS "Score_1", 0.0 * linear_input.scaler_2 + -0.145914886427369 * linear_input.scaler_3 + -0.086490049417508 * linear_input.scaler_4 + -0.033481497388587 * linear_input.scaler_5 + 0.081359324457416 * linear_input.scaler_6 + -0.385588083590089 * linear_input.scaler_7 + -0.163996169528206 * linear_input.scaler_8 + -0.072845151371009 * linear_input.scaler_9 + -0.068398197871225 * linear_input.scaler_10 + 0.46743758563982 * linear_input.scaler_11 + 0.328953501085447 * linear_input.scaler_12 + -0.060288010072615 * linear_input.scaler_13 + 0.422674875448371 * linear_input.scaler_14 + -0.22502423579182 * linear_input.scaler_15 + 0.09696467208555 * linear_input.scaler_16 + 0.010615660207649 * linear_input.scaler_17 + -0.003626924804226 * linear_input.scaler_18 + -0.095224512323558 * linear_input.scaler_19 + 0.290301675487174 * linear_input.scaler_20 + -0.397118536653536 * linear_input.scaler_21 + 0.394700917407251 * linear_input.scaler_22 + -0.118693224856662 * linear_input.scaler_23 + 0.341022304446455 * linear_input.scaler_24 + 0.388615038779027 * linear_input.scaler_25 + 0.079079979899888 * linear_input.scaler_26 + -0.344768039989354 * linear_input.scaler_27 + -0.741593687076204 * linear_input.scaler_28 + -1.298193627417092 * linear_input.scaler_29 + -0.303703931609106 * linear_input.scaler_30 + 0.415312804092047 * linear_input.scaler_31 + 0.078241324642935 * linear_input.scaler_32 + 0.048557546912593 * linear_input.scaler_33 + 0.0 * linear_input.scaler_34 + -0.386061278480958 * linear_input.scaler_35 + -0.901755566707512 * linear_input.scaler_36 + -0.064443123192302 * linear_input.scaler_37 + -0.128069129854237 * linear_input.scaler_38 + -0.272179445556759 * linear_input.scaler_39 + -0.706100503814693 * linear_input.scaler_40 + 0.0 * linear_input.scaler_41 + -0.02752079352227 * linear_input.scaler_42 + 0.393664720249276 * linear_input.scaler_43 + 0.314340704652553 * linear_input.scaler_44 + 1.135462868536382 * linear_input.scaler_45 + -1.026488857735785 * linear_input.scaler_46 + -0.983022490329599 * linear_input.scaler_47 + -0.931571331815925 * linear_input.scaler_48 + 0.21329037259952 * linear_input.scaler_49 + -0.083202223668278 * linear_input.scaler_50 + 0.348878834446005 * linear_input.scaler_51 + -0.06895986651181 * linear_input.scaler_52 + 0.795854276025986 * linear_input.scaler_53 + 0.755781249126525 * linear_input.scaler_54 + 0.886148363313503 * linear_input.scaler_55 + 0.664454106691592 * linear_input.scaler_56 + -0.088652083370734 * linear_input.scaler_57 + 0.157464843256594 * linear_input.scaler_58 + 0.173881726146303 * linear_input.scaler_59 + 0.050307987440245 * linear_input.scaler_60 + 0.198977138726265 * linear_input.scaler_61 + 0.054596132434698 * linear_input.scaler_62 + 0.386293255714784 * linear_input.scaler_63 + 0.681599258198855 * linear_input.scaler_64 + 0.028676811943794 * linear_input.scaler_65 + -5.917815422607727 AS "Score_2", 0.0 * linear_input.scaler_2 + 0.160443690482858 * linear_input.scaler_3 + -0.815604130993485 * linear_input.scaler_4 + 0.18903062403224 * linear_input.scaler_5 + 0.770215029577529 * linear_input.scaler_6 + -0.276981414551536 * linear_input.scaler_7 + -0.291153777847655 * linear_input.scaler_8 + 0.057791130332889 * linear_input.scaler_9 + -0.080144755837636 * linear_input.scaler_10 + -0.21768554296393 * linear_input.scaler_11 + 0.442245631138328 * linear_input.scaler_12 + 0.146783593821801 * linear_input.scaler_13 + -0.134682226299954 * linear_input.scaler_14 + 0.817712137026474 * linear_input.scaler_15 + 0.802274756318125 * linear_input.scaler_16 + 0.013964277609951 * linear_input.scaler_17 + 0.000953276177237 * linear_input.scaler_18 + -0.123874442082509 * linear_input.scaler_19 + -1.103856459009016 * linear_input.scaler_20 + -0.896872188500691 * linear_input.scaler_21 + 0.902245212690107 * linear_input.scaler_22 + -0.58045115737241 * linear_input.scaler_23 + 0.080543265608173 * linear_input.scaler_24 + 0.051489638883183 * linear_input.scaler_25 + 0.136748109119238 * linear_input.scaler_26 + -0.467763991655358 * linear_input.scaler_27 + -0.745498259007419 * linear_input.scaler_28 + -0.190038861533435 * linear_input.scaler_29 + 0.11397875510955 * linear_input.scaler_30 + -1.232289194969067 * linear_input.scaler_31 + -1.163412777379926 * linear_input.scaler_32 + 0.166315171261005 * linear_input.scaler_33 + 0.0 * linear_input.scaler_34 + 0.106029959510067 * linear_input.scaler_35 + -0.424044695688579 * linear_input.scaler_36 + -0.202817471705945 * linear_input.scaler_37 + 0.14848958004586 * linear_input.scaler_38 + 0.076367200742214 * linear_input.scaler_39 + -0.157894483006391 * linear_input.scaler_40 + 0.0 * linear_input.scaler_41 + 0.200169922862162 * linear_input.scaler_42 + 0.318798868042629 * linear_input.scaler_43 + -0.649312006005566 * linear_input.scaler_44 + -1.5460317072338 * linear_input.scaler_45 + 0.603831823075725 * linear_input.scaler_46 + 0.885409495645668 * linear_input.scaler_47 + 1.061806458439336 * linear_input.scaler_48 + 0.023989769312836 * linear_input.scaler_49 + -0.002122244748746 * linear_input.scaler_50 + -0.103170829327523 * linear_input.scaler_51 + 0.046793625366006 * linear_input.scaler_52 + -0.575898247985045 * linear_input.scaler_53 + 0.157339500347436 * linear_input.scaler_54 + -0.039081697577213 * linear_input.scaler_55 + 0.382557656754005 * linear_input.scaler_56 + -0.121339230371704 * linear_input.scaler_57 + 0.086896989242912 * linear_input.scaler_58 + 0.163549741775361 * linear_input.scaler_59 + 0.46480351244273 * linear_input.scaler_60 + -0.015015209353445 * linear_input.scaler_61 + 0.207995793631536 * linear_input.scaler_62 + 0.004764577017042 * linear_input.scaler_63 + -0.088567229347048 * linear_input.scaler_64 + -0.338510788402228 * linear_input.scaler_65 + -5.986352042000449 AS "Score_3", 0.0 * linear_input.scaler_2 + 0.038593331951087 * linear_input.scaler_3 + -0.350888943097491 * linear_input.scaler_4 + -0.785083383249094 * linear_input.scaler_5 + -0.209142635887268 * linear_input.scaler_6 + -1.000256208137196 * linear_input.scaler_7 + -0.467592304799075 * linear_input.scaler_8 + 0.079276007294978 * linear_input.scaler_9 + 0.003215744242453 * linear_input.scaler_10 + 0.405945605985361 * linear_input.scaler_11 + -0.249118949543027 * linear_input.scaler_12 + -0.351735859667927 * linear_input.scaler_13 + -0.795957104505765 * linear_input.scaler_14 + -0.639712328417645 * linear_input.scaler_15 + -0.324769905172402 * linear_input.scaler_16 + 0.012559206466687 * linear_input.scaler_17 + 0.026921570136944 * linear_input.scaler_18 + 0.293449405589686 * linear_input.scaler_19 + 0.498493672511423 * linear_input.scaler_20 + 0.36748114361812 * linear_input.scaler_21 + 0.022390328304382 * linear_input.scaler_22 + 0.550611802406291 * linear_input.scaler_23 + -0.072577833618213 * linear_input.scaler_24 + 0.128585516962124 * linear_input.scaler_25 + 0.178239422265325 * linear_input.scaler_26 + -0.08745821598727 * linear_input.scaler_27 + 0.515776212005284 * linear_input.scaler_28 + -0.166014752291668 * linear_input.scaler_29 + -0.004172282929927 * linear_input.scaler_30 + 0.004378901170746 * linear_input.scaler_31 + 0.852387662931981 * linear_input.scaler_32 + 0.310430927311398 * linear_input.scaler_33 + 0.0 * linear_input.scaler_34 + 0.379382867764437 * linear_input.scaler_35 + 0.0793378582684 * linear_input.scaler_36 + -0.027016304987794 * linear_input.scaler_37 + 0.50378398055099 * linear_input.scaler_38 + 0.349359938807979 * linear_input.scaler_39 + 0.3247405700555 * linear_input.scaler_40 + 0.0 * linear_input.scaler_41 + 0.38272911359713 * linear_input.scaler_42 + 0.779458676664398 * linear_input.scaler_43 + -0.492126163736498 * linear_input.scaler_44 + 0.999525954533066 * linear_input.scaler_45 + 0.219604762412205 * linear_input.scaler_46 + 0.296673426644494 * linear_input.scaler_47 + -0.063955933906697 * linear_input.scaler_48 + -0.039808407361402 * linear_input.scaler_49 + 0.1397215065092 * linear_input.scaler_50 + 0.480754488547896 * linear_input.scaler_51 + -0.707260590033477 * linear_input.scaler_52 + -0.165919568414957 * linear_input.scaler_53 + 0.127146897095005 * linear_input.scaler_54 + -0.684296083276981 * linear_input.scaler_55 + -0.610419591614317 * linear_input.scaler_56 + 0.150857618634498 * linear_input.scaler_57 + -0.110275019476791 * linear_input.scaler_58 + -0.123652327692228 * linear_input.scaler_59 + -0.042596298206216 * linear_input.scaler_60 + -0.327775433338097 * linear_input.scaler_61 + -0.007688246791207 * linear_input.scaler_62 + -0.589475153648982 * linear_input.scaler_63 + 0.072172056672395 * linear_input.scaler_64 + 0.045520126336505 * linear_input.scaler_65 + -5.814042483063878 AS "Score_4", 0.0 * linear_input.scaler_2 + -0.0678965983385 * linear_input.scaler_3 + 0.776453567958699 * linear_input.scaler_4 + -0.246004073919952 * linear_input.scaler_5 + 0.533791517045476 * linear_input.scaler_6 + 0.710814573945252 * linear_input.scaler_7 + 0.634739374913234 * linear_input.scaler_8 + -0.289182549910703 * linear_input.scaler_9 + 0.069456435125803 * linear_input.scaler_10 + -0.135973353609729 * linear_input.scaler_11 + 0.180006566894942 * linear_input.scaler_12 + 0.044153273188079 * linear_input.scaler_13 + 0.255362796689689 * linear_input.scaler_14 + -0.490263128734614 * linear_input.scaler_15 + -0.064415593900839 * linear_input.scaler_16 + 0.079181474587059 * linear_input.scaler_17 + -0.056928621210764 * linear_input.scaler_18 + 0.103345990405526 * linear_input.scaler_19 + 0.468449900327126 * linear_input.scaler_20 + -0.143554691022728 * linear_input.scaler_21 + -1.406970333275435 * linear_input.scaler_22 + -1.594930511681628 * linear_input.scaler_23 + -1.192699967566454 * linear_input.scaler_24 + 0.099637643565635 * linear_input.scaler_25 + -0.137565552137759 * linear_input.scaler_26 + 0.334129420883315 * linear_input.scaler_27 + 0.486049584891726 * linear_input.scaler_28 + 0.200037900836242 * linear_input.scaler_29 + 0.576173493646583 * linear_input.scaler_30 + 0.030214812006462 * linear_input.scaler_31 + -0.325041534866027 * linear_input.scaler_32 + -0.061079513962394 * linear_input.scaler_33 + 0.0 * linear_input.scaler_34 + -0.165050461240139 * linear_input.scaler_35 + 0.455320334872355 * linear_input.scaler_36 + -0.350089048341344 * linear_input.scaler_37 + -0.397358198137987 * linear_input.scaler_38 + -0.248696839299378 * linear_input.scaler_39 + 0.03621490034651 * linear_input.scaler_40 + 0.0 * linear_input.scaler_41 + 0.020787073147836 * linear_input.scaler_42 + -0.192602040983205 * linear_input.scaler_43 + -0.980586185482194 * linear_input.scaler_44 + -0.331205243599625 * linear_input.scaler_45 + -0.1424350134028 * linear_input.scaler_46 + 0.05991358194884 * linear_input.scaler_47 + 0.03307444276988 * linear_input.scaler_48 + -0.074241649461099 * linear_input.scaler_49 + 0.121283784636666 * linear_input.scaler_50 + -0.064808029039583 * linear_input.scaler_51 + -0.076400506004656 * linear_input.scaler_52 + -0.287732700041676 * linear_input.scaler_53 + 0.141982741542192 * linear_input.scaler_54 + -0.213289321996078 * linear_input.scaler_55 + -0.277154561201634 * linear_input.scaler_56 + 0.198692171462182 * linear_input.scaler_57 + 0.020796582626586 * linear_input.scaler_58 + 0.176967688627276 * linear_input.scaler_59 + 0.437871052604529 * linear_input.scaler_60 + 0.514672853947417 * linear_input.scaler_61 + -0.094598241709419 * linear_input.scaler_62 + -0.264577358763743 * linear_input.scaler_63 + -0.251076419193722 * linear_input.scaler_64 + -0.23226353791422 * linear_input.scaler_65 + -5.669706361961568 AS "Score_5", 0.0 * linear_input.scaler_2 + -0.070640213863329 * linear_input.scaler_3 + -0.455424022068254 * linear_input.scaler_4 + 0.023161680053489 * linear_input.scaler_5 + -0.206801539491746 * linear_input.scaler_6 + -0.003056230095812 * linear_input.scaler_7 + -0.297967203492748 * linear_input.scaler_8 + 0.136417791922905 * linear_input.scaler_9 + 0.047024069292766 * linear_input.scaler_10 + -0.282253320333862 * linear_input.scaler_11 + -0.206761289991193 * linear_input.scaler_12 + -0.102847829344533 * linear_input.scaler_13 + -0.389107338415964 * linear_input.scaler_14 + -0.25677156494637 * linear_input.scaler_15 + 0.314008818452066 * linear_input.scaler_16 + 0.050836761371745 * linear_input.scaler_17 + 0.005328413705447 * linear_input.scaler_18 + -0.33613198667787 * linear_input.scaler_19 + 0.130120281756844 * linear_input.scaler_20 + -0.108199409277827 * linear_input.scaler_21 + -0.666079000971103 * linear_input.scaler_22 + -1.339108881108871 * linear_input.scaler_23 + -0.195767903630806 * linear_input.scaler_24 + 0.075041514023002 * linear_input.scaler_25 + 0.019047588339872 * linear_input.scaler_26 + -0.086932434900943 * linear_input.scaler_27 + 0.062780809677499 * linear_input.scaler_28 + 0.098841106334986 * linear_input.scaler_29 + -0.206507036389932 * linear_input.scaler_30 + -0.042574822603695 * linear_input.scaler_31 + -0.676893083077384 * linear_input.scaler_32 + -0.000514387083599 * linear_input.scaler_33 + 0.0 * linear_input.scaler_34 + 0.271024183205403 * linear_input.scaler_35 + 0.509832463968706 * linear_input.scaler_36 + 0.387048345501834 * linear_input.scaler_37 + -0.03789140934701 * linear_input.scaler_38 + 0.131081854099427 * linear_input.scaler_39 + -0.129470276633326 * linear_input.scaler_40 + 0.0 * linear_input.scaler_41 + -0.043738979769464 * linear_input.scaler_42 + -0.664314787095409 * linear_input.scaler_43 + 0.929947332067689 * linear_input.scaler_44 + -0.012263035919891 * linear_input.scaler_45 + 0.449405957800425 * linear_input.scaler_46 + 0.084026803215464 * linear_input.scaler_47 + 0.68521893187523 * linear_input.scaler_48 + 0.397477247889069 * linear_input.scaler_49 + 0.060128638751313 * linear_input.scaler_50 + -0.171262762436002 * linear_input.scaler_51 + 0.502030952246261 * linear_input.scaler_52 + 0.717982421723686 * linear_input.scaler_53 + -0.58383714660924 * linear_input.scaler_54 + 0.62914736233737 * linear_input.scaler_55 + 0.431690854222773 * linear_input.scaler_56 + -0.410672603814153 * linear_input.scaler_57 + 0.0648428173783 * linear_input.scaler_58 + -0.088086242688013 * linear_input.scaler_59 + -0.229223190249783 * linear_input.scaler_60 + -0.244624688194943 * linear_input.scaler_61 + -0.230528547177269 * linear_input.scaler_62 + 0.522499328444294 * linear_input.scaler_63 + -0.152290360404848 * linear_input.scaler_64 + -0.099157484316284 * linear_input.scaler_65 + -5.880197657053139 AS "Score_6", 0.0 * linear_input.scaler_2 + 0.148265822258556 * linear_input.scaler_3 + 0.161189371133392 * linear_input.scaler_4 + 0.49658398760888 * linear_input.scaler_5 + 0.170743538584196 * linear_input.scaler_6 + 0.457032387941496 * linear_input.scaler_7 + 0.370706683545013 * linear_input.scaler_8 + 0.163796399118385 * linear_input.scaler_9 + 0.048150687931517 * linear_input.scaler_10 + -0.013817442368273 * linear_input.scaler_11 + 0.545858008593778 * linear_input.scaler_12 + 0.127116871963204 * linear_input.scaler_13 + 1.125222516859811 * linear_input.scaler_14 + 0.125044903016109 * linear_input.scaler_15 + -0.149492425331405 * linear_input.scaler_16 + 0.087041063056128 * linear_input.scaler_17 + 0.042015214652319 * linear_input.scaler_18 + -0.324599343741436 * linear_input.scaler_19 + -0.671595706758252 * linear_input.scaler_20 + -0.706578065378838 * linear_input.scaler_21 + -0.36207916251135 * linear_input.scaler_22 + 0.106202082146702 * linear_input.scaler_23 + 0.207504826494616 * linear_input.scaler_24 + -0.030769090977919 * linear_input.scaler_25 + 0.063294517299508 * linear_input.scaler_26 + -0.776913642585517 * linear_input.scaler_27 + -0.048080697560091 * linear_input.scaler_28 + -0.745894981900156 * linear_input.scaler_29 + -0.128419667219453 * linear_input.scaler_30 + 0.204723484516918 * linear_input.scaler_31 + 0.305101776487471 * linear_input.scaler_32 + -0.185654206430981 * linear_input.scaler_33 + 0.0 * linear_input.scaler_34 + 0.15320697449722 * linear_input.scaler_35 + 0.032257879886539 * linear_input.scaler_36 + 0.29844965635855 * linear_input.scaler_37 + 0.295814969416361 * linear_input.scaler_38 + 0.66655817268485 * linear_input.scaler_39 + 0.458725532333664 * linear_input.scaler_40 + 0.0 * linear_input.scaler_41 + 0.028136086352939 * linear_input.scaler_42 + -0.521734182962021 * linear_input.scaler_43 + 0.218027195555382 * linear_input.scaler_44 + -0.003755499521899 * linear_input.scaler_45 + 0.676847509046055 * linear_input.scaler_46 + 0.137001299736576 * linear_input.scaler_47 + -0.050389087619674 * linear_input.scaler_48 + 0.028282166351524 * linear_input.scaler_49 + 0.161720290100921 * linear_input.scaler_50 + -0.160807932038179 * linear_input.scaler_51 + 0.176462916187846 * linear_input.scaler_52 + 0.219113446092805 * linear_input.scaler_53 + -1.325135064909204 * linear_input.scaler_54 + -1.179753509254788 * linear_input.scaler_55 + 0.016690115545518 * linear_input.scaler_56 + 0.094791471749739 * linear_input.scaler_57 + 0.037078481280924 * linear_input.scaler_58 + -0.455953010347308 * linear_input.scaler_59 + -0.241523753625609 * linear_input.scaler_60 + -0.650734037428469 * linear_input.scaler_61 + -0.624069126521138 * linear_input.scaler_62 + -0.731705805904018 * linear_input.scaler_63 + -0.38701551368882 * linear_input.scaler_64 + 0.171509422854922 * linear_input.scaler_65 + -5.805986737285208 AS "Score_7", 0.0 * linear_input.scaler_2 + 0.201240827828588 * linear_input.scaler_3 + 0.358381782749726 * linear_input.scaler_4 + -0.76162346127909 * linear_input.scaler_5 + 0.106913758932538 * linear_input.scaler_6 + 0.155516306778657 * linear_input.scaler_7 + -0.822624820325524 * linear_input.scaler_8 + 0.025234098769328 * linear_input.scaler_9 + 0.038596261215574 * linear_input.scaler_10 + -0.262574083952591 * linear_input.scaler_11 + 0.691709537512621 * linear_input.scaler_12 + 0.043446171333914 * linear_input.scaler_13 + -0.641192506862455 * linear_input.scaler_14 + 0.627942928769428 * linear_input.scaler_15 + -0.02119737124976 * linear_input.scaler_16 + 0.037776049868776 * linear_input.scaler_17 + 0.195255811502265 * linear_input.scaler_18 + 0.497920548765339 * linear_input.scaler_19 + 0.63575744033585 * linear_input.scaler_20 + 0.325487448914308 * linear_input.scaler_21 + -0.265253886442813 * linear_input.scaler_22 + 0.63594722590736 * linear_input.scaler_23 + 0.756213763964102 * linear_input.scaler_24 + -0.222831780036043 * linear_input.scaler_25 + -0.026215924691965 * linear_input.scaler_26 + -0.137579548875306 * linear_input.scaler_27 + -0.229928989477166 * linear_input.scaler_28 + 0.9045552251529 * linear_input.scaler_29 + 0.000805082466563 * linear_input.scaler_30 + 0.128790431608829 * linear_input.scaler_31 + -0.857570292026303 * linear_input.scaler_32 + 0.017846326301968 * linear_input.scaler_33 + 0.0 * linear_input.scaler_34 + -0.758464291854137 * linear_input.scaler_35 + -0.69932120604782 * linear_input.scaler_36 + 1.834220181746272 * linear_input.scaler_37 + 0.054668067456567 * linear_input.scaler_38 + -0.459368991744758 * linear_input.scaler_39 + -1.145466503389502 * linear_input.scaler_40 + 0.0 * linear_input.scaler_41 + 0.063905867890897 * linear_input.scaler_42 + 0.288368310014141 * linear_input.scaler_43 + 1.029298103890406 * linear_input.scaler_44 + 0.150546539934828 * linear_input.scaler_45 + 0.342772024351947 * linear_input.scaler_46 + 0.543294775295346 * linear_input.scaler_47 + 0.163200772454355 * linear_input.scaler_48 + 0.013450358749169 * linear_input.scaler_49 + 0.095174177000911 * linear_input.scaler_50 + -0.065051102141567 * linear_input.scaler_51 + 0.602947655710228 * linear_input.scaler_52 + -0.836130030863534 * linear_input.scaler_53 + -0.759630193104614 * linear_input.scaler_54 + 0.292932466857486 * linear_input.scaler_55 + -0.165569401794822 * linear_input.scaler_56 + -0.112487915590319 * linear_input.scaler_57 + -0.042984373520057 * linear_input.scaler_58 + -0.141970519049418 * linear_input.scaler_59 + -1.219575414862092 * linear_input.scaler_60 + 0.240682625503722 * linear_input.scaler_61 + 0.478077339606018 * linear_input.scaler_62 + -0.870880970024964 * linear_input.scaler_63 + -0.284983185852251 * linear_input.scaler_64 + 0.085769410550325 * linear_input.scaler_65 + -5.600857660416532 AS "Score_8", 0.0 * linear_input.scaler_2 + -0.160007401784487 * linear_input.scaler_3 + -0.197236282404325 * linear_input.scaler_4 + 0.35045053949987 * linear_input.scaler_5 + -0.043966277008313 * linear_input.scaler_6 + -0.524478429176437 * linear_input.scaler_7 + -0.206929550238088 * linear_input.scaler_8 + -0.074540242502359 * linear_input.scaler_9 + -0.084290079859087 * linear_input.scaler_10 + 0.438155838807453 * linear_input.scaler_11 + 0.141966957483748 * linear_input.scaler_12 + 0.158265623383563 * linear_input.scaler_13 + 0.225755517859522 * linear_input.scaler_14 + 0.07280243277995 * linear_input.scaler_15 + 0.478263344221891 * linear_input.scaler_16 + -0.015354939354209 * linear_input.scaler_17 + -0.084176565587297 * linear_input.scaler_18 + 0.112263144759197 * linear_input.scaler_19 + 0.778276537925364 * linear_input.scaler_20 + 0.532162817494294 * linear_input.scaler_21 + 0.123313934644127 * linear_input.scaler_22 + 1.758047067117637 * linear_input.scaler_23 + 0.041664282978886 * linear_input.scaler_24 + -0.363962432306418 * linear_input.scaler_25 + 0.045791348975663 * linear_input.scaler_26 + -0.161983918783657 * linear_input.scaler_27 + 0.695849564209686 * linear_input.scaler_28 + 0.718938960460019 * linear_input.scaler_29 + 0.428213359292307 * linear_input.scaler_30 + 1.022944735972107 * linear_input.scaler_31 + -0.106000849089563 * linear_input.scaler_32 + -0.081421334772709 * linear_input.scaler_33 + 0.0 * linear_input.scaler_34 + -0.73342624188589 * linear_input.scaler_35 + -0.353687776812927 * linear_input.scaler_36 + 1.054104281185883 * linear_input.scaler_37 + -1.216124697040342 * linear_input.scaler_38 + -0.270798340497197 * linear_input.scaler_39 + 0.110740117258314 * linear_input.scaler_40 + 0.0 * linear_input.scaler_41 + 0.373886425578569 * linear_input.scaler_42 + -0.092122979618312 * linear_input.scaler_43 + -1.56057565553378 * linear_input.scaler_44 + -2.234179491305096 * linear_input.scaler_45 + -0.920617262140401 * linear_input.scaler_46 + -0.349267511051256 * linear_input.scaler_47 + -0.626297715050303 * linear_input.scaler_48 + 0.08766564472812 * linear_input.scaler_49 + 0.083858931161857 * linear_input.scaler_50 + 0.260928569852899 * linear_input.scaler_51 + -0.339580886661493 * linear_input.scaler_52 + 0.272690855298267 * linear_input.scaler_53 + -0.343040483538152 * linear_input.scaler_54 + -0.727163263662795 * linear_input.scaler_55 + 0.042280783507047 * linear_input.scaler_56 + 0.136301197827252 * linear_input.scaler_57 + 0.020658393180517 * linear_input.scaler_58 + -0.147643310092453 * linear_input.scaler_59 + -0.087994242875471 * linear_input.scaler_60 + 0.070723032972768 * linear_input.scaler_61 + 0.356140633497757 * linear_input.scaler_62 + 0.086173641203023 * linear_input.scaler_63 + 0.204153039658033 * linear_input.scaler_64 + -0.27541375917714 * linear_input.scaler_65 + -6.515161635337818 AS "Score_9" 
FROM linear_input), 
orig_cte AS 
(SELECT linear_model_cte."KEY" AS "KEY", linear_model_cte."Score_0" AS "Score_0", linear_model_cte."Score_1" AS "Score_1", linear_model_cte."Score_2" AS "Score_2", linear_model_cte."Score_3" AS "Score_3", linear_model_cte."Score_4" AS "Score_4", linear_model_cte."Score_5" AS "Score_5", linear_model_cte."Score_6" AS "Score_6", linear_model_cte."Score_7" AS "Score_7", linear_model_cte."Score_8" AS "Score_8", linear_model_cte."Score_9" AS "Score_9", (1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte."Score_0"), 100.0)))) / (1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte."Score_0"), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte."Score_1"), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte."Score_2"), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte."Score_3"), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte."Score_4"), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte."Score_5"), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte."Score_6"), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte."Score_7"), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte."Score_8"), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte."Score_9"), 100.0)))) AS "Proba_0", (1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte."Score_1"), 100.0)))) / (1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte."Score_0"), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte."Score_1"), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte."Score_2"), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte."Score_3"), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte."Score_4"), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte."Score_5"), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte."Score_6"), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte."Score_7"), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte."Score_8"), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte."Score_9"), 100.0)))) AS "Proba_1", (1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte."Score_2"), 100.0)))) / (1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte."Score_0"), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte."Score_1"), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte."Score_2"), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte."Score_3"), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte."Score_4"), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte."Score_5"), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte."Score_6"), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte."Score_7"), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte."Score_8"), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte."Score_9"), 100.0)))) AS "Proba_2", (1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte."Score_3"), 100.0)))) / (1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte."Score_0"), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte."Score_1"), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte."Score_2"), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte."Score_3"), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte."Score_4"), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte."Score_5"), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte."Score_6"), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte."Score_7"), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte."Score_8"), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte."Score_9"), 100.0)))) AS "Proba_3", (1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte."Score_4"), 100.0)))) / (1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte."Score_0"), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte."Score_1"), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte."Score_2"), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte."Score_3"), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte."Score_4"), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte."Score_5"), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte."Score_6"), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte."Score_7"), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte."Score_8"), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte."Score_9"), 100.0)))) AS "Proba_4", (1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte."Score_5"), 100.0)))) / (1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte."Score_0"), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte."Score_1"), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte."Score_2"), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte."Score_3"), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte."Score_4"), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte."Score_5"), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte."Score_6"), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte."Score_7"), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte."Score_8"), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte."Score_9"), 100.0)))) AS "Proba_5", (1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte."Score_6"), 100.0)))) / (1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte."Score_0"), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte."Score_1"), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte."Score_2"), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte."Score_3"), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte."Score_4"), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte."Score_5"), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte."Score_6"), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte."Score_7"), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte."Score_8"), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte."Score_9"), 100.0)))) AS "Proba_6", (1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte."Score_7"), 100.0)))) / (1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte."Score_0"), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte."Score_1"), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte."Score_2"), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte."Score_3"), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte."Score_4"), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte."Score_5"), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte."Score_6"), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte."Score_7"), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte."Score_8"), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte."Score_9"), 100.0)))) AS "Proba_7", (1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte."Score_8"), 100.0)))) / (1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte."Score_0"), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte."Score_1"), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte."Score_2"), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte."Score_3"), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte."Score_4"), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte."Score_5"), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte."Score_6"), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte."Score_7"), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte."Score_8"), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte."Score_9"), 100.0)))) AS "Proba_8", (1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte."Score_9"), 100.0)))) / (1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte."Score_0"), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte."Score_1"), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte."Score_2"), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte."Score_3"), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte."Score_4"), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte."Score_5"), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte."Score_6"), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte."Score_7"), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte."Score_8"), 100.0))) + 1.0 / (1.0 + exp(least(greatest(-100.0, -linear_model_cte."Score_9"), 100.0)))) AS "Proba_9", CAST(NULL AS FLOAT) AS "LogProba_0", CAST(NULL AS FLOAT) AS "LogProba_1", CAST(NULL AS FLOAT) AS "LogProba_2", CAST(NULL AS FLOAT) AS "LogProba_3", CAST(NULL AS FLOAT) AS "LogProba_4", CAST(NULL AS FLOAT) AS "LogProba_5", CAST(NULL AS FLOAT) AS "LogProba_6", CAST(NULL AS FLOAT) AS "LogProba_7", CAST(NULL AS FLOAT) AS "LogProba_8", CAST(NULL AS FLOAT) AS "LogProba_9", CAST(NULL AS BIGINT) AS "Decision", CAST(NULL AS FLOAT) AS "DecisionProba" 
FROM linear_model_cte), 
score_class_union AS 
(SELECT scu."KEY_u" AS "KEY_u", scu."class" AS "class", scu."LogProba" AS "LogProba", scu."Proba" AS "Proba", scu."Score" AS "Score" 
FROM (SELECT orig_cte."KEY" AS "KEY_u", 0 AS "class", orig_cte."LogProba_0" AS "LogProba", orig_cte."Proba_0" AS "Proba", orig_cte."Score_0" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 1 AS "class", orig_cte."LogProba_1" AS "LogProba", orig_cte."Proba_1" AS "Proba", orig_cte."Score_1" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 2 AS "class", orig_cte."LogProba_2" AS "LogProba", orig_cte."Proba_2" AS "Proba", orig_cte."Score_2" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 3 AS "class", orig_cte."LogProba_3" AS "LogProba", orig_cte."Proba_3" AS "Proba", orig_cte."Score_3" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 4 AS "class", orig_cte."LogProba_4" AS "LogProba", orig_cte."Proba_4" AS "Proba", orig_cte."Score_4" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 5 AS "class", orig_cte."LogProba_5" AS "LogProba", orig_cte."Proba_5" AS "Proba", orig_cte."Score_5" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 6 AS "class", orig_cte."LogProba_6" AS "LogProba", orig_cte."Proba_6" AS "Proba", orig_cte."Score_6" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 7 AS "class", orig_cte."LogProba_7" AS "LogProba", orig_cte."Proba_7" AS "Proba", orig_cte."Score_7" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 8 AS "class", orig_cte."LogProba_8" AS "LogProba", orig_cte."Proba_8" AS "Proba", orig_cte."Score_8" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 9 AS "class", orig_cte."LogProba_9" AS "LogProba", orig_cte."Proba_9" AS "Proba", orig_cte."Score_9" AS "Score" 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte."KEY" AS "KEY", orig_cte."Score_0" AS "Score_0", orig_cte."Score_1" AS "Score_1", orig_cte."Score_2" AS "Score_2", orig_cte."Score_3" AS "Score_3", orig_cte."Score_4" AS "Score_4", orig_cte."Score_5" AS "Score_5", orig_cte."Score_6" AS "Score_6", orig_cte."Score_7" AS "Score_7", orig_cte."Score_8" AS "Score_8", orig_cte."Score_9" AS "Score_9", orig_cte."Proba_0" AS "Proba_0", orig_cte."Proba_1" AS "Proba_1", orig_cte."Proba_2" AS "Proba_2", orig_cte."Proba_3" AS "Proba_3", orig_cte."Proba_4" AS "Proba_4", orig_cte."Proba_5" AS "Proba_5", orig_cte."Proba_6" AS "Proba_6", orig_cte."Proba_7" AS "Proba_7", orig_cte."Proba_8" AS "Proba_8", orig_cte."Proba_9" AS "Proba_9", orig_cte."LogProba_0" AS "LogProba_0", orig_cte."LogProba_1" AS "LogProba_1", orig_cte."LogProba_2" AS "LogProba_2", orig_cte."LogProba_3" AS "LogProba_3", orig_cte."LogProba_4" AS "LogProba_4", orig_cte."LogProba_5" AS "LogProba_5", orig_cte."LogProba_6" AS "LogProba_6", orig_cte."LogProba_7" AS "LogProba_7", orig_cte."LogProba_8" AS "LogProba_8", orig_cte."LogProba_9" AS "LogProba_9", orig_cte."Decision" AS "Decision", orig_cte."DecisionProba" AS "DecisionProba", max_select."KEY_m" AS "KEY_m", max_select."max_Proba" AS "max_Proba" 
FROM orig_cte LEFT OUTER JOIN (SELECT score_class_union."KEY_u" AS "KEY_m", max(score_class_union."Proba") AS "max_Proba" 
FROM score_class_union GROUP BY score_class_union."KEY_u") AS max_select ON orig_cte."KEY" = max_select."KEY_m"), 
union_with_max AS 
(SELECT score_class_union."KEY_u" AS "KEY_u", score_class_union."class" AS "class", score_class_union."LogProba" AS "LogProba", score_class_union."Proba" AS "Proba", score_class_union."Score" AS "Score", score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Score_2" AS "Score_2", score_max."Score_3" AS "Score_3", score_max."Score_4" AS "Score_4", score_max."Score_5" AS "Score_5", score_max."Score_6" AS "Score_6", score_max."Score_7" AS "Score_7", score_max."Score_8" AS "Score_8", score_max."Score_9" AS "Score_9", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."Proba_2" AS "Proba_2", score_max."Proba_3" AS "Proba_3", score_max."Proba_4" AS "Proba_4", score_max."Proba_5" AS "Proba_5", score_max."Proba_6" AS "Proba_6", score_max."Proba_7" AS "Proba_7", score_max."Proba_8" AS "Proba_8", score_max."Proba_9" AS "Proba_9", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."LogProba_2" AS "LogProba_2", score_max."LogProba_3" AS "LogProba_3", score_max."LogProba_4" AS "LogProba_4", score_max."LogProba_5" AS "LogProba_5", score_max."LogProba_6" AS "LogProba_6", score_max."LogProba_7" AS "LogProba_7", score_max."LogProba_8" AS "LogProba_8", score_max."LogProba_9" AS "LogProba_9", score_max."Decision" AS "Decision", score_max."DecisionProba" AS "DecisionProba", score_max."KEY_m" AS "KEY_m", score_max."max_Proba" AS "max_Proba" 
FROM score_class_union LEFT OUTER JOIN score_max ON score_class_union."KEY_u" = score_max."KEY"), 
arg_max_cte AS 
(SELECT score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Score_2" AS "Score_2", score_max."Score_3" AS "Score_3", score_max."Score_4" AS "Score_4", score_max."Score_5" AS "Score_5", score_max."Score_6" AS "Score_6", score_max."Score_7" AS "Score_7", score_max."Score_8" AS "Score_8", score_max."Score_9" AS "Score_9", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."Proba_2" AS "Proba_2", score_max."Proba_3" AS "Proba_3", score_max."Proba_4" AS "Proba_4", score_max."Proba_5" AS "Proba_5", score_max."Proba_6" AS "Proba_6", score_max."Proba_7" AS "Proba_7", score_max."Proba_8" AS "Proba_8", score_max."Proba_9" AS "Proba_9", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."LogProba_2" AS "LogProba_2", score_max."LogProba_3" AS "LogProba_3", score_max."LogProba_4" AS "LogProba_4", score_max."LogProba_5" AS "LogProba_5", score_max."LogProba_6" AS "LogProba_6", score_max."LogProba_7" AS "LogProba_7", score_max."LogProba_8" AS "LogProba_8", score_max."LogProba_9" AS "LogProba_9", score_max."Decision" AS "Decision", score_max."DecisionProba" AS "DecisionProba", score_max."KEY_m" AS "KEY_m", score_max."max_Proba" AS "max_Proba", "arg_max_t_Proba"."KEY_Proba" AS "KEY_Proba", "arg_max_t_Proba"."arg_max_Proba" AS "arg_max_Proba" 
FROM score_max LEFT OUTER JOIN (SELECT union_with_max."KEY" AS "KEY_Proba", min(union_with_max."class") AS "arg_max_Proba" 
FROM union_with_max 
WHERE union_with_max."max_Proba" <= union_with_max."Proba" GROUP BY union_with_max."KEY") AS "arg_max_t_Proba" ON score_max."KEY" = "arg_max_t_Proba"."KEY_Proba")
 SELECT arg_max_cte."KEY" AS "KEY", arg_max_cte."Score_0" AS "Score_0", arg_max_cte."Score_1" AS "Score_1", arg_max_cte."Score_2" AS "Score_2", arg_max_cte."Score_3" AS "Score_3", arg_max_cte."Score_4" AS "Score_4", arg_max_cte."Score_5" AS "Score_5", arg_max_cte."Score_6" AS "Score_6", arg_max_cte."Score_7" AS "Score_7", arg_max_cte."Score_8" AS "Score_8", arg_max_cte."Score_9" AS "Score_9", arg_max_cte."Proba_0" AS "Proba_0", arg_max_cte."Proba_1" AS "Proba_1", arg_max_cte."Proba_2" AS "Proba_2", arg_max_cte."Proba_3" AS "Proba_3", arg_max_cte."Proba_4" AS "Proba_4", arg_max_cte."Proba_5" AS "Proba_5", arg_max_cte."Proba_6" AS "Proba_6", arg_max_cte."Proba_7" AS "Proba_7", arg_max_cte."Proba_8" AS "Proba_8", arg_max_cte."Proba_9" AS "Proba_9", CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN ln(arg_max_cte."Proba_0") ELSE -1.79769313486231e+308 END AS "LogProba_0", CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN ln(arg_max_cte."Proba_1") ELSE -1.79769313486231e+308 END AS "LogProba_1", CASE WHEN (arg_max_cte."Proba_2" IS NULL OR arg_max_cte."Proba_2" > 0.0) THEN ln(arg_max_cte."Proba_2") ELSE -1.79769313486231e+308 END AS "LogProba_2", CASE WHEN (arg_max_cte."Proba_3" IS NULL OR arg_max_cte."Proba_3" > 0.0) THEN ln(arg_max_cte."Proba_3") ELSE -1.79769313486231e+308 END AS "LogProba_3", CASE WHEN (arg_max_cte."Proba_4" IS NULL OR arg_max_cte."Proba_4" > 0.0) THEN ln(arg_max_cte."Proba_4") ELSE -1.79769313486231e+308 END AS "LogProba_4", CASE WHEN (arg_max_cte."Proba_5" IS NULL OR arg_max_cte."Proba_5" > 0.0) THEN ln(arg_max_cte."Proba_5") ELSE -1.79769313486231e+308 END AS "LogProba_5", CASE WHEN (arg_max_cte."Proba_6" IS NULL OR arg_max_cte."Proba_6" > 0.0) THEN ln(arg_max_cte."Proba_6") ELSE -1.79769313486231e+308 END AS "LogProba_6", CASE WHEN (arg_max_cte."Proba_7" IS NULL OR arg_max_cte."Proba_7" > 0.0) THEN ln(arg_max_cte."Proba_7") ELSE -1.79769313486231e+308 END AS "LogProba_7", CASE WHEN (arg_max_cte."Proba_8" IS NULL OR arg_max_cte."Proba_8" > 0.0) THEN ln(arg_max_cte."Proba_8") ELSE -1.79769313486231e+308 END AS "LogProba_8", CASE WHEN (arg_max_cte."Proba_9" IS NULL OR arg_max_cte."Proba_9" > 0.0) THEN ln(arg_max_cte."Proba_9") ELSE -1.79769313486231e+308 END AS "LogProba_9", arg_max_cte."arg_max_Proba" AS "Decision", arg_max_cte."max_Proba" AS "DecisionProba" 
FROM arg_max_cte