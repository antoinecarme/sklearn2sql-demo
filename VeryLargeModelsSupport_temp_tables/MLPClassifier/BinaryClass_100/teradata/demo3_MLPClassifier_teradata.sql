-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2018

-- Model : MLPClassifier
-- Dataset : BinaryClass_100
-- Database : teradata


-- This SQL code can contain one or more statements, to be executed in the order they appear in this file.



-- Code For temporary table tmp_20180416223300_ou2sev_hl_1 part 1/2. Create 


CREATE GLOBAL TEMPORARY TABLE tmp_20180416223300_ou2sev_hl_1  (
	"KEY" BIGINT, 
	"NEUR_1_1" FLOAT, 
	"NEUR_1_2" FLOAT, 
	"NEUR_1_3" FLOAT
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table tmp_20180416223300_ou2sev_hl_1 part 2/2. Populate

INSERT INTO tmp_20180416223300_ou2sev_hl_1 ("KEY", "NEUR_1_1", "NEUR_1_2", "NEUR_1_3") SELECT "U"."KEY", "U"."NEUR_1_1", "U"."NEUR_1_2", "U"."NEUR_1_3" 
FROM (WITH "IL" AS 
(SELECT "ADS"."KEY" AS "KEY", CAST("ADS"."Feature_0" AS FLOAT) AS "Feature_0", CAST("ADS"."Feature_1" AS FLOAT) AS "Feature_1", CAST("ADS"."Feature_2" AS FLOAT) AS "Feature_2", CAST("ADS"."Feature_3" AS FLOAT) AS "Feature_3", CAST("ADS"."Feature_4" AS FLOAT) AS "Feature_4", CAST("ADS"."Feature_5" AS FLOAT) AS "Feature_5", CAST("ADS"."Feature_6" AS FLOAT) AS "Feature_6", CAST("ADS"."Feature_7" AS FLOAT) AS "Feature_7", CAST("ADS"."Feature_8" AS FLOAT) AS "Feature_8", CAST("ADS"."Feature_9" AS FLOAT) AS "Feature_9", CAST("ADS"."Feature_10" AS FLOAT) AS "Feature_10", CAST("ADS"."Feature_11" AS FLOAT) AS "Feature_11", CAST("ADS"."Feature_12" AS FLOAT) AS "Feature_12", CAST("ADS"."Feature_13" AS FLOAT) AS "Feature_13", CAST("ADS"."Feature_14" AS FLOAT) AS "Feature_14", CAST("ADS"."Feature_15" AS FLOAT) AS "Feature_15", CAST("ADS"."Feature_16" AS FLOAT) AS "Feature_16", CAST("ADS"."Feature_17" AS FLOAT) AS "Feature_17", CAST("ADS"."Feature_18" AS FLOAT) AS "Feature_18", CAST("ADS"."Feature_19" AS FLOAT) AS "Feature_19", CAST("ADS"."Feature_20" AS FLOAT) AS "Feature_20", CAST("ADS"."Feature_21" AS FLOAT) AS "Feature_21", CAST("ADS"."Feature_22" AS FLOAT) AS "Feature_22", CAST("ADS"."Feature_23" AS FLOAT) AS "Feature_23", CAST("ADS"."Feature_24" AS FLOAT) AS "Feature_24", CAST("ADS"."Feature_25" AS FLOAT) AS "Feature_25", CAST("ADS"."Feature_26" AS FLOAT) AS "Feature_26", CAST("ADS"."Feature_27" AS FLOAT) AS "Feature_27", CAST("ADS"."Feature_28" AS FLOAT) AS "Feature_28", CAST("ADS"."Feature_29" AS FLOAT) AS "Feature_29", CAST("ADS"."Feature_30" AS FLOAT) AS "Feature_30", CAST("ADS"."Feature_31" AS FLOAT) AS "Feature_31", CAST("ADS"."Feature_32" AS FLOAT) AS "Feature_32", CAST("ADS"."Feature_33" AS FLOAT) AS "Feature_33", CAST("ADS"."Feature_34" AS FLOAT) AS "Feature_34", CAST("ADS"."Feature_35" AS FLOAT) AS "Feature_35", CAST("ADS"."Feature_36" AS FLOAT) AS "Feature_36", CAST("ADS"."Feature_37" AS FLOAT) AS "Feature_37", CAST("ADS"."Feature_38" AS FLOAT) AS "Feature_38", CAST("ADS"."Feature_39" AS FLOAT) AS "Feature_39", CAST("ADS"."Feature_40" AS FLOAT) AS "Feature_40", CAST("ADS"."Feature_41" AS FLOAT) AS "Feature_41", CAST("ADS"."Feature_42" AS FLOAT) AS "Feature_42", CAST("ADS"."Feature_43" AS FLOAT) AS "Feature_43", CAST("ADS"."Feature_44" AS FLOAT) AS "Feature_44", CAST("ADS"."Feature_45" AS FLOAT) AS "Feature_45", CAST("ADS"."Feature_46" AS FLOAT) AS "Feature_46", CAST("ADS"."Feature_47" AS FLOAT) AS "Feature_47", CAST("ADS"."Feature_48" AS FLOAT) AS "Feature_48", CAST("ADS"."Feature_49" AS FLOAT) AS "Feature_49", CAST("ADS"."Feature_50" AS FLOAT) AS "Feature_50", CAST("ADS"."Feature_51" AS FLOAT) AS "Feature_51", CAST("ADS"."Feature_52" AS FLOAT) AS "Feature_52", CAST("ADS"."Feature_53" AS FLOAT) AS "Feature_53", CAST("ADS"."Feature_54" AS FLOAT) AS "Feature_54", CAST("ADS"."Feature_55" AS FLOAT) AS "Feature_55", CAST("ADS"."Feature_56" AS FLOAT) AS "Feature_56", CAST("ADS"."Feature_57" AS FLOAT) AS "Feature_57", CAST("ADS"."Feature_58" AS FLOAT) AS "Feature_58", CAST("ADS"."Feature_59" AS FLOAT) AS "Feature_59", CAST("ADS"."Feature_60" AS FLOAT) AS "Feature_60", CAST("ADS"."Feature_61" AS FLOAT) AS "Feature_61", CAST("ADS"."Feature_62" AS FLOAT) AS "Feature_62", CAST("ADS"."Feature_63" AS FLOAT) AS "Feature_63", CAST("ADS"."Feature_64" AS FLOAT) AS "Feature_64", CAST("ADS"."Feature_65" AS FLOAT) AS "Feature_65", CAST("ADS"."Feature_66" AS FLOAT) AS "Feature_66", CAST("ADS"."Feature_67" AS FLOAT) AS "Feature_67", CAST("ADS"."Feature_68" AS FLOAT) AS "Feature_68", CAST("ADS"."Feature_69" AS FLOAT) AS "Feature_69", CAST("ADS"."Feature_70" AS FLOAT) AS "Feature_70", CAST("ADS"."Feature_71" AS FLOAT) AS "Feature_71", CAST("ADS"."Feature_72" AS FLOAT) AS "Feature_72", CAST("ADS"."Feature_73" AS FLOAT) AS "Feature_73", CAST("ADS"."Feature_74" AS FLOAT) AS "Feature_74", CAST("ADS"."Feature_75" AS FLOAT) AS "Feature_75", CAST("ADS"."Feature_76" AS FLOAT) AS "Feature_76", CAST("ADS"."Feature_77" AS FLOAT) AS "Feature_77", CAST("ADS"."Feature_78" AS FLOAT) AS "Feature_78", CAST("ADS"."Feature_79" AS FLOAT) AS "Feature_79", CAST("ADS"."Feature_80" AS FLOAT) AS "Feature_80", CAST("ADS"."Feature_81" AS FLOAT) AS "Feature_81", CAST("ADS"."Feature_82" AS FLOAT) AS "Feature_82", CAST("ADS"."Feature_83" AS FLOAT) AS "Feature_83", CAST("ADS"."Feature_84" AS FLOAT) AS "Feature_84", CAST("ADS"."Feature_85" AS FLOAT) AS "Feature_85", CAST("ADS"."Feature_86" AS FLOAT) AS "Feature_86", CAST("ADS"."Feature_87" AS FLOAT) AS "Feature_87", CAST("ADS"."Feature_88" AS FLOAT) AS "Feature_88", CAST("ADS"."Feature_89" AS FLOAT) AS "Feature_89", CAST("ADS"."Feature_90" AS FLOAT) AS "Feature_90", CAST("ADS"."Feature_91" AS FLOAT) AS "Feature_91", CAST("ADS"."Feature_92" AS FLOAT) AS "Feature_92", CAST("ADS"."Feature_93" AS FLOAT) AS "Feature_93", CAST("ADS"."Feature_94" AS FLOAT) AS "Feature_94", CAST("ADS"."Feature_95" AS FLOAT) AS "Feature_95", CAST("ADS"."Feature_96" AS FLOAT) AS "Feature_96", CAST("ADS"."Feature_97" AS FLOAT) AS "Feature_97", CAST("ADS"."Feature_98" AS FLOAT) AS "Feature_98", CAST("ADS"."Feature_99" AS FLOAT) AS "Feature_99" 
FROM "BinaryClass_100" AS "ADS"), 
"HL_BA_1" AS 
(SELECT "IL"."KEY" AS "KEY", 0.543809028388294 * "IL"."Feature_0" + -0.048508873659155 * "IL"."Feature_1" + -0.142619624315932 * "IL"."Feature_2" + -0.091642742832636 * "IL"."Feature_3" + -0.997874219463713 * "IL"."Feature_4" + -0.149487712479746 * "IL"."Feature_5" + 0.210615848230502 * "IL"."Feature_6" + 0.073435476129615 * "IL"."Feature_7" + 0.035163473755387 * "IL"."Feature_8" + -0.068823983800959 * "IL"."Feature_9" + -0.225472363712525 * "IL"."Feature_10" + 0.265186627985117 * "IL"."Feature_11" + 0.202341200781778 * "IL"."Feature_12" + 0.035955092551573 * "IL"."Feature_13" + 0.273673224933416 * "IL"."Feature_14" + -0.432915045175877 * "IL"."Feature_15" + 0.195270076305358 * "IL"."Feature_16" + -0.249082073051121 * "IL"."Feature_17" + -0.000405757889938 * "IL"."Feature_18" + 0.422278893025237 * "IL"."Feature_19" + -0.486519559845686 * "IL"."Feature_20" + 0.007756124966808 * "IL"."Feature_21" + -0.169755352643088 * "IL"."Feature_22" + -0.888129193369524 * "IL"."Feature_23" + 0.533316297746435 * "IL"."Feature_24" + -0.112225154797861 * "IL"."Feature_25" + 0.111973983443165 * "IL"."Feature_26" + 0.015485258062793 * "IL"."Feature_27" + -0.332166482180521 * "IL"."Feature_28" + 0.189834278120356 * "IL"."Feature_29" + 0.158149594747502 * "IL"."Feature_30" + -0.014966565810132 * "IL"."Feature_31" + -0.434315471475917 * "IL"."Feature_32" + -0.565702039045144 * "IL"."Feature_33" + -1.112360324778713 * "IL"."Feature_34" + 0.114576680258828 * "IL"."Feature_35" + -0.740502301829098 * "IL"."Feature_36" + 0.374471857181186 * "IL"."Feature_37" + -0.82552901179801 * "IL"."Feature_38" + 0.60666491460601 * "IL"."Feature_39" + 0.151042740471821 * "IL"."Feature_40" + -0.998937779370597 * "IL"."Feature_41" + -0.332748360253487 * "IL"."Feature_42" + 0.09426163396698 * "IL"."Feature_43" + -0.241711243133203 * "IL"."Feature_44" + -0.43106005299175 * "IL"."Feature_45" + 0.743698854480919 * "IL"."Feature_46" + 0.073234462038175 * "IL"."Feature_47" + -0.408440237367501 * "IL"."Feature_48" + -0.322104849931824 * "IL"."Feature_49" + -0.21151467214951 * "IL"."Feature_50" + 0.495666515582151 * "IL"."Feature_51" + -0.286298802273524 * "IL"."Feature_52" + -0.14984985459793 * "IL"."Feature_53" + -0.162415366461711 * "IL"."Feature_54" + -0.356686114315264 * "IL"."Feature_55" + 0.452273527492046 * "IL"."Feature_56" + 0.910833106927587 * "IL"."Feature_57" + -0.18359316979389 * "IL"."Feature_58" + 0.444231580743818 * "IL"."Feature_59" + -0.105815703789976 * "IL"."Feature_60" + -0.218089800855475 * "IL"."Feature_61" + 0.231115621996216 * "IL"."Feature_62" + 0.384214204994012 * "IL"."Feature_63" + -0.353002937592169 * "IL"."Feature_64" + -0.014570566318005 * "IL"."Feature_65" + -0.298179433984391 * "IL"."Feature_66" + 0.969859084008082 * "IL"."Feature_67" + -0.213407954907086 * "IL"."Feature_68" + -0.584639497380044 * "IL"."Feature_69" + -0.230221676636553 * "IL"."Feature_70" + -0.478585567153233 * "IL"."Feature_71" + -0.058300777377677 * "IL"."Feature_72" + -0.305386653117627 * "IL"."Feature_73" + 0.731153377347399 * "IL"."Feature_74" + -0.571821182379154 * "IL"."Feature_75" + 0.923546468905024 * "IL"."Feature_76" + -0.652532714822809 * "IL"."Feature_77" + -0.060208634772353 * "IL"."Feature_78" + 0.21799739756815 * "IL"."Feature_79" + 0.285467853596211 * "IL"."Feature_80" + -0.118320453957003 * "IL"."Feature_81" + -0.575369109749622 * "IL"."Feature_82" + 0.189661000960238 * "IL"."Feature_83" + -0.116903835182478 * "IL"."Feature_84" + 0.0445615054026 * "IL"."Feature_85" + -0.662613243281376 * "IL"."Feature_86" + 0.153026730658235 * "IL"."Feature_87" + 0.089947470559819 * "IL"."Feature_88" + -0.041598247033866 * "IL"."Feature_89" + -0.760852899538649 * "IL"."Feature_90" + -0.674805472449428 * "IL"."Feature_91" + 0.834018367733949 * "IL"."Feature_92" + -0.468107942501081 * "IL"."Feature_93" + -0.514656678112866 * "IL"."Feature_94" + -0.159882461435823 * "IL"."Feature_95" + -0.403594458392964 * "IL"."Feature_96" + -0.795663030463529 * "IL"."Feature_97" + 0.521547465949157 * "IL"."Feature_98" + -0.051266039004621 * "IL"."Feature_99" + -1.304482696433056 AS "NEUR_1_1", 0.089928487596431 * "IL"."Feature_0" + 0.050925745707446 * "IL"."Feature_1" + -0.100049183149106 * "IL"."Feature_2" + 0.156727804574123 * "IL"."Feature_3" + -0.662489967365541 * "IL"."Feature_4" + 0.124774468684533 * "IL"."Feature_5" + -0.142998682060271 * "IL"."Feature_6" + -0.355377301966382 * "IL"."Feature_7" + 0.346014900189725 * "IL"."Feature_8" + -0.200574685000132 * "IL"."Feature_9" + -0.266736000765068 * "IL"."Feature_10" + -0.107602756562577 * "IL"."Feature_11" + -0.330517809647242 * "IL"."Feature_12" + 0.37773227117763 * "IL"."Feature_13" + 0.034709804623014 * "IL"."Feature_14" + -0.242107796591423 * "IL"."Feature_15" + 0.163219822056417 * "IL"."Feature_16" + -0.11586470113823 * "IL"."Feature_17" + -0.11497806743414 * "IL"."Feature_18" + 0.311970449246465 * "IL"."Feature_19" + -0.080218981248485 * "IL"."Feature_20" + -0.144766734317763 * "IL"."Feature_21" + -0.311924556276165 * "IL"."Feature_22" + -0.236090021314424 * "IL"."Feature_23" + -0.04994584900778 * "IL"."Feature_24" + -0.162544649392626 * "IL"."Feature_25" + 0.026457596734303 * "IL"."Feature_26" + 0.172452764923889 * "IL"."Feature_27" + -0.072599554706719 * "IL"."Feature_28" + -0.287352777905548 * "IL"."Feature_29" + -0.244807677002234 * "IL"."Feature_30" + -0.360719126770993 * "IL"."Feature_31" + -0.00260081642104 * "IL"."Feature_32" + -0.217856019848365 * "IL"."Feature_33" + -0.346247337263438 * "IL"."Feature_34" + 0.064447699538993 * "IL"."Feature_35" + 0.210582442671624 * "IL"."Feature_36" + -0.203751820997628 * "IL"."Feature_37" + 0.28460118533735 * "IL"."Feature_38" + -0.027428997429462 * "IL"."Feature_39" + 0.322583663847439 * "IL"."Feature_40" + -0.045116251759582 * "IL"."Feature_41" + 0.114239407034916 * "IL"."Feature_42" + 0.032690771756634 * "IL"."Feature_43" + 0.038355094049217 * "IL"."Feature_44" + -0.152382598870845 * "IL"."Feature_45" + 0.349955418650902 * "IL"."Feature_46" + 0.093983716493091 * "IL"."Feature_47" + -0.202049851238925 * "IL"."Feature_48" + -0.233476369189 * "IL"."Feature_49" + -0.110079476981376 * "IL"."Feature_50" + -0.278860736502502 * "IL"."Feature_51" + -0.158566220041588 * "IL"."Feature_52" + -0.018083719883181 * "IL"."Feature_53" + 0.115818810254849 * "IL"."Feature_54" + -0.180224043915216 * "IL"."Feature_55" + -0.011068115432923 * "IL"."Feature_56" + 0.844122606102968 * "IL"."Feature_57" + 0.125076358934132 * "IL"."Feature_58" + -0.1185979541967 * "IL"."Feature_59" + -0.589468174366984 * "IL"."Feature_60" + 0.276674489102282 * "IL"."Feature_61" + 0.002821259054219 * "IL"."Feature_62" + 0.177913999627534 * "IL"."Feature_63" + 0.427886632815452 * "IL"."Feature_64" + 0.229905549885586 * "IL"."Feature_65" + 0.545399408545925 * "IL"."Feature_66" + 0.514456237385141 * "IL"."Feature_67" + 0.028581644339623 * "IL"."Feature_68" + -0.304141045393411 * "IL"."Feature_69" + -0.235547768552807 * "IL"."Feature_70" + 0.449670566260127 * "IL"."Feature_71" + -0.10150221579465 * "IL"."Feature_72" + -0.004803501313876 * "IL"."Feature_73" + 0.03024365425028 * "IL"."Feature_74" + 0.321561716811028 * "IL"."Feature_75" + 0.121000112671651 * "IL"."Feature_76" + -0.202940046420579 * "IL"."Feature_77" + 0.067983676233666 * "IL"."Feature_78" + 0.234593208389675 * "IL"."Feature_79" + 0.101310189592677 * "IL"."Feature_80" + 0.125174822055277 * "IL"."Feature_81" + -0.025445670246221 * "IL"."Feature_82" + 0.127361401859637 * "IL"."Feature_83" + -0.059864065947254 * "IL"."Feature_84" + 0.000632316433902 * "IL"."Feature_85" + -0.048215675189749 * "IL"."Feature_86" + -0.293786723096916 * "IL"."Feature_87" + -0.239021778983194 * "IL"."Feature_88" + -0.110921866496522 * "IL"."Feature_89" + -0.186321971389437 * "IL"."Feature_90" + -0.397652975576945 * "IL"."Feature_91" + 0.456794902966553 * "IL"."Feature_92" + 0.323557238734817 * "IL"."Feature_93" + -0.339110274025798 * "IL"."Feature_94" + 0.000951601915457 * "IL"."Feature_95" + 0.002348949296838 * "IL"."Feature_96" + -0.079987982151996 * "IL"."Feature_97" + 0.288914667062494 * "IL"."Feature_98" + -0.236254779506629 * "IL"."Feature_99" + -0.115558035682798 AS "NEUR_1_2", 0.419353779089665 * "IL"."Feature_0" + -0.064845046962027 * "IL"."Feature_1" + 0.022220656383695 * "IL"."Feature_2" + -0.135021474736581 * "IL"."Feature_3" + -1.198449793527984 * "IL"."Feature_4" + 0.571684674889911 * "IL"."Feature_5" + -0.071086621207149 * "IL"."Feature_6" + -0.250987571997409 * "IL"."Feature_7" + -0.156058878778164 * "IL"."Feature_8" + 0.490299270851825 * "IL"."Feature_9" + 0.008413923017241 * "IL"."Feature_10" + -0.033943847647095 * "IL"."Feature_11" + 0.329484571040708 * "IL"."Feature_12" + 0.034256386984418 * "IL"."Feature_13" + -0.323441569188161 * "IL"."Feature_14" + -0.410038016274942 * "IL"."Feature_15" + -0.298365990320716 * "IL"."Feature_16" + 0.071618010132462 * "IL"."Feature_17" + -0.323182141805932 * "IL"."Feature_18" + -0.365684411874953 * "IL"."Feature_19" + 0.066146600269139 * "IL"."Feature_20" + 0.084480789065899 * "IL"."Feature_21" + -0.294023906699679 * "IL"."Feature_22" + 0.099255474115812 * "IL"."Feature_23" + -0.068683635254648 * "IL"."Feature_24" + 0.032909945917178 * "IL"."Feature_25" + -0.027595034800942 * "IL"."Feature_26" + 0.456989771964954 * "IL"."Feature_27" + -0.13419725332103 * "IL"."Feature_28" + 0.085055923733541 * "IL"."Feature_29" + -0.234936591993872 * "IL"."Feature_30" + -0.208085497155871 * "IL"."Feature_31" + 0.020412510774513 * "IL"."Feature_32" + -0.164557987098089 * "IL"."Feature_33" + -0.073654380165595 * "IL"."Feature_34" + -0.211334696846593 * "IL"."Feature_35" + -0.141152975272369 * "IL"."Feature_36" + 0.436497815927235 * "IL"."Feature_37" + -0.108504078867527 * "IL"."Feature_38" + -0.47965282472813 * "IL"."Feature_39" + 0.042507276281567 * "IL"."Feature_40" + -0.200234078512552 * "IL"."Feature_41" + -0.452942679155384 * "IL"."Feature_42" + 0.062865822512608 * "IL"."Feature_43" + -0.608259657260024 * "IL"."Feature_44" + -0.417783874513164 * "IL"."Feature_45" + 0.36253208299205 * "IL"."Feature_46" + 0.070617206797156 * "IL"."Feature_47" + -0.607042645738401 * "IL"."Feature_48" + -0.219148347225048 * "IL"."Feature_49" + 0.232990245246344 * "IL"."Feature_50" + 0.015173098840046 * "IL"."Feature_51" + 0.077945817388279 * "IL"."Feature_52" + 0.083417502832735 * "IL"."Feature_53" + -0.016338159605202 * "IL"."Feature_54" + -0.180672426932337 * "IL"."Feature_55" + 0.005699504828643 * "IL"."Feature_56" + 1.153000346010698 * "IL"."Feature_57" + -0.19849414516217 * "IL"."Feature_58" + 0.175841105152406 * "IL"."Feature_59" + -0.355371210812906 * "IL"."Feature_60" + 0.125527003101386 * "IL"."Feature_61" + -0.304034901082042 * "IL"."Feature_62" + 0.362250024292476 * "IL"."Feature_63" + -0.008524635064945 * "IL"."Feature_64" + 0.11204976173195 * "IL"."Feature_65" + -0.24076297071188 * "IL"."Feature_66" + 0.122118909735616 * "IL"."Feature_67" + -0.653171836553632 * "IL"."Feature_68" + 0.02339683637448 * "IL"."Feature_69" + -0.023605419807063 * "IL"."Feature_70" + -0.421249342640987 * "IL"."Feature_71" + -0.097472786445531 * "IL"."Feature_72" + -0.403644796570876 * "IL"."Feature_73" + 0.396580623220462 * "IL"."Feature_74" + -0.018969645846121 * "IL"."Feature_75" + 0.557462982215727 * "IL"."Feature_76" + -0.229545462530047 * "IL"."Feature_77" + -0.17212032896726 * "IL"."Feature_78" + -0.130242252149218 * "IL"."Feature_79" + 0.004618282032507 * "IL"."Feature_80" + 0.308963461989138 * "IL"."Feature_81" + 0.676211391407923 * "IL"."Feature_82" + -0.004969797877875 * "IL"."Feature_83" + 0.152633564969341 * "IL"."Feature_84" + -0.182722638163238 * "IL"."Feature_85" + -0.306285474714041 * "IL"."Feature_86" + 0.024393370249989 * "IL"."Feature_87" + 0.125975796093376 * "IL"."Feature_88" + -0.388602208493562 * "IL"."Feature_89" + -0.227565348157972 * "IL"."Feature_90" + -0.013864079629043 * "IL"."Feature_91" + 0.088418187624479 * "IL"."Feature_92" + -0.575619065979055 * "IL"."Feature_93" + -0.109304558270683 * "IL"."Feature_94" + -0.310688772204328 * "IL"."Feature_95" + -0.252197777022554 * "IL"."Feature_96" + 0.049731510812227 * "IL"."Feature_97" + 0.15397058675246 * "IL"."Feature_98" + 0.00540543706442 * "IL"."Feature_99" + 0.594423691954416 AS "NEUR_1_3" 
FROM "IL"), 
"HL_1_relu" AS 
(SELECT "HL_BA_1"."KEY" AS "KEY", CAST(greatest("HL_BA_1"."NEUR_1_1", 0.0) AS FLOAT) AS "NEUR_1_1", CAST(greatest("HL_BA_1"."NEUR_1_2", 0.0) AS FLOAT) AS "NEUR_1_2", CAST(greatest("HL_BA_1"."NEUR_1_3", 0.0) AS FLOAT) AS "NEUR_1_3" 
FROM "HL_BA_1")
 SELECT "HL_1_relu_1"."KEY", "HL_1_relu_1"."NEUR_1_1", "HL_1_relu_1"."NEUR_1_2", "HL_1_relu_1"."NEUR_1_3" 
FROM (SELECT "HL_1_relu"."KEY" AS "KEY", "HL_1_relu"."NEUR_1_1" AS "NEUR_1_1", "HL_1_relu"."NEUR_1_2" AS "NEUR_1_2", "HL_1_relu"."NEUR_1_3" AS "NEUR_1_3" 
FROM "HL_1_relu") AS "HL_1_relu_1") AS "U"

-- Code For temporary table tmp_20180416223300_1s4dka_ol_l part 1/2. Create 


CREATE GLOBAL TEMPORARY TABLE tmp_20180416223300_1s4dka_ol_l  (
	"KEY" BIGINT, 
	"NEUR_3_1" FLOAT
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table tmp_20180416223300_1s4dka_ol_l part 2/2. Populate

INSERT INTO tmp_20180416223300_1s4dka_ol_l ("KEY", "NEUR_3_1") SELECT "U"."KEY", "U"."NEUR_3_1" 
FROM (WITH "HL_BA_2" AS 
(SELECT "HL_1_relu_1"."KEY" AS "KEY", 0.514798545872619 * "HL_1_relu_1"."NEUR_1_1" + 0.720945980598882 * "HL_1_relu_1"."NEUR_1_2" + 1.396906476297412 * "HL_1_relu_1"."NEUR_1_3" + -0.419532349088233 AS "NEUR_2_1", -0.193882810613733 * "HL_1_relu_1"."NEUR_1_1" + -0.096552627282885 * "HL_1_relu_1"."NEUR_1_2" + 0.192593949252706 * "HL_1_relu_1"."NEUR_1_3" + 2.784593064416854 AS "NEUR_2_2", -0.379778453158554 * "HL_1_relu_1"."NEUR_1_1" + 1.329683880059801 * "HL_1_relu_1"."NEUR_1_2" + 1.06624258178063 * "HL_1_relu_1"."NEUR_1_3" + -0.209002662439309 AS "NEUR_2_3", -0.467408216401232 * "HL_1_relu_1"."NEUR_1_1" + 0.226120360302442 * "HL_1_relu_1"."NEUR_1_2" + -0.601925421214221 * "HL_1_relu_1"."NEUR_1_3" + 0.863908521579643 AS "NEUR_2_4", -0.609164972740057 * "HL_1_relu_1"."NEUR_1_1" + -0.377555794757193 * "HL_1_relu_1"."NEUR_1_2" + -0.672800845387138 * "HL_1_relu_1"."NEUR_1_3" + -0.018078316226986 AS "NEUR_2_5" 
FROM tmp_20180416223300_ou2sev_hl_1 AS "HL_1_relu_1"), 
"HL_2_relu" AS 
(SELECT "HL_BA_2"."KEY" AS "KEY", CAST(greatest("HL_BA_2"."NEUR_2_1", 0.0) AS FLOAT) AS "NEUR_2_1", CAST(greatest("HL_BA_2"."NEUR_2_2", 0.0) AS FLOAT) AS "NEUR_2_2", CAST(greatest("HL_BA_2"."NEUR_2_3", 0.0) AS FLOAT) AS "NEUR_2_3", CAST(greatest("HL_BA_2"."NEUR_2_4", 0.0) AS FLOAT) AS "NEUR_2_4", CAST(greatest("HL_BA_2"."NEUR_2_5", 0.0) AS FLOAT) AS "NEUR_2_5" 
FROM "HL_BA_2"), 
"OL_BA" AS 
(SELECT "HL_2_relu"."KEY" AS "KEY", 1.527310684305192 * "HL_2_relu"."NEUR_2_1" + -1.054806384855155 * "HL_2_relu"."NEUR_2_2" + 1.479663307421021 * "HL_2_relu"."NEUR_2_3" + -0.065117063576068 * "HL_2_relu"."NEUR_2_4" + -0.273393526524044 * "HL_2_relu"."NEUR_2_5" + -0.743344202483576 AS "NEUR_3_1" 
FROM "HL_2_relu"), 
"OL_logistic" AS 
(SELECT "OL_BA"."KEY" AS "KEY", CAST(1.0 / (1.0 + exp(least(greatest(-100.0, -"OL_BA"."NEUR_3_1"), 100.0))) AS FLOAT) AS "NEUR_3_1" 
FROM "OL_BA")
 SELECT "OL_logistic_1"."KEY", "OL_logistic_1"."NEUR_3_1" 
FROM (SELECT "OL_logistic"."KEY" AS "KEY", "OL_logistic"."NEUR_3_1" AS "NEUR_3_1" 
FROM "OL_logistic") AS "OL_logistic_1") AS "U"

-- Model deployment code

WITH orig_cte AS 
(SELECT "OL_logistic_1"."KEY" AS "KEY", CAST(NULL AS FLOAT) AS "Score_0", CAST(NULL AS FLOAT) AS "Score_1", 1.0 - "OL_logistic_1"."NEUR_3_1" AS "Proba_0", "OL_logistic_1"."NEUR_3_1" AS "Proba_1", CAST(NULL AS FLOAT) AS "LogProba_0", CAST(NULL AS FLOAT) AS "LogProba_1", CAST(NULL AS BIGINT) AS "Decision", CAST(NULL AS FLOAT) AS "DecisionProba" 
FROM tmp_20180416223300_1s4dka_ol_l AS "OL_logistic_1"), 
score_class_union AS 
(SELECT scu."KEY_u" AS "KEY_u", scu."class" AS "class", scu."LogProba" AS "LogProba", scu."Proba" AS "Proba", scu."Score" AS "Score" 
FROM (SELECT orig_cte."KEY" AS "KEY_u", 0 AS "class", orig_cte."LogProba_0" AS "LogProba", orig_cte."Proba_0" AS "Proba", orig_cte."Score_0" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 1 AS "class", orig_cte."LogProba_1" AS "LogProba", orig_cte."Proba_1" AS "Proba", orig_cte."Score_1" AS "Score" 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte."KEY" AS "KEY", orig_cte."Score_0" AS "Score_0", orig_cte."Score_1" AS "Score_1", orig_cte."Proba_0" AS "Proba_0", orig_cte."Proba_1" AS "Proba_1", orig_cte."LogProba_0" AS "LogProba_0", orig_cte."LogProba_1" AS "LogProba_1", orig_cte."Decision" AS "Decision", orig_cte."DecisionProba" AS "DecisionProba", max_select."KEY_m" AS "KEY_m", max_select."max_Proba" AS "max_Proba" 
FROM orig_cte LEFT OUTER JOIN (SELECT score_class_union."KEY_u" AS "KEY_m", max(score_class_union."Proba") AS "max_Proba" 
FROM score_class_union GROUP BY score_class_union."KEY_u") AS max_select ON orig_cte."KEY" = max_select."KEY_m"), 
union_with_max AS 
(SELECT score_class_union."KEY_u" AS "KEY_u", score_class_union."class" AS "class", score_class_union."LogProba" AS "LogProba", score_class_union."Proba" AS "Proba", score_class_union."Score" AS "Score", score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."Decision" AS "Decision", score_max."DecisionProba" AS "DecisionProba", score_max."KEY_m" AS "KEY_m", score_max."max_Proba" AS "max_Proba" 
FROM score_class_union LEFT OUTER JOIN score_max ON score_class_union."KEY_u" = score_max."KEY"), 
arg_max_cte AS 
(SELECT score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."Decision" AS "Decision", score_max."DecisionProba" AS "DecisionProba", score_max."KEY_m" AS "KEY_m", score_max."max_Proba" AS "max_Proba", "arg_max_t_Proba"."KEY_Proba" AS "KEY_Proba", "arg_max_t_Proba"."arg_max_Proba" AS "arg_max_Proba" 
FROM score_max LEFT OUTER JOIN (SELECT union_with_max."KEY" AS "KEY_Proba", min(union_with_max."class") AS "arg_max_Proba" 
FROM union_with_max 
WHERE union_with_max."max_Proba" <= union_with_max."Proba" GROUP BY union_with_max."KEY") AS "arg_max_t_Proba" ON score_max."KEY" = "arg_max_t_Proba"."KEY_Proba")
 SELECT arg_max_cte."KEY" AS "KEY", arg_max_cte."Score_0" AS "Score_0", arg_max_cte."Score_1" AS "Score_1", arg_max_cte."Proba_0" AS "Proba_0", arg_max_cte."Proba_1" AS "Proba_1", CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN ln(arg_max_cte."Proba_0") ELSE -1.79769313486231e+308 END AS "LogProba_0", CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN ln(arg_max_cte."Proba_1") ELSE -1.79769313486231e+308 END AS "LogProba_1", arg_max_cte."arg_max_Proba" AS "Decision", arg_max_cte."max_Proba" AS "DecisionProba" 
FROM arg_max_cte