-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2018

-- Model : MLPClassifier
-- Dataset : digits
-- Database : teradata


-- This SQL code can contain one or more statements, to be executed in the order they appear in this file.



-- Code For temporary table tmp_20180417025628_yxujrv_hl_1 part 1/2. Create 


CREATE GLOBAL TEMPORARY TABLE tmp_20180417025628_yxujrv_hl_1  (
	"KEY" BIGINT, 
	"NEUR_1_1" FLOAT, 
	"NEUR_1_2" FLOAT, 
	"NEUR_1_3" FLOAT
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table tmp_20180417025628_yxujrv_hl_1 part 2/2. Populate

INSERT INTO tmp_20180417025628_yxujrv_hl_1 ("KEY", "NEUR_1_1", "NEUR_1_2", "NEUR_1_3") SELECT "U"."KEY", "U"."NEUR_1_1", "U"."NEUR_1_2", "U"."NEUR_1_3" 
FROM (WITH "IL" AS 
(SELECT "ADS"."KEY" AS "KEY", CAST("ADS"."Feature_0" AS FLOAT) AS "Feature_0", CAST("ADS"."Feature_1" AS FLOAT) AS "Feature_1", CAST("ADS"."Feature_2" AS FLOAT) AS "Feature_2", CAST("ADS"."Feature_3" AS FLOAT) AS "Feature_3", CAST("ADS"."Feature_4" AS FLOAT) AS "Feature_4", CAST("ADS"."Feature_5" AS FLOAT) AS "Feature_5", CAST("ADS"."Feature_6" AS FLOAT) AS "Feature_6", CAST("ADS"."Feature_7" AS FLOAT) AS "Feature_7", CAST("ADS"."Feature_8" AS FLOAT) AS "Feature_8", CAST("ADS"."Feature_9" AS FLOAT) AS "Feature_9", CAST("ADS"."Feature_10" AS FLOAT) AS "Feature_10", CAST("ADS"."Feature_11" AS FLOAT) AS "Feature_11", CAST("ADS"."Feature_12" AS FLOAT) AS "Feature_12", CAST("ADS"."Feature_13" AS FLOAT) AS "Feature_13", CAST("ADS"."Feature_14" AS FLOAT) AS "Feature_14", CAST("ADS"."Feature_15" AS FLOAT) AS "Feature_15", CAST("ADS"."Feature_16" AS FLOAT) AS "Feature_16", CAST("ADS"."Feature_17" AS FLOAT) AS "Feature_17", CAST("ADS"."Feature_18" AS FLOAT) AS "Feature_18", CAST("ADS"."Feature_19" AS FLOAT) AS "Feature_19", CAST("ADS"."Feature_20" AS FLOAT) AS "Feature_20", CAST("ADS"."Feature_21" AS FLOAT) AS "Feature_21", CAST("ADS"."Feature_22" AS FLOAT) AS "Feature_22", CAST("ADS"."Feature_23" AS FLOAT) AS "Feature_23", CAST("ADS"."Feature_24" AS FLOAT) AS "Feature_24", CAST("ADS"."Feature_25" AS FLOAT) AS "Feature_25", CAST("ADS"."Feature_26" AS FLOAT) AS "Feature_26", CAST("ADS"."Feature_27" AS FLOAT) AS "Feature_27", CAST("ADS"."Feature_28" AS FLOAT) AS "Feature_28", CAST("ADS"."Feature_29" AS FLOAT) AS "Feature_29", CAST("ADS"."Feature_30" AS FLOAT) AS "Feature_30", CAST("ADS"."Feature_31" AS FLOAT) AS "Feature_31", CAST("ADS"."Feature_32" AS FLOAT) AS "Feature_32", CAST("ADS"."Feature_33" AS FLOAT) AS "Feature_33", CAST("ADS"."Feature_34" AS FLOAT) AS "Feature_34", CAST("ADS"."Feature_35" AS FLOAT) AS "Feature_35", CAST("ADS"."Feature_36" AS FLOAT) AS "Feature_36", CAST("ADS"."Feature_37" AS FLOAT) AS "Feature_37", CAST("ADS"."Feature_38" AS FLOAT) AS "Feature_38", CAST("ADS"."Feature_39" AS FLOAT) AS "Feature_39", CAST("ADS"."Feature_40" AS FLOAT) AS "Feature_40", CAST("ADS"."Feature_41" AS FLOAT) AS "Feature_41", CAST("ADS"."Feature_42" AS FLOAT) AS "Feature_42", CAST("ADS"."Feature_43" AS FLOAT) AS "Feature_43", CAST("ADS"."Feature_44" AS FLOAT) AS "Feature_44", CAST("ADS"."Feature_45" AS FLOAT) AS "Feature_45", CAST("ADS"."Feature_46" AS FLOAT) AS "Feature_46", CAST("ADS"."Feature_47" AS FLOAT) AS "Feature_47", CAST("ADS"."Feature_48" AS FLOAT) AS "Feature_48", CAST("ADS"."Feature_49" AS FLOAT) AS "Feature_49", CAST("ADS"."Feature_50" AS FLOAT) AS "Feature_50", CAST("ADS"."Feature_51" AS FLOAT) AS "Feature_51", CAST("ADS"."Feature_52" AS FLOAT) AS "Feature_52", CAST("ADS"."Feature_53" AS FLOAT) AS "Feature_53", CAST("ADS"."Feature_54" AS FLOAT) AS "Feature_54", CAST("ADS"."Feature_55" AS FLOAT) AS "Feature_55", CAST("ADS"."Feature_56" AS FLOAT) AS "Feature_56", CAST("ADS"."Feature_57" AS FLOAT) AS "Feature_57", CAST("ADS"."Feature_58" AS FLOAT) AS "Feature_58", CAST("ADS"."Feature_59" AS FLOAT) AS "Feature_59", CAST("ADS"."Feature_60" AS FLOAT) AS "Feature_60", CAST("ADS"."Feature_61" AS FLOAT) AS "Feature_61", CAST("ADS"."Feature_62" AS FLOAT) AS "Feature_62", CAST("ADS"."Feature_63" AS FLOAT) AS "Feature_63" 
FROM digits AS "ADS"), 
"HL_BA_1" AS 
(SELECT "IL"."KEY" AS "KEY", -0.043499804929168 * "IL"."Feature_0" + 0.252114170602964 * "IL"."Feature_1" + 1.493681556393314 * "IL"."Feature_2" + -0.228766905858978 * "IL"."Feature_3" + 2.00364966541813 * "IL"."Feature_4" + 2.169674320450325 * "IL"."Feature_5" + -1.206920817873404 * "IL"."Feature_6" + -0.046002424730667 * "IL"."Feature_7" + -0.097913674367475 * "IL"."Feature_8" + 1.169567854400363 * "IL"."Feature_9" + 0.449897053040766 * "IL"."Feature_10" + 0.068746821402854 * "IL"."Feature_11" + 0.992574758527523 * "IL"."Feature_12" + 2.936973609666042 * "IL"."Feature_13" + 0.86221055548846 * "IL"."Feature_14" + 0.129992862312392 * "IL"."Feature_15" + -0.070048087990224 * "IL"."Feature_16" + -0.627400532694916 * "IL"."Feature_17" + -2.298753235862819 * "IL"."Feature_18" + -1.684478265238088 * "IL"."Feature_19" + 3.387219976837897 * "IL"."Feature_20" + 0.616224925643874 * "IL"."Feature_21" + 0.563612296779404 * "IL"."Feature_22" + -0.244503025904354 * "IL"."Feature_23" + 0.174132566830443 * "IL"."Feature_24" + -1.518611381372375 * "IL"."Feature_25" + -2.474368831415074 * "IL"."Feature_26" + -0.299571425394289 * "IL"."Feature_27" + 2.271704610747708 * "IL"."Feature_28" + -1.856815995954276 * "IL"."Feature_29" + -1.767329307760536 * "IL"."Feature_30" + 0.192456179303357 * "IL"."Feature_31" + -0.291015228655601 * "IL"."Feature_32" + -1.467246429364954 * "IL"."Feature_33" + -2.870061782304601 * "IL"."Feature_34" + -0.02454653078128 * "IL"."Feature_35" + 2.141854506807176 * "IL"."Feature_36" + -1.488907475766556 * "IL"."Feature_37" + -3.333441299998184 * "IL"."Feature_38" + 0.113528745520612 * "IL"."Feature_39" + 0.026220771996155 * "IL"."Feature_40" + 0.04676344994776 * "IL"."Feature_41" + -2.019066995938978 * "IL"."Feature_42" + -0.09270448265674 * "IL"."Feature_43" + -0.636168582730758 * "IL"."Feature_44" + -1.738991155420743 * "IL"."Feature_45" + -0.130144015757153 * "IL"."Feature_46" + 0.136438332297891 * "IL"."Feature_47" + 0.069736652264535 * "IL"."Feature_48" + 0.927577758594311 * "IL"."Feature_49" + 0.58433721965343 * "IL"."Feature_50" + 0.814644709929568 * "IL"."Feature_51" + 2.980175149408544 * "IL"."Feature_52" + 2.780584834700434 * "IL"."Feature_53" + 1.362898831304602 * "IL"."Feature_54" + -0.537169073048678 * "IL"."Feature_55" + -0.117213241512074 * "IL"."Feature_56" + 0.212342672016338 * "IL"."Feature_57" + 2.326505356969855 * "IL"."Feature_58" + 0.677567807724958 * "IL"."Feature_59" + 2.341401798194978 * "IL"."Feature_60" + 1.83414931466166 * "IL"."Feature_61" + -0.078994400415732 * "IL"."Feature_62" + -0.734134314884123 * "IL"."Feature_63" + -0.254758480314627 AS "NEUR_1_1", 0.057959116722545 * "IL"."Feature_0" + 0.002867850098876 * "IL"."Feature_1" + -0.198788917519089 * "IL"."Feature_2" + 0.123594286889264 * "IL"."Feature_3" + 0.024278836738773 * "IL"."Feature_4" + 0.17858137402793 * "IL"."Feature_5" + -0.137272195378691 * "IL"."Feature_6" + -0.285943189129219 * "IL"."Feature_7" + 0.252249540001213 * "IL"."Feature_8" + -0.045591001294248 * "IL"."Feature_9" + -0.206787138676838 * "IL"."Feature_10" + -0.115300468651319 * "IL"."Feature_11" + -0.254590954684298 * "IL"."Feature_12" + 0.09934817594395 * "IL"."Feature_13" + 0.022668895613704 * "IL"."Feature_14" + -0.140535740989687 * "IL"."Feature_15" + 0.086627214236223 * "IL"."Feature_16" + -0.195932044333856 * "IL"."Feature_17" + 0.02312229849273 * "IL"."Feature_18" + 0.119068025057617 * "IL"."Feature_19" + -0.333493823086108 * "IL"."Feature_20" + -0.04661719055231 * "IL"."Feature_21" + -0.223380430649654 * "IL"."Feature_22" + -0.001366806788437 * "IL"."Feature_23" + 0.136582114384552 * "IL"."Feature_24" + -0.052730551438689 * "IL"."Feature_25" + 0.042840083770516 * "IL"."Feature_26" + 0.109326031112304 * "IL"."Feature_27" + -0.107432167652826 * "IL"."Feature_28" + -0.272904874702881 * "IL"."Feature_29" + -0.031165660952282 * "IL"."Feature_30" + -0.211375414973089 * "IL"."Feature_31" + -0.240088062155737 * "IL"."Feature_32" + 0.080216779904459 * "IL"."Feature_33" + -0.230017795115086 * "IL"."Feature_34" + 0.019610514661038 * "IL"."Feature_35" + 0.18305645248744 * "IL"."Feature_36" + -0.291230686827245 * "IL"."Feature_37" + 0.247928183819458 * "IL"."Feature_38" + 0.147850630620264 * "IL"."Feature_39" + 0.258341039852185 * "IL"."Feature_40" + 0.023764636196255 * "IL"."Feature_41" + 0.165667452061337 * "IL"."Feature_42" + 0.001053413285912 * "IL"."Feature_43" + 0.205343534523643 * "IL"."Feature_44" + -0.224103988790297 * "IL"."Feature_45" + 0.06506529957345 * "IL"."Feature_46" + 0.209110111352938 * "IL"."Feature_47" + -0.045732334400849 * "IL"."Feature_48" + -0.107076598131461 * "IL"."Feature_49" + 0.064972025057449 * "IL"."Feature_50" + -0.148646725666922 * "IL"."Feature_51" + -0.245426255567677 * "IL"."Feature_52" + -0.098438316278174 * "IL"."Feature_53" + 0.271286306536771 * "IL"."Feature_54" + -0.052430893315706 * "IL"."Feature_55" + 0.081820741309539 * "IL"."Feature_56" + 0.069079661151647 * "IL"."Feature_57" + 0.134159586480984 * "IL"."Feature_58" + -0.177565484677612 * "IL"."Feature_59" + -0.185459034859195 * "IL"."Feature_60" + 0.200999104726373 * "IL"."Feature_61" + -0.188845408606191 * "IL"."Feature_62" + 0.081923930883706 * "IL"."Feature_63" + 0.282809622258679 AS "NEUR_1_2", 0.283576179521631 * "IL"."Feature_0" + -0.1962274503913 * "IL"."Feature_1" + 0.125756750577574 * "IL"."Feature_2" + -0.018418202612177 * "IL"."Feature_3" + -0.243134797504391 * "IL"."Feature_4" + -0.130011749871982 * "IL"."Feature_5" + 0.184480931443791 * "IL"."Feature_6" + -0.179491551356021 * "IL"."Feature_7" + -0.223199884965542 * "IL"."Feature_8" + 0.237763886263295 * "IL"."Feature_9" + -0.059661391649654 * "IL"."Feature_10" + -0.05821341936579 * "IL"."Feature_11" + 0.150168571496687 * "IL"."Feature_12" + -0.207028718972958 * "IL"."Feature_13" + -0.270234225636313 * "IL"."Feature_14" + -0.227763181881327 * "IL"."Feature_15" + 0.059943956774313 * "IL"."Feature_16" + -0.047352790059202 * "IL"."Feature_17" + 0.154048877347683 * "IL"."Feature_18" + -0.071751612779569 * "IL"."Feature_19" + -0.134888264306346 * "IL"."Feature_20" + 0.106137788158061 * "IL"."Feature_21" + -0.301252026325653 * "IL"."Feature_22" + 0.164761099101417 * "IL"."Feature_23" + 0.291083218103566 * "IL"."Feature_24" + 0.050672158975575 * "IL"."Feature_25" + 0.067457754652127 * "IL"."Feature_26" + 0.228452189054617 * "IL"."Feature_27" + 0.045559210311209 * "IL"."Feature_28" + 0.059274311062351 * "IL"."Feature_29" + -0.267422016731511 * "IL"."Feature_30" + 0.109941061935669 * "IL"."Feature_31" + -0.218333482112883 * "IL"."Feature_32" + -0.145832675477108 * "IL"."Feature_33" + -0.098720366038441 * "IL"."Feature_34" + -0.267450526975582 * "IL"."Feature_35" + 0.15076960678309 * "IL"."Feature_36" + 0.018331973067728 * "IL"."Feature_37" + -0.038668858314369 * "IL"."Feature_38" + -0.261471064933608 * "IL"."Feature_39" + 0.040188961659004 * "IL"."Feature_40" + -0.086405628145888 * "IL"."Feature_41" + -0.155458883503175 * "IL"."Feature_42" + -0.10231213666742 * "IL"."Feature_43" + -0.078618372289015 * "IL"."Feature_44" + -0.315312194921874 * "IL"."Feature_45" + 0.224477343256009 * "IL"."Feature_46" + 0.200396081713014 * "IL"."Feature_47" + -0.051536406569482 * "IL"."Feature_48" + -0.136712143229732 * "IL"."Feature_49" + 0.120032852197508 * "IL"."Feature_50" + -0.008892536446259 * "IL"."Feature_51" + 0.245659638997601 * "IL"."Feature_52" + 0.156265742346697 * "IL"."Feature_53" + -0.055028567775789 * "IL"."Feature_54" + -0.176078538155381 * "IL"."Feature_55" + 0.050061479893552 * "IL"."Feature_56" + -0.046812456696156 * "IL"."Feature_57" + -0.149426274610389 * "IL"."Feature_58" + -0.06966282217039 * "IL"."Feature_59" + -0.209052125015852 * "IL"."Feature_60" + -0.263018647603837 * "IL"."Feature_61" + -0.141006971852599 * "IL"."Feature_62" + 0.190542602830796 * "IL"."Feature_63" + -0.300539859238546 AS "NEUR_1_3" 
FROM "IL"), 
"HL_1_relu" AS 
(SELECT "HL_BA_1"."KEY" AS "KEY", CAST(greatest("HL_BA_1"."NEUR_1_1", 0.0) AS FLOAT) AS "NEUR_1_1", CAST(greatest("HL_BA_1"."NEUR_1_2", 0.0) AS FLOAT) AS "NEUR_1_2", CAST(greatest("HL_BA_1"."NEUR_1_3", 0.0) AS FLOAT) AS "NEUR_1_3" 
FROM "HL_BA_1")
 SELECT "HL_1_relu_1"."KEY", "HL_1_relu_1"."NEUR_1_1", "HL_1_relu_1"."NEUR_1_2", "HL_1_relu_1"."NEUR_1_3" 
FROM (SELECT "HL_1_relu"."KEY" AS "KEY", "HL_1_relu"."NEUR_1_1" AS "NEUR_1_1", "HL_1_relu"."NEUR_1_2" AS "NEUR_1_2", "HL_1_relu"."NEUR_1_3" AS "NEUR_1_3" 
FROM "HL_1_relu") AS "HL_1_relu_1") AS "U"

-- Code For temporary table tmp_20180417025628_65y66i_ol_s part 1/2. Create 


CREATE GLOBAL TEMPORARY TABLE tmp_20180417025628_65y66i_ol_s  (
	"KEY" BIGINT, 
	"NEUR_3_1" FLOAT, 
	"NEUR_3_2" FLOAT, 
	"NEUR_3_3" FLOAT, 
	"NEUR_3_4" FLOAT, 
	"NEUR_3_5" FLOAT, 
	"NEUR_3_6" FLOAT, 
	"NEUR_3_7" FLOAT, 
	"NEUR_3_8" FLOAT, 
	"NEUR_3_9" FLOAT, 
	"NEUR_3_10" FLOAT
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table tmp_20180417025628_65y66i_ol_s part 2/2. Populate

INSERT INTO tmp_20180417025628_65y66i_ol_s ("KEY", "NEUR_3_1", "NEUR_3_2", "NEUR_3_3", "NEUR_3_4", "NEUR_3_5", "NEUR_3_6", "NEUR_3_7", "NEUR_3_8", "NEUR_3_9", "NEUR_3_10") SELECT "U"."KEY", "U"."NEUR_3_1", "U"."NEUR_3_2", "U"."NEUR_3_3", "U"."NEUR_3_4", "U"."NEUR_3_5", "U"."NEUR_3_6", "U"."NEUR_3_7", "U"."NEUR_3_8", "U"."NEUR_3_9", "U"."NEUR_3_10" 
FROM (WITH "HL_BA_2" AS 
(SELECT "HL_1_relu_1"."KEY" AS "KEY", -0.557336490102975 * "HL_1_relu_1"."NEUR_1_1" + -0.864153424396568 * "HL_1_relu_1"."NEUR_1_2" + -0.276660478089548 * "HL_1_relu_1"."NEUR_1_3" + 2.295386642805444 AS "NEUR_2_1", 0.011735522860249 * "HL_1_relu_1"."NEUR_1_1" + -0.403411986583338 * "HL_1_relu_1"."NEUR_1_2" + 0.186123673830817 * "HL_1_relu_1"."NEUR_1_3" + -0.508232954910367 AS "NEUR_2_2", -0.050921304936018 * "HL_1_relu_1"."NEUR_1_1" + 0.849172101050994 * "HL_1_relu_1"."NEUR_1_2" + 0.824555574035096 * "HL_1_relu_1"."NEUR_1_3" + -0.284559233995735 AS "NEUR_2_3", -0.003847843462337 * "HL_1_relu_1"."NEUR_1_1" + 0.400236972498278 * "HL_1_relu_1"."NEUR_1_2" + -0.283183347167081 * "HL_1_relu_1"."NEUR_1_3" + -0.691559145758 AS "NEUR_2_4", 0.062905432305623 * "HL_1_relu_1"."NEUR_1_1" + -0.262408031786624 * "HL_1_relu_1"."NEUR_1_2" + 0.109919725290648 * "HL_1_relu_1"."NEUR_1_3" + -3.800284390483226 AS "NEUR_2_5" 
FROM tmp_20180417025628_yxujrv_hl_1 AS "HL_1_relu_1"), 
"HL_2_relu" AS 
(SELECT "HL_BA_2"."KEY" AS "KEY", CAST(greatest("HL_BA_2"."NEUR_2_1", 0.0) AS FLOAT) AS "NEUR_2_1", CAST(greatest("HL_BA_2"."NEUR_2_2", 0.0) AS FLOAT) AS "NEUR_2_2", CAST(greatest("HL_BA_2"."NEUR_2_3", 0.0) AS FLOAT) AS "NEUR_2_3", CAST(greatest("HL_BA_2"."NEUR_2_4", 0.0) AS FLOAT) AS "NEUR_2_4", CAST(greatest("HL_BA_2"."NEUR_2_5", 0.0) AS FLOAT) AS "NEUR_2_5" 
FROM "HL_BA_2"), 
"OL_BA" AS 
(SELECT "HL_2_relu"."KEY" AS "KEY", 1.763154374324467 * "HL_2_relu"."NEUR_2_1" + 0.084789003588615 * "HL_2_relu"."NEUR_2_2" + -0.310671364771011 * "HL_2_relu"."NEUR_2_3" + -1.623754710269348 * "HL_2_relu"."NEUR_2_4" + -2.198278182540392 * "HL_2_relu"."NEUR_2_5" + 2.418473832045558 AS "NEUR_3_1", -1.479325083416576 * "HL_2_relu"."NEUR_2_1" + 0.177459436769823 * "HL_2_relu"."NEUR_2_2" + -0.562718407518866 * "HL_2_relu"."NEUR_2_3" + -0.102728482939328 * "HL_2_relu"."NEUR_2_4" + 0.502936378280425 * "HL_2_relu"."NEUR_2_5" + -0.449878276396994 AS "NEUR_3_2", -2.458115466921616 * "HL_2_relu"."NEUR_2_1" + 0.048359429067797 * "HL_2_relu"."NEUR_2_2" + -0.302188286698309 * "HL_2_relu"."NEUR_2_3" + 1.553370265253775 * "HL_2_relu"."NEUR_2_4" + 1.049802676250587 * "HL_2_relu"."NEUR_2_5" + -6.048867040106392 AS "NEUR_3_3", -2.321493263283275 * "HL_2_relu"."NEUR_2_1" + 0.788456679656487 * "HL_2_relu"."NEUR_2_2" + 0.377171877228938 * "HL_2_relu"."NEUR_2_3" + 0.64637470058577 * "HL_2_relu"."NEUR_2_4" + 0.828052671989098 * "HL_2_relu"."NEUR_2_5" + -4.921429725102976 AS "NEUR_3_4", 2.671400256313335 * "HL_2_relu"."NEUR_2_1" + -0.545598194937426 * "HL_2_relu"."NEUR_2_2" + -0.05171142318335 * "HL_2_relu"."NEUR_2_3" + -0.579261396741701 * "HL_2_relu"."NEUR_2_4" + -1.707119191022665 * "HL_2_relu"."NEUR_2_5" + 0.92052260615882 AS "NEUR_3_5", 0.672214312286394 * "HL_2_relu"."NEUR_2_1" + 0.606726995782398 * "HL_2_relu"."NEUR_2_2" + -0.512978387099283 * "HL_2_relu"."NEUR_2_3" + 0.416028868001655 * "HL_2_relu"."NEUR_2_4" + -0.01090196729085 * "HL_2_relu"."NEUR_2_5" + 1.561244998748783 AS "NEUR_3_6", 1.943929805398442 * "HL_2_relu"."NEUR_2_1" + -0.263714501083816 * "HL_2_relu"."NEUR_2_2" + 0.182618698127809 * "HL_2_relu"."NEUR_2_3" + -0.565384205147533 * "HL_2_relu"."NEUR_2_4" + -0.406485655847583 * "HL_2_relu"."NEUR_2_5" + 2.165341102861783 AS "NEUR_3_7", 0.584335235461989 * "HL_2_relu"."NEUR_2_1" + 0.311854116214585 * "HL_2_relu"."NEUR_2_2" + -0.358975214391525 * "HL_2_relu"."NEUR_2_3" + 0.252270801777313 * "HL_2_relu"."NEUR_2_4" + 0.060220248020601 * "HL_2_relu"."NEUR_2_5" + 1.448084264896552 AS "NEUR_3_8", -1.428650563547325 * "HL_2_relu"."NEUR_2_1" + 0.895564813137191 * "HL_2_relu"."NEUR_2_2" + 0.543082060109193 * "HL_2_relu"."NEUR_2_3" + -0.075008556908508 * "HL_2_relu"."NEUR_2_4" + 0.290865090997948 * "HL_2_relu"."NEUR_2_5" + -0.179244925888525 AS "NEUR_3_9", -0.269544115156945 * "HL_2_relu"."NEUR_2_1" + -0.442568531088958 * "HL_2_relu"."NEUR_2_2" + -0.398726480687509 * "HL_2_relu"."NEUR_2_3" + 0.045458113575002 * "HL_2_relu"."NEUR_2_4" + 0.46928397530256 * "HL_2_relu"."NEUR_2_5" + 0.478556480684556 AS "NEUR_3_10" 
FROM "HL_2_relu"), 
"OL_softmax" AS 
(SELECT "OL_BA"."KEY" AS "KEY", CAST("OL_BA"."NEUR_3_1" AS FLOAT) AS "NEUR_3_1", CAST("OL_BA"."NEUR_3_2" AS FLOAT) AS "NEUR_3_2", CAST("OL_BA"."NEUR_3_3" AS FLOAT) AS "NEUR_3_3", CAST("OL_BA"."NEUR_3_4" AS FLOAT) AS "NEUR_3_4", CAST("OL_BA"."NEUR_3_5" AS FLOAT) AS "NEUR_3_5", CAST("OL_BA"."NEUR_3_6" AS FLOAT) AS "NEUR_3_6", CAST("OL_BA"."NEUR_3_7" AS FLOAT) AS "NEUR_3_7", CAST("OL_BA"."NEUR_3_8" AS FLOAT) AS "NEUR_3_8", CAST("OL_BA"."NEUR_3_9" AS FLOAT) AS "NEUR_3_9", CAST("OL_BA"."NEUR_3_10" AS FLOAT) AS "NEUR_3_10" 
FROM "OL_BA")
 SELECT "OL_softmax_1"."KEY", "OL_softmax_1"."NEUR_3_1", "OL_softmax_1"."NEUR_3_2", "OL_softmax_1"."NEUR_3_3", "OL_softmax_1"."NEUR_3_4", "OL_softmax_1"."NEUR_3_5", "OL_softmax_1"."NEUR_3_6", "OL_softmax_1"."NEUR_3_7", "OL_softmax_1"."NEUR_3_8", "OL_softmax_1"."NEUR_3_9", "OL_softmax_1"."NEUR_3_10" 
FROM (SELECT "OL_softmax"."KEY" AS "KEY", "OL_softmax"."NEUR_3_1" AS "NEUR_3_1", "OL_softmax"."NEUR_3_2" AS "NEUR_3_2", "OL_softmax"."NEUR_3_3" AS "NEUR_3_3", "OL_softmax"."NEUR_3_4" AS "NEUR_3_4", "OL_softmax"."NEUR_3_5" AS "NEUR_3_5", "OL_softmax"."NEUR_3_6" AS "NEUR_3_6", "OL_softmax"."NEUR_3_7" AS "NEUR_3_7", "OL_softmax"."NEUR_3_8" AS "NEUR_3_8", "OL_softmax"."NEUR_3_9" AS "NEUR_3_9", "OL_softmax"."NEUR_3_10" AS "NEUR_3_10" 
FROM "OL_softmax") AS "OL_softmax_1") AS "U"

-- Model deployment code

WITH orig_cte AS 
(SELECT "OL_softmax_1"."KEY" AS "KEY", "OL_softmax_1"."NEUR_3_1" AS "Score_0", "OL_softmax_1"."NEUR_3_2" AS "Score_1", "OL_softmax_1"."NEUR_3_3" AS "Score_2", "OL_softmax_1"."NEUR_3_4" AS "Score_3", "OL_softmax_1"."NEUR_3_5" AS "Score_4", "OL_softmax_1"."NEUR_3_6" AS "Score_5", "OL_softmax_1"."NEUR_3_7" AS "Score_6", "OL_softmax_1"."NEUR_3_8" AS "Score_7", "OL_softmax_1"."NEUR_3_9" AS "Score_8", "OL_softmax_1"."NEUR_3_10" AS "Score_9", CAST(NULL AS FLOAT) AS "Proba_0", CAST(NULL AS FLOAT) AS "Proba_1", CAST(NULL AS FLOAT) AS "Proba_2", CAST(NULL AS FLOAT) AS "Proba_3", CAST(NULL AS FLOAT) AS "Proba_4", CAST(NULL AS FLOAT) AS "Proba_5", CAST(NULL AS FLOAT) AS "Proba_6", CAST(NULL AS FLOAT) AS "Proba_7", CAST(NULL AS FLOAT) AS "Proba_8", CAST(NULL AS FLOAT) AS "Proba_9", CAST(NULL AS FLOAT) AS "LogProba_0", CAST(NULL AS FLOAT) AS "LogProba_1", CAST(NULL AS FLOAT) AS "LogProba_2", CAST(NULL AS FLOAT) AS "LogProba_3", CAST(NULL AS FLOAT) AS "LogProba_4", CAST(NULL AS FLOAT) AS "LogProba_5", CAST(NULL AS FLOAT) AS "LogProba_6", CAST(NULL AS FLOAT) AS "LogProba_7", CAST(NULL AS FLOAT) AS "LogProba_8", CAST(NULL AS FLOAT) AS "LogProba_9", CAST(NULL AS BIGINT) AS "Decision", CAST(NULL AS FLOAT) AS "DecisionProba" 
FROM tmp_20180417025628_65y66i_ol_s AS "OL_softmax_1"), 
score_class_union AS 
(SELECT scu."KEY_u" AS "KEY_u", scu."class" AS "class", scu."LogProba" AS "LogProba", scu."Proba" AS "Proba", scu."Score" AS "Score" 
FROM (SELECT orig_cte."KEY" AS "KEY_u", 0 AS "class", orig_cte."LogProba_0" AS "LogProba", orig_cte."Proba_0" AS "Proba", orig_cte."Score_0" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 1 AS "class", orig_cte."LogProba_1" AS "LogProba", orig_cte."Proba_1" AS "Proba", orig_cte."Score_1" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 2 AS "class", orig_cte."LogProba_2" AS "LogProba", orig_cte."Proba_2" AS "Proba", orig_cte."Score_2" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 3 AS "class", orig_cte."LogProba_3" AS "LogProba", orig_cte."Proba_3" AS "Proba", orig_cte."Score_3" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 4 AS "class", orig_cte."LogProba_4" AS "LogProba", orig_cte."Proba_4" AS "Proba", orig_cte."Score_4" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 5 AS "class", orig_cte."LogProba_5" AS "LogProba", orig_cte."Proba_5" AS "Proba", orig_cte."Score_5" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 6 AS "class", orig_cte."LogProba_6" AS "LogProba", orig_cte."Proba_6" AS "Proba", orig_cte."Score_6" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 7 AS "class", orig_cte."LogProba_7" AS "LogProba", orig_cte."Proba_7" AS "Proba", orig_cte."Score_7" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 8 AS "class", orig_cte."LogProba_8" AS "LogProba", orig_cte."Proba_8" AS "Proba", orig_cte."Score_8" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 9 AS "class", orig_cte."LogProba_9" AS "LogProba", orig_cte."Proba_9" AS "Proba", orig_cte."Score_9" AS "Score" 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte."KEY" AS "KEY", orig_cte."Score_0" AS "Score_0", orig_cte."Score_1" AS "Score_1", orig_cte."Score_2" AS "Score_2", orig_cte."Score_3" AS "Score_3", orig_cte."Score_4" AS "Score_4", orig_cte."Score_5" AS "Score_5", orig_cte."Score_6" AS "Score_6", orig_cte."Score_7" AS "Score_7", orig_cte."Score_8" AS "Score_8", orig_cte."Score_9" AS "Score_9", orig_cte."Proba_0" AS "Proba_0", orig_cte."Proba_1" AS "Proba_1", orig_cte."Proba_2" AS "Proba_2", orig_cte."Proba_3" AS "Proba_3", orig_cte."Proba_4" AS "Proba_4", orig_cte."Proba_5" AS "Proba_5", orig_cte."Proba_6" AS "Proba_6", orig_cte."Proba_7" AS "Proba_7", orig_cte."Proba_8" AS "Proba_8", orig_cte."Proba_9" AS "Proba_9", orig_cte."LogProba_0" AS "LogProba_0", orig_cte."LogProba_1" AS "LogProba_1", orig_cte."LogProba_2" AS "LogProba_2", orig_cte."LogProba_3" AS "LogProba_3", orig_cte."LogProba_4" AS "LogProba_4", orig_cte."LogProba_5" AS "LogProba_5", orig_cte."LogProba_6" AS "LogProba_6", orig_cte."LogProba_7" AS "LogProba_7", orig_cte."LogProba_8" AS "LogProba_8", orig_cte."LogProba_9" AS "LogProba_9", orig_cte."Decision" AS "Decision", orig_cte."DecisionProba" AS "DecisionProba", max_select."KEY_m" AS "KEY_m", max_select."max_Score" AS "max_Score" 
FROM orig_cte LEFT OUTER JOIN (SELECT score_class_union."KEY_u" AS "KEY_m", max(score_class_union."Score") AS "max_Score" 
FROM score_class_union GROUP BY score_class_union."KEY_u") AS max_select ON orig_cte."KEY" = max_select."KEY_m"), 
score_soft_max_deltas AS 
(SELECT score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Score_2" AS "Score_2", score_max."Score_3" AS "Score_3", score_max."Score_4" AS "Score_4", score_max."Score_5" AS "Score_5", score_max."Score_6" AS "Score_6", score_max."Score_7" AS "Score_7", score_max."Score_8" AS "Score_8", score_max."Score_9" AS "Score_9", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."Proba_2" AS "Proba_2", score_max."Proba_3" AS "Proba_3", score_max."Proba_4" AS "Proba_4", score_max."Proba_5" AS "Proba_5", score_max."Proba_6" AS "Proba_6", score_max."Proba_7" AS "Proba_7", score_max."Proba_8" AS "Proba_8", score_max."Proba_9" AS "Proba_9", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."LogProba_2" AS "LogProba_2", score_max."LogProba_3" AS "LogProba_3", score_max."LogProba_4" AS "LogProba_4", score_max."LogProba_5" AS "LogProba_5", score_max."LogProba_6" AS "LogProba_6", score_max."LogProba_7" AS "LogProba_7", score_max."LogProba_8" AS "LogProba_8", score_max."LogProba_9" AS "LogProba_9", score_max."Decision" AS "Decision", score_max."DecisionProba" AS "DecisionProba", score_max."KEY_m" AS "KEY_m", score_max."max_Score" AS "max_Score", exp(score_max."Score_0" - score_max."max_Score") AS "exp_delta_Score_0", exp(score_max."Score_1" - score_max."max_Score") AS "exp_delta_Score_1", exp(score_max."Score_2" - score_max."max_Score") AS "exp_delta_Score_2", exp(score_max."Score_3" - score_max."max_Score") AS "exp_delta_Score_3", exp(score_max."Score_4" - score_max."max_Score") AS "exp_delta_Score_4", exp(score_max."Score_5" - score_max."max_Score") AS "exp_delta_Score_5", exp(score_max."Score_6" - score_max."max_Score") AS "exp_delta_Score_6", exp(score_max."Score_7" - score_max."max_Score") AS "exp_delta_Score_7", exp(score_max."Score_8" - score_max."max_Score") AS "exp_delta_Score_8", exp(score_max."Score_9" - score_max."max_Score") AS "exp_delta_Score_9" 
FROM score_max), 
score_class_union_soft AS 
(SELECT soft_scu."KEY" AS "KEY", soft_scu."class" AS "class", soft_scu."exp_delta_Score" AS "exp_delta_Score" 
FROM (SELECT score_soft_max_deltas."KEY" AS "KEY", 0 AS "class", score_soft_max_deltas."exp_delta_Score_0" AS "exp_delta_Score" 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas."KEY" AS "KEY", 1 AS "class", score_soft_max_deltas."exp_delta_Score_1" AS "exp_delta_Score" 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas."KEY" AS "KEY", 2 AS "class", score_soft_max_deltas."exp_delta_Score_2" AS "exp_delta_Score" 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas."KEY" AS "KEY", 3 AS "class", score_soft_max_deltas."exp_delta_Score_3" AS "exp_delta_Score" 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas."KEY" AS "KEY", 4 AS "class", score_soft_max_deltas."exp_delta_Score_4" AS "exp_delta_Score" 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas."KEY" AS "KEY", 5 AS "class", score_soft_max_deltas."exp_delta_Score_5" AS "exp_delta_Score" 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas."KEY" AS "KEY", 6 AS "class", score_soft_max_deltas."exp_delta_Score_6" AS "exp_delta_Score" 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas."KEY" AS "KEY", 7 AS "class", score_soft_max_deltas."exp_delta_Score_7" AS "exp_delta_Score" 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas."KEY" AS "KEY", 8 AS "class", score_soft_max_deltas."exp_delta_Score_8" AS "exp_delta_Score" 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas."KEY" AS "KEY", 9 AS "class", score_soft_max_deltas."exp_delta_Score_9" AS "exp_delta_Score" 
FROM score_soft_max_deltas) AS soft_scu), 
score_soft_max AS 
(SELECT score_soft_max_deltas."KEY" AS "KEY", score_soft_max_deltas."Score_0" AS "Score_0", score_soft_max_deltas."Score_1" AS "Score_1", score_soft_max_deltas."Score_2" AS "Score_2", score_soft_max_deltas."Score_3" AS "Score_3", score_soft_max_deltas."Score_4" AS "Score_4", score_soft_max_deltas."Score_5" AS "Score_5", score_soft_max_deltas."Score_6" AS "Score_6", score_soft_max_deltas."Score_7" AS "Score_7", score_soft_max_deltas."Score_8" AS "Score_8", score_soft_max_deltas."Score_9" AS "Score_9", score_soft_max_deltas."Proba_0" AS "Proba_0", score_soft_max_deltas."Proba_1" AS "Proba_1", score_soft_max_deltas."Proba_2" AS "Proba_2", score_soft_max_deltas."Proba_3" AS "Proba_3", score_soft_max_deltas."Proba_4" AS "Proba_4", score_soft_max_deltas."Proba_5" AS "Proba_5", score_soft_max_deltas."Proba_6" AS "Proba_6", score_soft_max_deltas."Proba_7" AS "Proba_7", score_soft_max_deltas."Proba_8" AS "Proba_8", score_soft_max_deltas."Proba_9" AS "Proba_9", score_soft_max_deltas."LogProba_0" AS "LogProba_0", score_soft_max_deltas."LogProba_1" AS "LogProba_1", score_soft_max_deltas."LogProba_2" AS "LogProba_2", score_soft_max_deltas."LogProba_3" AS "LogProba_3", score_soft_max_deltas."LogProba_4" AS "LogProba_4", score_soft_max_deltas."LogProba_5" AS "LogProba_5", score_soft_max_deltas."LogProba_6" AS "LogProba_6", score_soft_max_deltas."LogProba_7" AS "LogProba_7", score_soft_max_deltas."LogProba_8" AS "LogProba_8", score_soft_max_deltas."LogProba_9" AS "LogProba_9", score_soft_max_deltas."Decision" AS "Decision", score_soft_max_deltas."DecisionProba" AS "DecisionProba", score_soft_max_deltas."KEY_m" AS "KEY_m", score_soft_max_deltas."max_Score" AS "max_Score", score_soft_max_deltas."exp_delta_Score_0" AS "exp_delta_Score_0", score_soft_max_deltas."exp_delta_Score_1" AS "exp_delta_Score_1", score_soft_max_deltas."exp_delta_Score_2" AS "exp_delta_Score_2", score_soft_max_deltas."exp_delta_Score_3" AS "exp_delta_Score_3", score_soft_max_deltas."exp_delta_Score_4" AS "exp_delta_Score_4", score_soft_max_deltas."exp_delta_Score_5" AS "exp_delta_Score_5", score_soft_max_deltas."exp_delta_Score_6" AS "exp_delta_Score_6", score_soft_max_deltas."exp_delta_Score_7" AS "exp_delta_Score_7", score_soft_max_deltas."exp_delta_Score_8" AS "exp_delta_Score_8", score_soft_max_deltas."exp_delta_Score_9" AS "exp_delta_Score_9", sum_exp_t."KEY_sum" AS "KEY_sum", sum_exp_t."sum_ExpDeltaScore" AS "sum_ExpDeltaScore" 
FROM score_soft_max_deltas LEFT OUTER JOIN (SELECT score_class_union_soft."KEY" AS "KEY_sum", sum(score_class_union_soft."exp_delta_Score") AS "sum_ExpDeltaScore" 
FROM score_class_union_soft GROUP BY score_class_union_soft."KEY") AS sum_exp_t ON score_soft_max_deltas."KEY" = sum_exp_t."KEY_sum"), 
union_with_max AS 
(SELECT score_class_union."KEY_u" AS "KEY_u", score_class_union."class" AS "class", score_class_union."LogProba" AS "LogProba", score_class_union."Proba" AS "Proba", score_class_union."Score" AS "Score", score_soft_max."KEY" AS "KEY", score_soft_max."Score_0" AS "Score_0", score_soft_max."Score_1" AS "Score_1", score_soft_max."Score_2" AS "Score_2", score_soft_max."Score_3" AS "Score_3", score_soft_max."Score_4" AS "Score_4", score_soft_max."Score_5" AS "Score_5", score_soft_max."Score_6" AS "Score_6", score_soft_max."Score_7" AS "Score_7", score_soft_max."Score_8" AS "Score_8", score_soft_max."Score_9" AS "Score_9", score_soft_max."Proba_0" AS "Proba_0", score_soft_max."Proba_1" AS "Proba_1", score_soft_max."Proba_2" AS "Proba_2", score_soft_max."Proba_3" AS "Proba_3", score_soft_max."Proba_4" AS "Proba_4", score_soft_max."Proba_5" AS "Proba_5", score_soft_max."Proba_6" AS "Proba_6", score_soft_max."Proba_7" AS "Proba_7", score_soft_max."Proba_8" AS "Proba_8", score_soft_max."Proba_9" AS "Proba_9", score_soft_max."LogProba_0" AS "LogProba_0", score_soft_max."LogProba_1" AS "LogProba_1", score_soft_max."LogProba_2" AS "LogProba_2", score_soft_max."LogProba_3" AS "LogProba_3", score_soft_max."LogProba_4" AS "LogProba_4", score_soft_max."LogProba_5" AS "LogProba_5", score_soft_max."LogProba_6" AS "LogProba_6", score_soft_max."LogProba_7" AS "LogProba_7", score_soft_max."LogProba_8" AS "LogProba_8", score_soft_max."LogProba_9" AS "LogProba_9", score_soft_max."Decision" AS "Decision", score_soft_max."DecisionProba" AS "DecisionProba", score_soft_max."KEY_m" AS "KEY_m", score_soft_max."max_Score" AS "max_Score", score_soft_max."exp_delta_Score_0" AS "exp_delta_Score_0", score_soft_max."exp_delta_Score_1" AS "exp_delta_Score_1", score_soft_max."exp_delta_Score_2" AS "exp_delta_Score_2", score_soft_max."exp_delta_Score_3" AS "exp_delta_Score_3", score_soft_max."exp_delta_Score_4" AS "exp_delta_Score_4", score_soft_max."exp_delta_Score_5" AS "exp_delta_Score_5", score_soft_max."exp_delta_Score_6" AS "exp_delta_Score_6", score_soft_max."exp_delta_Score_7" AS "exp_delta_Score_7", score_soft_max."exp_delta_Score_8" AS "exp_delta_Score_8", score_soft_max."exp_delta_Score_9" AS "exp_delta_Score_9", score_soft_max."KEY_sum" AS "KEY_sum", score_soft_max."sum_ExpDeltaScore" AS "sum_ExpDeltaScore" 
FROM score_class_union LEFT OUTER JOIN score_soft_max ON score_class_union."KEY_u" = score_soft_max."KEY"), 
arg_max_cte AS 
(SELECT score_soft_max."KEY" AS "KEY", score_soft_max."Score_0" AS "Score_0", score_soft_max."Score_1" AS "Score_1", score_soft_max."Score_2" AS "Score_2", score_soft_max."Score_3" AS "Score_3", score_soft_max."Score_4" AS "Score_4", score_soft_max."Score_5" AS "Score_5", score_soft_max."Score_6" AS "Score_6", score_soft_max."Score_7" AS "Score_7", score_soft_max."Score_8" AS "Score_8", score_soft_max."Score_9" AS "Score_9", score_soft_max."Proba_0" AS "Proba_0", score_soft_max."Proba_1" AS "Proba_1", score_soft_max."Proba_2" AS "Proba_2", score_soft_max."Proba_3" AS "Proba_3", score_soft_max."Proba_4" AS "Proba_4", score_soft_max."Proba_5" AS "Proba_5", score_soft_max."Proba_6" AS "Proba_6", score_soft_max."Proba_7" AS "Proba_7", score_soft_max."Proba_8" AS "Proba_8", score_soft_max."Proba_9" AS "Proba_9", score_soft_max."LogProba_0" AS "LogProba_0", score_soft_max."LogProba_1" AS "LogProba_1", score_soft_max."LogProba_2" AS "LogProba_2", score_soft_max."LogProba_3" AS "LogProba_3", score_soft_max."LogProba_4" AS "LogProba_4", score_soft_max."LogProba_5" AS "LogProba_5", score_soft_max."LogProba_6" AS "LogProba_6", score_soft_max."LogProba_7" AS "LogProba_7", score_soft_max."LogProba_8" AS "LogProba_8", score_soft_max."LogProba_9" AS "LogProba_9", score_soft_max."Decision" AS "Decision", score_soft_max."DecisionProba" AS "DecisionProba", score_soft_max."KEY_m" AS "KEY_m", score_soft_max."max_Score" AS "max_Score", score_soft_max."exp_delta_Score_0" AS "exp_delta_Score_0", score_soft_max."exp_delta_Score_1" AS "exp_delta_Score_1", score_soft_max."exp_delta_Score_2" AS "exp_delta_Score_2", score_soft_max."exp_delta_Score_3" AS "exp_delta_Score_3", score_soft_max."exp_delta_Score_4" AS "exp_delta_Score_4", score_soft_max."exp_delta_Score_5" AS "exp_delta_Score_5", score_soft_max."exp_delta_Score_6" AS "exp_delta_Score_6", score_soft_max."exp_delta_Score_7" AS "exp_delta_Score_7", score_soft_max."exp_delta_Score_8" AS "exp_delta_Score_8", score_soft_max."exp_delta_Score_9" AS "exp_delta_Score_9", score_soft_max."KEY_sum" AS "KEY_sum", score_soft_max."sum_ExpDeltaScore" AS "sum_ExpDeltaScore", "arg_max_t_Score"."KEY_Score" AS "KEY_Score", "arg_max_t_Score"."arg_max_Score" AS "arg_max_Score", soft_max_comp."KEY_softmax" AS "KEY_softmax", soft_max_comp."SoftProba_0" AS "SoftProba_0", soft_max_comp."SoftProba_1" AS "SoftProba_1", soft_max_comp."SoftProba_2" AS "SoftProba_2", soft_max_comp."SoftProba_3" AS "SoftProba_3", soft_max_comp."SoftProba_4" AS "SoftProba_4", soft_max_comp."SoftProba_5" AS "SoftProba_5", soft_max_comp."SoftProba_6" AS "SoftProba_6", soft_max_comp."SoftProba_7" AS "SoftProba_7", soft_max_comp."SoftProba_8" AS "SoftProba_8", soft_max_comp."SoftProba_9" AS "SoftProba_9" 
FROM score_soft_max LEFT OUTER JOIN (SELECT union_with_max."KEY" AS "KEY_Score", min(union_with_max."class") AS "arg_max_Score" 
FROM union_with_max 
WHERE union_with_max."Score" >= union_with_max."max_Score" GROUP BY union_with_max."KEY") AS "arg_max_t_Score" ON score_soft_max."KEY" = "arg_max_t_Score"."KEY_Score" LEFT OUTER JOIN (SELECT score_soft_max."KEY" AS "KEY_softmax", score_soft_max."exp_delta_Score_0" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_0", score_soft_max."exp_delta_Score_1" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_1", score_soft_max."exp_delta_Score_2" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_2", score_soft_max."exp_delta_Score_3" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_3", score_soft_max."exp_delta_Score_4" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_4", score_soft_max."exp_delta_Score_5" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_5", score_soft_max."exp_delta_Score_6" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_6", score_soft_max."exp_delta_Score_7" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_7", score_soft_max."exp_delta_Score_8" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_8", score_soft_max."exp_delta_Score_9" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_9" 
FROM score_soft_max) AS soft_max_comp ON soft_max_comp."KEY_softmax" = "arg_max_t_Score"."KEY_Score")
 SELECT arg_max_cte."KEY" AS "KEY", CAST(NULL AS FLOAT) AS "Score_0", CAST(NULL AS FLOAT) AS "Score_1", CAST(NULL AS FLOAT) AS "Score_2", CAST(NULL AS FLOAT) AS "Score_3", CAST(NULL AS FLOAT) AS "Score_4", CAST(NULL AS FLOAT) AS "Score_5", CAST(NULL AS FLOAT) AS "Score_6", CAST(NULL AS FLOAT) AS "Score_7", CAST(NULL AS FLOAT) AS "Score_8", CAST(NULL AS FLOAT) AS "Score_9", arg_max_cte."SoftProba_0" AS "Proba_0", arg_max_cte."SoftProba_1" AS "Proba_1", arg_max_cte."SoftProba_2" AS "Proba_2", arg_max_cte."SoftProba_3" AS "Proba_3", arg_max_cte."SoftProba_4" AS "Proba_4", arg_max_cte."SoftProba_5" AS "Proba_5", arg_max_cte."SoftProba_6" AS "Proba_6", arg_max_cte."SoftProba_7" AS "Proba_7", arg_max_cte."SoftProba_8" AS "Proba_8", arg_max_cte."SoftProba_9" AS "Proba_9", CASE WHEN (arg_max_cte."SoftProba_0" IS NULL OR arg_max_cte."SoftProba_0" > 0.0) THEN ln(arg_max_cte."SoftProba_0") ELSE -1.79769313486231e+308 END AS "LogProba_0", CASE WHEN (arg_max_cte."SoftProba_1" IS NULL OR arg_max_cte."SoftProba_1" > 0.0) THEN ln(arg_max_cte."SoftProba_1") ELSE -1.79769313486231e+308 END AS "LogProba_1", CASE WHEN (arg_max_cte."SoftProba_2" IS NULL OR arg_max_cte."SoftProba_2" > 0.0) THEN ln(arg_max_cte."SoftProba_2") ELSE -1.79769313486231e+308 END AS "LogProba_2", CASE WHEN (arg_max_cte."SoftProba_3" IS NULL OR arg_max_cte."SoftProba_3" > 0.0) THEN ln(arg_max_cte."SoftProba_3") ELSE -1.79769313486231e+308 END AS "LogProba_3", CASE WHEN (arg_max_cte."SoftProba_4" IS NULL OR arg_max_cte."SoftProba_4" > 0.0) THEN ln(arg_max_cte."SoftProba_4") ELSE -1.79769313486231e+308 END AS "LogProba_4", CASE WHEN (arg_max_cte."SoftProba_5" IS NULL OR arg_max_cte."SoftProba_5" > 0.0) THEN ln(arg_max_cte."SoftProba_5") ELSE -1.79769313486231e+308 END AS "LogProba_5", CASE WHEN (arg_max_cte."SoftProba_6" IS NULL OR arg_max_cte."SoftProba_6" > 0.0) THEN ln(arg_max_cte."SoftProba_6") ELSE -1.79769313486231e+308 END AS "LogProba_6", CASE WHEN (arg_max_cte."SoftProba_7" IS NULL OR arg_max_cte."SoftProba_7" > 0.0) THEN ln(arg_max_cte."SoftProba_7") ELSE -1.79769313486231e+308 END AS "LogProba_7", CASE WHEN (arg_max_cte."SoftProba_8" IS NULL OR arg_max_cte."SoftProba_8" > 0.0) THEN ln(arg_max_cte."SoftProba_8") ELSE -1.79769313486231e+308 END AS "LogProba_8", CASE WHEN (arg_max_cte."SoftProba_9" IS NULL OR arg_max_cte."SoftProba_9" > 0.0) THEN ln(arg_max_cte."SoftProba_9") ELSE -1.79769313486231e+308 END AS "LogProba_9", arg_max_cte."arg_max_Score" AS "Decision", greatest(arg_max_cte."SoftProba_0", arg_max_cte."SoftProba_1", arg_max_cte."SoftProba_2", arg_max_cte."SoftProba_3", arg_max_cte."SoftProba_4", arg_max_cte."SoftProba_5", arg_max_cte."SoftProba_6", arg_max_cte."SoftProba_7", arg_max_cte."SoftProba_8", arg_max_cte."SoftProba_9") AS "DecisionProba" 
FROM arg_max_cte