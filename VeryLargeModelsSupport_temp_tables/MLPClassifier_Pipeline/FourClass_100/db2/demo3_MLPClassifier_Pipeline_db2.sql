-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2018

-- Model : MLPClassifier_Pipeline
-- Dataset : FourClass_100
-- Database : db2


-- This SQL code can contain one or more statements, to be executed in the order they appear in this file.



-- Code For temporary table tmp_20180416233720_xjrjmu_ads_imp_1_out part 1/2. Create 


CREATE GLOBAL TEMPORARY TABLE tmp_20180416233720_xjrjmu_ads_imp_1_out (
	"KEY" BIGINT, 
	impter_2 DOUBLE, 
	impter_3 DOUBLE, 
	impter_4 DOUBLE, 
	impter_5 DOUBLE, 
	impter_6 DOUBLE, 
	impter_7 DOUBLE, 
	impter_8 DOUBLE, 
	impter_9 DOUBLE, 
	impter_10 DOUBLE, 
	impter_11 DOUBLE, 
	impter_12 DOUBLE, 
	impter_13 DOUBLE, 
	impter_14 DOUBLE, 
	impter_15 DOUBLE, 
	impter_16 DOUBLE, 
	impter_17 DOUBLE, 
	impter_18 DOUBLE, 
	impter_19 DOUBLE, 
	impter_20 DOUBLE, 
	impter_21 DOUBLE, 
	impter_22 DOUBLE, 
	impter_23 DOUBLE, 
	impter_24 DOUBLE, 
	impter_25 DOUBLE, 
	impter_26 DOUBLE, 
	impter_27 DOUBLE, 
	impter_28 DOUBLE, 
	impter_29 DOUBLE, 
	impter_30 DOUBLE, 
	impter_31 DOUBLE, 
	impter_32 DOUBLE, 
	impter_33 DOUBLE, 
	impter_34 DOUBLE, 
	impter_35 DOUBLE, 
	impter_36 DOUBLE, 
	impter_37 DOUBLE, 
	impter_38 DOUBLE, 
	impter_39 DOUBLE, 
	impter_40 DOUBLE, 
	impter_41 DOUBLE, 
	impter_42 DOUBLE, 
	impter_43 DOUBLE, 
	impter_44 DOUBLE, 
	impter_45 DOUBLE, 
	impter_46 DOUBLE, 
	impter_47 DOUBLE, 
	impter_48 DOUBLE, 
	impter_49 DOUBLE, 
	impter_50 DOUBLE, 
	impter_51 DOUBLE, 
	impter_52 DOUBLE, 
	impter_53 DOUBLE, 
	impter_54 DOUBLE, 
	impter_55 DOUBLE, 
	impter_56 DOUBLE, 
	impter_57 DOUBLE, 
	impter_58 DOUBLE, 
	impter_59 DOUBLE, 
	impter_60 DOUBLE, 
	impter_61 DOUBLE, 
	impter_62 DOUBLE, 
	impter_63 DOUBLE, 
	impter_64 DOUBLE, 
	impter_65 DOUBLE, 
	impter_66 DOUBLE, 
	impter_67 DOUBLE, 
	impter_68 DOUBLE, 
	impter_69 DOUBLE, 
	impter_70 DOUBLE, 
	impter_71 DOUBLE, 
	impter_72 DOUBLE, 
	impter_73 DOUBLE, 
	impter_74 DOUBLE, 
	impter_75 DOUBLE, 
	impter_76 DOUBLE, 
	impter_77 DOUBLE, 
	impter_78 DOUBLE, 
	impter_79 DOUBLE, 
	impter_80 DOUBLE, 
	impter_81 DOUBLE, 
	impter_82 DOUBLE, 
	impter_83 DOUBLE, 
	impter_84 DOUBLE, 
	impter_85 DOUBLE, 
	impter_86 DOUBLE, 
	impter_87 DOUBLE, 
	impter_88 DOUBLE, 
	impter_89 DOUBLE, 
	impter_90 DOUBLE, 
	impter_91 DOUBLE, 
	impter_92 DOUBLE, 
	impter_93 DOUBLE, 
	impter_94 DOUBLE, 
	impter_95 DOUBLE, 
	impter_96 DOUBLE, 
	impter_97 DOUBLE, 
	impter_98 DOUBLE, 
	impter_99 DOUBLE, 
	impter_100 DOUBLE, 
	impter_101 DOUBLE
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table tmp_20180416233720_xjrjmu_ads_imp_1_out part 2/2. Populate

INSERT INTO tmp_20180416233720_xjrjmu_ads_imp_1_out SELECT "ADS_imp_1_OUT"."KEY", "ADS_imp_1_OUT".impter_2, "ADS_imp_1_OUT".impter_3, "ADS_imp_1_OUT".impter_4, "ADS_imp_1_OUT".impter_5, "ADS_imp_1_OUT".impter_6, "ADS_imp_1_OUT".impter_7, "ADS_imp_1_OUT".impter_8, "ADS_imp_1_OUT".impter_9, "ADS_imp_1_OUT".impter_10, "ADS_imp_1_OUT".impter_11, "ADS_imp_1_OUT".impter_12, "ADS_imp_1_OUT".impter_13, "ADS_imp_1_OUT".impter_14, "ADS_imp_1_OUT".impter_15, "ADS_imp_1_OUT".impter_16, "ADS_imp_1_OUT".impter_17, "ADS_imp_1_OUT".impter_18, "ADS_imp_1_OUT".impter_19, "ADS_imp_1_OUT".impter_20, "ADS_imp_1_OUT".impter_21, "ADS_imp_1_OUT".impter_22, "ADS_imp_1_OUT".impter_23, "ADS_imp_1_OUT".impter_24, "ADS_imp_1_OUT".impter_25, "ADS_imp_1_OUT".impter_26, "ADS_imp_1_OUT".impter_27, "ADS_imp_1_OUT".impter_28, "ADS_imp_1_OUT".impter_29, "ADS_imp_1_OUT".impter_30, "ADS_imp_1_OUT".impter_31, "ADS_imp_1_OUT".impter_32, "ADS_imp_1_OUT".impter_33, "ADS_imp_1_OUT".impter_34, "ADS_imp_1_OUT".impter_35, "ADS_imp_1_OUT".impter_36, "ADS_imp_1_OUT".impter_37, "ADS_imp_1_OUT".impter_38, "ADS_imp_1_OUT".impter_39, "ADS_imp_1_OUT".impter_40, "ADS_imp_1_OUT".impter_41, "ADS_imp_1_OUT".impter_42, "ADS_imp_1_OUT".impter_43, "ADS_imp_1_OUT".impter_44, "ADS_imp_1_OUT".impter_45, "ADS_imp_1_OUT".impter_46, "ADS_imp_1_OUT".impter_47, "ADS_imp_1_OUT".impter_48, "ADS_imp_1_OUT".impter_49, "ADS_imp_1_OUT".impter_50, "ADS_imp_1_OUT".impter_51, "ADS_imp_1_OUT".impter_52, "ADS_imp_1_OUT".impter_53, "ADS_imp_1_OUT".impter_54, "ADS_imp_1_OUT".impter_55, "ADS_imp_1_OUT".impter_56, "ADS_imp_1_OUT".impter_57, "ADS_imp_1_OUT".impter_58, "ADS_imp_1_OUT".impter_59, "ADS_imp_1_OUT".impter_60, "ADS_imp_1_OUT".impter_61, "ADS_imp_1_OUT".impter_62, "ADS_imp_1_OUT".impter_63, "ADS_imp_1_OUT".impter_64, "ADS_imp_1_OUT".impter_65, "ADS_imp_1_OUT".impter_66, "ADS_imp_1_OUT".impter_67, "ADS_imp_1_OUT".impter_68, "ADS_imp_1_OUT".impter_69, "ADS_imp_1_OUT".impter_70, "ADS_imp_1_OUT".impter_71, "ADS_imp_1_OUT".impter_72, "ADS_imp_1_OUT".impter_73, "ADS_imp_1_OUT".impter_74, "ADS_imp_1_OUT".impter_75, "ADS_imp_1_OUT".impter_76, "ADS_imp_1_OUT".impter_77, "ADS_imp_1_OUT".impter_78, "ADS_imp_1_OUT".impter_79, "ADS_imp_1_OUT".impter_80, "ADS_imp_1_OUT".impter_81, "ADS_imp_1_OUT".impter_82, "ADS_imp_1_OUT".impter_83, "ADS_imp_1_OUT".impter_84, "ADS_imp_1_OUT".impter_85, "ADS_imp_1_OUT".impter_86, "ADS_imp_1_OUT".impter_87, "ADS_imp_1_OUT".impter_88, "ADS_imp_1_OUT".impter_89, "ADS_imp_1_OUT".impter_90, "ADS_imp_1_OUT".impter_91, "ADS_imp_1_OUT".impter_92, "ADS_imp_1_OUT".impter_93, "ADS_imp_1_OUT".impter_94, "ADS_imp_1_OUT".impter_95, "ADS_imp_1_OUT".impter_96, "ADS_imp_1_OUT".impter_97, "ADS_imp_1_OUT".impter_98, "ADS_imp_1_OUT".impter_99, "ADS_imp_1_OUT".impter_100, "ADS_imp_1_OUT".impter_101 
FROM (SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" IS NULL) THEN 0.006535740121159998 ELSE "ADS"."Feature_0" END AS impter_2, CASE WHEN ("ADS"."Feature_1" IS NULL) THEN 0.16767827125978743 ELSE "ADS"."Feature_1" END AS impter_3, CASE WHEN ("ADS"."Feature_2" IS NULL) THEN -0.05514704173583139 ELSE "ADS"."Feature_2" END AS impter_4, CASE WHEN ("ADS"."Feature_3" IS NULL) THEN 0.0015211693051869056 ELSE "ADS"."Feature_3" END AS impter_5, CASE WHEN ("ADS"."Feature_4" IS NULL) THEN 0.03142760191039923 ELSE "ADS"."Feature_4" END AS impter_6, CASE WHEN ("ADS"."Feature_5" IS NULL) THEN 0.026179683178748685 ELSE "ADS"."Feature_5" END AS impter_7, CASE WHEN ("ADS"."Feature_6" IS NULL) THEN -0.011254713122120081 ELSE "ADS"."Feature_6" END AS impter_8, CASE WHEN ("ADS"."Feature_7" IS NULL) THEN -0.016886211800947296 ELSE "ADS"."Feature_7" END AS impter_9, CASE WHEN ("ADS"."Feature_8" IS NULL) THEN -0.027342702964496257 ELSE "ADS"."Feature_8" END AS impter_10, CASE WHEN ("ADS"."Feature_9" IS NULL) THEN -0.16370127884822097 ELSE "ADS"."Feature_9" END AS impter_11, CASE WHEN ("ADS"."Feature_10" IS NULL) THEN 0.03541225073893643 ELSE "ADS"."Feature_10" END AS impter_12, CASE WHEN ("ADS"."Feature_11" IS NULL) THEN -0.028529123475633158 ELSE "ADS"."Feature_11" END AS impter_13, CASE WHEN ("ADS"."Feature_12" IS NULL) THEN -0.026749444989609742 ELSE "ADS"."Feature_12" END AS impter_14, CASE WHEN ("ADS"."Feature_13" IS NULL) THEN 0.38601982291131526 ELSE "ADS"."Feature_13" END AS impter_15, CASE WHEN ("ADS"."Feature_14" IS NULL) THEN 0.01621452573135814 ELSE "ADS"."Feature_14" END AS impter_16, CASE WHEN ("ADS"."Feature_15" IS NULL) THEN 0.22723775077839256 ELSE "ADS"."Feature_15" END AS impter_17, CASE WHEN ("ADS"."Feature_16" IS NULL) THEN 0.5663734566941232 ELSE "ADS"."Feature_16" END AS impter_18, CASE WHEN ("ADS"."Feature_17" IS NULL) THEN 0.2776964106161551 ELSE "ADS"."Feature_17" END AS impter_19, CASE WHEN ("ADS"."Feature_18" IS NULL) THEN 0.005994326812351447 ELSE "ADS"."Feature_18" END AS impter_20, CASE WHEN ("ADS"."Feature_19" IS NULL) THEN -0.021852534469692157 ELSE "ADS"."Feature_19" END AS impter_21, CASE WHEN ("ADS"."Feature_20" IS NULL) THEN -0.028375425917008895 ELSE "ADS"."Feature_20" END AS impter_22, CASE WHEN ("ADS"."Feature_21" IS NULL) THEN 0.015164323296291698 ELSE "ADS"."Feature_21" END AS impter_23, CASE WHEN ("ADS"."Feature_22" IS NULL) THEN 0.017469134548764743 ELSE "ADS"."Feature_22" END AS impter_24, CASE WHEN ("ADS"."Feature_23" IS NULL) THEN 0.03493909449429536 ELSE "ADS"."Feature_23" END AS impter_25, CASE WHEN ("ADS"."Feature_24" IS NULL) THEN -0.1443616076343936 ELSE "ADS"."Feature_24" END AS impter_26, CASE WHEN ("ADS"."Feature_25" IS NULL) THEN 0.1461046774436175 ELSE "ADS"."Feature_25" END AS impter_27, CASE WHEN ("ADS"."Feature_26" IS NULL) THEN 0.06761584237384538 ELSE "ADS"."Feature_26" END AS impter_28, CASE WHEN ("ADS"."Feature_27" IS NULL) THEN -0.3083684560804083 ELSE "ADS"."Feature_27" END AS impter_29, CASE WHEN ("ADS"."Feature_28" IS NULL) THEN 0.9525753017609152 ELSE "ADS"."Feature_28" END AS impter_30, CASE WHEN ("ADS"."Feature_29" IS NULL) THEN -0.05813383910109171 ELSE "ADS"."Feature_29" END AS impter_31, CASE WHEN ("ADS"."Feature_30" IS NULL) THEN -0.013124412714914525 ELSE "ADS"."Feature_30" END AS impter_32, CASE WHEN ("ADS"."Feature_31" IS NULL) THEN -0.3375512543306959 ELSE "ADS"."Feature_31" END AS impter_33, CASE WHEN ("ADS"."Feature_32" IS NULL) THEN 0.03902651459317101 ELSE "ADS"."Feature_32" END AS impter_34, CASE WHEN ("ADS"."Feature_33" IS NULL) THEN -0.0402939442131795 ELSE "ADS"."Feature_33" END AS impter_35, CASE WHEN ("ADS"."Feature_34" IS NULL) THEN -0.17161188573704908 ELSE "ADS"."Feature_34" END AS impter_36, CASE WHEN ("ADS"."Feature_35" IS NULL) THEN 0.012647786868640112 ELSE "ADS"."Feature_35" END AS impter_37, CASE WHEN ("ADS"."Feature_36" IS NULL) THEN 0.005193735308514513 ELSE "ADS"."Feature_36" END AS impter_38, CASE WHEN ("ADS"."Feature_37" IS NULL) THEN -0.017160876576937396 ELSE "ADS"."Feature_37" END AS impter_39, CASE WHEN ("ADS"."Feature_38" IS NULL) THEN 0.045036155997948996 ELSE "ADS"."Feature_38" END AS impter_40, CASE WHEN ("ADS"."Feature_39" IS NULL) THEN -0.12035820022636322 ELSE "ADS"."Feature_39" END AS impter_41, CASE WHEN ("ADS"."Feature_40" IS NULL) THEN -0.17640392282213266 ELSE "ADS"."Feature_40" END AS impter_42, CASE WHEN ("ADS"."Feature_41" IS NULL) THEN -0.015157075927040681 ELSE "ADS"."Feature_41" END AS impter_43, CASE WHEN ("ADS"."Feature_42" IS NULL) THEN -0.3068740190578085 ELSE "ADS"."Feature_42" END AS impter_44, CASE WHEN ("ADS"."Feature_43" IS NULL) THEN -0.04035458069305412 ELSE "ADS"."Feature_43" END AS impter_45, CASE WHEN ("ADS"."Feature_44" IS NULL) THEN -0.00789981512459992 ELSE "ADS"."Feature_44" END AS impter_46, CASE WHEN ("ADS"."Feature_45" IS NULL) THEN 0.002647932254171184 ELSE "ADS"."Feature_45" END AS impter_47, CASE WHEN ("ADS"."Feature_46" IS NULL) THEN -0.1492108459830671 ELSE "ADS"."Feature_46" END AS impter_48, CASE WHEN ("ADS"."Feature_47" IS NULL) THEN 0.24895399236878446 ELSE "ADS"."Feature_47" END AS impter_49, CASE WHEN ("ADS"."Feature_48" IS NULL) THEN -0.7004243979718509 ELSE "ADS"."Feature_48" END AS impter_50, CASE WHEN ("ADS"."Feature_49" IS NULL) THEN 0.025527673750135163 ELSE "ADS"."Feature_49" END AS impter_51, CASE WHEN ("ADS"."Feature_50" IS NULL) THEN -0.15642138685028584 ELSE "ADS"."Feature_50" END AS impter_52, CASE WHEN ("ADS"."Feature_51" IS NULL) THEN -0.12783857717811203 ELSE "ADS"."Feature_51" END AS impter_53, CASE WHEN ("ADS"."Feature_52" IS NULL) THEN -0.3698795238326839 ELSE "ADS"."Feature_52" END AS impter_54, CASE WHEN ("ADS"."Feature_53" IS NULL) THEN 0.04105474558890989 ELSE "ADS"."Feature_53" END AS impter_55, CASE WHEN ("ADS"."Feature_54" IS NULL) THEN -0.10047427531359215 ELSE "ADS"."Feature_54" END AS impter_56, CASE WHEN ("ADS"."Feature_55" IS NULL) THEN -0.1312728865356366 ELSE "ADS"."Feature_55" END AS impter_57, CASE WHEN ("ADS"."Feature_56" IS NULL) THEN 0.3685784313653654 ELSE "ADS"."Feature_56" END AS impter_58, CASE WHEN ("ADS"."Feature_57" IS NULL) THEN 0.22281246520596887 ELSE "ADS"."Feature_57" END AS impter_59, CASE WHEN ("ADS"."Feature_58" IS NULL) THEN -0.006274087618403553 ELSE "ADS"."Feature_58" END AS impter_60, CASE WHEN ("ADS"."Feature_59" IS NULL) THEN 0.014268598957774136 ELSE "ADS"."Feature_59" END AS impter_61, CASE WHEN ("ADS"."Feature_60" IS NULL) THEN -0.028545511573860538 ELSE "ADS"."Feature_60" END AS impter_62, CASE WHEN ("ADS"."Feature_61" IS NULL) THEN -0.4374918318496328 ELSE "ADS"."Feature_61" END AS impter_63, CASE WHEN ("ADS"."Feature_62" IS NULL) THEN -0.3689927805875731 ELSE "ADS"."Feature_62" END AS impter_64, CASE WHEN ("ADS"."Feature_63" IS NULL) THEN 0.0011690418193188894 ELSE "ADS"."Feature_63" END AS impter_65, CASE WHEN ("ADS"."Feature_64" IS NULL) THEN -0.011564873717580429 ELSE "ADS"."Feature_64" END AS impter_66, CASE WHEN ("ADS"."Feature_65" IS NULL) THEN -0.04358769989694412 ELSE "ADS"."Feature_65" END AS impter_67, CASE WHEN ("ADS"."Feature_66" IS NULL) THEN -0.1618634137390173 ELSE "ADS"."Feature_66" END AS impter_68, CASE WHEN ("ADS"."Feature_67" IS NULL) THEN -0.01727264153501617 ELSE "ADS"."Feature_67" END AS impter_69, CASE WHEN ("ADS"."Feature_68" IS NULL) THEN -0.36403022036864674 ELSE "ADS"."Feature_68" END AS impter_70, CASE WHEN ("ADS"."Feature_69" IS NULL) THEN -0.049273006502403176 ELSE "ADS"."Feature_69" END AS impter_71, CASE WHEN ("ADS"."Feature_70" IS NULL) THEN -0.015468512657334297 ELSE "ADS"."Feature_70" END AS impter_72, CASE WHEN ("ADS"."Feature_71" IS NULL) THEN -0.19162939351279548 ELSE "ADS"."Feature_71" END AS impter_73, CASE WHEN ("ADS"."Feature_72" IS NULL) THEN 0.023782830321603186 ELSE "ADS"."Feature_72" END AS impter_74, CASE WHEN ("ADS"."Feature_73" IS NULL) THEN 0.020454799672569742 ELSE "ADS"."Feature_73" END AS impter_75, CASE WHEN ("ADS"."Feature_74" IS NULL) THEN -0.17335534659313448 ELSE "ADS"."Feature_74" END AS impter_76, CASE WHEN ("ADS"."Feature_75" IS NULL) THEN 0.02758228824576348 ELSE "ADS"."Feature_75" END AS impter_77, CASE WHEN ("ADS"."Feature_76" IS NULL) THEN -0.015452336678168777 ELSE "ADS"."Feature_76" END AS impter_78, CASE WHEN ("ADS"."Feature_77" IS NULL) THEN -0.0425555457732581 ELSE "ADS"."Feature_77" END AS impter_79, CASE WHEN ("ADS"."Feature_78" IS NULL) THEN -0.009425736580365328 ELSE "ADS"."Feature_78" END AS impter_80, CASE WHEN ("ADS"."Feature_79" IS NULL) THEN 0.007423677489325057 ELSE "ADS"."Feature_79" END AS impter_81, CASE WHEN ("ADS"."Feature_80" IS NULL) THEN 0.0498533264368169 ELSE "ADS"."Feature_80" END AS impter_82, CASE WHEN ("ADS"."Feature_81" IS NULL) THEN 0.027960221179443 ELSE "ADS"."Feature_81" END AS impter_83, CASE WHEN ("ADS"."Feature_82" IS NULL) THEN -0.005270502487579236 ELSE "ADS"."Feature_82" END AS impter_84, CASE WHEN ("ADS"."Feature_83" IS NULL) THEN -0.053393611774246875 ELSE "ADS"."Feature_83" END AS impter_85, CASE WHEN ("ADS"."Feature_84" IS NULL) THEN 0.17162033288561043 ELSE "ADS"."Feature_84" END AS impter_86, CASE WHEN ("ADS"."Feature_85" IS NULL) THEN 0.037211997007404414 ELSE "ADS"."Feature_85" END AS impter_87, CASE WHEN ("ADS"."Feature_86" IS NULL) THEN 0.01843497333044896 ELSE "ADS"."Feature_86" END AS impter_88, CASE WHEN ("ADS"."Feature_87" IS NULL) THEN 0.5605216326173627 ELSE "ADS"."Feature_87" END AS impter_89, CASE WHEN ("ADS"."Feature_88" IS NULL) THEN -0.05285046291900049 ELSE "ADS"."Feature_88" END AS impter_90, CASE WHEN ("ADS"."Feature_89" IS NULL) THEN 0.07939021734244131 ELSE "ADS"."Feature_89" END AS impter_91, CASE WHEN ("ADS"."Feature_90" IS NULL) THEN -2.088667163118704 ELSE "ADS"."Feature_90" END AS impter_92, CASE WHEN ("ADS"."Feature_91" IS NULL) THEN -1.0831020638954625 ELSE "ADS"."Feature_91" END AS impter_93, CASE WHEN ("ADS"."Feature_92" IS NULL) THEN -0.30470236282124374 ELSE "ADS"."Feature_92" END AS impter_94, CASE WHEN ("ADS"."Feature_93" IS NULL) THEN -0.9354262595637257 ELSE "ADS"."Feature_93" END AS impter_95, CASE WHEN ("ADS"."Feature_94" IS NULL) THEN -0.09841121992703274 ELSE "ADS"."Feature_94" END AS impter_96, CASE WHEN ("ADS"."Feature_95" IS NULL) THEN -0.5316534843603434 ELSE "ADS"."Feature_95" END AS impter_97, CASE WHEN ("ADS"."Feature_96" IS NULL) THEN 0.014127422137804999 ELSE "ADS"."Feature_96" END AS impter_98, CASE WHEN ("ADS"."Feature_97" IS NULL) THEN -0.012631277412677116 ELSE "ADS"."Feature_97" END AS impter_99, CASE WHEN ("ADS"."Feature_98" IS NULL) THEN 0.031286881233113274 ELSE "ADS"."Feature_98" END AS impter_100, CASE WHEN ("ADS"."Feature_99" IS NULL) THEN -0.45039051538460234 ELSE "ADS"."Feature_99" END AS impter_101 
FROM "FOURCLASS_100" AS "ADS") AS "ADS_imp_1_OUT"

-- Code For temporary table tmp_20180416233720_wk2qip_ads_sca_2_out part 1/2. Create 


CREATE GLOBAL TEMPORARY TABLE tmp_20180416233720_wk2qip_ads_sca_2_out (
	"KEY" BIGINT, 
	scaler_2 FLOAT, 
	scaler_3 FLOAT, 
	scaler_4 FLOAT, 
	scaler_5 FLOAT, 
	scaler_6 FLOAT, 
	scaler_7 FLOAT, 
	scaler_8 FLOAT, 
	scaler_9 FLOAT, 
	scaler_10 FLOAT, 
	scaler_11 FLOAT, 
	scaler_12 FLOAT, 
	scaler_13 FLOAT, 
	scaler_14 FLOAT, 
	scaler_15 FLOAT, 
	scaler_16 FLOAT, 
	scaler_17 FLOAT, 
	scaler_18 FLOAT, 
	scaler_19 FLOAT, 
	scaler_20 FLOAT, 
	scaler_21 FLOAT, 
	scaler_22 FLOAT, 
	scaler_23 FLOAT, 
	scaler_24 FLOAT, 
	scaler_25 FLOAT, 
	scaler_26 FLOAT, 
	scaler_27 FLOAT, 
	scaler_28 FLOAT, 
	scaler_29 FLOAT, 
	scaler_30 FLOAT, 
	scaler_31 FLOAT, 
	scaler_32 FLOAT, 
	scaler_33 FLOAT, 
	scaler_34 FLOAT, 
	scaler_35 FLOAT, 
	scaler_36 FLOAT, 
	scaler_37 FLOAT, 
	scaler_38 FLOAT, 
	scaler_39 FLOAT, 
	scaler_40 FLOAT, 
	scaler_41 FLOAT, 
	scaler_42 FLOAT, 
	scaler_43 FLOAT, 
	scaler_44 FLOAT, 
	scaler_45 FLOAT, 
	scaler_46 FLOAT, 
	scaler_47 FLOAT, 
	scaler_48 FLOAT, 
	scaler_49 FLOAT, 
	scaler_50 FLOAT, 
	scaler_51 FLOAT, 
	scaler_52 FLOAT, 
	scaler_53 FLOAT, 
	scaler_54 FLOAT, 
	scaler_55 FLOAT, 
	scaler_56 FLOAT, 
	scaler_57 FLOAT, 
	scaler_58 FLOAT, 
	scaler_59 FLOAT, 
	scaler_60 FLOAT, 
	scaler_61 FLOAT, 
	scaler_62 FLOAT, 
	scaler_63 FLOAT, 
	scaler_64 FLOAT, 
	scaler_65 FLOAT, 
	scaler_66 FLOAT, 
	scaler_67 FLOAT, 
	scaler_68 FLOAT, 
	scaler_69 FLOAT, 
	scaler_70 FLOAT, 
	scaler_71 FLOAT, 
	scaler_72 FLOAT, 
	scaler_73 FLOAT, 
	scaler_74 FLOAT, 
	scaler_75 FLOAT, 
	scaler_76 FLOAT, 
	scaler_77 FLOAT, 
	scaler_78 FLOAT, 
	scaler_79 FLOAT, 
	scaler_80 FLOAT, 
	scaler_81 FLOAT, 
	scaler_82 FLOAT, 
	scaler_83 FLOAT, 
	scaler_84 FLOAT, 
	scaler_85 FLOAT, 
	scaler_86 FLOAT, 
	scaler_87 FLOAT, 
	scaler_88 FLOAT, 
	scaler_89 FLOAT, 
	scaler_90 FLOAT, 
	scaler_91 FLOAT, 
	scaler_92 FLOAT, 
	scaler_93 FLOAT, 
	scaler_94 FLOAT, 
	scaler_95 FLOAT, 
	scaler_96 FLOAT, 
	scaler_97 FLOAT, 
	scaler_98 FLOAT, 
	scaler_99 FLOAT, 
	scaler_100 FLOAT, 
	scaler_101 FLOAT
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table tmp_20180416233720_wk2qip_ads_sca_2_out part 2/2. Populate

INSERT INTO tmp_20180416233720_wk2qip_ads_sca_2_out SELECT "ADS_sca_2_OUT"."KEY", "ADS_sca_2_OUT".scaler_2, "ADS_sca_2_OUT".scaler_3, "ADS_sca_2_OUT".scaler_4, "ADS_sca_2_OUT".scaler_5, "ADS_sca_2_OUT".scaler_6, "ADS_sca_2_OUT".scaler_7, "ADS_sca_2_OUT".scaler_8, "ADS_sca_2_OUT".scaler_9, "ADS_sca_2_OUT".scaler_10, "ADS_sca_2_OUT".scaler_11, "ADS_sca_2_OUT".scaler_12, "ADS_sca_2_OUT".scaler_13, "ADS_sca_2_OUT".scaler_14, "ADS_sca_2_OUT".scaler_15, "ADS_sca_2_OUT".scaler_16, "ADS_sca_2_OUT".scaler_17, "ADS_sca_2_OUT".scaler_18, "ADS_sca_2_OUT".scaler_19, "ADS_sca_2_OUT".scaler_20, "ADS_sca_2_OUT".scaler_21, "ADS_sca_2_OUT".scaler_22, "ADS_sca_2_OUT".scaler_23, "ADS_sca_2_OUT".scaler_24, "ADS_sca_2_OUT".scaler_25, "ADS_sca_2_OUT".scaler_26, "ADS_sca_2_OUT".scaler_27, "ADS_sca_2_OUT".scaler_28, "ADS_sca_2_OUT".scaler_29, "ADS_sca_2_OUT".scaler_30, "ADS_sca_2_OUT".scaler_31, "ADS_sca_2_OUT".scaler_32, "ADS_sca_2_OUT".scaler_33, "ADS_sca_2_OUT".scaler_34, "ADS_sca_2_OUT".scaler_35, "ADS_sca_2_OUT".scaler_36, "ADS_sca_2_OUT".scaler_37, "ADS_sca_2_OUT".scaler_38, "ADS_sca_2_OUT".scaler_39, "ADS_sca_2_OUT".scaler_40, "ADS_sca_2_OUT".scaler_41, "ADS_sca_2_OUT".scaler_42, "ADS_sca_2_OUT".scaler_43, "ADS_sca_2_OUT".scaler_44, "ADS_sca_2_OUT".scaler_45, "ADS_sca_2_OUT".scaler_46, "ADS_sca_2_OUT".scaler_47, "ADS_sca_2_OUT".scaler_48, "ADS_sca_2_OUT".scaler_49, "ADS_sca_2_OUT".scaler_50, "ADS_sca_2_OUT".scaler_51, "ADS_sca_2_OUT".scaler_52, "ADS_sca_2_OUT".scaler_53, "ADS_sca_2_OUT".scaler_54, "ADS_sca_2_OUT".scaler_55, "ADS_sca_2_OUT".scaler_56, "ADS_sca_2_OUT".scaler_57, "ADS_sca_2_OUT".scaler_58, "ADS_sca_2_OUT".scaler_59, "ADS_sca_2_OUT".scaler_60, "ADS_sca_2_OUT".scaler_61, "ADS_sca_2_OUT".scaler_62, "ADS_sca_2_OUT".scaler_63, "ADS_sca_2_OUT".scaler_64, "ADS_sca_2_OUT".scaler_65, "ADS_sca_2_OUT".scaler_66, "ADS_sca_2_OUT".scaler_67, "ADS_sca_2_OUT".scaler_68, "ADS_sca_2_OUT".scaler_69, "ADS_sca_2_OUT".scaler_70, "ADS_sca_2_OUT".scaler_71, "ADS_sca_2_OUT".scaler_72, "ADS_sca_2_OUT".scaler_73, "ADS_sca_2_OUT".scaler_74, "ADS_sca_2_OUT".scaler_75, "ADS_sca_2_OUT".scaler_76, "ADS_sca_2_OUT".scaler_77, "ADS_sca_2_OUT".scaler_78, "ADS_sca_2_OUT".scaler_79, "ADS_sca_2_OUT".scaler_80, "ADS_sca_2_OUT".scaler_81, "ADS_sca_2_OUT".scaler_82, "ADS_sca_2_OUT".scaler_83, "ADS_sca_2_OUT".scaler_84, "ADS_sca_2_OUT".scaler_85, "ADS_sca_2_OUT".scaler_86, "ADS_sca_2_OUT".scaler_87, "ADS_sca_2_OUT".scaler_88, "ADS_sca_2_OUT".scaler_89, "ADS_sca_2_OUT".scaler_90, "ADS_sca_2_OUT".scaler_91, "ADS_sca_2_OUT".scaler_92, "ADS_sca_2_OUT".scaler_93, "ADS_sca_2_OUT".scaler_94, "ADS_sca_2_OUT".scaler_95, "ADS_sca_2_OUT".scaler_96, "ADS_sca_2_OUT".scaler_97, "ADS_sca_2_OUT".scaler_98, "ADS_sca_2_OUT".scaler_99, "ADS_sca_2_OUT".scaler_100, "ADS_sca_2_OUT".scaler_101 
FROM (SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", (CAST("ADS_imp_1_OUT".impter_2 AS DOUBLE) - 0.006535740121159998) / 0.9858217119194165 AS scaler_2, (CAST("ADS_imp_1_OUT".impter_3 AS DOUBLE) - 0.16767827125978743) / 4.178932779057346 AS scaler_3, (CAST("ADS_imp_1_OUT".impter_4 AS DOUBLE) - -0.05514704173583139) / 4.08515606391014 AS scaler_4, (CAST("ADS_imp_1_OUT".impter_5 AS DOUBLE) - 0.0015211693051869056) / 1.0583994221255881 AS scaler_5, (CAST("ADS_imp_1_OUT".impter_6 AS DOUBLE) - 0.03142760191039923) / 0.9585029014041677 AS scaler_6, (CAST("ADS_imp_1_OUT".impter_7 AS DOUBLE) - 0.026179683178748685) / 0.9938548077153438 AS scaler_7, (CAST("ADS_imp_1_OUT".impter_8 AS DOUBLE) - -0.011254713122120081) / 0.9959455996367279 AS scaler_8, (CAST("ADS_imp_1_OUT".impter_9 AS DOUBLE) - -0.016886211800947296) / 1.0454296780346695 AS scaler_9, (CAST("ADS_imp_1_OUT".impter_10 AS DOUBLE) - -0.027342702964496257) / 4.3313567418204935 AS scaler_10, (CAST("ADS_imp_1_OUT".impter_11 AS DOUBLE) - -0.16370127884822097) / 4.458898205934484 AS scaler_11, (CAST("ADS_imp_1_OUT".impter_12 AS DOUBLE) - 0.03541225073893643) / 1.036616487810755 AS scaler_12, (CAST("ADS_imp_1_OUT".impter_13 AS DOUBLE) - -0.028529123475633158) / 1.0046762055522975 AS scaler_13, (CAST("ADS_imp_1_OUT".impter_14 AS DOUBLE) - -0.026749444989609742) / 0.9996240267100583 AS scaler_14, (CAST("ADS_imp_1_OUT".impter_15 AS DOUBLE) - 0.38601982291131526) / 4.1448047865184865 AS scaler_15, (CAST("ADS_imp_1_OUT".impter_16 AS DOUBLE) - 0.01621452573135814) / 1.0172812966673987 AS scaler_16, (CAST("ADS_imp_1_OUT".impter_17 AS DOUBLE) - 0.22723775077839256) / 4.367112620179618 AS scaler_17, (CAST("ADS_imp_1_OUT".impter_18 AS DOUBLE) - 0.5663734566941232) / 4.118156884045948 AS scaler_18, (CAST("ADS_imp_1_OUT".impter_19 AS DOUBLE) - 0.2776964106161551) / 4.014328975715426 AS scaler_19, (CAST("ADS_imp_1_OUT".impter_20 AS DOUBLE) - 0.005994326812351447) / 0.9724395023210792 AS scaler_20, (CAST("ADS_imp_1_OUT".impter_21 AS DOUBLE) - -0.021852534469692157) / 0.9856875177263738 AS scaler_21, (CAST("ADS_imp_1_OUT".impter_22 AS DOUBLE) - -0.028375425917008895) / 1.023103469868883 AS scaler_22, (CAST("ADS_imp_1_OUT".impter_23 AS DOUBLE) - 0.015164323296291698) / 4.3531451691819925 AS scaler_23, (CAST("ADS_imp_1_OUT".impter_24 AS DOUBLE) - 0.017469134548764743) / 1.0018056542687617 AS scaler_24, (CAST("ADS_imp_1_OUT".impter_25 AS DOUBLE) - 0.03493909449429536) / 0.9927216497675313 AS scaler_25, (CAST("ADS_imp_1_OUT".impter_26 AS DOUBLE) - -0.1443616076343936) / 4.467397668863504 AS scaler_26, (CAST("ADS_imp_1_OUT".impter_27 AS DOUBLE) - 0.1461046774436175) / 4.107342778563649 AS scaler_27, (CAST("ADS_imp_1_OUT".impter_28 AS DOUBLE) - 0.06761584237384538) / 4.277643036456077 AS scaler_28, (CAST("ADS_imp_1_OUT".impter_29 AS DOUBLE) - -0.3083684560804083) / 4.030195686259092 AS scaler_29, (CAST("ADS_imp_1_OUT".impter_30 AS DOUBLE) - 0.9525753017609152) / 4.017302623019134 AS scaler_30, (CAST("ADS_imp_1_OUT".impter_31 AS DOUBLE) - -0.05813383910109171) / 4.03353195749377 AS scaler_31, (CAST("ADS_imp_1_OUT".impter_32 AS DOUBLE) - -0.013124412714914525) / 0.9551987815662824 AS scaler_32, (CAST("ADS_imp_1_OUT".impter_33 AS DOUBLE) - -0.3375512543306959) / 4.106571680414476 AS scaler_33, (CAST("ADS_imp_1_OUT".impter_34 AS DOUBLE) - 0.03902651459317101) / 0.9903592253368643 AS scaler_34, (CAST("ADS_imp_1_OUT".impter_35 AS DOUBLE) - -0.0402939442131795) / 1.015296116761204 AS scaler_35, (CAST("ADS_imp_1_OUT".impter_36 AS DOUBLE) - -0.17161188573704908) / 4.179229563019859 AS scaler_36, (CAST("ADS_imp_1_OUT".impter_37 AS DOUBLE) - 0.012647786868640112) / 1.0078307618647784 AS scaler_37, (CAST("ADS_imp_1_OUT".impter_38 AS DOUBLE) - 0.005193735308514513) / 4.297332183672823 AS scaler_38, (CAST("ADS_imp_1_OUT".impter_39 AS DOUBLE) - -0.017160876576937396) / 1.0173788557066636 AS scaler_39, (CAST("ADS_imp_1_OUT".impter_40 AS DOUBLE) - 0.045036155997948996) / 3.904281136786187 AS scaler_40, (CAST("ADS_imp_1_OUT".impter_41 AS DOUBLE) - -0.12035820022636322) / 3.9840286036228636 AS scaler_41, (CAST("ADS_imp_1_OUT".impter_42 AS DOUBLE) - -0.17640392282213266) / 4.069314637621373 AS scaler_42, (CAST("ADS_imp_1_OUT".impter_43 AS DOUBLE) - -0.015157075927040681) / 1.0291573895450885 AS scaler_43, (CAST("ADS_imp_1_OUT".impter_44 AS DOUBLE) - -0.3068740190578085) / 4.347912512213832 AS scaler_44, (CAST("ADS_imp_1_OUT".impter_45 AS DOUBLE) - -0.04035458069305412) / 4.050643773807161 AS scaler_45, (CAST("ADS_imp_1_OUT".impter_46 AS DOUBLE) - -0.00789981512459992) / 1.0063754765912263 AS scaler_46, (CAST("ADS_imp_1_OUT".impter_47 AS DOUBLE) - 0.002647932254171184) / 1.0021447755850712 AS scaler_47, (CAST("ADS_imp_1_OUT".impter_48 AS DOUBLE) - -0.1492108459830671) / 4.103402009893949 AS scaler_48, (CAST("ADS_imp_1_OUT".impter_49 AS DOUBLE) - 0.24895399236878446) / 4.232200380326287 AS scaler_49, (CAST("ADS_imp_1_OUT".impter_50 AS DOUBLE) - -0.7004243979718509) / 4.220766541993596 AS scaler_50, (CAST("ADS_imp_1_OUT".impter_51 AS DOUBLE) - 0.025527673750135163) / 1.0206740927253968 AS scaler_51, (CAST("ADS_imp_1_OUT".impter_52 AS DOUBLE) - -0.15642138685028584) / 4.078310671245767 AS scaler_52, (CAST("ADS_imp_1_OUT".impter_53 AS DOUBLE) - -0.12783857717811203) / 4.247236801364965 AS scaler_53, (CAST("ADS_imp_1_OUT".impter_54 AS DOUBLE) - -0.3698795238326839) / 4.037675848477055 AS scaler_54, (CAST("ADS_imp_1_OUT".impter_55 AS DOUBLE) - 0.04105474558890989) / 4.445571371438813 AS scaler_55, (CAST("ADS_imp_1_OUT".impter_56 AS DOUBLE) - -0.10047427531359215) / 4.045836826444957 AS scaler_56, (CAST("ADS_imp_1_OUT".impter_57 AS DOUBLE) - -0.1312728865356366) / 4.256606009499921 AS scaler_57, (CAST("ADS_imp_1_OUT".impter_58 AS DOUBLE) - 0.3685784313653654) / 4.04294690880675 AS scaler_58, (CAST("ADS_imp_1_OUT".impter_59 AS DOUBLE) - 0.22281246520596887) / 4.252398068764952 AS scaler_59, (CAST("ADS_imp_1_OUT".impter_60 AS DOUBLE) - -0.006274087618403553) / 1.013175429895288 AS scaler_60, (CAST("ADS_imp_1_OUT".impter_61 AS DOUBLE) - 0.014268598957774136) / 0.9752324561731636 AS scaler_61, (CAST("ADS_imp_1_OUT".impter_62 AS DOUBLE) - -0.028545511573860538) / 0.9960176612179306 AS scaler_62, (CAST("ADS_imp_1_OUT".impter_63 AS DOUBLE) - -0.4374918318496328) / 4.2387592565605035 AS scaler_63, (CAST("ADS_imp_1_OUT".impter_64 AS DOUBLE) - -0.3689927805875731) / 4.18274187652401 AS scaler_64, (CAST("ADS_imp_1_OUT".impter_65 AS DOUBLE) - 0.0011690418193188894) / 1.0433365249916253 AS scaler_65, (CAST("ADS_imp_1_OUT".impter_66 AS DOUBLE) - -0.011564873717580429) / 4.081504294152238 AS scaler_66, (CAST("ADS_imp_1_OUT".impter_67 AS DOUBLE) - -0.04358769989694412) / 1.058664519012294 AS scaler_67, (CAST("ADS_imp_1_OUT".impter_68 AS DOUBLE) - -0.1618634137390173) / 4.259666235165136 AS scaler_68, (CAST("ADS_imp_1_OUT".impter_69 AS DOUBLE) - -0.01727264153501617) / 1.0103058334402957 AS scaler_69, (CAST("ADS_imp_1_OUT".impter_70 AS DOUBLE) - -0.36403022036864674) / 4.23529048916204 AS scaler_70, (CAST("ADS_imp_1_OUT".impter_71 AS DOUBLE) - -0.049273006502403176) / 4.310802365306347 AS scaler_71, (CAST("ADS_imp_1_OUT".impter_72 AS DOUBLE) - -0.015468512657334297) / 1.010660801531323 AS scaler_72, (CAST("ADS_imp_1_OUT".impter_73 AS DOUBLE) - -0.19162939351279548) / 4.1160449655484435 AS scaler_73, (CAST("ADS_imp_1_OUT".impter_74 AS DOUBLE) - 0.023782830321603186) / 0.997185935238241 AS scaler_74, (CAST("ADS_imp_1_OUT".impter_75 AS DOUBLE) - 0.020454799672569742) / 0.9640474876793701 AS scaler_75, (CAST("ADS_imp_1_OUT".impter_76 AS DOUBLE) - -0.17335534659313448) / 4.268840083291991 AS scaler_76, (CAST("ADS_imp_1_OUT".impter_77 AS DOUBLE) - 0.02758228824576348) / 1.0028736371502236 AS scaler_77, (CAST("ADS_imp_1_OUT".impter_78 AS DOUBLE) - -0.015452336678168777) / 0.9517969728776562 AS scaler_78, (CAST("ADS_imp_1_OUT".impter_79 AS DOUBLE) - -0.0425555457732581) / 1.026041980115793 AS scaler_79, (CAST("ADS_imp_1_OUT".impter_80 AS DOUBLE) - -0.009425736580365328) / 0.9815479331628068 AS scaler_80, (CAST("ADS_imp_1_OUT".impter_81 AS DOUBLE) - 0.007423677489325057) / 1.0171447637961626 AS scaler_81, (CAST("ADS_imp_1_OUT".impter_82 AS DOUBLE) - 0.0498533264368169) / 1.013812175189716 AS scaler_82, (CAST("ADS_imp_1_OUT".impter_83 AS DOUBLE) - 0.027960221179443) / 1.0049331087863325 AS scaler_83, (CAST("ADS_imp_1_OUT".impter_84 AS DOUBLE) - -0.005270502487579236) / 1.0233252849148293 AS scaler_84, (CAST("ADS_imp_1_OUT".impter_85 AS DOUBLE) - -0.053393611774246875) / 1.0045891919932883 AS scaler_85, (CAST("ADS_imp_1_OUT".impter_86 AS DOUBLE) - 0.17162033288561043) / 4.2488442757828695 AS scaler_86, (CAST("ADS_imp_1_OUT".impter_87 AS DOUBLE) - 0.037211997007404414) / 4.254048583081737 AS scaler_87, (CAST("ADS_imp_1_OUT".impter_88 AS DOUBLE) - 0.01843497333044896) / 3.9497288408894384 AS scaler_88, (CAST("ADS_imp_1_OUT".impter_89 AS DOUBLE) - 0.5605216326173627) / 4.331332438981666 AS scaler_89, (CAST("ADS_imp_1_OUT".impter_90 AS DOUBLE) - -0.05285046291900049) / 1.0358397102155001 AS scaler_90, (CAST("ADS_imp_1_OUT".impter_91 AS DOUBLE) - 0.07939021734244131) / 0.9698764460278291 AS scaler_91, (CAST("ADS_imp_1_OUT".impter_92 AS DOUBLE) - -2.088667163118704) / 15.30221524651991 AS scaler_92, (CAST("ADS_imp_1_OUT".impter_93 AS DOUBLE) - -1.0831020638954625) / 4.3671090202705205 AS scaler_93, (CAST("ADS_imp_1_OUT".impter_94 AS DOUBLE) - -0.30470236282124374) / 4.204292362348631 AS scaler_94, (CAST("ADS_imp_1_OUT".impter_95 AS DOUBLE) - -0.9354262595637257) / 15.357005766716696 AS scaler_95, (CAST("ADS_imp_1_OUT".impter_96 AS DOUBLE) - -0.09841121992703274) / 0.952484869943965 AS scaler_96, (CAST("ADS_imp_1_OUT".impter_97 AS DOUBLE) - -0.5316534843603434) / 3.977000718240084 AS scaler_97, (CAST("ADS_imp_1_OUT".impter_98 AS DOUBLE) - 0.014127422137804999) / 0.9879258925411053 AS scaler_98, (CAST("ADS_imp_1_OUT".impter_99 AS DOUBLE) - -0.012631277412677116) / 1.0151964448341175 AS scaler_99, (CAST("ADS_imp_1_OUT".impter_100 AS DOUBLE) - 0.031286881233113274) / 0.9893618024210226 AS scaler_100, (CAST("ADS_imp_1_OUT".impter_101 AS DOUBLE) - -0.45039051538460234) / 4.244700325091397 AS scaler_101 
FROM tmp_20180416233720_xjrjmu_ads_imp_1_out AS "ADS_imp_1_OUT") AS "ADS_sca_2_OUT"

-- Code For temporary table tmp_20180416233720_jgfmvq_hl_1_relu_1 part 1/2. Create 


CREATE GLOBAL TEMPORARY TABLE tmp_20180416233720_jgfmvq_hl_1_relu_1 (
	"KEY" BIGINT, 
	"NEUR_1_1" FLOAT, 
	"NEUR_1_2" FLOAT, 
	"NEUR_1_3" FLOAT
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table tmp_20180416233720_jgfmvq_hl_1_relu_1 part 2/2. Populate

INSERT INTO tmp_20180416233720_jgfmvq_hl_1_relu_1 WITH "IL" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CAST("ADS_sca_2_OUT".scaler_2 AS DOUBLE) AS scaler_2, CAST("ADS_sca_2_OUT".scaler_3 AS DOUBLE) AS scaler_3, CAST("ADS_sca_2_OUT".scaler_4 AS DOUBLE) AS scaler_4, CAST("ADS_sca_2_OUT".scaler_5 AS DOUBLE) AS scaler_5, CAST("ADS_sca_2_OUT".scaler_6 AS DOUBLE) AS scaler_6, CAST("ADS_sca_2_OUT".scaler_7 AS DOUBLE) AS scaler_7, CAST("ADS_sca_2_OUT".scaler_8 AS DOUBLE) AS scaler_8, CAST("ADS_sca_2_OUT".scaler_9 AS DOUBLE) AS scaler_9, CAST("ADS_sca_2_OUT".scaler_10 AS DOUBLE) AS scaler_10, CAST("ADS_sca_2_OUT".scaler_11 AS DOUBLE) AS scaler_11, CAST("ADS_sca_2_OUT".scaler_12 AS DOUBLE) AS scaler_12, CAST("ADS_sca_2_OUT".scaler_13 AS DOUBLE) AS scaler_13, CAST("ADS_sca_2_OUT".scaler_14 AS DOUBLE) AS scaler_14, CAST("ADS_sca_2_OUT".scaler_15 AS DOUBLE) AS scaler_15, CAST("ADS_sca_2_OUT".scaler_16 AS DOUBLE) AS scaler_16, CAST("ADS_sca_2_OUT".scaler_17 AS DOUBLE) AS scaler_17, CAST("ADS_sca_2_OUT".scaler_18 AS DOUBLE) AS scaler_18, CAST("ADS_sca_2_OUT".scaler_19 AS DOUBLE) AS scaler_19, CAST("ADS_sca_2_OUT".scaler_20 AS DOUBLE) AS scaler_20, CAST("ADS_sca_2_OUT".scaler_21 AS DOUBLE) AS scaler_21, CAST("ADS_sca_2_OUT".scaler_22 AS DOUBLE) AS scaler_22, CAST("ADS_sca_2_OUT".scaler_23 AS DOUBLE) AS scaler_23, CAST("ADS_sca_2_OUT".scaler_24 AS DOUBLE) AS scaler_24, CAST("ADS_sca_2_OUT".scaler_25 AS DOUBLE) AS scaler_25, CAST("ADS_sca_2_OUT".scaler_26 AS DOUBLE) AS scaler_26, CAST("ADS_sca_2_OUT".scaler_27 AS DOUBLE) AS scaler_27, CAST("ADS_sca_2_OUT".scaler_28 AS DOUBLE) AS scaler_28, CAST("ADS_sca_2_OUT".scaler_29 AS DOUBLE) AS scaler_29, CAST("ADS_sca_2_OUT".scaler_30 AS DOUBLE) AS scaler_30, CAST("ADS_sca_2_OUT".scaler_31 AS DOUBLE) AS scaler_31, CAST("ADS_sca_2_OUT".scaler_32 AS DOUBLE) AS scaler_32, CAST("ADS_sca_2_OUT".scaler_33 AS DOUBLE) AS scaler_33, CAST("ADS_sca_2_OUT".scaler_34 AS DOUBLE) AS scaler_34, CAST("ADS_sca_2_OUT".scaler_35 AS DOUBLE) AS scaler_35, CAST("ADS_sca_2_OUT".scaler_36 AS DOUBLE) AS scaler_36, CAST("ADS_sca_2_OUT".scaler_37 AS DOUBLE) AS scaler_37, CAST("ADS_sca_2_OUT".scaler_38 AS DOUBLE) AS scaler_38, CAST("ADS_sca_2_OUT".scaler_39 AS DOUBLE) AS scaler_39, CAST("ADS_sca_2_OUT".scaler_40 AS DOUBLE) AS scaler_40, CAST("ADS_sca_2_OUT".scaler_41 AS DOUBLE) AS scaler_41, CAST("ADS_sca_2_OUT".scaler_42 AS DOUBLE) AS scaler_42, CAST("ADS_sca_2_OUT".scaler_43 AS DOUBLE) AS scaler_43, CAST("ADS_sca_2_OUT".scaler_44 AS DOUBLE) AS scaler_44, CAST("ADS_sca_2_OUT".scaler_45 AS DOUBLE) AS scaler_45, CAST("ADS_sca_2_OUT".scaler_46 AS DOUBLE) AS scaler_46, CAST("ADS_sca_2_OUT".scaler_47 AS DOUBLE) AS scaler_47, CAST("ADS_sca_2_OUT".scaler_48 AS DOUBLE) AS scaler_48, CAST("ADS_sca_2_OUT".scaler_49 AS DOUBLE) AS scaler_49, CAST("ADS_sca_2_OUT".scaler_50 AS DOUBLE) AS scaler_50, CAST("ADS_sca_2_OUT".scaler_51 AS DOUBLE) AS scaler_51, CAST("ADS_sca_2_OUT".scaler_52 AS DOUBLE) AS scaler_52, CAST("ADS_sca_2_OUT".scaler_53 AS DOUBLE) AS scaler_53, CAST("ADS_sca_2_OUT".scaler_54 AS DOUBLE) AS scaler_54, CAST("ADS_sca_2_OUT".scaler_55 AS DOUBLE) AS scaler_55, CAST("ADS_sca_2_OUT".scaler_56 AS DOUBLE) AS scaler_56, CAST("ADS_sca_2_OUT".scaler_57 AS DOUBLE) AS scaler_57, CAST("ADS_sca_2_OUT".scaler_58 AS DOUBLE) AS scaler_58, CAST("ADS_sca_2_OUT".scaler_59 AS DOUBLE) AS scaler_59, CAST("ADS_sca_2_OUT".scaler_60 AS DOUBLE) AS scaler_60, CAST("ADS_sca_2_OUT".scaler_61 AS DOUBLE) AS scaler_61, CAST("ADS_sca_2_OUT".scaler_62 AS DOUBLE) AS scaler_62, CAST("ADS_sca_2_OUT".scaler_63 AS DOUBLE) AS scaler_63, CAST("ADS_sca_2_OUT".scaler_64 AS DOUBLE) AS scaler_64, CAST("ADS_sca_2_OUT".scaler_65 AS DOUBLE) AS scaler_65, CAST("ADS_sca_2_OUT".scaler_66 AS DOUBLE) AS scaler_66, CAST("ADS_sca_2_OUT".scaler_67 AS DOUBLE) AS scaler_67, CAST("ADS_sca_2_OUT".scaler_68 AS DOUBLE) AS scaler_68, CAST("ADS_sca_2_OUT".scaler_69 AS DOUBLE) AS scaler_69, CAST("ADS_sca_2_OUT".scaler_70 AS DOUBLE) AS scaler_70, CAST("ADS_sca_2_OUT".scaler_71 AS DOUBLE) AS scaler_71, CAST("ADS_sca_2_OUT".scaler_72 AS DOUBLE) AS scaler_72, CAST("ADS_sca_2_OUT".scaler_73 AS DOUBLE) AS scaler_73, CAST("ADS_sca_2_OUT".scaler_74 AS DOUBLE) AS scaler_74, CAST("ADS_sca_2_OUT".scaler_75 AS DOUBLE) AS scaler_75, CAST("ADS_sca_2_OUT".scaler_76 AS DOUBLE) AS scaler_76, CAST("ADS_sca_2_OUT".scaler_77 AS DOUBLE) AS scaler_77, CAST("ADS_sca_2_OUT".scaler_78 AS DOUBLE) AS scaler_78, CAST("ADS_sca_2_OUT".scaler_79 AS DOUBLE) AS scaler_79, CAST("ADS_sca_2_OUT".scaler_80 AS DOUBLE) AS scaler_80, CAST("ADS_sca_2_OUT".scaler_81 AS DOUBLE) AS scaler_81, CAST("ADS_sca_2_OUT".scaler_82 AS DOUBLE) AS scaler_82, CAST("ADS_sca_2_OUT".scaler_83 AS DOUBLE) AS scaler_83, CAST("ADS_sca_2_OUT".scaler_84 AS DOUBLE) AS scaler_84, CAST("ADS_sca_2_OUT".scaler_85 AS DOUBLE) AS scaler_85, CAST("ADS_sca_2_OUT".scaler_86 AS DOUBLE) AS scaler_86, CAST("ADS_sca_2_OUT".scaler_87 AS DOUBLE) AS scaler_87, CAST("ADS_sca_2_OUT".scaler_88 AS DOUBLE) AS scaler_88, CAST("ADS_sca_2_OUT".scaler_89 AS DOUBLE) AS scaler_89, CAST("ADS_sca_2_OUT".scaler_90 AS DOUBLE) AS scaler_90, CAST("ADS_sca_2_OUT".scaler_91 AS DOUBLE) AS scaler_91, CAST("ADS_sca_2_OUT".scaler_92 AS DOUBLE) AS scaler_92, CAST("ADS_sca_2_OUT".scaler_93 AS DOUBLE) AS scaler_93, CAST("ADS_sca_2_OUT".scaler_94 AS DOUBLE) AS scaler_94, CAST("ADS_sca_2_OUT".scaler_95 AS DOUBLE) AS scaler_95, CAST("ADS_sca_2_OUT".scaler_96 AS DOUBLE) AS scaler_96, CAST("ADS_sca_2_OUT".scaler_97 AS DOUBLE) AS scaler_97, CAST("ADS_sca_2_OUT".scaler_98 AS DOUBLE) AS scaler_98, CAST("ADS_sca_2_OUT".scaler_99 AS DOUBLE) AS scaler_99, CAST("ADS_sca_2_OUT".scaler_100 AS DOUBLE) AS scaler_100, CAST("ADS_sca_2_OUT".scaler_101 AS DOUBLE) AS scaler_101 
FROM tmp_20180416233720_wk2qip_ads_sca_2_out AS "ADS_sca_2_OUT"), 
"HL_BA_1" AS 
(SELECT "IL"."KEY" AS "KEY", 1.3223502206603965 * "IL".scaler_2 + -0.2196677445067535 * "IL".scaler_3 + 0.3276085308299674 * "IL".scaler_4 + -0.05590167024035424 * "IL".scaler_5 + -0.3170820489563822 * "IL".scaler_6 + 0.7056902244134217 * "IL".scaler_7 + 0.004407489719138439 * "IL".scaler_8 + -1.2762597072943112 * "IL".scaler_9 + -1.352217817289263 * "IL".scaler_10 + 0.7241948818559204 * "IL".scaler_11 + -0.9600214230438797 * "IL".scaler_12 + -0.650504267344513 * "IL".scaler_13 + 0.5661136894750349 * "IL".scaler_14 + 1.7059880087680994 * "IL".scaler_15 + -0.7337308339778741 * "IL".scaler_16 + -0.9279951982184994 * "IL".scaler_17 + 0.08903596102971208 * "IL".scaler_18 + -3.504267159226781 * "IL".scaler_19 + -0.07911788420219872 * "IL".scaler_20 + -0.8089397037705989 * "IL".scaler_21 + 0.6751746698016539 * "IL".scaler_22 + 0.12704356808390446 * "IL".scaler_23 + 1.2079638410023208 * "IL".scaler_24 + -0.6070340840929361 * "IL".scaler_25 + -0.06522619977436055 * "IL".scaler_26 + 1.5216943679449721 * "IL".scaler_27 + 0.6229355181439697 * "IL".scaler_28 + 0.8793316633569532 * "IL".scaler_29 + 0.7039539979690894 * "IL".scaler_30 + 1.2332644853901389 * "IL".scaler_31 + 0.3256244972052587 * "IL".scaler_32 + 1.617591738106389 * "IL".scaler_33 + -1.031592980792302 * "IL".scaler_34 + -0.4642843356954773 * "IL".scaler_35 + 0.7747839620662923 * "IL".scaler_36 + -0.14846907191438968 * "IL".scaler_37 + 1.432744209654578 * "IL".scaler_38 + -1.5795824250226986 * "IL".scaler_39 + -0.16247880194187395 * "IL".scaler_40 + 1.08072363490126 * "IL".scaler_41 + -0.7724404651287257 * "IL".scaler_42 + -0.23657050970991786 * "IL".scaler_43 + -0.39633857919769433 * "IL".scaler_44 + 1.4445864118660503 * "IL".scaler_45 + -0.1642273798348956 * "IL".scaler_46 + -0.6756360909432292 * "IL".scaler_47 + 2.039913905056213 * "IL".scaler_48 + 0.007459138984096697 * "IL".scaler_49 + -1.5089178501800535 * "IL".scaler_50 + -0.17747184084701956 * "IL".scaler_51 + 0.5827182196725864 * "IL".scaler_52 + 0.6984536606491232 * "IL".scaler_53 + 1.9446415335609537 * "IL".scaler_54 + 0.7097381425874703 * "IL".scaler_55 + 1.8295873179965525 * "IL".scaler_56 + -1.3571493818471456 * "IL".scaler_57 + -0.43285199815503966 * "IL".scaler_58 + -0.12580487365329315 * "IL".scaler_59 + 0.19318040400424497 * "IL".scaler_60 + 1.4547249740053356 * "IL".scaler_61 + -0.09416977449333919 * "IL".scaler_62 + -0.3368970350974732 * "IL".scaler_63 + -0.6065600260194879 * "IL".scaler_64 + -0.15446315520155574 * "IL".scaler_65 + -1.9301790759584627 * "IL".scaler_66 + -0.17047559815844246 * "IL".scaler_67 + -2.437940605452806 * "IL".scaler_68 + 0.2667294574655004 * "IL".scaler_69 + -2.112649805496722 * "IL".scaler_70 + 1.1152723170313283 * "IL".scaler_71 + 0.4533027139174875 * "IL".scaler_72 + -0.4193643303866468 * "IL".scaler_73 + 0.22312246329373378 * "IL".scaler_74 + -0.17214861599167 * "IL".scaler_75 + -0.825797479388576 * "IL".scaler_76 + -2.0814314463316803 * "IL".scaler_77 + 0.4070075879844129 * "IL".scaler_78 + -0.3168481730116778 * "IL".scaler_79 + -0.5309306655044517 * "IL".scaler_80 + -0.34459771744677303 * "IL".scaler_81 + -0.9986798242564376 * "IL".scaler_82 + -0.2462036288126072 * "IL".scaler_83 + -0.33981482427223736 * "IL".scaler_84 + 0.4102525041909624 * "IL".scaler_85 + 1.716312378513615 * "IL".scaler_86 + -0.7831381732573948 * "IL".scaler_87 + 2.1404934439233276 * "IL".scaler_88 + 0.8006513316493223 * "IL".scaler_89 + 0.4100718075583379 * "IL".scaler_90 + -1.638553333759003 * "IL".scaler_91 + 0.6977303688683253 * "IL".scaler_92 + 0.07723413350179573 * "IL".scaler_93 + -0.4763206094278611 * "IL".scaler_94 + -0.7210299724857699 * "IL".scaler_95 + 0.2297923976722927 * "IL".scaler_96 + 0.0653327031013412 * "IL".scaler_97 + 0.1751808609989628 * "IL".scaler_98 + -0.6259668343947461 * "IL".scaler_99 + -0.818075783406535 * "IL".scaler_100 + 1.520138319256743 * "IL".scaler_101 + -0.5336692712601343 AS "NEUR_1_1", 1.801676672430818 * "IL".scaler_2 + -2.006666611986961 * "IL".scaler_3 + -0.6740376562655075 * "IL".scaler_4 + 0.2511599774356097 * "IL".scaler_5 + -1.1778608547053198 * "IL".scaler_6 + 0.13498531344190526 * "IL".scaler_7 + -1.5657840139458767 * "IL".scaler_8 + -1.5369879559697872 * "IL".scaler_9 + 0.03425337264388841 * "IL".scaler_10 + -0.3369298966121462 * "IL".scaler_11 + -1.6489261154016253 * "IL".scaler_12 + -0.7012849864312765 * "IL".scaler_13 + 0.05650436225406407 * "IL".scaler_14 + 1.4155942414115066 * "IL".scaler_15 + 0.4313996458744166 * "IL".scaler_16 + -0.08234094474437036 * "IL".scaler_17 + -0.43169419360308164 * "IL".scaler_18 + -0.8830580734111422 * "IL".scaler_19 + -0.09136035881414659 * "IL".scaler_20 + -0.32524413776227085 * "IL".scaler_21 + 0.47379851823227337 * "IL".scaler_22 + -0.2000422446283202 * "IL".scaler_23 + -0.34915079613209593 * "IL".scaler_24 + 0.35695811022362045 * "IL".scaler_25 + 0.23979772621796852 * "IL".scaler_26 + -0.031980174381389996 * "IL".scaler_27 + -0.14215371164275256 * "IL".scaler_28 + 0.544404056098116 * "IL".scaler_29 + 1.368038519128603 * "IL".scaler_30 + -1.5667828135299524 * "IL".scaler_31 + -2.106055534994465 * "IL".scaler_32 + 0.37803810524170184 * "IL".scaler_33 + -0.6066397927293726 * "IL".scaler_34 + 0.1346947583466717 * "IL".scaler_35 + -2.2450502032076614 * "IL".scaler_36 + 0.15123394954887004 * "IL".scaler_37 + 0.9583772744725979 * "IL".scaler_38 + -0.04924125880184446 * "IL".scaler_39 + -1.9398521624068206 * "IL".scaler_40 + 0.22731454242426608 * "IL".scaler_41 + -0.04870670875115692 * "IL".scaler_42 + 1.0375042804779027 * "IL".scaler_43 + 0.7884884315745788 * "IL".scaler_44 + -1.3739230006358931 * "IL".scaler_45 + -0.058071251830609884 * "IL".scaler_46 + 0.4762011538781128 * "IL".scaler_47 + 1.6359802253919684 * "IL".scaler_48 + -0.5496853496841655 * "IL".scaler_49 + 0.32242579598485605 * "IL".scaler_50 + -0.5814409472618107 * "IL".scaler_51 + -1.2844330169009315 * "IL".scaler_52 + -0.18753966853174045 * "IL".scaler_53 + -0.6082576771595511 * "IL".scaler_54 + -0.9796918925674978 * "IL".scaler_55 + 0.08191689557265552 * "IL".scaler_56 + -0.07329477939908541 * "IL".scaler_57 + -0.09632752663989746 * "IL".scaler_58 + 0.6875989592341146 * "IL".scaler_59 + 1.0924611451560928 * "IL".scaler_60 + 0.4573594755131486 * "IL".scaler_61 + 0.3333944684788978 * "IL".scaler_62 + 0.5232374233468251 * "IL".scaler_63 + -1.0690934642033392 * "IL".scaler_64 + 0.5916480791661151 * "IL".scaler_65 + 0.9565842892544936 * "IL".scaler_66 + 1.126682818194074 * "IL".scaler_67 + -0.9858952348193352 * "IL".scaler_68 + -1.1342137456226997 * "IL".scaler_69 + 1.4835989854354563 * "IL".scaler_70 + 0.4601449502641621 * "IL".scaler_71 + -0.485890609141002 * "IL".scaler_72 + -0.13453230123989632 * "IL".scaler_73 + 0.09589476435077544 * "IL".scaler_74 + 0.5361054412252685 * "IL".scaler_75 + -0.009059863689682758 * "IL".scaler_76 + -0.4081485058333086 * "IL".scaler_77 + 1.3831805002996518 * "IL".scaler_78 + 0.11415544750579452 * "IL".scaler_79 + -0.10684416504958108 * "IL".scaler_80 + 0.01853177542040334 * "IL".scaler_81 + -1.1943254478567529 * "IL".scaler_82 + 0.49173934846019374 * "IL".scaler_83 + 0.837614128063065 * "IL".scaler_84 + -0.2971705144561123 * "IL".scaler_85 + -1.9610241288235377 * "IL".scaler_86 + -0.49463029142103837 * "IL".scaler_87 + -0.7919253473201935 * "IL".scaler_88 + -1.3575951177046717 * "IL".scaler_89 + 0.4726470537611096 * "IL".scaler_90 + 0.013415851484471204 * "IL".scaler_91 + -0.569806914142935 * "IL".scaler_92 + -0.7622977071631846 * "IL".scaler_93 + 1.2331861048738573 * "IL".scaler_94 + -0.32019433200252945 * "IL".scaler_95 + 0.00942390248396434 * "IL".scaler_96 + -2.2059599949205677 * "IL".scaler_97 + 0.3197637056939152 * "IL".scaler_98 + -1.0418851022966185 * "IL".scaler_99 + 0.5820970947194594 * "IL".scaler_100 + 0.7680965545510305 * "IL".scaler_101 + -1.3093550167551593 AS "NEUR_1_2", 0.05153093759566713 * "IL".scaler_2 + 0.5787522641323447 * "IL".scaler_3 + 1.669830812344027 * "IL".scaler_4 + 0.660556552128277 * "IL".scaler_5 + 0.4502333504403873 * "IL".scaler_6 + 0.4746440766365539 * "IL".scaler_7 + -0.33870107177909137 * "IL".scaler_8 + 0.07819812735095706 * "IL".scaler_9 + 0.5459547268313398 * "IL".scaler_10 + 1.1503147894730636 * "IL".scaler_11 + -0.19044332841938183 * "IL".scaler_12 + -0.30399335352498813 * "IL".scaler_13 + -0.7412684776613356 * "IL".scaler_14 + -0.3617648144026117 * "IL".scaler_15 + -0.06976364950750913 * "IL".scaler_16 + -2.565072449004827 * "IL".scaler_17 + 0.4476935413830472 * "IL".scaler_18 + 0.05232444425672368 * "IL".scaler_19 + 0.1617498909309452 * "IL".scaler_20 + -0.23528768839642486 * "IL".scaler_21 + 0.9371272691522042 * "IL".scaler_22 + 0.06729545124019824 * "IL".scaler_23 + -0.16921709878740823 * "IL".scaler_24 + -0.7595370432644346 * "IL".scaler_25 + 0.937949326826868 * "IL".scaler_26 + 0.716178552698997 * "IL".scaler_27 + 1.4060984572719541 * "IL".scaler_28 + 0.4160794399981655 * "IL".scaler_29 + -0.6015269406385382 * "IL".scaler_30 + 2.0609076263065327 * "IL".scaler_31 + 0.26178755066488174 * "IL".scaler_32 + 0.8760204181322947 * "IL".scaler_33 + -0.7555288913253096 * "IL".scaler_34 + 0.36528978226869935 * "IL".scaler_35 + -2.2067400125530434 * "IL".scaler_36 + -0.9267793790363298 * "IL".scaler_37 + 1.244465251472752 * "IL".scaler_38 + 1.0409619199570908 * "IL".scaler_39 + 2.843536019681685 * "IL".scaler_40 + -0.8548446098667855 * "IL".scaler_41 + -1.5302236932035898 * "IL".scaler_42 + 0.13974783500815716 * "IL".scaler_43 + 0.20501727112471066 * "IL".scaler_44 + 1.2171586862183594 * "IL".scaler_45 + -0.4681529200854254 * "IL".scaler_46 + -0.2193164753471967 * "IL".scaler_47 + 0.6485810903033162 * "IL".scaler_48 + -1.2453047672391622 * "IL".scaler_49 + 0.9723348935655851 * "IL".scaler_50 + 0.10056690993685673 * "IL".scaler_51 + -0.24168844780984142 * "IL".scaler_52 + -2.4293868515858663 * "IL".scaler_53 + -0.5391953362674984 * "IL".scaler_54 + 2.2336959714500875 * "IL".scaler_55 + 0.045993459104425365 * "IL".scaler_56 + -0.377203189345781 * "IL".scaler_57 + 1.260736249797151 * "IL".scaler_58 + 0.39427797499227607 * "IL".scaler_59 + -0.031375583702832624 * "IL".scaler_60 + -0.1474843815256231 * "IL".scaler_61 + -0.09401805654441782 * "IL".scaler_62 + -2.248992971962676 * "IL".scaler_63 + 0.4404028377374382 * "IL".scaler_64 + -0.668950226133838 * "IL".scaler_65 + -0.2653592700607482 * "IL".scaler_66 + -0.026214728142738074 * "IL".scaler_67 + 2.0035573805089983 * "IL".scaler_68 + 0.5410583660584739 * "IL".scaler_69 + 0.045788881415999606 * "IL".scaler_70 + 0.24645583109956318 * "IL".scaler_71 + 0.7071382640308066 * "IL".scaler_72 + -1.7307071910278198 * "IL".scaler_73 + 0.28960842113050844 * "IL".scaler_74 + 0.26998334855308964 * "IL".scaler_75 + -0.7496117031087968 * "IL".scaler_76 + -1.2002197072994507 * "IL".scaler_77 + 0.09574957725440991 * "IL".scaler_78 + 0.138616073053172 * "IL".scaler_79 + 0.005396039481060062 * "IL".scaler_80 + 0.702213941760796 * "IL".scaler_81 + 0.7087607358421447 * "IL".scaler_82 + 1.054235766989702 * "IL".scaler_83 + -0.3058444725570315 * "IL".scaler_84 + -0.02788669843771449 * "IL".scaler_85 + 0.8463511709562083 * "IL".scaler_86 + 2.0103103065439325 * "IL".scaler_87 + -0.49577005871275437 * "IL".scaler_88 + -0.07196091727065812 * "IL".scaler_89 + -0.018282698226983127 * "IL".scaler_90 + -0.8793905380968255 * "IL".scaler_91 + 0.6946143180866765 * "IL".scaler_92 + -1.0498432066465178 * "IL".scaler_93 + 0.8120384634711473 * "IL".scaler_94 + -0.11208970127839378 * "IL".scaler_95 + 0.6645787115410875 * "IL".scaler_96 + -0.4259585445078486 * "IL".scaler_97 + -1.214020344522273 * "IL".scaler_98 + 0.622238277300915 * "IL".scaler_99 + -0.5575414179413462 * "IL".scaler_100 + 0.19922201705513515 * "IL".scaler_101 + -1.5571496699404235 AS "NEUR_1_3" 
FROM "IL"), 
"HL_1_relu" AS 
(SELECT "HL_BA_1"."KEY" AS "KEY", CAST(greatest("HL_BA_1"."NEUR_1_1", ?) AS DOUBLE) AS "NEUR_1_1", CAST(greatest("HL_BA_1"."NEUR_1_2", ?) AS DOUBLE) AS "NEUR_1_2", CAST(greatest("HL_BA_1"."NEUR_1_3", ?) AS DOUBLE) AS "NEUR_1_3" 
FROM "HL_BA_1")
 SELECT "HL_1_relu_1"."KEY", "HL_1_relu_1"."NEUR_1_1", "HL_1_relu_1"."NEUR_1_2", "HL_1_relu_1"."NEUR_1_3" 
FROM (SELECT "HL_1_relu"."KEY" AS "KEY", "HL_1_relu"."NEUR_1_1" AS "NEUR_1_1", "HL_1_relu"."NEUR_1_2" AS "NEUR_1_2", "HL_1_relu"."NEUR_1_3" AS "NEUR_1_3" 
FROM "HL_1_relu") AS "HL_1_relu_1"

-- Code For temporary table tmp_20180416233720_bb9r4v_ol_softmax_1 part 1/2. Create 


CREATE GLOBAL TEMPORARY TABLE tmp_20180416233720_bb9r4v_ol_softmax_1 (
	"KEY" BIGINT, 
	"NEUR_3_1" FLOAT, 
	"NEUR_3_2" FLOAT, 
	"NEUR_3_3" FLOAT, 
	"NEUR_3_4" FLOAT
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table tmp_20180416233720_bb9r4v_ol_softmax_1 part 2/2. Populate

INSERT INTO tmp_20180416233720_bb9r4v_ol_softmax_1 WITH "HL_BA_2" AS 
(SELECT "HL_1_relu_1"."KEY" AS "KEY", -0.5545671785414171 * "HL_1_relu_1"."NEUR_1_1" + 1.6192420471918967 * "HL_1_relu_1"."NEUR_1_2" + 1.1211862526453955 * "HL_1_relu_1"."NEUR_1_3" + -1.3054084925914813 AS "NEUR_2_1", -3.868231212070886 * "HL_1_relu_1"."NEUR_1_1" + 1.8367708125370286 * "HL_1_relu_1"."NEUR_1_2" + 1.9899477424194747 * "HL_1_relu_1"."NEUR_1_3" + 0.4313338565079576 AS "NEUR_2_2", -3.2440148389039285 * "HL_1_relu_1"."NEUR_1_1" + 2.728964481562409 * "HL_1_relu_1"."NEUR_1_2" + -0.0021994892207420204 * "HL_1_relu_1"."NEUR_1_3" + 0.010465036402367109 AS "NEUR_2_3", -1.4697632057904897 * "HL_1_relu_1"."NEUR_1_1" + 2.007961553440746 * "HL_1_relu_1"."NEUR_1_2" + -3.8225754491528865 * "HL_1_relu_1"."NEUR_1_3" + 0.5696885361199867 AS "NEUR_2_4", -0.6093399615278717 * "HL_1_relu_1"."NEUR_1_1" + -0.37766425147056953 * "HL_1_relu_1"."NEUR_1_2" + -0.6729941142217591 * "HL_1_relu_1"."NEUR_1_3" + -0.01807831622698608 AS "NEUR_2_5" 
FROM tmp_20180416233720_jgfmvq_hl_1_relu_1 AS "HL_1_relu_1"), 
"HL_2_relu" AS 
(SELECT "HL_BA_2"."KEY" AS "KEY", CAST(greatest("HL_BA_2"."NEUR_2_1", ?) AS DOUBLE) AS "NEUR_2_1", CAST(greatest("HL_BA_2"."NEUR_2_2", ?) AS DOUBLE) AS "NEUR_2_2", CAST(greatest("HL_BA_2"."NEUR_2_3", ?) AS DOUBLE) AS "NEUR_2_3", CAST(greatest("HL_BA_2"."NEUR_2_4", ?) AS DOUBLE) AS "NEUR_2_4", CAST(greatest("HL_BA_2"."NEUR_2_5", ?) AS DOUBLE) AS "NEUR_2_5" 
FROM "HL_BA_2"), 
"OL_BA" AS 
(SELECT "HL_2_relu"."KEY" AS "KEY", -0.423787909754699 * "HL_2_relu"."NEUR_2_1" + -3.424168157202836 * "HL_2_relu"."NEUR_2_2" + -2.0981377732959294 * "HL_2_relu"."NEUR_2_3" + 1.9887828099036275 * "HL_2_relu"."NEUR_2_4" + 0.5898823588515022 * "HL_2_relu"."NEUR_2_5" + 1.2385463598309958 AS "NEUR_3_1", 2.0719367861762414 * "HL_2_relu"."NEUR_2_1" + 0.2662997244840246 * "HL_2_relu"."NEUR_2_2" + -2.2003988611319 * "HL_2_relu"."NEUR_2_3" + -3.012273009945476 * "HL_2_relu"."NEUR_2_4" + 0.39609999673816776 * "HL_2_relu"."NEUR_2_5" + 0.9634556004587205 AS "NEUR_3_2", 0.518801080158563 * "HL_2_relu"."NEUR_2_1" + 1.3426334383599143 * "HL_2_relu"."NEUR_2_2" + 2.8398932744249996 * "HL_2_relu"."NEUR_2_3" + -1.567955790134215 * "HL_2_relu"."NEUR_2_4" + 0.6634993960128017 * "HL_2_relu"."NEUR_2_5" + -1.021219691563093 AS "NEUR_3_3", -1.5506813087748286 * "HL_2_relu"."NEUR_2_1" + 2.1798851136193855 * "HL_2_relu"."NEUR_2_2" + 0.6666281328784411 * "HL_2_relu"."NEUR_2_3" + 2.31567933339764 * "HL_2_relu"."NEUR_2_4" + -0.48552183188776366 * "HL_2_relu"."NEUR_2_5" + -2.498232488380878 AS "NEUR_3_4" 
FROM "HL_2_relu"), 
"OL_softmax" AS 
(SELECT "OL_BA"."KEY" AS "KEY", CAST("OL_BA"."NEUR_3_1" AS DOUBLE) AS "NEUR_3_1", CAST("OL_BA"."NEUR_3_2" AS DOUBLE) AS "NEUR_3_2", CAST("OL_BA"."NEUR_3_3" AS DOUBLE) AS "NEUR_3_3", CAST("OL_BA"."NEUR_3_4" AS DOUBLE) AS "NEUR_3_4" 
FROM "OL_BA")
 SELECT "OL_softmax_1"."KEY", "OL_softmax_1"."NEUR_3_1", "OL_softmax_1"."NEUR_3_2", "OL_softmax_1"."NEUR_3_3", "OL_softmax_1"."NEUR_3_4" 
FROM (SELECT "OL_softmax"."KEY" AS "KEY", "OL_softmax"."NEUR_3_1" AS "NEUR_3_1", "OL_softmax"."NEUR_3_2" AS "NEUR_3_2", "OL_softmax"."NEUR_3_3" AS "NEUR_3_3", "OL_softmax"."NEUR_3_4" AS "NEUR_3_4" 
FROM "OL_softmax") AS "OL_softmax_1"

-- Model deployment code

WITH orig_cte AS 
(SELECT "OL_softmax_1"."KEY" AS "KEY", "OL_softmax_1"."NEUR_3_1" AS "Score_0", "OL_softmax_1"."NEUR_3_2" AS "Score_1", "OL_softmax_1"."NEUR_3_3" AS "Score_2", "OL_softmax_1"."NEUR_3_4" AS "Score_3", CAST(NULL AS DOUBLE) AS "Proba_0", CAST(NULL AS DOUBLE) AS "Proba_1", CAST(NULL AS DOUBLE) AS "Proba_2", CAST(NULL AS DOUBLE) AS "Proba_3", CAST(NULL AS DOUBLE) AS "LogProba_0", CAST(NULL AS DOUBLE) AS "LogProba_1", CAST(NULL AS DOUBLE) AS "LogProba_2", CAST(NULL AS DOUBLE) AS "LogProba_3", NULL AS "Decision", CAST(NULL AS DOUBLE) AS "DecisionProba" 
FROM tmp_20180416233720_bb9r4v_ol_softmax_1 AS "OL_softmax_1"), 
score_class_union AS 
(SELECT scu."KEY_u" AS "KEY_u", scu.class AS class, scu."LogProba" AS "LogProba", scu."Proba" AS "Proba", scu."Score" AS "Score" 
FROM (SELECT orig_cte."KEY" AS "KEY_u", 0 AS class, orig_cte."LogProba_0" AS "LogProba", orig_cte."Proba_0" AS "Proba", orig_cte."Score_0" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 1 AS class, orig_cte."LogProba_1" AS "LogProba", orig_cte."Proba_1" AS "Proba", orig_cte."Score_1" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 2 AS class, orig_cte."LogProba_2" AS "LogProba", orig_cte."Proba_2" AS "Proba", orig_cte."Score_2" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 3 AS class, orig_cte."LogProba_3" AS "LogProba", orig_cte."Proba_3" AS "Proba", orig_cte."Score_3" AS "Score" 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte."KEY" AS "KEY", orig_cte."Score_0" AS "Score_0", orig_cte."Score_1" AS "Score_1", orig_cte."Score_2" AS "Score_2", orig_cte."Score_3" AS "Score_3", orig_cte."Proba_0" AS "Proba_0", orig_cte."Proba_1" AS "Proba_1", orig_cte."Proba_2" AS "Proba_2", orig_cte."Proba_3" AS "Proba_3", orig_cte."LogProba_0" AS "LogProba_0", orig_cte."LogProba_1" AS "LogProba_1", orig_cte."LogProba_2" AS "LogProba_2", orig_cte."LogProba_3" AS "LogProba_3", orig_cte."Decision" AS "Decision", orig_cte."DecisionProba" AS "DecisionProba", max_select."KEY_m" AS "KEY_m", max_select."max_Score" AS "max_Score" 
FROM orig_cte LEFT OUTER JOIN (SELECT score_class_union."KEY_u" AS "KEY_m", max(score_class_union."Score") AS "max_Score" 
FROM score_class_union GROUP BY score_class_union."KEY_u") AS max_select ON orig_cte."KEY" = max_select."KEY_m"), 
score_soft_max_deltas AS 
(SELECT score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Score_2" AS "Score_2", score_max."Score_3" AS "Score_3", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."Proba_2" AS "Proba_2", score_max."Proba_3" AS "Proba_3", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."LogProba_2" AS "LogProba_2", score_max."LogProba_3" AS "LogProba_3", score_max."Decision" AS "Decision", score_max."DecisionProba" AS "DecisionProba", score_max."KEY_m" AS "KEY_m", score_max."max_Score" AS "max_Score", exp(score_max."Score_0" - score_max."max_Score") AS "exp_delta_Score_0", exp(score_max."Score_1" - score_max."max_Score") AS "exp_delta_Score_1", exp(score_max."Score_2" - score_max."max_Score") AS "exp_delta_Score_2", exp(score_max."Score_3" - score_max."max_Score") AS "exp_delta_Score_3" 
FROM score_max), 
score_class_union_soft AS 
(SELECT soft_scu."KEY" AS "KEY", soft_scu.class AS class, soft_scu."exp_delta_Score" AS "exp_delta_Score" 
FROM (SELECT score_soft_max_deltas."KEY" AS "KEY", 0 AS class, score_soft_max_deltas."exp_delta_Score_0" AS "exp_delta_Score" 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas."KEY" AS "KEY", 1 AS class, score_soft_max_deltas."exp_delta_Score_1" AS "exp_delta_Score" 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas."KEY" AS "KEY", 2 AS class, score_soft_max_deltas."exp_delta_Score_2" AS "exp_delta_Score" 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas."KEY" AS "KEY", 3 AS class, score_soft_max_deltas."exp_delta_Score_3" AS "exp_delta_Score" 
FROM score_soft_max_deltas) AS soft_scu), 
score_soft_max AS 
(SELECT score_soft_max_deltas."KEY" AS "KEY", score_soft_max_deltas."Score_0" AS "Score_0", score_soft_max_deltas."Score_1" AS "Score_1", score_soft_max_deltas."Score_2" AS "Score_2", score_soft_max_deltas."Score_3" AS "Score_3", score_soft_max_deltas."Proba_0" AS "Proba_0", score_soft_max_deltas."Proba_1" AS "Proba_1", score_soft_max_deltas."Proba_2" AS "Proba_2", score_soft_max_deltas."Proba_3" AS "Proba_3", score_soft_max_deltas."LogProba_0" AS "LogProba_0", score_soft_max_deltas."LogProba_1" AS "LogProba_1", score_soft_max_deltas."LogProba_2" AS "LogProba_2", score_soft_max_deltas."LogProba_3" AS "LogProba_3", score_soft_max_deltas."Decision" AS "Decision", score_soft_max_deltas."DecisionProba" AS "DecisionProba", score_soft_max_deltas."KEY_m" AS "KEY_m", score_soft_max_deltas."max_Score" AS "max_Score", score_soft_max_deltas."exp_delta_Score_0" AS "exp_delta_Score_0", score_soft_max_deltas."exp_delta_Score_1" AS "exp_delta_Score_1", score_soft_max_deltas."exp_delta_Score_2" AS "exp_delta_Score_2", score_soft_max_deltas."exp_delta_Score_3" AS "exp_delta_Score_3", sum_exp_t."KEY_sum" AS "KEY_sum", sum_exp_t."sum_ExpDeltaScore" AS "sum_ExpDeltaScore" 
FROM score_soft_max_deltas LEFT OUTER JOIN (SELECT score_class_union_soft."KEY" AS "KEY_sum", sum(score_class_union_soft."exp_delta_Score") AS "sum_ExpDeltaScore" 
FROM score_class_union_soft GROUP BY score_class_union_soft."KEY") AS sum_exp_t ON score_soft_max_deltas."KEY" = sum_exp_t."KEY_sum"), 
union_with_max AS 
(SELECT score_class_union."KEY_u" AS "KEY_u", score_class_union.class AS class, score_class_union."LogProba" AS "LogProba", score_class_union."Proba" AS "Proba", score_class_union."Score" AS "Score", score_soft_max."KEY" AS "KEY", score_soft_max."Score_0" AS "Score_0", score_soft_max."Score_1" AS "Score_1", score_soft_max."Score_2" AS "Score_2", score_soft_max."Score_3" AS "Score_3", score_soft_max."Proba_0" AS "Proba_0", score_soft_max."Proba_1" AS "Proba_1", score_soft_max."Proba_2" AS "Proba_2", score_soft_max."Proba_3" AS "Proba_3", score_soft_max."LogProba_0" AS "LogProba_0", score_soft_max."LogProba_1" AS "LogProba_1", score_soft_max."LogProba_2" AS "LogProba_2", score_soft_max."LogProba_3" AS "LogProba_3", score_soft_max."Decision" AS "Decision", score_soft_max."DecisionProba" AS "DecisionProba", score_soft_max."KEY_m" AS "KEY_m", score_soft_max."max_Score" AS "max_Score", score_soft_max."exp_delta_Score_0" AS "exp_delta_Score_0", score_soft_max."exp_delta_Score_1" AS "exp_delta_Score_1", score_soft_max."exp_delta_Score_2" AS "exp_delta_Score_2", score_soft_max."exp_delta_Score_3" AS "exp_delta_Score_3", score_soft_max."KEY_sum" AS "KEY_sum", score_soft_max."sum_ExpDeltaScore" AS "sum_ExpDeltaScore" 
FROM score_class_union LEFT OUTER JOIN score_soft_max ON score_class_union."KEY_u" = score_soft_max."KEY"), 
arg_max_cte AS 
(SELECT score_soft_max."KEY" AS "KEY", score_soft_max."Score_0" AS "Score_0", score_soft_max."Score_1" AS "Score_1", score_soft_max."Score_2" AS "Score_2", score_soft_max."Score_3" AS "Score_3", score_soft_max."Proba_0" AS "Proba_0", score_soft_max."Proba_1" AS "Proba_1", score_soft_max."Proba_2" AS "Proba_2", score_soft_max."Proba_3" AS "Proba_3", score_soft_max."LogProba_0" AS "LogProba_0", score_soft_max."LogProba_1" AS "LogProba_1", score_soft_max."LogProba_2" AS "LogProba_2", score_soft_max."LogProba_3" AS "LogProba_3", score_soft_max."Decision" AS "Decision", score_soft_max."DecisionProba" AS "DecisionProba", score_soft_max."KEY_m" AS "KEY_m", score_soft_max."max_Score" AS "max_Score", score_soft_max."exp_delta_Score_0" AS "exp_delta_Score_0", score_soft_max."exp_delta_Score_1" AS "exp_delta_Score_1", score_soft_max."exp_delta_Score_2" AS "exp_delta_Score_2", score_soft_max."exp_delta_Score_3" AS "exp_delta_Score_3", score_soft_max."KEY_sum" AS "KEY_sum", score_soft_max."sum_ExpDeltaScore" AS "sum_ExpDeltaScore", "arg_max_t_Score"."KEY_Score" AS "KEY_Score", "arg_max_t_Score"."arg_max_Score" AS "arg_max_Score", soft_max_comp."KEY_softmax" AS "KEY_softmax", soft_max_comp."SoftProba_0" AS "SoftProba_0", soft_max_comp."SoftProba_1" AS "SoftProba_1", soft_max_comp."SoftProba_2" AS "SoftProba_2", soft_max_comp."SoftProba_3" AS "SoftProba_3" 
FROM score_soft_max LEFT OUTER JOIN (SELECT union_with_max."KEY" AS "KEY_Score", min(union_with_max.class) AS "arg_max_Score" 
FROM union_with_max 
WHERE union_with_max."Score" >= union_with_max."max_Score" GROUP BY union_with_max."KEY") AS "arg_max_t_Score" ON score_soft_max."KEY" = "arg_max_t_Score"."KEY_Score" LEFT OUTER JOIN (SELECT score_soft_max."KEY" AS "KEY_softmax", score_soft_max."exp_delta_Score_0" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_0", score_soft_max."exp_delta_Score_1" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_1", score_soft_max."exp_delta_Score_2" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_2", score_soft_max."exp_delta_Score_3" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_3" 
FROM score_soft_max) AS soft_max_comp ON soft_max_comp."KEY_softmax" = "arg_max_t_Score"."KEY_Score")
 SELECT arg_max_cte."KEY" AS "KEY", CAST(NULL AS DOUBLE) AS "Score_0", CAST(NULL AS DOUBLE) AS "Score_1", CAST(NULL AS DOUBLE) AS "Score_2", CAST(NULL AS DOUBLE) AS "Score_3", arg_max_cte."SoftProba_0" AS "Proba_0", arg_max_cte."SoftProba_1" AS "Proba_1", arg_max_cte."SoftProba_2" AS "Proba_2", arg_max_cte."SoftProba_3" AS "Proba_3", CASE WHEN (arg_max_cte."SoftProba_0" IS NULL OR arg_max_cte."SoftProba_0" > 0.0) THEN ln(arg_max_cte."SoftProba_0") ELSE -1.79769313486231e+308 END AS "LogProba_0", CASE WHEN (arg_max_cte."SoftProba_1" IS NULL OR arg_max_cte."SoftProba_1" > 0.0) THEN ln(arg_max_cte."SoftProba_1") ELSE -1.79769313486231e+308 END AS "LogProba_1", CASE WHEN (arg_max_cte."SoftProba_2" IS NULL OR arg_max_cte."SoftProba_2" > 0.0) THEN ln(arg_max_cte."SoftProba_2") ELSE -1.79769313486231e+308 END AS "LogProba_2", CASE WHEN (arg_max_cte."SoftProba_3" IS NULL OR arg_max_cte."SoftProba_3" > 0.0) THEN ln(arg_max_cte."SoftProba_3") ELSE -1.79769313486231e+308 END AS "LogProba_3", arg_max_cte."arg_max_Score" AS "Decision", greatest(arg_max_cte."SoftProba_0", arg_max_cte."SoftProba_1", arg_max_cte."SoftProba_2", arg_max_cte."SoftProba_3") AS "DecisionProba" 
FROM arg_max_cte