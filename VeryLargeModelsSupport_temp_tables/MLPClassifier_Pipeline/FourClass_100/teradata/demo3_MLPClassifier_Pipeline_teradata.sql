-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2018

-- Model : MLPClassifier_Pipeline
-- Dataset : FourClass_100
-- Database : teradata


-- This SQL code can contain one or more statements, to be executed in the order they appear in this file.



-- Code For temporary table tmp_20180416233717_v9s9v9_ads_ part 1/2. Create 


CREATE GLOBAL TEMPORARY TABLE tmp_20180416233717_v9s9v9_ads_  (
	"KEY" BIGINT, 
	impter_2 FLOAT, 
	impter_3 FLOAT, 
	impter_4 FLOAT, 
	impter_5 FLOAT, 
	impter_6 FLOAT, 
	impter_7 FLOAT, 
	impter_8 FLOAT, 
	impter_9 FLOAT, 
	impter_10 FLOAT, 
	impter_11 FLOAT, 
	impter_12 FLOAT, 
	impter_13 FLOAT, 
	impter_14 FLOAT, 
	impter_15 FLOAT, 
	impter_16 FLOAT, 
	impter_17 FLOAT, 
	impter_18 FLOAT, 
	impter_19 FLOAT, 
	impter_20 FLOAT, 
	impter_21 FLOAT, 
	impter_22 FLOAT, 
	impter_23 FLOAT, 
	impter_24 FLOAT, 
	impter_25 FLOAT, 
	impter_26 FLOAT, 
	impter_27 FLOAT, 
	impter_28 FLOAT, 
	impter_29 FLOAT, 
	impter_30 FLOAT, 
	impter_31 FLOAT, 
	impter_32 FLOAT, 
	impter_33 FLOAT, 
	impter_34 FLOAT, 
	impter_35 FLOAT, 
	impter_36 FLOAT, 
	impter_37 FLOAT, 
	impter_38 FLOAT, 
	impter_39 FLOAT, 
	impter_40 FLOAT, 
	impter_41 FLOAT, 
	impter_42 FLOAT, 
	impter_43 FLOAT, 
	impter_44 FLOAT, 
	impter_45 FLOAT, 
	impter_46 FLOAT, 
	impter_47 FLOAT, 
	impter_48 FLOAT, 
	impter_49 FLOAT, 
	impter_50 FLOAT, 
	impter_51 FLOAT, 
	impter_52 FLOAT, 
	impter_53 FLOAT, 
	impter_54 FLOAT, 
	impter_55 FLOAT, 
	impter_56 FLOAT, 
	impter_57 FLOAT, 
	impter_58 FLOAT, 
	impter_59 FLOAT, 
	impter_60 FLOAT, 
	impter_61 FLOAT, 
	impter_62 FLOAT, 
	impter_63 FLOAT, 
	impter_64 FLOAT, 
	impter_65 FLOAT, 
	impter_66 FLOAT, 
	impter_67 FLOAT, 
	impter_68 FLOAT, 
	impter_69 FLOAT, 
	impter_70 FLOAT, 
	impter_71 FLOAT, 
	impter_72 FLOAT, 
	impter_73 FLOAT, 
	impter_74 FLOAT, 
	impter_75 FLOAT, 
	impter_76 FLOAT, 
	impter_77 FLOAT, 
	impter_78 FLOAT, 
	impter_79 FLOAT, 
	impter_80 FLOAT, 
	impter_81 FLOAT, 
	impter_82 FLOAT, 
	impter_83 FLOAT, 
	impter_84 FLOAT, 
	impter_85 FLOAT, 
	impter_86 FLOAT, 
	impter_87 FLOAT, 
	impter_88 FLOAT, 
	impter_89 FLOAT, 
	impter_90 FLOAT, 
	impter_91 FLOAT, 
	impter_92 FLOAT, 
	impter_93 FLOAT, 
	impter_94 FLOAT, 
	impter_95 FLOAT, 
	impter_96 FLOAT, 
	impter_97 FLOAT, 
	impter_98 FLOAT, 
	impter_99 FLOAT, 
	impter_100 FLOAT, 
	impter_101 FLOAT
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table tmp_20180416233717_v9s9v9_ads_ part 2/2. Populate

INSERT INTO tmp_20180416233717_v9s9v9_ads_ ("KEY", impter_2, impter_3, impter_4, impter_5, impter_6, impter_7, impter_8, impter_9, impter_10, impter_11, impter_12, impter_13, impter_14, impter_15, impter_16, impter_17, impter_18, impter_19, impter_20, impter_21, impter_22, impter_23, impter_24, impter_25, impter_26, impter_27, impter_28, impter_29, impter_30, impter_31, impter_32, impter_33, impter_34, impter_35, impter_36, impter_37, impter_38, impter_39, impter_40, impter_41, impter_42, impter_43, impter_44, impter_45, impter_46, impter_47, impter_48, impter_49, impter_50, impter_51, impter_52, impter_53, impter_54, impter_55, impter_56, impter_57, impter_58, impter_59, impter_60, impter_61, impter_62, impter_63, impter_64, impter_65, impter_66, impter_67, impter_68, impter_69, impter_70, impter_71, impter_72, impter_73, impter_74, impter_75, impter_76, impter_77, impter_78, impter_79, impter_80, impter_81, impter_82, impter_83, impter_84, impter_85, impter_86, impter_87, impter_88, impter_89, impter_90, impter_91, impter_92, impter_93, impter_94, impter_95, impter_96, impter_97, impter_98, impter_99, impter_100, impter_101) SELECT "U"."KEY", "U".impter_2, "U".impter_3, "U".impter_4, "U".impter_5, "U".impter_6, "U".impter_7, "U".impter_8, "U".impter_9, "U".impter_10, "U".impter_11, "U".impter_12, "U".impter_13, "U".impter_14, "U".impter_15, "U".impter_16, "U".impter_17, "U".impter_18, "U".impter_19, "U".impter_20, "U".impter_21, "U".impter_22, "U".impter_23, "U".impter_24, "U".impter_25, "U".impter_26, "U".impter_27, "U".impter_28, "U".impter_29, "U".impter_30, "U".impter_31, "U".impter_32, "U".impter_33, "U".impter_34, "U".impter_35, "U".impter_36, "U".impter_37, "U".impter_38, "U".impter_39, "U".impter_40, "U".impter_41, "U".impter_42, "U".impter_43, "U".impter_44, "U".impter_45, "U".impter_46, "U".impter_47, "U".impter_48, "U".impter_49, "U".impter_50, "U".impter_51, "U".impter_52, "U".impter_53, "U".impter_54, "U".impter_55, "U".impter_56, "U".impter_57, "U".impter_58, "U".impter_59, "U".impter_60, "U".impter_61, "U".impter_62, "U".impter_63, "U".impter_64, "U".impter_65, "U".impter_66, "U".impter_67, "U".impter_68, "U".impter_69, "U".impter_70, "U".impter_71, "U".impter_72, "U".impter_73, "U".impter_74, "U".impter_75, "U".impter_76, "U".impter_77, "U".impter_78, "U".impter_79, "U".impter_80, "U".impter_81, "U".impter_82, "U".impter_83, "U".impter_84, "U".impter_85, "U".impter_86, "U".impter_87, "U".impter_88, "U".impter_89, "U".impter_90, "U".impter_91, "U".impter_92, "U".impter_93, "U".impter_94, "U".impter_95, "U".impter_96, "U".impter_97, "U".impter_98, "U".impter_99, "U".impter_100, "U".impter_101 
FROM (SELECT "ADS_imp_1_OUT"."KEY", "ADS_imp_1_OUT".impter_2, "ADS_imp_1_OUT".impter_3, "ADS_imp_1_OUT".impter_4, "ADS_imp_1_OUT".impter_5, "ADS_imp_1_OUT".impter_6, "ADS_imp_1_OUT".impter_7, "ADS_imp_1_OUT".impter_8, "ADS_imp_1_OUT".impter_9, "ADS_imp_1_OUT".impter_10, "ADS_imp_1_OUT".impter_11, "ADS_imp_1_OUT".impter_12, "ADS_imp_1_OUT".impter_13, "ADS_imp_1_OUT".impter_14, "ADS_imp_1_OUT".impter_15, "ADS_imp_1_OUT".impter_16, "ADS_imp_1_OUT".impter_17, "ADS_imp_1_OUT".impter_18, "ADS_imp_1_OUT".impter_19, "ADS_imp_1_OUT".impter_20, "ADS_imp_1_OUT".impter_21, "ADS_imp_1_OUT".impter_22, "ADS_imp_1_OUT".impter_23, "ADS_imp_1_OUT".impter_24, "ADS_imp_1_OUT".impter_25, "ADS_imp_1_OUT".impter_26, "ADS_imp_1_OUT".impter_27, "ADS_imp_1_OUT".impter_28, "ADS_imp_1_OUT".impter_29, "ADS_imp_1_OUT".impter_30, "ADS_imp_1_OUT".impter_31, "ADS_imp_1_OUT".impter_32, "ADS_imp_1_OUT".impter_33, "ADS_imp_1_OUT".impter_34, "ADS_imp_1_OUT".impter_35, "ADS_imp_1_OUT".impter_36, "ADS_imp_1_OUT".impter_37, "ADS_imp_1_OUT".impter_38, "ADS_imp_1_OUT".impter_39, "ADS_imp_1_OUT".impter_40, "ADS_imp_1_OUT".impter_41, "ADS_imp_1_OUT".impter_42, "ADS_imp_1_OUT".impter_43, "ADS_imp_1_OUT".impter_44, "ADS_imp_1_OUT".impter_45, "ADS_imp_1_OUT".impter_46, "ADS_imp_1_OUT".impter_47, "ADS_imp_1_OUT".impter_48, "ADS_imp_1_OUT".impter_49, "ADS_imp_1_OUT".impter_50, "ADS_imp_1_OUT".impter_51, "ADS_imp_1_OUT".impter_52, "ADS_imp_1_OUT".impter_53, "ADS_imp_1_OUT".impter_54, "ADS_imp_1_OUT".impter_55, "ADS_imp_1_OUT".impter_56, "ADS_imp_1_OUT".impter_57, "ADS_imp_1_OUT".impter_58, "ADS_imp_1_OUT".impter_59, "ADS_imp_1_OUT".impter_60, "ADS_imp_1_OUT".impter_61, "ADS_imp_1_OUT".impter_62, "ADS_imp_1_OUT".impter_63, "ADS_imp_1_OUT".impter_64, "ADS_imp_1_OUT".impter_65, "ADS_imp_1_OUT".impter_66, "ADS_imp_1_OUT".impter_67, "ADS_imp_1_OUT".impter_68, "ADS_imp_1_OUT".impter_69, "ADS_imp_1_OUT".impter_70, "ADS_imp_1_OUT".impter_71, "ADS_imp_1_OUT".impter_72, "ADS_imp_1_OUT".impter_73, "ADS_imp_1_OUT".impter_74, "ADS_imp_1_OUT".impter_75, "ADS_imp_1_OUT".impter_76, "ADS_imp_1_OUT".impter_77, "ADS_imp_1_OUT".impter_78, "ADS_imp_1_OUT".impter_79, "ADS_imp_1_OUT".impter_80, "ADS_imp_1_OUT".impter_81, "ADS_imp_1_OUT".impter_82, "ADS_imp_1_OUT".impter_83, "ADS_imp_1_OUT".impter_84, "ADS_imp_1_OUT".impter_85, "ADS_imp_1_OUT".impter_86, "ADS_imp_1_OUT".impter_87, "ADS_imp_1_OUT".impter_88, "ADS_imp_1_OUT".impter_89, "ADS_imp_1_OUT".impter_90, "ADS_imp_1_OUT".impter_91, "ADS_imp_1_OUT".impter_92, "ADS_imp_1_OUT".impter_93, "ADS_imp_1_OUT".impter_94, "ADS_imp_1_OUT".impter_95, "ADS_imp_1_OUT".impter_96, "ADS_imp_1_OUT".impter_97, "ADS_imp_1_OUT".impter_98, "ADS_imp_1_OUT".impter_99, "ADS_imp_1_OUT".impter_100, "ADS_imp_1_OUT".impter_101 
FROM (SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" IS NULL) THEN 0.006535740121159998 ELSE "ADS"."Feature_0" END AS impter_2, CASE WHEN ("ADS"."Feature_1" IS NULL) THEN 0.16767827125978743 ELSE "ADS"."Feature_1" END AS impter_3, CASE WHEN ("ADS"."Feature_2" IS NULL) THEN -0.05514704173583139 ELSE "ADS"."Feature_2" END AS impter_4, CASE WHEN ("ADS"."Feature_3" IS NULL) THEN 0.0015211693051869056 ELSE "ADS"."Feature_3" END AS impter_5, CASE WHEN ("ADS"."Feature_4" IS NULL) THEN 0.03142760191039923 ELSE "ADS"."Feature_4" END AS impter_6, CASE WHEN ("ADS"."Feature_5" IS NULL) THEN 0.026179683178748685 ELSE "ADS"."Feature_5" END AS impter_7, CASE WHEN ("ADS"."Feature_6" IS NULL) THEN -0.011254713122120081 ELSE "ADS"."Feature_6" END AS impter_8, CASE WHEN ("ADS"."Feature_7" IS NULL) THEN -0.016886211800947296 ELSE "ADS"."Feature_7" END AS impter_9, CASE WHEN ("ADS"."Feature_8" IS NULL) THEN -0.027342702964496257 ELSE "ADS"."Feature_8" END AS impter_10, CASE WHEN ("ADS"."Feature_9" IS NULL) THEN -0.16370127884822097 ELSE "ADS"."Feature_9" END AS impter_11, CASE WHEN ("ADS"."Feature_10" IS NULL) THEN 0.03541225073893643 ELSE "ADS"."Feature_10" END AS impter_12, CASE WHEN ("ADS"."Feature_11" IS NULL) THEN -0.028529123475633158 ELSE "ADS"."Feature_11" END AS impter_13, CASE WHEN ("ADS"."Feature_12" IS NULL) THEN -0.026749444989609742 ELSE "ADS"."Feature_12" END AS impter_14, CASE WHEN ("ADS"."Feature_13" IS NULL) THEN 0.38601982291131526 ELSE "ADS"."Feature_13" END AS impter_15, CASE WHEN ("ADS"."Feature_14" IS NULL) THEN 0.01621452573135814 ELSE "ADS"."Feature_14" END AS impter_16, CASE WHEN ("ADS"."Feature_15" IS NULL) THEN 0.22723775077839256 ELSE "ADS"."Feature_15" END AS impter_17, CASE WHEN ("ADS"."Feature_16" IS NULL) THEN 0.5663734566941232 ELSE "ADS"."Feature_16" END AS impter_18, CASE WHEN ("ADS"."Feature_17" IS NULL) THEN 0.2776964106161551 ELSE "ADS"."Feature_17" END AS impter_19, CASE WHEN ("ADS"."Feature_18" IS NULL) THEN 0.005994326812351447 ELSE "ADS"."Feature_18" END AS impter_20, CASE WHEN ("ADS"."Feature_19" IS NULL) THEN -0.021852534469692157 ELSE "ADS"."Feature_19" END AS impter_21, CASE WHEN ("ADS"."Feature_20" IS NULL) THEN -0.028375425917008895 ELSE "ADS"."Feature_20" END AS impter_22, CASE WHEN ("ADS"."Feature_21" IS NULL) THEN 0.015164323296291698 ELSE "ADS"."Feature_21" END AS impter_23, CASE WHEN ("ADS"."Feature_22" IS NULL) THEN 0.017469134548764743 ELSE "ADS"."Feature_22" END AS impter_24, CASE WHEN ("ADS"."Feature_23" IS NULL) THEN 0.03493909449429536 ELSE "ADS"."Feature_23" END AS impter_25, CASE WHEN ("ADS"."Feature_24" IS NULL) THEN -0.1443616076343936 ELSE "ADS"."Feature_24" END AS impter_26, CASE WHEN ("ADS"."Feature_25" IS NULL) THEN 0.1461046774436175 ELSE "ADS"."Feature_25" END AS impter_27, CASE WHEN ("ADS"."Feature_26" IS NULL) THEN 0.06761584237384538 ELSE "ADS"."Feature_26" END AS impter_28, CASE WHEN ("ADS"."Feature_27" IS NULL) THEN -0.3083684560804083 ELSE "ADS"."Feature_27" END AS impter_29, CASE WHEN ("ADS"."Feature_28" IS NULL) THEN 0.9525753017609152 ELSE "ADS"."Feature_28" END AS impter_30, CASE WHEN ("ADS"."Feature_29" IS NULL) THEN -0.05813383910109171 ELSE "ADS"."Feature_29" END AS impter_31, CASE WHEN ("ADS"."Feature_30" IS NULL) THEN -0.013124412714914525 ELSE "ADS"."Feature_30" END AS impter_32, CASE WHEN ("ADS"."Feature_31" IS NULL) THEN -0.3375512543306959 ELSE "ADS"."Feature_31" END AS impter_33, CASE WHEN ("ADS"."Feature_32" IS NULL) THEN 0.03902651459317101 ELSE "ADS"."Feature_32" END AS impter_34, CASE WHEN ("ADS"."Feature_33" IS NULL) THEN -0.0402939442131795 ELSE "ADS"."Feature_33" END AS impter_35, CASE WHEN ("ADS"."Feature_34" IS NULL) THEN -0.17161188573704908 ELSE "ADS"."Feature_34" END AS impter_36, CASE WHEN ("ADS"."Feature_35" IS NULL) THEN 0.012647786868640112 ELSE "ADS"."Feature_35" END AS impter_37, CASE WHEN ("ADS"."Feature_36" IS NULL) THEN 0.005193735308514513 ELSE "ADS"."Feature_36" END AS impter_38, CASE WHEN ("ADS"."Feature_37" IS NULL) THEN -0.017160876576937396 ELSE "ADS"."Feature_37" END AS impter_39, CASE WHEN ("ADS"."Feature_38" IS NULL) THEN 0.045036155997948996 ELSE "ADS"."Feature_38" END AS impter_40, CASE WHEN ("ADS"."Feature_39" IS NULL) THEN -0.12035820022636322 ELSE "ADS"."Feature_39" END AS impter_41, CASE WHEN ("ADS"."Feature_40" IS NULL) THEN -0.17640392282213266 ELSE "ADS"."Feature_40" END AS impter_42, CASE WHEN ("ADS"."Feature_41" IS NULL) THEN -0.015157075927040681 ELSE "ADS"."Feature_41" END AS impter_43, CASE WHEN ("ADS"."Feature_42" IS NULL) THEN -0.3068740190578085 ELSE "ADS"."Feature_42" END AS impter_44, CASE WHEN ("ADS"."Feature_43" IS NULL) THEN -0.04035458069305412 ELSE "ADS"."Feature_43" END AS impter_45, CASE WHEN ("ADS"."Feature_44" IS NULL) THEN -0.00789981512459992 ELSE "ADS"."Feature_44" END AS impter_46, CASE WHEN ("ADS"."Feature_45" IS NULL) THEN 0.002647932254171184 ELSE "ADS"."Feature_45" END AS impter_47, CASE WHEN ("ADS"."Feature_46" IS NULL) THEN -0.1492108459830671 ELSE "ADS"."Feature_46" END AS impter_48, CASE WHEN ("ADS"."Feature_47" IS NULL) THEN 0.24895399236878446 ELSE "ADS"."Feature_47" END AS impter_49, CASE WHEN ("ADS"."Feature_48" IS NULL) THEN -0.7004243979718509 ELSE "ADS"."Feature_48" END AS impter_50, CASE WHEN ("ADS"."Feature_49" IS NULL) THEN 0.025527673750135163 ELSE "ADS"."Feature_49" END AS impter_51, CASE WHEN ("ADS"."Feature_50" IS NULL) THEN -0.15642138685028584 ELSE "ADS"."Feature_50" END AS impter_52, CASE WHEN ("ADS"."Feature_51" IS NULL) THEN -0.12783857717811203 ELSE "ADS"."Feature_51" END AS impter_53, CASE WHEN ("ADS"."Feature_52" IS NULL) THEN -0.3698795238326839 ELSE "ADS"."Feature_52" END AS impter_54, CASE WHEN ("ADS"."Feature_53" IS NULL) THEN 0.04105474558890989 ELSE "ADS"."Feature_53" END AS impter_55, CASE WHEN ("ADS"."Feature_54" IS NULL) THEN -0.10047427531359215 ELSE "ADS"."Feature_54" END AS impter_56, CASE WHEN ("ADS"."Feature_55" IS NULL) THEN -0.1312728865356366 ELSE "ADS"."Feature_55" END AS impter_57, CASE WHEN ("ADS"."Feature_56" IS NULL) THEN 0.3685784313653654 ELSE "ADS"."Feature_56" END AS impter_58, CASE WHEN ("ADS"."Feature_57" IS NULL) THEN 0.22281246520596887 ELSE "ADS"."Feature_57" END AS impter_59, CASE WHEN ("ADS"."Feature_58" IS NULL) THEN -0.006274087618403553 ELSE "ADS"."Feature_58" END AS impter_60, CASE WHEN ("ADS"."Feature_59" IS NULL) THEN 0.014268598957774136 ELSE "ADS"."Feature_59" END AS impter_61, CASE WHEN ("ADS"."Feature_60" IS NULL) THEN -0.028545511573860538 ELSE "ADS"."Feature_60" END AS impter_62, CASE WHEN ("ADS"."Feature_61" IS NULL) THEN -0.4374918318496328 ELSE "ADS"."Feature_61" END AS impter_63, CASE WHEN ("ADS"."Feature_62" IS NULL) THEN -0.3689927805875731 ELSE "ADS"."Feature_62" END AS impter_64, CASE WHEN ("ADS"."Feature_63" IS NULL) THEN 0.0011690418193188894 ELSE "ADS"."Feature_63" END AS impter_65, CASE WHEN ("ADS"."Feature_64" IS NULL) THEN -0.011564873717580429 ELSE "ADS"."Feature_64" END AS impter_66, CASE WHEN ("ADS"."Feature_65" IS NULL) THEN -0.04358769989694412 ELSE "ADS"."Feature_65" END AS impter_67, CASE WHEN ("ADS"."Feature_66" IS NULL) THEN -0.1618634137390173 ELSE "ADS"."Feature_66" END AS impter_68, CASE WHEN ("ADS"."Feature_67" IS NULL) THEN -0.01727264153501617 ELSE "ADS"."Feature_67" END AS impter_69, CASE WHEN ("ADS"."Feature_68" IS NULL) THEN -0.36403022036864674 ELSE "ADS"."Feature_68" END AS impter_70, CASE WHEN ("ADS"."Feature_69" IS NULL) THEN -0.049273006502403176 ELSE "ADS"."Feature_69" END AS impter_71, CASE WHEN ("ADS"."Feature_70" IS NULL) THEN -0.015468512657334297 ELSE "ADS"."Feature_70" END AS impter_72, CASE WHEN ("ADS"."Feature_71" IS NULL) THEN -0.19162939351279548 ELSE "ADS"."Feature_71" END AS impter_73, CASE WHEN ("ADS"."Feature_72" IS NULL) THEN 0.023782830321603186 ELSE "ADS"."Feature_72" END AS impter_74, CASE WHEN ("ADS"."Feature_73" IS NULL) THEN 0.020454799672569742 ELSE "ADS"."Feature_73" END AS impter_75, CASE WHEN ("ADS"."Feature_74" IS NULL) THEN -0.17335534659313448 ELSE "ADS"."Feature_74" END AS impter_76, CASE WHEN ("ADS"."Feature_75" IS NULL) THEN 0.02758228824576348 ELSE "ADS"."Feature_75" END AS impter_77, CASE WHEN ("ADS"."Feature_76" IS NULL) THEN -0.015452336678168777 ELSE "ADS"."Feature_76" END AS impter_78, CASE WHEN ("ADS"."Feature_77" IS NULL) THEN -0.0425555457732581 ELSE "ADS"."Feature_77" END AS impter_79, CASE WHEN ("ADS"."Feature_78" IS NULL) THEN -0.009425736580365328 ELSE "ADS"."Feature_78" END AS impter_80, CASE WHEN ("ADS"."Feature_79" IS NULL) THEN 0.007423677489325057 ELSE "ADS"."Feature_79" END AS impter_81, CASE WHEN ("ADS"."Feature_80" IS NULL) THEN 0.0498533264368169 ELSE "ADS"."Feature_80" END AS impter_82, CASE WHEN ("ADS"."Feature_81" IS NULL) THEN 0.027960221179443 ELSE "ADS"."Feature_81" END AS impter_83, CASE WHEN ("ADS"."Feature_82" IS NULL) THEN -0.005270502487579236 ELSE "ADS"."Feature_82" END AS impter_84, CASE WHEN ("ADS"."Feature_83" IS NULL) THEN -0.053393611774246875 ELSE "ADS"."Feature_83" END AS impter_85, CASE WHEN ("ADS"."Feature_84" IS NULL) THEN 0.17162033288561043 ELSE "ADS"."Feature_84" END AS impter_86, CASE WHEN ("ADS"."Feature_85" IS NULL) THEN 0.037211997007404414 ELSE "ADS"."Feature_85" END AS impter_87, CASE WHEN ("ADS"."Feature_86" IS NULL) THEN 0.01843497333044896 ELSE "ADS"."Feature_86" END AS impter_88, CASE WHEN ("ADS"."Feature_87" IS NULL) THEN 0.5605216326173627 ELSE "ADS"."Feature_87" END AS impter_89, CASE WHEN ("ADS"."Feature_88" IS NULL) THEN -0.05285046291900049 ELSE "ADS"."Feature_88" END AS impter_90, CASE WHEN ("ADS"."Feature_89" IS NULL) THEN 0.07939021734244131 ELSE "ADS"."Feature_89" END AS impter_91, CASE WHEN ("ADS"."Feature_90" IS NULL) THEN -2.088667163118704 ELSE "ADS"."Feature_90" END AS impter_92, CASE WHEN ("ADS"."Feature_91" IS NULL) THEN -1.0831020638954625 ELSE "ADS"."Feature_91" END AS impter_93, CASE WHEN ("ADS"."Feature_92" IS NULL) THEN -0.30470236282124374 ELSE "ADS"."Feature_92" END AS impter_94, CASE WHEN ("ADS"."Feature_93" IS NULL) THEN -0.9354262595637257 ELSE "ADS"."Feature_93" END AS impter_95, CASE WHEN ("ADS"."Feature_94" IS NULL) THEN -0.09841121992703274 ELSE "ADS"."Feature_94" END AS impter_96, CASE WHEN ("ADS"."Feature_95" IS NULL) THEN -0.5316534843603434 ELSE "ADS"."Feature_95" END AS impter_97, CASE WHEN ("ADS"."Feature_96" IS NULL) THEN 0.014127422137804999 ELSE "ADS"."Feature_96" END AS impter_98, CASE WHEN ("ADS"."Feature_97" IS NULL) THEN -0.012631277412677116 ELSE "ADS"."Feature_97" END AS impter_99, CASE WHEN ("ADS"."Feature_98" IS NULL) THEN 0.031286881233113274 ELSE "ADS"."Feature_98" END AS impter_100, CASE WHEN ("ADS"."Feature_99" IS NULL) THEN -0.45039051538460234 ELSE "ADS"."Feature_99" END AS impter_101 
FROM "FourClass_100" AS "ADS") AS "ADS_imp_1_OUT") AS "U"

-- Code For temporary table tmp_20180416233717_n1fij1_ads_ part 1/2. Create 


CREATE GLOBAL TEMPORARY TABLE tmp_20180416233717_n1fij1_ads_  (
	"KEY" BIGINT, 
	scaler_2 FLOAT, 
	scaler_3 FLOAT, 
	scaler_4 FLOAT, 
	scaler_5 FLOAT, 
	scaler_6 FLOAT, 
	scaler_7 FLOAT, 
	scaler_8 FLOAT, 
	scaler_9 FLOAT, 
	scaler_10 FLOAT, 
	scaler_11 FLOAT, 
	scaler_12 FLOAT, 
	scaler_13 FLOAT, 
	scaler_14 FLOAT, 
	scaler_15 FLOAT, 
	scaler_16 FLOAT, 
	scaler_17 FLOAT, 
	scaler_18 FLOAT, 
	scaler_19 FLOAT, 
	scaler_20 FLOAT, 
	scaler_21 FLOAT, 
	scaler_22 FLOAT, 
	scaler_23 FLOAT, 
	scaler_24 FLOAT, 
	scaler_25 FLOAT, 
	scaler_26 FLOAT, 
	scaler_27 FLOAT, 
	scaler_28 FLOAT, 
	scaler_29 FLOAT, 
	scaler_30 FLOAT, 
	scaler_31 FLOAT, 
	scaler_32 FLOAT, 
	scaler_33 FLOAT, 
	scaler_34 FLOAT, 
	scaler_35 FLOAT, 
	scaler_36 FLOAT, 
	scaler_37 FLOAT, 
	scaler_38 FLOAT, 
	scaler_39 FLOAT, 
	scaler_40 FLOAT, 
	scaler_41 FLOAT, 
	scaler_42 FLOAT, 
	scaler_43 FLOAT, 
	scaler_44 FLOAT, 
	scaler_45 FLOAT, 
	scaler_46 FLOAT, 
	scaler_47 FLOAT, 
	scaler_48 FLOAT, 
	scaler_49 FLOAT, 
	scaler_50 FLOAT, 
	scaler_51 FLOAT, 
	scaler_52 FLOAT, 
	scaler_53 FLOAT, 
	scaler_54 FLOAT, 
	scaler_55 FLOAT, 
	scaler_56 FLOAT, 
	scaler_57 FLOAT, 
	scaler_58 FLOAT, 
	scaler_59 FLOAT, 
	scaler_60 FLOAT, 
	scaler_61 FLOAT, 
	scaler_62 FLOAT, 
	scaler_63 FLOAT, 
	scaler_64 FLOAT, 
	scaler_65 FLOAT, 
	scaler_66 FLOAT, 
	scaler_67 FLOAT, 
	scaler_68 FLOAT, 
	scaler_69 FLOAT, 
	scaler_70 FLOAT, 
	scaler_71 FLOAT, 
	scaler_72 FLOAT, 
	scaler_73 FLOAT, 
	scaler_74 FLOAT, 
	scaler_75 FLOAT, 
	scaler_76 FLOAT, 
	scaler_77 FLOAT, 
	scaler_78 FLOAT, 
	scaler_79 FLOAT, 
	scaler_80 FLOAT, 
	scaler_81 FLOAT, 
	scaler_82 FLOAT, 
	scaler_83 FLOAT, 
	scaler_84 FLOAT, 
	scaler_85 FLOAT, 
	scaler_86 FLOAT, 
	scaler_87 FLOAT, 
	scaler_88 FLOAT, 
	scaler_89 FLOAT, 
	scaler_90 FLOAT, 
	scaler_91 FLOAT, 
	scaler_92 FLOAT, 
	scaler_93 FLOAT, 
	scaler_94 FLOAT, 
	scaler_95 FLOAT, 
	scaler_96 FLOAT, 
	scaler_97 FLOAT, 
	scaler_98 FLOAT, 
	scaler_99 FLOAT, 
	scaler_100 FLOAT, 
	scaler_101 FLOAT
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table tmp_20180416233717_n1fij1_ads_ part 2/2. Populate

INSERT INTO tmp_20180416233717_n1fij1_ads_ ("KEY", scaler_2, scaler_3, scaler_4, scaler_5, scaler_6, scaler_7, scaler_8, scaler_9, scaler_10, scaler_11, scaler_12, scaler_13, scaler_14, scaler_15, scaler_16, scaler_17, scaler_18, scaler_19, scaler_20, scaler_21, scaler_22, scaler_23, scaler_24, scaler_25, scaler_26, scaler_27, scaler_28, scaler_29, scaler_30, scaler_31, scaler_32, scaler_33, scaler_34, scaler_35, scaler_36, scaler_37, scaler_38, scaler_39, scaler_40, scaler_41, scaler_42, scaler_43, scaler_44, scaler_45, scaler_46, scaler_47, scaler_48, scaler_49, scaler_50, scaler_51, scaler_52, scaler_53, scaler_54, scaler_55, scaler_56, scaler_57, scaler_58, scaler_59, scaler_60, scaler_61, scaler_62, scaler_63, scaler_64, scaler_65, scaler_66, scaler_67, scaler_68, scaler_69, scaler_70, scaler_71, scaler_72, scaler_73, scaler_74, scaler_75, scaler_76, scaler_77, scaler_78, scaler_79, scaler_80, scaler_81, scaler_82, scaler_83, scaler_84, scaler_85, scaler_86, scaler_87, scaler_88, scaler_89, scaler_90, scaler_91, scaler_92, scaler_93, scaler_94, scaler_95, scaler_96, scaler_97, scaler_98, scaler_99, scaler_100, scaler_101) SELECT "U"."KEY", "U".scaler_2, "U".scaler_3, "U".scaler_4, "U".scaler_5, "U".scaler_6, "U".scaler_7, "U".scaler_8, "U".scaler_9, "U".scaler_10, "U".scaler_11, "U".scaler_12, "U".scaler_13, "U".scaler_14, "U".scaler_15, "U".scaler_16, "U".scaler_17, "U".scaler_18, "U".scaler_19, "U".scaler_20, "U".scaler_21, "U".scaler_22, "U".scaler_23, "U".scaler_24, "U".scaler_25, "U".scaler_26, "U".scaler_27, "U".scaler_28, "U".scaler_29, "U".scaler_30, "U".scaler_31, "U".scaler_32, "U".scaler_33, "U".scaler_34, "U".scaler_35, "U".scaler_36, "U".scaler_37, "U".scaler_38, "U".scaler_39, "U".scaler_40, "U".scaler_41, "U".scaler_42, "U".scaler_43, "U".scaler_44, "U".scaler_45, "U".scaler_46, "U".scaler_47, "U".scaler_48, "U".scaler_49, "U".scaler_50, "U".scaler_51, "U".scaler_52, "U".scaler_53, "U".scaler_54, "U".scaler_55, "U".scaler_56, "U".scaler_57, "U".scaler_58, "U".scaler_59, "U".scaler_60, "U".scaler_61, "U".scaler_62, "U".scaler_63, "U".scaler_64, "U".scaler_65, "U".scaler_66, "U".scaler_67, "U".scaler_68, "U".scaler_69, "U".scaler_70, "U".scaler_71, "U".scaler_72, "U".scaler_73, "U".scaler_74, "U".scaler_75, "U".scaler_76, "U".scaler_77, "U".scaler_78, "U".scaler_79, "U".scaler_80, "U".scaler_81, "U".scaler_82, "U".scaler_83, "U".scaler_84, "U".scaler_85, "U".scaler_86, "U".scaler_87, "U".scaler_88, "U".scaler_89, "U".scaler_90, "U".scaler_91, "U".scaler_92, "U".scaler_93, "U".scaler_94, "U".scaler_95, "U".scaler_96, "U".scaler_97, "U".scaler_98, "U".scaler_99, "U".scaler_100, "U".scaler_101 
FROM (SELECT "ADS_sca_2_OUT"."KEY", "ADS_sca_2_OUT".scaler_2, "ADS_sca_2_OUT".scaler_3, "ADS_sca_2_OUT".scaler_4, "ADS_sca_2_OUT".scaler_5, "ADS_sca_2_OUT".scaler_6, "ADS_sca_2_OUT".scaler_7, "ADS_sca_2_OUT".scaler_8, "ADS_sca_2_OUT".scaler_9, "ADS_sca_2_OUT".scaler_10, "ADS_sca_2_OUT".scaler_11, "ADS_sca_2_OUT".scaler_12, "ADS_sca_2_OUT".scaler_13, "ADS_sca_2_OUT".scaler_14, "ADS_sca_2_OUT".scaler_15, "ADS_sca_2_OUT".scaler_16, "ADS_sca_2_OUT".scaler_17, "ADS_sca_2_OUT".scaler_18, "ADS_sca_2_OUT".scaler_19, "ADS_sca_2_OUT".scaler_20, "ADS_sca_2_OUT".scaler_21, "ADS_sca_2_OUT".scaler_22, "ADS_sca_2_OUT".scaler_23, "ADS_sca_2_OUT".scaler_24, "ADS_sca_2_OUT".scaler_25, "ADS_sca_2_OUT".scaler_26, "ADS_sca_2_OUT".scaler_27, "ADS_sca_2_OUT".scaler_28, "ADS_sca_2_OUT".scaler_29, "ADS_sca_2_OUT".scaler_30, "ADS_sca_2_OUT".scaler_31, "ADS_sca_2_OUT".scaler_32, "ADS_sca_2_OUT".scaler_33, "ADS_sca_2_OUT".scaler_34, "ADS_sca_2_OUT".scaler_35, "ADS_sca_2_OUT".scaler_36, "ADS_sca_2_OUT".scaler_37, "ADS_sca_2_OUT".scaler_38, "ADS_sca_2_OUT".scaler_39, "ADS_sca_2_OUT".scaler_40, "ADS_sca_2_OUT".scaler_41, "ADS_sca_2_OUT".scaler_42, "ADS_sca_2_OUT".scaler_43, "ADS_sca_2_OUT".scaler_44, "ADS_sca_2_OUT".scaler_45, "ADS_sca_2_OUT".scaler_46, "ADS_sca_2_OUT".scaler_47, "ADS_sca_2_OUT".scaler_48, "ADS_sca_2_OUT".scaler_49, "ADS_sca_2_OUT".scaler_50, "ADS_sca_2_OUT".scaler_51, "ADS_sca_2_OUT".scaler_52, "ADS_sca_2_OUT".scaler_53, "ADS_sca_2_OUT".scaler_54, "ADS_sca_2_OUT".scaler_55, "ADS_sca_2_OUT".scaler_56, "ADS_sca_2_OUT".scaler_57, "ADS_sca_2_OUT".scaler_58, "ADS_sca_2_OUT".scaler_59, "ADS_sca_2_OUT".scaler_60, "ADS_sca_2_OUT".scaler_61, "ADS_sca_2_OUT".scaler_62, "ADS_sca_2_OUT".scaler_63, "ADS_sca_2_OUT".scaler_64, "ADS_sca_2_OUT".scaler_65, "ADS_sca_2_OUT".scaler_66, "ADS_sca_2_OUT".scaler_67, "ADS_sca_2_OUT".scaler_68, "ADS_sca_2_OUT".scaler_69, "ADS_sca_2_OUT".scaler_70, "ADS_sca_2_OUT".scaler_71, "ADS_sca_2_OUT".scaler_72, "ADS_sca_2_OUT".scaler_73, "ADS_sca_2_OUT".scaler_74, "ADS_sca_2_OUT".scaler_75, "ADS_sca_2_OUT".scaler_76, "ADS_sca_2_OUT".scaler_77, "ADS_sca_2_OUT".scaler_78, "ADS_sca_2_OUT".scaler_79, "ADS_sca_2_OUT".scaler_80, "ADS_sca_2_OUT".scaler_81, "ADS_sca_2_OUT".scaler_82, "ADS_sca_2_OUT".scaler_83, "ADS_sca_2_OUT".scaler_84, "ADS_sca_2_OUT".scaler_85, "ADS_sca_2_OUT".scaler_86, "ADS_sca_2_OUT".scaler_87, "ADS_sca_2_OUT".scaler_88, "ADS_sca_2_OUT".scaler_89, "ADS_sca_2_OUT".scaler_90, "ADS_sca_2_OUT".scaler_91, "ADS_sca_2_OUT".scaler_92, "ADS_sca_2_OUT".scaler_93, "ADS_sca_2_OUT".scaler_94, "ADS_sca_2_OUT".scaler_95, "ADS_sca_2_OUT".scaler_96, "ADS_sca_2_OUT".scaler_97, "ADS_sca_2_OUT".scaler_98, "ADS_sca_2_OUT".scaler_99, "ADS_sca_2_OUT".scaler_100, "ADS_sca_2_OUT".scaler_101 
FROM (SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", (CAST("ADS_imp_1_OUT".impter_2 AS FLOAT) - 0.00653574012116) / 0.985821711919416 AS scaler_2, (CAST("ADS_imp_1_OUT".impter_3 AS FLOAT) - 0.167678271259787) / 4.178932779057346 AS scaler_3, (CAST("ADS_imp_1_OUT".impter_4 AS FLOAT) - -0.055147041735831) / 4.08515606391014 AS scaler_4, (CAST("ADS_imp_1_OUT".impter_5 AS FLOAT) - 0.001521169305187) / 1.058399422125588 AS scaler_5, (CAST("ADS_imp_1_OUT".impter_6 AS FLOAT) - 0.031427601910399) / 0.958502901404168 AS scaler_6, (CAST("ADS_imp_1_OUT".impter_7 AS FLOAT) - 0.026179683178749) / 0.993854807715344 AS scaler_7, (CAST("ADS_imp_1_OUT".impter_8 AS FLOAT) - -0.01125471312212) / 0.995945599636728 AS scaler_8, (CAST("ADS_imp_1_OUT".impter_9 AS FLOAT) - -0.016886211800947) / 1.04542967803467 AS scaler_9, (CAST("ADS_imp_1_OUT".impter_10 AS FLOAT) - -0.027342702964496) / 4.331356741820494 AS scaler_10, (CAST("ADS_imp_1_OUT".impter_11 AS FLOAT) - -0.163701278848221) / 4.458898205934484 AS scaler_11, (CAST("ADS_imp_1_OUT".impter_12 AS FLOAT) - 0.035412250738936) / 1.036616487810755 AS scaler_12, (CAST("ADS_imp_1_OUT".impter_13 AS FLOAT) - -0.028529123475633) / 1.004676205552298 AS scaler_13, (CAST("ADS_imp_1_OUT".impter_14 AS FLOAT) - -0.02674944498961) / 0.999624026710058 AS scaler_14, (CAST("ADS_imp_1_OUT".impter_15 AS FLOAT) - 0.386019822911315) / 4.144804786518486 AS scaler_15, (CAST("ADS_imp_1_OUT".impter_16 AS FLOAT) - 0.016214525731358) / 1.017281296667399 AS scaler_16, (CAST("ADS_imp_1_OUT".impter_17 AS FLOAT) - 0.227237750778393) / 4.367112620179618 AS scaler_17, (CAST("ADS_imp_1_OUT".impter_18 AS FLOAT) - 0.566373456694123) / 4.118156884045948 AS scaler_18, (CAST("ADS_imp_1_OUT".impter_19 AS FLOAT) - 0.277696410616155) / 4.014328975715426 AS scaler_19, (CAST("ADS_imp_1_OUT".impter_20 AS FLOAT) - 0.005994326812351) / 0.972439502321079 AS scaler_20, (CAST("ADS_imp_1_OUT".impter_21 AS FLOAT) - -0.021852534469692) / 0.985687517726374 AS scaler_21, (CAST("ADS_imp_1_OUT".impter_22 AS FLOAT) - -0.028375425917009) / 1.023103469868883 AS scaler_22, (CAST("ADS_imp_1_OUT".impter_23 AS FLOAT) - 0.015164323296292) / 4.353145169181992 AS scaler_23, (CAST("ADS_imp_1_OUT".impter_24 AS FLOAT) - 0.017469134548765) / 1.001805654268762 AS scaler_24, (CAST("ADS_imp_1_OUT".impter_25 AS FLOAT) - 0.034939094494295) / 0.992721649767531 AS scaler_25, (CAST("ADS_imp_1_OUT".impter_26 AS FLOAT) - -0.144361607634394) / 4.467397668863504 AS scaler_26, (CAST("ADS_imp_1_OUT".impter_27 AS FLOAT) - 0.146104677443618) / 4.107342778563649 AS scaler_27, (CAST("ADS_imp_1_OUT".impter_28 AS FLOAT) - 0.067615842373845) / 4.277643036456076 AS scaler_28, (CAST("ADS_imp_1_OUT".impter_29 AS FLOAT) - -0.308368456080408) / 4.030195686259092 AS scaler_29, (CAST("ADS_imp_1_OUT".impter_30 AS FLOAT) - 0.952575301760915) / 4.017302623019134 AS scaler_30, (CAST("ADS_imp_1_OUT".impter_31 AS FLOAT) - -0.058133839101092) / 4.03353195749377 AS scaler_31, (CAST("ADS_imp_1_OUT".impter_32 AS FLOAT) - -0.013124412714915) / 0.955198781566282 AS scaler_32, (CAST("ADS_imp_1_OUT".impter_33 AS FLOAT) - -0.337551254330696) / 4.106571680414476 AS scaler_33, (CAST("ADS_imp_1_OUT".impter_34 AS FLOAT) - 0.039026514593171) / 0.990359225336864 AS scaler_34, (CAST("ADS_imp_1_OUT".impter_35 AS FLOAT) - -0.04029394421318) / 1.015296116761204 AS scaler_35, (CAST("ADS_imp_1_OUT".impter_36 AS FLOAT) - -0.171611885737049) / 4.179229563019858 AS scaler_36, (CAST("ADS_imp_1_OUT".impter_37 AS FLOAT) - 0.01264778686864) / 1.007830761864778 AS scaler_37, (CAST("ADS_imp_1_OUT".impter_38 AS FLOAT) - 0.005193735308515) / 4.297332183672822 AS scaler_38, (CAST("ADS_imp_1_OUT".impter_39 AS FLOAT) - -0.017160876576937) / 1.017378855706664 AS scaler_39, (CAST("ADS_imp_1_OUT".impter_40 AS FLOAT) - 0.045036155997949) / 3.904281136786187 AS scaler_40, (CAST("ADS_imp_1_OUT".impter_41 AS FLOAT) - -0.120358200226363) / 3.984028603622864 AS scaler_41, (CAST("ADS_imp_1_OUT".impter_42 AS FLOAT) - -0.176403922822133) / 4.069314637621373 AS scaler_42, (CAST("ADS_imp_1_OUT".impter_43 AS FLOAT) - -0.015157075927041) / 1.029157389545088 AS scaler_43, (CAST("ADS_imp_1_OUT".impter_44 AS FLOAT) - -0.306874019057808) / 4.347912512213832 AS scaler_44, (CAST("ADS_imp_1_OUT".impter_45 AS FLOAT) - -0.040354580693054) / 4.05064377380716 AS scaler_45, (CAST("ADS_imp_1_OUT".impter_46 AS FLOAT) - -0.0078998151246) / 1.006375476591226 AS scaler_46, (CAST("ADS_imp_1_OUT".impter_47 AS FLOAT) - 0.002647932254171) / 1.002144775585071 AS scaler_47, (CAST("ADS_imp_1_OUT".impter_48 AS FLOAT) - -0.149210845983067) / 4.103402009893949 AS scaler_48, (CAST("ADS_imp_1_OUT".impter_49 AS FLOAT) - 0.248953992368784) / 4.232200380326286 AS scaler_49, (CAST("ADS_imp_1_OUT".impter_50 AS FLOAT) - -0.700424397971851) / 4.220766541993596 AS scaler_50, (CAST("ADS_imp_1_OUT".impter_51 AS FLOAT) - 0.025527673750135) / 1.020674092725397 AS scaler_51, (CAST("ADS_imp_1_OUT".impter_52 AS FLOAT) - -0.156421386850286) / 4.078310671245766 AS scaler_52, (CAST("ADS_imp_1_OUT".impter_53 AS FLOAT) - -0.127838577178112) / 4.247236801364964 AS scaler_53, (CAST("ADS_imp_1_OUT".impter_54 AS FLOAT) - -0.369879523832684) / 4.037675848477055 AS scaler_54, (CAST("ADS_imp_1_OUT".impter_55 AS FLOAT) - 0.04105474558891) / 4.445571371438813 AS scaler_55, (CAST("ADS_imp_1_OUT".impter_56 AS FLOAT) - -0.100474275313592) / 4.045836826444958 AS scaler_56, (CAST("ADS_imp_1_OUT".impter_57 AS FLOAT) - -0.131272886535637) / 4.256606009499922 AS scaler_57, (CAST("ADS_imp_1_OUT".impter_58 AS FLOAT) - 0.368578431365365) / 4.04294690880675 AS scaler_58, (CAST("ADS_imp_1_OUT".impter_59 AS FLOAT) - 0.222812465205969) / 4.252398068764952 AS scaler_59, (CAST("ADS_imp_1_OUT".impter_60 AS FLOAT) - -0.006274087618404) / 1.013175429895288 AS scaler_60, (CAST("ADS_imp_1_OUT".impter_61 AS FLOAT) - 0.014268598957774) / 0.975232456173164 AS scaler_61, (CAST("ADS_imp_1_OUT".impter_62 AS FLOAT) - -0.028545511573861) / 0.99601766121793 AS scaler_62, (CAST("ADS_imp_1_OUT".impter_63 AS FLOAT) - -0.437491831849633) / 4.238759256560504 AS scaler_63, (CAST("ADS_imp_1_OUT".impter_64 AS FLOAT) - -0.368992780587573) / 4.18274187652401 AS scaler_64, (CAST("ADS_imp_1_OUT".impter_65 AS FLOAT) - 0.001169041819319) / 1.043336524991625 AS scaler_65, (CAST("ADS_imp_1_OUT".impter_66 AS FLOAT) - -0.01156487371758) / 4.081504294152238 AS scaler_66, (CAST("ADS_imp_1_OUT".impter_67 AS FLOAT) - -0.043587699896944) / 1.058664519012294 AS scaler_67, (CAST("ADS_imp_1_OUT".impter_68 AS FLOAT) - -0.161863413739017) / 4.259666235165136 AS scaler_68, (CAST("ADS_imp_1_OUT".impter_69 AS FLOAT) - -0.017272641535016) / 1.010305833440296 AS scaler_69, (CAST("ADS_imp_1_OUT".impter_70 AS FLOAT) - -0.364030220368647) / 4.23529048916204 AS scaler_70, (CAST("ADS_imp_1_OUT".impter_71 AS FLOAT) - -0.049273006502403) / 4.310802365306347 AS scaler_71, (CAST("ADS_imp_1_OUT".impter_72 AS FLOAT) - -0.015468512657334) / 1.010660801531323 AS scaler_72, (CAST("ADS_imp_1_OUT".impter_73 AS FLOAT) - -0.191629393512795) / 4.116044965548444 AS scaler_73, (CAST("ADS_imp_1_OUT".impter_74 AS FLOAT) - 0.023782830321603) / 0.997185935238241 AS scaler_74, (CAST("ADS_imp_1_OUT".impter_75 AS FLOAT) - 0.02045479967257) / 0.96404748767937 AS scaler_75, (CAST("ADS_imp_1_OUT".impter_76 AS FLOAT) - -0.173355346593134) / 4.268840083291991 AS scaler_76, (CAST("ADS_imp_1_OUT".impter_77 AS FLOAT) - 0.027582288245763) / 1.002873637150224 AS scaler_77, (CAST("ADS_imp_1_OUT".impter_78 AS FLOAT) - -0.015452336678169) / 0.951796972877656 AS scaler_78, (CAST("ADS_imp_1_OUT".impter_79 AS FLOAT) - -0.042555545773258) / 1.026041980115793 AS scaler_79, (CAST("ADS_imp_1_OUT".impter_80 AS FLOAT) - -0.009425736580365) / 0.981547933162807 AS scaler_80, (CAST("ADS_imp_1_OUT".impter_81 AS FLOAT) - 0.007423677489325) / 1.017144763796163 AS scaler_81, (CAST("ADS_imp_1_OUT".impter_82 AS FLOAT) - 0.049853326436817) / 1.013812175189716 AS scaler_82, (CAST("ADS_imp_1_OUT".impter_83 AS FLOAT) - 0.027960221179443) / 1.004933108786332 AS scaler_83, (CAST("ADS_imp_1_OUT".impter_84 AS FLOAT) - -0.005270502487579) / 1.023325284914829 AS scaler_84, (CAST("ADS_imp_1_OUT".impter_85 AS FLOAT) - -0.053393611774247) / 1.004589191993288 AS scaler_85, (CAST("ADS_imp_1_OUT".impter_86 AS FLOAT) - 0.17162033288561) / 4.24884427578287 AS scaler_86, (CAST("ADS_imp_1_OUT".impter_87 AS FLOAT) - 0.037211997007404) / 4.254048583081736 AS scaler_87, (CAST("ADS_imp_1_OUT".impter_88 AS FLOAT) - 0.018434973330449) / 3.949728840889438 AS scaler_88, (CAST("ADS_imp_1_OUT".impter_89 AS FLOAT) - 0.560521632617363) / 4.331332438981666 AS scaler_89, (CAST("ADS_imp_1_OUT".impter_90 AS FLOAT) - -0.052850462919) / 1.0358397102155 AS scaler_90, (CAST("ADS_imp_1_OUT".impter_91 AS FLOAT) - 0.079390217342441) / 0.969876446027829 AS scaler_91, (CAST("ADS_imp_1_OUT".impter_92 AS FLOAT) - -2.088667163118704) / 15.30221524651991 AS scaler_92, (CAST("ADS_imp_1_OUT".impter_93 AS FLOAT) - -1.083102063895462) / 4.36710902027052 AS scaler_93, (CAST("ADS_imp_1_OUT".impter_94 AS FLOAT) - -0.304702362821244) / 4.204292362348631 AS scaler_94, (CAST("ADS_imp_1_OUT".impter_95 AS FLOAT) - -0.935426259563726) / 15.357005766716696 AS scaler_95, (CAST("ADS_imp_1_OUT".impter_96 AS FLOAT) - -0.098411219927033) / 0.952484869943965 AS scaler_96, (CAST("ADS_imp_1_OUT".impter_97 AS FLOAT) - -0.531653484360343) / 3.977000718240084 AS scaler_97, (CAST("ADS_imp_1_OUT".impter_98 AS FLOAT) - 0.014127422137805) / 0.987925892541105 AS scaler_98, (CAST("ADS_imp_1_OUT".impter_99 AS FLOAT) - -0.012631277412677) / 1.015196444834118 AS scaler_99, (CAST("ADS_imp_1_OUT".impter_100 AS FLOAT) - 0.031286881233113) / 0.989361802421023 AS scaler_100, (CAST("ADS_imp_1_OUT".impter_101 AS FLOAT) - -0.450390515384602) / 4.244700325091398 AS scaler_101 
FROM tmp_20180416233717_v9s9v9_ads_ AS "ADS_imp_1_OUT") AS "ADS_sca_2_OUT") AS "U"

-- Code For temporary table tmp_20180416233717_godvwg_hl_1 part 1/2. Create 


CREATE GLOBAL TEMPORARY TABLE tmp_20180416233717_godvwg_hl_1  (
	"KEY" BIGINT, 
	"NEUR_1_1" FLOAT, 
	"NEUR_1_2" FLOAT, 
	"NEUR_1_3" FLOAT
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table tmp_20180416233717_godvwg_hl_1 part 2/2. Populate

INSERT INTO tmp_20180416233717_godvwg_hl_1 ("KEY", "NEUR_1_1", "NEUR_1_2", "NEUR_1_3") SELECT "U"."KEY", "U"."NEUR_1_1", "U"."NEUR_1_2", "U"."NEUR_1_3" 
FROM (WITH "IL" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CAST("ADS_sca_2_OUT".scaler_2 AS FLOAT) AS scaler_2, CAST("ADS_sca_2_OUT".scaler_3 AS FLOAT) AS scaler_3, CAST("ADS_sca_2_OUT".scaler_4 AS FLOAT) AS scaler_4, CAST("ADS_sca_2_OUT".scaler_5 AS FLOAT) AS scaler_5, CAST("ADS_sca_2_OUT".scaler_6 AS FLOAT) AS scaler_6, CAST("ADS_sca_2_OUT".scaler_7 AS FLOAT) AS scaler_7, CAST("ADS_sca_2_OUT".scaler_8 AS FLOAT) AS scaler_8, CAST("ADS_sca_2_OUT".scaler_9 AS FLOAT) AS scaler_9, CAST("ADS_sca_2_OUT".scaler_10 AS FLOAT) AS scaler_10, CAST("ADS_sca_2_OUT".scaler_11 AS FLOAT) AS scaler_11, CAST("ADS_sca_2_OUT".scaler_12 AS FLOAT) AS scaler_12, CAST("ADS_sca_2_OUT".scaler_13 AS FLOAT) AS scaler_13, CAST("ADS_sca_2_OUT".scaler_14 AS FLOAT) AS scaler_14, CAST("ADS_sca_2_OUT".scaler_15 AS FLOAT) AS scaler_15, CAST("ADS_sca_2_OUT".scaler_16 AS FLOAT) AS scaler_16, CAST("ADS_sca_2_OUT".scaler_17 AS FLOAT) AS scaler_17, CAST("ADS_sca_2_OUT".scaler_18 AS FLOAT) AS scaler_18, CAST("ADS_sca_2_OUT".scaler_19 AS FLOAT) AS scaler_19, CAST("ADS_sca_2_OUT".scaler_20 AS FLOAT) AS scaler_20, CAST("ADS_sca_2_OUT".scaler_21 AS FLOAT) AS scaler_21, CAST("ADS_sca_2_OUT".scaler_22 AS FLOAT) AS scaler_22, CAST("ADS_sca_2_OUT".scaler_23 AS FLOAT) AS scaler_23, CAST("ADS_sca_2_OUT".scaler_24 AS FLOAT) AS scaler_24, CAST("ADS_sca_2_OUT".scaler_25 AS FLOAT) AS scaler_25, CAST("ADS_sca_2_OUT".scaler_26 AS FLOAT) AS scaler_26, CAST("ADS_sca_2_OUT".scaler_27 AS FLOAT) AS scaler_27, CAST("ADS_sca_2_OUT".scaler_28 AS FLOAT) AS scaler_28, CAST("ADS_sca_2_OUT".scaler_29 AS FLOAT) AS scaler_29, CAST("ADS_sca_2_OUT".scaler_30 AS FLOAT) AS scaler_30, CAST("ADS_sca_2_OUT".scaler_31 AS FLOAT) AS scaler_31, CAST("ADS_sca_2_OUT".scaler_32 AS FLOAT) AS scaler_32, CAST("ADS_sca_2_OUT".scaler_33 AS FLOAT) AS scaler_33, CAST("ADS_sca_2_OUT".scaler_34 AS FLOAT) AS scaler_34, CAST("ADS_sca_2_OUT".scaler_35 AS FLOAT) AS scaler_35, CAST("ADS_sca_2_OUT".scaler_36 AS FLOAT) AS scaler_36, CAST("ADS_sca_2_OUT".scaler_37 AS FLOAT) AS scaler_37, CAST("ADS_sca_2_OUT".scaler_38 AS FLOAT) AS scaler_38, CAST("ADS_sca_2_OUT".scaler_39 AS FLOAT) AS scaler_39, CAST("ADS_sca_2_OUT".scaler_40 AS FLOAT) AS scaler_40, CAST("ADS_sca_2_OUT".scaler_41 AS FLOAT) AS scaler_41, CAST("ADS_sca_2_OUT".scaler_42 AS FLOAT) AS scaler_42, CAST("ADS_sca_2_OUT".scaler_43 AS FLOAT) AS scaler_43, CAST("ADS_sca_2_OUT".scaler_44 AS FLOAT) AS scaler_44, CAST("ADS_sca_2_OUT".scaler_45 AS FLOAT) AS scaler_45, CAST("ADS_sca_2_OUT".scaler_46 AS FLOAT) AS scaler_46, CAST("ADS_sca_2_OUT".scaler_47 AS FLOAT) AS scaler_47, CAST("ADS_sca_2_OUT".scaler_48 AS FLOAT) AS scaler_48, CAST("ADS_sca_2_OUT".scaler_49 AS FLOAT) AS scaler_49, CAST("ADS_sca_2_OUT".scaler_50 AS FLOAT) AS scaler_50, CAST("ADS_sca_2_OUT".scaler_51 AS FLOAT) AS scaler_51, CAST("ADS_sca_2_OUT".scaler_52 AS FLOAT) AS scaler_52, CAST("ADS_sca_2_OUT".scaler_53 AS FLOAT) AS scaler_53, CAST("ADS_sca_2_OUT".scaler_54 AS FLOAT) AS scaler_54, CAST("ADS_sca_2_OUT".scaler_55 AS FLOAT) AS scaler_55, CAST("ADS_sca_2_OUT".scaler_56 AS FLOAT) AS scaler_56, CAST("ADS_sca_2_OUT".scaler_57 AS FLOAT) AS scaler_57, CAST("ADS_sca_2_OUT".scaler_58 AS FLOAT) AS scaler_58, CAST("ADS_sca_2_OUT".scaler_59 AS FLOAT) AS scaler_59, CAST("ADS_sca_2_OUT".scaler_60 AS FLOAT) AS scaler_60, CAST("ADS_sca_2_OUT".scaler_61 AS FLOAT) AS scaler_61, CAST("ADS_sca_2_OUT".scaler_62 AS FLOAT) AS scaler_62, CAST("ADS_sca_2_OUT".scaler_63 AS FLOAT) AS scaler_63, CAST("ADS_sca_2_OUT".scaler_64 AS FLOAT) AS scaler_64, CAST("ADS_sca_2_OUT".scaler_65 AS FLOAT) AS scaler_65, CAST("ADS_sca_2_OUT".scaler_66 AS FLOAT) AS scaler_66, CAST("ADS_sca_2_OUT".scaler_67 AS FLOAT) AS scaler_67, CAST("ADS_sca_2_OUT".scaler_68 AS FLOAT) AS scaler_68, CAST("ADS_sca_2_OUT".scaler_69 AS FLOAT) AS scaler_69, CAST("ADS_sca_2_OUT".scaler_70 AS FLOAT) AS scaler_70, CAST("ADS_sca_2_OUT".scaler_71 AS FLOAT) AS scaler_71, CAST("ADS_sca_2_OUT".scaler_72 AS FLOAT) AS scaler_72, CAST("ADS_sca_2_OUT".scaler_73 AS FLOAT) AS scaler_73, CAST("ADS_sca_2_OUT".scaler_74 AS FLOAT) AS scaler_74, CAST("ADS_sca_2_OUT".scaler_75 AS FLOAT) AS scaler_75, CAST("ADS_sca_2_OUT".scaler_76 AS FLOAT) AS scaler_76, CAST("ADS_sca_2_OUT".scaler_77 AS FLOAT) AS scaler_77, CAST("ADS_sca_2_OUT".scaler_78 AS FLOAT) AS scaler_78, CAST("ADS_sca_2_OUT".scaler_79 AS FLOAT) AS scaler_79, CAST("ADS_sca_2_OUT".scaler_80 AS FLOAT) AS scaler_80, CAST("ADS_sca_2_OUT".scaler_81 AS FLOAT) AS scaler_81, CAST("ADS_sca_2_OUT".scaler_82 AS FLOAT) AS scaler_82, CAST("ADS_sca_2_OUT".scaler_83 AS FLOAT) AS scaler_83, CAST("ADS_sca_2_OUT".scaler_84 AS FLOAT) AS scaler_84, CAST("ADS_sca_2_OUT".scaler_85 AS FLOAT) AS scaler_85, CAST("ADS_sca_2_OUT".scaler_86 AS FLOAT) AS scaler_86, CAST("ADS_sca_2_OUT".scaler_87 AS FLOAT) AS scaler_87, CAST("ADS_sca_2_OUT".scaler_88 AS FLOAT) AS scaler_88, CAST("ADS_sca_2_OUT".scaler_89 AS FLOAT) AS scaler_89, CAST("ADS_sca_2_OUT".scaler_90 AS FLOAT) AS scaler_90, CAST("ADS_sca_2_OUT".scaler_91 AS FLOAT) AS scaler_91, CAST("ADS_sca_2_OUT".scaler_92 AS FLOAT) AS scaler_92, CAST("ADS_sca_2_OUT".scaler_93 AS FLOAT) AS scaler_93, CAST("ADS_sca_2_OUT".scaler_94 AS FLOAT) AS scaler_94, CAST("ADS_sca_2_OUT".scaler_95 AS FLOAT) AS scaler_95, CAST("ADS_sca_2_OUT".scaler_96 AS FLOAT) AS scaler_96, CAST("ADS_sca_2_OUT".scaler_97 AS FLOAT) AS scaler_97, CAST("ADS_sca_2_OUT".scaler_98 AS FLOAT) AS scaler_98, CAST("ADS_sca_2_OUT".scaler_99 AS FLOAT) AS scaler_99, CAST("ADS_sca_2_OUT".scaler_100 AS FLOAT) AS scaler_100, CAST("ADS_sca_2_OUT".scaler_101 AS FLOAT) AS scaler_101 
FROM tmp_20180416233717_n1fij1_ads_ AS "ADS_sca_2_OUT"), 
"HL_BA_1" AS 
(SELECT "IL"."KEY" AS "KEY", 1.322350220660396 * "IL".scaler_2 + -0.219667744506754 * "IL".scaler_3 + 0.327608530829967 * "IL".scaler_4 + -0.055901670240354 * "IL".scaler_5 + -0.317082048956382 * "IL".scaler_6 + 0.705690224413422 * "IL".scaler_7 + 0.004407489719138 * "IL".scaler_8 + -1.276259707294311 * "IL".scaler_9 + -1.352217817289263 * "IL".scaler_10 + 0.72419488185592 * "IL".scaler_11 + -0.96002142304388 * "IL".scaler_12 + -0.650504267344513 * "IL".scaler_13 + 0.566113689475035 * "IL".scaler_14 + 1.7059880087681 * "IL".scaler_15 + -0.733730833977874 * "IL".scaler_16 + -0.927995198218499 * "IL".scaler_17 + 0.089035961029712 * "IL".scaler_18 + -3.504267159226781 * "IL".scaler_19 + -0.079117884202199 * "IL".scaler_20 + -0.808939703770599 * "IL".scaler_21 + 0.675174669801654 * "IL".scaler_22 + 0.127043568083904 * "IL".scaler_23 + 1.207963841002321 * "IL".scaler_24 + -0.607034084092936 * "IL".scaler_25 + -0.065226199774361 * "IL".scaler_26 + 1.521694367944972 * "IL".scaler_27 + 0.62293551814397 * "IL".scaler_28 + 0.879331663356953 * "IL".scaler_29 + 0.703953997969089 * "IL".scaler_30 + 1.233264485390139 * "IL".scaler_31 + 0.325624497205259 * "IL".scaler_32 + 1.617591738106389 * "IL".scaler_33 + -1.031592980792302 * "IL".scaler_34 + -0.464284335695477 * "IL".scaler_35 + 0.774783962066292 * "IL".scaler_36 + -0.14846907191439 * "IL".scaler_37 + 1.432744209654578 * "IL".scaler_38 + -1.579582425022699 * "IL".scaler_39 + -0.162478801941874 * "IL".scaler_40 + 1.08072363490126 * "IL".scaler_41 + -0.772440465128726 * "IL".scaler_42 + -0.236570509709918 * "IL".scaler_43 + -0.396338579197694 * "IL".scaler_44 + 1.44458641186605 * "IL".scaler_45 + -0.164227379834896 * "IL".scaler_46 + -0.675636090943229 * "IL".scaler_47 + 2.039913905056213 * "IL".scaler_48 + 0.007459138984097 * "IL".scaler_49 + -1.508917850180054 * "IL".scaler_50 + -0.17747184084702 * "IL".scaler_51 + 0.582718219672586 * "IL".scaler_52 + 0.698453660649123 * "IL".scaler_53 + 1.944641533560954 * "IL".scaler_54 + 0.70973814258747 * "IL".scaler_55 + 1.829587317996552 * "IL".scaler_56 + -1.357149381847146 * "IL".scaler_57 + -0.43285199815504 * "IL".scaler_58 + -0.125804873653293 * "IL".scaler_59 + 0.193180404004245 * "IL".scaler_60 + 1.454724974005336 * "IL".scaler_61 + -0.094169774493339 * "IL".scaler_62 + -0.336897035097473 * "IL".scaler_63 + -0.606560026019488 * "IL".scaler_64 + -0.154463155201556 * "IL".scaler_65 + -1.930179075958463 * "IL".scaler_66 + -0.170475598158442 * "IL".scaler_67 + -2.437940605452806 * "IL".scaler_68 + 0.2667294574655 * "IL".scaler_69 + -2.112649805496722 * "IL".scaler_70 + 1.115272317031328 * "IL".scaler_71 + 0.453302713917488 * "IL".scaler_72 + -0.419364330386647 * "IL".scaler_73 + 0.223122463293734 * "IL".scaler_74 + -0.17214861599167 * "IL".scaler_75 + -0.825797479388576 * "IL".scaler_76 + -2.08143144633168 * "IL".scaler_77 + 0.407007587984413 * "IL".scaler_78 + -0.316848173011678 * "IL".scaler_79 + -0.530930665504452 * "IL".scaler_80 + -0.344597717446773 * "IL".scaler_81 + -0.998679824256438 * "IL".scaler_82 + -0.246203628812607 * "IL".scaler_83 + -0.339814824272237 * "IL".scaler_84 + 0.410252504190962 * "IL".scaler_85 + 1.716312378513615 * "IL".scaler_86 + -0.783138173257395 * "IL".scaler_87 + 2.140493443923328 * "IL".scaler_88 + 0.800651331649322 * "IL".scaler_89 + 0.410071807558338 * "IL".scaler_90 + -1.638553333759003 * "IL".scaler_91 + 0.697730368868325 * "IL".scaler_92 + 0.077234133501796 * "IL".scaler_93 + -0.476320609427861 * "IL".scaler_94 + -0.72102997248577 * "IL".scaler_95 + 0.229792397672293 * "IL".scaler_96 + 0.065332703101341 * "IL".scaler_97 + 0.175180860998963 * "IL".scaler_98 + -0.625966834394746 * "IL".scaler_99 + -0.818075783406535 * "IL".scaler_100 + 1.520138319256743 * "IL".scaler_101 + -0.533669271260134 AS "NEUR_1_1", 1.801676672430818 * "IL".scaler_2 + -2.006666611986961 * "IL".scaler_3 + -0.674037656265508 * "IL".scaler_4 + 0.25115997743561 * "IL".scaler_5 + -1.17786085470532 * "IL".scaler_6 + 0.134985313441905 * "IL".scaler_7 + -1.565784013945877 * "IL".scaler_8 + -1.536987955969787 * "IL".scaler_9 + 0.034253372643888 * "IL".scaler_10 + -0.336929896612146 * "IL".scaler_11 + -1.648926115401625 * "IL".scaler_12 + -0.701284986431276 * "IL".scaler_13 + 0.056504362254064 * "IL".scaler_14 + 1.415594241411506 * "IL".scaler_15 + 0.431399645874417 * "IL".scaler_16 + -0.08234094474437 * "IL".scaler_17 + -0.431694193603082 * "IL".scaler_18 + -0.883058073411142 * "IL".scaler_19 + -0.091360358814147 * "IL".scaler_20 + -0.325244137762271 * "IL".scaler_21 + 0.473798518232273 * "IL".scaler_22 + -0.20004224462832 * "IL".scaler_23 + -0.349150796132096 * "IL".scaler_24 + 0.35695811022362 * "IL".scaler_25 + 0.239797726217969 * "IL".scaler_26 + -0.03198017438139 * "IL".scaler_27 + -0.142153711642753 * "IL".scaler_28 + 0.544404056098116 * "IL".scaler_29 + 1.368038519128603 * "IL".scaler_30 + -1.566782813529952 * "IL".scaler_31 + -2.106055534994465 * "IL".scaler_32 + 0.378038105241702 * "IL".scaler_33 + -0.606639792729373 * "IL".scaler_34 + 0.134694758346672 * "IL".scaler_35 + -2.245050203207661 * "IL".scaler_36 + 0.15123394954887 * "IL".scaler_37 + 0.958377274472598 * "IL".scaler_38 + -0.049241258801844 * "IL".scaler_39 + -1.93985216240682 * "IL".scaler_40 + 0.227314542424266 * "IL".scaler_41 + -0.048706708751157 * "IL".scaler_42 + 1.037504280477903 * "IL".scaler_43 + 0.788488431574579 * "IL".scaler_44 + -1.373923000635893 * "IL".scaler_45 + -0.05807125183061 * "IL".scaler_46 + 0.476201153878113 * "IL".scaler_47 + 1.635980225391968 * "IL".scaler_48 + -0.549685349684166 * "IL".scaler_49 + 0.322425795984856 * "IL".scaler_50 + -0.581440947261811 * "IL".scaler_51 + -1.284433016900932 * "IL".scaler_52 + -0.18753966853174 * "IL".scaler_53 + -0.608257677159551 * "IL".scaler_54 + -0.979691892567498 * "IL".scaler_55 + 0.081916895572656 * "IL".scaler_56 + -0.073294779399085 * "IL".scaler_57 + -0.096327526639897 * "IL".scaler_58 + 0.687598959234115 * "IL".scaler_59 + 1.092461145156093 * "IL".scaler_60 + 0.457359475513149 * "IL".scaler_61 + 0.333394468478898 * "IL".scaler_62 + 0.523237423346825 * "IL".scaler_63 + -1.069093464203339 * "IL".scaler_64 + 0.591648079166115 * "IL".scaler_65 + 0.956584289254494 * "IL".scaler_66 + 1.126682818194074 * "IL".scaler_67 + -0.985895234819335 * "IL".scaler_68 + -1.1342137456227 * "IL".scaler_69 + 1.483598985435456 * "IL".scaler_70 + 0.460144950264162 * "IL".scaler_71 + -0.485890609141002 * "IL".scaler_72 + -0.134532301239896 * "IL".scaler_73 + 0.095894764350775 * "IL".scaler_74 + 0.536105441225268 * "IL".scaler_75 + -0.009059863689683 * "IL".scaler_76 + -0.408148505833309 * "IL".scaler_77 + 1.383180500299652 * "IL".scaler_78 + 0.114155447505795 * "IL".scaler_79 + -0.106844165049581 * "IL".scaler_80 + 0.018531775420403 * "IL".scaler_81 + -1.194325447856753 * "IL".scaler_82 + 0.491739348460194 * "IL".scaler_83 + 0.837614128063065 * "IL".scaler_84 + -0.297170514456112 * "IL".scaler_85 + -1.961024128823538 * "IL".scaler_86 + -0.494630291421038 * "IL".scaler_87 + -0.791925347320194 * "IL".scaler_88 + -1.357595117704672 * "IL".scaler_89 + 0.47264705376111 * "IL".scaler_90 + 0.013415851484471 * "IL".scaler_91 + -0.569806914142935 * "IL".scaler_92 + -0.762297707163185 * "IL".scaler_93 + 1.233186104873857 * "IL".scaler_94 + -0.320194332002529 * "IL".scaler_95 + 0.009423902483964 * "IL".scaler_96 + -2.205959994920568 * "IL".scaler_97 + 0.319763705693915 * "IL".scaler_98 + -1.041885102296618 * "IL".scaler_99 + 0.582097094719459 * "IL".scaler_100 + 0.76809655455103 * "IL".scaler_101 + -1.309355016755159 AS "NEUR_1_2", 0.051530937595667 * "IL".scaler_2 + 0.578752264132345 * "IL".scaler_3 + 1.669830812344027 * "IL".scaler_4 + 0.660556552128277 * "IL".scaler_5 + 0.450233350440387 * "IL".scaler_6 + 0.474644076636554 * "IL".scaler_7 + -0.338701071779091 * "IL".scaler_8 + 0.078198127350957 * "IL".scaler_9 + 0.54595472683134 * "IL".scaler_10 + 1.150314789473064 * "IL".scaler_11 + -0.190443328419382 * "IL".scaler_12 + -0.303993353524988 * "IL".scaler_13 + -0.741268477661336 * "IL".scaler_14 + -0.361764814402612 * "IL".scaler_15 + -0.069763649507509 * "IL".scaler_16 + -2.565072449004827 * "IL".scaler_17 + 0.447693541383047 * "IL".scaler_18 + 0.052324444256724 * "IL".scaler_19 + 0.161749890930945 * "IL".scaler_20 + -0.235287688396425 * "IL".scaler_21 + 0.937127269152204 * "IL".scaler_22 + 0.067295451240198 * "IL".scaler_23 + -0.169217098787408 * "IL".scaler_24 + -0.759537043264435 * "IL".scaler_25 + 0.937949326826868 * "IL".scaler_26 + 0.716178552698997 * "IL".scaler_27 + 1.406098457271954 * "IL".scaler_28 + 0.416079439998166 * "IL".scaler_29 + -0.601526940638538 * "IL".scaler_30 + 2.060907626306533 * "IL".scaler_31 + 0.261787550664882 * "IL".scaler_32 + 0.876020418132295 * "IL".scaler_33 + -0.75552889132531 * "IL".scaler_34 + 0.365289782268699 * "IL".scaler_35 + -2.206740012553044 * "IL".scaler_36 + -0.92677937903633 * "IL".scaler_37 + 1.244465251472752 * "IL".scaler_38 + 1.040961919957091 * "IL".scaler_39 + 2.843536019681685 * "IL".scaler_40 + -0.854844609866786 * "IL".scaler_41 + -1.53022369320359 * "IL".scaler_42 + 0.139747835008157 * "IL".scaler_43 + 0.205017271124711 * "IL".scaler_44 + 1.21715868621836 * "IL".scaler_45 + -0.468152920085425 * "IL".scaler_46 + -0.219316475347197 * "IL".scaler_47 + 0.648581090303316 * "IL".scaler_48 + -1.245304767239162 * "IL".scaler_49 + 0.972334893565585 * "IL".scaler_50 + 0.100566909936857 * "IL".scaler_51 + -0.241688447809841 * "IL".scaler_52 + -2.429386851585866 * "IL".scaler_53 + -0.539195336267498 * "IL".scaler_54 + 2.233695971450088 * "IL".scaler_55 + 0.045993459104425 * "IL".scaler_56 + -0.377203189345781 * "IL".scaler_57 + 1.260736249797151 * "IL".scaler_58 + 0.394277974992276 * "IL".scaler_59 + -0.031375583702833 * "IL".scaler_60 + -0.147484381525623 * "IL".scaler_61 + -0.094018056544418 * "IL".scaler_62 + -2.248992971962676 * "IL".scaler_63 + 0.440402837737438 * "IL".scaler_64 + -0.668950226133838 * "IL".scaler_65 + -0.265359270060748 * "IL".scaler_66 + -0.026214728142738 * "IL".scaler_67 + 2.003557380508998 * "IL".scaler_68 + 0.541058366058474 * "IL".scaler_69 + 0.045788881416 * "IL".scaler_70 + 0.246455831099563 * "IL".scaler_71 + 0.707138264030807 * "IL".scaler_72 + -1.73070719102782 * "IL".scaler_73 + 0.289608421130508 * "IL".scaler_74 + 0.26998334855309 * "IL".scaler_75 + -0.749611703108797 * "IL".scaler_76 + -1.200219707299451 * "IL".scaler_77 + 0.09574957725441 * "IL".scaler_78 + 0.138616073053172 * "IL".scaler_79 + 0.00539603948106 * "IL".scaler_80 + 0.702213941760796 * "IL".scaler_81 + 0.708760735842145 * "IL".scaler_82 + 1.054235766989702 * "IL".scaler_83 + -0.305844472557032 * "IL".scaler_84 + -0.027886698437714 * "IL".scaler_85 + 0.846351170956208 * "IL".scaler_86 + 2.010310306543932 * "IL".scaler_87 + -0.495770058712754 * "IL".scaler_88 + -0.071960917270658 * "IL".scaler_89 + -0.018282698226983 * "IL".scaler_90 + -0.879390538096826 * "IL".scaler_91 + 0.694614318086676 * "IL".scaler_92 + -1.049843206646518 * "IL".scaler_93 + 0.812038463471147 * "IL".scaler_94 + -0.112089701278394 * "IL".scaler_95 + 0.664578711541088 * "IL".scaler_96 + -0.425958544507849 * "IL".scaler_97 + -1.214020344522273 * "IL".scaler_98 + 0.622238277300915 * "IL".scaler_99 + -0.557541417941346 * "IL".scaler_100 + 0.199222017055135 * "IL".scaler_101 + -1.557149669940424 AS "NEUR_1_3" 
FROM "IL"), 
"HL_1_relu" AS 
(SELECT "HL_BA_1"."KEY" AS "KEY", CAST(greatest("HL_BA_1"."NEUR_1_1", 0.0) AS FLOAT) AS "NEUR_1_1", CAST(greatest("HL_BA_1"."NEUR_1_2", 0.0) AS FLOAT) AS "NEUR_1_2", CAST(greatest("HL_BA_1"."NEUR_1_3", 0.0) AS FLOAT) AS "NEUR_1_3" 
FROM "HL_BA_1")
 SELECT "HL_1_relu_1"."KEY", "HL_1_relu_1"."NEUR_1_1", "HL_1_relu_1"."NEUR_1_2", "HL_1_relu_1"."NEUR_1_3" 
FROM (SELECT "HL_1_relu"."KEY" AS "KEY", "HL_1_relu"."NEUR_1_1" AS "NEUR_1_1", "HL_1_relu"."NEUR_1_2" AS "NEUR_1_2", "HL_1_relu"."NEUR_1_3" AS "NEUR_1_3" 
FROM "HL_1_relu") AS "HL_1_relu_1") AS "U"

-- Code For temporary table tmp_20180416233717_sw0afj_ol_s part 1/2. Create 


CREATE GLOBAL TEMPORARY TABLE tmp_20180416233717_sw0afj_ol_s  (
	"KEY" BIGINT, 
	"NEUR_3_1" FLOAT, 
	"NEUR_3_2" FLOAT, 
	"NEUR_3_3" FLOAT, 
	"NEUR_3_4" FLOAT
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table tmp_20180416233717_sw0afj_ol_s part 2/2. Populate

INSERT INTO tmp_20180416233717_sw0afj_ol_s ("KEY", "NEUR_3_1", "NEUR_3_2", "NEUR_3_3", "NEUR_3_4") SELECT "U"."KEY", "U"."NEUR_3_1", "U"."NEUR_3_2", "U"."NEUR_3_3", "U"."NEUR_3_4" 
FROM (WITH "HL_BA_2" AS 
(SELECT "HL_1_relu_1"."KEY" AS "KEY", -0.554567178541417 * "HL_1_relu_1"."NEUR_1_1" + 1.619242047191897 * "HL_1_relu_1"."NEUR_1_2" + 1.121186252645396 * "HL_1_relu_1"."NEUR_1_3" + -1.305408492591481 AS "NEUR_2_1", -3.868231212070886 * "HL_1_relu_1"."NEUR_1_1" + 1.836770812537028 * "HL_1_relu_1"."NEUR_1_2" + 1.989947742419475 * "HL_1_relu_1"."NEUR_1_3" + 0.431333856507958 AS "NEUR_2_2", -3.244014838903928 * "HL_1_relu_1"."NEUR_1_1" + 2.728964481562409 * "HL_1_relu_1"."NEUR_1_2" + -0.002199489220742 * "HL_1_relu_1"."NEUR_1_3" + 0.010465036402367 AS "NEUR_2_3", -1.46976320579049 * "HL_1_relu_1"."NEUR_1_1" + 2.007961553440746 * "HL_1_relu_1"."NEUR_1_2" + -3.822575449152886 * "HL_1_relu_1"."NEUR_1_3" + 0.569688536119987 AS "NEUR_2_4", -0.609339961527872 * "HL_1_relu_1"."NEUR_1_1" + -0.37766425147057 * "HL_1_relu_1"."NEUR_1_2" + -0.672994114221759 * "HL_1_relu_1"."NEUR_1_3" + -0.018078316226986 AS "NEUR_2_5" 
FROM tmp_20180416233717_godvwg_hl_1 AS "HL_1_relu_1"), 
"HL_2_relu" AS 
(SELECT "HL_BA_2"."KEY" AS "KEY", CAST(greatest("HL_BA_2"."NEUR_2_1", 0.0) AS FLOAT) AS "NEUR_2_1", CAST(greatest("HL_BA_2"."NEUR_2_2", 0.0) AS FLOAT) AS "NEUR_2_2", CAST(greatest("HL_BA_2"."NEUR_2_3", 0.0) AS FLOAT) AS "NEUR_2_3", CAST(greatest("HL_BA_2"."NEUR_2_4", 0.0) AS FLOAT) AS "NEUR_2_4", CAST(greatest("HL_BA_2"."NEUR_2_5", 0.0) AS FLOAT) AS "NEUR_2_5" 
FROM "HL_BA_2"), 
"OL_BA" AS 
(SELECT "HL_2_relu"."KEY" AS "KEY", -0.423787909754699 * "HL_2_relu"."NEUR_2_1" + -3.424168157202836 * "HL_2_relu"."NEUR_2_2" + -2.09813777329593 * "HL_2_relu"."NEUR_2_3" + 1.988782809903628 * "HL_2_relu"."NEUR_2_4" + 0.589882358851502 * "HL_2_relu"."NEUR_2_5" + 1.238546359830996 AS "NEUR_3_1", 2.071936786176242 * "HL_2_relu"."NEUR_2_1" + 0.266299724484025 * "HL_2_relu"."NEUR_2_2" + -2.2003988611319 * "HL_2_relu"."NEUR_2_3" + -3.012273009945476 * "HL_2_relu"."NEUR_2_4" + 0.396099996738168 * "HL_2_relu"."NEUR_2_5" + 0.96345560045872 AS "NEUR_3_2", 0.518801080158563 * "HL_2_relu"."NEUR_2_1" + 1.342633438359914 * "HL_2_relu"."NEUR_2_2" + 2.839893274425 * "HL_2_relu"."NEUR_2_3" + -1.567955790134215 * "HL_2_relu"."NEUR_2_4" + 0.663499396012802 * "HL_2_relu"."NEUR_2_5" + -1.021219691563093 AS "NEUR_3_3", -1.550681308774828 * "HL_2_relu"."NEUR_2_1" + 2.179885113619386 * "HL_2_relu"."NEUR_2_2" + 0.666628132878441 * "HL_2_relu"."NEUR_2_3" + 2.31567933339764 * "HL_2_relu"."NEUR_2_4" + -0.485521831887764 * "HL_2_relu"."NEUR_2_5" + -2.498232488380878 AS "NEUR_3_4" 
FROM "HL_2_relu"), 
"OL_softmax" AS 
(SELECT "OL_BA"."KEY" AS "KEY", CAST("OL_BA"."NEUR_3_1" AS FLOAT) AS "NEUR_3_1", CAST("OL_BA"."NEUR_3_2" AS FLOAT) AS "NEUR_3_2", CAST("OL_BA"."NEUR_3_3" AS FLOAT) AS "NEUR_3_3", CAST("OL_BA"."NEUR_3_4" AS FLOAT) AS "NEUR_3_4" 
FROM "OL_BA")
 SELECT "OL_softmax_1"."KEY", "OL_softmax_1"."NEUR_3_1", "OL_softmax_1"."NEUR_3_2", "OL_softmax_1"."NEUR_3_3", "OL_softmax_1"."NEUR_3_4" 
FROM (SELECT "OL_softmax"."KEY" AS "KEY", "OL_softmax"."NEUR_3_1" AS "NEUR_3_1", "OL_softmax"."NEUR_3_2" AS "NEUR_3_2", "OL_softmax"."NEUR_3_3" AS "NEUR_3_3", "OL_softmax"."NEUR_3_4" AS "NEUR_3_4" 
FROM "OL_softmax") AS "OL_softmax_1") AS "U"

-- Model deployment code

WITH orig_cte AS 
(SELECT "OL_softmax_1"."KEY" AS "KEY", "OL_softmax_1"."NEUR_3_1" AS "Score_0", "OL_softmax_1"."NEUR_3_2" AS "Score_1", "OL_softmax_1"."NEUR_3_3" AS "Score_2", "OL_softmax_1"."NEUR_3_4" AS "Score_3", CAST(NULL AS FLOAT) AS "Proba_0", CAST(NULL AS FLOAT) AS "Proba_1", CAST(NULL AS FLOAT) AS "Proba_2", CAST(NULL AS FLOAT) AS "Proba_3", CAST(NULL AS FLOAT) AS "LogProba_0", CAST(NULL AS FLOAT) AS "LogProba_1", CAST(NULL AS FLOAT) AS "LogProba_2", CAST(NULL AS FLOAT) AS "LogProba_3", CAST(NULL AS BIGINT) AS "Decision", CAST(NULL AS FLOAT) AS "DecisionProba" 
FROM tmp_20180416233717_sw0afj_ol_s AS "OL_softmax_1"), 
score_class_union AS 
(SELECT scu."KEY_u" AS "KEY_u", scu."class" AS "class", scu."LogProba" AS "LogProba", scu."Proba" AS "Proba", scu."Score" AS "Score" 
FROM (SELECT orig_cte."KEY" AS "KEY_u", 0 AS "class", orig_cte."LogProba_0" AS "LogProba", orig_cte."Proba_0" AS "Proba", orig_cte."Score_0" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 1 AS "class", orig_cte."LogProba_1" AS "LogProba", orig_cte."Proba_1" AS "Proba", orig_cte."Score_1" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 2 AS "class", orig_cte."LogProba_2" AS "LogProba", orig_cte."Proba_2" AS "Proba", orig_cte."Score_2" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 3 AS "class", orig_cte."LogProba_3" AS "LogProba", orig_cte."Proba_3" AS "Proba", orig_cte."Score_3" AS "Score" 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte."KEY" AS "KEY", orig_cte."Score_0" AS "Score_0", orig_cte."Score_1" AS "Score_1", orig_cte."Score_2" AS "Score_2", orig_cte."Score_3" AS "Score_3", orig_cte."Proba_0" AS "Proba_0", orig_cte."Proba_1" AS "Proba_1", orig_cte."Proba_2" AS "Proba_2", orig_cte."Proba_3" AS "Proba_3", orig_cte."LogProba_0" AS "LogProba_0", orig_cte."LogProba_1" AS "LogProba_1", orig_cte."LogProba_2" AS "LogProba_2", orig_cte."LogProba_3" AS "LogProba_3", orig_cte."Decision" AS "Decision", orig_cte."DecisionProba" AS "DecisionProba", max_select."KEY_m" AS "KEY_m", max_select."max_Score" AS "max_Score" 
FROM orig_cte LEFT OUTER JOIN (SELECT score_class_union."KEY_u" AS "KEY_m", max(score_class_union."Score") AS "max_Score" 
FROM score_class_union GROUP BY score_class_union."KEY_u") AS max_select ON orig_cte."KEY" = max_select."KEY_m"), 
score_soft_max_deltas AS 
(SELECT score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Score_2" AS "Score_2", score_max."Score_3" AS "Score_3", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."Proba_2" AS "Proba_2", score_max."Proba_3" AS "Proba_3", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."LogProba_2" AS "LogProba_2", score_max."LogProba_3" AS "LogProba_3", score_max."Decision" AS "Decision", score_max."DecisionProba" AS "DecisionProba", score_max."KEY_m" AS "KEY_m", score_max."max_Score" AS "max_Score", exp(score_max."Score_0" - score_max."max_Score") AS "exp_delta_Score_0", exp(score_max."Score_1" - score_max."max_Score") AS "exp_delta_Score_1", exp(score_max."Score_2" - score_max."max_Score") AS "exp_delta_Score_2", exp(score_max."Score_3" - score_max."max_Score") AS "exp_delta_Score_3" 
FROM score_max), 
score_class_union_soft AS 
(SELECT soft_scu."KEY" AS "KEY", soft_scu."class" AS "class", soft_scu."exp_delta_Score" AS "exp_delta_Score" 
FROM (SELECT score_soft_max_deltas."KEY" AS "KEY", 0 AS "class", score_soft_max_deltas."exp_delta_Score_0" AS "exp_delta_Score" 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas."KEY" AS "KEY", 1 AS "class", score_soft_max_deltas."exp_delta_Score_1" AS "exp_delta_Score" 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas."KEY" AS "KEY", 2 AS "class", score_soft_max_deltas."exp_delta_Score_2" AS "exp_delta_Score" 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas."KEY" AS "KEY", 3 AS "class", score_soft_max_deltas."exp_delta_Score_3" AS "exp_delta_Score" 
FROM score_soft_max_deltas) AS soft_scu), 
score_soft_max AS 
(SELECT score_soft_max_deltas."KEY" AS "KEY", score_soft_max_deltas."Score_0" AS "Score_0", score_soft_max_deltas."Score_1" AS "Score_1", score_soft_max_deltas."Score_2" AS "Score_2", score_soft_max_deltas."Score_3" AS "Score_3", score_soft_max_deltas."Proba_0" AS "Proba_0", score_soft_max_deltas."Proba_1" AS "Proba_1", score_soft_max_deltas."Proba_2" AS "Proba_2", score_soft_max_deltas."Proba_3" AS "Proba_3", score_soft_max_deltas."LogProba_0" AS "LogProba_0", score_soft_max_deltas."LogProba_1" AS "LogProba_1", score_soft_max_deltas."LogProba_2" AS "LogProba_2", score_soft_max_deltas."LogProba_3" AS "LogProba_3", score_soft_max_deltas."Decision" AS "Decision", score_soft_max_deltas."DecisionProba" AS "DecisionProba", score_soft_max_deltas."KEY_m" AS "KEY_m", score_soft_max_deltas."max_Score" AS "max_Score", score_soft_max_deltas."exp_delta_Score_0" AS "exp_delta_Score_0", score_soft_max_deltas."exp_delta_Score_1" AS "exp_delta_Score_1", score_soft_max_deltas."exp_delta_Score_2" AS "exp_delta_Score_2", score_soft_max_deltas."exp_delta_Score_3" AS "exp_delta_Score_3", sum_exp_t."KEY_sum" AS "KEY_sum", sum_exp_t."sum_ExpDeltaScore" AS "sum_ExpDeltaScore" 
FROM score_soft_max_deltas LEFT OUTER JOIN (SELECT score_class_union_soft."KEY" AS "KEY_sum", sum(score_class_union_soft."exp_delta_Score") AS "sum_ExpDeltaScore" 
FROM score_class_union_soft GROUP BY score_class_union_soft."KEY") AS sum_exp_t ON score_soft_max_deltas."KEY" = sum_exp_t."KEY_sum"), 
union_with_max AS 
(SELECT score_class_union."KEY_u" AS "KEY_u", score_class_union."class" AS "class", score_class_union."LogProba" AS "LogProba", score_class_union."Proba" AS "Proba", score_class_union."Score" AS "Score", score_soft_max."KEY" AS "KEY", score_soft_max."Score_0" AS "Score_0", score_soft_max."Score_1" AS "Score_1", score_soft_max."Score_2" AS "Score_2", score_soft_max."Score_3" AS "Score_3", score_soft_max."Proba_0" AS "Proba_0", score_soft_max."Proba_1" AS "Proba_1", score_soft_max."Proba_2" AS "Proba_2", score_soft_max."Proba_3" AS "Proba_3", score_soft_max."LogProba_0" AS "LogProba_0", score_soft_max."LogProba_1" AS "LogProba_1", score_soft_max."LogProba_2" AS "LogProba_2", score_soft_max."LogProba_3" AS "LogProba_3", score_soft_max."Decision" AS "Decision", score_soft_max."DecisionProba" AS "DecisionProba", score_soft_max."KEY_m" AS "KEY_m", score_soft_max."max_Score" AS "max_Score", score_soft_max."exp_delta_Score_0" AS "exp_delta_Score_0", score_soft_max."exp_delta_Score_1" AS "exp_delta_Score_1", score_soft_max."exp_delta_Score_2" AS "exp_delta_Score_2", score_soft_max."exp_delta_Score_3" AS "exp_delta_Score_3", score_soft_max."KEY_sum" AS "KEY_sum", score_soft_max."sum_ExpDeltaScore" AS "sum_ExpDeltaScore" 
FROM score_class_union LEFT OUTER JOIN score_soft_max ON score_class_union."KEY_u" = score_soft_max."KEY"), 
arg_max_cte AS 
(SELECT score_soft_max."KEY" AS "KEY", score_soft_max."Score_0" AS "Score_0", score_soft_max."Score_1" AS "Score_1", score_soft_max."Score_2" AS "Score_2", score_soft_max."Score_3" AS "Score_3", score_soft_max."Proba_0" AS "Proba_0", score_soft_max."Proba_1" AS "Proba_1", score_soft_max."Proba_2" AS "Proba_2", score_soft_max."Proba_3" AS "Proba_3", score_soft_max."LogProba_0" AS "LogProba_0", score_soft_max."LogProba_1" AS "LogProba_1", score_soft_max."LogProba_2" AS "LogProba_2", score_soft_max."LogProba_3" AS "LogProba_3", score_soft_max."Decision" AS "Decision", score_soft_max."DecisionProba" AS "DecisionProba", score_soft_max."KEY_m" AS "KEY_m", score_soft_max."max_Score" AS "max_Score", score_soft_max."exp_delta_Score_0" AS "exp_delta_Score_0", score_soft_max."exp_delta_Score_1" AS "exp_delta_Score_1", score_soft_max."exp_delta_Score_2" AS "exp_delta_Score_2", score_soft_max."exp_delta_Score_3" AS "exp_delta_Score_3", score_soft_max."KEY_sum" AS "KEY_sum", score_soft_max."sum_ExpDeltaScore" AS "sum_ExpDeltaScore", "arg_max_t_Score"."KEY_Score" AS "KEY_Score", "arg_max_t_Score"."arg_max_Score" AS "arg_max_Score", soft_max_comp."KEY_softmax" AS "KEY_softmax", soft_max_comp."SoftProba_0" AS "SoftProba_0", soft_max_comp."SoftProba_1" AS "SoftProba_1", soft_max_comp."SoftProba_2" AS "SoftProba_2", soft_max_comp."SoftProba_3" AS "SoftProba_3" 
FROM score_soft_max LEFT OUTER JOIN (SELECT union_with_max."KEY" AS "KEY_Score", min(union_with_max."class") AS "arg_max_Score" 
FROM union_with_max 
WHERE union_with_max."Score" >= union_with_max."max_Score" GROUP BY union_with_max."KEY") AS "arg_max_t_Score" ON score_soft_max."KEY" = "arg_max_t_Score"."KEY_Score" LEFT OUTER JOIN (SELECT score_soft_max."KEY" AS "KEY_softmax", score_soft_max."exp_delta_Score_0" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_0", score_soft_max."exp_delta_Score_1" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_1", score_soft_max."exp_delta_Score_2" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_2", score_soft_max."exp_delta_Score_3" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_3" 
FROM score_soft_max) AS soft_max_comp ON soft_max_comp."KEY_softmax" = "arg_max_t_Score"."KEY_Score")
 SELECT arg_max_cte."KEY" AS "KEY", CAST(NULL AS FLOAT) AS "Score_0", CAST(NULL AS FLOAT) AS "Score_1", CAST(NULL AS FLOAT) AS "Score_2", CAST(NULL AS FLOAT) AS "Score_3", arg_max_cte."SoftProba_0" AS "Proba_0", arg_max_cte."SoftProba_1" AS "Proba_1", arg_max_cte."SoftProba_2" AS "Proba_2", arg_max_cte."SoftProba_3" AS "Proba_3", CASE WHEN (arg_max_cte."SoftProba_0" IS NULL OR arg_max_cte."SoftProba_0" > 0.0) THEN ln(arg_max_cte."SoftProba_0") ELSE -1.79769313486231e+308 END AS "LogProba_0", CASE WHEN (arg_max_cte."SoftProba_1" IS NULL OR arg_max_cte."SoftProba_1" > 0.0) THEN ln(arg_max_cte."SoftProba_1") ELSE -1.79769313486231e+308 END AS "LogProba_1", CASE WHEN (arg_max_cte."SoftProba_2" IS NULL OR arg_max_cte."SoftProba_2" > 0.0) THEN ln(arg_max_cte."SoftProba_2") ELSE -1.79769313486231e+308 END AS "LogProba_2", CASE WHEN (arg_max_cte."SoftProba_3" IS NULL OR arg_max_cte."SoftProba_3" > 0.0) THEN ln(arg_max_cte."SoftProba_3") ELSE -1.79769313486231e+308 END AS "LogProba_3", arg_max_cte."arg_max_Score" AS "Decision", greatest(arg_max_cte."SoftProba_0", arg_max_cte."SoftProba_1", arg_max_cte."SoftProba_2", arg_max_cte."SoftProba_3") AS "DecisionProba" 
FROM arg_max_cte