-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2018

-- Model : RandomForestClassifier_Pipeline
-- Dataset : BreastCancer
-- Database : oracle


-- This SQL code can contain one or more statements, to be executed in the order they appear in this file.



-- Code For temporary table 31740_39NFFH_ADS_IMP_1_OUT part 1/2. Create 


CREATE GLOBAL TEMPORARY TABLE "31740_39NFFH_ADS_IMP_1_OUT" (
	"KEY" NUMBER(19) NOT NULL, 
	impter_2 BINARY_DOUBLE, 
	impter_3 BINARY_DOUBLE, 
	impter_4 BINARY_DOUBLE, 
	impter_5 BINARY_DOUBLE, 
	impter_6 BINARY_DOUBLE, 
	impter_7 BINARY_DOUBLE, 
	impter_8 BINARY_DOUBLE, 
	impter_9 BINARY_DOUBLE, 
	impter_10 BINARY_DOUBLE, 
	impter_11 BINARY_DOUBLE, 
	impter_12 BINARY_DOUBLE, 
	impter_13 BINARY_DOUBLE, 
	impter_14 BINARY_DOUBLE, 
	impter_15 BINARY_DOUBLE, 
	impter_16 BINARY_DOUBLE, 
	impter_17 BINARY_DOUBLE, 
	impter_18 BINARY_DOUBLE, 
	impter_19 BINARY_DOUBLE, 
	impter_20 BINARY_DOUBLE, 
	impter_21 BINARY_DOUBLE, 
	impter_22 BINARY_DOUBLE, 
	impter_23 BINARY_DOUBLE, 
	impter_24 BINARY_DOUBLE, 
	impter_25 BINARY_DOUBLE, 
	impter_26 BINARY_DOUBLE, 
	impter_27 BINARY_DOUBLE, 
	impter_28 BINARY_DOUBLE, 
	impter_29 BINARY_DOUBLE, 
	impter_30 BINARY_DOUBLE, 
	impter_31 BINARY_DOUBLE, 
	PRIMARY KEY ("KEY")
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table 31740_39NFFH_ADS_IMP_1_OUT part 2/2. Populate

INSERT INTO "31740_39NFFH_ADS_IMP_1_OUT" ("KEY", impter_2, impter_3, impter_4, impter_5, impter_6, impter_7, impter_8, impter_9, impter_10, impter_11, impter_12, impter_13, impter_14, impter_15, impter_16, impter_17, impter_18, impter_19, impter_20, impter_21, impter_22, impter_23, impter_24, impter_25, impter_26, impter_27, impter_28, impter_29, impter_30, impter_31) SELECT "U"."KEY", "U".impter_2, "U".impter_3, "U".impter_4, "U".impter_5, "U".impter_6, "U".impter_7, "U".impter_8, "U".impter_9, "U".impter_10, "U".impter_11, "U".impter_12, "U".impter_13, "U".impter_14, "U".impter_15, "U".impter_16, "U".impter_17, "U".impter_18, "U".impter_19, "U".impter_20, "U".impter_21, "U".impter_22, "U".impter_23, "U".impter_24, "U".impter_25, "U".impter_26, "U".impter_27, "U".impter_28, "U".impter_29, "U".impter_30, "U".impter_31 
FROM (SELECT "ADS_imp_1_OUT"."KEY", "ADS_imp_1_OUT".impter_2, "ADS_imp_1_OUT".impter_3, "ADS_imp_1_OUT".impter_4, "ADS_imp_1_OUT".impter_5, "ADS_imp_1_OUT".impter_6, "ADS_imp_1_OUT".impter_7, "ADS_imp_1_OUT".impter_8, "ADS_imp_1_OUT".impter_9, "ADS_imp_1_OUT".impter_10, "ADS_imp_1_OUT".impter_11, "ADS_imp_1_OUT".impter_12, "ADS_imp_1_OUT".impter_13, "ADS_imp_1_OUT".impter_14, "ADS_imp_1_OUT".impter_15, "ADS_imp_1_OUT".impter_16, "ADS_imp_1_OUT".impter_17, "ADS_imp_1_OUT".impter_18, "ADS_imp_1_OUT".impter_19, "ADS_imp_1_OUT".impter_20, "ADS_imp_1_OUT".impter_21, "ADS_imp_1_OUT".impter_22, "ADS_imp_1_OUT".impter_23, "ADS_imp_1_OUT".impter_24, "ADS_imp_1_OUT".impter_25, "ADS_imp_1_OUT".impter_26, "ADS_imp_1_OUT".impter_27, "ADS_imp_1_OUT".impter_28, "ADS_imp_1_OUT".impter_29, "ADS_imp_1_OUT".impter_30, "ADS_imp_1_OUT".impter_31 
FROM (SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" IS NULL) THEN 14.077712087912083 ELSE "ADS"."Feature_0" END AS impter_2, CASE WHEN ("ADS"."Feature_1" IS NULL) THEN 19.03905494505495 ELSE "ADS"."Feature_1" END AS impter_3, CASE WHEN ("ADS"."Feature_2" IS NULL) THEN 91.66178021978023 ELSE "ADS"."Feature_2" END AS impter_4, CASE WHEN ("ADS"."Feature_3" IS NULL) THEN 650.9676923076925 ELSE "ADS"."Feature_3" END AS impter_5, CASE WHEN ("ADS"."Feature_4" IS NULL) THEN 0.09642184615384615 ELSE "ADS"."Feature_4" END AS impter_6, CASE WHEN ("ADS"."Feature_5" IS NULL) THEN 0.10441613186813191 ELSE "ADS"."Feature_5" END AS impter_7, CASE WHEN ("ADS"."Feature_6" IS NULL) THEN 0.08826232681318694 ELSE "ADS"."Feature_6" END AS impter_8, CASE WHEN ("ADS"."Feature_7" IS NULL) THEN 0.048516399999999966 ELSE "ADS"."Feature_7" END AS impter_9, CASE WHEN ("ADS"."Feature_8" IS NULL) THEN 0.1815885714285715 ELSE "ADS"."Feature_8" END AS impter_10, CASE WHEN ("ADS"."Feature_9" IS NULL) THEN 0.06294030769230768 ELSE "ADS"."Feature_9" END AS impter_11, CASE WHEN ("ADS"."Feature_10" IS NULL) THEN 0.4099173626373627 ELSE "ADS"."Feature_10" END AS impter_12, CASE WHEN ("ADS"."Feature_11" IS NULL) THEN 1.2170694505494501 ELSE "ADS"."Feature_11" END AS impter_13, CASE WHEN ("ADS"."Feature_12" IS NULL) THEN 2.90524901098901 ELSE "ADS"."Feature_12" END AS impter_14, CASE WHEN ("ADS"."Feature_13" IS NULL) THEN 40.87988571428572 ELSE "ADS"."Feature_13" END AS impter_15, CASE WHEN ("ADS"."Feature_14" IS NULL) THEN 0.007055971428571433 ELSE "ADS"."Feature_14" END AS impter_16, CASE WHEN ("ADS"."Feature_15" IS NULL) THEN 0.025567830769230776 ELSE "ADS"."Feature_15" END AS impter_17, CASE WHEN ("ADS"."Feature_16" IS NULL) THEN 0.03199925626373623 ELSE "ADS"."Feature_16" END AS impter_18, CASE WHEN ("ADS"."Feature_17" IS NULL) THEN 0.011972369230769237 ELSE "ADS"."Feature_17" END AS impter_19, CASE WHEN ("ADS"."Feature_18" IS NULL) THEN 0.020896200000000014 ELSE "ADS"."Feature_18" END AS impter_20, CASE WHEN ("ADS"."Feature_19" IS NULL) THEN 0.0038465518681318647 ELSE "ADS"."Feature_19" END AS impter_21, CASE WHEN ("ADS"."Feature_20" IS NULL) THEN 16.17776483516484 ELSE "ADS"."Feature_20" END AS impter_22, CASE WHEN ("ADS"."Feature_21" IS NULL) THEN 25.26505494505494 ELSE "ADS"."Feature_21" END AS impter_23, CASE WHEN ("ADS"."Feature_22" IS NULL) THEN 106.68156043956041 ELSE "ADS"."Feature_22" END AS impter_24, CASE WHEN ("ADS"."Feature_23" IS NULL) THEN 870.8639560439567 ELSE "ADS"."Feature_23" END AS impter_25, CASE WHEN ("ADS"."Feature_24" IS NULL) THEN 0.1318275604395605 ELSE "ADS"."Feature_24" END AS impter_26, CASE WHEN ("ADS"."Feature_25" IS NULL) THEN 0.24991806593406582 ELSE "ADS"."Feature_25" END AS impter_27, CASE WHEN ("ADS"."Feature_26" IS NULL) THEN 0.2654615934065932 ELSE "ADS"."Feature_26" END AS impter_28, CASE WHEN ("ADS"."Feature_27" IS NULL) THEN 0.11348798021978022 ELSE "ADS"."Feature_27" END AS impter_29, CASE WHEN ("ADS"."Feature_28" IS NULL) THEN 0.2897881318681319 ELSE "ADS"."Feature_28" END AS impter_30, CASE WHEN ("ADS"."Feature_29" IS NULL) THEN 0.08364145054945049 ELSE "ADS"."Feature_29" END AS impter_31 
FROM "BREASTCANCER" "ADS") "ADS_imp_1_OUT") "U"

-- Code For temporary table 31740_OQ7XU1_ADS_SCA_2_OUT part 1/2. Create 


CREATE GLOBAL TEMPORARY TABLE "31740_OQ7XU1_ADS_SCA_2_OUT" (
	"KEY" NUMBER(19) NOT NULL, 
	scaler_2 BINARY_DOUBLE, 
	scaler_3 BINARY_DOUBLE, 
	scaler_4 BINARY_DOUBLE, 
	scaler_5 BINARY_DOUBLE, 
	scaler_6 BINARY_DOUBLE, 
	scaler_7 BINARY_DOUBLE, 
	scaler_8 BINARY_DOUBLE, 
	scaler_9 BINARY_DOUBLE, 
	scaler_10 BINARY_DOUBLE, 
	scaler_11 BINARY_DOUBLE, 
	scaler_12 BINARY_DOUBLE, 
	scaler_13 BINARY_DOUBLE, 
	scaler_14 BINARY_DOUBLE, 
	scaler_15 BINARY_DOUBLE, 
	scaler_16 BINARY_DOUBLE, 
	scaler_17 BINARY_DOUBLE, 
	scaler_18 BINARY_DOUBLE, 
	scaler_19 BINARY_DOUBLE, 
	scaler_20 BINARY_DOUBLE, 
	scaler_21 BINARY_DOUBLE, 
	scaler_22 BINARY_DOUBLE, 
	scaler_23 BINARY_DOUBLE, 
	scaler_24 BINARY_DOUBLE, 
	scaler_25 BINARY_DOUBLE, 
	scaler_26 BINARY_DOUBLE, 
	scaler_27 BINARY_DOUBLE, 
	scaler_28 BINARY_DOUBLE, 
	scaler_29 BINARY_DOUBLE, 
	scaler_30 BINARY_DOUBLE, 
	scaler_31 BINARY_DOUBLE, 
	PRIMARY KEY ("KEY")
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table 31740_OQ7XU1_ADS_SCA_2_OUT part 2/2. Populate

INSERT INTO "31740_OQ7XU1_ADS_SCA_2_OUT" ("KEY", scaler_2, scaler_3, scaler_4, scaler_5, scaler_6, scaler_7, scaler_8, scaler_9, scaler_10, scaler_11, scaler_12, scaler_13, scaler_14, scaler_15, scaler_16, scaler_17, scaler_18, scaler_19, scaler_20, scaler_21, scaler_22, scaler_23, scaler_24, scaler_25, scaler_26, scaler_27, scaler_28, scaler_29, scaler_30, scaler_31) SELECT "U"."KEY", "U".scaler_2, "U".scaler_3, "U".scaler_4, "U".scaler_5, "U".scaler_6, "U".scaler_7, "U".scaler_8, "U".scaler_9, "U".scaler_10, "U".scaler_11, "U".scaler_12, "U".scaler_13, "U".scaler_14, "U".scaler_15, "U".scaler_16, "U".scaler_17, "U".scaler_18, "U".scaler_19, "U".scaler_20, "U".scaler_21, "U".scaler_22, "U".scaler_23, "U".scaler_24, "U".scaler_25, "U".scaler_26, "U".scaler_27, "U".scaler_28, "U".scaler_29, "U".scaler_30, "U".scaler_31 
FROM (SELECT "ADS_sca_2_OUT"."KEY", "ADS_sca_2_OUT".scaler_2, "ADS_sca_2_OUT".scaler_3, "ADS_sca_2_OUT".scaler_4, "ADS_sca_2_OUT".scaler_5, "ADS_sca_2_OUT".scaler_6, "ADS_sca_2_OUT".scaler_7, "ADS_sca_2_OUT".scaler_8, "ADS_sca_2_OUT".scaler_9, "ADS_sca_2_OUT".scaler_10, "ADS_sca_2_OUT".scaler_11, "ADS_sca_2_OUT".scaler_12, "ADS_sca_2_OUT".scaler_13, "ADS_sca_2_OUT".scaler_14, "ADS_sca_2_OUT".scaler_15, "ADS_sca_2_OUT".scaler_16, "ADS_sca_2_OUT".scaler_17, "ADS_sca_2_OUT".scaler_18, "ADS_sca_2_OUT".scaler_19, "ADS_sca_2_OUT".scaler_20, "ADS_sca_2_OUT".scaler_21, "ADS_sca_2_OUT".scaler_22, "ADS_sca_2_OUT".scaler_23, "ADS_sca_2_OUT".scaler_24, "ADS_sca_2_OUT".scaler_25, "ADS_sca_2_OUT".scaler_26, "ADS_sca_2_OUT".scaler_27, "ADS_sca_2_OUT".scaler_28, "ADS_sca_2_OUT".scaler_29, "ADS_sca_2_OUT".scaler_30, "ADS_sca_2_OUT".scaler_31 
FROM (SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", (CAST("ADS_imp_1_OUT".impter_2 AS BINARY_DOUBLE) - 14.077712087912083) / 3.5451492987000814 AS scaler_2, (CAST("ADS_imp_1_OUT".impter_3 AS BINARY_DOUBLE) - 19.03905494505495) / 4.1622971504218205 AS scaler_3, (CAST("ADS_imp_1_OUT".impter_4 AS BINARY_DOUBLE) - 91.66178021978023) / 24.503971943475648 AS scaler_4, (CAST("ADS_imp_1_OUT".impter_5 AS BINARY_DOUBLE) - 650.9676923076925) / 355.702823163891 AS scaler_5, (CAST("ADS_imp_1_OUT".impter_6 AS BINARY_DOUBLE) - 0.09642184615384615) / 0.014197819663072304 AS scaler_6, (CAST("ADS_imp_1_OUT".impter_7 AS BINARY_DOUBLE) - 0.10441613186813191) / 0.05340369466973436 AS scaler_7, (CAST("ADS_imp_1_OUT".impter_8 AS BINARY_DOUBLE) - 0.08826232681318694) / 0.08191200162631372 AS scaler_8, (CAST("ADS_imp_1_OUT".impter_9 AS BINARY_DOUBLE) - 0.048516399999999966) / 0.039373117396730245 AS scaler_9, (CAST("ADS_imp_1_OUT".impter_10 AS BINARY_DOUBLE) - 0.1815885714285715) / 0.02779005832874822 AS scaler_10, (CAST("ADS_imp_1_OUT".impter_11 AS BINARY_DOUBLE) - 0.06294030769230768) / 0.007019354586172742 AS scaler_11, (CAST("ADS_imp_1_OUT".impter_12 AS BINARY_DOUBLE) - 0.4099173626373627) / 0.29120400836827026 AS scaler_12, (CAST("ADS_imp_1_OUT".impter_13 AS BINARY_DOUBLE) - 1.2170694505494501) / 0.5363896396336265 AS scaler_13, (CAST("ADS_imp_1_OUT".impter_14 AS BINARY_DOUBLE) - 2.90524901098901) / 2.1424944299808626 AS scaler_14, (CAST("ADS_imp_1_OUT".impter_15 AS BINARY_DOUBLE) - 40.87988571428572) / 48.224754479577314 AS scaler_15, (CAST("ADS_imp_1_OUT".impter_16 AS BINARY_DOUBLE) - 0.007055971428571433) / 0.002863651656569403 AS scaler_16, (CAST("ADS_imp_1_OUT".impter_17 AS BINARY_DOUBLE) - 0.025567830769230776) / 0.017947013631032318 AS scaler_17, (CAST("ADS_imp_1_OUT".impter_18 AS BINARY_DOUBLE) - 0.03199925626373623) / 0.03166493672136351 AS scaler_18, (CAST("ADS_imp_1_OUT".impter_19 AS BINARY_DOUBLE) - 0.011972369230769237) / 0.006392005589396607 AS scaler_19, (CAST("ADS_imp_1_OUT".impter_20 AS BINARY_DOUBLE) - 0.020896200000000014) / 0.008582910079869234 AS scaler_20, (CAST("ADS_imp_1_OUT".impter_21 AS BINARY_DOUBLE) - 0.0038465518681318647) / 0.0027436075866190575 AS scaler_21, (CAST("ADS_imp_1_OUT".impter_22 AS BINARY_DOUBLE) - 16.17776483516484) / 4.817458816201383 AS scaler_22, (CAST("ADS_imp_1_OUT".impter_23 AS BINARY_DOUBLE) - 25.26505494505494) / 5.92332412866667 AS scaler_23, (CAST("ADS_imp_1_OUT".impter_24 AS BINARY_DOUBLE) - 106.68156043956041) / 33.70385837605481 AS scaler_24, (CAST("ADS_imp_1_OUT".impter_25 AS BINARY_DOUBLE) - 870.8639560439567) / 566.9950559872813 AS scaler_25, (CAST("ADS_imp_1_OUT".impter_26 AS BINARY_DOUBLE) - 0.1318275604395605) / 0.02274820752228878 AS scaler_26, (CAST("ADS_imp_1_OUT".impter_27 AS BINARY_DOUBLE) - 0.24991806593406582) / 0.15246893644279044 AS scaler_27, (CAST("ADS_imp_1_OUT".impter_28 AS BINARY_DOUBLE) - 0.2654615934065932) / 0.20692568678204093 AS scaler_28, (CAST("ADS_imp_1_OUT".impter_29 AS BINARY_DOUBLE) - 0.11348798021978022) / 0.06638141278520703 AS scaler_29, (CAST("ADS_imp_1_OUT".impter_30 AS BINARY_DOUBLE) - 0.2897881318681319) / 0.06220470665051894 AS scaler_30, (CAST("ADS_imp_1_OUT".impter_31 AS BINARY_DOUBLE) - 0.08364145054945049) / 0.01706514580694785 AS scaler_31 
FROM "31740_39NFFH_ADS_IMP_1_OUT" "ADS_imp_1_OUT") "ADS_sca_2_OUT") "U"

-- Code For temporary table 0180416231741_I3CAQF_RF_B0 part 1/2. Create 


CREATE GLOBAL TEMPORARY TABLE "0180416231741_I3CAQF_RF_B0" (
	"KEY" NUMBER(19), 
	"Score_0" BINARY_DOUBLE, 
	"Proba_0" BINARY_DOUBLE, 
	"LogProba_0" BINARY_DOUBLE, 
	"Score_1" BINARY_DOUBLE, 
	"Proba_1" BINARY_DOUBLE, 
	"LogProba_1" BINARY_DOUBLE
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table 0180416231741_I3CAQF_RF_B0 part 2/2. Populate

INSERT INTO "0180416231741_I3CAQF_RF_B0" ("KEY", "Score_0", "Proba_0", "LogProba_0", "Score_1", "Proba_1", "LogProba_1") SELECT "U"."KEY", "U"."Score_0", "U"."Proba_0", "U"."LogProba_0", "U"."Score_1", "U"."Proba_1", "U"."LogProba_1" 
FROM (WITH "DT_node_lookup" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_24 <= 0.19191986322402954) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_28 <= 0.4873170256614685) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_31 <= -1.6710346937179565) THEN 3 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_15 <= -0.04717256873846054) THEN 5 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= 0.35205674171447754) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_26 <= 0.9131462574005127) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_21 <= -0.12941057980060577) THEN 9 ELSE 10 END ELSE 11 END ELSE 12 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_27 <= 0.7688906192779541) THEN 14 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= 2.0544934272766113) THEN 16 ELSE 17 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= -0.27800965309143066) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= 0.4086553752422333) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_20 <= -1.0341713428497314) THEN 21 ELSE 22 END ELSE 23 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= -0.2844163179397583) THEN 25 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= 0.18540486693382263) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_16 <= 0.9203383922576904) THEN 28 ELSE 29 END ELSE 30 END END END END AS node_id_2 
FROM "31740_OQ7XU1_ADS_SCA_2_OUT" "ADS_sca_2_OUT"), 
"DT_node_data" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS BINARY_DOUBLE) AS feature, CAST("Values".threshold AS BINARY_DOUBLE) AS threshold, CAST("Values".count AS BINARY_DOUBLE) AS count, CAST("Values".depth AS BINARY_DOUBLE) AS depth, CAST("Values".parent_id AS BINARY_DOUBLE) AS parent_id, CAST("Values"."Proba_0.0" AS BINARY_DOUBLE) AS "Proba_0.0", CAST("Values"."LogProba_0.0" AS BINARY_DOUBLE) AS "LogProba_0.0", CAST("Values"."Proba_1.0" AS BINARY_DOUBLE) AS "Proba_1.0", CAST("Values"."LogProba_1.0" AS BINARY_DOUBLE) AS "LogProba_1.0", CAST("Values"."Decision" AS BINARY_DOUBLE) AS "Decision", CAST("Values"."DecisionProba" AS BINARY_DOUBLE) AS "DecisionProba" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 170 AS count, 4 AS depth, 4 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 7 AS depth, 8 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 6 AS count, 7 AS depth, 8 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 6 AS depth, 7 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 5 AS depth, 6 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 3 AS depth, 13 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 7 AS count, 4 AS depth, 15 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 4 AS depth, 15 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 4 AS depth, 20 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 4 AS depth, 20 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 3 AS depth, 19 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 3 AS depth, 24 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 28 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 5 AS depth, 27 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 29 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 5 AS depth, 27 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 91 AS count, 4 AS depth, 26 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL) "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".node_id AS node_id, "DT_node_data".feature AS feature, "DT_node_data".threshold AS threshold, "DT_node_data".count AS count, "DT_node_data".depth AS depth, "DT_node_data".parent_id AS parent_id, "DT_node_data"."Proba_0.0" AS "Proba_0.0", "DT_node_data"."LogProba_0.0" AS "LogProba_0.0", "DT_node_data"."Proba_1.0" AS "Proba_1.0", "DT_node_data"."LogProba_1.0" AS "LogProba_1.0", "DT_node_data"."Decision" AS "Decision", "DT_node_data"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".node_id), 
"RF_Model_0" AS 
(SELECT "DT_Output"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output"."Proba_0.0" AS "Proba_0", "DT_Output"."LogProba_0.0" AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output"."Proba_1.0" AS "Proba_1", "DT_Output"."LogProba_1.0" AS "LogProba_1" 
FROM "DT_Output"), 
"DT_node_lookup_1" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_24 <= 0.14296403527259827) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_27 <= 1.7218716144561768) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_31 <= -1.6710346937179565) THEN 3 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 0.30028682947158813) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_15 <= 0.12763391435146332) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_15 <= -0.13198378682136536) THEN 7 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_26 <= 1.3703250885009766) THEN 9 ELSE 10 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_19 <= 0.6214998960494995) THEN 12 ELSE 13 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_15 <= -0.32814860343933105) THEN 15 ELSE 16 END END END ELSE 17 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_22 <= 0.2308759093284607) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_26 <= 0.26913943886756897) THEN 20 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= 0.18310877680778503) THEN 22 ELSE 23 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= -0.3172590732574463) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_19 <= -0.3436118960380554) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_22 <= 0.35853657126426697) THEN 27 ELSE 28 END ELSE 29 END ELSE 30 END END END AS node_id_2 
FROM "31740_OQ7XU1_ADS_SCA_2_OUT" "ADS_sca_2_OUT"), 
"DT_node_data_1" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS BINARY_DOUBLE) AS feature, CAST("Values".threshold AS BINARY_DOUBLE) AS threshold, CAST("Values".count AS BINARY_DOUBLE) AS count, CAST("Values".depth AS BINARY_DOUBLE) AS depth, CAST("Values".parent_id AS BINARY_DOUBLE) AS parent_id, CAST("Values"."Proba_0.0" AS BINARY_DOUBLE) AS "Proba_0.0", CAST("Values"."LogProba_0.0" AS BINARY_DOUBLE) AS "LogProba_0.0", CAST("Values"."Proba_1.0" AS BINARY_DOUBLE) AS "Proba_1.0", CAST("Values"."LogProba_1.0" AS BINARY_DOUBLE) AS "LogProba_1.0", CAST("Values"."Decision" AS BINARY_DOUBLE) AS "Decision", CAST("Values"."DecisionProba" AS BINARY_DOUBLE) AS "DecisionProba" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 169 AS count, 6 AS depth, 6 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 6 AS count, 7 AS depth, 8 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 7 AS depth, 8 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 6 AS depth, 11 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 6 AS depth, 11 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 5 AS depth, 14 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 5 AS depth, 14 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 2 AS depth, 1 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 6 AS count, 3 AS depth, 19 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 6 AS count, 4 AS depth, 21 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 4 AS depth, 21 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 5 AS depth, 26 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 28 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 5 AS depth, 26 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 29 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 4 AS depth, 25 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 80 AS count, 3 AS depth, 24 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL) "Values"), 
"DT_Output_1" AS 
(SELECT "DT_node_lookup_1"."KEY" AS "KEY", "DT_node_lookup_1".node_id_2 AS node_id_2, "DT_node_data_1".node_id AS node_id, "DT_node_data_1".feature AS feature, "DT_node_data_1".threshold AS threshold, "DT_node_data_1".count AS count, "DT_node_data_1".depth AS depth, "DT_node_data_1".parent_id AS parent_id, "DT_node_data_1"."Proba_0.0" AS "Proba_0.0", "DT_node_data_1"."LogProba_0.0" AS "LogProba_0.0", "DT_node_data_1"."Proba_1.0" AS "Proba_1.0", "DT_node_data_1"."LogProba_1.0" AS "LogProba_1.0", "DT_node_data_1"."Decision" AS "Decision", "DT_node_data_1"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup_1" LEFT OUTER JOIN "DT_node_data_1" ON "DT_node_lookup_1".node_id_2 = "DT_node_data_1".node_id), 
"RF_Model_1" AS 
(SELECT "DT_Output_1"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output_1"."Proba_0.0" AS "Proba_0", "DT_Output_1"."LogProba_0.0" AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output_1"."Proba_1.0" AS "Proba_1", "DT_Output_1"."LogProba_1.0" AS "LogProba_1" 
FROM "DT_Output_1"), 
"DT_node_lookup_2" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_24 <= 0.19191986322402954) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_26 <= 1.4472541809082031) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= 1.4717702865600586) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_27 <= 1.225377082824707) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_12 <= 0.017797274515032768) THEN 5 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_22 <= -0.003687594784423709) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_27 <= -1.0988996028900146) THEN 8 ELSE 9 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_24 <= 0.08065662533044815) THEN 11 ELSE 12 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= 0.7056415677070618) THEN 14 ELSE 15 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_20 <= -1.285135269165039) THEN 17 ELSE 18 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_24 <= -0.36261606216430664) THEN 20 ELSE 21 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_24 <= 0.43521544337272644) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= -0.38896846771240234) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_21 <= -0.740467369556427) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_20 <= -0.9229037761688232) THEN 26 ELSE 27 END ELSE 28 END ELSE 29 END ELSE 30 END END AS node_id_2 
FROM "31740_OQ7XU1_ADS_SCA_2_OUT" "ADS_sca_2_OUT"), 
"DT_node_data_2" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS BINARY_DOUBLE) AS feature, CAST("Values".threshold AS BINARY_DOUBLE) AS threshold, CAST("Values".count AS BINARY_DOUBLE) AS count, CAST("Values".depth AS BINARY_DOUBLE) AS depth, CAST("Values".parent_id AS BINARY_DOUBLE) AS parent_id, CAST("Values"."Proba_0.0" AS BINARY_DOUBLE) AS "Proba_0.0", CAST("Values"."LogProba_0.0" AS BINARY_DOUBLE) AS "LogProba_0.0", CAST("Values"."Proba_1.0" AS BINARY_DOUBLE) AS "Proba_1.0", CAST("Values"."LogProba_1.0" AS BINARY_DOUBLE) AS "LogProba_1.0", CAST("Values"."Decision" AS BINARY_DOUBLE) AS "Decision", CAST("Values"."DecisionProba" AS BINARY_DOUBLE) AS "DecisionProba" 
FROM (SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 150 AS count, 5 AS depth, 4 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 7 AS depth, 7 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 14 AS count, 7 AS depth, 7 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 7 AS depth, 10 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 7 AS depth, 10 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 5 AS depth, 13 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 5 AS depth, 13 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 4 AS depth, 16 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 8 AS count, 4 AS depth, 16 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 3 AS depth, 19 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 3 AS depth, 19 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 5 AS depth, 25 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 5 AS depth, 25 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 28 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 4 AS depth, 24 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 29 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 8 AS count, 3 AS depth, 23 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 77 AS count, 2 AS depth, 22 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL) "Values"), 
"DT_Output_2" AS 
(SELECT "DT_node_lookup_2"."KEY" AS "KEY", "DT_node_lookup_2".node_id_2 AS node_id_2, "DT_node_data_2".node_id AS node_id, "DT_node_data_2".feature AS feature, "DT_node_data_2".threshold AS threshold, "DT_node_data_2".count AS count, "DT_node_data_2".depth AS depth, "DT_node_data_2".parent_id AS parent_id, "DT_node_data_2"."Proba_0.0" AS "Proba_0.0", "DT_node_data_2"."LogProba_0.0" AS "LogProba_0.0", "DT_node_data_2"."Proba_1.0" AS "Proba_1.0", "DT_node_data_2"."LogProba_1.0" AS "LogProba_1.0", "DT_node_data_2"."Decision" AS "Decision", "DT_node_data_2"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup_2" LEFT OUTER JOIN "DT_node_data_2" ON "DT_node_lookup_2".node_id_2 = "DT_node_data_2".node_id), 
"RF_Model_2" AS 
(SELECT "DT_Output_2"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output_2"."Proba_0.0" AS "Proba_0", "DT_Output_2"."LogProba_0.0" AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output_2"."Proba_1.0" AS "Proba_1", "DT_Output_2"."LogProba_1.0" AS "LogProba_1" 
FROM "DT_Output_2"), 
"DT_node_lookup_3" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= 0.045493900775909424) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_29 <= 0.5086065530776978) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_29 <= 0.1327483057975769) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_13 <= 1.6414010524749756) THEN 4 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_24 <= -0.6406257748603821) THEN 6 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= -0.8397570848464966) THEN 8 ELSE 9 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= -0.8790420293807983) THEN 11 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_22 <= 0.12501096725463867) THEN 13 ELSE 14 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_23 <= -0.06585067510604858) THEN 16 ELSE 17 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_12 <= -0.5731973648071289) THEN 19 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_29 <= -0.15422962605953217) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_30 <= -0.7634170055389404) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= -0.573326587677002) THEN 23 ELSE 24 END ELSE 25 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_25 <= 0.04768303409218788) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_19 <= 0.3406803607940674) THEN 28 ELSE 29 END ELSE 30 END END END END AS node_id_2 
FROM "31740_OQ7XU1_ADS_SCA_2_OUT" "ADS_sca_2_OUT"), 
"DT_node_data_3" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS BINARY_DOUBLE) AS feature, CAST("Values".threshold AS BINARY_DOUBLE) AS threshold, CAST("Values".count AS BINARY_DOUBLE) AS count, CAST("Values".depth AS BINARY_DOUBLE) AS depth, CAST("Values".parent_id AS BINARY_DOUBLE) AS parent_id, CAST("Values"."Proba_0.0" AS BINARY_DOUBLE) AS "Proba_0.0", CAST("Values"."LogProba_0.0" AS BINARY_DOUBLE) AS "LogProba_0.0", CAST("Values"."Proba_1.0" AS BINARY_DOUBLE) AS "Proba_1.0", CAST("Values"."LogProba_1.0" AS BINARY_DOUBLE) AS "LogProba_1.0", CAST("Values"."Decision" AS BINARY_DOUBLE) AS "Decision", CAST("Values"."DecisionProba" AS BINARY_DOUBLE) AS "DecisionProba" 
FROM (SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 149 AS count, 4 AS depth, 3 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 9 AS count, 5 AS depth, 5 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 6 AS depth, 7 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 6 AS depth, 7 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 4 AS depth, 10 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 10 AS count, 5 AS depth, 12 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 5 AS depth, 12 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 3 AS depth, 15 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 15 AS count, 3 AS depth, 15 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 2 AS depth, 18 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 5 AS depth, 22 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 5 AS depth, 22 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 4 AS depth, 21 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 28 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 5 AS depth, 27 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 29 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 5 AS depth, 27 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 79 AS count, 4 AS depth, 26 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL) "Values"), 
"DT_Output_3" AS 
(SELECT "DT_node_lookup_3"."KEY" AS "KEY", "DT_node_lookup_3".node_id_2 AS node_id_2, "DT_node_data_3".node_id AS node_id, "DT_node_data_3".feature AS feature, "DT_node_data_3".threshold AS threshold, "DT_node_data_3".count AS count, "DT_node_data_3".depth AS depth, "DT_node_data_3".parent_id AS parent_id, "DT_node_data_3"."Proba_0.0" AS "Proba_0.0", "DT_node_data_3"."LogProba_0.0" AS "LogProba_0.0", "DT_node_data_3"."Proba_1.0" AS "Proba_1.0", "DT_node_data_3"."LogProba_1.0" AS "LogProba_1.0", "DT_node_data_3"."Decision" AS "Decision", "DT_node_data_3"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup_3" LEFT OUTER JOIN "DT_node_data_3" ON "DT_node_lookup_3".node_id_2 = "DT_node_data_3".node_id), 
"RF_Model_3" AS 
(SELECT "DT_Output_3"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output_3"."Proba_0.0" AS "Proba_0", "DT_Output_3"."LogProba_0.0" AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output_3"."Proba_1.0" AS "Proba_1", "DT_Output_3"."LogProba_1.0" AS "LogProba_1" 
FROM "DT_Output_3"), 
"DT_node_lookup_4" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 0.3317102789878845) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= 0.33740687370300293) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_15 <= 0.18704324960708618) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_29 <= 0.4837501645088196) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_24 <= 0.17560124397277832) THEN 5 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_26 <= 0.38343414664268494) THEN 7 ELSE 8 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_19 <= 0.04265183210372925) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_24 <= 0.19933739304542542) THEN 11 ELSE 12 END ELSE 13 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_27 <= -0.13726118206977844) THEN 15 ELSE 16 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_25 <= -0.6182839870452881) THEN 18 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_26 <= 0.13286496698856354) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= 0.5425050258636475) THEN 21 ELSE 22 END ELSE 23 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_17 <= -0.4044032692909241) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= 0.5535022020339966) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_26 <= -0.4847661256790161) THEN 27 ELSE 28 END ELSE 29 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_26 <= -1.9275171756744385) THEN 31 ELSE 32 END END END AS node_id_2 
FROM "31740_OQ7XU1_ADS_SCA_2_OUT" "ADS_sca_2_OUT"), 
"DT_node_data_4" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS BINARY_DOUBLE) AS feature, CAST("Values".threshold AS BINARY_DOUBLE) AS threshold, CAST("Values".count AS BINARY_DOUBLE) AS count, CAST("Values".depth AS BINARY_DOUBLE) AS depth, CAST("Values".parent_id AS BINARY_DOUBLE) AS parent_id, CAST("Values"."Proba_0.0" AS BINARY_DOUBLE) AS "Proba_0.0", CAST("Values"."LogProba_0.0" AS BINARY_DOUBLE) AS "LogProba_0.0", CAST("Values"."Proba_1.0" AS BINARY_DOUBLE) AS "Proba_1.0", CAST("Values"."LogProba_1.0" AS BINARY_DOUBLE) AS "LogProba_1.0", CAST("Values"."Decision" AS BINARY_DOUBLE) AS "Decision", CAST("Values"."DecisionProba" AS BINARY_DOUBLE) AS "DecisionProba" 
FROM (SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 178 AS count, 5 AS depth, 4 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 6 AS depth, 6 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 6 AS depth, 6 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 6 AS depth, 10 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 6 AS depth, 10 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 5 AS depth, 9 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 4 AS depth, 14 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 4 AS depth, 14 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 3 AS depth, 17 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 5 AS depth, 20 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 5 AS depth, 20 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 14 AS count, 4 AS depth, 19 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 4 AS depth, 26 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 28 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 4 AS depth, 26 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 29 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 10 AS count, 3 AS depth, 25 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 31 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 3 AS depth, 30 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 32 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 57 AS count, 3 AS depth, 30 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL) "Values"), 
"DT_Output_4" AS 
(SELECT "DT_node_lookup_4"."KEY" AS "KEY", "DT_node_lookup_4".node_id_2 AS node_id_2, "DT_node_data_4".node_id AS node_id, "DT_node_data_4".feature AS feature, "DT_node_data_4".threshold AS threshold, "DT_node_data_4".count AS count, "DT_node_data_4".depth AS depth, "DT_node_data_4".parent_id AS parent_id, "DT_node_data_4"."Proba_0.0" AS "Proba_0.0", "DT_node_data_4"."LogProba_0.0" AS "LogProba_0.0", "DT_node_data_4"."Proba_1.0" AS "Proba_1.0", "DT_node_data_4"."LogProba_1.0" AS "LogProba_1.0", "DT_node_data_4"."Decision" AS "Decision", "DT_node_data_4"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup_4" LEFT OUTER JOIN "DT_node_data_4" ON "DT_node_lookup_4".node_id_2 = "DT_node_data_4".node_id), 
"RF_Model_4" AS 
(SELECT "DT_Output_4"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output_4"."Proba_0.0" AS "Proba_0", "DT_Output_4"."LogProba_0.0" AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output_4"."Proba_1.0" AS "Proba_1", "DT_Output_4"."LogProba_1.0" AS "LogProba_1" 
FROM "DT_Output_4"), 
"DT_node_lookup_5" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_27 <= 0.6232872009277344) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= 0.18785615265369415) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_15 <= 0.2688477039337158) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_22 <= 0.13538987934589386) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_22 <= -0.0898325964808464) THEN 5 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_29 <= 0.32256048917770386) THEN 7 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_16 <= -0.3587976396083832) THEN 9 ELSE 10 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_18 <= -0.3303103446960449) THEN 12 ELSE 13 END END ELSE 14 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_22 <= 0.014994453638792038) THEN 16 ELSE 17 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_15 <= -0.4233279228210449) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= 0.05119248852133751) THEN 20 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_17 <= -0.0784437358379364) THEN 22 ELSE 23 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_24 <= -0.2473473697900772) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_22 <= -0.5018755197525024) THEN 26 ELSE 27 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_17 <= 2.606961250305176) THEN 29 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_27 <= 1.1276521682739258) THEN 31 ELSE 32 END END END END END AS node_id_2 
FROM "31740_OQ7XU1_ADS_SCA_2_OUT" "ADS_sca_2_OUT"), 
"DT_node_data_5" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS BINARY_DOUBLE) AS feature, CAST("Values".threshold AS BINARY_DOUBLE) AS threshold, CAST("Values".count AS BINARY_DOUBLE) AS count, CAST("Values".depth AS BINARY_DOUBLE) AS depth, CAST("Values".parent_id AS BINARY_DOUBLE) AS parent_id, CAST("Values"."Proba_0.0" AS BINARY_DOUBLE) AS "Proba_0.0", CAST("Values"."LogProba_0.0" AS BINARY_DOUBLE) AS "LogProba_0.0", CAST("Values"."Proba_1.0" AS BINARY_DOUBLE) AS "Proba_1.0", CAST("Values"."LogProba_1.0" AS BINARY_DOUBLE) AS "LogProba_1.0", CAST("Values"."Decision" AS BINARY_DOUBLE) AS "Decision", CAST("Values"."DecisionProba" AS BINARY_DOUBLE) AS "DecisionProba" 
FROM (SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 150 AS count, 5 AS depth, 4 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 14 AS count, 6 AS depth, 6 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 7 AS depth, 8 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 7 AS depth, 8 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 7 AS count, 5 AS depth, 11 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 5 AS depth, 11 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 6 AS count, 3 AS depth, 2 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 3 AS depth, 15 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 22 AS count, 3 AS depth, 15 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 3 AS depth, 19 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 4 AS depth, 21 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 6 AS count, 4 AS depth, 21 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 4 AS depth, 25 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 4 AS depth, 25 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 29 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 54 AS count, 4 AS depth, 28 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 31 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 5 AS depth, 30 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 32 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 5 AS depth, 30 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL) "Values"), 
"DT_Output_5" AS 
(SELECT "DT_node_lookup_5"."KEY" AS "KEY", "DT_node_lookup_5".node_id_2 AS node_id_2, "DT_node_data_5".node_id AS node_id, "DT_node_data_5".feature AS feature, "DT_node_data_5".threshold AS threshold, "DT_node_data_5".count AS count, "DT_node_data_5".depth AS depth, "DT_node_data_5".parent_id AS parent_id, "DT_node_data_5"."Proba_0.0" AS "Proba_0.0", "DT_node_data_5"."LogProba_0.0" AS "LogProba_0.0", "DT_node_data_5"."Proba_1.0" AS "Proba_1.0", "DT_node_data_5"."LogProba_1.0" AS "LogProba_1.0", "DT_node_data_5"."Decision" AS "Decision", "DT_node_data_5"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup_5" LEFT OUTER JOIN "DT_node_data_5" ON "DT_node_lookup_5".node_id_2 = "DT_node_data_5".node_id), 
"RF_Model_5" AS 
(SELECT "DT_Output_5"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output_5"."Proba_0.0" AS "Proba_0", "DT_Output_5"."LogProba_0.0" AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output_5"."Proba_1.0" AS "Proba_1", "DT_Output_5"."LogProba_1.0" AS "LogProba_1" 
FROM "DT_Output_5"), 
"DT_node_lookup_6" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= 0.059608764946460724) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_24 <= 0.1770847588777542) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_27 <= 0.8193926811218262) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_12 <= 0.8007535338401794) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_29 <= 0.32256048917770386) THEN 5 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_12 <= -0.19991952180862427) THEN 7 ELSE 8 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= -0.5735350251197815) THEN 10 ELSE 11 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_15 <= -0.5410060882568359) THEN 13 ELSE 14 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_23 <= 0.10297343879938126) THEN 16 ELSE 17 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_26 <= 0.17023053765296936) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_15 <= 0.30264776945114136) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_17 <= 0.2920914590358734) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_22 <= -0.04105169326066971) THEN 22 ELSE 23 END ELSE 24 END ELSE 25 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= -0.9903203248977661) THEN 27 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_13 <= -1.3951973915100098) THEN 29 ELSE 30 END END END END AS node_id_2 
FROM "31740_OQ7XU1_ADS_SCA_2_OUT" "ADS_sca_2_OUT"), 
"DT_node_data_6" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS BINARY_DOUBLE) AS feature, CAST("Values".threshold AS BINARY_DOUBLE) AS threshold, CAST("Values".count AS BINARY_DOUBLE) AS count, CAST("Values".depth AS BINARY_DOUBLE) AS depth, CAST("Values".parent_id AS BINARY_DOUBLE) AS parent_id, CAST("Values"."Proba_0.0" AS BINARY_DOUBLE) AS "Proba_0.0", CAST("Values"."LogProba_0.0" AS BINARY_DOUBLE) AS "LogProba_0.0", CAST("Values"."Proba_1.0" AS BINARY_DOUBLE) AS "Proba_1.0", CAST("Values"."LogProba_1.0" AS BINARY_DOUBLE) AS "LogProba_1.0", CAST("Values"."Decision" AS BINARY_DOUBLE) AS "Decision", CAST("Values"."DecisionProba" AS BINARY_DOUBLE) AS "DecisionProba" 
FROM (SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 174 AS count, 5 AS depth, 4 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 6 AS depth, 6 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 6 AS depth, 6 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 5 AS depth, 9 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 5 AS depth, 9 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 4 AS depth, 12 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 4 AS depth, 12 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 3 AS depth, 15 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 7 AS count, 3 AS depth, 15 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 5 AS depth, 21 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 5 AS depth, 21 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 13 AS count, 4 AS depth, 20 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 17 AS count, 3 AS depth, 19 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 3 AS depth, 26 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 29 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 4 AS depth, 28 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 74 AS count, 4 AS depth, 28 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL) "Values"), 
"DT_Output_6" AS 
(SELECT "DT_node_lookup_6"."KEY" AS "KEY", "DT_node_lookup_6".node_id_2 AS node_id_2, "DT_node_data_6".node_id AS node_id, "DT_node_data_6".feature AS feature, "DT_node_data_6".threshold AS threshold, "DT_node_data_6".count AS count, "DT_node_data_6".depth AS depth, "DT_node_data_6".parent_id AS parent_id, "DT_node_data_6"."Proba_0.0" AS "Proba_0.0", "DT_node_data_6"."LogProba_0.0" AS "LogProba_0.0", "DT_node_data_6"."Proba_1.0" AS "Proba_1.0", "DT_node_data_6"."LogProba_1.0" AS "LogProba_1.0", "DT_node_data_6"."Decision" AS "Decision", "DT_node_data_6"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup_6" LEFT OUTER JOIN "DT_node_data_6" ON "DT_node_lookup_6".node_id_2 = "DT_node_data_6".node_id), 
"RF_Model_6" AS 
(SELECT "DT_Output_6"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output_6"."Proba_0.0" AS "Proba_0", "DT_Output_6"."LogProba_0.0" AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output_6"."Proba_1.0" AS "Proba_1", "DT_Output_6"."LogProba_1.0" AS "LogProba_1" 
FROM "DT_Output_6"), 
"DT_node_lookup_7" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_14 <= -0.004550308454781771) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= 0.14782650768756866) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_30 <= 1.2685835361480713) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_31 <= 2.1452231407165527) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= 0.3905126452445984) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= 0.4313160181045532) THEN 6 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_28 <= -0.033884599804878235) THEN 8 ELSE 9 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= -0.4151434302330017) THEN 11 ELSE 12 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_19 <= -0.04026423394680023) THEN 14 ELSE 15 END END ELSE 16 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= -0.9259442090988159) THEN 18 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_16 <= -0.17738589644432068) THEN 20 ELSE 21 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_15 <= 0.16672173142433167) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= -0.01762058585882187) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_27 <= 0.5963964462280273) THEN 25 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_30 <= 0.8200644254684448) THEN 27 ELSE 28 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_28 <= 0.02531540021300316) THEN 30 ELSE 31 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= -0.2890550494194031) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_13 <= 1.3226029872894287) THEN 34 ELSE 35 END ELSE 36 END END END AS node_id_2 
FROM "31740_OQ7XU1_ADS_SCA_2_OUT" "ADS_sca_2_OUT"), 
"DT_node_data_7" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS BINARY_DOUBLE) AS feature, CAST("Values".threshold AS BINARY_DOUBLE) AS threshold, CAST("Values".count AS BINARY_DOUBLE) AS count, CAST("Values".depth AS BINARY_DOUBLE) AS depth, CAST("Values".parent_id AS BINARY_DOUBLE) AS parent_id, CAST("Values"."Proba_0.0" AS BINARY_DOUBLE) AS "Proba_0.0", CAST("Values"."LogProba_0.0" AS BINARY_DOUBLE) AS "LogProba_0.0", CAST("Values"."Proba_1.0" AS BINARY_DOUBLE) AS "Proba_1.0", CAST("Values"."LogProba_1.0" AS BINARY_DOUBLE) AS "LogProba_1.0", CAST("Values"."Decision" AS BINARY_DOUBLE) AS "Decision", CAST("Values"."DecisionProba" AS BINARY_DOUBLE) AS "DecisionProba" 
FROM (SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 147 AS count, 6 AS depth, 5 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 7 AS depth, 7 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 7 AS depth, 7 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 6 AS depth, 10 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 6 AS depth, 10 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 5 AS depth, 13 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 5 AS depth, 13 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 6 AS count, 3 AS depth, 2 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 3 AS depth, 17 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 11 AS count, 4 AS depth, 19 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 4 AS depth, 19 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 15 AS count, 4 AS depth, 24 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 5 AS depth, 26 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 28 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 5 AS depth, 26 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 4 AS depth, 29 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 31 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 9 AS count, 4 AS depth, 29 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 34 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 4 AS depth, 33 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 35 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 4 AS depth, 33 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 36 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 77 AS count, 3 AS depth, 32 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL) "Values"), 
"DT_Output_7" AS 
(SELECT "DT_node_lookup_7"."KEY" AS "KEY", "DT_node_lookup_7".node_id_2 AS node_id_2, "DT_node_data_7".node_id AS node_id, "DT_node_data_7".feature AS feature, "DT_node_data_7".threshold AS threshold, "DT_node_data_7".count AS count, "DT_node_data_7".depth AS depth, "DT_node_data_7".parent_id AS parent_id, "DT_node_data_7"."Proba_0.0" AS "Proba_0.0", "DT_node_data_7"."LogProba_0.0" AS "LogProba_0.0", "DT_node_data_7"."Proba_1.0" AS "Proba_1.0", "DT_node_data_7"."LogProba_1.0" AS "LogProba_1.0", "DT_node_data_7"."Decision" AS "Decision", "DT_node_data_7"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup_7" LEFT OUTER JOIN "DT_node_data_7" ON "DT_node_lookup_7".node_id_2 = "DT_node_data_7".node_id), 
"RF_Model_7" AS 
(SELECT "DT_Output_7"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output_7"."Proba_0.0" AS "Proba_0", "DT_Output_7"."LogProba_0.0" AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output_7"."Proba_1.0" AS "Proba_1", "DT_Output_7"."LogProba_1.0" AS "LogProba_1" 
FROM "DT_Output_7"), 
"DT_node_lookup_8" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= 0.18498915433883667) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_25 <= 0.3097664415836334) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= 0.07374574989080429) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_12 <= 0.6645946502685547) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_28 <= 0.5474835634231567) THEN 5 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_24 <= 0.010931670665740967) THEN 7 ELSE 8 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= 0.9449936151504517) THEN 10 ELSE 11 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_22 <= -0.18428072333335876) THEN 13 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= 0.21262779831886292) THEN 15 ELSE 16 END END END ELSE 17 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= -0.21147483587265015) THEN 19 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 0.4565880298614502) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_23 <= 0.11141464114189148) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_24 <= 0.3595564365386963) THEN 23 ELSE 24 END ELSE 25 END ELSE 26 END END END AS node_id_2 
FROM "31740_OQ7XU1_ADS_SCA_2_OUT" "ADS_sca_2_OUT"), 
"DT_node_data_8" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS BINARY_DOUBLE) AS feature, CAST("Values".threshold AS BINARY_DOUBLE) AS threshold, CAST("Values".count AS BINARY_DOUBLE) AS count, CAST("Values".depth AS BINARY_DOUBLE) AS depth, CAST("Values".parent_id AS BINARY_DOUBLE) AS parent_id, CAST("Values"."Proba_0.0" AS BINARY_DOUBLE) AS "Proba_0.0", CAST("Values"."LogProba_0.0" AS BINARY_DOUBLE) AS "LogProba_0.0", CAST("Values"."Proba_1.0" AS BINARY_DOUBLE) AS "Proba_1.0", CAST("Values"."LogProba_1.0" AS BINARY_DOUBLE) AS "LogProba_1.0", CAST("Values"."Decision" AS BINARY_DOUBLE) AS "Decision", CAST("Values"."DecisionProba" AS BINARY_DOUBLE) AS "DecisionProba" 
FROM (SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 168 AS count, 5 AS depth, 4 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 6 AS depth, 6 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 6 AS depth, 6 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 5 AS depth, 9 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 5 AS depth, 9 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 4 AS depth, 12 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 5 AS depth, 14 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 5 AS depth, 14 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 2 AS depth, 1 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 2 AS depth, 18 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 9 AS count, 5 AS depth, 22 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 5 AS depth, 22 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 14 AS count, 4 AS depth, 21 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 74 AS count, 3 AS depth, 20 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL) "Values"), 
"DT_Output_8" AS 
(SELECT "DT_node_lookup_8"."KEY" AS "KEY", "DT_node_lookup_8".node_id_2 AS node_id_2, "DT_node_data_8".node_id AS node_id, "DT_node_data_8".feature AS feature, "DT_node_data_8".threshold AS threshold, "DT_node_data_8".count AS count, "DT_node_data_8".depth AS depth, "DT_node_data_8".parent_id AS parent_id, "DT_node_data_8"."Proba_0.0" AS "Proba_0.0", "DT_node_data_8"."LogProba_0.0" AS "LogProba_0.0", "DT_node_data_8"."Proba_1.0" AS "Proba_1.0", "DT_node_data_8"."LogProba_1.0" AS "LogProba_1.0", "DT_node_data_8"."Decision" AS "Decision", "DT_node_data_8"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup_8" LEFT OUTER JOIN "DT_node_data_8" ON "DT_node_lookup_8".node_id_2 = "DT_node_data_8".node_id), 
"RF_Model_8" AS 
(SELECT "DT_Output_8"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output_8"."Proba_0.0" AS "Proba_0", "DT_Output_8"."LogProba_0.0" AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output_8"."Proba_1.0" AS "Proba_1", "DT_Output_8"."LogProba_1.0" AS "LogProba_1" 
FROM "DT_Output_8"), 
"DT_node_lookup_9" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= 0.35828733444213867) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_15 <= 0.15998244285583496) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_22 <= 0.35853657126426697) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= 0.2879635691642761) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_27 <= 0.8305425047874451) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_14 <= -0.005483800545334816) THEN 6 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= 0.021679766476154327) THEN 8 ELSE 9 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_18 <= 0.43188920617103577) THEN 11 ELSE 12 END END ELSE 13 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_12 <= -0.29263800382614136) THEN 15 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= -0.6210456490516663) THEN 17 ELSE 18 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_24 <= -0.42700037360191345) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= -0.7236708402633667) THEN 21 ELSE 22 END ELSE 23 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_24 <= -0.0187385194003582) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_29 <= 0.7195088863372803) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_29 <= 0.46115347743034363) THEN 27 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_30 <= 0.42379218339920044) THEN 29 ELSE 30 END END ELSE 31 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_20 <= -1.2042768001556396) THEN 33 ELSE 34 END END END AS node_id_2 
FROM "31740_OQ7XU1_ADS_SCA_2_OUT" "ADS_sca_2_OUT"), 
"DT_node_data_9" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS BINARY_DOUBLE) AS feature, CAST("Values".threshold AS BINARY_DOUBLE) AS threshold, CAST("Values".count AS BINARY_DOUBLE) AS count, CAST("Values".depth AS BINARY_DOUBLE) AS depth, CAST("Values".parent_id AS BINARY_DOUBLE) AS parent_id, CAST("Values"."Proba_0.0" AS BINARY_DOUBLE) AS "Proba_0.0", CAST("Values"."LogProba_0.0" AS BINARY_DOUBLE) AS "LogProba_0.0", CAST("Values"."Proba_1.0" AS BINARY_DOUBLE) AS "Proba_1.0", CAST("Values"."LogProba_1.0" AS BINARY_DOUBLE) AS "LogProba_1.0", CAST("Values"."Decision" AS BINARY_DOUBLE) AS "Decision", CAST("Values"."DecisionProba" AS BINARY_DOUBLE) AS "DecisionProba" 
FROM (SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 143 AS count, 6 AS depth, 5 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 14 AS count, 7 AS depth, 7 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 7 AS depth, 7 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 6 AS depth, 10 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 6 AS depth, 10 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 4 AS depth, 3 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 4 AS depth, 14 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 5 AS depth, 16 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 5 AS depth, 16 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 4 AS depth, 20 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 4 AS depth, 20 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 20 AS count, 3 AS depth, 19 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 10 AS count, 4 AS depth, 26 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 29 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 5 AS depth, 28 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 5 AS depth, 28 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 31 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 3 AS depth, 25 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 33 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 3 AS depth, 32 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 34 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 72 AS count, 3 AS depth, 32 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL) "Values"), 
"DT_Output_9" AS 
(SELECT "DT_node_lookup_9"."KEY" AS "KEY", "DT_node_lookup_9".node_id_2 AS node_id_2, "DT_node_data_9".node_id AS node_id, "DT_node_data_9".feature AS feature, "DT_node_data_9".threshold AS threshold, "DT_node_data_9".count AS count, "DT_node_data_9".depth AS depth, "DT_node_data_9".parent_id AS parent_id, "DT_node_data_9"."Proba_0.0" AS "Proba_0.0", "DT_node_data_9"."LogProba_0.0" AS "LogProba_0.0", "DT_node_data_9"."Proba_1.0" AS "Proba_1.0", "DT_node_data_9"."LogProba_1.0" AS "LogProba_1.0", "DT_node_data_9"."Decision" AS "Decision", "DT_node_data_9"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup_9" LEFT OUTER JOIN "DT_node_data_9" ON "DT_node_lookup_9".node_id_2 = "DT_node_data_9".node_id), 
"RF_Model_9" AS 
(SELECT "DT_Output_9"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output_9"."Proba_0.0" AS "Proba_0", "DT_Output_9"."LogProba_0.0" AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output_9"."Proba_1.0" AS "Proba_1", "DT_Output_9"."LogProba_1.0" AS "LogProba_1" 
FROM "DT_Output_9")
 SELECT "RF_B0"."KEY", "RF_B0"."Score_0", "RF_B0"."Proba_0", "RF_B0"."LogProba_0", "RF_B0"."Score_1", "RF_B0"."Proba_1", "RF_B0"."LogProba_1" 
FROM (SELECT "RF_esu_0"."KEY" AS "KEY", "RF_esu_0"."Score_0" AS "Score_0", "RF_esu_0"."Proba_0" AS "Proba_0", "RF_esu_0"."LogProba_0" AS "LogProba_0", "RF_esu_0"."Score_1" AS "Score_1", "RF_esu_0"."Proba_1" AS "Proba_1", "RF_esu_0"."LogProba_1" AS "LogProba_1" 
FROM (SELECT "RF_Model_0"."KEY" AS "KEY", "RF_Model_0"."Score_0" AS "Score_0", "RF_Model_0"."Proba_0" AS "Proba_0", "RF_Model_0"."LogProba_0" AS "LogProba_0", "RF_Model_0"."Score_1" AS "Score_1", "RF_Model_0"."Proba_1" AS "Proba_1", "RF_Model_0"."LogProba_1" AS "LogProba_1" 
FROM "RF_Model_0" UNION ALL SELECT "RF_Model_1"."KEY" AS "KEY", "RF_Model_1"."Score_0" AS "Score_0", "RF_Model_1"."Proba_0" AS "Proba_0", "RF_Model_1"."LogProba_0" AS "LogProba_0", "RF_Model_1"."Score_1" AS "Score_1", "RF_Model_1"."Proba_1" AS "Proba_1", "RF_Model_1"."LogProba_1" AS "LogProba_1" 
FROM "RF_Model_1" UNION ALL SELECT "RF_Model_2"."KEY" AS "KEY", "RF_Model_2"."Score_0" AS "Score_0", "RF_Model_2"."Proba_0" AS "Proba_0", "RF_Model_2"."LogProba_0" AS "LogProba_0", "RF_Model_2"."Score_1" AS "Score_1", "RF_Model_2"."Proba_1" AS "Proba_1", "RF_Model_2"."LogProba_1" AS "LogProba_1" 
FROM "RF_Model_2" UNION ALL SELECT "RF_Model_3"."KEY" AS "KEY", "RF_Model_3"."Score_0" AS "Score_0", "RF_Model_3"."Proba_0" AS "Proba_0", "RF_Model_3"."LogProba_0" AS "LogProba_0", "RF_Model_3"."Score_1" AS "Score_1", "RF_Model_3"."Proba_1" AS "Proba_1", "RF_Model_3"."LogProba_1" AS "LogProba_1" 
FROM "RF_Model_3" UNION ALL SELECT "RF_Model_4"."KEY" AS "KEY", "RF_Model_4"."Score_0" AS "Score_0", "RF_Model_4"."Proba_0" AS "Proba_0", "RF_Model_4"."LogProba_0" AS "LogProba_0", "RF_Model_4"."Score_1" AS "Score_1", "RF_Model_4"."Proba_1" AS "Proba_1", "RF_Model_4"."LogProba_1" AS "LogProba_1" 
FROM "RF_Model_4" UNION ALL SELECT "RF_Model_5"."KEY" AS "KEY", "RF_Model_5"."Score_0" AS "Score_0", "RF_Model_5"."Proba_0" AS "Proba_0", "RF_Model_5"."LogProba_0" AS "LogProba_0", "RF_Model_5"."Score_1" AS "Score_1", "RF_Model_5"."Proba_1" AS "Proba_1", "RF_Model_5"."LogProba_1" AS "LogProba_1" 
FROM "RF_Model_5" UNION ALL SELECT "RF_Model_6"."KEY" AS "KEY", "RF_Model_6"."Score_0" AS "Score_0", "RF_Model_6"."Proba_0" AS "Proba_0", "RF_Model_6"."LogProba_0" AS "LogProba_0", "RF_Model_6"."Score_1" AS "Score_1", "RF_Model_6"."Proba_1" AS "Proba_1", "RF_Model_6"."LogProba_1" AS "LogProba_1" 
FROM "RF_Model_6" UNION ALL SELECT "RF_Model_7"."KEY" AS "KEY", "RF_Model_7"."Score_0" AS "Score_0", "RF_Model_7"."Proba_0" AS "Proba_0", "RF_Model_7"."LogProba_0" AS "LogProba_0", "RF_Model_7"."Score_1" AS "Score_1", "RF_Model_7"."Proba_1" AS "Proba_1", "RF_Model_7"."LogProba_1" AS "LogProba_1" 
FROM "RF_Model_7" UNION ALL SELECT "RF_Model_8"."KEY" AS "KEY", "RF_Model_8"."Score_0" AS "Score_0", "RF_Model_8"."Proba_0" AS "Proba_0", "RF_Model_8"."LogProba_0" AS "LogProba_0", "RF_Model_8"."Score_1" AS "Score_1", "RF_Model_8"."Proba_1" AS "Proba_1", "RF_Model_8"."LogProba_1" AS "LogProba_1" 
FROM "RF_Model_8" UNION ALL SELECT "RF_Model_9"."KEY" AS "KEY", "RF_Model_9"."Score_0" AS "Score_0", "RF_Model_9"."Proba_0" AS "Proba_0", "RF_Model_9"."LogProba_0" AS "LogProba_0", "RF_Model_9"."Score_1" AS "Score_1", "RF_Model_9"."Proba_1" AS "Proba_1", "RF_Model_9"."LogProba_1" AS "LogProba_1" 
FROM "RF_Model_9") "RF_esu_0") "RF_B0") "U"

-- Code For temporary table 0180416231741_FTLNP5_RF_B1 part 1/2. Create 


CREATE GLOBAL TEMPORARY TABLE "0180416231741_FTLNP5_RF_B1" (
	"KEY" NUMBER(19), 
	"Score_0" BINARY_DOUBLE, 
	"Proba_0" BINARY_DOUBLE, 
	"LogProba_0" BINARY_DOUBLE, 
	"Score_1" BINARY_DOUBLE, 
	"Proba_1" BINARY_DOUBLE, 
	"LogProba_1" BINARY_DOUBLE
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table 0180416231741_FTLNP5_RF_B1 part 2/2. Populate

INSERT INTO "0180416231741_FTLNP5_RF_B1" ("KEY", "Score_0", "Proba_0", "LogProba_0", "Score_1", "Proba_1", "LogProba_1") SELECT "U"."KEY", "U"."Score_0", "U"."Proba_0", "U"."LogProba_0", "U"."Score_1", "U"."Proba_1", "U"."LogProba_1" 
FROM (WITH "DT_node_lookup_10" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= 0.219234436750412) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_29 <= 0.5176452398300171) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_13 <= 1.6414010524749756) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_31 <= -0.8852224349975586) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_15 <= -0.16371023654937744) THEN 5 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= 0.12635555863380432) THEN 7 ELSE 8 END END ELSE 9 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_13 <= 1.7802927494049072) THEN 11 ELSE 12 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_23 <= -0.2169482707977295) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= 2.023362636566162) THEN 15 ELSE 16 END ELSE 17 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_24 <= 0.19043633341789246) THEN 19 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= -0.35767436027526855) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= -0.7237571477890015) THEN 22 ELSE 23 END ELSE 24 END END END AS node_id_2 
FROM "31740_OQ7XU1_ADS_SCA_2_OUT" "ADS_sca_2_OUT"), 
"DT_node_data_10" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS BINARY_DOUBLE) AS feature, CAST("Values".threshold AS BINARY_DOUBLE) AS threshold, CAST("Values".count AS BINARY_DOUBLE) AS count, CAST("Values".depth AS BINARY_DOUBLE) AS depth, CAST("Values".parent_id AS BINARY_DOUBLE) AS parent_id, CAST("Values"."Proba_0.0" AS BINARY_DOUBLE) AS "Proba_0.0", CAST("Values"."LogProba_0.0" AS BINARY_DOUBLE) AS "LogProba_0.0", CAST("Values"."Proba_1.0" AS BINARY_DOUBLE) AS "Proba_1.0", CAST("Values"."LogProba_1.0" AS BINARY_DOUBLE) AS "LogProba_1.0", CAST("Values"."Decision" AS BINARY_DOUBLE) AS "Decision", CAST("Values"."DecisionProba" AS BINARY_DOUBLE) AS "DecisionProba" 
FROM (SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 30 AS count, 5 AS depth, 4 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 6 AS depth, 6 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 6 AS depth, 6 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 151 AS count, 4 AS depth, 3 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 4 AS depth, 10 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 9 AS count, 4 AS depth, 10 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 4 AS depth, 14 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 4 AS depth, 14 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 20 AS count, 3 AS depth, 13 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 2 AS depth, 18 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 6 AS count, 4 AS depth, 21 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 4 AS depth, 21 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 63 AS count, 3 AS depth, 20 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL) "Values"), 
"DT_Output_10" AS 
(SELECT "DT_node_lookup_10"."KEY" AS "KEY", "DT_node_lookup_10".node_id_2 AS node_id_2, "DT_node_data_10".node_id AS node_id, "DT_node_data_10".feature AS feature, "DT_node_data_10".threshold AS threshold, "DT_node_data_10".count AS count, "DT_node_data_10".depth AS depth, "DT_node_data_10".parent_id AS parent_id, "DT_node_data_10"."Proba_0.0" AS "Proba_0.0", "DT_node_data_10"."LogProba_0.0" AS "LogProba_0.0", "DT_node_data_10"."Proba_1.0" AS "Proba_1.0", "DT_node_data_10"."LogProba_1.0" AS "LogProba_1.0", "DT_node_data_10"."Decision" AS "Decision", "DT_node_data_10"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup_10" LEFT OUTER JOIN "DT_node_data_10" ON "DT_node_lookup_10".node_id_2 = "DT_node_data_10".node_id), 
"RF_Model_10" AS 
(SELECT "DT_Output_10"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output_10"."Proba_0.0" AS "Proba_0", "DT_Output_10"."LogProba_0.0" AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output_10"."Proba_1.0" AS "Proba_1", "DT_Output_10"."LogProba_1.0" AS "LogProba_1" 
FROM "DT_Output_10"), 
"DT_node_lookup_11" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_24 <= 0.1815352886915207) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= 0.20006437599658966) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_15 <= 0.16786222159862518) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_28 <= 0.5027815103530884) THEN 4 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_15 <= -0.5723178386688232) THEN 6 ELSE 7 END END ELSE 8 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_26 <= 1.130745768547058) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_20 <= 3.288954257965088) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= -0.7244694232940674) THEN 12 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= 0.3264426589012146) THEN 14 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= -0.16530120372772217) THEN 16 ELSE 17 END END END ELSE 18 END ELSE 19 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_25 <= 0.3300487995147705) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_28 <= 0.30295130610466003) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 0.2470301389694214) THEN 23 ELSE 24 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_21 <= 1.4159998893737793) THEN 26 ELSE 27 END END ELSE 28 END END AS node_id_2 
FROM "31740_OQ7XU1_ADS_SCA_2_OUT" "ADS_sca_2_OUT"), 
"DT_node_data_11" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS BINARY_DOUBLE) AS feature, CAST("Values".threshold AS BINARY_DOUBLE) AS threshold, CAST("Values".count AS BINARY_DOUBLE) AS count, CAST("Values".depth AS BINARY_DOUBLE) AS depth, CAST("Values".parent_id AS BINARY_DOUBLE) AS parent_id, CAST("Values"."Proba_0.0" AS BINARY_DOUBLE) AS "Proba_0.0", CAST("Values"."LogProba_0.0" AS BINARY_DOUBLE) AS "LogProba_0.0", CAST("Values"."Proba_1.0" AS BINARY_DOUBLE) AS "Proba_1.0", CAST("Values"."LogProba_1.0" AS BINARY_DOUBLE) AS "LogProba_1.0", CAST("Values"."Decision" AS BINARY_DOUBLE) AS "Decision", CAST("Values"."DecisionProba" AS BINARY_DOUBLE) AS "DecisionProba" 
FROM (SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 174 AS count, 4 AS depth, 3 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 5 AS depth, 5 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 5 AS depth, 5 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 3 AS depth, 2 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 5 AS depth, 11 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 13 AS count, 6 AS depth, 13 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 7 AS depth, 15 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 7 AS depth, 15 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 4 AS depth, 10 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 6 AS count, 3 AS depth, 9 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 4 AS depth, 22 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 4 AS depth, 22 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 14 AS count, 4 AS depth, 25 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 4 AS depth, 25 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 28 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 71 AS count, 2 AS depth, 20 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL) "Values"), 
"DT_Output_11" AS 
(SELECT "DT_node_lookup_11"."KEY" AS "KEY", "DT_node_lookup_11".node_id_2 AS node_id_2, "DT_node_data_11".node_id AS node_id, "DT_node_data_11".feature AS feature, "DT_node_data_11".threshold AS threshold, "DT_node_data_11".count AS count, "DT_node_data_11".depth AS depth, "DT_node_data_11".parent_id AS parent_id, "DT_node_data_11"."Proba_0.0" AS "Proba_0.0", "DT_node_data_11"."LogProba_0.0" AS "LogProba_0.0", "DT_node_data_11"."Proba_1.0" AS "Proba_1.0", "DT_node_data_11"."LogProba_1.0" AS "LogProba_1.0", "DT_node_data_11"."Decision" AS "Decision", "DT_node_data_11"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup_11" LEFT OUTER JOIN "DT_node_data_11" ON "DT_node_lookup_11".node_id_2 = "DT_node_data_11".node_id), 
"RF_Model_11" AS 
(SELECT "DT_Output_11"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output_11"."Proba_0.0" AS "Proba_0", "DT_Output_11"."LogProba_0.0" AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output_11"."Proba_1.0" AS "Proba_1", "DT_Output_11"."LogProba_1.0" AS "LogProba_1" 
FROM "DT_Output_11"), 
"DT_node_lookup_12" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= -0.04863620549440384) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_17 <= -0.18180355429649353) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_25 <= -0.055139731615781784) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_28 <= 0.8352680206298828) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= -0.11077448725700378) THEN 7 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_14 <= 0.4986015260219574) THEN 9 ELSE 10 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_18 <= 0.3821496367454529) THEN 12 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_20 <= 3.288954257965088) THEN 14 ELSE 15 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= 0.33208417892456055) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= 0.06269760429859161) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_20 <= -1.154177188873291) THEN 19 ELSE 20 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_28 <= -0.017936842516064644) THEN 22 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_13 <= -0.8249030709266663) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_31 <= 0.317814439535141) THEN 25 ELSE 26 END ELSE 27 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_14 <= -0.5284723043441772) THEN 29 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_31 <= -1.3610460758209229) THEN 31 ELSE 32 END END END END AS node_id_2 
FROM "31740_OQ7XU1_ADS_SCA_2_OUT" "ADS_sca_2_OUT"), 
"DT_node_data_12" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS BINARY_DOUBLE) AS feature, CAST("Values".threshold AS BINARY_DOUBLE) AS threshold, CAST("Values".count AS BINARY_DOUBLE) AS count, CAST("Values".depth AS BINARY_DOUBLE) AS depth, CAST("Values".parent_id AS BINARY_DOUBLE) AS parent_id, CAST("Values"."Proba_0.0" AS BINARY_DOUBLE) AS "Proba_0.0", CAST("Values"."LogProba_0.0" AS BINARY_DOUBLE) AS "LogProba_0.0", CAST("Values"."Proba_1.0" AS BINARY_DOUBLE) AS "Proba_1.0", CAST("Values"."LogProba_1.0" AS BINARY_DOUBLE) AS "LogProba_1.0", CAST("Values"."Decision" AS BINARY_DOUBLE) AS "Decision", CAST("Values"."DecisionProba" AS BINARY_DOUBLE) AS "DecisionProba" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 115 AS count, 3 AS depth, 2 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 3 AS depth, 2 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 47 AS count, 4 AS depth, 6 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 5 AS depth, 8 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 5 AS depth, 8 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 4 AS depth, 11 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 5 AS depth, 13 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 5 AS depth, 13 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 4 AS depth, 18 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 17 AS count, 4 AS depth, 18 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 4 AS depth, 21 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 6 AS depth, 24 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 6 AS depth, 24 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 14 AS count, 5 AS depth, 23 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 29 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 3 AS depth, 28 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 31 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 4 AS depth, 30 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 32 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 78 AS count, 4 AS depth, 30 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL) "Values"), 
"DT_Output_12" AS 
(SELECT "DT_node_lookup_12"."KEY" AS "KEY", "DT_node_lookup_12".node_id_2 AS node_id_2, "DT_node_data_12".node_id AS node_id, "DT_node_data_12".feature AS feature, "DT_node_data_12".threshold AS threshold, "DT_node_data_12".count AS count, "DT_node_data_12".depth AS depth, "DT_node_data_12".parent_id AS parent_id, "DT_node_data_12"."Proba_0.0" AS "Proba_0.0", "DT_node_data_12"."LogProba_0.0" AS "LogProba_0.0", "DT_node_data_12"."Proba_1.0" AS "Proba_1.0", "DT_node_data_12"."LogProba_1.0" AS "LogProba_1.0", "DT_node_data_12"."Decision" AS "Decision", "DT_node_data_12"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup_12" LEFT OUTER JOIN "DT_node_data_12" ON "DT_node_lookup_12".node_id_2 = "DT_node_data_12".node_id), 
"RF_Model_12" AS 
(SELECT "DT_Output_12"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output_12"."Proba_0.0" AS "Proba_0", "DT_Output_12"."LogProba_0.0" AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output_12"."Proba_1.0" AS "Proba_1", "DT_Output_12"."LogProba_1.0" AS "LogProba_1" 
FROM "DT_Output_12"), 
"DT_node_lookup_13" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= 0.059608764946460724) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= 0.5535022020339966) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_22 <= 0.35853657126426697) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_12 <= 1.9320909976959229) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= -1.2280769348144531) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= -0.8811990022659302) THEN 6 ELSE 7 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_14 <= 0.4878663420677185) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_28 <= 0.5474835634231567) THEN 10 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= -0.32742977142333984) THEN 12 ELSE 13 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= -0.42215096950531006) THEN 15 ELSE 16 END END END ELSE 17 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_31 <= -0.699170708656311) THEN 19 ELSE 20 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_13 <= 0.9478753805160522) THEN 22 ELSE 23 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_25 <= -0.18538779020309448) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_30 <= 0.9181277751922607) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_29 <= 1.0629785060882568) THEN 27 ELSE 28 END ELSE 29 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= -0.15890029072761536) THEN 31 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= 0.3884274363517761) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_21 <= -0.5584077835083008) THEN 34 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_16 <= 0.9137035012245178) THEN 36 ELSE 37 END END ELSE 38 END END END END AS node_id_2 
FROM "31740_OQ7XU1_ADS_SCA_2_OUT" "ADS_sca_2_OUT"), 
"DT_node_data_13" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS BINARY_DOUBLE) AS feature, CAST("Values".threshold AS BINARY_DOUBLE) AS threshold, CAST("Values".count AS BINARY_DOUBLE) AS count, CAST("Values".depth AS BINARY_DOUBLE) AS depth, CAST("Values".parent_id AS BINARY_DOUBLE) AS parent_id, CAST("Values"."Proba_0.0" AS BINARY_DOUBLE) AS "Proba_0.0", CAST("Values"."LogProba_0.0" AS BINARY_DOUBLE) AS "LogProba_0.0", CAST("Values"."Proba_1.0" AS BINARY_DOUBLE) AS "Proba_1.0", CAST("Values"."LogProba_1.0" AS BINARY_DOUBLE) AS "LogProba_1.0", CAST("Values"."Decision" AS BINARY_DOUBLE) AS "Decision", CAST("Values"."DecisionProba" AS BINARY_DOUBLE) AS "DecisionProba" 
FROM (SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 6 AS depth, 5 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 6 AS depth, 5 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 167 AS count, 7 AS depth, 9 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 8 AS depth, 11 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 8 AS depth, 11 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 7 AS depth, 14 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 7 AS depth, 14 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 4 AS depth, 3 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 4 AS depth, 18 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 4 AS depth, 18 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 6 AS count, 3 AS depth, 21 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 3 AS depth, 21 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 7 AS count, 4 AS depth, 26 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 28 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 4 AS depth, 26 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 29 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 3 AS depth, 25 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 31 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 3 AS depth, 30 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 34 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 5 AS depth, 33 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 36 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 11 AS count, 6 AS depth, 35 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 37 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 6 AS depth, 35 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 38 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 79 AS count, 4 AS depth, 32 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL) "Values"), 
"DT_Output_13" AS 
(SELECT "DT_node_lookup_13"."KEY" AS "KEY", "DT_node_lookup_13".node_id_2 AS node_id_2, "DT_node_data_13".node_id AS node_id, "DT_node_data_13".feature AS feature, "DT_node_data_13".threshold AS threshold, "DT_node_data_13".count AS count, "DT_node_data_13".depth AS depth, "DT_node_data_13".parent_id AS parent_id, "DT_node_data_13"."Proba_0.0" AS "Proba_0.0", "DT_node_data_13"."LogProba_0.0" AS "LogProba_0.0", "DT_node_data_13"."Proba_1.0" AS "Proba_1.0", "DT_node_data_13"."LogProba_1.0" AS "LogProba_1.0", "DT_node_data_13"."Decision" AS "Decision", "DT_node_data_13"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup_13" LEFT OUTER JOIN "DT_node_data_13" ON "DT_node_lookup_13".node_id_2 = "DT_node_data_13".node_id), 
"RF_Model_13" AS 
(SELECT "DT_Output_13"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output_13"."Proba_0.0" AS "Proba_0", "DT_Output_13"."LogProba_0.0" AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output_13"."Proba_1.0" AS "Proba_1", "DT_Output_13"."LogProba_1.0" AS "LogProba_1" 
FROM "DT_Output_13"), 
"DT_node_lookup_14" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_28 <= 0.011783972382545471) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_25 <= 0.3300487995147705) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= 0.25451338291168213) THEN 3 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_18 <= -0.43436866998672485) THEN 5 ELSE 6 END END ELSE 7 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_25 <= -0.2587570250034332) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= 4.595820426940918) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_26 <= -0.7880867719650269) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= 0.5254135131835938) THEN 14 ELSE 15 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= -0.15890029072761536) THEN 17 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_24 <= 0.22752408683300018) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_29 <= 0.04763410985469818) THEN 20 ELSE 21 END ELSE 22 END END END END END AS node_id_2 
FROM "31740_OQ7XU1_ADS_SCA_2_OUT" "ADS_sca_2_OUT"), 
"DT_node_data_14" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS BINARY_DOUBLE) AS feature, CAST("Values".threshold AS BINARY_DOUBLE) AS threshold, CAST("Values".count AS BINARY_DOUBLE) AS count, CAST("Values".depth AS BINARY_DOUBLE) AS depth, CAST("Values".parent_id AS BINARY_DOUBLE) AS parent_id, CAST("Values"."Proba_0.0" AS BINARY_DOUBLE) AS "Proba_0.0", CAST("Values"."LogProba_0.0" AS BINARY_DOUBLE) AS "LogProba_0.0", CAST("Values"."Proba_1.0" AS BINARY_DOUBLE) AS "Proba_1.0", CAST("Values"."LogProba_1.0" AS BINARY_DOUBLE) AS "LogProba_1.0", CAST("Values"."Decision" AS BINARY_DOUBLE) AS "Decision", CAST("Values"."DecisionProba" AS BINARY_DOUBLE) AS "DecisionProba" 
FROM (SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 165 AS count, 3 AS depth, 2 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 4 AS depth, 4 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 5 AS count, 4 AS depth, 4 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 11 AS count, 2 AS depth, 1 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 23 AS count, 3 AS depth, 9 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 3 AS depth, 9 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 4 AS depth, 13 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 4 AS depth, 13 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 4 AS depth, 16 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 6 AS depth, 19 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 10 AS count, 6 AS depth, 19 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 75 AS count, 5 AS depth, 18 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL) "Values"), 
"DT_Output_14" AS 
(SELECT "DT_node_lookup_14"."KEY" AS "KEY", "DT_node_lookup_14".node_id_2 AS node_id_2, "DT_node_data_14".node_id AS node_id, "DT_node_data_14".feature AS feature, "DT_node_data_14".threshold AS threshold, "DT_node_data_14".count AS count, "DT_node_data_14".depth AS depth, "DT_node_data_14".parent_id AS parent_id, "DT_node_data_14"."Proba_0.0" AS "Proba_0.0", "DT_node_data_14"."LogProba_0.0" AS "LogProba_0.0", "DT_node_data_14"."Proba_1.0" AS "Proba_1.0", "DT_node_data_14"."LogProba_1.0" AS "LogProba_1.0", "DT_node_data_14"."Decision" AS "Decision", "DT_node_data_14"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup_14" LEFT OUTER JOIN "DT_node_data_14" ON "DT_node_lookup_14".node_id_2 = "DT_node_data_14".node_id), 
"RF_Model_14" AS 
(SELECT "DT_Output_14"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output_14"."Proba_0.0" AS "Proba_0", "DT_Output_14"."LogProba_0.0" AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output_14"."Proba_1.0" AS "Proba_1", "DT_Output_14"."LogProba_1.0" AS "LogProba_1" 
FROM "DT_Output_14"), 
"DT_node_lookup_15" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= 0.27425867319107056) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_31 <= 1.0230530500411987) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_28 <= 0.25389987230300903) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_31 <= -0.8485981225967407) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_24 <= -0.6335049271583557) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_12 <= 0.4647347927093506) THEN 6 ELSE 7 END ELSE 8 END ELSE 9 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_15 <= -0.14390712976455688) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_30 <= 0.5845516920089722) THEN 12 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_23 <= 0.1105705201625824) THEN 14 ELSE 15 END END ELSE 16 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_22 <= -0.30052459239959717) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_20 <= 3.288954257965088) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_26 <= 3.185852527618408) THEN 20 ELSE 21 END ELSE 22 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_23 <= -0.025332890450954437) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_31 <= 2.385478973388672) THEN 25 ELSE 26 END ELSE 27 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_13 <= -1.3000240325927734) THEN 29 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_28 <= -0.3255351781845093) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= 0.5335863828659058) THEN 32 ELSE 33 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_14 <= -0.5382739901542664) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 0.4280211925506592) THEN 36 ELSE 37 END ELSE 38 END END END END AS node_id_2 
FROM "31740_OQ7XU1_ADS_SCA_2_OUT" "ADS_sca_2_OUT"), 
"DT_node_data_15" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS BINARY_DOUBLE) AS feature, CAST("Values".threshold AS BINARY_DOUBLE) AS threshold, CAST("Values".count AS BINARY_DOUBLE) AS count, CAST("Values".depth AS BINARY_DOUBLE) AS depth, CAST("Values".parent_id AS BINARY_DOUBLE) AS parent_id, CAST("Values"."Proba_0.0" AS BINARY_DOUBLE) AS "Proba_0.0", CAST("Values"."LogProba_0.0" AS BINARY_DOUBLE) AS "LogProba_0.0", CAST("Values"."Proba_1.0" AS BINARY_DOUBLE) AS "Proba_1.0", CAST("Values"."LogProba_1.0" AS BINARY_DOUBLE) AS "LogProba_1.0", CAST("Values"."Decision" AS BINARY_DOUBLE) AS "Decision", CAST("Values"."DecisionProba" AS BINARY_DOUBLE) AS "DecisionProba" 
FROM (SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 16 AS count, 6 AS depth, 5 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 6 AS depth, 5 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 30 AS count, 5 AS depth, 4 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 128 AS count, 4 AS depth, 3 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 10 AS count, 5 AS depth, 11 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 6 AS depth, 13 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 2 AS count, 6 AS depth, 13 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 3 AS count, 4 AS depth, 10 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 11 AS count, 5 AS depth, 19 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 5 AS depth, 19 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 4 AS depth, 18 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 5 AS depth, 24 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 5 AS depth, 24 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 16 AS count, 4 AS depth, 23 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 29 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 4 AS count, 2 AS depth, 28 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 32 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 4 AS depth, 31 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 33 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 4 AS depth, 31 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 36 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 5 AS depth, 35 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 37 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS count, 5 AS depth, 35 AS parent_id, 0.0 AS "Proba_0.0", -BINARY_DOUBLE_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL UNION ALL SELECT 38 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 76 AS count, 4 AS depth, 34 AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_DOUBLE_INFINITY AS "LogProba_1.0", 0.0 AS "Decision", 1.0 AS "DecisionProba" FROM DUAL) "Values"), 
"DT_Output_15" AS 
(SELECT "DT_node_lookup_15"."KEY" AS "KEY", "DT_node_lookup_15".node_id_2 AS node_id_2, "DT_node_data_15".node_id AS node_id, "DT_node_data_15".feature AS feature, "DT_node_data_15".threshold AS threshold, "DT_node_data_15".count AS count, "DT_node_data_15".depth AS depth, "DT_node_data_15".parent_id AS parent_id, "DT_node_data_15"."Proba_0.0" AS "Proba_0.0", "DT_node_data_15"."LogProba_0.0" AS "LogProba_0.0", "DT_node_data_15"."Proba_1.0" AS "Proba_1.0", "DT_node_data_15"."LogProba_1.0" AS "LogProba_1.0", "DT_node_data_15"."Decision" AS "Decision", "DT_node_data_15"."DecisionProba" AS "DecisionProba" 
FROM "DT_node_lookup_15" LEFT OUTER JOIN "DT_node_data_15" ON "DT_node_lookup_15".node_id_2 = "DT_node_data_15".node_id), 
"RF_Model_15" AS 
(SELECT "DT_Output_15"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output_15"."Proba_0.0" AS "Proba_0", "DT_Output_15"."LogProba_0.0" AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output_15"."Proba_1.0" AS "Proba_1", "DT_Output_15"."LogProba_1.0" AS "LogProba_1" 
FROM "DT_Output_15")
 SELECT "RF_B1"."KEY", "RF_B1"."Score_0", "RF_B1"."Proba_0", "RF_B1"."LogProba_0", "RF_B1"."Score_1", "RF_B1"."Proba_1", "RF_B1"."LogProba_1" 
FROM (SELECT "RF_esu_1"."KEY" AS "KEY", "RF_esu_1"."Score_0" AS "Score_0", "RF_esu_1"."Proba_0" AS "Proba_0", "RF_esu_1"."LogProba_0" AS "LogProba_0", "RF_esu_1"."Score_1" AS "Score_1", "RF_esu_1"."Proba_1" AS "Proba_1", "RF_esu_1"."LogProba_1" AS "LogProba_1" 
FROM (SELECT "RF_Model_10"."KEY" AS "KEY", "RF_Model_10"."Score_0" AS "Score_0", "RF_Model_10"."Proba_0" AS "Proba_0", "RF_Model_10"."LogProba_0" AS "LogProba_0", "RF_Model_10"."Score_1" AS "Score_1", "RF_Model_10"."Proba_1" AS "Proba_1", "RF_Model_10"."LogProba_1" AS "LogProba_1" 
FROM "RF_Model_10" UNION ALL SELECT "RF_Model_11"."KEY" AS "KEY", "RF_Model_11"."Score_0" AS "Score_0", "RF_Model_11"."Proba_0" AS "Proba_0", "RF_Model_11"."LogProba_0" AS "LogProba_0", "RF_Model_11"."Score_1" AS "Score_1", "RF_Model_11"."Proba_1" AS "Proba_1", "RF_Model_11"."LogProba_1" AS "LogProba_1" 
FROM "RF_Model_11" UNION ALL SELECT "RF_Model_12"."KEY" AS "KEY", "RF_Model_12"."Score_0" AS "Score_0", "RF_Model_12"."Proba_0" AS "Proba_0", "RF_Model_12"."LogProba_0" AS "LogProba_0", "RF_Model_12"."Score_1" AS "Score_1", "RF_Model_12"."Proba_1" AS "Proba_1", "RF_Model_12"."LogProba_1" AS "LogProba_1" 
FROM "RF_Model_12" UNION ALL SELECT "RF_Model_13"."KEY" AS "KEY", "RF_Model_13"."Score_0" AS "Score_0", "RF_Model_13"."Proba_0" AS "Proba_0", "RF_Model_13"."LogProba_0" AS "LogProba_0", "RF_Model_13"."Score_1" AS "Score_1", "RF_Model_13"."Proba_1" AS "Proba_1", "RF_Model_13"."LogProba_1" AS "LogProba_1" 
FROM "RF_Model_13" UNION ALL SELECT "RF_Model_14"."KEY" AS "KEY", "RF_Model_14"."Score_0" AS "Score_0", "RF_Model_14"."Proba_0" AS "Proba_0", "RF_Model_14"."LogProba_0" AS "LogProba_0", "RF_Model_14"."Score_1" AS "Score_1", "RF_Model_14"."Proba_1" AS "Proba_1", "RF_Model_14"."LogProba_1" AS "LogProba_1" 
FROM "RF_Model_14" UNION ALL SELECT "RF_Model_15"."KEY" AS "KEY", "RF_Model_15"."Score_0" AS "Score_0", "RF_Model_15"."Proba_0" AS "Proba_0", "RF_Model_15"."LogProba_0" AS "LogProba_0", "RF_Model_15"."Score_1" AS "Score_1", "RF_Model_15"."Proba_1" AS "Proba_1", "RF_Model_15"."LogProba_1" AS "LogProba_1" 
FROM "RF_Model_15") "RF_esu_1") "RF_B1") "U"

-- Code For temporary table 0416231741_5305LB_RF_UNION part 1/2. Create 


CREATE GLOBAL TEMPORARY TABLE "0416231741_5305LB_RF_UNION" (
	"KEY" NUMBER(19), 
	"Score_0" BINARY_DOUBLE, 
	"Proba_0" BINARY_DOUBLE, 
	"LogProba_0" BINARY_DOUBLE, 
	"Score_1" BINARY_DOUBLE, 
	"Proba_1" BINARY_DOUBLE, 
	"LogProba_1" BINARY_DOUBLE
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table 0416231741_5305LB_RF_UNION part 2/2. Populate

INSERT INTO "0416231741_5305LB_RF_UNION" ("KEY", "Score_0", "Proba_0", "LogProba_0", "Score_1", "Proba_1", "LogProba_1") SELECT "U"."KEY", "U"."Score_0", "U"."Proba_0", "U"."LogProba_0", "U"."Score_1", "U"."Proba_1", "U"."LogProba_1" 
FROM (SELECT "RF_Union"."KEY", "RF_Union"."Score_0", "RF_Union"."Proba_0", "RF_Union"."LogProba_0", "RF_Union"."Score_1", "RF_Union"."Proba_1", "RF_Union"."LogProba_1" 
FROM (SELECT "RF_EnsembleUnion"."KEY" AS "KEY", "RF_EnsembleUnion"."Score_0" AS "Score_0", "RF_EnsembleUnion"."Proba_0" AS "Proba_0", "RF_EnsembleUnion"."LogProba_0" AS "LogProba_0", "RF_EnsembleUnion"."Score_1" AS "Score_1", "RF_EnsembleUnion"."Proba_1" AS "Proba_1", "RF_EnsembleUnion"."LogProba_1" AS "LogProba_1" 
FROM (SELECT "RF_B0"."KEY" AS "KEY", "RF_B0"."Score_0" AS "Score_0", "RF_B0"."Proba_0" AS "Proba_0", "RF_B0"."LogProba_0" AS "LogProba_0", "RF_B0"."Score_1" AS "Score_1", "RF_B0"."Proba_1" AS "Proba_1", "RF_B0"."LogProba_1" AS "LogProba_1" 
FROM "0180416231741_I3CAQF_RF_B0" "RF_B0" UNION ALL SELECT "RF_B1"."KEY" AS "KEY", "RF_B1"."Score_0" AS "Score_0", "RF_B1"."Proba_0" AS "Proba_0", "RF_B1"."LogProba_0" AS "LogProba_0", "RF_B1"."Score_1" AS "Score_1", "RF_B1"."Proba_1" AS "Proba_1", "RF_B1"."LogProba_1" AS "LogProba_1" 
FROM "0180416231741_FTLNP5_RF_B1" "RF_B1") "RF_EnsembleUnion") "RF_Union") "U"

-- Code For temporary table 180416231741_IT5UPG_RF_AVG part 1/2. Create 


CREATE GLOBAL TEMPORARY TABLE "180416231741_IT5UPG_RF_AVG" (
	"KEY" NUMBER(19) NOT NULL, 
	"Score_0" BINARY_DOUBLE, 
	"Proba_0" BINARY_DOUBLE, 
	"LogProba_0" BINARY_DOUBLE, 
	"Score_1" BINARY_DOUBLE, 
	"Proba_1" BINARY_DOUBLE, 
	"LogProba_1" BINARY_DOUBLE, 
	PRIMARY KEY ("KEY")
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table 180416231741_IT5UPG_RF_AVG part 2/2. Populate

INSERT INTO "180416231741_IT5UPG_RF_AVG" ("KEY", "Score_0", "Proba_0", "LogProba_0", "Score_1", "Proba_1", "LogProba_1") SELECT "U"."KEY", "U"."Score_0", "U"."Proba_0", "U"."LogProba_0", "U"."Score_1", "U"."Proba_1", "U"."LogProba_1" 
FROM (SELECT "RF_avg"."KEY", "RF_avg"."Score_0", "RF_avg"."Proba_0", "RF_avg"."LogProba_0", "RF_avg"."Score_1", "RF_avg"."Proba_1", "RF_avg"."LogProba_1" 
FROM (SELECT "T"."KEY" AS "KEY", CAST("T"."Score_0" AS BINARY_DOUBLE) AS "Score_0", CAST("T"."Proba_0" AS BINARY_DOUBLE) AS "Proba_0", CAST("T"."LogProba_0" AS BINARY_DOUBLE) AS "LogProba_0", CAST("T"."Score_1" AS BINARY_DOUBLE) AS "Score_1", CAST("T"."Proba_1" AS BINARY_DOUBLE) AS "Proba_1", CAST("T"."LogProba_1" AS BINARY_DOUBLE) AS "LogProba_1" 
FROM (SELECT "RF_Union"."KEY" AS "KEY", avg(CAST("RF_Union"."Score_0" AS BINARY_DOUBLE)) AS "Score_0", avg(CAST("RF_Union"."Proba_0" AS BINARY_DOUBLE)) AS "Proba_0", CAST(NULL AS BINARY_DOUBLE) AS "LogProba_0", avg(CAST("RF_Union"."Score_1" AS BINARY_DOUBLE)) AS "Score_1", avg(CAST("RF_Union"."Proba_1" AS BINARY_DOUBLE)) AS "Proba_1", CAST(NULL AS BINARY_DOUBLE) AS "LogProba_1" 
FROM "0416231741_5305LB_RF_UNION" "RF_Union" GROUP BY "RF_Union"."KEY") "T") "RF_avg") "U"

-- Model deployment code

WITH orig_cte AS 
(SELECT "RF_avg"."KEY" AS "KEY", "RF_avg"."Score_0" AS "Score_0", "RF_avg"."Score_1" AS "Score_1", "RF_avg"."Proba_0" AS "Proba_0", "RF_avg"."Proba_1" AS "Proba_1", "RF_avg"."LogProba_0" AS "LogProba_0", "RF_avg"."LogProba_1" AS "LogProba_1", CAST(NULL AS NUMBER(19)) AS "Decision", CAST(NULL AS BINARY_DOUBLE) AS "DecisionProba" 
FROM "180416231741_IT5UPG_RF_AVG" "RF_avg"), 
score_class_union AS 
(SELECT scu."KEY_u" AS "KEY_u", scu.class AS class, scu."LogProba" AS "LogProba", scu."Proba" AS "Proba", scu."Score" AS "Score" 
FROM (SELECT orig_cte."KEY" AS "KEY_u", 0 AS class, orig_cte."LogProba_0" AS "LogProba", orig_cte."Proba_0" AS "Proba", orig_cte."Score_0" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 1 AS class, orig_cte."LogProba_1" AS "LogProba", orig_cte."Proba_1" AS "Proba", orig_cte."Score_1" AS "Score" 
FROM orig_cte) scu), 
score_max AS 
(SELECT orig_cte."KEY" AS "KEY", orig_cte."Score_0" AS "Score_0", orig_cte."Score_1" AS "Score_1", orig_cte."Proba_0" AS "Proba_0", orig_cte."Proba_1" AS "Proba_1", orig_cte."LogProba_0" AS "LogProba_0", orig_cte."LogProba_1" AS "LogProba_1", orig_cte."Decision" AS "Decision", orig_cte."DecisionProba" AS "DecisionProba", max_select."KEY_m" AS "KEY_m", max_select."max_Proba" AS "max_Proba" 
FROM orig_cte LEFT OUTER JOIN (SELECT score_class_union."KEY_u" AS "KEY_m", max(score_class_union."Proba") AS "max_Proba" 
FROM score_class_union GROUP BY score_class_union."KEY_u") max_select ON orig_cte."KEY" = max_select."KEY_m"), 
union_with_max AS 
(SELECT score_class_union."KEY_u" AS "KEY_u", score_class_union.class AS class, score_class_union."LogProba" AS "LogProba", score_class_union."Proba" AS "Proba", score_class_union."Score" AS "Score", score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."Decision" AS "Decision", score_max."DecisionProba" AS "DecisionProba", score_max."KEY_m" AS "KEY_m", score_max."max_Proba" AS "max_Proba" 
FROM score_class_union LEFT OUTER JOIN score_max ON score_class_union."KEY_u" = score_max."KEY"), 
arg_max_cte AS 
(SELECT score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."Decision" AS "Decision", score_max."DecisionProba" AS "DecisionProba", score_max."KEY_m" AS "KEY_m", score_max."max_Proba" AS "max_Proba", "arg_max_t_Proba"."KEY_Proba" AS "KEY_Proba", "arg_max_t_Proba"."arg_max_Proba" AS "arg_max_Proba" 
FROM score_max LEFT OUTER JOIN (SELECT union_with_max."KEY" AS "KEY_Proba", min(union_with_max.class) AS "arg_max_Proba" 
FROM union_with_max 
WHERE union_with_max."Proba" >= union_with_max."max_Proba" GROUP BY union_with_max."KEY") "arg_max_t_Proba" ON score_max."KEY" = "arg_max_t_Proba"."KEY_Proba")
 SELECT arg_max_cte."KEY" AS "KEY", arg_max_cte."Score_0" AS "Score_0", arg_max_cte."Score_1" AS "Score_1", arg_max_cte."Proba_0" AS "Proba_0", arg_max_cte."Proba_1" AS "Proba_1", CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN ln(arg_max_cte."Proba_0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_0", CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN ln(arg_max_cte."Proba_1") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_1", arg_max_cte."arg_max_Proba" AS "Decision", arg_max_cte."max_Proba" AS "DecisionProba" 
FROM arg_max_cte