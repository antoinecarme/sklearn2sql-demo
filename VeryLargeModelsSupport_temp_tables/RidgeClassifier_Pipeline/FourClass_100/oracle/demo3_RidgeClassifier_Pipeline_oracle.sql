-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2018

-- Model : RidgeClassifier_Pipeline
-- Dataset : FourClass_100
-- Database : oracle


-- This SQL code can contain one or more statements, to be executed in the order they appear in this file.



-- Code For temporary table 33814_6ANZUW_ADS_IMP_1_OUT part 1/2. Create 


CREATE GLOBAL TEMPORARY TABLE "33814_6ANZUW_ADS_IMP_1_OUT" (
	"KEY" NUMBER(19) NOT NULL, 
	impter_2 BINARY_DOUBLE, 
	impter_3 BINARY_DOUBLE, 
	impter_4 BINARY_DOUBLE, 
	impter_5 BINARY_DOUBLE, 
	impter_6 BINARY_DOUBLE, 
	impter_7 BINARY_DOUBLE, 
	impter_8 BINARY_DOUBLE, 
	impter_9 BINARY_DOUBLE, 
	impter_10 BINARY_DOUBLE, 
	impter_11 BINARY_DOUBLE, 
	impter_12 BINARY_DOUBLE, 
	impter_13 BINARY_DOUBLE, 
	impter_14 BINARY_DOUBLE, 
	impter_15 BINARY_DOUBLE, 
	impter_16 BINARY_DOUBLE, 
	impter_17 BINARY_DOUBLE, 
	impter_18 BINARY_DOUBLE, 
	impter_19 BINARY_DOUBLE, 
	impter_20 BINARY_DOUBLE, 
	impter_21 BINARY_DOUBLE, 
	impter_22 BINARY_DOUBLE, 
	impter_23 BINARY_DOUBLE, 
	impter_24 BINARY_DOUBLE, 
	impter_25 BINARY_DOUBLE, 
	impter_26 BINARY_DOUBLE, 
	impter_27 BINARY_DOUBLE, 
	impter_28 BINARY_DOUBLE, 
	impter_29 BINARY_DOUBLE, 
	impter_30 BINARY_DOUBLE, 
	impter_31 BINARY_DOUBLE, 
	impter_32 BINARY_DOUBLE, 
	impter_33 BINARY_DOUBLE, 
	impter_34 BINARY_DOUBLE, 
	impter_35 BINARY_DOUBLE, 
	impter_36 BINARY_DOUBLE, 
	impter_37 BINARY_DOUBLE, 
	impter_38 BINARY_DOUBLE, 
	impter_39 BINARY_DOUBLE, 
	impter_40 BINARY_DOUBLE, 
	impter_41 BINARY_DOUBLE, 
	impter_42 BINARY_DOUBLE, 
	impter_43 BINARY_DOUBLE, 
	impter_44 BINARY_DOUBLE, 
	impter_45 BINARY_DOUBLE, 
	impter_46 BINARY_DOUBLE, 
	impter_47 BINARY_DOUBLE, 
	impter_48 BINARY_DOUBLE, 
	impter_49 BINARY_DOUBLE, 
	impter_50 BINARY_DOUBLE, 
	impter_51 BINARY_DOUBLE, 
	impter_52 BINARY_DOUBLE, 
	impter_53 BINARY_DOUBLE, 
	impter_54 BINARY_DOUBLE, 
	impter_55 BINARY_DOUBLE, 
	impter_56 BINARY_DOUBLE, 
	impter_57 BINARY_DOUBLE, 
	impter_58 BINARY_DOUBLE, 
	impter_59 BINARY_DOUBLE, 
	impter_60 BINARY_DOUBLE, 
	impter_61 BINARY_DOUBLE, 
	impter_62 BINARY_DOUBLE, 
	impter_63 BINARY_DOUBLE, 
	impter_64 BINARY_DOUBLE, 
	impter_65 BINARY_DOUBLE, 
	impter_66 BINARY_DOUBLE, 
	impter_67 BINARY_DOUBLE, 
	impter_68 BINARY_DOUBLE, 
	impter_69 BINARY_DOUBLE, 
	impter_70 BINARY_DOUBLE, 
	impter_71 BINARY_DOUBLE, 
	impter_72 BINARY_DOUBLE, 
	impter_73 BINARY_DOUBLE, 
	impter_74 BINARY_DOUBLE, 
	impter_75 BINARY_DOUBLE, 
	impter_76 BINARY_DOUBLE, 
	impter_77 BINARY_DOUBLE, 
	impter_78 BINARY_DOUBLE, 
	impter_79 BINARY_DOUBLE, 
	impter_80 BINARY_DOUBLE, 
	impter_81 BINARY_DOUBLE, 
	impter_82 BINARY_DOUBLE, 
	impter_83 BINARY_DOUBLE, 
	impter_84 BINARY_DOUBLE, 
	impter_85 BINARY_DOUBLE, 
	impter_86 BINARY_DOUBLE, 
	impter_87 BINARY_DOUBLE, 
	impter_88 BINARY_DOUBLE, 
	impter_89 BINARY_DOUBLE, 
	impter_90 BINARY_DOUBLE, 
	impter_91 BINARY_DOUBLE, 
	impter_92 BINARY_DOUBLE, 
	impter_93 BINARY_DOUBLE, 
	impter_94 BINARY_DOUBLE, 
	impter_95 BINARY_DOUBLE, 
	impter_96 BINARY_DOUBLE, 
	impter_97 BINARY_DOUBLE, 
	impter_98 BINARY_DOUBLE, 
	impter_99 BINARY_DOUBLE, 
	impter_100 BINARY_DOUBLE, 
	impter_101 BINARY_DOUBLE, 
	PRIMARY KEY ("KEY")
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table 33814_6ANZUW_ADS_IMP_1_OUT part 2/2. Populate

INSERT INTO "33814_6ANZUW_ADS_IMP_1_OUT" ("KEY", impter_2, impter_3, impter_4, impter_5, impter_6, impter_7, impter_8, impter_9, impter_10, impter_11, impter_12, impter_13, impter_14, impter_15, impter_16, impter_17, impter_18, impter_19, impter_20, impter_21, impter_22, impter_23, impter_24, impter_25, impter_26, impter_27, impter_28, impter_29, impter_30, impter_31, impter_32, impter_33, impter_34, impter_35, impter_36, impter_37, impter_38, impter_39, impter_40, impter_41, impter_42, impter_43, impter_44, impter_45, impter_46, impter_47, impter_48, impter_49, impter_50, impter_51, impter_52, impter_53, impter_54, impter_55, impter_56, impter_57, impter_58, impter_59, impter_60, impter_61, impter_62, impter_63, impter_64, impter_65, impter_66, impter_67, impter_68, impter_69, impter_70, impter_71, impter_72, impter_73, impter_74, impter_75, impter_76, impter_77, impter_78, impter_79, impter_80, impter_81, impter_82, impter_83, impter_84, impter_85, impter_86, impter_87, impter_88, impter_89, impter_90, impter_91, impter_92, impter_93, impter_94, impter_95, impter_96, impter_97, impter_98, impter_99, impter_100, impter_101) SELECT "U"."KEY", "U".impter_2, "U".impter_3, "U".impter_4, "U".impter_5, "U".impter_6, "U".impter_7, "U".impter_8, "U".impter_9, "U".impter_10, "U".impter_11, "U".impter_12, "U".impter_13, "U".impter_14, "U".impter_15, "U".impter_16, "U".impter_17, "U".impter_18, "U".impter_19, "U".impter_20, "U".impter_21, "U".impter_22, "U".impter_23, "U".impter_24, "U".impter_25, "U".impter_26, "U".impter_27, "U".impter_28, "U".impter_29, "U".impter_30, "U".impter_31, "U".impter_32, "U".impter_33, "U".impter_34, "U".impter_35, "U".impter_36, "U".impter_37, "U".impter_38, "U".impter_39, "U".impter_40, "U".impter_41, "U".impter_42, "U".impter_43, "U".impter_44, "U".impter_45, "U".impter_46, "U".impter_47, "U".impter_48, "U".impter_49, "U".impter_50, "U".impter_51, "U".impter_52, "U".impter_53, "U".impter_54, "U".impter_55, "U".impter_56, "U".impter_57, "U".impter_58, "U".impter_59, "U".impter_60, "U".impter_61, "U".impter_62, "U".impter_63, "U".impter_64, "U".impter_65, "U".impter_66, "U".impter_67, "U".impter_68, "U".impter_69, "U".impter_70, "U".impter_71, "U".impter_72, "U".impter_73, "U".impter_74, "U".impter_75, "U".impter_76, "U".impter_77, "U".impter_78, "U".impter_79, "U".impter_80, "U".impter_81, "U".impter_82, "U".impter_83, "U".impter_84, "U".impter_85, "U".impter_86, "U".impter_87, "U".impter_88, "U".impter_89, "U".impter_90, "U".impter_91, "U".impter_92, "U".impter_93, "U".impter_94, "U".impter_95, "U".impter_96, "U".impter_97, "U".impter_98, "U".impter_99, "U".impter_100, "U".impter_101 
FROM (SELECT "ADS_imp_1_OUT"."KEY", "ADS_imp_1_OUT".impter_2, "ADS_imp_1_OUT".impter_3, "ADS_imp_1_OUT".impter_4, "ADS_imp_1_OUT".impter_5, "ADS_imp_1_OUT".impter_6, "ADS_imp_1_OUT".impter_7, "ADS_imp_1_OUT".impter_8, "ADS_imp_1_OUT".impter_9, "ADS_imp_1_OUT".impter_10, "ADS_imp_1_OUT".impter_11, "ADS_imp_1_OUT".impter_12, "ADS_imp_1_OUT".impter_13, "ADS_imp_1_OUT".impter_14, "ADS_imp_1_OUT".impter_15, "ADS_imp_1_OUT".impter_16, "ADS_imp_1_OUT".impter_17, "ADS_imp_1_OUT".impter_18, "ADS_imp_1_OUT".impter_19, "ADS_imp_1_OUT".impter_20, "ADS_imp_1_OUT".impter_21, "ADS_imp_1_OUT".impter_22, "ADS_imp_1_OUT".impter_23, "ADS_imp_1_OUT".impter_24, "ADS_imp_1_OUT".impter_25, "ADS_imp_1_OUT".impter_26, "ADS_imp_1_OUT".impter_27, "ADS_imp_1_OUT".impter_28, "ADS_imp_1_OUT".impter_29, "ADS_imp_1_OUT".impter_30, "ADS_imp_1_OUT".impter_31, "ADS_imp_1_OUT".impter_32, "ADS_imp_1_OUT".impter_33, "ADS_imp_1_OUT".impter_34, "ADS_imp_1_OUT".impter_35, "ADS_imp_1_OUT".impter_36, "ADS_imp_1_OUT".impter_37, "ADS_imp_1_OUT".impter_38, "ADS_imp_1_OUT".impter_39, "ADS_imp_1_OUT".impter_40, "ADS_imp_1_OUT".impter_41, "ADS_imp_1_OUT".impter_42, "ADS_imp_1_OUT".impter_43, "ADS_imp_1_OUT".impter_44, "ADS_imp_1_OUT".impter_45, "ADS_imp_1_OUT".impter_46, "ADS_imp_1_OUT".impter_47, "ADS_imp_1_OUT".impter_48, "ADS_imp_1_OUT".impter_49, "ADS_imp_1_OUT".impter_50, "ADS_imp_1_OUT".impter_51, "ADS_imp_1_OUT".impter_52, "ADS_imp_1_OUT".impter_53, "ADS_imp_1_OUT".impter_54, "ADS_imp_1_OUT".impter_55, "ADS_imp_1_OUT".impter_56, "ADS_imp_1_OUT".impter_57, "ADS_imp_1_OUT".impter_58, "ADS_imp_1_OUT".impter_59, "ADS_imp_1_OUT".impter_60, "ADS_imp_1_OUT".impter_61, "ADS_imp_1_OUT".impter_62, "ADS_imp_1_OUT".impter_63, "ADS_imp_1_OUT".impter_64, "ADS_imp_1_OUT".impter_65, "ADS_imp_1_OUT".impter_66, "ADS_imp_1_OUT".impter_67, "ADS_imp_1_OUT".impter_68, "ADS_imp_1_OUT".impter_69, "ADS_imp_1_OUT".impter_70, "ADS_imp_1_OUT".impter_71, "ADS_imp_1_OUT".impter_72, "ADS_imp_1_OUT".impter_73, "ADS_imp_1_OUT".impter_74, "ADS_imp_1_OUT".impter_75, "ADS_imp_1_OUT".impter_76, "ADS_imp_1_OUT".impter_77, "ADS_imp_1_OUT".impter_78, "ADS_imp_1_OUT".impter_79, "ADS_imp_1_OUT".impter_80, "ADS_imp_1_OUT".impter_81, "ADS_imp_1_OUT".impter_82, "ADS_imp_1_OUT".impter_83, "ADS_imp_1_OUT".impter_84, "ADS_imp_1_OUT".impter_85, "ADS_imp_1_OUT".impter_86, "ADS_imp_1_OUT".impter_87, "ADS_imp_1_OUT".impter_88, "ADS_imp_1_OUT".impter_89, "ADS_imp_1_OUT".impter_90, "ADS_imp_1_OUT".impter_91, "ADS_imp_1_OUT".impter_92, "ADS_imp_1_OUT".impter_93, "ADS_imp_1_OUT".impter_94, "ADS_imp_1_OUT".impter_95, "ADS_imp_1_OUT".impter_96, "ADS_imp_1_OUT".impter_97, "ADS_imp_1_OUT".impter_98, "ADS_imp_1_OUT".impter_99, "ADS_imp_1_OUT".impter_100, "ADS_imp_1_OUT".impter_101 
FROM (SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" IS NULL) THEN 0.006535740121159998 ELSE "ADS"."Feature_0" END AS impter_2, CASE WHEN ("ADS"."Feature_1" IS NULL) THEN 0.16767827125978743 ELSE "ADS"."Feature_1" END AS impter_3, CASE WHEN ("ADS"."Feature_2" IS NULL) THEN -0.05514704173583139 ELSE "ADS"."Feature_2" END AS impter_4, CASE WHEN ("ADS"."Feature_3" IS NULL) THEN 0.0015211693051869056 ELSE "ADS"."Feature_3" END AS impter_5, CASE WHEN ("ADS"."Feature_4" IS NULL) THEN 0.03142760191039923 ELSE "ADS"."Feature_4" END AS impter_6, CASE WHEN ("ADS"."Feature_5" IS NULL) THEN 0.026179683178748685 ELSE "ADS"."Feature_5" END AS impter_7, CASE WHEN ("ADS"."Feature_6" IS NULL) THEN -0.011254713122120081 ELSE "ADS"."Feature_6" END AS impter_8, CASE WHEN ("ADS"."Feature_7" IS NULL) THEN -0.016886211800947296 ELSE "ADS"."Feature_7" END AS impter_9, CASE WHEN ("ADS"."Feature_8" IS NULL) THEN -0.027342702964496257 ELSE "ADS"."Feature_8" END AS impter_10, CASE WHEN ("ADS"."Feature_9" IS NULL) THEN -0.16370127884822097 ELSE "ADS"."Feature_9" END AS impter_11, CASE WHEN ("ADS"."Feature_10" IS NULL) THEN 0.03541225073893643 ELSE "ADS"."Feature_10" END AS impter_12, CASE WHEN ("ADS"."Feature_11" IS NULL) THEN -0.028529123475633158 ELSE "ADS"."Feature_11" END AS impter_13, CASE WHEN ("ADS"."Feature_12" IS NULL) THEN -0.026749444989609742 ELSE "ADS"."Feature_12" END AS impter_14, CASE WHEN ("ADS"."Feature_13" IS NULL) THEN 0.38601982291131526 ELSE "ADS"."Feature_13" END AS impter_15, CASE WHEN ("ADS"."Feature_14" IS NULL) THEN 0.01621452573135814 ELSE "ADS"."Feature_14" END AS impter_16, CASE WHEN ("ADS"."Feature_15" IS NULL) THEN 0.22723775077839256 ELSE "ADS"."Feature_15" END AS impter_17, CASE WHEN ("ADS"."Feature_16" IS NULL) THEN 0.5663734566941232 ELSE "ADS"."Feature_16" END AS impter_18, CASE WHEN ("ADS"."Feature_17" IS NULL) THEN 0.2776964106161551 ELSE "ADS"."Feature_17" END AS impter_19, CASE WHEN ("ADS"."Feature_18" IS NULL) THEN 0.005994326812351447 ELSE "ADS"."Feature_18" END AS impter_20, CASE WHEN ("ADS"."Feature_19" IS NULL) THEN -0.021852534469692157 ELSE "ADS"."Feature_19" END AS impter_21, CASE WHEN ("ADS"."Feature_20" IS NULL) THEN -0.028375425917008895 ELSE "ADS"."Feature_20" END AS impter_22, CASE WHEN ("ADS"."Feature_21" IS NULL) THEN 0.015164323296291698 ELSE "ADS"."Feature_21" END AS impter_23, CASE WHEN ("ADS"."Feature_22" IS NULL) THEN 0.017469134548764743 ELSE "ADS"."Feature_22" END AS impter_24, CASE WHEN ("ADS"."Feature_23" IS NULL) THEN 0.03493909449429536 ELSE "ADS"."Feature_23" END AS impter_25, CASE WHEN ("ADS"."Feature_24" IS NULL) THEN -0.1443616076343936 ELSE "ADS"."Feature_24" END AS impter_26, CASE WHEN ("ADS"."Feature_25" IS NULL) THEN 0.1461046774436175 ELSE "ADS"."Feature_25" END AS impter_27, CASE WHEN ("ADS"."Feature_26" IS NULL) THEN 0.06761584237384538 ELSE "ADS"."Feature_26" END AS impter_28, CASE WHEN ("ADS"."Feature_27" IS NULL) THEN -0.3083684560804083 ELSE "ADS"."Feature_27" END AS impter_29, CASE WHEN ("ADS"."Feature_28" IS NULL) THEN 0.9525753017609152 ELSE "ADS"."Feature_28" END AS impter_30, CASE WHEN ("ADS"."Feature_29" IS NULL) THEN -0.05813383910109171 ELSE "ADS"."Feature_29" END AS impter_31, CASE WHEN ("ADS"."Feature_30" IS NULL) THEN -0.013124412714914525 ELSE "ADS"."Feature_30" END AS impter_32, CASE WHEN ("ADS"."Feature_31" IS NULL) THEN -0.3375512543306959 ELSE "ADS"."Feature_31" END AS impter_33, CASE WHEN ("ADS"."Feature_32" IS NULL) THEN 0.03902651459317101 ELSE "ADS"."Feature_32" END AS impter_34, CASE WHEN ("ADS"."Feature_33" IS NULL) THEN -0.0402939442131795 ELSE "ADS"."Feature_33" END AS impter_35, CASE WHEN ("ADS"."Feature_34" IS NULL) THEN -0.17161188573704908 ELSE "ADS"."Feature_34" END AS impter_36, CASE WHEN ("ADS"."Feature_35" IS NULL) THEN 0.012647786868640112 ELSE "ADS"."Feature_35" END AS impter_37, CASE WHEN ("ADS"."Feature_36" IS NULL) THEN 0.005193735308514513 ELSE "ADS"."Feature_36" END AS impter_38, CASE WHEN ("ADS"."Feature_37" IS NULL) THEN -0.017160876576937396 ELSE "ADS"."Feature_37" END AS impter_39, CASE WHEN ("ADS"."Feature_38" IS NULL) THEN 0.045036155997948996 ELSE "ADS"."Feature_38" END AS impter_40, CASE WHEN ("ADS"."Feature_39" IS NULL) THEN -0.12035820022636322 ELSE "ADS"."Feature_39" END AS impter_41, CASE WHEN ("ADS"."Feature_40" IS NULL) THEN -0.17640392282213266 ELSE "ADS"."Feature_40" END AS impter_42, CASE WHEN ("ADS"."Feature_41" IS NULL) THEN -0.015157075927040681 ELSE "ADS"."Feature_41" END AS impter_43, CASE WHEN ("ADS"."Feature_42" IS NULL) THEN -0.3068740190578085 ELSE "ADS"."Feature_42" END AS impter_44, CASE WHEN ("ADS"."Feature_43" IS NULL) THEN -0.04035458069305412 ELSE "ADS"."Feature_43" END AS impter_45, CASE WHEN ("ADS"."Feature_44" IS NULL) THEN -0.00789981512459992 ELSE "ADS"."Feature_44" END AS impter_46, CASE WHEN ("ADS"."Feature_45" IS NULL) THEN 0.002647932254171184 ELSE "ADS"."Feature_45" END AS impter_47, CASE WHEN ("ADS"."Feature_46" IS NULL) THEN -0.1492108459830671 ELSE "ADS"."Feature_46" END AS impter_48, CASE WHEN ("ADS"."Feature_47" IS NULL) THEN 0.24895399236878446 ELSE "ADS"."Feature_47" END AS impter_49, CASE WHEN ("ADS"."Feature_48" IS NULL) THEN -0.7004243979718509 ELSE "ADS"."Feature_48" END AS impter_50, CASE WHEN ("ADS"."Feature_49" IS NULL) THEN 0.025527673750135163 ELSE "ADS"."Feature_49" END AS impter_51, CASE WHEN ("ADS"."Feature_50" IS NULL) THEN -0.15642138685028584 ELSE "ADS"."Feature_50" END AS impter_52, CASE WHEN ("ADS"."Feature_51" IS NULL) THEN -0.12783857717811203 ELSE "ADS"."Feature_51" END AS impter_53, CASE WHEN ("ADS"."Feature_52" IS NULL) THEN -0.3698795238326839 ELSE "ADS"."Feature_52" END AS impter_54, CASE WHEN ("ADS"."Feature_53" IS NULL) THEN 0.04105474558890989 ELSE "ADS"."Feature_53" END AS impter_55, CASE WHEN ("ADS"."Feature_54" IS NULL) THEN -0.10047427531359215 ELSE "ADS"."Feature_54" END AS impter_56, CASE WHEN ("ADS"."Feature_55" IS NULL) THEN -0.1312728865356366 ELSE "ADS"."Feature_55" END AS impter_57, CASE WHEN ("ADS"."Feature_56" IS NULL) THEN 0.3685784313653654 ELSE "ADS"."Feature_56" END AS impter_58, CASE WHEN ("ADS"."Feature_57" IS NULL) THEN 0.22281246520596887 ELSE "ADS"."Feature_57" END AS impter_59, CASE WHEN ("ADS"."Feature_58" IS NULL) THEN -0.006274087618403553 ELSE "ADS"."Feature_58" END AS impter_60, CASE WHEN ("ADS"."Feature_59" IS NULL) THEN 0.014268598957774136 ELSE "ADS"."Feature_59" END AS impter_61, CASE WHEN ("ADS"."Feature_60" IS NULL) THEN -0.028545511573860538 ELSE "ADS"."Feature_60" END AS impter_62, CASE WHEN ("ADS"."Feature_61" IS NULL) THEN -0.4374918318496328 ELSE "ADS"."Feature_61" END AS impter_63, CASE WHEN ("ADS"."Feature_62" IS NULL) THEN -0.3689927805875731 ELSE "ADS"."Feature_62" END AS impter_64, CASE WHEN ("ADS"."Feature_63" IS NULL) THEN 0.0011690418193188894 ELSE "ADS"."Feature_63" END AS impter_65, CASE WHEN ("ADS"."Feature_64" IS NULL) THEN -0.011564873717580429 ELSE "ADS"."Feature_64" END AS impter_66, CASE WHEN ("ADS"."Feature_65" IS NULL) THEN -0.04358769989694412 ELSE "ADS"."Feature_65" END AS impter_67, CASE WHEN ("ADS"."Feature_66" IS NULL) THEN -0.1618634137390173 ELSE "ADS"."Feature_66" END AS impter_68, CASE WHEN ("ADS"."Feature_67" IS NULL) THEN -0.01727264153501617 ELSE "ADS"."Feature_67" END AS impter_69, CASE WHEN ("ADS"."Feature_68" IS NULL) THEN -0.36403022036864674 ELSE "ADS"."Feature_68" END AS impter_70, CASE WHEN ("ADS"."Feature_69" IS NULL) THEN -0.049273006502403176 ELSE "ADS"."Feature_69" END AS impter_71, CASE WHEN ("ADS"."Feature_70" IS NULL) THEN -0.015468512657334297 ELSE "ADS"."Feature_70" END AS impter_72, CASE WHEN ("ADS"."Feature_71" IS NULL) THEN -0.19162939351279548 ELSE "ADS"."Feature_71" END AS impter_73, CASE WHEN ("ADS"."Feature_72" IS NULL) THEN 0.023782830321603186 ELSE "ADS"."Feature_72" END AS impter_74, CASE WHEN ("ADS"."Feature_73" IS NULL) THEN 0.020454799672569742 ELSE "ADS"."Feature_73" END AS impter_75, CASE WHEN ("ADS"."Feature_74" IS NULL) THEN -0.17335534659313448 ELSE "ADS"."Feature_74" END AS impter_76, CASE WHEN ("ADS"."Feature_75" IS NULL) THEN 0.02758228824576348 ELSE "ADS"."Feature_75" END AS impter_77, CASE WHEN ("ADS"."Feature_76" IS NULL) THEN -0.015452336678168777 ELSE "ADS"."Feature_76" END AS impter_78, CASE WHEN ("ADS"."Feature_77" IS NULL) THEN -0.0425555457732581 ELSE "ADS"."Feature_77" END AS impter_79, CASE WHEN ("ADS"."Feature_78" IS NULL) THEN -0.009425736580365328 ELSE "ADS"."Feature_78" END AS impter_80, CASE WHEN ("ADS"."Feature_79" IS NULL) THEN 0.007423677489325057 ELSE "ADS"."Feature_79" END AS impter_81, CASE WHEN ("ADS"."Feature_80" IS NULL) THEN 0.0498533264368169 ELSE "ADS"."Feature_80" END AS impter_82, CASE WHEN ("ADS"."Feature_81" IS NULL) THEN 0.027960221179443 ELSE "ADS"."Feature_81" END AS impter_83, CASE WHEN ("ADS"."Feature_82" IS NULL) THEN -0.005270502487579236 ELSE "ADS"."Feature_82" END AS impter_84, CASE WHEN ("ADS"."Feature_83" IS NULL) THEN -0.053393611774246875 ELSE "ADS"."Feature_83" END AS impter_85, CASE WHEN ("ADS"."Feature_84" IS NULL) THEN 0.17162033288561043 ELSE "ADS"."Feature_84" END AS impter_86, CASE WHEN ("ADS"."Feature_85" IS NULL) THEN 0.037211997007404414 ELSE "ADS"."Feature_85" END AS impter_87, CASE WHEN ("ADS"."Feature_86" IS NULL) THEN 0.01843497333044896 ELSE "ADS"."Feature_86" END AS impter_88, CASE WHEN ("ADS"."Feature_87" IS NULL) THEN 0.5605216326173627 ELSE "ADS"."Feature_87" END AS impter_89, CASE WHEN ("ADS"."Feature_88" IS NULL) THEN -0.05285046291900049 ELSE "ADS"."Feature_88" END AS impter_90, CASE WHEN ("ADS"."Feature_89" IS NULL) THEN 0.07939021734244131 ELSE "ADS"."Feature_89" END AS impter_91, CASE WHEN ("ADS"."Feature_90" IS NULL) THEN -2.088667163118704 ELSE "ADS"."Feature_90" END AS impter_92, CASE WHEN ("ADS"."Feature_91" IS NULL) THEN -1.0831020638954625 ELSE "ADS"."Feature_91" END AS impter_93, CASE WHEN ("ADS"."Feature_92" IS NULL) THEN -0.30470236282124374 ELSE "ADS"."Feature_92" END AS impter_94, CASE WHEN ("ADS"."Feature_93" IS NULL) THEN -0.9354262595637257 ELSE "ADS"."Feature_93" END AS impter_95, CASE WHEN ("ADS"."Feature_94" IS NULL) THEN -0.09841121992703274 ELSE "ADS"."Feature_94" END AS impter_96, CASE WHEN ("ADS"."Feature_95" IS NULL) THEN -0.5316534843603434 ELSE "ADS"."Feature_95" END AS impter_97, CASE WHEN ("ADS"."Feature_96" IS NULL) THEN 0.014127422137804999 ELSE "ADS"."Feature_96" END AS impter_98, CASE WHEN ("ADS"."Feature_97" IS NULL) THEN -0.012631277412677116 ELSE "ADS"."Feature_97" END AS impter_99, CASE WHEN ("ADS"."Feature_98" IS NULL) THEN 0.031286881233113274 ELSE "ADS"."Feature_98" END AS impter_100, CASE WHEN ("ADS"."Feature_99" IS NULL) THEN -0.45039051538460234 ELSE "ADS"."Feature_99" END AS impter_101 
FROM "FOURCLASS_100" "ADS") "ADS_imp_1_OUT") "U"

-- Code For temporary table 33814_T6CLJL_ADS_SCA_2_OUT part 1/2. Create 


CREATE GLOBAL TEMPORARY TABLE "33814_T6CLJL_ADS_SCA_2_OUT" (
	"KEY" NUMBER(19) NOT NULL, 
	scaler_2 BINARY_DOUBLE, 
	scaler_3 BINARY_DOUBLE, 
	scaler_4 BINARY_DOUBLE, 
	scaler_5 BINARY_DOUBLE, 
	scaler_6 BINARY_DOUBLE, 
	scaler_7 BINARY_DOUBLE, 
	scaler_8 BINARY_DOUBLE, 
	scaler_9 BINARY_DOUBLE, 
	scaler_10 BINARY_DOUBLE, 
	scaler_11 BINARY_DOUBLE, 
	scaler_12 BINARY_DOUBLE, 
	scaler_13 BINARY_DOUBLE, 
	scaler_14 BINARY_DOUBLE, 
	scaler_15 BINARY_DOUBLE, 
	scaler_16 BINARY_DOUBLE, 
	scaler_17 BINARY_DOUBLE, 
	scaler_18 BINARY_DOUBLE, 
	scaler_19 BINARY_DOUBLE, 
	scaler_20 BINARY_DOUBLE, 
	scaler_21 BINARY_DOUBLE, 
	scaler_22 BINARY_DOUBLE, 
	scaler_23 BINARY_DOUBLE, 
	scaler_24 BINARY_DOUBLE, 
	scaler_25 BINARY_DOUBLE, 
	scaler_26 BINARY_DOUBLE, 
	scaler_27 BINARY_DOUBLE, 
	scaler_28 BINARY_DOUBLE, 
	scaler_29 BINARY_DOUBLE, 
	scaler_30 BINARY_DOUBLE, 
	scaler_31 BINARY_DOUBLE, 
	scaler_32 BINARY_DOUBLE, 
	scaler_33 BINARY_DOUBLE, 
	scaler_34 BINARY_DOUBLE, 
	scaler_35 BINARY_DOUBLE, 
	scaler_36 BINARY_DOUBLE, 
	scaler_37 BINARY_DOUBLE, 
	scaler_38 BINARY_DOUBLE, 
	scaler_39 BINARY_DOUBLE, 
	scaler_40 BINARY_DOUBLE, 
	scaler_41 BINARY_DOUBLE, 
	scaler_42 BINARY_DOUBLE, 
	scaler_43 BINARY_DOUBLE, 
	scaler_44 BINARY_DOUBLE, 
	scaler_45 BINARY_DOUBLE, 
	scaler_46 BINARY_DOUBLE, 
	scaler_47 BINARY_DOUBLE, 
	scaler_48 BINARY_DOUBLE, 
	scaler_49 BINARY_DOUBLE, 
	scaler_50 BINARY_DOUBLE, 
	scaler_51 BINARY_DOUBLE, 
	scaler_52 BINARY_DOUBLE, 
	scaler_53 BINARY_DOUBLE, 
	scaler_54 BINARY_DOUBLE, 
	scaler_55 BINARY_DOUBLE, 
	scaler_56 BINARY_DOUBLE, 
	scaler_57 BINARY_DOUBLE, 
	scaler_58 BINARY_DOUBLE, 
	scaler_59 BINARY_DOUBLE, 
	scaler_60 BINARY_DOUBLE, 
	scaler_61 BINARY_DOUBLE, 
	scaler_62 BINARY_DOUBLE, 
	scaler_63 BINARY_DOUBLE, 
	scaler_64 BINARY_DOUBLE, 
	scaler_65 BINARY_DOUBLE, 
	scaler_66 BINARY_DOUBLE, 
	scaler_67 BINARY_DOUBLE, 
	scaler_68 BINARY_DOUBLE, 
	scaler_69 BINARY_DOUBLE, 
	scaler_70 BINARY_DOUBLE, 
	scaler_71 BINARY_DOUBLE, 
	scaler_72 BINARY_DOUBLE, 
	scaler_73 BINARY_DOUBLE, 
	scaler_74 BINARY_DOUBLE, 
	scaler_75 BINARY_DOUBLE, 
	scaler_76 BINARY_DOUBLE, 
	scaler_77 BINARY_DOUBLE, 
	scaler_78 BINARY_DOUBLE, 
	scaler_79 BINARY_DOUBLE, 
	scaler_80 BINARY_DOUBLE, 
	scaler_81 BINARY_DOUBLE, 
	scaler_82 BINARY_DOUBLE, 
	scaler_83 BINARY_DOUBLE, 
	scaler_84 BINARY_DOUBLE, 
	scaler_85 BINARY_DOUBLE, 
	scaler_86 BINARY_DOUBLE, 
	scaler_87 BINARY_DOUBLE, 
	scaler_88 BINARY_DOUBLE, 
	scaler_89 BINARY_DOUBLE, 
	scaler_90 BINARY_DOUBLE, 
	scaler_91 BINARY_DOUBLE, 
	scaler_92 BINARY_DOUBLE, 
	scaler_93 BINARY_DOUBLE, 
	scaler_94 BINARY_DOUBLE, 
	scaler_95 BINARY_DOUBLE, 
	scaler_96 BINARY_DOUBLE, 
	scaler_97 BINARY_DOUBLE, 
	scaler_98 BINARY_DOUBLE, 
	scaler_99 BINARY_DOUBLE, 
	scaler_100 BINARY_DOUBLE, 
	scaler_101 BINARY_DOUBLE, 
	PRIMARY KEY ("KEY")
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table 33814_T6CLJL_ADS_SCA_2_OUT part 2/2. Populate

INSERT INTO "33814_T6CLJL_ADS_SCA_2_OUT" ("KEY", scaler_2, scaler_3, scaler_4, scaler_5, scaler_6, scaler_7, scaler_8, scaler_9, scaler_10, scaler_11, scaler_12, scaler_13, scaler_14, scaler_15, scaler_16, scaler_17, scaler_18, scaler_19, scaler_20, scaler_21, scaler_22, scaler_23, scaler_24, scaler_25, scaler_26, scaler_27, scaler_28, scaler_29, scaler_30, scaler_31, scaler_32, scaler_33, scaler_34, scaler_35, scaler_36, scaler_37, scaler_38, scaler_39, scaler_40, scaler_41, scaler_42, scaler_43, scaler_44, scaler_45, scaler_46, scaler_47, scaler_48, scaler_49, scaler_50, scaler_51, scaler_52, scaler_53, scaler_54, scaler_55, scaler_56, scaler_57, scaler_58, scaler_59, scaler_60, scaler_61, scaler_62, scaler_63, scaler_64, scaler_65, scaler_66, scaler_67, scaler_68, scaler_69, scaler_70, scaler_71, scaler_72, scaler_73, scaler_74, scaler_75, scaler_76, scaler_77, scaler_78, scaler_79, scaler_80, scaler_81, scaler_82, scaler_83, scaler_84, scaler_85, scaler_86, scaler_87, scaler_88, scaler_89, scaler_90, scaler_91, scaler_92, scaler_93, scaler_94, scaler_95, scaler_96, scaler_97, scaler_98, scaler_99, scaler_100, scaler_101) SELECT "U"."KEY", "U".scaler_2, "U".scaler_3, "U".scaler_4, "U".scaler_5, "U".scaler_6, "U".scaler_7, "U".scaler_8, "U".scaler_9, "U".scaler_10, "U".scaler_11, "U".scaler_12, "U".scaler_13, "U".scaler_14, "U".scaler_15, "U".scaler_16, "U".scaler_17, "U".scaler_18, "U".scaler_19, "U".scaler_20, "U".scaler_21, "U".scaler_22, "U".scaler_23, "U".scaler_24, "U".scaler_25, "U".scaler_26, "U".scaler_27, "U".scaler_28, "U".scaler_29, "U".scaler_30, "U".scaler_31, "U".scaler_32, "U".scaler_33, "U".scaler_34, "U".scaler_35, "U".scaler_36, "U".scaler_37, "U".scaler_38, "U".scaler_39, "U".scaler_40, "U".scaler_41, "U".scaler_42, "U".scaler_43, "U".scaler_44, "U".scaler_45, "U".scaler_46, "U".scaler_47, "U".scaler_48, "U".scaler_49, "U".scaler_50, "U".scaler_51, "U".scaler_52, "U".scaler_53, "U".scaler_54, "U".scaler_55, "U".scaler_56, "U".scaler_57, "U".scaler_58, "U".scaler_59, "U".scaler_60, "U".scaler_61, "U".scaler_62, "U".scaler_63, "U".scaler_64, "U".scaler_65, "U".scaler_66, "U".scaler_67, "U".scaler_68, "U".scaler_69, "U".scaler_70, "U".scaler_71, "U".scaler_72, "U".scaler_73, "U".scaler_74, "U".scaler_75, "U".scaler_76, "U".scaler_77, "U".scaler_78, "U".scaler_79, "U".scaler_80, "U".scaler_81, "U".scaler_82, "U".scaler_83, "U".scaler_84, "U".scaler_85, "U".scaler_86, "U".scaler_87, "U".scaler_88, "U".scaler_89, "U".scaler_90, "U".scaler_91, "U".scaler_92, "U".scaler_93, "U".scaler_94, "U".scaler_95, "U".scaler_96, "U".scaler_97, "U".scaler_98, "U".scaler_99, "U".scaler_100, "U".scaler_101 
FROM (SELECT "ADS_sca_2_OUT"."KEY", "ADS_sca_2_OUT".scaler_2, "ADS_sca_2_OUT".scaler_3, "ADS_sca_2_OUT".scaler_4, "ADS_sca_2_OUT".scaler_5, "ADS_sca_2_OUT".scaler_6, "ADS_sca_2_OUT".scaler_7, "ADS_sca_2_OUT".scaler_8, "ADS_sca_2_OUT".scaler_9, "ADS_sca_2_OUT".scaler_10, "ADS_sca_2_OUT".scaler_11, "ADS_sca_2_OUT".scaler_12, "ADS_sca_2_OUT".scaler_13, "ADS_sca_2_OUT".scaler_14, "ADS_sca_2_OUT".scaler_15, "ADS_sca_2_OUT".scaler_16, "ADS_sca_2_OUT".scaler_17, "ADS_sca_2_OUT".scaler_18, "ADS_sca_2_OUT".scaler_19, "ADS_sca_2_OUT".scaler_20, "ADS_sca_2_OUT".scaler_21, "ADS_sca_2_OUT".scaler_22, "ADS_sca_2_OUT".scaler_23, "ADS_sca_2_OUT".scaler_24, "ADS_sca_2_OUT".scaler_25, "ADS_sca_2_OUT".scaler_26, "ADS_sca_2_OUT".scaler_27, "ADS_sca_2_OUT".scaler_28, "ADS_sca_2_OUT".scaler_29, "ADS_sca_2_OUT".scaler_30, "ADS_sca_2_OUT".scaler_31, "ADS_sca_2_OUT".scaler_32, "ADS_sca_2_OUT".scaler_33, "ADS_sca_2_OUT".scaler_34, "ADS_sca_2_OUT".scaler_35, "ADS_sca_2_OUT".scaler_36, "ADS_sca_2_OUT".scaler_37, "ADS_sca_2_OUT".scaler_38, "ADS_sca_2_OUT".scaler_39, "ADS_sca_2_OUT".scaler_40, "ADS_sca_2_OUT".scaler_41, "ADS_sca_2_OUT".scaler_42, "ADS_sca_2_OUT".scaler_43, "ADS_sca_2_OUT".scaler_44, "ADS_sca_2_OUT".scaler_45, "ADS_sca_2_OUT".scaler_46, "ADS_sca_2_OUT".scaler_47, "ADS_sca_2_OUT".scaler_48, "ADS_sca_2_OUT".scaler_49, "ADS_sca_2_OUT".scaler_50, "ADS_sca_2_OUT".scaler_51, "ADS_sca_2_OUT".scaler_52, "ADS_sca_2_OUT".scaler_53, "ADS_sca_2_OUT".scaler_54, "ADS_sca_2_OUT".scaler_55, "ADS_sca_2_OUT".scaler_56, "ADS_sca_2_OUT".scaler_57, "ADS_sca_2_OUT".scaler_58, "ADS_sca_2_OUT".scaler_59, "ADS_sca_2_OUT".scaler_60, "ADS_sca_2_OUT".scaler_61, "ADS_sca_2_OUT".scaler_62, "ADS_sca_2_OUT".scaler_63, "ADS_sca_2_OUT".scaler_64, "ADS_sca_2_OUT".scaler_65, "ADS_sca_2_OUT".scaler_66, "ADS_sca_2_OUT".scaler_67, "ADS_sca_2_OUT".scaler_68, "ADS_sca_2_OUT".scaler_69, "ADS_sca_2_OUT".scaler_70, "ADS_sca_2_OUT".scaler_71, "ADS_sca_2_OUT".scaler_72, "ADS_sca_2_OUT".scaler_73, "ADS_sca_2_OUT".scaler_74, "ADS_sca_2_OUT".scaler_75, "ADS_sca_2_OUT".scaler_76, "ADS_sca_2_OUT".scaler_77, "ADS_sca_2_OUT".scaler_78, "ADS_sca_2_OUT".scaler_79, "ADS_sca_2_OUT".scaler_80, "ADS_sca_2_OUT".scaler_81, "ADS_sca_2_OUT".scaler_82, "ADS_sca_2_OUT".scaler_83, "ADS_sca_2_OUT".scaler_84, "ADS_sca_2_OUT".scaler_85, "ADS_sca_2_OUT".scaler_86, "ADS_sca_2_OUT".scaler_87, "ADS_sca_2_OUT".scaler_88, "ADS_sca_2_OUT".scaler_89, "ADS_sca_2_OUT".scaler_90, "ADS_sca_2_OUT".scaler_91, "ADS_sca_2_OUT".scaler_92, "ADS_sca_2_OUT".scaler_93, "ADS_sca_2_OUT".scaler_94, "ADS_sca_2_OUT".scaler_95, "ADS_sca_2_OUT".scaler_96, "ADS_sca_2_OUT".scaler_97, "ADS_sca_2_OUT".scaler_98, "ADS_sca_2_OUT".scaler_99, "ADS_sca_2_OUT".scaler_100, "ADS_sca_2_OUT".scaler_101 
FROM (SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", (CAST("ADS_imp_1_OUT".impter_2 AS BINARY_DOUBLE) - 0.006535740121159998) / 0.9858217119194165 AS scaler_2, (CAST("ADS_imp_1_OUT".impter_3 AS BINARY_DOUBLE) - 0.16767827125978743) / 4.178932779057346 AS scaler_3, (CAST("ADS_imp_1_OUT".impter_4 AS BINARY_DOUBLE) - -0.05514704173583139) / 4.08515606391014 AS scaler_4, (CAST("ADS_imp_1_OUT".impter_5 AS BINARY_DOUBLE) - 0.0015211693051869056) / 1.0583994221255881 AS scaler_5, (CAST("ADS_imp_1_OUT".impter_6 AS BINARY_DOUBLE) - 0.03142760191039923) / 0.9585029014041677 AS scaler_6, (CAST("ADS_imp_1_OUT".impter_7 AS BINARY_DOUBLE) - 0.026179683178748685) / 0.9938548077153438 AS scaler_7, (CAST("ADS_imp_1_OUT".impter_8 AS BINARY_DOUBLE) - -0.011254713122120081) / 0.9959455996367279 AS scaler_8, (CAST("ADS_imp_1_OUT".impter_9 AS BINARY_DOUBLE) - -0.016886211800947296) / 1.0454296780346695 AS scaler_9, (CAST("ADS_imp_1_OUT".impter_10 AS BINARY_DOUBLE) - -0.027342702964496257) / 4.3313567418204935 AS scaler_10, (CAST("ADS_imp_1_OUT".impter_11 AS BINARY_DOUBLE) - -0.16370127884822097) / 4.458898205934484 AS scaler_11, (CAST("ADS_imp_1_OUT".impter_12 AS BINARY_DOUBLE) - 0.03541225073893643) / 1.036616487810755 AS scaler_12, (CAST("ADS_imp_1_OUT".impter_13 AS BINARY_DOUBLE) - -0.028529123475633158) / 1.0046762055522975 AS scaler_13, (CAST("ADS_imp_1_OUT".impter_14 AS BINARY_DOUBLE) - -0.026749444989609742) / 0.9996240267100583 AS scaler_14, (CAST("ADS_imp_1_OUT".impter_15 AS BINARY_DOUBLE) - 0.38601982291131526) / 4.1448047865184865 AS scaler_15, (CAST("ADS_imp_1_OUT".impter_16 AS BINARY_DOUBLE) - 0.01621452573135814) / 1.0172812966673987 AS scaler_16, (CAST("ADS_imp_1_OUT".impter_17 AS BINARY_DOUBLE) - 0.22723775077839256) / 4.367112620179618 AS scaler_17, (CAST("ADS_imp_1_OUT".impter_18 AS BINARY_DOUBLE) - 0.5663734566941232) / 4.118156884045948 AS scaler_18, (CAST("ADS_imp_1_OUT".impter_19 AS BINARY_DOUBLE) - 0.2776964106161551) / 4.014328975715426 AS scaler_19, (CAST("ADS_imp_1_OUT".impter_20 AS BINARY_DOUBLE) - 0.005994326812351447) / 0.9724395023210792 AS scaler_20, (CAST("ADS_imp_1_OUT".impter_21 AS BINARY_DOUBLE) - -0.021852534469692157) / 0.9856875177263738 AS scaler_21, (CAST("ADS_imp_1_OUT".impter_22 AS BINARY_DOUBLE) - -0.028375425917008895) / 1.023103469868883 AS scaler_22, (CAST("ADS_imp_1_OUT".impter_23 AS BINARY_DOUBLE) - 0.015164323296291698) / 4.3531451691819925 AS scaler_23, (CAST("ADS_imp_1_OUT".impter_24 AS BINARY_DOUBLE) - 0.017469134548764743) / 1.0018056542687617 AS scaler_24, (CAST("ADS_imp_1_OUT".impter_25 AS BINARY_DOUBLE) - 0.03493909449429536) / 0.9927216497675313 AS scaler_25, (CAST("ADS_imp_1_OUT".impter_26 AS BINARY_DOUBLE) - -0.1443616076343936) / 4.467397668863504 AS scaler_26, (CAST("ADS_imp_1_OUT".impter_27 AS BINARY_DOUBLE) - 0.1461046774436175) / 4.107342778563649 AS scaler_27, (CAST("ADS_imp_1_OUT".impter_28 AS BINARY_DOUBLE) - 0.06761584237384538) / 4.277643036456077 AS scaler_28, (CAST("ADS_imp_1_OUT".impter_29 AS BINARY_DOUBLE) - -0.3083684560804083) / 4.030195686259092 AS scaler_29, (CAST("ADS_imp_1_OUT".impter_30 AS BINARY_DOUBLE) - 0.9525753017609152) / 4.017302623019134 AS scaler_30, (CAST("ADS_imp_1_OUT".impter_31 AS BINARY_DOUBLE) - -0.05813383910109171) / 4.03353195749377 AS scaler_31, (CAST("ADS_imp_1_OUT".impter_32 AS BINARY_DOUBLE) - -0.013124412714914525) / 0.9551987815662824 AS scaler_32, (CAST("ADS_imp_1_OUT".impter_33 AS BINARY_DOUBLE) - -0.3375512543306959) / 4.106571680414476 AS scaler_33, (CAST("ADS_imp_1_OUT".impter_34 AS BINARY_DOUBLE) - 0.03902651459317101) / 0.9903592253368643 AS scaler_34, (CAST("ADS_imp_1_OUT".impter_35 AS BINARY_DOUBLE) - -0.0402939442131795) / 1.015296116761204 AS scaler_35, (CAST("ADS_imp_1_OUT".impter_36 AS BINARY_DOUBLE) - -0.17161188573704908) / 4.179229563019859 AS scaler_36, (CAST("ADS_imp_1_OUT".impter_37 AS BINARY_DOUBLE) - 0.012647786868640112) / 1.0078307618647784 AS scaler_37, (CAST("ADS_imp_1_OUT".impter_38 AS BINARY_DOUBLE) - 0.005193735308514513) / 4.297332183672823 AS scaler_38, (CAST("ADS_imp_1_OUT".impter_39 AS BINARY_DOUBLE) - -0.017160876576937396) / 1.0173788557066636 AS scaler_39, (CAST("ADS_imp_1_OUT".impter_40 AS BINARY_DOUBLE) - 0.045036155997948996) / 3.904281136786187 AS scaler_40, (CAST("ADS_imp_1_OUT".impter_41 AS BINARY_DOUBLE) - -0.12035820022636322) / 3.9840286036228636 AS scaler_41, (CAST("ADS_imp_1_OUT".impter_42 AS BINARY_DOUBLE) - -0.17640392282213266) / 4.069314637621373 AS scaler_42, (CAST("ADS_imp_1_OUT".impter_43 AS BINARY_DOUBLE) - -0.015157075927040681) / 1.0291573895450885 AS scaler_43, (CAST("ADS_imp_1_OUT".impter_44 AS BINARY_DOUBLE) - -0.3068740190578085) / 4.347912512213832 AS scaler_44, (CAST("ADS_imp_1_OUT".impter_45 AS BINARY_DOUBLE) - -0.04035458069305412) / 4.050643773807161 AS scaler_45, (CAST("ADS_imp_1_OUT".impter_46 AS BINARY_DOUBLE) - -0.00789981512459992) / 1.0063754765912263 AS scaler_46, (CAST("ADS_imp_1_OUT".impter_47 AS BINARY_DOUBLE) - 0.002647932254171184) / 1.0021447755850712 AS scaler_47, (CAST("ADS_imp_1_OUT".impter_48 AS BINARY_DOUBLE) - -0.1492108459830671) / 4.103402009893949 AS scaler_48, (CAST("ADS_imp_1_OUT".impter_49 AS BINARY_DOUBLE) - 0.24895399236878446) / 4.232200380326287 AS scaler_49, (CAST("ADS_imp_1_OUT".impter_50 AS BINARY_DOUBLE) - -0.7004243979718509) / 4.220766541993596 AS scaler_50, (CAST("ADS_imp_1_OUT".impter_51 AS BINARY_DOUBLE) - 0.025527673750135163) / 1.0206740927253968 AS scaler_51, (CAST("ADS_imp_1_OUT".impter_52 AS BINARY_DOUBLE) - -0.15642138685028584) / 4.078310671245767 AS scaler_52, (CAST("ADS_imp_1_OUT".impter_53 AS BINARY_DOUBLE) - -0.12783857717811203) / 4.247236801364965 AS scaler_53, (CAST("ADS_imp_1_OUT".impter_54 AS BINARY_DOUBLE) - -0.3698795238326839) / 4.037675848477055 AS scaler_54, (CAST("ADS_imp_1_OUT".impter_55 AS BINARY_DOUBLE) - 0.04105474558890989) / 4.445571371438813 AS scaler_55, (CAST("ADS_imp_1_OUT".impter_56 AS BINARY_DOUBLE) - -0.10047427531359215) / 4.045836826444957 AS scaler_56, (CAST("ADS_imp_1_OUT".impter_57 AS BINARY_DOUBLE) - -0.1312728865356366) / 4.256606009499921 AS scaler_57, (CAST("ADS_imp_1_OUT".impter_58 AS BINARY_DOUBLE) - 0.3685784313653654) / 4.04294690880675 AS scaler_58, (CAST("ADS_imp_1_OUT".impter_59 AS BINARY_DOUBLE) - 0.22281246520596887) / 4.252398068764952 AS scaler_59, (CAST("ADS_imp_1_OUT".impter_60 AS BINARY_DOUBLE) - -0.006274087618403553) / 1.013175429895288 AS scaler_60, (CAST("ADS_imp_1_OUT".impter_61 AS BINARY_DOUBLE) - 0.014268598957774136) / 0.9752324561731636 AS scaler_61, (CAST("ADS_imp_1_OUT".impter_62 AS BINARY_DOUBLE) - -0.028545511573860538) / 0.9960176612179306 AS scaler_62, (CAST("ADS_imp_1_OUT".impter_63 AS BINARY_DOUBLE) - -0.4374918318496328) / 4.2387592565605035 AS scaler_63, (CAST("ADS_imp_1_OUT".impter_64 AS BINARY_DOUBLE) - -0.3689927805875731) / 4.18274187652401 AS scaler_64, (CAST("ADS_imp_1_OUT".impter_65 AS BINARY_DOUBLE) - 0.0011690418193188894) / 1.0433365249916253 AS scaler_65, (CAST("ADS_imp_1_OUT".impter_66 AS BINARY_DOUBLE) - -0.011564873717580429) / 4.081504294152238 AS scaler_66, (CAST("ADS_imp_1_OUT".impter_67 AS BINARY_DOUBLE) - -0.04358769989694412) / 1.058664519012294 AS scaler_67, (CAST("ADS_imp_1_OUT".impter_68 AS BINARY_DOUBLE) - -0.1618634137390173) / 4.259666235165136 AS scaler_68, (CAST("ADS_imp_1_OUT".impter_69 AS BINARY_DOUBLE) - -0.01727264153501617) / 1.0103058334402957 AS scaler_69, (CAST("ADS_imp_1_OUT".impter_70 AS BINARY_DOUBLE) - -0.36403022036864674) / 4.23529048916204 AS scaler_70, (CAST("ADS_imp_1_OUT".impter_71 AS BINARY_DOUBLE) - -0.049273006502403176) / 4.310802365306347 AS scaler_71, (CAST("ADS_imp_1_OUT".impter_72 AS BINARY_DOUBLE) - -0.015468512657334297) / 1.010660801531323 AS scaler_72, (CAST("ADS_imp_1_OUT".impter_73 AS BINARY_DOUBLE) - -0.19162939351279548) / 4.1160449655484435 AS scaler_73, (CAST("ADS_imp_1_OUT".impter_74 AS BINARY_DOUBLE) - 0.023782830321603186) / 0.997185935238241 AS scaler_74, (CAST("ADS_imp_1_OUT".impter_75 AS BINARY_DOUBLE) - 0.020454799672569742) / 0.9640474876793701 AS scaler_75, (CAST("ADS_imp_1_OUT".impter_76 AS BINARY_DOUBLE) - -0.17335534659313448) / 4.268840083291991 AS scaler_76, (CAST("ADS_imp_1_OUT".impter_77 AS BINARY_DOUBLE) - 0.02758228824576348) / 1.0028736371502236 AS scaler_77, (CAST("ADS_imp_1_OUT".impter_78 AS BINARY_DOUBLE) - -0.015452336678168777) / 0.9517969728776562 AS scaler_78, (CAST("ADS_imp_1_OUT".impter_79 AS BINARY_DOUBLE) - -0.0425555457732581) / 1.026041980115793 AS scaler_79, (CAST("ADS_imp_1_OUT".impter_80 AS BINARY_DOUBLE) - -0.009425736580365328) / 0.9815479331628068 AS scaler_80, (CAST("ADS_imp_1_OUT".impter_81 AS BINARY_DOUBLE) - 0.007423677489325057) / 1.0171447637961626 AS scaler_81, (CAST("ADS_imp_1_OUT".impter_82 AS BINARY_DOUBLE) - 0.0498533264368169) / 1.013812175189716 AS scaler_82, (CAST("ADS_imp_1_OUT".impter_83 AS BINARY_DOUBLE) - 0.027960221179443) / 1.0049331087863325 AS scaler_83, (CAST("ADS_imp_1_OUT".impter_84 AS BINARY_DOUBLE) - -0.005270502487579236) / 1.0233252849148293 AS scaler_84, (CAST("ADS_imp_1_OUT".impter_85 AS BINARY_DOUBLE) - -0.053393611774246875) / 1.0045891919932883 AS scaler_85, (CAST("ADS_imp_1_OUT".impter_86 AS BINARY_DOUBLE) - 0.17162033288561043) / 4.2488442757828695 AS scaler_86, (CAST("ADS_imp_1_OUT".impter_87 AS BINARY_DOUBLE) - 0.037211997007404414) / 4.254048583081737 AS scaler_87, (CAST("ADS_imp_1_OUT".impter_88 AS BINARY_DOUBLE) - 0.01843497333044896) / 3.9497288408894384 AS scaler_88, (CAST("ADS_imp_1_OUT".impter_89 AS BINARY_DOUBLE) - 0.5605216326173627) / 4.331332438981666 AS scaler_89, (CAST("ADS_imp_1_OUT".impter_90 AS BINARY_DOUBLE) - -0.05285046291900049) / 1.0358397102155001 AS scaler_90, (CAST("ADS_imp_1_OUT".impter_91 AS BINARY_DOUBLE) - 0.07939021734244131) / 0.9698764460278291 AS scaler_91, (CAST("ADS_imp_1_OUT".impter_92 AS BINARY_DOUBLE) - -2.088667163118704) / 15.30221524651991 AS scaler_92, (CAST("ADS_imp_1_OUT".impter_93 AS BINARY_DOUBLE) - -1.0831020638954625) / 4.3671090202705205 AS scaler_93, (CAST("ADS_imp_1_OUT".impter_94 AS BINARY_DOUBLE) - -0.30470236282124374) / 4.204292362348631 AS scaler_94, (CAST("ADS_imp_1_OUT".impter_95 AS BINARY_DOUBLE) - -0.9354262595637257) / 15.357005766716696 AS scaler_95, (CAST("ADS_imp_1_OUT".impter_96 AS BINARY_DOUBLE) - -0.09841121992703274) / 0.952484869943965 AS scaler_96, (CAST("ADS_imp_1_OUT".impter_97 AS BINARY_DOUBLE) - -0.5316534843603434) / 3.977000718240084 AS scaler_97, (CAST("ADS_imp_1_OUT".impter_98 AS BINARY_DOUBLE) - 0.014127422137804999) / 0.9879258925411053 AS scaler_98, (CAST("ADS_imp_1_OUT".impter_99 AS BINARY_DOUBLE) - -0.012631277412677116) / 1.0151964448341175 AS scaler_99, (CAST("ADS_imp_1_OUT".impter_100 AS BINARY_DOUBLE) - 0.031286881233113274) / 0.9893618024210226 AS scaler_100, (CAST("ADS_imp_1_OUT".impter_101 AS BINARY_DOUBLE) - -0.45039051538460234) / 4.244700325091397 AS scaler_101 
FROM "33814_6ANZUW_ADS_IMP_1_OUT" "ADS_imp_1_OUT") "ADS_sca_2_OUT") "U"

-- Model deployment code

WITH linear_input AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CAST("ADS_sca_2_OUT".scaler_2 AS BINARY_DOUBLE) AS scaler_2, CAST("ADS_sca_2_OUT".scaler_3 AS BINARY_DOUBLE) AS scaler_3, CAST("ADS_sca_2_OUT".scaler_4 AS BINARY_DOUBLE) AS scaler_4, CAST("ADS_sca_2_OUT".scaler_5 AS BINARY_DOUBLE) AS scaler_5, CAST("ADS_sca_2_OUT".scaler_6 AS BINARY_DOUBLE) AS scaler_6, CAST("ADS_sca_2_OUT".scaler_7 AS BINARY_DOUBLE) AS scaler_7, CAST("ADS_sca_2_OUT".scaler_8 AS BINARY_DOUBLE) AS scaler_8, CAST("ADS_sca_2_OUT".scaler_9 AS BINARY_DOUBLE) AS scaler_9, CAST("ADS_sca_2_OUT".scaler_10 AS BINARY_DOUBLE) AS scaler_10, CAST("ADS_sca_2_OUT".scaler_11 AS BINARY_DOUBLE) AS scaler_11, CAST("ADS_sca_2_OUT".scaler_12 AS BINARY_DOUBLE) AS scaler_12, CAST("ADS_sca_2_OUT".scaler_13 AS BINARY_DOUBLE) AS scaler_13, CAST("ADS_sca_2_OUT".scaler_14 AS BINARY_DOUBLE) AS scaler_14, CAST("ADS_sca_2_OUT".scaler_15 AS BINARY_DOUBLE) AS scaler_15, CAST("ADS_sca_2_OUT".scaler_16 AS BINARY_DOUBLE) AS scaler_16, CAST("ADS_sca_2_OUT".scaler_17 AS BINARY_DOUBLE) AS scaler_17, CAST("ADS_sca_2_OUT".scaler_18 AS BINARY_DOUBLE) AS scaler_18, CAST("ADS_sca_2_OUT".scaler_19 AS BINARY_DOUBLE) AS scaler_19, CAST("ADS_sca_2_OUT".scaler_20 AS BINARY_DOUBLE) AS scaler_20, CAST("ADS_sca_2_OUT".scaler_21 AS BINARY_DOUBLE) AS scaler_21, CAST("ADS_sca_2_OUT".scaler_22 AS BINARY_DOUBLE) AS scaler_22, CAST("ADS_sca_2_OUT".scaler_23 AS BINARY_DOUBLE) AS scaler_23, CAST("ADS_sca_2_OUT".scaler_24 AS BINARY_DOUBLE) AS scaler_24, CAST("ADS_sca_2_OUT".scaler_25 AS BINARY_DOUBLE) AS scaler_25, CAST("ADS_sca_2_OUT".scaler_26 AS BINARY_DOUBLE) AS scaler_26, CAST("ADS_sca_2_OUT".scaler_27 AS BINARY_DOUBLE) AS scaler_27, CAST("ADS_sca_2_OUT".scaler_28 AS BINARY_DOUBLE) AS scaler_28, CAST("ADS_sca_2_OUT".scaler_29 AS BINARY_DOUBLE) AS scaler_29, CAST("ADS_sca_2_OUT".scaler_30 AS BINARY_DOUBLE) AS scaler_30, CAST("ADS_sca_2_OUT".scaler_31 AS BINARY_DOUBLE) AS scaler_31, CAST("ADS_sca_2_OUT".scaler_32 AS BINARY_DOUBLE) AS scaler_32, CAST("ADS_sca_2_OUT".scaler_33 AS BINARY_DOUBLE) AS scaler_33, CAST("ADS_sca_2_OUT".scaler_34 AS BINARY_DOUBLE) AS scaler_34, CAST("ADS_sca_2_OUT".scaler_35 AS BINARY_DOUBLE) AS scaler_35, CAST("ADS_sca_2_OUT".scaler_36 AS BINARY_DOUBLE) AS scaler_36, CAST("ADS_sca_2_OUT".scaler_37 AS BINARY_DOUBLE) AS scaler_37, CAST("ADS_sca_2_OUT".scaler_38 AS BINARY_DOUBLE) AS scaler_38, CAST("ADS_sca_2_OUT".scaler_39 AS BINARY_DOUBLE) AS scaler_39, CAST("ADS_sca_2_OUT".scaler_40 AS BINARY_DOUBLE) AS scaler_40, CAST("ADS_sca_2_OUT".scaler_41 AS BINARY_DOUBLE) AS scaler_41, CAST("ADS_sca_2_OUT".scaler_42 AS BINARY_DOUBLE) AS scaler_42, CAST("ADS_sca_2_OUT".scaler_43 AS BINARY_DOUBLE) AS scaler_43, CAST("ADS_sca_2_OUT".scaler_44 AS BINARY_DOUBLE) AS scaler_44, CAST("ADS_sca_2_OUT".scaler_45 AS BINARY_DOUBLE) AS scaler_45, CAST("ADS_sca_2_OUT".scaler_46 AS BINARY_DOUBLE) AS scaler_46, CAST("ADS_sca_2_OUT".scaler_47 AS BINARY_DOUBLE) AS scaler_47, CAST("ADS_sca_2_OUT".scaler_48 AS BINARY_DOUBLE) AS scaler_48, CAST("ADS_sca_2_OUT".scaler_49 AS BINARY_DOUBLE) AS scaler_49, CAST("ADS_sca_2_OUT".scaler_50 AS BINARY_DOUBLE) AS scaler_50, CAST("ADS_sca_2_OUT".scaler_51 AS BINARY_DOUBLE) AS scaler_51, CAST("ADS_sca_2_OUT".scaler_52 AS BINARY_DOUBLE) AS scaler_52, CAST("ADS_sca_2_OUT".scaler_53 AS BINARY_DOUBLE) AS scaler_53, CAST("ADS_sca_2_OUT".scaler_54 AS BINARY_DOUBLE) AS scaler_54, CAST("ADS_sca_2_OUT".scaler_55 AS BINARY_DOUBLE) AS scaler_55, CAST("ADS_sca_2_OUT".scaler_56 AS BINARY_DOUBLE) AS scaler_56, CAST("ADS_sca_2_OUT".scaler_57 AS BINARY_DOUBLE) AS scaler_57, CAST("ADS_sca_2_OUT".scaler_58 AS BINARY_DOUBLE) AS scaler_58, CAST("ADS_sca_2_OUT".scaler_59 AS BINARY_DOUBLE) AS scaler_59, CAST("ADS_sca_2_OUT".scaler_60 AS BINARY_DOUBLE) AS scaler_60, CAST("ADS_sca_2_OUT".scaler_61 AS BINARY_DOUBLE) AS scaler_61, CAST("ADS_sca_2_OUT".scaler_62 AS BINARY_DOUBLE) AS scaler_62, CAST("ADS_sca_2_OUT".scaler_63 AS BINARY_DOUBLE) AS scaler_63, CAST("ADS_sca_2_OUT".scaler_64 AS BINARY_DOUBLE) AS scaler_64, CAST("ADS_sca_2_OUT".scaler_65 AS BINARY_DOUBLE) AS scaler_65, CAST("ADS_sca_2_OUT".scaler_66 AS BINARY_DOUBLE) AS scaler_66, CAST("ADS_sca_2_OUT".scaler_67 AS BINARY_DOUBLE) AS scaler_67, CAST("ADS_sca_2_OUT".scaler_68 AS BINARY_DOUBLE) AS scaler_68, CAST("ADS_sca_2_OUT".scaler_69 AS BINARY_DOUBLE) AS scaler_69, CAST("ADS_sca_2_OUT".scaler_70 AS BINARY_DOUBLE) AS scaler_70, CAST("ADS_sca_2_OUT".scaler_71 AS BINARY_DOUBLE) AS scaler_71, CAST("ADS_sca_2_OUT".scaler_72 AS BINARY_DOUBLE) AS scaler_72, CAST("ADS_sca_2_OUT".scaler_73 AS BINARY_DOUBLE) AS scaler_73, CAST("ADS_sca_2_OUT".scaler_74 AS BINARY_DOUBLE) AS scaler_74, CAST("ADS_sca_2_OUT".scaler_75 AS BINARY_DOUBLE) AS scaler_75, CAST("ADS_sca_2_OUT".scaler_76 AS BINARY_DOUBLE) AS scaler_76, CAST("ADS_sca_2_OUT".scaler_77 AS BINARY_DOUBLE) AS scaler_77, CAST("ADS_sca_2_OUT".scaler_78 AS BINARY_DOUBLE) AS scaler_78, CAST("ADS_sca_2_OUT".scaler_79 AS BINARY_DOUBLE) AS scaler_79, CAST("ADS_sca_2_OUT".scaler_80 AS BINARY_DOUBLE) AS scaler_80, CAST("ADS_sca_2_OUT".scaler_81 AS BINARY_DOUBLE) AS scaler_81, CAST("ADS_sca_2_OUT".scaler_82 AS BINARY_DOUBLE) AS scaler_82, CAST("ADS_sca_2_OUT".scaler_83 AS BINARY_DOUBLE) AS scaler_83, CAST("ADS_sca_2_OUT".scaler_84 AS BINARY_DOUBLE) AS scaler_84, CAST("ADS_sca_2_OUT".scaler_85 AS BINARY_DOUBLE) AS scaler_85, CAST("ADS_sca_2_OUT".scaler_86 AS BINARY_DOUBLE) AS scaler_86, CAST("ADS_sca_2_OUT".scaler_87 AS BINARY_DOUBLE) AS scaler_87, CAST("ADS_sca_2_OUT".scaler_88 AS BINARY_DOUBLE) AS scaler_88, CAST("ADS_sca_2_OUT".scaler_89 AS BINARY_DOUBLE) AS scaler_89, CAST("ADS_sca_2_OUT".scaler_90 AS BINARY_DOUBLE) AS scaler_90, CAST("ADS_sca_2_OUT".scaler_91 AS BINARY_DOUBLE) AS scaler_91, CAST("ADS_sca_2_OUT".scaler_92 AS BINARY_DOUBLE) AS scaler_92, CAST("ADS_sca_2_OUT".scaler_93 AS BINARY_DOUBLE) AS scaler_93, CAST("ADS_sca_2_OUT".scaler_94 AS BINARY_DOUBLE) AS scaler_94, CAST("ADS_sca_2_OUT".scaler_95 AS BINARY_DOUBLE) AS scaler_95, CAST("ADS_sca_2_OUT".scaler_96 AS BINARY_DOUBLE) AS scaler_96, CAST("ADS_sca_2_OUT".scaler_97 AS BINARY_DOUBLE) AS scaler_97, CAST("ADS_sca_2_OUT".scaler_98 AS BINARY_DOUBLE) AS scaler_98, CAST("ADS_sca_2_OUT".scaler_99 AS BINARY_DOUBLE) AS scaler_99, CAST("ADS_sca_2_OUT".scaler_100 AS BINARY_DOUBLE) AS scaler_100, CAST("ADS_sca_2_OUT".scaler_101 AS BINARY_DOUBLE) AS scaler_101 
FROM "33814_T6CLJL_ADS_SCA_2_OUT" "ADS_sca_2_OUT"), 
linear_model_cte AS 
(SELECT linear_input."KEY" AS "KEY", -0.007100579147716506 * linear_input.scaler_2 + 0.020261453876379537 * linear_input.scaler_3 + -0.1248514788748858 * linear_input.scaler_4 + -0.020007700944294167 * linear_input.scaler_5 + 0.02820897404639038 * linear_input.scaler_6 + -0.03995212383758155 * linear_input.scaler_7 + 0.01645690007917693 * linear_input.scaler_8 + 0.0075266067560492205 * linear_input.scaler_9 + -0.1191367798697686 * linear_input.scaler_10 + 0.02862383165674816 * linear_input.scaler_11 + -0.025136956764577157 * linear_input.scaler_12 + 0.013237908815813645 * linear_input.scaler_13 + 0.017185289292435554 * linear_input.scaler_14 + -0.05020410036701169 * linear_input.scaler_15 + -0.006151088634561468 * linear_input.scaler_16 + 0.09195244099355233 * linear_input.scaler_17 + 0.05916513160835981 * linear_input.scaler_18 + -0.15603289352619562 * linear_input.scaler_19 + -0.044517044450981626 * linear_input.scaler_20 + 0.03045087868161249 * linear_input.scaler_21 + -0.033829328851293944 * linear_input.scaler_22 + -0.002498230229081836 * linear_input.scaler_23 + 0.008150643444566135 * linear_input.scaler_24 + -0.01582116361699195 * linear_input.scaler_25 + -0.08219000002054763 * linear_input.scaler_26 + 0.10162629527980685 * linear_input.scaler_27 + -0.005783776494836463 * linear_input.scaler_28 + -0.11711822962703237 * linear_input.scaler_29 + 0.04709583895619387 * linear_input.scaler_30 + -0.009436935419722278 * linear_input.scaler_31 + 0.013141538269992257 * linear_input.scaler_32 + -0.06341893260367382 * linear_input.scaler_33 + -0.0035069948131443446 * linear_input.scaler_34 + -0.021487371986219223 * linear_input.scaler_35 + 0.16478964138311852 * linear_input.scaler_36 + 0.01088974533763464 * linear_input.scaler_37 + -0.021595682472109558 * linear_input.scaler_38 + -0.0381622242129263 * linear_input.scaler_39 + -0.05223731787177824 * linear_input.scaler_40 + 0.02252707004927041 * linear_input.scaler_41 + 0.1105590238071556 * linear_input.scaler_42 + -0.02593218725320767 * linear_input.scaler_43 + 0.03448098874514302 * linear_input.scaler_44 + 0.022647584604950123 * linear_input.scaler_45 + 0.000436907201939007 * linear_input.scaler_46 + -0.024806209451816576 * linear_input.scaler_47 + 0.0013221986549537051 * linear_input.scaler_48 + 0.09101255262410038 * linear_input.scaler_49 + -0.0748990971196192 * linear_input.scaler_50 + 0.00565177526644314 * linear_input.scaler_51 + 0.00786460463744358 * linear_input.scaler_52 + 0.09391731727519624 * linear_input.scaler_53 + 0.08397584620454565 * linear_input.scaler_54 + -0.053718854613529494 * linear_input.scaler_55 + 0.054108628923299075 * linear_input.scaler_56 + 0.01875249688564469 * linear_input.scaler_57 + -0.09624318306576865 * linear_input.scaler_58 + -0.030095983666982292 * linear_input.scaler_59 + 0.016784500823363715 * linear_input.scaler_60 + -0.011025647391235755 * linear_input.scaler_61 + -0.00736928946653358 * linear_input.scaler_62 + 0.0006947354495747054 * linear_input.scaler_63 + -0.0039020412007614467 * linear_input.scaler_64 + -0.029866410267362364 * linear_input.scaler_65 + -0.07276283295389181 * linear_input.scaler_66 + 0.003893240931158518 * linear_input.scaler_67 + -0.01742249124272989 * linear_input.scaler_68 + 0.03426589872738457 * linear_input.scaler_69 + -0.13438990124862632 * linear_input.scaler_70 + 0.05605868825101537 * linear_input.scaler_71 + -0.025716859223205435 * linear_input.scaler_72 + 0.03998196409429582 * linear_input.scaler_73 + -0.011305211736318935 * linear_input.scaler_74 + 0.010537552695549079 * linear_input.scaler_75 + -0.08460337436480424 * linear_input.scaler_76 + 0.0013537975737614343 * linear_input.scaler_77 + -0.0427029551082697 * linear_input.scaler_78 + -0.016692995164652766 * linear_input.scaler_79 + 0.006967762527516257 * linear_input.scaler_80 + -0.012915338488735724 * linear_input.scaler_81 + 0.00846506432273983 * linear_input.scaler_82 + -0.067953524735122 * linear_input.scaler_83 + -0.003999582372456302 * linear_input.scaler_84 + -0.029939539474144933 * linear_input.scaler_85 + 0.08028598984029175 * linear_input.scaler_86 + 0.05013693173998233 * linear_input.scaler_87 + 0.08094136406472095 * linear_input.scaler_88 + 0.022871115547846953 * linear_input.scaler_89 + 0.035755399090348645 * linear_input.scaler_90 + -0.016578601921344336 * linear_input.scaler_91 + 0.07902968700854024 * linear_input.scaler_92 + 0.026314267148526225 * linear_input.scaler_93 + -0.023152879585640124 * linear_input.scaler_94 + -0.030707000679593057 * linear_input.scaler_95 + -0.042575018466657504 * linear_input.scaler_96 + 0.10195587919487475 * linear_input.scaler_97 + -0.022597607578361007 * linear_input.scaler_98 + -0.006107096283588445 * linear_input.scaler_99 + -0.022338641132149763 * linear_input.scaler_100 + -0.049460424144490485 * linear_input.scaler_101 + -0.51 AS "Score_0", 0.01827783495616373 * linear_input.scaler_2 + 0.007629419105473146 * linear_input.scaler_3 + 0.06347242721213606 * linear_input.scaler_4 + -0.0391345058491861 * linear_input.scaler_5 + -0.009030018956822105 * linear_input.scaler_6 + -0.0130635289317403 * linear_input.scaler_7 + 0.051734377147795926 * linear_input.scaler_8 + -0.006266716274334887 * linear_input.scaler_9 + 0.015970239983599897 * linear_input.scaler_10 + -0.00998409089046794 * linear_input.scaler_11 + 8.430779842326025e-05 * linear_input.scaler_12 + -0.014164220325007035 * linear_input.scaler_13 + 0.016783460284011273 * linear_input.scaler_14 + 0.10011114989688816 * linear_input.scaler_15 + -0.04058507928696139 * linear_input.scaler_16 + -0.051747069562145115 * linear_input.scaler_17 + -0.03303694993496697 * linear_input.scaler_18 + -0.007384585436005151 * linear_input.scaler_19 + 0.03960620496732817 * linear_input.scaler_20 + -0.005555339619754809 * linear_input.scaler_21 + 0.03840730805112604 * linear_input.scaler_22 + -0.006382588938454722 * linear_input.scaler_23 + 0.030069047889154283 * linear_input.scaler_24 + -0.0424687961701969 * linear_input.scaler_25 + 0.05573656205663355 * linear_input.scaler_26 + -0.05454474564712425 * linear_input.scaler_27 + 0.015630745895752304 * linear_input.scaler_28 + 0.14594653289630313 * linear_input.scaler_29 + 0.001678712932191936 * linear_input.scaler_30 + 0.04996048563073872 * linear_input.scaler_31 + 0.009240830427922182 * linear_input.scaler_32 + 0.08416491581450197 * linear_input.scaler_33 + -0.0031065581260667635 * linear_input.scaler_34 + -0.022393738832279297 * linear_input.scaler_35 + -0.012962088600426643 * linear_input.scaler_36 + 0.008801311326355062 * linear_input.scaler_37 + 0.03688875953725011 * linear_input.scaler_38 + -0.007077187988796811 * linear_input.scaler_39 + 0.05311097929710944 * linear_input.scaler_40 + 0.03536942054523811 * linear_input.scaler_41 + -0.13199318110349442 * linear_input.scaler_42 + -0.0019189686092649545 * linear_input.scaler_43 + -0.0743075755912195 * linear_input.scaler_44 + 0.1070245425141526 * linear_input.scaler_45 + 0.04228557105877511 * linear_input.scaler_46 + 0.005671725868870974 * linear_input.scaler_47 + 0.0238509525393599 * linear_input.scaler_48 + -0.029318417449082614 * linear_input.scaler_49 + -0.04934840664500151 * linear_input.scaler_50 + 0.009614253036917502 * linear_input.scaler_51 + 0.05311041969275402 * linear_input.scaler_52 + -0.02495394952883266 * linear_input.scaler_53 + 0.08549247755882555 * linear_input.scaler_54 + 0.042381636082025304 * linear_input.scaler_55 + 0.02417690239887752 * linear_input.scaler_56 + -0.09818534090570044 * linear_input.scaler_57 + 0.08244183187678993 * linear_input.scaler_58 + -0.051011920860137186 * linear_input.scaler_59 + -0.05369868770831805 * linear_input.scaler_60 + 0.037277112592037864 * linear_input.scaler_61 + -0.01334886869171178 * linear_input.scaler_62 + 0.02419150486248419 * linear_input.scaler_63 + -0.013063893594404458 * linear_input.scaler_64 + 0.018910204579385897 * linear_input.scaler_65 + -0.10875171731654261 * linear_input.scaler_66 + -0.056331129817742416 * linear_input.scaler_67 + -0.05299147420678087 * linear_input.scaler_68 + 0.00264621659595463 * linear_input.scaler_69 + -0.03718924435121393 * linear_input.scaler_70 + -0.051005344278942044 * linear_input.scaler_71 + 0.013429508093684884 * linear_input.scaler_72 + -0.050434385437670815 * linear_input.scaler_73 + -0.004000474112967499 * linear_input.scaler_74 + -0.016084326548458462 * linear_input.scaler_75 + 0.04315106171873537 * linear_input.scaler_76 + -0.03057473881537261 * linear_input.scaler_77 + 0.011485099071686997 * linear_input.scaler_78 + 0.009743012549561126 * linear_input.scaler_79 + -0.0046123351824878655 * linear_input.scaler_80 + 0.009380807348429294 * linear_input.scaler_81 + -0.029909215774748154 * linear_input.scaler_82 + 0.009184121659636476 * linear_input.scaler_83 + -0.06399700799769868 * linear_input.scaler_84 + 0.003378423541880578 * linear_input.scaler_85 + 0.059812659290900835 * linear_input.scaler_86 + -0.07016918681516607 * linear_input.scaler_87 + 0.08554018966412574 * linear_input.scaler_88 + 0.024078540007893997 * linear_input.scaler_89 + -0.073296449938811 * linear_input.scaler_90 + -0.00031648728861893095 * linear_input.scaler_91 + -0.002589823040659058 * linear_input.scaler_92 + 0.052152238577099434 * linear_input.scaler_93 + -0.10596592071638199 * linear_input.scaler_94 + -0.004872937256804136 * linear_input.scaler_95 + 0.019480753898880546 * linear_input.scaler_96 + -0.041585739427884946 * linear_input.scaler_97 + 0.007558784700071305 * linear_input.scaler_98 + 0.02018917397711522 * linear_input.scaler_99 + 0.002667410162104781 * linear_input.scaler_100 + 0.06880265226929311 * linear_input.scaler_101 + -0.5024999999999998 AS "Score_1", -0.02543530123812308 * linear_input.scaler_2 + -0.006336930511454085 * linear_input.scaler_3 + 0.09009321149032956 * linear_input.scaler_4 + 0.04298075078160317 * linear_input.scaler_5 + 0.007883272682793412 * linear_input.scaler_6 + 0.033502610509760146 * linear_input.scaler_7 + -0.010921732698984006 * linear_input.scaler_8 + 0.021027840444346028 * linear_input.scaler_9 + 0.027406127456504066 * linear_input.scaler_10 + 0.068195256560987 * linear_input.scaler_11 + 0.0022630942012247337 * linear_input.scaler_12 + -0.020437635593769717 * linear_input.scaler_13 + -0.04824120349388738 * linear_input.scaler_14 + -0.0723391124879884 * linear_input.scaler_15 + -0.0054120959452086 * linear_input.scaler_16 + -0.15812292638915784 * linear_input.scaler_17 + 0.04411931887987519 * linear_input.scaler_18 + 0.03558189219685969 * linear_input.scaler_19 + 0.025282910151777756 * linear_input.scaler_20 + 0.016232004476317296 * linear_input.scaler_21 + 0.004673778273570074 * linear_input.scaler_22 + 0.002210512383523232 * linear_input.scaler_23 + -0.011713059359205866 * linear_input.scaler_24 + 0.013462146185295468 * linear_input.scaler_25 + 0.03800989489307107 * linear_input.scaler_26 + 0.04181443838946749 * linear_input.scaler_27 + 0.0423170630891612 * linear_input.scaler_28 + -0.051708080266239055 * linear_input.scaler_29 + -0.022470717762554864 * linear_input.scaler_30 + 0.04697006910998588 * linear_input.scaler_31 + 0.01366537019623062 * linear_input.scaler_32 + -0.009577564227269277 * linear_input.scaler_33 + 0.017958014539631917 * linear_input.scaler_34 + 0.023470253128756825 * linear_input.scaler_35 + -0.07855175875379963 * linear_input.scaler_36 + -0.02673274879719578 * linear_input.scaler_37 + 0.05656080724410803 * linear_input.scaler_38 + 0.02756739955628868 * linear_input.scaler_39 + 0.17257350576928457 * linear_input.scaler_40 + -0.11462664328219233 * linear_input.scaler_41 + -0.035947835174533385 * linear_input.scaler_42 + -0.015234875963374507 * linear_input.scaler_43 + 0.0389515546629934 * linear_input.scaler_44 + 0.029452889067274203 * linear_input.scaler_45 + -0.03438342699828086 * linear_input.scaler_46 + -0.011463669512939359 * linear_input.scaler_47 + -0.017286780490429306 * linear_input.scaler_48 + -0.05502465907881316 * linear_input.scaler_49 + 0.09793780046980045 * linear_input.scaler_50 + 0.020051369211263034 * linear_input.scaler_51 + 0.04260850698601713 * linear_input.scaler_52 + -0.08414161881470228 * linear_input.scaler_53 + -0.10574795675811449 * linear_input.scaler_54 + 0.06845698334577212 * linear_input.scaler_55 + -0.049654322865594215 * linear_input.scaler_56 + 0.055537809051497994 * linear_input.scaler_57 + 0.0750834152805663 * linear_input.scaler_58 + 0.06205187010080787 * linear_input.scaler_59 + 0.01655346714154052 * linear_input.scaler_60 + -0.07022637820635699 * linear_input.scaler_61 + 0.005609527445006753 * linear_input.scaler_62 + -0.15029777085452145 * linear_input.scaler_63 + 0.002926489769819219 * linear_input.scaler_64 + -0.019422701580442053 * linear_input.scaler_65 + 0.09305163042156349 * linear_input.scaler_66 + 0.043490333174082074 * linear_input.scaler_67 + 0.14591704163572475 * linear_input.scaler_68 + 0.053118684843219126 * linear_input.scaler_69 + 0.07157555500328894 * linear_input.scaler_70 + 0.01212061708084815 * linear_input.scaler_71 + 0.004896610488962034 * linear_input.scaler_72 + -0.0630624645084459 * linear_input.scaler_73 + -0.00999351781477653 * linear_input.scaler_74 + 0.020365092619842592 * linear_input.scaler_75 + -0.07341735364114275 * linear_input.scaler_76 + -0.012343499862698018 * linear_input.scaler_77 + 0.030938393536984504 * linear_input.scaler_78 + -0.0009464901681698547 * linear_input.scaler_79 + 0.0032555181475100487 * linear_input.scaler_80 + -0.02378192567961246 * linear_input.scaler_81 + 0.0205573082825684 * linear_input.scaler_82 + 0.04482413478567546 * linear_input.scaler_83 + 0.027946877992169945 * linear_input.scaler_84 + -0.018759754692460953 * linear_input.scaler_85 + 0.03361123976069212 * linear_input.scaler_86 + 0.08044535048441001 * linear_input.scaler_87 + -0.13074080507686706 * linear_input.scaler_88 + -0.025433950840085772 * linear_input.scaler_89 + 0.04735822450357769 * linear_input.scaler_90 + -0.0185794649079138 * linear_input.scaler_91 + -0.016228169580883394 * linear_input.scaler_92 + -0.06188017250022405 * linear_input.scaler_93 + 0.045782294273953854 * linear_input.scaler_94 + 0.012127369337715665 * linear_input.scaler_95 + 0.025060724445628898 * linear_input.scaler_96 + -0.0029107717217937406 * linear_input.scaler_97 + -0.027738555394306197 * linear_input.scaler_98 + 0.04100498247749509 * linear_input.scaler_99 + -0.01584263149349546 * linear_input.scaler_100 + 0.05018953654342554 * linear_input.scaler_101 + -0.49500000000000005 AS "Score_2", 0.014258045429675788 * linear_input.scaler_2 + -0.021553942470395084 * linear_input.scaler_3 + -0.02871415982758161 * linear_input.scaler_4 + 0.01616145601187712 * linear_input.scaler_5 + -0.02706222777236166 * linear_input.scaler_6 + 0.01951304225956168 * linear_input.scaler_7 + -0.0572695445279889 * linear_input.scaler_8 + -0.022287730926060376 * linear_input.scaler_9 + 0.07576041242965752 * linear_input.scaler_10 + -0.08683499732725918 * linear_input.scaler_11 + 0.022789554764929186 * linear_input.scaler_12 + 0.02136394710296312 * linear_input.scaler_13 + 0.01427245391744053 * linear_input.scaler_14 + 0.022432062958105303 * linear_input.scaler_15 + 0.052148263866731485 * linear_input.scaler_16 + 0.1179175549577484 * linear_input.scaler_17 + -0.07024750055326907 * linear_input.scaler_18 + 0.12783558676533988 * linear_input.scaler_19 + -0.020372070668124246 * linear_input.scaler_20 + -0.04112754353817496 * linear_input.scaler_21 + -0.009251757473402195 * linear_input.scaler_22 + 0.006670306784012156 * linear_input.scaler_23 + -0.026506631974514586 * linear_input.scaler_24 + 0.04482781360189336 * linear_input.scaler_25 + -0.011556456929162018 * linear_input.scaler_26 + -0.08889598802214967 * linear_input.scaler_27 + -0.052164032490075805 * linear_input.scaler_28 + 0.022879776996971003 * linear_input.scaler_29 + -0.026303834125830945 * linear_input.scaler_30 + -0.08749361932100476 * linear_input.scaler_31 + -0.036047738894145004 * linear_input.scaler_32 + -0.011168418983563917 * linear_input.scaler_33 + -0.011344461600420847 * linear_input.scaler_34 + 0.020410857689741626 * linear_input.scaler_35 + -0.07327579402888985 * linear_input.scaler_36 + 0.007041692133206041 * linear_input.scaler_37 + -0.07185388430924709 * linear_input.scaler_38 + 0.017672012645434436 * linear_input.scaler_39 + -0.17344716719461922 * linear_input.scaler_40 + 0.056730152687686025 * linear_input.scaler_41 + 0.057381992470869066 * linear_input.scaler_42 + 0.04308603182584707 * linear_input.scaler_43 + 0.0008750321830938132 * linear_input.scaler_44 + -0.15912501618637637 * linear_input.scaler_45 + -0.008339051262433287 * linear_input.scaler_46 + 0.03059815309588492 * linear_input.scaler_47 + -0.007886370703881616 * linear_input.scaler_48 + -0.0066694760962091515 * linear_input.scaler_49 + 0.0263097032948179 * linear_input.scaler_50 + -0.03531739751462365 * linear_input.scaler_51 + -0.10358353131621108 * linear_input.scaler_52 + 0.0151782510683332 * linear_input.scaler_53 + -0.06372036700525324 * linear_input.scaler_54 + -0.05711976481427492 * linear_input.scaler_55 + -0.0286312084565779 * linear_input.scaler_56 + 0.023895034968564342 * linear_input.scaler_57 + -0.061282064091586645 * linear_input.scaler_58 + 0.019056034426308786 * linear_input.scaler_59 + 0.02036071974341386 * linear_input.scaler_60 + 0.04397491300555483 * linear_input.scaler_61 + 0.015108630713238515 * linear_input.scaler_62 + 0.12541153054246956 * linear_input.scaler_63 + 0.01403944502535118 * linear_input.scaler_64 + 0.030378907268418544 * linear_input.scaler_65 + 0.08846291984886644 * linear_input.scaler_66 + 0.008947555712501873 * linear_input.scaler_67 + -0.07550307618620788 * linear_input.scaler_68 + -0.09003080016655822 * linear_input.scaler_69 + 0.10000359059655399 * linear_input.scaler_70 + -0.017173961052925124 * linear_input.scaler_71 + 0.007390740640558595 * linear_input.scaler_72 + 0.0735148858518192 * linear_input.scaler_73 + 0.025299203664062946 * linear_input.scaler_74 + -0.014818318766933267 * linear_input.scaler_75 + 0.11486966628721412 * linear_input.scaler_76 + 0.04156444110430922 * linear_input.scaler_77 + 0.00027946249959824614 * linear_input.scaler_78 + 0.00789647278326154 * linear_input.scaler_79 + -0.005610945492538403 * linear_input.scaler_80 + 0.027316456819918903 * linear_input.scaler_81 + 0.0008868431694399287 * linear_input.scaler_82 + 0.013945268289810044 * linear_input.scaler_83 + 0.04004971237798506 * linear_input.scaler_84 + 0.0453208706247254 * linear_input.scaler_85 + -0.17370988889188183 * linear_input.scaler_86 + -0.06041309540922411 * linear_input.scaler_87 + -0.03574074865197041 * linear_input.scaler_88 + -0.02151570471565092 * linear_input.scaler_89 + -0.009817173655115361 * linear_input.scaler_90 + 0.03547455411787701 * linear_input.scaler_91 + -0.06021169438701906 * linear_input.scaler_92 + -0.016586333225408107 * linear_input.scaler_93 + 0.08333650602807298 * linear_input.scaler_94 + 0.023452568598703392 * linear_input.scaler_95 + -0.001966459877851876 * linear_input.scaler_96 + -0.05745936804520238 * linear_input.scaler_97 + 0.04277737827259583 * linear_input.scaler_98 + -0.05508706017102186 * linear_input.scaler_99 + 0.03551386246354045 * linear_input.scaler_100 + -0.06953176466822139 * linear_input.scaler_101 + -0.4925 AS "Score_3" 
FROM linear_input), 
orig_cte AS 
(SELECT linear_model_cte."KEY" AS "KEY", linear_model_cte."Score_0" AS "Score_0", linear_model_cte."Score_1" AS "Score_1", linear_model_cte."Score_2" AS "Score_2", linear_model_cte."Score_3" AS "Score_3", CAST(NULL AS BINARY_DOUBLE) AS "Proba_0", CAST(NULL AS BINARY_DOUBLE) AS "Proba_1", CAST(NULL AS BINARY_DOUBLE) AS "Proba_2", CAST(NULL AS BINARY_DOUBLE) AS "Proba_3", CAST(NULL AS BINARY_DOUBLE) AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "LogProba_1", CAST(NULL AS BINARY_DOUBLE) AS "LogProba_2", CAST(NULL AS BINARY_DOUBLE) AS "LogProba_3", CAST(NULL AS NUMBER(19)) AS "Decision", CAST(NULL AS BINARY_DOUBLE) AS "DecisionProba" 
FROM linear_model_cte), 
score_class_union AS 
(SELECT scu."KEY_u" AS "KEY_u", scu.class AS class, scu."LogProba" AS "LogProba", scu."Proba" AS "Proba", scu."Score" AS "Score" 
FROM (SELECT orig_cte."KEY" AS "KEY_u", 0 AS class, orig_cte."LogProba_0" AS "LogProba", orig_cte."Proba_0" AS "Proba", orig_cte."Score_0" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 1 AS class, orig_cte."LogProba_1" AS "LogProba", orig_cte."Proba_1" AS "Proba", orig_cte."Score_1" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 2 AS class, orig_cte."LogProba_2" AS "LogProba", orig_cte."Proba_2" AS "Proba", orig_cte."Score_2" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 3 AS class, orig_cte."LogProba_3" AS "LogProba", orig_cte."Proba_3" AS "Proba", orig_cte."Score_3" AS "Score" 
FROM orig_cte) scu), 
score_max AS 
(SELECT orig_cte."KEY" AS "KEY", orig_cte."Score_0" AS "Score_0", orig_cte."Score_1" AS "Score_1", orig_cte."Score_2" AS "Score_2", orig_cte."Score_3" AS "Score_3", orig_cte."Proba_0" AS "Proba_0", orig_cte."Proba_1" AS "Proba_1", orig_cte."Proba_2" AS "Proba_2", orig_cte."Proba_3" AS "Proba_3", orig_cte."LogProba_0" AS "LogProba_0", orig_cte."LogProba_1" AS "LogProba_1", orig_cte."LogProba_2" AS "LogProba_2", orig_cte."LogProba_3" AS "LogProba_3", orig_cte."Decision" AS "Decision", orig_cte."DecisionProba" AS "DecisionProba", max_select."KEY_m" AS "KEY_m", max_select."max_Score" AS "max_Score" 
FROM orig_cte LEFT OUTER JOIN (SELECT score_class_union."KEY_u" AS "KEY_m", max(score_class_union."Score") AS "max_Score" 
FROM score_class_union GROUP BY score_class_union."KEY_u") max_select ON orig_cte."KEY" = max_select."KEY_m"), 
union_with_max AS 
(SELECT score_class_union."KEY_u" AS "KEY_u", score_class_union.class AS class, score_class_union."LogProba" AS "LogProba", score_class_union."Proba" AS "Proba", score_class_union."Score" AS "Score", score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Score_2" AS "Score_2", score_max."Score_3" AS "Score_3", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."Proba_2" AS "Proba_2", score_max."Proba_3" AS "Proba_3", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."LogProba_2" AS "LogProba_2", score_max."LogProba_3" AS "LogProba_3", score_max."Decision" AS "Decision", score_max."DecisionProba" AS "DecisionProba", score_max."KEY_m" AS "KEY_m", score_max."max_Score" AS "max_Score" 
FROM score_class_union LEFT OUTER JOIN score_max ON score_class_union."KEY_u" = score_max."KEY"), 
arg_max_cte AS 
(SELECT score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Score_2" AS "Score_2", score_max."Score_3" AS "Score_3", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."Proba_2" AS "Proba_2", score_max."Proba_3" AS "Proba_3", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."LogProba_2" AS "LogProba_2", score_max."LogProba_3" AS "LogProba_3", score_max."Decision" AS "Decision", score_max."DecisionProba" AS "DecisionProba", score_max."KEY_m" AS "KEY_m", score_max."max_Score" AS "max_Score", "arg_max_t_Score"."KEY_Score" AS "KEY_Score", "arg_max_t_Score"."arg_max_Score" AS "arg_max_Score" 
FROM score_max LEFT OUTER JOIN (SELECT union_with_max."KEY" AS "KEY_Score", min(union_with_max.class) AS "arg_max_Score" 
FROM union_with_max 
WHERE union_with_max."max_Score" <= union_with_max."Score" GROUP BY union_with_max."KEY") "arg_max_t_Score" ON score_max."KEY" = "arg_max_t_Score"."KEY_Score")
 SELECT arg_max_cte."KEY" AS "KEY", arg_max_cte."Score_0" AS "Score_0", arg_max_cte."Score_1" AS "Score_1", arg_max_cte."Score_2" AS "Score_2", arg_max_cte."Score_3" AS "Score_3", arg_max_cte."Proba_0" AS "Proba_0", arg_max_cte."Proba_1" AS "Proba_1", arg_max_cte."Proba_2" AS "Proba_2", arg_max_cte."Proba_3" AS "Proba_3", CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN ln(arg_max_cte."Proba_0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_0", CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN ln(arg_max_cte."Proba_1") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_1", CASE WHEN (arg_max_cte."Proba_2" IS NULL OR arg_max_cte."Proba_2" > 0.0) THEN ln(arg_max_cte."Proba_2") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_2", CASE WHEN (arg_max_cte."Proba_3" IS NULL OR arg_max_cte."Proba_3" > 0.0) THEN ln(arg_max_cte."Proba_3") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_3", arg_max_cte."arg_max_Score" AS "Decision", CASE WHEN (arg_max_cte."arg_max_Score" = 0) THEN arg_max_cte."Proba_0" WHEN (arg_max_cte."arg_max_Score" = 1) THEN arg_max_cte."Proba_1" WHEN (arg_max_cte."arg_max_Score" = 2) THEN arg_max_cte."Proba_2" WHEN (arg_max_cte."arg_max_Score" = 3) THEN arg_max_cte."Proba_3" END AS "DecisionProba" 
FROM arg_max_cte