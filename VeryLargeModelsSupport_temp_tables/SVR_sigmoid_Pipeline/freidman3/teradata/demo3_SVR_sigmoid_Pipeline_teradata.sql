-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2018

-- Model : SVR_sigmoid_Pipeline
-- Dataset : freidman3
-- Database : teradata


-- This SQL code can contain one or more statements, to be executed in the order they appear in this file.



-- Code For temporary table tmp_20180417041915_m6f88m_ads_ part 1/2. Create 


CREATE GLOBAL TEMPORARY TABLE tmp_20180417041915_m6f88m_ads_  (
	"KEY" BIGINT, 
	imputer_output_2 FLOAT, 
	imputer_output_3 FLOAT, 
	imputer_output_4 FLOAT, 
	imputer_output_5 FLOAT
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table tmp_20180417041915_m6f88m_ads_ part 2/2. Populate

INSERT INTO tmp_20180417041915_m6f88m_ads_ ("KEY", imputer_output_2, imputer_output_3, imputer_output_4, imputer_output_5) SELECT "U"."KEY", "U".imputer_output_2, "U".imputer_output_3, "U".imputer_output_4, "U".imputer_output_5 
FROM (SELECT "ADS_imp_1_OUT"."KEY", "ADS_imp_1_OUT".imputer_output_2, "ADS_imp_1_OUT".imputer_output_3, "ADS_imp_1_OUT".imputer_output_4, "ADS_imp_1_OUT".imputer_output_5 
FROM (SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" IS NULL) THEN 43.79128122207401 ELSE "ADS"."Feature_0" END AS imputer_output_2, CASE WHEN ("ADS"."Feature_1" IS NULL) THEN 945.9672833084396 ELSE "ADS"."Feature_1" END AS imputer_output_3, CASE WHEN ("ADS"."Feature_2" IS NULL) THEN 0.5310009099975209 ELSE "ADS"."Feature_2" END AS imputer_output_4, CASE WHEN ("ADS"."Feature_3" IS NULL) THEN 6.139967152050499 ELSE "ADS"."Feature_3" END AS imputer_output_5 
FROM freidman3 AS "ADS") AS "ADS_imp_1_OUT") AS "U"

-- Code For temporary table tmp_20180417041915_k0ywa9_ads_ part 1/2. Create 


CREATE GLOBAL TEMPORARY TABLE tmp_20180417041915_k0ywa9_ads_  (
	"KEY" BIGINT, 
	scaler_output_2 FLOAT, 
	scaler_output_3 FLOAT, 
	scaler_output_4 FLOAT, 
	scaler_output_5 FLOAT
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table tmp_20180417041915_k0ywa9_ads_ part 2/2. Populate

INSERT INTO tmp_20180417041915_k0ywa9_ads_ ("KEY", scaler_output_2, scaler_output_3, scaler_output_4, scaler_output_5) SELECT "U"."KEY", "U".scaler_output_2, "U".scaler_output_3, "U".scaler_output_4, "U".scaler_output_5 
FROM (SELECT "ADS_sca_2_OUT"."KEY", "ADS_sca_2_OUT".scaler_output_2, "ADS_sca_2_OUT".scaler_output_3, "ADS_sca_2_OUT".scaler_output_4, "ADS_sca_2_OUT".scaler_output_5 
FROM (SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", (CAST("ADS_imp_1_OUT".imputer_output_2 AS FLOAT) - 43.79128122207402) / 26.03562357622511 AS scaler_output_2, (CAST("ADS_imp_1_OUT".imputer_output_3 AS FLOAT) - 945.9672833084397) / 461.4552766146446 AS scaler_output_3, (CAST("ADS_imp_1_OUT".imputer_output_4 AS FLOAT) - 0.531000909997521) / 0.290186328214479 AS scaler_output_4, (CAST("ADS_imp_1_OUT".imputer_output_5 AS FLOAT) - 6.139967152050499) / 3.072917242564058 AS scaler_output_5 
FROM tmp_20180417041915_m6f88m_ads_ AS "ADS_imp_1_OUT") AS "ADS_sca_2_OUT") AS "U"

-- Model deployment code

WITH kernel_input AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CAST("ADS_sca_2_OUT".scaler_output_2 AS FLOAT) AS scaler_output_2, CAST("ADS_sca_2_OUT".scaler_output_3 AS FLOAT) AS scaler_output_3, CAST("ADS_sca_2_OUT".scaler_output_4 AS FLOAT) AS scaler_output_4, CAST("ADS_sca_2_OUT".scaler_output_5 AS FLOAT) AS scaler_output_5 
FROM tmp_20180417041915_k0ywa9_ads_ AS "ADS_sca_2_OUT"), 
"SV_data" AS 
(SELECT "Values".sv_idx AS sv_idx, CAST("Values".dual_coeff AS FLOAT) AS dual_coeff, CAST("Values".sv_0 AS FLOAT) AS sv_0, CAST("Values".sv_1 AS FLOAT) AS sv_1, CAST("Values".sv_2 AS FLOAT) AS sv_2, CAST("Values".sv_3 AS FLOAT) AS sv_3 
FROM (SELECT 0 AS sv_idx, -0.1 AS dual_coeff, -0.128629540716648 AS sv_0, -0.855762437264239 AS sv_1, -1.696627692807715 AS sv_2, -0.508276249018738 AS sv_3 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 1 AS sv_idx, -0.1 AS dual_coeff, -0.212861866158679 AS sv_0, -1.75545003256683 AS sv_1, 0.40296624747161 AS sv_2, -1.288842312688892 AS sv_3 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 2 AS sv_idx, -0.1 AS dual_coeff, 0.262295051031869 AS sv_0, -1.156436226701534 AS sv_1, -1.469826707772466 AS sv_2, -1.059119640920314 AS sv_3 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 3 AS sv_idx, 0.1 AS dual_coeff, -1.335481404776 AS sv_0, -0.97426350987175 AS sv_1, -0.371647635078974 AS sv_2, 0.78110554108292 AS sv_3 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 4 AS sv_idx, -0.1 AS dual_coeff, 2.157633837700774 AS sv_0, -1.596026640560732 AS sv_1, 0.89324094580545 AS sv_2, -1.411580858022389 AS sv_3 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 5 AS sv_idx, -0.1 AS dual_coeff, 0.734401135308558 AS sv_0, -1.061279569066753 AS sv_1, -1.64272067072607 AS sv_2, 1.28389871222053 AS sv_3 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 6 AS sv_idx, -0.1 AS dual_coeff, -0.185280428471124 AS sv_0, 0.469948210657082 AS sv_1, -1.783277894836552 AS sv_2, 0.208534293223346 AS sv_3 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 7 AS sv_idx, -0.1 AS dual_coeff, -1.130653018190199 AS sv_0, 1.693815859594952 AS sv_1, -1.809849193272349 AS sv_2, -0.853115053657762 AS sv_3 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 8 AS sv_idx, -0.1 AS dual_coeff, -1.677429392157608 AS sv_0, -0.836641293061437 AS sv_1, 1.600995138626682 AS sv_2, 0.728810958540672 AS sv_3 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 9 AS sv_idx, 0.1 AS dual_coeff, 0.972890849957712 AS sv_0, 0.563817947473381 AS sv_1, -0.964763367678236 AS sv_2, -0.355118790746674 AS sv_3 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 10 AS sv_idx, 0.1 AS dual_coeff, -0.710888619986789 AS sv_0, -0.914407867644047 AS sv_1, 0.40580456863468 AS sv_2, -0.755341550199863 AS sv_3 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 11 AS sv_idx, -0.1 AS dual_coeff, -0.175416482534578 AS sv_0, 1.157357979471062 AS sv_1, 1.546077643505364 AS sv_2, 1.56148404527743 AS sv_3 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 12 AS sv_idx, 0.1 AS dual_coeff, 0.61644120598175 AS sv_0, 0.513531327146482 AS sv_1, 0.1901494810657 AS sv_2, -1.1516753084143 AS sv_3 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 13 AS sv_idx, -0.020209524999159 AS dual_coeff, 0.215420405866088 AS sv_0, -1.521343805623405 AS sv_1, -0.404061522441028 AS sv_2, -0.039263686954211 AS sv_3 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 14 AS sv_idx, 0.1 AS dual_coeff, 1.226484175487996 AS sv_0, 0.072751996195975 AS sv_1, -0.643866925958607 AS sv_2, 0.178980189047979 AS sv_3 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 15 AS sv_idx, -0.1 AS dual_coeff, 1.827080308115538 AS sv_0, -1.393050135679573 AS sv_1, 0.097529019383175 AS sv_2, -0.805339016771322 AS sv_3 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 16 AS sv_idx, 0.071760941365245 AS dual_coeff, 0.06983222981744 AS sv_0, 0.663964983922892 AS sv_1, 0.744464202028595 AS sv_2, -1.467244646493467 AS sv_3 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 17 AS sv_idx, 0.1 AS dual_coeff, 1.340951032968232 AS sv_0, -0.133626606356413 AS sv_1, 1.116727246485082 AS sv_2, 0.867510325358643 AS sv_3 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 18 AS sv_idx, -0.1 AS dual_coeff, -1.2241246362115 AS sv_0, 1.512795119938024 AS sv_1, -1.676492473707462 AS sv_2, -1.354123235499923 AS sv_3 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 19 AS sv_idx, 0.1 AS dual_coeff, -0.026701854468432 AS sv_0, -0.028542073748357 AS sv_1, -0.744236708578972 AS sv_2, 0.16184278958013 AS sv_3 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 20 AS sv_idx, 0.1 AS dual_coeff, -1.353002156477134 AS sv_0, 0.479373397091272 AS sv_1, -1.088240018135325 AS sv_2, 1.426417941145484 AS sv_3 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 21 AS sv_idx, -0.1 AS dual_coeff, 1.25609745057753 AS sv_0, -1.573495992128003 AS sv_1, 0.806979259164098 AS sv_2, 0.185938500416681 AS sv_3 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 22 AS sv_idx, -0.1 AS dual_coeff, -0.084825141436289 AS sv_0, -1.106871678746354 AS sv_1, -1.485414738414908 AS sv_2, -1.190410371070792 AS sv_3 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 23 AS sv_idx, 0.1 AS dual_coeff, -1.67632172371631 AS sv_0, -1.476334521640557 AS sv_1, -0.114700857872373 AS sv_2, 0.850353846007769 AS sv_3 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 24 AS sv_idx, 0.1 AS dual_coeff, -1.624280289386995 AS sv_0, -1.775508653244122 AS sv_1, -0.656813160988098 AS sv_2, 1.195304544325356 AS sv_3 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 25 AS sv_idx, 0.048448583633913 AS dual_coeff, 0.990652607900033 AS sv_0, -0.001268779611174 AS sv_1, 0.905342065685696 AS sv_2, 1.47701117953199 AS sv_3 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 26 AS sv_idx, -0.1 AS dual_coeff, -1.066992408093323 AS sv_0, -0.752446290024242 AS sv_1, -1.628861728957462 AS sv_2, 1.277588538039886 AS sv_3 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 27 AS sv_idx, 0.1 AS dual_coeff, -1.57048806123394 AS sv_0, 0.307545754753504 AS sv_1, -0.34381028571106 AS sv_2, 1.275255490107648 AS sv_3 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 28 AS sv_idx, 0.1 AS dual_coeff, 0.167184401745262 AS sv_0, -0.400704478748343 AS sv_1, -0.770256515182922 AS sv_2, -1.623505149365183 AS sv_3 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 29 AS sv_idx, -0.1 AS dual_coeff, -1.614366862868711 AS sv_0, -0.266548060389542 AS sv_1, 1.361433847723701 AS sv_2, 1.174351653344988 AS sv_3 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 30 AS sv_idx, 0.1 AS dual_coeff, -0.923065553671842 AS sv_0, -1.460057588221313 AS sv_1, -0.280397076082255 AS sv_2, -1.391523762632961 AS sv_3 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 31 AS sv_idx, 0.1 AS dual_coeff, -0.381531584993764 AS sv_0, 0.21390512132681 AS sv_1, 0.755855094168473 AS sv_2, -1.567869367101613 AS sv_3 
FROM (SELECT 0.0 AS "X") AS dummy_cte) AS "Values"), 
kernel_dp AS 
(SELECT t."KEY" AS "KEY", t.dot_product AS dot_product 
FROM (SELECT full_join_data_sv."KEY" AS "KEY", sum(CAST(full_join_data_sv.dot_prod1 AS FLOAT)) + 1.379875980391439 AS dot_product 
FROM (SELECT kernel_input."KEY" AS "KEY", "SV_data".dual_coeff * tanh(0.25 * (kernel_input.scaler_output_2 * "SV_data".sv_0 + kernel_input.scaler_output_3 * "SV_data".sv_1 + kernel_input.scaler_output_4 * "SV_data".sv_2 + kernel_input.scaler_output_5 * "SV_data".sv_3) + 0.0) AS dot_prod1 
FROM kernel_input, "SV_data") AS full_join_data_sv GROUP BY full_join_data_sv."KEY") AS t)
 SELECT kernel_dp."KEY" AS "KEY", kernel_dp.dot_product AS "Estimator" 
FROM kernel_dp