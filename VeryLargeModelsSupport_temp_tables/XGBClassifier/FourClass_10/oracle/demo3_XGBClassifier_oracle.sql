-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2018

-- Model : XGBClassifier
-- Dataset : FourClass_10
-- Database : oracle


-- This SQL code can contain one or more statements, to be executed in the order they appear in this file.



-- Code For temporary table 180416233349_0DW0UC_XGB_B0 part 1/2. Create 


CREATE GLOBAL TEMPORARY TABLE "180416233349_0DW0UC_XGB_B0" (
	"KEY" NUMBER(19), 
	"Score_0" BINARY_DOUBLE, 
	"Score_1" BINARY_DOUBLE, 
	"Score_2" BINARY_DOUBLE, 
	"Score_3" BINARY_DOUBLE
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table 180416233349_0DW0UC_XGB_B0 part 2/2. Populate

INSERT INTO "180416233349_0DW0UC_XGB_B0" ("KEY", "Score_0", "Score_1", "Score_2", "Score_3") SELECT "U"."KEY", "U"."Score_0", "U"."Score_1", "U"."Score_2", "U"."Score_3" 
FROM (WITH "DT_node_lookup" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_4" < -0.35484129190444946) THEN 1 ELSE 2 END AS node_id_2 
FROM "FOURCLASS_10" "ADS"), 
"DT_node_data" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS BINARY_DOUBLE) AS feature, CAST("Values".threshold AS BINARY_DOUBLE) AS threshold, CAST("Values".depth AS BINARY_DOUBLE) AS depth, CAST("Values".parent_id AS BINARY_DOUBLE) AS parent_id, CAST("Values"."Score" AS BINARY_DOUBLE) AS "Score" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS depth, 0 AS parent_id, -0.05234899744391441 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS depth, 0 AS parent_id, 0.0579439215362072 AS "Score" FROM DUAL) "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".node_id AS node_id, "DT_node_data".feature AS feature, "DT_node_data".threshold AS threshold, "DT_node_data".depth AS depth, "DT_node_data".parent_id AS parent_id, "DT_node_data"."Score" AS "Score" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".node_id), 
"XGB_Model_0_0" AS 
(SELECT "DT_Output"."KEY" AS "KEY", "DT_Output"."Score" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output"), 
"DT_node_lookup_1" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_3" < 1.1771701574325562) THEN 1 ELSE 2 END AS node_id_2 
FROM "FOURCLASS_10" "ADS"), 
"DT_node_data_1" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS BINARY_DOUBLE) AS feature, CAST("Values".threshold AS BINARY_DOUBLE) AS threshold, CAST("Values".depth AS BINARY_DOUBLE) AS depth, CAST("Values".parent_id AS BINARY_DOUBLE) AS parent_id, CAST("Values"."Score" AS BINARY_DOUBLE) AS "Score" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS depth, 0 AS parent_id, -0.05734265595674515 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS depth, 0 AS parent_id, 0.07256637513637543 AS "Score" FROM DUAL) "Values"), 
"DT_Output_1" AS 
(SELECT "DT_node_lookup_1"."KEY" AS "KEY", "DT_node_lookup_1".node_id_2 AS node_id_2, "DT_node_data_1".node_id AS node_id, "DT_node_data_1".feature AS feature, "DT_node_data_1".threshold AS threshold, "DT_node_data_1".depth AS depth, "DT_node_data_1".parent_id AS parent_id, "DT_node_data_1"."Score" AS "Score" 
FROM "DT_node_lookup_1" LEFT OUTER JOIN "DT_node_data_1" ON "DT_node_lookup_1".node_id_2 = "DT_node_data_1".node_id), 
"XGB_Model_1_0" AS 
(SELECT "DT_Output_1"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_1"."Score" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_1"), 
"DT_node_lookup_2" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" < 0.21300426125526428) THEN 1 ELSE 2 END AS node_id_2 
FROM "FOURCLASS_10" "ADS"), 
"DT_node_data_2" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS BINARY_DOUBLE) AS feature, CAST("Values".threshold AS BINARY_DOUBLE) AS threshold, CAST("Values".depth AS BINARY_DOUBLE) AS depth, CAST("Values".parent_id AS BINARY_DOUBLE) AS parent_id, CAST("Values"."Score" AS BINARY_DOUBLE) AS "Score" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS depth, 0 AS parent_id, 0.04335664212703705 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS depth, 0 AS parent_id, -0.05486725643277168 AS "Score" FROM DUAL) "Values"), 
"DT_Output_2" AS 
(SELECT "DT_node_lookup_2"."KEY" AS "KEY", "DT_node_lookup_2".node_id_2 AS node_id_2, "DT_node_data_2".node_id AS node_id, "DT_node_data_2".feature AS feature, "DT_node_data_2".threshold AS threshold, "DT_node_data_2".depth AS depth, "DT_node_data_2".parent_id AS parent_id, "DT_node_data_2"."Score" AS "Score" 
FROM "DT_node_lookup_2" LEFT OUTER JOIN "DT_node_data_2" ON "DT_node_lookup_2".node_id_2 = "DT_node_data_2".node_id), 
"XGB_Model_2_0" AS 
(SELECT "DT_Output_2"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_2"."Score" AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_2"), 
"DT_node_lookup_3" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_7" < 0.362348735332489) THEN 1 ELSE 2 END AS node_id_2 
FROM "FOURCLASS_10" "ADS"), 
"DT_node_data_3" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS BINARY_DOUBLE) AS feature, CAST("Values".threshold AS BINARY_DOUBLE) AS threshold, CAST("Values".depth AS BINARY_DOUBLE) AS depth, CAST("Values".parent_id AS BINARY_DOUBLE) AS parent_id, CAST("Values"."Score" AS BINARY_DOUBLE) AS "Score" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS depth, 0 AS parent_id, 0.0625 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS depth, 0 AS parent_id, -0.05000000074505806 AS "Score" FROM DUAL) "Values"), 
"DT_Output_3" AS 
(SELECT "DT_node_lookup_3"."KEY" AS "KEY", "DT_node_lookup_3".node_id_2 AS node_id_2, "DT_node_data_3".node_id AS node_id, "DT_node_data_3".feature AS feature, "DT_node_data_3".threshold AS threshold, "DT_node_data_3".depth AS depth, "DT_node_data_3".parent_id AS parent_id, "DT_node_data_3"."Score" AS "Score" 
FROM "DT_node_lookup_3" LEFT OUTER JOIN "DT_node_data_3" ON "DT_node_lookup_3".node_id_2 = "DT_node_data_3".node_id), 
"XGB_Model_3_0" AS 
(SELECT "DT_Output_3"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_3"."Score" AS "Score_3" 
FROM "DT_Output_3"), 
"DT_node_lookup_4" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_4" < -0.35484129190444946) THEN 1 ELSE 2 END AS node_id_2 
FROM "FOURCLASS_10" "ADS"), 
"DT_node_data_4" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS BINARY_DOUBLE) AS feature, CAST("Values".threshold AS BINARY_DOUBLE) AS threshold, CAST("Values".depth AS BINARY_DOUBLE) AS depth, CAST("Values".parent_id AS BINARY_DOUBLE) AS parent_id, CAST("Values"."Score" AS BINARY_DOUBLE) AS "Score" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS depth, 0 AS parent_id, -0.050926752388477325 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS depth, 0 AS parent_id, 0.053195446729660034 AS "Score" FROM DUAL) "Values"), 
"DT_Output_4" AS 
(SELECT "DT_node_lookup_4"."KEY" AS "KEY", "DT_node_lookup_4".node_id_2 AS node_id_2, "DT_node_data_4".node_id AS node_id, "DT_node_data_4".feature AS feature, "DT_node_data_4".threshold AS threshold, "DT_node_data_4".depth AS depth, "DT_node_data_4".parent_id AS parent_id, "DT_node_data_4"."Score" AS "Score" 
FROM "DT_node_lookup_4" LEFT OUTER JOIN "DT_node_data_4" ON "DT_node_lookup_4".node_id_2 = "DT_node_data_4".node_id), 
"XGB_Model_0_1" AS 
(SELECT "DT_Output_4"."KEY" AS "KEY", "DT_Output_4"."Score" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_4"), 
"DT_node_lookup_5" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_3" < 0.72231525182724) THEN 1 ELSE 2 END AS node_id_2 
FROM "FOURCLASS_10" "ADS"), 
"DT_node_data_5" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS BINARY_DOUBLE) AS feature, CAST("Values".threshold AS BINARY_DOUBLE) AS threshold, CAST("Values".depth AS BINARY_DOUBLE) AS depth, CAST("Values".parent_id AS BINARY_DOUBLE) AS parent_id, CAST("Values"."Score" AS BINARY_DOUBLE) AS "Score" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS depth, 0 AS parent_id, -0.061356544494628906 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS depth, 0 AS parent_id, 0.060008227825164795 AS "Score" FROM DUAL) "Values"), 
"DT_Output_5" AS 
(SELECT "DT_node_lookup_5"."KEY" AS "KEY", "DT_node_lookup_5".node_id_2 AS node_id_2, "DT_node_data_5".node_id AS node_id, "DT_node_data_5".feature AS feature, "DT_node_data_5".threshold AS threshold, "DT_node_data_5".depth AS depth, "DT_node_data_5".parent_id AS parent_id, "DT_node_data_5"."Score" AS "Score" 
FROM "DT_node_lookup_5" LEFT OUTER JOIN "DT_node_data_5" ON "DT_node_lookup_5".node_id_2 = "DT_node_data_5".node_id), 
"XGB_Model_1_1" AS 
(SELECT "DT_Output_5"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_5"."Score" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_5"), 
"DT_node_lookup_6" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" < 0.21300426125526428) THEN 1 ELSE 2 END AS node_id_2 
FROM "FOURCLASS_10" "ADS"), 
"DT_node_data_6" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS BINARY_DOUBLE) AS feature, CAST("Values".threshold AS BINARY_DOUBLE) AS threshold, CAST("Values".depth AS BINARY_DOUBLE) AS depth, CAST("Values".parent_id AS BINARY_DOUBLE) AS parent_id, CAST("Values"."Score" AS BINARY_DOUBLE) AS "Score" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS depth, 0 AS parent_id, 0.03996139392256737 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS depth, 0 AS parent_id, -0.05349121615290642 AS "Score" FROM DUAL) "Values"), 
"DT_Output_6" AS 
(SELECT "DT_node_lookup_6"."KEY" AS "KEY", "DT_node_lookup_6".node_id_2 AS node_id_2, "DT_node_data_6".node_id AS node_id, "DT_node_data_6".feature AS feature, "DT_node_data_6".threshold AS threshold, "DT_node_data_6".depth AS depth, "DT_node_data_6".parent_id AS parent_id, "DT_node_data_6"."Score" AS "Score" 
FROM "DT_node_lookup_6" LEFT OUTER JOIN "DT_node_data_6" ON "DT_node_lookup_6".node_id_2 = "DT_node_data_6".node_id), 
"XGB_Model_2_1" AS 
(SELECT "DT_Output_6"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_6"."Score" AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_6"), 
"DT_node_lookup_7" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_7" < 0.362348735332489) THEN 1 ELSE 2 END AS node_id_2 
FROM "FOURCLASS_10" "ADS"), 
"DT_node_data_7" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS BINARY_DOUBLE) AS feature, CAST("Values".threshold AS BINARY_DOUBLE) AS threshold, CAST("Values".depth AS BINARY_DOUBLE) AS depth, CAST("Values".parent_id AS BINARY_DOUBLE) AS parent_id, CAST("Values"."Score" AS BINARY_DOUBLE) AS "Score" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS depth, 0 AS parent_id, 0.057209331542253494 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS depth, 0 AS parent_id, -0.04868779703974724 AS "Score" FROM DUAL) "Values"), 
"DT_Output_7" AS 
(SELECT "DT_node_lookup_7"."KEY" AS "KEY", "DT_node_lookup_7".node_id_2 AS node_id_2, "DT_node_data_7".node_id AS node_id, "DT_node_data_7".feature AS feature, "DT_node_data_7".threshold AS threshold, "DT_node_data_7".depth AS depth, "DT_node_data_7".parent_id AS parent_id, "DT_node_data_7"."Score" AS "Score" 
FROM "DT_node_lookup_7" LEFT OUTER JOIN "DT_node_data_7" ON "DT_node_lookup_7".node_id_2 = "DT_node_data_7".node_id), 
"XGB_Model_3_1" AS 
(SELECT "DT_Output_7"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_7"."Score" AS "Score_3" 
FROM "DT_Output_7"), 
"DT_node_lookup_8" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_4" < -0.35484129190444946) THEN 1 ELSE 2 END AS node_id_2 
FROM "FOURCLASS_10" "ADS"), 
"DT_node_data_8" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS BINARY_DOUBLE) AS feature, CAST("Values".threshold AS BINARY_DOUBLE) AS threshold, CAST("Values".depth AS BINARY_DOUBLE) AS depth, CAST("Values".parent_id AS BINARY_DOUBLE) AS parent_id, CAST("Values"."Score" AS BINARY_DOUBLE) AS "Score" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS depth, 0 AS parent_id, -0.049572717398405075 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS depth, 0 AS parent_id, 0.04905882850289345 AS "Score" FROM DUAL) "Values"), 
"DT_Output_8" AS 
(SELECT "DT_node_lookup_8"."KEY" AS "KEY", "DT_node_lookup_8".node_id_2 AS node_id_2, "DT_node_data_8".node_id AS node_id, "DT_node_data_8".feature AS feature, "DT_node_data_8".threshold AS threshold, "DT_node_data_8".depth AS depth, "DT_node_data_8".parent_id AS parent_id, "DT_node_data_8"."Score" AS "Score" 
FROM "DT_node_lookup_8" LEFT OUTER JOIN "DT_node_data_8" ON "DT_node_lookup_8".node_id_2 = "DT_node_data_8".node_id), 
"XGB_Model_0_2" AS 
(SELECT "DT_Output_8"."KEY" AS "KEY", "DT_Output_8"."Score" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_8"), 
"DT_node_lookup_9" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_3" < 0.72231525182724) THEN 1 ELSE 2 END AS node_id_2 
FROM "FOURCLASS_10" "ADS"), 
"DT_node_data_9" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS BINARY_DOUBLE) AS feature, CAST("Values".threshold AS BINARY_DOUBLE) AS threshold, CAST("Values".depth AS BINARY_DOUBLE) AS depth, CAST("Values".parent_id AS BINARY_DOUBLE) AS parent_id, CAST("Values"."Score" AS BINARY_DOUBLE) AS "Score" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS depth, 0 AS parent_id, -0.06014169380068779 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS depth, 0 AS parent_id, 0.05473605915904045 AS "Score" FROM DUAL) "Values"), 
"DT_Output_9" AS 
(SELECT "DT_node_lookup_9"."KEY" AS "KEY", "DT_node_lookup_9".node_id_2 AS node_id_2, "DT_node_data_9".node_id AS node_id, "DT_node_data_9".feature AS feature, "DT_node_data_9".threshold AS threshold, "DT_node_data_9".depth AS depth, "DT_node_data_9".parent_id AS parent_id, "DT_node_data_9"."Score" AS "Score" 
FROM "DT_node_lookup_9" LEFT OUTER JOIN "DT_node_data_9" ON "DT_node_lookup_9".node_id_2 = "DT_node_data_9".node_id), 
"XGB_Model_1_2" AS 
(SELECT "DT_Output_9"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_9"."Score" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_9")
 SELECT "XGB_B0"."KEY", "XGB_B0"."Score_0", "XGB_B0"."Score_1", "XGB_B0"."Score_2", "XGB_B0"."Score_3" 
FROM (SELECT "XGB_esu_0"."KEY" AS "KEY", "XGB_esu_0"."Score_0" AS "Score_0", "XGB_esu_0"."Score_1" AS "Score_1", "XGB_esu_0"."Score_2" AS "Score_2", "XGB_esu_0"."Score_3" AS "Score_3" 
FROM (SELECT "XGB_Model_0_0"."KEY" AS "KEY", "XGB_Model_0_0"."Score_0" AS "Score_0", "XGB_Model_0_0"."Score_1" AS "Score_1", "XGB_Model_0_0"."Score_2" AS "Score_2", "XGB_Model_0_0"."Score_3" AS "Score_3" 
FROM "XGB_Model_0_0" UNION ALL SELECT "XGB_Model_1_0"."KEY" AS "KEY", "XGB_Model_1_0"."Score_0" AS "Score_0", "XGB_Model_1_0"."Score_1" AS "Score_1", "XGB_Model_1_0"."Score_2" AS "Score_2", "XGB_Model_1_0"."Score_3" AS "Score_3" 
FROM "XGB_Model_1_0" UNION ALL SELECT "XGB_Model_2_0"."KEY" AS "KEY", "XGB_Model_2_0"."Score_0" AS "Score_0", "XGB_Model_2_0"."Score_1" AS "Score_1", "XGB_Model_2_0"."Score_2" AS "Score_2", "XGB_Model_2_0"."Score_3" AS "Score_3" 
FROM "XGB_Model_2_0" UNION ALL SELECT "XGB_Model_3_0"."KEY" AS "KEY", "XGB_Model_3_0"."Score_0" AS "Score_0", "XGB_Model_3_0"."Score_1" AS "Score_1", "XGB_Model_3_0"."Score_2" AS "Score_2", "XGB_Model_3_0"."Score_3" AS "Score_3" 
FROM "XGB_Model_3_0" UNION ALL SELECT "XGB_Model_0_1"."KEY" AS "KEY", "XGB_Model_0_1"."Score_0" AS "Score_0", "XGB_Model_0_1"."Score_1" AS "Score_1", "XGB_Model_0_1"."Score_2" AS "Score_2", "XGB_Model_0_1"."Score_3" AS "Score_3" 
FROM "XGB_Model_0_1" UNION ALL SELECT "XGB_Model_1_1"."KEY" AS "KEY", "XGB_Model_1_1"."Score_0" AS "Score_0", "XGB_Model_1_1"."Score_1" AS "Score_1", "XGB_Model_1_1"."Score_2" AS "Score_2", "XGB_Model_1_1"."Score_3" AS "Score_3" 
FROM "XGB_Model_1_1" UNION ALL SELECT "XGB_Model_2_1"."KEY" AS "KEY", "XGB_Model_2_1"."Score_0" AS "Score_0", "XGB_Model_2_1"."Score_1" AS "Score_1", "XGB_Model_2_1"."Score_2" AS "Score_2", "XGB_Model_2_1"."Score_3" AS "Score_3" 
FROM "XGB_Model_2_1" UNION ALL SELECT "XGB_Model_3_1"."KEY" AS "KEY", "XGB_Model_3_1"."Score_0" AS "Score_0", "XGB_Model_3_1"."Score_1" AS "Score_1", "XGB_Model_3_1"."Score_2" AS "Score_2", "XGB_Model_3_1"."Score_3" AS "Score_3" 
FROM "XGB_Model_3_1" UNION ALL SELECT "XGB_Model_0_2"."KEY" AS "KEY", "XGB_Model_0_2"."Score_0" AS "Score_0", "XGB_Model_0_2"."Score_1" AS "Score_1", "XGB_Model_0_2"."Score_2" AS "Score_2", "XGB_Model_0_2"."Score_3" AS "Score_3" 
FROM "XGB_Model_0_2" UNION ALL SELECT "XGB_Model_1_2"."KEY" AS "KEY", "XGB_Model_1_2"."Score_0" AS "Score_0", "XGB_Model_1_2"."Score_1" AS "Score_1", "XGB_Model_1_2"."Score_2" AS "Score_2", "XGB_Model_1_2"."Score_3" AS "Score_3" 
FROM "XGB_Model_1_2") "XGB_esu_0") "XGB_B0") "U"

-- Code For temporary table 180416233349_821R0P_XGB_B1 part 1/2. Create 


CREATE GLOBAL TEMPORARY TABLE "180416233349_821R0P_XGB_B1" (
	"KEY" NUMBER(19), 
	"Score_0" BINARY_DOUBLE, 
	"Score_1" BINARY_DOUBLE, 
	"Score_2" BINARY_DOUBLE, 
	"Score_3" BINARY_DOUBLE
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table 180416233349_821R0P_XGB_B1 part 2/2. Populate

INSERT INTO "180416233349_821R0P_XGB_B1" ("KEY", "Score_0", "Score_1", "Score_2", "Score_3") SELECT "U"."KEY", "U"."Score_0", "U"."Score_1", "U"."Score_2", "U"."Score_3" 
FROM (WITH "DT_node_lookup_10" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_6" < 0.12630897760391235) THEN 1 ELSE 2 END AS node_id_2 
FROM "FOURCLASS_10" "ADS"), 
"DT_node_data_10" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS BINARY_DOUBLE) AS feature, CAST("Values".threshold AS BINARY_DOUBLE) AS threshold, CAST("Values".depth AS BINARY_DOUBLE) AS depth, CAST("Values".parent_id AS BINARY_DOUBLE) AS parent_id, CAST("Values"."Score" AS BINARY_DOUBLE) AS "Score" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS depth, 0 AS parent_id, -0.03426593914628029 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS depth, 0 AS parent_id, 0.06422977894544601 AS "Score" FROM DUAL) "Values"), 
"DT_Output_10" AS 
(SELECT "DT_node_lookup_10"."KEY" AS "KEY", "DT_node_lookup_10".node_id_2 AS node_id_2, "DT_node_data_10".node_id AS node_id, "DT_node_data_10".feature AS feature, "DT_node_data_10".threshold AS threshold, "DT_node_data_10".depth AS depth, "DT_node_data_10".parent_id AS parent_id, "DT_node_data_10"."Score" AS "Score" 
FROM "DT_node_lookup_10" LEFT OUTER JOIN "DT_node_data_10" ON "DT_node_lookup_10".node_id_2 = "DT_node_data_10".node_id), 
"XGB_Model_2_2" AS 
(SELECT "DT_Output_10"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_10"."Score" AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_10"), 
"DT_node_lookup_11" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_7" < 0.362348735332489) THEN 1 ELSE 2 END AS node_id_2 
FROM "FOURCLASS_10" "ADS"), 
"DT_node_data_11" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS BINARY_DOUBLE) AS feature, CAST("Values".threshold AS BINARY_DOUBLE) AS threshold, CAST("Values".depth AS BINARY_DOUBLE) AS depth, CAST("Values".parent_id AS BINARY_DOUBLE) AS parent_id, CAST("Values"."Score" AS BINARY_DOUBLE) AS "Score" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS depth, 0 AS parent_id, 0.052696116268634796 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS depth, 0 AS parent_id, -0.047444455325603485 AS "Score" FROM DUAL) "Values"), 
"DT_Output_11" AS 
(SELECT "DT_node_lookup_11"."KEY" AS "KEY", "DT_node_lookup_11".node_id_2 AS node_id_2, "DT_node_data_11".node_id AS node_id, "DT_node_data_11".feature AS feature, "DT_node_data_11".threshold AS threshold, "DT_node_data_11".depth AS depth, "DT_node_data_11".parent_id AS parent_id, "DT_node_data_11"."Score" AS "Score" 
FROM "DT_node_lookup_11" LEFT OUTER JOIN "DT_node_data_11" ON "DT_node_lookup_11".node_id_2 = "DT_node_data_11".node_id), 
"XGB_Model_3_2" AS 
(SELECT "DT_Output_11"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_11"."Score" AS "Score_3" 
FROM "DT_Output_11"), 
"DT_node_lookup_12" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_4" < -0.35484129190444946) THEN 1 ELSE 2 END AS node_id_2 
FROM "FOURCLASS_10" "ADS"), 
"DT_node_data_12" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS BINARY_DOUBLE) AS feature, CAST("Values".threshold AS BINARY_DOUBLE) AS threshold, CAST("Values".depth AS BINARY_DOUBLE) AS depth, CAST("Values".parent_id AS BINARY_DOUBLE) AS parent_id, CAST("Values"."Score" AS BINARY_DOUBLE) AS "Score" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS depth, 0 AS parent_id, -0.04834137111902237 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS depth, 0 AS parent_id, 0.04559355229139328 AS "Score" FROM DUAL) "Values"), 
"DT_Output_12" AS 
(SELECT "DT_node_lookup_12"."KEY" AS "KEY", "DT_node_lookup_12".node_id_2 AS node_id_2, "DT_node_data_12".node_id AS node_id, "DT_node_data_12".feature AS feature, "DT_node_data_12".threshold AS threshold, "DT_node_data_12".depth AS depth, "DT_node_data_12".parent_id AS parent_id, "DT_node_data_12"."Score" AS "Score" 
FROM "DT_node_lookup_12" LEFT OUTER JOIN "DT_node_data_12" ON "DT_node_lookup_12".node_id_2 = "DT_node_data_12".node_id), 
"XGB_Model_0_3" AS 
(SELECT "DT_Output_12"."KEY" AS "KEY", "DT_Output_12"."Score" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_12"), 
"DT_node_lookup_13" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_3" < 0.72231525182724) THEN 1 ELSE 2 END AS node_id_2 
FROM "FOURCLASS_10" "ADS"), 
"DT_node_data_13" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS BINARY_DOUBLE) AS feature, CAST("Values".threshold AS BINARY_DOUBLE) AS threshold, CAST("Values".depth AS BINARY_DOUBLE) AS depth, CAST("Values".parent_id AS BINARY_DOUBLE) AS parent_id, CAST("Values"."Score" AS BINARY_DOUBLE) AS "Score" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS depth, 0 AS parent_id, -0.05901144817471504 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS depth, 0 AS parent_id, 0.04992173984646797 AS "Score" FROM DUAL) "Values"), 
"DT_Output_13" AS 
(SELECT "DT_node_lookup_13"."KEY" AS "KEY", "DT_node_lookup_13".node_id_2 AS node_id_2, "DT_node_data_13".node_id AS node_id, "DT_node_data_13".feature AS feature, "DT_node_data_13".threshold AS threshold, "DT_node_data_13".depth AS depth, "DT_node_data_13".parent_id AS parent_id, "DT_node_data_13"."Score" AS "Score" 
FROM "DT_node_lookup_13" LEFT OUTER JOIN "DT_node_data_13" ON "DT_node_lookup_13".node_id_2 = "DT_node_data_13".node_id), 
"XGB_Model_1_3" AS 
(SELECT "DT_Output_13"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_13"."Score" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_13"), 
"DT_node_lookup_14" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_3" < -0.32403820753097534) THEN 1 ELSE 2 END AS node_id_2 
FROM "FOURCLASS_10" "ADS"), 
"DT_node_data_14" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS BINARY_DOUBLE) AS feature, CAST("Values".threshold AS BINARY_DOUBLE) AS threshold, CAST("Values".depth AS BINARY_DOUBLE) AS depth, CAST("Values".parent_id AS BINARY_DOUBLE) AS parent_id, CAST("Values"."Score" AS BINARY_DOUBLE) AS "Score" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS depth, 0 AS parent_id, 0.06350211799144745 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS depth, 0 AS parent_id, -0.0336780808866024 AS "Score" FROM DUAL) "Values"), 
"DT_Output_14" AS 
(SELECT "DT_node_lookup_14"."KEY" AS "KEY", "DT_node_lookup_14".node_id_2 AS node_id_2, "DT_node_data_14".node_id AS node_id, "DT_node_data_14".feature AS feature, "DT_node_data_14".threshold AS threshold, "DT_node_data_14".depth AS depth, "DT_node_data_14".parent_id AS parent_id, "DT_node_data_14"."Score" AS "Score" 
FROM "DT_node_lookup_14" LEFT OUTER JOIN "DT_node_data_14" ON "DT_node_lookup_14".node_id_2 = "DT_node_data_14".node_id), 
"XGB_Model_2_3" AS 
(SELECT "DT_Output_14"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_14"."Score" AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_14"), 
"DT_node_lookup_15" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_7" < 0.362348735332489) THEN 1 ELSE 2 END AS node_id_2 
FROM "FOURCLASS_10" "ADS"), 
"DT_node_data_15" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS BINARY_DOUBLE) AS feature, CAST("Values".threshold AS BINARY_DOUBLE) AS threshold, CAST("Values".depth AS BINARY_DOUBLE) AS depth, CAST("Values".parent_id AS BINARY_DOUBLE) AS parent_id, CAST("Values"."Score" AS BINARY_DOUBLE) AS "Score" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS depth, 0 AS parent_id, 0.04889610782265663 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS depth, 0 AS parent_id, -0.04631924256682396 AS "Score" FROM DUAL) "Values"), 
"DT_Output_15" AS 
(SELECT "DT_node_lookup_15"."KEY" AS "KEY", "DT_node_lookup_15".node_id_2 AS node_id_2, "DT_node_data_15".node_id AS node_id, "DT_node_data_15".feature AS feature, "DT_node_data_15".threshold AS threshold, "DT_node_data_15".depth AS depth, "DT_node_data_15".parent_id AS parent_id, "DT_node_data_15"."Score" AS "Score" 
FROM "DT_node_lookup_15" LEFT OUTER JOIN "DT_node_data_15" ON "DT_node_lookup_15".node_id_2 = "DT_node_data_15".node_id), 
"XGB_Model_3_3" AS 
(SELECT "DT_Output_15"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_15"."Score" AS "Score_3" 
FROM "DT_Output_15"), 
"DT_node_lookup_16" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_3" < 0.5489295125007629) THEN 1 ELSE 2 END AS node_id_2 
FROM "FOURCLASS_10" "ADS"), 
"DT_node_data_16" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS BINARY_DOUBLE) AS feature, CAST("Values".threshold AS BINARY_DOUBLE) AS threshold, CAST("Values".depth AS BINARY_DOUBLE) AS depth, CAST("Values".parent_id AS BINARY_DOUBLE) AS parent_id, CAST("Values"."Score" AS BINARY_DOUBLE) AS "Score" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS depth, 0 AS parent_id, 0.04237661510705948 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS depth, 0 AS parent_id, -0.04944697022438049 AS "Score" FROM DUAL) "Values"), 
"DT_Output_16" AS 
(SELECT "DT_node_lookup_16"."KEY" AS "KEY", "DT_node_lookup_16".node_id_2 AS node_id_2, "DT_node_data_16".node_id AS node_id, "DT_node_data_16".feature AS feature, "DT_node_data_16".threshold AS threshold, "DT_node_data_16".depth AS depth, "DT_node_data_16".parent_id AS parent_id, "DT_node_data_16"."Score" AS "Score" 
FROM "DT_node_lookup_16" LEFT OUTER JOIN "DT_node_data_16" ON "DT_node_lookup_16".node_id_2 = "DT_node_data_16".node_id), 
"XGB_Model_0_4" AS 
(SELECT "DT_Output_16"."KEY" AS "KEY", "DT_Output_16"."Score" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_16"), 
"DT_node_lookup_17" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_3" < 1.1771701574325562) THEN 1 ELSE 2 END AS node_id_2 
FROM "FOURCLASS_10" "ADS"), 
"DT_node_data_17" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS BINARY_DOUBLE) AS feature, CAST("Values".threshold AS BINARY_DOUBLE) AS threshold, CAST("Values".depth AS BINARY_DOUBLE) AS depth, CAST("Values".parent_id AS BINARY_DOUBLE) AS parent_id, CAST("Values"."Score" AS BINARY_DOUBLE) AS "Score" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS depth, 0 AS parent_id, -0.052571412175893784 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS depth, 0 AS parent_id, 0.05052562430500984 AS "Score" FROM DUAL) "Values"), 
"DT_Output_17" AS 
(SELECT "DT_node_lookup_17"."KEY" AS "KEY", "DT_node_lookup_17".node_id_2 AS node_id_2, "DT_node_data_17".node_id AS node_id, "DT_node_data_17".feature AS feature, "DT_node_data_17".threshold AS threshold, "DT_node_data_17".depth AS depth, "DT_node_data_17".parent_id AS parent_id, "DT_node_data_17"."Score" AS "Score" 
FROM "DT_node_lookup_17" LEFT OUTER JOIN "DT_node_data_17" ON "DT_node_lookup_17".node_id_2 = "DT_node_data_17".node_id), 
"XGB_Model_1_4" AS 
(SELECT "DT_Output_17"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_17"."Score" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_17"), 
"DT_node_lookup_18" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_3" < -0.32403820753097534) THEN 1 ELSE 2 END AS node_id_2 
FROM "FOURCLASS_10" "ADS"), 
"DT_node_data_18" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS BINARY_DOUBLE) AS feature, CAST("Values".threshold AS BINARY_DOUBLE) AS threshold, CAST("Values".depth AS BINARY_DOUBLE) AS depth, CAST("Values".parent_id AS BINARY_DOUBLE) AS parent_id, CAST("Values"."Score" AS BINARY_DOUBLE) AS "Score" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS depth, 0 AS parent_id, 0.058749761432409286 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS depth, 0 AS parent_id, -0.03251056745648384 AS "Score" FROM DUAL) "Values"), 
"DT_Output_18" AS 
(SELECT "DT_node_lookup_18"."KEY" AS "KEY", "DT_node_lookup_18".node_id_2 AS node_id_2, "DT_node_data_18".node_id AS node_id, "DT_node_data_18".feature AS feature, "DT_node_data_18".threshold AS threshold, "DT_node_data_18".depth AS depth, "DT_node_data_18".parent_id AS parent_id, "DT_node_data_18"."Score" AS "Score" 
FROM "DT_node_lookup_18" LEFT OUTER JOIN "DT_node_data_18" ON "DT_node_lookup_18".node_id_2 = "DT_node_data_18".node_id), 
"XGB_Model_2_4" AS 
(SELECT "DT_Output_18"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_18"."Score" AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_18"), 
"DT_node_lookup_19" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_1" < 0.2519511282444) THEN 1 ELSE 2 END AS node_id_2 
FROM "FOURCLASS_10" "ADS"), 
"DT_node_data_19" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS BINARY_DOUBLE) AS feature, CAST("Values".threshold AS BINARY_DOUBLE) AS threshold, CAST("Values".depth AS BINARY_DOUBLE) AS depth, CAST("Values".parent_id AS BINARY_DOUBLE) AS parent_id, CAST("Values"."Score" AS BINARY_DOUBLE) AS "Score" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS depth, 0 AS parent_id, -0.05416066199541092 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS depth, 0 AS parent_id, 0.04157326743006706 AS "Score" FROM DUAL) "Values"), 
"DT_Output_19" AS 
(SELECT "DT_node_lookup_19"."KEY" AS "KEY", "DT_node_lookup_19".node_id_2 AS node_id_2, "DT_node_data_19".node_id AS node_id, "DT_node_data_19".feature AS feature, "DT_node_data_19".threshold AS threshold, "DT_node_data_19".depth AS depth, "DT_node_data_19".parent_id AS parent_id, "DT_node_data_19"."Score" AS "Score" 
FROM "DT_node_lookup_19" LEFT OUTER JOIN "DT_node_data_19" ON "DT_node_lookup_19".node_id_2 = "DT_node_data_19".node_id), 
"XGB_Model_3_4" AS 
(SELECT "DT_Output_19"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_19"."Score" AS "Score_3" 
FROM "DT_Output_19")
 SELECT "XGB_B1"."KEY", "XGB_B1"."Score_0", "XGB_B1"."Score_1", "XGB_B1"."Score_2", "XGB_B1"."Score_3" 
FROM (SELECT "XGB_esu_1"."KEY" AS "KEY", "XGB_esu_1"."Score_0" AS "Score_0", "XGB_esu_1"."Score_1" AS "Score_1", "XGB_esu_1"."Score_2" AS "Score_2", "XGB_esu_1"."Score_3" AS "Score_3" 
FROM (SELECT "XGB_Model_2_2"."KEY" AS "KEY", "XGB_Model_2_2"."Score_0" AS "Score_0", "XGB_Model_2_2"."Score_1" AS "Score_1", "XGB_Model_2_2"."Score_2" AS "Score_2", "XGB_Model_2_2"."Score_3" AS "Score_3" 
FROM "XGB_Model_2_2" UNION ALL SELECT "XGB_Model_3_2"."KEY" AS "KEY", "XGB_Model_3_2"."Score_0" AS "Score_0", "XGB_Model_3_2"."Score_1" AS "Score_1", "XGB_Model_3_2"."Score_2" AS "Score_2", "XGB_Model_3_2"."Score_3" AS "Score_3" 
FROM "XGB_Model_3_2" UNION ALL SELECT "XGB_Model_0_3"."KEY" AS "KEY", "XGB_Model_0_3"."Score_0" AS "Score_0", "XGB_Model_0_3"."Score_1" AS "Score_1", "XGB_Model_0_3"."Score_2" AS "Score_2", "XGB_Model_0_3"."Score_3" AS "Score_3" 
FROM "XGB_Model_0_3" UNION ALL SELECT "XGB_Model_1_3"."KEY" AS "KEY", "XGB_Model_1_3"."Score_0" AS "Score_0", "XGB_Model_1_3"."Score_1" AS "Score_1", "XGB_Model_1_3"."Score_2" AS "Score_2", "XGB_Model_1_3"."Score_3" AS "Score_3" 
FROM "XGB_Model_1_3" UNION ALL SELECT "XGB_Model_2_3"."KEY" AS "KEY", "XGB_Model_2_3"."Score_0" AS "Score_0", "XGB_Model_2_3"."Score_1" AS "Score_1", "XGB_Model_2_3"."Score_2" AS "Score_2", "XGB_Model_2_3"."Score_3" AS "Score_3" 
FROM "XGB_Model_2_3" UNION ALL SELECT "XGB_Model_3_3"."KEY" AS "KEY", "XGB_Model_3_3"."Score_0" AS "Score_0", "XGB_Model_3_3"."Score_1" AS "Score_1", "XGB_Model_3_3"."Score_2" AS "Score_2", "XGB_Model_3_3"."Score_3" AS "Score_3" 
FROM "XGB_Model_3_3" UNION ALL SELECT "XGB_Model_0_4"."KEY" AS "KEY", "XGB_Model_0_4"."Score_0" AS "Score_0", "XGB_Model_0_4"."Score_1" AS "Score_1", "XGB_Model_0_4"."Score_2" AS "Score_2", "XGB_Model_0_4"."Score_3" AS "Score_3" 
FROM "XGB_Model_0_4" UNION ALL SELECT "XGB_Model_1_4"."KEY" AS "KEY", "XGB_Model_1_4"."Score_0" AS "Score_0", "XGB_Model_1_4"."Score_1" AS "Score_1", "XGB_Model_1_4"."Score_2" AS "Score_2", "XGB_Model_1_4"."Score_3" AS "Score_3" 
FROM "XGB_Model_1_4" UNION ALL SELECT "XGB_Model_2_4"."KEY" AS "KEY", "XGB_Model_2_4"."Score_0" AS "Score_0", "XGB_Model_2_4"."Score_1" AS "Score_1", "XGB_Model_2_4"."Score_2" AS "Score_2", "XGB_Model_2_4"."Score_3" AS "Score_3" 
FROM "XGB_Model_2_4" UNION ALL SELECT "XGB_Model_3_4"."KEY" AS "KEY", "XGB_Model_3_4"."Score_0" AS "Score_0", "XGB_Model_3_4"."Score_1" AS "Score_1", "XGB_Model_3_4"."Score_2" AS "Score_2", "XGB_Model_3_4"."Score_3" AS "Score_3" 
FROM "XGB_Model_3_4") "XGB_esu_1") "XGB_B1") "U"

-- Code For temporary table 180416233349_4CWGHI_XGB_B2 part 1/2. Create 


CREATE GLOBAL TEMPORARY TABLE "180416233349_4CWGHI_XGB_B2" (
	"KEY" NUMBER(19), 
	"Score_0" BINARY_DOUBLE, 
	"Score_1" BINARY_DOUBLE, 
	"Score_2" BINARY_DOUBLE, 
	"Score_3" BINARY_DOUBLE
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table 180416233349_4CWGHI_XGB_B2 part 2/2. Populate

INSERT INTO "180416233349_4CWGHI_XGB_B2" ("KEY", "Score_0", "Score_1", "Score_2", "Score_3") SELECT "U"."KEY", "U"."Score_0", "U"."Score_1", "U"."Score_2", "U"."Score_3" 
FROM (WITH "DT_node_lookup_20" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_4" < -0.35484129190444946) THEN 1 ELSE 2 END AS node_id_2 
FROM "FOURCLASS_10" "ADS"), 
"DT_node_data_20" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS BINARY_DOUBLE) AS feature, CAST("Values".threshold AS BINARY_DOUBLE) AS threshold, CAST("Values".depth AS BINARY_DOUBLE) AS depth, CAST("Values".parent_id AS BINARY_DOUBLE) AS parent_id, CAST("Values"."Score" AS BINARY_DOUBLE) AS "Score" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS depth, 0 AS parent_id, -0.046829257160425186 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS depth, 0 AS parent_id, 0.042319949716329575 AS "Score" FROM DUAL) "Values"), 
"DT_Output_20" AS 
(SELECT "DT_node_lookup_20"."KEY" AS "KEY", "DT_node_lookup_20".node_id_2 AS node_id_2, "DT_node_data_20".node_id AS node_id, "DT_node_data_20".feature AS feature, "DT_node_data_20".threshold AS threshold, "DT_node_data_20".depth AS depth, "DT_node_data_20".parent_id AS parent_id, "DT_node_data_20"."Score" AS "Score" 
FROM "DT_node_lookup_20" LEFT OUTER JOIN "DT_node_data_20" ON "DT_node_lookup_20".node_id_2 = "DT_node_data_20".node_id), 
"XGB_Model_0_5" AS 
(SELECT "DT_Output_20"."KEY" AS "KEY", "DT_Output_20"."Score" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_20"), 
"DT_node_lookup_21" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_3" < 0.72231525182724) THEN 1 ELSE 2 END AS node_id_2 
FROM "FOURCLASS_10" "ADS"), 
"DT_node_data_21" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS BINARY_DOUBLE) AS feature, CAST("Values".threshold AS BINARY_DOUBLE) AS threshold, CAST("Values".depth AS BINARY_DOUBLE) AS depth, CAST("Values".parent_id AS BINARY_DOUBLE) AS parent_id, CAST("Values"."Score" AS BINARY_DOUBLE) AS "Score" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS depth, 0 AS parent_id, -0.05705375596880913 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS depth, 0 AS parent_id, 0.04210996255278587 AS "Score" FROM DUAL) "Values"), 
"DT_Output_21" AS 
(SELECT "DT_node_lookup_21"."KEY" AS "KEY", "DT_node_lookup_21".node_id_2 AS node_id_2, "DT_node_data_21".node_id AS node_id, "DT_node_data_21".feature AS feature, "DT_node_data_21".threshold AS threshold, "DT_node_data_21".depth AS depth, "DT_node_data_21".parent_id AS parent_id, "DT_node_data_21"."Score" AS "Score" 
FROM "DT_node_lookup_21" LEFT OUTER JOIN "DT_node_data_21" ON "DT_node_lookup_21".node_id_2 = "DT_node_data_21".node_id), 
"XGB_Model_1_5" AS 
(SELECT "DT_Output_21"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_21"."Score" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_21"), 
"DT_node_lookup_22" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_3" < -0.6171147227287292) THEN 1 ELSE 2 END AS node_id_2 
FROM "FOURCLASS_10" "ADS"), 
"DT_node_data_22" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS BINARY_DOUBLE) AS feature, CAST("Values".threshold AS BINARY_DOUBLE) AS threshold, CAST("Values".depth AS BINARY_DOUBLE) AS depth, CAST("Values".parent_id AS BINARY_DOUBLE) AS parent_id, CAST("Values"."Score" AS BINARY_DOUBLE) AS "Score" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS depth, 0 AS parent_id, 0.05940497666597366 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS depth, 0 AS parent_id, -0.032234277576208115 AS "Score" FROM DUAL) "Values"), 
"DT_Output_22" AS 
(SELECT "DT_node_lookup_22"."KEY" AS "KEY", "DT_node_lookup_22".node_id_2 AS node_id_2, "DT_node_data_22".node_id AS node_id, "DT_node_data_22".feature AS feature, "DT_node_data_22".threshold AS threshold, "DT_node_data_22".depth AS depth, "DT_node_data_22".parent_id AS parent_id, "DT_node_data_22"."Score" AS "Score" 
FROM "DT_node_lookup_22" LEFT OUTER JOIN "DT_node_data_22" ON "DT_node_lookup_22".node_id_2 = "DT_node_data_22".node_id), 
"XGB_Model_2_5" AS 
(SELECT "DT_Output_22"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_22"."Score" AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_22"), 
"DT_node_lookup_23" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_7" < 0.362348735332489) THEN 1 ELSE 2 END AS node_id_2 
FROM "FOURCLASS_10" "ADS"), 
"DT_node_data_23" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS BINARY_DOUBLE) AS feature, CAST("Values".threshold AS BINARY_DOUBLE) AS threshold, CAST("Values".depth AS BINARY_DOUBLE) AS depth, CAST("Values".parent_id AS BINARY_DOUBLE) AS parent_id, CAST("Values"."Score" AS BINARY_DOUBLE) AS "Score" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS depth, 0 AS parent_id, 0.045328617095947266 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS depth, 0 AS parent_id, -0.04538597911596298 AS "Score" FROM DUAL) "Values"), 
"DT_Output_23" AS 
(SELECT "DT_node_lookup_23"."KEY" AS "KEY", "DT_node_lookup_23".node_id_2 AS node_id_2, "DT_node_data_23".node_id AS node_id, "DT_node_data_23".feature AS feature, "DT_node_data_23".threshold AS threshold, "DT_node_data_23".depth AS depth, "DT_node_data_23".parent_id AS parent_id, "DT_node_data_23"."Score" AS "Score" 
FROM "DT_node_lookup_23" LEFT OUTER JOIN "DT_node_data_23" ON "DT_node_lookup_23".node_id_2 = "DT_node_data_23".node_id), 
"XGB_Model_3_5" AS 
(SELECT "DT_Output_23"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_23"."Score" AS "Score_3" 
FROM "DT_Output_23"), 
"DT_node_lookup_24" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_3" < 0.5489295125007629) THEN 1 ELSE 2 END AS node_id_2 
FROM "FOURCLASS_10" "ADS"), 
"DT_node_data_24" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS BINARY_DOUBLE) AS feature, CAST("Values".threshold AS BINARY_DOUBLE) AS threshold, CAST("Values".depth AS BINARY_DOUBLE) AS depth, CAST("Values".parent_id AS BINARY_DOUBLE) AS parent_id, CAST("Values"."Score" AS BINARY_DOUBLE) AS "Score" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS depth, 0 AS parent_id, 0.039290837943553925 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS depth, 0 AS parent_id, -0.04788238927721977 AS "Score" FROM DUAL) "Values"), 
"DT_Output_24" AS 
(SELECT "DT_node_lookup_24"."KEY" AS "KEY", "DT_node_lookup_24".node_id_2 AS node_id_2, "DT_node_data_24".node_id AS node_id, "DT_node_data_24".feature AS feature, "DT_node_data_24".threshold AS threshold, "DT_node_data_24".depth AS depth, "DT_node_data_24".parent_id AS parent_id, "DT_node_data_24"."Score" AS "Score" 
FROM "DT_node_lookup_24" LEFT OUTER JOIN "DT_node_data_24" ON "DT_node_lookup_24".node_id_2 = "DT_node_data_24".node_id), 
"XGB_Model_0_6" AS 
(SELECT "DT_Output_24"."KEY" AS "KEY", "DT_Output_24"."Score" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_24"), 
"DT_node_lookup_25" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_3" < 0.72231525182724) THEN 1 ELSE 2 END AS node_id_2 
FROM "FOURCLASS_10" "ADS"), 
"DT_node_data_25" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS BINARY_DOUBLE) AS feature, CAST("Values".threshold AS BINARY_DOUBLE) AS threshold, CAST("Values".depth AS BINARY_DOUBLE) AS depth, CAST("Values".parent_id AS BINARY_DOUBLE) AS parent_id, CAST("Values"."Score" AS BINARY_DOUBLE) AS "Score" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS depth, 0 AS parent_id, -0.056167203933000565 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS depth, 0 AS parent_id, 0.0387209914624691 AS "Score" FROM DUAL) "Values"), 
"DT_Output_25" AS 
(SELECT "DT_node_lookup_25"."KEY" AS "KEY", "DT_node_lookup_25".node_id_2 AS node_id_2, "DT_node_data_25".node_id AS node_id, "DT_node_data_25".feature AS feature, "DT_node_data_25".threshold AS threshold, "DT_node_data_25".depth AS depth, "DT_node_data_25".parent_id AS parent_id, "DT_node_data_25"."Score" AS "Score" 
FROM "DT_node_lookup_25" LEFT OUTER JOIN "DT_node_data_25" ON "DT_node_lookup_25".node_id_2 = "DT_node_data_25".node_id), 
"XGB_Model_1_6" AS 
(SELECT "DT_Output_25"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_25"."Score" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_25"), 
"DT_node_lookup_26" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_3" < -0.6171147227287292) THEN 1 ELSE 2 END AS node_id_2 
FROM "FOURCLASS_10" "ADS"), 
"DT_node_data_26" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS BINARY_DOUBLE) AS feature, CAST("Values".threshold AS BINARY_DOUBLE) AS threshold, CAST("Values".depth AS BINARY_DOUBLE) AS depth, CAST("Values".parent_id AS BINARY_DOUBLE) AS parent_id, CAST("Values"."Score" AS BINARY_DOUBLE) AS "Score" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS depth, 0 AS parent_id, 0.05543717369437218 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS depth, 0 AS parent_id, -0.031157618388533592 AS "Score" FROM DUAL) "Values"), 
"DT_Output_26" AS 
(SELECT "DT_node_lookup_26"."KEY" AS "KEY", "DT_node_lookup_26".node_id_2 AS node_id_2, "DT_node_data_26".node_id AS node_id, "DT_node_data_26".feature AS feature, "DT_node_data_26".threshold AS threshold, "DT_node_data_26".depth AS depth, "DT_node_data_26".parent_id AS parent_id, "DT_node_data_26"."Score" AS "Score" 
FROM "DT_node_lookup_26" LEFT OUTER JOIN "DT_node_data_26" ON "DT_node_lookup_26".node_id_2 = "DT_node_data_26".node_id), 
"XGB_Model_2_6" AS 
(SELECT "DT_Output_26"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_26"."Score" AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_26"), 
"DT_node_lookup_27" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_1" < 0.2519511282444) THEN 1 ELSE 2 END AS node_id_2 
FROM "FOURCLASS_10" "ADS"), 
"DT_node_data_27" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS BINARY_DOUBLE) AS feature, CAST("Values".threshold AS BINARY_DOUBLE) AS threshold, CAST("Values".depth AS BINARY_DOUBLE) AS depth, CAST("Values".parent_id AS BINARY_DOUBLE) AS parent_id, CAST("Values"."Score" AS BINARY_DOUBLE) AS "Score" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS depth, 0 AS parent_id, -0.05286213383078575 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS depth, 0 AS parent_id, 0.038254350423812866 AS "Score" FROM DUAL) "Values"), 
"DT_Output_27" AS 
(SELECT "DT_node_lookup_27"."KEY" AS "KEY", "DT_node_lookup_27".node_id_2 AS node_id_2, "DT_node_data_27".node_id AS node_id, "DT_node_data_27".feature AS feature, "DT_node_data_27".threshold AS threshold, "DT_node_data_27".depth AS depth, "DT_node_data_27".parent_id AS parent_id, "DT_node_data_27"."Score" AS "Score" 
FROM "DT_node_lookup_27" LEFT OUTER JOIN "DT_node_data_27" ON "DT_node_lookup_27".node_id_2 = "DT_node_data_27".node_id), 
"XGB_Model_3_6" AS 
(SELECT "DT_Output_27"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_27"."Score" AS "Score_3" 
FROM "DT_Output_27"), 
"DT_node_lookup_28" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_4" < -0.35484129190444946) THEN 1 ELSE 2 END AS node_id_2 
FROM "FOURCLASS_10" "ADS"), 
"DT_node_data_28" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS BINARY_DOUBLE) AS feature, CAST("Values".threshold AS BINARY_DOUBLE) AS threshold, CAST("Values".depth AS BINARY_DOUBLE) AS depth, CAST("Values".parent_id AS BINARY_DOUBLE) AS parent_id, CAST("Values"."Score" AS BINARY_DOUBLE) AS "Score" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS depth, 0 AS parent_id, -0.045463137328624725 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS depth, 0 AS parent_id, 0.039555009454488754 AS "Score" FROM DUAL) "Values"), 
"DT_Output_28" AS 
(SELECT "DT_node_lookup_28"."KEY" AS "KEY", "DT_node_lookup_28".node_id_2 AS node_id_2, "DT_node_data_28".node_id AS node_id, "DT_node_data_28".feature AS feature, "DT_node_data_28".threshold AS threshold, "DT_node_data_28".depth AS depth, "DT_node_data_28".parent_id AS parent_id, "DT_node_data_28"."Score" AS "Score" 
FROM "DT_node_lookup_28" LEFT OUTER JOIN "DT_node_data_28" ON "DT_node_lookup_28".node_id_2 = "DT_node_data_28".node_id), 
"XGB_Model_0_7" AS 
(SELECT "DT_Output_28"."KEY" AS "KEY", "DT_Output_28"."Score" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_28"), 
"DT_node_lookup_29" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_3" < 0.72231525182724) THEN 1 ELSE 2 END AS node_id_2 
FROM "FOURCLASS_10" "ADS"), 
"DT_node_data_29" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS BINARY_DOUBLE) AS feature, CAST("Values".threshold AS BINARY_DOUBLE) AS threshold, CAST("Values".depth AS BINARY_DOUBLE) AS depth, CAST("Values".parent_id AS BINARY_DOUBLE) AS parent_id, CAST("Values"."Score" AS BINARY_DOUBLE) AS "Score" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS depth, 0 AS parent_id, -0.055302590131759644 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS depth, 0 AS parent_id, 0.03555578365921974 AS "Score" FROM DUAL) "Values"), 
"DT_Output_29" AS 
(SELECT "DT_node_lookup_29"."KEY" AS "KEY", "DT_node_lookup_29".node_id_2 AS node_id_2, "DT_node_data_29".node_id AS node_id, "DT_node_data_29".feature AS feature, "DT_node_data_29".threshold AS threshold, "DT_node_data_29".depth AS depth, "DT_node_data_29".parent_id AS parent_id, "DT_node_data_29"."Score" AS "Score" 
FROM "DT_node_lookup_29" LEFT OUTER JOIN "DT_node_data_29" ON "DT_node_lookup_29".node_id_2 = "DT_node_data_29".node_id), 
"XGB_Model_1_7" AS 
(SELECT "DT_Output_29"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_29"."Score" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_29")
 SELECT "XGB_B2"."KEY", "XGB_B2"."Score_0", "XGB_B2"."Score_1", "XGB_B2"."Score_2", "XGB_B2"."Score_3" 
FROM (SELECT "XGB_esu_2"."KEY" AS "KEY", "XGB_esu_2"."Score_0" AS "Score_0", "XGB_esu_2"."Score_1" AS "Score_1", "XGB_esu_2"."Score_2" AS "Score_2", "XGB_esu_2"."Score_3" AS "Score_3" 
FROM (SELECT "XGB_Model_0_5"."KEY" AS "KEY", "XGB_Model_0_5"."Score_0" AS "Score_0", "XGB_Model_0_5"."Score_1" AS "Score_1", "XGB_Model_0_5"."Score_2" AS "Score_2", "XGB_Model_0_5"."Score_3" AS "Score_3" 
FROM "XGB_Model_0_5" UNION ALL SELECT "XGB_Model_1_5"."KEY" AS "KEY", "XGB_Model_1_5"."Score_0" AS "Score_0", "XGB_Model_1_5"."Score_1" AS "Score_1", "XGB_Model_1_5"."Score_2" AS "Score_2", "XGB_Model_1_5"."Score_3" AS "Score_3" 
FROM "XGB_Model_1_5" UNION ALL SELECT "XGB_Model_2_5"."KEY" AS "KEY", "XGB_Model_2_5"."Score_0" AS "Score_0", "XGB_Model_2_5"."Score_1" AS "Score_1", "XGB_Model_2_5"."Score_2" AS "Score_2", "XGB_Model_2_5"."Score_3" AS "Score_3" 
FROM "XGB_Model_2_5" UNION ALL SELECT "XGB_Model_3_5"."KEY" AS "KEY", "XGB_Model_3_5"."Score_0" AS "Score_0", "XGB_Model_3_5"."Score_1" AS "Score_1", "XGB_Model_3_5"."Score_2" AS "Score_2", "XGB_Model_3_5"."Score_3" AS "Score_3" 
FROM "XGB_Model_3_5" UNION ALL SELECT "XGB_Model_0_6"."KEY" AS "KEY", "XGB_Model_0_6"."Score_0" AS "Score_0", "XGB_Model_0_6"."Score_1" AS "Score_1", "XGB_Model_0_6"."Score_2" AS "Score_2", "XGB_Model_0_6"."Score_3" AS "Score_3" 
FROM "XGB_Model_0_6" UNION ALL SELECT "XGB_Model_1_6"."KEY" AS "KEY", "XGB_Model_1_6"."Score_0" AS "Score_0", "XGB_Model_1_6"."Score_1" AS "Score_1", "XGB_Model_1_6"."Score_2" AS "Score_2", "XGB_Model_1_6"."Score_3" AS "Score_3" 
FROM "XGB_Model_1_6" UNION ALL SELECT "XGB_Model_2_6"."KEY" AS "KEY", "XGB_Model_2_6"."Score_0" AS "Score_0", "XGB_Model_2_6"."Score_1" AS "Score_1", "XGB_Model_2_6"."Score_2" AS "Score_2", "XGB_Model_2_6"."Score_3" AS "Score_3" 
FROM "XGB_Model_2_6" UNION ALL SELECT "XGB_Model_3_6"."KEY" AS "KEY", "XGB_Model_3_6"."Score_0" AS "Score_0", "XGB_Model_3_6"."Score_1" AS "Score_1", "XGB_Model_3_6"."Score_2" AS "Score_2", "XGB_Model_3_6"."Score_3" AS "Score_3" 
FROM "XGB_Model_3_6" UNION ALL SELECT "XGB_Model_0_7"."KEY" AS "KEY", "XGB_Model_0_7"."Score_0" AS "Score_0", "XGB_Model_0_7"."Score_1" AS "Score_1", "XGB_Model_0_7"."Score_2" AS "Score_2", "XGB_Model_0_7"."Score_3" AS "Score_3" 
FROM "XGB_Model_0_7" UNION ALL SELECT "XGB_Model_1_7"."KEY" AS "KEY", "XGB_Model_1_7"."Score_0" AS "Score_0", "XGB_Model_1_7"."Score_1" AS "Score_1", "XGB_Model_1_7"."Score_2" AS "Score_2", "XGB_Model_1_7"."Score_3" AS "Score_3" 
FROM "XGB_Model_1_7") "XGB_esu_2") "XGB_B2") "U"

-- Code For temporary table 180416233349_KK6L1Y_XGB_B3 part 1/2. Create 


CREATE GLOBAL TEMPORARY TABLE "180416233349_KK6L1Y_XGB_B3" (
	"KEY" NUMBER(19), 
	"Score_0" BINARY_DOUBLE, 
	"Score_1" BINARY_DOUBLE, 
	"Score_2" BINARY_DOUBLE, 
	"Score_3" BINARY_DOUBLE
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table 180416233349_KK6L1Y_XGB_B3 part 2/2. Populate

INSERT INTO "180416233349_KK6L1Y_XGB_B3" ("KEY", "Score_0", "Score_1", "Score_2", "Score_3") SELECT "U"."KEY", "U"."Score_0", "U"."Score_1", "U"."Score_2", "U"."Score_3" 
FROM (WITH "DT_node_lookup_30" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_3" < -0.9904775023460388) THEN 1 ELSE 2 END AS node_id_2 
FROM "FOURCLASS_10" "ADS"), 
"DT_node_data_30" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS BINARY_DOUBLE) AS feature, CAST("Values".threshold AS BINARY_DOUBLE) AS threshold, CAST("Values".depth AS BINARY_DOUBLE) AS depth, CAST("Values".parent_id AS BINARY_DOUBLE) AS parent_id, CAST("Values"."Score" AS BINARY_DOUBLE) AS "Score" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS depth, 0 AS parent_id, 0.05650178715586662 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS depth, 0 AS parent_id, -0.0309823639690876 AS "Score" FROM DUAL) "Values"), 
"DT_Output_30" AS 
(SELECT "DT_node_lookup_30"."KEY" AS "KEY", "DT_node_lookup_30".node_id_2 AS node_id_2, "DT_node_data_30".node_id AS node_id, "DT_node_data_30".feature AS feature, "DT_node_data_30".threshold AS threshold, "DT_node_data_30".depth AS depth, "DT_node_data_30".parent_id AS parent_id, "DT_node_data_30"."Score" AS "Score" 
FROM "DT_node_lookup_30" LEFT OUTER JOIN "DT_node_data_30" ON "DT_node_lookup_30".node_id_2 = "DT_node_data_30".node_id), 
"XGB_Model_2_7" AS 
(SELECT "DT_Output_30"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_30"."Score" AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_30"), 
"DT_node_lookup_31" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_7" < 0.362348735332489) THEN 1 ELSE 2 END AS node_id_2 
FROM "FOURCLASS_10" "ADS"), 
"DT_node_data_31" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS BINARY_DOUBLE) AS feature, CAST("Values".threshold AS BINARY_DOUBLE) AS threshold, CAST("Values".depth AS BINARY_DOUBLE) AS depth, CAST("Values".parent_id AS BINARY_DOUBLE) AS parent_id, CAST("Values"."Score" AS BINARY_DOUBLE) AS "Score" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS depth, 0 AS parent_id, 0.04246804490685463 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS depth, 0 AS parent_id, -0.04452360048890114 AS "Score" FROM DUAL) "Values"), 
"DT_Output_31" AS 
(SELECT "DT_node_lookup_31"."KEY" AS "KEY", "DT_node_lookup_31".node_id_2 AS node_id_2, "DT_node_data_31".node_id AS node_id, "DT_node_data_31".feature AS feature, "DT_node_data_31".threshold AS threshold, "DT_node_data_31".depth AS depth, "DT_node_data_31".parent_id AS parent_id, "DT_node_data_31"."Score" AS "Score" 
FROM "DT_node_lookup_31" LEFT OUTER JOIN "DT_node_data_31" ON "DT_node_lookup_31".node_id_2 = "DT_node_data_31".node_id), 
"XGB_Model_3_7" AS 
(SELECT "DT_Output_31"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_31"."Score" AS "Score_3" 
FROM "DT_Output_31"), 
"DT_node_lookup_32" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_3" < 0.5489295125007629) THEN 1 ELSE 2 END AS node_id_2 
FROM "FOURCLASS_10" "ADS"), 
"DT_node_data_32" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS BINARY_DOUBLE) AS feature, CAST("Values".threshold AS BINARY_DOUBLE) AS threshold, CAST("Values".depth AS BINARY_DOUBLE) AS depth, CAST("Values".parent_id AS BINARY_DOUBLE) AS parent_id, CAST("Values"."Score" AS BINARY_DOUBLE) AS "Score" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS depth, 0 AS parent_id, 0.036594901233911514 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS depth, 0 AS parent_id, -0.04641127213835716 AS "Score" FROM DUAL) "Values"), 
"DT_Output_32" AS 
(SELECT "DT_node_lookup_32"."KEY" AS "KEY", "DT_node_lookup_32".node_id_2 AS node_id_2, "DT_node_data_32".node_id AS node_id, "DT_node_data_32".feature AS feature, "DT_node_data_32".threshold AS threshold, "DT_node_data_32".depth AS depth, "DT_node_data_32".parent_id AS parent_id, "DT_node_data_32"."Score" AS "Score" 
FROM "DT_node_lookup_32" LEFT OUTER JOIN "DT_node_data_32" ON "DT_node_lookup_32".node_id_2 = "DT_node_data_32".node_id), 
"XGB_Model_0_8" AS 
(SELECT "DT_Output_32"."KEY" AS "KEY", "DT_Output_32"."Score" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_32"), 
"DT_node_lookup_33" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_3" < 0.72231525182724) THEN 1 ELSE 2 END AS node_id_2 
FROM "FOURCLASS_10" "ADS"), 
"DT_node_data_33" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS BINARY_DOUBLE) AS feature, CAST("Values".threshold AS BINARY_DOUBLE) AS threshold, CAST("Values".depth AS BINARY_DOUBLE) AS depth, CAST("Values".parent_id AS BINARY_DOUBLE) AS parent_id, CAST("Values"."Score" AS BINARY_DOUBLE) AS "Score" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS depth, 0 AS parent_id, -0.054527152329683304 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS depth, 0 AS parent_id, 0.0328013151884079 AS "Score" FROM DUAL) "Values"), 
"DT_Output_33" AS 
(SELECT "DT_node_lookup_33"."KEY" AS "KEY", "DT_node_lookup_33".node_id_2 AS node_id_2, "DT_node_data_33".node_id AS node_id, "DT_node_data_33".feature AS feature, "DT_node_data_33".threshold AS threshold, "DT_node_data_33".depth AS depth, "DT_node_data_33".parent_id AS parent_id, "DT_node_data_33"."Score" AS "Score" 
FROM "DT_node_lookup_33" LEFT OUTER JOIN "DT_node_data_33" ON "DT_node_lookup_33".node_id_2 = "DT_node_data_33".node_id), 
"XGB_Model_1_8" AS 
(SELECT "DT_Output_33"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_33"."Score" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_33"), 
"DT_node_lookup_34" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_3" < -0.9904775023460388) THEN 1 ELSE 2 END AS node_id_2 
FROM "FOURCLASS_10" "ADS"), 
"DT_node_data_34" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS BINARY_DOUBLE) AS feature, CAST("Values".threshold AS BINARY_DOUBLE) AS threshold, CAST("Values".depth AS BINARY_DOUBLE) AS depth, CAST("Values".parent_id AS BINARY_DOUBLE) AS parent_id, CAST("Values"."Score" AS BINARY_DOUBLE) AS "Score" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS depth, 0 AS parent_id, 0.0530412457883358 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS depth, 0 AS parent_id, -0.029953250661492348 AS "Score" FROM DUAL) "Values"), 
"DT_Output_34" AS 
(SELECT "DT_node_lookup_34"."KEY" AS "KEY", "DT_node_lookup_34".node_id_2 AS node_id_2, "DT_node_data_34".node_id AS node_id, "DT_node_data_34".feature AS feature, "DT_node_data_34".threshold AS threshold, "DT_node_data_34".depth AS depth, "DT_node_data_34".parent_id AS parent_id, "DT_node_data_34"."Score" AS "Score" 
FROM "DT_node_lookup_34" LEFT OUTER JOIN "DT_node_data_34" ON "DT_node_lookup_34".node_id_2 = "DT_node_data_34".node_id), 
"XGB_Model_2_8" AS 
(SELECT "DT_Output_34"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_34"."Score" AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_34"), 
"DT_node_lookup_35" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_1" < 0.2519511282444) THEN 1 ELSE 2 END AS node_id_2 
FROM "FOURCLASS_10" "ADS"), 
"DT_node_data_35" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS BINARY_DOUBLE) AS feature, CAST("Values".threshold AS BINARY_DOUBLE) AS threshold, CAST("Values".depth AS BINARY_DOUBLE) AS depth, CAST("Values".parent_id AS BINARY_DOUBLE) AS parent_id, CAST("Values"."Score" AS BINARY_DOUBLE) AS "Score" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS depth, 0 AS parent_id, -0.0515601821243763 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS depth, 0 AS parent_id, 0.03540695831179619 AS "Score" FROM DUAL) "Values"), 
"DT_Output_35" AS 
(SELECT "DT_node_lookup_35"."KEY" AS "KEY", "DT_node_lookup_35".node_id_2 AS node_id_2, "DT_node_data_35".node_id AS node_id, "DT_node_data_35".feature AS feature, "DT_node_data_35".threshold AS threshold, "DT_node_data_35".depth AS depth, "DT_node_data_35".parent_id AS parent_id, "DT_node_data_35"."Score" AS "Score" 
FROM "DT_node_lookup_35" LEFT OUTER JOIN "DT_node_data_35" ON "DT_node_lookup_35".node_id_2 = "DT_node_data_35".node_id), 
"XGB_Model_3_8" AS 
(SELECT "DT_Output_35"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_35"."Score" AS "Score_3" 
FROM "DT_Output_35"), 
"DT_node_lookup_36" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_4" < -0.35484129190444946) THEN 1 ELSE 2 END AS node_id_2 
FROM "FOURCLASS_10" "ADS"), 
"DT_node_data_36" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS BINARY_DOUBLE) AS feature, CAST("Values".threshold AS BINARY_DOUBLE) AS threshold, CAST("Values".depth AS BINARY_DOUBLE) AS depth, CAST("Values".parent_id AS BINARY_DOUBLE) AS parent_id, CAST("Values"."Score" AS BINARY_DOUBLE) AS "Score" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS depth, 0 AS parent_id, -0.04417154937982559 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS depth, 0 AS parent_id, 0.03703683614730835 AS "Score" FROM DUAL) "Values"), 
"DT_Output_36" AS 
(SELECT "DT_node_lookup_36"."KEY" AS "KEY", "DT_node_lookup_36".node_id_2 AS node_id_2, "DT_node_data_36".node_id AS node_id, "DT_node_data_36".feature AS feature, "DT_node_data_36".threshold AS threshold, "DT_node_data_36".depth AS depth, "DT_node_data_36".parent_id AS parent_id, "DT_node_data_36"."Score" AS "Score" 
FROM "DT_node_lookup_36" LEFT OUTER JOIN "DT_node_data_36" ON "DT_node_lookup_36".node_id_2 = "DT_node_data_36".node_id), 
"XGB_Model_0_9" AS 
(SELECT "DT_Output_36"."KEY" AS "KEY", "DT_Output_36"."Score" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_36"), 
"DT_node_lookup_37" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_3" < 1.1771701574325562) THEN 1 ELSE 2 END AS node_id_2 
FROM "FOURCLASS_10" "ADS"), 
"DT_node_data_37" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS BINARY_DOUBLE) AS feature, CAST("Values".threshold AS BINARY_DOUBLE) AS threshold, CAST("Values".depth AS BINARY_DOUBLE) AS depth, CAST("Values".parent_id AS BINARY_DOUBLE) AS parent_id, CAST("Values"."Score" AS BINARY_DOUBLE) AS "Score" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS depth, 0 AS parent_id, -0.048233576118946075 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS depth, 0 AS parent_id, 0.03405338525772095 AS "Score" FROM DUAL) "Values"), 
"DT_Output_37" AS 
(SELECT "DT_node_lookup_37"."KEY" AS "KEY", "DT_node_lookup_37".node_id_2 AS node_id_2, "DT_node_data_37".node_id AS node_id, "DT_node_data_37".feature AS feature, "DT_node_data_37".threshold AS threshold, "DT_node_data_37".depth AS depth, "DT_node_data_37".parent_id AS parent_id, "DT_node_data_37"."Score" AS "Score" 
FROM "DT_node_lookup_37" LEFT OUTER JOIN "DT_node_data_37" ON "DT_node_lookup_37".node_id_2 = "DT_node_data_37".node_id), 
"XGB_Model_1_9" AS 
(SELECT "DT_Output_37"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_37"."Score" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_37"), 
"DT_node_lookup_38" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_3" < -0.9904775023460388) THEN 1 ELSE 2 END AS node_id_2 
FROM "FOURCLASS_10" "ADS"), 
"DT_node_data_38" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS BINARY_DOUBLE) AS feature, CAST("Values".threshold AS BINARY_DOUBLE) AS threshold, CAST("Values".depth AS BINARY_DOUBLE) AS depth, CAST("Values".parent_id AS BINARY_DOUBLE) AS parent_id, CAST("Values"."Score" AS BINARY_DOUBLE) AS "Score" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS depth, 0 AS parent_id, 0.04943091422319412 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS depth, 0 AS parent_id, -0.028796164318919182 AS "Score" FROM DUAL) "Values"), 
"DT_Output_38" AS 
(SELECT "DT_node_lookup_38"."KEY" AS "KEY", "DT_node_lookup_38".node_id_2 AS node_id_2, "DT_node_data_38".node_id AS node_id, "DT_node_data_38".feature AS feature, "DT_node_data_38".threshold AS threshold, "DT_node_data_38".depth AS depth, "DT_node_data_38".parent_id AS parent_id, "DT_node_data_38"."Score" AS "Score" 
FROM "DT_node_lookup_38" LEFT OUTER JOIN "DT_node_data_38" ON "DT_node_lookup_38".node_id_2 = "DT_node_data_38".node_id), 
"XGB_Model_2_9" AS 
(SELECT "DT_Output_38"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_38"."Score" AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_38"), 
"DT_node_lookup_39" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_7" < 0.362348735332489) THEN 1 ELSE 2 END AS node_id_2 
FROM "FOURCLASS_10" "ADS"), 
"DT_node_data_39" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS BINARY_DOUBLE) AS feature, CAST("Values".threshold AS BINARY_DOUBLE) AS threshold, CAST("Values".depth AS BINARY_DOUBLE) AS depth, CAST("Values".parent_id AS BINARY_DOUBLE) AS parent_id, CAST("Values"."Score" AS BINARY_DOUBLE) AS "Score" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS depth, 0 AS parent_id, 0.04011039063334465 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS depth, 0 AS parent_id, -0.043712954968214035 AS "Score" FROM DUAL) "Values"), 
"DT_Output_39" AS 
(SELECT "DT_node_lookup_39"."KEY" AS "KEY", "DT_node_lookup_39".node_id_2 AS node_id_2, "DT_node_data_39".node_id AS node_id, "DT_node_data_39".feature AS feature, "DT_node_data_39".threshold AS threshold, "DT_node_data_39".depth AS depth, "DT_node_data_39".parent_id AS parent_id, "DT_node_data_39"."Score" AS "Score" 
FROM "DT_node_lookup_39" LEFT OUTER JOIN "DT_node_data_39" ON "DT_node_lookup_39".node_id_2 = "DT_node_data_39".node_id), 
"XGB_Model_3_9" AS 
(SELECT "DT_Output_39"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_39"."Score" AS "Score_3" 
FROM "DT_Output_39")
 SELECT "XGB_B3"."KEY", "XGB_B3"."Score_0", "XGB_B3"."Score_1", "XGB_B3"."Score_2", "XGB_B3"."Score_3" 
FROM (SELECT "XGB_esu_3"."KEY" AS "KEY", "XGB_esu_3"."Score_0" AS "Score_0", "XGB_esu_3"."Score_1" AS "Score_1", "XGB_esu_3"."Score_2" AS "Score_2", "XGB_esu_3"."Score_3" AS "Score_3" 
FROM (SELECT "XGB_Model_2_7"."KEY" AS "KEY", "XGB_Model_2_7"."Score_0" AS "Score_0", "XGB_Model_2_7"."Score_1" AS "Score_1", "XGB_Model_2_7"."Score_2" AS "Score_2", "XGB_Model_2_7"."Score_3" AS "Score_3" 
FROM "XGB_Model_2_7" UNION ALL SELECT "XGB_Model_3_7"."KEY" AS "KEY", "XGB_Model_3_7"."Score_0" AS "Score_0", "XGB_Model_3_7"."Score_1" AS "Score_1", "XGB_Model_3_7"."Score_2" AS "Score_2", "XGB_Model_3_7"."Score_3" AS "Score_3" 
FROM "XGB_Model_3_7" UNION ALL SELECT "XGB_Model_0_8"."KEY" AS "KEY", "XGB_Model_0_8"."Score_0" AS "Score_0", "XGB_Model_0_8"."Score_1" AS "Score_1", "XGB_Model_0_8"."Score_2" AS "Score_2", "XGB_Model_0_8"."Score_3" AS "Score_3" 
FROM "XGB_Model_0_8" UNION ALL SELECT "XGB_Model_1_8"."KEY" AS "KEY", "XGB_Model_1_8"."Score_0" AS "Score_0", "XGB_Model_1_8"."Score_1" AS "Score_1", "XGB_Model_1_8"."Score_2" AS "Score_2", "XGB_Model_1_8"."Score_3" AS "Score_3" 
FROM "XGB_Model_1_8" UNION ALL SELECT "XGB_Model_2_8"."KEY" AS "KEY", "XGB_Model_2_8"."Score_0" AS "Score_0", "XGB_Model_2_8"."Score_1" AS "Score_1", "XGB_Model_2_8"."Score_2" AS "Score_2", "XGB_Model_2_8"."Score_3" AS "Score_3" 
FROM "XGB_Model_2_8" UNION ALL SELECT "XGB_Model_3_8"."KEY" AS "KEY", "XGB_Model_3_8"."Score_0" AS "Score_0", "XGB_Model_3_8"."Score_1" AS "Score_1", "XGB_Model_3_8"."Score_2" AS "Score_2", "XGB_Model_3_8"."Score_3" AS "Score_3" 
FROM "XGB_Model_3_8" UNION ALL SELECT "XGB_Model_0_9"."KEY" AS "KEY", "XGB_Model_0_9"."Score_0" AS "Score_0", "XGB_Model_0_9"."Score_1" AS "Score_1", "XGB_Model_0_9"."Score_2" AS "Score_2", "XGB_Model_0_9"."Score_3" AS "Score_3" 
FROM "XGB_Model_0_9" UNION ALL SELECT "XGB_Model_1_9"."KEY" AS "KEY", "XGB_Model_1_9"."Score_0" AS "Score_0", "XGB_Model_1_9"."Score_1" AS "Score_1", "XGB_Model_1_9"."Score_2" AS "Score_2", "XGB_Model_1_9"."Score_3" AS "Score_3" 
FROM "XGB_Model_1_9" UNION ALL SELECT "XGB_Model_2_9"."KEY" AS "KEY", "XGB_Model_2_9"."Score_0" AS "Score_0", "XGB_Model_2_9"."Score_1" AS "Score_1", "XGB_Model_2_9"."Score_2" AS "Score_2", "XGB_Model_2_9"."Score_3" AS "Score_3" 
FROM "XGB_Model_2_9" UNION ALL SELECT "XGB_Model_3_9"."KEY" AS "KEY", "XGB_Model_3_9"."Score_0" AS "Score_0", "XGB_Model_3_9"."Score_1" AS "Score_1", "XGB_Model_3_9"."Score_2" AS "Score_2", "XGB_Model_3_9"."Score_3" AS "Score_3" 
FROM "XGB_Model_3_9") "XGB_esu_3") "XGB_B3") "U"

-- Code For temporary table 180416233349_WI9PP3_XGB_B4 part 1/2. Create 


CREATE GLOBAL TEMPORARY TABLE "180416233349_WI9PP3_XGB_B4" (
	"KEY" NUMBER(19), 
	"Score_0" BINARY_DOUBLE, 
	"Score_1" BINARY_DOUBLE, 
	"Score_2" BINARY_DOUBLE, 
	"Score_3" BINARY_DOUBLE
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table 180416233349_WI9PP3_XGB_B4 part 2/2. Populate

INSERT INTO "180416233349_WI9PP3_XGB_B4" ("KEY", "Score_0", "Score_1", "Score_2", "Score_3") SELECT "U"."KEY", "U"."Score_0", "U"."Score_1", "U"."Score_2", "U"."Score_3" 
FROM (WITH "DT_node_lookup_40" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_3" < 0.5489295125007629) THEN 1 ELSE 2 END AS node_id_2 
FROM "FOURCLASS_10" "ADS"), 
"DT_node_data_40" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS BINARY_DOUBLE) AS feature, CAST("Values".threshold AS BINARY_DOUBLE) AS threshold, CAST("Values".depth AS BINARY_DOUBLE) AS depth, CAST("Values".parent_id AS BINARY_DOUBLE) AS parent_id, CAST("Values"."Score" AS BINARY_DOUBLE) AS "Score" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS depth, 0 AS parent_id, 0.03435317054390907 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS depth, 0 AS parent_id, -0.045086611062288284 AS "Score" FROM DUAL) "Values"), 
"DT_Output_40" AS 
(SELECT "DT_node_lookup_40"."KEY" AS "KEY", "DT_node_lookup_40".node_id_2 AS node_id_2, "DT_node_data_40".node_id AS node_id, "DT_node_data_40".feature AS feature, "DT_node_data_40".threshold AS threshold, "DT_node_data_40".depth AS depth, "DT_node_data_40".parent_id AS parent_id, "DT_node_data_40"."Score" AS "Score" 
FROM "DT_node_lookup_40" LEFT OUTER JOIN "DT_node_data_40" ON "DT_node_lookup_40".node_id_2 = "DT_node_data_40".node_id), 
"XGB_Model_0_10" AS 
(SELECT "DT_Output_40"."KEY" AS "KEY", "DT_Output_40"."Score" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_40"), 
"DT_node_lookup_41" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_3" < 1.1771701574325562) THEN 1 ELSE 2 END AS node_id_2 
FROM "FOURCLASS_10" "ADS"), 
"DT_node_data_41" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS BINARY_DOUBLE) AS feature, CAST("Values".threshold AS BINARY_DOUBLE) AS threshold, CAST("Values".depth AS BINARY_DOUBLE) AS depth, CAST("Values".parent_id AS BINARY_DOUBLE) AS parent_id, CAST("Values"."Score" AS BINARY_DOUBLE) AS "Score" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS depth, 0 AS parent_id, -0.04728106036782265 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS depth, 0 AS parent_id, 0.031466033309698105 AS "Score" FROM DUAL) "Values"), 
"DT_Output_41" AS 
(SELECT "DT_node_lookup_41"."KEY" AS "KEY", "DT_node_lookup_41".node_id_2 AS node_id_2, "DT_node_data_41".node_id AS node_id, "DT_node_data_41".feature AS feature, "DT_node_data_41".threshold AS threshold, "DT_node_data_41".depth AS depth, "DT_node_data_41".parent_id AS parent_id, "DT_node_data_41"."Score" AS "Score" 
FROM "DT_node_lookup_41" LEFT OUTER JOIN "DT_node_data_41" ON "DT_node_lookup_41".node_id_2 = "DT_node_data_41".node_id), 
"XGB_Model_1_10" AS 
(SELECT "DT_Output_41"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_41"."Score" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_41"), 
"DT_node_lookup_42" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" < 0.21300426125526428) THEN 1 ELSE 2 END AS node_id_2 
FROM "FOURCLASS_10" "ADS"), 
"DT_node_data_42" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS BINARY_DOUBLE) AS feature, CAST("Values".threshold AS BINARY_DOUBLE) AS threshold, CAST("Values".depth AS BINARY_DOUBLE) AS depth, CAST("Values".parent_id AS BINARY_DOUBLE) AS parent_id, CAST("Values"."Score" AS BINARY_DOUBLE) AS "Score" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS depth, 0 AS parent_id, 0.028842730447649956 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS depth, 0 AS parent_id, -0.047328412532806396 AS "Score" FROM DUAL) "Values"), 
"DT_Output_42" AS 
(SELECT "DT_node_lookup_42"."KEY" AS "KEY", "DT_node_lookup_42".node_id_2 AS node_id_2, "DT_node_data_42".node_id AS node_id, "DT_node_data_42".feature AS feature, "DT_node_data_42".threshold AS threshold, "DT_node_data_42".depth AS depth, "DT_node_data_42".parent_id AS parent_id, "DT_node_data_42"."Score" AS "Score" 
FROM "DT_node_lookup_42" LEFT OUTER JOIN "DT_node_data_42" ON "DT_node_lookup_42".node_id_2 = "DT_node_data_42".node_id), 
"XGB_Model_2_10" AS 
(SELECT "DT_Output_42"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_42"."Score" AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_42"), 
"DT_node_lookup_43" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_7" < 0.362348735332489) THEN 1 ELSE 2 END AS node_id_2 
FROM "FOURCLASS_10" "ADS"), 
"DT_node_data_43" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS BINARY_DOUBLE) AS feature, CAST("Values".threshold AS BINARY_DOUBLE) AS threshold, CAST("Values".depth AS BINARY_DOUBLE) AS depth, CAST("Values".parent_id AS BINARY_DOUBLE) AS parent_id, CAST("Values"."Score" AS BINARY_DOUBLE) AS "Score" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS depth, 0 AS parent_id, 0.037665992975234985 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS depth, 0 AS parent_id, -0.04266652092337608 AS "Score" FROM DUAL) "Values"), 
"DT_Output_43" AS 
(SELECT "DT_node_lookup_43"."KEY" AS "KEY", "DT_node_lookup_43".node_id_2 AS node_id_2, "DT_node_data_43".node_id AS node_id, "DT_node_data_43".feature AS feature, "DT_node_data_43".threshold AS threshold, "DT_node_data_43".depth AS depth, "DT_node_data_43".parent_id AS parent_id, "DT_node_data_43"."Score" AS "Score" 
FROM "DT_node_lookup_43" LEFT OUTER JOIN "DT_node_data_43" ON "DT_node_lookup_43".node_id_2 = "DT_node_data_43".node_id), 
"XGB_Model_3_10" AS 
(SELECT "DT_Output_43"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_43"."Score" AS "Score_3" 
FROM "DT_Output_43"), 
"DT_node_lookup_44" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_4" < -0.35484129190444946) THEN 1 ELSE 2 END AS node_id_2 
FROM "FOURCLASS_10" "ADS"), 
"DT_node_data_44" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS BINARY_DOUBLE) AS feature, CAST("Values".threshold AS BINARY_DOUBLE) AS threshold, CAST("Values".depth AS BINARY_DOUBLE) AS depth, CAST("Values".parent_id AS BINARY_DOUBLE) AS parent_id, CAST("Values"."Score" AS BINARY_DOUBLE) AS "Score" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS depth, 0 AS parent_id, -0.0428193062543869 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS depth, 0 AS parent_id, 0.03453283756971359 AS "Score" FROM DUAL) "Values"), 
"DT_Output_44" AS 
(SELECT "DT_node_lookup_44"."KEY" AS "KEY", "DT_node_lookup_44".node_id_2 AS node_id_2, "DT_node_data_44".node_id AS node_id, "DT_node_data_44".feature AS feature, "DT_node_data_44".threshold AS threshold, "DT_node_data_44".depth AS depth, "DT_node_data_44".parent_id AS parent_id, "DT_node_data_44"."Score" AS "Score" 
FROM "DT_node_lookup_44" LEFT OUTER JOIN "DT_node_data_44" ON "DT_node_lookup_44".node_id_2 = "DT_node_data_44".node_id), 
"XGB_Model_0_11" AS 
(SELECT "DT_Output_44"."KEY" AS "KEY", "DT_Output_44"."Score" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_44"), 
"DT_node_lookup_45" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_3" < 1.1771701574325562) THEN 1 ELSE 2 END AS node_id_2 
FROM "FOURCLASS_10" "ADS"), 
"DT_node_data_45" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS BINARY_DOUBLE) AS feature, CAST("Values".threshold AS BINARY_DOUBLE) AS threshold, CAST("Values".depth AS BINARY_DOUBLE) AS depth, CAST("Values".parent_id AS BINARY_DOUBLE) AS parent_id, CAST("Values"."Score" AS BINARY_DOUBLE) AS "Score" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS depth, 0 AS parent_id, -0.0462663434445858 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS depth, 0 AS parent_id, 0.028472160920500755 AS "Score" FROM DUAL) "Values"), 
"DT_Output_45" AS 
(SELECT "DT_node_lookup_45"."KEY" AS "KEY", "DT_node_lookup_45".node_id_2 AS node_id_2, "DT_node_data_45".node_id AS node_id, "DT_node_data_45".feature AS feature, "DT_node_data_45".threshold AS threshold, "DT_node_data_45".depth AS depth, "DT_node_data_45".parent_id AS parent_id, "DT_node_data_45"."Score" AS "Score" 
FROM "DT_node_lookup_45" LEFT OUTER JOIN "DT_node_data_45" ON "DT_node_lookup_45".node_id_2 = "DT_node_data_45".node_id), 
"XGB_Model_1_11" AS 
(SELECT "DT_Output_45"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_45"."Score" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_45"), 
"DT_node_lookup_46" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_3" < -0.9904775023460388) THEN 1 ELSE 2 END AS node_id_2 
FROM "FOURCLASS_10" "ADS"), 
"DT_node_data_46" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS BINARY_DOUBLE) AS feature, CAST("Values".threshold AS BINARY_DOUBLE) AS threshold, CAST("Values".depth AS BINARY_DOUBLE) AS depth, CAST("Values".parent_id AS BINARY_DOUBLE) AS parent_id, CAST("Values"."Score" AS BINARY_DOUBLE) AS "Score" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS depth, 0 AS parent_id, 0.04639824852347374 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS depth, 0 AS parent_id, -0.027551433071494102 AS "Score" FROM DUAL) "Values"), 
"DT_Output_46" AS 
(SELECT "DT_node_lookup_46"."KEY" AS "KEY", "DT_node_lookup_46".node_id_2 AS node_id_2, "DT_node_data_46".node_id AS node_id, "DT_node_data_46".feature AS feature, "DT_node_data_46".threshold AS threshold, "DT_node_data_46".depth AS depth, "DT_node_data_46".parent_id AS parent_id, "DT_node_data_46"."Score" AS "Score" 
FROM "DT_node_lookup_46" LEFT OUTER JOIN "DT_node_data_46" ON "DT_node_lookup_46".node_id_2 = "DT_node_data_46".node_id), 
"XGB_Model_2_11" AS 
(SELECT "DT_Output_46"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_46"."Score" AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_46"), 
"DT_node_lookup_47" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_1" < 0.2519511282444) THEN 1 ELSE 2 END AS node_id_2 
FROM "FOURCLASS_10" "ADS"), 
"DT_node_data_47" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS BINARY_DOUBLE) AS feature, CAST("Values".threshold AS BINARY_DOUBLE) AS threshold, CAST("Values".depth AS BINARY_DOUBLE) AS depth, CAST("Values".parent_id AS BINARY_DOUBLE) AS parent_id, CAST("Values"."Score" AS BINARY_DOUBLE) AS "Score" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS depth, 0 AS parent_id, -0.050295837223529816 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS depth, 0 AS parent_id, 0.032815709710121155 AS "Score" FROM DUAL) "Values"), 
"DT_Output_47" AS 
(SELECT "DT_node_lookup_47"."KEY" AS "KEY", "DT_node_lookup_47".node_id_2 AS node_id_2, "DT_node_data_47".node_id AS node_id, "DT_node_data_47".feature AS feature, "DT_node_data_47".threshold AS threshold, "DT_node_data_47".depth AS depth, "DT_node_data_47".parent_id AS parent_id, "DT_node_data_47"."Score" AS "Score" 
FROM "DT_node_lookup_47" LEFT OUTER JOIN "DT_node_data_47" ON "DT_node_lookup_47".node_id_2 = "DT_node_data_47".node_id), 
"XGB_Model_3_11" AS 
(SELECT "DT_Output_47"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_47"."Score" AS "Score_3" 
FROM "DT_Output_47"), 
"DT_node_lookup_48" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_3" < 0.5489295125007629) THEN 1 ELSE 2 END AS node_id_2 
FROM "FOURCLASS_10" "ADS"), 
"DT_node_data_48" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS BINARY_DOUBLE) AS feature, CAST("Values".threshold AS BINARY_DOUBLE) AS threshold, CAST("Values".depth AS BINARY_DOUBLE) AS depth, CAST("Values".parent_id AS BINARY_DOUBLE) AS parent_id, CAST("Values"."Score" AS BINARY_DOUBLE) AS "Score" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS depth, 0 AS parent_id, 0.03235917538404465 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS depth, 0 AS parent_id, -0.04387418180704117 AS "Score" FROM DUAL) "Values"), 
"DT_Output_48" AS 
(SELECT "DT_node_lookup_48"."KEY" AS "KEY", "DT_node_lookup_48".node_id_2 AS node_id_2, "DT_node_data_48".node_id AS node_id, "DT_node_data_48".feature AS feature, "DT_node_data_48".threshold AS threshold, "DT_node_data_48".depth AS depth, "DT_node_data_48".parent_id AS parent_id, "DT_node_data_48"."Score" AS "Score" 
FROM "DT_node_lookup_48" LEFT OUTER JOIN "DT_node_data_48" ON "DT_node_lookup_48".node_id_2 = "DT_node_data_48".node_id), 
"XGB_Model_0_12" AS 
(SELECT "DT_Output_48"."KEY" AS "KEY", "DT_Output_48"."Score" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_48"), 
"DT_node_lookup_49" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_3" < 1.1771701574325562) THEN 1 ELSE 2 END AS node_id_2 
FROM "FOURCLASS_10" "ADS"), 
"DT_node_data_49" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS BINARY_DOUBLE) AS feature, CAST("Values".threshold AS BINARY_DOUBLE) AS threshold, CAST("Values".depth AS BINARY_DOUBLE) AS depth, CAST("Values".parent_id AS BINARY_DOUBLE) AS parent_id, CAST("Values"."Score" AS BINARY_DOUBLE) AS "Score" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS depth, 0 AS parent_id, -0.045438311994075775 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS depth, 0 AS parent_id, 0.027018070220947266 AS "Score" FROM DUAL) "Values"), 
"DT_Output_49" AS 
(SELECT "DT_node_lookup_49"."KEY" AS "KEY", "DT_node_lookup_49".node_id_2 AS node_id_2, "DT_node_data_49".node_id AS node_id, "DT_node_data_49".feature AS feature, "DT_node_data_49".threshold AS threshold, "DT_node_data_49".depth AS depth, "DT_node_data_49".parent_id AS parent_id, "DT_node_data_49"."Score" AS "Score" 
FROM "DT_node_lookup_49" LEFT OUTER JOIN "DT_node_data_49" ON "DT_node_lookup_49".node_id_2 = "DT_node_data_49".node_id), 
"XGB_Model_1_12" AS 
(SELECT "DT_Output_49"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_49"."Score" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_49")
 SELECT "XGB_B4"."KEY", "XGB_B4"."Score_0", "XGB_B4"."Score_1", "XGB_B4"."Score_2", "XGB_B4"."Score_3" 
FROM (SELECT "XGB_esu_4"."KEY" AS "KEY", "XGB_esu_4"."Score_0" AS "Score_0", "XGB_esu_4"."Score_1" AS "Score_1", "XGB_esu_4"."Score_2" AS "Score_2", "XGB_esu_4"."Score_3" AS "Score_3" 
FROM (SELECT "XGB_Model_0_10"."KEY" AS "KEY", "XGB_Model_0_10"."Score_0" AS "Score_0", "XGB_Model_0_10"."Score_1" AS "Score_1", "XGB_Model_0_10"."Score_2" AS "Score_2", "XGB_Model_0_10"."Score_3" AS "Score_3" 
FROM "XGB_Model_0_10" UNION ALL SELECT "XGB_Model_1_10"."KEY" AS "KEY", "XGB_Model_1_10"."Score_0" AS "Score_0", "XGB_Model_1_10"."Score_1" AS "Score_1", "XGB_Model_1_10"."Score_2" AS "Score_2", "XGB_Model_1_10"."Score_3" AS "Score_3" 
FROM "XGB_Model_1_10" UNION ALL SELECT "XGB_Model_2_10"."KEY" AS "KEY", "XGB_Model_2_10"."Score_0" AS "Score_0", "XGB_Model_2_10"."Score_1" AS "Score_1", "XGB_Model_2_10"."Score_2" AS "Score_2", "XGB_Model_2_10"."Score_3" AS "Score_3" 
FROM "XGB_Model_2_10" UNION ALL SELECT "XGB_Model_3_10"."KEY" AS "KEY", "XGB_Model_3_10"."Score_0" AS "Score_0", "XGB_Model_3_10"."Score_1" AS "Score_1", "XGB_Model_3_10"."Score_2" AS "Score_2", "XGB_Model_3_10"."Score_3" AS "Score_3" 
FROM "XGB_Model_3_10" UNION ALL SELECT "XGB_Model_0_11"."KEY" AS "KEY", "XGB_Model_0_11"."Score_0" AS "Score_0", "XGB_Model_0_11"."Score_1" AS "Score_1", "XGB_Model_0_11"."Score_2" AS "Score_2", "XGB_Model_0_11"."Score_3" AS "Score_3" 
FROM "XGB_Model_0_11" UNION ALL SELECT "XGB_Model_1_11"."KEY" AS "KEY", "XGB_Model_1_11"."Score_0" AS "Score_0", "XGB_Model_1_11"."Score_1" AS "Score_1", "XGB_Model_1_11"."Score_2" AS "Score_2", "XGB_Model_1_11"."Score_3" AS "Score_3" 
FROM "XGB_Model_1_11" UNION ALL SELECT "XGB_Model_2_11"."KEY" AS "KEY", "XGB_Model_2_11"."Score_0" AS "Score_0", "XGB_Model_2_11"."Score_1" AS "Score_1", "XGB_Model_2_11"."Score_2" AS "Score_2", "XGB_Model_2_11"."Score_3" AS "Score_3" 
FROM "XGB_Model_2_11" UNION ALL SELECT "XGB_Model_3_11"."KEY" AS "KEY", "XGB_Model_3_11"."Score_0" AS "Score_0", "XGB_Model_3_11"."Score_1" AS "Score_1", "XGB_Model_3_11"."Score_2" AS "Score_2", "XGB_Model_3_11"."Score_3" AS "Score_3" 
FROM "XGB_Model_3_11" UNION ALL SELECT "XGB_Model_0_12"."KEY" AS "KEY", "XGB_Model_0_12"."Score_0" AS "Score_0", "XGB_Model_0_12"."Score_1" AS "Score_1", "XGB_Model_0_12"."Score_2" AS "Score_2", "XGB_Model_0_12"."Score_3" AS "Score_3" 
FROM "XGB_Model_0_12" UNION ALL SELECT "XGB_Model_1_12"."KEY" AS "KEY", "XGB_Model_1_12"."Score_0" AS "Score_0", "XGB_Model_1_12"."Score_1" AS "Score_1", "XGB_Model_1_12"."Score_2" AS "Score_2", "XGB_Model_1_12"."Score_3" AS "Score_3" 
FROM "XGB_Model_1_12") "XGB_esu_4") "XGB_B4") "U"

-- Code For temporary table 180416233349_HZD68X_XGB_B5 part 1/2. Create 


CREATE GLOBAL TEMPORARY TABLE "180416233349_HZD68X_XGB_B5" (
	"KEY" NUMBER(19), 
	"Score_0" BINARY_DOUBLE, 
	"Score_1" BINARY_DOUBLE, 
	"Score_2" BINARY_DOUBLE, 
	"Score_3" BINARY_DOUBLE
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table 180416233349_HZD68X_XGB_B5 part 2/2. Populate

INSERT INTO "180416233349_HZD68X_XGB_B5" ("KEY", "Score_0", "Score_1", "Score_2", "Score_3") SELECT "U"."KEY", "U"."Score_0", "U"."Score_1", "U"."Score_2", "U"."Score_3" 
FROM (WITH "DT_node_lookup_50" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_3" < -0.9904775023460388) THEN 1 ELSE 2 END AS node_id_2 
FROM "FOURCLASS_10" "ADS"), 
"DT_node_data_50" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS BINARY_DOUBLE) AS feature, CAST("Values".threshold AS BINARY_DOUBLE) AS threshold, CAST("Values".depth AS BINARY_DOUBLE) AS depth, CAST("Values".parent_id AS BINARY_DOUBLE) AS parent_id, CAST("Values"."Score" AS BINARY_DOUBLE) AS "Score" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS depth, 0 AS parent_id, 0.04280025511980057 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS depth, 0 AS parent_id, -0.026406705379486084 AS "Score" FROM DUAL) "Values"), 
"DT_Output_50" AS 
(SELECT "DT_node_lookup_50"."KEY" AS "KEY", "DT_node_lookup_50".node_id_2 AS node_id_2, "DT_node_data_50".node_id AS node_id, "DT_node_data_50".feature AS feature, "DT_node_data_50".threshold AS threshold, "DT_node_data_50".depth AS depth, "DT_node_data_50".parent_id AS parent_id, "DT_node_data_50"."Score" AS "Score" 
FROM "DT_node_lookup_50" LEFT OUTER JOIN "DT_node_data_50" ON "DT_node_lookup_50".node_id_2 = "DT_node_data_50".node_id), 
"XGB_Model_2_12" AS 
(SELECT "DT_Output_50"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_50"."Score" AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_50"), 
"DT_node_lookup_51" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_7" < 0.362348735332489) THEN 1 ELSE 2 END AS node_id_2 
FROM "FOURCLASS_10" "ADS"), 
"DT_node_data_51" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS BINARY_DOUBLE) AS feature, CAST("Values".threshold AS BINARY_DOUBLE) AS threshold, CAST("Values".depth AS BINARY_DOUBLE) AS depth, CAST("Values".parent_id AS BINARY_DOUBLE) AS parent_id, CAST("Values"."Score" AS BINARY_DOUBLE) AS "Score" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS depth, 0 AS parent_id, 0.035598620772361755 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS depth, 0 AS parent_id, -0.04177503660321236 AS "Score" FROM DUAL) "Values"), 
"DT_Output_51" AS 
(SELECT "DT_node_lookup_51"."KEY" AS "KEY", "DT_node_lookup_51".node_id_2 AS node_id_2, "DT_node_data_51".node_id AS node_id, "DT_node_data_51".feature AS feature, "DT_node_data_51".threshold AS threshold, "DT_node_data_51".depth AS depth, "DT_node_data_51".parent_id AS parent_id, "DT_node_data_51"."Score" AS "Score" 
FROM "DT_node_lookup_51" LEFT OUTER JOIN "DT_node_data_51" ON "DT_node_lookup_51".node_id_2 = "DT_node_data_51".node_id), 
"XGB_Model_3_12" AS 
(SELECT "DT_Output_51"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_51"."Score" AS "Score_3" 
FROM "DT_Output_51"), 
"DT_node_lookup_52" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_4" < -0.35484129190444946) THEN 1 ELSE 2 END AS node_id_2 
FROM "FOURCLASS_10" "ADS"), 
"DT_node_data_52" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS BINARY_DOUBLE) AS feature, CAST("Values".threshold AS BINARY_DOUBLE) AS threshold, CAST("Values".depth AS BINARY_DOUBLE) AS depth, CAST("Values".parent_id AS BINARY_DOUBLE) AS parent_id, CAST("Values"."Score" AS BINARY_DOUBLE) AS "Score" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS depth, 0 AS parent_id, -0.04164227843284607 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS depth, 0 AS parent_id, 0.032521262764930725 AS "Score" FROM DUAL) "Values"), 
"DT_Output_52" AS 
(SELECT "DT_node_lookup_52"."KEY" AS "KEY", "DT_node_lookup_52".node_id_2 AS node_id_2, "DT_node_data_52".node_id AS node_id, "DT_node_data_52".feature AS feature, "DT_node_data_52".threshold AS threshold, "DT_node_data_52".depth AS depth, "DT_node_data_52".parent_id AS parent_id, "DT_node_data_52"."Score" AS "Score" 
FROM "DT_node_lookup_52" LEFT OUTER JOIN "DT_node_data_52" ON "DT_node_lookup_52".node_id_2 = "DT_node_data_52".node_id), 
"XGB_Model_0_13" AS 
(SELECT "DT_Output_52"."KEY" AS "KEY", "DT_Output_52"."Score" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_52"), 
"DT_node_lookup_53" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_3" < 1.1771701574325562) THEN 1 ELSE 2 END AS node_id_2 
FROM "FOURCLASS_10" "ADS"), 
"DT_node_data_53" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS BINARY_DOUBLE) AS feature, CAST("Values".threshold AS BINARY_DOUBLE) AS threshold, CAST("Values".depth AS BINARY_DOUBLE) AS depth, CAST("Values".parent_id AS BINARY_DOUBLE) AS parent_id, CAST("Values"."Score" AS BINARY_DOUBLE) AS "Score" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS depth, 0 AS parent_id, -0.04450121521949768 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS depth, 0 AS parent_id, 0.02436644397675991 AS "Score" FROM DUAL) "Values"), 
"DT_Output_53" AS 
(SELECT "DT_node_lookup_53"."KEY" AS "KEY", "DT_node_lookup_53".node_id_2 AS node_id_2, "DT_node_data_53".node_id AS node_id, "DT_node_data_53".feature AS feature, "DT_node_data_53".threshold AS threshold, "DT_node_data_53".depth AS depth, "DT_node_data_53".parent_id AS parent_id, "DT_node_data_53"."Score" AS "Score" 
FROM "DT_node_lookup_53" LEFT OUTER JOIN "DT_node_data_53" ON "DT_node_lookup_53".node_id_2 = "DT_node_data_53".node_id), 
"XGB_Model_1_13" AS 
(SELECT "DT_Output_53"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_53"."Score" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_53"), 
"DT_node_lookup_54" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_3" < -0.9904775023460388) THEN 1 ELSE 2 END AS node_id_2 
FROM "FOURCLASS_10" "ADS"), 
"DT_node_data_54" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS BINARY_DOUBLE) AS feature, CAST("Values".threshold AS BINARY_DOUBLE) AS threshold, CAST("Values".depth AS BINARY_DOUBLE) AS depth, CAST("Values".parent_id AS BINARY_DOUBLE) AS parent_id, CAST("Values"."Score" AS BINARY_DOUBLE) AS "Score" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS depth, 0 AS parent_id, 0.04137987643480301 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS depth, 0 AS parent_id, -0.025546375662088394 AS "Score" FROM DUAL) "Values"), 
"DT_Output_54" AS 
(SELECT "DT_node_lookup_54"."KEY" AS "KEY", "DT_node_lookup_54".node_id_2 AS node_id_2, "DT_node_data_54".node_id AS node_id, "DT_node_data_54".feature AS feature, "DT_node_data_54".threshold AS threshold, "DT_node_data_54".depth AS depth, "DT_node_data_54".parent_id AS parent_id, "DT_node_data_54"."Score" AS "Score" 
FROM "DT_node_lookup_54" LEFT OUTER JOIN "DT_node_data_54" ON "DT_node_lookup_54".node_id_2 = "DT_node_data_54".node_id), 
"XGB_Model_2_13" AS 
(SELECT "DT_Output_54"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_54"."Score" AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_54"), 
"DT_node_lookup_55" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_1" < 0.8621737957000732) THEN 1 ELSE 2 END AS node_id_2 
FROM "FOURCLASS_10" "ADS"), 
"DT_node_data_55" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS BINARY_DOUBLE) AS feature, CAST("Values".threshold AS BINARY_DOUBLE) AS threshold, CAST("Values".depth AS BINARY_DOUBLE) AS depth, CAST("Values".parent_id AS BINARY_DOUBLE) AS parent_id, CAST("Values"."Score" AS BINARY_DOUBLE) AS "Score" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS depth, 0 AS parent_id, -0.035051148384809494 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS depth, 0 AS parent_id, 0.03875049576163292 AS "Score" FROM DUAL) "Values"), 
"DT_Output_55" AS 
(SELECT "DT_node_lookup_55"."KEY" AS "KEY", "DT_node_lookup_55".node_id_2 AS node_id_2, "DT_node_data_55".node_id AS node_id, "DT_node_data_55".feature AS feature, "DT_node_data_55".threshold AS threshold, "DT_node_data_55".depth AS depth, "DT_node_data_55".parent_id AS parent_id, "DT_node_data_55"."Score" AS "Score" 
FROM "DT_node_lookup_55" LEFT OUTER JOIN "DT_node_data_55" ON "DT_node_lookup_55".node_id_2 = "DT_node_data_55".node_id), 
"XGB_Model_3_13" AS 
(SELECT "DT_Output_55"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_55"."Score" AS "Score_3" 
FROM "DT_Output_55"), 
"DT_node_lookup_56" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_3" < 0.5489295125007629) THEN 1 ELSE 2 END AS node_id_2 
FROM "FOURCLASS_10" "ADS"), 
"DT_node_data_56" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS BINARY_DOUBLE) AS feature, CAST("Values".threshold AS BINARY_DOUBLE) AS threshold, CAST("Values".depth AS BINARY_DOUBLE) AS depth, CAST("Values".parent_id AS BINARY_DOUBLE) AS parent_id, CAST("Values"."Score" AS BINARY_DOUBLE) AS "Score" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS depth, 0 AS parent_id, 0.03074887953698635 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS depth, 0 AS parent_id, -0.04278656840324402 AS "Score" FROM DUAL) "Values"), 
"DT_Output_56" AS 
(SELECT "DT_node_lookup_56"."KEY" AS "KEY", "DT_node_lookup_56".node_id_2 AS node_id_2, "DT_node_data_56".node_id AS node_id, "DT_node_data_56".feature AS feature, "DT_node_data_56".threshold AS threshold, "DT_node_data_56".depth AS depth, "DT_node_data_56".parent_id AS parent_id, "DT_node_data_56"."Score" AS "Score" 
FROM "DT_node_lookup_56" LEFT OUTER JOIN "DT_node_data_56" ON "DT_node_lookup_56".node_id_2 = "DT_node_data_56".node_id), 
"XGB_Model_0_14" AS 
(SELECT "DT_Output_56"."KEY" AS "KEY", "DT_Output_56"."Score" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_56"), 
"DT_node_lookup_57" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_3" < 1.5132884979248047) THEN 1 ELSE 2 END AS node_id_2 
FROM "FOURCLASS_10" "ADS"), 
"DT_node_data_57" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS BINARY_DOUBLE) AS feature, CAST("Values".threshold AS BINARY_DOUBLE) AS threshold, CAST("Values".depth AS BINARY_DOUBLE) AS depth, CAST("Values".parent_id AS BINARY_DOUBLE) AS parent_id, CAST("Values"."Score" AS BINARY_DOUBLE) AS "Score" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS depth, 0 AS parent_id, -0.03527960926294327 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS depth, 0 AS parent_id, 0.026150623336434364 AS "Score" FROM DUAL) "Values"), 
"DT_Output_57" AS 
(SELECT "DT_node_lookup_57"."KEY" AS "KEY", "DT_node_lookup_57".node_id_2 AS node_id_2, "DT_node_data_57".node_id AS node_id, "DT_node_data_57".feature AS feature, "DT_node_data_57".threshold AS threshold, "DT_node_data_57".depth AS depth, "DT_node_data_57".parent_id AS parent_id, "DT_node_data_57"."Score" AS "Score" 
FROM "DT_node_lookup_57" LEFT OUTER JOIN "DT_node_data_57" ON "DT_node_lookup_57".node_id_2 = "DT_node_data_57".node_id), 
"XGB_Model_1_14" AS 
(SELECT "DT_Output_57"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_57"."Score" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_57"), 
"DT_node_lookup_58" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_3" < -0.9904775023460388) THEN 1 ELSE 2 END AS node_id_2 
FROM "FOURCLASS_10" "ADS"), 
"DT_node_data_58" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS BINARY_DOUBLE) AS feature, CAST("Values".threshold AS BINARY_DOUBLE) AS threshold, CAST("Values".depth AS BINARY_DOUBLE) AS depth, CAST("Values".parent_id AS BINARY_DOUBLE) AS parent_id, CAST("Values"."Score" AS BINARY_DOUBLE) AS "Score" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS depth, 0 AS parent_id, 0.03829155117273331 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS depth, 0 AS parent_id, -0.02446977235376835 AS "Score" FROM DUAL) "Values"), 
"DT_Output_58" AS 
(SELECT "DT_node_lookup_58"."KEY" AS "KEY", "DT_node_lookup_58".node_id_2 AS node_id_2, "DT_node_data_58".node_id AS node_id, "DT_node_data_58".feature AS feature, "DT_node_data_58".threshold AS threshold, "DT_node_data_58".depth AS depth, "DT_node_data_58".parent_id AS parent_id, "DT_node_data_58"."Score" AS "Score" 
FROM "DT_node_lookup_58" LEFT OUTER JOIN "DT_node_data_58" ON "DT_node_lookup_58".node_id_2 = "DT_node_data_58".node_id), 
"XGB_Model_2_14" AS 
(SELECT "DT_Output_58"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_58"."Score" AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_58"), 
"DT_node_lookup_59" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_7" < 0.362348735332489) THEN 1 ELSE 2 END AS node_id_2 
FROM "FOURCLASS_10" "ADS"), 
"DT_node_data_59" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS BINARY_DOUBLE) AS feature, CAST("Values".threshold AS BINARY_DOUBLE) AS threshold, CAST("Values".depth AS BINARY_DOUBLE) AS depth, CAST("Values".parent_id AS BINARY_DOUBLE) AS parent_id, CAST("Values"."Score" AS BINARY_DOUBLE) AS "Score" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS depth, 0 AS parent_id, 0.033693715929985046 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS depth, 0 AS parent_id, -0.0408625602722168 AS "Score" FROM DUAL) "Values"), 
"DT_Output_59" AS 
(SELECT "DT_node_lookup_59"."KEY" AS "KEY", "DT_node_lookup_59".node_id_2 AS node_id_2, "DT_node_data_59".node_id AS node_id, "DT_node_data_59".feature AS feature, "DT_node_data_59".threshold AS threshold, "DT_node_data_59".depth AS depth, "DT_node_data_59".parent_id AS parent_id, "DT_node_data_59"."Score" AS "Score" 
FROM "DT_node_lookup_59" LEFT OUTER JOIN "DT_node_data_59" ON "DT_node_lookup_59".node_id_2 = "DT_node_data_59".node_id), 
"XGB_Model_3_14" AS 
(SELECT "DT_Output_59"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_59"."Score" AS "Score_3" 
FROM "DT_Output_59")
 SELECT "XGB_B5"."KEY", "XGB_B5"."Score_0", "XGB_B5"."Score_1", "XGB_B5"."Score_2", "XGB_B5"."Score_3" 
FROM (SELECT "XGB_esu_5"."KEY" AS "KEY", "XGB_esu_5"."Score_0" AS "Score_0", "XGB_esu_5"."Score_1" AS "Score_1", "XGB_esu_5"."Score_2" AS "Score_2", "XGB_esu_5"."Score_3" AS "Score_3" 
FROM (SELECT "XGB_Model_2_12"."KEY" AS "KEY", "XGB_Model_2_12"."Score_0" AS "Score_0", "XGB_Model_2_12"."Score_1" AS "Score_1", "XGB_Model_2_12"."Score_2" AS "Score_2", "XGB_Model_2_12"."Score_3" AS "Score_3" 
FROM "XGB_Model_2_12" UNION ALL SELECT "XGB_Model_3_12"."KEY" AS "KEY", "XGB_Model_3_12"."Score_0" AS "Score_0", "XGB_Model_3_12"."Score_1" AS "Score_1", "XGB_Model_3_12"."Score_2" AS "Score_2", "XGB_Model_3_12"."Score_3" AS "Score_3" 
FROM "XGB_Model_3_12" UNION ALL SELECT "XGB_Model_0_13"."KEY" AS "KEY", "XGB_Model_0_13"."Score_0" AS "Score_0", "XGB_Model_0_13"."Score_1" AS "Score_1", "XGB_Model_0_13"."Score_2" AS "Score_2", "XGB_Model_0_13"."Score_3" AS "Score_3" 
FROM "XGB_Model_0_13" UNION ALL SELECT "XGB_Model_1_13"."KEY" AS "KEY", "XGB_Model_1_13"."Score_0" AS "Score_0", "XGB_Model_1_13"."Score_1" AS "Score_1", "XGB_Model_1_13"."Score_2" AS "Score_2", "XGB_Model_1_13"."Score_3" AS "Score_3" 
FROM "XGB_Model_1_13" UNION ALL SELECT "XGB_Model_2_13"."KEY" AS "KEY", "XGB_Model_2_13"."Score_0" AS "Score_0", "XGB_Model_2_13"."Score_1" AS "Score_1", "XGB_Model_2_13"."Score_2" AS "Score_2", "XGB_Model_2_13"."Score_3" AS "Score_3" 
FROM "XGB_Model_2_13" UNION ALL SELECT "XGB_Model_3_13"."KEY" AS "KEY", "XGB_Model_3_13"."Score_0" AS "Score_0", "XGB_Model_3_13"."Score_1" AS "Score_1", "XGB_Model_3_13"."Score_2" AS "Score_2", "XGB_Model_3_13"."Score_3" AS "Score_3" 
FROM "XGB_Model_3_13" UNION ALL SELECT "XGB_Model_0_14"."KEY" AS "KEY", "XGB_Model_0_14"."Score_0" AS "Score_0", "XGB_Model_0_14"."Score_1" AS "Score_1", "XGB_Model_0_14"."Score_2" AS "Score_2", "XGB_Model_0_14"."Score_3" AS "Score_3" 
FROM "XGB_Model_0_14" UNION ALL SELECT "XGB_Model_1_14"."KEY" AS "KEY", "XGB_Model_1_14"."Score_0" AS "Score_0", "XGB_Model_1_14"."Score_1" AS "Score_1", "XGB_Model_1_14"."Score_2" AS "Score_2", "XGB_Model_1_14"."Score_3" AS "Score_3" 
FROM "XGB_Model_1_14" UNION ALL SELECT "XGB_Model_2_14"."KEY" AS "KEY", "XGB_Model_2_14"."Score_0" AS "Score_0", "XGB_Model_2_14"."Score_1" AS "Score_1", "XGB_Model_2_14"."Score_2" AS "Score_2", "XGB_Model_2_14"."Score_3" AS "Score_3" 
FROM "XGB_Model_2_14" UNION ALL SELECT "XGB_Model_3_14"."KEY" AS "KEY", "XGB_Model_3_14"."Score_0" AS "Score_0", "XGB_Model_3_14"."Score_1" AS "Score_1", "XGB_Model_3_14"."Score_2" AS "Score_2", "XGB_Model_3_14"."Score_3" AS "Score_3" 
FROM "XGB_Model_3_14") "XGB_esu_5") "XGB_B5") "U"

-- Code For temporary table 180416233349_OFK24M_XGB_B6 part 1/2. Create 


CREATE GLOBAL TEMPORARY TABLE "180416233349_OFK24M_XGB_B6" (
	"KEY" NUMBER(19), 
	"Score_0" BINARY_DOUBLE, 
	"Score_1" BINARY_DOUBLE, 
	"Score_2" BINARY_DOUBLE, 
	"Score_3" BINARY_DOUBLE
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table 180416233349_OFK24M_XGB_B6 part 2/2. Populate

INSERT INTO "180416233349_OFK24M_XGB_B6" ("KEY", "Score_0", "Score_1", "Score_2", "Score_3") SELECT "U"."KEY", "U"."Score_0", "U"."Score_1", "U"."Score_2", "U"."Score_3" 
FROM (WITH "DT_node_lookup_60" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_4" < -0.35484129190444946) THEN 1 ELSE 2 END AS node_id_2 
FROM "FOURCLASS_10" "ADS"), 
"DT_node_data_60" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS BINARY_DOUBLE) AS feature, CAST("Values".threshold AS BINARY_DOUBLE) AS threshold, CAST("Values".depth AS BINARY_DOUBLE) AS depth, CAST("Values".parent_id AS BINARY_DOUBLE) AS parent_id, CAST("Values"."Score" AS BINARY_DOUBLE) AS "Score" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS depth, 0 AS parent_id, -0.040506456047296524 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS depth, 0 AS parent_id, 0.030637675896286964 AS "Score" FROM DUAL) "Values"), 
"DT_Output_60" AS 
(SELECT "DT_node_lookup_60"."KEY" AS "KEY", "DT_node_lookup_60".node_id_2 AS node_id_2, "DT_node_data_60".node_id AS node_id, "DT_node_data_60".feature AS feature, "DT_node_data_60".threshold AS threshold, "DT_node_data_60".depth AS depth, "DT_node_data_60".parent_id AS parent_id, "DT_node_data_60"."Score" AS "Score" 
FROM "DT_node_lookup_60" LEFT OUTER JOIN "DT_node_data_60" ON "DT_node_lookup_60".node_id_2 = "DT_node_data_60".node_id), 
"XGB_Model_0_15" AS 
(SELECT "DT_Output_60"."KEY" AS "KEY", "DT_Output_60"."Score" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_60"), 
"DT_node_lookup_61" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_3" < 1.5132884979248047) THEN 1 ELSE 2 END AS node_id_2 
FROM "FOURCLASS_10" "ADS"), 
"DT_node_data_61" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS BINARY_DOUBLE) AS feature, CAST("Values".threshold AS BINARY_DOUBLE) AS threshold, CAST("Values".depth AS BINARY_DOUBLE) AS depth, CAST("Values".parent_id AS BINARY_DOUBLE) AS parent_id, CAST("Values"."Score" AS BINARY_DOUBLE) AS "Score" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS depth, 0 AS parent_id, -0.03424902632832527 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS depth, 0 AS parent_id, 0.02360677532851696 AS "Score" FROM DUAL) "Values"), 
"DT_Output_61" AS 
(SELECT "DT_node_lookup_61"."KEY" AS "KEY", "DT_node_lookup_61".node_id_2 AS node_id_2, "DT_node_data_61".node_id AS node_id, "DT_node_data_61".feature AS feature, "DT_node_data_61".threshold AS threshold, "DT_node_data_61".depth AS depth, "DT_node_data_61".parent_id AS parent_id, "DT_node_data_61"."Score" AS "Score" 
FROM "DT_node_lookup_61" LEFT OUTER JOIN "DT_node_data_61" ON "DT_node_lookup_61".node_id_2 = "DT_node_data_61".node_id), 
"XGB_Model_1_15" AS 
(SELECT "DT_Output_61"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_61"."Score" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_61"), 
"DT_node_lookup_62" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_5" < 0.17102694511413574) THEN 1 ELSE 2 END AS node_id_2 
FROM "FOURCLASS_10" "ADS"), 
"DT_node_data_62" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS BINARY_DOUBLE) AS feature, CAST("Values".threshold AS BINARY_DOUBLE) AS threshold, CAST("Values".depth AS BINARY_DOUBLE) AS depth, CAST("Values".parent_id AS BINARY_DOUBLE) AS parent_id, CAST("Values"."Score" AS BINARY_DOUBLE) AS "Score" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS depth, 0 AS parent_id, -0.026660382747650146 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS depth, 0 AS parent_id, 0.03497074544429779 AS "Score" FROM DUAL) "Values"), 
"DT_Output_62" AS 
(SELECT "DT_node_lookup_62"."KEY" AS "KEY", "DT_node_lookup_62".node_id_2 AS node_id_2, "DT_node_data_62".node_id AS node_id, "DT_node_data_62".feature AS feature, "DT_node_data_62".threshold AS threshold, "DT_node_data_62".depth AS depth, "DT_node_data_62".parent_id AS parent_id, "DT_node_data_62"."Score" AS "Score" 
FROM "DT_node_lookup_62" LEFT OUTER JOIN "DT_node_data_62" ON "DT_node_lookup_62".node_id_2 = "DT_node_data_62".node_id), 
"XGB_Model_2_15" AS 
(SELECT "DT_Output_62"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_62"."Score" AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_62"), 
"DT_node_lookup_63" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_7" < 0.362348735332489) THEN 1 ELSE 2 END AS node_id_2 
FROM "FOURCLASS_10" "ADS"), 
"DT_node_data_63" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS BINARY_DOUBLE) AS feature, CAST("Values".threshold AS BINARY_DOUBLE) AS threshold, CAST("Values".depth AS BINARY_DOUBLE) AS depth, CAST("Values".parent_id AS BINARY_DOUBLE) AS parent_id, CAST("Values"."Score" AS BINARY_DOUBLE) AS "Score" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS depth, 0 AS parent_id, 0.03208934888243675 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS BINARY_DOUBLE) AS threshold, 1 AS depth, 0 AS parent_id, -0.039965447038412094 AS "Score" FROM DUAL) "Values"), 
"DT_Output_63" AS 
(SELECT "DT_node_lookup_63"."KEY" AS "KEY", "DT_node_lookup_63".node_id_2 AS node_id_2, "DT_node_data_63".node_id AS node_id, "DT_node_data_63".feature AS feature, "DT_node_data_63".threshold AS threshold, "DT_node_data_63".depth AS depth, "DT_node_data_63".parent_id AS parent_id, "DT_node_data_63"."Score" AS "Score" 
FROM "DT_node_lookup_63" LEFT OUTER JOIN "DT_node_data_63" ON "DT_node_lookup_63".node_id_2 = "DT_node_data_63".node_id), 
"XGB_Model_3_15" AS 
(SELECT "DT_Output_63"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_63"."Score" AS "Score_3" 
FROM "DT_Output_63")
 SELECT "XGB_B6"."KEY", "XGB_B6"."Score_0", "XGB_B6"."Score_1", "XGB_B6"."Score_2", "XGB_B6"."Score_3" 
FROM (SELECT "XGB_esu_6"."KEY" AS "KEY", "XGB_esu_6"."Score_0" AS "Score_0", "XGB_esu_6"."Score_1" AS "Score_1", "XGB_esu_6"."Score_2" AS "Score_2", "XGB_esu_6"."Score_3" AS "Score_3" 
FROM (SELECT "XGB_Model_0_15"."KEY" AS "KEY", "XGB_Model_0_15"."Score_0" AS "Score_0", "XGB_Model_0_15"."Score_1" AS "Score_1", "XGB_Model_0_15"."Score_2" AS "Score_2", "XGB_Model_0_15"."Score_3" AS "Score_3" 
FROM "XGB_Model_0_15" UNION ALL SELECT "XGB_Model_1_15"."KEY" AS "KEY", "XGB_Model_1_15"."Score_0" AS "Score_0", "XGB_Model_1_15"."Score_1" AS "Score_1", "XGB_Model_1_15"."Score_2" AS "Score_2", "XGB_Model_1_15"."Score_3" AS "Score_3" 
FROM "XGB_Model_1_15" UNION ALL SELECT "XGB_Model_2_15"."KEY" AS "KEY", "XGB_Model_2_15"."Score_0" AS "Score_0", "XGB_Model_2_15"."Score_1" AS "Score_1", "XGB_Model_2_15"."Score_2" AS "Score_2", "XGB_Model_2_15"."Score_3" AS "Score_3" 
FROM "XGB_Model_2_15" UNION ALL SELECT "XGB_Model_3_15"."KEY" AS "KEY", "XGB_Model_3_15"."Score_0" AS "Score_0", "XGB_Model_3_15"."Score_1" AS "Score_1", "XGB_Model_3_15"."Score_2" AS "Score_2", "XGB_Model_3_15"."Score_3" AS "Score_3" 
FROM "XGB_Model_3_15") "XGB_esu_6") "XGB_B6") "U"

-- Code For temporary table 416233349_FKJ5JJ_XGB_UNION part 1/2. Create 


CREATE GLOBAL TEMPORARY TABLE "416233349_FKJ5JJ_XGB_UNION" (
	"KEY" NUMBER(19), 
	"Score_0" BINARY_DOUBLE, 
	"Score_1" BINARY_DOUBLE, 
	"Score_2" BINARY_DOUBLE, 
	"Score_3" BINARY_DOUBLE
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table 416233349_FKJ5JJ_XGB_UNION part 2/2. Populate

INSERT INTO "416233349_FKJ5JJ_XGB_UNION" ("KEY", "Score_0", "Score_1", "Score_2", "Score_3") SELECT "U"."KEY", "U"."Score_0", "U"."Score_1", "U"."Score_2", "U"."Score_3" 
FROM (SELECT "XGB_Union"."KEY", "XGB_Union"."Score_0", "XGB_Union"."Score_1", "XGB_Union"."Score_2", "XGB_Union"."Score_3" 
FROM (SELECT "XGB_EnsembleUnion"."KEY" AS "KEY", "XGB_EnsembleUnion"."Score_0" AS "Score_0", "XGB_EnsembleUnion"."Score_1" AS "Score_1", "XGB_EnsembleUnion"."Score_2" AS "Score_2", "XGB_EnsembleUnion"."Score_3" AS "Score_3" 
FROM (SELECT "XGB_B0"."KEY" AS "KEY", "XGB_B0"."Score_0" AS "Score_0", "XGB_B0"."Score_1" AS "Score_1", "XGB_B0"."Score_2" AS "Score_2", "XGB_B0"."Score_3" AS "Score_3" 
FROM "180416233349_0DW0UC_XGB_B0" "XGB_B0" UNION ALL SELECT "XGB_B1"."KEY" AS "KEY", "XGB_B1"."Score_0" AS "Score_0", "XGB_B1"."Score_1" AS "Score_1", "XGB_B1"."Score_2" AS "Score_2", "XGB_B1"."Score_3" AS "Score_3" 
FROM "180416233349_821R0P_XGB_B1" "XGB_B1" UNION ALL SELECT "XGB_B2"."KEY" AS "KEY", "XGB_B2"."Score_0" AS "Score_0", "XGB_B2"."Score_1" AS "Score_1", "XGB_B2"."Score_2" AS "Score_2", "XGB_B2"."Score_3" AS "Score_3" 
FROM "180416233349_4CWGHI_XGB_B2" "XGB_B2" UNION ALL SELECT "XGB_B3"."KEY" AS "KEY", "XGB_B3"."Score_0" AS "Score_0", "XGB_B3"."Score_1" AS "Score_1", "XGB_B3"."Score_2" AS "Score_2", "XGB_B3"."Score_3" AS "Score_3" 
FROM "180416233349_KK6L1Y_XGB_B3" "XGB_B3" UNION ALL SELECT "XGB_B4"."KEY" AS "KEY", "XGB_B4"."Score_0" AS "Score_0", "XGB_B4"."Score_1" AS "Score_1", "XGB_B4"."Score_2" AS "Score_2", "XGB_B4"."Score_3" AS "Score_3" 
FROM "180416233349_WI9PP3_XGB_B4" "XGB_B4" UNION ALL SELECT "XGB_B5"."KEY" AS "KEY", "XGB_B5"."Score_0" AS "Score_0", "XGB_B5"."Score_1" AS "Score_1", "XGB_B5"."Score_2" AS "Score_2", "XGB_B5"."Score_3" AS "Score_3" 
FROM "180416233349_HZD68X_XGB_B5" "XGB_B5" UNION ALL SELECT "XGB_B6"."KEY" AS "KEY", "XGB_B6"."Score_0" AS "Score_0", "XGB_B6"."Score_1" AS "Score_1", "XGB_B6"."Score_2" AS "Score_2", "XGB_B6"."Score_3" AS "Score_3" 
FROM "180416233349_OFK24M_XGB_B6" "XGB_B6") "XGB_EnsembleUnion") "XGB_Union") "U"

-- Code For temporary table 80416233349_VL27QN_XGB_SUM part 1/2. Create 


CREATE GLOBAL TEMPORARY TABLE "80416233349_VL27QN_XGB_SUM" (
	"KEY" NUMBER(19) NOT NULL, 
	"Score_0" BINARY_DOUBLE, 
	"Score_1" BINARY_DOUBLE, 
	"Score_2" BINARY_DOUBLE, 
	"Score_3" BINARY_DOUBLE, 
	PRIMARY KEY ("KEY")
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table 80416233349_VL27QN_XGB_SUM part 2/2. Populate

INSERT INTO "80416233349_VL27QN_XGB_SUM" ("KEY", "Score_0", "Score_1", "Score_2", "Score_3") SELECT "U"."KEY", "U"."Score_0", "U"."Score_1", "U"."Score_2", "U"."Score_3" 
FROM (SELECT "XGB_sum"."KEY", "XGB_sum"."Score_0", "XGB_sum"."Score_1", "XGB_sum"."Score_2", "XGB_sum"."Score_3" 
FROM (SELECT "T"."KEY" AS "KEY", CAST("T"."Score_0" AS BINARY_DOUBLE) AS "Score_0", CAST("T"."Score_1" AS BINARY_DOUBLE) AS "Score_1", CAST("T"."Score_2" AS BINARY_DOUBLE) AS "Score_2", CAST("T"."Score_3" AS BINARY_DOUBLE) AS "Score_3" 
FROM (SELECT "XGB_Union"."KEY" AS "KEY", sum("XGB_Union"."Score_0") AS "Score_0", sum("XGB_Union"."Score_1") AS "Score_1", sum("XGB_Union"."Score_2") AS "Score_2", sum("XGB_Union"."Score_3") AS "Score_3" 
FROM "416233349_FKJ5JJ_XGB_UNION" "XGB_Union" GROUP BY "XGB_Union"."KEY") "T") "XGB_sum") "U"

-- Model deployment code

WITH orig_cte AS 
(SELECT "XGB_sum"."KEY" AS "KEY", "XGB_sum"."Score_0" AS "Score_0", "XGB_sum"."Score_1" AS "Score_1", "XGB_sum"."Score_2" AS "Score_2", "XGB_sum"."Score_3" AS "Score_3", CAST(NULL AS BINARY_DOUBLE) AS "Proba_0", CAST(NULL AS BINARY_DOUBLE) AS "Proba_1", CAST(NULL AS BINARY_DOUBLE) AS "Proba_2", CAST(NULL AS BINARY_DOUBLE) AS "Proba_3", CAST(NULL AS BINARY_DOUBLE) AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "LogProba_1", CAST(NULL AS BINARY_DOUBLE) AS "LogProba_2", CAST(NULL AS BINARY_DOUBLE) AS "LogProba_3", CAST(NULL AS NUMBER(19)) AS "Decision", CAST(NULL AS BINARY_DOUBLE) AS "DecisionProba" 
FROM "80416233349_VL27QN_XGB_SUM" "XGB_sum"), 
score_class_union AS 
(SELECT scu."KEY_u" AS "KEY_u", scu.class AS class, scu."LogProba" AS "LogProba", scu."Proba" AS "Proba", scu."Score" AS "Score" 
FROM (SELECT orig_cte."KEY" AS "KEY_u", 0 AS class, orig_cte."LogProba_0" AS "LogProba", orig_cte."Proba_0" AS "Proba", orig_cte."Score_0" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 1 AS class, orig_cte."LogProba_1" AS "LogProba", orig_cte."Proba_1" AS "Proba", orig_cte."Score_1" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 2 AS class, orig_cte."LogProba_2" AS "LogProba", orig_cte."Proba_2" AS "Proba", orig_cte."Score_2" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 3 AS class, orig_cte."LogProba_3" AS "LogProba", orig_cte."Proba_3" AS "Proba", orig_cte."Score_3" AS "Score" 
FROM orig_cte) scu), 
score_max AS 
(SELECT orig_cte."KEY" AS "KEY", orig_cte."Score_0" AS "Score_0", orig_cte."Score_1" AS "Score_1", orig_cte."Score_2" AS "Score_2", orig_cte."Score_3" AS "Score_3", orig_cte."Proba_0" AS "Proba_0", orig_cte."Proba_1" AS "Proba_1", orig_cte."Proba_2" AS "Proba_2", orig_cte."Proba_3" AS "Proba_3", orig_cte."LogProba_0" AS "LogProba_0", orig_cte."LogProba_1" AS "LogProba_1", orig_cte."LogProba_2" AS "LogProba_2", orig_cte."LogProba_3" AS "LogProba_3", orig_cte."Decision" AS "Decision", orig_cte."DecisionProba" AS "DecisionProba", max_select."KEY_m" AS "KEY_m", max_select."max_Score" AS "max_Score" 
FROM orig_cte LEFT OUTER JOIN (SELECT score_class_union."KEY_u" AS "KEY_m", max(score_class_union."Score") AS "max_Score" 
FROM score_class_union GROUP BY score_class_union."KEY_u") max_select ON orig_cte."KEY" = max_select."KEY_m"), 
score_soft_max_deltas AS 
(SELECT score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Score_2" AS "Score_2", score_max."Score_3" AS "Score_3", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."Proba_2" AS "Proba_2", score_max."Proba_3" AS "Proba_3", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."LogProba_2" AS "LogProba_2", score_max."LogProba_3" AS "LogProba_3", score_max."Decision" AS "Decision", score_max."DecisionProba" AS "DecisionProba", score_max."KEY_m" AS "KEY_m", score_max."max_Score" AS "max_Score", exp(score_max."Score_0" - score_max."max_Score") AS "exp_delta_Score_0", exp(score_max."Score_1" - score_max."max_Score") AS "exp_delta_Score_1", exp(score_max."Score_2" - score_max."max_Score") AS "exp_delta_Score_2", exp(score_max."Score_3" - score_max."max_Score") AS "exp_delta_Score_3" 
FROM score_max), 
score_class_union_soft AS 
(SELECT soft_scu."KEY" AS "KEY", soft_scu.class AS class, soft_scu."exp_delta_Score" AS "exp_delta_Score" 
FROM (SELECT score_soft_max_deltas."KEY" AS "KEY", 0 AS class, score_soft_max_deltas."exp_delta_Score_0" AS "exp_delta_Score" 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas."KEY" AS "KEY", 1 AS class, score_soft_max_deltas."exp_delta_Score_1" AS "exp_delta_Score" 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas."KEY" AS "KEY", 2 AS class, score_soft_max_deltas."exp_delta_Score_2" AS "exp_delta_Score" 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas."KEY" AS "KEY", 3 AS class, score_soft_max_deltas."exp_delta_Score_3" AS "exp_delta_Score" 
FROM score_soft_max_deltas) soft_scu), 
score_soft_max AS 
(SELECT score_soft_max_deltas."KEY" AS "KEY", score_soft_max_deltas."Score_0" AS "Score_0", score_soft_max_deltas."Score_1" AS "Score_1", score_soft_max_deltas."Score_2" AS "Score_2", score_soft_max_deltas."Score_3" AS "Score_3", score_soft_max_deltas."Proba_0" AS "Proba_0", score_soft_max_deltas."Proba_1" AS "Proba_1", score_soft_max_deltas."Proba_2" AS "Proba_2", score_soft_max_deltas."Proba_3" AS "Proba_3", score_soft_max_deltas."LogProba_0" AS "LogProba_0", score_soft_max_deltas."LogProba_1" AS "LogProba_1", score_soft_max_deltas."LogProba_2" AS "LogProba_2", score_soft_max_deltas."LogProba_3" AS "LogProba_3", score_soft_max_deltas."Decision" AS "Decision", score_soft_max_deltas."DecisionProba" AS "DecisionProba", score_soft_max_deltas."KEY_m" AS "KEY_m", score_soft_max_deltas."max_Score" AS "max_Score", score_soft_max_deltas."exp_delta_Score_0" AS "exp_delta_Score_0", score_soft_max_deltas."exp_delta_Score_1" AS "exp_delta_Score_1", score_soft_max_deltas."exp_delta_Score_2" AS "exp_delta_Score_2", score_soft_max_deltas."exp_delta_Score_3" AS "exp_delta_Score_3", sum_exp_t."KEY_sum" AS "KEY_sum", sum_exp_t."sum_ExpDeltaScore" AS "sum_ExpDeltaScore" 
FROM score_soft_max_deltas LEFT OUTER JOIN (SELECT score_class_union_soft."KEY" AS "KEY_sum", sum(score_class_union_soft."exp_delta_Score") AS "sum_ExpDeltaScore" 
FROM score_class_union_soft GROUP BY score_class_union_soft."KEY") sum_exp_t ON score_soft_max_deltas."KEY" = sum_exp_t."KEY_sum"), 
union_with_max AS 
(SELECT score_class_union."KEY_u" AS "KEY_u", score_class_union.class AS class, score_class_union."LogProba" AS "LogProba", score_class_union."Proba" AS "Proba", score_class_union."Score" AS "Score", score_soft_max."KEY" AS "KEY", score_soft_max."Score_0" AS "Score_0", score_soft_max."Score_1" AS "Score_1", score_soft_max."Score_2" AS "Score_2", score_soft_max."Score_3" AS "Score_3", score_soft_max."Proba_0" AS "Proba_0", score_soft_max."Proba_1" AS "Proba_1", score_soft_max."Proba_2" AS "Proba_2", score_soft_max."Proba_3" AS "Proba_3", score_soft_max."LogProba_0" AS "LogProba_0", score_soft_max."LogProba_1" AS "LogProba_1", score_soft_max."LogProba_2" AS "LogProba_2", score_soft_max."LogProba_3" AS "LogProba_3", score_soft_max."Decision" AS "Decision", score_soft_max."DecisionProba" AS "DecisionProba", score_soft_max."KEY_m" AS "KEY_m", score_soft_max."max_Score" AS "max_Score", score_soft_max."exp_delta_Score_0" AS "exp_delta_Score_0", score_soft_max."exp_delta_Score_1" AS "exp_delta_Score_1", score_soft_max."exp_delta_Score_2" AS "exp_delta_Score_2", score_soft_max."exp_delta_Score_3" AS "exp_delta_Score_3", score_soft_max."KEY_sum" AS "KEY_sum", score_soft_max."sum_ExpDeltaScore" AS "sum_ExpDeltaScore" 
FROM score_class_union LEFT OUTER JOIN score_soft_max ON score_class_union."KEY_u" = score_soft_max."KEY"), 
arg_max_cte AS 
(SELECT score_soft_max."KEY" AS "KEY", score_soft_max."Score_0" AS "Score_0", score_soft_max."Score_1" AS "Score_1", score_soft_max."Score_2" AS "Score_2", score_soft_max."Score_3" AS "Score_3", score_soft_max."Proba_0" AS "Proba_0", score_soft_max."Proba_1" AS "Proba_1", score_soft_max."Proba_2" AS "Proba_2", score_soft_max."Proba_3" AS "Proba_3", score_soft_max."LogProba_0" AS "LogProba_0", score_soft_max."LogProba_1" AS "LogProba_1", score_soft_max."LogProba_2" AS "LogProba_2", score_soft_max."LogProba_3" AS "LogProba_3", score_soft_max."Decision" AS "Decision", score_soft_max."DecisionProba" AS "DecisionProba", score_soft_max."KEY_m" AS "KEY_m", score_soft_max."max_Score" AS "max_Score", score_soft_max."exp_delta_Score_0" AS "exp_delta_Score_0", score_soft_max."exp_delta_Score_1" AS "exp_delta_Score_1", score_soft_max."exp_delta_Score_2" AS "exp_delta_Score_2", score_soft_max."exp_delta_Score_3" AS "exp_delta_Score_3", score_soft_max."KEY_sum" AS "KEY_sum", score_soft_max."sum_ExpDeltaScore" AS "sum_ExpDeltaScore", "arg_max_t_Score"."KEY_Score" AS "KEY_Score", "arg_max_t_Score"."arg_max_Score" AS "arg_max_Score", soft_max_comp."KEY_softmax" AS "KEY_softmax", soft_max_comp."SoftProba_0" AS "SoftProba_0", soft_max_comp."SoftProba_1" AS "SoftProba_1", soft_max_comp."SoftProba_2" AS "SoftProba_2", soft_max_comp."SoftProba_3" AS "SoftProba_3" 
FROM score_soft_max LEFT OUTER JOIN (SELECT union_with_max."KEY" AS "KEY_Score", min(union_with_max.class) AS "arg_max_Score" 
FROM union_with_max 
WHERE union_with_max."Score" >= union_with_max."max_Score" GROUP BY union_with_max."KEY") "arg_max_t_Score" ON score_soft_max."KEY" = "arg_max_t_Score"."KEY_Score" LEFT OUTER JOIN (SELECT score_soft_max."KEY" AS "KEY_softmax", score_soft_max."exp_delta_Score_0" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_0", score_soft_max."exp_delta_Score_1" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_1", score_soft_max."exp_delta_Score_2" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_2", score_soft_max."exp_delta_Score_3" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_3" 
FROM score_soft_max) soft_max_comp ON soft_max_comp."KEY_softmax" = "arg_max_t_Score"."KEY_Score")
 SELECT arg_max_cte."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", CAST(NULL AS BINARY_DOUBLE) AS "Score_2", CAST(NULL AS BINARY_DOUBLE) AS "Score_3", arg_max_cte."SoftProba_0" AS "Proba_0", arg_max_cte."SoftProba_1" AS "Proba_1", arg_max_cte."SoftProba_2" AS "Proba_2", arg_max_cte."SoftProba_3" AS "Proba_3", CASE WHEN (arg_max_cte."SoftProba_0" IS NULL OR arg_max_cte."SoftProba_0" > 0.0) THEN ln(arg_max_cte."SoftProba_0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_0", CASE WHEN (arg_max_cte."SoftProba_1" IS NULL OR arg_max_cte."SoftProba_1" > 0.0) THEN ln(arg_max_cte."SoftProba_1") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_1", CASE WHEN (arg_max_cte."SoftProba_2" IS NULL OR arg_max_cte."SoftProba_2" > 0.0) THEN ln(arg_max_cte."SoftProba_2") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_2", CASE WHEN (arg_max_cte."SoftProba_3" IS NULL OR arg_max_cte."SoftProba_3" > 0.0) THEN ln(arg_max_cte."SoftProba_3") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_3", arg_max_cte."arg_max_Score" AS "Decision", greatest(arg_max_cte."SoftProba_0", arg_max_cte."SoftProba_1", arg_max_cte."SoftProba_2", arg_max_cte."SoftProba_3") AS "DecisionProba" 
FROM arg_max_cte