-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2018

-- Model : XGBClassifier
-- Dataset : iris_date_tgt
-- Database : teradata


-- This SQL code can contain one or more statements, to be executed in the order they appear in this file.



-- Code For temporary table tmp_20180417050811_tx7ddq_xgb_ part 1/2. Create 


CREATE GLOBAL TEMPORARY TABLE tmp_20180417050811_tx7ddq_xgb_  (
	"KEY" BIGINT, 
	"Score_1789-07-14T00:00:00.000000000" FLOAT, 
	"Score_1789-08-14T00:00:00.000000000" FLOAT, 
	"Score_1789-09-14T00:00:00.000000000" FLOAT
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table tmp_20180417050811_tx7ddq_xgb_ part 2/2. Populate

INSERT INTO tmp_20180417050811_tx7ddq_xgb_ ("KEY", "Score_1789-07-14T00:00:00.000000000", "Score_1789-08-14T00:00:00.000000000", "Score_1789-09-14T00:00:00.000000000") SELECT "U"."KEY", "U"."Score_1789-07-14T00:00:00.000000000", "U"."Score_1789-08-14T00:00:00.000000000", "U"."Score_1789-09-14T00:00:00.000000000" 
FROM (WITH "DT_node_lookup" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" < 2.450000047683716) THEN 1 ELSE 2 END AS node_id_2 
FROM iris_date_tgt AS "ADS"), 
"DT_node_data" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values"."threshold" AS FLOAT) AS "threshold", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Score" AS FLOAT) AS "Score" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS depth, 0 AS parent_id, 0.141401275992394 AS "Score" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS depth, 0 AS parent_id, -0.073020540177822 AS "Score" 
FROM (SELECT 0.0 AS "X") AS dummy_cte) AS "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".node_id AS node_id, "DT_node_data".feature AS feature, "DT_node_data"."threshold" AS "threshold", "DT_node_data".depth AS depth, "DT_node_data".parent_id AS parent_id, "DT_node_data"."Score" AS "Score" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".node_id), 
"XGB_Model_0_0" AS 
(SELECT "DT_Output"."KEY" AS "KEY", "DT_Output"."Score" AS "Score_1789-07-14T00:00:00.000000000", 0.0 AS "Score_1789-08-14T00:00:00.000000000", 0.0 AS "Score_1789-09-14T00:00:00.000000000" 
FROM "DT_Output"), 
"DT_node_lookup_1" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" < 2.450000047683716) THEN 1 ELSE CASE WHEN ("ADS"."Feature_2" < 4.850000381469727) THEN 3 ELSE 4 END END AS node_id_2 
FROM iris_date_tgt AS "ADS"), 
"DT_node_data_1" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values"."threshold" AS FLOAT) AS "threshold", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Score" AS FLOAT) AS "Score" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS depth, 0 AS parent_id, -0.070700645446777 AS "Score" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS depth, 2 AS parent_id, 0.130909085273743 AS "Score" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS depth, 2 AS parent_id, -0.056756764650345 AS "Score" 
FROM (SELECT 0.0 AS "X") AS dummy_cte) AS "Values"), 
"DT_Output_1" AS 
(SELECT "DT_node_lookup_1"."KEY" AS "KEY", "DT_node_lookup_1".node_id_2 AS node_id_2, "DT_node_data_1".node_id AS node_id, "DT_node_data_1".feature AS feature, "DT_node_data_1"."threshold" AS "threshold", "DT_node_data_1".depth AS depth, "DT_node_data_1".parent_id AS parent_id, "DT_node_data_1"."Score" AS "Score" 
FROM "DT_node_lookup_1" LEFT OUTER JOIN "DT_node_data_1" ON "DT_node_lookup_1".node_id_2 = "DT_node_data_1".node_id), 
"XGB_Model_1_0" AS 
(SELECT "DT_Output_1"."KEY" AS "KEY", 0.0 AS "Score_1789-07-14T00:00:00.000000000", "DT_Output_1"."Score" AS "Score_1789-08-14T00:00:00.000000000", 0.0 AS "Score_1789-09-14T00:00:00.000000000" 
FROM "DT_Output_1"), 
"DT_node_lookup_2" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" < 4.850000381469727) THEN 1 ELSE 2 END AS node_id_2 
FROM iris_date_tgt AS "ADS"), 
"DT_node_data_2" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values"."threshold" AS FLOAT) AS "threshold", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Score" AS FLOAT) AS "Score" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS depth, 0 AS parent_id, -0.067092657089233 AS "Score" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS depth, 0 AS parent_id, 0.128108114004135 AS "Score" 
FROM (SELECT 0.0 AS "X") AS dummy_cte) AS "Values"), 
"DT_Output_2" AS 
(SELECT "DT_node_lookup_2"."KEY" AS "KEY", "DT_node_lookup_2".node_id_2 AS node_id_2, "DT_node_data_2".node_id AS node_id, "DT_node_data_2".feature AS feature, "DT_node_data_2"."threshold" AS "threshold", "DT_node_data_2".depth AS depth, "DT_node_data_2".parent_id AS parent_id, "DT_node_data_2"."Score" AS "Score" 
FROM "DT_node_lookup_2" LEFT OUTER JOIN "DT_node_data_2" ON "DT_node_lookup_2".node_id_2 = "DT_node_data_2".node_id), 
"XGB_Model_2_0" AS 
(SELECT "DT_Output_2"."KEY" AS "KEY", 0.0 AS "Score_1789-07-14T00:00:00.000000000", 0.0 AS "Score_1789-08-14T00:00:00.000000000", "DT_Output_2"."Score" AS "Score_1789-09-14T00:00:00.000000000" 
FROM "DT_Output_2"), 
"DT_node_lookup_3" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" < 2.450000047683716) THEN 1 ELSE 2 END AS node_id_2 
FROM iris_date_tgt AS "ADS"), 
"DT_node_data_3" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values"."threshold" AS FLOAT) AS "threshold", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Score" AS FLOAT) AS "Score" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS depth, 0 AS parent_id, 0.123936988413334 AS "Score" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS depth, 0 AS parent_id, -0.070377193391323 AS "Score" 
FROM (SELECT 0.0 AS "X") AS dummy_cte) AS "Values"), 
"DT_Output_3" AS 
(SELECT "DT_node_lookup_3"."KEY" AS "KEY", "DT_node_lookup_3".node_id_2 AS node_id_2, "DT_node_data_3".node_id AS node_id, "DT_node_data_3".feature AS feature, "DT_node_data_3"."threshold" AS "threshold", "DT_node_data_3".depth AS depth, "DT_node_data_3".parent_id AS parent_id, "DT_node_data_3"."Score" AS "Score" 
FROM "DT_node_lookup_3" LEFT OUTER JOIN "DT_node_data_3" ON "DT_node_lookup_3".node_id_2 = "DT_node_data_3".node_id), 
"XGB_Model_0_1" AS 
(SELECT "DT_Output_3"."KEY" AS "KEY", "DT_Output_3"."Score" AS "Score_1789-07-14T00:00:00.000000000", 0.0 AS "Score_1789-08-14T00:00:00.000000000", 0.0 AS "Score_1789-09-14T00:00:00.000000000" 
FROM "DT_Output_3"), 
"DT_node_lookup_4" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" < 2.450000047683716) THEN 1 ELSE CASE WHEN ("ADS"."Feature_3" < 1.75) THEN 3 ELSE 4 END END AS node_id_2 
FROM iris_date_tgt AS "ADS"), 
"DT_node_data_4" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values"."threshold" AS FLOAT) AS "threshold", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Score" AS FLOAT) AS "Score" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS depth, 0 AS parent_id, -0.068015217781067 AS "Score" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS depth, 2 AS parent_id, 0.1061976775527 AS "Score" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS depth, 2 AS parent_id, -0.063598625361919 AS "Score" 
FROM (SELECT 0.0 AS "X") AS dummy_cte) AS "Values"), 
"DT_Output_4" AS 
(SELECT "DT_node_lookup_4"."KEY" AS "KEY", "DT_node_lookup_4".node_id_2 AS node_id_2, "DT_node_data_4".node_id AS node_id, "DT_node_data_4".feature AS feature, "DT_node_data_4"."threshold" AS "threshold", "DT_node_data_4".depth AS depth, "DT_node_data_4".parent_id AS parent_id, "DT_node_data_4"."Score" AS "Score" 
FROM "DT_node_lookup_4" LEFT OUTER JOIN "DT_node_data_4" ON "DT_node_lookup_4".node_id_2 = "DT_node_data_4".node_id), 
"XGB_Model_1_1" AS 
(SELECT "DT_Output_4"."KEY" AS "KEY", 0.0 AS "Score_1789-07-14T00:00:00.000000000", "DT_Output_4"."Score" AS "Score_1789-08-14T00:00:00.000000000", 0.0 AS "Score_1789-09-14T00:00:00.000000000" 
FROM "DT_Output_4"), 
"DT_node_lookup_5" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" < 4.850000381469727) THEN 1 ELSE 2 END AS node_id_2 
FROM iris_date_tgt AS "ADS"), 
"DT_node_data_5" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values"."threshold" AS FLOAT) AS "threshold", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Score" AS FLOAT) AS "Score" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS depth, 0 AS parent_id, -0.064393900334835 AS "Score" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS depth, 0 AS parent_id, 0.112503625452518 AS "Score" 
FROM (SELECT 0.0 AS "X") AS dummy_cte) AS "Values"), 
"DT_Output_5" AS 
(SELECT "DT_node_lookup_5"."KEY" AS "KEY", "DT_node_lookup_5".node_id_2 AS node_id_2, "DT_node_data_5".node_id AS node_id, "DT_node_data_5".feature AS feature, "DT_node_data_5"."threshold" AS "threshold", "DT_node_data_5".depth AS depth, "DT_node_data_5".parent_id AS parent_id, "DT_node_data_5"."Score" AS "Score" 
FROM "DT_node_lookup_5" LEFT OUTER JOIN "DT_node_data_5" ON "DT_node_lookup_5".node_id_2 = "DT_node_data_5".node_id), 
"XGB_Model_2_1" AS 
(SELECT "DT_Output_5"."KEY" AS "KEY", 0.0 AS "Score_1789-07-14T00:00:00.000000000", 0.0 AS "Score_1789-08-14T00:00:00.000000000", "DT_Output_5"."Score" AS "Score_1789-09-14T00:00:00.000000000" 
FROM "DT_Output_5"), 
"DT_node_lookup_6" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" < 2.450000047683716) THEN 1 ELSE 2 END AS node_id_2 
FROM iris_date_tgt AS "ADS"), 
"DT_node_data_6" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values"."threshold" AS FLOAT) AS "threshold", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Score" AS FLOAT) AS "Score" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS depth, 0 AS parent_id, 0.11088015884161 AS "Score" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS depth, 0 AS parent_id, -0.068060524761677 AS "Score" 
FROM (SELECT 0.0 AS "X") AS dummy_cte) AS "Values"), 
"DT_Output_6" AS 
(SELECT "DT_node_lookup_6"."KEY" AS "KEY", "DT_node_lookup_6".node_id_2 AS node_id_2, "DT_node_data_6".node_id AS node_id, "DT_node_data_6".feature AS feature, "DT_node_data_6"."threshold" AS "threshold", "DT_node_data_6".depth AS depth, "DT_node_data_6".parent_id AS parent_id, "DT_node_data_6"."Score" AS "Score" 
FROM "DT_node_lookup_6" LEFT OUTER JOIN "DT_node_data_6" ON "DT_node_lookup_6".node_id_2 = "DT_node_data_6".node_id), 
"XGB_Model_0_2" AS 
(SELECT "DT_Output_6"."KEY" AS "KEY", "DT_Output_6"."Score" AS "Score_1789-07-14T00:00:00.000000000", 0.0 AS "Score_1789-08-14T00:00:00.000000000", 0.0 AS "Score_1789-09-14T00:00:00.000000000" 
FROM "DT_Output_6"), 
"DT_node_lookup_7" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" < 2.450000047683716) THEN 1 ELSE CASE WHEN ("ADS"."Feature_2" < 4.949999809265137) THEN 3 ELSE 4 END END AS node_id_2 
FROM iris_date_tgt AS "ADS"), 
"DT_node_data_7" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values"."threshold" AS FLOAT) AS "threshold", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Score" AS FLOAT) AS "Score" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS depth, 0 AS parent_id, -0.065610639750957 AS "Score" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS depth, 2 AS parent_id, 0.09554922580719 AS "Score" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS depth, 2 AS parent_id, -0.06135019287467 AS "Score" 
FROM (SELECT 0.0 AS "X") AS dummy_cte) AS "Values"), 
"DT_Output_7" AS 
(SELECT "DT_node_lookup_7"."KEY" AS "KEY", "DT_node_lookup_7".node_id_2 AS node_id_2, "DT_node_data_7".node_id AS node_id, "DT_node_data_7".feature AS feature, "DT_node_data_7"."threshold" AS "threshold", "DT_node_data_7".depth AS depth, "DT_node_data_7".parent_id AS parent_id, "DT_node_data_7"."Score" AS "Score" 
FROM "DT_node_lookup_7" LEFT OUTER JOIN "DT_node_data_7" ON "DT_node_lookup_7".node_id_2 = "DT_node_data_7".node_id), 
"XGB_Model_1_2" AS 
(SELECT "DT_Output_7"."KEY" AS "KEY", 0.0 AS "Score_1789-07-14T00:00:00.000000000", "DT_Output_7"."Score" AS "Score_1789-08-14T00:00:00.000000000", 0.0 AS "Score_1789-09-14T00:00:00.000000000" 
FROM "DT_Output_7"), 
"DT_node_lookup_8" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" < 4.850000381469727) THEN 1 ELSE 2 END AS node_id_2 
FROM iris_date_tgt AS "ADS"), 
"DT_node_data_8" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values"."threshold" AS FLOAT) AS "threshold", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Score" AS FLOAT) AS "Score" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS depth, 0 AS parent_id, -0.062040943652391 AS "Score" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS depth, 0 AS parent_id, 0.101163029670715 AS "Score" 
FROM (SELECT 0.0 AS "X") AS dummy_cte) AS "Values"), 
"DT_Output_8" AS 
(SELECT "DT_node_lookup_8"."KEY" AS "KEY", "DT_node_lookup_8".node_id_2 AS node_id_2, "DT_node_data_8".node_id AS node_id, "DT_node_data_8".feature AS feature, "DT_node_data_8"."threshold" AS "threshold", "DT_node_data_8".depth AS depth, "DT_node_data_8".parent_id AS parent_id, "DT_node_data_8"."Score" AS "Score" 
FROM "DT_node_lookup_8" LEFT OUTER JOIN "DT_node_data_8" ON "DT_node_lookup_8".node_id_2 = "DT_node_data_8".node_id), 
"XGB_Model_2_2" AS 
(SELECT "DT_Output_8"."KEY" AS "KEY", 0.0 AS "Score_1789-07-14T00:00:00.000000000", 0.0 AS "Score_1789-08-14T00:00:00.000000000", "DT_Output_8"."Score" AS "Score_1789-09-14T00:00:00.000000000" 
FROM "DT_Output_8"), 
"DT_node_lookup_9" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" < 2.450000047683716) THEN 1 ELSE 2 END AS node_id_2 
FROM iris_date_tgt AS "ADS"), 
"DT_node_data_9" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values"."threshold" AS FLOAT) AS "threshold", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Score" AS FLOAT) AS "Score" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS depth, 0 AS parent_id, 0.100795708596706 AS "Score" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS depth, 0 AS parent_id, -0.065995305776596 AS "Score" 
FROM (SELECT 0.0 AS "X") AS dummy_cte) AS "Values"), 
"DT_Output_9" AS 
(SELECT "DT_node_lookup_9"."KEY" AS "KEY", "DT_node_lookup_9".node_id_2 AS node_id_2, "DT_node_data_9".node_id AS node_id, "DT_node_data_9".feature AS feature, "DT_node_data_9"."threshold" AS "threshold", "DT_node_data_9".depth AS depth, "DT_node_data_9".parent_id AS parent_id, "DT_node_data_9"."Score" AS "Score" 
FROM "DT_node_lookup_9" LEFT OUTER JOIN "DT_node_data_9" ON "DT_node_lookup_9".node_id_2 = "DT_node_data_9".node_id), 
"XGB_Model_0_3" AS 
(SELECT "DT_Output_9"."KEY" AS "KEY", "DT_Output_9"."Score" AS "Score_1789-07-14T00:00:00.000000000", 0.0 AS "Score_1789-08-14T00:00:00.000000000", 0.0 AS "Score_1789-09-14T00:00:00.000000000" 
FROM "DT_Output_9")
 SELECT "XGB_B0"."KEY", "XGB_B0"."Score_1789-07-14T00:00:00.000000000", "XGB_B0"."Score_1789-08-14T00:00:00.000000000", "XGB_B0"."Score_1789-09-14T00:00:00.000000000" 
FROM (SELECT "XGB_esu_0"."KEY" AS "KEY", "XGB_esu_0"."Score_1789-07-14T00:00:00.000000000" AS "Score_1789-07-14T00:00:00.000000000", "XGB_esu_0"."Score_1789-08-14T00:00:00.000000000" AS "Score_1789-08-14T00:00:00.000000000", "XGB_esu_0"."Score_1789-09-14T00:00:00.000000000" AS "Score_1789-09-14T00:00:00.000000000" 
FROM (SELECT "XGB_Model_0_0"."KEY" AS "KEY", "XGB_Model_0_0"."Score_1789-07-14T00:00:00.000000000" AS "Score_1789-07-14T00:00:00.000000000", "XGB_Model_0_0"."Score_1789-08-14T00:00:00.000000000" AS "Score_1789-08-14T00:00:00.000000000", "XGB_Model_0_0"."Score_1789-09-14T00:00:00.000000000" AS "Score_1789-09-14T00:00:00.000000000" 
FROM "XGB_Model_0_0" UNION ALL SELECT "XGB_Model_1_0"."KEY" AS "KEY", "XGB_Model_1_0"."Score_1789-07-14T00:00:00.000000000" AS "Score_1789-07-14T00:00:00.000000000", "XGB_Model_1_0"."Score_1789-08-14T00:00:00.000000000" AS "Score_1789-08-14T00:00:00.000000000", "XGB_Model_1_0"."Score_1789-09-14T00:00:00.000000000" AS "Score_1789-09-14T00:00:00.000000000" 
FROM "XGB_Model_1_0" UNION ALL SELECT "XGB_Model_2_0"."KEY" AS "KEY", "XGB_Model_2_0"."Score_1789-07-14T00:00:00.000000000" AS "Score_1789-07-14T00:00:00.000000000", "XGB_Model_2_0"."Score_1789-08-14T00:00:00.000000000" AS "Score_1789-08-14T00:00:00.000000000", "XGB_Model_2_0"."Score_1789-09-14T00:00:00.000000000" AS "Score_1789-09-14T00:00:00.000000000" 
FROM "XGB_Model_2_0" UNION ALL SELECT "XGB_Model_0_1"."KEY" AS "KEY", "XGB_Model_0_1"."Score_1789-07-14T00:00:00.000000000" AS "Score_1789-07-14T00:00:00.000000000", "XGB_Model_0_1"."Score_1789-08-14T00:00:00.000000000" AS "Score_1789-08-14T00:00:00.000000000", "XGB_Model_0_1"."Score_1789-09-14T00:00:00.000000000" AS "Score_1789-09-14T00:00:00.000000000" 
FROM "XGB_Model_0_1" UNION ALL SELECT "XGB_Model_1_1"."KEY" AS "KEY", "XGB_Model_1_1"."Score_1789-07-14T00:00:00.000000000" AS "Score_1789-07-14T00:00:00.000000000", "XGB_Model_1_1"."Score_1789-08-14T00:00:00.000000000" AS "Score_1789-08-14T00:00:00.000000000", "XGB_Model_1_1"."Score_1789-09-14T00:00:00.000000000" AS "Score_1789-09-14T00:00:00.000000000" 
FROM "XGB_Model_1_1" UNION ALL SELECT "XGB_Model_2_1"."KEY" AS "KEY", "XGB_Model_2_1"."Score_1789-07-14T00:00:00.000000000" AS "Score_1789-07-14T00:00:00.000000000", "XGB_Model_2_1"."Score_1789-08-14T00:00:00.000000000" AS "Score_1789-08-14T00:00:00.000000000", "XGB_Model_2_1"."Score_1789-09-14T00:00:00.000000000" AS "Score_1789-09-14T00:00:00.000000000" 
FROM "XGB_Model_2_1" UNION ALL SELECT "XGB_Model_0_2"."KEY" AS "KEY", "XGB_Model_0_2"."Score_1789-07-14T00:00:00.000000000" AS "Score_1789-07-14T00:00:00.000000000", "XGB_Model_0_2"."Score_1789-08-14T00:00:00.000000000" AS "Score_1789-08-14T00:00:00.000000000", "XGB_Model_0_2"."Score_1789-09-14T00:00:00.000000000" AS "Score_1789-09-14T00:00:00.000000000" 
FROM "XGB_Model_0_2" UNION ALL SELECT "XGB_Model_1_2"."KEY" AS "KEY", "XGB_Model_1_2"."Score_1789-07-14T00:00:00.000000000" AS "Score_1789-07-14T00:00:00.000000000", "XGB_Model_1_2"."Score_1789-08-14T00:00:00.000000000" AS "Score_1789-08-14T00:00:00.000000000", "XGB_Model_1_2"."Score_1789-09-14T00:00:00.000000000" AS "Score_1789-09-14T00:00:00.000000000" 
FROM "XGB_Model_1_2" UNION ALL SELECT "XGB_Model_2_2"."KEY" AS "KEY", "XGB_Model_2_2"."Score_1789-07-14T00:00:00.000000000" AS "Score_1789-07-14T00:00:00.000000000", "XGB_Model_2_2"."Score_1789-08-14T00:00:00.000000000" AS "Score_1789-08-14T00:00:00.000000000", "XGB_Model_2_2"."Score_1789-09-14T00:00:00.000000000" AS "Score_1789-09-14T00:00:00.000000000" 
FROM "XGB_Model_2_2" UNION ALL SELECT "XGB_Model_0_3"."KEY" AS "KEY", "XGB_Model_0_3"."Score_1789-07-14T00:00:00.000000000" AS "Score_1789-07-14T00:00:00.000000000", "XGB_Model_0_3"."Score_1789-08-14T00:00:00.000000000" AS "Score_1789-08-14T00:00:00.000000000", "XGB_Model_0_3"."Score_1789-09-14T00:00:00.000000000" AS "Score_1789-09-14T00:00:00.000000000" 
FROM "XGB_Model_0_3") AS "XGB_esu_0") AS "XGB_B0") AS "U"

-- Code For temporary table tmp_20180417050811_yf0hfn_xgb_ part 1/2. Create 


CREATE GLOBAL TEMPORARY TABLE tmp_20180417050811_yf0hfn_xgb_  (
	"KEY" BIGINT, 
	"Score_1789-07-14T00:00:00.000000000" FLOAT, 
	"Score_1789-08-14T00:00:00.000000000" FLOAT, 
	"Score_1789-09-14T00:00:00.000000000" FLOAT
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table tmp_20180417050811_yf0hfn_xgb_ part 2/2. Populate

INSERT INTO tmp_20180417050811_yf0hfn_xgb_ ("KEY", "Score_1789-07-14T00:00:00.000000000", "Score_1789-08-14T00:00:00.000000000", "Score_1789-09-14T00:00:00.000000000") SELECT "U"."KEY", "U"."Score_1789-07-14T00:00:00.000000000", "U"."Score_1789-08-14T00:00:00.000000000", "U"."Score_1789-09-14T00:00:00.000000000" 
FROM (WITH "DT_node_lookup_10" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_3" < 1.75) THEN CASE WHEN ("ADS"."Feature_2" < 2.450000047683716) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM iris_date_tgt AS "ADS"), 
"DT_node_data_10" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values"."threshold" AS FLOAT) AS "threshold", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Score" AS FLOAT) AS "Score" 
FROM (SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS depth, 0 AS parent_id, -0.059974204748869 AS "Score" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS depth, 1 AS parent_id, -0.063450410962105 AS "Score" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS depth, 1 AS parent_id, 0.088014967739582 AS "Score" 
FROM (SELECT 0.0 AS "X") AS dummy_cte) AS "Values"), 
"DT_Output_10" AS 
(SELECT "DT_node_lookup_10"."KEY" AS "KEY", "DT_node_lookup_10".node_id_2 AS node_id_2, "DT_node_data_10".node_id AS node_id, "DT_node_data_10".feature AS feature, "DT_node_data_10"."threshold" AS "threshold", "DT_node_data_10".depth AS depth, "DT_node_data_10".parent_id AS parent_id, "DT_node_data_10"."Score" AS "Score" 
FROM "DT_node_lookup_10" LEFT OUTER JOIN "DT_node_data_10" ON "DT_node_lookup_10".node_id_2 = "DT_node_data_10".node_id), 
"XGB_Model_1_3" AS 
(SELECT "DT_Output_10"."KEY" AS "KEY", 0.0 AS "Score_1789-07-14T00:00:00.000000000", "DT_Output_10"."Score" AS "Score_1789-08-14T00:00:00.000000000", 0.0 AS "Score_1789-09-14T00:00:00.000000000" 
FROM "DT_Output_10"), 
"DT_node_lookup_11" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_3" < 1.650000095367432) THEN CASE WHEN ("ADS"."Feature_2" < 4.25) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM iris_date_tgt AS "ADS"), 
"DT_node_data_11" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values"."threshold" AS FLOAT) AS "threshold", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Score" AS FLOAT) AS "Score" 
FROM (SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS depth, 0 AS parent_id, 0.09809672832489 AS "Score" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS depth, 1 AS parent_id, -0.065294623374939 AS "Score" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS depth, 1 AS parent_id, -0.031511437147856 AS "Score" 
FROM (SELECT 0.0 AS "X") AS dummy_cte) AS "Values"), 
"DT_Output_11" AS 
(SELECT "DT_node_lookup_11"."KEY" AS "KEY", "DT_node_lookup_11".node_id_2 AS node_id_2, "DT_node_data_11".node_id AS node_id, "DT_node_data_11".feature AS feature, "DT_node_data_11"."threshold" AS "threshold", "DT_node_data_11".depth AS depth, "DT_node_data_11".parent_id AS parent_id, "DT_node_data_11"."Score" AS "Score" 
FROM "DT_node_lookup_11" LEFT OUTER JOIN "DT_node_data_11" ON "DT_node_lookup_11".node_id_2 = "DT_node_data_11".node_id), 
"XGB_Model_2_3" AS 
(SELECT "DT_Output_11"."KEY" AS "KEY", 0.0 AS "Score_1789-07-14T00:00:00.000000000", 0.0 AS "Score_1789-08-14T00:00:00.000000000", "DT_Output_11"."Score" AS "Score_1789-09-14T00:00:00.000000000" 
FROM "DT_Output_11"), 
"DT_node_lookup_12" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" < 2.450000047683716) THEN 1 ELSE 2 END AS node_id_2 
FROM iris_date_tgt AS "ADS"), 
"DT_node_data_12" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values"."threshold" AS FLOAT) AS "threshold", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Score" AS FLOAT) AS "Score" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS depth, 0 AS parent_id, 0.092684172093868 AS "Score" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS depth, 0 AS parent_id, -0.064141452312469 AS "Score" 
FROM (SELECT 0.0 AS "X") AS dummy_cte) AS "Values"), 
"DT_Output_12" AS 
(SELECT "DT_node_lookup_12"."KEY" AS "KEY", "DT_node_lookup_12".node_id_2 AS node_id_2, "DT_node_data_12".node_id AS node_id, "DT_node_data_12".feature AS feature, "DT_node_data_12"."threshold" AS "threshold", "DT_node_data_12".depth AS depth, "DT_node_data_12".parent_id AS parent_id, "DT_node_data_12"."Score" AS "Score" 
FROM "DT_node_lookup_12" LEFT OUTER JOIN "DT_node_data_12" ON "DT_node_lookup_12".node_id_2 = "DT_node_data_12".node_id), 
"XGB_Model_0_4" AS 
(SELECT "DT_Output_12"."KEY" AS "KEY", "DT_Output_12"."Score" AS "Score_1789-07-14T00:00:00.000000000", 0.0 AS "Score_1789-08-14T00:00:00.000000000", 0.0 AS "Score_1789-09-14T00:00:00.000000000" 
FROM "DT_Output_12"), 
"DT_node_lookup_13" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" < 5.050000190734863) THEN CASE WHEN ("ADS"."Feature_2" < 2.450000047683716) THEN 3 ELSE CASE WHEN ("ADS"."Feature_2" < 4.449999809265136) THEN 5 ELSE 6 END END ELSE 2 END AS node_id_2 
FROM iris_date_tgt AS "ADS"), 
"DT_node_data_13" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values"."threshold" AS FLOAT) AS "threshold", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Score" AS FLOAT) AS "Score" 
FROM (SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS depth, 0 AS parent_id, -0.063144914805889 AS "Score" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS depth, 1 AS parent_id, -0.061531312763691 AS "Score" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 3 AS depth, 4 AS parent_id, 0.092375941574574 AS "Score" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 3 AS depth, 4 AS parent_id, 0.051213122904301 AS "Score" 
FROM (SELECT 0.0 AS "X") AS dummy_cte) AS "Values"), 
"DT_Output_13" AS 
(SELECT "DT_node_lookup_13"."KEY" AS "KEY", "DT_node_lookup_13".node_id_2 AS node_id_2, "DT_node_data_13".node_id AS node_id, "DT_node_data_13".feature AS feature, "DT_node_data_13"."threshold" AS "threshold", "DT_node_data_13".depth AS depth, "DT_node_data_13".parent_id AS parent_id, "DT_node_data_13"."Score" AS "Score" 
FROM "DT_node_lookup_13" LEFT OUTER JOIN "DT_node_data_13" ON "DT_node_lookup_13".node_id_2 = "DT_node_data_13".node_id), 
"XGB_Model_1_4" AS 
(SELECT "DT_Output_13"."KEY" AS "KEY", 0.0 AS "Score_1789-07-14T00:00:00.000000000", "DT_Output_13"."Score" AS "Score_1789-08-14T00:00:00.000000000", 0.0 AS "Score_1789-09-14T00:00:00.000000000" 
FROM "DT_Output_13"), 
"DT_node_lookup_14" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" < 4.850000381469727) THEN 1 ELSE 2 END AS node_id_2 
FROM iris_date_tgt AS "ADS"), 
"DT_node_data_14" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values"."threshold" AS FLOAT) AS "threshold", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Score" AS FLOAT) AS "Score" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS depth, 0 AS parent_id, -0.058019559830427 AS "Score" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS depth, 0 AS parent_id, 0.085266336798668 AS "Score" 
FROM (SELECT 0.0 AS "X") AS dummy_cte) AS "Values"), 
"DT_Output_14" AS 
(SELECT "DT_node_lookup_14"."KEY" AS "KEY", "DT_node_lookup_14".node_id_2 AS node_id_2, "DT_node_data_14".node_id AS node_id, "DT_node_data_14".feature AS feature, "DT_node_data_14"."threshold" AS "threshold", "DT_node_data_14".depth AS depth, "DT_node_data_14".parent_id AS parent_id, "DT_node_data_14"."Score" AS "Score" 
FROM "DT_node_lookup_14" LEFT OUTER JOIN "DT_node_data_14" ON "DT_node_lookup_14".node_id_2 = "DT_node_data_14".node_id), 
"XGB_Model_2_4" AS 
(SELECT "DT_Output_14"."KEY" AS "KEY", 0.0 AS "Score_1789-07-14T00:00:00.000000000", 0.0 AS "Score_1789-08-14T00:00:00.000000000", "DT_Output_14"."Score" AS "Score_1789-09-14T00:00:00.000000000" 
FROM "DT_Output_14"), 
"DT_node_lookup_15" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" < 2.450000047683716) THEN 1 ELSE 2 END AS node_id_2 
FROM iris_date_tgt AS "ADS"), 
"DT_node_data_15" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values"."threshold" AS FLOAT) AS "threshold", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Score" AS FLOAT) AS "Score" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS depth, 0 AS parent_id, 0.086244203150272 AS "Score" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS depth, 0 AS parent_id, -0.062520034611225 AS "Score" 
FROM (SELECT 0.0 AS "X") AS dummy_cte) AS "Values"), 
"DT_Output_15" AS 
(SELECT "DT_node_lookup_15"."KEY" AS "KEY", "DT_node_lookup_15".node_id_2 AS node_id_2, "DT_node_data_15".node_id AS node_id, "DT_node_data_15".feature AS feature, "DT_node_data_15"."threshold" AS "threshold", "DT_node_data_15".depth AS depth, "DT_node_data_15".parent_id AS parent_id, "DT_node_data_15"."Score" AS "Score" 
FROM "DT_node_lookup_15" LEFT OUTER JOIN "DT_node_data_15" ON "DT_node_lookup_15".node_id_2 = "DT_node_data_15".node_id), 
"XGB_Model_0_5" AS 
(SELECT "DT_Output_15"."KEY" AS "KEY", "DT_Output_15"."Score" AS "Score_1789-07-14T00:00:00.000000000", 0.0 AS "Score_1789-08-14T00:00:00.000000000", 0.0 AS "Score_1789-09-14T00:00:00.000000000" 
FROM "DT_Output_15"), 
"DT_node_lookup_16" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" < 5.050000190734863) THEN CASE WHEN ("ADS"."Feature_2" < 2.450000047683716) THEN 3 ELSE CASE WHEN ("ADS"."Feature_2" < 4.449999809265136) THEN 5 ELSE 6 END END ELSE 2 END AS node_id_2 
FROM iris_date_tgt AS "ADS"), 
"DT_node_data_16" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values"."threshold" AS FLOAT) AS "threshold", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Score" AS FLOAT) AS "Score" 
FROM (SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS depth, 0 AS parent_id, -0.061339724808931 AS "Score" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS depth, 1 AS parent_id, -0.059760507196188 AS "Score" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 3 AS depth, 4 AS parent_id, 0.08574416488409 AS "Score" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 3 AS depth, 4 AS parent_id, 0.047400150448084 AS "Score" 
FROM (SELECT 0.0 AS "X") AS dummy_cte) AS "Values"), 
"DT_Output_16" AS 
(SELECT "DT_node_lookup_16"."KEY" AS "KEY", "DT_node_lookup_16".node_id_2 AS node_id_2, "DT_node_data_16".node_id AS node_id, "DT_node_data_16".feature AS feature, "DT_node_data_16"."threshold" AS "threshold", "DT_node_data_16".depth AS depth, "DT_node_data_16".parent_id AS parent_id, "DT_node_data_16"."Score" AS "Score" 
FROM "DT_node_lookup_16" LEFT OUTER JOIN "DT_node_data_16" ON "DT_node_lookup_16".node_id_2 = "DT_node_data_16".node_id), 
"XGB_Model_1_5" AS 
(SELECT "DT_Output_16"."KEY" AS "KEY", 0.0 AS "Score_1789-07-14T00:00:00.000000000", "DT_Output_16"."Score" AS "Score_1789-08-14T00:00:00.000000000", 0.0 AS "Score_1789-09-14T00:00:00.000000000" 
FROM "DT_Output_16"), 
"DT_node_lookup_17" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_3" < 1.650000095367432) THEN CASE WHEN ("ADS"."Feature_2" < 4.149999618530274) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM iris_date_tgt AS "ADS"), 
"DT_node_data_17" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values"."threshold" AS FLOAT) AS "threshold", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Score" AS FLOAT) AS "Score" 
FROM (SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS depth, 0 AS parent_id, 0.084291018545628 AS "Score" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS depth, 1 AS parent_id, -0.061484564095736 AS "Score" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS depth, 1 AS parent_id, -0.032319195568562 AS "Score" 
FROM (SELECT 0.0 AS "X") AS dummy_cte) AS "Values"), 
"DT_Output_17" AS 
(SELECT "DT_node_lookup_17"."KEY" AS "KEY", "DT_node_lookup_17".node_id_2 AS node_id_2, "DT_node_data_17".node_id AS node_id, "DT_node_data_17".feature AS feature, "DT_node_data_17"."threshold" AS "threshold", "DT_node_data_17".depth AS depth, "DT_node_data_17".parent_id AS parent_id, "DT_node_data_17"."Score" AS "Score" 
FROM "DT_node_lookup_17" LEFT OUTER JOIN "DT_node_data_17" ON "DT_node_lookup_17".node_id_2 = "DT_node_data_17".node_id), 
"XGB_Model_2_5" AS 
(SELECT "DT_Output_17"."KEY" AS "KEY", 0.0 AS "Score_1789-07-14T00:00:00.000000000", 0.0 AS "Score_1789-08-14T00:00:00.000000000", "DT_Output_17"."Score" AS "Score_1789-09-14T00:00:00.000000000" 
FROM "DT_Output_17"), 
"DT_node_lookup_18" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" < 2.450000047683716) THEN 1 ELSE 2 END AS node_id_2 
FROM iris_date_tgt AS "ADS"), 
"DT_node_data_18" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values"."threshold" AS FLOAT) AS "threshold", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Score" AS FLOAT) AS "Score" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS depth, 0 AS parent_id, 0.080855645239353 AS "Score" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS depth, 0 AS parent_id, -0.06104201823473 AS "Score" 
FROM (SELECT 0.0 AS "X") AS dummy_cte) AS "Values"), 
"DT_Output_18" AS 
(SELECT "DT_node_lookup_18"."KEY" AS "KEY", "DT_node_lookup_18".node_id_2 AS node_id_2, "DT_node_data_18".node_id AS node_id, "DT_node_data_18".feature AS feature, "DT_node_data_18"."threshold" AS "threshold", "DT_node_data_18".depth AS depth, "DT_node_data_18".parent_id AS parent_id, "DT_node_data_18"."Score" AS "Score" 
FROM "DT_node_lookup_18" LEFT OUTER JOIN "DT_node_data_18" ON "DT_node_lookup_18".node_id_2 = "DT_node_data_18".node_id), 
"XGB_Model_0_6" AS 
(SELECT "DT_Output_18"."KEY" AS "KEY", "DT_Output_18"."Score" AS "Score_1789-07-14T00:00:00.000000000", 0.0 AS "Score_1789-08-14T00:00:00.000000000", 0.0 AS "Score_1789-09-14T00:00:00.000000000" 
FROM "DT_Output_18"), 
"DT_node_lookup_19" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_3" < 1.75) THEN CASE WHEN ("ADS"."Feature_2" < 2.450000047683716) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM iris_date_tgt AS "ADS"), 
"DT_node_data_19" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values"."threshold" AS FLOAT) AS "threshold", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Score" AS FLOAT) AS "Score" 
FROM (SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS depth, 0 AS parent_id, -0.055109769105911 AS "Score" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS depth, 1 AS parent_id, -0.058167140930891 AS "Score" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS depth, 1 AS parent_id, 0.070822440087795 AS "Score" 
FROM (SELECT 0.0 AS "X") AS dummy_cte) AS "Values"), 
"DT_Output_19" AS 
(SELECT "DT_node_lookup_19"."KEY" AS "KEY", "DT_node_lookup_19".node_id_2 AS node_id_2, "DT_node_data_19".node_id AS node_id, "DT_node_data_19".feature AS feature, "DT_node_data_19"."threshold" AS "threshold", "DT_node_data_19".depth AS depth, "DT_node_data_19".parent_id AS parent_id, "DT_node_data_19"."Score" AS "Score" 
FROM "DT_node_lookup_19" LEFT OUTER JOIN "DT_node_data_19" ON "DT_node_lookup_19".node_id_2 = "DT_node_data_19".node_id), 
"XGB_Model_1_6" AS 
(SELECT "DT_Output_19"."KEY" AS "KEY", 0.0 AS "Score_1789-07-14T00:00:00.000000000", "DT_Output_19"."Score" AS "Score_1789-08-14T00:00:00.000000000", 0.0 AS "Score_1789-09-14T00:00:00.000000000" 
FROM "DT_Output_19")
 SELECT "XGB_B1"."KEY", "XGB_B1"."Score_1789-07-14T00:00:00.000000000", "XGB_B1"."Score_1789-08-14T00:00:00.000000000", "XGB_B1"."Score_1789-09-14T00:00:00.000000000" 
FROM (SELECT "XGB_esu_1"."KEY" AS "KEY", "XGB_esu_1"."Score_1789-07-14T00:00:00.000000000" AS "Score_1789-07-14T00:00:00.000000000", "XGB_esu_1"."Score_1789-08-14T00:00:00.000000000" AS "Score_1789-08-14T00:00:00.000000000", "XGB_esu_1"."Score_1789-09-14T00:00:00.000000000" AS "Score_1789-09-14T00:00:00.000000000" 
FROM (SELECT "XGB_Model_1_3"."KEY" AS "KEY", "XGB_Model_1_3"."Score_1789-07-14T00:00:00.000000000" AS "Score_1789-07-14T00:00:00.000000000", "XGB_Model_1_3"."Score_1789-08-14T00:00:00.000000000" AS "Score_1789-08-14T00:00:00.000000000", "XGB_Model_1_3"."Score_1789-09-14T00:00:00.000000000" AS "Score_1789-09-14T00:00:00.000000000" 
FROM "XGB_Model_1_3" UNION ALL SELECT "XGB_Model_2_3"."KEY" AS "KEY", "XGB_Model_2_3"."Score_1789-07-14T00:00:00.000000000" AS "Score_1789-07-14T00:00:00.000000000", "XGB_Model_2_3"."Score_1789-08-14T00:00:00.000000000" AS "Score_1789-08-14T00:00:00.000000000", "XGB_Model_2_3"."Score_1789-09-14T00:00:00.000000000" AS "Score_1789-09-14T00:00:00.000000000" 
FROM "XGB_Model_2_3" UNION ALL SELECT "XGB_Model_0_4"."KEY" AS "KEY", "XGB_Model_0_4"."Score_1789-07-14T00:00:00.000000000" AS "Score_1789-07-14T00:00:00.000000000", "XGB_Model_0_4"."Score_1789-08-14T00:00:00.000000000" AS "Score_1789-08-14T00:00:00.000000000", "XGB_Model_0_4"."Score_1789-09-14T00:00:00.000000000" AS "Score_1789-09-14T00:00:00.000000000" 
FROM "XGB_Model_0_4" UNION ALL SELECT "XGB_Model_1_4"."KEY" AS "KEY", "XGB_Model_1_4"."Score_1789-07-14T00:00:00.000000000" AS "Score_1789-07-14T00:00:00.000000000", "XGB_Model_1_4"."Score_1789-08-14T00:00:00.000000000" AS "Score_1789-08-14T00:00:00.000000000", "XGB_Model_1_4"."Score_1789-09-14T00:00:00.000000000" AS "Score_1789-09-14T00:00:00.000000000" 
FROM "XGB_Model_1_4" UNION ALL SELECT "XGB_Model_2_4"."KEY" AS "KEY", "XGB_Model_2_4"."Score_1789-07-14T00:00:00.000000000" AS "Score_1789-07-14T00:00:00.000000000", "XGB_Model_2_4"."Score_1789-08-14T00:00:00.000000000" AS "Score_1789-08-14T00:00:00.000000000", "XGB_Model_2_4"."Score_1789-09-14T00:00:00.000000000" AS "Score_1789-09-14T00:00:00.000000000" 
FROM "XGB_Model_2_4" UNION ALL SELECT "XGB_Model_0_5"."KEY" AS "KEY", "XGB_Model_0_5"."Score_1789-07-14T00:00:00.000000000" AS "Score_1789-07-14T00:00:00.000000000", "XGB_Model_0_5"."Score_1789-08-14T00:00:00.000000000" AS "Score_1789-08-14T00:00:00.000000000", "XGB_Model_0_5"."Score_1789-09-14T00:00:00.000000000" AS "Score_1789-09-14T00:00:00.000000000" 
FROM "XGB_Model_0_5" UNION ALL SELECT "XGB_Model_1_5"."KEY" AS "KEY", "XGB_Model_1_5"."Score_1789-07-14T00:00:00.000000000" AS "Score_1789-07-14T00:00:00.000000000", "XGB_Model_1_5"."Score_1789-08-14T00:00:00.000000000" AS "Score_1789-08-14T00:00:00.000000000", "XGB_Model_1_5"."Score_1789-09-14T00:00:00.000000000" AS "Score_1789-09-14T00:00:00.000000000" 
FROM "XGB_Model_1_5" UNION ALL SELECT "XGB_Model_2_5"."KEY" AS "KEY", "XGB_Model_2_5"."Score_1789-07-14T00:00:00.000000000" AS "Score_1789-07-14T00:00:00.000000000", "XGB_Model_2_5"."Score_1789-08-14T00:00:00.000000000" AS "Score_1789-08-14T00:00:00.000000000", "XGB_Model_2_5"."Score_1789-09-14T00:00:00.000000000" AS "Score_1789-09-14T00:00:00.000000000" 
FROM "XGB_Model_2_5" UNION ALL SELECT "XGB_Model_0_6"."KEY" AS "KEY", "XGB_Model_0_6"."Score_1789-07-14T00:00:00.000000000" AS "Score_1789-07-14T00:00:00.000000000", "XGB_Model_0_6"."Score_1789-08-14T00:00:00.000000000" AS "Score_1789-08-14T00:00:00.000000000", "XGB_Model_0_6"."Score_1789-09-14T00:00:00.000000000" AS "Score_1789-09-14T00:00:00.000000000" 
FROM "XGB_Model_0_6" UNION ALL SELECT "XGB_Model_1_6"."KEY" AS "KEY", "XGB_Model_1_6"."Score_1789-07-14T00:00:00.000000000" AS "Score_1789-07-14T00:00:00.000000000", "XGB_Model_1_6"."Score_1789-08-14T00:00:00.000000000" AS "Score_1789-08-14T00:00:00.000000000", "XGB_Model_1_6"."Score_1789-09-14T00:00:00.000000000" AS "Score_1789-09-14T00:00:00.000000000" 
FROM "XGB_Model_1_6") AS "XGB_esu_1") AS "XGB_B1") AS "U"

-- Code For temporary table tmp_20180417050811_zt955m_xgb_ part 1/2. Create 


CREATE GLOBAL TEMPORARY TABLE tmp_20180417050811_zt955m_xgb_  (
	"KEY" BIGINT, 
	"Score_1789-07-14T00:00:00.000000000" FLOAT, 
	"Score_1789-08-14T00:00:00.000000000" FLOAT, 
	"Score_1789-09-14T00:00:00.000000000" FLOAT
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table tmp_20180417050811_zt955m_xgb_ part 2/2. Populate

INSERT INTO tmp_20180417050811_zt955m_xgb_ ("KEY", "Score_1789-07-14T00:00:00.000000000", "Score_1789-08-14T00:00:00.000000000", "Score_1789-09-14T00:00:00.000000000") SELECT "U"."KEY", "U"."Score_1789-07-14T00:00:00.000000000", "U"."Score_1789-08-14T00:00:00.000000000", "U"."Score_1789-09-14T00:00:00.000000000" 
FROM (WITH "DT_node_lookup_20" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" < 4.850000381469727) THEN 1 ELSE 2 END AS node_id_2 
FROM iris_date_tgt AS "ADS"), 
"DT_node_data_20" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values"."threshold" AS FLOAT) AS "threshold", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Score" AS FLOAT) AS "Score" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS depth, 0 AS parent_id, -0.054570376873016 AS "Score" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS depth, 0 AS parent_id, 0.074312560260296 AS "Score" 
FROM (SELECT 0.0 AS "X") AS dummy_cte) AS "Values"), 
"DT_Output_20" AS 
(SELECT "DT_node_lookup_20"."KEY" AS "KEY", "DT_node_lookup_20".node_id_2 AS node_id_2, "DT_node_data_20".node_id AS node_id, "DT_node_data_20".feature AS feature, "DT_node_data_20"."threshold" AS "threshold", "DT_node_data_20".depth AS depth, "DT_node_data_20".parent_id AS parent_id, "DT_node_data_20"."Score" AS "Score" 
FROM "DT_node_lookup_20" LEFT OUTER JOIN "DT_node_data_20" ON "DT_node_lookup_20".node_id_2 = "DT_node_data_20".node_id), 
"XGB_Model_2_6" AS 
(SELECT "DT_Output_20"."KEY" AS "KEY", 0.0 AS "Score_1789-07-14T00:00:00.000000000", 0.0 AS "Score_1789-08-14T00:00:00.000000000", "DT_Output_20"."Score" AS "Score_1789-09-14T00:00:00.000000000" 
FROM "DT_Output_20"), 
"DT_node_lookup_21" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" < 2.450000047683716) THEN 1 ELSE 2 END AS node_id_2 
FROM iris_date_tgt AS "ADS"), 
"DT_node_data_21" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values"."threshold" AS FLOAT) AS "threshold", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Score" AS FLOAT) AS "Score" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS depth, 0 AS parent_id, 0.076446481049061 AS "Score" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS depth, 0 AS parent_id, -0.059718526899815 AS "Score" 
FROM (SELECT 0.0 AS "X") AS dummy_cte) AS "Values"), 
"DT_Output_21" AS 
(SELECT "DT_node_lookup_21"."KEY" AS "KEY", "DT_node_lookup_21".node_id_2 AS node_id_2, "DT_node_data_21".node_id AS node_id, "DT_node_data_21".feature AS feature, "DT_node_data_21"."threshold" AS "threshold", "DT_node_data_21".depth AS depth, "DT_node_data_21".parent_id AS parent_id, "DT_node_data_21"."Score" AS "Score" 
FROM "DT_node_lookup_21" LEFT OUTER JOIN "DT_node_data_21" ON "DT_node_lookup_21".node_id_2 = "DT_node_data_21".node_id), 
"XGB_Model_0_7" AS 
(SELECT "DT_Output_21"."KEY" AS "KEY", "DT_Output_21"."Score" AS "Score_1789-07-14T00:00:00.000000000", 0.0 AS "Score_1789-08-14T00:00:00.000000000", 0.0 AS "Score_1789-09-14T00:00:00.000000000" 
FROM "DT_Output_21"), 
"DT_node_lookup_22" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" < 5.050000190734863) THEN CASE WHEN ("ADS"."Feature_2" < 2.450000047683716) THEN 3 ELSE CASE WHEN ("ADS"."Feature_2" < 4.449999809265136) THEN 5 ELSE 6 END END ELSE 2 END AS node_id_2 
FROM iris_date_tgt AS "ADS"), 
"DT_node_data_22" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values"."threshold" AS FLOAT) AS "threshold", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Score" AS FLOAT) AS "Score" 
FROM (SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS depth, 0 AS parent_id, -0.058732803910971 AS "Score" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS depth, 1 AS parent_id, -0.056685823947191 AS "Score" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 3 AS depth, 4 AS parent_id, 0.076070465147495 AS "Score" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 3 AS depth, 4 AS parent_id, 0.041899092495441 AS "Score" 
FROM (SELECT 0.0 AS "X") AS dummy_cte) AS "Values"), 
"DT_Output_22" AS 
(SELECT "DT_node_lookup_22"."KEY" AS "KEY", "DT_node_lookup_22".node_id_2 AS node_id_2, "DT_node_data_22".node_id AS node_id, "DT_node_data_22".feature AS feature, "DT_node_data_22"."threshold" AS "threshold", "DT_node_data_22".depth AS depth, "DT_node_data_22".parent_id AS parent_id, "DT_node_data_22"."Score" AS "Score" 
FROM "DT_node_lookup_22" LEFT OUTER JOIN "DT_node_data_22" ON "DT_node_lookup_22".node_id_2 = "DT_node_data_22".node_id), 
"XGB_Model_1_7" AS 
(SELECT "DT_Output_22"."KEY" AS "KEY", 0.0 AS "Score_1789-07-14T00:00:00.000000000", "DT_Output_22"."Score" AS "Score_1789-08-14T00:00:00.000000000", 0.0 AS "Score_1789-09-14T00:00:00.000000000" 
FROM "DT_Output_22"), 
"DT_node_lookup_23" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" < 4.75) THEN 1 ELSE CASE WHEN ("ADS"."Feature_2" < 5.350000381469727) THEN 3 ELSE 4 END END AS node_id_2 
FROM iris_date_tgt AS "ADS"), 
"DT_node_data_23" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values"."threshold" AS FLOAT) AS "threshold", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Score" AS FLOAT) AS "Score" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS depth, 0 AS parent_id, -0.056037653237581 AS "Score" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS depth, 2 AS parent_id, 0.048460129648447 AS "Score" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS depth, 2 AS parent_id, 0.077665708959103 AS "Score" 
FROM (SELECT 0.0 AS "X") AS dummy_cte) AS "Values"), 
"DT_Output_23" AS 
(SELECT "DT_node_lookup_23"."KEY" AS "KEY", "DT_node_lookup_23".node_id_2 AS node_id_2, "DT_node_data_23".node_id AS node_id, "DT_node_data_23".feature AS feature, "DT_node_data_23"."threshold" AS "threshold", "DT_node_data_23".depth AS depth, "DT_node_data_23".parent_id AS parent_id, "DT_node_data_23"."Score" AS "Score" 
FROM "DT_node_lookup_23" LEFT OUTER JOIN "DT_node_data_23" ON "DT_node_lookup_23".node_id_2 = "DT_node_data_23".node_id), 
"XGB_Model_2_7" AS 
(SELECT "DT_Output_23"."KEY" AS "KEY", 0.0 AS "Score_1789-07-14T00:00:00.000000000", 0.0 AS "Score_1789-08-14T00:00:00.000000000", "DT_Output_23"."Score" AS "Score_1789-09-14T00:00:00.000000000" 
FROM "DT_Output_23"), 
"DT_node_lookup_24" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" < 2.450000047683716) THEN 1 ELSE 2 END AS node_id_2 
FROM iris_date_tgt AS "ADS"), 
"DT_node_data_24" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values"."threshold" AS FLOAT) AS "threshold", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Score" AS FLOAT) AS "Score" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS depth, 0 AS parent_id, 0.072677813470364 AS "Score" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS depth, 0 AS parent_id, -0.058522518724203 AS "Score" 
FROM (SELECT 0.0 AS "X") AS dummy_cte) AS "Values"), 
"DT_Output_24" AS 
(SELECT "DT_node_lookup_24"."KEY" AS "KEY", "DT_node_lookup_24".node_id_2 AS node_id_2, "DT_node_data_24".node_id AS node_id, "DT_node_data_24".feature AS feature, "DT_node_data_24"."threshold" AS "threshold", "DT_node_data_24".depth AS depth, "DT_node_data_24".parent_id AS parent_id, "DT_node_data_24"."Score" AS "Score" 
FROM "DT_node_lookup_24" LEFT OUTER JOIN "DT_node_data_24" ON "DT_node_lookup_24".node_id_2 = "DT_node_data_24".node_id), 
"XGB_Model_0_8" AS 
(SELECT "DT_Output_24"."KEY" AS "KEY", "DT_Output_24"."Score" AS "Score_1789-07-14T00:00:00.000000000", 0.0 AS "Score_1789-08-14T00:00:00.000000000", 0.0 AS "Score_1789-09-14T00:00:00.000000000" 
FROM "DT_Output_24"), 
"DT_node_lookup_25" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_3" < 1.75) THEN CASE WHEN ("ADS"."Feature_2" < 2.450000047683716) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM iris_date_tgt AS "ADS"), 
"DT_node_data_25" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values"."threshold" AS FLOAT) AS "threshold", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Score" AS FLOAT) AS "Score" 
FROM (SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS depth, 0 AS parent_id, -0.052464742213488 AS "Score" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS depth, 1 AS parent_id, -0.055328156799078 AS "Score" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS depth, 1 AS parent_id, 0.063139446079731 AS "Score" 
FROM (SELECT 0.0 AS "X") AS dummy_cte) AS "Values"), 
"DT_Output_25" AS 
(SELECT "DT_node_lookup_25"."KEY" AS "KEY", "DT_node_lookup_25".node_id_2 AS node_id_2, "DT_node_data_25".node_id AS node_id, "DT_node_data_25".feature AS feature, "DT_node_data_25"."threshold" AS "threshold", "DT_node_data_25".depth AS depth, "DT_node_data_25".parent_id AS parent_id, "DT_node_data_25"."Score" AS "Score" 
FROM "DT_node_lookup_25" LEFT OUTER JOIN "DT_node_data_25" ON "DT_node_lookup_25".node_id_2 = "DT_node_data_25".node_id), 
"XGB_Model_1_8" AS 
(SELECT "DT_Output_25"."KEY" AS "KEY", 0.0 AS "Score_1789-07-14T00:00:00.000000000", "DT_Output_25"."Score" AS "Score_1789-08-14T00:00:00.000000000", 0.0 AS "Score_1789-09-14T00:00:00.000000000" 
FROM "DT_Output_25"), 
"DT_node_lookup_26" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_3" < 1.650000095367432) THEN CASE WHEN ("ADS"."Feature_3" < 1.25) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM iris_date_tgt AS "ADS"), 
"DT_node_data_26" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values"."threshold" AS FLOAT) AS "threshold", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Score" AS FLOAT) AS "Score" 
FROM (SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS depth, 0 AS parent_id, 0.071378834545612 AS "Score" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS depth, 1 AS parent_id, -0.05716422945261 AS "Score" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS depth, 1 AS parent_id, -0.029805526137352 AS "Score" 
FROM (SELECT 0.0 AS "X") AS dummy_cte) AS "Values"), 
"DT_Output_26" AS 
(SELECT "DT_node_lookup_26"."KEY" AS "KEY", "DT_node_lookup_26".node_id_2 AS node_id_2, "DT_node_data_26".node_id AS node_id, "DT_node_data_26".feature AS feature, "DT_node_data_26"."threshold" AS "threshold", "DT_node_data_26".depth AS depth, "DT_node_data_26".parent_id AS parent_id, "DT_node_data_26"."Score" AS "Score" 
FROM "DT_node_lookup_26" LEFT OUTER JOIN "DT_node_data_26" ON "DT_node_lookup_26".node_id_2 = "DT_node_data_26".node_id), 
"XGB_Model_2_8" AS 
(SELECT "DT_Output_26"."KEY" AS "KEY", 0.0 AS "Score_1789-07-14T00:00:00.000000000", 0.0 AS "Score_1789-08-14T00:00:00.000000000", "DT_Output_26"."Score" AS "Score_1789-09-14T00:00:00.000000000" 
FROM "DT_Output_26"), 
"DT_node_lookup_27" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" < 2.450000047683716) THEN 1 ELSE 2 END AS node_id_2 
FROM iris_date_tgt AS "ADS"), 
"DT_node_data_27" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values"."threshold" AS FLOAT) AS "threshold", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Score" AS FLOAT) AS "Score" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS depth, 0 AS parent_id, 0.069427780807018 AS "Score" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS depth, 0 AS parent_id, -0.057407755404711 AS "Score" 
FROM (SELECT 0.0 AS "X") AS dummy_cte) AS "Values"), 
"DT_Output_27" AS 
(SELECT "DT_node_lookup_27"."KEY" AS "KEY", "DT_node_lookup_27".node_id_2 AS node_id_2, "DT_node_data_27".node_id AS node_id, "DT_node_data_27".feature AS feature, "DT_node_data_27"."threshold" AS "threshold", "DT_node_data_27".depth AS depth, "DT_node_data_27".parent_id AS parent_id, "DT_node_data_27"."Score" AS "Score" 
FROM "DT_node_lookup_27" LEFT OUTER JOIN "DT_node_data_27" ON "DT_node_lookup_27".node_id_2 = "DT_node_data_27".node_id), 
"XGB_Model_0_9" AS 
(SELECT "DT_Output_27"."KEY" AS "KEY", "DT_Output_27"."Score" AS "Score_1789-07-14T00:00:00.000000000", 0.0 AS "Score_1789-08-14T00:00:00.000000000", 0.0 AS "Score_1789-09-14T00:00:00.000000000" 
FROM "DT_Output_27"), 
"DT_node_lookup_28" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" < 5.050000190734863) THEN CASE WHEN ("ADS"."Feature_2" < 3.150000095367432) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM iris_date_tgt AS "ADS"), 
"DT_node_data_28" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values"."threshold" AS FLOAT) AS "threshold", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Score" AS FLOAT) AS "Score" 
FROM (SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS depth, 0 AS parent_id, -0.056582361459732 AS "Score" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS depth, 1 AS parent_id, -0.048999171704054 AS "Score" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS depth, 1 AS parent_id, 0.054511453956366 AS "Score" 
FROM (SELECT 0.0 AS "X") AS dummy_cte) AS "Values"), 
"DT_Output_28" AS 
(SELECT "DT_node_lookup_28"."KEY" AS "KEY", "DT_node_lookup_28".node_id_2 AS node_id_2, "DT_node_data_28".node_id AS node_id, "DT_node_data_28".feature AS feature, "DT_node_data_28"."threshold" AS "threshold", "DT_node_data_28".depth AS depth, "DT_node_data_28".parent_id AS parent_id, "DT_node_data_28"."Score" AS "Score" 
FROM "DT_node_lookup_28" LEFT OUTER JOIN "DT_node_data_28" ON "DT_node_lookup_28".node_id_2 = "DT_node_data_28".node_id), 
"XGB_Model_1_9" AS 
(SELECT "DT_Output_28"."KEY" AS "KEY", 0.0 AS "Score_1789-07-14T00:00:00.000000000", "DT_Output_28"."Score" AS "Score_1789-08-14T00:00:00.000000000", 0.0 AS "Score_1789-09-14T00:00:00.000000000" 
FROM "DT_Output_28"), 
"DT_node_lookup_29" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" < 4.850000381469727) THEN 1 ELSE 2 END AS node_id_2 
FROM iris_date_tgt AS "ADS"), 
"DT_node_data_29" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values"."threshold" AS FLOAT) AS "threshold", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Score" AS FLOAT) AS "Score" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS depth, 0 AS parent_id, -0.050155963748693 AS "Score" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS depth, 0 AS parent_id, 0.063292860984802 AS "Score" 
FROM (SELECT 0.0 AS "X") AS dummy_cte) AS "Values"), 
"DT_Output_29" AS 
(SELECT "DT_node_lookup_29"."KEY" AS "KEY", "DT_node_lookup_29".node_id_2 AS node_id_2, "DT_node_data_29".node_id AS node_id, "DT_node_data_29".feature AS feature, "DT_node_data_29"."threshold" AS "threshold", "DT_node_data_29".depth AS depth, "DT_node_data_29".parent_id AS parent_id, "DT_node_data_29"."Score" AS "Score" 
FROM "DT_node_lookup_29" LEFT OUTER JOIN "DT_node_data_29" ON "DT_node_lookup_29".node_id_2 = "DT_node_data_29".node_id), 
"XGB_Model_2_9" AS 
(SELECT "DT_Output_29"."KEY" AS "KEY", 0.0 AS "Score_1789-07-14T00:00:00.000000000", 0.0 AS "Score_1789-08-14T00:00:00.000000000", "DT_Output_29"."Score" AS "Score_1789-09-14T00:00:00.000000000" 
FROM "DT_Output_29")
 SELECT "XGB_B2"."KEY", "XGB_B2"."Score_1789-07-14T00:00:00.000000000", "XGB_B2"."Score_1789-08-14T00:00:00.000000000", "XGB_B2"."Score_1789-09-14T00:00:00.000000000" 
FROM (SELECT "XGB_esu_2"."KEY" AS "KEY", "XGB_esu_2"."Score_1789-07-14T00:00:00.000000000" AS "Score_1789-07-14T00:00:00.000000000", "XGB_esu_2"."Score_1789-08-14T00:00:00.000000000" AS "Score_1789-08-14T00:00:00.000000000", "XGB_esu_2"."Score_1789-09-14T00:00:00.000000000" AS "Score_1789-09-14T00:00:00.000000000" 
FROM (SELECT "XGB_Model_2_6"."KEY" AS "KEY", "XGB_Model_2_6"."Score_1789-07-14T00:00:00.000000000" AS "Score_1789-07-14T00:00:00.000000000", "XGB_Model_2_6"."Score_1789-08-14T00:00:00.000000000" AS "Score_1789-08-14T00:00:00.000000000", "XGB_Model_2_6"."Score_1789-09-14T00:00:00.000000000" AS "Score_1789-09-14T00:00:00.000000000" 
FROM "XGB_Model_2_6" UNION ALL SELECT "XGB_Model_0_7"."KEY" AS "KEY", "XGB_Model_0_7"."Score_1789-07-14T00:00:00.000000000" AS "Score_1789-07-14T00:00:00.000000000", "XGB_Model_0_7"."Score_1789-08-14T00:00:00.000000000" AS "Score_1789-08-14T00:00:00.000000000", "XGB_Model_0_7"."Score_1789-09-14T00:00:00.000000000" AS "Score_1789-09-14T00:00:00.000000000" 
FROM "XGB_Model_0_7" UNION ALL SELECT "XGB_Model_1_7"."KEY" AS "KEY", "XGB_Model_1_7"."Score_1789-07-14T00:00:00.000000000" AS "Score_1789-07-14T00:00:00.000000000", "XGB_Model_1_7"."Score_1789-08-14T00:00:00.000000000" AS "Score_1789-08-14T00:00:00.000000000", "XGB_Model_1_7"."Score_1789-09-14T00:00:00.000000000" AS "Score_1789-09-14T00:00:00.000000000" 
FROM "XGB_Model_1_7" UNION ALL SELECT "XGB_Model_2_7"."KEY" AS "KEY", "XGB_Model_2_7"."Score_1789-07-14T00:00:00.000000000" AS "Score_1789-07-14T00:00:00.000000000", "XGB_Model_2_7"."Score_1789-08-14T00:00:00.000000000" AS "Score_1789-08-14T00:00:00.000000000", "XGB_Model_2_7"."Score_1789-09-14T00:00:00.000000000" AS "Score_1789-09-14T00:00:00.000000000" 
FROM "XGB_Model_2_7" UNION ALL SELECT "XGB_Model_0_8"."KEY" AS "KEY", "XGB_Model_0_8"."Score_1789-07-14T00:00:00.000000000" AS "Score_1789-07-14T00:00:00.000000000", "XGB_Model_0_8"."Score_1789-08-14T00:00:00.000000000" AS "Score_1789-08-14T00:00:00.000000000", "XGB_Model_0_8"."Score_1789-09-14T00:00:00.000000000" AS "Score_1789-09-14T00:00:00.000000000" 
FROM "XGB_Model_0_8" UNION ALL SELECT "XGB_Model_1_8"."KEY" AS "KEY", "XGB_Model_1_8"."Score_1789-07-14T00:00:00.000000000" AS "Score_1789-07-14T00:00:00.000000000", "XGB_Model_1_8"."Score_1789-08-14T00:00:00.000000000" AS "Score_1789-08-14T00:00:00.000000000", "XGB_Model_1_8"."Score_1789-09-14T00:00:00.000000000" AS "Score_1789-09-14T00:00:00.000000000" 
FROM "XGB_Model_1_8" UNION ALL SELECT "XGB_Model_2_8"."KEY" AS "KEY", "XGB_Model_2_8"."Score_1789-07-14T00:00:00.000000000" AS "Score_1789-07-14T00:00:00.000000000", "XGB_Model_2_8"."Score_1789-08-14T00:00:00.000000000" AS "Score_1789-08-14T00:00:00.000000000", "XGB_Model_2_8"."Score_1789-09-14T00:00:00.000000000" AS "Score_1789-09-14T00:00:00.000000000" 
FROM "XGB_Model_2_8" UNION ALL SELECT "XGB_Model_0_9"."KEY" AS "KEY", "XGB_Model_0_9"."Score_1789-07-14T00:00:00.000000000" AS "Score_1789-07-14T00:00:00.000000000", "XGB_Model_0_9"."Score_1789-08-14T00:00:00.000000000" AS "Score_1789-08-14T00:00:00.000000000", "XGB_Model_0_9"."Score_1789-09-14T00:00:00.000000000" AS "Score_1789-09-14T00:00:00.000000000" 
FROM "XGB_Model_0_9" UNION ALL SELECT "XGB_Model_1_9"."KEY" AS "KEY", "XGB_Model_1_9"."Score_1789-07-14T00:00:00.000000000" AS "Score_1789-07-14T00:00:00.000000000", "XGB_Model_1_9"."Score_1789-08-14T00:00:00.000000000" AS "Score_1789-08-14T00:00:00.000000000", "XGB_Model_1_9"."Score_1789-09-14T00:00:00.000000000" AS "Score_1789-09-14T00:00:00.000000000" 
FROM "XGB_Model_1_9" UNION ALL SELECT "XGB_Model_2_9"."KEY" AS "KEY", "XGB_Model_2_9"."Score_1789-07-14T00:00:00.000000000" AS "Score_1789-07-14T00:00:00.000000000", "XGB_Model_2_9"."Score_1789-08-14T00:00:00.000000000" AS "Score_1789-08-14T00:00:00.000000000", "XGB_Model_2_9"."Score_1789-09-14T00:00:00.000000000" AS "Score_1789-09-14T00:00:00.000000000" 
FROM "XGB_Model_2_9") AS "XGB_esu_2") AS "XGB_B2") AS "U"

-- Code For temporary table tmp_20180417050811_sbr20v_xgb_ part 1/2. Create 


CREATE GLOBAL TEMPORARY TABLE tmp_20180417050811_sbr20v_xgb_  (
	"KEY" BIGINT, 
	"Score_1789-07-14T00:00:00.000000000" FLOAT, 
	"Score_1789-08-14T00:00:00.000000000" FLOAT, 
	"Score_1789-09-14T00:00:00.000000000" FLOAT
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table tmp_20180417050811_sbr20v_xgb_ part 2/2. Populate

INSERT INTO tmp_20180417050811_sbr20v_xgb_ ("KEY", "Score_1789-07-14T00:00:00.000000000", "Score_1789-08-14T00:00:00.000000000", "Score_1789-09-14T00:00:00.000000000") SELECT "U"."KEY", "U"."Score_1789-07-14T00:00:00.000000000", "U"."Score_1789-08-14T00:00:00.000000000", "U"."Score_1789-09-14T00:00:00.000000000" 
FROM (WITH "DT_node_lookup_30" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" < 2.450000047683716) THEN 1 ELSE 2 END AS node_id_2 
FROM iris_date_tgt AS "ADS"), 
"DT_node_data_30" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values"."threshold" AS FLOAT) AS "threshold", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Score" AS FLOAT) AS "Score" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS depth, 0 AS parent_id, 0.066739909350872 AS "Score" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS depth, 0 AS parent_id, -0.056421548128128 AS "Score" 
FROM (SELECT 0.0 AS "X") AS dummy_cte) AS "Values"), 
"DT_Output_30" AS 
(SELECT "DT_node_lookup_30"."KEY" AS "KEY", "DT_node_lookup_30".node_id_2 AS node_id_2, "DT_node_data_30".node_id AS node_id, "DT_node_data_30".feature AS feature, "DT_node_data_30"."threshold" AS "threshold", "DT_node_data_30".depth AS depth, "DT_node_data_30".parent_id AS parent_id, "DT_node_data_30"."Score" AS "Score" 
FROM "DT_node_lookup_30" LEFT OUTER JOIN "DT_node_data_30" ON "DT_node_lookup_30".node_id_2 = "DT_node_data_30".node_id), 
"XGB_Model_0_10" AS 
(SELECT "DT_Output_30"."KEY" AS "KEY", "DT_Output_30"."Score" AS "Score_1789-07-14T00:00:00.000000000", 0.0 AS "Score_1789-08-14T00:00:00.000000000", 0.0 AS "Score_1789-09-14T00:00:00.000000000" 
FROM "DT_Output_30"), 
"DT_node_lookup_31" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_3" < 1.75) THEN CASE WHEN ("ADS"."Feature_2" < 3.400000095367432) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM iris_date_tgt AS "ADS"), 
"DT_node_data_31" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values"."threshold" AS FLOAT) AS "threshold", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Score" AS FLOAT) AS "Score" 
FROM (SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS depth, 0 AS parent_id, -0.050051528960466 AS "Score" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS depth, 1 AS parent_id, -0.038710292428732 AS "Score" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS depth, 1 AS parent_id, 0.055778689682484 AS "Score" 
FROM (SELECT 0.0 AS "X") AS dummy_cte) AS "Values"), 
"DT_Output_31" AS 
(SELECT "DT_node_lookup_31"."KEY" AS "KEY", "DT_node_lookup_31".node_id_2 AS node_id_2, "DT_node_data_31".node_id AS node_id, "DT_node_data_31".feature AS feature, "DT_node_data_31"."threshold" AS "threshold", "DT_node_data_31".depth AS depth, "DT_node_data_31".parent_id AS parent_id, "DT_node_data_31"."Score" AS "Score" 
FROM "DT_node_lookup_31" LEFT OUTER JOIN "DT_node_data_31" ON "DT_node_lookup_31".node_id_2 = "DT_node_data_31".node_id), 
"XGB_Model_1_10" AS 
(SELECT "DT_Output_31"."KEY" AS "KEY", 0.0 AS "Score_1789-07-14T00:00:00.000000000", "DT_Output_31"."Score" AS "Score_1789-08-14T00:00:00.000000000", 0.0 AS "Score_1789-09-14T00:00:00.000000000" 
FROM "DT_Output_31"), 
"DT_node_lookup_32" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_3" < 1.650000095367432) THEN CASE WHEN ("ADS"."Feature_2" < 3.950000047683716) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM iris_date_tgt AS "ADS"), 
"DT_node_data_32" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values"."threshold" AS FLOAT) AS "threshold", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Score" AS FLOAT) AS "Score" 
FROM (SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS depth, 0 AS parent_id, 0.065371662378311 AS "Score" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS depth, 1 AS parent_id, -0.054450150579214 AS "Score" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS depth, 1 AS parent_id, -0.030339056625962 AS "Score" 
FROM (SELECT 0.0 AS "X") AS dummy_cte) AS "Values"), 
"DT_Output_32" AS 
(SELECT "DT_node_lookup_32"."KEY" AS "KEY", "DT_node_lookup_32".node_id_2 AS node_id_2, "DT_node_data_32".node_id AS node_id, "DT_node_data_32".feature AS feature, "DT_node_data_32"."threshold" AS "threshold", "DT_node_data_32".depth AS depth, "DT_node_data_32".parent_id AS parent_id, "DT_node_data_32"."Score" AS "Score" 
FROM "DT_node_lookup_32" LEFT OUTER JOIN "DT_node_data_32" ON "DT_node_lookup_32".node_id_2 = "DT_node_data_32".node_id), 
"XGB_Model_2_10" AS 
(SELECT "DT_Output_32"."KEY" AS "KEY", 0.0 AS "Score_1789-07-14T00:00:00.000000000", 0.0 AS "Score_1789-08-14T00:00:00.000000000", "DT_Output_32"."Score" AS "Score_1789-09-14T00:00:00.000000000" 
FROM "DT_Output_32"), 
"DT_node_lookup_33" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" < 2.450000047683716) THEN 1 ELSE 2 END AS node_id_2 
FROM iris_date_tgt AS "ADS"), 
"DT_node_data_33" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values"."threshold" AS FLOAT) AS "threshold", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Score" AS FLOAT) AS "Score" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS depth, 0 AS parent_id, 0.064424209296703 AS "Score" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS depth, 0 AS parent_id, -0.055517431348562 AS "Score" 
FROM (SELECT 0.0 AS "X") AS dummy_cte) AS "Values"), 
"DT_Output_33" AS 
(SELECT "DT_node_lookup_33"."KEY" AS "KEY", "DT_node_lookup_33".node_id_2 AS node_id_2, "DT_node_data_33".node_id AS node_id, "DT_node_data_33".feature AS feature, "DT_node_data_33"."threshold" AS "threshold", "DT_node_data_33".depth AS depth, "DT_node_data_33".parent_id AS parent_id, "DT_node_data_33"."Score" AS "Score" 
FROM "DT_node_lookup_33" LEFT OUTER JOIN "DT_node_data_33" ON "DT_node_lookup_33".node_id_2 = "DT_node_data_33".node_id), 
"XGB_Model_0_11" AS 
(SELECT "DT_Output_33"."KEY" AS "KEY", "DT_Output_33"."Score" AS "Score_1789-07-14T00:00:00.000000000", 0.0 AS "Score_1789-08-14T00:00:00.000000000", 0.0 AS "Score_1789-09-14T00:00:00.000000000" 
FROM "DT_Output_33"), 
"DT_node_lookup_34" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" < 4.949999809265137) THEN CASE WHEN ("ADS"."Feature_2" < 3.400000095367432) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM iris_date_tgt AS "ADS"), 
"DT_node_data_34" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values"."threshold" AS FLOAT) AS "threshold", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Score" AS FLOAT) AS "Score" 
FROM (SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS depth, 0 AS parent_id, -0.048996780067682 AS "Score" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS depth, 1 AS parent_id, -0.037283387035131 AS "Score" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS depth, 1 AS parent_id, 0.053909119218588 AS "Score" 
FROM (SELECT 0.0 AS "X") AS dummy_cte) AS "Values"), 
"DT_Output_34" AS 
(SELECT "DT_node_lookup_34"."KEY" AS "KEY", "DT_node_lookup_34".node_id_2 AS node_id_2, "DT_node_data_34".node_id AS node_id, "DT_node_data_34".feature AS feature, "DT_node_data_34"."threshold" AS "threshold", "DT_node_data_34".depth AS depth, "DT_node_data_34".parent_id AS parent_id, "DT_node_data_34"."Score" AS "Score" 
FROM "DT_node_lookup_34" LEFT OUTER JOIN "DT_node_data_34" ON "DT_node_lookup_34".node_id_2 = "DT_node_data_34".node_id), 
"XGB_Model_1_11" AS 
(SELECT "DT_Output_34"."KEY" AS "KEY", 0.0 AS "Score_1789-07-14T00:00:00.000000000", "DT_Output_34"."Score" AS "Score_1789-08-14T00:00:00.000000000", 0.0 AS "Score_1789-09-14T00:00:00.000000000" 
FROM "DT_Output_34"), 
"DT_node_lookup_35" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" < 4.75) THEN 1 ELSE 2 END AS node_id_2 
FROM iris_date_tgt AS "ADS"), 
"DT_node_data_35" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values"."threshold" AS FLOAT) AS "threshold", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Score" AS FLOAT) AS "Score" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS depth, 0 AS parent_id, -0.050906468182802 AS "Score" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS depth, 0 AS parent_id, 0.054868143051863 AS "Score" 
FROM (SELECT 0.0 AS "X") AS dummy_cte) AS "Values"), 
"DT_Output_35" AS 
(SELECT "DT_node_lookup_35"."KEY" AS "KEY", "DT_node_lookup_35".node_id_2 AS node_id_2, "DT_node_data_35".node_id AS node_id, "DT_node_data_35".feature AS feature, "DT_node_data_35"."threshold" AS "threshold", "DT_node_data_35".depth AS depth, "DT_node_data_35".parent_id AS parent_id, "DT_node_data_35"."Score" AS "Score" 
FROM "DT_node_lookup_35" LEFT OUTER JOIN "DT_node_data_35" ON "DT_node_lookup_35".node_id_2 = "DT_node_data_35".node_id), 
"XGB_Model_2_11" AS 
(SELECT "DT_Output_35"."KEY" AS "KEY", 0.0 AS "Score_1789-07-14T00:00:00.000000000", 0.0 AS "Score_1789-08-14T00:00:00.000000000", "DT_Output_35"."Score" AS "Score_1789-09-14T00:00:00.000000000" 
FROM "DT_Output_35"), 
"DT_node_lookup_36" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" < 2.450000047683716) THEN 1 ELSE 2 END AS node_id_2 
FROM iris_date_tgt AS "ADS"), 
"DT_node_data_36" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values"."threshold" AS FLOAT) AS "threshold", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Score" AS FLOAT) AS "Score" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS depth, 0 AS parent_id, 0.062403876334429 AS "Score" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS depth, 0 AS parent_id, -0.054679747670889 AS "Score" 
FROM (SELECT 0.0 AS "X") AS dummy_cte) AS "Values"), 
"DT_Output_36" AS 
(SELECT "DT_node_lookup_36"."KEY" AS "KEY", "DT_node_lookup_36".node_id_2 AS node_id_2, "DT_node_data_36".node_id AS node_id, "DT_node_data_36".feature AS feature, "DT_node_data_36"."threshold" AS "threshold", "DT_node_data_36".depth AS depth, "DT_node_data_36".parent_id AS parent_id, "DT_node_data_36"."Score" AS "Score" 
FROM "DT_node_lookup_36" LEFT OUTER JOIN "DT_node_data_36" ON "DT_node_lookup_36".node_id_2 = "DT_node_data_36".node_id), 
"XGB_Model_0_12" AS 
(SELECT "DT_Output_36"."KEY" AS "KEY", "DT_Output_36"."Score" AS "Score_1789-07-14T00:00:00.000000000", 0.0 AS "Score_1789-08-14T00:00:00.000000000", 0.0 AS "Score_1789-09-14T00:00:00.000000000" 
FROM "DT_Output_36"), 
"DT_node_lookup_37" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" < 4.949999809265137) THEN CASE WHEN ("ADS"."Feature_2" < 3.599999904632568) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM iris_date_tgt AS "ADS"), 
"DT_node_data_37" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values"."threshold" AS FLOAT) AS "threshold", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Score" AS FLOAT) AS "Score" 
FROM (SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS depth, 0 AS parent_id, -0.047470416873693 AS "Score" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS depth, 1 AS parent_id, -0.028641605749726 AS "Score" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS depth, 1 AS parent_id, 0.050534307956696 AS "Score" 
FROM (SELECT 0.0 AS "X") AS dummy_cte) AS "Values"), 
"DT_Output_37" AS 
(SELECT "DT_node_lookup_37"."KEY" AS "KEY", "DT_node_lookup_37".node_id_2 AS node_id_2, "DT_node_data_37".node_id AS node_id, "DT_node_data_37".feature AS feature, "DT_node_data_37"."threshold" AS "threshold", "DT_node_data_37".depth AS depth, "DT_node_data_37".parent_id AS parent_id, "DT_node_data_37"."Score" AS "Score" 
FROM "DT_node_lookup_37" LEFT OUTER JOIN "DT_node_data_37" ON "DT_node_lookup_37".node_id_2 = "DT_node_data_37".node_id), 
"XGB_Model_1_12" AS 
(SELECT "DT_Output_37"."KEY" AS "KEY", 0.0 AS "Score_1789-07-14T00:00:00.000000000", "DT_Output_37"."Score" AS "Score_1789-08-14T00:00:00.000000000", 0.0 AS "Score_1789-09-14T00:00:00.000000000" 
FROM "DT_Output_37"), 
"DT_node_lookup_38" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_3" < 1.549999952316284) THEN 1 ELSE 2 END AS node_id_2 
FROM iris_date_tgt AS "ADS"), 
"DT_node_data_38" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values"."threshold" AS FLOAT) AS "threshold", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Score" AS FLOAT) AS "Score" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS depth, 0 AS parent_id, -0.045238643884659 AS "Score" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS depth, 0 AS parent_id, 0.057555686682463 AS "Score" 
FROM (SELECT 0.0 AS "X") AS dummy_cte) AS "Values"), 
"DT_Output_38" AS 
(SELECT "DT_node_lookup_38"."KEY" AS "KEY", "DT_node_lookup_38".node_id_2 AS node_id_2, "DT_node_data_38".node_id AS node_id, "DT_node_data_38".feature AS feature, "DT_node_data_38"."threshold" AS "threshold", "DT_node_data_38".depth AS depth, "DT_node_data_38".parent_id AS parent_id, "DT_node_data_38"."Score" AS "Score" 
FROM "DT_node_lookup_38" LEFT OUTER JOIN "DT_node_data_38" ON "DT_node_lookup_38".node_id_2 = "DT_node_data_38".node_id), 
"XGB_Model_2_12" AS 
(SELECT "DT_Output_38"."KEY" AS "KEY", 0.0 AS "Score_1789-07-14T00:00:00.000000000", 0.0 AS "Score_1789-08-14T00:00:00.000000000", "DT_Output_38"."Score" AS "Score_1789-09-14T00:00:00.000000000" 
FROM "DT_Output_38"), 
"DT_node_lookup_39" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" < 2.450000047683716) THEN 1 ELSE 2 END AS node_id_2 
FROM iris_date_tgt AS "ADS"), 
"DT_node_data_39" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values"."threshold" AS FLOAT) AS "threshold", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Score" AS FLOAT) AS "Score" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS depth, 0 AS parent_id, 0.060704063624144 AS "Score" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS depth, 0 AS parent_id, -0.053924795240164 AS "Score" 
FROM (SELECT 0.0 AS "X") AS dummy_cte) AS "Values"), 
"DT_Output_39" AS 
(SELECT "DT_node_lookup_39"."KEY" AS "KEY", "DT_node_lookup_39".node_id_2 AS node_id_2, "DT_node_data_39".node_id AS node_id, "DT_node_data_39".feature AS feature, "DT_node_data_39"."threshold" AS "threshold", "DT_node_data_39".depth AS depth, "DT_node_data_39".parent_id AS parent_id, "DT_node_data_39"."Score" AS "Score" 
FROM "DT_node_lookup_39" LEFT OUTER JOIN "DT_node_data_39" ON "DT_node_lookup_39".node_id_2 = "DT_node_data_39".node_id), 
"XGB_Model_0_13" AS 
(SELECT "DT_Output_39"."KEY" AS "KEY", "DT_Output_39"."Score" AS "Score_1789-07-14T00:00:00.000000000", 0.0 AS "Score_1789-08-14T00:00:00.000000000", 0.0 AS "Score_1789-09-14T00:00:00.000000000" 
FROM "DT_Output_39")
 SELECT "XGB_B3"."KEY", "XGB_B3"."Score_1789-07-14T00:00:00.000000000", "XGB_B3"."Score_1789-08-14T00:00:00.000000000", "XGB_B3"."Score_1789-09-14T00:00:00.000000000" 
FROM (SELECT "XGB_esu_3"."KEY" AS "KEY", "XGB_esu_3"."Score_1789-07-14T00:00:00.000000000" AS "Score_1789-07-14T00:00:00.000000000", "XGB_esu_3"."Score_1789-08-14T00:00:00.000000000" AS "Score_1789-08-14T00:00:00.000000000", "XGB_esu_3"."Score_1789-09-14T00:00:00.000000000" AS "Score_1789-09-14T00:00:00.000000000" 
FROM (SELECT "XGB_Model_0_10"."KEY" AS "KEY", "XGB_Model_0_10"."Score_1789-07-14T00:00:00.000000000" AS "Score_1789-07-14T00:00:00.000000000", "XGB_Model_0_10"."Score_1789-08-14T00:00:00.000000000" AS "Score_1789-08-14T00:00:00.000000000", "XGB_Model_0_10"."Score_1789-09-14T00:00:00.000000000" AS "Score_1789-09-14T00:00:00.000000000" 
FROM "XGB_Model_0_10" UNION ALL SELECT "XGB_Model_1_10"."KEY" AS "KEY", "XGB_Model_1_10"."Score_1789-07-14T00:00:00.000000000" AS "Score_1789-07-14T00:00:00.000000000", "XGB_Model_1_10"."Score_1789-08-14T00:00:00.000000000" AS "Score_1789-08-14T00:00:00.000000000", "XGB_Model_1_10"."Score_1789-09-14T00:00:00.000000000" AS "Score_1789-09-14T00:00:00.000000000" 
FROM "XGB_Model_1_10" UNION ALL SELECT "XGB_Model_2_10"."KEY" AS "KEY", "XGB_Model_2_10"."Score_1789-07-14T00:00:00.000000000" AS "Score_1789-07-14T00:00:00.000000000", "XGB_Model_2_10"."Score_1789-08-14T00:00:00.000000000" AS "Score_1789-08-14T00:00:00.000000000", "XGB_Model_2_10"."Score_1789-09-14T00:00:00.000000000" AS "Score_1789-09-14T00:00:00.000000000" 
FROM "XGB_Model_2_10" UNION ALL SELECT "XGB_Model_0_11"."KEY" AS "KEY", "XGB_Model_0_11"."Score_1789-07-14T00:00:00.000000000" AS "Score_1789-07-14T00:00:00.000000000", "XGB_Model_0_11"."Score_1789-08-14T00:00:00.000000000" AS "Score_1789-08-14T00:00:00.000000000", "XGB_Model_0_11"."Score_1789-09-14T00:00:00.000000000" AS "Score_1789-09-14T00:00:00.000000000" 
FROM "XGB_Model_0_11" UNION ALL SELECT "XGB_Model_1_11"."KEY" AS "KEY", "XGB_Model_1_11"."Score_1789-07-14T00:00:00.000000000" AS "Score_1789-07-14T00:00:00.000000000", "XGB_Model_1_11"."Score_1789-08-14T00:00:00.000000000" AS "Score_1789-08-14T00:00:00.000000000", "XGB_Model_1_11"."Score_1789-09-14T00:00:00.000000000" AS "Score_1789-09-14T00:00:00.000000000" 
FROM "XGB_Model_1_11" UNION ALL SELECT "XGB_Model_2_11"."KEY" AS "KEY", "XGB_Model_2_11"."Score_1789-07-14T00:00:00.000000000" AS "Score_1789-07-14T00:00:00.000000000", "XGB_Model_2_11"."Score_1789-08-14T00:00:00.000000000" AS "Score_1789-08-14T00:00:00.000000000", "XGB_Model_2_11"."Score_1789-09-14T00:00:00.000000000" AS "Score_1789-09-14T00:00:00.000000000" 
FROM "XGB_Model_2_11" UNION ALL SELECT "XGB_Model_0_12"."KEY" AS "KEY", "XGB_Model_0_12"."Score_1789-07-14T00:00:00.000000000" AS "Score_1789-07-14T00:00:00.000000000", "XGB_Model_0_12"."Score_1789-08-14T00:00:00.000000000" AS "Score_1789-08-14T00:00:00.000000000", "XGB_Model_0_12"."Score_1789-09-14T00:00:00.000000000" AS "Score_1789-09-14T00:00:00.000000000" 
FROM "XGB_Model_0_12" UNION ALL SELECT "XGB_Model_1_12"."KEY" AS "KEY", "XGB_Model_1_12"."Score_1789-07-14T00:00:00.000000000" AS "Score_1789-07-14T00:00:00.000000000", "XGB_Model_1_12"."Score_1789-08-14T00:00:00.000000000" AS "Score_1789-08-14T00:00:00.000000000", "XGB_Model_1_12"."Score_1789-09-14T00:00:00.000000000" AS "Score_1789-09-14T00:00:00.000000000" 
FROM "XGB_Model_1_12" UNION ALL SELECT "XGB_Model_2_12"."KEY" AS "KEY", "XGB_Model_2_12"."Score_1789-07-14T00:00:00.000000000" AS "Score_1789-07-14T00:00:00.000000000", "XGB_Model_2_12"."Score_1789-08-14T00:00:00.000000000" AS "Score_1789-08-14T00:00:00.000000000", "XGB_Model_2_12"."Score_1789-09-14T00:00:00.000000000" AS "Score_1789-09-14T00:00:00.000000000" 
FROM "XGB_Model_2_12" UNION ALL SELECT "XGB_Model_0_13"."KEY" AS "KEY", "XGB_Model_0_13"."Score_1789-07-14T00:00:00.000000000" AS "Score_1789-07-14T00:00:00.000000000", "XGB_Model_0_13"."Score_1789-08-14T00:00:00.000000000" AS "Score_1789-08-14T00:00:00.000000000", "XGB_Model_0_13"."Score_1789-09-14T00:00:00.000000000" AS "Score_1789-09-14T00:00:00.000000000" 
FROM "XGB_Model_0_13") AS "XGB_esu_3") AS "XGB_B3") AS "U"

-- Code For temporary table tmp_20180417050811_w3y088_xgb_ part 1/2. Create 


CREATE GLOBAL TEMPORARY TABLE tmp_20180417050811_w3y088_xgb_  (
	"KEY" BIGINT, 
	"Score_1789-07-14T00:00:00.000000000" FLOAT, 
	"Score_1789-08-14T00:00:00.000000000" FLOAT, 
	"Score_1789-09-14T00:00:00.000000000" FLOAT
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table tmp_20180417050811_w3y088_xgb_ part 2/2. Populate

INSERT INTO tmp_20180417050811_w3y088_xgb_ ("KEY", "Score_1789-07-14T00:00:00.000000000", "Score_1789-08-14T00:00:00.000000000", "Score_1789-09-14T00:00:00.000000000") SELECT "U"."KEY", "U"."Score_1789-07-14T00:00:00.000000000", "U"."Score_1789-08-14T00:00:00.000000000", "U"."Score_1789-09-14T00:00:00.000000000" 
FROM (WITH "DT_node_lookup_40" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_3" < 1.650000095367432) THEN CASE WHEN ("ADS"."Feature_3" < 1.049999952316284) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM iris_date_tgt AS "ADS"), 
"DT_node_data_40" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values"."threshold" AS FLOAT) AS "threshold", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Score" AS FLOAT) AS "Score" 
FROM (SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS depth, 0 AS parent_id, -0.042723026126623 AS "Score" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS depth, 1 AS parent_id, -0.024945070967078 AS "Score" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS depth, 1 AS parent_id, 0.05023230984807 AS "Score" 
FROM (SELECT 0.0 AS "X") AS dummy_cte) AS "Values"), 
"DT_Output_40" AS 
(SELECT "DT_node_lookup_40"."KEY" AS "KEY", "DT_node_lookup_40".node_id_2 AS node_id_2, "DT_node_data_40".node_id AS node_id, "DT_node_data_40".feature AS feature, "DT_node_data_40"."threshold" AS "threshold", "DT_node_data_40".depth AS depth, "DT_node_data_40".parent_id AS parent_id, "DT_node_data_40"."Score" AS "Score" 
FROM "DT_node_lookup_40" LEFT OUTER JOIN "DT_node_data_40" ON "DT_node_lookup_40".node_id_2 = "DT_node_data_40".node_id), 
"XGB_Model_1_13" AS 
(SELECT "DT_Output_40"."KEY" AS "KEY", 0.0 AS "Score_1789-07-14T00:00:00.000000000", "DT_Output_40"."Score" AS "Score_1789-08-14T00:00:00.000000000", 0.0 AS "Score_1789-09-14T00:00:00.000000000" 
FROM "DT_Output_40"), 
"DT_node_lookup_41" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_3" < 1.549999952316284) THEN 1 ELSE 2 END AS node_id_2 
FROM iris_date_tgt AS "ADS"), 
"DT_node_data_41" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values"."threshold" AS FLOAT) AS "threshold", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Score" AS FLOAT) AS "Score" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS depth, 0 AS parent_id, -0.043936803936958 AS "Score" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS depth, 0 AS parent_id, 0.055269259959459 AS "Score" 
FROM (SELECT 0.0 AS "X") AS dummy_cte) AS "Values"), 
"DT_Output_41" AS 
(SELECT "DT_node_lookup_41"."KEY" AS "KEY", "DT_node_lookup_41".node_id_2 AS node_id_2, "DT_node_data_41".node_id AS node_id, "DT_node_data_41".feature AS feature, "DT_node_data_41"."threshold" AS "threshold", "DT_node_data_41".depth AS depth, "DT_node_data_41".parent_id AS parent_id, "DT_node_data_41"."Score" AS "Score" 
FROM "DT_node_lookup_41" LEFT OUTER JOIN "DT_node_data_41" ON "DT_node_lookup_41".node_id_2 = "DT_node_data_41".node_id), 
"XGB_Model_2_13" AS 
(SELECT "DT_Output_41"."KEY" AS "KEY", 0.0 AS "Score_1789-07-14T00:00:00.000000000", 0.0 AS "Score_1789-08-14T00:00:00.000000000", "DT_Output_41"."Score" AS "Score_1789-09-14T00:00:00.000000000" 
FROM "DT_Output_41"), 
"DT_node_lookup_42" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" < 2.450000047683716) THEN 1 ELSE 2 END AS node_id_2 
FROM iris_date_tgt AS "ADS"), 
"DT_node_data_42" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values"."threshold" AS FLOAT) AS "threshold", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Score" AS FLOAT) AS "Score" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS depth, 0 AS parent_id, 0.059195335954428 AS "Score" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS depth, 0 AS parent_id, -0.053224503993988 AS "Score" 
FROM (SELECT 0.0 AS "X") AS dummy_cte) AS "Values"), 
"DT_Output_42" AS 
(SELECT "DT_node_lookup_42"."KEY" AS "KEY", "DT_node_lookup_42".node_id_2 AS node_id_2, "DT_node_data_42".node_id AS node_id, "DT_node_data_42".feature AS feature, "DT_node_data_42"."threshold" AS "threshold", "DT_node_data_42".depth AS depth, "DT_node_data_42".parent_id AS parent_id, "DT_node_data_42"."Score" AS "Score" 
FROM "DT_node_lookup_42" LEFT OUTER JOIN "DT_node_data_42" ON "DT_node_lookup_42".node_id_2 = "DT_node_data_42".node_id), 
"XGB_Model_0_14" AS 
(SELECT "DT_Output_42"."KEY" AS "KEY", "DT_Output_42"."Score" AS "Score_1789-07-14T00:00:00.000000000", 0.0 AS "Score_1789-08-14T00:00:00.000000000", 0.0 AS "Score_1789-09-14T00:00:00.000000000" 
FROM "DT_Output_42"), 
"DT_node_lookup_43" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_3" < 1.650000095367432) THEN CASE WHEN ("ADS"."Feature_2" < 3.849999904632568) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM iris_date_tgt AS "ADS"), 
"DT_node_data_43" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values"."threshold" AS FLOAT) AS "threshold", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Score" AS FLOAT) AS "Score" 
FROM (SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS depth, 0 AS parent_id, -0.040950134396553 AS "Score" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS depth, 1 AS parent_id, -0.020240729674697 AS "Score" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS depth, 1 AS parent_id, 0.046804752200842 AS "Score" 
FROM (SELECT 0.0 AS "X") AS dummy_cte) AS "Values"), 
"DT_Output_43" AS 
(SELECT "DT_node_lookup_43"."KEY" AS "KEY", "DT_node_lookup_43".node_id_2 AS node_id_2, "DT_node_data_43".node_id AS node_id, "DT_node_data_43".feature AS feature, "DT_node_data_43"."threshold" AS "threshold", "DT_node_data_43".depth AS depth, "DT_node_data_43".parent_id AS parent_id, "DT_node_data_43"."Score" AS "Score" 
FROM "DT_node_lookup_43" LEFT OUTER JOIN "DT_node_data_43" ON "DT_node_lookup_43".node_id_2 = "DT_node_data_43".node_id), 
"XGB_Model_1_14" AS 
(SELECT "DT_Output_43"."KEY" AS "KEY", 0.0 AS "Score_1789-07-14T00:00:00.000000000", "DT_Output_43"."Score" AS "Score_1789-08-14T00:00:00.000000000", 0.0 AS "Score_1789-09-14T00:00:00.000000000" 
FROM "DT_Output_43"), 
"DT_node_lookup_44" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" < 4.850000381469727) THEN 1 ELSE 2 END AS node_id_2 
FROM iris_date_tgt AS "ADS"), 
"DT_node_data_44" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values"."threshold" AS FLOAT) AS "threshold", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Score" AS FLOAT) AS "Score" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS depth, 0 AS parent_id, -0.044520419090986 AS "Score" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS depth, 0 AS parent_id, 0.052185293287039 AS "Score" 
FROM (SELECT 0.0 AS "X") AS dummy_cte) AS "Values"), 
"DT_Output_44" AS 
(SELECT "DT_node_lookup_44"."KEY" AS "KEY", "DT_node_lookup_44".node_id_2 AS node_id_2, "DT_node_data_44".node_id AS node_id, "DT_node_data_44".feature AS feature, "DT_node_data_44"."threshold" AS "threshold", "DT_node_data_44".depth AS depth, "DT_node_data_44".parent_id AS parent_id, "DT_node_data_44"."Score" AS "Score" 
FROM "DT_node_lookup_44" LEFT OUTER JOIN "DT_node_data_44" ON "DT_node_lookup_44".node_id_2 = "DT_node_data_44".node_id), 
"XGB_Model_2_14" AS 
(SELECT "DT_Output_44"."KEY" AS "KEY", 0.0 AS "Score_1789-07-14T00:00:00.000000000", 0.0 AS "Score_1789-08-14T00:00:00.000000000", "DT_Output_44"."Score" AS "Score_1789-09-14T00:00:00.000000000" 
FROM "DT_Output_44"), 
"DT_node_lookup_45" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" < 2.450000047683716) THEN 1 ELSE 2 END AS node_id_2 
FROM iris_date_tgt AS "ADS"), 
"DT_node_data_45" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values"."threshold" AS FLOAT) AS "threshold", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Score" AS FLOAT) AS "Score" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS depth, 0 AS parent_id, 0.057842213660479 AS "Score" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS depth, 0 AS parent_id, -0.052576269954443 AS "Score" 
FROM (SELECT 0.0 AS "X") AS dummy_cte) AS "Values"), 
"DT_Output_45" AS 
(SELECT "DT_node_lookup_45"."KEY" AS "KEY", "DT_node_lookup_45".node_id_2 AS node_id_2, "DT_node_data_45".node_id AS node_id, "DT_node_data_45".feature AS feature, "DT_node_data_45"."threshold" AS "threshold", "DT_node_data_45".depth AS depth, "DT_node_data_45".parent_id AS parent_id, "DT_node_data_45"."Score" AS "Score" 
FROM "DT_node_lookup_45" LEFT OUTER JOIN "DT_node_data_45" ON "DT_node_lookup_45".node_id_2 = "DT_node_data_45".node_id), 
"XGB_Model_0_15" AS 
(SELECT "DT_Output_45"."KEY" AS "KEY", "DT_Output_45"."Score" AS "Score_1789-07-14T00:00:00.000000000", 0.0 AS "Score_1789-08-14T00:00:00.000000000", 0.0 AS "Score_1789-09-14T00:00:00.000000000" 
FROM "DT_Output_45"), 
"DT_node_lookup_46" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" < 4.850000381469727) THEN CASE WHEN ("ADS"."Feature_0" < 5.550000190734863) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM iris_date_tgt AS "ADS"), 
"DT_node_data_46" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values"."threshold" AS FLOAT) AS "threshold", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Score" AS FLOAT) AS "Score" 
FROM (SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS depth, 0 AS parent_id, -0.034704126417637 AS "Score" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS depth, 1 AS parent_id, -0.01317691244185 AS "Score" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 2 AS depth, 1 AS parent_id, 0.051305860280991 AS "Score" 
FROM (SELECT 0.0 AS "X") AS dummy_cte) AS "Values"), 
"DT_Output_46" AS 
(SELECT "DT_node_lookup_46"."KEY" AS "KEY", "DT_node_lookup_46".node_id_2 AS node_id_2, "DT_node_data_46".node_id AS node_id, "DT_node_data_46".feature AS feature, "DT_node_data_46"."threshold" AS "threshold", "DT_node_data_46".depth AS depth, "DT_node_data_46".parent_id AS parent_id, "DT_node_data_46"."Score" AS "Score" 
FROM "DT_node_lookup_46" LEFT OUTER JOIN "DT_node_data_46" ON "DT_node_lookup_46".node_id_2 = "DT_node_data_46".node_id), 
"XGB_Model_1_15" AS 
(SELECT "DT_Output_46"."KEY" AS "KEY", 0.0 AS "Score_1789-07-14T00:00:00.000000000", "DT_Output_46"."Score" AS "Score_1789-08-14T00:00:00.000000000", 0.0 AS "Score_1789-09-14T00:00:00.000000000" 
FROM "DT_Output_46"), 
"DT_node_lookup_47" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" < 4.949999809265137) THEN 1 ELSE 2 END AS node_id_2 
FROM iris_date_tgt AS "ADS"), 
"DT_node_data_47" AS 
(SELECT "Values".node_id AS node_id, CAST("Values".feature AS FLOAT) AS feature, CAST("Values"."threshold" AS FLOAT) AS "threshold", CAST("Values".depth AS FLOAT) AS depth, CAST("Values".parent_id AS FLOAT) AS parent_id, CAST("Values"."Score" AS FLOAT) AS "Score" 
FROM (SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS depth, 0 AS parent_id, -0.037660364061594 AS "Score" 
FROM (SELECT 0.0 AS "X") AS dummy_cte UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS "threshold", 1 AS depth, 0 AS parent_id, 0.056827258318663 AS "Score" 
FROM (SELECT 0.0 AS "X") AS dummy_cte) AS "Values"), 
"DT_Output_47" AS 
(SELECT "DT_node_lookup_47"."KEY" AS "KEY", "DT_node_lookup_47".node_id_2 AS node_id_2, "DT_node_data_47".node_id AS node_id, "DT_node_data_47".feature AS feature, "DT_node_data_47"."threshold" AS "threshold", "DT_node_data_47".depth AS depth, "DT_node_data_47".parent_id AS parent_id, "DT_node_data_47"."Score" AS "Score" 
FROM "DT_node_lookup_47" LEFT OUTER JOIN "DT_node_data_47" ON "DT_node_lookup_47".node_id_2 = "DT_node_data_47".node_id), 
"XGB_Model_2_15" AS 
(SELECT "DT_Output_47"."KEY" AS "KEY", 0.0 AS "Score_1789-07-14T00:00:00.000000000", 0.0 AS "Score_1789-08-14T00:00:00.000000000", "DT_Output_47"."Score" AS "Score_1789-09-14T00:00:00.000000000" 
FROM "DT_Output_47")
 SELECT "XGB_B4"."KEY", "XGB_B4"."Score_1789-07-14T00:00:00.000000000", "XGB_B4"."Score_1789-08-14T00:00:00.000000000", "XGB_B4"."Score_1789-09-14T00:00:00.000000000" 
FROM (SELECT "XGB_esu_4"."KEY" AS "KEY", "XGB_esu_4"."Score_1789-07-14T00:00:00.000000000" AS "Score_1789-07-14T00:00:00.000000000", "XGB_esu_4"."Score_1789-08-14T00:00:00.000000000" AS "Score_1789-08-14T00:00:00.000000000", "XGB_esu_4"."Score_1789-09-14T00:00:00.000000000" AS "Score_1789-09-14T00:00:00.000000000" 
FROM (SELECT "XGB_Model_1_13"."KEY" AS "KEY", "XGB_Model_1_13"."Score_1789-07-14T00:00:00.000000000" AS "Score_1789-07-14T00:00:00.000000000", "XGB_Model_1_13"."Score_1789-08-14T00:00:00.000000000" AS "Score_1789-08-14T00:00:00.000000000", "XGB_Model_1_13"."Score_1789-09-14T00:00:00.000000000" AS "Score_1789-09-14T00:00:00.000000000" 
FROM "XGB_Model_1_13" UNION ALL SELECT "XGB_Model_2_13"."KEY" AS "KEY", "XGB_Model_2_13"."Score_1789-07-14T00:00:00.000000000" AS "Score_1789-07-14T00:00:00.000000000", "XGB_Model_2_13"."Score_1789-08-14T00:00:00.000000000" AS "Score_1789-08-14T00:00:00.000000000", "XGB_Model_2_13"."Score_1789-09-14T00:00:00.000000000" AS "Score_1789-09-14T00:00:00.000000000" 
FROM "XGB_Model_2_13" UNION ALL SELECT "XGB_Model_0_14"."KEY" AS "KEY", "XGB_Model_0_14"."Score_1789-07-14T00:00:00.000000000" AS "Score_1789-07-14T00:00:00.000000000", "XGB_Model_0_14"."Score_1789-08-14T00:00:00.000000000" AS "Score_1789-08-14T00:00:00.000000000", "XGB_Model_0_14"."Score_1789-09-14T00:00:00.000000000" AS "Score_1789-09-14T00:00:00.000000000" 
FROM "XGB_Model_0_14" UNION ALL SELECT "XGB_Model_1_14"."KEY" AS "KEY", "XGB_Model_1_14"."Score_1789-07-14T00:00:00.000000000" AS "Score_1789-07-14T00:00:00.000000000", "XGB_Model_1_14"."Score_1789-08-14T00:00:00.000000000" AS "Score_1789-08-14T00:00:00.000000000", "XGB_Model_1_14"."Score_1789-09-14T00:00:00.000000000" AS "Score_1789-09-14T00:00:00.000000000" 
FROM "XGB_Model_1_14" UNION ALL SELECT "XGB_Model_2_14"."KEY" AS "KEY", "XGB_Model_2_14"."Score_1789-07-14T00:00:00.000000000" AS "Score_1789-07-14T00:00:00.000000000", "XGB_Model_2_14"."Score_1789-08-14T00:00:00.000000000" AS "Score_1789-08-14T00:00:00.000000000", "XGB_Model_2_14"."Score_1789-09-14T00:00:00.000000000" AS "Score_1789-09-14T00:00:00.000000000" 
FROM "XGB_Model_2_14" UNION ALL SELECT "XGB_Model_0_15"."KEY" AS "KEY", "XGB_Model_0_15"."Score_1789-07-14T00:00:00.000000000" AS "Score_1789-07-14T00:00:00.000000000", "XGB_Model_0_15"."Score_1789-08-14T00:00:00.000000000" AS "Score_1789-08-14T00:00:00.000000000", "XGB_Model_0_15"."Score_1789-09-14T00:00:00.000000000" AS "Score_1789-09-14T00:00:00.000000000" 
FROM "XGB_Model_0_15" UNION ALL SELECT "XGB_Model_1_15"."KEY" AS "KEY", "XGB_Model_1_15"."Score_1789-07-14T00:00:00.000000000" AS "Score_1789-07-14T00:00:00.000000000", "XGB_Model_1_15"."Score_1789-08-14T00:00:00.000000000" AS "Score_1789-08-14T00:00:00.000000000", "XGB_Model_1_15"."Score_1789-09-14T00:00:00.000000000" AS "Score_1789-09-14T00:00:00.000000000" 
FROM "XGB_Model_1_15" UNION ALL SELECT "XGB_Model_2_15"."KEY" AS "KEY", "XGB_Model_2_15"."Score_1789-07-14T00:00:00.000000000" AS "Score_1789-07-14T00:00:00.000000000", "XGB_Model_2_15"."Score_1789-08-14T00:00:00.000000000" AS "Score_1789-08-14T00:00:00.000000000", "XGB_Model_2_15"."Score_1789-09-14T00:00:00.000000000" AS "Score_1789-09-14T00:00:00.000000000" 
FROM "XGB_Model_2_15") AS "XGB_esu_4") AS "XGB_B4") AS "U"

-- Code For temporary table tmp_20180417050811_jh1f6f_xgb_ part 1/2. Create 


CREATE GLOBAL TEMPORARY TABLE tmp_20180417050811_jh1f6f_xgb_  (
	"KEY" BIGINT, 
	"Score_1789-07-14T00:00:00.000000000" FLOAT, 
	"Score_1789-08-14T00:00:00.000000000" FLOAT, 
	"Score_1789-09-14T00:00:00.000000000" FLOAT
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table tmp_20180417050811_jh1f6f_xgb_ part 2/2. Populate

INSERT INTO tmp_20180417050811_jh1f6f_xgb_ ("KEY", "Score_1789-07-14T00:00:00.000000000", "Score_1789-08-14T00:00:00.000000000", "Score_1789-09-14T00:00:00.000000000") SELECT "U"."KEY", "U"."Score_1789-07-14T00:00:00.000000000", "U"."Score_1789-08-14T00:00:00.000000000", "U"."Score_1789-09-14T00:00:00.000000000" 
FROM (SELECT "XGB_Union"."KEY", "XGB_Union"."Score_1789-07-14T00:00:00.000000000", "XGB_Union"."Score_1789-08-14T00:00:00.000000000", "XGB_Union"."Score_1789-09-14T00:00:00.000000000" 
FROM (SELECT "XGB_EnsembleUnion"."KEY" AS "KEY", "XGB_EnsembleUnion"."Score_1789-07-14T00:00:00.000000000" AS "Score_1789-07-14T00:00:00.000000000", "XGB_EnsembleUnion"."Score_1789-08-14T00:00:00.000000000" AS "Score_1789-08-14T00:00:00.000000000", "XGB_EnsembleUnion"."Score_1789-09-14T00:00:00.000000000" AS "Score_1789-09-14T00:00:00.000000000" 
FROM (SELECT "XGB_B0"."KEY" AS "KEY", "XGB_B0"."Score_1789-07-14T00:00:00.000000000" AS "Score_1789-07-14T00:00:00.000000000", "XGB_B0"."Score_1789-08-14T00:00:00.000000000" AS "Score_1789-08-14T00:00:00.000000000", "XGB_B0"."Score_1789-09-14T00:00:00.000000000" AS "Score_1789-09-14T00:00:00.000000000" 
FROM tmp_20180417050811_tx7ddq_xgb_ AS "XGB_B0" UNION ALL SELECT "XGB_B1"."KEY" AS "KEY", "XGB_B1"."Score_1789-07-14T00:00:00.000000000" AS "Score_1789-07-14T00:00:00.000000000", "XGB_B1"."Score_1789-08-14T00:00:00.000000000" AS "Score_1789-08-14T00:00:00.000000000", "XGB_B1"."Score_1789-09-14T00:00:00.000000000" AS "Score_1789-09-14T00:00:00.000000000" 
FROM tmp_20180417050811_yf0hfn_xgb_ AS "XGB_B1" UNION ALL SELECT "XGB_B2"."KEY" AS "KEY", "XGB_B2"."Score_1789-07-14T00:00:00.000000000" AS "Score_1789-07-14T00:00:00.000000000", "XGB_B2"."Score_1789-08-14T00:00:00.000000000" AS "Score_1789-08-14T00:00:00.000000000", "XGB_B2"."Score_1789-09-14T00:00:00.000000000" AS "Score_1789-09-14T00:00:00.000000000" 
FROM tmp_20180417050811_zt955m_xgb_ AS "XGB_B2" UNION ALL SELECT "XGB_B3"."KEY" AS "KEY", "XGB_B3"."Score_1789-07-14T00:00:00.000000000" AS "Score_1789-07-14T00:00:00.000000000", "XGB_B3"."Score_1789-08-14T00:00:00.000000000" AS "Score_1789-08-14T00:00:00.000000000", "XGB_B3"."Score_1789-09-14T00:00:00.000000000" AS "Score_1789-09-14T00:00:00.000000000" 
FROM tmp_20180417050811_sbr20v_xgb_ AS "XGB_B3" UNION ALL SELECT "XGB_B4"."KEY" AS "KEY", "XGB_B4"."Score_1789-07-14T00:00:00.000000000" AS "Score_1789-07-14T00:00:00.000000000", "XGB_B4"."Score_1789-08-14T00:00:00.000000000" AS "Score_1789-08-14T00:00:00.000000000", "XGB_B4"."Score_1789-09-14T00:00:00.000000000" AS "Score_1789-09-14T00:00:00.000000000" 
FROM tmp_20180417050811_w3y088_xgb_ AS "XGB_B4") AS "XGB_EnsembleUnion") AS "XGB_Union") AS "U"

-- Code For temporary table tmp_20180417050811_yy2yij_xgb_ part 1/2. Create 


CREATE GLOBAL TEMPORARY TABLE tmp_20180417050811_yy2yij_xgb_  (
	"KEY" BIGINT, 
	"Score_1789-07-14T00:00:00.000000000" FLOAT, 
	"Score_1789-08-14T00:00:00.000000000" FLOAT, 
	"Score_1789-09-14T00:00:00.000000000" FLOAT
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table tmp_20180417050811_yy2yij_xgb_ part 2/2. Populate

INSERT INTO tmp_20180417050811_yy2yij_xgb_ ("KEY", "Score_1789-07-14T00:00:00.000000000", "Score_1789-08-14T00:00:00.000000000", "Score_1789-09-14T00:00:00.000000000") SELECT "U"."KEY", "U"."Score_1789-07-14T00:00:00.000000000", "U"."Score_1789-08-14T00:00:00.000000000", "U"."Score_1789-09-14T00:00:00.000000000" 
FROM (SELECT "XGB_sum"."KEY", "XGB_sum"."Score_1789-07-14T00:00:00.000000000", "XGB_sum"."Score_1789-08-14T00:00:00.000000000", "XGB_sum"."Score_1789-09-14T00:00:00.000000000" 
FROM (SELECT "T"."KEY" AS "KEY", CAST("T"."Score_1789-07-14T00:00:00.000000000" AS FLOAT) AS "Score_1789-07-14T00:00:00.000000000", CAST("T"."Score_1789-08-14T00:00:00.000000000" AS FLOAT) AS "Score_1789-08-14T00:00:00.000000000", CAST("T"."Score_1789-09-14T00:00:00.000000000" AS FLOAT) AS "Score_1789-09-14T00:00:00.000000000" 
FROM (SELECT "XGB_Union"."KEY" AS "KEY", sum("XGB_Union"."Score_1789-07-14T00:00:00.000000000") AS "Score_1789-07-14T00:00:00.000000000", sum("XGB_Union"."Score_1789-08-14T00:00:00.000000000") AS "Score_1789-08-14T00:00:00.000000000", sum("XGB_Union"."Score_1789-09-14T00:00:00.000000000") AS "Score_1789-09-14T00:00:00.000000000" 
FROM tmp_20180417050811_jh1f6f_xgb_ AS "XGB_Union" GROUP BY "XGB_Union"."KEY") AS "T") AS "XGB_sum") AS "U"

-- Model deployment code

WITH orig_cte AS 
(SELECT "XGB_sum"."KEY" AS "KEY", "XGB_sum"."Score_1789-07-14T00:00:00.000000000" AS "Score_1789-07-14T00:00:00.000000000", "XGB_sum"."Score_1789-08-14T00:00:00.000000000" AS "Score_1789-08-14T00:00:00.000000000", "XGB_sum"."Score_1789-09-14T00:00:00.000000000" AS "Score_1789-09-14T00:00:00.000000000", CAST(NULL AS FLOAT) AS "Proba_1789-07-14T00:00:00.000000000", CAST(NULL AS FLOAT) AS "Proba_1789-08-14T00:00:00.000000000", CAST(NULL AS FLOAT) AS "Proba_1789-09-14T00:00:00.000000000", CAST(NULL AS FLOAT) AS "LogProba_1789-07-14T00:00:00.000000000", CAST(NULL AS FLOAT) AS "LogProba_1789-08-14T00:00:00.000000000", CAST(NULL AS FLOAT) AS "LogProba_1789-09-14T00:00:00.000000000", CAST(NULL AS BIGINT) AS "Decision", CAST(NULL AS FLOAT) AS "DecisionProba" 
FROM tmp_20180417050811_yy2yij_xgb_ AS "XGB_sum"), 
score_class_union AS 
(SELECT scu."KEY_u" AS "KEY_u", scu."class" AS "class", scu."LogProba" AS "LogProba", scu."Proba" AS "Proba", scu."Score" AS "Score" 
FROM (SELECT orig_cte."KEY" AS "KEY_u", '1789-07-14T00:00:00.000000000' AS "class", orig_cte."LogProba_1789-07-14T00:00:00.000000000" AS "LogProba", orig_cte."Proba_1789-07-14T00:00:00.000000000" AS "Proba", orig_cte."Score_1789-07-14T00:00:00.000000000" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", '1789-08-14T00:00:00.000000000' AS "class", orig_cte."LogProba_1789-08-14T00:00:00.000000000" AS "LogProba", orig_cte."Proba_1789-08-14T00:00:00.000000000" AS "Proba", orig_cte."Score_1789-08-14T00:00:00.000000000" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", '1789-09-14T00:00:00.000000000' AS "class", orig_cte."LogProba_1789-09-14T00:00:00.000000000" AS "LogProba", orig_cte."Proba_1789-09-14T00:00:00.000000000" AS "Proba", orig_cte."Score_1789-09-14T00:00:00.000000000" AS "Score" 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte."KEY" AS "KEY", orig_cte."Score_1789-07-14T00:00:00.000000000" AS "Score_1789-07-14T00:00:00.000000000", orig_cte."Score_1789-08-14T00:00:00.000000000" AS "Score_1789-08-14T00:00:00.000000000", orig_cte."Score_1789-09-14T00:00:00.000000000" AS "Score_1789-09-14T00:00:00.000000000", orig_cte."Proba_1789-07-14T00:00:00.000000000" AS "Proba_1789-07-14T00:00:00.000000000", orig_cte."Proba_1789-08-14T00:00:00.000000000" AS "Proba_1789-08-14T00:00:00.000000000", orig_cte."Proba_1789-09-14T00:00:00.000000000" AS "Proba_1789-09-14T00:00:00.000000000", orig_cte."LogProba_1789-07-14T00:00:00.000000000" AS "LogProba_1789-07-14T00:00:00.000000000", orig_cte."LogProba_1789-08-14T00:00:00.000000000" AS "LogProba_1789-08-14T00:00:00.000000000", orig_cte."LogProba_1789-09-14T00:00:00.000000000" AS "LogProba_1789-09-14T00:00:00.000000000", orig_cte."Decision" AS "Decision", orig_cte."DecisionProba" AS "DecisionProba", max_select."KEY_m" AS "KEY_m", max_select."max_Score" AS "max_Score" 
FROM orig_cte LEFT OUTER JOIN (SELECT score_class_union."KEY_u" AS "KEY_m", max(score_class_union."Score") AS "max_Score" 
FROM score_class_union GROUP BY score_class_union."KEY_u") AS max_select ON orig_cte."KEY" = max_select."KEY_m"), 
score_soft_max_deltas AS 
(SELECT score_max."KEY" AS "KEY", score_max."Score_1789-07-14T00:00:00.000000000" AS "Score_1789-07-14T00:00:00.000000000", score_max."Score_1789-08-14T00:00:00.000000000" AS "Score_1789-08-14T00:00:00.000000000", score_max."Score_1789-09-14T00:00:00.000000000" AS "Score_1789-09-14T00:00:00.000000000", score_max."Proba_1789-07-14T00:00:00.000000000" AS "Proba_1789-07-14T00:00:00.000000000", score_max."Proba_1789-08-14T00:00:00.000000000" AS "Proba_1789-08-14T00:00:00.000000000", score_max."Proba_1789-09-14T00:00:00.000000000" AS "Proba_1789-09-14T00:00:00.000000000", score_max."LogProba_1789-07-14T00:00:00.000000000" AS "LogProba_1789-07-14T00:00:00.000000000", score_max."LogProba_1789-08-14T00:00:00.000000000" AS "LogProba_1789-08-14T00:00:00.000000000", score_max."LogProba_1789-09-14T00:00:00.000000000" AS "LogProba_1789-09-14T00:00:00.000000000", score_max."Decision" AS "Decision", score_max."DecisionProba" AS "DecisionProba", score_max."KEY_m" AS "KEY_m", score_max."max_Score" AS "max_Score", exp(score_max."Score_1789-07-14T00:00:00.000000000" - score_max."max_Score") AS "exp_delta_Score_1789-07-14T00:00:00.000000000", exp(score_max."Score_1789-08-14T00:00:00.000000000" - score_max."max_Score") AS "exp_delta_Score_1789-08-14T00:00:00.000000000", exp(score_max."Score_1789-09-14T00:00:00.000000000" - score_max."max_Score") AS "exp_delta_Score_1789-09-14T00:00:00.000000000" 
FROM score_max), 
score_class_union_soft AS 
(SELECT soft_scu."KEY" AS "KEY", soft_scu."class" AS "class", soft_scu."exp_delta_Score" AS "exp_delta_Score" 
FROM (SELECT score_soft_max_deltas."KEY" AS "KEY", '1789-07-14T00:00:00.000000000' AS "class", score_soft_max_deltas."exp_delta_Score_1789-07-14T00:00:00.000000000" AS "exp_delta_Score" 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas."KEY" AS "KEY", '1789-08-14T00:00:00.000000000' AS "class", score_soft_max_deltas."exp_delta_Score_1789-08-14T00:00:00.000000000" AS "exp_delta_Score" 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas."KEY" AS "KEY", '1789-09-14T00:00:00.000000000' AS "class", score_soft_max_deltas."exp_delta_Score_1789-09-14T00:00:00.000000000" AS "exp_delta_Score" 
FROM score_soft_max_deltas) AS soft_scu), 
score_soft_max AS 
(SELECT score_soft_max_deltas."KEY" AS "KEY", score_soft_max_deltas."Score_1789-07-14T00:00:00.000000000" AS "Score_1789-07-14T00:00:00.000000000", score_soft_max_deltas."Score_1789-08-14T00:00:00.000000000" AS "Score_1789-08-14T00:00:00.000000000", score_soft_max_deltas."Score_1789-09-14T00:00:00.000000000" AS "Score_1789-09-14T00:00:00.000000000", score_soft_max_deltas."Proba_1789-07-14T00:00:00.000000000" AS "Proba_1789-07-14T00:00:00.000000000", score_soft_max_deltas."Proba_1789-08-14T00:00:00.000000000" AS "Proba_1789-08-14T00:00:00.000000000", score_soft_max_deltas."Proba_1789-09-14T00:00:00.000000000" AS "Proba_1789-09-14T00:00:00.000000000", score_soft_max_deltas."LogProba_1789-07-14T00:00:00.000000000" AS "LogProba_1789-07-14T00:00:00.000000000", score_soft_max_deltas."LogProba_1789-08-14T00:00:00.000000000" AS "LogProba_1789-08-14T00:00:00.000000000", score_soft_max_deltas."LogProba_1789-09-14T00:00:00.000000000" AS "LogProba_1789-09-14T00:00:00.000000000", score_soft_max_deltas."Decision" AS "Decision", score_soft_max_deltas."DecisionProba" AS "DecisionProba", score_soft_max_deltas."KEY_m" AS "KEY_m", score_soft_max_deltas."max_Score" AS "max_Score", score_soft_max_deltas."exp_delta_Score_1789-07-14T00:00:00.000000000" AS "exp_delta_Score_1789-07-14T00:00:00.000000000", score_soft_max_deltas."exp_delta_Score_1789-08-14T00:00:00.000000000" AS "exp_delta_Score_1789-08-14T00:00:00.000000000", score_soft_max_deltas."exp_delta_Score_1789-09-14T00:00:00.000000000" AS "exp_delta_Score_1789-09-14T00:00:00.000000000", sum_exp_t."KEY_sum" AS "KEY_sum", sum_exp_t."sum_ExpDeltaScore" AS "sum_ExpDeltaScore" 
FROM score_soft_max_deltas LEFT OUTER JOIN (SELECT score_class_union_soft."KEY" AS "KEY_sum", sum(score_class_union_soft."exp_delta_Score") AS "sum_ExpDeltaScore" 
FROM score_class_union_soft GROUP BY score_class_union_soft."KEY") AS sum_exp_t ON score_soft_max_deltas."KEY" = sum_exp_t."KEY_sum"), 
union_with_max AS 
(SELECT score_class_union."KEY_u" AS "KEY_u", score_class_union."class" AS "class", score_class_union."LogProba" AS "LogProba", score_class_union."Proba" AS "Proba", score_class_union."Score" AS "Score", score_soft_max."KEY" AS "KEY", score_soft_max."Score_1789-07-14T00:00:00.000000000" AS "Score_1789-07-14T00:00:00.000000000", score_soft_max."Score_1789-08-14T00:00:00.000000000" AS "Score_1789-08-14T00:00:00.000000000", score_soft_max."Score_1789-09-14T00:00:00.000000000" AS "Score_1789-09-14T00:00:00.000000000", score_soft_max."Proba_1789-07-14T00:00:00.000000000" AS "Proba_1789-07-14T00:00:00.000000000", score_soft_max."Proba_1789-08-14T00:00:00.000000000" AS "Proba_1789-08-14T00:00:00.000000000", score_soft_max."Proba_1789-09-14T00:00:00.000000000" AS "Proba_1789-09-14T00:00:00.000000000", score_soft_max."LogProba_1789-07-14T00:00:00.000000000" AS "LogProba_1789-07-14T00:00:00.000000000", score_soft_max."LogProba_1789-08-14T00:00:00.000000000" AS "LogProba_1789-08-14T00:00:00.000000000", score_soft_max."LogProba_1789-09-14T00:00:00.000000000" AS "LogProba_1789-09-14T00:00:00.000000000", score_soft_max."Decision" AS "Decision", score_soft_max."DecisionProba" AS "DecisionProba", score_soft_max."KEY_m" AS "KEY_m", score_soft_max."max_Score" AS "max_Score", score_soft_max."exp_delta_Score_1789-07-14T00:00:00.000000000" AS "exp_delta_Score_1789-07-14T00:00:00.000000000", score_soft_max."exp_delta_Score_1789-08-14T00:00:00.000000000" AS "exp_delta_Score_1789-08-14T00:00:00.000000000", score_soft_max."exp_delta_Score_1789-09-14T00:00:00.000000000" AS "exp_delta_Score_1789-09-14T00:00:00.000000000", score_soft_max."KEY_sum" AS "KEY_sum", score_soft_max."sum_ExpDeltaScore" AS "sum_ExpDeltaScore" 
FROM score_class_union LEFT OUTER JOIN score_soft_max ON score_class_union."KEY_u" = score_soft_max."KEY"), 
arg_max_cte AS 
(SELECT score_soft_max."KEY" AS "KEY", score_soft_max."Score_1789-07-14T00:00:00.000000000" AS "Score_1789-07-14T00:00:00.000000000", score_soft_max."Score_1789-08-14T00:00:00.000000000" AS "Score_1789-08-14T00:00:00.000000000", score_soft_max."Score_1789-09-14T00:00:00.000000000" AS "Score_1789-09-14T00:00:00.000000000", score_soft_max."Proba_1789-07-14T00:00:00.000000000" AS "Proba_1789-07-14T00:00:00.000000000", score_soft_max."Proba_1789-08-14T00:00:00.000000000" AS "Proba_1789-08-14T00:00:00.000000000", score_soft_max."Proba_1789-09-14T00:00:00.000000000" AS "Proba_1789-09-14T00:00:00.000000000", score_soft_max."LogProba_1789-07-14T00:00:00.000000000" AS "LogProba_1789-07-14T00:00:00.000000000", score_soft_max."LogProba_1789-08-14T00:00:00.000000000" AS "LogProba_1789-08-14T00:00:00.000000000", score_soft_max."LogProba_1789-09-14T00:00:00.000000000" AS "LogProba_1789-09-14T00:00:00.000000000", score_soft_max."Decision" AS "Decision", score_soft_max."DecisionProba" AS "DecisionProba", score_soft_max."KEY_m" AS "KEY_m", score_soft_max."max_Score" AS "max_Score", score_soft_max."exp_delta_Score_1789-07-14T00:00:00.000000000" AS "exp_delta_Score_1789-07-14T00:00:00.000000000", score_soft_max."exp_delta_Score_1789-08-14T00:00:00.000000000" AS "exp_delta_Score_1789-08-14T00:00:00.000000000", score_soft_max."exp_delta_Score_1789-09-14T00:00:00.000000000" AS "exp_delta_Score_1789-09-14T00:00:00.000000000", score_soft_max."KEY_sum" AS "KEY_sum", score_soft_max."sum_ExpDeltaScore" AS "sum_ExpDeltaScore", "arg_max_t_Score"."KEY_Score" AS "KEY_Score", "arg_max_t_Score"."arg_max_Score" AS "arg_max_Score", soft_max_comp."KEY_softmax" AS "KEY_softmax", soft_max_comp."SoftProba_1789-07-14T00:00:00.000000000" AS "SoftProba_1789-07-14T00:00:00.000000000", soft_max_comp."SoftProba_1789-08-14T00:00:00.000000000" AS "SoftProba_1789-08-14T00:00:00.000000000", soft_max_comp."SoftProba_1789-09-14T00:00:00.000000000" AS "SoftProba_1789-09-14T00:00:00.000000000" 
FROM score_soft_max LEFT OUTER JOIN (SELECT union_with_max."KEY" AS "KEY_Score", min(union_with_max."class") AS "arg_max_Score" 
FROM union_with_max 
WHERE union_with_max."Score" >= union_with_max."max_Score" GROUP BY union_with_max."KEY") AS "arg_max_t_Score" ON score_soft_max."KEY" = "arg_max_t_Score"."KEY_Score" LEFT OUTER JOIN (SELECT score_soft_max."KEY" AS "KEY_softmax", score_soft_max."exp_delta_Score_1789-07-14T00:00:00.000000000" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_1789-07-14T00:00:00.000000000", score_soft_max."exp_delta_Score_1789-08-14T00:00:00.000000000" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_1789-08-14T00:00:00.000000000", score_soft_max."exp_delta_Score_1789-09-14T00:00:00.000000000" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_1789-09-14T00:00:00.000000000" 
FROM score_soft_max) AS soft_max_comp ON soft_max_comp."KEY_softmax" = "arg_max_t_Score"."KEY_Score")
 SELECT arg_max_cte."KEY" AS "KEY", CAST(NULL AS FLOAT) AS "Score_1789-07-14T00:00:00.000000000", CAST(NULL AS FLOAT) AS "Score_1789-08-14T00:00:00.000000000", CAST(NULL AS FLOAT) AS "Score_1789-09-14T00:00:00.000000000", arg_max_cte."SoftProba_1789-07-14T00:00:00.000000000" AS "Proba_1789-07-14T00:00:00.000000000", arg_max_cte."SoftProba_1789-08-14T00:00:00.000000000" AS "Proba_1789-08-14T00:00:00.000000000", arg_max_cte."SoftProba_1789-09-14T00:00:00.000000000" AS "Proba_1789-09-14T00:00:00.000000000", CASE WHEN (arg_max_cte."SoftProba_1789-07-14T00:00:00.000000000" IS NULL OR arg_max_cte."SoftProba_1789-07-14T00:00:00.000000000" > 0.0) THEN ln(arg_max_cte."SoftProba_1789-07-14T00:00:00.000000000") ELSE -1.79769313486231e+308 END AS "LogProba_1789-07-14T00:00:00.000000000", CASE WHEN (arg_max_cte."SoftProba_1789-08-14T00:00:00.000000000" IS NULL OR arg_max_cte."SoftProba_1789-08-14T00:00:00.000000000" > 0.0) THEN ln(arg_max_cte."SoftProba_1789-08-14T00:00:00.000000000") ELSE -1.79769313486231e+308 END AS "LogProba_1789-08-14T00:00:00.000000000", CASE WHEN (arg_max_cte."SoftProba_1789-09-14T00:00:00.000000000" IS NULL OR arg_max_cte."SoftProba_1789-09-14T00:00:00.000000000" > 0.0) THEN ln(arg_max_cte."SoftProba_1789-09-14T00:00:00.000000000") ELSE -1.79769313486231e+308 END AS "LogProba_1789-09-14T00:00:00.000000000", arg_max_cte."arg_max_Score" AS "Decision", greatest(arg_max_cte."SoftProba_1789-07-14T00:00:00.000000000", arg_max_cte."SoftProba_1789-08-14T00:00:00.000000000", arg_max_cte."SoftProba_1789-09-14T00:00:00.000000000") AS "DecisionProba" 
FROM arg_max_cte