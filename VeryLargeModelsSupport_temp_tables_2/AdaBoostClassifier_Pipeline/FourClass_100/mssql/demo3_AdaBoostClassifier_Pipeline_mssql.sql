-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2018

-- Model : AdaBoostClassifier_Pipeline
-- Dataset : FourClass_100
-- Database : mssql


-- This SQL code can contain one or more statements, to be executed in the order they appear in this file.



-- Code For temporary table ##TMP_20180508181542_CODEGEN_QSGVA8_ADS_imp_1_OUT part 1. Create 


CREATE TABLE ##TMP_20180508181542_CODEGEN_QSGVA8_ADS_imp_1_OUT (
	[KEY] BIGINT NULL, 
	impter_2 FLOAT(53) NULL, 
	impter_3 FLOAT(53) NULL, 
	impter_4 FLOAT(53) NULL, 
	impter_5 FLOAT(53) NULL, 
	impter_6 FLOAT(53) NULL, 
	impter_7 FLOAT(53) NULL, 
	impter_8 FLOAT(53) NULL, 
	impter_9 FLOAT(53) NULL, 
	impter_10 FLOAT(53) NULL, 
	impter_11 FLOAT(53) NULL, 
	impter_12 FLOAT(53) NULL, 
	impter_13 FLOAT(53) NULL, 
	impter_14 FLOAT(53) NULL, 
	impter_15 FLOAT(53) NULL, 
	impter_16 FLOAT(53) NULL, 
	impter_17 FLOAT(53) NULL, 
	impter_18 FLOAT(53) NULL, 
	impter_19 FLOAT(53) NULL, 
	impter_20 FLOAT(53) NULL, 
	impter_21 FLOAT(53) NULL, 
	impter_22 FLOAT(53) NULL, 
	impter_23 FLOAT(53) NULL, 
	impter_24 FLOAT(53) NULL, 
	impter_25 FLOAT(53) NULL, 
	impter_26 FLOAT(53) NULL, 
	impter_27 FLOAT(53) NULL, 
	impter_28 FLOAT(53) NULL, 
	impter_29 FLOAT(53) NULL, 
	impter_30 FLOAT(53) NULL, 
	impter_31 FLOAT(53) NULL, 
	impter_32 FLOAT(53) NULL, 
	impter_33 FLOAT(53) NULL, 
	impter_34 FLOAT(53) NULL, 
	impter_35 FLOAT(53) NULL, 
	impter_36 FLOAT(53) NULL, 
	impter_37 FLOAT(53) NULL, 
	impter_38 FLOAT(53) NULL, 
	impter_39 FLOAT(53) NULL, 
	impter_40 FLOAT(53) NULL, 
	impter_41 FLOAT(53) NULL, 
	impter_42 FLOAT(53) NULL, 
	impter_43 FLOAT(53) NULL, 
	impter_44 FLOAT(53) NULL, 
	impter_45 FLOAT(53) NULL, 
	impter_46 FLOAT(53) NULL, 
	impter_47 FLOAT(53) NULL, 
	impter_48 FLOAT(53) NULL, 
	impter_49 FLOAT(53) NULL, 
	impter_50 FLOAT(53) NULL, 
	impter_51 FLOAT(53) NULL, 
	impter_52 FLOAT(53) NULL, 
	impter_53 FLOAT(53) NULL, 
	impter_54 FLOAT(53) NULL, 
	impter_55 FLOAT(53) NULL, 
	impter_56 FLOAT(53) NULL, 
	impter_57 FLOAT(53) NULL, 
	impter_58 FLOAT(53) NULL, 
	impter_59 FLOAT(53) NULL, 
	impter_60 FLOAT(53) NULL, 
	impter_61 FLOAT(53) NULL, 
	impter_62 FLOAT(53) NULL, 
	impter_63 FLOAT(53) NULL, 
	impter_64 FLOAT(53) NULL, 
	impter_65 FLOAT(53) NULL, 
	impter_66 FLOAT(53) NULL, 
	impter_67 FLOAT(53) NULL, 
	impter_68 FLOAT(53) NULL, 
	impter_69 FLOAT(53) NULL, 
	impter_70 FLOAT(53) NULL, 
	impter_71 FLOAT(53) NULL, 
	impter_72 FLOAT(53) NULL, 
	impter_73 FLOAT(53) NULL, 
	impter_74 FLOAT(53) NULL, 
	impter_75 FLOAT(53) NULL, 
	impter_76 FLOAT(53) NULL, 
	impter_77 FLOAT(53) NULL, 
	impter_78 FLOAT(53) NULL, 
	impter_79 FLOAT(53) NULL, 
	impter_80 FLOAT(53) NULL, 
	impter_81 FLOAT(53) NULL, 
	impter_82 FLOAT(53) NULL, 
	impter_83 FLOAT(53) NULL, 
	impter_84 FLOAT(53) NULL, 
	impter_85 FLOAT(53) NULL, 
	impter_86 FLOAT(53) NULL, 
	impter_87 FLOAT(53) NULL, 
	impter_88 FLOAT(53) NULL, 
	impter_89 FLOAT(53) NULL, 
	impter_90 FLOAT(53) NULL, 
	impter_91 FLOAT(53) NULL, 
	impter_92 FLOAT(53) NULL, 
	impter_93 FLOAT(53) NULL, 
	impter_94 FLOAT(53) NULL, 
	impter_95 FLOAT(53) NULL, 
	impter_96 FLOAT(53) NULL, 
	impter_97 FLOAT(53) NULL, 
	impter_98 FLOAT(53) NULL, 
	impter_99 FLOAT(53) NULL, 
	impter_100 FLOAT(53) NULL, 
	impter_101 FLOAT(53) NULL
)



-- Code For temporary table ##TMP_20180508181542_CODEGEN_QSGVA8_ADS_imp_1_OUT part 2. Populate

INSERT INTO ##TMP_20180508181542_CODEGEN_QSGVA8_ADS_imp_1_OUT ([KEY], impter_2, impter_3, impter_4, impter_5, impter_6, impter_7, impter_8, impter_9, impter_10, impter_11, impter_12, impter_13, impter_14, impter_15, impter_16, impter_17, impter_18, impter_19, impter_20, impter_21, impter_22, impter_23, impter_24, impter_25, impter_26, impter_27, impter_28, impter_29, impter_30, impter_31, impter_32, impter_33, impter_34, impter_35, impter_36, impter_37, impter_38, impter_39, impter_40, impter_41, impter_42, impter_43, impter_44, impter_45, impter_46, impter_47, impter_48, impter_49, impter_50, impter_51, impter_52, impter_53, impter_54, impter_55, impter_56, impter_57, impter_58, impter_59, impter_60, impter_61, impter_62, impter_63, impter_64, impter_65, impter_66, impter_67, impter_68, impter_69, impter_70, impter_71, impter_72, impter_73, impter_74, impter_75, impter_76, impter_77, impter_78, impter_79, impter_80, impter_81, impter_82, impter_83, impter_84, impter_85, impter_86, impter_87, impter_88, impter_89, impter_90, impter_91, impter_92, impter_93, impter_94, impter_95, impter_96, impter_97, impter_98, impter_99, impter_100, impter_101) SELECT [ADS_imp_1_OUT].[KEY], [ADS_imp_1_OUT].impter_2, [ADS_imp_1_OUT].impter_3, [ADS_imp_1_OUT].impter_4, [ADS_imp_1_OUT].impter_5, [ADS_imp_1_OUT].impter_6, [ADS_imp_1_OUT].impter_7, [ADS_imp_1_OUT].impter_8, [ADS_imp_1_OUT].impter_9, [ADS_imp_1_OUT].impter_10, [ADS_imp_1_OUT].impter_11, [ADS_imp_1_OUT].impter_12, [ADS_imp_1_OUT].impter_13, [ADS_imp_1_OUT].impter_14, [ADS_imp_1_OUT].impter_15, [ADS_imp_1_OUT].impter_16, [ADS_imp_1_OUT].impter_17, [ADS_imp_1_OUT].impter_18, [ADS_imp_1_OUT].impter_19, [ADS_imp_1_OUT].impter_20, [ADS_imp_1_OUT].impter_21, [ADS_imp_1_OUT].impter_22, [ADS_imp_1_OUT].impter_23, [ADS_imp_1_OUT].impter_24, [ADS_imp_1_OUT].impter_25, [ADS_imp_1_OUT].impter_26, [ADS_imp_1_OUT].impter_27, [ADS_imp_1_OUT].impter_28, [ADS_imp_1_OUT].impter_29, [ADS_imp_1_OUT].impter_30, [ADS_imp_1_OUT].impter_31, [ADS_imp_1_OUT].impter_32, [ADS_imp_1_OUT].impter_33, [ADS_imp_1_OUT].impter_34, [ADS_imp_1_OUT].impter_35, [ADS_imp_1_OUT].impter_36, [ADS_imp_1_OUT].impter_37, [ADS_imp_1_OUT].impter_38, [ADS_imp_1_OUT].impter_39, [ADS_imp_1_OUT].impter_40, [ADS_imp_1_OUT].impter_41, [ADS_imp_1_OUT].impter_42, [ADS_imp_1_OUT].impter_43, [ADS_imp_1_OUT].impter_44, [ADS_imp_1_OUT].impter_45, [ADS_imp_1_OUT].impter_46, [ADS_imp_1_OUT].impter_47, [ADS_imp_1_OUT].impter_48, [ADS_imp_1_OUT].impter_49, [ADS_imp_1_OUT].impter_50, [ADS_imp_1_OUT].impter_51, [ADS_imp_1_OUT].impter_52, [ADS_imp_1_OUT].impter_53, [ADS_imp_1_OUT].impter_54, [ADS_imp_1_OUT].impter_55, [ADS_imp_1_OUT].impter_56, [ADS_imp_1_OUT].impter_57, [ADS_imp_1_OUT].impter_58, [ADS_imp_1_OUT].impter_59, [ADS_imp_1_OUT].impter_60, [ADS_imp_1_OUT].impter_61, [ADS_imp_1_OUT].impter_62, [ADS_imp_1_OUT].impter_63, [ADS_imp_1_OUT].impter_64, [ADS_imp_1_OUT].impter_65, [ADS_imp_1_OUT].impter_66, [ADS_imp_1_OUT].impter_67, [ADS_imp_1_OUT].impter_68, [ADS_imp_1_OUT].impter_69, [ADS_imp_1_OUT].impter_70, [ADS_imp_1_OUT].impter_71, [ADS_imp_1_OUT].impter_72, [ADS_imp_1_OUT].impter_73, [ADS_imp_1_OUT].impter_74, [ADS_imp_1_OUT].impter_75, [ADS_imp_1_OUT].impter_76, [ADS_imp_1_OUT].impter_77, [ADS_imp_1_OUT].impter_78, [ADS_imp_1_OUT].impter_79, [ADS_imp_1_OUT].impter_80, [ADS_imp_1_OUT].impter_81, [ADS_imp_1_OUT].impter_82, [ADS_imp_1_OUT].impter_83, [ADS_imp_1_OUT].impter_84, [ADS_imp_1_OUT].impter_85, [ADS_imp_1_OUT].impter_86, [ADS_imp_1_OUT].impter_87, [ADS_imp_1_OUT].impter_88, [ADS_imp_1_OUT].impter_89, [ADS_imp_1_OUT].impter_90, [ADS_imp_1_OUT].impter_91, [ADS_imp_1_OUT].impter_92, [ADS_imp_1_OUT].impter_93, [ADS_imp_1_OUT].impter_94, [ADS_imp_1_OUT].impter_95, [ADS_imp_1_OUT].impter_96, [ADS_imp_1_OUT].impter_97, [ADS_imp_1_OUT].impter_98, [ADS_imp_1_OUT].impter_99, [ADS_imp_1_OUT].impter_100, [ADS_imp_1_OUT].impter_101 
FROM (SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_0] IS NULL) THEN -0.0014807007689716506 ELSE [ADS].[Feature_0] END AS impter_2, CASE WHEN ([ADS].[Feature_1] IS NULL) THEN 0.08599214990681354 ELSE [ADS].[Feature_1] END AS impter_3, CASE WHEN ([ADS].[Feature_2] IS NULL) THEN -0.006358164676411468 ELSE [ADS].[Feature_2] END AS impter_4, CASE WHEN ([ADS].[Feature_3] IS NULL) THEN -0.024301807422776375 ELSE [ADS].[Feature_3] END AS impter_5, CASE WHEN ([ADS].[Feature_4] IS NULL) THEN 0.015786548044298444 ELSE [ADS].[Feature_4] END AS impter_6, CASE WHEN ([ADS].[Feature_5] IS NULL) THEN -0.13959329445651672 ELSE [ADS].[Feature_5] END AS impter_7, CASE WHEN ([ADS].[Feature_6] IS NULL) THEN -0.06476745048019888 ELSE [ADS].[Feature_6] END AS impter_8, CASE WHEN ([ADS].[Feature_7] IS NULL) THEN 0.025579810774090658 ELSE [ADS].[Feature_7] END AS impter_9, CASE WHEN ([ADS].[Feature_8] IS NULL) THEN -0.03173937260977112 ELSE [ADS].[Feature_8] END AS impter_10, CASE WHEN ([ADS].[Feature_9] IS NULL) THEN -0.1518141420862488 ELSE [ADS].[Feature_9] END AS impter_11, CASE WHEN ([ADS].[Feature_10] IS NULL) THEN -0.13244576558492482 ELSE [ADS].[Feature_10] END AS impter_12, CASE WHEN ([ADS].[Feature_11] IS NULL) THEN 0.044172679762224144 ELSE [ADS].[Feature_11] END AS impter_13, CASE WHEN ([ADS].[Feature_12] IS NULL) THEN 0.010165946719810038 ELSE [ADS].[Feature_12] END AS impter_14, CASE WHEN ([ADS].[Feature_13] IS NULL) THEN -0.03645872019103299 ELSE [ADS].[Feature_13] END AS impter_15, CASE WHEN ([ADS].[Feature_14] IS NULL) THEN 0.06491512811593925 ELSE [ADS].[Feature_14] END AS impter_16, CASE WHEN ([ADS].[Feature_15] IS NULL) THEN -0.11930146867074032 ELSE [ADS].[Feature_15] END AS impter_17, CASE WHEN ([ADS].[Feature_16] IS NULL) THEN 0.007738863934852773 ELSE [ADS].[Feature_16] END AS impter_18, CASE WHEN ([ADS].[Feature_17] IS NULL) THEN -0.1226774060147726 ELSE [ADS].[Feature_17] END AS impter_19, CASE WHEN ([ADS].[Feature_18] IS NULL) THEN 0.019160881669086405 ELSE [ADS].[Feature_18] END AS impter_20, CASE WHEN ([ADS].[Feature_19] IS NULL) THEN -0.26340351121131067 ELSE [ADS].[Feature_19] END AS impter_21, CASE WHEN ([ADS].[Feature_20] IS NULL) THEN 0.035692361937735194 ELSE [ADS].[Feature_20] END AS impter_22, CASE WHEN ([ADS].[Feature_21] IS NULL) THEN -0.010021324964069293 ELSE [ADS].[Feature_21] END AS impter_23, CASE WHEN ([ADS].[Feature_22] IS NULL) THEN -0.1258614387723542 ELSE [ADS].[Feature_22] END AS impter_24, CASE WHEN ([ADS].[Feature_23] IS NULL) THEN 0.09372773898231128 ELSE [ADS].[Feature_23] END AS impter_25, CASE WHEN ([ADS].[Feature_24] IS NULL) THEN -0.1687929597880227 ELSE [ADS].[Feature_24] END AS impter_26, CASE WHEN ([ADS].[Feature_25] IS NULL) THEN 0.10006283199629364 ELSE [ADS].[Feature_25] END AS impter_27, CASE WHEN ([ADS].[Feature_26] IS NULL) THEN -0.10297858086822659 ELSE [ADS].[Feature_26] END AS impter_28, CASE WHEN ([ADS].[Feature_27] IS NULL) THEN 0.19240514535870415 ELSE [ADS].[Feature_27] END AS impter_29, CASE WHEN ([ADS].[Feature_28] IS NULL) THEN -0.052866434246092435 ELSE [ADS].[Feature_28] END AS impter_30, CASE WHEN ([ADS].[Feature_29] IS NULL) THEN 0.2624612146366151 ELSE [ADS].[Feature_29] END AS impter_31, CASE WHEN ([ADS].[Feature_30] IS NULL) THEN 0.002677575140361194 ELSE [ADS].[Feature_30] END AS impter_32, CASE WHEN ([ADS].[Feature_31] IS NULL) THEN 0.09707041941284063 ELSE [ADS].[Feature_31] END AS impter_33, CASE WHEN ([ADS].[Feature_32] IS NULL) THEN -0.032793219857333473 ELSE [ADS].[Feature_32] END AS impter_34, CASE WHEN ([ADS].[Feature_33] IS NULL) THEN -0.003130273745908922 ELSE [ADS].[Feature_33] END AS impter_35, CASE WHEN ([ADS].[Feature_34] IS NULL) THEN 0.053446276216279974 ELSE [ADS].[Feature_34] END AS impter_36, CASE WHEN ([ADS].[Feature_35] IS NULL) THEN -0.18668146437412367 ELSE [ADS].[Feature_35] END AS impter_37, CASE WHEN ([ADS].[Feature_36] IS NULL) THEN -0.029335964960866243 ELSE [ADS].[Feature_36] END AS impter_38, CASE WHEN ([ADS].[Feature_37] IS NULL) THEN 0.07219772199502426 ELSE [ADS].[Feature_37] END AS impter_39, CASE WHEN ([ADS].[Feature_38] IS NULL) THEN -0.0007762839781489412 ELSE [ADS].[Feature_38] END AS impter_40, CASE WHEN ([ADS].[Feature_39] IS NULL) THEN 0.08270823712098274 ELSE [ADS].[Feature_39] END AS impter_41, CASE WHEN ([ADS].[Feature_40] IS NULL) THEN 0.10432022852347983 ELSE [ADS].[Feature_40] END AS impter_42, CASE WHEN ([ADS].[Feature_41] IS NULL) THEN 0.07058566385022276 ELSE [ADS].[Feature_41] END AS impter_43, CASE WHEN ([ADS].[Feature_42] IS NULL) THEN 0.05096693098357383 ELSE [ADS].[Feature_42] END AS impter_44, CASE WHEN ([ADS].[Feature_43] IS NULL) THEN 0.0660758203367818 ELSE [ADS].[Feature_43] END AS impter_45, CASE WHEN ([ADS].[Feature_44] IS NULL) THEN -0.07075895636353369 ELSE [ADS].[Feature_44] END AS impter_46, CASE WHEN ([ADS].[Feature_45] IS NULL) THEN 0.08422536561649958 ELSE [ADS].[Feature_45] END AS impter_47, CASE WHEN ([ADS].[Feature_46] IS NULL) THEN 0.21367580667795616 ELSE [ADS].[Feature_46] END AS impter_48, CASE WHEN ([ADS].[Feature_47] IS NULL) THEN -0.055897457335624984 ELSE [ADS].[Feature_47] END AS impter_49, CASE WHEN ([ADS].[Feature_48] IS NULL) THEN -0.17453036726139817 ELSE [ADS].[Feature_48] END AS impter_50, CASE WHEN ([ADS].[Feature_49] IS NULL) THEN -0.054944001818473996 ELSE [ADS].[Feature_49] END AS impter_51, CASE WHEN ([ADS].[Feature_50] IS NULL) THEN -0.5961651261710368 ELSE [ADS].[Feature_50] END AS impter_52, CASE WHEN ([ADS].[Feature_51] IS NULL) THEN 0.5020404526565605 ELSE [ADS].[Feature_51] END AS impter_53, CASE WHEN ([ADS].[Feature_52] IS NULL) THEN -0.052340545201383926 ELSE [ADS].[Feature_52] END AS impter_54, CASE WHEN ([ADS].[Feature_53] IS NULL) THEN 0.05294307611674654 ELSE [ADS].[Feature_53] END AS impter_55, CASE WHEN ([ADS].[Feature_54] IS NULL) THEN 0.03835884479069335 ELSE [ADS].[Feature_54] END AS impter_56, CASE WHEN ([ADS].[Feature_55] IS NULL) THEN -0.13571979014964694 ELSE [ADS].[Feature_55] END AS impter_57, CASE WHEN ([ADS].[Feature_56] IS NULL) THEN -0.21903068431411843 ELSE [ADS].[Feature_56] END AS impter_58, CASE WHEN ([ADS].[Feature_57] IS NULL) THEN -0.1191752362029383 ELSE [ADS].[Feature_57] END AS impter_59, CASE WHEN ([ADS].[Feature_58] IS NULL) THEN 0.38058346912807667 ELSE [ADS].[Feature_58] END AS impter_60, CASE WHEN ([ADS].[Feature_59] IS NULL) THEN -0.12720928974168508 ELSE [ADS].[Feature_59] END AS impter_61, CASE WHEN ([ADS].[Feature_60] IS NULL) THEN -0.09072936496613782 ELSE [ADS].[Feature_60] END AS impter_62, CASE WHEN ([ADS].[Feature_61] IS NULL) THEN -0.03915125937954538 ELSE [ADS].[Feature_61] END AS impter_63, CASE WHEN ([ADS].[Feature_62] IS NULL) THEN 0.07075412393313481 ELSE [ADS].[Feature_62] END AS impter_64, CASE WHEN ([ADS].[Feature_63] IS NULL) THEN 0.10124894587016948 ELSE [ADS].[Feature_63] END AS impter_65, CASE WHEN ([ADS].[Feature_64] IS NULL) THEN -0.1945661449475579 ELSE [ADS].[Feature_64] END AS impter_66, CASE WHEN ([ADS].[Feature_65] IS NULL) THEN -0.1759482981261233 ELSE [ADS].[Feature_65] END AS impter_67, CASE WHEN ([ADS].[Feature_66] IS NULL) THEN 0.07473228971855511 ELSE [ADS].[Feature_66] END AS impter_68, CASE WHEN ([ADS].[Feature_67] IS NULL) THEN 0.0377705562115906 ELSE [ADS].[Feature_67] END AS impter_69, CASE WHEN ([ADS].[Feature_68] IS NULL) THEN 0.0139470898598917 ELSE [ADS].[Feature_68] END AS impter_70, CASE WHEN ([ADS].[Feature_69] IS NULL) THEN 0.2582685725145942 ELSE [ADS].[Feature_69] END AS impter_71, CASE WHEN ([ADS].[Feature_70] IS NULL) THEN 0.022975786233048922 ELSE [ADS].[Feature_70] END AS impter_72, CASE WHEN ([ADS].[Feature_71] IS NULL) THEN 0.17445434061949525 ELSE [ADS].[Feature_71] END AS impter_73, CASE WHEN ([ADS].[Feature_72] IS NULL) THEN -0.011413879692078346 ELSE [ADS].[Feature_72] END AS impter_74, CASE WHEN ([ADS].[Feature_73] IS NULL) THEN 0.07898984156871978 ELSE [ADS].[Feature_73] END AS impter_75, CASE WHEN ([ADS].[Feature_74] IS NULL) THEN 0.0952547273770713 ELSE [ADS].[Feature_74] END AS impter_76, CASE WHEN ([ADS].[Feature_75] IS NULL) THEN -0.03997776839639901 ELSE [ADS].[Feature_75] END AS impter_77, CASE WHEN ([ADS].[Feature_76] IS NULL) THEN -0.020839895874293496 ELSE [ADS].[Feature_76] END AS impter_78, CASE WHEN ([ADS].[Feature_77] IS NULL) THEN -0.07284631986613152 ELSE [ADS].[Feature_77] END AS impter_79, CASE WHEN ([ADS].[Feature_78] IS NULL) THEN -0.27389951764434384 ELSE [ADS].[Feature_78] END AS impter_80, CASE WHEN ([ADS].[Feature_79] IS NULL) THEN 0.08057287885287609 ELSE [ADS].[Feature_79] END AS impter_81, CASE WHEN ([ADS].[Feature_80] IS NULL) THEN -0.06244274245437891 ELSE [ADS].[Feature_80] END AS impter_82, CASE WHEN ([ADS].[Feature_81] IS NULL) THEN -0.12290855334066887 ELSE [ADS].[Feature_81] END AS impter_83, CASE WHEN ([ADS].[Feature_82] IS NULL) THEN 0.11639531793890918 ELSE [ADS].[Feature_82] END AS impter_84, CASE WHEN ([ADS].[Feature_83] IS NULL) THEN -0.03350462786128603 ELSE [ADS].[Feature_83] END AS impter_85, CASE WHEN ([ADS].[Feature_84] IS NULL) THEN -0.03914049968144583 ELSE [ADS].[Feature_84] END AS impter_86, CASE WHEN ([ADS].[Feature_85] IS NULL) THEN 0.24193903072305167 ELSE [ADS].[Feature_85] END AS impter_87, CASE WHEN ([ADS].[Feature_86] IS NULL) THEN -0.07389719862221904 ELSE [ADS].[Feature_86] END AS impter_88, CASE WHEN ([ADS].[Feature_87] IS NULL) THEN 0.1400756228320113 ELSE [ADS].[Feature_87] END AS impter_89, CASE WHEN ([ADS].[Feature_88] IS NULL) THEN 0.2765301935136145 ELSE [ADS].[Feature_88] END AS impter_90, CASE WHEN ([ADS].[Feature_89] IS NULL) THEN -0.07957147169250885 ELSE [ADS].[Feature_89] END AS impter_91, CASE WHEN ([ADS].[Feature_90] IS NULL) THEN 0.16295767680642717 ELSE [ADS].[Feature_90] END AS impter_92, CASE WHEN ([ADS].[Feature_91] IS NULL) THEN 0.07062813888509549 ELSE [ADS].[Feature_91] END AS impter_93, CASE WHEN ([ADS].[Feature_92] IS NULL) THEN 0.012995630151896219 ELSE [ADS].[Feature_92] END AS impter_94, CASE WHEN ([ADS].[Feature_93] IS NULL) THEN 0.1055212408190415 ELSE [ADS].[Feature_93] END AS impter_95, CASE WHEN ([ADS].[Feature_94] IS NULL) THEN -0.1408434425354362 ELSE [ADS].[Feature_94] END AS impter_96, CASE WHEN ([ADS].[Feature_95] IS NULL) THEN -0.1574012366732725 ELSE [ADS].[Feature_95] END AS impter_97, CASE WHEN ([ADS].[Feature_96] IS NULL) THEN 0.05477536676313335 ELSE [ADS].[Feature_96] END AS impter_98, CASE WHEN ([ADS].[Feature_97] IS NULL) THEN 0.05673272205919614 ELSE [ADS].[Feature_97] END AS impter_99, CASE WHEN ([ADS].[Feature_98] IS NULL) THEN -0.14226649213619527 ELSE [ADS].[Feature_98] END AS impter_100, CASE WHEN ([ADS].[Feature_99] IS NULL) THEN -0.04042675289131955 ELSE [ADS].[Feature_99] END AS impter_101 
FROM [FourClass_100] AS [ADS]) AS [ADS_imp_1_OUT]

-- Code For temporary table ##TMP_20180508181542_CODEGEN_I4KECO_ADS_sca_2_OUT part 1. Create 


CREATE TABLE ##TMP_20180508181542_CODEGEN_I4KECO_ADS_sca_2_OUT (
	[KEY] BIGINT NULL, 
	scaler_2 FLOAT NULL, 
	scaler_3 FLOAT NULL, 
	scaler_4 FLOAT NULL, 
	scaler_5 FLOAT NULL, 
	scaler_6 FLOAT NULL, 
	scaler_7 FLOAT NULL, 
	scaler_8 FLOAT NULL, 
	scaler_9 FLOAT NULL, 
	scaler_10 FLOAT NULL, 
	scaler_11 FLOAT NULL, 
	scaler_12 FLOAT NULL, 
	scaler_13 FLOAT NULL, 
	scaler_14 FLOAT NULL, 
	scaler_15 FLOAT NULL, 
	scaler_16 FLOAT NULL, 
	scaler_17 FLOAT NULL, 
	scaler_18 FLOAT NULL, 
	scaler_19 FLOAT NULL, 
	scaler_20 FLOAT NULL, 
	scaler_21 FLOAT NULL, 
	scaler_22 FLOAT NULL, 
	scaler_23 FLOAT NULL, 
	scaler_24 FLOAT NULL, 
	scaler_25 FLOAT NULL, 
	scaler_26 FLOAT NULL, 
	scaler_27 FLOAT NULL, 
	scaler_28 FLOAT NULL, 
	scaler_29 FLOAT NULL, 
	scaler_30 FLOAT NULL, 
	scaler_31 FLOAT NULL, 
	scaler_32 FLOAT NULL, 
	scaler_33 FLOAT NULL, 
	scaler_34 FLOAT NULL, 
	scaler_35 FLOAT NULL, 
	scaler_36 FLOAT NULL, 
	scaler_37 FLOAT NULL, 
	scaler_38 FLOAT NULL, 
	scaler_39 FLOAT NULL, 
	scaler_40 FLOAT NULL, 
	scaler_41 FLOAT NULL, 
	scaler_42 FLOAT NULL, 
	scaler_43 FLOAT NULL, 
	scaler_44 FLOAT NULL, 
	scaler_45 FLOAT NULL, 
	scaler_46 FLOAT NULL, 
	scaler_47 FLOAT NULL, 
	scaler_48 FLOAT NULL, 
	scaler_49 FLOAT NULL, 
	scaler_50 FLOAT NULL, 
	scaler_51 FLOAT NULL, 
	scaler_52 FLOAT NULL, 
	scaler_53 FLOAT NULL, 
	scaler_54 FLOAT NULL, 
	scaler_55 FLOAT NULL, 
	scaler_56 FLOAT NULL, 
	scaler_57 FLOAT NULL, 
	scaler_58 FLOAT NULL, 
	scaler_59 FLOAT NULL, 
	scaler_60 FLOAT NULL, 
	scaler_61 FLOAT NULL, 
	scaler_62 FLOAT NULL, 
	scaler_63 FLOAT NULL, 
	scaler_64 FLOAT NULL, 
	scaler_65 FLOAT NULL, 
	scaler_66 FLOAT NULL, 
	scaler_67 FLOAT NULL, 
	scaler_68 FLOAT NULL, 
	scaler_69 FLOAT NULL, 
	scaler_70 FLOAT NULL, 
	scaler_71 FLOAT NULL, 
	scaler_72 FLOAT NULL, 
	scaler_73 FLOAT NULL, 
	scaler_74 FLOAT NULL, 
	scaler_75 FLOAT NULL, 
	scaler_76 FLOAT NULL, 
	scaler_77 FLOAT NULL, 
	scaler_78 FLOAT NULL, 
	scaler_79 FLOAT NULL, 
	scaler_80 FLOAT NULL, 
	scaler_81 FLOAT NULL, 
	scaler_82 FLOAT NULL, 
	scaler_83 FLOAT NULL, 
	scaler_84 FLOAT NULL, 
	scaler_85 FLOAT NULL, 
	scaler_86 FLOAT NULL, 
	scaler_87 FLOAT NULL, 
	scaler_88 FLOAT NULL, 
	scaler_89 FLOAT NULL, 
	scaler_90 FLOAT NULL, 
	scaler_91 FLOAT NULL, 
	scaler_92 FLOAT NULL, 
	scaler_93 FLOAT NULL, 
	scaler_94 FLOAT NULL, 
	scaler_95 FLOAT NULL, 
	scaler_96 FLOAT NULL, 
	scaler_97 FLOAT NULL, 
	scaler_98 FLOAT NULL, 
	scaler_99 FLOAT NULL, 
	scaler_100 FLOAT NULL, 
	scaler_101 FLOAT NULL
)



-- Code For temporary table ##TMP_20180508181542_CODEGEN_I4KECO_ADS_sca_2_OUT part 2. Populate

INSERT INTO ##TMP_20180508181542_CODEGEN_I4KECO_ADS_sca_2_OUT ([KEY], scaler_2, scaler_3, scaler_4, scaler_5, scaler_6, scaler_7, scaler_8, scaler_9, scaler_10, scaler_11, scaler_12, scaler_13, scaler_14, scaler_15, scaler_16, scaler_17, scaler_18, scaler_19, scaler_20, scaler_21, scaler_22, scaler_23, scaler_24, scaler_25, scaler_26, scaler_27, scaler_28, scaler_29, scaler_30, scaler_31, scaler_32, scaler_33, scaler_34, scaler_35, scaler_36, scaler_37, scaler_38, scaler_39, scaler_40, scaler_41, scaler_42, scaler_43, scaler_44, scaler_45, scaler_46, scaler_47, scaler_48, scaler_49, scaler_50, scaler_51, scaler_52, scaler_53, scaler_54, scaler_55, scaler_56, scaler_57, scaler_58, scaler_59, scaler_60, scaler_61, scaler_62, scaler_63, scaler_64, scaler_65, scaler_66, scaler_67, scaler_68, scaler_69, scaler_70, scaler_71, scaler_72, scaler_73, scaler_74, scaler_75, scaler_76, scaler_77, scaler_78, scaler_79, scaler_80, scaler_81, scaler_82, scaler_83, scaler_84, scaler_85, scaler_86, scaler_87, scaler_88, scaler_89, scaler_90, scaler_91, scaler_92, scaler_93, scaler_94, scaler_95, scaler_96, scaler_97, scaler_98, scaler_99, scaler_100, scaler_101) SELECT [ADS_sca_2_OUT].[KEY], [ADS_sca_2_OUT].scaler_2, [ADS_sca_2_OUT].scaler_3, [ADS_sca_2_OUT].scaler_4, [ADS_sca_2_OUT].scaler_5, [ADS_sca_2_OUT].scaler_6, [ADS_sca_2_OUT].scaler_7, [ADS_sca_2_OUT].scaler_8, [ADS_sca_2_OUT].scaler_9, [ADS_sca_2_OUT].scaler_10, [ADS_sca_2_OUT].scaler_11, [ADS_sca_2_OUT].scaler_12, [ADS_sca_2_OUT].scaler_13, [ADS_sca_2_OUT].scaler_14, [ADS_sca_2_OUT].scaler_15, [ADS_sca_2_OUT].scaler_16, [ADS_sca_2_OUT].scaler_17, [ADS_sca_2_OUT].scaler_18, [ADS_sca_2_OUT].scaler_19, [ADS_sca_2_OUT].scaler_20, [ADS_sca_2_OUT].scaler_21, [ADS_sca_2_OUT].scaler_22, [ADS_sca_2_OUT].scaler_23, [ADS_sca_2_OUT].scaler_24, [ADS_sca_2_OUT].scaler_25, [ADS_sca_2_OUT].scaler_26, [ADS_sca_2_OUT].scaler_27, [ADS_sca_2_OUT].scaler_28, [ADS_sca_2_OUT].scaler_29, [ADS_sca_2_OUT].scaler_30, [ADS_sca_2_OUT].scaler_31, [ADS_sca_2_OUT].scaler_32, [ADS_sca_2_OUT].scaler_33, [ADS_sca_2_OUT].scaler_34, [ADS_sca_2_OUT].scaler_35, [ADS_sca_2_OUT].scaler_36, [ADS_sca_2_OUT].scaler_37, [ADS_sca_2_OUT].scaler_38, [ADS_sca_2_OUT].scaler_39, [ADS_sca_2_OUT].scaler_40, [ADS_sca_2_OUT].scaler_41, [ADS_sca_2_OUT].scaler_42, [ADS_sca_2_OUT].scaler_43, [ADS_sca_2_OUT].scaler_44, [ADS_sca_2_OUT].scaler_45, [ADS_sca_2_OUT].scaler_46, [ADS_sca_2_OUT].scaler_47, [ADS_sca_2_OUT].scaler_48, [ADS_sca_2_OUT].scaler_49, [ADS_sca_2_OUT].scaler_50, [ADS_sca_2_OUT].scaler_51, [ADS_sca_2_OUT].scaler_52, [ADS_sca_2_OUT].scaler_53, [ADS_sca_2_OUT].scaler_54, [ADS_sca_2_OUT].scaler_55, [ADS_sca_2_OUT].scaler_56, [ADS_sca_2_OUT].scaler_57, [ADS_sca_2_OUT].scaler_58, [ADS_sca_2_OUT].scaler_59, [ADS_sca_2_OUT].scaler_60, [ADS_sca_2_OUT].scaler_61, [ADS_sca_2_OUT].scaler_62, [ADS_sca_2_OUT].scaler_63, [ADS_sca_2_OUT].scaler_64, [ADS_sca_2_OUT].scaler_65, [ADS_sca_2_OUT].scaler_66, [ADS_sca_2_OUT].scaler_67, [ADS_sca_2_OUT].scaler_68, [ADS_sca_2_OUT].scaler_69, [ADS_sca_2_OUT].scaler_70, [ADS_sca_2_OUT].scaler_71, [ADS_sca_2_OUT].scaler_72, [ADS_sca_2_OUT].scaler_73, [ADS_sca_2_OUT].scaler_74, [ADS_sca_2_OUT].scaler_75, [ADS_sca_2_OUT].scaler_76, [ADS_sca_2_OUT].scaler_77, [ADS_sca_2_OUT].scaler_78, [ADS_sca_2_OUT].scaler_79, [ADS_sca_2_OUT].scaler_80, [ADS_sca_2_OUT].scaler_81, [ADS_sca_2_OUT].scaler_82, [ADS_sca_2_OUT].scaler_83, [ADS_sca_2_OUT].scaler_84, [ADS_sca_2_OUT].scaler_85, [ADS_sca_2_OUT].scaler_86, [ADS_sca_2_OUT].scaler_87, [ADS_sca_2_OUT].scaler_88, [ADS_sca_2_OUT].scaler_89, [ADS_sca_2_OUT].scaler_90, [ADS_sca_2_OUT].scaler_91, [ADS_sca_2_OUT].scaler_92, [ADS_sca_2_OUT].scaler_93, [ADS_sca_2_OUT].scaler_94, [ADS_sca_2_OUT].scaler_95, [ADS_sca_2_OUT].scaler_96, [ADS_sca_2_OUT].scaler_97, [ADS_sca_2_OUT].scaler_98, [ADS_sca_2_OUT].scaler_99, [ADS_sca_2_OUT].scaler_100, [ADS_sca_2_OUT].scaler_101 
FROM (SELECT [ADS_imp_1_OUT].[KEY] AS [KEY], (CAST([ADS_imp_1_OUT].impter_2 AS FLOAT(53)) - -0.0014807007689716506) / 0.9211229790312512 AS scaler_2, (CAST([ADS_imp_1_OUT].impter_3 AS FLOAT(53)) - 0.08599214990681354) / 0.9627516809237073 AS scaler_3, (CAST([ADS_imp_1_OUT].impter_4 AS FLOAT(53)) - -0.006358164676411468) / 0.7890687835102894 AS scaler_4, (CAST([ADS_imp_1_OUT].impter_5 AS FLOAT(53)) - -0.024301807422776375) / 1.0265272189083172 AS scaler_5, (CAST([ADS_imp_1_OUT].impter_6 AS FLOAT(53)) - 0.015786548044298444) / 1.0198090908026474 AS scaler_6, (CAST([ADS_imp_1_OUT].impter_7 AS FLOAT(53)) - -0.13959329445651672) / 0.9185551763293686 AS scaler_7, (CAST([ADS_imp_1_OUT].impter_8 AS FLOAT(53)) - -0.06476745048019888) / 1.0393547249617474 AS scaler_8, (CAST([ADS_imp_1_OUT].impter_9 AS FLOAT(53)) - 0.025579810774090658) / 0.8722131294644917 AS scaler_9, (CAST([ADS_imp_1_OUT].impter_10 AS FLOAT(53)) - -0.03173937260977112) / 1.0164588299091024 AS scaler_10, (CAST([ADS_imp_1_OUT].impter_11 AS FLOAT(53)) - -0.1518141420862488) / 1.0075402114297496 AS scaler_11, (CAST([ADS_imp_1_OUT].impter_12 AS FLOAT(53)) - -0.13244576558492482) / 0.9215325459816371 AS scaler_12, (CAST([ADS_imp_1_OUT].impter_13 AS FLOAT(53)) - 0.044172679762224144) / 0.9053279964066308 AS scaler_13, (CAST([ADS_imp_1_OUT].impter_14 AS FLOAT(53)) - 0.010165946719810038) / 1.2190371046063362 AS scaler_14, (CAST([ADS_imp_1_OUT].impter_15 AS FLOAT(53)) - -0.03645872019103299) / 1.0879005786584215 AS scaler_15, (CAST([ADS_imp_1_OUT].impter_16 AS FLOAT(53)) - 0.06491512811593925) / 1.0274670201407186 AS scaler_16, (CAST([ADS_imp_1_OUT].impter_17 AS FLOAT(53)) - -0.11930146867074032) / 0.9506312349761404 AS scaler_17, (CAST([ADS_imp_1_OUT].impter_18 AS FLOAT(53)) - 0.007738863934852773) / 1.0928477585203984 AS scaler_18, (CAST([ADS_imp_1_OUT].impter_19 AS FLOAT(53)) - -0.1226774060147726) / 0.9830561715965196 AS scaler_19, (CAST([ADS_imp_1_OUT].impter_20 AS FLOAT(53)) - 0.019160881669086405) / 1.2117417920836373 AS scaler_20, (CAST([ADS_imp_1_OUT].impter_21 AS FLOAT(53)) - -0.26340351121131067) / 0.9807419262255984 AS scaler_21, (CAST([ADS_imp_1_OUT].impter_22 AS FLOAT(53)) - 0.035692361937735194) / 1.115824498468156 AS scaler_22, (CAST([ADS_imp_1_OUT].impter_23 AS FLOAT(53)) - -0.010021324964069293) / 1.0790959803413318 AS scaler_23, (CAST([ADS_imp_1_OUT].impter_24 AS FLOAT(53)) - -0.1258614387723542) / 1.0279672611547366 AS scaler_24, (CAST([ADS_imp_1_OUT].impter_25 AS FLOAT(53)) - 0.09372773898231128) / 0.9690760299303989 AS scaler_25, (CAST([ADS_imp_1_OUT].impter_26 AS FLOAT(53)) - -0.1687929597880227) / 0.8845858581996813 AS scaler_26, (CAST([ADS_imp_1_OUT].impter_27 AS FLOAT(53)) - 0.10006283199629364) / 0.9149346104000894 AS scaler_27, (CAST([ADS_imp_1_OUT].impter_28 AS FLOAT(53)) - -0.10297858086822659) / 1.0761397500557328 AS scaler_28, (CAST([ADS_imp_1_OUT].impter_29 AS FLOAT(53)) - 0.19240514535870415) / 2.089882492597775 AS scaler_29, (CAST([ADS_imp_1_OUT].impter_30 AS FLOAT(53)) - -0.052866434246092435) / 1.0030777529896888 AS scaler_30, (CAST([ADS_imp_1_OUT].impter_31 AS FLOAT(53)) - 0.2624612146366151) / 1.9778491038473625 AS scaler_31, (CAST([ADS_imp_1_OUT].impter_32 AS FLOAT(53)) - 0.002677575140361194) / 0.8833924915211555 AS scaler_32, (CAST([ADS_imp_1_OUT].impter_33 AS FLOAT(53)) - 0.09707041941284063) / 0.8720005351713555 AS scaler_33, (CAST([ADS_imp_1_OUT].impter_34 AS FLOAT(53)) - -0.032793219857333473) / 0.8745989090443193 AS scaler_34, (CAST([ADS_imp_1_OUT].impter_35 AS FLOAT(53)) - -0.003130273745908922) / 0.9967699097535561 AS scaler_35, (CAST([ADS_imp_1_OUT].impter_36 AS FLOAT(53)) - 0.053446276216279974) / 0.9997289112199433 AS scaler_36, (CAST([ADS_imp_1_OUT].impter_37 AS FLOAT(53)) - -0.18668146437412367) / 1.0272287171310865 AS scaler_37, (CAST([ADS_imp_1_OUT].impter_38 AS FLOAT(53)) - -0.029335964960866243) / 1.0427555960451658 AS scaler_38, (CAST([ADS_imp_1_OUT].impter_39 AS FLOAT(53)) - 0.07219772199502426) / 0.8328229890456742 AS scaler_39, (CAST([ADS_imp_1_OUT].impter_40 AS FLOAT(53)) - -0.0007762839781489412) / 0.9666524356457794 AS scaler_40, (CAST([ADS_imp_1_OUT].impter_41 AS FLOAT(53)) - 0.08270823712098274) / 1.083670494683493 AS scaler_41, (CAST([ADS_imp_1_OUT].impter_42 AS FLOAT(53)) - 0.10432022852347983) / 1.075472547982714 AS scaler_42, (CAST([ADS_imp_1_OUT].impter_43 AS FLOAT(53)) - 0.07058566385022276) / 0.9993462791463713 AS scaler_43, (CAST([ADS_imp_1_OUT].impter_44 AS FLOAT(53)) - 0.05096693098357383) / 0.8876971252794036 AS scaler_44, (CAST([ADS_imp_1_OUT].impter_45 AS FLOAT(53)) - 0.0660758203367818) / 1.041246125313479 AS scaler_45, (CAST([ADS_imp_1_OUT].impter_46 AS FLOAT(53)) - -0.07075895636353369) / 2.238310207242139 AS scaler_46, (CAST([ADS_imp_1_OUT].impter_47 AS FLOAT(53)) - 0.08422536561649958) / 0.9520959686676432 AS scaler_47, (CAST([ADS_imp_1_OUT].impter_48 AS FLOAT(53)) - 0.21367580667795616) / 0.9907230316111766 AS scaler_48, (CAST([ADS_imp_1_OUT].impter_49 AS FLOAT(53)) - -0.055897457335624984) / 1.0392400714320487 AS scaler_49, (CAST([ADS_imp_1_OUT].impter_50 AS FLOAT(53)) - -0.17453036726139817) / 2.001507098381001 AS scaler_50, (CAST([ADS_imp_1_OUT].impter_51 AS FLOAT(53)) - -0.054944001818473996) / 1.0041645540091246 AS scaler_51, (CAST([ADS_imp_1_OUT].impter_52 AS FLOAT(53)) - -0.5961651261710368) / 2.467511153399545 AS scaler_52, (CAST([ADS_imp_1_OUT].impter_53 AS FLOAT(53)) - 0.5020404526565605) / 2.1929325118287792 AS scaler_53, (CAST([ADS_imp_1_OUT].impter_54 AS FLOAT(53)) - -0.052340545201383926) / 0.98465558791252 AS scaler_54, (CAST([ADS_imp_1_OUT].impter_55 AS FLOAT(53)) - 0.05294307611674654) / 1.8137042567337183 AS scaler_55, (CAST([ADS_imp_1_OUT].impter_56 AS FLOAT(53)) - 0.03835884479069335) / 0.9241326354411343 AS scaler_56, (CAST([ADS_imp_1_OUT].impter_57 AS FLOAT(53)) - -0.13571979014964694) / 0.8679095755948701 AS scaler_57, (CAST([ADS_imp_1_OUT].impter_58 AS FLOAT(53)) - -0.21903068431411843) / 4.150428869748413 AS scaler_58, (CAST([ADS_imp_1_OUT].impter_59 AS FLOAT(53)) - -0.1191752362029383) / 0.9123333408128436 AS scaler_59, (CAST([ADS_imp_1_OUT].impter_60 AS FLOAT(53)) - 0.38058346912807667) / 3.5635011086986927 AS scaler_60, (CAST([ADS_imp_1_OUT].impter_61 AS FLOAT(53)) - -0.12720928974168508) / 0.9301024475991629 AS scaler_61, (CAST([ADS_imp_1_OUT].impter_62 AS FLOAT(53)) - -0.09072936496613782) / 0.9490501277306023 AS scaler_62, (CAST([ADS_imp_1_OUT].impter_63 AS FLOAT(53)) - -0.03915125937954538) / 0.9029504608473613 AS scaler_63, (CAST([ADS_imp_1_OUT].impter_64 AS FLOAT(53)) - 0.07075412393313481) / 0.9726561682528103 AS scaler_64, (CAST([ADS_imp_1_OUT].impter_65 AS FLOAT(53)) - 0.10124894587016948) / 0.9403075920249493 AS scaler_65, (CAST([ADS_imp_1_OUT].impter_66 AS FLOAT(53)) - -0.1945661449475579) / 0.9400903625732654 AS scaler_66, (CAST([ADS_imp_1_OUT].impter_67 AS FLOAT(53)) - -0.1759482981261233) / 0.9435422049943787 AS scaler_67, (CAST([ADS_imp_1_OUT].impter_68 AS FLOAT(53)) - 0.07473228971855511) / 0.8871003964319768 AS scaler_68, (CAST([ADS_imp_1_OUT].impter_69 AS FLOAT(53)) - 0.0377705562115906) / 1.0228978549196588 AS scaler_69, (CAST([ADS_imp_1_OUT].impter_70 AS FLOAT(53)) - 0.0139470898598917) / 0.9465728329079491 AS scaler_70, (CAST([ADS_imp_1_OUT].impter_71 AS FLOAT(53)) - 0.2582685725145942) / 1.1027232016521478 AS scaler_71, (CAST([ADS_imp_1_OUT].impter_72 AS FLOAT(53)) - 0.022975786233048922) / 0.9200436904809381 AS scaler_72, (CAST([ADS_imp_1_OUT].impter_73 AS FLOAT(53)) - 0.17445434061949525) / 0.9009964742482128 AS scaler_73, (CAST([ADS_imp_1_OUT].impter_74 AS FLOAT(53)) - -0.011413879692078346) / 0.9483377025565977 AS scaler_74, (CAST([ADS_imp_1_OUT].impter_75 AS FLOAT(53)) - 0.07898984156871978) / 0.9726668138861088 AS scaler_75, (CAST([ADS_imp_1_OUT].impter_76 AS FLOAT(53)) - 0.0952547273770713) / 0.9607867245873394 AS scaler_76, (CAST([ADS_imp_1_OUT].impter_77 AS FLOAT(53)) - -0.03997776839639901) / 1.0318828686080972 AS scaler_77, (CAST([ADS_imp_1_OUT].impter_78 AS FLOAT(53)) - -0.020839895874293496) / 0.945141993694461 AS scaler_78, (CAST([ADS_imp_1_OUT].impter_79 AS FLOAT(53)) - -0.07284631986613152) / 0.9103416784348913 AS scaler_79, (CAST([ADS_imp_1_OUT].impter_80 AS FLOAT(53)) - -0.27389951764434384) / 2.0362603862996735 AS scaler_80, (CAST([ADS_imp_1_OUT].impter_81 AS FLOAT(53)) - 0.08057287885287609) / 0.9919292944224015 AS scaler_81, (CAST([ADS_imp_1_OUT].impter_82 AS FLOAT(53)) - -0.06244274245437891) / 0.8113039293824552 AS scaler_82, (CAST([ADS_imp_1_OUT].impter_83 AS FLOAT(53)) - -0.12290855334066887) / 1.0307302654711112 AS scaler_83, (CAST([ADS_imp_1_OUT].impter_84 AS FLOAT(53)) - 0.11639531793890918) / 0.9993591951135242 AS scaler_84, (CAST([ADS_imp_1_OUT].impter_85 AS FLOAT(53)) - -0.03350462786128603) / 1.0197598648594488 AS scaler_85, (CAST([ADS_imp_1_OUT].impter_86 AS FLOAT(53)) - -0.03914049968144583) / 0.9022051622058084 AS scaler_86, (CAST([ADS_imp_1_OUT].impter_87 AS FLOAT(53)) - 0.24193903072305167) / 0.9625742678392476 AS scaler_87, (CAST([ADS_imp_1_OUT].impter_88 AS FLOAT(53)) - -0.07389719862221904) / 1.0080070985430696 AS scaler_88, (CAST([ADS_imp_1_OUT].impter_89 AS FLOAT(53)) - 0.1400756228320113) / 0.9315791274848828 AS scaler_89, (CAST([ADS_imp_1_OUT].impter_90 AS FLOAT(53)) - 0.2765301935136145) / 1.9455982323178656 AS scaler_90, (CAST([ADS_imp_1_OUT].impter_91 AS FLOAT(53)) - -0.07957147169250885) / 0.9688848077884671 AS scaler_91, (CAST([ADS_imp_1_OUT].impter_92 AS FLOAT(53)) - 0.16295767680642717) / 0.8952741904110189 AS scaler_92, (CAST([ADS_imp_1_OUT].impter_93 AS FLOAT(53)) - 0.07062813888509549) / 0.8331748322730601 AS scaler_93, (CAST([ADS_imp_1_OUT].impter_94 AS FLOAT(53)) - 0.012995630151896219) / 1.059167248118017 AS scaler_94, (CAST([ADS_imp_1_OUT].impter_95 AS FLOAT(53)) - 0.1055212408190415) / 1.0525988978000902 AS scaler_95, (CAST([ADS_imp_1_OUT].impter_96 AS FLOAT(53)) - -0.1408434425354362) / 0.9172372033996682 AS scaler_96, (CAST([ADS_imp_1_OUT].impter_97 AS FLOAT(53)) - -0.1574012366732725) / 0.9930125433643069 AS scaler_97, (CAST([ADS_imp_1_OUT].impter_98 AS FLOAT(53)) - 0.05477536676313335) / 0.9803136353653645 AS scaler_98, (CAST([ADS_imp_1_OUT].impter_99 AS FLOAT(53)) - 0.05673272205919614) / 0.9296338032188498 AS scaler_99, (CAST([ADS_imp_1_OUT].impter_100 AS FLOAT(53)) - -0.14226649213619527) / 1.174442941822933 AS scaler_100, (CAST([ADS_imp_1_OUT].impter_101 AS FLOAT(53)) - -0.04042675289131955) / 1.983747550989713 AS scaler_101 
FROM ##TMP_20180508181542_CODEGEN_QSGVA8_ADS_imp_1_OUT AS [ADS_imp_1_OUT]) AS [ADS_sca_2_OUT]

-- Code For temporary table ##TMP_20180508181543_CODEGEN_55FSDT_ADB_B0 part 1. Create 


CREATE TABLE ##TMP_20180508181543_CODEGEN_55FSDT_ADB_B0 (
	[KEY] BIGINT NULL, 
	[Score_0] FLOAT NULL, 
	[Proba_0] FLOAT NULL, 
	[Score_1] FLOAT NULL, 
	[Proba_1] FLOAT NULL, 
	[Score_2] FLOAT NULL, 
	[Proba_2] FLOAT NULL, 
	[Score_3] FLOAT NULL, 
	[Proba_3] FLOAT NULL
)



-- Code For temporary table ##TMP_20180508181543_CODEGEN_55FSDT_ADB_B0 part 2. Populate

WITH [DT_node_lookup] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_46 <= -0.9107336401939392) THEN 1 ELSE 2 END AS node_id_2 
FROM ##TMP_20180508181542_CODEGEN_I4KECO_ADS_sca_2_OUT AS [ADS_sca_2_OUT]), 
[DT_node_data] AS 
(SELECT [Values].nid AS nid, CAST([Values].[P_0] AS FLOAT(53)) AS [P_0], CAST([Values].[P_1] AS FLOAT(53)) AS [P_1], CAST([Values].[P_2] AS FLOAT(53)) AS [P_2], CAST([Values].[P_3] AS FLOAT(53)) AS [P_3], CAST([Values].[D] AS FLOAT(53)) AS [D], CAST([Values].[DP] AS FLOAT(53)) AS [DP] 
FROM (SELECT 1 AS nid, 0.0 AS [P_0], 0.13333333333333333 AS [P_1], 0.8666666666666666 AS [P_2], 0.0 AS [P_3], 2 AS [D], 0.8666666666666666 AS [DP] UNION ALL SELECT 2 AS nid, 0.2962962962962963 AS [P_0], 0.2839506172839506 AS [P_1], 0.12345679012345684 AS [P_2], 0.2962962962962963 AS [P_3], 0 AS [D], 0.2962962962962963 AS [DP]) AS [Values]), 
[DT_Output] AS 
(SELECT [DT_node_lookup].[KEY] AS [KEY], [DT_node_lookup].node_id_2 AS node_id_2, [DT_node_data].nid AS nid, [DT_node_data].[P_0] AS [P_0], [DT_node_data].[P_1] AS [P_1], [DT_node_data].[P_2] AS [P_2], [DT_node_data].[P_3] AS [P_3], [DT_node_data].[D] AS [D], [DT_node_data].[DP] AS [DP] 
FROM [DT_node_lookup] LEFT OUTER JOIN [DT_node_data] ON [DT_node_lookup].node_id_2 = [DT_node_data].nid), 
[ADB_Model_0] AS 
(SELECT [DT_Output].[KEY] AS [KEY], (3.0 * (CASE WHEN ([DT_Output].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output].[P_0] IS NULL OR [DT_Output].[P_0] > 0.0) THEN log([DT_Output].[P_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output].[P_0] IS NULL OR [DT_Output].[P_0] > 0.0) THEN log([DT_Output].[P_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output].[P_1] IS NULL OR [DT_Output].[P_1] > 0.0) THEN log([DT_Output].[P_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output].[P_2] IS NULL OR [DT_Output].[P_2] > 0.0) THEN log([DT_Output].[P_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output].[P_3] IS NULL OR [DT_Output].[P_3] > 0.0) THEN log([DT_Output].[P_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 16.0 AS [Score_0], 3.0 * (CASE WHEN ([DT_Output].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output].[P_0] IS NULL OR [DT_Output].[P_0] > 0.0) THEN log([DT_Output].[P_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output].[P_0] IS NULL OR [DT_Output].[P_0] > 0.0) THEN log([DT_Output].[P_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output].[P_1] IS NULL OR [DT_Output].[P_1] > 0.0) THEN log([DT_Output].[P_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output].[P_2] IS NULL OR [DT_Output].[P_2] > 0.0) THEN log([DT_Output].[P_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output].[P_3] IS NULL OR [DT_Output].[P_3] > 0.0) THEN log([DT_Output].[P_3]) ELSE -1.79769313486231e+308 END END) / 4) AS [Proba_0], (3.0 * (CASE WHEN ([DT_Output].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output].[P_1] IS NULL OR [DT_Output].[P_1] > 0.0) THEN log([DT_Output].[P_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output].[P_0] IS NULL OR [DT_Output].[P_0] > 0.0) THEN log([DT_Output].[P_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output].[P_1] IS NULL OR [DT_Output].[P_1] > 0.0) THEN log([DT_Output].[P_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output].[P_2] IS NULL OR [DT_Output].[P_2] > 0.0) THEN log([DT_Output].[P_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output].[P_3] IS NULL OR [DT_Output].[P_3] > 0.0) THEN log([DT_Output].[P_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 16.0 AS [Score_1], 3.0 * (CASE WHEN ([DT_Output].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output].[P_1] IS NULL OR [DT_Output].[P_1] > 0.0) THEN log([DT_Output].[P_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output].[P_0] IS NULL OR [DT_Output].[P_0] > 0.0) THEN log([DT_Output].[P_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output].[P_1] IS NULL OR [DT_Output].[P_1] > 0.0) THEN log([DT_Output].[P_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output].[P_2] IS NULL OR [DT_Output].[P_2] > 0.0) THEN log([DT_Output].[P_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output].[P_3] IS NULL OR [DT_Output].[P_3] > 0.0) THEN log([DT_Output].[P_3]) ELSE -1.79769313486231e+308 END END) / 4) AS [Proba_1], (3.0 * (CASE WHEN ([DT_Output].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output].[P_2] IS NULL OR [DT_Output].[P_2] > 0.0) THEN log([DT_Output].[P_2]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output].[P_0] IS NULL OR [DT_Output].[P_0] > 0.0) THEN log([DT_Output].[P_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output].[P_1] IS NULL OR [DT_Output].[P_1] > 0.0) THEN log([DT_Output].[P_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output].[P_2] IS NULL OR [DT_Output].[P_2] > 0.0) THEN log([DT_Output].[P_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output].[P_3] IS NULL OR [DT_Output].[P_3] > 0.0) THEN log([DT_Output].[P_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 16.0 AS [Score_2], 3.0 * (CASE WHEN ([DT_Output].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output].[P_2] IS NULL OR [DT_Output].[P_2] > 0.0) THEN log([DT_Output].[P_2]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output].[P_0] IS NULL OR [DT_Output].[P_0] > 0.0) THEN log([DT_Output].[P_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output].[P_1] IS NULL OR [DT_Output].[P_1] > 0.0) THEN log([DT_Output].[P_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output].[P_2] IS NULL OR [DT_Output].[P_2] > 0.0) THEN log([DT_Output].[P_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output].[P_3] IS NULL OR [DT_Output].[P_3] > 0.0) THEN log([DT_Output].[P_3]) ELSE -1.79769313486231e+308 END END) / 4) AS [Proba_2], (3.0 * (CASE WHEN ([DT_Output].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output].[P_3] IS NULL OR [DT_Output].[P_3] > 0.0) THEN log([DT_Output].[P_3]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output].[P_0] IS NULL OR [DT_Output].[P_0] > 0.0) THEN log([DT_Output].[P_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output].[P_1] IS NULL OR [DT_Output].[P_1] > 0.0) THEN log([DT_Output].[P_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output].[P_2] IS NULL OR [DT_Output].[P_2] > 0.0) THEN log([DT_Output].[P_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output].[P_3] IS NULL OR [DT_Output].[P_3] > 0.0) THEN log([DT_Output].[P_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 16.0 AS [Score_3], 3.0 * (CASE WHEN ([DT_Output].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output].[P_3] IS NULL OR [DT_Output].[P_3] > 0.0) THEN log([DT_Output].[P_3]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output].[P_0] IS NULL OR [DT_Output].[P_0] > 0.0) THEN log([DT_Output].[P_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output].[P_1] IS NULL OR [DT_Output].[P_1] > 0.0) THEN log([DT_Output].[P_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output].[P_2] IS NULL OR [DT_Output].[P_2] > 0.0) THEN log([DT_Output].[P_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output].[P_3] IS NULL OR [DT_Output].[P_3] > 0.0) THEN log([DT_Output].[P_3]) ELSE -1.79769313486231e+308 END END) / 4) AS [Proba_3] 
FROM [DT_Output]), 
[DT_node_lookup_1] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_80 <= -0.2065989226102829) THEN 1 ELSE 2 END AS node_id_2 
FROM ##TMP_20180508181542_CODEGEN_I4KECO_ADS_sca_2_OUT AS [ADS_sca_2_OUT]), 
[DT_node_data_1] AS 
(SELECT [Values].nid AS nid, CAST([Values].[P_0] AS FLOAT(53)) AS [P_0], CAST([Values].[P_1] AS FLOAT(53)) AS [P_1], CAST([Values].[P_2] AS FLOAT(53)) AS [P_2], CAST([Values].[P_3] AS FLOAT(53)) AS [P_3], CAST([Values].[D] AS FLOAT(53)) AS [D], CAST([Values].[DP] AS FLOAT(53)) AS [DP] 
FROM (SELECT 1 AS nid, 0.04260048138185239 AS [P_0], 0.17781070664413845 AS [P_1], 0.46008520161011635 AS [P_2], 0.3195036103638929 AS [P_3], 2 AS [D], 0.46008520161011635 AS [DP] UNION ALL SELECT 2 AS nid, 0.44850203755023915 AS [P_0], 0.3190923604024649 AS [P_1], 0.04892749577674342 AS [P_2], 0.1834781062705524 AS [P_3], 0 AS [D], 0.44850203755023915 AS [DP]) AS [Values]), 
[DT_Output_1] AS 
(SELECT [DT_node_lookup_1].[KEY] AS [KEY], [DT_node_lookup_1].node_id_2 AS node_id_2, [DT_node_data_1].nid AS nid, [DT_node_data_1].[P_0] AS [P_0], [DT_node_data_1].[P_1] AS [P_1], [DT_node_data_1].[P_2] AS [P_2], [DT_node_data_1].[P_3] AS [P_3], [DT_node_data_1].[D] AS [D], [DT_node_data_1].[DP] AS [DP] 
FROM [DT_node_lookup_1] LEFT OUTER JOIN [DT_node_data_1] ON [DT_node_lookup_1].node_id_2 = [DT_node_data_1].nid), 
[ADB_Model_1] AS 
(SELECT [DT_Output_1].[KEY] AS [KEY], (3.0 * (CASE WHEN ([DT_Output_1].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_1].[P_0] IS NULL OR [DT_Output_1].[P_0] > 0.0) THEN log([DT_Output_1].[P_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_1].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_1].[P_0] IS NULL OR [DT_Output_1].[P_0] > 0.0) THEN log([DT_Output_1].[P_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_1].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_1].[P_1] IS NULL OR [DT_Output_1].[P_1] > 0.0) THEN log([DT_Output_1].[P_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_1].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_1].[P_2] IS NULL OR [DT_Output_1].[P_2] > 0.0) THEN log([DT_Output_1].[P_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_1].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_1].[P_3] IS NULL OR [DT_Output_1].[P_3] > 0.0) THEN log([DT_Output_1].[P_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 16.0 AS [Score_0], 3.0 * (CASE WHEN ([DT_Output_1].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_1].[P_0] IS NULL OR [DT_Output_1].[P_0] > 0.0) THEN log([DT_Output_1].[P_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_1].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_1].[P_0] IS NULL OR [DT_Output_1].[P_0] > 0.0) THEN log([DT_Output_1].[P_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_1].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_1].[P_1] IS NULL OR [DT_Output_1].[P_1] > 0.0) THEN log([DT_Output_1].[P_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_1].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_1].[P_2] IS NULL OR [DT_Output_1].[P_2] > 0.0) THEN log([DT_Output_1].[P_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_1].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_1].[P_3] IS NULL OR [DT_Output_1].[P_3] > 0.0) THEN log([DT_Output_1].[P_3]) ELSE -1.79769313486231e+308 END END) / 4) AS [Proba_0], (3.0 * (CASE WHEN ([DT_Output_1].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_1].[P_1] IS NULL OR [DT_Output_1].[P_1] > 0.0) THEN log([DT_Output_1].[P_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_1].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_1].[P_0] IS NULL OR [DT_Output_1].[P_0] > 0.0) THEN log([DT_Output_1].[P_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_1].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_1].[P_1] IS NULL OR [DT_Output_1].[P_1] > 0.0) THEN log([DT_Output_1].[P_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_1].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_1].[P_2] IS NULL OR [DT_Output_1].[P_2] > 0.0) THEN log([DT_Output_1].[P_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_1].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_1].[P_3] IS NULL OR [DT_Output_1].[P_3] > 0.0) THEN log([DT_Output_1].[P_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 16.0 AS [Score_1], 3.0 * (CASE WHEN ([DT_Output_1].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_1].[P_1] IS NULL OR [DT_Output_1].[P_1] > 0.0) THEN log([DT_Output_1].[P_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_1].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_1].[P_0] IS NULL OR [DT_Output_1].[P_0] > 0.0) THEN log([DT_Output_1].[P_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_1].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_1].[P_1] IS NULL OR [DT_Output_1].[P_1] > 0.0) THEN log([DT_Output_1].[P_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_1].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_1].[P_2] IS NULL OR [DT_Output_1].[P_2] > 0.0) THEN log([DT_Output_1].[P_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_1].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_1].[P_3] IS NULL OR [DT_Output_1].[P_3] > 0.0) THEN log([DT_Output_1].[P_3]) ELSE -1.79769313486231e+308 END END) / 4) AS [Proba_1], (3.0 * (CASE WHEN ([DT_Output_1].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_1].[P_2] IS NULL OR [DT_Output_1].[P_2] > 0.0) THEN log([DT_Output_1].[P_2]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_1].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_1].[P_0] IS NULL OR [DT_Output_1].[P_0] > 0.0) THEN log([DT_Output_1].[P_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_1].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_1].[P_1] IS NULL OR [DT_Output_1].[P_1] > 0.0) THEN log([DT_Output_1].[P_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_1].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_1].[P_2] IS NULL OR [DT_Output_1].[P_2] > 0.0) THEN log([DT_Output_1].[P_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_1].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_1].[P_3] IS NULL OR [DT_Output_1].[P_3] > 0.0) THEN log([DT_Output_1].[P_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 16.0 AS [Score_2], 3.0 * (CASE WHEN ([DT_Output_1].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_1].[P_2] IS NULL OR [DT_Output_1].[P_2] > 0.0) THEN log([DT_Output_1].[P_2]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_1].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_1].[P_0] IS NULL OR [DT_Output_1].[P_0] > 0.0) THEN log([DT_Output_1].[P_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_1].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_1].[P_1] IS NULL OR [DT_Output_1].[P_1] > 0.0) THEN log([DT_Output_1].[P_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_1].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_1].[P_2] IS NULL OR [DT_Output_1].[P_2] > 0.0) THEN log([DT_Output_1].[P_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_1].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_1].[P_3] IS NULL OR [DT_Output_1].[P_3] > 0.0) THEN log([DT_Output_1].[P_3]) ELSE -1.79769313486231e+308 END END) / 4) AS [Proba_2], (3.0 * (CASE WHEN ([DT_Output_1].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_1].[P_3] IS NULL OR [DT_Output_1].[P_3] > 0.0) THEN log([DT_Output_1].[P_3]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_1].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_1].[P_0] IS NULL OR [DT_Output_1].[P_0] > 0.0) THEN log([DT_Output_1].[P_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_1].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_1].[P_1] IS NULL OR [DT_Output_1].[P_1] > 0.0) THEN log([DT_Output_1].[P_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_1].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_1].[P_2] IS NULL OR [DT_Output_1].[P_2] > 0.0) THEN log([DT_Output_1].[P_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_1].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_1].[P_3] IS NULL OR [DT_Output_1].[P_3] > 0.0) THEN log([DT_Output_1].[P_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 16.0 AS [Score_3], 3.0 * (CASE WHEN ([DT_Output_1].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_1].[P_3] IS NULL OR [DT_Output_1].[P_3] > 0.0) THEN log([DT_Output_1].[P_3]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_1].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_1].[P_0] IS NULL OR [DT_Output_1].[P_0] > 0.0) THEN log([DT_Output_1].[P_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_1].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_1].[P_1] IS NULL OR [DT_Output_1].[P_1] > 0.0) THEN log([DT_Output_1].[P_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_1].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_1].[P_2] IS NULL OR [DT_Output_1].[P_2] > 0.0) THEN log([DT_Output_1].[P_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_1].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_1].[P_3] IS NULL OR [DT_Output_1].[P_3] > 0.0) THEN log([DT_Output_1].[P_3]) ELSE -1.79769313486231e+308 END END) / 4) AS [Proba_3] 
FROM [DT_Output_1]), 
[DT_node_lookup_2] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_4 <= -1.621206283569336) THEN 1 ELSE 2 END AS node_id_2 
FROM ##TMP_20180508181542_CODEGEN_I4KECO_ADS_sca_2_OUT AS [ADS_sca_2_OUT]), 
[DT_node_data_2] AS 
(SELECT [Values].nid AS nid, CAST([Values].[P_0] AS FLOAT(53)) AS [P_0], CAST([Values].[P_1] AS FLOAT(53)) AS [P_1], CAST([Values].[P_2] AS FLOAT(53)) AS [P_2], CAST([Values].[P_3] AS FLOAT(53)) AS [P_3], CAST([Values].[D] AS FLOAT(53)) AS [D], CAST([Values].[DP] AS FLOAT(53)) AS [DP] 
FROM (SELECT 1 AS nid, 0.0 AS [P_0], 0.0 AS [P_1], 1.0 AS [P_2], 0.0 AS [P_3], 2 AS [D], 1.0 AS [DP] UNION ALL SELECT 2 AS nid, 0.2918206820788677 AS [P_0], 0.2918206820788677 AS [P_1], 0.12453795376339666 AS [P_2], 0.29182068207886797 AS [P_3], 3 AS [D], 0.29182068207886797 AS [DP]) AS [Values]), 
[DT_Output_2] AS 
(SELECT [DT_node_lookup_2].[KEY] AS [KEY], [DT_node_lookup_2].node_id_2 AS node_id_2, [DT_node_data_2].nid AS nid, [DT_node_data_2].[P_0] AS [P_0], [DT_node_data_2].[P_1] AS [P_1], [DT_node_data_2].[P_2] AS [P_2], [DT_node_data_2].[P_3] AS [P_3], [DT_node_data_2].[D] AS [D], [DT_node_data_2].[DP] AS [DP] 
FROM [DT_node_lookup_2] LEFT OUTER JOIN [DT_node_data_2] ON [DT_node_lookup_2].node_id_2 = [DT_node_data_2].nid), 
[ADB_Model_2] AS 
(SELECT [DT_Output_2].[KEY] AS [KEY], (3.0 * (CASE WHEN ([DT_Output_2].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_2].[P_0] IS NULL OR [DT_Output_2].[P_0] > 0.0) THEN log([DT_Output_2].[P_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_2].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_2].[P_0] IS NULL OR [DT_Output_2].[P_0] > 0.0) THEN log([DT_Output_2].[P_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_2].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_2].[P_1] IS NULL OR [DT_Output_2].[P_1] > 0.0) THEN log([DT_Output_2].[P_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_2].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_2].[P_2] IS NULL OR [DT_Output_2].[P_2] > 0.0) THEN log([DT_Output_2].[P_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_2].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_2].[P_3] IS NULL OR [DT_Output_2].[P_3] > 0.0) THEN log([DT_Output_2].[P_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 16.0 AS [Score_0], 3.0 * (CASE WHEN ([DT_Output_2].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_2].[P_0] IS NULL OR [DT_Output_2].[P_0] > 0.0) THEN log([DT_Output_2].[P_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_2].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_2].[P_0] IS NULL OR [DT_Output_2].[P_0] > 0.0) THEN log([DT_Output_2].[P_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_2].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_2].[P_1] IS NULL OR [DT_Output_2].[P_1] > 0.0) THEN log([DT_Output_2].[P_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_2].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_2].[P_2] IS NULL OR [DT_Output_2].[P_2] > 0.0) THEN log([DT_Output_2].[P_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_2].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_2].[P_3] IS NULL OR [DT_Output_2].[P_3] > 0.0) THEN log([DT_Output_2].[P_3]) ELSE -1.79769313486231e+308 END END) / 4) AS [Proba_0], (3.0 * (CASE WHEN ([DT_Output_2].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_2].[P_1] IS NULL OR [DT_Output_2].[P_1] > 0.0) THEN log([DT_Output_2].[P_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_2].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_2].[P_0] IS NULL OR [DT_Output_2].[P_0] > 0.0) THEN log([DT_Output_2].[P_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_2].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_2].[P_1] IS NULL OR [DT_Output_2].[P_1] > 0.0) THEN log([DT_Output_2].[P_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_2].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_2].[P_2] IS NULL OR [DT_Output_2].[P_2] > 0.0) THEN log([DT_Output_2].[P_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_2].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_2].[P_3] IS NULL OR [DT_Output_2].[P_3] > 0.0) THEN log([DT_Output_2].[P_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 16.0 AS [Score_1], 3.0 * (CASE WHEN ([DT_Output_2].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_2].[P_1] IS NULL OR [DT_Output_2].[P_1] > 0.0) THEN log([DT_Output_2].[P_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_2].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_2].[P_0] IS NULL OR [DT_Output_2].[P_0] > 0.0) THEN log([DT_Output_2].[P_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_2].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_2].[P_1] IS NULL OR [DT_Output_2].[P_1] > 0.0) THEN log([DT_Output_2].[P_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_2].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_2].[P_2] IS NULL OR [DT_Output_2].[P_2] > 0.0) THEN log([DT_Output_2].[P_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_2].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_2].[P_3] IS NULL OR [DT_Output_2].[P_3] > 0.0) THEN log([DT_Output_2].[P_3]) ELSE -1.79769313486231e+308 END END) / 4) AS [Proba_1], (3.0 * (CASE WHEN ([DT_Output_2].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_2].[P_2] IS NULL OR [DT_Output_2].[P_2] > 0.0) THEN log([DT_Output_2].[P_2]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_2].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_2].[P_0] IS NULL OR [DT_Output_2].[P_0] > 0.0) THEN log([DT_Output_2].[P_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_2].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_2].[P_1] IS NULL OR [DT_Output_2].[P_1] > 0.0) THEN log([DT_Output_2].[P_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_2].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_2].[P_2] IS NULL OR [DT_Output_2].[P_2] > 0.0) THEN log([DT_Output_2].[P_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_2].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_2].[P_3] IS NULL OR [DT_Output_2].[P_3] > 0.0) THEN log([DT_Output_2].[P_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 16.0 AS [Score_2], 3.0 * (CASE WHEN ([DT_Output_2].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_2].[P_2] IS NULL OR [DT_Output_2].[P_2] > 0.0) THEN log([DT_Output_2].[P_2]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_2].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_2].[P_0] IS NULL OR [DT_Output_2].[P_0] > 0.0) THEN log([DT_Output_2].[P_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_2].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_2].[P_1] IS NULL OR [DT_Output_2].[P_1] > 0.0) THEN log([DT_Output_2].[P_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_2].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_2].[P_2] IS NULL OR [DT_Output_2].[P_2] > 0.0) THEN log([DT_Output_2].[P_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_2].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_2].[P_3] IS NULL OR [DT_Output_2].[P_3] > 0.0) THEN log([DT_Output_2].[P_3]) ELSE -1.79769313486231e+308 END END) / 4) AS [Proba_2], (3.0 * (CASE WHEN ([DT_Output_2].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_2].[P_3] IS NULL OR [DT_Output_2].[P_3] > 0.0) THEN log([DT_Output_2].[P_3]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_2].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_2].[P_0] IS NULL OR [DT_Output_2].[P_0] > 0.0) THEN log([DT_Output_2].[P_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_2].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_2].[P_1] IS NULL OR [DT_Output_2].[P_1] > 0.0) THEN log([DT_Output_2].[P_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_2].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_2].[P_2] IS NULL OR [DT_Output_2].[P_2] > 0.0) THEN log([DT_Output_2].[P_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_2].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_2].[P_3] IS NULL OR [DT_Output_2].[P_3] > 0.0) THEN log([DT_Output_2].[P_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 16.0 AS [Score_3], 3.0 * (CASE WHEN ([DT_Output_2].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_2].[P_3] IS NULL OR [DT_Output_2].[P_3] > 0.0) THEN log([DT_Output_2].[P_3]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_2].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_2].[P_0] IS NULL OR [DT_Output_2].[P_0] > 0.0) THEN log([DT_Output_2].[P_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_2].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_2].[P_1] IS NULL OR [DT_Output_2].[P_1] > 0.0) THEN log([DT_Output_2].[P_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_2].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_2].[P_2] IS NULL OR [DT_Output_2].[P_2] > 0.0) THEN log([DT_Output_2].[P_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_2].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_2].[P_3] IS NULL OR [DT_Output_2].[P_3] > 0.0) THEN log([DT_Output_2].[P_3]) ELSE -1.79769313486231e+308 END END) / 4) AS [Proba_3] 
FROM [DT_Output_2]), 
[DT_node_lookup_3] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_21 <= -0.2989218831062317) THEN 1 ELSE 2 END AS node_id_2 
FROM ##TMP_20180508181542_CODEGEN_I4KECO_ADS_sca_2_OUT AS [ADS_sca_2_OUT]), 
[DT_node_data_3] AS 
(SELECT [Values].nid AS nid, CAST([Values].[P_0] AS FLOAT(53)) AS [P_0], CAST([Values].[P_1] AS FLOAT(53)) AS [P_1], CAST([Values].[P_2] AS FLOAT(53)) AS [P_2], CAST([Values].[P_3] AS FLOAT(53)) AS [P_3], CAST([Values].[D] AS FLOAT(53)) AS [D], CAST([Values].[DP] AS FLOAT(53)) AS [DP] 
FROM (SELECT 1 AS nid, 0.09073373516968923 AS [P_0], 0.29396567495372056 AS [P_1], 0.5485037187651219 AS [P_2], 0.06679687111146825 AS [P_3], 2 AS [D], 0.5485037187651219 AS [DP] UNION ALL SELECT 2 AS nid, 0.3833871656515855 AS [P_0], 0.21317828653598417 AS [P_1], 7.691941092487706e-09 AS [P_2], 0.40343454012048924 AS [P_3], 3 AS [D], 0.40343454012048924 AS [DP]) AS [Values]), 
[DT_Output_3] AS 
(SELECT [DT_node_lookup_3].[KEY] AS [KEY], [DT_node_lookup_3].node_id_2 AS node_id_2, [DT_node_data_3].nid AS nid, [DT_node_data_3].[P_0] AS [P_0], [DT_node_data_3].[P_1] AS [P_1], [DT_node_data_3].[P_2] AS [P_2], [DT_node_data_3].[P_3] AS [P_3], [DT_node_data_3].[D] AS [D], [DT_node_data_3].[DP] AS [DP] 
FROM [DT_node_lookup_3] LEFT OUTER JOIN [DT_node_data_3] ON [DT_node_lookup_3].node_id_2 = [DT_node_data_3].nid), 
[ADB_Model_3] AS 
(SELECT [DT_Output_3].[KEY] AS [KEY], (3.0 * (CASE WHEN ([DT_Output_3].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_3].[P_0] IS NULL OR [DT_Output_3].[P_0] > 0.0) THEN log([DT_Output_3].[P_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_3].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_3].[P_0] IS NULL OR [DT_Output_3].[P_0] > 0.0) THEN log([DT_Output_3].[P_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_3].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_3].[P_1] IS NULL OR [DT_Output_3].[P_1] > 0.0) THEN log([DT_Output_3].[P_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_3].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_3].[P_2] IS NULL OR [DT_Output_3].[P_2] > 0.0) THEN log([DT_Output_3].[P_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_3].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_3].[P_3] IS NULL OR [DT_Output_3].[P_3] > 0.0) THEN log([DT_Output_3].[P_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 16.0 AS [Score_0], 3.0 * (CASE WHEN ([DT_Output_3].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_3].[P_0] IS NULL OR [DT_Output_3].[P_0] > 0.0) THEN log([DT_Output_3].[P_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_3].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_3].[P_0] IS NULL OR [DT_Output_3].[P_0] > 0.0) THEN log([DT_Output_3].[P_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_3].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_3].[P_1] IS NULL OR [DT_Output_3].[P_1] > 0.0) THEN log([DT_Output_3].[P_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_3].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_3].[P_2] IS NULL OR [DT_Output_3].[P_2] > 0.0) THEN log([DT_Output_3].[P_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_3].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_3].[P_3] IS NULL OR [DT_Output_3].[P_3] > 0.0) THEN log([DT_Output_3].[P_3]) ELSE -1.79769313486231e+308 END END) / 4) AS [Proba_0], (3.0 * (CASE WHEN ([DT_Output_3].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_3].[P_1] IS NULL OR [DT_Output_3].[P_1] > 0.0) THEN log([DT_Output_3].[P_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_3].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_3].[P_0] IS NULL OR [DT_Output_3].[P_0] > 0.0) THEN log([DT_Output_3].[P_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_3].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_3].[P_1] IS NULL OR [DT_Output_3].[P_1] > 0.0) THEN log([DT_Output_3].[P_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_3].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_3].[P_2] IS NULL OR [DT_Output_3].[P_2] > 0.0) THEN log([DT_Output_3].[P_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_3].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_3].[P_3] IS NULL OR [DT_Output_3].[P_3] > 0.0) THEN log([DT_Output_3].[P_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 16.0 AS [Score_1], 3.0 * (CASE WHEN ([DT_Output_3].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_3].[P_1] IS NULL OR [DT_Output_3].[P_1] > 0.0) THEN log([DT_Output_3].[P_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_3].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_3].[P_0] IS NULL OR [DT_Output_3].[P_0] > 0.0) THEN log([DT_Output_3].[P_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_3].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_3].[P_1] IS NULL OR [DT_Output_3].[P_1] > 0.0) THEN log([DT_Output_3].[P_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_3].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_3].[P_2] IS NULL OR [DT_Output_3].[P_2] > 0.0) THEN log([DT_Output_3].[P_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_3].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_3].[P_3] IS NULL OR [DT_Output_3].[P_3] > 0.0) THEN log([DT_Output_3].[P_3]) ELSE -1.79769313486231e+308 END END) / 4) AS [Proba_1], (3.0 * (CASE WHEN ([DT_Output_3].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_3].[P_2] IS NULL OR [DT_Output_3].[P_2] > 0.0) THEN log([DT_Output_3].[P_2]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_3].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_3].[P_0] IS NULL OR [DT_Output_3].[P_0] > 0.0) THEN log([DT_Output_3].[P_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_3].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_3].[P_1] IS NULL OR [DT_Output_3].[P_1] > 0.0) THEN log([DT_Output_3].[P_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_3].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_3].[P_2] IS NULL OR [DT_Output_3].[P_2] > 0.0) THEN log([DT_Output_3].[P_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_3].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_3].[P_3] IS NULL OR [DT_Output_3].[P_3] > 0.0) THEN log([DT_Output_3].[P_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 16.0 AS [Score_2], 3.0 * (CASE WHEN ([DT_Output_3].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_3].[P_2] IS NULL OR [DT_Output_3].[P_2] > 0.0) THEN log([DT_Output_3].[P_2]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_3].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_3].[P_0] IS NULL OR [DT_Output_3].[P_0] > 0.0) THEN log([DT_Output_3].[P_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_3].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_3].[P_1] IS NULL OR [DT_Output_3].[P_1] > 0.0) THEN log([DT_Output_3].[P_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_3].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_3].[P_2] IS NULL OR [DT_Output_3].[P_2] > 0.0) THEN log([DT_Output_3].[P_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_3].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_3].[P_3] IS NULL OR [DT_Output_3].[P_3] > 0.0) THEN log([DT_Output_3].[P_3]) ELSE -1.79769313486231e+308 END END) / 4) AS [Proba_2], (3.0 * (CASE WHEN ([DT_Output_3].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_3].[P_3] IS NULL OR [DT_Output_3].[P_3] > 0.0) THEN log([DT_Output_3].[P_3]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_3].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_3].[P_0] IS NULL OR [DT_Output_3].[P_0] > 0.0) THEN log([DT_Output_3].[P_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_3].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_3].[P_1] IS NULL OR [DT_Output_3].[P_1] > 0.0) THEN log([DT_Output_3].[P_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_3].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_3].[P_2] IS NULL OR [DT_Output_3].[P_2] > 0.0) THEN log([DT_Output_3].[P_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_3].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_3].[P_3] IS NULL OR [DT_Output_3].[P_3] > 0.0) THEN log([DT_Output_3].[P_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 16.0 AS [Score_3], 3.0 * (CASE WHEN ([DT_Output_3].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_3].[P_3] IS NULL OR [DT_Output_3].[P_3] > 0.0) THEN log([DT_Output_3].[P_3]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_3].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_3].[P_0] IS NULL OR [DT_Output_3].[P_0] > 0.0) THEN log([DT_Output_3].[P_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_3].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_3].[P_1] IS NULL OR [DT_Output_3].[P_1] > 0.0) THEN log([DT_Output_3].[P_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_3].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_3].[P_2] IS NULL OR [DT_Output_3].[P_2] > 0.0) THEN log([DT_Output_3].[P_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_3].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_3].[P_3] IS NULL OR [DT_Output_3].[P_3] > 0.0) THEN log([DT_Output_3].[P_3]) ELSE -1.79769313486231e+308 END END) / 4) AS [Proba_3] 
FROM [DT_Output_3]), 
[DT_node_lookup_4] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_65 <= -1.1065082550048828) THEN 1 ELSE 2 END AS node_id_2 
FROM ##TMP_20180508181542_CODEGEN_I4KECO_ADS_sca_2_OUT AS [ADS_sca_2_OUT]), 
[DT_node_data_4] AS 
(SELECT [Values].nid AS nid, CAST([Values].[P_0] AS FLOAT(53)) AS [P_0], CAST([Values].[P_1] AS FLOAT(53)) AS [P_1], CAST([Values].[P_2] AS FLOAT(53)) AS [P_2], CAST([Values].[P_3] AS FLOAT(53)) AS [P_3], CAST([Values].[D] AS FLOAT(53)) AS [D], CAST([Values].[DP] AS FLOAT(53)) AS [DP] 
FROM (SELECT 1 AS nid, 0.0013314875637218423 AS [P_0], 0.12196160397398638 AS [P_1], 5.730136688677447e-10 AS [P_2], 0.8767069078892781 AS [P_3], 3 AS [D], 0.8767069078892781 AS [DP] UNION ALL SELECT 2 AS nid, 0.3462437599829164 AS [P_0], 0.29955551684044857 AS [P_1], 0.3467590938830496 AS [P_2], 0.007441629293585402 AS [P_3], 2 AS [D], 0.3467590938830496 AS [DP]) AS [Values]), 
[DT_Output_4] AS 
(SELECT [DT_node_lookup_4].[KEY] AS [KEY], [DT_node_lookup_4].node_id_2 AS node_id_2, [DT_node_data_4].nid AS nid, [DT_node_data_4].[P_0] AS [P_0], [DT_node_data_4].[P_1] AS [P_1], [DT_node_data_4].[P_2] AS [P_2], [DT_node_data_4].[P_3] AS [P_3], [DT_node_data_4].[D] AS [D], [DT_node_data_4].[DP] AS [DP] 
FROM [DT_node_lookup_4] LEFT OUTER JOIN [DT_node_data_4] ON [DT_node_lookup_4].node_id_2 = [DT_node_data_4].nid), 
[ADB_Model_4] AS 
(SELECT [DT_Output_4].[KEY] AS [KEY], (3.0 * (CASE WHEN ([DT_Output_4].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_4].[P_0] IS NULL OR [DT_Output_4].[P_0] > 0.0) THEN log([DT_Output_4].[P_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_4].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_4].[P_0] IS NULL OR [DT_Output_4].[P_0] > 0.0) THEN log([DT_Output_4].[P_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_4].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_4].[P_1] IS NULL OR [DT_Output_4].[P_1] > 0.0) THEN log([DT_Output_4].[P_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_4].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_4].[P_2] IS NULL OR [DT_Output_4].[P_2] > 0.0) THEN log([DT_Output_4].[P_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_4].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_4].[P_3] IS NULL OR [DT_Output_4].[P_3] > 0.0) THEN log([DT_Output_4].[P_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 16.0 AS [Score_0], 3.0 * (CASE WHEN ([DT_Output_4].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_4].[P_0] IS NULL OR [DT_Output_4].[P_0] > 0.0) THEN log([DT_Output_4].[P_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_4].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_4].[P_0] IS NULL OR [DT_Output_4].[P_0] > 0.0) THEN log([DT_Output_4].[P_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_4].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_4].[P_1] IS NULL OR [DT_Output_4].[P_1] > 0.0) THEN log([DT_Output_4].[P_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_4].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_4].[P_2] IS NULL OR [DT_Output_4].[P_2] > 0.0) THEN log([DT_Output_4].[P_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_4].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_4].[P_3] IS NULL OR [DT_Output_4].[P_3] > 0.0) THEN log([DT_Output_4].[P_3]) ELSE -1.79769313486231e+308 END END) / 4) AS [Proba_0], (3.0 * (CASE WHEN ([DT_Output_4].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_4].[P_1] IS NULL OR [DT_Output_4].[P_1] > 0.0) THEN log([DT_Output_4].[P_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_4].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_4].[P_0] IS NULL OR [DT_Output_4].[P_0] > 0.0) THEN log([DT_Output_4].[P_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_4].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_4].[P_1] IS NULL OR [DT_Output_4].[P_1] > 0.0) THEN log([DT_Output_4].[P_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_4].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_4].[P_2] IS NULL OR [DT_Output_4].[P_2] > 0.0) THEN log([DT_Output_4].[P_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_4].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_4].[P_3] IS NULL OR [DT_Output_4].[P_3] > 0.0) THEN log([DT_Output_4].[P_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 16.0 AS [Score_1], 3.0 * (CASE WHEN ([DT_Output_4].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_4].[P_1] IS NULL OR [DT_Output_4].[P_1] > 0.0) THEN log([DT_Output_4].[P_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_4].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_4].[P_0] IS NULL OR [DT_Output_4].[P_0] > 0.0) THEN log([DT_Output_4].[P_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_4].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_4].[P_1] IS NULL OR [DT_Output_4].[P_1] > 0.0) THEN log([DT_Output_4].[P_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_4].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_4].[P_2] IS NULL OR [DT_Output_4].[P_2] > 0.0) THEN log([DT_Output_4].[P_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_4].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_4].[P_3] IS NULL OR [DT_Output_4].[P_3] > 0.0) THEN log([DT_Output_4].[P_3]) ELSE -1.79769313486231e+308 END END) / 4) AS [Proba_1], (3.0 * (CASE WHEN ([DT_Output_4].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_4].[P_2] IS NULL OR [DT_Output_4].[P_2] > 0.0) THEN log([DT_Output_4].[P_2]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_4].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_4].[P_0] IS NULL OR [DT_Output_4].[P_0] > 0.0) THEN log([DT_Output_4].[P_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_4].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_4].[P_1] IS NULL OR [DT_Output_4].[P_1] > 0.0) THEN log([DT_Output_4].[P_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_4].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_4].[P_2] IS NULL OR [DT_Output_4].[P_2] > 0.0) THEN log([DT_Output_4].[P_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_4].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_4].[P_3] IS NULL OR [DT_Output_4].[P_3] > 0.0) THEN log([DT_Output_4].[P_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 16.0 AS [Score_2], 3.0 * (CASE WHEN ([DT_Output_4].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_4].[P_2] IS NULL OR [DT_Output_4].[P_2] > 0.0) THEN log([DT_Output_4].[P_2]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_4].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_4].[P_0] IS NULL OR [DT_Output_4].[P_0] > 0.0) THEN log([DT_Output_4].[P_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_4].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_4].[P_1] IS NULL OR [DT_Output_4].[P_1] > 0.0) THEN log([DT_Output_4].[P_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_4].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_4].[P_2] IS NULL OR [DT_Output_4].[P_2] > 0.0) THEN log([DT_Output_4].[P_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_4].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_4].[P_3] IS NULL OR [DT_Output_4].[P_3] > 0.0) THEN log([DT_Output_4].[P_3]) ELSE -1.79769313486231e+308 END END) / 4) AS [Proba_2], (3.0 * (CASE WHEN ([DT_Output_4].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_4].[P_3] IS NULL OR [DT_Output_4].[P_3] > 0.0) THEN log([DT_Output_4].[P_3]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_4].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_4].[P_0] IS NULL OR [DT_Output_4].[P_0] > 0.0) THEN log([DT_Output_4].[P_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_4].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_4].[P_1] IS NULL OR [DT_Output_4].[P_1] > 0.0) THEN log([DT_Output_4].[P_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_4].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_4].[P_2] IS NULL OR [DT_Output_4].[P_2] > 0.0) THEN log([DT_Output_4].[P_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_4].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_4].[P_3] IS NULL OR [DT_Output_4].[P_3] > 0.0) THEN log([DT_Output_4].[P_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 16.0 AS [Score_3], 3.0 * (CASE WHEN ([DT_Output_4].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_4].[P_3] IS NULL OR [DT_Output_4].[P_3] > 0.0) THEN log([DT_Output_4].[P_3]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_4].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_4].[P_0] IS NULL OR [DT_Output_4].[P_0] > 0.0) THEN log([DT_Output_4].[P_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_4].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_4].[P_1] IS NULL OR [DT_Output_4].[P_1] > 0.0) THEN log([DT_Output_4].[P_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_4].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_4].[P_2] IS NULL OR [DT_Output_4].[P_2] > 0.0) THEN log([DT_Output_4].[P_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_4].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_4].[P_3] IS NULL OR [DT_Output_4].[P_3] > 0.0) THEN log([DT_Output_4].[P_3]) ELSE -1.79769313486231e+308 END END) / 4) AS [Proba_3] 
FROM [DT_Output_4]), 
[DT_node_lookup_5] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_21 <= -0.2012716382741928) THEN 1 ELSE 2 END AS node_id_2 
FROM ##TMP_20180508181542_CODEGEN_I4KECO_ADS_sca_2_OUT AS [ADS_sca_2_OUT]), 
[DT_node_data_5] AS 
(SELECT [Values].nid AS nid, CAST([Values].[P_0] AS FLOAT(53)) AS [P_0], CAST([Values].[P_1] AS FLOAT(53)) AS [P_1], CAST([Values].[P_2] AS FLOAT(53)) AS [P_2], CAST([Values].[P_3] AS FLOAT(53)) AS [P_3], CAST([Values].[D] AS FLOAT(53)) AS [D], CAST([Values].[DP] AS FLOAT(53)) AS [DP] 
FROM (SELECT 1 AS nid, 0.33414094039395453 AS [P_0], 0.33393492910785 AS [P_1], 0.33137685322222743 AS [P_2], 0.0005472772759680953 AS [P_3], 0 AS [D], 0.33414094039395453 AS [DP] UNION ALL SELECT 2 AS nid, 0.01703260290686447 AS [P_0], 0.017603001964336545 AS [P_1], 0.024685740496256502 AS [P_2], 0.9406786546325425 AS [P_3], 3 AS [D], 0.9406786546325425 AS [DP]) AS [Values]), 
[DT_Output_5] AS 
(SELECT [DT_node_lookup_5].[KEY] AS [KEY], [DT_node_lookup_5].node_id_2 AS node_id_2, [DT_node_data_5].nid AS nid, [DT_node_data_5].[P_0] AS [P_0], [DT_node_data_5].[P_1] AS [P_1], [DT_node_data_5].[P_2] AS [P_2], [DT_node_data_5].[P_3] AS [P_3], [DT_node_data_5].[D] AS [D], [DT_node_data_5].[DP] AS [DP] 
FROM [DT_node_lookup_5] LEFT OUTER JOIN [DT_node_data_5] ON [DT_node_lookup_5].node_id_2 = [DT_node_data_5].nid), 
[ADB_Model_5] AS 
(SELECT [DT_Output_5].[KEY] AS [KEY], (3.0 * (CASE WHEN ([DT_Output_5].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_5].[P_0] IS NULL OR [DT_Output_5].[P_0] > 0.0) THEN log([DT_Output_5].[P_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_5].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_5].[P_0] IS NULL OR [DT_Output_5].[P_0] > 0.0) THEN log([DT_Output_5].[P_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_5].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_5].[P_1] IS NULL OR [DT_Output_5].[P_1] > 0.0) THEN log([DT_Output_5].[P_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_5].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_5].[P_2] IS NULL OR [DT_Output_5].[P_2] > 0.0) THEN log([DT_Output_5].[P_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_5].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_5].[P_3] IS NULL OR [DT_Output_5].[P_3] > 0.0) THEN log([DT_Output_5].[P_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 16.0 AS [Score_0], 3.0 * (CASE WHEN ([DT_Output_5].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_5].[P_0] IS NULL OR [DT_Output_5].[P_0] > 0.0) THEN log([DT_Output_5].[P_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_5].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_5].[P_0] IS NULL OR [DT_Output_5].[P_0] > 0.0) THEN log([DT_Output_5].[P_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_5].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_5].[P_1] IS NULL OR [DT_Output_5].[P_1] > 0.0) THEN log([DT_Output_5].[P_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_5].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_5].[P_2] IS NULL OR [DT_Output_5].[P_2] > 0.0) THEN log([DT_Output_5].[P_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_5].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_5].[P_3] IS NULL OR [DT_Output_5].[P_3] > 0.0) THEN log([DT_Output_5].[P_3]) ELSE -1.79769313486231e+308 END END) / 4) AS [Proba_0], (3.0 * (CASE WHEN ([DT_Output_5].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_5].[P_1] IS NULL OR [DT_Output_5].[P_1] > 0.0) THEN log([DT_Output_5].[P_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_5].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_5].[P_0] IS NULL OR [DT_Output_5].[P_0] > 0.0) THEN log([DT_Output_5].[P_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_5].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_5].[P_1] IS NULL OR [DT_Output_5].[P_1] > 0.0) THEN log([DT_Output_5].[P_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_5].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_5].[P_2] IS NULL OR [DT_Output_5].[P_2] > 0.0) THEN log([DT_Output_5].[P_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_5].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_5].[P_3] IS NULL OR [DT_Output_5].[P_3] > 0.0) THEN log([DT_Output_5].[P_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 16.0 AS [Score_1], 3.0 * (CASE WHEN ([DT_Output_5].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_5].[P_1] IS NULL OR [DT_Output_5].[P_1] > 0.0) THEN log([DT_Output_5].[P_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_5].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_5].[P_0] IS NULL OR [DT_Output_5].[P_0] > 0.0) THEN log([DT_Output_5].[P_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_5].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_5].[P_1] IS NULL OR [DT_Output_5].[P_1] > 0.0) THEN log([DT_Output_5].[P_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_5].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_5].[P_2] IS NULL OR [DT_Output_5].[P_2] > 0.0) THEN log([DT_Output_5].[P_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_5].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_5].[P_3] IS NULL OR [DT_Output_5].[P_3] > 0.0) THEN log([DT_Output_5].[P_3]) ELSE -1.79769313486231e+308 END END) / 4) AS [Proba_1], (3.0 * (CASE WHEN ([DT_Output_5].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_5].[P_2] IS NULL OR [DT_Output_5].[P_2] > 0.0) THEN log([DT_Output_5].[P_2]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_5].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_5].[P_0] IS NULL OR [DT_Output_5].[P_0] > 0.0) THEN log([DT_Output_5].[P_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_5].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_5].[P_1] IS NULL OR [DT_Output_5].[P_1] > 0.0) THEN log([DT_Output_5].[P_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_5].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_5].[P_2] IS NULL OR [DT_Output_5].[P_2] > 0.0) THEN log([DT_Output_5].[P_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_5].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_5].[P_3] IS NULL OR [DT_Output_5].[P_3] > 0.0) THEN log([DT_Output_5].[P_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 16.0 AS [Score_2], 3.0 * (CASE WHEN ([DT_Output_5].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_5].[P_2] IS NULL OR [DT_Output_5].[P_2] > 0.0) THEN log([DT_Output_5].[P_2]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_5].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_5].[P_0] IS NULL OR [DT_Output_5].[P_0] > 0.0) THEN log([DT_Output_5].[P_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_5].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_5].[P_1] IS NULL OR [DT_Output_5].[P_1] > 0.0) THEN log([DT_Output_5].[P_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_5].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_5].[P_2] IS NULL OR [DT_Output_5].[P_2] > 0.0) THEN log([DT_Output_5].[P_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_5].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_5].[P_3] IS NULL OR [DT_Output_5].[P_3] > 0.0) THEN log([DT_Output_5].[P_3]) ELSE -1.79769313486231e+308 END END) / 4) AS [Proba_2], (3.0 * (CASE WHEN ([DT_Output_5].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_5].[P_3] IS NULL OR [DT_Output_5].[P_3] > 0.0) THEN log([DT_Output_5].[P_3]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_5].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_5].[P_0] IS NULL OR [DT_Output_5].[P_0] > 0.0) THEN log([DT_Output_5].[P_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_5].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_5].[P_1] IS NULL OR [DT_Output_5].[P_1] > 0.0) THEN log([DT_Output_5].[P_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_5].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_5].[P_2] IS NULL OR [DT_Output_5].[P_2] > 0.0) THEN log([DT_Output_5].[P_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_5].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_5].[P_3] IS NULL OR [DT_Output_5].[P_3] > 0.0) THEN log([DT_Output_5].[P_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 16.0 AS [Score_3], 3.0 * (CASE WHEN ([DT_Output_5].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_5].[P_3] IS NULL OR [DT_Output_5].[P_3] > 0.0) THEN log([DT_Output_5].[P_3]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_5].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_5].[P_0] IS NULL OR [DT_Output_5].[P_0] > 0.0) THEN log([DT_Output_5].[P_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_5].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_5].[P_1] IS NULL OR [DT_Output_5].[P_1] > 0.0) THEN log([DT_Output_5].[P_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_5].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_5].[P_2] IS NULL OR [DT_Output_5].[P_2] > 0.0) THEN log([DT_Output_5].[P_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_5].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_5].[P_3] IS NULL OR [DT_Output_5].[P_3] > 0.0) THEN log([DT_Output_5].[P_3]) ELSE -1.79769313486231e+308 END END) / 4) AS [Proba_3] 
FROM [DT_Output_5]), 
[DT_node_lookup_6] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_65 <= -1.1065082550048828) THEN 1 ELSE 2 END AS node_id_2 
FROM ##TMP_20180508181542_CODEGEN_I4KECO_ADS_sca_2_OUT AS [ADS_sca_2_OUT]), 
[DT_node_data_6] AS 
(SELECT [Values].nid AS nid, CAST([Values].[P_0] AS FLOAT(53)) AS [P_0], CAST([Values].[P_1] AS FLOAT(53)) AS [P_1], CAST([Values].[P_2] AS FLOAT(53)) AS [P_2], CAST([Values].[P_3] AS FLOAT(53)) AS [P_3], CAST([Values].[D] AS FLOAT(53)) AS [D], CAST([Values].[DP] AS FLOAT(53)) AS [DP] 
FROM (SELECT 1 AS nid, 0.02399308059709872 AS [P_0], 0.003214728994074512 AS [P_1], 0.0016102241799279696 AS [P_2], 0.9711819662288987 AS [P_3], 3 AS [D], 0.9711819662288987 AS [DP] UNION ALL SELECT 2 AS nid, 0.30708282099584416 AS [P_0], 0.31233083255353333 AS [P_1], 0.31273608413315257 AS [P_2], 0.06785026231747002 AS [P_3], 2 AS [D], 0.31273608413315257 AS [DP]) AS [Values]), 
[DT_Output_6] AS 
(SELECT [DT_node_lookup_6].[KEY] AS [KEY], [DT_node_lookup_6].node_id_2 AS node_id_2, [DT_node_data_6].nid AS nid, [DT_node_data_6].[P_0] AS [P_0], [DT_node_data_6].[P_1] AS [P_1], [DT_node_data_6].[P_2] AS [P_2], [DT_node_data_6].[P_3] AS [P_3], [DT_node_data_6].[D] AS [D], [DT_node_data_6].[DP] AS [DP] 
FROM [DT_node_lookup_6] LEFT OUTER JOIN [DT_node_data_6] ON [DT_node_lookup_6].node_id_2 = [DT_node_data_6].nid), 
[ADB_Model_6] AS 
(SELECT [DT_Output_6].[KEY] AS [KEY], (3.0 * (CASE WHEN ([DT_Output_6].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_6].[P_0] IS NULL OR [DT_Output_6].[P_0] > 0.0) THEN log([DT_Output_6].[P_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_6].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_6].[P_0] IS NULL OR [DT_Output_6].[P_0] > 0.0) THEN log([DT_Output_6].[P_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_6].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_6].[P_1] IS NULL OR [DT_Output_6].[P_1] > 0.0) THEN log([DT_Output_6].[P_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_6].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_6].[P_2] IS NULL OR [DT_Output_6].[P_2] > 0.0) THEN log([DT_Output_6].[P_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_6].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_6].[P_3] IS NULL OR [DT_Output_6].[P_3] > 0.0) THEN log([DT_Output_6].[P_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 16.0 AS [Score_0], 3.0 * (CASE WHEN ([DT_Output_6].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_6].[P_0] IS NULL OR [DT_Output_6].[P_0] > 0.0) THEN log([DT_Output_6].[P_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_6].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_6].[P_0] IS NULL OR [DT_Output_6].[P_0] > 0.0) THEN log([DT_Output_6].[P_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_6].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_6].[P_1] IS NULL OR [DT_Output_6].[P_1] > 0.0) THEN log([DT_Output_6].[P_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_6].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_6].[P_2] IS NULL OR [DT_Output_6].[P_2] > 0.0) THEN log([DT_Output_6].[P_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_6].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_6].[P_3] IS NULL OR [DT_Output_6].[P_3] > 0.0) THEN log([DT_Output_6].[P_3]) ELSE -1.79769313486231e+308 END END) / 4) AS [Proba_0], (3.0 * (CASE WHEN ([DT_Output_6].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_6].[P_1] IS NULL OR [DT_Output_6].[P_1] > 0.0) THEN log([DT_Output_6].[P_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_6].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_6].[P_0] IS NULL OR [DT_Output_6].[P_0] > 0.0) THEN log([DT_Output_6].[P_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_6].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_6].[P_1] IS NULL OR [DT_Output_6].[P_1] > 0.0) THEN log([DT_Output_6].[P_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_6].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_6].[P_2] IS NULL OR [DT_Output_6].[P_2] > 0.0) THEN log([DT_Output_6].[P_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_6].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_6].[P_3] IS NULL OR [DT_Output_6].[P_3] > 0.0) THEN log([DT_Output_6].[P_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 16.0 AS [Score_1], 3.0 * (CASE WHEN ([DT_Output_6].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_6].[P_1] IS NULL OR [DT_Output_6].[P_1] > 0.0) THEN log([DT_Output_6].[P_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_6].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_6].[P_0] IS NULL OR [DT_Output_6].[P_0] > 0.0) THEN log([DT_Output_6].[P_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_6].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_6].[P_1] IS NULL OR [DT_Output_6].[P_1] > 0.0) THEN log([DT_Output_6].[P_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_6].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_6].[P_2] IS NULL OR [DT_Output_6].[P_2] > 0.0) THEN log([DT_Output_6].[P_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_6].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_6].[P_3] IS NULL OR [DT_Output_6].[P_3] > 0.0) THEN log([DT_Output_6].[P_3]) ELSE -1.79769313486231e+308 END END) / 4) AS [Proba_1], (3.0 * (CASE WHEN ([DT_Output_6].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_6].[P_2] IS NULL OR [DT_Output_6].[P_2] > 0.0) THEN log([DT_Output_6].[P_2]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_6].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_6].[P_0] IS NULL OR [DT_Output_6].[P_0] > 0.0) THEN log([DT_Output_6].[P_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_6].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_6].[P_1] IS NULL OR [DT_Output_6].[P_1] > 0.0) THEN log([DT_Output_6].[P_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_6].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_6].[P_2] IS NULL OR [DT_Output_6].[P_2] > 0.0) THEN log([DT_Output_6].[P_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_6].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_6].[P_3] IS NULL OR [DT_Output_6].[P_3] > 0.0) THEN log([DT_Output_6].[P_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 16.0 AS [Score_2], 3.0 * (CASE WHEN ([DT_Output_6].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_6].[P_2] IS NULL OR [DT_Output_6].[P_2] > 0.0) THEN log([DT_Output_6].[P_2]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_6].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_6].[P_0] IS NULL OR [DT_Output_6].[P_0] > 0.0) THEN log([DT_Output_6].[P_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_6].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_6].[P_1] IS NULL OR [DT_Output_6].[P_1] > 0.0) THEN log([DT_Output_6].[P_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_6].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_6].[P_2] IS NULL OR [DT_Output_6].[P_2] > 0.0) THEN log([DT_Output_6].[P_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_6].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_6].[P_3] IS NULL OR [DT_Output_6].[P_3] > 0.0) THEN log([DT_Output_6].[P_3]) ELSE -1.79769313486231e+308 END END) / 4) AS [Proba_2], (3.0 * (CASE WHEN ([DT_Output_6].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_6].[P_3] IS NULL OR [DT_Output_6].[P_3] > 0.0) THEN log([DT_Output_6].[P_3]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_6].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_6].[P_0] IS NULL OR [DT_Output_6].[P_0] > 0.0) THEN log([DT_Output_6].[P_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_6].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_6].[P_1] IS NULL OR [DT_Output_6].[P_1] > 0.0) THEN log([DT_Output_6].[P_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_6].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_6].[P_2] IS NULL OR [DT_Output_6].[P_2] > 0.0) THEN log([DT_Output_6].[P_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_6].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_6].[P_3] IS NULL OR [DT_Output_6].[P_3] > 0.0) THEN log([DT_Output_6].[P_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 16.0 AS [Score_3], 3.0 * (CASE WHEN ([DT_Output_6].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_6].[P_3] IS NULL OR [DT_Output_6].[P_3] > 0.0) THEN log([DT_Output_6].[P_3]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_6].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_6].[P_0] IS NULL OR [DT_Output_6].[P_0] > 0.0) THEN log([DT_Output_6].[P_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_6].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_6].[P_1] IS NULL OR [DT_Output_6].[P_1] > 0.0) THEN log([DT_Output_6].[P_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_6].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_6].[P_2] IS NULL OR [DT_Output_6].[P_2] > 0.0) THEN log([DT_Output_6].[P_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_6].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_6].[P_3] IS NULL OR [DT_Output_6].[P_3] > 0.0) THEN log([DT_Output_6].[P_3]) ELSE -1.79769313486231e+308 END END) / 4) AS [Proba_3] 
FROM [DT_Output_6]), 
[DT_node_lookup_7] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_21 <= -0.10862140357494354) THEN 1 ELSE 2 END AS node_id_2 
FROM ##TMP_20180508181542_CODEGEN_I4KECO_ADS_sca_2_OUT AS [ADS_sca_2_OUT]), 
[DT_node_data_7] AS 
(SELECT [Values].nid AS nid, CAST([Values].[P_0] AS FLOAT(53)) AS [P_0], CAST([Values].[P_1] AS FLOAT(53)) AS [P_1], CAST([Values].[P_2] AS FLOAT(53)) AS [P_2], CAST([Values].[P_3] AS FLOAT(53)) AS [P_3], CAST([Values].[D] AS FLOAT(53)) AS [D], CAST([Values].[DP] AS FLOAT(53)) AS [DP] 
FROM (SELECT 1 AS nid, 0.31270953580697386 AS [P_0], 0.31767660105149564 AS [P_1], 0.3437847465806852 AS [P_2], 0.02582911656084529 AS [P_3], 2 AS [D], 0.3437847465806852 AS [DP] UNION ALL SELECT 2 AS nid, 0.14237054480759445 AS [P_0], 0.1338454852724934 AS [P_1], 0.08903562592286919 AS [P_2], 0.6347483439970429 AS [P_3], 3 AS [D], 0.6347483439970429 AS [DP]) AS [Values]), 
[DT_Output_7] AS 
(SELECT [DT_node_lookup_7].[KEY] AS [KEY], [DT_node_lookup_7].node_id_2 AS node_id_2, [DT_node_data_7].nid AS nid, [DT_node_data_7].[P_0] AS [P_0], [DT_node_data_7].[P_1] AS [P_1], [DT_node_data_7].[P_2] AS [P_2], [DT_node_data_7].[P_3] AS [P_3], [DT_node_data_7].[D] AS [D], [DT_node_data_7].[DP] AS [DP] 
FROM [DT_node_lookup_7] LEFT OUTER JOIN [DT_node_data_7] ON [DT_node_lookup_7].node_id_2 = [DT_node_data_7].nid), 
[ADB_Model_7] AS 
(SELECT [DT_Output_7].[KEY] AS [KEY], (3.0 * (CASE WHEN ([DT_Output_7].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_7].[P_0] IS NULL OR [DT_Output_7].[P_0] > 0.0) THEN log([DT_Output_7].[P_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_7].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_7].[P_0] IS NULL OR [DT_Output_7].[P_0] > 0.0) THEN log([DT_Output_7].[P_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_7].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_7].[P_1] IS NULL OR [DT_Output_7].[P_1] > 0.0) THEN log([DT_Output_7].[P_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_7].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_7].[P_2] IS NULL OR [DT_Output_7].[P_2] > 0.0) THEN log([DT_Output_7].[P_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_7].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_7].[P_3] IS NULL OR [DT_Output_7].[P_3] > 0.0) THEN log([DT_Output_7].[P_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 16.0 AS [Score_0], 3.0 * (CASE WHEN ([DT_Output_7].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_7].[P_0] IS NULL OR [DT_Output_7].[P_0] > 0.0) THEN log([DT_Output_7].[P_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_7].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_7].[P_0] IS NULL OR [DT_Output_7].[P_0] > 0.0) THEN log([DT_Output_7].[P_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_7].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_7].[P_1] IS NULL OR [DT_Output_7].[P_1] > 0.0) THEN log([DT_Output_7].[P_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_7].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_7].[P_2] IS NULL OR [DT_Output_7].[P_2] > 0.0) THEN log([DT_Output_7].[P_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_7].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_7].[P_3] IS NULL OR [DT_Output_7].[P_3] > 0.0) THEN log([DT_Output_7].[P_3]) ELSE -1.79769313486231e+308 END END) / 4) AS [Proba_0], (3.0 * (CASE WHEN ([DT_Output_7].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_7].[P_1] IS NULL OR [DT_Output_7].[P_1] > 0.0) THEN log([DT_Output_7].[P_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_7].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_7].[P_0] IS NULL OR [DT_Output_7].[P_0] > 0.0) THEN log([DT_Output_7].[P_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_7].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_7].[P_1] IS NULL OR [DT_Output_7].[P_1] > 0.0) THEN log([DT_Output_7].[P_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_7].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_7].[P_2] IS NULL OR [DT_Output_7].[P_2] > 0.0) THEN log([DT_Output_7].[P_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_7].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_7].[P_3] IS NULL OR [DT_Output_7].[P_3] > 0.0) THEN log([DT_Output_7].[P_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 16.0 AS [Score_1], 3.0 * (CASE WHEN ([DT_Output_7].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_7].[P_1] IS NULL OR [DT_Output_7].[P_1] > 0.0) THEN log([DT_Output_7].[P_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_7].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_7].[P_0] IS NULL OR [DT_Output_7].[P_0] > 0.0) THEN log([DT_Output_7].[P_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_7].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_7].[P_1] IS NULL OR [DT_Output_7].[P_1] > 0.0) THEN log([DT_Output_7].[P_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_7].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_7].[P_2] IS NULL OR [DT_Output_7].[P_2] > 0.0) THEN log([DT_Output_7].[P_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_7].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_7].[P_3] IS NULL OR [DT_Output_7].[P_3] > 0.0) THEN log([DT_Output_7].[P_3]) ELSE -1.79769313486231e+308 END END) / 4) AS [Proba_1], (3.0 * (CASE WHEN ([DT_Output_7].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_7].[P_2] IS NULL OR [DT_Output_7].[P_2] > 0.0) THEN log([DT_Output_7].[P_2]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_7].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_7].[P_0] IS NULL OR [DT_Output_7].[P_0] > 0.0) THEN log([DT_Output_7].[P_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_7].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_7].[P_1] IS NULL OR [DT_Output_7].[P_1] > 0.0) THEN log([DT_Output_7].[P_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_7].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_7].[P_2] IS NULL OR [DT_Output_7].[P_2] > 0.0) THEN log([DT_Output_7].[P_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_7].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_7].[P_3] IS NULL OR [DT_Output_7].[P_3] > 0.0) THEN log([DT_Output_7].[P_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 16.0 AS [Score_2], 3.0 * (CASE WHEN ([DT_Output_7].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_7].[P_2] IS NULL OR [DT_Output_7].[P_2] > 0.0) THEN log([DT_Output_7].[P_2]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_7].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_7].[P_0] IS NULL OR [DT_Output_7].[P_0] > 0.0) THEN log([DT_Output_7].[P_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_7].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_7].[P_1] IS NULL OR [DT_Output_7].[P_1] > 0.0) THEN log([DT_Output_7].[P_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_7].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_7].[P_2] IS NULL OR [DT_Output_7].[P_2] > 0.0) THEN log([DT_Output_7].[P_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_7].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_7].[P_3] IS NULL OR [DT_Output_7].[P_3] > 0.0) THEN log([DT_Output_7].[P_3]) ELSE -1.79769313486231e+308 END END) / 4) AS [Proba_2], (3.0 * (CASE WHEN ([DT_Output_7].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_7].[P_3] IS NULL OR [DT_Output_7].[P_3] > 0.0) THEN log([DT_Output_7].[P_3]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_7].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_7].[P_0] IS NULL OR [DT_Output_7].[P_0] > 0.0) THEN log([DT_Output_7].[P_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_7].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_7].[P_1] IS NULL OR [DT_Output_7].[P_1] > 0.0) THEN log([DT_Output_7].[P_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_7].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_7].[P_2] IS NULL OR [DT_Output_7].[P_2] > 0.0) THEN log([DT_Output_7].[P_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_7].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_7].[P_3] IS NULL OR [DT_Output_7].[P_3] > 0.0) THEN log([DT_Output_7].[P_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 16.0 AS [Score_3], 3.0 * (CASE WHEN ([DT_Output_7].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_7].[P_3] IS NULL OR [DT_Output_7].[P_3] > 0.0) THEN log([DT_Output_7].[P_3]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_7].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_7].[P_0] IS NULL OR [DT_Output_7].[P_0] > 0.0) THEN log([DT_Output_7].[P_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_7].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_7].[P_1] IS NULL OR [DT_Output_7].[P_1] > 0.0) THEN log([DT_Output_7].[P_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_7].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_7].[P_2] IS NULL OR [DT_Output_7].[P_2] > 0.0) THEN log([DT_Output_7].[P_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_7].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_7].[P_3] IS NULL OR [DT_Output_7].[P_3] > 0.0) THEN log([DT_Output_7].[P_3]) ELSE -1.79769313486231e+308 END END) / 4) AS [Proba_3] 
FROM [DT_Output_7]), 
[DT_node_lookup_8] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_50 <= 1.6655446290969849) THEN 1 ELSE 2 END AS node_id_2 
FROM ##TMP_20180508181542_CODEGEN_I4KECO_ADS_sca_2_OUT AS [ADS_sca_2_OUT]), 
[DT_node_data_8] AS 
(SELECT [Values].nid AS nid, CAST([Values].[P_0] AS FLOAT(53)) AS [P_0], CAST([Values].[P_1] AS FLOAT(53)) AS [P_1], CAST([Values].[P_2] AS FLOAT(53)) AS [P_2], CAST([Values].[P_3] AS FLOAT(53)) AS [P_3], CAST([Values].[D] AS FLOAT(53)) AS [D], CAST([Values].[DP] AS FLOAT(53)) AS [DP] 
FROM (SELECT 1 AS nid, 0.28869247258333885 AS [P_0], 0.2934150615214358 AS [P_1], 0.2934150615214358 AS [P_2], 0.1244774043737895 AS [P_3], 1 AS [D], 0.2934150615214358 AS [DP] UNION ALL SELECT 2 AS nid, 0.02719441578912188 AS [P_0], 0.0 AS [P_1], 0.0 AS [P_2], 0.9728055842108781 AS [P_3], 3 AS [D], 0.9728055842108781 AS [DP]) AS [Values]), 
[DT_Output_8] AS 
(SELECT [DT_node_lookup_8].[KEY] AS [KEY], [DT_node_lookup_8].node_id_2 AS node_id_2, [DT_node_data_8].nid AS nid, [DT_node_data_8].[P_0] AS [P_0], [DT_node_data_8].[P_1] AS [P_1], [DT_node_data_8].[P_2] AS [P_2], [DT_node_data_8].[P_3] AS [P_3], [DT_node_data_8].[D] AS [D], [DT_node_data_8].[DP] AS [DP] 
FROM [DT_node_lookup_8] LEFT OUTER JOIN [DT_node_data_8] ON [DT_node_lookup_8].node_id_2 = [DT_node_data_8].nid), 
[ADB_Model_8] AS 
(SELECT [DT_Output_8].[KEY] AS [KEY], (3.0 * (CASE WHEN ([DT_Output_8].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_8].[P_0] IS NULL OR [DT_Output_8].[P_0] > 0.0) THEN log([DT_Output_8].[P_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_8].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_8].[P_0] IS NULL OR [DT_Output_8].[P_0] > 0.0) THEN log([DT_Output_8].[P_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_8].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_8].[P_1] IS NULL OR [DT_Output_8].[P_1] > 0.0) THEN log([DT_Output_8].[P_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_8].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_8].[P_2] IS NULL OR [DT_Output_8].[P_2] > 0.0) THEN log([DT_Output_8].[P_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_8].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_8].[P_3] IS NULL OR [DT_Output_8].[P_3] > 0.0) THEN log([DT_Output_8].[P_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 16.0 AS [Score_0], 3.0 * (CASE WHEN ([DT_Output_8].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_8].[P_0] IS NULL OR [DT_Output_8].[P_0] > 0.0) THEN log([DT_Output_8].[P_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_8].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_8].[P_0] IS NULL OR [DT_Output_8].[P_0] > 0.0) THEN log([DT_Output_8].[P_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_8].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_8].[P_1] IS NULL OR [DT_Output_8].[P_1] > 0.0) THEN log([DT_Output_8].[P_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_8].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_8].[P_2] IS NULL OR [DT_Output_8].[P_2] > 0.0) THEN log([DT_Output_8].[P_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_8].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_8].[P_3] IS NULL OR [DT_Output_8].[P_3] > 0.0) THEN log([DT_Output_8].[P_3]) ELSE -1.79769313486231e+308 END END) / 4) AS [Proba_0], (3.0 * (CASE WHEN ([DT_Output_8].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_8].[P_1] IS NULL OR [DT_Output_8].[P_1] > 0.0) THEN log([DT_Output_8].[P_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_8].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_8].[P_0] IS NULL OR [DT_Output_8].[P_0] > 0.0) THEN log([DT_Output_8].[P_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_8].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_8].[P_1] IS NULL OR [DT_Output_8].[P_1] > 0.0) THEN log([DT_Output_8].[P_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_8].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_8].[P_2] IS NULL OR [DT_Output_8].[P_2] > 0.0) THEN log([DT_Output_8].[P_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_8].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_8].[P_3] IS NULL OR [DT_Output_8].[P_3] > 0.0) THEN log([DT_Output_8].[P_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 16.0 AS [Score_1], 3.0 * (CASE WHEN ([DT_Output_8].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_8].[P_1] IS NULL OR [DT_Output_8].[P_1] > 0.0) THEN log([DT_Output_8].[P_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_8].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_8].[P_0] IS NULL OR [DT_Output_8].[P_0] > 0.0) THEN log([DT_Output_8].[P_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_8].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_8].[P_1] IS NULL OR [DT_Output_8].[P_1] > 0.0) THEN log([DT_Output_8].[P_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_8].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_8].[P_2] IS NULL OR [DT_Output_8].[P_2] > 0.0) THEN log([DT_Output_8].[P_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_8].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_8].[P_3] IS NULL OR [DT_Output_8].[P_3] > 0.0) THEN log([DT_Output_8].[P_3]) ELSE -1.79769313486231e+308 END END) / 4) AS [Proba_1], (3.0 * (CASE WHEN ([DT_Output_8].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_8].[P_2] IS NULL OR [DT_Output_8].[P_2] > 0.0) THEN log([DT_Output_8].[P_2]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_8].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_8].[P_0] IS NULL OR [DT_Output_8].[P_0] > 0.0) THEN log([DT_Output_8].[P_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_8].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_8].[P_1] IS NULL OR [DT_Output_8].[P_1] > 0.0) THEN log([DT_Output_8].[P_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_8].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_8].[P_2] IS NULL OR [DT_Output_8].[P_2] > 0.0) THEN log([DT_Output_8].[P_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_8].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_8].[P_3] IS NULL OR [DT_Output_8].[P_3] > 0.0) THEN log([DT_Output_8].[P_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 16.0 AS [Score_2], 3.0 * (CASE WHEN ([DT_Output_8].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_8].[P_2] IS NULL OR [DT_Output_8].[P_2] > 0.0) THEN log([DT_Output_8].[P_2]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_8].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_8].[P_0] IS NULL OR [DT_Output_8].[P_0] > 0.0) THEN log([DT_Output_8].[P_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_8].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_8].[P_1] IS NULL OR [DT_Output_8].[P_1] > 0.0) THEN log([DT_Output_8].[P_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_8].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_8].[P_2] IS NULL OR [DT_Output_8].[P_2] > 0.0) THEN log([DT_Output_8].[P_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_8].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_8].[P_3] IS NULL OR [DT_Output_8].[P_3] > 0.0) THEN log([DT_Output_8].[P_3]) ELSE -1.79769313486231e+308 END END) / 4) AS [Proba_2], (3.0 * (CASE WHEN ([DT_Output_8].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_8].[P_3] IS NULL OR [DT_Output_8].[P_3] > 0.0) THEN log([DT_Output_8].[P_3]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_8].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_8].[P_0] IS NULL OR [DT_Output_8].[P_0] > 0.0) THEN log([DT_Output_8].[P_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_8].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_8].[P_1] IS NULL OR [DT_Output_8].[P_1] > 0.0) THEN log([DT_Output_8].[P_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_8].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_8].[P_2] IS NULL OR [DT_Output_8].[P_2] > 0.0) THEN log([DT_Output_8].[P_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_8].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_8].[P_3] IS NULL OR [DT_Output_8].[P_3] > 0.0) THEN log([DT_Output_8].[P_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 16.0 AS [Score_3], 3.0 * (CASE WHEN ([DT_Output_8].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_8].[P_3] IS NULL OR [DT_Output_8].[P_3] > 0.0) THEN log([DT_Output_8].[P_3]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_8].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_8].[P_0] IS NULL OR [DT_Output_8].[P_0] > 0.0) THEN log([DT_Output_8].[P_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_8].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_8].[P_1] IS NULL OR [DT_Output_8].[P_1] > 0.0) THEN log([DT_Output_8].[P_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_8].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_8].[P_2] IS NULL OR [DT_Output_8].[P_2] > 0.0) THEN log([DT_Output_8].[P_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_8].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_8].[P_3] IS NULL OR [DT_Output_8].[P_3] > 0.0) THEN log([DT_Output_8].[P_3]) ELSE -1.79769313486231e+308 END END) / 4) AS [Proba_3] 
FROM [DT_Output_8]), 
[DT_node_lookup_9] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_46 <= -0.22731533646583557) THEN 1 ELSE 2 END AS node_id_2 
FROM ##TMP_20180508181542_CODEGEN_I4KECO_ADS_sca_2_OUT AS [ADS_sca_2_OUT]), 
[DT_node_data_9] AS 
(SELECT [Values].nid AS nid, CAST([Values].[P_0] AS FLOAT(53)) AS [P_0], CAST([Values].[P_1] AS FLOAT(53)) AS [P_1], CAST([Values].[P_2] AS FLOAT(53)) AS [P_2], CAST([Values].[P_3] AS FLOAT(53)) AS [P_3], CAST([Values].[D] AS FLOAT(53)) AS [D], CAST([Values].[DP] AS FLOAT(53)) AS [DP] 
FROM (SELECT 1 AS nid, 0.4352568258855832 AS [P_0], 0.02800110590441554 AS [P_1], 0.4622237641777107 AS [P_2], 0.07451830403229054 AS [P_3], 2 AS [D], 0.4622237641777107 AS [DP] UNION ALL SELECT 2 AS nid, 0.1300699972004844 AS [P_0], 0.3937157734759884 AS [P_1], 0.11261236598175087 AS [P_2], 0.36360186334177635 AS [P_3], 1 AS [D], 0.3937157734759884 AS [DP]) AS [Values]), 
[DT_Output_9] AS 
(SELECT [DT_node_lookup_9].[KEY] AS [KEY], [DT_node_lookup_9].node_id_2 AS node_id_2, [DT_node_data_9].nid AS nid, [DT_node_data_9].[P_0] AS [P_0], [DT_node_data_9].[P_1] AS [P_1], [DT_node_data_9].[P_2] AS [P_2], [DT_node_data_9].[P_3] AS [P_3], [DT_node_data_9].[D] AS [D], [DT_node_data_9].[DP] AS [DP] 
FROM [DT_node_lookup_9] LEFT OUTER JOIN [DT_node_data_9] ON [DT_node_lookup_9].node_id_2 = [DT_node_data_9].nid), 
[ADB_Model_9] AS 
(SELECT [DT_Output_9].[KEY] AS [KEY], (3.0 * (CASE WHEN ([DT_Output_9].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_9].[P_0] IS NULL OR [DT_Output_9].[P_0] > 0.0) THEN log([DT_Output_9].[P_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_9].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_9].[P_0] IS NULL OR [DT_Output_9].[P_0] > 0.0) THEN log([DT_Output_9].[P_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_9].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_9].[P_1] IS NULL OR [DT_Output_9].[P_1] > 0.0) THEN log([DT_Output_9].[P_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_9].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_9].[P_2] IS NULL OR [DT_Output_9].[P_2] > 0.0) THEN log([DT_Output_9].[P_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_9].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_9].[P_3] IS NULL OR [DT_Output_9].[P_3] > 0.0) THEN log([DT_Output_9].[P_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 16.0 AS [Score_0], 3.0 * (CASE WHEN ([DT_Output_9].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_9].[P_0] IS NULL OR [DT_Output_9].[P_0] > 0.0) THEN log([DT_Output_9].[P_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_9].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_9].[P_0] IS NULL OR [DT_Output_9].[P_0] > 0.0) THEN log([DT_Output_9].[P_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_9].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_9].[P_1] IS NULL OR [DT_Output_9].[P_1] > 0.0) THEN log([DT_Output_9].[P_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_9].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_9].[P_2] IS NULL OR [DT_Output_9].[P_2] > 0.0) THEN log([DT_Output_9].[P_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_9].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_9].[P_3] IS NULL OR [DT_Output_9].[P_3] > 0.0) THEN log([DT_Output_9].[P_3]) ELSE -1.79769313486231e+308 END END) / 4) AS [Proba_0], (3.0 * (CASE WHEN ([DT_Output_9].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_9].[P_1] IS NULL OR [DT_Output_9].[P_1] > 0.0) THEN log([DT_Output_9].[P_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_9].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_9].[P_0] IS NULL OR [DT_Output_9].[P_0] > 0.0) THEN log([DT_Output_9].[P_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_9].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_9].[P_1] IS NULL OR [DT_Output_9].[P_1] > 0.0) THEN log([DT_Output_9].[P_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_9].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_9].[P_2] IS NULL OR [DT_Output_9].[P_2] > 0.0) THEN log([DT_Output_9].[P_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_9].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_9].[P_3] IS NULL OR [DT_Output_9].[P_3] > 0.0) THEN log([DT_Output_9].[P_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 16.0 AS [Score_1], 3.0 * (CASE WHEN ([DT_Output_9].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_9].[P_1] IS NULL OR [DT_Output_9].[P_1] > 0.0) THEN log([DT_Output_9].[P_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_9].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_9].[P_0] IS NULL OR [DT_Output_9].[P_0] > 0.0) THEN log([DT_Output_9].[P_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_9].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_9].[P_1] IS NULL OR [DT_Output_9].[P_1] > 0.0) THEN log([DT_Output_9].[P_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_9].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_9].[P_2] IS NULL OR [DT_Output_9].[P_2] > 0.0) THEN log([DT_Output_9].[P_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_9].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_9].[P_3] IS NULL OR [DT_Output_9].[P_3] > 0.0) THEN log([DT_Output_9].[P_3]) ELSE -1.79769313486231e+308 END END) / 4) AS [Proba_1], (3.0 * (CASE WHEN ([DT_Output_9].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_9].[P_2] IS NULL OR [DT_Output_9].[P_2] > 0.0) THEN log([DT_Output_9].[P_2]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_9].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_9].[P_0] IS NULL OR [DT_Output_9].[P_0] > 0.0) THEN log([DT_Output_9].[P_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_9].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_9].[P_1] IS NULL OR [DT_Output_9].[P_1] > 0.0) THEN log([DT_Output_9].[P_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_9].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_9].[P_2] IS NULL OR [DT_Output_9].[P_2] > 0.0) THEN log([DT_Output_9].[P_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_9].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_9].[P_3] IS NULL OR [DT_Output_9].[P_3] > 0.0) THEN log([DT_Output_9].[P_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 16.0 AS [Score_2], 3.0 * (CASE WHEN ([DT_Output_9].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_9].[P_2] IS NULL OR [DT_Output_9].[P_2] > 0.0) THEN log([DT_Output_9].[P_2]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_9].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_9].[P_0] IS NULL OR [DT_Output_9].[P_0] > 0.0) THEN log([DT_Output_9].[P_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_9].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_9].[P_1] IS NULL OR [DT_Output_9].[P_1] > 0.0) THEN log([DT_Output_9].[P_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_9].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_9].[P_2] IS NULL OR [DT_Output_9].[P_2] > 0.0) THEN log([DT_Output_9].[P_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_9].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_9].[P_3] IS NULL OR [DT_Output_9].[P_3] > 0.0) THEN log([DT_Output_9].[P_3]) ELSE -1.79769313486231e+308 END END) / 4) AS [Proba_2], (3.0 * (CASE WHEN ([DT_Output_9].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_9].[P_3] IS NULL OR [DT_Output_9].[P_3] > 0.0) THEN log([DT_Output_9].[P_3]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_9].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_9].[P_0] IS NULL OR [DT_Output_9].[P_0] > 0.0) THEN log([DT_Output_9].[P_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_9].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_9].[P_1] IS NULL OR [DT_Output_9].[P_1] > 0.0) THEN log([DT_Output_9].[P_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_9].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_9].[P_2] IS NULL OR [DT_Output_9].[P_2] > 0.0) THEN log([DT_Output_9].[P_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_9].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_9].[P_3] IS NULL OR [DT_Output_9].[P_3] > 0.0) THEN log([DT_Output_9].[P_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 16.0 AS [Score_3], 3.0 * (CASE WHEN ([DT_Output_9].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_9].[P_3] IS NULL OR [DT_Output_9].[P_3] > 0.0) THEN log([DT_Output_9].[P_3]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_9].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_9].[P_0] IS NULL OR [DT_Output_9].[P_0] > 0.0) THEN log([DT_Output_9].[P_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_9].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_9].[P_1] IS NULL OR [DT_Output_9].[P_1] > 0.0) THEN log([DT_Output_9].[P_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_9].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_9].[P_2] IS NULL OR [DT_Output_9].[P_2] > 0.0) THEN log([DT_Output_9].[P_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_9].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_9].[P_3] IS NULL OR [DT_Output_9].[P_3] > 0.0) THEN log([DT_Output_9].[P_3]) ELSE -1.79769313486231e+308 END END) / 4) AS [Proba_3] 
FROM [DT_Output_9])
 INSERT INTO ##TMP_20180508181543_CODEGEN_55FSDT_ADB_B0 ([KEY], [Score_0], [Proba_0], [Score_1], [Proba_1], [Score_2], [Proba_2], [Score_3], [Proba_3]) SELECT [ADB_B0].[KEY], [ADB_B0].[Score_0], [ADB_B0].[Proba_0], [ADB_B0].[Score_1], [ADB_B0].[Proba_1], [ADB_B0].[Score_2], [ADB_B0].[Proba_2], [ADB_B0].[Score_3], [ADB_B0].[Proba_3] 
FROM (SELECT [ADB_esu_0].[KEY] AS [KEY], [ADB_esu_0].[Score_0] AS [Score_0], [ADB_esu_0].[Proba_0] AS [Proba_0], [ADB_esu_0].[Score_1] AS [Score_1], [ADB_esu_0].[Proba_1] AS [Proba_1], [ADB_esu_0].[Score_2] AS [Score_2], [ADB_esu_0].[Proba_2] AS [Proba_2], [ADB_esu_0].[Score_3] AS [Score_3], [ADB_esu_0].[Proba_3] AS [Proba_3] 
FROM (SELECT [ADB_Model_0].[KEY] AS [KEY], [ADB_Model_0].[Score_0] AS [Score_0], [ADB_Model_0].[Proba_0] AS [Proba_0], [ADB_Model_0].[Score_1] AS [Score_1], [ADB_Model_0].[Proba_1] AS [Proba_1], [ADB_Model_0].[Score_2] AS [Score_2], [ADB_Model_0].[Proba_2] AS [Proba_2], [ADB_Model_0].[Score_3] AS [Score_3], [ADB_Model_0].[Proba_3] AS [Proba_3] 
FROM [ADB_Model_0] UNION ALL SELECT [ADB_Model_1].[KEY] AS [KEY], [ADB_Model_1].[Score_0] AS [Score_0], [ADB_Model_1].[Proba_0] AS [Proba_0], [ADB_Model_1].[Score_1] AS [Score_1], [ADB_Model_1].[Proba_1] AS [Proba_1], [ADB_Model_1].[Score_2] AS [Score_2], [ADB_Model_1].[Proba_2] AS [Proba_2], [ADB_Model_1].[Score_3] AS [Score_3], [ADB_Model_1].[Proba_3] AS [Proba_3] 
FROM [ADB_Model_1] UNION ALL SELECT [ADB_Model_2].[KEY] AS [KEY], [ADB_Model_2].[Score_0] AS [Score_0], [ADB_Model_2].[Proba_0] AS [Proba_0], [ADB_Model_2].[Score_1] AS [Score_1], [ADB_Model_2].[Proba_1] AS [Proba_1], [ADB_Model_2].[Score_2] AS [Score_2], [ADB_Model_2].[Proba_2] AS [Proba_2], [ADB_Model_2].[Score_3] AS [Score_3], [ADB_Model_2].[Proba_3] AS [Proba_3] 
FROM [ADB_Model_2] UNION ALL SELECT [ADB_Model_3].[KEY] AS [KEY], [ADB_Model_3].[Score_0] AS [Score_0], [ADB_Model_3].[Proba_0] AS [Proba_0], [ADB_Model_3].[Score_1] AS [Score_1], [ADB_Model_3].[Proba_1] AS [Proba_1], [ADB_Model_3].[Score_2] AS [Score_2], [ADB_Model_3].[Proba_2] AS [Proba_2], [ADB_Model_3].[Score_3] AS [Score_3], [ADB_Model_3].[Proba_3] AS [Proba_3] 
FROM [ADB_Model_3] UNION ALL SELECT [ADB_Model_4].[KEY] AS [KEY], [ADB_Model_4].[Score_0] AS [Score_0], [ADB_Model_4].[Proba_0] AS [Proba_0], [ADB_Model_4].[Score_1] AS [Score_1], [ADB_Model_4].[Proba_1] AS [Proba_1], [ADB_Model_4].[Score_2] AS [Score_2], [ADB_Model_4].[Proba_2] AS [Proba_2], [ADB_Model_4].[Score_3] AS [Score_3], [ADB_Model_4].[Proba_3] AS [Proba_3] 
FROM [ADB_Model_4] UNION ALL SELECT [ADB_Model_5].[KEY] AS [KEY], [ADB_Model_5].[Score_0] AS [Score_0], [ADB_Model_5].[Proba_0] AS [Proba_0], [ADB_Model_5].[Score_1] AS [Score_1], [ADB_Model_5].[Proba_1] AS [Proba_1], [ADB_Model_5].[Score_2] AS [Score_2], [ADB_Model_5].[Proba_2] AS [Proba_2], [ADB_Model_5].[Score_3] AS [Score_3], [ADB_Model_5].[Proba_3] AS [Proba_3] 
FROM [ADB_Model_5] UNION ALL SELECT [ADB_Model_6].[KEY] AS [KEY], [ADB_Model_6].[Score_0] AS [Score_0], [ADB_Model_6].[Proba_0] AS [Proba_0], [ADB_Model_6].[Score_1] AS [Score_1], [ADB_Model_6].[Proba_1] AS [Proba_1], [ADB_Model_6].[Score_2] AS [Score_2], [ADB_Model_6].[Proba_2] AS [Proba_2], [ADB_Model_6].[Score_3] AS [Score_3], [ADB_Model_6].[Proba_3] AS [Proba_3] 
FROM [ADB_Model_6] UNION ALL SELECT [ADB_Model_7].[KEY] AS [KEY], [ADB_Model_7].[Score_0] AS [Score_0], [ADB_Model_7].[Proba_0] AS [Proba_0], [ADB_Model_7].[Score_1] AS [Score_1], [ADB_Model_7].[Proba_1] AS [Proba_1], [ADB_Model_7].[Score_2] AS [Score_2], [ADB_Model_7].[Proba_2] AS [Proba_2], [ADB_Model_7].[Score_3] AS [Score_3], [ADB_Model_7].[Proba_3] AS [Proba_3] 
FROM [ADB_Model_7] UNION ALL SELECT [ADB_Model_8].[KEY] AS [KEY], [ADB_Model_8].[Score_0] AS [Score_0], [ADB_Model_8].[Proba_0] AS [Proba_0], [ADB_Model_8].[Score_1] AS [Score_1], [ADB_Model_8].[Proba_1] AS [Proba_1], [ADB_Model_8].[Score_2] AS [Score_2], [ADB_Model_8].[Proba_2] AS [Proba_2], [ADB_Model_8].[Score_3] AS [Score_3], [ADB_Model_8].[Proba_3] AS [Proba_3] 
FROM [ADB_Model_8] UNION ALL SELECT [ADB_Model_9].[KEY] AS [KEY], [ADB_Model_9].[Score_0] AS [Score_0], [ADB_Model_9].[Proba_0] AS [Proba_0], [ADB_Model_9].[Score_1] AS [Score_1], [ADB_Model_9].[Proba_1] AS [Proba_1], [ADB_Model_9].[Score_2] AS [Score_2], [ADB_Model_9].[Proba_2] AS [Proba_2], [ADB_Model_9].[Score_3] AS [Score_3], [ADB_Model_9].[Proba_3] AS [Proba_3] 
FROM [ADB_Model_9]) AS [ADB_esu_0]) AS [ADB_B0]

-- Code For temporary table ##TMP_20180508181543_CODEGEN_HBPLRM_ADB_B1 part 1. Create 


CREATE TABLE ##TMP_20180508181543_CODEGEN_HBPLRM_ADB_B1 (
	[KEY] BIGINT NULL, 
	[Score_0] FLOAT NULL, 
	[Proba_0] FLOAT NULL, 
	[Score_1] FLOAT NULL, 
	[Proba_1] FLOAT NULL, 
	[Score_2] FLOAT NULL, 
	[Proba_2] FLOAT NULL, 
	[Score_3] FLOAT NULL, 
	[Proba_3] FLOAT NULL
)



-- Code For temporary table ##TMP_20180508181543_CODEGEN_HBPLRM_ADB_B1 part 2. Populate

WITH [DT_node_lookup_10] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_80 <= -0.07528503984212875) THEN 1 ELSE 2 END AS node_id_2 
FROM ##TMP_20180508181542_CODEGEN_I4KECO_ADS_sca_2_OUT AS [ADS_sca_2_OUT]), 
[DT_node_data_10] AS 
(SELECT [Values].nid AS nid, CAST([Values].[P_0] AS FLOAT(53)) AS [P_0], CAST([Values].[P_1] AS FLOAT(53)) AS [P_1], CAST([Values].[P_2] AS FLOAT(53)) AS [P_2], CAST([Values].[P_3] AS FLOAT(53)) AS [P_3], CAST([Values].[D] AS FLOAT(53)) AS [D], CAST([Values].[DP] AS FLOAT(53)) AS [DP] 
FROM (SELECT 1 AS nid, 0.059575410445453364 AS [P_0], 0.15673219304008323 AS [P_1], 0.4354684307380015 AS [P_2], 0.3482239657764618 AS [P_3], 2 AS [D], 0.4354684307380015 AS [DP] UNION ALL SELECT 2 AS nid, 0.4435560449450058 AS [P_0], 0.34480155833910653 AS [P_1], 0.061481615899603916 AS [P_2], 0.1501607808162837 AS [P_3], 0 AS [D], 0.4435560449450058 AS [DP]) AS [Values]), 
[DT_Output_10] AS 
(SELECT [DT_node_lookup_10].[KEY] AS [KEY], [DT_node_lookup_10].node_id_2 AS node_id_2, [DT_node_data_10].nid AS nid, [DT_node_data_10].[P_0] AS [P_0], [DT_node_data_10].[P_1] AS [P_1], [DT_node_data_10].[P_2] AS [P_2], [DT_node_data_10].[P_3] AS [P_3], [DT_node_data_10].[D] AS [D], [DT_node_data_10].[DP] AS [DP] 
FROM [DT_node_lookup_10] LEFT OUTER JOIN [DT_node_data_10] ON [DT_node_lookup_10].node_id_2 = [DT_node_data_10].nid), 
[ADB_Model_10] AS 
(SELECT [DT_Output_10].[KEY] AS [KEY], (3.0 * (CASE WHEN ([DT_Output_10].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_10].[P_0] IS NULL OR [DT_Output_10].[P_0] > 0.0) THEN log([DT_Output_10].[P_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_10].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_10].[P_0] IS NULL OR [DT_Output_10].[P_0] > 0.0) THEN log([DT_Output_10].[P_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_10].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_10].[P_1] IS NULL OR [DT_Output_10].[P_1] > 0.0) THEN log([DT_Output_10].[P_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_10].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_10].[P_2] IS NULL OR [DT_Output_10].[P_2] > 0.0) THEN log([DT_Output_10].[P_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_10].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_10].[P_3] IS NULL OR [DT_Output_10].[P_3] > 0.0) THEN log([DT_Output_10].[P_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 16.0 AS [Score_0], 3.0 * (CASE WHEN ([DT_Output_10].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_10].[P_0] IS NULL OR [DT_Output_10].[P_0] > 0.0) THEN log([DT_Output_10].[P_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_10].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_10].[P_0] IS NULL OR [DT_Output_10].[P_0] > 0.0) THEN log([DT_Output_10].[P_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_10].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_10].[P_1] IS NULL OR [DT_Output_10].[P_1] > 0.0) THEN log([DT_Output_10].[P_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_10].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_10].[P_2] IS NULL OR [DT_Output_10].[P_2] > 0.0) THEN log([DT_Output_10].[P_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_10].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_10].[P_3] IS NULL OR [DT_Output_10].[P_3] > 0.0) THEN log([DT_Output_10].[P_3]) ELSE -1.79769313486231e+308 END END) / 4) AS [Proba_0], (3.0 * (CASE WHEN ([DT_Output_10].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_10].[P_1] IS NULL OR [DT_Output_10].[P_1] > 0.0) THEN log([DT_Output_10].[P_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_10].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_10].[P_0] IS NULL OR [DT_Output_10].[P_0] > 0.0) THEN log([DT_Output_10].[P_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_10].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_10].[P_1] IS NULL OR [DT_Output_10].[P_1] > 0.0) THEN log([DT_Output_10].[P_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_10].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_10].[P_2] IS NULL OR [DT_Output_10].[P_2] > 0.0) THEN log([DT_Output_10].[P_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_10].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_10].[P_3] IS NULL OR [DT_Output_10].[P_3] > 0.0) THEN log([DT_Output_10].[P_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 16.0 AS [Score_1], 3.0 * (CASE WHEN ([DT_Output_10].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_10].[P_1] IS NULL OR [DT_Output_10].[P_1] > 0.0) THEN log([DT_Output_10].[P_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_10].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_10].[P_0] IS NULL OR [DT_Output_10].[P_0] > 0.0) THEN log([DT_Output_10].[P_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_10].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_10].[P_1] IS NULL OR [DT_Output_10].[P_1] > 0.0) THEN log([DT_Output_10].[P_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_10].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_10].[P_2] IS NULL OR [DT_Output_10].[P_2] > 0.0) THEN log([DT_Output_10].[P_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_10].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_10].[P_3] IS NULL OR [DT_Output_10].[P_3] > 0.0) THEN log([DT_Output_10].[P_3]) ELSE -1.79769313486231e+308 END END) / 4) AS [Proba_1], (3.0 * (CASE WHEN ([DT_Output_10].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_10].[P_2] IS NULL OR [DT_Output_10].[P_2] > 0.0) THEN log([DT_Output_10].[P_2]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_10].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_10].[P_0] IS NULL OR [DT_Output_10].[P_0] > 0.0) THEN log([DT_Output_10].[P_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_10].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_10].[P_1] IS NULL OR [DT_Output_10].[P_1] > 0.0) THEN log([DT_Output_10].[P_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_10].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_10].[P_2] IS NULL OR [DT_Output_10].[P_2] > 0.0) THEN log([DT_Output_10].[P_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_10].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_10].[P_3] IS NULL OR [DT_Output_10].[P_3] > 0.0) THEN log([DT_Output_10].[P_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 16.0 AS [Score_2], 3.0 * (CASE WHEN ([DT_Output_10].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_10].[P_2] IS NULL OR [DT_Output_10].[P_2] > 0.0) THEN log([DT_Output_10].[P_2]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_10].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_10].[P_0] IS NULL OR [DT_Output_10].[P_0] > 0.0) THEN log([DT_Output_10].[P_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_10].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_10].[P_1] IS NULL OR [DT_Output_10].[P_1] > 0.0) THEN log([DT_Output_10].[P_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_10].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_10].[P_2] IS NULL OR [DT_Output_10].[P_2] > 0.0) THEN log([DT_Output_10].[P_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_10].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_10].[P_3] IS NULL OR [DT_Output_10].[P_3] > 0.0) THEN log([DT_Output_10].[P_3]) ELSE -1.79769313486231e+308 END END) / 4) AS [Proba_2], (3.0 * (CASE WHEN ([DT_Output_10].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_10].[P_3] IS NULL OR [DT_Output_10].[P_3] > 0.0) THEN log([DT_Output_10].[P_3]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_10].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_10].[P_0] IS NULL OR [DT_Output_10].[P_0] > 0.0) THEN log([DT_Output_10].[P_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_10].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_10].[P_1] IS NULL OR [DT_Output_10].[P_1] > 0.0) THEN log([DT_Output_10].[P_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_10].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_10].[P_2] IS NULL OR [DT_Output_10].[P_2] > 0.0) THEN log([DT_Output_10].[P_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_10].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_10].[P_3] IS NULL OR [DT_Output_10].[P_3] > 0.0) THEN log([DT_Output_10].[P_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 16.0 AS [Score_3], 3.0 * (CASE WHEN ([DT_Output_10].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_10].[P_3] IS NULL OR [DT_Output_10].[P_3] > 0.0) THEN log([DT_Output_10].[P_3]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_10].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_10].[P_0] IS NULL OR [DT_Output_10].[P_0] > 0.0) THEN log([DT_Output_10].[P_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_10].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_10].[P_1] IS NULL OR [DT_Output_10].[P_1] > 0.0) THEN log([DT_Output_10].[P_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_10].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_10].[P_2] IS NULL OR [DT_Output_10].[P_2] > 0.0) THEN log([DT_Output_10].[P_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_10].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_10].[P_3] IS NULL OR [DT_Output_10].[P_3] > 0.0) THEN log([DT_Output_10].[P_3]) ELSE -1.79769313486231e+308 END END) / 4) AS [Proba_3] 
FROM [DT_Output_10]), 
[DT_node_lookup_11] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_46 <= -0.9107336401939392) THEN 1 ELSE 2 END AS node_id_2 
FROM ##TMP_20180508181542_CODEGEN_I4KECO_ADS_sca_2_OUT AS [ADS_sca_2_OUT]), 
[DT_node_data_11] AS 
(SELECT [Values].nid AS nid, CAST([Values].[P_0] AS FLOAT(53)) AS [P_0], CAST([Values].[P_1] AS FLOAT(53)) AS [P_1], CAST([Values].[P_2] AS FLOAT(53)) AS [P_2], CAST([Values].[P_3] AS FLOAT(53)) AS [P_3], CAST([Values].[D] AS FLOAT(53)) AS [D], CAST([Values].[DP] AS FLOAT(53)) AS [DP] 
FROM (SELECT 1 AS nid, 0.0 AS [P_0], 1.2992187337497247e-07 AS [P_1], 0.9999998700781267 AS [P_2], 0.0 AS [P_3], 2 AS [D], 0.9999998700781267 AS [DP] UNION ALL SELECT 2 AS nid, 0.28848063006604285 AS [P_0], 0.2884806100681408 AS [P_1], 0.13455812979977327 AS [P_2], 0.288480630066043 AS [P_3], 3 AS [D], 0.288480630066043 AS [DP]) AS [Values]), 
[DT_Output_11] AS 
(SELECT [DT_node_lookup_11].[KEY] AS [KEY], [DT_node_lookup_11].node_id_2 AS node_id_2, [DT_node_data_11].nid AS nid, [DT_node_data_11].[P_0] AS [P_0], [DT_node_data_11].[P_1] AS [P_1], [DT_node_data_11].[P_2] AS [P_2], [DT_node_data_11].[P_3] AS [P_3], [DT_node_data_11].[D] AS [D], [DT_node_data_11].[DP] AS [DP] 
FROM [DT_node_lookup_11] LEFT OUTER JOIN [DT_node_data_11] ON [DT_node_lookup_11].node_id_2 = [DT_node_data_11].nid), 
[ADB_Model_11] AS 
(SELECT [DT_Output_11].[KEY] AS [KEY], (3.0 * (CASE WHEN ([DT_Output_11].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_11].[P_0] IS NULL OR [DT_Output_11].[P_0] > 0.0) THEN log([DT_Output_11].[P_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_11].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_11].[P_0] IS NULL OR [DT_Output_11].[P_0] > 0.0) THEN log([DT_Output_11].[P_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_11].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_11].[P_1] IS NULL OR [DT_Output_11].[P_1] > 0.0) THEN log([DT_Output_11].[P_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_11].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_11].[P_2] IS NULL OR [DT_Output_11].[P_2] > 0.0) THEN log([DT_Output_11].[P_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_11].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_11].[P_3] IS NULL OR [DT_Output_11].[P_3] > 0.0) THEN log([DT_Output_11].[P_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 16.0 AS [Score_0], 3.0 * (CASE WHEN ([DT_Output_11].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_11].[P_0] IS NULL OR [DT_Output_11].[P_0] > 0.0) THEN log([DT_Output_11].[P_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_11].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_11].[P_0] IS NULL OR [DT_Output_11].[P_0] > 0.0) THEN log([DT_Output_11].[P_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_11].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_11].[P_1] IS NULL OR [DT_Output_11].[P_1] > 0.0) THEN log([DT_Output_11].[P_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_11].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_11].[P_2] IS NULL OR [DT_Output_11].[P_2] > 0.0) THEN log([DT_Output_11].[P_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_11].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_11].[P_3] IS NULL OR [DT_Output_11].[P_3] > 0.0) THEN log([DT_Output_11].[P_3]) ELSE -1.79769313486231e+308 END END) / 4) AS [Proba_0], (3.0 * (CASE WHEN ([DT_Output_11].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_11].[P_1] IS NULL OR [DT_Output_11].[P_1] > 0.0) THEN log([DT_Output_11].[P_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_11].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_11].[P_0] IS NULL OR [DT_Output_11].[P_0] > 0.0) THEN log([DT_Output_11].[P_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_11].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_11].[P_1] IS NULL OR [DT_Output_11].[P_1] > 0.0) THEN log([DT_Output_11].[P_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_11].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_11].[P_2] IS NULL OR [DT_Output_11].[P_2] > 0.0) THEN log([DT_Output_11].[P_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_11].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_11].[P_3] IS NULL OR [DT_Output_11].[P_3] > 0.0) THEN log([DT_Output_11].[P_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 16.0 AS [Score_1], 3.0 * (CASE WHEN ([DT_Output_11].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_11].[P_1] IS NULL OR [DT_Output_11].[P_1] > 0.0) THEN log([DT_Output_11].[P_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_11].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_11].[P_0] IS NULL OR [DT_Output_11].[P_0] > 0.0) THEN log([DT_Output_11].[P_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_11].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_11].[P_1] IS NULL OR [DT_Output_11].[P_1] > 0.0) THEN log([DT_Output_11].[P_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_11].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_11].[P_2] IS NULL OR [DT_Output_11].[P_2] > 0.0) THEN log([DT_Output_11].[P_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_11].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_11].[P_3] IS NULL OR [DT_Output_11].[P_3] > 0.0) THEN log([DT_Output_11].[P_3]) ELSE -1.79769313486231e+308 END END) / 4) AS [Proba_1], (3.0 * (CASE WHEN ([DT_Output_11].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_11].[P_2] IS NULL OR [DT_Output_11].[P_2] > 0.0) THEN log([DT_Output_11].[P_2]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_11].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_11].[P_0] IS NULL OR [DT_Output_11].[P_0] > 0.0) THEN log([DT_Output_11].[P_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_11].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_11].[P_1] IS NULL OR [DT_Output_11].[P_1] > 0.0) THEN log([DT_Output_11].[P_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_11].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_11].[P_2] IS NULL OR [DT_Output_11].[P_2] > 0.0) THEN log([DT_Output_11].[P_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_11].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_11].[P_3] IS NULL OR [DT_Output_11].[P_3] > 0.0) THEN log([DT_Output_11].[P_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 16.0 AS [Score_2], 3.0 * (CASE WHEN ([DT_Output_11].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_11].[P_2] IS NULL OR [DT_Output_11].[P_2] > 0.0) THEN log([DT_Output_11].[P_2]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_11].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_11].[P_0] IS NULL OR [DT_Output_11].[P_0] > 0.0) THEN log([DT_Output_11].[P_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_11].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_11].[P_1] IS NULL OR [DT_Output_11].[P_1] > 0.0) THEN log([DT_Output_11].[P_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_11].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_11].[P_2] IS NULL OR [DT_Output_11].[P_2] > 0.0) THEN log([DT_Output_11].[P_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_11].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_11].[P_3] IS NULL OR [DT_Output_11].[P_3] > 0.0) THEN log([DT_Output_11].[P_3]) ELSE -1.79769313486231e+308 END END) / 4) AS [Proba_2], (3.0 * (CASE WHEN ([DT_Output_11].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_11].[P_3] IS NULL OR [DT_Output_11].[P_3] > 0.0) THEN log([DT_Output_11].[P_3]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_11].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_11].[P_0] IS NULL OR [DT_Output_11].[P_0] > 0.0) THEN log([DT_Output_11].[P_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_11].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_11].[P_1] IS NULL OR [DT_Output_11].[P_1] > 0.0) THEN log([DT_Output_11].[P_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_11].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_11].[P_2] IS NULL OR [DT_Output_11].[P_2] > 0.0) THEN log([DT_Output_11].[P_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_11].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_11].[P_3] IS NULL OR [DT_Output_11].[P_3] > 0.0) THEN log([DT_Output_11].[P_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 16.0 AS [Score_3], 3.0 * (CASE WHEN ([DT_Output_11].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_11].[P_3] IS NULL OR [DT_Output_11].[P_3] > 0.0) THEN log([DT_Output_11].[P_3]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_11].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_11].[P_0] IS NULL OR [DT_Output_11].[P_0] > 0.0) THEN log([DT_Output_11].[P_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_11].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_11].[P_1] IS NULL OR [DT_Output_11].[P_1] > 0.0) THEN log([DT_Output_11].[P_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_11].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_11].[P_2] IS NULL OR [DT_Output_11].[P_2] > 0.0) THEN log([DT_Output_11].[P_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_11].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_11].[P_3] IS NULL OR [DT_Output_11].[P_3] > 0.0) THEN log([DT_Output_11].[P_3]) ELSE -1.79769313486231e+308 END END) / 4) AS [Proba_3] 
FROM [DT_Output_11]), 
[DT_node_lookup_12] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_21 <= -0.5469577312469482) THEN 1 ELSE 2 END AS node_id_2 
FROM ##TMP_20180508181542_CODEGEN_I4KECO_ADS_sca_2_OUT AS [ADS_sca_2_OUT]), 
[DT_node_data_12] AS 
(SELECT [Values].nid AS nid, CAST([Values].[P_0] AS FLOAT(53)) AS [P_0], CAST([Values].[P_1] AS FLOAT(53)) AS [P_1], CAST([Values].[P_2] AS FLOAT(53)) AS [P_2], CAST([Values].[P_3] AS FLOAT(53)) AS [P_3], CAST([Values].[D] AS FLOAT(53)) AS [D], CAST([Values].[DP] AS FLOAT(53)) AS [DP] 
FROM (SELECT 1 AS nid, 0.18398639187234497 AS [P_0], 0.15299158075394673 AS [P_1], 0.576479346785521 AS [P_2], 0.08654268058818718 AS [P_3], 2 AS [D], 0.576479346785521 AS [DP] UNION ALL SELECT 2 AS nid, 0.29742635974944237 AS [P_0], 0.31969405743414864 AS [P_1], 0.0154464374725523 AS [P_2], 0.36743314534385674 AS [P_3], 3 AS [D], 0.36743314534385674 AS [DP]) AS [Values]), 
[DT_Output_12] AS 
(SELECT [DT_node_lookup_12].[KEY] AS [KEY], [DT_node_lookup_12].node_id_2 AS node_id_2, [DT_node_data_12].nid AS nid, [DT_node_data_12].[P_0] AS [P_0], [DT_node_data_12].[P_1] AS [P_1], [DT_node_data_12].[P_2] AS [P_2], [DT_node_data_12].[P_3] AS [P_3], [DT_node_data_12].[D] AS [D], [DT_node_data_12].[DP] AS [DP] 
FROM [DT_node_lookup_12] LEFT OUTER JOIN [DT_node_data_12] ON [DT_node_lookup_12].node_id_2 = [DT_node_data_12].nid), 
[ADB_Model_12] AS 
(SELECT [DT_Output_12].[KEY] AS [KEY], (3.0 * (CASE WHEN ([DT_Output_12].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_12].[P_0] IS NULL OR [DT_Output_12].[P_0] > 0.0) THEN log([DT_Output_12].[P_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_12].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_12].[P_0] IS NULL OR [DT_Output_12].[P_0] > 0.0) THEN log([DT_Output_12].[P_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_12].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_12].[P_1] IS NULL OR [DT_Output_12].[P_1] > 0.0) THEN log([DT_Output_12].[P_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_12].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_12].[P_2] IS NULL OR [DT_Output_12].[P_2] > 0.0) THEN log([DT_Output_12].[P_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_12].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_12].[P_3] IS NULL OR [DT_Output_12].[P_3] > 0.0) THEN log([DT_Output_12].[P_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 16.0 AS [Score_0], 3.0 * (CASE WHEN ([DT_Output_12].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_12].[P_0] IS NULL OR [DT_Output_12].[P_0] > 0.0) THEN log([DT_Output_12].[P_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_12].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_12].[P_0] IS NULL OR [DT_Output_12].[P_0] > 0.0) THEN log([DT_Output_12].[P_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_12].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_12].[P_1] IS NULL OR [DT_Output_12].[P_1] > 0.0) THEN log([DT_Output_12].[P_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_12].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_12].[P_2] IS NULL OR [DT_Output_12].[P_2] > 0.0) THEN log([DT_Output_12].[P_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_12].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_12].[P_3] IS NULL OR [DT_Output_12].[P_3] > 0.0) THEN log([DT_Output_12].[P_3]) ELSE -1.79769313486231e+308 END END) / 4) AS [Proba_0], (3.0 * (CASE WHEN ([DT_Output_12].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_12].[P_1] IS NULL OR [DT_Output_12].[P_1] > 0.0) THEN log([DT_Output_12].[P_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_12].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_12].[P_0] IS NULL OR [DT_Output_12].[P_0] > 0.0) THEN log([DT_Output_12].[P_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_12].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_12].[P_1] IS NULL OR [DT_Output_12].[P_1] > 0.0) THEN log([DT_Output_12].[P_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_12].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_12].[P_2] IS NULL OR [DT_Output_12].[P_2] > 0.0) THEN log([DT_Output_12].[P_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_12].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_12].[P_3] IS NULL OR [DT_Output_12].[P_3] > 0.0) THEN log([DT_Output_12].[P_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 16.0 AS [Score_1], 3.0 * (CASE WHEN ([DT_Output_12].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_12].[P_1] IS NULL OR [DT_Output_12].[P_1] > 0.0) THEN log([DT_Output_12].[P_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_12].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_12].[P_0] IS NULL OR [DT_Output_12].[P_0] > 0.0) THEN log([DT_Output_12].[P_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_12].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_12].[P_1] IS NULL OR [DT_Output_12].[P_1] > 0.0) THEN log([DT_Output_12].[P_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_12].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_12].[P_2] IS NULL OR [DT_Output_12].[P_2] > 0.0) THEN log([DT_Output_12].[P_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_12].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_12].[P_3] IS NULL OR [DT_Output_12].[P_3] > 0.0) THEN log([DT_Output_12].[P_3]) ELSE -1.79769313486231e+308 END END) / 4) AS [Proba_1], (3.0 * (CASE WHEN ([DT_Output_12].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_12].[P_2] IS NULL OR [DT_Output_12].[P_2] > 0.0) THEN log([DT_Output_12].[P_2]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_12].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_12].[P_0] IS NULL OR [DT_Output_12].[P_0] > 0.0) THEN log([DT_Output_12].[P_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_12].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_12].[P_1] IS NULL OR [DT_Output_12].[P_1] > 0.0) THEN log([DT_Output_12].[P_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_12].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_12].[P_2] IS NULL OR [DT_Output_12].[P_2] > 0.0) THEN log([DT_Output_12].[P_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_12].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_12].[P_3] IS NULL OR [DT_Output_12].[P_3] > 0.0) THEN log([DT_Output_12].[P_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 16.0 AS [Score_2], 3.0 * (CASE WHEN ([DT_Output_12].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_12].[P_2] IS NULL OR [DT_Output_12].[P_2] > 0.0) THEN log([DT_Output_12].[P_2]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_12].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_12].[P_0] IS NULL OR [DT_Output_12].[P_0] > 0.0) THEN log([DT_Output_12].[P_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_12].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_12].[P_1] IS NULL OR [DT_Output_12].[P_1] > 0.0) THEN log([DT_Output_12].[P_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_12].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_12].[P_2] IS NULL OR [DT_Output_12].[P_2] > 0.0) THEN log([DT_Output_12].[P_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_12].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_12].[P_3] IS NULL OR [DT_Output_12].[P_3] > 0.0) THEN log([DT_Output_12].[P_3]) ELSE -1.79769313486231e+308 END END) / 4) AS [Proba_2], (3.0 * (CASE WHEN ([DT_Output_12].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_12].[P_3] IS NULL OR [DT_Output_12].[P_3] > 0.0) THEN log([DT_Output_12].[P_3]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_12].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_12].[P_0] IS NULL OR [DT_Output_12].[P_0] > 0.0) THEN log([DT_Output_12].[P_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_12].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_12].[P_1] IS NULL OR [DT_Output_12].[P_1] > 0.0) THEN log([DT_Output_12].[P_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_12].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_12].[P_2] IS NULL OR [DT_Output_12].[P_2] > 0.0) THEN log([DT_Output_12].[P_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_12].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_12].[P_3] IS NULL OR [DT_Output_12].[P_3] > 0.0) THEN log([DT_Output_12].[P_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 16.0 AS [Score_3], 3.0 * (CASE WHEN ([DT_Output_12].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_12].[P_3] IS NULL OR [DT_Output_12].[P_3] > 0.0) THEN log([DT_Output_12].[P_3]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_12].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_12].[P_0] IS NULL OR [DT_Output_12].[P_0] > 0.0) THEN log([DT_Output_12].[P_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_12].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_12].[P_1] IS NULL OR [DT_Output_12].[P_1] > 0.0) THEN log([DT_Output_12].[P_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_12].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_12].[P_2] IS NULL OR [DT_Output_12].[P_2] > 0.0) THEN log([DT_Output_12].[P_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_12].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_12].[P_3] IS NULL OR [DT_Output_12].[P_3] > 0.0) THEN log([DT_Output_12].[P_3]) ELSE -1.79769313486231e+308 END END) / 4) AS [Proba_3] 
FROM [DT_Output_12]), 
[DT_node_lookup_13] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_36 <= -1.7054295539855957) THEN 1 ELSE 2 END AS node_id_2 
FROM ##TMP_20180508181542_CODEGEN_I4KECO_ADS_sca_2_OUT AS [ADS_sca_2_OUT]), 
[DT_node_data_13] AS 
(SELECT [Values].nid AS nid, CAST([Values].[P_0] AS FLOAT(53)) AS [P_0], CAST([Values].[P_1] AS FLOAT(53)) AS [P_1], CAST([Values].[P_2] AS FLOAT(53)) AS [P_2], CAST([Values].[P_3] AS FLOAT(53)) AS [P_3], CAST([Values].[D] AS FLOAT(53)) AS [D], CAST([Values].[DP] AS FLOAT(53)) AS [DP] 
FROM (SELECT 1 AS nid, 0.0 AS [P_0], 0.0 AS [P_1], 1.0 AS [P_2], 0.0 AS [P_3], 2 AS [D], 1.0 AS [DP] UNION ALL SELECT 2 AS nid, 0.2954448220594209 AS [P_0], 0.295444822059421 AS [P_1], 0.11366553382173708 AS [P_2], 0.29544482205942096 AS [P_3], 1 AS [D], 0.295444822059421 AS [DP]) AS [Values]), 
[DT_Output_13] AS 
(SELECT [DT_node_lookup_13].[KEY] AS [KEY], [DT_node_lookup_13].node_id_2 AS node_id_2, [DT_node_data_13].nid AS nid, [DT_node_data_13].[P_0] AS [P_0], [DT_node_data_13].[P_1] AS [P_1], [DT_node_data_13].[P_2] AS [P_2], [DT_node_data_13].[P_3] AS [P_3], [DT_node_data_13].[D] AS [D], [DT_node_data_13].[DP] AS [DP] 
FROM [DT_node_lookup_13] LEFT OUTER JOIN [DT_node_data_13] ON [DT_node_lookup_13].node_id_2 = [DT_node_data_13].nid), 
[ADB_Model_13] AS 
(SELECT [DT_Output_13].[KEY] AS [KEY], (3.0 * (CASE WHEN ([DT_Output_13].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_13].[P_0] IS NULL OR [DT_Output_13].[P_0] > 0.0) THEN log([DT_Output_13].[P_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_13].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_13].[P_0] IS NULL OR [DT_Output_13].[P_0] > 0.0) THEN log([DT_Output_13].[P_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_13].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_13].[P_1] IS NULL OR [DT_Output_13].[P_1] > 0.0) THEN log([DT_Output_13].[P_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_13].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_13].[P_2] IS NULL OR [DT_Output_13].[P_2] > 0.0) THEN log([DT_Output_13].[P_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_13].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_13].[P_3] IS NULL OR [DT_Output_13].[P_3] > 0.0) THEN log([DT_Output_13].[P_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 16.0 AS [Score_0], 3.0 * (CASE WHEN ([DT_Output_13].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_13].[P_0] IS NULL OR [DT_Output_13].[P_0] > 0.0) THEN log([DT_Output_13].[P_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_13].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_13].[P_0] IS NULL OR [DT_Output_13].[P_0] > 0.0) THEN log([DT_Output_13].[P_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_13].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_13].[P_1] IS NULL OR [DT_Output_13].[P_1] > 0.0) THEN log([DT_Output_13].[P_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_13].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_13].[P_2] IS NULL OR [DT_Output_13].[P_2] > 0.0) THEN log([DT_Output_13].[P_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_13].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_13].[P_3] IS NULL OR [DT_Output_13].[P_3] > 0.0) THEN log([DT_Output_13].[P_3]) ELSE -1.79769313486231e+308 END END) / 4) AS [Proba_0], (3.0 * (CASE WHEN ([DT_Output_13].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_13].[P_1] IS NULL OR [DT_Output_13].[P_1] > 0.0) THEN log([DT_Output_13].[P_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_13].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_13].[P_0] IS NULL OR [DT_Output_13].[P_0] > 0.0) THEN log([DT_Output_13].[P_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_13].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_13].[P_1] IS NULL OR [DT_Output_13].[P_1] > 0.0) THEN log([DT_Output_13].[P_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_13].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_13].[P_2] IS NULL OR [DT_Output_13].[P_2] > 0.0) THEN log([DT_Output_13].[P_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_13].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_13].[P_3] IS NULL OR [DT_Output_13].[P_3] > 0.0) THEN log([DT_Output_13].[P_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 16.0 AS [Score_1], 3.0 * (CASE WHEN ([DT_Output_13].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_13].[P_1] IS NULL OR [DT_Output_13].[P_1] > 0.0) THEN log([DT_Output_13].[P_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_13].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_13].[P_0] IS NULL OR [DT_Output_13].[P_0] > 0.0) THEN log([DT_Output_13].[P_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_13].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_13].[P_1] IS NULL OR [DT_Output_13].[P_1] > 0.0) THEN log([DT_Output_13].[P_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_13].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_13].[P_2] IS NULL OR [DT_Output_13].[P_2] > 0.0) THEN log([DT_Output_13].[P_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_13].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_13].[P_3] IS NULL OR [DT_Output_13].[P_3] > 0.0) THEN log([DT_Output_13].[P_3]) ELSE -1.79769313486231e+308 END END) / 4) AS [Proba_1], (3.0 * (CASE WHEN ([DT_Output_13].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_13].[P_2] IS NULL OR [DT_Output_13].[P_2] > 0.0) THEN log([DT_Output_13].[P_2]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_13].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_13].[P_0] IS NULL OR [DT_Output_13].[P_0] > 0.0) THEN log([DT_Output_13].[P_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_13].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_13].[P_1] IS NULL OR [DT_Output_13].[P_1] > 0.0) THEN log([DT_Output_13].[P_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_13].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_13].[P_2] IS NULL OR [DT_Output_13].[P_2] > 0.0) THEN log([DT_Output_13].[P_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_13].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_13].[P_3] IS NULL OR [DT_Output_13].[P_3] > 0.0) THEN log([DT_Output_13].[P_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 16.0 AS [Score_2], 3.0 * (CASE WHEN ([DT_Output_13].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_13].[P_2] IS NULL OR [DT_Output_13].[P_2] > 0.0) THEN log([DT_Output_13].[P_2]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_13].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_13].[P_0] IS NULL OR [DT_Output_13].[P_0] > 0.0) THEN log([DT_Output_13].[P_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_13].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_13].[P_1] IS NULL OR [DT_Output_13].[P_1] > 0.0) THEN log([DT_Output_13].[P_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_13].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_13].[P_2] IS NULL OR [DT_Output_13].[P_2] > 0.0) THEN log([DT_Output_13].[P_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_13].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_13].[P_3] IS NULL OR [DT_Output_13].[P_3] > 0.0) THEN log([DT_Output_13].[P_3]) ELSE -1.79769313486231e+308 END END) / 4) AS [Proba_2], (3.0 * (CASE WHEN ([DT_Output_13].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_13].[P_3] IS NULL OR [DT_Output_13].[P_3] > 0.0) THEN log([DT_Output_13].[P_3]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_13].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_13].[P_0] IS NULL OR [DT_Output_13].[P_0] > 0.0) THEN log([DT_Output_13].[P_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_13].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_13].[P_1] IS NULL OR [DT_Output_13].[P_1] > 0.0) THEN log([DT_Output_13].[P_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_13].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_13].[P_2] IS NULL OR [DT_Output_13].[P_2] > 0.0) THEN log([DT_Output_13].[P_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_13].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_13].[P_3] IS NULL OR [DT_Output_13].[P_3] > 0.0) THEN log([DT_Output_13].[P_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 16.0 AS [Score_3], 3.0 * (CASE WHEN ([DT_Output_13].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_13].[P_3] IS NULL OR [DT_Output_13].[P_3] > 0.0) THEN log([DT_Output_13].[P_3]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_13].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_13].[P_0] IS NULL OR [DT_Output_13].[P_0] > 0.0) THEN log([DT_Output_13].[P_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_13].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_13].[P_1] IS NULL OR [DT_Output_13].[P_1] > 0.0) THEN log([DT_Output_13].[P_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_13].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_13].[P_2] IS NULL OR [DT_Output_13].[P_2] > 0.0) THEN log([DT_Output_13].[P_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_13].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_13].[P_3] IS NULL OR [DT_Output_13].[P_3] > 0.0) THEN log([DT_Output_13].[P_3]) ELSE -1.79769313486231e+308 END END) / 4) AS [Proba_3] 
FROM [DT_Output_13]), 
[DT_node_lookup_14] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_89 <= -1.0898990631103516) THEN 1 ELSE 2 END AS node_id_2 
FROM ##TMP_20180508181542_CODEGEN_I4KECO_ADS_sca_2_OUT AS [ADS_sca_2_OUT]), 
[DT_node_data_14] AS 
(SELECT [Values].nid AS nid, CAST([Values].[P_0] AS FLOAT(53)) AS [P_0], CAST([Values].[P_1] AS FLOAT(53)) AS [P_1], CAST([Values].[P_2] AS FLOAT(53)) AS [P_2], CAST([Values].[P_3] AS FLOAT(53)) AS [P_3], CAST([Values].[D] AS FLOAT(53)) AS [D], CAST([Values].[DP] AS FLOAT(53)) AS [DP] 
FROM (SELECT 1 AS nid, 0.034755540471873576 AS [P_0], 0.08322413691330915 AS [P_1], 0.8219090247098908 AS [P_2], 0.060111297904926364 AS [P_3], 2 AS [D], 0.8219090247098908 AS [DP] UNION ALL SELECT 2 AS nid, 0.32255364800826264 AS [P_0], 0.3062160684330137 AS [P_1], 0.057223441836748955 AS [P_2], 0.31400684172197474 AS [P_3], 0 AS [D], 0.32255364800826264 AS [DP]) AS [Values]), 
[DT_Output_14] AS 
(SELECT [DT_node_lookup_14].[KEY] AS [KEY], [DT_node_lookup_14].node_id_2 AS node_id_2, [DT_node_data_14].nid AS nid, [DT_node_data_14].[P_0] AS [P_0], [DT_node_data_14].[P_1] AS [P_1], [DT_node_data_14].[P_2] AS [P_2], [DT_node_data_14].[P_3] AS [P_3], [DT_node_data_14].[D] AS [D], [DT_node_data_14].[DP] AS [DP] 
FROM [DT_node_lookup_14] LEFT OUTER JOIN [DT_node_data_14] ON [DT_node_lookup_14].node_id_2 = [DT_node_data_14].nid), 
[ADB_Model_14] AS 
(SELECT [DT_Output_14].[KEY] AS [KEY], (3.0 * (CASE WHEN ([DT_Output_14].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_14].[P_0] IS NULL OR [DT_Output_14].[P_0] > 0.0) THEN log([DT_Output_14].[P_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_14].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_14].[P_0] IS NULL OR [DT_Output_14].[P_0] > 0.0) THEN log([DT_Output_14].[P_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_14].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_14].[P_1] IS NULL OR [DT_Output_14].[P_1] > 0.0) THEN log([DT_Output_14].[P_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_14].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_14].[P_2] IS NULL OR [DT_Output_14].[P_2] > 0.0) THEN log([DT_Output_14].[P_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_14].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_14].[P_3] IS NULL OR [DT_Output_14].[P_3] > 0.0) THEN log([DT_Output_14].[P_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 16.0 AS [Score_0], 3.0 * (CASE WHEN ([DT_Output_14].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_14].[P_0] IS NULL OR [DT_Output_14].[P_0] > 0.0) THEN log([DT_Output_14].[P_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_14].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_14].[P_0] IS NULL OR [DT_Output_14].[P_0] > 0.0) THEN log([DT_Output_14].[P_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_14].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_14].[P_1] IS NULL OR [DT_Output_14].[P_1] > 0.0) THEN log([DT_Output_14].[P_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_14].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_14].[P_2] IS NULL OR [DT_Output_14].[P_2] > 0.0) THEN log([DT_Output_14].[P_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_14].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_14].[P_3] IS NULL OR [DT_Output_14].[P_3] > 0.0) THEN log([DT_Output_14].[P_3]) ELSE -1.79769313486231e+308 END END) / 4) AS [Proba_0], (3.0 * (CASE WHEN ([DT_Output_14].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_14].[P_1] IS NULL OR [DT_Output_14].[P_1] > 0.0) THEN log([DT_Output_14].[P_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_14].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_14].[P_0] IS NULL OR [DT_Output_14].[P_0] > 0.0) THEN log([DT_Output_14].[P_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_14].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_14].[P_1] IS NULL OR [DT_Output_14].[P_1] > 0.0) THEN log([DT_Output_14].[P_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_14].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_14].[P_2] IS NULL OR [DT_Output_14].[P_2] > 0.0) THEN log([DT_Output_14].[P_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_14].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_14].[P_3] IS NULL OR [DT_Output_14].[P_3] > 0.0) THEN log([DT_Output_14].[P_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 16.0 AS [Score_1], 3.0 * (CASE WHEN ([DT_Output_14].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_14].[P_1] IS NULL OR [DT_Output_14].[P_1] > 0.0) THEN log([DT_Output_14].[P_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_14].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_14].[P_0] IS NULL OR [DT_Output_14].[P_0] > 0.0) THEN log([DT_Output_14].[P_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_14].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_14].[P_1] IS NULL OR [DT_Output_14].[P_1] > 0.0) THEN log([DT_Output_14].[P_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_14].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_14].[P_2] IS NULL OR [DT_Output_14].[P_2] > 0.0) THEN log([DT_Output_14].[P_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_14].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_14].[P_3] IS NULL OR [DT_Output_14].[P_3] > 0.0) THEN log([DT_Output_14].[P_3]) ELSE -1.79769313486231e+308 END END) / 4) AS [Proba_1], (3.0 * (CASE WHEN ([DT_Output_14].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_14].[P_2] IS NULL OR [DT_Output_14].[P_2] > 0.0) THEN log([DT_Output_14].[P_2]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_14].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_14].[P_0] IS NULL OR [DT_Output_14].[P_0] > 0.0) THEN log([DT_Output_14].[P_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_14].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_14].[P_1] IS NULL OR [DT_Output_14].[P_1] > 0.0) THEN log([DT_Output_14].[P_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_14].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_14].[P_2] IS NULL OR [DT_Output_14].[P_2] > 0.0) THEN log([DT_Output_14].[P_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_14].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_14].[P_3] IS NULL OR [DT_Output_14].[P_3] > 0.0) THEN log([DT_Output_14].[P_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 16.0 AS [Score_2], 3.0 * (CASE WHEN ([DT_Output_14].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_14].[P_2] IS NULL OR [DT_Output_14].[P_2] > 0.0) THEN log([DT_Output_14].[P_2]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_14].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_14].[P_0] IS NULL OR [DT_Output_14].[P_0] > 0.0) THEN log([DT_Output_14].[P_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_14].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_14].[P_1] IS NULL OR [DT_Output_14].[P_1] > 0.0) THEN log([DT_Output_14].[P_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_14].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_14].[P_2] IS NULL OR [DT_Output_14].[P_2] > 0.0) THEN log([DT_Output_14].[P_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_14].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_14].[P_3] IS NULL OR [DT_Output_14].[P_3] > 0.0) THEN log([DT_Output_14].[P_3]) ELSE -1.79769313486231e+308 END END) / 4) AS [Proba_2], (3.0 * (CASE WHEN ([DT_Output_14].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_14].[P_3] IS NULL OR [DT_Output_14].[P_3] > 0.0) THEN log([DT_Output_14].[P_3]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_14].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_14].[P_0] IS NULL OR [DT_Output_14].[P_0] > 0.0) THEN log([DT_Output_14].[P_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_14].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_14].[P_1] IS NULL OR [DT_Output_14].[P_1] > 0.0) THEN log([DT_Output_14].[P_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_14].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_14].[P_2] IS NULL OR [DT_Output_14].[P_2] > 0.0) THEN log([DT_Output_14].[P_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_14].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_14].[P_3] IS NULL OR [DT_Output_14].[P_3] > 0.0) THEN log([DT_Output_14].[P_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 16.0 AS [Score_3], 3.0 * (CASE WHEN ([DT_Output_14].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_14].[P_3] IS NULL OR [DT_Output_14].[P_3] > 0.0) THEN log([DT_Output_14].[P_3]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_14].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_14].[P_0] IS NULL OR [DT_Output_14].[P_0] > 0.0) THEN log([DT_Output_14].[P_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_14].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_14].[P_1] IS NULL OR [DT_Output_14].[P_1] > 0.0) THEN log([DT_Output_14].[P_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_14].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_14].[P_2] IS NULL OR [DT_Output_14].[P_2] > 0.0) THEN log([DT_Output_14].[P_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_14].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_14].[P_3] IS NULL OR [DT_Output_14].[P_3] > 0.0) THEN log([DT_Output_14].[P_3]) ELSE -1.79769313486231e+308 END END) / 4) AS [Proba_3] 
FROM [DT_Output_14]), 
[DT_node_lookup_15] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_69 <= -1.2343122959136963) THEN 1 ELSE 2 END AS node_id_2 
FROM ##TMP_20180508181542_CODEGEN_I4KECO_ADS_sca_2_OUT AS [ADS_sca_2_OUT]), 
[DT_node_data_15] AS 
(SELECT [Values].nid AS nid, CAST([Values].[P_0] AS FLOAT(53)) AS [P_0], CAST([Values].[P_1] AS FLOAT(53)) AS [P_1], CAST([Values].[P_2] AS FLOAT(53)) AS [P_2], CAST([Values].[P_3] AS FLOAT(53)) AS [P_3], CAST([Values].[D] AS FLOAT(53)) AS [D], CAST([Values].[DP] AS FLOAT(53)) AS [DP] 
FROM (SELECT 1 AS nid, 0.0 AS [P_0], 0.05153207925507621 AS [P_1], 0.9484679204741618 AS [P_2], 2.707619746759857e-10 AS [P_3], 2 AS [D], 0.9484679204741618 AS [DP] UNION ALL SELECT 2 AS nid, 0.29928985971155886 AS [P_0], 0.2891298238830483 AS [P_1], 0.11229045674721731 AS [P_2], 0.29928985965817556 AS [P_3], 0 AS [D], 0.29928985971155886 AS [DP]) AS [Values]), 
[DT_Output_15] AS 
(SELECT [DT_node_lookup_15].[KEY] AS [KEY], [DT_node_lookup_15].node_id_2 AS node_id_2, [DT_node_data_15].nid AS nid, [DT_node_data_15].[P_0] AS [P_0], [DT_node_data_15].[P_1] AS [P_1], [DT_node_data_15].[P_2] AS [P_2], [DT_node_data_15].[P_3] AS [P_3], [DT_node_data_15].[D] AS [D], [DT_node_data_15].[DP] AS [DP] 
FROM [DT_node_lookup_15] LEFT OUTER JOIN [DT_node_data_15] ON [DT_node_lookup_15].node_id_2 = [DT_node_data_15].nid), 
[ADB_Model_15] AS 
(SELECT [DT_Output_15].[KEY] AS [KEY], (3.0 * (CASE WHEN ([DT_Output_15].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_15].[P_0] IS NULL OR [DT_Output_15].[P_0] > 0.0) THEN log([DT_Output_15].[P_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_15].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_15].[P_0] IS NULL OR [DT_Output_15].[P_0] > 0.0) THEN log([DT_Output_15].[P_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_15].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_15].[P_1] IS NULL OR [DT_Output_15].[P_1] > 0.0) THEN log([DT_Output_15].[P_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_15].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_15].[P_2] IS NULL OR [DT_Output_15].[P_2] > 0.0) THEN log([DT_Output_15].[P_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_15].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_15].[P_3] IS NULL OR [DT_Output_15].[P_3] > 0.0) THEN log([DT_Output_15].[P_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 16.0 AS [Score_0], 3.0 * (CASE WHEN ([DT_Output_15].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_15].[P_0] IS NULL OR [DT_Output_15].[P_0] > 0.0) THEN log([DT_Output_15].[P_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_15].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_15].[P_0] IS NULL OR [DT_Output_15].[P_0] > 0.0) THEN log([DT_Output_15].[P_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_15].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_15].[P_1] IS NULL OR [DT_Output_15].[P_1] > 0.0) THEN log([DT_Output_15].[P_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_15].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_15].[P_2] IS NULL OR [DT_Output_15].[P_2] > 0.0) THEN log([DT_Output_15].[P_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_15].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_15].[P_3] IS NULL OR [DT_Output_15].[P_3] > 0.0) THEN log([DT_Output_15].[P_3]) ELSE -1.79769313486231e+308 END END) / 4) AS [Proba_0], (3.0 * (CASE WHEN ([DT_Output_15].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_15].[P_1] IS NULL OR [DT_Output_15].[P_1] > 0.0) THEN log([DT_Output_15].[P_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_15].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_15].[P_0] IS NULL OR [DT_Output_15].[P_0] > 0.0) THEN log([DT_Output_15].[P_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_15].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_15].[P_1] IS NULL OR [DT_Output_15].[P_1] > 0.0) THEN log([DT_Output_15].[P_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_15].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_15].[P_2] IS NULL OR [DT_Output_15].[P_2] > 0.0) THEN log([DT_Output_15].[P_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_15].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_15].[P_3] IS NULL OR [DT_Output_15].[P_3] > 0.0) THEN log([DT_Output_15].[P_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 16.0 AS [Score_1], 3.0 * (CASE WHEN ([DT_Output_15].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_15].[P_1] IS NULL OR [DT_Output_15].[P_1] > 0.0) THEN log([DT_Output_15].[P_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_15].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_15].[P_0] IS NULL OR [DT_Output_15].[P_0] > 0.0) THEN log([DT_Output_15].[P_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_15].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_15].[P_1] IS NULL OR [DT_Output_15].[P_1] > 0.0) THEN log([DT_Output_15].[P_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_15].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_15].[P_2] IS NULL OR [DT_Output_15].[P_2] > 0.0) THEN log([DT_Output_15].[P_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_15].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_15].[P_3] IS NULL OR [DT_Output_15].[P_3] > 0.0) THEN log([DT_Output_15].[P_3]) ELSE -1.79769313486231e+308 END END) / 4) AS [Proba_1], (3.0 * (CASE WHEN ([DT_Output_15].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_15].[P_2] IS NULL OR [DT_Output_15].[P_2] > 0.0) THEN log([DT_Output_15].[P_2]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_15].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_15].[P_0] IS NULL OR [DT_Output_15].[P_0] > 0.0) THEN log([DT_Output_15].[P_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_15].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_15].[P_1] IS NULL OR [DT_Output_15].[P_1] > 0.0) THEN log([DT_Output_15].[P_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_15].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_15].[P_2] IS NULL OR [DT_Output_15].[P_2] > 0.0) THEN log([DT_Output_15].[P_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_15].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_15].[P_3] IS NULL OR [DT_Output_15].[P_3] > 0.0) THEN log([DT_Output_15].[P_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 16.0 AS [Score_2], 3.0 * (CASE WHEN ([DT_Output_15].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_15].[P_2] IS NULL OR [DT_Output_15].[P_2] > 0.0) THEN log([DT_Output_15].[P_2]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_15].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_15].[P_0] IS NULL OR [DT_Output_15].[P_0] > 0.0) THEN log([DT_Output_15].[P_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_15].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_15].[P_1] IS NULL OR [DT_Output_15].[P_1] > 0.0) THEN log([DT_Output_15].[P_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_15].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_15].[P_2] IS NULL OR [DT_Output_15].[P_2] > 0.0) THEN log([DT_Output_15].[P_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_15].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_15].[P_3] IS NULL OR [DT_Output_15].[P_3] > 0.0) THEN log([DT_Output_15].[P_3]) ELSE -1.79769313486231e+308 END END) / 4) AS [Proba_2], (3.0 * (CASE WHEN ([DT_Output_15].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_15].[P_3] IS NULL OR [DT_Output_15].[P_3] > 0.0) THEN log([DT_Output_15].[P_3]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_15].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_15].[P_0] IS NULL OR [DT_Output_15].[P_0] > 0.0) THEN log([DT_Output_15].[P_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_15].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_15].[P_1] IS NULL OR [DT_Output_15].[P_1] > 0.0) THEN log([DT_Output_15].[P_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_15].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_15].[P_2] IS NULL OR [DT_Output_15].[P_2] > 0.0) THEN log([DT_Output_15].[P_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_15].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_15].[P_3] IS NULL OR [DT_Output_15].[P_3] > 0.0) THEN log([DT_Output_15].[P_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 16.0 AS [Score_3], 3.0 * (CASE WHEN ([DT_Output_15].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_15].[P_3] IS NULL OR [DT_Output_15].[P_3] > 0.0) THEN log([DT_Output_15].[P_3]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([DT_Output_15].[P_0] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_15].[P_0] IS NULL OR [DT_Output_15].[P_0] > 0.0) THEN log([DT_Output_15].[P_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_15].[P_1] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_15].[P_1] IS NULL OR [DT_Output_15].[P_1] > 0.0) THEN log([DT_Output_15].[P_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_15].[P_2] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_15].[P_2] IS NULL OR [DT_Output_15].[P_2] > 0.0) THEN log([DT_Output_15].[P_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([DT_Output_15].[P_3] <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ([DT_Output_15].[P_3] IS NULL OR [DT_Output_15].[P_3] > 0.0) THEN log([DT_Output_15].[P_3]) ELSE -1.79769313486231e+308 END END) / 4) AS [Proba_3] 
FROM [DT_Output_15])
 INSERT INTO ##TMP_20180508181543_CODEGEN_HBPLRM_ADB_B1 ([KEY], [Score_0], [Proba_0], [Score_1], [Proba_1], [Score_2], [Proba_2], [Score_3], [Proba_3]) SELECT [ADB_B1].[KEY], [ADB_B1].[Score_0], [ADB_B1].[Proba_0], [ADB_B1].[Score_1], [ADB_B1].[Proba_1], [ADB_B1].[Score_2], [ADB_B1].[Proba_2], [ADB_B1].[Score_3], [ADB_B1].[Proba_3] 
FROM (SELECT [ADB_esu_1].[KEY] AS [KEY], [ADB_esu_1].[Score_0] AS [Score_0], [ADB_esu_1].[Proba_0] AS [Proba_0], [ADB_esu_1].[Score_1] AS [Score_1], [ADB_esu_1].[Proba_1] AS [Proba_1], [ADB_esu_1].[Score_2] AS [Score_2], [ADB_esu_1].[Proba_2] AS [Proba_2], [ADB_esu_1].[Score_3] AS [Score_3], [ADB_esu_1].[Proba_3] AS [Proba_3] 
FROM (SELECT [ADB_Model_10].[KEY] AS [KEY], [ADB_Model_10].[Score_0] AS [Score_0], [ADB_Model_10].[Proba_0] AS [Proba_0], [ADB_Model_10].[Score_1] AS [Score_1], [ADB_Model_10].[Proba_1] AS [Proba_1], [ADB_Model_10].[Score_2] AS [Score_2], [ADB_Model_10].[Proba_2] AS [Proba_2], [ADB_Model_10].[Score_3] AS [Score_3], [ADB_Model_10].[Proba_3] AS [Proba_3] 
FROM [ADB_Model_10] UNION ALL SELECT [ADB_Model_11].[KEY] AS [KEY], [ADB_Model_11].[Score_0] AS [Score_0], [ADB_Model_11].[Proba_0] AS [Proba_0], [ADB_Model_11].[Score_1] AS [Score_1], [ADB_Model_11].[Proba_1] AS [Proba_1], [ADB_Model_11].[Score_2] AS [Score_2], [ADB_Model_11].[Proba_2] AS [Proba_2], [ADB_Model_11].[Score_3] AS [Score_3], [ADB_Model_11].[Proba_3] AS [Proba_3] 
FROM [ADB_Model_11] UNION ALL SELECT [ADB_Model_12].[KEY] AS [KEY], [ADB_Model_12].[Score_0] AS [Score_0], [ADB_Model_12].[Proba_0] AS [Proba_0], [ADB_Model_12].[Score_1] AS [Score_1], [ADB_Model_12].[Proba_1] AS [Proba_1], [ADB_Model_12].[Score_2] AS [Score_2], [ADB_Model_12].[Proba_2] AS [Proba_2], [ADB_Model_12].[Score_3] AS [Score_3], [ADB_Model_12].[Proba_3] AS [Proba_3] 
FROM [ADB_Model_12] UNION ALL SELECT [ADB_Model_13].[KEY] AS [KEY], [ADB_Model_13].[Score_0] AS [Score_0], [ADB_Model_13].[Proba_0] AS [Proba_0], [ADB_Model_13].[Score_1] AS [Score_1], [ADB_Model_13].[Proba_1] AS [Proba_1], [ADB_Model_13].[Score_2] AS [Score_2], [ADB_Model_13].[Proba_2] AS [Proba_2], [ADB_Model_13].[Score_3] AS [Score_3], [ADB_Model_13].[Proba_3] AS [Proba_3] 
FROM [ADB_Model_13] UNION ALL SELECT [ADB_Model_14].[KEY] AS [KEY], [ADB_Model_14].[Score_0] AS [Score_0], [ADB_Model_14].[Proba_0] AS [Proba_0], [ADB_Model_14].[Score_1] AS [Score_1], [ADB_Model_14].[Proba_1] AS [Proba_1], [ADB_Model_14].[Score_2] AS [Score_2], [ADB_Model_14].[Proba_2] AS [Proba_2], [ADB_Model_14].[Score_3] AS [Score_3], [ADB_Model_14].[Proba_3] AS [Proba_3] 
FROM [ADB_Model_14] UNION ALL SELECT [ADB_Model_15].[KEY] AS [KEY], [ADB_Model_15].[Score_0] AS [Score_0], [ADB_Model_15].[Proba_0] AS [Proba_0], [ADB_Model_15].[Score_1] AS [Score_1], [ADB_Model_15].[Proba_1] AS [Proba_1], [ADB_Model_15].[Score_2] AS [Score_2], [ADB_Model_15].[Proba_2] AS [Proba_2], [ADB_Model_15].[Score_3] AS [Score_3], [ADB_Model_15].[Proba_3] AS [Proba_3] 
FROM [ADB_Model_15]) AS [ADB_esu_1]) AS [ADB_B1]

-- Code For temporary table ##TMP_20180508181543_CODEGEN_AP9R83_ADB_Union part 1. Create 


CREATE TABLE ##TMP_20180508181543_CODEGEN_AP9R83_ADB_Union (
	[KEY] BIGINT NULL, 
	[Score_0] FLOAT NULL, 
	[Proba_0] FLOAT NULL, 
	[Score_1] FLOAT NULL, 
	[Proba_1] FLOAT NULL, 
	[Score_2] FLOAT NULL, 
	[Proba_2] FLOAT NULL, 
	[Score_3] FLOAT NULL, 
	[Proba_3] FLOAT NULL
)



-- Code For temporary table ##TMP_20180508181543_CODEGEN_AP9R83_ADB_Union part 2. Populate

INSERT INTO ##TMP_20180508181543_CODEGEN_AP9R83_ADB_Union ([KEY], [Score_0], [Proba_0], [Score_1], [Proba_1], [Score_2], [Proba_2], [Score_3], [Proba_3]) SELECT [ADB_Union].[KEY], [ADB_Union].[Score_0], [ADB_Union].[Proba_0], [ADB_Union].[Score_1], [ADB_Union].[Proba_1], [ADB_Union].[Score_2], [ADB_Union].[Proba_2], [ADB_Union].[Score_3], [ADB_Union].[Proba_3] 
FROM (SELECT [ADB_EnsembleUnion].[KEY] AS [KEY], [ADB_EnsembleUnion].[Score_0] AS [Score_0], [ADB_EnsembleUnion].[Proba_0] AS [Proba_0], [ADB_EnsembleUnion].[Score_1] AS [Score_1], [ADB_EnsembleUnion].[Proba_1] AS [Proba_1], [ADB_EnsembleUnion].[Score_2] AS [Score_2], [ADB_EnsembleUnion].[Proba_2] AS [Proba_2], [ADB_EnsembleUnion].[Score_3] AS [Score_3], [ADB_EnsembleUnion].[Proba_3] AS [Proba_3] 
FROM (SELECT [ADB_B0].[KEY] AS [KEY], [ADB_B0].[Score_0] AS [Score_0], [ADB_B0].[Proba_0] AS [Proba_0], [ADB_B0].[Score_1] AS [Score_1], [ADB_B0].[Proba_1] AS [Proba_1], [ADB_B0].[Score_2] AS [Score_2], [ADB_B0].[Proba_2] AS [Proba_2], [ADB_B0].[Score_3] AS [Score_3], [ADB_B0].[Proba_3] AS [Proba_3] 
FROM ##TMP_20180508181543_CODEGEN_55FSDT_ADB_B0 AS [ADB_B0] UNION ALL SELECT [ADB_B1].[KEY] AS [KEY], [ADB_B1].[Score_0] AS [Score_0], [ADB_B1].[Proba_0] AS [Proba_0], [ADB_B1].[Score_1] AS [Score_1], [ADB_B1].[Proba_1] AS [Proba_1], [ADB_B1].[Score_2] AS [Score_2], [ADB_B1].[Proba_2] AS [Proba_2], [ADB_B1].[Score_3] AS [Score_3], [ADB_B1].[Proba_3] AS [Proba_3] 
FROM ##TMP_20180508181543_CODEGEN_HBPLRM_ADB_B1 AS [ADB_B1]) AS [ADB_EnsembleUnion]) AS [ADB_Union]

-- Code For temporary table ##TMP_20180508181543_CODEGEN_JOC6V7_ADB_sum part 1. Create 


CREATE TABLE ##TMP_20180508181543_CODEGEN_JOC6V7_ADB_sum (
	[KEY] BIGINT NULL, 
	[Score_0] FLOAT(53) NULL, 
	[Proba_0] FLOAT(53) NULL, 
	[Score_1] FLOAT(53) NULL, 
	[Proba_1] FLOAT(53) NULL, 
	[Score_2] FLOAT(53) NULL, 
	[Proba_2] FLOAT(53) NULL, 
	[Score_3] FLOAT(53) NULL, 
	[Proba_3] FLOAT(53) NULL
)



-- Code For temporary table ##TMP_20180508181543_CODEGEN_JOC6V7_ADB_sum part 2. Populate

INSERT INTO ##TMP_20180508181543_CODEGEN_JOC6V7_ADB_sum ([KEY], [Score_0], [Proba_0], [Score_1], [Proba_1], [Score_2], [Proba_2], [Score_3], [Proba_3]) SELECT [ADB_sum].[KEY], [ADB_sum].[Score_0], [ADB_sum].[Proba_0], [ADB_sum].[Score_1], [ADB_sum].[Proba_1], [ADB_sum].[Score_2], [ADB_sum].[Proba_2], [ADB_sum].[Score_3], [ADB_sum].[Proba_3] 
FROM (SELECT [T].[KEY] AS [KEY], CAST([T].[Score_0] AS FLOAT(53)) AS [Score_0], CAST([T].[Proba_0] AS FLOAT(53)) AS [Proba_0], CAST([T].[Score_1] AS FLOAT(53)) AS [Score_1], CAST([T].[Proba_1] AS FLOAT(53)) AS [Proba_1], CAST([T].[Score_2] AS FLOAT(53)) AS [Score_2], CAST([T].[Proba_2] AS FLOAT(53)) AS [Proba_2], CAST([T].[Score_3] AS FLOAT(53)) AS [Score_3], CAST([T].[Proba_3] AS FLOAT(53)) AS [Proba_3] 
FROM (SELECT [ADB_Union].[KEY] AS [KEY], sum([ADB_Union].[Score_0]) AS [Score_0], sum([ADB_Union].[Proba_0]) AS [Proba_0], sum([ADB_Union].[Score_1]) AS [Score_1], sum([ADB_Union].[Proba_1]) AS [Proba_1], sum([ADB_Union].[Score_2]) AS [Score_2], sum([ADB_Union].[Proba_2]) AS [Proba_2], sum([ADB_Union].[Score_3]) AS [Score_3], sum([ADB_Union].[Proba_3]) AS [Proba_3] 
FROM ##TMP_20180508181543_CODEGEN_AP9R83_ADB_Union AS [ADB_Union] GROUP BY [ADB_Union].[KEY]) AS [T]) AS [ADB_sum]

-- Model deployment code

WITH [AdaBoost_AVG_Scores_BN] AS 
(SELECT [ADB_sum].[KEY] AS [KEY], [ADB_sum].[Score_0] AS [Score_0], [ADB_sum].[Proba_0] AS [Proba_0], [ADB_sum].[Score_1] AS [Score_1], [ADB_sum].[Proba_1] AS [Proba_1], [ADB_sum].[Score_2] AS [Score_2], [ADB_sum].[Proba_2] AS [Proba_2], [ADB_sum].[Score_3] AS [Score_3], [ADB_sum].[Proba_3] AS [Proba_3] 
FROM ##TMP_20180508181543_CODEGEN_JOC6V7_ADB_sum AS [ADB_sum]), 
[AdaBoost_AVG_Scores] AS 
(SELECT [AdaBoost_AVG_Scores_BN].[KEY] AS [KEY], [AdaBoost_AVG_Scores_BN].[Score_0] AS [Score_0], exp(([AdaBoost_AVG_Scores_BN].[Proba_0] / 16.0) / 3) / (exp(([AdaBoost_AVG_Scores_BN].[Proba_0] / 16.0) / 3) + exp(([AdaBoost_AVG_Scores_BN].[Proba_1] / 16.0) / 3) + exp(([AdaBoost_AVG_Scores_BN].[Proba_2] / 16.0) / 3) + exp(([AdaBoost_AVG_Scores_BN].[Proba_3] / 16.0) / 3)) AS [Proba_0], CAST(NULL AS FLOAT(53)) AS [LogProba_0], [AdaBoost_AVG_Scores_BN].[Score_1] AS [Score_1], exp(([AdaBoost_AVG_Scores_BN].[Proba_1] / 16.0) / 3) / (exp(([AdaBoost_AVG_Scores_BN].[Proba_0] / 16.0) / 3) + exp(([AdaBoost_AVG_Scores_BN].[Proba_1] / 16.0) / 3) + exp(([AdaBoost_AVG_Scores_BN].[Proba_2] / 16.0) / 3) + exp(([AdaBoost_AVG_Scores_BN].[Proba_3] / 16.0) / 3)) AS [Proba_1], CAST(NULL AS FLOAT(53)) AS [LogProba_1], [AdaBoost_AVG_Scores_BN].[Score_2] AS [Score_2], exp(([AdaBoost_AVG_Scores_BN].[Proba_2] / 16.0) / 3) / (exp(([AdaBoost_AVG_Scores_BN].[Proba_0] / 16.0) / 3) + exp(([AdaBoost_AVG_Scores_BN].[Proba_1] / 16.0) / 3) + exp(([AdaBoost_AVG_Scores_BN].[Proba_2] / 16.0) / 3) + exp(([AdaBoost_AVG_Scores_BN].[Proba_3] / 16.0) / 3)) AS [Proba_2], CAST(NULL AS FLOAT(53)) AS [LogProba_2], [AdaBoost_AVG_Scores_BN].[Score_3] AS [Score_3], exp(([AdaBoost_AVG_Scores_BN].[Proba_3] / 16.0) / 3) / (exp(([AdaBoost_AVG_Scores_BN].[Proba_0] / 16.0) / 3) + exp(([AdaBoost_AVG_Scores_BN].[Proba_1] / 16.0) / 3) + exp(([AdaBoost_AVG_Scores_BN].[Proba_2] / 16.0) / 3) + exp(([AdaBoost_AVG_Scores_BN].[Proba_3] / 16.0) / 3)) AS [Proba_3], CAST(NULL AS FLOAT(53)) AS [LogProba_3] 
FROM [AdaBoost_AVG_Scores_BN]), 
orig_cte AS 
(SELECT [AdaBoost_AVG_Scores].[KEY] AS [KEY], [AdaBoost_AVG_Scores].[Score_0] AS [Score_0], [AdaBoost_AVG_Scores].[Score_1] AS [Score_1], [AdaBoost_AVG_Scores].[Score_2] AS [Score_2], [AdaBoost_AVG_Scores].[Score_3] AS [Score_3], [AdaBoost_AVG_Scores].[Proba_0] AS [Proba_0], [AdaBoost_AVG_Scores].[Proba_1] AS [Proba_1], [AdaBoost_AVG_Scores].[Proba_2] AS [Proba_2], [AdaBoost_AVG_Scores].[Proba_3] AS [Proba_3], [AdaBoost_AVG_Scores].[LogProba_0] AS [LogProba_0], [AdaBoost_AVG_Scores].[LogProba_1] AS [LogProba_1], [AdaBoost_AVG_Scores].[LogProba_2] AS [LogProba_2], [AdaBoost_AVG_Scores].[LogProba_3] AS [LogProba_3], CAST(NULL AS BIGINT) AS [Decision], CAST(NULL AS FLOAT(53)) AS [DecisionProba] 
FROM [AdaBoost_AVG_Scores]), 
score_class_union AS 
(SELECT scu.[KEY_u] AS [KEY_u], scu.class AS class, scu.[LogProba] AS [LogProba], scu.[Proba] AS [Proba], scu.[Score] AS [Score] 
FROM (SELECT orig_cte.[KEY] AS [KEY_u], 0 AS class, orig_cte.[LogProba_0] AS [LogProba], orig_cte.[Proba_0] AS [Proba], orig_cte.[Score_0] AS [Score] 
FROM orig_cte UNION ALL SELECT orig_cte.[KEY] AS [KEY_u], 1 AS class, orig_cte.[LogProba_1] AS [LogProba], orig_cte.[Proba_1] AS [Proba], orig_cte.[Score_1] AS [Score] 
FROM orig_cte UNION ALL SELECT orig_cte.[KEY] AS [KEY_u], 2 AS class, orig_cte.[LogProba_2] AS [LogProba], orig_cte.[Proba_2] AS [Proba], orig_cte.[Score_2] AS [Score] 
FROM orig_cte UNION ALL SELECT orig_cte.[KEY] AS [KEY_u], 3 AS class, orig_cte.[LogProba_3] AS [LogProba], orig_cte.[Proba_3] AS [Proba], orig_cte.[Score_3] AS [Score] 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte.[KEY] AS [KEY], orig_cte.[Score_0] AS [Score_0], orig_cte.[Score_1] AS [Score_1], orig_cte.[Score_2] AS [Score_2], orig_cte.[Score_3] AS [Score_3], orig_cte.[Proba_0] AS [Proba_0], orig_cte.[Proba_1] AS [Proba_1], orig_cte.[Proba_2] AS [Proba_2], orig_cte.[Proba_3] AS [Proba_3], orig_cte.[LogProba_0] AS [LogProba_0], orig_cte.[LogProba_1] AS [LogProba_1], orig_cte.[LogProba_2] AS [LogProba_2], orig_cte.[LogProba_3] AS [LogProba_3], orig_cte.[Decision] AS [Decision], orig_cte.[DecisionProba] AS [DecisionProba], max_select.[KEY_m] AS [KEY_m], max_select.[max_Score] AS [max_Score] 
FROM orig_cte LEFT OUTER JOIN (SELECT score_class_union.[KEY_u] AS [KEY_m], max(score_class_union.[Score]) AS [max_Score] 
FROM score_class_union GROUP BY score_class_union.[KEY_u]) AS max_select ON orig_cte.[KEY] = max_select.[KEY_m]), 
union_with_max AS 
(SELECT score_class_union.[KEY_u] AS [KEY_u], score_class_union.class AS class, score_class_union.[LogProba] AS [LogProba], score_class_union.[Proba] AS [Proba], score_class_union.[Score] AS [Score], score_max.[KEY] AS [KEY], score_max.[Score_0] AS [Score_0], score_max.[Score_1] AS [Score_1], score_max.[Score_2] AS [Score_2], score_max.[Score_3] AS [Score_3], score_max.[Proba_0] AS [Proba_0], score_max.[Proba_1] AS [Proba_1], score_max.[Proba_2] AS [Proba_2], score_max.[Proba_3] AS [Proba_3], score_max.[LogProba_0] AS [LogProba_0], score_max.[LogProba_1] AS [LogProba_1], score_max.[LogProba_2] AS [LogProba_2], score_max.[LogProba_3] AS [LogProba_3], score_max.[Decision] AS [Decision], score_max.[DecisionProba] AS [DecisionProba], score_max.[KEY_m] AS [KEY_m], score_max.[max_Score] AS [max_Score] 
FROM score_class_union LEFT OUTER JOIN score_max ON score_class_union.[KEY_u] = score_max.[KEY]), 
arg_max_cte AS 
(SELECT score_max.[KEY] AS [KEY], score_max.[Score_0] AS [Score_0], score_max.[Score_1] AS [Score_1], score_max.[Score_2] AS [Score_2], score_max.[Score_3] AS [Score_3], score_max.[Proba_0] AS [Proba_0], score_max.[Proba_1] AS [Proba_1], score_max.[Proba_2] AS [Proba_2], score_max.[Proba_3] AS [Proba_3], score_max.[LogProba_0] AS [LogProba_0], score_max.[LogProba_1] AS [LogProba_1], score_max.[LogProba_2] AS [LogProba_2], score_max.[LogProba_3] AS [LogProba_3], score_max.[Decision] AS [Decision], score_max.[DecisionProba] AS [DecisionProba], score_max.[KEY_m] AS [KEY_m], score_max.[max_Score] AS [max_Score], [arg_max_t_Score].[KEY_Score] AS [KEY_Score], [arg_max_t_Score].[arg_max_Score] AS [arg_max_Score] 
FROM score_max LEFT OUTER JOIN (SELECT union_with_max.[KEY] AS [KEY_Score], min(union_with_max.class) AS [arg_max_Score] 
FROM union_with_max 
WHERE union_with_max.[Score] >= union_with_max.[max_Score] GROUP BY union_with_max.[KEY]) AS [arg_max_t_Score] ON score_max.[KEY] = [arg_max_t_Score].[KEY_Score])
 SELECT arg_max_cte.[KEY] AS [KEY], arg_max_cte.[Score_0] AS [Score_0], arg_max_cte.[Score_1] AS [Score_1], arg_max_cte.[Score_2] AS [Score_2], arg_max_cte.[Score_3] AS [Score_3], arg_max_cte.[Proba_0] AS [Proba_0], arg_max_cte.[Proba_1] AS [Proba_1], arg_max_cte.[Proba_2] AS [Proba_2], arg_max_cte.[Proba_3] AS [Proba_3], CASE WHEN (arg_max_cte.[Proba_0] IS NULL OR arg_max_cte.[Proba_0] > 0.0) THEN log(arg_max_cte.[Proba_0]) ELSE -1.79769313486231e+308 END AS [LogProba_0], CASE WHEN (arg_max_cte.[Proba_1] IS NULL OR arg_max_cte.[Proba_1] > 0.0) THEN log(arg_max_cte.[Proba_1]) ELSE -1.79769313486231e+308 END AS [LogProba_1], CASE WHEN (arg_max_cte.[Proba_2] IS NULL OR arg_max_cte.[Proba_2] > 0.0) THEN log(arg_max_cte.[Proba_2]) ELSE -1.79769313486231e+308 END AS [LogProba_2], CASE WHEN (arg_max_cte.[Proba_3] IS NULL OR arg_max_cte.[Proba_3] > 0.0) THEN log(arg_max_cte.[Proba_3]) ELSE -1.79769313486231e+308 END AS [LogProba_3], arg_max_cte.[arg_max_Score] AS [Decision], CASE WHEN (arg_max_cte.[arg_max_Score] = 0) THEN arg_max_cte.[Proba_0] WHEN (arg_max_cte.[arg_max_Score] = 1) THEN arg_max_cte.[Proba_1] WHEN (arg_max_cte.[arg_max_Score] = 2) THEN arg_max_cte.[Proba_2] WHEN (arg_max_cte.[arg_max_Score] = 3) THEN arg_max_cte.[Proba_3] END AS [DecisionProba] 
FROM arg_max_cte