-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2018

-- Model : AdaBoostRegressor_Pipeline
-- Dataset : diabetes
-- Database : teradata


-- This SQL code can contain one or more statements, to be executed in the order they appear in this file.



-- Code For temporary table tmp_20180508183249_codegen_lbd7fr_ads_imp_1_out part 1. Create 


CREATE GLOBAL TEMPORARY TABLE tmp_20180508183249_codegen_lbd7fr_ads_imp_1_out  (
	"KEY" BIGINT, 
	impter_2 DOUBLE PRECISION, 
	impter_3 DOUBLE PRECISION, 
	impter_4 DOUBLE PRECISION, 
	impter_5 DOUBLE PRECISION, 
	impter_6 DOUBLE PRECISION, 
	impter_7 DOUBLE PRECISION, 
	impter_8 DOUBLE PRECISION, 
	impter_9 DOUBLE PRECISION, 
	impter_10 DOUBLE PRECISION, 
	impter_11 DOUBLE PRECISION
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table tmp_20180508183249_codegen_lbd7fr_ads_imp_1_out part 2. Populate

INSERT INTO tmp_20180508183249_codegen_lbd7fr_ads_imp_1_out ("KEY", impter_2, impter_3, impter_4, impter_5, impter_6, impter_7, impter_8, impter_9, impter_10, impter_11) SELECT "U"."KEY", "U".impter_2, "U".impter_3, "U".impter_4, "U".impter_5, "U".impter_6, "U".impter_7, "U".impter_8, "U".impter_9, "U".impter_10, "U".impter_11 
FROM (SELECT "ADS_imp_1_OUT"."KEY", "ADS_imp_1_OUT".impter_2, "ADS_imp_1_OUT".impter_3, "ADS_imp_1_OUT".impter_4, "ADS_imp_1_OUT".impter_5, "ADS_imp_1_OUT".impter_6, "ADS_imp_1_OUT".impter_7, "ADS_imp_1_OUT".impter_8, "ADS_imp_1_OUT".impter_9, "ADS_imp_1_OUT".impter_10, "ADS_imp_1_OUT".impter_11 
FROM (SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" IS NULL) THEN 0.0002686932066652995 ELSE "ADS"."Feature_0" END AS impter_2, CASE WHEN ("ADS"."Feature_1" IS NULL) THEN 0.0007239580580639441 ELSE "ADS"."Feature_1" END AS impter_3, CASE WHEN ("ADS"."Feature_2" IS NULL) THEN 0.0007280719825586765 ELSE "ADS"."Feature_2" END AS impter_4, CASE WHEN ("ADS"."Feature_3" IS NULL) THEN 0.001013565221084393 ELSE "ADS"."Feature_3" END AS impter_5, CASE WHEN ("ADS"."Feature_4" IS NULL) THEN 0.0009763580732882109 ELSE "ADS"."Feature_4" END AS impter_6, CASE WHEN ("ADS"."Feature_5" IS NULL) THEN 0.0017643808242337245 ELSE "ADS"."Feature_5" END AS impter_7, CASE WHEN ("ADS"."Feature_6" IS NULL) THEN -0.0016512815450565026 ELSE "ADS"."Feature_6" END AS impter_8, CASE WHEN ("ADS"."Feature_7" IS NULL) THEN 0.0013905501983388136 ELSE "ADS"."Feature_7" END AS impter_9, CASE WHEN ("ADS"."Feature_8" IS NULL) THEN 0.0012726482548090939 ELSE "ADS"."Feature_8" END AS impter_10, CASE WHEN ("ADS"."Feature_9" IS NULL) THEN 0.001034425005681627 ELSE "ADS"."Feature_9" END AS impter_11 
FROM diabetes AS "ADS") AS "ADS_imp_1_OUT") AS "U"

-- Code For temporary table tmp_20180508183249_codegen_8ob4r3_ads_sca_2_out part 1. Create 


CREATE GLOBAL TEMPORARY TABLE tmp_20180508183249_codegen_8ob4r3_ads_sca_2_out  (
	"KEY" BIGINT, 
	scaler_2 DOUBLE PRECISION, 
	scaler_3 DOUBLE PRECISION, 
	scaler_4 DOUBLE PRECISION, 
	scaler_5 DOUBLE PRECISION, 
	scaler_6 DOUBLE PRECISION, 
	scaler_7 DOUBLE PRECISION, 
	scaler_8 DOUBLE PRECISION, 
	scaler_9 DOUBLE PRECISION, 
	scaler_10 DOUBLE PRECISION, 
	scaler_11 DOUBLE PRECISION
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table tmp_20180508183249_codegen_8ob4r3_ads_sca_2_out part 2. Populate

INSERT INTO tmp_20180508183249_codegen_8ob4r3_ads_sca_2_out ("KEY", scaler_2, scaler_3, scaler_4, scaler_5, scaler_6, scaler_7, scaler_8, scaler_9, scaler_10, scaler_11) SELECT "U"."KEY", "U".scaler_2, "U".scaler_3, "U".scaler_4, "U".scaler_5, "U".scaler_6, "U".scaler_7, "U".scaler_8, "U".scaler_9, "U".scaler_10, "U".scaler_11 
FROM (SELECT "ADS_sca_2_OUT"."KEY", "ADS_sca_2_OUT".scaler_2, "ADS_sca_2_OUT".scaler_3, "ADS_sca_2_OUT".scaler_4, "ADS_sca_2_OUT".scaler_5, "ADS_sca_2_OUT".scaler_6, "ADS_sca_2_OUT".scaler_7, "ADS_sca_2_OUT".scaler_8, "ADS_sca_2_OUT".scaler_9, "ADS_sca_2_OUT".scaler_10, "ADS_sca_2_OUT".scaler_11 
FROM (SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", (CAST("ADS_imp_1_OUT".impter_2 AS DOUBLE PRECISION) - CAST(0.000268693206665 AS DOUBLE PRECISION)) / CAST(0.047242095836538 AS DOUBLE PRECISION) AS scaler_2, (CAST("ADS_imp_1_OUT".impter_3 AS DOUBLE PRECISION) - CAST(0.000723958058064 AS DOUBLE PRECISION)) / CAST(0.047605576685039 AS DOUBLE PRECISION) AS scaler_3, (CAST("ADS_imp_1_OUT".impter_4 AS DOUBLE PRECISION) - CAST(0.000728071982559 AS DOUBLE PRECISION)) / CAST(0.046935911439369 AS DOUBLE PRECISION) AS scaler_4, (CAST("ADS_imp_1_OUT".impter_5 AS DOUBLE PRECISION) - CAST(0.001013565221084 AS DOUBLE PRECISION)) / CAST(0.048335271948972 AS DOUBLE PRECISION) AS scaler_5, (CAST("ADS_imp_1_OUT".impter_6 AS DOUBLE PRECISION) - CAST(0.000976358073288 AS DOUBLE PRECISION)) / CAST(0.048050762009702 AS DOUBLE PRECISION) AS scaler_6, (CAST("ADS_imp_1_OUT".impter_7 AS DOUBLE PRECISION) - CAST(0.001764380824234 AS DOUBLE PRECISION)) / CAST(0.048060808731544 AS DOUBLE PRECISION) AS scaler_7, (CAST("ADS_imp_1_OUT".impter_8 AS DOUBLE PRECISION) - CAST(-0.001651281545057 AS DOUBLE PRECISION)) / CAST(0.04620240378043 AS DOUBLE PRECISION) AS scaler_8, (CAST("ADS_imp_1_OUT".impter_9 AS DOUBLE PRECISION) - CAST(0.001390550198339 AS DOUBLE PRECISION)) / CAST(0.047363093040532 AS DOUBLE PRECISION) AS scaler_9, (CAST("ADS_imp_1_OUT".impter_10 AS DOUBLE PRECISION) - CAST(0.001272648254809 AS DOUBLE PRECISION)) / CAST(0.045892861313648 AS DOUBLE PRECISION) AS scaler_10, (CAST("ADS_imp_1_OUT".impter_11 AS DOUBLE PRECISION) - CAST(0.001034425005682 AS DOUBLE PRECISION)) / CAST(0.047761585195706 AS DOUBLE PRECISION) AS scaler_11 
FROM tmp_20180508183249_codegen_lbd7fr_ads_imp_1_out AS "ADS_imp_1_OUT") AS "ADS_sca_2_OUT") AS "U"

-- Code For temporary table tmp_20180508183249_codegen_pv13q6_quantiles part 1. Create 


CREATE GLOBAL TEMPORARY TABLE tmp_20180508183249_codegen_pv13q6_quantiles  (
	"KEY" BIGINT, 
	"Quantile" DOUBLE PRECISION
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table tmp_20180508183249_codegen_pv13q6_quantiles part 2. Populate

INSERT INTO tmp_20180508183249_codegen_pv13q6_quantiles ("KEY", "Quantile") SELECT "U"."KEY", "U"."Quantile" 
FROM (WITH "DT_node_lookup" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= CAST(-0.150032624602318 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= CAST(0.116346150636673 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= CAST(-0.970769762992859 AS DOUBLE PRECISION)) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= CAST(-1.302048087120056 AS DOUBLE PRECISION)) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= CAST(1.40230131149292 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= CAST(-0.182179152965546 AS DOUBLE PRECISION)) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= CAST(0.519103407859802 AS DOUBLE PRECISION)) THEN 13 ELSE 14 END END END AS node_id_2 
FROM tmp_20180508183249_codegen_8ob4r3_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS DOUBLE PRECISION) AS "E" 
FROM (SELECT 3 AS nid, CAST(76.73333333333333 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 4 AS nid, CAST(106.52808988764045 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 6 AS nid, CAST(244.0 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 7 AS nid, CAST(155.5185185185185 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 10 AS nid, CAST(155.5 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 11 AS nid, CAST(198.71428571428572 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 13 AS nid, CAST(297.3157894736842 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 14 AS nid, CAST(223.5 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte) AS "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".nid AS nid, "DT_node_data"."E" AS "E" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".nid), 
"ADB_Model_0" AS 
(SELECT "DT_Output"."KEY" AS "KEY", "DT_Output"."E" AS "Estimator", CAST(0.107502604633641 AS DOUBLE PRECISION) AS "Weight", 0 AS est_index 
FROM "DT_Output"), 
"DT_node_lookup_1" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= CAST(0.74020266532898 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= CAST(0.632691383361816 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= CAST(1.528600454330444 AS DOUBLE PRECISION)) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= CAST(-0.886191725730896 AS DOUBLE PRECISION)) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= CAST(0.490864038467407 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= CAST(1.666381359100342 AS DOUBLE PRECISION)) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= CAST(0.818513333797455 AS DOUBLE PRECISION)) THEN 13 ELSE 14 END END END AS node_id_2 
FROM tmp_20180508183249_codegen_8ob4r3_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte_1 AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data_1" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS DOUBLE PRECISION) AS "E" 
FROM (SELECT 3 AS nid, CAST(106.35754189944134 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_1 UNION ALL SELECT 4 AS nid, CAST(219.66666666666666 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_1 UNION ALL SELECT 6 AS nid, CAST(131.06666666666666 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_1 UNION ALL SELECT 7 AS nid, CAST(197.14285714285714 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_1 UNION ALL SELECT 10 AS nid, CAST(218.5064935064935 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_1 UNION ALL SELECT 11 AS nid, CAST(291.26666666666665 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_1 UNION ALL SELECT 13 AS nid, CAST(103.8 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_1 UNION ALL SELECT 14 AS nid, CAST(201.0 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_1) AS "Values"), 
"DT_Output_1" AS 
(SELECT "DT_node_lookup_1"."KEY" AS "KEY", "DT_node_lookup_1".node_id_2 AS node_id_2, "DT_node_data_1".nid AS nid, "DT_node_data_1"."E" AS "E" 
FROM "DT_node_lookup_1" LEFT OUTER JOIN "DT_node_data_1" ON "DT_node_lookup_1".node_id_2 = "DT_node_data_1".nid), 
"ADB_Model_1" AS 
(SELECT "DT_Output_1"."KEY" AS "KEY", "DT_Output_1"."E" AS "Estimator", CAST(0.09354237709363 AS DOUBLE PRECISION) AS "Weight", 1 AS est_index 
FROM "DT_Output_1"), 
"DT_node_lookup_2" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= CAST(-0.457926273345947 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= CAST(1.393134713172912 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= CAST(0.196718350052834 AS DOUBLE PRECISION)) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= CAST(0.048214584589005 AS DOUBLE PRECISION)) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= CAST(1.471191763877869 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= CAST(0.74020266532898 AS DOUBLE PRECISION)) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= CAST(0.382274270057678 AS DOUBLE PRECISION)) THEN 13 ELSE 14 END END END AS node_id_2 
FROM tmp_20180508183249_codegen_8ob4r3_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte_2 AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data_2" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS DOUBLE PRECISION) AS "E" 
FROM (SELECT 3 AS nid, CAST(95.83333333333333 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_2 UNION ALL SELECT 4 AS nid, CAST(136.88888888888889 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_2 UNION ALL SELECT 6 AS nid, CAST(235.25 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_2 UNION ALL SELECT 7 AS nid, CAST(150.5 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_2 UNION ALL SELECT 10 AS nid, CAST(162.04516129032257 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_2 UNION ALL SELECT 11 AS nid, CAST(221.15686274509804 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_2 UNION ALL SELECT 13 AS nid, CAST(298.1666666666667 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_2 UNION ALL SELECT 14 AS nid, CAST(217.54545454545453 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_2) AS "Values"), 
"DT_Output_2" AS 
(SELECT "DT_node_lookup_2"."KEY" AS "KEY", "DT_node_lookup_2".node_id_2 AS node_id_2, "DT_node_data_2".nid AS nid, "DT_node_data_2"."E" AS "E" 
FROM "DT_node_lookup_2" LEFT OUTER JOIN "DT_node_data_2" ON "DT_node_lookup_2".node_id_2 = "DT_node_data_2".nid), 
"ADB_Model_2" AS 
(SELECT "DT_Output_2"."KEY" AS "KEY", "DT_Output_2"."E" AS "Estimator", CAST(0.061363210870108 AS DOUBLE PRECISION) AS "Weight", 2 AS est_index 
FROM "DT_Output_2"), 
"DT_node_lookup_3" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= CAST(-0.021907038986683 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= CAST(0.070419184863567 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= CAST(2.307655334472656 AS DOUBLE PRECISION)) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= CAST(-1.621810913085938 AS DOUBLE PRECISION)) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= CAST(1.349851608276367 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= CAST(-0.622215151786804 AS DOUBLE PRECISION)) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= CAST(1.102131009101868 AS DOUBLE PRECISION)) THEN 13 ELSE 14 END END END AS node_id_2 
FROM tmp_20180508183249_codegen_8ob4r3_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte_3 AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data_3" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS DOUBLE PRECISION) AS "E" 
FROM (SELECT 3 AS nid, CAST(100.7 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_3 UNION ALL SELECT 4 AS nid, CAST(253.0 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_3 UNION ALL SELECT 6 AS nid, CAST(302.0 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_3 UNION ALL SELECT 7 AS nid, CAST(158.1777777777778 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_3 UNION ALL SELECT 10 AS nid, CAST(162.41176470588235 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_3 UNION ALL SELECT 11 AS nid, CAST(232.24528301886792 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_3 UNION ALL SELECT 13 AS nid, CAST(110.70833333333333 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_3 UNION ALL SELECT 14 AS nid, CAST(246.66666666666666 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_3) AS "Values"), 
"DT_Output_3" AS 
(SELECT "DT_node_lookup_3"."KEY" AS "KEY", "DT_node_lookup_3".node_id_2 AS node_id_2, "DT_node_data_3".nid AS nid, "DT_node_data_3"."E" AS "E" 
FROM "DT_node_lookup_3" LEFT OUTER JOIN "DT_node_data_3" ON "DT_node_lookup_3".node_id_2 = "DT_node_data_3".nid), 
"ADB_Model_3" AS 
(SELECT "DT_Output_3"."KEY" AS "KEY", "DT_Output_3"."E" AS "Estimator", CAST(0.072276108235002 AS DOUBLE PRECISION) AS "Weight", 3 AS est_index 
FROM "DT_Output_3"), 
"DT_node_lookup_4" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= CAST(0.954513370990753 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= CAST(-0.243978589773178 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= CAST(2.154537200927734 AS DOUBLE PRECISION)) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= CAST(-0.000859875231981 AS DOUBLE PRECISION)) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= CAST(-0.564570128917694 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= CAST(-0.2451311647892 AS DOUBLE PRECISION)) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= CAST(-1.242336511611938 AS DOUBLE PRECISION)) THEN 13 ELSE 14 END END END AS node_id_2 
FROM tmp_20180508183249_codegen_8ob4r3_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte_4 AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data_4" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS DOUBLE PRECISION) AS "E" 
FROM (SELECT 3 AS nid, CAST(104.24166666666666 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_4 UNION ALL SELECT 4 AS nid, CAST(253.0 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_4 UNION ALL SELECT 6 AS nid, CAST(192.66666666666666 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_4 UNION ALL SELECT 7 AS nid, CAST(146.61855670103094 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_4 UNION ALL SELECT 10 AS nid, CAST(68.0 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_4 UNION ALL SELECT 11 AS nid, CAST(221.0 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_4 UNION ALL SELECT 13 AS nid, CAST(146.4 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_4 UNION ALL SELECT 14 AS nid, CAST(276.9848484848485 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_4) AS "Values"), 
"DT_Output_4" AS 
(SELECT "DT_node_lookup_4"."KEY" AS "KEY", "DT_node_lookup_4".node_id_2 AS node_id_2, "DT_node_data_4".nid AS nid, "DT_node_data_4"."E" AS "E" 
FROM "DT_node_lookup_4" LEFT OUTER JOIN "DT_node_data_4" ON "DT_node_lookup_4".node_id_2 = "DT_node_data_4".nid), 
"ADB_Model_4" AS 
(SELECT "DT_Output_4"."KEY" AS "KEY", "DT_Output_4"."E" AS "Estimator", CAST(0.06892498966419 AS DOUBLE PRECISION) AS "Weight", 4 AS est_index 
FROM "DT_Output_4"), 
"DT_node_lookup_5" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= CAST(0.254111677408218 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= CAST(-0.505198299884796 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= CAST(-0.863780736923218 AS DOUBLE PRECISION)) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= CAST(-1.77559494972229 AS DOUBLE PRECISION)) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= CAST(-0.503667950630188 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= CAST(-0.721821069717407 AS DOUBLE PRECISION)) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= CAST(1.976388454437256 AS DOUBLE PRECISION)) THEN 13 ELSE 14 END END END AS node_id_2 
FROM tmp_20180508183249_codegen_8ob4r3_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte_5 AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data_5" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS DOUBLE PRECISION) AS "E" 
FROM (SELECT 3 AS nid, CAST(141.0 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_5 UNION ALL SELECT 4 AS nid, CAST(218.10526315789474 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_5 UNION ALL SELECT 6 AS nid, CAST(183.91666666666666 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_5 UNION ALL SELECT 7 AS nid, CAST(113.04580152671755 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_5 UNION ALL SELECT 10 AS nid, CAST(176.88888888888889 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_5 UNION ALL SELECT 11 AS nid, CAST(87.84615384615384 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_5 UNION ALL SELECT 13 AS nid, CAST(216.82307692307688 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_5 UNION ALL SELECT 14 AS nid, CAST(301.4 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_5) AS "Values"), 
"DT_Output_5" AS 
(SELECT "DT_node_lookup_5"."KEY" AS "KEY", "DT_node_lookup_5".node_id_2 AS node_id_2, "DT_node_data_5".nid AS nid, "DT_node_data_5"."E" AS "E" 
FROM "DT_node_lookup_5" LEFT OUTER JOIN "DT_node_data_5" ON "DT_node_lookup_5".node_id_2 = "DT_node_data_5".nid), 
"ADB_Model_5" AS 
(SELECT "DT_Output_5"."KEY" AS "KEY", "DT_Output_5"."E" AS "Estimator", CAST(0.050264669924854 AS DOUBLE PRECISION) AS "Weight", 5 AS est_index 
FROM "DT_Output_5"), 
"DT_node_lookup_6" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= CAST(0.09338267147541 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= CAST(0.451677799224854 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= CAST(0.490864038467407 AS DOUBLE PRECISION)) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= CAST(0.610391497612 AS DOUBLE PRECISION)) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= CAST(0.606212675571442 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= CAST(2.917891263961792 AS DOUBLE PRECISION)) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= CAST(-1.083567023277283 AS DOUBLE PRECISION)) THEN 13 ELSE 14 END END END AS node_id_2 
FROM tmp_20180508183249_codegen_8ob4r3_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte_6 AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data_6" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS DOUBLE PRECISION) AS "E" 
FROM (SELECT 3 AS nid, CAST(124.10752688172043 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_6 UNION ALL SELECT 4 AS nid, CAST(76.93181818181819 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_6 UNION ALL SELECT 6 AS nid, CAST(228.33333333333334 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_6 UNION ALL SELECT 7 AS nid, CAST(122.46153846153847 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_6 UNION ALL SELECT 10 AS nid, CAST(172.0952380952381 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_6 UNION ALL SELECT 11 AS nid, CAST(346.0 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_6 UNION ALL SELECT 13 AS nid, CAST(128.0 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_6 UNION ALL SELECT 14 AS nid, CAST(268.864406779661 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_6) AS "Values"), 
"DT_Output_6" AS 
(SELECT "DT_node_lookup_6"."KEY" AS "KEY", "DT_node_lookup_6".node_id_2 AS node_id_2, "DT_node_data_6".nid AS nid, "DT_node_data_6"."E" AS "E" 
FROM "DT_node_lookup_6" LEFT OUTER JOIN "DT_node_data_6" ON "DT_node_lookup_6".node_id_2 = "DT_node_data_6".nid), 
"ADB_Model_6" AS 
(SELECT "DT_Output_6"."KEY" AS "KEY", "DT_Output_6"."E" AS "Estimator", CAST(0.077279293704866 AS DOUBLE PRECISION) AS "Weight", 6 AS est_index 
FROM "DT_Output_6"), 
"DT_node_lookup_7" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= CAST(-0.34775847196579 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= CAST(1.203190803527832 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= CAST(-0.780195593833923 AS DOUBLE PRECISION)) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= CAST(-0.262551337480545 AS DOUBLE PRECISION)) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= CAST(0.09338267147541 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= CAST(1.907082557678223 AS DOUBLE PRECISION)) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= CAST(0.708057880401611 AS DOUBLE PRECISION)) THEN 13 ELSE 14 END END END AS node_id_2 
FROM tmp_20180508183249_codegen_8ob4r3_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte_7 AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data_7" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS DOUBLE PRECISION) AS "E" 
FROM (SELECT 3 AS nid, CAST(75.9375 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_7 UNION ALL SELECT 4 AS nid, CAST(125.2394366197183 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_7 UNION ALL SELECT 6 AS nid, CAST(204.75 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_7 UNION ALL SELECT 7 AS nid, CAST(257.5 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_7 UNION ALL SELECT 10 AS nid, CAST(135.54310344827587 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_7 UNION ALL SELECT 11 AS nid, CAST(266.22222222222223 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_7 UNION ALL SELECT 13 AS nid, CAST(257.97297297297297 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_7 UNION ALL SELECT 14 AS nid, CAST(159.33333333333334 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_7) AS "Values"), 
"DT_Output_7" AS 
(SELECT "DT_node_lookup_7"."KEY" AS "KEY", "DT_node_lookup_7".node_id_2 AS node_id_2, "DT_node_data_7".nid AS nid, "DT_node_data_7"."E" AS "E" 
FROM "DT_node_lookup_7" LEFT OUTER JOIN "DT_node_data_7" ON "DT_node_lookup_7".node_id_2 = "DT_node_data_7".nid), 
"ADB_Model_7" AS 
(SELECT "DT_Output_7"."KEY" AS "KEY", "DT_Output_7"."E" AS "Estimator", CAST(0.058344526761118 AS DOUBLE PRECISION) AS "Weight", 7 AS est_index 
FROM "DT_Output_7"), 
"DT_node_lookup_8" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= CAST(1.55156397819519 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= CAST(0.876736164093018 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= CAST(0.61710911989212 AS DOUBLE PRECISION)) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= CAST(-0.622215151786804 AS DOUBLE PRECISION)) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= CAST(0.431141823530197 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= CAST(2.125650882720947 AS DOUBLE PRECISION)) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= CAST(0.347924172878265 AS DOUBLE PRECISION)) THEN 13 ELSE 14 END END END AS node_id_2 
FROM tmp_20180508183249_codegen_8ob4r3_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte_8 AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data_8" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS DOUBLE PRECISION) AS "E" 
FROM (SELECT 3 AS nid, CAST(120.27717391304348 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_8 UNION ALL SELECT 4 AS nid, CAST(179.49382716049382 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_8 UNION ALL SELECT 6 AS nid, CAST(102.0 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_8 UNION ALL SELECT 7 AS nid, CAST(252.46808510638297 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_8 UNION ALL SELECT 10 AS nid, CAST(296.0 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_8 UNION ALL SELECT 11 AS nid, CAST(340.2307692307692 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_8 UNION ALL SELECT 13 AS nid, CAST(128.0 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_8 UNION ALL SELECT 14 AS nid, CAST(255.0 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_8) AS "Values"), 
"DT_Output_8" AS 
(SELECT "DT_node_lookup_8"."KEY" AS "KEY", "DT_node_lookup_8".node_id_2 AS node_id_2, "DT_node_data_8".nid AS nid, "DT_node_data_8"."E" AS "E" 
FROM "DT_node_lookup_8" LEFT OUTER JOIN "DT_node_data_8" ON "DT_node_lookup_8".node_id_2 = "DT_node_data_8".nid), 
"ADB_Model_8" AS 
(SELECT "DT_Output_8"."KEY" AS "KEY", "DT_Output_8"."E" AS "Estimator", CAST(0.046362345584869 AS DOUBLE PRECISION) AS "Weight", 8 AS est_index 
FROM "DT_Output_8"), 
"DT_node_lookup_9" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= CAST(0.988958597183228 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= CAST(-0.233241856098175 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= CAST(0.889798104763031 AS DOUBLE PRECISION)) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= CAST(-1.929378867149353 AS DOUBLE PRECISION)) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= CAST(-1.052392601966858 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= CAST(-0.239101558923721 AS DOUBLE PRECISION)) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= CAST(-1.122013092041016 AS DOUBLE PRECISION)) THEN 13 ELSE 14 END END END AS node_id_2 
FROM tmp_20180508183249_codegen_8ob4r3_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte_9 AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data_9" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS DOUBLE PRECISION) AS "E" 
FROM (SELECT 3 AS nid, CAST(98.77669902912622 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_9 UNION ALL SELECT 4 AS nid, CAST(250.0 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_9 UNION ALL SELECT 6 AS nid, CAST(294.7142857142857 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_9 UNION ALL SELECT 7 AS nid, CAST(166.1 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_9 UNION ALL SELECT 10 AS nid, CAST(78.0 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_9 UNION ALL SELECT 11 AS nid, CAST(140.6 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_9 UNION ALL SELECT 13 AS nid, CAST(153.16666666666666 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_9 UNION ALL SELECT 14 AS nid, CAST(270.6607142857143 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_9) AS "Values"), 
"DT_Output_9" AS 
(SELECT "DT_node_lookup_9"."KEY" AS "KEY", "DT_node_lookup_9".node_id_2 AS node_id_2, "DT_node_data_9".nid AS nid, "DT_node_data_9"."E" AS "E" 
FROM "DT_node_lookup_9" LEFT OUTER JOIN "DT_node_data_9" ON "DT_node_lookup_9".node_id_2 = "DT_node_data_9".nid), 
"ADB_Model_9" AS 
(SELECT "DT_Output_9"."KEY" AS "KEY", "DT_Output_9"."E" AS "Estimator", CAST(0.061754674482144 AS DOUBLE PRECISION) AS "Weight", 9 AS est_index 
FROM "DT_Output_9"), 
"DT_node_lookup_10" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= CAST(-0.503667950630188 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= CAST(2.079607009887695 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= CAST(-0.811809539794922 AS DOUBLE PRECISION)) THEN 3 ELSE 4 END ELSE 5 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= CAST(0.779662013053894 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= CAST(-1.929378867149353 AS DOUBLE PRECISION)) THEN 8 ELSE 9 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= CAST(1.135397672653198 AS DOUBLE PRECISION)) THEN 11 ELSE 12 END END END AS node_id_2 
FROM tmp_20180508183249_codegen_8ob4r3_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte_10 AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data_10" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS DOUBLE PRECISION) AS "E" 
FROM (SELECT 3 AS nid, CAST(133.5909090909091 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_10 UNION ALL SELECT 4 AS nid, CAST(84.05263157894737 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_10 UNION ALL SELECT 5 AS nid, CAST(253.0 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_10 UNION ALL SELECT 8 AS nid, CAST(289.25 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_10 UNION ALL SELECT 9 AS nid, CAST(152.87437185929647 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_10 UNION ALL SELECT 11 AS nid, CAST(269.72340425531917 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_10 UNION ALL SELECT 12 AS nid, CAST(134.5 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_10) AS "Values"), 
"DT_Output_10" AS 
(SELECT "DT_node_lookup_10"."KEY" AS "KEY", "DT_node_lookup_10".node_id_2 AS node_id_2, "DT_node_data_10".nid AS nid, "DT_node_data_10"."E" AS "E" 
FROM "DT_node_lookup_10" LEFT OUTER JOIN "DT_node_data_10" ON "DT_node_lookup_10".node_id_2 = "DT_node_data_10".nid), 
"ADB_Model_10" AS 
(SELECT "DT_Output_10"."KEY" AS "KEY", "DT_Output_10"."E" AS "Estimator", CAST(0.050485802975357 AS DOUBLE PRECISION) AS "Weight", 10 AS est_index 
FROM "DT_Output_10"), 
"DT_node_lookup_11" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= CAST(0.467158317565918 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= CAST(0.466978013515472 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= CAST(2.68825626373291 AS DOUBLE PRECISION)) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= CAST(0.949267625808716 AS DOUBLE PRECISION)) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= CAST(-0.345828294754028 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= CAST(-1.50126051902771 AS DOUBLE PRECISION)) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= CAST(0.042502447962761 AS DOUBLE PRECISION)) THEN 13 ELSE 14 END END END AS node_id_2 
FROM tmp_20180508183249_codegen_8ob4r3_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte_11 AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data_11" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS DOUBLE PRECISION) AS "E" 
FROM (SELECT 3 AS nid, CAST(126.87162162162163 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_11 UNION ALL SELECT 4 AS nid, CAST(346.0 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_11 UNION ALL SELECT 6 AS nid, CAST(251.56521739130434 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_11 UNION ALL SELECT 7 AS nid, CAST(161.97368421052633 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_11 UNION ALL SELECT 10 AS nid, CAST(133.33333333333334 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_11 UNION ALL SELECT 11 AS nid, CAST(269.3114754098361 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_11 UNION ALL SELECT 13 AS nid, CAST(236.58823529411765 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_11 UNION ALL SELECT 14 AS nid, CAST(133.02380952380952 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_11) AS "Values"), 
"DT_Output_11" AS 
(SELECT "DT_node_lookup_11"."KEY" AS "KEY", "DT_node_lookup_11".node_id_2 AS node_id_2, "DT_node_data_11".nid AS nid, "DT_node_data_11"."E" AS "E" 
FROM "DT_node_lookup_11" LEFT OUTER JOIN "DT_node_data_11" ON "DT_node_lookup_11".node_id_2 = "DT_node_data_11".nid), 
"ADB_Model_11" AS 
(SELECT "DT_Output_11"."KEY" AS "KEY", "DT_Output_11"."E" AS "Estimator", CAST(0.057254879554018 AS DOUBLE PRECISION) AS "Weight", 11 AS est_index 
FROM "DT_Output_11"), 
"DT_node_lookup_12" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= CAST(0.432763397693634 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= CAST(1.459710001945496 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= CAST(0.172589421272278 AS DOUBLE PRECISION)) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= CAST(2.917891263961792 AS DOUBLE PRECISION)) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= CAST(-0.182179152965546 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= CAST(0.377380609512329 AS DOUBLE PRECISION)) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= CAST(3.56604528427124 AS DOUBLE PRECISION)) THEN 13 ELSE 14 END END END AS node_id_2 
FROM tmp_20180508183249_codegen_8ob4r3_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte_12 AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data_12" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS DOUBLE PRECISION) AS "E" 
FROM (SELECT 3 AS nid, CAST(152.61421319796955 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_12 UNION ALL SELECT 4 AS nid, CAST(85.84444444444445 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_12 UNION ALL SELECT 6 AS nid, CAST(273.125 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_12 UNION ALL SELECT 7 AS nid, CAST(346.0 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_12 UNION ALL SELECT 10 AS nid, CAST(81.875 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_12 UNION ALL SELECT 11 AS nid, CAST(137.875 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_12 UNION ALL SELECT 13 AS nid, CAST(255.43589743589743 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_12 UNION ALL SELECT 14 AS nid, CAST(84.0 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_12) AS "Values"), 
"DT_Output_12" AS 
(SELECT "DT_node_lookup_12"."KEY" AS "KEY", "DT_node_lookup_12".node_id_2 AS node_id_2, "DT_node_data_12".nid AS nid, "DT_node_data_12"."E" AS "E" 
FROM "DT_node_lookup_12" LEFT OUTER JOIN "DT_node_data_12" ON "DT_node_lookup_12".node_id_2 = "DT_node_data_12".nid), 
"ADB_Model_12" AS 
(SELECT "DT_Output_12"."KEY" AS "KEY", "DT_Output_12"."E" AS "Estimator", CAST(0.058214311675483 AS DOUBLE PRECISION) AS "Weight", 12 AS est_index 
FROM "DT_Output_12"), 
"DT_node_lookup_13" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= CAST(0.977476835250854 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= CAST(-0.243978589773178 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= CAST(-0.385670810937882 AS DOUBLE PRECISION)) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= CAST(0.770805478096008 AS DOUBLE PRECISION)) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= CAST(-1.122013092041016 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= CAST(0.21197122335434 AS DOUBLE PRECISION)) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= CAST(-1.076135635375976 AS DOUBLE PRECISION)) THEN 13 ELSE 14 END END END AS node_id_2 
FROM tmp_20180508183249_codegen_8ob4r3_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte_13 AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data_13" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS DOUBLE PRECISION) AS "E" 
FROM (SELECT 3 AS nid, CAST(228.0 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_13 UNION ALL SELECT 4 AS nid, CAST(110.51162790697674 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_13 UNION ALL SELECT 6 AS nid, CAST(192.25 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_13 UNION ALL SELECT 7 AS nid, CAST(55.666666666666664 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_13 UNION ALL SELECT 10 AS nid, CAST(213.66666666666666 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_13 UNION ALL SELECT 11 AS nid, CAST(98.0 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_13 UNION ALL SELECT 13 AS nid, CAST(133.25 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_13 UNION ALL SELECT 14 AS nid, CAST(269.80645161290323 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_13) AS "Values"), 
"DT_Output_13" AS 
(SELECT "DT_node_lookup_13"."KEY" AS "KEY", "DT_node_lookup_13".node_id_2 AS node_id_2, "DT_node_data_13".nid AS nid, "DT_node_data_13"."E" AS "E" 
FROM "DT_node_lookup_13" LEFT OUTER JOIN "DT_node_data_13" ON "DT_node_lookup_13".node_id_2 = "DT_node_data_13".nid), 
"ADB_Model_13" AS 
(SELECT "DT_Output_13"."KEY" AS "KEY", "DT_Output_13"."E" AS "Estimator", CAST(0.045926425701781 AS DOUBLE PRECISION) AS "Weight", 13 AS est_index 
FROM "DT_Output_13"), 
"DT_node_lookup_14" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= CAST(0.254111677408218 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= CAST(0.564134120941162 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= CAST(-0.305985808372498 AS DOUBLE PRECISION)) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= CAST(0.085864774882793 AS DOUBLE PRECISION)) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= CAST(0.866386651992798 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= CAST(-0.943465709686279 AS DOUBLE PRECISION)) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= CAST(3.456969738006592 AS DOUBLE PRECISION)) THEN 13 ELSE 14 END END END AS node_id_2 
FROM tmp_20180508183249_codegen_8ob4r3_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte_14 AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data_14" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS DOUBLE PRECISION) AS "E" 
FROM (SELECT 3 AS nid, CAST(170.46153846153845 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_14 UNION ALL SELECT 4 AS nid, CAST(90.02884615384616 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_14 UNION ALL SELECT 6 AS nid, CAST(267.5 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_14 UNION ALL SELECT 7 AS nid, CAST(140.875 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_14 UNION ALL SELECT 10 AS nid, CAST(239.53658536585365 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_14 UNION ALL SELECT 11 AS nid, CAST(153.47674418604652 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_14 UNION ALL SELECT 13 AS nid, CAST(280.1509433962264 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_14 UNION ALL SELECT 14 AS nid, CAST(84.0 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_14) AS "Values"), 
"DT_Output_14" AS 
(SELECT "DT_node_lookup_14"."KEY" AS "KEY", "DT_node_lookup_14".node_id_2 AS node_id_2, "DT_node_data_14".nid AS nid, "DT_node_data_14"."E" AS "E" 
FROM "DT_node_lookup_14" LEFT OUTER JOIN "DT_node_data_14" ON "DT_node_lookup_14".node_id_2 = "DT_node_data_14".nid), 
"ADB_Model_14" AS 
(SELECT "DT_Output_14"."KEY" AS "KEY", "DT_Output_14"."E" AS "Estimator", CAST(0.056947138422334 AS DOUBLE PRECISION) AS "Weight", 14 AS est_index 
FROM "DT_Output_14"), 
"DT_node_lookup_15" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= CAST(-0.159215658903122 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= CAST(0.502772808074951 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= CAST(-2.006270885467529 AS DOUBLE PRECISION)) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= CAST(-0.296996563673019 AS DOUBLE PRECISION)) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= CAST(0.69293737411499 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= CAST(1.459710001945496 AS DOUBLE PRECISION)) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= CAST(3.653141498565674 AS DOUBLE PRECISION)) THEN 13 ELSE 14 END END END AS node_id_2 
FROM tmp_20180508183249_codegen_8ob4r3_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte_15 AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data_15" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS DOUBLE PRECISION) AS "E" 
FROM (SELECT 3 AS nid, CAST(160.54545454545453 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_15 UNION ALL SELECT 4 AS nid, CAST(96.39506172839505 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_15 UNION ALL SELECT 6 AS nid, CAST(165.86666666666667 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_15 UNION ALL SELECT 7 AS nid, CAST(287.0 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_15 UNION ALL SELECT 10 AS nid, CAST(160.95569620253164 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_15 UNION ALL SELECT 11 AS nid, CAST(311.09090909090907 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_15 UNION ALL SELECT 13 AS nid, CAST(259.07547169811323 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_15 UNION ALL SELECT 14 AS nid, CAST(84.0 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_15) AS "Values"), 
"DT_Output_15" AS 
(SELECT "DT_node_lookup_15"."KEY" AS "KEY", "DT_node_lookup_15".node_id_2 AS node_id_2, "DT_node_data_15".nid AS nid, "DT_node_data_15"."E" AS "E" 
FROM "DT_node_lookup_15" LEFT OUTER JOIN "DT_node_data_15" ON "DT_node_lookup_15".node_id_2 = "DT_node_data_15".nid), 
"ADB_Model_15" AS 
(SELECT "DT_Output_15"."KEY" AS "KEY", "DT_Output_15"."E" AS "Estimator", CAST(0.033556640716605 AS DOUBLE PRECISION) AS "Weight", 15 AS est_index 
FROM "DT_Output_15"), 
"WE" AS 
(SELECT ensemble_score_union."KEY" AS "KEY", ensemble_score_union."Estimator" AS "Estimator", ensemble_score_union."Weight" AS "Weight", ensemble_score_union.est_index AS est_index 
FROM (SELECT "ADB_Model_0"."KEY" AS "KEY", "ADB_Model_0"."Estimator" AS "Estimator", "ADB_Model_0"."Weight" AS "Weight", "ADB_Model_0".est_index AS est_index 
FROM "ADB_Model_0" UNION ALL SELECT "ADB_Model_1"."KEY" AS "KEY", "ADB_Model_1"."Estimator" AS "Estimator", "ADB_Model_1"."Weight" AS "Weight", "ADB_Model_1".est_index AS est_index 
FROM "ADB_Model_1" UNION ALL SELECT "ADB_Model_2"."KEY" AS "KEY", "ADB_Model_2"."Estimator" AS "Estimator", "ADB_Model_2"."Weight" AS "Weight", "ADB_Model_2".est_index AS est_index 
FROM "ADB_Model_2" UNION ALL SELECT "ADB_Model_3"."KEY" AS "KEY", "ADB_Model_3"."Estimator" AS "Estimator", "ADB_Model_3"."Weight" AS "Weight", "ADB_Model_3".est_index AS est_index 
FROM "ADB_Model_3" UNION ALL SELECT "ADB_Model_4"."KEY" AS "KEY", "ADB_Model_4"."Estimator" AS "Estimator", "ADB_Model_4"."Weight" AS "Weight", "ADB_Model_4".est_index AS est_index 
FROM "ADB_Model_4" UNION ALL SELECT "ADB_Model_5"."KEY" AS "KEY", "ADB_Model_5"."Estimator" AS "Estimator", "ADB_Model_5"."Weight" AS "Weight", "ADB_Model_5".est_index AS est_index 
FROM "ADB_Model_5" UNION ALL SELECT "ADB_Model_6"."KEY" AS "KEY", "ADB_Model_6"."Estimator" AS "Estimator", "ADB_Model_6"."Weight" AS "Weight", "ADB_Model_6".est_index AS est_index 
FROM "ADB_Model_6" UNION ALL SELECT "ADB_Model_7"."KEY" AS "KEY", "ADB_Model_7"."Estimator" AS "Estimator", "ADB_Model_7"."Weight" AS "Weight", "ADB_Model_7".est_index AS est_index 
FROM "ADB_Model_7" UNION ALL SELECT "ADB_Model_8"."KEY" AS "KEY", "ADB_Model_8"."Estimator" AS "Estimator", "ADB_Model_8"."Weight" AS "Weight", "ADB_Model_8".est_index AS est_index 
FROM "ADB_Model_8" UNION ALL SELECT "ADB_Model_9"."KEY" AS "KEY", "ADB_Model_9"."Estimator" AS "Estimator", "ADB_Model_9"."Weight" AS "Weight", "ADB_Model_9".est_index AS est_index 
FROM "ADB_Model_9" UNION ALL SELECT "ADB_Model_10"."KEY" AS "KEY", "ADB_Model_10"."Estimator" AS "Estimator", "ADB_Model_10"."Weight" AS "Weight", "ADB_Model_10".est_index AS est_index 
FROM "ADB_Model_10" UNION ALL SELECT "ADB_Model_11"."KEY" AS "KEY", "ADB_Model_11"."Estimator" AS "Estimator", "ADB_Model_11"."Weight" AS "Weight", "ADB_Model_11".est_index AS est_index 
FROM "ADB_Model_11" UNION ALL SELECT "ADB_Model_12"."KEY" AS "KEY", "ADB_Model_12"."Estimator" AS "Estimator", "ADB_Model_12"."Weight" AS "Weight", "ADB_Model_12".est_index AS est_index 
FROM "ADB_Model_12" UNION ALL SELECT "ADB_Model_13"."KEY" AS "KEY", "ADB_Model_13"."Estimator" AS "Estimator", "ADB_Model_13"."Weight" AS "Weight", "ADB_Model_13".est_index AS est_index 
FROM "ADB_Model_13" UNION ALL SELECT "ADB_Model_14"."KEY" AS "KEY", "ADB_Model_14"."Estimator" AS "Estimator", "ADB_Model_14"."Weight" AS "Weight", "ADB_Model_14".est_index AS est_index 
FROM "ADB_Model_14" UNION ALL SELECT "ADB_Model_15"."KEY" AS "KEY", "ADB_Model_15"."Estimator" AS "Estimator", "ADB_Model_15"."Weight" AS "Weight", "ADB_Model_15".est_index AS est_index 
FROM "ADB_Model_15") AS ensemble_score_union), 
"Cumulative_Frequencies" AS 
(SELECT "CW"."KEY" AS "KEY", "CW"."Estimator" AS "Estimator", "CW"."Weight" AS "Weight", "CW".est_index AS est_index, "CW".cum_weight AS cum_weight 
FROM (SELECT u1."KEY" AS "KEY", u1."Estimator" AS "Estimator", u1."Weight" AS "Weight", u1.est_index AS est_index, sum(u2."Weight") AS cum_weight 
FROM "WE" AS u1, "WE" AS u2 
WHERE u1."Estimator" >= u2."Estimator" AND u1."KEY" = u2."KEY" GROUP BY u1."KEY", u1.est_index, u1."Estimator", u1."Weight") AS "CW")
 SELECT "Quantiles"."KEY", "Quantiles"."Quantile" 
FROM (SELECT "CW2"."KEY" AS "KEY", "CW2"."Quantile" AS "Quantile" 
FROM (SELECT "Cumulative_Frequencies"."KEY" AS "KEY", min("Cumulative_Frequencies"."Estimator") AS "Quantile" 
FROM "Cumulative_Frequencies" 
WHERE "Cumulative_Frequencies".cum_weight >= CAST(0.5 AS DOUBLE PRECISION) GROUP BY "Cumulative_Frequencies"."KEY") AS "CW2") AS "Quantiles") AS "U"

-- Model deployment code

SELECT "Quantiles"."KEY" AS "KEY", "Quantiles"."Quantile" AS "Estimator" 
FROM tmp_20180508183249_codegen_pv13q6_quantiles AS "Quantiles"