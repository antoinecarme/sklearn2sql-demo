-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2018

-- Model : DecisionTreeRegressor_Pipeline
-- Dataset : freidman1
-- Database : teradata


-- This SQL code can contain one or more statements, to be executed in the order they appear in this file.



-- Code For temporary table tmp_20180508184416_codegen_3pev5n_ads_imp_1_out part 1. Create 


CREATE GLOBAL TEMPORARY TABLE tmp_20180508184416_codegen_3pev5n_ads_imp_1_out  (
	"KEY" BIGINT, 
	impter_2 DOUBLE PRECISION, 
	impter_3 DOUBLE PRECISION, 
	impter_4 DOUBLE PRECISION, 
	impter_5 DOUBLE PRECISION, 
	impter_6 DOUBLE PRECISION, 
	impter_7 DOUBLE PRECISION, 
	impter_8 DOUBLE PRECISION, 
	impter_9 DOUBLE PRECISION, 
	impter_10 DOUBLE PRECISION, 
	impter_11 DOUBLE PRECISION
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table tmp_20180508184416_codegen_3pev5n_ads_imp_1_out part 2. Populate

INSERT INTO tmp_20180508184416_codegen_3pev5n_ads_imp_1_out ("KEY", impter_2, impter_3, impter_4, impter_5, impter_6, impter_7, impter_8, impter_9, impter_10, impter_11) SELECT "U"."KEY", "U".impter_2, "U".impter_3, "U".impter_4, "U".impter_5, "U".impter_6, "U".impter_7, "U".impter_8, "U".impter_9, "U".impter_10, "U".impter_11 
FROM (SELECT "ADS_imp_1_OUT"."KEY", "ADS_imp_1_OUT".impter_2, "ADS_imp_1_OUT".impter_3, "ADS_imp_1_OUT".impter_4, "ADS_imp_1_OUT".impter_5, "ADS_imp_1_OUT".impter_6, "ADS_imp_1_OUT".impter_7, "ADS_imp_1_OUT".impter_8, "ADS_imp_1_OUT".impter_9, "ADS_imp_1_OUT".impter_10, "ADS_imp_1_OUT".impter_11 
FROM (SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" IS NULL) THEN 0.5629846484809591 ELSE "ADS"."Feature_0" END AS impter_2, CASE WHEN ("ADS"."Feature_1" IS NULL) THEN 0.45606442423375926 ELSE "ADS"."Feature_1" END AS impter_3, CASE WHEN ("ADS"."Feature_2" IS NULL) THEN 0.47113817481474773 ELSE "ADS"."Feature_2" END AS impter_4, CASE WHEN ("ADS"."Feature_3" IS NULL) THEN 0.533968020094518 ELSE "ADS"."Feature_3" END AS impter_5, CASE WHEN ("ADS"."Feature_4" IS NULL) THEN 0.4780936262373869 ELSE "ADS"."Feature_4" END AS impter_6, CASE WHEN ("ADS"."Feature_5" IS NULL) THEN 0.5682849224172329 ELSE "ADS"."Feature_5" END AS impter_7, CASE WHEN ("ADS"."Feature_6" IS NULL) THEN 0.47914374714280494 ELSE "ADS"."Feature_6" END AS impter_8, CASE WHEN ("ADS"."Feature_7" IS NULL) THEN 0.4594152477223205 ELSE "ADS"."Feature_7" END AS impter_9, CASE WHEN ("ADS"."Feature_8" IS NULL) THEN 0.4901106996809651 ELSE "ADS"."Feature_8" END AS impter_10, CASE WHEN ("ADS"."Feature_9" IS NULL) THEN 0.5378806933707533 ELSE "ADS"."Feature_9" END AS impter_11 
FROM freidman1 AS "ADS") AS "ADS_imp_1_OUT") AS "U"

-- Code For temporary table tmp_20180508184416_codegen_y825zp_ads_sca_2_out part 1. Create 


CREATE GLOBAL TEMPORARY TABLE tmp_20180508184416_codegen_y825zp_ads_sca_2_out  (
	"KEY" BIGINT, 
	scaler_2 DOUBLE PRECISION, 
	scaler_3 DOUBLE PRECISION, 
	scaler_4 DOUBLE PRECISION, 
	scaler_5 DOUBLE PRECISION, 
	scaler_6 DOUBLE PRECISION, 
	scaler_7 DOUBLE PRECISION, 
	scaler_8 DOUBLE PRECISION, 
	scaler_9 DOUBLE PRECISION, 
	scaler_10 DOUBLE PRECISION, 
	scaler_11 DOUBLE PRECISION
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table tmp_20180508184416_codegen_y825zp_ads_sca_2_out part 2. Populate

INSERT INTO tmp_20180508184416_codegen_y825zp_ads_sca_2_out ("KEY", scaler_2, scaler_3, scaler_4, scaler_5, scaler_6, scaler_7, scaler_8, scaler_9, scaler_10, scaler_11) SELECT "U"."KEY", "U".scaler_2, "U".scaler_3, "U".scaler_4, "U".scaler_5, "U".scaler_6, "U".scaler_7, "U".scaler_8, "U".scaler_9, "U".scaler_10, "U".scaler_11 
FROM (SELECT "ADS_sca_2_OUT"."KEY", "ADS_sca_2_OUT".scaler_2, "ADS_sca_2_OUT".scaler_3, "ADS_sca_2_OUT".scaler_4, "ADS_sca_2_OUT".scaler_5, "ADS_sca_2_OUT".scaler_6, "ADS_sca_2_OUT".scaler_7, "ADS_sca_2_OUT".scaler_8, "ADS_sca_2_OUT".scaler_9, "ADS_sca_2_OUT".scaler_10, "ADS_sca_2_OUT".scaler_11 
FROM (SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", (CAST("ADS_imp_1_OUT".impter_2 AS DOUBLE PRECISION) - CAST(0.562984648480959 AS DOUBLE PRECISION)) / CAST(0.258371468339634 AS DOUBLE PRECISION) AS scaler_2, (CAST("ADS_imp_1_OUT".impter_3 AS DOUBLE PRECISION) - CAST(0.456064424233759 AS DOUBLE PRECISION)) / CAST(0.28787217307127 AS DOUBLE PRECISION) AS scaler_3, (CAST("ADS_imp_1_OUT".impter_4 AS DOUBLE PRECISION) - CAST(0.471138174814748 AS DOUBLE PRECISION)) / CAST(0.310921679155305 AS DOUBLE PRECISION) AS scaler_4, (CAST("ADS_imp_1_OUT".impter_5 AS DOUBLE PRECISION) - CAST(0.533968020094518 AS DOUBLE PRECISION)) / CAST(0.282619986740028 AS DOUBLE PRECISION) AS scaler_5, (CAST("ADS_imp_1_OUT".impter_6 AS DOUBLE PRECISION) - CAST(0.478093626237387 AS DOUBLE PRECISION)) / CAST(0.286140491317745 AS DOUBLE PRECISION) AS scaler_6, (CAST("ADS_imp_1_OUT".impter_7 AS DOUBLE PRECISION) - CAST(0.568284922417233 AS DOUBLE PRECISION)) / CAST(0.297674081064517 AS DOUBLE PRECISION) AS scaler_7, (CAST("ADS_imp_1_OUT".impter_8 AS DOUBLE PRECISION) - CAST(0.479143747142805 AS DOUBLE PRECISION)) / CAST(0.273531497143158 AS DOUBLE PRECISION) AS scaler_8, (CAST("ADS_imp_1_OUT".impter_9 AS DOUBLE PRECISION) - CAST(0.45941524772232 AS DOUBLE PRECISION)) / CAST(0.28721149346999 AS DOUBLE PRECISION) AS scaler_9, (CAST("ADS_imp_1_OUT".impter_10 AS DOUBLE PRECISION) - CAST(0.490110699680965 AS DOUBLE PRECISION)) / CAST(0.27904867173227 AS DOUBLE PRECISION) AS scaler_10, (CAST("ADS_imp_1_OUT".impter_11 AS DOUBLE PRECISION) - CAST(0.537880693370753 AS DOUBLE PRECISION)) / CAST(0.295819229654319 AS DOUBLE PRECISION) AS scaler_11 
FROM tmp_20180508184416_codegen_3pev5n_ads_imp_1_out AS "ADS_imp_1_OUT") AS "ADS_sca_2_OUT") AS "U"

-- Model deployment code

WITH "DT_node_lookup" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= CAST(-0.035752531141043 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= CAST(0.66316956281662 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= CAST(-0.267667949199676 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= CAST(-1.249745965003967 AS DOUBLE PRECISION)) THEN 4 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= CAST(-1.262093782424927 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= CAST(-0.702657759189606 AS DOUBLE PRECISION)) THEN 7 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= CAST(-1.21896505355835 AS DOUBLE PRECISION)) THEN 9 ELSE 10 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= CAST(-1.555070161819458 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= CAST(0.201760336756706 AS DOUBLE PRECISION)) THEN 13 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= CAST(-0.637540698051453 AS DOUBLE PRECISION)) THEN 15 ELSE 16 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= CAST(0.165196850895882 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= CAST(-0.570904433727264 AS DOUBLE PRECISION)) THEN 19 ELSE 20 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= CAST(0.215473026037216 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= CAST(-0.310638189315796 AS DOUBLE PRECISION)) THEN 23 ELSE 24 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= CAST(0.077007621526718 AS DOUBLE PRECISION)) THEN 26 ELSE 27 END END END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= CAST(-0.728427231311798 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= CAST(1.190066576004028 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= CAST(1.188630819320679 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= CAST(-1.221706867218018 AS DOUBLE PRECISION)) THEN 32 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= CAST(0.527959108352661 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= CAST(0.841981530189514 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= CAST(-1.084155559539795 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= CAST(0.921615183353424 AS DOUBLE PRECISION)) THEN 37 ELSE 38 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= CAST(0.635647177696228 AS DOUBLE PRECISION)) THEN 40 ELSE 41 END END ELSE 42 END ELSE 43 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= CAST(0.159695088863373 AS DOUBLE PRECISION)) THEN 45 ELSE 46 END END ELSE 47 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= CAST(-0.083834163844585 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= CAST(-0.526038646697998 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= CAST(0.197390496730804 AS DOUBLE PRECISION)) THEN 51 ELSE 52 END ELSE 53 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= CAST(-0.050650060176849 AS DOUBLE PRECISION)) THEN 55 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= CAST(-0.80397367477417 AS DOUBLE PRECISION)) THEN 57 ELSE 58 END END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= CAST(0.452785223722458 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= CAST(-0.59369683265686 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= CAST(-0.759791314601898 AS DOUBLE PRECISION)) THEN 62 ELSE 63 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= CAST(0.991204500198364 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= CAST(0.643132567405701 AS DOUBLE PRECISION)) THEN 66 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= CAST(0.787505149841309 AS DOUBLE PRECISION)) THEN 68 ELSE 69 END END ELSE 70 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= CAST(0.967495441436768 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= CAST(-0.471731543540955 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= CAST(-0.0022830106318 AS DOUBLE PRECISION)) THEN 74 ELSE 75 END ELSE 76 END ELSE 77 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= CAST(-0.905976951122284 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= CAST(-0.74356335401535 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= CAST(-0.818817257881164 AS DOUBLE PRECISION)) THEN 81 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= CAST(-1.02496325969696 AS DOUBLE PRECISION)) THEN 83 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= CAST(0.041322708129883 AS DOUBLE PRECISION)) THEN 85 ELSE 86 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= CAST(0.964491009712219 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= CAST(-0.296890079975128 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= CAST(-0.222058653831482 AS DOUBLE PRECISION)) THEN 90 ELSE 91 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= CAST(0.250474810600281 AS DOUBLE PRECISION)) THEN 93 ELSE 94 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= CAST(-0.444114685058594 AS DOUBLE PRECISION)) THEN 96 ELSE 97 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= CAST(-1.25759768486023 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= CAST(1.326542496681214 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= CAST(-0.402624428272247 AS DOUBLE PRECISION)) THEN 101 ELSE 102 END ELSE 103 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= CAST(0.737485229969025 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= CAST(1.181752800941467 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= CAST(-0.041691791266203 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= CAST(0.644769191741943 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= CAST(0.073246449232101 AS DOUBLE PRECISION)) THEN 109 ELSE 110 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= CAST(0.127542525529861 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= CAST(-0.601246237754822 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= CAST(1.10725462436676 AS DOUBLE PRECISION)) THEN 114 ELSE 115 END ELSE 116 END ELSE 117 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= CAST(-1.101690888404846 AS DOUBLE PRECISION)) THEN 119 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= CAST(0.633166313171387 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= CAST(-0.399767637252808 AS DOUBLE PRECISION)) THEN 122 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= CAST(0.116858839988708 AS DOUBLE PRECISION)) THEN 124 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= CAST(0.302760511636734 AS DOUBLE PRECISION)) THEN 126 ELSE 127 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= CAST(0.551626682281494 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= CAST(-0.58583390712738 AS DOUBLE PRECISION)) THEN 130 ELSE 131 END ELSE 132 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= CAST(-0.360275477170944 AS DOUBLE PRECISION)) THEN 134 ELSE 135 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= CAST(0.951024413108826 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= CAST(1.245641231536865 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= CAST(-1.1751229763031 AS DOUBLE PRECISION)) THEN 139 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= CAST(0.261717706918716 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= CAST(1.14284610748291 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= CAST(-0.017116621136665 AS DOUBLE PRECISION)) THEN 143 ELSE 144 END ELSE 145 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= CAST(-0.568639039993286 AS DOUBLE PRECISION)) THEN 147 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= CAST(0.170072585344315 AS DOUBLE PRECISION)) THEN 149 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= CAST(1.341002464294434 AS DOUBLE PRECISION)) THEN 151 ELSE 152 END END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= CAST(0.734262645244598 AS DOUBLE PRECISION)) THEN 154 ELSE 155 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= CAST(-0.684579372406006 AS DOUBLE PRECISION)) THEN 157 ELSE 158 END END END END END END AS node_id_2 
FROM tmp_20180508184416_codegen_y825zp_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS DOUBLE PRECISION) AS "E" 
FROM (SELECT 4 AS nid, CAST(12.760129264370008 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 7 AS nid, CAST(12.071171804127433 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 9 AS nid, CAST(9.735041217996262 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 10 AS nid, CAST(10.045203605952587 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 13 AS nid, CAST(5.293284001301807 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 15 AS nid, CAST(5.794379036456321 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 16 AS nid, CAST(6.245710248632149 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 19 AS nid, CAST(6.980046241948142 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 20 AS nid, CAST(6.861453719338209 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 23 AS nid, CAST(8.240178848678195 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 24 AS nid, CAST(8.06285010237755 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 26 AS nid, CAST(7.732429808148176 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 27 AS nid, CAST(7.556998078346253 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 32 AS nid, CAST(10.483066772506376 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 37 AS nid, CAST(12.109886588685942 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 38 AS nid, CAST(12.123142001356333 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 40 AS nid, CAST(11.789821637076107 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 41 AS nid, CAST(11.77602304541345 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 42 AS nid, CAST(11.313518144724842 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 43 AS nid, CAST(12.830344628983799 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 45 AS nid, CAST(10.20209310032856 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 46 AS nid, CAST(10.596890487725023 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 47 AS nid, CAST(8.897074147742197 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 51 AS nid, CAST(14.772563754565986 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 52 AS nid, CAST(14.051184902745373 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 53 AS nid, CAST(13.174202057525061 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 55 AS nid, CAST(15.922558108080853 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 57 AS nid, CAST(17.31914707358036 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 58 AS nid, CAST(18.282515066510527 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 62 AS nid, CAST(11.380993151416082 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 63 AS nid, CAST(13.119756721377405 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 66 AS nid, CAST(16.08254261562184 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 68 AS nid, CAST(16.324769596540094 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 69 AS nid, CAST(16.302556715766507 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 70 AS nid, CAST(14.4669963696142 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 74 AS nid, CAST(18.332058017434036 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 75 AS nid, CAST(18.493721395486528 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 76 AS nid, CAST(18.0076175728853 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 77 AS nid, CAST(23.693970395239383 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 81 AS nid, CAST(15.541797868565151 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 83 AS nid, CAST(7.219443350314415 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 85 AS nid, CAST(10.181631174833692 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 86 AS nid, CAST(10.131789617052233 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 90 AS nid, CAST(16.009611596379663 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 91 AS nid, CAST(16.301279206146624 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 93 AS nid, CAST(15.706521981990113 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 94 AS nid, CAST(15.701003452436051 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 96 AS nid, CAST(18.2506955183825 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 97 AS nid, CAST(17.89244707919063 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 101 AS nid, CAST(15.308483991007723 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 102 AS nid, CAST(14.536245187358322 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 103 AS nid, CAST(12.423411759463056 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 109 AS nid, CAST(18.2376138217882 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 110 AS nid, CAST(18.10948375079814 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 114 AS nid, CAST(20.069702085916557 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 115 AS nid, CAST(19.95894272650593 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 116 AS nid, CAST(20.199033606227683 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 117 AS nid, CAST(19.36426348416223 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 119 AS nid, CAST(19.592153425922714 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 122 AS nid, CAST(16.914408313385564 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 124 AS nid, CAST(17.36059041334922 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 126 AS nid, CAST(17.51855412510629 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 127 AS nid, CAST(17.451457795201584 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 130 AS nid, CAST(17.80609748957471 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 131 AS nid, CAST(17.954676995000113 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 132 AS nid, CAST(18.250248044100616 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 134 AS nid, CAST(23.18131440832091 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 135 AS nid, CAST(20.629855906779248 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 139 AS nid, CAST(19.303788312018888 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 143 AS nid, CAST(21.340993370178953 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 144 AS nid, CAST(21.774000353025308 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 145 AS nid, CAST(20.70189537226964 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 147 AS nid, CAST(23.760920160321174 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 149 AS nid, CAST(22.309754489339827 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 151 AS nid, CAST(22.76939496981568 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 152 AS nid, CAST(23.0302793724361 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 154 AS nid, CAST(25.24805848092261 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 155 AS nid, CAST(24.713338273149652 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 157 AS nid, CAST(18.900387696177468 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 158 AS nid, CAST(17.41761147731962 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte) AS "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".nid AS nid, "DT_node_data"."E" AS "E" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".nid)
 SELECT "DT_Output"."KEY" AS "KEY", "DT_Output"."E" AS "Estimator" 
FROM "DT_Output"