-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2018

-- Model : GradientBoostingRegressor_Pipeline
-- Dataset : diabetes
-- Database : teradata


-- This SQL code can contain one or more statements, to be executed in the order they appear in this file.



-- Code For temporary table tmp_20180508183358_codegen_kzwumg_ads_imp_1_out part 1. Create 


CREATE GLOBAL TEMPORARY TABLE tmp_20180508183358_codegen_kzwumg_ads_imp_1_out  (
	"KEY" BIGINT, 
	impter_2 DOUBLE PRECISION, 
	impter_3 DOUBLE PRECISION, 
	impter_4 DOUBLE PRECISION, 
	impter_5 DOUBLE PRECISION, 
	impter_6 DOUBLE PRECISION, 
	impter_7 DOUBLE PRECISION, 
	impter_8 DOUBLE PRECISION, 
	impter_9 DOUBLE PRECISION, 
	impter_10 DOUBLE PRECISION, 
	impter_11 DOUBLE PRECISION
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table tmp_20180508183358_codegen_kzwumg_ads_imp_1_out part 2. Populate

INSERT INTO tmp_20180508183358_codegen_kzwumg_ads_imp_1_out ("KEY", impter_2, impter_3, impter_4, impter_5, impter_6, impter_7, impter_8, impter_9, impter_10, impter_11) SELECT "U"."KEY", "U".impter_2, "U".impter_3, "U".impter_4, "U".impter_5, "U".impter_6, "U".impter_7, "U".impter_8, "U".impter_9, "U".impter_10, "U".impter_11 
FROM (SELECT "ADS_imp_1_OUT"."KEY", "ADS_imp_1_OUT".impter_2, "ADS_imp_1_OUT".impter_3, "ADS_imp_1_OUT".impter_4, "ADS_imp_1_OUT".impter_5, "ADS_imp_1_OUT".impter_6, "ADS_imp_1_OUT".impter_7, "ADS_imp_1_OUT".impter_8, "ADS_imp_1_OUT".impter_9, "ADS_imp_1_OUT".impter_10, "ADS_imp_1_OUT".impter_11 
FROM (SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" IS NULL) THEN 0.0002686932066652995 ELSE "ADS"."Feature_0" END AS impter_2, CASE WHEN ("ADS"."Feature_1" IS NULL) THEN 0.0007239580580639441 ELSE "ADS"."Feature_1" END AS impter_3, CASE WHEN ("ADS"."Feature_2" IS NULL) THEN 0.0007280719825586765 ELSE "ADS"."Feature_2" END AS impter_4, CASE WHEN ("ADS"."Feature_3" IS NULL) THEN 0.001013565221084393 ELSE "ADS"."Feature_3" END AS impter_5, CASE WHEN ("ADS"."Feature_4" IS NULL) THEN 0.0009763580732882109 ELSE "ADS"."Feature_4" END AS impter_6, CASE WHEN ("ADS"."Feature_5" IS NULL) THEN 0.0017643808242337245 ELSE "ADS"."Feature_5" END AS impter_7, CASE WHEN ("ADS"."Feature_6" IS NULL) THEN -0.0016512815450565026 ELSE "ADS"."Feature_6" END AS impter_8, CASE WHEN ("ADS"."Feature_7" IS NULL) THEN 0.0013905501983388136 ELSE "ADS"."Feature_7" END AS impter_9, CASE WHEN ("ADS"."Feature_8" IS NULL) THEN 0.0012726482548090939 ELSE "ADS"."Feature_8" END AS impter_10, CASE WHEN ("ADS"."Feature_9" IS NULL) THEN 0.001034425005681627 ELSE "ADS"."Feature_9" END AS impter_11 
FROM diabetes AS "ADS") AS "ADS_imp_1_OUT") AS "U"

-- Code For temporary table tmp_20180508183358_codegen_x6yq3k_ads_sca_2_out part 1. Create 


CREATE GLOBAL TEMPORARY TABLE tmp_20180508183358_codegen_x6yq3k_ads_sca_2_out  (
	"KEY" BIGINT, 
	scaler_2 DOUBLE PRECISION, 
	scaler_3 DOUBLE PRECISION, 
	scaler_4 DOUBLE PRECISION, 
	scaler_5 DOUBLE PRECISION, 
	scaler_6 DOUBLE PRECISION, 
	scaler_7 DOUBLE PRECISION, 
	scaler_8 DOUBLE PRECISION, 
	scaler_9 DOUBLE PRECISION, 
	scaler_10 DOUBLE PRECISION, 
	scaler_11 DOUBLE PRECISION
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table tmp_20180508183358_codegen_x6yq3k_ads_sca_2_out part 2. Populate

INSERT INTO tmp_20180508183358_codegen_x6yq3k_ads_sca_2_out ("KEY", scaler_2, scaler_3, scaler_4, scaler_5, scaler_6, scaler_7, scaler_8, scaler_9, scaler_10, scaler_11) SELECT "U"."KEY", "U".scaler_2, "U".scaler_3, "U".scaler_4, "U".scaler_5, "U".scaler_6, "U".scaler_7, "U".scaler_8, "U".scaler_9, "U".scaler_10, "U".scaler_11 
FROM (SELECT "ADS_sca_2_OUT"."KEY", "ADS_sca_2_OUT".scaler_2, "ADS_sca_2_OUT".scaler_3, "ADS_sca_2_OUT".scaler_4, "ADS_sca_2_OUT".scaler_5, "ADS_sca_2_OUT".scaler_6, "ADS_sca_2_OUT".scaler_7, "ADS_sca_2_OUT".scaler_8, "ADS_sca_2_OUT".scaler_9, "ADS_sca_2_OUT".scaler_10, "ADS_sca_2_OUT".scaler_11 
FROM (SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", (CAST("ADS_imp_1_OUT".impter_2 AS DOUBLE PRECISION) - CAST(0.000268693206665 AS DOUBLE PRECISION)) / CAST(0.047242095836538 AS DOUBLE PRECISION) AS scaler_2, (CAST("ADS_imp_1_OUT".impter_3 AS DOUBLE PRECISION) - CAST(0.000723958058064 AS DOUBLE PRECISION)) / CAST(0.047605576685039 AS DOUBLE PRECISION) AS scaler_3, (CAST("ADS_imp_1_OUT".impter_4 AS DOUBLE PRECISION) - CAST(0.000728071982559 AS DOUBLE PRECISION)) / CAST(0.046935911439369 AS DOUBLE PRECISION) AS scaler_4, (CAST("ADS_imp_1_OUT".impter_5 AS DOUBLE PRECISION) - CAST(0.001013565221084 AS DOUBLE PRECISION)) / CAST(0.048335271948972 AS DOUBLE PRECISION) AS scaler_5, (CAST("ADS_imp_1_OUT".impter_6 AS DOUBLE PRECISION) - CAST(0.000976358073288 AS DOUBLE PRECISION)) / CAST(0.048050762009702 AS DOUBLE PRECISION) AS scaler_6, (CAST("ADS_imp_1_OUT".impter_7 AS DOUBLE PRECISION) - CAST(0.001764380824234 AS DOUBLE PRECISION)) / CAST(0.048060808731544 AS DOUBLE PRECISION) AS scaler_7, (CAST("ADS_imp_1_OUT".impter_8 AS DOUBLE PRECISION) - CAST(-0.001651281545057 AS DOUBLE PRECISION)) / CAST(0.04620240378043 AS DOUBLE PRECISION) AS scaler_8, (CAST("ADS_imp_1_OUT".impter_9 AS DOUBLE PRECISION) - CAST(0.001390550198339 AS DOUBLE PRECISION)) / CAST(0.047363093040532 AS DOUBLE PRECISION) AS scaler_9, (CAST("ADS_imp_1_OUT".impter_10 AS DOUBLE PRECISION) - CAST(0.001272648254809 AS DOUBLE PRECISION)) / CAST(0.045892861313648 AS DOUBLE PRECISION) AS scaler_10, (CAST("ADS_imp_1_OUT".impter_11 AS DOUBLE PRECISION) - CAST(0.001034425005682 AS DOUBLE PRECISION)) / CAST(0.047761585195706 AS DOUBLE PRECISION) AS scaler_11 
FROM tmp_20180508183358_codegen_kzwumg_ads_imp_1_out AS "ADS_imp_1_OUT") AS "ADS_sca_2_OUT") AS "U"

-- Code For temporary table tmp_20180508183358_codegen_vleow9_gb_b0 part 1. Create 


CREATE GLOBAL TEMPORARY TABLE tmp_20180508183358_codegen_vleow9_gb_b0  (
	"KEY" BIGINT, 
	"Estimator" DOUBLE PRECISION
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table tmp_20180508183358_codegen_vleow9_gb_b0 part 2. Populate

INSERT INTO tmp_20180508183358_codegen_vleow9_gb_b0 ("KEY", "Estimator") SELECT "U"."KEY", "U"."Estimator" 
FROM (WITH "DT_node_lookup" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= CAST(-0.012311428785324 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= CAST(0.116346150636673 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= CAST(2.307655334472656 AS DOUBLE PRECISION)) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= CAST(-1.77559494972229 AS DOUBLE PRECISION)) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= CAST(1.172666430473328 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= CAST(0.752074122428894 AS DOUBLE PRECISION)) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= CAST(0.431141823530197 AS DOUBLE PRECISION)) THEN 13 ELSE 14 END END END AS node_id_2 
FROM tmp_20180508183358_codegen_x6yq3k_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS DOUBLE PRECISION) AS "E" 
FROM (SELECT 3 AS nid, CAST(-56.26206018803645 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 4 AS nid, CAST(98.92634560906515 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 6 AS nid, CAST(147.92634560906515 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 7 AS nid, CAST(4.5749942577138 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 10 AS nid, CAST(10.468012275731821 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 11 AS nid, CAST(58.92634560906521 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 13 AS nid, CAST(122.05134560906522 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 14 AS nid, CAST(66.05134560906515 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte) AS "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".nid AS nid, "DT_node_data"."E" AS "E" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".nid), 
"GB_Model_0_0" AS 
(SELECT "DT_Output"."KEY" AS "KEY", "DT_Output"."E" AS "Estimator" 
FROM "DT_Output"), 
"DT_node_lookup_1" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= CAST(-0.031410820782185 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= CAST(0.116346150636673 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= CAST(0.490864038467407 AS DOUBLE PRECISION)) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= CAST(-1.77559494972229 AS DOUBLE PRECISION)) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= CAST(0.988958597183228 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= CAST(-0.480704426765442 AS DOUBLE PRECISION)) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= CAST(0.431141823530197 AS DOUBLE PRECISION)) THEN 13 ELSE 14 END END END AS node_id_2 
FROM tmp_20180508183358_codegen_x6yq3k_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte_1 AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data_1" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS DOUBLE PRECISION) AS "E" 
FROM (SELECT 3 AS nid, CAST(-37.89909893573828 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_1 UNION ALL SELECT 4 AS nid, CAST(-63.205024129706885 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_1 UNION ALL SELECT 6 AS nid, CAST(133.13371104815863 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_1 UNION ALL SELECT 7 AS nid, CAST(4.117494831942426 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_1 UNION ALL SELECT 10 AS nid, CAST(-14.908867076841354 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_1 UNION ALL SELECT 11 AS nid, CAST(31.375443762530647 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_1 UNION ALL SELECT 13 AS nid, CAST(108.54701233020995 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_1 UNION ALL SELECT 14 AS nid, CAST(54.678457424970226 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_1) AS "Values"), 
"DT_Output_1" AS 
(SELECT "DT_node_lookup_1"."KEY" AS "KEY", "DT_node_lookup_1".node_id_2 AS node_id_2, "DT_node_data_1".nid AS nid, "DT_node_data_1"."E" AS "E" 
FROM "DT_node_lookup_1" LEFT OUTER JOIN "DT_node_data_1" ON "DT_node_lookup_1".node_id_2 = "DT_node_data_1".nid), 
"GB_Model_1_0" AS 
(SELECT "DT_Output_1"."KEY" AS "KEY", "DT_Output_1"."E" AS "Estimator" 
FROM "DT_Output_1"), 
"DT_node_lookup_2" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= CAST(-0.233241856098175 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= CAST(0.116346150636673 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= CAST(2.307655334472656 AS DOUBLE PRECISION)) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= CAST(0.761840581893921 AS DOUBLE PRECISION)) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= CAST(1.448228240013122 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= CAST(0.752074122428894 AS DOUBLE PRECISION)) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= CAST(0.431141823530197 AS DOUBLE PRECISION)) THEN 13 ELSE 14 END END END AS node_id_2 
FROM tmp_20180508183358_codegen_x6yq3k_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte_2 AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data_2" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS DOUBLE PRECISION) AS "E" 
FROM (SELECT 3 AS nid, CAST(-49.766609329091665 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_2 UNION ALL SELECT 4 AS nid, CAST(92.82362094173246 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_2 UNION ALL SELECT 6 AS nid, CAST(17.59555823856106 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_2 UNION ALL SELECT 7 AS nid, CAST(-45.60956996656714 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_2 UNION ALL SELECT 10 AS nid, CAST(7.324309607101877 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_2 UNION ALL SELECT 11 AS nid, CAST(50.25051607768055 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_2 UNION ALL SELECT 13 AS nid, CAST(110.42900981513769 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_2 UNION ALL SELECT 14 AS nid, CAST(68.87188634151958 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_2) AS "Values"), 
"DT_Output_2" AS 
(SELECT "DT_node_lookup_2"."KEY" AS "KEY", "DT_node_lookup_2".node_id_2 AS node_id_2, "DT_node_data_2".nid AS nid, "DT_node_data_2"."E" AS "E" 
FROM "DT_node_lookup_2" LEFT OUTER JOIN "DT_node_data_2" ON "DT_node_lookup_2".node_id_2 = "DT_node_data_2".nid), 
"GB_Model_2_0" AS 
(SELECT "DT_Output_2"."KEY" AS "KEY", "DT_Output_2"."E" AS "Estimator" 
FROM "DT_Output_2"), 
"DT_node_lookup_3" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= CAST(-0.012311428785324 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= CAST(0.116346150636673 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= CAST(0.490864038467407 AS DOUBLE PRECISION)) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= CAST(-0.434483140707016 AS DOUBLE PRECISION)) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= CAST(0.988958597183228 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= CAST(-0.480704426765442 AS DOUBLE PRECISION)) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= CAST(0.77745521068573 AS DOUBLE PRECISION)) THEN 13 ELSE 14 END END END AS node_id_2 
FROM tmp_20180508183358_codegen_x6yq3k_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte_3 AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data_3" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS DOUBLE PRECISION) AS "E" 
FROM (SELECT 3 AS nid, CAST(-29.566777184999317 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_3 UNION ALL SELECT 4 AS nid, CAST(-52.40540745223855 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_3 UNION ALL SELECT 6 AS nid, CAST(-19.417554600564845 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_3 UNION ALL SELECT 7 AS nid, CAST(20.648083697077222 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_3 UNION ALL SELECT 10 AS nid, CAST(-14.821133305970204 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_3 UNION ALL SELECT 11 AS nid, CAST(26.37345823008113 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_3 UNION ALL SELECT 13 AS nid, CAST(84.93432962632869 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_3 UNION ALL SELECT 14 AS nid, CAST(37.90132752479809 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_3) AS "Values"), 
"DT_Output_3" AS 
(SELECT "DT_node_lookup_3"."KEY" AS "KEY", "DT_node_lookup_3".node_id_2 AS node_id_2, "DT_node_data_3".nid AS nid, "DT_node_data_3"."E" AS "E" 
FROM "DT_node_lookup_3" LEFT OUTER JOIN "DT_node_data_3" ON "DT_node_lookup_3".node_id_2 = "DT_node_data_3".nid), 
"GB_Model_3_0" AS 
(SELECT "DT_Output_3"."KEY" AS "KEY", "DT_Output_3"."E" AS "Estimator" 
FROM "DT_Output_3"), 
"DT_node_lookup_4" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= CAST(-0.233241856098175 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= CAST(0.116346150636673 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= CAST(2.307655334472656 AS DOUBLE PRECISION)) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= CAST(0.761840581893921 AS DOUBLE PRECISION)) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= CAST(1.448228240013122 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= CAST(0.936573147773743 AS DOUBLE PRECISION)) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= CAST(-0.439549386501312 AS DOUBLE PRECISION)) THEN 13 ELSE 14 END END END AS node_id_2 
FROM tmp_20180508183358_codegen_x6yq3k_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte_4 AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data_4" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS DOUBLE PRECISION) AS "E" 
FROM (SELECT 3 AS nid, CAST(-40.71874552064134 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_4 UNION ALL SELECT 4 AS nid, CAST(86.49793656605914 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_4 UNION ALL SELECT 6 AS nid, CAST(15.312180133368075 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_4 UNION ALL SELECT 7 AS nid, CAST(-41.110139424736026 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_4 UNION ALL SELECT 10 AS nid, CAST(4.746341702913099 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_4 UNION ALL SELECT 11 AS nid, CAST(42.05141431656916 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_4 UNION ALL SELECT 13 AS nid, CAST(119.830175870991 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_4 UNION ALL SELECT 14 AS nid, CAST(69.47888906512253 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_4) AS "Values"), 
"DT_Output_4" AS 
(SELECT "DT_node_lookup_4"."KEY" AS "KEY", "DT_node_lookup_4".node_id_2 AS node_id_2, "DT_node_data_4".nid AS nid, "DT_node_data_4"."E" AS "E" 
FROM "DT_node_lookup_4" LEFT OUTER JOIN "DT_node_data_4" ON "DT_node_lookup_4".node_id_2 = "DT_node_data_4".nid), 
"GB_Model_4_0" AS 
(SELECT "DT_Output_4"."KEY" AS "KEY", "DT_Output_4"."E" AS "Estimator" 
FROM "DT_Output_4"), 
"DT_node_lookup_5" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= CAST(-0.233241856098175 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= CAST(0.116346150636673 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= CAST(2.425954341888428 AS DOUBLE PRECISION)) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= CAST(0.684948563575745 AS DOUBLE PRECISION)) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= CAST(1.448228240013122 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= CAST(0.752074122428894 AS DOUBLE PRECISION)) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= CAST(-1.122013092041016 AS DOUBLE PRECISION)) THEN 13 ELSE 14 END END END AS node_id_2 
FROM tmp_20180508183358_codegen_x6yq3k_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte_5 AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data_5" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS DOUBLE PRECISION) AS "E" 
FROM (SELECT 3 AS nid, CAST(-36.69086722310086 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_5 UNION ALL SELECT 4 AS nid, CAST(83.34767472491586 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_5 UNION ALL SELECT 6 AS nid, CAST(14.783877471914003 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_5 UNION ALL SELECT 7 AS nid, CAST(-33.32666779580165 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_5 UNION ALL SELECT 10 AS nid, CAST(3.804290677533366 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_5 UNION ALL SELECT 11 AS nid, CAST(40.23523176236177 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_5 UNION ALL SELECT 13 AS nid, CAST(19.711765593120287 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_5 UNION ALL SELECT 14 AS nid, CAST(75.43609750017679 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_5) AS "Values"), 
"DT_Output_5" AS 
(SELECT "DT_node_lookup_5"."KEY" AS "KEY", "DT_node_lookup_5".node_id_2 AS node_id_2, "DT_node_data_5".nid AS nid, "DT_node_data_5"."E" AS "E" 
FROM "DT_node_lookup_5" LEFT OUTER JOIN "DT_node_data_5" ON "DT_node_lookup_5".node_id_2 = "DT_node_data_5".nid), 
"GB_Model_5_0" AS 
(SELECT "DT_Output_5"."KEY" AS "KEY", "DT_Output_5"."E" AS "Estimator" 
FROM "DT_Output_5"), 
"DT_node_lookup_6" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= CAST(0.444182366132736 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= CAST(0.09338267147541 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= CAST(0.632691383361816 AS DOUBLE PRECISION)) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= CAST(0.32470041513443 AS DOUBLE PRECISION)) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= CAST(1.274419784545898 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= CAST(-0.943465709686279 AS DOUBLE PRECISION)) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= CAST(1.86368715763092 AS DOUBLE PRECISION)) THEN 13 ELSE 14 END END END AS node_id_2 
FROM tmp_20180508183358_codegen_x6yq3k_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte_6 AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data_6" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS DOUBLE PRECISION) AS "E" 
FROM (SELECT 3 AS nid, CAST(-31.279874986673047 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_6 UNION ALL SELECT 4 AS nid, CAST(2.452730103601736 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_6 UNION ALL SELECT 6 AS nid, CAST(-8.30307922706563 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_6 UNION ALL SELECT 7 AS nid, CAST(39.13706168830357 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_6 UNION ALL SELECT 10 AS nid, CAST(52.50060169065488 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_6 UNION ALL SELECT 11 AS nid, CAST(8.413298807774964 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_6 UNION ALL SELECT 13 AS nid, CAST(75.78197438705396 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_6 UNION ALL SELECT 14 AS nid, CAST(25.68904818988106 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_6) AS "Values"), 
"DT_Output_6" AS 
(SELECT "DT_node_lookup_6"."KEY" AS "KEY", "DT_node_lookup_6".node_id_2 AS node_id_2, "DT_node_data_6".nid AS nid, "DT_node_data_6"."E" AS "E" 
FROM "DT_node_lookup_6" LEFT OUTER JOIN "DT_node_data_6" ON "DT_node_lookup_6".node_id_2 = "DT_node_data_6".nid), 
"GB_Model_6_0" AS 
(SELECT "DT_Output_6"."KEY" AS "KEY", "DT_Output_6"."E" AS "Estimator" 
FROM "DT_Output_6"), 
"DT_node_lookup_7" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= CAST(-0.233241856098175 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= CAST(1.092294216156006 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= CAST(0.490864038467407 AS DOUBLE PRECISION)) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= CAST(0.253471493721008 AS DOUBLE PRECISION)) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= CAST(1.482673406600952 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= CAST(0.775817155838013 AS DOUBLE PRECISION)) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= CAST(0.431141823530197 AS DOUBLE PRECISION)) THEN 13 ELSE 14 END END END AS node_id_2 
FROM tmp_20180508183358_codegen_x6yq3k_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte_7 AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data_7" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS DOUBLE PRECISION) AS "E" 
FROM (SELECT 3 AS nid, CAST(-17.42636935752086 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_7 UNION ALL SELECT 4 AS nid, CAST(-36.986863239305734 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_7 UNION ALL SELECT 6 AS nid, CAST(-18.034420078142336 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_7 UNION ALL SELECT 7 AS nid, CAST(80.70942057717716 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_7 UNION ALL SELECT 10 AS nid, CAST(2.9134087249073 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_7 UNION ALL SELECT 11 AS nid, CAST(33.8014852495471 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_7 UNION ALL SELECT 13 AS nid, CAST(75.18125910884453 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_7 UNION ALL SELECT 14 AS nid, CAST(40.16765057635955 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_7) AS "Values"), 
"DT_Output_7" AS 
(SELECT "DT_node_lookup_7"."KEY" AS "KEY", "DT_node_lookup_7".node_id_2 AS node_id_2, "DT_node_data_7".nid AS nid, "DT_node_data_7"."E" AS "E" 
FROM "DT_node_lookup_7" LEFT OUTER JOIN "DT_node_data_7" ON "DT_node_lookup_7".node_id_2 = "DT_node_data_7".nid), 
"GB_Model_7_0" AS 
(SELECT "DT_Output_7"."KEY" AS "KEY", "DT_Output_7"."E" AS "Estimator" 
FROM "DT_Output_7"), 
"DT_node_lookup_8" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= CAST(0.444182366132736 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= CAST(0.09338267147541 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= CAST(0.632691383361816 AS DOUBLE PRECISION)) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= CAST(0.32470041513443 AS DOUBLE PRECISION)) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= CAST(1.274419784545898 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= CAST(-0.943465709686279 AS DOUBLE PRECISION)) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= CAST(2.037255048751831 AS DOUBLE PRECISION)) THEN 13 ELSE 14 END END END AS node_id_2 
FROM tmp_20180508183358_codegen_x6yq3k_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte_8 AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data_8" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS DOUBLE PRECISION) AS "E" 
FROM (SELECT 3 AS nid, CAST(-26.117185459809097 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_8 UNION ALL SELECT 4 AS nid, CAST(2.190036745502154 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_8 UNION ALL SELECT 6 AS nid, CAST(-6.346655746923815 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_8 UNION ALL SELECT 7 AS nid, CAST(32.9936028985348 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_8 UNION ALL SELECT 10 AS nid, CAST(45.40469807715848 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_8 UNION ALL SELECT 11 AS nid, CAST(5.976521749405776 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_8 UNION ALL SELECT 13 AS nid, CAST(62.31807548501923 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_8 UNION ALL SELECT 14 AS nid, CAST(8.823510772118468 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_8) AS "Values"), 
"DT_Output_8" AS 
(SELECT "DT_node_lookup_8"."KEY" AS "KEY", "DT_node_lookup_8".node_id_2 AS node_id_2, "DT_node_data_8".nid AS nid, "DT_node_data_8"."E" AS "E" 
FROM "DT_node_lookup_8" LEFT OUTER JOIN "DT_node_data_8" ON "DT_node_lookup_8".node_id_2 = "DT_node_data_8".nid), 
"GB_Model_8_0" AS 
(SELECT "DT_Output_8"."KEY" AS "KEY", "DT_Output_8"."E" AS "Estimator" 
FROM "DT_Output_8"), 
"DT_node_lookup_9" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= CAST(-0.233241856098175 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= CAST(1.092294216156006 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= CAST(1.279353737831116 AS DOUBLE PRECISION)) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= CAST(0.253471493721008 AS DOUBLE PRECISION)) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= CAST(0.69293737411499 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= CAST(-1.016778111457825 AS DOUBLE PRECISION)) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= CAST(0.09338267147541 AS DOUBLE PRECISION)) THEN 13 ELSE 14 END END END AS node_id_2 
FROM tmp_20180508183358_codegen_x6yq3k_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte_9 AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data_9" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS DOUBLE PRECISION) AS "E" 
FROM (SELECT 3 AS nid, CAST(-23.0931689623177 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_9 UNION ALL SELECT 4 AS nid, CAST(40.281136267916146 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_9 UNION ALL SELECT 6 AS nid, CAST(-15.596312495635733 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_9 UNION ALL SELECT 7 AS nid, CAST(69.33911822960594 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_9 UNION ALL SELECT 10 AS nid, CAST(-30.77310860197734 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_9 UNION ALL SELECT 11 AS nid, CAST(10.467580885327717 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_9 UNION ALL SELECT 13 AS nid, CAST(6.807544145521914 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_9 UNION ALL SELECT 14 AS nid, CAST(48.92363191950647 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_9) AS "Values"), 
"DT_Output_9" AS 
(SELECT "DT_node_lookup_9"."KEY" AS "KEY", "DT_node_lookup_9".node_id_2 AS node_id_2, "DT_node_data_9".nid AS nid, "DT_node_data_9"."E" AS "E" 
FROM "DT_node_lookup_9" LEFT OUTER JOIN "DT_node_data_9" ON "DT_node_lookup_9".node_id_2 = "DT_node_data_9".nid), 
"GB_Model_9_0" AS 
(SELECT "DT_Output_9"."KEY" AS "KEY", "DT_Output_9"."E" AS "Estimator" 
FROM "DT_Output_9")
 SELECT "GB_B0"."KEY", "GB_B0"."Estimator" 
FROM (SELECT "GB_esu_0"."KEY" AS "KEY", "GB_esu_0"."Estimator" AS "Estimator" 
FROM (SELECT "GB_Model_0_0"."KEY" AS "KEY", "GB_Model_0_0"."Estimator" AS "Estimator" 
FROM "GB_Model_0_0" UNION ALL SELECT "GB_Model_1_0"."KEY" AS "KEY", "GB_Model_1_0"."Estimator" AS "Estimator" 
FROM "GB_Model_1_0" UNION ALL SELECT "GB_Model_2_0"."KEY" AS "KEY", "GB_Model_2_0"."Estimator" AS "Estimator" 
FROM "GB_Model_2_0" UNION ALL SELECT "GB_Model_3_0"."KEY" AS "KEY", "GB_Model_3_0"."Estimator" AS "Estimator" 
FROM "GB_Model_3_0" UNION ALL SELECT "GB_Model_4_0"."KEY" AS "KEY", "GB_Model_4_0"."Estimator" AS "Estimator" 
FROM "GB_Model_4_0" UNION ALL SELECT "GB_Model_5_0"."KEY" AS "KEY", "GB_Model_5_0"."Estimator" AS "Estimator" 
FROM "GB_Model_5_0" UNION ALL SELECT "GB_Model_6_0"."KEY" AS "KEY", "GB_Model_6_0"."Estimator" AS "Estimator" 
FROM "GB_Model_6_0" UNION ALL SELECT "GB_Model_7_0"."KEY" AS "KEY", "GB_Model_7_0"."Estimator" AS "Estimator" 
FROM "GB_Model_7_0" UNION ALL SELECT "GB_Model_8_0"."KEY" AS "KEY", "GB_Model_8_0"."Estimator" AS "Estimator" 
FROM "GB_Model_8_0" UNION ALL SELECT "GB_Model_9_0"."KEY" AS "KEY", "GB_Model_9_0"."Estimator" AS "Estimator" 
FROM "GB_Model_9_0") AS "GB_esu_0") AS "GB_B0") AS "U"

-- Code For temporary table tmp_20180508183358_codegen_shwy88_gb_b1 part 1. Create 


CREATE GLOBAL TEMPORARY TABLE tmp_20180508183358_codegen_shwy88_gb_b1  (
	"KEY" BIGINT, 
	"Estimator" DOUBLE PRECISION
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table tmp_20180508183358_codegen_shwy88_gb_b1 part 2. Populate

INSERT INTO tmp_20180508183358_codegen_shwy88_gb_b1 ("KEY", "Estimator") SELECT "U"."KEY", "U"."Estimator" 
FROM (WITH "DT_node_lookup_10" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= CAST(0.185236603021622 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= CAST(0.61710911989212 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= CAST(0.561488926410675 AS DOUBLE PRECISION)) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= CAST(-0.874320268630982 AS DOUBLE PRECISION)) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= CAST(0.467158317565918 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= CAST(0.606212675571442 AS DOUBLE PRECISION)) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= CAST(-0.725007057189941 AS DOUBLE PRECISION)) THEN 13 ELSE 14 END END END AS node_id_2 
FROM tmp_20180508183358_codegen_x6yq3k_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte_10 AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data_10" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS DOUBLE PRECISION) AS "E" 
FROM (SELECT 3 AS nid, CAST(-22.496425090209065 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_10 UNION ALL SELECT 4 AS nid, CAST(14.89484728109519 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_10 UNION ALL SELECT 6 AS nid, CAST(-39.12894278887687 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_10 UNION ALL SELECT 7 AS nid, CAST(18.976138100439226 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_10 UNION ALL SELECT 10 AS nid, CAST(-6.074903248575574 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_10 UNION ALL SELECT 11 AS nid, CAST(33.75354539493074 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_10 UNION ALL SELECT 13 AS nid, CAST(-44.26487040338847 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_10 UNION ALL SELECT 14 AS nid, CAST(41.60118015827299 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_10) AS "Values"), 
"DT_Output_10" AS 
(SELECT "DT_node_lookup_10"."KEY" AS "KEY", "DT_node_lookup_10".node_id_2 AS node_id_2, "DT_node_data_10".nid AS nid, "DT_node_data_10"."E" AS "E" 
FROM "DT_node_lookup_10" LEFT OUTER JOIN "DT_node_data_10" ON "DT_node_lookup_10".node_id_2 = "DT_node_data_10".nid), 
"GB_Model_10_0" AS 
(SELECT "DT_Output_10"."KEY" AS "KEY", "DT_Output_10"."E" AS "Estimator" 
FROM "DT_Output_10"), 
"DT_node_lookup_11" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= CAST(0.185236603021622 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= CAST(0.61710911989212 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= CAST(-1.021852970123291 AS DOUBLE PRECISION)) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= CAST(-0.220425367355347 AS DOUBLE PRECISION)) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= CAST(0.467158317565918 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= CAST(-1.50126051902771 AS DOUBLE PRECISION)) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= CAST(-0.963870465755463 AS DOUBLE PRECISION)) THEN 13 ELSE 14 END END END AS node_id_2 
FROM tmp_20180508183358_codegen_x6yq3k_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte_11 AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data_11" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS DOUBLE PRECISION) AS "E" 
FROM (SELECT 3 AS nid, CAST(1.726166201237744 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_11 UNION ALL SELECT 4 AS nid, CAST(-22.865887420805542 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_11 UNION ALL SELECT 6 AS nid, CAST(-38.32849375836015 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_11 UNION ALL SELECT 7 AS nid, CAST(17.55215726297349 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_11 UNION ALL SELECT 10 AS nid, CAST(82.74020216266568 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_11 UNION ALL SELECT 11 AS nid, CAST(1.0395187410446 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_11 UNION ALL SELECT 13 AS nid, CAST(-75.03019223138226 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_11 UNION ALL SELECT 14 AS nid, CAST(36.061139629751835 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_11) AS "Values"), 
"DT_Output_11" AS 
(SELECT "DT_node_lookup_11"."KEY" AS "KEY", "DT_node_lookup_11".node_id_2 AS node_id_2, "DT_node_data_11".nid AS nid, "DT_node_data_11"."E" AS "E" 
FROM "DT_node_lookup_11" LEFT OUTER JOIN "DT_node_data_11" ON "DT_node_lookup_11".node_id_2 = "DT_node_data_11".nid), 
"GB_Model_11_0" AS 
(SELECT "DT_Output_11"."KEY" AS "KEY", "DT_Output_11"."E" AS "Estimator" 
FROM "DT_Output_11"), 
"DT_node_lookup_12" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= CAST(0.335529208183289 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= CAST(0.116346150636673 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= CAST(0.490864038467407 AS DOUBLE PRECISION)) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= CAST(0.955653429031372 AS DOUBLE PRECISION)) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= CAST(1.274419784545898 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= CAST(2.081838369369507 AS DOUBLE PRECISION)) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= CAST(-0.083971276879311 AS DOUBLE PRECISION)) THEN 13 ELSE 14 END END END AS node_id_2 
FROM tmp_20180508183358_codegen_x6yq3k_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte_12 AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data_12" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS DOUBLE PRECISION) AS "E" 
FROM (SELECT 3 AS nid, CAST(-8.112854852767265 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_12 UNION ALL SELECT 4 AS nid, CAST(-26.668026113701202 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_12 UNION ALL SELECT 6 AS nid, CAST(14.271112732068888 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_12 UNION ALL SELECT 7 AS nid, CAST(-34.95077611886939 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_12 UNION ALL SELECT 10 AS nid, CAST(4.627189877197448 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_12 UNION ALL SELECT 11 AS nid, CAST(53.573970024713866 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_12 UNION ALL SELECT 13 AS nid, CAST(17.941526241429177 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_12 UNION ALL SELECT 14 AS nid, CAST(51.356387663010125 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_12) AS "Values"), 
"DT_Output_12" AS 
(SELECT "DT_node_lookup_12"."KEY" AS "KEY", "DT_node_lookup_12".node_id_2 AS node_id_2, "DT_node_data_12".nid AS nid, "DT_node_data_12"."E" AS "E" 
FROM "DT_node_lookup_12" LEFT OUTER JOIN "DT_node_data_12" ON "DT_node_lookup_12".node_id_2 = "DT_node_data_12".nid), 
"GB_Model_12_0" AS 
(SELECT "DT_Output_12"."KEY" AS "KEY", "DT_Output_12"."E" AS "Estimator" 
FROM "DT_Output_12"), 
"DT_node_lookup_13" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= CAST(-0.233241856098175 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= CAST(-0.970769762992859 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= CAST(-0.8144451379776 AS DOUBLE PRECISION)) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= CAST(-1.155434370040894 AS DOUBLE PRECISION)) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= CAST(0.69293737411499 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= CAST(-1.242336511611938 AS DOUBLE PRECISION)) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= CAST(1.287952661514282 AS DOUBLE PRECISION)) THEN 13 ELSE 14 END END END AS node_id_2 
FROM tmp_20180508183358_codegen_x6yq3k_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte_13 AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data_13" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS DOUBLE PRECISION) AS "E" 
FROM (SELECT 3 AS nid, CAST(-9.629104898627563 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_13 UNION ALL SELECT 4 AS nid, CAST(-34.99450493751931 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_13 UNION ALL SELECT 6 AS nid, CAST(33.44674128871671 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_13 UNION ALL SELECT 7 AS nid, CAST(-10.547161435064588 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_13 UNION ALL SELECT 10 AS nid, CAST(-37.12680278633819 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_13 UNION ALL SELECT 11 AS nid, CAST(5.719699600090578 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_13 UNION ALL SELECT 13 AS nid, CAST(32.80864199858613 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_13 UNION ALL SELECT 14 AS nid, CAST(-4.234591496761688 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_13) AS "Values"), 
"DT_Output_13" AS 
(SELECT "DT_node_lookup_13"."KEY" AS "KEY", "DT_node_lookup_13".node_id_2 AS node_id_2, "DT_node_data_13".nid AS nid, "DT_node_data_13"."E" AS "E" 
FROM "DT_node_lookup_13" LEFT OUTER JOIN "DT_node_data_13" ON "DT_node_lookup_13".node_id_2 = "DT_node_data_13".nid), 
"GB_Model_13_0" AS 
(SELECT "DT_Output_13"."KEY" AS "KEY", "DT_Output_13"."E" AS "Estimator" 
FROM "DT_Output_13"), 
"DT_node_lookup_14" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= CAST(0.185236603021622 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= CAST(0.490864038467407 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= CAST(1.993807077407837 AS DOUBLE PRECISION)) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= CAST(0.915624499320984 AS DOUBLE PRECISION)) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= CAST(0.467158317565918 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= CAST(0.610061049461365 AS DOUBLE PRECISION)) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= CAST(-0.684465169906616 AS DOUBLE PRECISION)) THEN 13 ELSE 14 END END END AS node_id_2 
FROM tmp_20180508183358_codegen_x6yq3k_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte_14 AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data_14" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS DOUBLE PRECISION) AS "E" 
FROM (SELECT 3 AS nid, CAST(-2.68565987883515 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_14 UNION ALL SELECT 4 AS nid, CAST(70.3102458897569 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_14 UNION ALL SELECT 6 AS nid, CAST(-25.536629455101846 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_14 UNION ALL SELECT 7 AS nid, CAST(-2.18354256159649 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_14 UNION ALL SELECT 10 AS nid, CAST(25.252727647580905 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_14 UNION ALL SELECT 11 AS nid, CAST(-7.060625551241057 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_14 UNION ALL SELECT 13 AS nid, CAST(-31.127167602351324 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_14 UNION ALL SELECT 14 AS nid, CAST(30.749236372670342 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_14) AS "Values"), 
"DT_Output_14" AS 
(SELECT "DT_node_lookup_14"."KEY" AS "KEY", "DT_node_lookup_14".node_id_2 AS node_id_2, "DT_node_data_14".nid AS nid, "DT_node_data_14"."E" AS "E" 
FROM "DT_node_lookup_14" LEFT OUTER JOIN "DT_node_data_14" ON "DT_node_lookup_14".node_id_2 = "DT_node_data_14".nid), 
"GB_Model_14_0" AS 
(SELECT "DT_Output_14"."KEY" AS "KEY", "DT_Output_14"."E" AS "Estimator" 
FROM "DT_Output_14"), 
"DT_node_lookup_15" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= CAST(0.988958597183228 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= CAST(-0.970769762992859 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= CAST(-1.561903715133667 AS DOUBLE PRECISION)) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= CAST(-1.025110840797424 AS DOUBLE PRECISION)) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= CAST(-0.521207809448242 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= CAST(-0.031444318592548 AS DOUBLE PRECISION)) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= CAST(-1.052392601966858 AS DOUBLE PRECISION)) THEN 13 ELSE 14 END END END AS node_id_2 
FROM tmp_20180508183358_codegen_x6yq3k_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte_15 AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data_15" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS DOUBLE PRECISION) AS "E" 
FROM (SELECT 3 AS nid, CAST(1.741399087823294 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_15 UNION ALL SELECT 4 AS nid, CAST(-27.484854187585665 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_15 UNION ALL SELECT 6 AS nid, CAST(26.647660932753837 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_15 UNION ALL SELECT 7 AS nid, CAST(-4.382408064172256 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_15 UNION ALL SELECT 10 AS nid, CAST(-71.38797229032185 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_15 UNION ALL SELECT 11 AS nid, CAST(22.13999113847224 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_15 UNION ALL SELECT 13 AS nid, CAST(-11.875005024029093 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_15 UNION ALL SELECT 14 AS nid, CAST(31.009833834037707 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_15) AS "Values"), 
"DT_Output_15" AS 
(SELECT "DT_node_lookup_15"."KEY" AS "KEY", "DT_node_lookup_15".node_id_2 AS node_id_2, "DT_node_data_15".nid AS nid, "DT_node_data_15"."E" AS "E" 
FROM "DT_node_lookup_15" LEFT OUTER JOIN "DT_node_data_15" ON "DT_node_lookup_15".node_id_2 = "DT_node_data_15".nid), 
"GB_Model_15_0" AS 
(SELECT "DT_Output_15"."KEY" AS "KEY", "DT_Output_15"."E" AS "Estimator" 
FROM "DT_Output_15")
 SELECT "GB_B1"."KEY", "GB_B1"."Estimator" 
FROM (SELECT "GB_esu_1"."KEY" AS "KEY", "GB_esu_1"."Estimator" AS "Estimator" 
FROM (SELECT "GB_Model_10_0"."KEY" AS "KEY", "GB_Model_10_0"."Estimator" AS "Estimator" 
FROM "GB_Model_10_0" UNION ALL SELECT "GB_Model_11_0"."KEY" AS "KEY", "GB_Model_11_0"."Estimator" AS "Estimator" 
FROM "GB_Model_11_0" UNION ALL SELECT "GB_Model_12_0"."KEY" AS "KEY", "GB_Model_12_0"."Estimator" AS "Estimator" 
FROM "GB_Model_12_0" UNION ALL SELECT "GB_Model_13_0"."KEY" AS "KEY", "GB_Model_13_0"."Estimator" AS "Estimator" 
FROM "GB_Model_13_0" UNION ALL SELECT "GB_Model_14_0"."KEY" AS "KEY", "GB_Model_14_0"."Estimator" AS "Estimator" 
FROM "GB_Model_14_0" UNION ALL SELECT "GB_Model_15_0"."KEY" AS "KEY", "GB_Model_15_0"."Estimator" AS "Estimator" 
FROM "GB_Model_15_0") AS "GB_esu_1") AS "GB_B1") AS "U"

-- Code For temporary table tmp_20180508183358_codegen_mlcn9c_gb_union part 1. Create 


CREATE GLOBAL TEMPORARY TABLE tmp_20180508183358_codegen_mlcn9c_gb_union  (
	"KEY" BIGINT, 
	"Estimator" DOUBLE PRECISION
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table tmp_20180508183358_codegen_mlcn9c_gb_union part 2. Populate

INSERT INTO tmp_20180508183358_codegen_mlcn9c_gb_union ("KEY", "Estimator") SELECT "U"."KEY", "U"."Estimator" 
FROM (SELECT "GB_Union"."KEY", "GB_Union"."Estimator" 
FROM (SELECT "GB_EnsembleUnion"."KEY" AS "KEY", "GB_EnsembleUnion"."Estimator" AS "Estimator" 
FROM (SELECT "GB_B0"."KEY" AS "KEY", "GB_B0"."Estimator" AS "Estimator" 
FROM tmp_20180508183358_codegen_vleow9_gb_b0 AS "GB_B0" UNION ALL SELECT "GB_B1"."KEY" AS "KEY", "GB_B1"."Estimator" AS "Estimator" 
FROM tmp_20180508183358_codegen_shwy88_gb_b1 AS "GB_B1") AS "GB_EnsembleUnion") AS "GB_Union") AS "U"

-- Code For temporary table tmp_20180508183358_codegen_g7ccog_gb_sum part 1. Create 


CREATE GLOBAL TEMPORARY TABLE tmp_20180508183358_codegen_g7ccog_gb_sum  (
	"KEY" BIGINT, 
	"Estimator" DOUBLE PRECISION
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table tmp_20180508183358_codegen_g7ccog_gb_sum part 2. Populate

INSERT INTO tmp_20180508183358_codegen_g7ccog_gb_sum ("KEY", "Estimator") SELECT "U"."KEY", "U"."Estimator" 
FROM (SELECT "GB_sum"."KEY", "GB_sum"."Estimator" 
FROM (SELECT "T"."KEY" AS "KEY", CAST("T"."Estimator" AS DOUBLE PRECISION) AS "Estimator" 
FROM (SELECT "GB_Union"."KEY" AS "KEY", sum("GB_Union"."Estimator") AS "Estimator" 
FROM tmp_20180508183358_codegen_mlcn9c_gb_union AS "GB_Union" GROUP BY "GB_Union"."KEY") AS "T") AS "GB_sum") AS "U"

-- Model deployment code

SELECT "GB_sum"."KEY" AS "KEY", CAST(154.07365439093485 AS DOUBLE PRECISION) + CAST(0.1 AS DOUBLE PRECISION) * "GB_sum"."Estimator" AS "Estimator" 
FROM tmp_20180508183358_codegen_g7ccog_gb_sum AS "GB_sum"