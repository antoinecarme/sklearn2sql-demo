-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2018

-- Model : SVC_linear_Pipeline
-- Dataset : iris_date_tgt
-- Database : oracle


-- This SQL code can contain one or more statements, to be executed in the order they appear in this file.



-- Code For temporary table DEGEN_7M9N4O_ADS_IMP_1_OUT part 1. Create 


CREATE GLOBAL TEMPORARY TABLE "DEGEN_7M9N4O_ADS_IMP_1_OUT" (
	"KEY" NUMBER(19), 
	imputer_output_2 BINARY_DOUBLE, 
	imputer_output_3 BINARY_DOUBLE, 
	imputer_output_4 BINARY_DOUBLE, 
	imputer_output_5 BINARY_DOUBLE
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table DEGEN_7M9N4O_ADS_IMP_1_OUT part 2. Populate

INSERT INTO "DEGEN_7M9N4O_ADS_IMP_1_OUT" ("KEY", imputer_output_2, imputer_output_3, imputer_output_4, imputer_output_5) SELECT "U"."KEY", "U".imputer_output_2, "U".imputer_output_3, "U".imputer_output_4, "U".imputer_output_5 
FROM (SELECT "ADS_imp_1_OUT"."KEY", "ADS_imp_1_OUT".imputer_output_2, "ADS_imp_1_OUT".imputer_output_3, "ADS_imp_1_OUT".imputer_output_4, "ADS_imp_1_OUT".imputer_output_5 
FROM (SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" IS NULL) THEN 5.8474999999999975 ELSE "ADS"."Feature_0" END AS imputer_output_2, CASE WHEN ("ADS"."Feature_1" IS NULL) THEN 3.0366666666666657 ELSE "ADS"."Feature_1" END AS imputer_output_3, CASE WHEN ("ADS"."Feature_2" IS NULL) THEN 3.8450000000000006 ELSE "ADS"."Feature_2" END AS imputer_output_4, CASE WHEN ("ADS"."Feature_3" IS NULL) THEN 1.245 ELSE "ADS"."Feature_3" END AS imputer_output_5 
FROM "IRIS_DATE_TGT" "ADS") "ADS_imp_1_OUT") "U"

-- Code For temporary table DEGEN_DRICYD_ADS_SCA_2_OUT part 1. Create 


CREATE GLOBAL TEMPORARY TABLE "DEGEN_DRICYD_ADS_SCA_2_OUT" (
	"KEY" NUMBER(19), 
	scaler_output_2 BINARY_DOUBLE, 
	scaler_output_3 BINARY_DOUBLE, 
	scaler_output_4 BINARY_DOUBLE, 
	scaler_output_5 BINARY_DOUBLE
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table DEGEN_DRICYD_ADS_SCA_2_OUT part 2. Populate

INSERT INTO "DEGEN_DRICYD_ADS_SCA_2_OUT" ("KEY", scaler_output_2, scaler_output_3, scaler_output_4, scaler_output_5) SELECT "U"."KEY", "U".scaler_output_2, "U".scaler_output_3, "U".scaler_output_4, "U".scaler_output_5 
FROM (SELECT "ADS_sca_2_OUT"."KEY", "ADS_sca_2_OUT".scaler_output_2, "ADS_sca_2_OUT".scaler_output_3, "ADS_sca_2_OUT".scaler_output_4, "ADS_sca_2_OUT".scaler_output_5 
FROM (SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", (CAST("ADS_imp_1_OUT".imputer_output_2 AS BINARY_DOUBLE) - 5.8474999999999975) / 0.827039146594646 AS scaler_output_2, (CAST("ADS_imp_1_OUT".imputer_output_3 AS BINARY_DOUBLE) - 3.0366666666666657) / 0.43625935201691934 AS scaler_output_3, (CAST("ADS_imp_1_OUT".imputer_output_4 AS BINARY_DOUBLE) - 3.8450000000000006) / 1.709817241695732 AS scaler_output_4, (CAST("ADS_imp_1_OUT".imputer_output_5 AS BINARY_DOUBLE) - 1.245) / 0.7498722113355939 AS scaler_output_5 
FROM "DEGEN_7M9N4O_ADS_IMP_1_OUT" "ADS_imp_1_OUT") "ADS_sca_2_OUT") "U"

-- Code For temporary table _CODEGEN_QKVYL3_KERNAGG_B0 part 1. Create 


CREATE GLOBAL TEMPORARY TABLE "_CODEGEN_QKVYL3_KERNAGG_B0" (
	"KEY" NUMBER(19), 
	"OVO_Class1" VARCHAR2, 
	"OVO_Class2" VARCHAR2, 
	"OVO_Decision" NUMBER(19), 
	"OVO_Confidence" BINARY_DOUBLE
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table _CODEGEN_QKVYL3_KERNAGG_B0 part 2. Populate

INSERT INTO "_CODEGEN_QKVYL3_KERNAGG_B0" ("KEY", "OVO_Class1", "OVO_Class2", "OVO_Decision", "OVO_Confidence") SELECT "U"."KEY", "U"."OVO_Class1", "U"."OVO_Class2", "U"."OVO_Decision", "U"."OVO_Confidence" 
FROM (WITH kernel_input AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CAST("ADS_sca_2_OUT".scaler_output_2 AS BINARY_DOUBLE) AS scaler_output_2, CAST("ADS_sca_2_OUT".scaler_output_3 AS BINARY_DOUBLE) AS scaler_output_3, CAST("ADS_sca_2_OUT".scaler_output_4 AS BINARY_DOUBLE) AS scaler_output_4, CAST("ADS_sca_2_OUT".scaler_output_5 AS BINARY_DOUBLE) AS scaler_output_5 
FROM "DEGEN_DRICYD_ADS_SCA_2_OUT" "ADS_sca_2_OUT"), 
"SV_data_1789-07-14T00:00:00.000000000_1789-08-14T00:00:00.000000000" AS 
(SELECT "Values".sv_idx AS sv_idx, CAST("Values".dual_coeff AS BINARY_DOUBLE) AS dual_coeff, CAST("Values".sv_0 AS BINARY_DOUBLE) AS sv_0, CAST("Values".sv_1 AS BINARY_DOUBLE) AS sv_1, CAST("Values".sv_2 AS BINARY_DOUBLE) AS sv_2, CAST("Values".sv_3 AS BINARY_DOUBLE) AS sv_3 
FROM (SELECT 0 AS sv_idx, 0.3313142741679064 AS dual_coeff, -0.903826624263008 AS sv_0, 0.6036164774826909 AS sv_1, -1.2545200432489911 AS sv_2, -0.9935026111623527 AS sv_3 FROM DUAL UNION ALL SELECT 1 AS sv_idx, 0.6120084742534154 AS dual_coeff, -1.6293061888888354 AS sv_0, -1.6885979939705589 AS sv_1, -1.4884631748571948 AS sv_2, -1.2602147215415076 AS sv_3 FROM DUAL UNION ALL SELECT 2 AS sv_idx, -0.0 AS dual_coeff, 0.1843927226757343 AS sv_0, -0.3132693110986089 AS sv_1, 0.38308187800843274 AS sv_2, 0.34005794073342255 AS sv_3 FROM DUAL UNION ALL SELECT 3 AS sv_idx, -0.0 AS dual_coeff, 1.1516988088435047 AS sv_0, -0.542490758243934 AS sv_1, 0.5585392267145852 AS sv_2, 0.2067018855438449 AS sv_3 FROM DUAL UNION ALL SELECT 4 AS sv_idx, -0.0 AS dual_coeff, -0.29926032040815137 AS sv_0, -0.08404786395328369 AS sv_1, 0.38308187800843274 AS sv_2, 0.34005794073342255 AS sv_3 FROM DUAL UNION ALL SELECT 5 AS sv_idx, -0.9163937780265576 AS dual_coeff, -0.903826624263008 AS sv_0, -1.2301550996799087 AS sv_1, -0.4942048655223301 AS sv_2, -0.19336628002488743 AS sv_3 FROM DUAL UNION ALL SELECT 6 AS sv_idx, -0.0 AS dual_coeff, 0.5471325049886481 AS sv_0, -1.6885979939705589 AS sv_1, 0.3245960951063821 AS sv_2, 0.07334583035426756 AS sv_3 FROM DUAL UNION ALL SELECT 7 AS sv_idx, -0.0 AS dual_coeff, 0.42621924421767715 AS sv_0, -1.917819441115883 AS sv_1, 0.38308187800843274 AS sv_2, 0.34005794073342255 AS sv_3 FROM DUAL UNION ALL SELECT 8 AS sv_idx, -0.026928970394764388 AS dual_coeff, -1.1456531458049497 AS sv_0, -1.4593765468252338 AS sv_1, -0.31874751681617763 AS sv_2, -0.3267223352144651 AS sv_3 FROM DUAL UNION ALL SELECT 9 AS sv_idx, -0.0 AS dual_coeff, 0.06347946190476342 AS sv_0, 0.37439503033736665 AS sv_1, 0.5585392267145852 AS sv_2, 0.7401261063021551 AS sv_3 FROM DUAL UNION ALL SELECT 10 AS sv_idx, -0.0 AS dual_coeff, 0.5471325049886481 AS sv_0, -1.2301550996799087 AS sv_1, 0.6170250096166364 AS sv_2, 0.34005794073342255 AS sv_3 FROM DUAL UNION ALL SELECT 11 AS sv_idx, -0.0 AS dual_coeff, 0.3053059834467052 AS sv_0, -0.3132693110986089 AS sv_1, 0.5000534438125346 AS sv_2, 0.2067018855438449 AS sv_3 FROM DUAL UNION ALL SELECT 12 AS sv_idx, -0.0 AS dual_coeff, -0.5410868419500932 AS sv_0, -0.08404786395328369 AS sv_1, 0.38308187800843274 AS sv_2, 0.34005794073342255 AS sv_3 FROM DUAL UNION ALL SELECT 13 AS sv_idx, -0.0 AS dual_coeff, 1.0307855480725336 AS sv_0, -0.08404786395328369 AS sv_1, 0.6755107925186871 AS sv_2, 0.6067700511125775 AS sv_3 FROM DUAL UNION ALL SELECT 14 AS sv_idx, -0.0 AS dual_coeff, 1.2726120696144765 AS sv_0, 0.1451735831920415 AS sv_1, 0.6170250096166364 AS sv_2, 0.34005794073342255 AS sv_3 FROM DUAL) "Values"), 
"kernel_dp_1789-07-14T00:00:00.000000000_1789-08-14T00:00:00.000000000" AS 
(SELECT t."KEY" AS "KEY", t.dot_product AS dot_product 
FROM (SELECT full_join_data_sv."KEY" AS "KEY", sum(CAST(full_join_data_sv.dot_prod1 AS BINARY_DOUBLE)) + -1.5900231216431768 AS dot_product 
FROM (SELECT kernel_input."KEY" AS "KEY", "SV_data_1789-07-14T00:00:00.000000000_1789-08-14T00:00:00.000000000".dual_coeff * (kernel_input.scaler_output_2 * "SV_data_1789-07-14T00:00:00.000000000_1789-08-14T00:00:00.000000000".sv_0 + kernel_input.scaler_output_3 * "SV_data_1789-07-14T00:00:00.000000000_1789-08-14T00:00:00.000000000".sv_1 + kernel_input.scaler_output_4 * "SV_data_1789-07-14T00:00:00.000000000_1789-08-14T00:00:00.000000000".sv_2 + kernel_input.scaler_output_5 * "SV_data_1789-07-14T00:00:00.000000000_1789-08-14T00:00:00.000000000".sv_3) AS dot_prod1 
FROM kernel_input, "SV_data_1789-07-14T00:00:00.000000000_1789-08-14T00:00:00.000000000") full_join_data_sv GROUP BY full_join_data_sv."KEY") t), 
"kernel_cte_1789-07-14T00:00:00.000000000_1789-08-14T00:00:00.000000000" AS 
(SELECT "kernel_dp_1789-07-14T00:00:00.000000000_1789-08-14T00:00:00.000000000"."KEY" AS "KEY", '1789-07-14T00:00:00.000000000' AS "OVO_Class1", '1789-08-14T00:00:00.000000000' AS "OVO_Class2", CASE WHEN (-"kernel_dp_1789-07-14T00:00:00.000000000_1789-08-14T00:00:00.000000000".dot_product >= 0.0) THEN 1 ELSE 0 END AS "OVO_Decision", coalesce(-"kernel_dp_1789-07-14T00:00:00.000000000_1789-08-14T00:00:00.000000000".dot_product, 1.0 / (1.0 + exp(least(greatest(-100.0, -(-((-"kernel_dp_1789-07-14T00:00:00.000000000_1789-08-14T00:00:00.000000000".dot_product) * -2.188696357314862 + -0.30894898975115925))), 100.0)))) AS "OVO_Confidence" 
FROM "kernel_dp_1789-07-14T00:00:00.000000000_1789-08-14T00:00:00.000000000"), 
"SV_data_1789-07-14T00:00:00.000000000_1789-09-14T00:00:00.000000000" AS 
(SELECT "Values".sv_idx AS sv_idx, CAST("Values".dual_coeff AS BINARY_DOUBLE) AS dual_coeff, CAST("Values".sv_0 AS BINARY_DOUBLE) AS sv_0, CAST("Values".sv_1 AS BINARY_DOUBLE) AS sv_1, CAST("Values".sv_2 AS BINARY_DOUBLE) AS sv_2, CAST("Values".sv_3 AS BINARY_DOUBLE) AS sv_3 
FROM (SELECT 0 AS sv_idx, 0.12171329143501097 AS dual_coeff, -0.903826624263008 AS sv_0, 0.6036164774826909 AS sv_1, -1.2545200432489911 AS sv_2, -0.9935026111623527 AS sv_3 FROM DUAL UNION ALL SELECT 1 AS sv_idx, 0.18557788786333185 AS dual_coeff, -1.6293061888888354 AS sv_0, -1.6885979939705589 AS sv_1, -1.4884631748571948 AS sv_2, -1.2602147215415076 AS sv_3 FROM DUAL UNION ALL SELECT 15 AS sv_idx, -0.0 AS dual_coeff, 0.3053059834467052 AS sv_0, -0.08404786395328369 AS sv_1, 0.6170250096166364 AS sv_2, 0.7401261063021551 AS sv_3 FROM DUAL UNION ALL SELECT 16 AS sv_idx, -0.30729117929834293 AS dual_coeff, -1.1456531458049497 AS sv_0, -1.2301550996799087 AS sv_1, 0.38308187800843274 AS sv_2, 0.6067700511125775 AS sv_3 FROM DUAL UNION ALL SELECT 17 AS sv_idx, -0.0 AS dual_coeff, 0.7889590265305909 AS sv_0, 0.37439503033736665 AS sv_1, 0.7339965754207377 AS sv_2, 1.0068382166813101 AS sv_3 FROM DUAL UNION ALL SELECT 18 AS sv_idx, -0.0 AS dual_coeff, 0.5471325049886481 AS sv_0, -0.7717122053892582 AS sv_1, 0.6170250096166364 AS sv_2, 0.7401261063021551 AS sv_3 FROM DUAL UNION ALL SELECT 19 AS sv_idx, -0.0 AS dual_coeff, 0.06347946190476342 AS sv_0, -0.08404786395328369 AS sv_1, 0.7339965754207377 AS sv_2, 0.7401261063021551 AS sv_3 FROM DUAL UNION ALL SELECT 20 AS sv_idx, -0.0 AS dual_coeff, 0.1843927226757343 AS sv_0, -0.08404786395328369 AS sv_1, 0.5585392267145852 AS sv_2, 0.7401261063021551 AS sv_3 FROM DUAL UNION ALL SELECT 21 AS sv_idx, -0.0 AS dual_coeff, 0.3053059834467052 AS sv_0, -1.0009336525345833 AS sv_1, 1.026425489930992 AS sv_2, 0.2067018855438449 AS sv_3 FROM DUAL UNION ALL SELECT 22 AS sv_idx, -0.0 AS dual_coeff, 0.5471325049886481 AS sv_0, -0.542490758243934 AS sv_1, 0.7339965754207377 AS sv_2, 0.34005794073342255 AS sv_3 FROM DUAL UNION ALL SELECT 23 AS sv_idx, -0.0 AS dual_coeff, 0.7889590265305909 AS sv_0, -0.08404786395328369 AS sv_1, 0.9679397070289413 AS sv_2, 0.7401261063021551 AS sv_3 FROM DUAL UNION ALL SELECT 24 AS sv_idx, -0.0 AS dual_coeff, 1.6353518519273904 AS sv_0, -0.08404786395328369 AS sv_1, 1.1433970557350939 AS sv_2, 0.4734139959230002 AS sv_3 FROM DUAL UNION ALL SELECT 25 AS sv_idx, -0.0 AS dual_coeff, 0.1843927226757343 AS sv_0, -1.917819441115883 AS sv_1, 0.6755107925186871 AS sv_2, 0.34005794073342255 AS sv_3 FROM DUAL) "Values"), 
"kernel_dp_1789-07-14T00:00:00.000000000_1789-09-14T00:00:00.000000000" AS 
(SELECT t_1."KEY" AS "KEY", t_1.dot_product AS dot_product 
FROM (SELECT full_join_data_sv_1."KEY" AS "KEY", sum(CAST(full_join_data_sv_1.dot_prod1 AS BINARY_DOUBLE)) + -0.361186144126904 AS dot_product 
FROM (SELECT kernel_input."KEY" AS "KEY", "SV_data_1789-07-14T00:00:00.000000000_1789-09-14T00:00:00.000000000".dual_coeff * (kernel_input.scaler_output_2 * "SV_data_1789-07-14T00:00:00.000000000_1789-09-14T00:00:00.000000000".sv_0 + kernel_input.scaler_output_3 * "SV_data_1789-07-14T00:00:00.000000000_1789-09-14T00:00:00.000000000".sv_1 + kernel_input.scaler_output_4 * "SV_data_1789-07-14T00:00:00.000000000_1789-09-14T00:00:00.000000000".sv_2 + kernel_input.scaler_output_5 * "SV_data_1789-07-14T00:00:00.000000000_1789-09-14T00:00:00.000000000".sv_3) AS dot_prod1 
FROM kernel_input, "SV_data_1789-07-14T00:00:00.000000000_1789-09-14T00:00:00.000000000") full_join_data_sv_1 GROUP BY full_join_data_sv_1."KEY") t_1), 
"kernel_cte_1789-07-14T00:00:00.000000000_1789-09-14T00:00:00.000000000" AS 
(SELECT "kernel_dp_1789-07-14T00:00:00.000000000_1789-09-14T00:00:00.000000000"."KEY" AS "KEY", '1789-07-14T00:00:00.000000000' AS "OVO_Class1", '1789-09-14T00:00:00.000000000' AS "OVO_Class2", CASE WHEN (-"kernel_dp_1789-07-14T00:00:00.000000000_1789-09-14T00:00:00.000000000".dot_product >= 0.0) THEN 1 ELSE 0 END AS "OVO_Decision", coalesce(-"kernel_dp_1789-07-14T00:00:00.000000000_1789-09-14T00:00:00.000000000".dot_product, 1.0 / (1.0 + exp(least(greatest(-100.0, -(-((-"kernel_dp_1789-07-14T00:00:00.000000000_1789-09-14T00:00:00.000000000".dot_product) * -2.7018967803783656 + -0.12192220313362605))), 100.0)))) AS "OVO_Confidence" 
FROM "kernel_dp_1789-07-14T00:00:00.000000000_1789-09-14T00:00:00.000000000"), 
"SV_data_1789-08-14T00:00:00.000000000_1789-09-14T00:00:00.000000000" AS 
(SELECT "Values".sv_idx AS sv_idx, CAST("Values".dual_coeff AS BINARY_DOUBLE) AS dual_coeff, CAST("Values".sv_0 AS BINARY_DOUBLE) AS sv_0, CAST("Values".sv_1 AS BINARY_DOUBLE) AS sv_1, CAST("Values".sv_2 AS BINARY_DOUBLE) AS sv_2, CAST("Values".sv_3 AS BINARY_DOUBLE) AS sv_3 
FROM (SELECT 2 AS sv_idx, 1.0 AS dual_coeff, 0.1843927226757343 AS sv_0, -0.3132693110986089 AS sv_1, 0.38308187800843274 AS sv_2, 0.34005794073342255 AS sv_3 FROM DUAL UNION ALL SELECT 3 AS sv_idx, 0.32430979924616193 AS dual_coeff, 1.1516988088435047 AS sv_0, -0.542490758243934 AS sv_1, 0.5585392267145852 AS sv_2, 0.2067018855438449 AS sv_3 FROM DUAL UNION ALL SELECT 4 AS sv_idx, 1.0 AS dual_coeff, -0.29926032040815137 AS sv_0, -0.08404786395328369 AS sv_1, 0.38308187800843274 AS sv_2, 0.34005794073342255 AS sv_3 FROM DUAL UNION ALL SELECT 5 AS sv_idx, 0.0 AS dual_coeff, -0.903826624263008 AS sv_0, -1.2301550996799087 AS sv_1, -0.4942048655223301 AS sv_2, -0.19336628002488743 AS sv_3 FROM DUAL UNION ALL SELECT 6 AS sv_idx, 0.6962589219847841 AS dual_coeff, 0.5471325049886481 AS sv_0, -1.6885979939705589 AS sv_1, 0.3245960951063821 AS sv_2, 0.07334583035426756 AS sv_3 FROM DUAL UNION ALL SELECT 7 AS sv_idx, 1.0 AS dual_coeff, 0.42621924421767715 AS sv_0, -1.917819441115883 AS sv_1, 0.38308187800843274 AS sv_2, 0.34005794073342255 AS sv_3 FROM DUAL UNION ALL SELECT 8 AS sv_idx, 0.0 AS dual_coeff, -1.1456531458049497 AS sv_0, -1.4593765468252338 AS sv_1, -0.31874751681617763 AS sv_2, -0.3267223352144651 AS sv_3 FROM DUAL UNION ALL SELECT 9 AS sv_idx, 1.0 AS dual_coeff, 0.06347946190476342 AS sv_0, 0.37439503033736665 AS sv_1, 0.5585392267145852 AS sv_2, 0.7401261063021551 AS sv_3 FROM DUAL UNION ALL SELECT 10 AS sv_idx, 1.0 AS dual_coeff, 0.5471325049886481 AS sv_0, -1.2301550996799087 AS sv_1, 0.6170250096166364 AS sv_2, 0.34005794073342255 AS sv_3 FROM DUAL UNION ALL SELECT 11 AS sv_idx, 0.9928455350642991 AS dual_coeff, 0.3053059834467052 AS sv_0, -0.3132693110986089 AS sv_1, 0.5000534438125346 AS sv_2, 0.2067018855438449 AS sv_3 FROM DUAL UNION ALL SELECT 12 AS sv_idx, 1.0 AS dual_coeff, -0.5410868419500932 AS sv_0, -0.08404786395328369 AS sv_1, 0.38308187800843274 AS sv_2, 0.34005794073342255 AS sv_3 FROM DUAL UNION ALL SELECT 13 AS sv_idx, 1.0 AS dual_coeff, 1.0307855480725336 AS sv_0, -0.08404786395328369 AS sv_1, 0.6755107925186871 AS sv_2, 0.6067700511125775 AS sv_3 FROM DUAL UNION ALL SELECT 14 AS sv_idx, 1.0 AS dual_coeff, 1.2726120696144765 AS sv_0, 0.1451735831920415 AS sv_1, 0.6170250096166364 AS sv_2, 0.34005794073342255 AS sv_3 FROM DUAL UNION ALL SELECT 15 AS sv_idx, -1.0 AS dual_coeff, 0.3053059834467052 AS sv_0, -0.08404786395328369 AS sv_1, 0.6170250096166364 AS sv_2, 0.7401261063021551 AS sv_3 FROM DUAL UNION ALL SELECT 16 AS sv_idx, -1.0 AS dual_coeff, -1.1456531458049497 AS sv_0, -1.2301550996799087 AS sv_1, 0.38308187800843274 AS sv_2, 0.6067700511125775 AS sv_3 FROM DUAL UNION ALL SELECT 17 AS sv_idx, -1.0 AS dual_coeff, 0.7889590265305909 AS sv_0, 0.37439503033736665 AS sv_1, 0.7339965754207377 AS sv_2, 1.0068382166813101 AS sv_3 FROM DUAL UNION ALL SELECT 18 AS sv_idx, -1.0 AS dual_coeff, 0.5471325049886481 AS sv_0, -0.7717122053892582 AS sv_1, 0.6170250096166364 AS sv_2, 0.7401261063021551 AS sv_3 FROM DUAL UNION ALL SELECT 19 AS sv_idx, -1.0 AS dual_coeff, 0.06347946190476342 AS sv_0, -0.08404786395328369 AS sv_1, 0.7339965754207377 AS sv_2, 0.7401261063021551 AS sv_3 FROM DUAL UNION ALL SELECT 20 AS sv_idx, -1.0 AS dual_coeff, 0.1843927226757343 AS sv_0, -0.08404786395328369 AS sv_1, 0.5585392267145852 AS sv_2, 0.7401261063021551 AS sv_3 FROM DUAL UNION ALL SELECT 21 AS sv_idx, -1.0 AS dual_coeff, 0.3053059834467052 AS sv_0, -1.0009336525345833 AS sv_1, 1.026425489930992 AS sv_2, 0.2067018855438449 AS sv_3 FROM DUAL UNION ALL SELECT 22 AS sv_idx, -1.0 AS dual_coeff, 0.5471325049886481 AS sv_0, -0.542490758243934 AS sv_1, 0.7339965754207377 AS sv_2, 0.34005794073342255 AS sv_3 FROM DUAL UNION ALL SELECT 23 AS sv_idx, -0.013414256295245043 AS dual_coeff, 0.7889590265305909 AS sv_0, -0.08404786395328369 AS sv_1, 0.9679397070289413 AS sv_2, 0.7401261063021551 AS sv_3 FROM DUAL UNION ALL SELECT 24 AS sv_idx, -1.0 AS dual_coeff, 1.6353518519273904 AS sv_0, -0.08404786395328369 AS sv_1, 1.1433970557350939 AS sv_2, 0.4734139959230002 AS sv_3 FROM DUAL UNION ALL SELECT 25 AS sv_idx, -1.0 AS dual_coeff, 0.1843927226757343 AS sv_0, -1.917819441115883 AS sv_1, 0.6755107925186871 AS sv_2, 0.34005794073342255 AS sv_3 FROM DUAL) "Values"), 
"kernel_dp_1789-08-14T00:00:00.000000000_1789-09-14T00:00:00.000000000" AS 
(SELECT t_2."KEY" AS "KEY", t_2.dot_product AS dot_product 
FROM (SELECT full_join_data_sv_2."KEY" AS "KEY", sum(CAST(full_join_data_sv_2.dot_prod1 AS BINARY_DOUBLE)) + 2.70975831744 AS dot_product 
FROM (SELECT kernel_input."KEY" AS "KEY", "SV_data_1789-08-14T00:00:00.000000000_1789-09-14T00:00:00.000000000".dual_coeff * (kernel_input.scaler_output_2 * "SV_data_1789-08-14T00:00:00.000000000_1789-09-14T00:00:00.000000000".sv_0 + kernel_input.scaler_output_3 * "SV_data_1789-08-14T00:00:00.000000000_1789-09-14T00:00:00.000000000".sv_1 + kernel_input.scaler_output_4 * "SV_data_1789-08-14T00:00:00.000000000_1789-09-14T00:00:00.000000000".sv_2 + kernel_input.scaler_output_5 * "SV_data_1789-08-14T00:00:00.000000000_1789-09-14T00:00:00.000000000".sv_3) AS dot_prod1 
FROM kernel_input, "SV_data_1789-08-14T00:00:00.000000000_1789-09-14T00:00:00.000000000") full_join_data_sv_2 GROUP BY full_join_data_sv_2."KEY") t_2), 
"kernel_cte_1789-08-14T00:00:00.000000000_1789-09-14T00:00:00.000000000" AS 
(SELECT "kernel_dp_1789-08-14T00:00:00.000000000_1789-09-14T00:00:00.000000000"."KEY" AS "KEY", '1789-08-14T00:00:00.000000000' AS "OVO_Class1", '1789-09-14T00:00:00.000000000' AS "OVO_Class2", CASE WHEN (-"kernel_dp_1789-08-14T00:00:00.000000000_1789-09-14T00:00:00.000000000".dot_product >= 0.0) THEN 1 ELSE 0 END AS "OVO_Decision", coalesce(-"kernel_dp_1789-08-14T00:00:00.000000000_1789-09-14T00:00:00.000000000".dot_product, 1.0 / (1.0 + exp(least(greatest(-100.0, -(-((-"kernel_dp_1789-08-14T00:00:00.000000000_1789-09-14T00:00:00.000000000".dot_product) * -2.3868810758174845 + -0.03908683994743363))), 100.0)))) AS "OVO_Confidence" 
FROM "kernel_dp_1789-08-14T00:00:00.000000000_1789-09-14T00:00:00.000000000")
 SELECT "KernAgg_B0"."KEY", "KernAgg_B0"."OVO_Class1", "KernAgg_B0"."OVO_Class2", "KernAgg_B0"."OVO_Decision", "KernAgg_B0"."OVO_Confidence" 
FROM (SELECT "KernAgg_esu_0"."KEY" AS "KEY", "KernAgg_esu_0"."OVO_Class1" AS "OVO_Class1", "KernAgg_esu_0"."OVO_Class2" AS "OVO_Class2", "KernAgg_esu_0"."OVO_Decision" AS "OVO_Decision", "KernAgg_esu_0"."OVO_Confidence" AS "OVO_Confidence" 
FROM (SELECT "kernel_cte_1789-07-14T00:00:00.000000000_1789-08-14T00:00:00.000000000"."KEY" AS "KEY", "kernel_cte_1789-07-14T00:00:00.000000000_1789-08-14T00:00:00.000000000"."OVO_Class1" AS "OVO_Class1", "kernel_cte_1789-07-14T00:00:00.000000000_1789-08-14T00:00:00.000000000"."OVO_Class2" AS "OVO_Class2", "kernel_cte_1789-07-14T00:00:00.000000000_1789-08-14T00:00:00.000000000"."OVO_Decision" AS "OVO_Decision", "kernel_cte_1789-07-14T00:00:00.000000000_1789-08-14T00:00:00.000000000"."OVO_Confidence" AS "OVO_Confidence" 
FROM "kernel_cte_1789-07-14T00:00:00.000000000_1789-08-14T00:00:00.000000000" UNION ALL SELECT "kernel_cte_1789-07-14T00:00:00.000000000_1789-09-14T00:00:00.000000000"."KEY" AS "KEY", "kernel_cte_1789-07-14T00:00:00.000000000_1789-09-14T00:00:00.000000000"."OVO_Class1" AS "OVO_Class1", "kernel_cte_1789-07-14T00:00:00.000000000_1789-09-14T00:00:00.000000000"."OVO_Class2" AS "OVO_Class2", "kernel_cte_1789-07-14T00:00:00.000000000_1789-09-14T00:00:00.000000000"."OVO_Decision" AS "OVO_Decision", "kernel_cte_1789-07-14T00:00:00.000000000_1789-09-14T00:00:00.000000000"."OVO_Confidence" AS "OVO_Confidence" 
FROM "kernel_cte_1789-07-14T00:00:00.000000000_1789-09-14T00:00:00.000000000" UNION ALL SELECT "kernel_cte_1789-08-14T00:00:00.000000000_1789-09-14T00:00:00.000000000"."KEY" AS "KEY", "kernel_cte_1789-08-14T00:00:00.000000000_1789-09-14T00:00:00.000000000"."OVO_Class1" AS "OVO_Class1", "kernel_cte_1789-08-14T00:00:00.000000000_1789-09-14T00:00:00.000000000"."OVO_Class2" AS "OVO_Class2", "kernel_cte_1789-08-14T00:00:00.000000000_1789-09-14T00:00:00.000000000"."OVO_Decision" AS "OVO_Decision", "kernel_cte_1789-08-14T00:00:00.000000000_1789-09-14T00:00:00.000000000"."OVO_Confidence" AS "OVO_Confidence" 
FROM "kernel_cte_1789-08-14T00:00:00.000000000_1789-09-14T00:00:00.000000000") "KernAgg_esu_0") "KernAgg_B0") "U"

-- Code For temporary table DEGEN_H1UCIR_KERNAGG_UNION part 1. Create 


CREATE GLOBAL TEMPORARY TABLE "DEGEN_H1UCIR_KERNAGG_UNION" (
	"KEY" NUMBER(19), 
	"OVO_Class1" VARCHAR2, 
	"OVO_Class2" VARCHAR2, 
	"OVO_Decision" NUMBER(19), 
	"OVO_Confidence" BINARY_DOUBLE
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table DEGEN_H1UCIR_KERNAGG_UNION part 2. Populate

INSERT INTO "DEGEN_H1UCIR_KERNAGG_UNION" ("KEY", "OVO_Class1", "OVO_Class2", "OVO_Decision", "OVO_Confidence") SELECT "U"."KEY", "U"."OVO_Class1", "U"."OVO_Class2", "U"."OVO_Decision", "U"."OVO_Confidence" 
FROM (SELECT "KernAgg_Union"."KEY", "KernAgg_Union"."OVO_Class1", "KernAgg_Union"."OVO_Class2", "KernAgg_Union"."OVO_Decision", "KernAgg_Union"."OVO_Confidence" 
FROM (SELECT "KernAgg_EnsembleUnion"."KEY" AS "KEY", "KernAgg_EnsembleUnion"."OVO_Class1" AS "OVO_Class1", "KernAgg_EnsembleUnion"."OVO_Class2" AS "OVO_Class2", "KernAgg_EnsembleUnion"."OVO_Decision" AS "OVO_Decision", "KernAgg_EnsembleUnion"."OVO_Confidence" AS "OVO_Confidence" 
FROM (SELECT "KernAgg_B0"."KEY" AS "KEY", "KernAgg_B0"."OVO_Class1" AS "OVO_Class1", "KernAgg_B0"."OVO_Class2" AS "OVO_Class2", "KernAgg_B0"."OVO_Decision" AS "OVO_Decision", "KernAgg_B0"."OVO_Confidence" AS "OVO_Confidence" 
FROM "_CODEGEN_QKVYL3_KERNAGG_B0" "KernAgg_B0") "KernAgg_EnsembleUnion") "KernAgg_Union") "U"

-- Code For temporary table 324_CODEGEN_J1QPW6_KERNAGG part 1. Create 


CREATE GLOBAL TEMPORARY TABLE "324_CODEGEN_J1QPW6_KERNAGG" (
	"KEY" NUMBER(19), 
	"OVO_Vote_1789-07-14T00:00:00.000000000" NUMBER(19), 
	"OVO_SumConfidence_1789-07-14T00:00:00.000000000" BINARY_DOUBLE, 
	"OVO_Vote_1789-08-14T00:00:00.000000000" NUMBER(19), 
	"OVO_SumConfidence_1789-08-14T00:00:00.000000000" BINARY_DOUBLE, 
	"OVO_Vote_1789-09-14T00:00:00.000000000" NUMBER(19), 
	"OVO_SumConfidence_1789-09-14T00:00:00.000000000" BINARY_DOUBLE, 
	max_abs_confidence BINARY_DOUBLE, 
	"OVO_Scale" BINARY_DOUBLE, 
	"Score_1789-07-14T00:00:00.000000000" BINARY_DOUBLE, 
	"Score_1789-08-14T00:00:00.000000000" BINARY_DOUBLE, 
	"Score_1789-09-14T00:00:00.000000000" BINARY_DOUBLE
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table 324_CODEGEN_J1QPW6_KERNAGG part 2. Populate

INSERT INTO "324_CODEGEN_J1QPW6_KERNAGG" ("KEY", "OVO_Vote_1789-07-14T00:00:00.000000000", "OVO_SumConfidence_1789-07-14T00:00:00.000000000", "OVO_Vote_1789-08-14T00:00:00.000000000", "OVO_SumConfidence_1789-08-14T00:00:00.000000000", "OVO_Vote_1789-09-14T00:00:00.000000000", "OVO_SumConfidence_1789-09-14T00:00:00.000000000", max_abs_confidence, "OVO_Scale", "Score_1789-07-14T00:00:00.000000000", "Score_1789-08-14T00:00:00.000000000", "Score_1789-09-14T00:00:00.000000000") SELECT "U"."KEY", "U"."OVO_Vote_1789-07-14T00:0_1", "U"."OVO_SumConfidence_1789-0_2", "U"."OVO_Vote_1789-08-14T00:0_3", "U"."OVO_SumConfidence_1789-0_4", "U"."OVO_Vote_1789-09-14T00:0_5", "U"."OVO_SumConfidence_1789-0_6", "U".max_abs_confidence, "U"."OVO_Scale", "U"."Score_1789-07-14T00:00:00.000000000", "U"."Score_1789-08-14T00:00:00.000000000", "U"."Score_1789-09-14T00:00:00.000000000" 
FROM (WITH "OVO_Votes" AS 
(SELECT "Votes_Sel"."KEY" AS "KEY", "Votes_Sel"."OVO_Vote_1789-07-14T00:00:00.000000000" AS "OVO_Vote_1789-07-14T00:0_1", "Votes_Sel"."OVO_SumConfidence_1789-07-14T00:00:00.000000000" AS "OVO_SumConfidence_1789-0_2", "Votes_Sel"."OVO_Vote_1789-08-14T00:00:00.000000000" AS "OVO_Vote_1789-08-14T00:0_3", "Votes_Sel"."OVO_SumConfidence_1789-08-14T00:00:00.000000000" AS "OVO_SumConfidence_1789-0_4", "Votes_Sel"."OVO_Vote_1789-09-14T00:00:00.000000000" AS "OVO_Vote_1789-09-14T00:0_5", "Votes_Sel"."OVO_SumConfidence_1789-09-14T00:00:00.000000000" AS "OVO_SumConfidence_1789-0_6" 
FROM (SELECT "KernAgg_Union"."KEY" AS "KEY", sum(CASE WHEN ("KernAgg_Union"."OVO_Class1" = '1789-07-14T00:00:00.000000000' OR "KernAgg_Union"."OVO_Class2" = '1789-07-14T00:00:00.000000000') THEN 1 ELSE 0 END * (CASE WHEN ("KernAgg_Union"."OVO_Decision" = 0 AND "KernAgg_Union"."OVO_Class1" = '1789-07-14T00:00:00.000000000') THEN 1 ELSE 0 END + CASE WHEN ("KernAgg_Union"."OVO_Decision" = 1 AND "KernAgg_Union"."OVO_Class2" = '1789-07-14T00:00:00.000000000') THEN 1 ELSE 0 END)) AS "OVO_Vote_1789-07-14T00:00:00.000000000", sum(CASE WHEN ("KernAgg_Union"."OVO_Class1" = '1789-07-14T00:00:00.000000000' OR "KernAgg_Union"."OVO_Class2" = '1789-07-14T00:00:00.000000000') THEN 1 ELSE 0 END * "KernAgg_Union"."OVO_Confidence" * (-CASE WHEN ("KernAgg_Union"."OVO_Class1" = '1789-07-14T00:00:00.000000000') THEN 1 ELSE 0 END + CASE WHEN ("KernAgg_Union"."OVO_Class2" = '1789-07-14T00:00:00.000000000') THEN 1 ELSE 0 END)) AS "OVO_SumConfidence_1789-07-14T00:00:00.000000000", sum(CASE WHEN ("KernAgg_Union"."OVO_Class1" = '1789-08-14T00:00:00.000000000' OR "KernAgg_Union"."OVO_Class2" = '1789-08-14T00:00:00.000000000') THEN 1 ELSE 0 END * (CASE WHEN ("KernAgg_Union"."OVO_Decision" = 0 AND "KernAgg_Union"."OVO_Class1" = '1789-08-14T00:00:00.000000000') THEN 1 ELSE 0 END + CASE WHEN ("KernAgg_Union"."OVO_Decision" = 1 AND "KernAgg_Union"."OVO_Class2" = '1789-08-14T00:00:00.000000000') THEN 1 ELSE 0 END)) AS "OVO_Vote_1789-08-14T00:00:00.000000000", sum(CASE WHEN ("KernAgg_Union"."OVO_Class1" = '1789-08-14T00:00:00.000000000' OR "KernAgg_Union"."OVO_Class2" = '1789-08-14T00:00:00.000000000') THEN 1 ELSE 0 END * "KernAgg_Union"."OVO_Confidence" * (-CASE WHEN ("KernAgg_Union"."OVO_Class1" = '1789-08-14T00:00:00.000000000') THEN 1 ELSE 0 END + CASE WHEN ("KernAgg_Union"."OVO_Class2" = '1789-08-14T00:00:00.000000000') THEN 1 ELSE 0 END)) AS "OVO_SumConfidence_1789-08-14T00:00:00.000000000", sum(CASE WHEN ("KernAgg_Union"."OVO_Class1" = '1789-09-14T00:00:00.000000000' OR "KernAgg_Union"."OVO_Class2" = '1789-09-14T00:00:00.000000000') THEN 1 ELSE 0 END * (CASE WHEN ("KernAgg_Union"."OVO_Decision" = 0 AND "KernAgg_Union"."OVO_Class1" = '1789-09-14T00:00:00.000000000') THEN 1 ELSE 0 END + CASE WHEN ("KernAgg_Union"."OVO_Decision" = 1 AND "KernAgg_Union"."OVO_Class2" = '1789-09-14T00:00:00.000000000') THEN 1 ELSE 0 END)) AS "OVO_Vote_1789-09-14T00:00:00.000000000", sum(CASE WHEN ("KernAgg_Union"."OVO_Class1" = '1789-09-14T00:00:00.000000000' OR "KernAgg_Union"."OVO_Class2" = '1789-09-14T00:00:00.000000000') THEN 1 ELSE 0 END * "KernAgg_Union"."OVO_Confidence" * (-CASE WHEN ("KernAgg_Union"."OVO_Class1" = '1789-09-14T00:00:00.000000000') THEN 1 ELSE 0 END + CASE WHEN ("KernAgg_Union"."OVO_Class2" = '1789-09-14T00:00:00.000000000') THEN 1 ELSE 0 END)) AS "OVO_SumConfidence_1789-09-14T00:00:00.000000000" 
FROM "DEGEN_H1UCIR_KERNAGG_UNION" "KernAgg_Union" GROUP BY "KernAgg_Union"."KEY") "Votes_Sel"), 
"OVO_SumConf_CTE" AS 
(SELECT "Values"."KEY" AS "KEY", CAST("Values"."OVO_SumConfidence" AS BINARY_DOUBLE) AS "OVO_SumConfidence" 
FROM (SELECT "OVO_Votes"."KEY" AS "KEY", "OVO_Votes"."OVO_SumConfidence_1789-0_2" AS "OVO_SumConfidence" 
FROM "OVO_Votes" UNION ALL SELECT "OVO_Votes"."KEY" AS "KEY", "OVO_Votes"."OVO_SumConfidence_1789-0_4" AS "OVO_SumConfidence" 
FROM "OVO_Votes" UNION ALL SELECT "OVO_Votes"."KEY" AS "KEY", "OVO_Votes"."OVO_SumConfidence_1789-0_6" AS "OVO_SumConfidence" 
FROM "OVO_Votes") "Values"), 
"MinMaxConf" AS 
(SELECT min("OVO_SumConf_CTE"."OVO_SumConfidence") AS "OVO_min_conf", max("OVO_SumConf_CTE"."OVO_SumConfidence") AS "OVO_max_conf" 
FROM "OVO_SumConf_CTE"), 
"OVO_Votes_WithScale" AS 
(SELECT "OVO_Votes"."KEY" AS "KEY", "OVO_Votes"."OVO_Vote_1789-07-14T00:0_1" AS "OVO_Vote_1789-07-14T00:0_1", "OVO_Votes"."OVO_SumConfidence_1789-0_2" AS "OVO_SumConfidence_1789-0_2", "OVO_Votes"."OVO_Vote_1789-08-14T00:0_3" AS "OVO_Vote_1789-08-14T00:0_3", "OVO_Votes"."OVO_SumConfidence_1789-0_4" AS "OVO_SumConfidence_1789-0_4", "OVO_Votes"."OVO_Vote_1789-09-14T00:0_5" AS "OVO_Vote_1789-09-14T00:0_5", "OVO_Votes"."OVO_SumConfidence_1789-0_6" AS "OVO_SumConfidence_1789-0_6", CAST(CASE WHEN (abs("MinMaxConf"."OVO_min_conf") >= abs("MinMaxConf"."OVO_max_conf")) THEN abs("MinMaxConf"."OVO_min_conf") ELSE abs("MinMaxConf"."OVO_max_conf") END AS BINARY_DOUBLE) AS max_abs_confidence, CASE WHEN ("MinMaxConf"."OVO_max_conf" - "MinMaxConf"."OVO_min_conf" <= 0.0) THEN 0.0 ELSE 0.4999999999999998 / CAST(CASE WHEN (abs("MinMaxConf"."OVO_min_conf") >= abs("MinMaxConf"."OVO_max_conf")) THEN abs("MinMaxConf"."OVO_min_conf") ELSE abs("MinMaxConf"."OVO_max_conf") END AS BINARY_DOUBLE) END AS "OVO_Scale" 
FROM "OVO_Votes", "MinMaxConf")
 SELECT "KernAgg"."KEY", "KernAgg"."OVO_Vote_1789-07-14T00:0_1", "KernAgg"."OVO_SumConfidence_1789-0_2", "KernAgg"."OVO_Vote_1789-08-14T00:0_3", "KernAgg"."OVO_SumConfidence_1789-0_4", "KernAgg"."OVO_Vote_1789-09-14T00:0_5", "KernAgg"."OVO_SumConfidence_1789-0_6", "KernAgg".max_abs_confidence, "KernAgg"."OVO_Scale", "KernAgg"."Score_1789-07-14T00:00:00.000000000", "KernAgg"."Score_1789-08-14T00:00:00.000000000", "KernAgg"."Score_1789-09-14T00:00:00.000000000" 
FROM (SELECT "OVO_Votes_WithScale"."KEY" AS "KEY", "OVO_Votes_WithScale"."OVO_Vote_1789-07-14T00:0_1" AS "OVO_Vote_1789-07-14T00:0_1", "OVO_Votes_WithScale"."OVO_SumConfidence_1789-0_2" AS "OVO_SumConfidence_1789-0_2", "OVO_Votes_WithScale"."OVO_Vote_1789-08-14T00:0_3" AS "OVO_Vote_1789-08-14T00:0_3", "OVO_Votes_WithScale"."OVO_SumConfidence_1789-0_4" AS "OVO_SumConfidence_1789-0_4", "OVO_Votes_WithScale"."OVO_Vote_1789-09-14T00:0_5" AS "OVO_Vote_1789-09-14T00:0_5", "OVO_Votes_WithScale"."OVO_SumConfidence_1789-0_6" AS "OVO_SumConfidence_1789-0_6", "OVO_Votes_WithScale".max_abs_confidence AS max_abs_confidence, "OVO_Votes_WithScale"."OVO_Scale" AS "OVO_Scale", "OVO_Votes_WithScale"."OVO_Vote_1789-07-14T00:0_1" + "OVO_Votes_WithScale"."OVO_Scale" * "OVO_Votes_WithScale"."OVO_SumConfidence_1789-0_2" AS "Score_1789-07-14T00:00:00.000000000", "OVO_Votes_WithScale"."OVO_Vote_1789-08-14T00:0_3" + "OVO_Votes_WithScale"."OVO_Scale" * "OVO_Votes_WithScale"."OVO_SumConfidence_1789-0_4" AS "Score_1789-08-14T00:00:00.000000000", "OVO_Votes_WithScale"."OVO_Vote_1789-09-14T00:0_5" + "OVO_Votes_WithScale"."OVO_Scale" * "OVO_Votes_WithScale"."OVO_SumConfidence_1789-0_6" AS "Score_1789-09-14T00:00:00.000000000" 
FROM "OVO_Votes_WithScale") "KernAgg") "U"

-- Model deployment code

WITH orig_cte AS 
(SELECT "KernAgg"."KEY" AS "KEY", "KernAgg"."Score_1789-07-14T00:00:00.000000000" AS "Score_1789-07-14T00:00:00.000000000", "KernAgg"."Score_1789-08-14T00:00:00.000000000" AS "Score_1789-08-14T00:00:00.000000000", "KernAgg"."Score_1789-09-14T00:00:00.000000000" AS "Score_1789-09-14T00:00:00.000000000", CAST(NULL AS BINARY_DOUBLE) AS "Proba_1789-07-14T00:00:00.000000000", CAST(NULL AS BINARY_DOUBLE) AS "Proba_1789-08-14T00:00:00.000000000", CAST(NULL AS BINARY_DOUBLE) AS "Proba_1789-09-14T00:00:00.000000000", CAST(NULL AS BINARY_DOUBLE) AS "LogProba_1789-07-14T00:00:00.000000000", CAST(NULL AS BINARY_DOUBLE) AS "LogProba_1789-08-14T00:00:00.000000000", CAST(NULL AS BINARY_DOUBLE) AS "LogProba_1789-09-14T00:00:00.000000000", CAST(NULL AS NUMBER(19)) AS "Decision", CAST(NULL AS BINARY_DOUBLE) AS "DecisionProba" 
FROM "324_CODEGEN_J1QPW6_KERNAGG" "KernAgg"), 
score_class_union AS 
(SELECT scu."KEY_u" AS "KEY_u", scu.class AS class, scu."LogProba" AS "LogProba", scu."Proba" AS "Proba", scu."Score" AS "Score" 
FROM (SELECT orig_cte."KEY" AS "KEY_u", '1789-07-14T00:00:00.000000000' AS class, orig_cte."LogProba_1789-07-14T00:00:00.000000000" AS "LogProba", orig_cte."Proba_1789-07-14T00:00:00.000000000" AS "Proba", orig_cte."Score_1789-07-14T00:00:00.000000000" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", '1789-08-14T00:00:00.000000000' AS class, orig_cte."LogProba_1789-08-14T00:00:00.000000000" AS "LogProba", orig_cte."Proba_1789-08-14T00:00:00.000000000" AS "Proba", orig_cte."Score_1789-08-14T00:00:00.000000000" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", '1789-09-14T00:00:00.000000000' AS class, orig_cte."LogProba_1789-09-14T00:00:00.000000000" AS "LogProba", orig_cte."Proba_1789-09-14T00:00:00.000000000" AS "Proba", orig_cte."Score_1789-09-14T00:00:00.000000000" AS "Score" 
FROM orig_cte) scu), 
score_max AS 
(SELECT orig_cte."KEY" AS "KEY", orig_cte."Score_1789-07-14T00:00:00.000000000" AS "Score_1789-07-14T00:00:0_1", orig_cte."Score_1789-08-14T00:00:00.000000000" AS "Score_1789-08-14T00:00:0_2", orig_cte."Score_1789-09-14T00:00:00.000000000" AS "Score_1789-09-14T00:00:0_3", orig_cte."Proba_1789-07-14T00:00:00.000000000" AS "Proba_1789-07-14T00:00:0_4", orig_cte."Proba_1789-08-14T00:00:00.000000000" AS "Proba_1789-08-14T00:00:0_5", orig_cte."Proba_1789-09-14T00:00:00.000000000" AS "Proba_1789-09-14T00:00:0_6", orig_cte."LogProba_1789-07-14T00:00:00.000000000" AS "LogProba_1789-07-14T00:0_7", orig_cte."LogProba_1789-08-14T00:00:00.000000000" AS "LogProba_1789-08-14T00:0_8", orig_cte."LogProba_1789-09-14T00:00:00.000000000" AS "LogProba_1789-09-14T00:0_9", orig_cte."Decision" AS "Decision", orig_cte."DecisionProba" AS "DecisionProba", max_select."KEY_m" AS "KEY_m", max_select."max_Score" AS "max_Score" 
FROM orig_cte LEFT OUTER JOIN (SELECT score_class_union."KEY_u" AS "KEY_m", max(score_class_union."Score") AS "max_Score" 
FROM score_class_union GROUP BY score_class_union."KEY_u") max_select ON orig_cte."KEY" = max_select."KEY_m"), 
union_with_max AS 
(SELECT score_class_union."KEY_u" AS "KEY_u", score_class_union.class AS class, score_class_union."LogProba" AS "LogProba", score_class_union."Proba" AS "Proba", score_class_union."Score" AS "Score", score_max."KEY" AS "KEY", score_max."Score_1789-07-14T00:00:0_1" AS "Score_1789-07-14T00:00:0_1", score_max."Score_1789-08-14T00:00:0_2" AS "Score_1789-08-14T00:00:0_2", score_max."Score_1789-09-14T00:00:0_3" AS "Score_1789-09-14T00:00:0_3", score_max."Proba_1789-07-14T00:00:0_4" AS "Proba_1789-07-14T00:00:0_4", score_max."Proba_1789-08-14T00:00:0_5" AS "Proba_1789-08-14T00:00:0_5", score_max."Proba_1789-09-14T00:00:0_6" AS "Proba_1789-09-14T00:00:0_6", score_max."LogProba_1789-07-14T00:0_7" AS "LogProba_1789-07-14T00:0_7", score_max."LogProba_1789-08-14T00:0_8" AS "LogProba_1789-08-14T00:0_8", score_max."LogProba_1789-09-14T00:0_9" AS "LogProba_1789-09-14T00:0_9", score_max."Decision" AS "Decision", score_max."DecisionProba" AS "DecisionProba", score_max."KEY_m" AS "KEY_m", score_max."max_Score" AS "max_Score" 
FROM score_class_union LEFT OUTER JOIN score_max ON score_class_union."KEY_u" = score_max."KEY"), 
arg_max_cte AS 
(SELECT score_max."KEY" AS "KEY", score_max."Score_1789-07-14T00:00:0_1" AS "Score_1789-07-14T00:00:0_1", score_max."Score_1789-08-14T00:00:0_2" AS "Score_1789-08-14T00:00:0_2", score_max."Score_1789-09-14T00:00:0_3" AS "Score_1789-09-14T00:00:0_3", score_max."Proba_1789-07-14T00:00:0_4" AS "Proba_1789-07-14T00:00:0_4", score_max."Proba_1789-08-14T00:00:0_5" AS "Proba_1789-08-14T00:00:0_5", score_max."Proba_1789-09-14T00:00:0_6" AS "Proba_1789-09-14T00:00:0_6", score_max."LogProba_1789-07-14T00:0_7" AS "LogProba_1789-07-14T00:0_7", score_max."LogProba_1789-08-14T00:0_8" AS "LogProba_1789-08-14T00:0_8", score_max."LogProba_1789-09-14T00:0_9" AS "LogProba_1789-09-14T00:0_9", score_max."Decision" AS "Decision", score_max."DecisionProba" AS "DecisionProba", score_max."KEY_m" AS "KEY_m", score_max."max_Score" AS "max_Score", "arg_max_t_Score"."KEY_Score" AS "KEY_Score", "arg_max_t_Score"."arg_max_Score" AS "arg_max_Score" 
FROM score_max LEFT OUTER JOIN (SELECT union_with_max."KEY" AS "KEY_Score", min(union_with_max.class) AS "arg_max_Score" 
FROM union_with_max 
WHERE union_with_max."Score" >= union_with_max."max_Score" GROUP BY union_with_max."KEY") "arg_max_t_Score" ON score_max."KEY" = "arg_max_t_Score"."KEY_Score")
 SELECT arg_max_cte."KEY" AS "KEY", arg_max_cte."Score_1789-07-14T00:00:0_1" AS "Score_1789-07-14T00:00:00.000000000", arg_max_cte."Score_1789-08-14T00:00:0_2" AS "Score_1789-08-14T00:00:00.000000000", arg_max_cte."Score_1789-09-14T00:00:0_3" AS "Score_1789-09-14T00:00:00.000000000", arg_max_cte."Proba_1789-07-14T00:00:0_4" AS "Proba_1789-07-14T00:00:00.000000000", arg_max_cte."Proba_1789-08-14T00:00:0_5" AS "Proba_1789-08-14T00:00:00.000000000", arg_max_cte."Proba_1789-09-14T00:00:0_6" AS "Proba_1789-09-14T00:00:00.000000000", CASE WHEN (arg_max_cte."Proba_1789-07-14T00:00:0_4" IS NULL OR arg_max_cte."Proba_1789-07-14T00:00:0_4" > 0.0) THEN ln(arg_max_cte."Proba_1789-07-14T00:00:0_4") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_1789-07-14T00:00:00.000000000", CASE WHEN (arg_max_cte."Proba_1789-08-14T00:00:0_5" IS NULL OR arg_max_cte."Proba_1789-08-14T00:00:0_5" > 0.0) THEN ln(arg_max_cte."Proba_1789-08-14T00:00:0_5") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_1789-08-14T00:00:00.000000000", CASE WHEN (arg_max_cte."Proba_1789-09-14T00:00:0_6" IS NULL OR arg_max_cte."Proba_1789-09-14T00:00:0_6" > 0.0) THEN ln(arg_max_cte."Proba_1789-09-14T00:00:0_6") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_1789-09-14T00:00:00.000000000", arg_max_cte."arg_max_Score" AS "Decision", CASE WHEN (arg_max_cte."arg_max_Score" = '1789-07-14T00:00:00.000000000') THEN arg_max_cte."Proba_1789-07-14T00:00:0_4" WHEN (arg_max_cte."arg_max_Score" = '1789-08-14T00:00:00.000000000') THEN arg_max_cte."Proba_1789-08-14T00:00:0_5" WHEN (arg_max_cte."arg_max_Score" = '1789-09-14T00:00:00.000000000') THEN arg_max_cte."Proba_1789-09-14T00:00:0_6" END AS "DecisionProba" 
FROM arg_max_cte