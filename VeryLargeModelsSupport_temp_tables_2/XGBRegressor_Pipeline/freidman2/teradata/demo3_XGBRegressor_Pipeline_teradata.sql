-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2018

-- Model : XGBRegressor_Pipeline
-- Dataset : freidman2
-- Database : teradata


-- This SQL code can contain one or more statements, to be executed in the order they appear in this file.



-- Code For temporary table tmp_20180508185040_codegen_2knb23_ads_imp_1_out part 1. Create 


CREATE GLOBAL TEMPORARY TABLE tmp_20180508185040_codegen_2knb23_ads_imp_1_out  (
	"KEY" BIGINT, 
	imputer_output_2 DOUBLE PRECISION, 
	imputer_output_3 DOUBLE PRECISION, 
	imputer_output_4 DOUBLE PRECISION, 
	imputer_output_5 DOUBLE PRECISION
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table tmp_20180508185040_codegen_2knb23_ads_imp_1_out part 2. Populate

INSERT INTO tmp_20180508185040_codegen_2knb23_ads_imp_1_out ("KEY", imputer_output_2, imputer_output_3, imputer_output_4, imputer_output_5) SELECT "U"."KEY", "U".imputer_output_2, "U".imputer_output_3, "U".imputer_output_4, "U".imputer_output_5 
FROM (SELECT "ADS_imp_1_OUT"."KEY", "ADS_imp_1_OUT".imputer_output_2, "ADS_imp_1_OUT".imputer_output_3, "ADS_imp_1_OUT".imputer_output_4, "ADS_imp_1_OUT".imputer_output_5 
FROM (SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" IS NULL) THEN 43.79128122207401 ELSE "ADS"."Feature_0" END AS imputer_output_2, CASE WHEN ("ADS"."Feature_1" IS NULL) THEN 945.9672833084396 ELSE "ADS"."Feature_1" END AS imputer_output_3, CASE WHEN ("ADS"."Feature_2" IS NULL) THEN 0.5310009099975209 ELSE "ADS"."Feature_2" END AS imputer_output_4, CASE WHEN ("ADS"."Feature_3" IS NULL) THEN 6.139967152050499 ELSE "ADS"."Feature_3" END AS imputer_output_5 
FROM freidman2 AS "ADS") AS "ADS_imp_1_OUT") AS "U"

-- Code For temporary table tmp_20180508185040_codegen_gdz2wu_ads_sca_2_out part 1. Create 


CREATE GLOBAL TEMPORARY TABLE tmp_20180508185040_codegen_gdz2wu_ads_sca_2_out  (
	"KEY" BIGINT, 
	scaler_output_2 DOUBLE PRECISION, 
	scaler_output_3 DOUBLE PRECISION, 
	scaler_output_4 DOUBLE PRECISION, 
	scaler_output_5 DOUBLE PRECISION
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table tmp_20180508185040_codegen_gdz2wu_ads_sca_2_out part 2. Populate

INSERT INTO tmp_20180508185040_codegen_gdz2wu_ads_sca_2_out ("KEY", scaler_output_2, scaler_output_3, scaler_output_4, scaler_output_5) SELECT "U"."KEY", "U".scaler_output_2, "U".scaler_output_3, "U".scaler_output_4, "U".scaler_output_5 
FROM (SELECT "ADS_sca_2_OUT"."KEY", "ADS_sca_2_OUT".scaler_output_2, "ADS_sca_2_OUT".scaler_output_3, "ADS_sca_2_OUT".scaler_output_4, "ADS_sca_2_OUT".scaler_output_5 
FROM (SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", (CAST("ADS_imp_1_OUT".imputer_output_2 AS DOUBLE PRECISION) - CAST(43.79128122207402 AS DOUBLE PRECISION)) / CAST(26.03562357622511 AS DOUBLE PRECISION) AS scaler_output_2, (CAST("ADS_imp_1_OUT".imputer_output_3 AS DOUBLE PRECISION) - CAST(945.9672833084397 AS DOUBLE PRECISION)) / CAST(461.4552766146446 AS DOUBLE PRECISION) AS scaler_output_3, (CAST("ADS_imp_1_OUT".imputer_output_4 AS DOUBLE PRECISION) - CAST(0.531000909997521 AS DOUBLE PRECISION)) / CAST(0.290186328214479 AS DOUBLE PRECISION) AS scaler_output_4, (CAST("ADS_imp_1_OUT".imputer_output_5 AS DOUBLE PRECISION) - CAST(6.139967152050499 AS DOUBLE PRECISION)) / CAST(3.072917242564058 AS DOUBLE PRECISION) AS scaler_output_5 
FROM tmp_20180508185040_codegen_2knb23_ads_imp_1_out AS "ADS_imp_1_OUT") AS "ADS_sca_2_OUT") AS "U"

-- Code For temporary table tmp_20180508185040_codegen_6ftsro_xgb_b0 part 1. Create 


CREATE GLOBAL TEMPORARY TABLE tmp_20180508185040_codegen_6ftsro_xgb_b0  (
	"KEY" BIGINT, 
	"Estimator" DOUBLE PRECISION
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table tmp_20180508185040_codegen_6ftsro_xgb_b0 part 2. Populate

INSERT INTO tmp_20180508185040_codegen_6ftsro_xgb_b0 ("KEY", "Estimator") SELECT "U"."KEY", "U"."Estimator" 
FROM (WITH "DT_node_lookup" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 < CAST(0.017649224027991 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 < CAST(-1.43090009689331 AS DOUBLE PRECISION)) THEN 3 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 < CAST(-0.151213601231575 AS DOUBLE PRECISION)) THEN 7 ELSE 8 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 < CAST(-0.435367196798325 AS DOUBLE PRECISION)) THEN 5 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 < CAST(0.185650691390038 AS DOUBLE PRECISION)) THEN 9 ELSE 10 END END END AS node_id_2 
FROM tmp_20180508185040_codegen_gdz2wu_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data" AS 
(SELECT "Values".nid AS nid, CAST("Values"."Estimator" AS DOUBLE PRECISION) AS "Estimator" 
FROM (SELECT 3 AS nid, CAST(5.259021282196045 AS DOUBLE PRECISION) AS "Estimator" 
FROM dummy_cte UNION ALL SELECT 5 AS nid, CAST(26.5679988861084 AS DOUBLE PRECISION) AS "Estimator" 
FROM dummy_cte UNION ALL SELECT 7 AS nid, CAST(15.483972549438477 AS DOUBLE PRECISION) AS "Estimator" 
FROM dummy_cte UNION ALL SELECT 8 AS nid, CAST(38.08768844604492 AS DOUBLE PRECISION) AS "Estimator" 
FROM dummy_cte UNION ALL SELECT 9 AS nid, CAST(61.972469329833984 AS DOUBLE PRECISION) AS "Estimator" 
FROM dummy_cte UNION ALL SELECT 10 AS nid, CAST(93.55223846435547 AS DOUBLE PRECISION) AS "Estimator" 
FROM dummy_cte) AS "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".nid AS nid, "DT_node_data"."Estimator" AS "Estimator" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".nid), 
"XGB_Model_0" AS 
(SELECT "DT_Output"."KEY" AS "KEY", "DT_Output"."Estimator" AS "Estimator" 
FROM "DT_Output"), 
"DT_node_lookup_1" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 < CAST(-0.401717603206634 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 < CAST(-1.43090009689331 AS DOUBLE PRECISION)) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 < CAST(-0.435367196798325 AS DOUBLE PRECISION)) THEN 5 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 < CAST(0.3214071393013 AS DOUBLE PRECISION)) THEN 7 ELSE 8 END END END AS node_id_2 
FROM tmp_20180508185040_codegen_gdz2wu_ads_sca_2_out AS "ADS_sca_2_OUT"), 
"DT_node_data_1" AS 
(SELECT "Values".nid AS nid, CAST("Values"."Estimator" AS DOUBLE PRECISION) AS "Estimator" 
FROM (SELECT 3 AS nid, CAST(4.780928611755371 AS DOUBLE PRECISION) AS "Estimator" 
FROM dummy_cte UNION ALL SELECT 4 AS nid, CAST(20.260730743408203 AS DOUBLE PRECISION) AS "Estimator" 
FROM dummy_cte UNION ALL SELECT 5 AS nid, CAST(22.574623107910156 AS DOUBLE PRECISION) AS "Estimator" 
FROM dummy_cte UNION ALL SELECT 7 AS nid, CAST(58.41529083251953 AS DOUBLE PRECISION) AS "Estimator" 
FROM dummy_cte UNION ALL SELECT 8 AS nid, CAST(84.34954071044922 AS DOUBLE PRECISION) AS "Estimator" 
FROM dummy_cte) AS "Values"), 
"DT_Output_1" AS 
(SELECT "DT_node_lookup_1"."KEY" AS "KEY", "DT_node_lookup_1".node_id_2 AS node_id_2, "DT_node_data_1".nid AS nid, "DT_node_data_1"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_1" LEFT OUTER JOIN "DT_node_data_1" ON "DT_node_lookup_1".node_id_2 = "DT_node_data_1".nid), 
"XGB_Model_1" AS 
(SELECT "DT_Output_1"."KEY" AS "KEY", "DT_Output_1"."Estimator" AS "Estimator" 
FROM "DT_Output_1"), 
"DT_node_lookup_2" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 < CAST(0.017649224027991 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 < CAST(-0.983869314193726 AS DOUBLE PRECISION)) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 < CAST(-0.282100439071655 AS DOUBLE PRECISION)) THEN 5 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 < CAST(0.53165465593338 AS DOUBLE PRECISION)) THEN 7 ELSE 8 END END END AS node_id_2 
FROM tmp_20180508185040_codegen_gdz2wu_ads_sca_2_out AS "ADS_sca_2_OUT"), 
"DT_node_data_2" AS 
(SELECT "Values".nid AS nid, CAST("Values"."Estimator" AS DOUBLE PRECISION) AS "Estimator" 
FROM (SELECT 3 AS nid, CAST(8.467768669128418 AS DOUBLE PRECISION) AS "Estimator" 
FROM dummy_cte UNION ALL SELECT 4 AS nid, CAST(26.712514877319336 AS DOUBLE PRECISION) AS "Estimator" 
FROM dummy_cte UNION ALL SELECT 5 AS nid, CAST(23.58084487915039 AS DOUBLE PRECISION) AS "Estimator" 
FROM dummy_cte UNION ALL SELECT 7 AS nid, CAST(57.88615036010742 AS DOUBLE PRECISION) AS "Estimator" 
FROM dummy_cte UNION ALL SELECT 8 AS nid, CAST(84.63152313232422 AS DOUBLE PRECISION) AS "Estimator" 
FROM dummy_cte) AS "Values"), 
"DT_Output_2" AS 
(SELECT "DT_node_lookup_2"."KEY" AS "KEY", "DT_node_lookup_2".node_id_2 AS node_id_2, "DT_node_data_2".nid AS nid, "DT_node_data_2"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_2" LEFT OUTER JOIN "DT_node_data_2" ON "DT_node_lookup_2".node_id_2 = "DT_node_data_2".nid), 
"XGB_Model_2" AS 
(SELECT "DT_Output_2"."KEY" AS "KEY", "DT_Output_2"."Estimator" AS "Estimator" 
FROM "DT_Output_2"), 
"DT_node_lookup_3" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 < CAST(-0.401717603206634 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 < CAST(-1.43090009689331 AS DOUBLE PRECISION)) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 < CAST(-0.875524580478668 AS DOUBLE PRECISION)) THEN 5 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 < CAST(0.047109298408031 AS DOUBLE PRECISION)) THEN 7 ELSE 8 END END END AS node_id_2 
FROM tmp_20180508185040_codegen_gdz2wu_ads_sca_2_out AS "ADS_sca_2_OUT"), 
"DT_node_data_3" AS 
(SELECT "Values".nid AS nid, CAST("Values"."Estimator" AS DOUBLE PRECISION) AS "Estimator" 
FROM (SELECT 3 AS nid, CAST(3.576501607894898 AS DOUBLE PRECISION) AS "Estimator" 
FROM dummy_cte UNION ALL SELECT 4 AS nid, CAST(16.533885955810547 AS DOUBLE PRECISION) AS "Estimator" 
FROM dummy_cte UNION ALL SELECT 5 AS nid, CAST(13.682024002075195 AS DOUBLE PRECISION) AS "Estimator" 
FROM dummy_cte UNION ALL SELECT 7 AS nid, CAST(41.46207809448242 AS DOUBLE PRECISION) AS "Estimator" 
FROM dummy_cte UNION ALL SELECT 8 AS nid, CAST(67.26363372802734 AS DOUBLE PRECISION) AS "Estimator" 
FROM dummy_cte) AS "Values"), 
"DT_Output_3" AS 
(SELECT "DT_node_lookup_3"."KEY" AS "KEY", "DT_node_lookup_3".node_id_2 AS node_id_2, "DT_node_data_3".nid AS nid, "DT_node_data_3"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_3" LEFT OUTER JOIN "DT_node_data_3" ON "DT_node_lookup_3".node_id_2 = "DT_node_data_3".nid), 
"XGB_Model_3" AS 
(SELECT "DT_Output_3"."KEY" AS "KEY", "DT_Output_3"."Estimator" AS "Estimator" 
FROM "DT_Output_3"), 
"DT_node_lookup_4" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 < CAST(0.017649224027991 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 < CAST(-0.983869314193726 AS DOUBLE PRECISION)) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 < CAST(-0.13761106133461 AS DOUBLE PRECISION)) THEN 5 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 < CAST(0.923073649406433 AS DOUBLE PRECISION)) THEN 7 ELSE 8 END END END AS node_id_2 
FROM tmp_20180508185040_codegen_gdz2wu_ads_sca_2_out AS "ADS_sca_2_OUT"), 
"DT_node_data_4" AS 
(SELECT "Values".nid AS nid, CAST("Values"."Estimator" AS DOUBLE PRECISION) AS "Estimator" 
FROM (SELECT 3 AS nid, CAST(6.826356410980225 AS DOUBLE PRECISION) AS "Estimator" 
FROM dummy_cte UNION ALL SELECT 4 AS nid, CAST(21.607534408569336 AS DOUBLE PRECISION) AS "Estimator" 
FROM dummy_cte UNION ALL SELECT 5 AS nid, CAST(22.628299713134766 AS DOUBLE PRECISION) AS "Estimator" 
FROM dummy_cte UNION ALL SELECT 7 AS nid, CAST(49.021934509277344 AS DOUBLE PRECISION) AS "Estimator" 
FROM dummy_cte UNION ALL SELECT 8 AS nid, CAST(73.65652465820312 AS DOUBLE PRECISION) AS "Estimator" 
FROM dummy_cte) AS "Values"), 
"DT_Output_4" AS 
(SELECT "DT_node_lookup_4"."KEY" AS "KEY", "DT_node_lookup_4".node_id_2 AS node_id_2, "DT_node_data_4".nid AS nid, "DT_node_data_4"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_4" LEFT OUTER JOIN "DT_node_data_4" ON "DT_node_lookup_4".node_id_2 = "DT_node_data_4".nid), 
"XGB_Model_4" AS 
(SELECT "DT_Output_4"."KEY" AS "KEY", "DT_Output_4"."Estimator" AS "Estimator" 
FROM "DT_Output_4"), 
"DT_node_lookup_5" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 < CAST(0.017649224027991 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 < CAST(-0.106022387742996 AS DOUBLE PRECISION)) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 < CAST(-0.875524580478668 AS DOUBLE PRECISION)) THEN 5 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 < CAST(0.53165465593338 AS DOUBLE PRECISION)) THEN 7 ELSE 8 END END END AS node_id_2 
FROM tmp_20180508185040_codegen_gdz2wu_ads_sca_2_out AS "ADS_sca_2_OUT"), 
"DT_node_data_5" AS 
(SELECT "Values".nid AS nid, CAST("Values"."Estimator" AS DOUBLE PRECISION) AS "Estimator" 
FROM (SELECT 3 AS nid, CAST(5.80258321762085 AS DOUBLE PRECISION) AS "Estimator" 
FROM dummy_cte UNION ALL SELECT 4 AS nid, CAST(19.919614791870117 AS DOUBLE PRECISION) AS "Estimator" 
FROM dummy_cte UNION ALL SELECT 5 AS nid, CAST(10.882296562194824 AS DOUBLE PRECISION) AS "Estimator" 
FROM dummy_cte UNION ALL SELECT 7 AS nid, CAST(40.92027282714844 AS DOUBLE PRECISION) AS "Estimator" 
FROM dummy_cte UNION ALL SELECT 8 AS nid, CAST(65.1378402709961 AS DOUBLE PRECISION) AS "Estimator" 
FROM dummy_cte) AS "Values"), 
"DT_Output_5" AS 
(SELECT "DT_node_lookup_5"."KEY" AS "KEY", "DT_node_lookup_5".node_id_2 AS node_id_2, "DT_node_data_5".nid AS nid, "DT_node_data_5"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_5" LEFT OUTER JOIN "DT_node_data_5" ON "DT_node_lookup_5".node_id_2 = "DT_node_data_5".nid), 
"XGB_Model_5" AS 
(SELECT "DT_Output_5"."KEY" AS "KEY", "DT_Output_5"."Estimator" AS "Estimator" 
FROM "DT_Output_5"), 
"DT_node_lookup_6" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 < CAST(-0.401717603206634 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 < CAST(-1.43090009689331 AS DOUBLE PRECISION)) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 < CAST(-0.875524580478668 AS DOUBLE PRECISION)) THEN 5 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 < CAST(0.53165465593338 AS DOUBLE PRECISION)) THEN 7 ELSE 8 END END END AS node_id_2 
FROM tmp_20180508185040_codegen_gdz2wu_ads_sca_2_out AS "ADS_sca_2_OUT"), 
"DT_node_data_6" AS 
(SELECT "Values".nid AS nid, CAST("Values"."Estimator" AS DOUBLE PRECISION) AS "Estimator" 
FROM (SELECT 3 AS nid, CAST(1.589932799339294 AS DOUBLE PRECISION) AS "Estimator" 
FROM dummy_cte UNION ALL SELECT 4 AS nid, CAST(12.174163818359377 AS DOUBLE PRECISION) AS "Estimator" 
FROM dummy_cte UNION ALL SELECT 5 AS nid, CAST(9.440058708190918 AS DOUBLE PRECISION) AS "Estimator" 
FROM dummy_cte UNION ALL SELECT 7 AS nid, CAST(36.46533203125 AS DOUBLE PRECISION) AS "Estimator" 
FROM dummy_cte UNION ALL SELECT 8 AS nid, CAST(57.04753494262695 AS DOUBLE PRECISION) AS "Estimator" 
FROM dummy_cte) AS "Values"), 
"DT_Output_6" AS 
(SELECT "DT_node_lookup_6"."KEY" AS "KEY", "DT_node_lookup_6".node_id_2 AS node_id_2, "DT_node_data_6".nid AS nid, "DT_node_data_6"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_6" LEFT OUTER JOIN "DT_node_data_6" ON "DT_node_lookup_6".node_id_2 = "DT_node_data_6".nid), 
"XGB_Model_6" AS 
(SELECT "DT_Output_6"."KEY" AS "KEY", "DT_Output_6"."Estimator" AS "Estimator" 
FROM "DT_Output_6"), 
"DT_node_lookup_7" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 < CAST(0.536782562732697 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 < CAST(-0.401717603206634 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 < CAST(-1.43090009689331 AS DOUBLE PRECISION)) THEN 7 ELSE 8 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 < CAST(-0.004617859609425 AS DOUBLE PRECISION)) THEN 9 ELSE 10 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 < CAST(-0.053445134311914 AS DOUBLE PRECISION)) THEN 5 ELSE 6 END END AS node_id_2 
FROM tmp_20180508185040_codegen_gdz2wu_ads_sca_2_out AS "ADS_sca_2_OUT"), 
"DT_node_data_7" AS 
(SELECT "Values".nid AS nid, CAST("Values"."Estimator" AS DOUBLE PRECISION) AS "Estimator" 
FROM (SELECT 5 AS nid, CAST(20.551504135131836 AS DOUBLE PRECISION) AS "Estimator" 
FROM dummy_cte UNION ALL SELECT 6 AS nid, CAST(53.802059173583984 AS DOUBLE PRECISION) AS "Estimator" 
FROM dummy_cte UNION ALL SELECT 7 AS nid, CAST(1.445393443107605 AS DOUBLE PRECISION) AS "Estimator" 
FROM dummy_cte UNION ALL SELECT 8 AS nid, CAST(11.024381637573242 AS DOUBLE PRECISION) AS "Estimator" 
FROM dummy_cte UNION ALL SELECT 9 AS nid, CAST(11.313101768493652 AS DOUBLE PRECISION) AS "Estimator" 
FROM dummy_cte UNION ALL SELECT 10 AS nid, CAST(32.20111846923828 AS DOUBLE PRECISION) AS "Estimator" 
FROM dummy_cte) AS "Values"), 
"DT_Output_7" AS 
(SELECT "DT_node_lookup_7"."KEY" AS "KEY", "DT_node_lookup_7".node_id_2 AS node_id_2, "DT_node_data_7".nid AS nid, "DT_node_data_7"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_7" LEFT OUTER JOIN "DT_node_data_7" ON "DT_node_lookup_7".node_id_2 = "DT_node_data_7".nid), 
"XGB_Model_7" AS 
(SELECT "DT_Output_7"."KEY" AS "KEY", "DT_Output_7"."Estimator" AS "Estimator" 
FROM "DT_Output_7"), 
"DT_node_lookup_8" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 < CAST(0.899604201316834 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 < CAST(-0.349178671836853 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 < CAST(-1.017771482467651 AS DOUBLE PRECISION)) THEN 5 ELSE 6 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 < CAST(-0.836223483085632 AS DOUBLE PRECISION)) THEN 7 ELSE 8 END END ELSE 2 END AS node_id_2 
FROM tmp_20180508185040_codegen_gdz2wu_ads_sca_2_out AS "ADS_sca_2_OUT"), 
"DT_node_data_8" AS 
(SELECT "Values".nid AS nid, CAST("Values"."Estimator" AS DOUBLE PRECISION) AS "Estimator" 
FROM (SELECT 2 AS nid, CAST(43.654998779296875 AS DOUBLE PRECISION) AS "Estimator" 
FROM dummy_cte UNION ALL SELECT 5 AS nid, CAST(1.001256942749024 AS DOUBLE PRECISION) AS "Estimator" 
FROM dummy_cte UNION ALL SELECT 6 AS nid, CAST(9.976913452148438 AS DOUBLE PRECISION) AS "Estimator" 
FROM dummy_cte UNION ALL SELECT 7 AS nid, CAST(6.890918731689453 AS DOUBLE PRECISION) AS "Estimator" 
FROM dummy_cte UNION ALL SELECT 8 AS nid, CAST(29.832544326782227 AS DOUBLE PRECISION) AS "Estimator" 
FROM dummy_cte) AS "Values"), 
"DT_Output_8" AS 
(SELECT "DT_node_lookup_8"."KEY" AS "KEY", "DT_node_lookup_8".node_id_2 AS node_id_2, "DT_node_data_8".nid AS nid, "DT_node_data_8"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_8" LEFT OUTER JOIN "DT_node_data_8" ON "DT_node_lookup_8".node_id_2 = "DT_node_data_8".nid), 
"XGB_Model_8" AS 
(SELECT "DT_Output_8"."KEY" AS "KEY", "DT_Output_8"."Estimator" AS "Estimator" 
FROM "DT_Output_8"), 
"DT_node_lookup_9" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 < CAST(-0.270216584205627 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 < CAST(-1.336119413375854 AS DOUBLE PRECISION)) THEN 3 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 < CAST(-0.57095205783844 AS DOUBLE PRECISION)) THEN 7 ELSE 8 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 < CAST(0.332568049430847 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 < CAST(-0.946339011192322 AS DOUBLE PRECISION)) THEN 9 ELSE 10 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 < CAST(0.274586796760559 AS DOUBLE PRECISION)) THEN 11 ELSE 12 END END END AS node_id_2 
FROM tmp_20180508185040_codegen_gdz2wu_ads_sca_2_out AS "ADS_sca_2_OUT"), 
"DT_node_data_9" AS 
(SELECT "Values".nid AS nid, CAST("Values"."Estimator" AS DOUBLE PRECISION) AS "Estimator" 
FROM (SELECT 3 AS nid, CAST(-0.025147248059511 AS DOUBLE PRECISION) AS "Estimator" 
FROM dummy_cte UNION ALL SELECT 7 AS nid, CAST(3.825543642044068 AS DOUBLE PRECISION) AS "Estimator" 
FROM dummy_cte UNION ALL SELECT 8 AS nid, CAST(15.561128616333008 AS DOUBLE PRECISION) AS "Estimator" 
FROM dummy_cte UNION ALL SELECT 9 AS nid, CAST(4.447967052459717 AS DOUBLE PRECISION) AS "Estimator" 
FROM dummy_cte UNION ALL SELECT 10 AS nid, CAST(22.06629753112793 AS DOUBLE PRECISION) AS "Estimator" 
FROM dummy_cte UNION ALL SELECT 11 AS nid, CAST(29.23740005493164 AS DOUBLE PRECISION) AS "Estimator" 
FROM dummy_cte UNION ALL SELECT 12 AS nid, CAST(48.71183395385742 AS DOUBLE PRECISION) AS "Estimator" 
FROM dummy_cte) AS "Values"), 
"DT_Output_9" AS 
(SELECT "DT_node_lookup_9"."KEY" AS "KEY", "DT_node_lookup_9".node_id_2 AS node_id_2, "DT_node_data_9".nid AS nid, "DT_node_data_9"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_9" LEFT OUTER JOIN "DT_node_data_9" ON "DT_node_lookup_9".node_id_2 = "DT_node_data_9".nid), 
"XGB_Model_9" AS 
(SELECT "DT_Output_9"."KEY" AS "KEY", "DT_Output_9"."Estimator" AS "Estimator" 
FROM "DT_Output_9")
 SELECT "XGB_B0"."KEY", "XGB_B0"."Estimator" 
FROM (SELECT "XGB_esu_0"."KEY" AS "KEY", "XGB_esu_0"."Estimator" AS "Estimator" 
FROM (SELECT "XGB_Model_0"."KEY" AS "KEY", "XGB_Model_0"."Estimator" AS "Estimator" 
FROM "XGB_Model_0" UNION ALL SELECT "XGB_Model_1"."KEY" AS "KEY", "XGB_Model_1"."Estimator" AS "Estimator" 
FROM "XGB_Model_1" UNION ALL SELECT "XGB_Model_2"."KEY" AS "KEY", "XGB_Model_2"."Estimator" AS "Estimator" 
FROM "XGB_Model_2" UNION ALL SELECT "XGB_Model_3"."KEY" AS "KEY", "XGB_Model_3"."Estimator" AS "Estimator" 
FROM "XGB_Model_3" UNION ALL SELECT "XGB_Model_4"."KEY" AS "KEY", "XGB_Model_4"."Estimator" AS "Estimator" 
FROM "XGB_Model_4" UNION ALL SELECT "XGB_Model_5"."KEY" AS "KEY", "XGB_Model_5"."Estimator" AS "Estimator" 
FROM "XGB_Model_5" UNION ALL SELECT "XGB_Model_6"."KEY" AS "KEY", "XGB_Model_6"."Estimator" AS "Estimator" 
FROM "XGB_Model_6" UNION ALL SELECT "XGB_Model_7"."KEY" AS "KEY", "XGB_Model_7"."Estimator" AS "Estimator" 
FROM "XGB_Model_7" UNION ALL SELECT "XGB_Model_8"."KEY" AS "KEY", "XGB_Model_8"."Estimator" AS "Estimator" 
FROM "XGB_Model_8" UNION ALL SELECT "XGB_Model_9"."KEY" AS "KEY", "XGB_Model_9"."Estimator" AS "Estimator" 
FROM "XGB_Model_9") AS "XGB_esu_0") AS "XGB_B0") AS "U"

-- Code For temporary table tmp_20180508185040_codegen_osipw8_xgb_b1 part 1. Create 


CREATE GLOBAL TEMPORARY TABLE tmp_20180508185040_codegen_osipw8_xgb_b1  (
	"KEY" BIGINT, 
	"Estimator" DOUBLE PRECISION
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table tmp_20180508185040_codegen_osipw8_xgb_b1 part 2. Populate

INSERT INTO tmp_20180508185040_codegen_osipw8_xgb_b1 ("KEY", "Estimator") SELECT "U"."KEY", "U"."Estimator" 
FROM (WITH "DT_node_lookup_10" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 < CAST(0.899604201316834 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 < CAST(-0.349178671836853 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 < CAST(-1.017771482467651 AS DOUBLE PRECISION)) THEN 5 ELSE 6 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 < CAST(-0.836223483085632 AS DOUBLE PRECISION)) THEN 7 ELSE 8 END END ELSE 2 END AS node_id_2 
FROM tmp_20180508185040_codegen_gdz2wu_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data_10" AS 
(SELECT "Values".nid AS nid, CAST("Values"."Estimator" AS DOUBLE PRECISION) AS "Estimator" 
FROM (SELECT 2 AS nid, CAST(36.406124114990234 AS DOUBLE PRECISION) AS "Estimator" 
FROM dummy_cte UNION ALL SELECT 5 AS nid, CAST(0.716773211956024 AS DOUBLE PRECISION) AS "Estimator" 
FROM dummy_cte UNION ALL SELECT 6 AS nid, CAST(8.222705841064453 AS DOUBLE PRECISION) AS "Estimator" 
FROM dummy_cte UNION ALL SELECT 7 AS nid, CAST(5.59077787399292 AS DOUBLE PRECISION) AS "Estimator" 
FROM dummy_cte UNION ALL SELECT 8 AS nid, CAST(24.247375488281246 AS DOUBLE PRECISION) AS "Estimator" 
FROM dummy_cte) AS "Values"), 
"DT_Output_10" AS 
(SELECT "DT_node_lookup_10"."KEY" AS "KEY", "DT_node_lookup_10".node_id_2 AS node_id_2, "DT_node_data_10".nid AS nid, "DT_node_data_10"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_10" LEFT OUTER JOIN "DT_node_data_10" ON "DT_node_lookup_10".node_id_2 = "DT_node_data_10".nid), 
"XGB_Model_10" AS 
(SELECT "DT_Output_10"."KEY" AS "KEY", "DT_Output_10"."Estimator" AS "Estimator" 
FROM "DT_Output_10"), 
"DT_node_lookup_11" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 < CAST(0.536782562732697 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 < CAST(0.473203420639038 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 < CAST(-0.052467692643404 AS DOUBLE PRECISION)) THEN 7 ELSE 8 END ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 < CAST(0.045455519109964 AS DOUBLE PRECISION)) THEN 5 ELSE 6 END END AS node_id_2 
FROM tmp_20180508185040_codegen_gdz2wu_ads_sca_2_out AS "ADS_sca_2_OUT"), 
"DT_node_data_11" AS 
(SELECT "Values".nid AS nid, CAST("Values"."Estimator" AS DOUBLE PRECISION) AS "Estimator" 
FROM (SELECT 4 AS nid, CAST(17.29083251953125 AS DOUBLE PRECISION) AS "Estimator" 
FROM dummy_cte UNION ALL SELECT 5 AS nid, CAST(13.511589050292969 AS DOUBLE PRECISION) AS "Estimator" 
FROM dummy_cte UNION ALL SELECT 6 AS nid, CAST(38.966041564941406 AS DOUBLE PRECISION) AS "Estimator" 
FROM dummy_cte UNION ALL SELECT 7 AS nid, CAST(2.614951372146606 AS DOUBLE PRECISION) AS "Estimator" 
FROM dummy_cte UNION ALL SELECT 8 AS nid, CAST(9.837066650390623 AS DOUBLE PRECISION) AS "Estimator" 
FROM dummy_cte) AS "Values"), 
"DT_Output_11" AS 
(SELECT "DT_node_lookup_11"."KEY" AS "KEY", "DT_node_lookup_11".node_id_2 AS node_id_2, "DT_node_data_11".nid AS nid, "DT_node_data_11"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_11" LEFT OUTER JOIN "DT_node_data_11" ON "DT_node_lookup_11".node_id_2 = "DT_node_data_11".nid), 
"XGB_Model_11" AS 
(SELECT "DT_Output_11"."KEY" AS "KEY", "DT_Output_11"."Estimator" AS "Estimator" 
FROM "DT_Output_11"), 
"DT_node_lookup_12" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 < CAST(-0.270216584205627 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 < CAST(-1.336119413375854 AS DOUBLE PRECISION)) THEN 3 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 < CAST(-0.57095205783844 AS DOUBLE PRECISION)) THEN 7 ELSE 8 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 < CAST(-0.521620273590088 AS DOUBLE PRECISION)) THEN 5 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 < CAST(0.977974116802216 AS DOUBLE PRECISION)) THEN 9 ELSE 10 END END END AS node_id_2 
FROM tmp_20180508185040_codegen_gdz2wu_ads_sca_2_out AS "ADS_sca_2_OUT"), 
"DT_node_data_12" AS 
(SELECT "Values".nid AS nid, CAST("Values"."Estimator" AS DOUBLE PRECISION) AS "Estimator" 
FROM (SELECT 3 AS nid, CAST(-1.177745461463928 AS DOUBLE PRECISION) AS "Estimator" 
FROM dummy_cte UNION ALL SELECT 5 AS nid, CAST(5.64267110824585 AS DOUBLE PRECISION) AS "Estimator" 
FROM dummy_cte UNION ALL SELECT 7 AS nid, CAST(2.7211594581604 AS DOUBLE PRECISION) AS "Estimator" 
FROM dummy_cte UNION ALL SELECT 8 AS nid, CAST(11.557232856750488 AS DOUBLE PRECISION) AS "Estimator" 
FROM dummy_cte UNION ALL SELECT 9 AS nid, CAST(21.083812713623047 AS DOUBLE PRECISION) AS "Estimator" 
FROM dummy_cte UNION ALL SELECT 10 AS nid, CAST(39.55588912963867 AS DOUBLE PRECISION) AS "Estimator" 
FROM dummy_cte) AS "Values"), 
"DT_Output_12" AS 
(SELECT "DT_node_lookup_12"."KEY" AS "KEY", "DT_node_lookup_12".node_id_2 AS node_id_2, "DT_node_data_12".nid AS nid, "DT_node_data_12"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_12" LEFT OUTER JOIN "DT_node_data_12" ON "DT_node_lookup_12".node_id_2 = "DT_node_data_12".nid), 
"XGB_Model_12" AS 
(SELECT "DT_Output_12"."KEY" AS "KEY", "DT_Output_12"."Estimator" AS "Estimator" 
FROM "DT_Output_12"), 
"DT_node_lookup_13" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 < CAST(0.229385524988174 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 < CAST(0.473203420639038 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 < CAST(-0.68732875585556 AS DOUBLE PRECISION)) THEN 7 ELSE 8 END ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 < CAST(0.281660348176956 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 < CAST(-0.686859607696533 AS DOUBLE PRECISION)) THEN 9 ELSE 10 END ELSE 6 END END AS node_id_2 
FROM tmp_20180508185040_codegen_gdz2wu_ads_sca_2_out AS "ADS_sca_2_OUT"), 
"DT_node_data_13" AS 
(SELECT "Values".nid AS nid, CAST("Values"."Estimator" AS DOUBLE PRECISION) AS "Estimator" 
FROM (SELECT 4 AS nid, CAST(12.52935791015625 AS DOUBLE PRECISION) AS "Estimator" 
FROM dummy_cte UNION ALL SELECT 6 AS nid, CAST(34.3646125793457 AS DOUBLE PRECISION) AS "Estimator" 
FROM dummy_cte UNION ALL SELECT 7 AS nid, CAST(1.054616332054138 AS DOUBLE PRECISION) AS "Estimator" 
FROM dummy_cte UNION ALL SELECT 8 AS nid, CAST(4.928728103637695 AS DOUBLE PRECISION) AS "Estimator" 
FROM dummy_cte UNION ALL SELECT 9 AS nid, CAST(5.411577224731445 AS DOUBLE PRECISION) AS "Estimator" 
FROM dummy_cte UNION ALL SELECT 10 AS nid, CAST(18.062278747558594 AS DOUBLE PRECISION) AS "Estimator" 
FROM dummy_cte) AS "Values"), 
"DT_Output_13" AS 
(SELECT "DT_node_lookup_13"."KEY" AS "KEY", "DT_node_lookup_13".node_id_2 AS node_id_2, "DT_node_data_13".nid AS nid, "DT_node_data_13"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_13" LEFT OUTER JOIN "DT_node_data_13" ON "DT_node_lookup_13".node_id_2 = "DT_node_data_13".nid), 
"XGB_Model_13" AS 
(SELECT "DT_Output_13"."KEY" AS "KEY", "DT_Output_13"."Estimator" AS "Estimator" 
FROM "DT_Output_13"), 
"DT_node_lookup_14" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 < CAST(0.899604201316834 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 < CAST(1.493329524993896 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 < CAST(-0.953619718551636 AS DOUBLE PRECISION)) THEN 5 ELSE 6 END ELSE 4 END ELSE 2 END AS node_id_2 
FROM tmp_20180508185040_codegen_gdz2wu_ads_sca_2_out AS "ADS_sca_2_OUT"), 
"DT_node_data_14" AS 
(SELECT "Values".nid AS nid, CAST("Values"."Estimator" AS DOUBLE PRECISION) AS "Estimator" 
FROM (SELECT 2 AS nid, CAST(25.514925003051754 AS DOUBLE PRECISION) AS "Estimator" 
FROM dummy_cte UNION ALL SELECT 4 AS nid, CAST(20.060646057128906 AS DOUBLE PRECISION) AS "Estimator" 
FROM dummy_cte UNION ALL SELECT 5 AS nid, CAST(-0.022940369322896 AS DOUBLE PRECISION) AS "Estimator" 
FROM dummy_cte UNION ALL SELECT 6 AS nid, CAST(8.464066505432129 AS DOUBLE PRECISION) AS "Estimator" 
FROM dummy_cte) AS "Values"), 
"DT_Output_14" AS 
(SELECT "DT_node_lookup_14"."KEY" AS "KEY", "DT_node_lookup_14".node_id_2 AS node_id_2, "DT_node_data_14".nid AS nid, "DT_node_data_14"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_14" LEFT OUTER JOIN "DT_node_data_14" ON "DT_node_lookup_14".node_id_2 = "DT_node_data_14".nid), 
"XGB_Model_14" AS 
(SELECT "DT_Output_14"."KEY" AS "KEY", "DT_Output_14"."Estimator" AS "Estimator" 
FROM "DT_Output_14"), 
"DT_node_lookup_15" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 < CAST(-0.401717603206634 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 < CAST(-1.43090009689331 AS DOUBLE PRECISION)) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 < CAST(0.7321457862854 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 < CAST(-0.953619718551636 AS DOUBLE PRECISION)) THEN 7 ELSE 8 END ELSE 6 END END AS node_id_2 
FROM tmp_20180508185040_codegen_gdz2wu_ads_sca_2_out AS "ADS_sca_2_OUT"), 
"DT_node_data_15" AS 
(SELECT "Values".nid AS nid, CAST("Values"."Estimator" AS DOUBLE PRECISION) AS "Estimator" 
FROM (SELECT 3 AS nid, CAST(-2.2534339427948 AS DOUBLE PRECISION) AS "Estimator" 
FROM dummy_cte UNION ALL SELECT 4 AS nid, CAST(4.601406097412109 AS DOUBLE PRECISION) AS "Estimator" 
FROM dummy_cte UNION ALL SELECT 6 AS nid, CAST(30.499692916870117 AS DOUBLE PRECISION) AS "Estimator" 
FROM dummy_cte UNION ALL SELECT 7 AS nid, CAST(0.778982043266296 AS DOUBLE PRECISION) AS "Estimator" 
FROM dummy_cte UNION ALL SELECT 8 AS nid, CAST(14.180508613586426 AS DOUBLE PRECISION) AS "Estimator" 
FROM dummy_cte) AS "Values"), 
"DT_Output_15" AS 
(SELECT "DT_node_lookup_15"."KEY" AS "KEY", "DT_node_lookup_15".node_id_2 AS node_id_2, "DT_node_data_15".nid AS nid, "DT_node_data_15"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_15" LEFT OUTER JOIN "DT_node_data_15" ON "DT_node_lookup_15".node_id_2 = "DT_node_data_15".nid), 
"XGB_Model_15" AS 
(SELECT "DT_Output_15"."KEY" AS "KEY", "DT_Output_15"."Estimator" AS "Estimator" 
FROM "DT_Output_15")
 SELECT "XGB_B1"."KEY", "XGB_B1"."Estimator" 
FROM (SELECT "XGB_esu_1"."KEY" AS "KEY", "XGB_esu_1"."Estimator" AS "Estimator" 
FROM (SELECT "XGB_Model_10"."KEY" AS "KEY", "XGB_Model_10"."Estimator" AS "Estimator" 
FROM "XGB_Model_10" UNION ALL SELECT "XGB_Model_11"."KEY" AS "KEY", "XGB_Model_11"."Estimator" AS "Estimator" 
FROM "XGB_Model_11" UNION ALL SELECT "XGB_Model_12"."KEY" AS "KEY", "XGB_Model_12"."Estimator" AS "Estimator" 
FROM "XGB_Model_12" UNION ALL SELECT "XGB_Model_13"."KEY" AS "KEY", "XGB_Model_13"."Estimator" AS "Estimator" 
FROM "XGB_Model_13" UNION ALL SELECT "XGB_Model_14"."KEY" AS "KEY", "XGB_Model_14"."Estimator" AS "Estimator" 
FROM "XGB_Model_14" UNION ALL SELECT "XGB_Model_15"."KEY" AS "KEY", "XGB_Model_15"."Estimator" AS "Estimator" 
FROM "XGB_Model_15") AS "XGB_esu_1") AS "XGB_B1") AS "U"

-- Code For temporary table tmp_20180508185040_codegen_0x7txg_xgb_union part 1. Create 


CREATE GLOBAL TEMPORARY TABLE tmp_20180508185040_codegen_0x7txg_xgb_union  (
	"KEY" BIGINT, 
	"Estimator" DOUBLE PRECISION
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table tmp_20180508185040_codegen_0x7txg_xgb_union part 2. Populate

INSERT INTO tmp_20180508185040_codegen_0x7txg_xgb_union ("KEY", "Estimator") SELECT "U"."KEY", "U"."Estimator" 
FROM (SELECT "XGB_Union"."KEY", "XGB_Union"."Estimator" 
FROM (SELECT "XGB_EnsembleUnion"."KEY" AS "KEY", "XGB_EnsembleUnion"."Estimator" AS "Estimator" 
FROM (SELECT "XGB_B0"."KEY" AS "KEY", "XGB_B0"."Estimator" AS "Estimator" 
FROM tmp_20180508185040_codegen_6ftsro_xgb_b0 AS "XGB_B0" UNION ALL SELECT "XGB_B1"."KEY" AS "KEY", "XGB_B1"."Estimator" AS "Estimator" 
FROM tmp_20180508185040_codegen_osipw8_xgb_b1 AS "XGB_B1") AS "XGB_EnsembleUnion") AS "XGB_Union") AS "U"

-- Code For temporary table tmp_20180508185040_codegen_lw0gmk_xgb_sum part 1. Create 


CREATE GLOBAL TEMPORARY TABLE tmp_20180508185040_codegen_lw0gmk_xgb_sum  (
	"KEY" BIGINT, 
	"Estimator" DOUBLE PRECISION
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table tmp_20180508185040_codegen_lw0gmk_xgb_sum part 2. Populate

INSERT INTO tmp_20180508185040_codegen_lw0gmk_xgb_sum ("KEY", "Estimator") SELECT "U"."KEY", "U"."Estimator" 
FROM (SELECT "XGB_sum"."KEY", "XGB_sum"."Estimator" 
FROM (SELECT "T"."KEY" AS "KEY", CAST("T"."Estimator" AS DOUBLE PRECISION) AS "Estimator" 
FROM (SELECT "XGB_Union"."KEY" AS "KEY", sum("XGB_Union"."Estimator") AS "Estimator" 
FROM tmp_20180508185040_codegen_0x7txg_xgb_union AS "XGB_Union" GROUP BY "XGB_Union"."KEY") AS "T") AS "XGB_sum") AS "U"

-- Model deployment code

SELECT "XGB_sum"."KEY" AS "KEY", "XGB_sum"."Estimator" + CAST(0.5 AS DOUBLE PRECISION) AS "Estimator" 
FROM tmp_20180508185040_codegen_lw0gmk_xgb_sum AS "XGB_sum"