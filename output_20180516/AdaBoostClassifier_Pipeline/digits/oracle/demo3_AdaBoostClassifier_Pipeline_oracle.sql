-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2018

-- Model : AdaBoostClassifier_Pipeline
-- Dataset : digits
-- Database : oracle


-- This SQL code can contain one or more statements, to be executed in the order they appear in this file.



-- Code For temporary table DEGEN_D49CYB_ADS_IMP_1_OUT part 1. Create 


CREATE GLOBAL TEMPORARY TABLE "DEGEN_D49CYB_ADS_IMP_1_OUT" (
	"KEY" NUMBER(19), 
	impter_2 BINARY_DOUBLE, 
	impter_3 BINARY_DOUBLE, 
	impter_4 BINARY_DOUBLE, 
	impter_5 BINARY_DOUBLE, 
	impter_6 BINARY_DOUBLE, 
	impter_7 BINARY_DOUBLE, 
	impter_8 BINARY_DOUBLE, 
	impter_9 BINARY_DOUBLE, 
	impter_10 BINARY_DOUBLE, 
	impter_11 BINARY_DOUBLE, 
	impter_12 BINARY_DOUBLE, 
	impter_13 BINARY_DOUBLE, 
	impter_14 BINARY_DOUBLE, 
	impter_15 BINARY_DOUBLE, 
	impter_16 BINARY_DOUBLE, 
	impter_17 BINARY_DOUBLE, 
	impter_18 BINARY_DOUBLE, 
	impter_19 BINARY_DOUBLE, 
	impter_20 BINARY_DOUBLE, 
	impter_21 BINARY_DOUBLE, 
	impter_22 BINARY_DOUBLE, 
	impter_23 BINARY_DOUBLE, 
	impter_24 BINARY_DOUBLE, 
	impter_25 BINARY_DOUBLE, 
	impter_26 BINARY_DOUBLE, 
	impter_27 BINARY_DOUBLE, 
	impter_28 BINARY_DOUBLE, 
	impter_29 BINARY_DOUBLE, 
	impter_30 BINARY_DOUBLE, 
	impter_31 BINARY_DOUBLE, 
	impter_32 BINARY_DOUBLE, 
	impter_33 BINARY_DOUBLE, 
	impter_34 BINARY_DOUBLE, 
	impter_35 BINARY_DOUBLE, 
	impter_36 BINARY_DOUBLE, 
	impter_37 BINARY_DOUBLE, 
	impter_38 BINARY_DOUBLE, 
	impter_39 BINARY_DOUBLE, 
	impter_40 BINARY_DOUBLE, 
	impter_41 BINARY_DOUBLE, 
	impter_42 BINARY_DOUBLE, 
	impter_43 BINARY_DOUBLE, 
	impter_44 BINARY_DOUBLE, 
	impter_45 BINARY_DOUBLE, 
	impter_46 BINARY_DOUBLE, 
	impter_47 BINARY_DOUBLE, 
	impter_48 BINARY_DOUBLE, 
	impter_49 BINARY_DOUBLE, 
	impter_50 BINARY_DOUBLE, 
	impter_51 BINARY_DOUBLE, 
	impter_52 BINARY_DOUBLE, 
	impter_53 BINARY_DOUBLE, 
	impter_54 BINARY_DOUBLE, 
	impter_55 BINARY_DOUBLE, 
	impter_56 BINARY_DOUBLE, 
	impter_57 BINARY_DOUBLE, 
	impter_58 BINARY_DOUBLE, 
	impter_59 BINARY_DOUBLE, 
	impter_60 BINARY_DOUBLE, 
	impter_61 BINARY_DOUBLE, 
	impter_62 BINARY_DOUBLE, 
	impter_63 BINARY_DOUBLE, 
	impter_64 BINARY_DOUBLE, 
	impter_65 BINARY_DOUBLE
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table DEGEN_D49CYB_ADS_IMP_1_OUT part 2. Populate

INSERT INTO "DEGEN_D49CYB_ADS_IMP_1_OUT" ("KEY", impter_2, impter_3, impter_4, impter_5, impter_6, impter_7, impter_8, impter_9, impter_10, impter_11, impter_12, impter_13, impter_14, impter_15, impter_16, impter_17, impter_18, impter_19, impter_20, impter_21, impter_22, impter_23, impter_24, impter_25, impter_26, impter_27, impter_28, impter_29, impter_30, impter_31, impter_32, impter_33, impter_34, impter_35, impter_36, impter_37, impter_38, impter_39, impter_40, impter_41, impter_42, impter_43, impter_44, impter_45, impter_46, impter_47, impter_48, impter_49, impter_50, impter_51, impter_52, impter_53, impter_54, impter_55, impter_56, impter_57, impter_58, impter_59, impter_60, impter_61, impter_62, impter_63, impter_64, impter_65) SELECT "U"."KEY", "U".impter_2, "U".impter_3, "U".impter_4, "U".impter_5, "U".impter_6, "U".impter_7, "U".impter_8, "U".impter_9, "U".impter_10, "U".impter_11, "U".impter_12, "U".impter_13, "U".impter_14, "U".impter_15, "U".impter_16, "U".impter_17, "U".impter_18, "U".impter_19, "U".impter_20, "U".impter_21, "U".impter_22, "U".impter_23, "U".impter_24, "U".impter_25, "U".impter_26, "U".impter_27, "U".impter_28, "U".impter_29, "U".impter_30, "U".impter_31, "U".impter_32, "U".impter_33, "U".impter_34, "U".impter_35, "U".impter_36, "U".impter_37, "U".impter_38, "U".impter_39, "U".impter_40, "U".impter_41, "U".impter_42, "U".impter_43, "U".impter_44, "U".impter_45, "U".impter_46, "U".impter_47, "U".impter_48, "U".impter_49, "U".impter_50, "U".impter_51, "U".impter_52, "U".impter_53, "U".impter_54, "U".impter_55, "U".impter_56, "U".impter_57, "U".impter_58, "U".impter_59, "U".impter_60, "U".impter_61, "U".impter_62, "U".impter_63, "U".impter_64, "U".impter_65 
FROM (SELECT "ADS_imp_1_OUT"."KEY", "ADS_imp_1_OUT".impter_2, "ADS_imp_1_OUT".impter_3, "ADS_imp_1_OUT".impter_4, "ADS_imp_1_OUT".impter_5, "ADS_imp_1_OUT".impter_6, "ADS_imp_1_OUT".impter_7, "ADS_imp_1_OUT".impter_8, "ADS_imp_1_OUT".impter_9, "ADS_imp_1_OUT".impter_10, "ADS_imp_1_OUT".impter_11, "ADS_imp_1_OUT".impter_12, "ADS_imp_1_OUT".impter_13, "ADS_imp_1_OUT".impter_14, "ADS_imp_1_OUT".impter_15, "ADS_imp_1_OUT".impter_16, "ADS_imp_1_OUT".impter_17, "ADS_imp_1_OUT".impter_18, "ADS_imp_1_OUT".impter_19, "ADS_imp_1_OUT".impter_20, "ADS_imp_1_OUT".impter_21, "ADS_imp_1_OUT".impter_22, "ADS_imp_1_OUT".impter_23, "ADS_imp_1_OUT".impter_24, "ADS_imp_1_OUT".impter_25, "ADS_imp_1_OUT".impter_26, "ADS_imp_1_OUT".impter_27, "ADS_imp_1_OUT".impter_28, "ADS_imp_1_OUT".impter_29, "ADS_imp_1_OUT".impter_30, "ADS_imp_1_OUT".impter_31, "ADS_imp_1_OUT".impter_32, "ADS_imp_1_OUT".impter_33, "ADS_imp_1_OUT".impter_34, "ADS_imp_1_OUT".impter_35, "ADS_imp_1_OUT".impter_36, "ADS_imp_1_OUT".impter_37, "ADS_imp_1_OUT".impter_38, "ADS_imp_1_OUT".impter_39, "ADS_imp_1_OUT".impter_40, "ADS_imp_1_OUT".impter_41, "ADS_imp_1_OUT".impter_42, "ADS_imp_1_OUT".impter_43, "ADS_imp_1_OUT".impter_44, "ADS_imp_1_OUT".impter_45, "ADS_imp_1_OUT".impter_46, "ADS_imp_1_OUT".impter_47, "ADS_imp_1_OUT".impter_48, "ADS_imp_1_OUT".impter_49, "ADS_imp_1_OUT".impter_50, "ADS_imp_1_OUT".impter_51, "ADS_imp_1_OUT".impter_52, "ADS_imp_1_OUT".impter_53, "ADS_imp_1_OUT".impter_54, "ADS_imp_1_OUT".impter_55, "ADS_imp_1_OUT".impter_56, "ADS_imp_1_OUT".impter_57, "ADS_imp_1_OUT".impter_58, "ADS_imp_1_OUT".impter_59, "ADS_imp_1_OUT".impter_60, "ADS_imp_1_OUT".impter_61, "ADS_imp_1_OUT".impter_62, "ADS_imp_1_OUT".impter_63, "ADS_imp_1_OUT".impter_64, "ADS_imp_1_OUT".impter_65 
FROM (SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" IS NULL) THEN 0.0 ELSE "ADS"."Feature_0" END AS impter_2, CASE WHEN ("ADS"."Feature_1" IS NULL) THEN 0.2950591510090466 ELSE "ADS"."Feature_1" END AS impter_3, CASE WHEN ("ADS"."Feature_2" IS NULL) THEN 5.104384133611691 ELSE "ADS"."Feature_2" END AS impter_4, CASE WHEN ("ADS"."Feature_3" IS NULL) THEN 11.791927627000696 ELSE "ADS"."Feature_3" END AS impter_5, CASE WHEN ("ADS"."Feature_4" IS NULL) THEN 11.84829505915101 ELSE "ADS"."Feature_4" END AS impter_6, CASE WHEN ("ADS"."Feature_5" IS NULL) THEN 5.823242867084203 ELSE "ADS"."Feature_5" END AS impter_7, CASE WHEN ("ADS"."Feature_6" IS NULL) THEN 1.394572025052192 ELSE "ADS"."Feature_6" END AS impter_8, CASE WHEN ("ADS"."Feature_7" IS NULL) THEN 0.13430758524704245 ELSE "ADS"."Feature_7" END AS impter_9, CASE WHEN ("ADS"."Feature_8" IS NULL) THEN 0.0055671537926235215 ELSE "ADS"."Feature_8" END AS impter_10, CASE WHEN ("ADS"."Feature_9" IS NULL) THEN 1.977035490605428 ELSE "ADS"."Feature_9" END AS impter_11, CASE WHEN ("ADS"."Feature_10" IS NULL) THEN 10.362560890744607 ELSE "ADS"."Feature_10" END AS impter_12, CASE WHEN ("ADS"."Feature_11" IS NULL) THEN 12.03061934585943 ELSE "ADS"."Feature_11" END AS impter_13, CASE WHEN ("ADS"."Feature_12" IS NULL) THEN 10.271398747390396 ELSE "ADS"."Feature_12" END AS impter_14, CASE WHEN ("ADS"."Feature_13" IS NULL) THEN 8.121781489213639 ELSE "ADS"."Feature_13" END AS impter_15, CASE WHEN ("ADS"."Feature_14" IS NULL) THEN 1.8921363952679193 ELSE "ADS"."Feature_14" END AS impter_16, CASE WHEN ("ADS"."Feature_15" IS NULL) THEN 0.11760612386917188 ELSE "ADS"."Feature_15" END AS impter_17, CASE WHEN ("ADS"."Feature_16" IS NULL) THEN 0.0020876826722338203 ELSE "ADS"."Feature_16" END AS impter_18, CASE WHEN ("ADS"."Feature_17" IS NULL) THEN 2.5427974947807934 ELSE "ADS"."Feature_17" END AS impter_19, CASE WHEN ("ADS"."Feature_18" IS NULL) THEN 9.935281837160751 ELSE "ADS"."Feature_18" END AS impter_20, CASE WHEN ("ADS"."Feature_19" IS NULL) THEN 7.099512874043145 ELSE "ADS"."Feature_19" END AS impter_21, CASE WHEN ("ADS"."Feature_20" IS NULL) THEN 7.132915796798887 ELSE "ADS"."Feature_20" END AS impter_22, CASE WHEN ("ADS"."Feature_21" IS NULL) THEN 7.81419624217119 ELSE "ADS"."Feature_21" END AS impter_23, CASE WHEN ("ADS"."Feature_22" IS NULL) THEN 1.8434237995824634 ELSE "ADS"."Feature_22" END AS impter_24, CASE WHEN ("ADS"."Feature_23" IS NULL) THEN 0.05775922059846903 ELSE "ADS"."Feature_23" END AS impter_25, CASE WHEN ("ADS"."Feature_24" IS NULL) THEN 0.0006958942240779402 ELSE "ADS"."Feature_24" END AS impter_26, CASE WHEN ("ADS"."Feature_25" IS NULL) THEN 2.4808629088378567 ELSE "ADS"."Feature_25" END AS impter_27, CASE WHEN ("ADS"."Feature_26" IS NULL) THEN 9.143354210160055 ELSE "ADS"."Feature_26" END AS impter_28, CASE WHEN ("ADS"."Feature_27" IS NULL) THEN 8.960334029227557 ELSE "ADS"."Feature_27" END AS impter_29, CASE WHEN ("ADS"."Feature_28" IS NULL) THEN 10.03688239387613 ELSE "ADS"."Feature_28" END AS impter_30, CASE WHEN ("ADS"."Feature_29" IS NULL) THEN 7.5949895615866385 ELSE "ADS"."Feature_29" END AS impter_31, CASE WHEN ("ADS"."Feature_30" IS NULL) THEN 2.337508698677801 ELSE "ADS"."Feature_30" END AS impter_32, CASE WHEN ("ADS"."Feature_31" IS NULL) THEN 0.0027835768963117608 ELSE "ADS"."Feature_31" END AS impter_33, CASE WHEN ("ADS"."Feature_32" IS NULL) THEN 0.0 ELSE "ADS"."Feature_32" END AS impter_34, CASE WHEN ("ADS"."Feature_33" IS NULL) THEN 2.3319415448851775 ELSE "ADS"."Feature_33" END AS impter_35, CASE WHEN ("ADS"."Feature_34" IS NULL) THEN 7.608907446068198 ELSE "ADS"."Feature_34" END AS impter_36, CASE WHEN ("ADS"."Feature_35" IS NULL) THEN 9.028531663187195 ELSE "ADS"."Feature_35" END AS impter_37, CASE WHEN ("ADS"."Feature_36" IS NULL) THEN 10.270006958942242 ELSE "ADS"."Feature_36" END AS impter_38, CASE WHEN ("ADS"."Feature_37" IS NULL) THEN 8.806541405706332 ELSE "ADS"."Feature_37" END AS impter_39, CASE WHEN ("ADS"."Feature_38" IS NULL) THEN 2.8754349338900487 ELSE "ADS"."Feature_38" END AS impter_40, CASE WHEN ("ADS"."Feature_39" IS NULL) THEN 0.0 ELSE "ADS"."Feature_39" END AS impter_41, CASE WHEN ("ADS"."Feature_40" IS NULL) THEN 0.010438413361169102 ELSE "ADS"."Feature_40" END AS impter_42, CASE WHEN ("ADS"."Feature_41" IS NULL) THEN 1.5755045233124565 ELSE "ADS"."Feature_41" END AS impter_43, CASE WHEN ("ADS"."Feature_42" IS NULL) THEN 6.858733472512178 ELSE "ADS"."Feature_42" END AS impter_44, CASE WHEN ("ADS"."Feature_43" IS NULL) THEN 7.258872651356993 ELSE "ADS"."Feature_43" END AS impter_45, CASE WHEN ("ADS"."Feature_44" IS NULL) THEN 7.710508002783577 ELSE "ADS"."Feature_44" END AS impter_46, CASE WHEN ("ADS"."Feature_45" IS NULL) THEN 8.281141266527488 ELSE "ADS"."Feature_45" END AS impter_47, CASE WHEN ("ADS"."Feature_46" IS NULL) THEN 3.432150313152401 ELSE "ADS"."Feature_46" END AS impter_48, CASE WHEN ("ADS"."Feature_47" IS NULL) THEN 0.031315240083507306 ELSE "ADS"."Feature_47" END AS impter_49, CASE WHEN ("ADS"."Feature_48" IS NULL) THEN 0.009046624913013222 ELSE "ADS"."Feature_48" END AS impter_50, CASE WHEN ("ADS"."Feature_49" IS NULL) THEN 0.708420320111343 ELSE "ADS"."Feature_49" END AS impter_51, CASE WHEN ("ADS"."Feature_50" IS NULL) THEN 7.492693110647181 ELSE "ADS"."Feature_50" END AS impter_52, CASE WHEN ("ADS"."Feature_51" IS NULL) THEN 9.529575504523313 ELSE "ADS"."Feature_51" END AS impter_53, CASE WHEN ("ADS"."Feature_52" IS NULL) THEN 9.541405706332638 ELSE "ADS"."Feature_52" END AS impter_54, CASE WHEN ("ADS"."Feature_53" IS NULL) THEN 8.754349338900488 ELSE "ADS"."Feature_53" END AS impter_55, CASE WHEN ("ADS"."Feature_54" IS NULL) THEN 3.7397355601948505 ELSE "ADS"."Feature_54" END AS impter_56, CASE WHEN ("ADS"."Feature_55" IS NULL) THEN 0.21920668058455114 ELSE "ADS"."Feature_55" END AS impter_57, CASE WHEN ("ADS"."Feature_56" IS NULL) THEN 0.0006958942240779402 ELSE "ADS"."Feature_56" END AS impter_58, CASE WHEN ("ADS"."Feature_57" IS NULL) THEN 0.26374391092553934 ELSE "ADS"."Feature_57" END AS impter_59, CASE WHEN ("ADS"."Feature_58" IS NULL) THEN 5.474599860821155 ELSE "ADS"."Feature_58" END AS impter_60, CASE WHEN ("ADS"."Feature_59" IS NULL) THEN 12.097425191370911 ELSE "ADS"."Feature_59" END AS impter_61, CASE WHEN ("ADS"."Feature_60" IS NULL) THEN 11.8580375782881 ELSE "ADS"."Feature_60" END AS impter_62, CASE WHEN ("ADS"."Feature_61" IS NULL) THEN 6.716771050800278 ELSE "ADS"."Feature_61" END AS impter_63, CASE WHEN ("ADS"."Feature_62" IS NULL) THEN 2.0869867780097424 ELSE "ADS"."Feature_62" END AS impter_64, CASE WHEN ("ADS"."Feature_63" IS NULL) THEN 0.3862212943632568 ELSE "ADS"."Feature_63" END AS impter_65 
FROM "DIGITS" "ADS") "ADS_imp_1_OUT") "U"

-- Code For temporary table DEGEN_YN11LY_ADS_SCA_2_OUT part 1. Create 


CREATE GLOBAL TEMPORARY TABLE "DEGEN_YN11LY_ADS_SCA_2_OUT" (
	"KEY" NUMBER(19), 
	scaler_2 BINARY_DOUBLE, 
	scaler_3 BINARY_DOUBLE, 
	scaler_4 BINARY_DOUBLE, 
	scaler_5 BINARY_DOUBLE, 
	scaler_6 BINARY_DOUBLE, 
	scaler_7 BINARY_DOUBLE, 
	scaler_8 BINARY_DOUBLE, 
	scaler_9 BINARY_DOUBLE, 
	scaler_10 BINARY_DOUBLE, 
	scaler_11 BINARY_DOUBLE, 
	scaler_12 BINARY_DOUBLE, 
	scaler_13 BINARY_DOUBLE, 
	scaler_14 BINARY_DOUBLE, 
	scaler_15 BINARY_DOUBLE, 
	scaler_16 BINARY_DOUBLE, 
	scaler_17 BINARY_DOUBLE, 
	scaler_18 BINARY_DOUBLE, 
	scaler_19 BINARY_DOUBLE, 
	scaler_20 BINARY_DOUBLE, 
	scaler_21 BINARY_DOUBLE, 
	scaler_22 BINARY_DOUBLE, 
	scaler_23 BINARY_DOUBLE, 
	scaler_24 BINARY_DOUBLE, 
	scaler_25 BINARY_DOUBLE, 
	scaler_26 BINARY_DOUBLE, 
	scaler_27 BINARY_DOUBLE, 
	scaler_28 BINARY_DOUBLE, 
	scaler_29 BINARY_DOUBLE, 
	scaler_30 BINARY_DOUBLE, 
	scaler_31 BINARY_DOUBLE, 
	scaler_32 BINARY_DOUBLE, 
	scaler_33 BINARY_DOUBLE, 
	scaler_34 BINARY_DOUBLE, 
	scaler_35 BINARY_DOUBLE, 
	scaler_36 BINARY_DOUBLE, 
	scaler_37 BINARY_DOUBLE, 
	scaler_38 BINARY_DOUBLE, 
	scaler_39 BINARY_DOUBLE, 
	scaler_40 BINARY_DOUBLE, 
	scaler_41 BINARY_DOUBLE, 
	scaler_42 BINARY_DOUBLE, 
	scaler_43 BINARY_DOUBLE, 
	scaler_44 BINARY_DOUBLE, 
	scaler_45 BINARY_DOUBLE, 
	scaler_46 BINARY_DOUBLE, 
	scaler_47 BINARY_DOUBLE, 
	scaler_48 BINARY_DOUBLE, 
	scaler_49 BINARY_DOUBLE, 
	scaler_50 BINARY_DOUBLE, 
	scaler_51 BINARY_DOUBLE, 
	scaler_52 BINARY_DOUBLE, 
	scaler_53 BINARY_DOUBLE, 
	scaler_54 BINARY_DOUBLE, 
	scaler_55 BINARY_DOUBLE, 
	scaler_56 BINARY_DOUBLE, 
	scaler_57 BINARY_DOUBLE, 
	scaler_58 BINARY_DOUBLE, 
	scaler_59 BINARY_DOUBLE, 
	scaler_60 BINARY_DOUBLE, 
	scaler_61 BINARY_DOUBLE, 
	scaler_62 BINARY_DOUBLE, 
	scaler_63 BINARY_DOUBLE, 
	scaler_64 BINARY_DOUBLE, 
	scaler_65 BINARY_DOUBLE
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table DEGEN_YN11LY_ADS_SCA_2_OUT part 2. Populate

INSERT INTO "DEGEN_YN11LY_ADS_SCA_2_OUT" ("KEY", scaler_2, scaler_3, scaler_4, scaler_5, scaler_6, scaler_7, scaler_8, scaler_9, scaler_10, scaler_11, scaler_12, scaler_13, scaler_14, scaler_15, scaler_16, scaler_17, scaler_18, scaler_19, scaler_20, scaler_21, scaler_22, scaler_23, scaler_24, scaler_25, scaler_26, scaler_27, scaler_28, scaler_29, scaler_30, scaler_31, scaler_32, scaler_33, scaler_34, scaler_35, scaler_36, scaler_37, scaler_38, scaler_39, scaler_40, scaler_41, scaler_42, scaler_43, scaler_44, scaler_45, scaler_46, scaler_47, scaler_48, scaler_49, scaler_50, scaler_51, scaler_52, scaler_53, scaler_54, scaler_55, scaler_56, scaler_57, scaler_58, scaler_59, scaler_60, scaler_61, scaler_62, scaler_63, scaler_64, scaler_65) SELECT "U"."KEY", "U".scaler_2, "U".scaler_3, "U".scaler_4, "U".scaler_5, "U".scaler_6, "U".scaler_7, "U".scaler_8, "U".scaler_9, "U".scaler_10, "U".scaler_11, "U".scaler_12, "U".scaler_13, "U".scaler_14, "U".scaler_15, "U".scaler_16, "U".scaler_17, "U".scaler_18, "U".scaler_19, "U".scaler_20, "U".scaler_21, "U".scaler_22, "U".scaler_23, "U".scaler_24, "U".scaler_25, "U".scaler_26, "U".scaler_27, "U".scaler_28, "U".scaler_29, "U".scaler_30, "U".scaler_31, "U".scaler_32, "U".scaler_33, "U".scaler_34, "U".scaler_35, "U".scaler_36, "U".scaler_37, "U".scaler_38, "U".scaler_39, "U".scaler_40, "U".scaler_41, "U".scaler_42, "U".scaler_43, "U".scaler_44, "U".scaler_45, "U".scaler_46, "U".scaler_47, "U".scaler_48, "U".scaler_49, "U".scaler_50, "U".scaler_51, "U".scaler_52, "U".scaler_53, "U".scaler_54, "U".scaler_55, "U".scaler_56, "U".scaler_57, "U".scaler_58, "U".scaler_59, "U".scaler_60, "U".scaler_61, "U".scaler_62, "U".scaler_63, "U".scaler_64, "U".scaler_65 
FROM (SELECT "ADS_sca_2_OUT"."KEY", "ADS_sca_2_OUT".scaler_2, "ADS_sca_2_OUT".scaler_3, "ADS_sca_2_OUT".scaler_4, "ADS_sca_2_OUT".scaler_5, "ADS_sca_2_OUT".scaler_6, "ADS_sca_2_OUT".scaler_7, "ADS_sca_2_OUT".scaler_8, "ADS_sca_2_OUT".scaler_9, "ADS_sca_2_OUT".scaler_10, "ADS_sca_2_OUT".scaler_11, "ADS_sca_2_OUT".scaler_12, "ADS_sca_2_OUT".scaler_13, "ADS_sca_2_OUT".scaler_14, "ADS_sca_2_OUT".scaler_15, "ADS_sca_2_OUT".scaler_16, "ADS_sca_2_OUT".scaler_17, "ADS_sca_2_OUT".scaler_18, "ADS_sca_2_OUT".scaler_19, "ADS_sca_2_OUT".scaler_20, "ADS_sca_2_OUT".scaler_21, "ADS_sca_2_OUT".scaler_22, "ADS_sca_2_OUT".scaler_23, "ADS_sca_2_OUT".scaler_24, "ADS_sca_2_OUT".scaler_25, "ADS_sca_2_OUT".scaler_26, "ADS_sca_2_OUT".scaler_27, "ADS_sca_2_OUT".scaler_28, "ADS_sca_2_OUT".scaler_29, "ADS_sca_2_OUT".scaler_30, "ADS_sca_2_OUT".scaler_31, "ADS_sca_2_OUT".scaler_32, "ADS_sca_2_OUT".scaler_33, "ADS_sca_2_OUT".scaler_34, "ADS_sca_2_OUT".scaler_35, "ADS_sca_2_OUT".scaler_36, "ADS_sca_2_OUT".scaler_37, "ADS_sca_2_OUT".scaler_38, "ADS_sca_2_OUT".scaler_39, "ADS_sca_2_OUT".scaler_40, "ADS_sca_2_OUT".scaler_41, "ADS_sca_2_OUT".scaler_42, "ADS_sca_2_OUT".scaler_43, "ADS_sca_2_OUT".scaler_44, "ADS_sca_2_OUT".scaler_45, "ADS_sca_2_OUT".scaler_46, "ADS_sca_2_OUT".scaler_47, "ADS_sca_2_OUT".scaler_48, "ADS_sca_2_OUT".scaler_49, "ADS_sca_2_OUT".scaler_50, "ADS_sca_2_OUT".scaler_51, "ADS_sca_2_OUT".scaler_52, "ADS_sca_2_OUT".scaler_53, "ADS_sca_2_OUT".scaler_54, "ADS_sca_2_OUT".scaler_55, "ADS_sca_2_OUT".scaler_56, "ADS_sca_2_OUT".scaler_57, "ADS_sca_2_OUT".scaler_58, "ADS_sca_2_OUT".scaler_59, "ADS_sca_2_OUT".scaler_60, "ADS_sca_2_OUT".scaler_61, "ADS_sca_2_OUT".scaler_62, "ADS_sca_2_OUT".scaler_63, "ADS_sca_2_OUT".scaler_64, "ADS_sca_2_OUT".scaler_65 
FROM (SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", (CAST("ADS_imp_1_OUT".impter_2 AS BINARY_DOUBLE) - 0.0) / 1.0 AS scaler_2, (CAST("ADS_imp_1_OUT".impter_3 AS BINARY_DOUBLE) - 0.2950591510090466) / 0.886335971513945 AS scaler_3, (CAST("ADS_imp_1_OUT".impter_4 AS BINARY_DOUBLE) - 5.104384133611691) / 4.714562522364591 AS scaler_4, (CAST("ADS_imp_1_OUT".impter_5 AS BINARY_DOUBLE) - 11.791927627000696) / 4.242705177561994 AS scaler_5, (CAST("ADS_imp_1_OUT".impter_6 AS BINARY_DOUBLE) - 11.84829505915101) / 4.298607850485783 AS scaler_6, (CAST("ADS_imp_1_OUT".impter_7 AS BINARY_DOUBLE) - 5.823242867084203) / 5.664052593352563 AS scaler_7, (CAST("ADS_imp_1_OUT".impter_8 AS BINARY_DOUBLE) - 1.394572025052192) / 3.3672537498889787 AS scaler_8, (CAST("ADS_imp_1_OUT".impter_9 AS BINARY_DOUBLE) - 0.13430758524704245) / 1.0738488961060884 AS scaler_9, (CAST("ADS_imp_1_OUT".impter_10 AS BINARY_DOUBLE) - 0.0055671537926235215) / 0.09121259500521199 AS scaler_10, (CAST("ADS_imp_1_OUT".impter_11 AS BINARY_DOUBLE) - 1.977035490605428) / 3.1765759513448373 AS scaler_11, (CAST("ADS_imp_1_OUT".impter_12 AS BINARY_DOUBLE) - 10.362560890744607) / 5.427455768043861 AS scaler_12, (CAST("ADS_imp_1_OUT".impter_13 AS BINARY_DOUBLE) - 12.03061934585943) / 3.9240043126958595 AS scaler_13, (CAST("ADS_imp_1_OUT".impter_14 AS BINARY_DOUBLE) - 10.271398747390396) / 4.751306782008032 AS scaler_14, (CAST("ADS_imp_1_OUT".impter_15 AS BINARY_DOUBLE) - 8.121781489213639) / 6.055742470420089 AS scaler_15, (CAST("ADS_imp_1_OUT".impter_16 AS BINARY_DOUBLE) - 1.8921363952679193) / 3.6358496015605493 AS scaler_16, (CAST("ADS_imp_1_OUT".impter_17 AS BINARY_DOUBLE) - 0.11760612386917188) / 0.8809135848407257 AS scaler_17, (CAST("ADS_imp_1_OUT".impter_18 AS BINARY_DOUBLE) - 0.0020876826722338203) / 0.04564344699180706 AS scaler_18, (CAST("ADS_imp_1_OUT".impter_19 AS BINARY_DOUBLE) - 2.5427974947807934) / 3.535939148296097 AS scaler_19, (CAST("ADS_imp_1_OUT".impter_20 AS BINARY_DOUBLE) - 9.935281837160751) / 5.674233427535142 AS scaler_20, (CAST("ADS_imp_1_OUT".impter_21 AS BINARY_DOUBLE) - 7.099512874043145) / 5.828968622118506 AS scaler_21, (CAST("ADS_imp_1_OUT".impter_22 AS BINARY_DOUBLE) - 7.132915796798887) / 6.164166380758013 AS scaler_22, (CAST("ADS_imp_1_OUT".impter_23 AS BINARY_DOUBLE) - 7.81419624217119) / 6.237214641441282 AS scaler_23, (CAST("ADS_imp_1_OUT".impter_24 AS BINARY_DOUBLE) - 1.8434237995824634) / 3.3552968495259408 AS scaler_24, (CAST("ADS_imp_1_OUT".impter_25 AS BINARY_DOUBLE) - 0.05775922059846903) / 0.47057168084472595 AS scaler_25, (CAST("ADS_imp_1_OUT".impter_26 AS BINARY_DOUBLE) - 0.0006958942240779402) / 0.0263706267522565 AS scaler_26, (CAST("ADS_imp_1_OUT".impter_27 AS BINARY_DOUBLE) - 2.4808629088378567) / 3.1579531140532993 AS scaler_27, (CAST("ADS_imp_1_OUT".impter_28 AS BINARY_DOUBLE) - 9.143354210160055) / 6.211448620771221 AS scaler_28, (CAST("ADS_imp_1_OUT".impter_29 AS BINARY_DOUBLE) - 8.960334029227557) / 5.872499336895779 AS scaler_29, (CAST("ADS_imp_1_OUT".impter_30 AS BINARY_DOUBLE) - 10.03688239387613) / 6.131194138822921 AS scaler_30, (CAST("ADS_imp_1_OUT".impter_31 AS BINARY_DOUBLE) - 7.5949895615866385) / 5.883009512311774 AS scaler_31, (CAST("ADS_imp_1_OUT".impter_32 AS BINARY_DOUBLE) - 2.337508698677801) / 3.7555163121005397 AS scaler_32, (CAST("ADS_imp_1_OUT".impter_33 AS BINARY_DOUBLE) - 0.0027835768963117608) / 0.05268613286220741 AS scaler_33, (CAST("ADS_imp_1_OUT".impter_34 AS BINARY_DOUBLE) - 0.0) / 1.0 AS scaler_34, (CAST("ADS_imp_1_OUT".impter_35 AS BINARY_DOUBLE) - 2.3319415448851775) / 3.520361676701363 AS scaler_35, (CAST("ADS_imp_1_OUT".impter_36 AS BINARY_DOUBLE) - 7.608907446068198) / 6.337427127154217 AS scaler_36, (CAST("ADS_imp_1_OUT".impter_37 AS BINARY_DOUBLE) - 9.028531663187195) / 6.255398792908601 AS scaler_37, (CAST("ADS_imp_1_OUT".impter_38 AS BINARY_DOUBLE) - 10.270006958942242) / 5.918328236602452 AS scaler_38, (CAST("ADS_imp_1_OUT".impter_39 AS BINARY_DOUBLE) - 8.806541405706332) / 5.862505948752236 AS scaler_39, (CAST("ADS_imp_1_OUT".impter_40 AS BINARY_DOUBLE) - 2.8754349338900487) / 3.521551388880749 AS scaler_40, (CAST("ADS_imp_1_OUT".impter_41 AS BINARY_DOUBLE) - 0.0) / 1.0 AS scaler_41, (CAST("ADS_imp_1_OUT".impter_42 AS BINARY_DOUBLE) - 0.010438413361169102) / 0.16012222149778146 AS scaler_42, (CAST("ADS_imp_1_OUT".impter_43 AS BINARY_DOUBLE) - 1.5755045233124565) / 3.0148158575591246 AS scaler_43, (CAST("ADS_imp_1_OUT".impter_44 AS BINARY_DOUBLE) - 6.858733472512178) / 6.5422093407655435 AS scaler_44, (CAST("ADS_imp_1_OUT".impter_45 AS BINARY_DOUBLE) - 7.258872651356993) / 6.490917554434448 AS scaler_45, (CAST("ADS_imp_1_OUT".impter_46 AS BINARY_DOUBLE) - 7.710508002783577) / 6.292873620677289 AS scaler_46, (CAST("ADS_imp_1_OUT".impter_47 AS BINARY_DOUBLE) - 8.281141266527488) / 5.713309549149251 AS scaler_47, (CAST("ADS_imp_1_OUT".impter_48 AS BINARY_DOUBLE) - 3.432150313152401) / 4.326500259143386 AS scaler_48, (CAST("ADS_imp_1_OUT".impter_49 AS BINARY_DOUBLE) - 0.031315240083507306) / 0.33325414598330405 AS scaler_49, (CAST("ADS_imp_1_OUT".impter_50 AS BINARY_DOUBLE) - 0.009046624913013222) / 0.22827664222063312 AS scaler_50, (CAST("ADS_imp_1_OUT".impter_51 AS BINARY_DOUBLE) - 0.708420320111343) / 1.7630768232183456 AS scaler_51, (CAST("ADS_imp_1_OUT".impter_52 AS BINARY_DOUBLE) - 7.492693110647181) / 5.6747357473393345 AS scaler_52, (CAST("ADS_imp_1_OUT".impter_53 AS BINARY_DOUBLE) - 9.529575504523313) / 5.230790022511772 AS scaler_53, (CAST("ADS_imp_1_OUT".impter_54 AS BINARY_DOUBLE) - 9.541405706332638) / 5.2515555146947035 AS scaler_54, (CAST("ADS_imp_1_OUT".impter_55 AS BINARY_DOUBLE) - 8.754349338900488) / 6.0343648977583975 AS scaler_55, (CAST("ADS_imp_1_OUT".impter_56 AS BINARY_DOUBLE) - 3.7397355601948505) / 4.953834269857758 AS scaler_56, (CAST("ADS_imp_1_OUT".impter_57 AS BINARY_DOUBLE) - 0.21920668058455114) / 1.0257471420649142 AS scaler_57, (CAST("ADS_imp_1_OUT".impter_58 AS BINARY_DOUBLE) - 0.0006958942240779402) / 0.02637062675225659 AS scaler_58, (CAST("ADS_imp_1_OUT".impter_59 AS BINARY_DOUBLE) - 0.26374391092553934) / 0.893431165157604 AS scaler_59, (CAST("ADS_imp_1_OUT".impter_60 AS BINARY_DOUBLE) - 5.474599860821155) / 5.06659361292149 AS scaler_60, (CAST("ADS_imp_1_OUT".impter_61 AS BINARY_DOUBLE) - 12.097425191370911) / 4.359965306758356 AS scaler_61, (CAST("ADS_imp_1_OUT".impter_62 AS BINARY_DOUBLE) - 11.8580375782881) / 4.889242282258171 AS scaler_62, (CAST("ADS_imp_1_OUT".impter_63 AS BINARY_DOUBLE) - 6.716771050800278) / 5.87255780345831 AS scaler_63, (CAST("ADS_imp_1_OUT".impter_64 AS BINARY_DOUBLE) - 2.0869867780097424) / 4.12826085471658 AS scaler_64, (CAST("ADS_imp_1_OUT".impter_65 AS BINARY_DOUBLE) - 0.3862212943632568) / 1.915153500596726 AS scaler_65 
FROM "DEGEN_D49CYB_ADS_IMP_1_OUT" "ADS_imp_1_OUT") "ADS_sca_2_OUT") "U"

-- Code For temporary table 3644_CODEGEN_MSQLXN_ADB_B0 part 1. Create 


CREATE GLOBAL TEMPORARY TABLE "3644_CODEGEN_MSQLXN_ADB_B0" (
	"KEY" NUMBER(19), 
	"Score_0" BINARY_DOUBLE, 
	"Proba_0" BINARY_DOUBLE, 
	"Score_1" BINARY_DOUBLE, 
	"Proba_1" BINARY_DOUBLE, 
	"Score_2" BINARY_DOUBLE, 
	"Proba_2" BINARY_DOUBLE, 
	"Score_3" BINARY_DOUBLE, 
	"Proba_3" BINARY_DOUBLE, 
	"Score_4" BINARY_DOUBLE, 
	"Proba_4" BINARY_DOUBLE, 
	"Score_5" BINARY_DOUBLE, 
	"Proba_5" BINARY_DOUBLE, 
	"Score_6" BINARY_DOUBLE, 
	"Proba_6" BINARY_DOUBLE, 
	"Score_7" BINARY_DOUBLE, 
	"Proba_7" BINARY_DOUBLE, 
	"Score_8" BINARY_DOUBLE, 
	"Proba_8" BINARY_DOUBLE, 
	"Score_9" BINARY_DOUBLE, 
	"Proba_9" BINARY_DOUBLE
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table 3644_CODEGEN_MSQLXN_ADB_B0 part 2. Populate

INSERT INTO "3644_CODEGEN_MSQLXN_ADB_B0" ("KEY", "Score_0", "Proba_0", "Score_1", "Proba_1", "Score_2", "Proba_2", "Score_3", "Proba_3", "Score_4", "Proba_4", "Score_5", "Proba_5", "Score_6", "Proba_6", "Score_7", "Proba_7", "Score_8", "Proba_8", "Score_9", "Proba_9") SELECT "U"."KEY", "U"."Score_0", "U"."Proba_0", "U"."Score_1", "U"."Proba_1", "U"."Score_2", "U"."Proba_2", "U"."Score_3", "U"."Proba_3", "U"."Score_4", "U"."Proba_4", "U"."Score_5", "U"."Proba_5", "U"."Score_6", "U"."Proba_6", "U"."Score_7", "U"."Proba_7", "U"."Score_8", "U"."Proba_8", "U"."Score_9", "U"."Proba_9" 
FROM (WITH "DT_node_lookup" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_38 <= -1.6508052349090576) THEN 1 ELSE 2 END AS node_id_2 
FROM "DEGEN_YN11LY_ADS_SCA_2_OUT" "ADS_sca_2_OUT"), 
"DT_node_data" AS 
(SELECT "Values".nid AS nid, CAST("Values"."P_0" AS BINARY_DOUBLE) AS "P_0", CAST("Values"."P_1" AS BINARY_DOUBLE) AS "P_1", CAST("Values"."P_2" AS BINARY_DOUBLE) AS "P_2", CAST("Values"."P_3" AS BINARY_DOUBLE) AS "P_3", CAST("Values"."P_4" AS BINARY_DOUBLE) AS "P_4", CAST("Values"."P_5" AS BINARY_DOUBLE) AS "P_5", CAST("Values"."P_6" AS BINARY_DOUBLE) AS "P_6", CAST("Values"."P_7" AS BINARY_DOUBLE) AS "P_7", CAST("Values"."P_8" AS BINARY_DOUBLE) AS "P_8", CAST("Values"."P_9" AS BINARY_DOUBLE) AS "P_9", CAST("Values"."D" AS BINARY_DOUBLE) AS "D", CAST("Values"."DP" AS BINARY_DOUBLE) AS "DP" 
FROM (SELECT 1 AS nid, 0.6118721461187213 AS "P_0", 0.0 AS "P_1", 0.013698630136986313 AS "P_2", 0.004566210045662104 AS "P_3", 0.027397260273972626 AS "P_4", 0.08675799086758001 AS "P_5", 0.018264840182648415 AS "P_6", 0.0 AS "P_7", 0.013698630136986313 AS "P_8", 0.22374429223744302 AS "P_9", 0 AS "D", 0.6118721461187213 AS "DP" FROM DUAL UNION ALL SELECT 2 AS nid, 0.0032840722495894943 AS "P_0", 0.12068965517241378 AS "P_1", 0.11904761904761904 AS "P_2", 0.11822660098522167 AS "P_3", 0.11904761904761904 AS "P_4", 0.10262725779967159 AS "P_5", 0.11330049261083744 AS "P_6", 0.11494252873563218 AS "P_7", 0.10837438423645321 AS "P_8", 0.08045977011494254 AS "P_9", 1 AS "D", 0.12068965517241378 AS "DP" FROM DUAL) "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".nid AS nid, "DT_node_data"."P_0" AS "P_0", "DT_node_data"."P_1" AS "P_1", "DT_node_data"."P_2" AS "P_2", "DT_node_data"."P_3" AS "P_3", "DT_node_data"."P_4" AS "P_4", "DT_node_data"."P_5" AS "P_5", "DT_node_data"."P_6" AS "P_6", "DT_node_data"."P_7" AS "P_7", "DT_node_data"."P_8" AS "P_8", "DT_node_data"."P_9" AS "P_9", "DT_node_data"."D" AS "D", "DT_node_data"."DP" AS "DP" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".nid), 
"ADB_Model_0" AS 
(SELECT "DT_Output"."KEY" AS "KEY", (9.0 * (CASE WHEN ("DT_Output"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_0" IS NULL OR "DT_Output"."P_0" > 0.0) THEN ln("DT_Output"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_0" IS NULL OR "DT_Output"."P_0" > 0.0) THEN ln("DT_Output"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_1" IS NULL OR "DT_Output"."P_1" > 0.0) THEN ln("DT_Output"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_2" IS NULL OR "DT_Output"."P_2" > 0.0) THEN ln("DT_Output"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_3" IS NULL OR "DT_Output"."P_3" > 0.0) THEN ln("DT_Output"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_4" IS NULL OR "DT_Output"."P_4" > 0.0) THEN ln("DT_Output"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_5" IS NULL OR "DT_Output"."P_5" > 0.0) THEN ln("DT_Output"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_6" IS NULL OR "DT_Output"."P_6" > 0.0) THEN ln("DT_Output"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_7" IS NULL OR "DT_Output"."P_7" > 0.0) THEN ln("DT_Output"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_8" IS NULL OR "DT_Output"."P_8" > 0.0) THEN ln("DT_Output"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_9" IS NULL OR "DT_Output"."P_9" > 0.0) THEN ln("DT_Output"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_0", 9.0 * (CASE WHEN ("DT_Output"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_0" IS NULL OR "DT_Output"."P_0" > 0.0) THEN ln("DT_Output"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_0" IS NULL OR "DT_Output"."P_0" > 0.0) THEN ln("DT_Output"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_1" IS NULL OR "DT_Output"."P_1" > 0.0) THEN ln("DT_Output"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_2" IS NULL OR "DT_Output"."P_2" > 0.0) THEN ln("DT_Output"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_3" IS NULL OR "DT_Output"."P_3" > 0.0) THEN ln("DT_Output"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_4" IS NULL OR "DT_Output"."P_4" > 0.0) THEN ln("DT_Output"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_5" IS NULL OR "DT_Output"."P_5" > 0.0) THEN ln("DT_Output"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_6" IS NULL OR "DT_Output"."P_6" > 0.0) THEN ln("DT_Output"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_7" IS NULL OR "DT_Output"."P_7" > 0.0) THEN ln("DT_Output"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_8" IS NULL OR "DT_Output"."P_8" > 0.0) THEN ln("DT_Output"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_9" IS NULL OR "DT_Output"."P_9" > 0.0) THEN ln("DT_Output"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_0", (9.0 * (CASE WHEN ("DT_Output"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_1" IS NULL OR "DT_Output"."P_1" > 0.0) THEN ln("DT_Output"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_0" IS NULL OR "DT_Output"."P_0" > 0.0) THEN ln("DT_Output"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_1" IS NULL OR "DT_Output"."P_1" > 0.0) THEN ln("DT_Output"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_2" IS NULL OR "DT_Output"."P_2" > 0.0) THEN ln("DT_Output"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_3" IS NULL OR "DT_Output"."P_3" > 0.0) THEN ln("DT_Output"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_4" IS NULL OR "DT_Output"."P_4" > 0.0) THEN ln("DT_Output"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_5" IS NULL OR "DT_Output"."P_5" > 0.0) THEN ln("DT_Output"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_6" IS NULL OR "DT_Output"."P_6" > 0.0) THEN ln("DT_Output"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_7" IS NULL OR "DT_Output"."P_7" > 0.0) THEN ln("DT_Output"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_8" IS NULL OR "DT_Output"."P_8" > 0.0) THEN ln("DT_Output"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_9" IS NULL OR "DT_Output"."P_9" > 0.0) THEN ln("DT_Output"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_1", 9.0 * (CASE WHEN ("DT_Output"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_1" IS NULL OR "DT_Output"."P_1" > 0.0) THEN ln("DT_Output"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_0" IS NULL OR "DT_Output"."P_0" > 0.0) THEN ln("DT_Output"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_1" IS NULL OR "DT_Output"."P_1" > 0.0) THEN ln("DT_Output"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_2" IS NULL OR "DT_Output"."P_2" > 0.0) THEN ln("DT_Output"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_3" IS NULL OR "DT_Output"."P_3" > 0.0) THEN ln("DT_Output"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_4" IS NULL OR "DT_Output"."P_4" > 0.0) THEN ln("DT_Output"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_5" IS NULL OR "DT_Output"."P_5" > 0.0) THEN ln("DT_Output"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_6" IS NULL OR "DT_Output"."P_6" > 0.0) THEN ln("DT_Output"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_7" IS NULL OR "DT_Output"."P_7" > 0.0) THEN ln("DT_Output"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_8" IS NULL OR "DT_Output"."P_8" > 0.0) THEN ln("DT_Output"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_9" IS NULL OR "DT_Output"."P_9" > 0.0) THEN ln("DT_Output"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_1", (9.0 * (CASE WHEN ("DT_Output"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_2" IS NULL OR "DT_Output"."P_2" > 0.0) THEN ln("DT_Output"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_0" IS NULL OR "DT_Output"."P_0" > 0.0) THEN ln("DT_Output"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_1" IS NULL OR "DT_Output"."P_1" > 0.0) THEN ln("DT_Output"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_2" IS NULL OR "DT_Output"."P_2" > 0.0) THEN ln("DT_Output"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_3" IS NULL OR "DT_Output"."P_3" > 0.0) THEN ln("DT_Output"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_4" IS NULL OR "DT_Output"."P_4" > 0.0) THEN ln("DT_Output"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_5" IS NULL OR "DT_Output"."P_5" > 0.0) THEN ln("DT_Output"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_6" IS NULL OR "DT_Output"."P_6" > 0.0) THEN ln("DT_Output"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_7" IS NULL OR "DT_Output"."P_7" > 0.0) THEN ln("DT_Output"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_8" IS NULL OR "DT_Output"."P_8" > 0.0) THEN ln("DT_Output"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_9" IS NULL OR "DT_Output"."P_9" > 0.0) THEN ln("DT_Output"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_2", 9.0 * (CASE WHEN ("DT_Output"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_2" IS NULL OR "DT_Output"."P_2" > 0.0) THEN ln("DT_Output"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_0" IS NULL OR "DT_Output"."P_0" > 0.0) THEN ln("DT_Output"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_1" IS NULL OR "DT_Output"."P_1" > 0.0) THEN ln("DT_Output"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_2" IS NULL OR "DT_Output"."P_2" > 0.0) THEN ln("DT_Output"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_3" IS NULL OR "DT_Output"."P_3" > 0.0) THEN ln("DT_Output"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_4" IS NULL OR "DT_Output"."P_4" > 0.0) THEN ln("DT_Output"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_5" IS NULL OR "DT_Output"."P_5" > 0.0) THEN ln("DT_Output"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_6" IS NULL OR "DT_Output"."P_6" > 0.0) THEN ln("DT_Output"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_7" IS NULL OR "DT_Output"."P_7" > 0.0) THEN ln("DT_Output"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_8" IS NULL OR "DT_Output"."P_8" > 0.0) THEN ln("DT_Output"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_9" IS NULL OR "DT_Output"."P_9" > 0.0) THEN ln("DT_Output"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_2", (9.0 * (CASE WHEN ("DT_Output"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_3" IS NULL OR "DT_Output"."P_3" > 0.0) THEN ln("DT_Output"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_0" IS NULL OR "DT_Output"."P_0" > 0.0) THEN ln("DT_Output"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_1" IS NULL OR "DT_Output"."P_1" > 0.0) THEN ln("DT_Output"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_2" IS NULL OR "DT_Output"."P_2" > 0.0) THEN ln("DT_Output"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_3" IS NULL OR "DT_Output"."P_3" > 0.0) THEN ln("DT_Output"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_4" IS NULL OR "DT_Output"."P_4" > 0.0) THEN ln("DT_Output"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_5" IS NULL OR "DT_Output"."P_5" > 0.0) THEN ln("DT_Output"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_6" IS NULL OR "DT_Output"."P_6" > 0.0) THEN ln("DT_Output"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_7" IS NULL OR "DT_Output"."P_7" > 0.0) THEN ln("DT_Output"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_8" IS NULL OR "DT_Output"."P_8" > 0.0) THEN ln("DT_Output"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_9" IS NULL OR "DT_Output"."P_9" > 0.0) THEN ln("DT_Output"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_3", 9.0 * (CASE WHEN ("DT_Output"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_3" IS NULL OR "DT_Output"."P_3" > 0.0) THEN ln("DT_Output"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_0" IS NULL OR "DT_Output"."P_0" > 0.0) THEN ln("DT_Output"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_1" IS NULL OR "DT_Output"."P_1" > 0.0) THEN ln("DT_Output"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_2" IS NULL OR "DT_Output"."P_2" > 0.0) THEN ln("DT_Output"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_3" IS NULL OR "DT_Output"."P_3" > 0.0) THEN ln("DT_Output"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_4" IS NULL OR "DT_Output"."P_4" > 0.0) THEN ln("DT_Output"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_5" IS NULL OR "DT_Output"."P_5" > 0.0) THEN ln("DT_Output"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_6" IS NULL OR "DT_Output"."P_6" > 0.0) THEN ln("DT_Output"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_7" IS NULL OR "DT_Output"."P_7" > 0.0) THEN ln("DT_Output"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_8" IS NULL OR "DT_Output"."P_8" > 0.0) THEN ln("DT_Output"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_9" IS NULL OR "DT_Output"."P_9" > 0.0) THEN ln("DT_Output"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_3", (9.0 * (CASE WHEN ("DT_Output"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_4" IS NULL OR "DT_Output"."P_4" > 0.0) THEN ln("DT_Output"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_0" IS NULL OR "DT_Output"."P_0" > 0.0) THEN ln("DT_Output"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_1" IS NULL OR "DT_Output"."P_1" > 0.0) THEN ln("DT_Output"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_2" IS NULL OR "DT_Output"."P_2" > 0.0) THEN ln("DT_Output"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_3" IS NULL OR "DT_Output"."P_3" > 0.0) THEN ln("DT_Output"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_4" IS NULL OR "DT_Output"."P_4" > 0.0) THEN ln("DT_Output"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_5" IS NULL OR "DT_Output"."P_5" > 0.0) THEN ln("DT_Output"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_6" IS NULL OR "DT_Output"."P_6" > 0.0) THEN ln("DT_Output"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_7" IS NULL OR "DT_Output"."P_7" > 0.0) THEN ln("DT_Output"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_8" IS NULL OR "DT_Output"."P_8" > 0.0) THEN ln("DT_Output"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_9" IS NULL OR "DT_Output"."P_9" > 0.0) THEN ln("DT_Output"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_4", 9.0 * (CASE WHEN ("DT_Output"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_4" IS NULL OR "DT_Output"."P_4" > 0.0) THEN ln("DT_Output"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_0" IS NULL OR "DT_Output"."P_0" > 0.0) THEN ln("DT_Output"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_1" IS NULL OR "DT_Output"."P_1" > 0.0) THEN ln("DT_Output"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_2" IS NULL OR "DT_Output"."P_2" > 0.0) THEN ln("DT_Output"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_3" IS NULL OR "DT_Output"."P_3" > 0.0) THEN ln("DT_Output"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_4" IS NULL OR "DT_Output"."P_4" > 0.0) THEN ln("DT_Output"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_5" IS NULL OR "DT_Output"."P_5" > 0.0) THEN ln("DT_Output"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_6" IS NULL OR "DT_Output"."P_6" > 0.0) THEN ln("DT_Output"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_7" IS NULL OR "DT_Output"."P_7" > 0.0) THEN ln("DT_Output"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_8" IS NULL OR "DT_Output"."P_8" > 0.0) THEN ln("DT_Output"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_9" IS NULL OR "DT_Output"."P_9" > 0.0) THEN ln("DT_Output"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_4", (9.0 * (CASE WHEN ("DT_Output"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_5" IS NULL OR "DT_Output"."P_5" > 0.0) THEN ln("DT_Output"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_0" IS NULL OR "DT_Output"."P_0" > 0.0) THEN ln("DT_Output"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_1" IS NULL OR "DT_Output"."P_1" > 0.0) THEN ln("DT_Output"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_2" IS NULL OR "DT_Output"."P_2" > 0.0) THEN ln("DT_Output"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_3" IS NULL OR "DT_Output"."P_3" > 0.0) THEN ln("DT_Output"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_4" IS NULL OR "DT_Output"."P_4" > 0.0) THEN ln("DT_Output"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_5" IS NULL OR "DT_Output"."P_5" > 0.0) THEN ln("DT_Output"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_6" IS NULL OR "DT_Output"."P_6" > 0.0) THEN ln("DT_Output"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_7" IS NULL OR "DT_Output"."P_7" > 0.0) THEN ln("DT_Output"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_8" IS NULL OR "DT_Output"."P_8" > 0.0) THEN ln("DT_Output"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_9" IS NULL OR "DT_Output"."P_9" > 0.0) THEN ln("DT_Output"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_5", 9.0 * (CASE WHEN ("DT_Output"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_5" IS NULL OR "DT_Output"."P_5" > 0.0) THEN ln("DT_Output"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_0" IS NULL OR "DT_Output"."P_0" > 0.0) THEN ln("DT_Output"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_1" IS NULL OR "DT_Output"."P_1" > 0.0) THEN ln("DT_Output"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_2" IS NULL OR "DT_Output"."P_2" > 0.0) THEN ln("DT_Output"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_3" IS NULL OR "DT_Output"."P_3" > 0.0) THEN ln("DT_Output"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_4" IS NULL OR "DT_Output"."P_4" > 0.0) THEN ln("DT_Output"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_5" IS NULL OR "DT_Output"."P_5" > 0.0) THEN ln("DT_Output"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_6" IS NULL OR "DT_Output"."P_6" > 0.0) THEN ln("DT_Output"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_7" IS NULL OR "DT_Output"."P_7" > 0.0) THEN ln("DT_Output"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_8" IS NULL OR "DT_Output"."P_8" > 0.0) THEN ln("DT_Output"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_9" IS NULL OR "DT_Output"."P_9" > 0.0) THEN ln("DT_Output"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_5", (9.0 * (CASE WHEN ("DT_Output"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_6" IS NULL OR "DT_Output"."P_6" > 0.0) THEN ln("DT_Output"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_0" IS NULL OR "DT_Output"."P_0" > 0.0) THEN ln("DT_Output"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_1" IS NULL OR "DT_Output"."P_1" > 0.0) THEN ln("DT_Output"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_2" IS NULL OR "DT_Output"."P_2" > 0.0) THEN ln("DT_Output"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_3" IS NULL OR "DT_Output"."P_3" > 0.0) THEN ln("DT_Output"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_4" IS NULL OR "DT_Output"."P_4" > 0.0) THEN ln("DT_Output"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_5" IS NULL OR "DT_Output"."P_5" > 0.0) THEN ln("DT_Output"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_6" IS NULL OR "DT_Output"."P_6" > 0.0) THEN ln("DT_Output"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_7" IS NULL OR "DT_Output"."P_7" > 0.0) THEN ln("DT_Output"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_8" IS NULL OR "DT_Output"."P_8" > 0.0) THEN ln("DT_Output"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_9" IS NULL OR "DT_Output"."P_9" > 0.0) THEN ln("DT_Output"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_6", 9.0 * (CASE WHEN ("DT_Output"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_6" IS NULL OR "DT_Output"."P_6" > 0.0) THEN ln("DT_Output"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_0" IS NULL OR "DT_Output"."P_0" > 0.0) THEN ln("DT_Output"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_1" IS NULL OR "DT_Output"."P_1" > 0.0) THEN ln("DT_Output"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_2" IS NULL OR "DT_Output"."P_2" > 0.0) THEN ln("DT_Output"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_3" IS NULL OR "DT_Output"."P_3" > 0.0) THEN ln("DT_Output"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_4" IS NULL OR "DT_Output"."P_4" > 0.0) THEN ln("DT_Output"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_5" IS NULL OR "DT_Output"."P_5" > 0.0) THEN ln("DT_Output"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_6" IS NULL OR "DT_Output"."P_6" > 0.0) THEN ln("DT_Output"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_7" IS NULL OR "DT_Output"."P_7" > 0.0) THEN ln("DT_Output"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_8" IS NULL OR "DT_Output"."P_8" > 0.0) THEN ln("DT_Output"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_9" IS NULL OR "DT_Output"."P_9" > 0.0) THEN ln("DT_Output"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_6", (9.0 * (CASE WHEN ("DT_Output"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_7" IS NULL OR "DT_Output"."P_7" > 0.0) THEN ln("DT_Output"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_0" IS NULL OR "DT_Output"."P_0" > 0.0) THEN ln("DT_Output"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_1" IS NULL OR "DT_Output"."P_1" > 0.0) THEN ln("DT_Output"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_2" IS NULL OR "DT_Output"."P_2" > 0.0) THEN ln("DT_Output"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_3" IS NULL OR "DT_Output"."P_3" > 0.0) THEN ln("DT_Output"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_4" IS NULL OR "DT_Output"."P_4" > 0.0) THEN ln("DT_Output"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_5" IS NULL OR "DT_Output"."P_5" > 0.0) THEN ln("DT_Output"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_6" IS NULL OR "DT_Output"."P_6" > 0.0) THEN ln("DT_Output"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_7" IS NULL OR "DT_Output"."P_7" > 0.0) THEN ln("DT_Output"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_8" IS NULL OR "DT_Output"."P_8" > 0.0) THEN ln("DT_Output"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_9" IS NULL OR "DT_Output"."P_9" > 0.0) THEN ln("DT_Output"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_7", 9.0 * (CASE WHEN ("DT_Output"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_7" IS NULL OR "DT_Output"."P_7" > 0.0) THEN ln("DT_Output"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_0" IS NULL OR "DT_Output"."P_0" > 0.0) THEN ln("DT_Output"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_1" IS NULL OR "DT_Output"."P_1" > 0.0) THEN ln("DT_Output"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_2" IS NULL OR "DT_Output"."P_2" > 0.0) THEN ln("DT_Output"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_3" IS NULL OR "DT_Output"."P_3" > 0.0) THEN ln("DT_Output"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_4" IS NULL OR "DT_Output"."P_4" > 0.0) THEN ln("DT_Output"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_5" IS NULL OR "DT_Output"."P_5" > 0.0) THEN ln("DT_Output"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_6" IS NULL OR "DT_Output"."P_6" > 0.0) THEN ln("DT_Output"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_7" IS NULL OR "DT_Output"."P_7" > 0.0) THEN ln("DT_Output"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_8" IS NULL OR "DT_Output"."P_8" > 0.0) THEN ln("DT_Output"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_9" IS NULL OR "DT_Output"."P_9" > 0.0) THEN ln("DT_Output"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_7", (9.0 * (CASE WHEN ("DT_Output"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_8" IS NULL OR "DT_Output"."P_8" > 0.0) THEN ln("DT_Output"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_0" IS NULL OR "DT_Output"."P_0" > 0.0) THEN ln("DT_Output"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_1" IS NULL OR "DT_Output"."P_1" > 0.0) THEN ln("DT_Output"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_2" IS NULL OR "DT_Output"."P_2" > 0.0) THEN ln("DT_Output"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_3" IS NULL OR "DT_Output"."P_3" > 0.0) THEN ln("DT_Output"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_4" IS NULL OR "DT_Output"."P_4" > 0.0) THEN ln("DT_Output"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_5" IS NULL OR "DT_Output"."P_5" > 0.0) THEN ln("DT_Output"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_6" IS NULL OR "DT_Output"."P_6" > 0.0) THEN ln("DT_Output"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_7" IS NULL OR "DT_Output"."P_7" > 0.0) THEN ln("DT_Output"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_8" IS NULL OR "DT_Output"."P_8" > 0.0) THEN ln("DT_Output"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_9" IS NULL OR "DT_Output"."P_9" > 0.0) THEN ln("DT_Output"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_8", 9.0 * (CASE WHEN ("DT_Output"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_8" IS NULL OR "DT_Output"."P_8" > 0.0) THEN ln("DT_Output"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_0" IS NULL OR "DT_Output"."P_0" > 0.0) THEN ln("DT_Output"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_1" IS NULL OR "DT_Output"."P_1" > 0.0) THEN ln("DT_Output"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_2" IS NULL OR "DT_Output"."P_2" > 0.0) THEN ln("DT_Output"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_3" IS NULL OR "DT_Output"."P_3" > 0.0) THEN ln("DT_Output"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_4" IS NULL OR "DT_Output"."P_4" > 0.0) THEN ln("DT_Output"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_5" IS NULL OR "DT_Output"."P_5" > 0.0) THEN ln("DT_Output"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_6" IS NULL OR "DT_Output"."P_6" > 0.0) THEN ln("DT_Output"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_7" IS NULL OR "DT_Output"."P_7" > 0.0) THEN ln("DT_Output"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_8" IS NULL OR "DT_Output"."P_8" > 0.0) THEN ln("DT_Output"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_9" IS NULL OR "DT_Output"."P_9" > 0.0) THEN ln("DT_Output"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_8", (9.0 * (CASE WHEN ("DT_Output"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_9" IS NULL OR "DT_Output"."P_9" > 0.0) THEN ln("DT_Output"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_0" IS NULL OR "DT_Output"."P_0" > 0.0) THEN ln("DT_Output"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_1" IS NULL OR "DT_Output"."P_1" > 0.0) THEN ln("DT_Output"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_2" IS NULL OR "DT_Output"."P_2" > 0.0) THEN ln("DT_Output"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_3" IS NULL OR "DT_Output"."P_3" > 0.0) THEN ln("DT_Output"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_4" IS NULL OR "DT_Output"."P_4" > 0.0) THEN ln("DT_Output"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_5" IS NULL OR "DT_Output"."P_5" > 0.0) THEN ln("DT_Output"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_6" IS NULL OR "DT_Output"."P_6" > 0.0) THEN ln("DT_Output"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_7" IS NULL OR "DT_Output"."P_7" > 0.0) THEN ln("DT_Output"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_8" IS NULL OR "DT_Output"."P_8" > 0.0) THEN ln("DT_Output"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_9" IS NULL OR "DT_Output"."P_9" > 0.0) THEN ln("DT_Output"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_9", 9.0 * (CASE WHEN ("DT_Output"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_9" IS NULL OR "DT_Output"."P_9" > 0.0) THEN ln("DT_Output"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_0" IS NULL OR "DT_Output"."P_0" > 0.0) THEN ln("DT_Output"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_1" IS NULL OR "DT_Output"."P_1" > 0.0) THEN ln("DT_Output"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_2" IS NULL OR "DT_Output"."P_2" > 0.0) THEN ln("DT_Output"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_3" IS NULL OR "DT_Output"."P_3" > 0.0) THEN ln("DT_Output"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_4" IS NULL OR "DT_Output"."P_4" > 0.0) THEN ln("DT_Output"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_5" IS NULL OR "DT_Output"."P_5" > 0.0) THEN ln("DT_Output"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_6" IS NULL OR "DT_Output"."P_6" > 0.0) THEN ln("DT_Output"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_7" IS NULL OR "DT_Output"."P_7" > 0.0) THEN ln("DT_Output"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_8" IS NULL OR "DT_Output"."P_8" > 0.0) THEN ln("DT_Output"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_9" IS NULL OR "DT_Output"."P_9" > 0.0) THEN ln("DT_Output"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_9" 
FROM "DT_Output"), 
"DT_node_lookup_1" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_23 <= -1.1726703643798828) THEN 1 ELSE 2 END AS node_id_2 
FROM "DEGEN_YN11LY_ADS_SCA_2_OUT" "ADS_sca_2_OUT"), 
"DT_node_data_1" AS 
(SELECT "Values".nid AS nid, CAST("Values"."P_0" AS BINARY_DOUBLE) AS "P_0", CAST("Values"."P_1" AS BINARY_DOUBLE) AS "P_1", CAST("Values"."P_2" AS BINARY_DOUBLE) AS "P_2", CAST("Values"."P_3" AS BINARY_DOUBLE) AS "P_3", CAST("Values"."P_4" AS BINARY_DOUBLE) AS "P_4", CAST("Values"."P_5" AS BINARY_DOUBLE) AS "P_5", CAST("Values"."P_6" AS BINARY_DOUBLE) AS "P_6", CAST("Values"."P_7" AS BINARY_DOUBLE) AS "P_7", CAST("Values"."P_8" AS BINARY_DOUBLE) AS "P_8", CAST("Values"."P_9" AS BINARY_DOUBLE) AS "P_9", CAST("Values"."D" AS BINARY_DOUBLE) AS "D", CAST("Values"."DP" AS BINARY_DOUBLE) AS "DP" 
FROM (SELECT 1 AS nid, 3.4568306677105506e-07 AS "P_0", 0.08889138562216585 AS "P_1", 0.09265161787866981 AS "P_2", 0.027727116232839934 AS "P_3", 0.06512344339224879 AS "P_4", 0.3455723881530495 AS "P_5", 0.35511717828023104 AS "P_6", 0.012963327069899193 AS "P_7", 0.008249389953572212 AS "P_8", 0.0037038077342569113 AS "P_9", 6 AS "D", 0.35511717828023104 AS "DP" FROM DUAL UNION ALL SELECT 2 AS nid, 0.13802472788136472 AS "P_0", 0.10420955404542699 AS "P_1", 0.1027974755362372 AS "P_2", 0.12748263903869606 AS "P_3", 0.11326405550058524 AS "P_4", 0.006633617376042149 AS "P_5", 0.0030045605652337564 AS "P_6", 0.133078416990444 AS "P_7", 0.13488833096811198 AS "P_8", 0.13661662209785788 AS "P_9", 0 AS "D", 0.13802472788136472 AS "DP" FROM DUAL) "Values"), 
"DT_Output_1" AS 
(SELECT "DT_node_lookup_1"."KEY" AS "KEY", "DT_node_lookup_1".node_id_2 AS node_id_2, "DT_node_data_1".nid AS nid, "DT_node_data_1"."P_0" AS "P_0", "DT_node_data_1"."P_1" AS "P_1", "DT_node_data_1"."P_2" AS "P_2", "DT_node_data_1"."P_3" AS "P_3", "DT_node_data_1"."P_4" AS "P_4", "DT_node_data_1"."P_5" AS "P_5", "DT_node_data_1"."P_6" AS "P_6", "DT_node_data_1"."P_7" AS "P_7", "DT_node_data_1"."P_8" AS "P_8", "DT_node_data_1"."P_9" AS "P_9", "DT_node_data_1"."D" AS "D", "DT_node_data_1"."DP" AS "DP" 
FROM "DT_node_lookup_1" LEFT OUTER JOIN "DT_node_data_1" ON "DT_node_lookup_1".node_id_2 = "DT_node_data_1".nid), 
"ADB_Model_1" AS 
(SELECT "DT_Output_1"."KEY" AS "KEY", (9.0 * (CASE WHEN ("DT_Output_1"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_0" IS NULL OR "DT_Output_1"."P_0" > 0.0) THEN ln("DT_Output_1"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_1"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_0" IS NULL OR "DT_Output_1"."P_0" > 0.0) THEN ln("DT_Output_1"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_1" IS NULL OR "DT_Output_1"."P_1" > 0.0) THEN ln("DT_Output_1"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_2" IS NULL OR "DT_Output_1"."P_2" > 0.0) THEN ln("DT_Output_1"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_3" IS NULL OR "DT_Output_1"."P_3" > 0.0) THEN ln("DT_Output_1"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_4" IS NULL OR "DT_Output_1"."P_4" > 0.0) THEN ln("DT_Output_1"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_5" IS NULL OR "DT_Output_1"."P_5" > 0.0) THEN ln("DT_Output_1"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_6" IS NULL OR "DT_Output_1"."P_6" > 0.0) THEN ln("DT_Output_1"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_7" IS NULL OR "DT_Output_1"."P_7" > 0.0) THEN ln("DT_Output_1"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_8" IS NULL OR "DT_Output_1"."P_8" > 0.0) THEN ln("DT_Output_1"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_9" IS NULL OR "DT_Output_1"."P_9" > 0.0) THEN ln("DT_Output_1"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_0", 9.0 * (CASE WHEN ("DT_Output_1"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_0" IS NULL OR "DT_Output_1"."P_0" > 0.0) THEN ln("DT_Output_1"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_1"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_0" IS NULL OR "DT_Output_1"."P_0" > 0.0) THEN ln("DT_Output_1"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_1" IS NULL OR "DT_Output_1"."P_1" > 0.0) THEN ln("DT_Output_1"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_2" IS NULL OR "DT_Output_1"."P_2" > 0.0) THEN ln("DT_Output_1"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_3" IS NULL OR "DT_Output_1"."P_3" > 0.0) THEN ln("DT_Output_1"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_4" IS NULL OR "DT_Output_1"."P_4" > 0.0) THEN ln("DT_Output_1"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_5" IS NULL OR "DT_Output_1"."P_5" > 0.0) THEN ln("DT_Output_1"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_6" IS NULL OR "DT_Output_1"."P_6" > 0.0) THEN ln("DT_Output_1"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_7" IS NULL OR "DT_Output_1"."P_7" > 0.0) THEN ln("DT_Output_1"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_8" IS NULL OR "DT_Output_1"."P_8" > 0.0) THEN ln("DT_Output_1"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_9" IS NULL OR "DT_Output_1"."P_9" > 0.0) THEN ln("DT_Output_1"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_0", (9.0 * (CASE WHEN ("DT_Output_1"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_1" IS NULL OR "DT_Output_1"."P_1" > 0.0) THEN ln("DT_Output_1"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_1"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_0" IS NULL OR "DT_Output_1"."P_0" > 0.0) THEN ln("DT_Output_1"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_1" IS NULL OR "DT_Output_1"."P_1" > 0.0) THEN ln("DT_Output_1"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_2" IS NULL OR "DT_Output_1"."P_2" > 0.0) THEN ln("DT_Output_1"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_3" IS NULL OR "DT_Output_1"."P_3" > 0.0) THEN ln("DT_Output_1"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_4" IS NULL OR "DT_Output_1"."P_4" > 0.0) THEN ln("DT_Output_1"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_5" IS NULL OR "DT_Output_1"."P_5" > 0.0) THEN ln("DT_Output_1"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_6" IS NULL OR "DT_Output_1"."P_6" > 0.0) THEN ln("DT_Output_1"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_7" IS NULL OR "DT_Output_1"."P_7" > 0.0) THEN ln("DT_Output_1"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_8" IS NULL OR "DT_Output_1"."P_8" > 0.0) THEN ln("DT_Output_1"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_9" IS NULL OR "DT_Output_1"."P_9" > 0.0) THEN ln("DT_Output_1"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_1", 9.0 * (CASE WHEN ("DT_Output_1"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_1" IS NULL OR "DT_Output_1"."P_1" > 0.0) THEN ln("DT_Output_1"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_1"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_0" IS NULL OR "DT_Output_1"."P_0" > 0.0) THEN ln("DT_Output_1"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_1" IS NULL OR "DT_Output_1"."P_1" > 0.0) THEN ln("DT_Output_1"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_2" IS NULL OR "DT_Output_1"."P_2" > 0.0) THEN ln("DT_Output_1"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_3" IS NULL OR "DT_Output_1"."P_3" > 0.0) THEN ln("DT_Output_1"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_4" IS NULL OR "DT_Output_1"."P_4" > 0.0) THEN ln("DT_Output_1"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_5" IS NULL OR "DT_Output_1"."P_5" > 0.0) THEN ln("DT_Output_1"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_6" IS NULL OR "DT_Output_1"."P_6" > 0.0) THEN ln("DT_Output_1"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_7" IS NULL OR "DT_Output_1"."P_7" > 0.0) THEN ln("DT_Output_1"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_8" IS NULL OR "DT_Output_1"."P_8" > 0.0) THEN ln("DT_Output_1"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_9" IS NULL OR "DT_Output_1"."P_9" > 0.0) THEN ln("DT_Output_1"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_1", (9.0 * (CASE WHEN ("DT_Output_1"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_2" IS NULL OR "DT_Output_1"."P_2" > 0.0) THEN ln("DT_Output_1"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_1"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_0" IS NULL OR "DT_Output_1"."P_0" > 0.0) THEN ln("DT_Output_1"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_1" IS NULL OR "DT_Output_1"."P_1" > 0.0) THEN ln("DT_Output_1"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_2" IS NULL OR "DT_Output_1"."P_2" > 0.0) THEN ln("DT_Output_1"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_3" IS NULL OR "DT_Output_1"."P_3" > 0.0) THEN ln("DT_Output_1"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_4" IS NULL OR "DT_Output_1"."P_4" > 0.0) THEN ln("DT_Output_1"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_5" IS NULL OR "DT_Output_1"."P_5" > 0.0) THEN ln("DT_Output_1"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_6" IS NULL OR "DT_Output_1"."P_6" > 0.0) THEN ln("DT_Output_1"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_7" IS NULL OR "DT_Output_1"."P_7" > 0.0) THEN ln("DT_Output_1"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_8" IS NULL OR "DT_Output_1"."P_8" > 0.0) THEN ln("DT_Output_1"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_9" IS NULL OR "DT_Output_1"."P_9" > 0.0) THEN ln("DT_Output_1"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_2", 9.0 * (CASE WHEN ("DT_Output_1"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_2" IS NULL OR "DT_Output_1"."P_2" > 0.0) THEN ln("DT_Output_1"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_1"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_0" IS NULL OR "DT_Output_1"."P_0" > 0.0) THEN ln("DT_Output_1"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_1" IS NULL OR "DT_Output_1"."P_1" > 0.0) THEN ln("DT_Output_1"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_2" IS NULL OR "DT_Output_1"."P_2" > 0.0) THEN ln("DT_Output_1"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_3" IS NULL OR "DT_Output_1"."P_3" > 0.0) THEN ln("DT_Output_1"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_4" IS NULL OR "DT_Output_1"."P_4" > 0.0) THEN ln("DT_Output_1"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_5" IS NULL OR "DT_Output_1"."P_5" > 0.0) THEN ln("DT_Output_1"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_6" IS NULL OR "DT_Output_1"."P_6" > 0.0) THEN ln("DT_Output_1"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_7" IS NULL OR "DT_Output_1"."P_7" > 0.0) THEN ln("DT_Output_1"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_8" IS NULL OR "DT_Output_1"."P_8" > 0.0) THEN ln("DT_Output_1"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_9" IS NULL OR "DT_Output_1"."P_9" > 0.0) THEN ln("DT_Output_1"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_2", (9.0 * (CASE WHEN ("DT_Output_1"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_3" IS NULL OR "DT_Output_1"."P_3" > 0.0) THEN ln("DT_Output_1"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_1"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_0" IS NULL OR "DT_Output_1"."P_0" > 0.0) THEN ln("DT_Output_1"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_1" IS NULL OR "DT_Output_1"."P_1" > 0.0) THEN ln("DT_Output_1"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_2" IS NULL OR "DT_Output_1"."P_2" > 0.0) THEN ln("DT_Output_1"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_3" IS NULL OR "DT_Output_1"."P_3" > 0.0) THEN ln("DT_Output_1"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_4" IS NULL OR "DT_Output_1"."P_4" > 0.0) THEN ln("DT_Output_1"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_5" IS NULL OR "DT_Output_1"."P_5" > 0.0) THEN ln("DT_Output_1"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_6" IS NULL OR "DT_Output_1"."P_6" > 0.0) THEN ln("DT_Output_1"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_7" IS NULL OR "DT_Output_1"."P_7" > 0.0) THEN ln("DT_Output_1"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_8" IS NULL OR "DT_Output_1"."P_8" > 0.0) THEN ln("DT_Output_1"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_9" IS NULL OR "DT_Output_1"."P_9" > 0.0) THEN ln("DT_Output_1"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_3", 9.0 * (CASE WHEN ("DT_Output_1"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_3" IS NULL OR "DT_Output_1"."P_3" > 0.0) THEN ln("DT_Output_1"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_1"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_0" IS NULL OR "DT_Output_1"."P_0" > 0.0) THEN ln("DT_Output_1"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_1" IS NULL OR "DT_Output_1"."P_1" > 0.0) THEN ln("DT_Output_1"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_2" IS NULL OR "DT_Output_1"."P_2" > 0.0) THEN ln("DT_Output_1"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_3" IS NULL OR "DT_Output_1"."P_3" > 0.0) THEN ln("DT_Output_1"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_4" IS NULL OR "DT_Output_1"."P_4" > 0.0) THEN ln("DT_Output_1"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_5" IS NULL OR "DT_Output_1"."P_5" > 0.0) THEN ln("DT_Output_1"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_6" IS NULL OR "DT_Output_1"."P_6" > 0.0) THEN ln("DT_Output_1"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_7" IS NULL OR "DT_Output_1"."P_7" > 0.0) THEN ln("DT_Output_1"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_8" IS NULL OR "DT_Output_1"."P_8" > 0.0) THEN ln("DT_Output_1"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_9" IS NULL OR "DT_Output_1"."P_9" > 0.0) THEN ln("DT_Output_1"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_3", (9.0 * (CASE WHEN ("DT_Output_1"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_4" IS NULL OR "DT_Output_1"."P_4" > 0.0) THEN ln("DT_Output_1"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_1"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_0" IS NULL OR "DT_Output_1"."P_0" > 0.0) THEN ln("DT_Output_1"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_1" IS NULL OR "DT_Output_1"."P_1" > 0.0) THEN ln("DT_Output_1"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_2" IS NULL OR "DT_Output_1"."P_2" > 0.0) THEN ln("DT_Output_1"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_3" IS NULL OR "DT_Output_1"."P_3" > 0.0) THEN ln("DT_Output_1"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_4" IS NULL OR "DT_Output_1"."P_4" > 0.0) THEN ln("DT_Output_1"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_5" IS NULL OR "DT_Output_1"."P_5" > 0.0) THEN ln("DT_Output_1"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_6" IS NULL OR "DT_Output_1"."P_6" > 0.0) THEN ln("DT_Output_1"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_7" IS NULL OR "DT_Output_1"."P_7" > 0.0) THEN ln("DT_Output_1"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_8" IS NULL OR "DT_Output_1"."P_8" > 0.0) THEN ln("DT_Output_1"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_9" IS NULL OR "DT_Output_1"."P_9" > 0.0) THEN ln("DT_Output_1"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_4", 9.0 * (CASE WHEN ("DT_Output_1"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_4" IS NULL OR "DT_Output_1"."P_4" > 0.0) THEN ln("DT_Output_1"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_1"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_0" IS NULL OR "DT_Output_1"."P_0" > 0.0) THEN ln("DT_Output_1"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_1" IS NULL OR "DT_Output_1"."P_1" > 0.0) THEN ln("DT_Output_1"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_2" IS NULL OR "DT_Output_1"."P_2" > 0.0) THEN ln("DT_Output_1"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_3" IS NULL OR "DT_Output_1"."P_3" > 0.0) THEN ln("DT_Output_1"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_4" IS NULL OR "DT_Output_1"."P_4" > 0.0) THEN ln("DT_Output_1"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_5" IS NULL OR "DT_Output_1"."P_5" > 0.0) THEN ln("DT_Output_1"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_6" IS NULL OR "DT_Output_1"."P_6" > 0.0) THEN ln("DT_Output_1"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_7" IS NULL OR "DT_Output_1"."P_7" > 0.0) THEN ln("DT_Output_1"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_8" IS NULL OR "DT_Output_1"."P_8" > 0.0) THEN ln("DT_Output_1"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_9" IS NULL OR "DT_Output_1"."P_9" > 0.0) THEN ln("DT_Output_1"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_4", (9.0 * (CASE WHEN ("DT_Output_1"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_5" IS NULL OR "DT_Output_1"."P_5" > 0.0) THEN ln("DT_Output_1"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_1"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_0" IS NULL OR "DT_Output_1"."P_0" > 0.0) THEN ln("DT_Output_1"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_1" IS NULL OR "DT_Output_1"."P_1" > 0.0) THEN ln("DT_Output_1"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_2" IS NULL OR "DT_Output_1"."P_2" > 0.0) THEN ln("DT_Output_1"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_3" IS NULL OR "DT_Output_1"."P_3" > 0.0) THEN ln("DT_Output_1"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_4" IS NULL OR "DT_Output_1"."P_4" > 0.0) THEN ln("DT_Output_1"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_5" IS NULL OR "DT_Output_1"."P_5" > 0.0) THEN ln("DT_Output_1"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_6" IS NULL OR "DT_Output_1"."P_6" > 0.0) THEN ln("DT_Output_1"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_7" IS NULL OR "DT_Output_1"."P_7" > 0.0) THEN ln("DT_Output_1"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_8" IS NULL OR "DT_Output_1"."P_8" > 0.0) THEN ln("DT_Output_1"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_9" IS NULL OR "DT_Output_1"."P_9" > 0.0) THEN ln("DT_Output_1"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_5", 9.0 * (CASE WHEN ("DT_Output_1"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_5" IS NULL OR "DT_Output_1"."P_5" > 0.0) THEN ln("DT_Output_1"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_1"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_0" IS NULL OR "DT_Output_1"."P_0" > 0.0) THEN ln("DT_Output_1"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_1" IS NULL OR "DT_Output_1"."P_1" > 0.0) THEN ln("DT_Output_1"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_2" IS NULL OR "DT_Output_1"."P_2" > 0.0) THEN ln("DT_Output_1"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_3" IS NULL OR "DT_Output_1"."P_3" > 0.0) THEN ln("DT_Output_1"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_4" IS NULL OR "DT_Output_1"."P_4" > 0.0) THEN ln("DT_Output_1"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_5" IS NULL OR "DT_Output_1"."P_5" > 0.0) THEN ln("DT_Output_1"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_6" IS NULL OR "DT_Output_1"."P_6" > 0.0) THEN ln("DT_Output_1"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_7" IS NULL OR "DT_Output_1"."P_7" > 0.0) THEN ln("DT_Output_1"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_8" IS NULL OR "DT_Output_1"."P_8" > 0.0) THEN ln("DT_Output_1"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_9" IS NULL OR "DT_Output_1"."P_9" > 0.0) THEN ln("DT_Output_1"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_5", (9.0 * (CASE WHEN ("DT_Output_1"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_6" IS NULL OR "DT_Output_1"."P_6" > 0.0) THEN ln("DT_Output_1"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_1"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_0" IS NULL OR "DT_Output_1"."P_0" > 0.0) THEN ln("DT_Output_1"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_1" IS NULL OR "DT_Output_1"."P_1" > 0.0) THEN ln("DT_Output_1"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_2" IS NULL OR "DT_Output_1"."P_2" > 0.0) THEN ln("DT_Output_1"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_3" IS NULL OR "DT_Output_1"."P_3" > 0.0) THEN ln("DT_Output_1"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_4" IS NULL OR "DT_Output_1"."P_4" > 0.0) THEN ln("DT_Output_1"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_5" IS NULL OR "DT_Output_1"."P_5" > 0.0) THEN ln("DT_Output_1"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_6" IS NULL OR "DT_Output_1"."P_6" > 0.0) THEN ln("DT_Output_1"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_7" IS NULL OR "DT_Output_1"."P_7" > 0.0) THEN ln("DT_Output_1"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_8" IS NULL OR "DT_Output_1"."P_8" > 0.0) THEN ln("DT_Output_1"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_9" IS NULL OR "DT_Output_1"."P_9" > 0.0) THEN ln("DT_Output_1"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_6", 9.0 * (CASE WHEN ("DT_Output_1"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_6" IS NULL OR "DT_Output_1"."P_6" > 0.0) THEN ln("DT_Output_1"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_1"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_0" IS NULL OR "DT_Output_1"."P_0" > 0.0) THEN ln("DT_Output_1"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_1" IS NULL OR "DT_Output_1"."P_1" > 0.0) THEN ln("DT_Output_1"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_2" IS NULL OR "DT_Output_1"."P_2" > 0.0) THEN ln("DT_Output_1"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_3" IS NULL OR "DT_Output_1"."P_3" > 0.0) THEN ln("DT_Output_1"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_4" IS NULL OR "DT_Output_1"."P_4" > 0.0) THEN ln("DT_Output_1"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_5" IS NULL OR "DT_Output_1"."P_5" > 0.0) THEN ln("DT_Output_1"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_6" IS NULL OR "DT_Output_1"."P_6" > 0.0) THEN ln("DT_Output_1"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_7" IS NULL OR "DT_Output_1"."P_7" > 0.0) THEN ln("DT_Output_1"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_8" IS NULL OR "DT_Output_1"."P_8" > 0.0) THEN ln("DT_Output_1"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_9" IS NULL OR "DT_Output_1"."P_9" > 0.0) THEN ln("DT_Output_1"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_6", (9.0 * (CASE WHEN ("DT_Output_1"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_7" IS NULL OR "DT_Output_1"."P_7" > 0.0) THEN ln("DT_Output_1"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_1"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_0" IS NULL OR "DT_Output_1"."P_0" > 0.0) THEN ln("DT_Output_1"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_1" IS NULL OR "DT_Output_1"."P_1" > 0.0) THEN ln("DT_Output_1"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_2" IS NULL OR "DT_Output_1"."P_2" > 0.0) THEN ln("DT_Output_1"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_3" IS NULL OR "DT_Output_1"."P_3" > 0.0) THEN ln("DT_Output_1"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_4" IS NULL OR "DT_Output_1"."P_4" > 0.0) THEN ln("DT_Output_1"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_5" IS NULL OR "DT_Output_1"."P_5" > 0.0) THEN ln("DT_Output_1"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_6" IS NULL OR "DT_Output_1"."P_6" > 0.0) THEN ln("DT_Output_1"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_7" IS NULL OR "DT_Output_1"."P_7" > 0.0) THEN ln("DT_Output_1"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_8" IS NULL OR "DT_Output_1"."P_8" > 0.0) THEN ln("DT_Output_1"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_9" IS NULL OR "DT_Output_1"."P_9" > 0.0) THEN ln("DT_Output_1"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_7", 9.0 * (CASE WHEN ("DT_Output_1"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_7" IS NULL OR "DT_Output_1"."P_7" > 0.0) THEN ln("DT_Output_1"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_1"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_0" IS NULL OR "DT_Output_1"."P_0" > 0.0) THEN ln("DT_Output_1"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_1" IS NULL OR "DT_Output_1"."P_1" > 0.0) THEN ln("DT_Output_1"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_2" IS NULL OR "DT_Output_1"."P_2" > 0.0) THEN ln("DT_Output_1"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_3" IS NULL OR "DT_Output_1"."P_3" > 0.0) THEN ln("DT_Output_1"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_4" IS NULL OR "DT_Output_1"."P_4" > 0.0) THEN ln("DT_Output_1"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_5" IS NULL OR "DT_Output_1"."P_5" > 0.0) THEN ln("DT_Output_1"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_6" IS NULL OR "DT_Output_1"."P_6" > 0.0) THEN ln("DT_Output_1"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_7" IS NULL OR "DT_Output_1"."P_7" > 0.0) THEN ln("DT_Output_1"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_8" IS NULL OR "DT_Output_1"."P_8" > 0.0) THEN ln("DT_Output_1"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_9" IS NULL OR "DT_Output_1"."P_9" > 0.0) THEN ln("DT_Output_1"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_7", (9.0 * (CASE WHEN ("DT_Output_1"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_8" IS NULL OR "DT_Output_1"."P_8" > 0.0) THEN ln("DT_Output_1"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_1"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_0" IS NULL OR "DT_Output_1"."P_0" > 0.0) THEN ln("DT_Output_1"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_1" IS NULL OR "DT_Output_1"."P_1" > 0.0) THEN ln("DT_Output_1"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_2" IS NULL OR "DT_Output_1"."P_2" > 0.0) THEN ln("DT_Output_1"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_3" IS NULL OR "DT_Output_1"."P_3" > 0.0) THEN ln("DT_Output_1"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_4" IS NULL OR "DT_Output_1"."P_4" > 0.0) THEN ln("DT_Output_1"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_5" IS NULL OR "DT_Output_1"."P_5" > 0.0) THEN ln("DT_Output_1"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_6" IS NULL OR "DT_Output_1"."P_6" > 0.0) THEN ln("DT_Output_1"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_7" IS NULL OR "DT_Output_1"."P_7" > 0.0) THEN ln("DT_Output_1"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_8" IS NULL OR "DT_Output_1"."P_8" > 0.0) THEN ln("DT_Output_1"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_9" IS NULL OR "DT_Output_1"."P_9" > 0.0) THEN ln("DT_Output_1"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_8", 9.0 * (CASE WHEN ("DT_Output_1"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_8" IS NULL OR "DT_Output_1"."P_8" > 0.0) THEN ln("DT_Output_1"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_1"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_0" IS NULL OR "DT_Output_1"."P_0" > 0.0) THEN ln("DT_Output_1"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_1" IS NULL OR "DT_Output_1"."P_1" > 0.0) THEN ln("DT_Output_1"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_2" IS NULL OR "DT_Output_1"."P_2" > 0.0) THEN ln("DT_Output_1"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_3" IS NULL OR "DT_Output_1"."P_3" > 0.0) THEN ln("DT_Output_1"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_4" IS NULL OR "DT_Output_1"."P_4" > 0.0) THEN ln("DT_Output_1"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_5" IS NULL OR "DT_Output_1"."P_5" > 0.0) THEN ln("DT_Output_1"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_6" IS NULL OR "DT_Output_1"."P_6" > 0.0) THEN ln("DT_Output_1"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_7" IS NULL OR "DT_Output_1"."P_7" > 0.0) THEN ln("DT_Output_1"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_8" IS NULL OR "DT_Output_1"."P_8" > 0.0) THEN ln("DT_Output_1"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_9" IS NULL OR "DT_Output_1"."P_9" > 0.0) THEN ln("DT_Output_1"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_8", (9.0 * (CASE WHEN ("DT_Output_1"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_9" IS NULL OR "DT_Output_1"."P_9" > 0.0) THEN ln("DT_Output_1"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_1"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_0" IS NULL OR "DT_Output_1"."P_0" > 0.0) THEN ln("DT_Output_1"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_1" IS NULL OR "DT_Output_1"."P_1" > 0.0) THEN ln("DT_Output_1"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_2" IS NULL OR "DT_Output_1"."P_2" > 0.0) THEN ln("DT_Output_1"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_3" IS NULL OR "DT_Output_1"."P_3" > 0.0) THEN ln("DT_Output_1"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_4" IS NULL OR "DT_Output_1"."P_4" > 0.0) THEN ln("DT_Output_1"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_5" IS NULL OR "DT_Output_1"."P_5" > 0.0) THEN ln("DT_Output_1"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_6" IS NULL OR "DT_Output_1"."P_6" > 0.0) THEN ln("DT_Output_1"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_7" IS NULL OR "DT_Output_1"."P_7" > 0.0) THEN ln("DT_Output_1"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_8" IS NULL OR "DT_Output_1"."P_8" > 0.0) THEN ln("DT_Output_1"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_9" IS NULL OR "DT_Output_1"."P_9" > 0.0) THEN ln("DT_Output_1"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_9", 9.0 * (CASE WHEN ("DT_Output_1"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_9" IS NULL OR "DT_Output_1"."P_9" > 0.0) THEN ln("DT_Output_1"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_1"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_0" IS NULL OR "DT_Output_1"."P_0" > 0.0) THEN ln("DT_Output_1"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_1" IS NULL OR "DT_Output_1"."P_1" > 0.0) THEN ln("DT_Output_1"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_2" IS NULL OR "DT_Output_1"."P_2" > 0.0) THEN ln("DT_Output_1"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_3" IS NULL OR "DT_Output_1"."P_3" > 0.0) THEN ln("DT_Output_1"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_4" IS NULL OR "DT_Output_1"."P_4" > 0.0) THEN ln("DT_Output_1"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_5" IS NULL OR "DT_Output_1"."P_5" > 0.0) THEN ln("DT_Output_1"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_6" IS NULL OR "DT_Output_1"."P_6" > 0.0) THEN ln("DT_Output_1"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_7" IS NULL OR "DT_Output_1"."P_7" > 0.0) THEN ln("DT_Output_1"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_8" IS NULL OR "DT_Output_1"."P_8" > 0.0) THEN ln("DT_Output_1"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_1"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_9" IS NULL OR "DT_Output_1"."P_9" > 0.0) THEN ln("DT_Output_1"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_9" 
FROM "DT_Output_1"), 
"DT_node_lookup_2" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_30 <= -1.555469036102295) THEN 1 ELSE 2 END AS node_id_2 
FROM "DEGEN_YN11LY_ADS_SCA_2_OUT" "ADS_sca_2_OUT"), 
"DT_node_data_2" AS 
(SELECT "Values".nid AS nid, CAST("Values"."P_0" AS BINARY_DOUBLE) AS "P_0", CAST("Values"."P_1" AS BINARY_DOUBLE) AS "P_1", CAST("Values"."P_2" AS BINARY_DOUBLE) AS "P_2", CAST("Values"."P_3" AS BINARY_DOUBLE) AS "P_3", CAST("Values"."P_4" AS BINARY_DOUBLE) AS "P_4", CAST("Values"."P_5" AS BINARY_DOUBLE) AS "P_5", CAST("Values"."P_6" AS BINARY_DOUBLE) AS "P_6", CAST("Values"."P_7" AS BINARY_DOUBLE) AS "P_7", CAST("Values"."P_8" AS BINARY_DOUBLE) AS "P_8", CAST("Values"."P_9" AS BINARY_DOUBLE) AS "P_9", CAST("Values"."D" AS BINARY_DOUBLE) AS "D", CAST("Values"."DP" AS BINARY_DOUBLE) AS "DP" 
FROM (SELECT 1 AS nid, 0.8200137388830062 AS "P_0", 0.006822762732228794 AS "P_1", 0.014067017276077478 AS "P_2", 0.011392944986726041 AS "P_3", 0.0853778576330954 AS "P_4", 0.008430814954946709 AS "P_5", 0.02925889726414113 AS "P_6", 0.016829481406164356 AS "P_7", 0.0 AS "P_8", 0.007806484863613861 AS "P_9", 0 AS "D", 0.8200137388830062 AS "DP" FROM DUAL UNION ALL SELECT 2 AS nid, 1.1017395863598151e-06 AS "P_0", 0.11294089343931273 AS "P_1", 0.11193477725849307 AS "P_2", 0.11230616500898098 AS "P_3", 0.10203079198067228 AS "P_4", 0.11271755957506394 AS "P_5", 0.10982485743436904 AS "P_6", 0.11155111323296805 AS "P_7", 0.11388847085272974 AS "P_8", 0.11280426947782386 AS "P_9", 8 AS "D", 0.11388847085272974 AS "DP" FROM DUAL) "Values"), 
"DT_Output_2" AS 
(SELECT "DT_node_lookup_2"."KEY" AS "KEY", "DT_node_lookup_2".node_id_2 AS node_id_2, "DT_node_data_2".nid AS nid, "DT_node_data_2"."P_0" AS "P_0", "DT_node_data_2"."P_1" AS "P_1", "DT_node_data_2"."P_2" AS "P_2", "DT_node_data_2"."P_3" AS "P_3", "DT_node_data_2"."P_4" AS "P_4", "DT_node_data_2"."P_5" AS "P_5", "DT_node_data_2"."P_6" AS "P_6", "DT_node_data_2"."P_7" AS "P_7", "DT_node_data_2"."P_8" AS "P_8", "DT_node_data_2"."P_9" AS "P_9", "DT_node_data_2"."D" AS "D", "DT_node_data_2"."DP" AS "DP" 
FROM "DT_node_lookup_2" LEFT OUTER JOIN "DT_node_data_2" ON "DT_node_lookup_2".node_id_2 = "DT_node_data_2".nid), 
"ADB_Model_2" AS 
(SELECT "DT_Output_2"."KEY" AS "KEY", (9.0 * (CASE WHEN ("DT_Output_2"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_0" IS NULL OR "DT_Output_2"."P_0" > 0.0) THEN ln("DT_Output_2"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_2"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_0" IS NULL OR "DT_Output_2"."P_0" > 0.0) THEN ln("DT_Output_2"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_1" IS NULL OR "DT_Output_2"."P_1" > 0.0) THEN ln("DT_Output_2"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_2" IS NULL OR "DT_Output_2"."P_2" > 0.0) THEN ln("DT_Output_2"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_3" IS NULL OR "DT_Output_2"."P_3" > 0.0) THEN ln("DT_Output_2"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_4" IS NULL OR "DT_Output_2"."P_4" > 0.0) THEN ln("DT_Output_2"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_5" IS NULL OR "DT_Output_2"."P_5" > 0.0) THEN ln("DT_Output_2"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_6" IS NULL OR "DT_Output_2"."P_6" > 0.0) THEN ln("DT_Output_2"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_7" IS NULL OR "DT_Output_2"."P_7" > 0.0) THEN ln("DT_Output_2"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_8" IS NULL OR "DT_Output_2"."P_8" > 0.0) THEN ln("DT_Output_2"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_9" IS NULL OR "DT_Output_2"."P_9" > 0.0) THEN ln("DT_Output_2"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_0", 9.0 * (CASE WHEN ("DT_Output_2"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_0" IS NULL OR "DT_Output_2"."P_0" > 0.0) THEN ln("DT_Output_2"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_2"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_0" IS NULL OR "DT_Output_2"."P_0" > 0.0) THEN ln("DT_Output_2"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_1" IS NULL OR "DT_Output_2"."P_1" > 0.0) THEN ln("DT_Output_2"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_2" IS NULL OR "DT_Output_2"."P_2" > 0.0) THEN ln("DT_Output_2"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_3" IS NULL OR "DT_Output_2"."P_3" > 0.0) THEN ln("DT_Output_2"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_4" IS NULL OR "DT_Output_2"."P_4" > 0.0) THEN ln("DT_Output_2"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_5" IS NULL OR "DT_Output_2"."P_5" > 0.0) THEN ln("DT_Output_2"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_6" IS NULL OR "DT_Output_2"."P_6" > 0.0) THEN ln("DT_Output_2"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_7" IS NULL OR "DT_Output_2"."P_7" > 0.0) THEN ln("DT_Output_2"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_8" IS NULL OR "DT_Output_2"."P_8" > 0.0) THEN ln("DT_Output_2"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_9" IS NULL OR "DT_Output_2"."P_9" > 0.0) THEN ln("DT_Output_2"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_0", (9.0 * (CASE WHEN ("DT_Output_2"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_1" IS NULL OR "DT_Output_2"."P_1" > 0.0) THEN ln("DT_Output_2"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_2"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_0" IS NULL OR "DT_Output_2"."P_0" > 0.0) THEN ln("DT_Output_2"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_1" IS NULL OR "DT_Output_2"."P_1" > 0.0) THEN ln("DT_Output_2"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_2" IS NULL OR "DT_Output_2"."P_2" > 0.0) THEN ln("DT_Output_2"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_3" IS NULL OR "DT_Output_2"."P_3" > 0.0) THEN ln("DT_Output_2"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_4" IS NULL OR "DT_Output_2"."P_4" > 0.0) THEN ln("DT_Output_2"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_5" IS NULL OR "DT_Output_2"."P_5" > 0.0) THEN ln("DT_Output_2"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_6" IS NULL OR "DT_Output_2"."P_6" > 0.0) THEN ln("DT_Output_2"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_7" IS NULL OR "DT_Output_2"."P_7" > 0.0) THEN ln("DT_Output_2"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_8" IS NULL OR "DT_Output_2"."P_8" > 0.0) THEN ln("DT_Output_2"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_9" IS NULL OR "DT_Output_2"."P_9" > 0.0) THEN ln("DT_Output_2"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_1", 9.0 * (CASE WHEN ("DT_Output_2"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_1" IS NULL OR "DT_Output_2"."P_1" > 0.0) THEN ln("DT_Output_2"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_2"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_0" IS NULL OR "DT_Output_2"."P_0" > 0.0) THEN ln("DT_Output_2"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_1" IS NULL OR "DT_Output_2"."P_1" > 0.0) THEN ln("DT_Output_2"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_2" IS NULL OR "DT_Output_2"."P_2" > 0.0) THEN ln("DT_Output_2"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_3" IS NULL OR "DT_Output_2"."P_3" > 0.0) THEN ln("DT_Output_2"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_4" IS NULL OR "DT_Output_2"."P_4" > 0.0) THEN ln("DT_Output_2"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_5" IS NULL OR "DT_Output_2"."P_5" > 0.0) THEN ln("DT_Output_2"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_6" IS NULL OR "DT_Output_2"."P_6" > 0.0) THEN ln("DT_Output_2"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_7" IS NULL OR "DT_Output_2"."P_7" > 0.0) THEN ln("DT_Output_2"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_8" IS NULL OR "DT_Output_2"."P_8" > 0.0) THEN ln("DT_Output_2"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_9" IS NULL OR "DT_Output_2"."P_9" > 0.0) THEN ln("DT_Output_2"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_1", (9.0 * (CASE WHEN ("DT_Output_2"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_2" IS NULL OR "DT_Output_2"."P_2" > 0.0) THEN ln("DT_Output_2"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_2"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_0" IS NULL OR "DT_Output_2"."P_0" > 0.0) THEN ln("DT_Output_2"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_1" IS NULL OR "DT_Output_2"."P_1" > 0.0) THEN ln("DT_Output_2"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_2" IS NULL OR "DT_Output_2"."P_2" > 0.0) THEN ln("DT_Output_2"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_3" IS NULL OR "DT_Output_2"."P_3" > 0.0) THEN ln("DT_Output_2"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_4" IS NULL OR "DT_Output_2"."P_4" > 0.0) THEN ln("DT_Output_2"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_5" IS NULL OR "DT_Output_2"."P_5" > 0.0) THEN ln("DT_Output_2"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_6" IS NULL OR "DT_Output_2"."P_6" > 0.0) THEN ln("DT_Output_2"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_7" IS NULL OR "DT_Output_2"."P_7" > 0.0) THEN ln("DT_Output_2"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_8" IS NULL OR "DT_Output_2"."P_8" > 0.0) THEN ln("DT_Output_2"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_9" IS NULL OR "DT_Output_2"."P_9" > 0.0) THEN ln("DT_Output_2"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_2", 9.0 * (CASE WHEN ("DT_Output_2"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_2" IS NULL OR "DT_Output_2"."P_2" > 0.0) THEN ln("DT_Output_2"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_2"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_0" IS NULL OR "DT_Output_2"."P_0" > 0.0) THEN ln("DT_Output_2"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_1" IS NULL OR "DT_Output_2"."P_1" > 0.0) THEN ln("DT_Output_2"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_2" IS NULL OR "DT_Output_2"."P_2" > 0.0) THEN ln("DT_Output_2"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_3" IS NULL OR "DT_Output_2"."P_3" > 0.0) THEN ln("DT_Output_2"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_4" IS NULL OR "DT_Output_2"."P_4" > 0.0) THEN ln("DT_Output_2"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_5" IS NULL OR "DT_Output_2"."P_5" > 0.0) THEN ln("DT_Output_2"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_6" IS NULL OR "DT_Output_2"."P_6" > 0.0) THEN ln("DT_Output_2"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_7" IS NULL OR "DT_Output_2"."P_7" > 0.0) THEN ln("DT_Output_2"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_8" IS NULL OR "DT_Output_2"."P_8" > 0.0) THEN ln("DT_Output_2"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_9" IS NULL OR "DT_Output_2"."P_9" > 0.0) THEN ln("DT_Output_2"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_2", (9.0 * (CASE WHEN ("DT_Output_2"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_3" IS NULL OR "DT_Output_2"."P_3" > 0.0) THEN ln("DT_Output_2"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_2"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_0" IS NULL OR "DT_Output_2"."P_0" > 0.0) THEN ln("DT_Output_2"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_1" IS NULL OR "DT_Output_2"."P_1" > 0.0) THEN ln("DT_Output_2"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_2" IS NULL OR "DT_Output_2"."P_2" > 0.0) THEN ln("DT_Output_2"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_3" IS NULL OR "DT_Output_2"."P_3" > 0.0) THEN ln("DT_Output_2"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_4" IS NULL OR "DT_Output_2"."P_4" > 0.0) THEN ln("DT_Output_2"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_5" IS NULL OR "DT_Output_2"."P_5" > 0.0) THEN ln("DT_Output_2"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_6" IS NULL OR "DT_Output_2"."P_6" > 0.0) THEN ln("DT_Output_2"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_7" IS NULL OR "DT_Output_2"."P_7" > 0.0) THEN ln("DT_Output_2"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_8" IS NULL OR "DT_Output_2"."P_8" > 0.0) THEN ln("DT_Output_2"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_9" IS NULL OR "DT_Output_2"."P_9" > 0.0) THEN ln("DT_Output_2"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_3", 9.0 * (CASE WHEN ("DT_Output_2"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_3" IS NULL OR "DT_Output_2"."P_3" > 0.0) THEN ln("DT_Output_2"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_2"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_0" IS NULL OR "DT_Output_2"."P_0" > 0.0) THEN ln("DT_Output_2"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_1" IS NULL OR "DT_Output_2"."P_1" > 0.0) THEN ln("DT_Output_2"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_2" IS NULL OR "DT_Output_2"."P_2" > 0.0) THEN ln("DT_Output_2"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_3" IS NULL OR "DT_Output_2"."P_3" > 0.0) THEN ln("DT_Output_2"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_4" IS NULL OR "DT_Output_2"."P_4" > 0.0) THEN ln("DT_Output_2"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_5" IS NULL OR "DT_Output_2"."P_5" > 0.0) THEN ln("DT_Output_2"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_6" IS NULL OR "DT_Output_2"."P_6" > 0.0) THEN ln("DT_Output_2"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_7" IS NULL OR "DT_Output_2"."P_7" > 0.0) THEN ln("DT_Output_2"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_8" IS NULL OR "DT_Output_2"."P_8" > 0.0) THEN ln("DT_Output_2"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_9" IS NULL OR "DT_Output_2"."P_9" > 0.0) THEN ln("DT_Output_2"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_3", (9.0 * (CASE WHEN ("DT_Output_2"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_4" IS NULL OR "DT_Output_2"."P_4" > 0.0) THEN ln("DT_Output_2"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_2"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_0" IS NULL OR "DT_Output_2"."P_0" > 0.0) THEN ln("DT_Output_2"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_1" IS NULL OR "DT_Output_2"."P_1" > 0.0) THEN ln("DT_Output_2"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_2" IS NULL OR "DT_Output_2"."P_2" > 0.0) THEN ln("DT_Output_2"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_3" IS NULL OR "DT_Output_2"."P_3" > 0.0) THEN ln("DT_Output_2"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_4" IS NULL OR "DT_Output_2"."P_4" > 0.0) THEN ln("DT_Output_2"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_5" IS NULL OR "DT_Output_2"."P_5" > 0.0) THEN ln("DT_Output_2"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_6" IS NULL OR "DT_Output_2"."P_6" > 0.0) THEN ln("DT_Output_2"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_7" IS NULL OR "DT_Output_2"."P_7" > 0.0) THEN ln("DT_Output_2"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_8" IS NULL OR "DT_Output_2"."P_8" > 0.0) THEN ln("DT_Output_2"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_9" IS NULL OR "DT_Output_2"."P_9" > 0.0) THEN ln("DT_Output_2"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_4", 9.0 * (CASE WHEN ("DT_Output_2"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_4" IS NULL OR "DT_Output_2"."P_4" > 0.0) THEN ln("DT_Output_2"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_2"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_0" IS NULL OR "DT_Output_2"."P_0" > 0.0) THEN ln("DT_Output_2"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_1" IS NULL OR "DT_Output_2"."P_1" > 0.0) THEN ln("DT_Output_2"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_2" IS NULL OR "DT_Output_2"."P_2" > 0.0) THEN ln("DT_Output_2"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_3" IS NULL OR "DT_Output_2"."P_3" > 0.0) THEN ln("DT_Output_2"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_4" IS NULL OR "DT_Output_2"."P_4" > 0.0) THEN ln("DT_Output_2"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_5" IS NULL OR "DT_Output_2"."P_5" > 0.0) THEN ln("DT_Output_2"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_6" IS NULL OR "DT_Output_2"."P_6" > 0.0) THEN ln("DT_Output_2"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_7" IS NULL OR "DT_Output_2"."P_7" > 0.0) THEN ln("DT_Output_2"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_8" IS NULL OR "DT_Output_2"."P_8" > 0.0) THEN ln("DT_Output_2"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_9" IS NULL OR "DT_Output_2"."P_9" > 0.0) THEN ln("DT_Output_2"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_4", (9.0 * (CASE WHEN ("DT_Output_2"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_5" IS NULL OR "DT_Output_2"."P_5" > 0.0) THEN ln("DT_Output_2"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_2"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_0" IS NULL OR "DT_Output_2"."P_0" > 0.0) THEN ln("DT_Output_2"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_1" IS NULL OR "DT_Output_2"."P_1" > 0.0) THEN ln("DT_Output_2"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_2" IS NULL OR "DT_Output_2"."P_2" > 0.0) THEN ln("DT_Output_2"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_3" IS NULL OR "DT_Output_2"."P_3" > 0.0) THEN ln("DT_Output_2"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_4" IS NULL OR "DT_Output_2"."P_4" > 0.0) THEN ln("DT_Output_2"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_5" IS NULL OR "DT_Output_2"."P_5" > 0.0) THEN ln("DT_Output_2"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_6" IS NULL OR "DT_Output_2"."P_6" > 0.0) THEN ln("DT_Output_2"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_7" IS NULL OR "DT_Output_2"."P_7" > 0.0) THEN ln("DT_Output_2"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_8" IS NULL OR "DT_Output_2"."P_8" > 0.0) THEN ln("DT_Output_2"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_9" IS NULL OR "DT_Output_2"."P_9" > 0.0) THEN ln("DT_Output_2"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_5", 9.0 * (CASE WHEN ("DT_Output_2"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_5" IS NULL OR "DT_Output_2"."P_5" > 0.0) THEN ln("DT_Output_2"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_2"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_0" IS NULL OR "DT_Output_2"."P_0" > 0.0) THEN ln("DT_Output_2"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_1" IS NULL OR "DT_Output_2"."P_1" > 0.0) THEN ln("DT_Output_2"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_2" IS NULL OR "DT_Output_2"."P_2" > 0.0) THEN ln("DT_Output_2"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_3" IS NULL OR "DT_Output_2"."P_3" > 0.0) THEN ln("DT_Output_2"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_4" IS NULL OR "DT_Output_2"."P_4" > 0.0) THEN ln("DT_Output_2"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_5" IS NULL OR "DT_Output_2"."P_5" > 0.0) THEN ln("DT_Output_2"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_6" IS NULL OR "DT_Output_2"."P_6" > 0.0) THEN ln("DT_Output_2"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_7" IS NULL OR "DT_Output_2"."P_7" > 0.0) THEN ln("DT_Output_2"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_8" IS NULL OR "DT_Output_2"."P_8" > 0.0) THEN ln("DT_Output_2"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_9" IS NULL OR "DT_Output_2"."P_9" > 0.0) THEN ln("DT_Output_2"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_5", (9.0 * (CASE WHEN ("DT_Output_2"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_6" IS NULL OR "DT_Output_2"."P_6" > 0.0) THEN ln("DT_Output_2"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_2"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_0" IS NULL OR "DT_Output_2"."P_0" > 0.0) THEN ln("DT_Output_2"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_1" IS NULL OR "DT_Output_2"."P_1" > 0.0) THEN ln("DT_Output_2"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_2" IS NULL OR "DT_Output_2"."P_2" > 0.0) THEN ln("DT_Output_2"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_3" IS NULL OR "DT_Output_2"."P_3" > 0.0) THEN ln("DT_Output_2"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_4" IS NULL OR "DT_Output_2"."P_4" > 0.0) THEN ln("DT_Output_2"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_5" IS NULL OR "DT_Output_2"."P_5" > 0.0) THEN ln("DT_Output_2"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_6" IS NULL OR "DT_Output_2"."P_6" > 0.0) THEN ln("DT_Output_2"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_7" IS NULL OR "DT_Output_2"."P_7" > 0.0) THEN ln("DT_Output_2"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_8" IS NULL OR "DT_Output_2"."P_8" > 0.0) THEN ln("DT_Output_2"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_9" IS NULL OR "DT_Output_2"."P_9" > 0.0) THEN ln("DT_Output_2"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_6", 9.0 * (CASE WHEN ("DT_Output_2"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_6" IS NULL OR "DT_Output_2"."P_6" > 0.0) THEN ln("DT_Output_2"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_2"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_0" IS NULL OR "DT_Output_2"."P_0" > 0.0) THEN ln("DT_Output_2"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_1" IS NULL OR "DT_Output_2"."P_1" > 0.0) THEN ln("DT_Output_2"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_2" IS NULL OR "DT_Output_2"."P_2" > 0.0) THEN ln("DT_Output_2"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_3" IS NULL OR "DT_Output_2"."P_3" > 0.0) THEN ln("DT_Output_2"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_4" IS NULL OR "DT_Output_2"."P_4" > 0.0) THEN ln("DT_Output_2"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_5" IS NULL OR "DT_Output_2"."P_5" > 0.0) THEN ln("DT_Output_2"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_6" IS NULL OR "DT_Output_2"."P_6" > 0.0) THEN ln("DT_Output_2"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_7" IS NULL OR "DT_Output_2"."P_7" > 0.0) THEN ln("DT_Output_2"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_8" IS NULL OR "DT_Output_2"."P_8" > 0.0) THEN ln("DT_Output_2"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_9" IS NULL OR "DT_Output_2"."P_9" > 0.0) THEN ln("DT_Output_2"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_6", (9.0 * (CASE WHEN ("DT_Output_2"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_7" IS NULL OR "DT_Output_2"."P_7" > 0.0) THEN ln("DT_Output_2"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_2"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_0" IS NULL OR "DT_Output_2"."P_0" > 0.0) THEN ln("DT_Output_2"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_1" IS NULL OR "DT_Output_2"."P_1" > 0.0) THEN ln("DT_Output_2"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_2" IS NULL OR "DT_Output_2"."P_2" > 0.0) THEN ln("DT_Output_2"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_3" IS NULL OR "DT_Output_2"."P_3" > 0.0) THEN ln("DT_Output_2"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_4" IS NULL OR "DT_Output_2"."P_4" > 0.0) THEN ln("DT_Output_2"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_5" IS NULL OR "DT_Output_2"."P_5" > 0.0) THEN ln("DT_Output_2"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_6" IS NULL OR "DT_Output_2"."P_6" > 0.0) THEN ln("DT_Output_2"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_7" IS NULL OR "DT_Output_2"."P_7" > 0.0) THEN ln("DT_Output_2"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_8" IS NULL OR "DT_Output_2"."P_8" > 0.0) THEN ln("DT_Output_2"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_9" IS NULL OR "DT_Output_2"."P_9" > 0.0) THEN ln("DT_Output_2"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_7", 9.0 * (CASE WHEN ("DT_Output_2"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_7" IS NULL OR "DT_Output_2"."P_7" > 0.0) THEN ln("DT_Output_2"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_2"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_0" IS NULL OR "DT_Output_2"."P_0" > 0.0) THEN ln("DT_Output_2"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_1" IS NULL OR "DT_Output_2"."P_1" > 0.0) THEN ln("DT_Output_2"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_2" IS NULL OR "DT_Output_2"."P_2" > 0.0) THEN ln("DT_Output_2"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_3" IS NULL OR "DT_Output_2"."P_3" > 0.0) THEN ln("DT_Output_2"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_4" IS NULL OR "DT_Output_2"."P_4" > 0.0) THEN ln("DT_Output_2"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_5" IS NULL OR "DT_Output_2"."P_5" > 0.0) THEN ln("DT_Output_2"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_6" IS NULL OR "DT_Output_2"."P_6" > 0.0) THEN ln("DT_Output_2"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_7" IS NULL OR "DT_Output_2"."P_7" > 0.0) THEN ln("DT_Output_2"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_8" IS NULL OR "DT_Output_2"."P_8" > 0.0) THEN ln("DT_Output_2"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_9" IS NULL OR "DT_Output_2"."P_9" > 0.0) THEN ln("DT_Output_2"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_7", (9.0 * (CASE WHEN ("DT_Output_2"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_8" IS NULL OR "DT_Output_2"."P_8" > 0.0) THEN ln("DT_Output_2"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_2"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_0" IS NULL OR "DT_Output_2"."P_0" > 0.0) THEN ln("DT_Output_2"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_1" IS NULL OR "DT_Output_2"."P_1" > 0.0) THEN ln("DT_Output_2"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_2" IS NULL OR "DT_Output_2"."P_2" > 0.0) THEN ln("DT_Output_2"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_3" IS NULL OR "DT_Output_2"."P_3" > 0.0) THEN ln("DT_Output_2"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_4" IS NULL OR "DT_Output_2"."P_4" > 0.0) THEN ln("DT_Output_2"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_5" IS NULL OR "DT_Output_2"."P_5" > 0.0) THEN ln("DT_Output_2"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_6" IS NULL OR "DT_Output_2"."P_6" > 0.0) THEN ln("DT_Output_2"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_7" IS NULL OR "DT_Output_2"."P_7" > 0.0) THEN ln("DT_Output_2"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_8" IS NULL OR "DT_Output_2"."P_8" > 0.0) THEN ln("DT_Output_2"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_9" IS NULL OR "DT_Output_2"."P_9" > 0.0) THEN ln("DT_Output_2"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_8", 9.0 * (CASE WHEN ("DT_Output_2"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_8" IS NULL OR "DT_Output_2"."P_8" > 0.0) THEN ln("DT_Output_2"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_2"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_0" IS NULL OR "DT_Output_2"."P_0" > 0.0) THEN ln("DT_Output_2"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_1" IS NULL OR "DT_Output_2"."P_1" > 0.0) THEN ln("DT_Output_2"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_2" IS NULL OR "DT_Output_2"."P_2" > 0.0) THEN ln("DT_Output_2"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_3" IS NULL OR "DT_Output_2"."P_3" > 0.0) THEN ln("DT_Output_2"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_4" IS NULL OR "DT_Output_2"."P_4" > 0.0) THEN ln("DT_Output_2"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_5" IS NULL OR "DT_Output_2"."P_5" > 0.0) THEN ln("DT_Output_2"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_6" IS NULL OR "DT_Output_2"."P_6" > 0.0) THEN ln("DT_Output_2"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_7" IS NULL OR "DT_Output_2"."P_7" > 0.0) THEN ln("DT_Output_2"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_8" IS NULL OR "DT_Output_2"."P_8" > 0.0) THEN ln("DT_Output_2"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_9" IS NULL OR "DT_Output_2"."P_9" > 0.0) THEN ln("DT_Output_2"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_8", (9.0 * (CASE WHEN ("DT_Output_2"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_9" IS NULL OR "DT_Output_2"."P_9" > 0.0) THEN ln("DT_Output_2"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_2"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_0" IS NULL OR "DT_Output_2"."P_0" > 0.0) THEN ln("DT_Output_2"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_1" IS NULL OR "DT_Output_2"."P_1" > 0.0) THEN ln("DT_Output_2"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_2" IS NULL OR "DT_Output_2"."P_2" > 0.0) THEN ln("DT_Output_2"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_3" IS NULL OR "DT_Output_2"."P_3" > 0.0) THEN ln("DT_Output_2"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_4" IS NULL OR "DT_Output_2"."P_4" > 0.0) THEN ln("DT_Output_2"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_5" IS NULL OR "DT_Output_2"."P_5" > 0.0) THEN ln("DT_Output_2"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_6" IS NULL OR "DT_Output_2"."P_6" > 0.0) THEN ln("DT_Output_2"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_7" IS NULL OR "DT_Output_2"."P_7" > 0.0) THEN ln("DT_Output_2"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_8" IS NULL OR "DT_Output_2"."P_8" > 0.0) THEN ln("DT_Output_2"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_9" IS NULL OR "DT_Output_2"."P_9" > 0.0) THEN ln("DT_Output_2"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_9", 9.0 * (CASE WHEN ("DT_Output_2"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_9" IS NULL OR "DT_Output_2"."P_9" > 0.0) THEN ln("DT_Output_2"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_2"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_0" IS NULL OR "DT_Output_2"."P_0" > 0.0) THEN ln("DT_Output_2"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_1" IS NULL OR "DT_Output_2"."P_1" > 0.0) THEN ln("DT_Output_2"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_2" IS NULL OR "DT_Output_2"."P_2" > 0.0) THEN ln("DT_Output_2"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_3" IS NULL OR "DT_Output_2"."P_3" > 0.0) THEN ln("DT_Output_2"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_4" IS NULL OR "DT_Output_2"."P_4" > 0.0) THEN ln("DT_Output_2"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_5" IS NULL OR "DT_Output_2"."P_5" > 0.0) THEN ln("DT_Output_2"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_6" IS NULL OR "DT_Output_2"."P_6" > 0.0) THEN ln("DT_Output_2"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_7" IS NULL OR "DT_Output_2"."P_7" > 0.0) THEN ln("DT_Output_2"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_8" IS NULL OR "DT_Output_2"."P_8" > 0.0) THEN ln("DT_Output_2"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_2"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_9" IS NULL OR "DT_Output_2"."P_9" > 0.0) THEN ln("DT_Output_2"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_9" 
FROM "DT_Output_2"), 
"DT_node_lookup_3" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_38 <= -1.6508052349090576) THEN 1 ELSE 2 END AS node_id_2 
FROM "DEGEN_YN11LY_ADS_SCA_2_OUT" "ADS_sca_2_OUT"), 
"DT_node_data_3" AS 
(SELECT "Values".nid AS nid, CAST("Values"."P_0" AS BINARY_DOUBLE) AS "P_0", CAST("Values"."P_1" AS BINARY_DOUBLE) AS "P_1", CAST("Values"."P_2" AS BINARY_DOUBLE) AS "P_2", CAST("Values"."P_3" AS BINARY_DOUBLE) AS "P_3", CAST("Values"."P_4" AS BINARY_DOUBLE) AS "P_4", CAST("Values"."P_5" AS BINARY_DOUBLE) AS "P_5", CAST("Values"."P_6" AS BINARY_DOUBLE) AS "P_6", CAST("Values"."P_7" AS BINARY_DOUBLE) AS "P_7", CAST("Values"."P_8" AS BINARY_DOUBLE) AS "P_8", CAST("Values"."P_9" AS BINARY_DOUBLE) AS "P_9", CAST("Values"."D" AS BINARY_DOUBLE) AS "D", CAST("Values"."DP" AS BINARY_DOUBLE) AS "DP" 
FROM (SELECT 1 AS nid, 0.9968768192530113 AS "P_0", 0.0 AS "P_1", 3.7264412185948446e-05 AS "P_2", 0.00012894688506913594 AS "P_3", 1.2230695729073658e-05 AS "P_4", 0.0013029763672534236 AS "P_5", 0.0014017937820514402 AS "P_6", 0.0 AS "P_7", 0.00012017423198661139 AS "P_8", 0.000119794372713099 AS "P_9", 0 AS "D", 0.9968768192530113 AS "DP" FROM DUAL UNION ALL SELECT 2 AS nid, 0.00038130527807022686 AS "P_0", 0.11115318433344484 AS "P_1", 0.1111490435520766 AS "P_2", 0.11113885589438209 AS "P_3", 0.11115182527170131 AS "P_4", 0.11100839900212053 AS "P_5", 0.1109974185173606 AS "P_6", 0.11115318433344523 AS "P_7", 0.11072691090569513 AS "P_8", 0.11113987291170337 AS "P_9", 7 AS "D", 0.11115318433344523 AS "DP" FROM DUAL) "Values"), 
"DT_Output_3" AS 
(SELECT "DT_node_lookup_3"."KEY" AS "KEY", "DT_node_lookup_3".node_id_2 AS node_id_2, "DT_node_data_3".nid AS nid, "DT_node_data_3"."P_0" AS "P_0", "DT_node_data_3"."P_1" AS "P_1", "DT_node_data_3"."P_2" AS "P_2", "DT_node_data_3"."P_3" AS "P_3", "DT_node_data_3"."P_4" AS "P_4", "DT_node_data_3"."P_5" AS "P_5", "DT_node_data_3"."P_6" AS "P_6", "DT_node_data_3"."P_7" AS "P_7", "DT_node_data_3"."P_8" AS "P_8", "DT_node_data_3"."P_9" AS "P_9", "DT_node_data_3"."D" AS "D", "DT_node_data_3"."DP" AS "DP" 
FROM "DT_node_lookup_3" LEFT OUTER JOIN "DT_node_data_3" ON "DT_node_lookup_3".node_id_2 = "DT_node_data_3".nid), 
"ADB_Model_3" AS 
(SELECT "DT_Output_3"."KEY" AS "KEY", (9.0 * (CASE WHEN ("DT_Output_3"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_0" IS NULL OR "DT_Output_3"."P_0" > 0.0) THEN ln("DT_Output_3"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_3"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_0" IS NULL OR "DT_Output_3"."P_0" > 0.0) THEN ln("DT_Output_3"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_1" IS NULL OR "DT_Output_3"."P_1" > 0.0) THEN ln("DT_Output_3"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_2" IS NULL OR "DT_Output_3"."P_2" > 0.0) THEN ln("DT_Output_3"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_3" IS NULL OR "DT_Output_3"."P_3" > 0.0) THEN ln("DT_Output_3"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_4" IS NULL OR "DT_Output_3"."P_4" > 0.0) THEN ln("DT_Output_3"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_5" IS NULL OR "DT_Output_3"."P_5" > 0.0) THEN ln("DT_Output_3"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_6" IS NULL OR "DT_Output_3"."P_6" > 0.0) THEN ln("DT_Output_3"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_7" IS NULL OR "DT_Output_3"."P_7" > 0.0) THEN ln("DT_Output_3"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_8" IS NULL OR "DT_Output_3"."P_8" > 0.0) THEN ln("DT_Output_3"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_9" IS NULL OR "DT_Output_3"."P_9" > 0.0) THEN ln("DT_Output_3"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_0", 9.0 * (CASE WHEN ("DT_Output_3"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_0" IS NULL OR "DT_Output_3"."P_0" > 0.0) THEN ln("DT_Output_3"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_3"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_0" IS NULL OR "DT_Output_3"."P_0" > 0.0) THEN ln("DT_Output_3"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_1" IS NULL OR "DT_Output_3"."P_1" > 0.0) THEN ln("DT_Output_3"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_2" IS NULL OR "DT_Output_3"."P_2" > 0.0) THEN ln("DT_Output_3"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_3" IS NULL OR "DT_Output_3"."P_3" > 0.0) THEN ln("DT_Output_3"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_4" IS NULL OR "DT_Output_3"."P_4" > 0.0) THEN ln("DT_Output_3"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_5" IS NULL OR "DT_Output_3"."P_5" > 0.0) THEN ln("DT_Output_3"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_6" IS NULL OR "DT_Output_3"."P_6" > 0.0) THEN ln("DT_Output_3"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_7" IS NULL OR "DT_Output_3"."P_7" > 0.0) THEN ln("DT_Output_3"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_8" IS NULL OR "DT_Output_3"."P_8" > 0.0) THEN ln("DT_Output_3"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_9" IS NULL OR "DT_Output_3"."P_9" > 0.0) THEN ln("DT_Output_3"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_0", (9.0 * (CASE WHEN ("DT_Output_3"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_1" IS NULL OR "DT_Output_3"."P_1" > 0.0) THEN ln("DT_Output_3"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_3"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_0" IS NULL OR "DT_Output_3"."P_0" > 0.0) THEN ln("DT_Output_3"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_1" IS NULL OR "DT_Output_3"."P_1" > 0.0) THEN ln("DT_Output_3"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_2" IS NULL OR "DT_Output_3"."P_2" > 0.0) THEN ln("DT_Output_3"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_3" IS NULL OR "DT_Output_3"."P_3" > 0.0) THEN ln("DT_Output_3"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_4" IS NULL OR "DT_Output_3"."P_4" > 0.0) THEN ln("DT_Output_3"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_5" IS NULL OR "DT_Output_3"."P_5" > 0.0) THEN ln("DT_Output_3"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_6" IS NULL OR "DT_Output_3"."P_6" > 0.0) THEN ln("DT_Output_3"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_7" IS NULL OR "DT_Output_3"."P_7" > 0.0) THEN ln("DT_Output_3"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_8" IS NULL OR "DT_Output_3"."P_8" > 0.0) THEN ln("DT_Output_3"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_9" IS NULL OR "DT_Output_3"."P_9" > 0.0) THEN ln("DT_Output_3"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_1", 9.0 * (CASE WHEN ("DT_Output_3"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_1" IS NULL OR "DT_Output_3"."P_1" > 0.0) THEN ln("DT_Output_3"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_3"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_0" IS NULL OR "DT_Output_3"."P_0" > 0.0) THEN ln("DT_Output_3"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_1" IS NULL OR "DT_Output_3"."P_1" > 0.0) THEN ln("DT_Output_3"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_2" IS NULL OR "DT_Output_3"."P_2" > 0.0) THEN ln("DT_Output_3"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_3" IS NULL OR "DT_Output_3"."P_3" > 0.0) THEN ln("DT_Output_3"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_4" IS NULL OR "DT_Output_3"."P_4" > 0.0) THEN ln("DT_Output_3"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_5" IS NULL OR "DT_Output_3"."P_5" > 0.0) THEN ln("DT_Output_3"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_6" IS NULL OR "DT_Output_3"."P_6" > 0.0) THEN ln("DT_Output_3"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_7" IS NULL OR "DT_Output_3"."P_7" > 0.0) THEN ln("DT_Output_3"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_8" IS NULL OR "DT_Output_3"."P_8" > 0.0) THEN ln("DT_Output_3"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_9" IS NULL OR "DT_Output_3"."P_9" > 0.0) THEN ln("DT_Output_3"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_1", (9.0 * (CASE WHEN ("DT_Output_3"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_2" IS NULL OR "DT_Output_3"."P_2" > 0.0) THEN ln("DT_Output_3"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_3"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_0" IS NULL OR "DT_Output_3"."P_0" > 0.0) THEN ln("DT_Output_3"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_1" IS NULL OR "DT_Output_3"."P_1" > 0.0) THEN ln("DT_Output_3"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_2" IS NULL OR "DT_Output_3"."P_2" > 0.0) THEN ln("DT_Output_3"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_3" IS NULL OR "DT_Output_3"."P_3" > 0.0) THEN ln("DT_Output_3"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_4" IS NULL OR "DT_Output_3"."P_4" > 0.0) THEN ln("DT_Output_3"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_5" IS NULL OR "DT_Output_3"."P_5" > 0.0) THEN ln("DT_Output_3"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_6" IS NULL OR "DT_Output_3"."P_6" > 0.0) THEN ln("DT_Output_3"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_7" IS NULL OR "DT_Output_3"."P_7" > 0.0) THEN ln("DT_Output_3"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_8" IS NULL OR "DT_Output_3"."P_8" > 0.0) THEN ln("DT_Output_3"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_9" IS NULL OR "DT_Output_3"."P_9" > 0.0) THEN ln("DT_Output_3"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_2", 9.0 * (CASE WHEN ("DT_Output_3"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_2" IS NULL OR "DT_Output_3"."P_2" > 0.0) THEN ln("DT_Output_3"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_3"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_0" IS NULL OR "DT_Output_3"."P_0" > 0.0) THEN ln("DT_Output_3"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_1" IS NULL OR "DT_Output_3"."P_1" > 0.0) THEN ln("DT_Output_3"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_2" IS NULL OR "DT_Output_3"."P_2" > 0.0) THEN ln("DT_Output_3"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_3" IS NULL OR "DT_Output_3"."P_3" > 0.0) THEN ln("DT_Output_3"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_4" IS NULL OR "DT_Output_3"."P_4" > 0.0) THEN ln("DT_Output_3"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_5" IS NULL OR "DT_Output_3"."P_5" > 0.0) THEN ln("DT_Output_3"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_6" IS NULL OR "DT_Output_3"."P_6" > 0.0) THEN ln("DT_Output_3"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_7" IS NULL OR "DT_Output_3"."P_7" > 0.0) THEN ln("DT_Output_3"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_8" IS NULL OR "DT_Output_3"."P_8" > 0.0) THEN ln("DT_Output_3"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_9" IS NULL OR "DT_Output_3"."P_9" > 0.0) THEN ln("DT_Output_3"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_2", (9.0 * (CASE WHEN ("DT_Output_3"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_3" IS NULL OR "DT_Output_3"."P_3" > 0.0) THEN ln("DT_Output_3"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_3"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_0" IS NULL OR "DT_Output_3"."P_0" > 0.0) THEN ln("DT_Output_3"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_1" IS NULL OR "DT_Output_3"."P_1" > 0.0) THEN ln("DT_Output_3"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_2" IS NULL OR "DT_Output_3"."P_2" > 0.0) THEN ln("DT_Output_3"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_3" IS NULL OR "DT_Output_3"."P_3" > 0.0) THEN ln("DT_Output_3"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_4" IS NULL OR "DT_Output_3"."P_4" > 0.0) THEN ln("DT_Output_3"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_5" IS NULL OR "DT_Output_3"."P_5" > 0.0) THEN ln("DT_Output_3"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_6" IS NULL OR "DT_Output_3"."P_6" > 0.0) THEN ln("DT_Output_3"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_7" IS NULL OR "DT_Output_3"."P_7" > 0.0) THEN ln("DT_Output_3"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_8" IS NULL OR "DT_Output_3"."P_8" > 0.0) THEN ln("DT_Output_3"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_9" IS NULL OR "DT_Output_3"."P_9" > 0.0) THEN ln("DT_Output_3"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_3", 9.0 * (CASE WHEN ("DT_Output_3"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_3" IS NULL OR "DT_Output_3"."P_3" > 0.0) THEN ln("DT_Output_3"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_3"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_0" IS NULL OR "DT_Output_3"."P_0" > 0.0) THEN ln("DT_Output_3"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_1" IS NULL OR "DT_Output_3"."P_1" > 0.0) THEN ln("DT_Output_3"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_2" IS NULL OR "DT_Output_3"."P_2" > 0.0) THEN ln("DT_Output_3"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_3" IS NULL OR "DT_Output_3"."P_3" > 0.0) THEN ln("DT_Output_3"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_4" IS NULL OR "DT_Output_3"."P_4" > 0.0) THEN ln("DT_Output_3"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_5" IS NULL OR "DT_Output_3"."P_5" > 0.0) THEN ln("DT_Output_3"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_6" IS NULL OR "DT_Output_3"."P_6" > 0.0) THEN ln("DT_Output_3"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_7" IS NULL OR "DT_Output_3"."P_7" > 0.0) THEN ln("DT_Output_3"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_8" IS NULL OR "DT_Output_3"."P_8" > 0.0) THEN ln("DT_Output_3"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_9" IS NULL OR "DT_Output_3"."P_9" > 0.0) THEN ln("DT_Output_3"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_3", (9.0 * (CASE WHEN ("DT_Output_3"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_4" IS NULL OR "DT_Output_3"."P_4" > 0.0) THEN ln("DT_Output_3"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_3"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_0" IS NULL OR "DT_Output_3"."P_0" > 0.0) THEN ln("DT_Output_3"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_1" IS NULL OR "DT_Output_3"."P_1" > 0.0) THEN ln("DT_Output_3"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_2" IS NULL OR "DT_Output_3"."P_2" > 0.0) THEN ln("DT_Output_3"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_3" IS NULL OR "DT_Output_3"."P_3" > 0.0) THEN ln("DT_Output_3"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_4" IS NULL OR "DT_Output_3"."P_4" > 0.0) THEN ln("DT_Output_3"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_5" IS NULL OR "DT_Output_3"."P_5" > 0.0) THEN ln("DT_Output_3"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_6" IS NULL OR "DT_Output_3"."P_6" > 0.0) THEN ln("DT_Output_3"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_7" IS NULL OR "DT_Output_3"."P_7" > 0.0) THEN ln("DT_Output_3"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_8" IS NULL OR "DT_Output_3"."P_8" > 0.0) THEN ln("DT_Output_3"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_9" IS NULL OR "DT_Output_3"."P_9" > 0.0) THEN ln("DT_Output_3"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_4", 9.0 * (CASE WHEN ("DT_Output_3"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_4" IS NULL OR "DT_Output_3"."P_4" > 0.0) THEN ln("DT_Output_3"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_3"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_0" IS NULL OR "DT_Output_3"."P_0" > 0.0) THEN ln("DT_Output_3"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_1" IS NULL OR "DT_Output_3"."P_1" > 0.0) THEN ln("DT_Output_3"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_2" IS NULL OR "DT_Output_3"."P_2" > 0.0) THEN ln("DT_Output_3"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_3" IS NULL OR "DT_Output_3"."P_3" > 0.0) THEN ln("DT_Output_3"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_4" IS NULL OR "DT_Output_3"."P_4" > 0.0) THEN ln("DT_Output_3"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_5" IS NULL OR "DT_Output_3"."P_5" > 0.0) THEN ln("DT_Output_3"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_6" IS NULL OR "DT_Output_3"."P_6" > 0.0) THEN ln("DT_Output_3"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_7" IS NULL OR "DT_Output_3"."P_7" > 0.0) THEN ln("DT_Output_3"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_8" IS NULL OR "DT_Output_3"."P_8" > 0.0) THEN ln("DT_Output_3"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_9" IS NULL OR "DT_Output_3"."P_9" > 0.0) THEN ln("DT_Output_3"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_4", (9.0 * (CASE WHEN ("DT_Output_3"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_5" IS NULL OR "DT_Output_3"."P_5" > 0.0) THEN ln("DT_Output_3"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_3"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_0" IS NULL OR "DT_Output_3"."P_0" > 0.0) THEN ln("DT_Output_3"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_1" IS NULL OR "DT_Output_3"."P_1" > 0.0) THEN ln("DT_Output_3"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_2" IS NULL OR "DT_Output_3"."P_2" > 0.0) THEN ln("DT_Output_3"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_3" IS NULL OR "DT_Output_3"."P_3" > 0.0) THEN ln("DT_Output_3"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_4" IS NULL OR "DT_Output_3"."P_4" > 0.0) THEN ln("DT_Output_3"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_5" IS NULL OR "DT_Output_3"."P_5" > 0.0) THEN ln("DT_Output_3"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_6" IS NULL OR "DT_Output_3"."P_6" > 0.0) THEN ln("DT_Output_3"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_7" IS NULL OR "DT_Output_3"."P_7" > 0.0) THEN ln("DT_Output_3"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_8" IS NULL OR "DT_Output_3"."P_8" > 0.0) THEN ln("DT_Output_3"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_9" IS NULL OR "DT_Output_3"."P_9" > 0.0) THEN ln("DT_Output_3"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_5", 9.0 * (CASE WHEN ("DT_Output_3"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_5" IS NULL OR "DT_Output_3"."P_5" > 0.0) THEN ln("DT_Output_3"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_3"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_0" IS NULL OR "DT_Output_3"."P_0" > 0.0) THEN ln("DT_Output_3"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_1" IS NULL OR "DT_Output_3"."P_1" > 0.0) THEN ln("DT_Output_3"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_2" IS NULL OR "DT_Output_3"."P_2" > 0.0) THEN ln("DT_Output_3"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_3" IS NULL OR "DT_Output_3"."P_3" > 0.0) THEN ln("DT_Output_3"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_4" IS NULL OR "DT_Output_3"."P_4" > 0.0) THEN ln("DT_Output_3"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_5" IS NULL OR "DT_Output_3"."P_5" > 0.0) THEN ln("DT_Output_3"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_6" IS NULL OR "DT_Output_3"."P_6" > 0.0) THEN ln("DT_Output_3"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_7" IS NULL OR "DT_Output_3"."P_7" > 0.0) THEN ln("DT_Output_3"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_8" IS NULL OR "DT_Output_3"."P_8" > 0.0) THEN ln("DT_Output_3"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_9" IS NULL OR "DT_Output_3"."P_9" > 0.0) THEN ln("DT_Output_3"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_5", (9.0 * (CASE WHEN ("DT_Output_3"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_6" IS NULL OR "DT_Output_3"."P_6" > 0.0) THEN ln("DT_Output_3"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_3"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_0" IS NULL OR "DT_Output_3"."P_0" > 0.0) THEN ln("DT_Output_3"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_1" IS NULL OR "DT_Output_3"."P_1" > 0.0) THEN ln("DT_Output_3"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_2" IS NULL OR "DT_Output_3"."P_2" > 0.0) THEN ln("DT_Output_3"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_3" IS NULL OR "DT_Output_3"."P_3" > 0.0) THEN ln("DT_Output_3"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_4" IS NULL OR "DT_Output_3"."P_4" > 0.0) THEN ln("DT_Output_3"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_5" IS NULL OR "DT_Output_3"."P_5" > 0.0) THEN ln("DT_Output_3"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_6" IS NULL OR "DT_Output_3"."P_6" > 0.0) THEN ln("DT_Output_3"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_7" IS NULL OR "DT_Output_3"."P_7" > 0.0) THEN ln("DT_Output_3"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_8" IS NULL OR "DT_Output_3"."P_8" > 0.0) THEN ln("DT_Output_3"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_9" IS NULL OR "DT_Output_3"."P_9" > 0.0) THEN ln("DT_Output_3"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_6", 9.0 * (CASE WHEN ("DT_Output_3"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_6" IS NULL OR "DT_Output_3"."P_6" > 0.0) THEN ln("DT_Output_3"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_3"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_0" IS NULL OR "DT_Output_3"."P_0" > 0.0) THEN ln("DT_Output_3"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_1" IS NULL OR "DT_Output_3"."P_1" > 0.0) THEN ln("DT_Output_3"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_2" IS NULL OR "DT_Output_3"."P_2" > 0.0) THEN ln("DT_Output_3"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_3" IS NULL OR "DT_Output_3"."P_3" > 0.0) THEN ln("DT_Output_3"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_4" IS NULL OR "DT_Output_3"."P_4" > 0.0) THEN ln("DT_Output_3"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_5" IS NULL OR "DT_Output_3"."P_5" > 0.0) THEN ln("DT_Output_3"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_6" IS NULL OR "DT_Output_3"."P_6" > 0.0) THEN ln("DT_Output_3"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_7" IS NULL OR "DT_Output_3"."P_7" > 0.0) THEN ln("DT_Output_3"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_8" IS NULL OR "DT_Output_3"."P_8" > 0.0) THEN ln("DT_Output_3"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_9" IS NULL OR "DT_Output_3"."P_9" > 0.0) THEN ln("DT_Output_3"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_6", (9.0 * (CASE WHEN ("DT_Output_3"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_7" IS NULL OR "DT_Output_3"."P_7" > 0.0) THEN ln("DT_Output_3"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_3"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_0" IS NULL OR "DT_Output_3"."P_0" > 0.0) THEN ln("DT_Output_3"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_1" IS NULL OR "DT_Output_3"."P_1" > 0.0) THEN ln("DT_Output_3"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_2" IS NULL OR "DT_Output_3"."P_2" > 0.0) THEN ln("DT_Output_3"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_3" IS NULL OR "DT_Output_3"."P_3" > 0.0) THEN ln("DT_Output_3"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_4" IS NULL OR "DT_Output_3"."P_4" > 0.0) THEN ln("DT_Output_3"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_5" IS NULL OR "DT_Output_3"."P_5" > 0.0) THEN ln("DT_Output_3"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_6" IS NULL OR "DT_Output_3"."P_6" > 0.0) THEN ln("DT_Output_3"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_7" IS NULL OR "DT_Output_3"."P_7" > 0.0) THEN ln("DT_Output_3"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_8" IS NULL OR "DT_Output_3"."P_8" > 0.0) THEN ln("DT_Output_3"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_9" IS NULL OR "DT_Output_3"."P_9" > 0.0) THEN ln("DT_Output_3"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_7", 9.0 * (CASE WHEN ("DT_Output_3"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_7" IS NULL OR "DT_Output_3"."P_7" > 0.0) THEN ln("DT_Output_3"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_3"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_0" IS NULL OR "DT_Output_3"."P_0" > 0.0) THEN ln("DT_Output_3"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_1" IS NULL OR "DT_Output_3"."P_1" > 0.0) THEN ln("DT_Output_3"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_2" IS NULL OR "DT_Output_3"."P_2" > 0.0) THEN ln("DT_Output_3"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_3" IS NULL OR "DT_Output_3"."P_3" > 0.0) THEN ln("DT_Output_3"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_4" IS NULL OR "DT_Output_3"."P_4" > 0.0) THEN ln("DT_Output_3"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_5" IS NULL OR "DT_Output_3"."P_5" > 0.0) THEN ln("DT_Output_3"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_6" IS NULL OR "DT_Output_3"."P_6" > 0.0) THEN ln("DT_Output_3"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_7" IS NULL OR "DT_Output_3"."P_7" > 0.0) THEN ln("DT_Output_3"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_8" IS NULL OR "DT_Output_3"."P_8" > 0.0) THEN ln("DT_Output_3"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_9" IS NULL OR "DT_Output_3"."P_9" > 0.0) THEN ln("DT_Output_3"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_7", (9.0 * (CASE WHEN ("DT_Output_3"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_8" IS NULL OR "DT_Output_3"."P_8" > 0.0) THEN ln("DT_Output_3"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_3"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_0" IS NULL OR "DT_Output_3"."P_0" > 0.0) THEN ln("DT_Output_3"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_1" IS NULL OR "DT_Output_3"."P_1" > 0.0) THEN ln("DT_Output_3"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_2" IS NULL OR "DT_Output_3"."P_2" > 0.0) THEN ln("DT_Output_3"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_3" IS NULL OR "DT_Output_3"."P_3" > 0.0) THEN ln("DT_Output_3"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_4" IS NULL OR "DT_Output_3"."P_4" > 0.0) THEN ln("DT_Output_3"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_5" IS NULL OR "DT_Output_3"."P_5" > 0.0) THEN ln("DT_Output_3"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_6" IS NULL OR "DT_Output_3"."P_6" > 0.0) THEN ln("DT_Output_3"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_7" IS NULL OR "DT_Output_3"."P_7" > 0.0) THEN ln("DT_Output_3"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_8" IS NULL OR "DT_Output_3"."P_8" > 0.0) THEN ln("DT_Output_3"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_9" IS NULL OR "DT_Output_3"."P_9" > 0.0) THEN ln("DT_Output_3"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_8", 9.0 * (CASE WHEN ("DT_Output_3"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_8" IS NULL OR "DT_Output_3"."P_8" > 0.0) THEN ln("DT_Output_3"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_3"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_0" IS NULL OR "DT_Output_3"."P_0" > 0.0) THEN ln("DT_Output_3"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_1" IS NULL OR "DT_Output_3"."P_1" > 0.0) THEN ln("DT_Output_3"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_2" IS NULL OR "DT_Output_3"."P_2" > 0.0) THEN ln("DT_Output_3"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_3" IS NULL OR "DT_Output_3"."P_3" > 0.0) THEN ln("DT_Output_3"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_4" IS NULL OR "DT_Output_3"."P_4" > 0.0) THEN ln("DT_Output_3"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_5" IS NULL OR "DT_Output_3"."P_5" > 0.0) THEN ln("DT_Output_3"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_6" IS NULL OR "DT_Output_3"."P_6" > 0.0) THEN ln("DT_Output_3"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_7" IS NULL OR "DT_Output_3"."P_7" > 0.0) THEN ln("DT_Output_3"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_8" IS NULL OR "DT_Output_3"."P_8" > 0.0) THEN ln("DT_Output_3"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_9" IS NULL OR "DT_Output_3"."P_9" > 0.0) THEN ln("DT_Output_3"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_8", (9.0 * (CASE WHEN ("DT_Output_3"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_9" IS NULL OR "DT_Output_3"."P_9" > 0.0) THEN ln("DT_Output_3"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_3"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_0" IS NULL OR "DT_Output_3"."P_0" > 0.0) THEN ln("DT_Output_3"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_1" IS NULL OR "DT_Output_3"."P_1" > 0.0) THEN ln("DT_Output_3"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_2" IS NULL OR "DT_Output_3"."P_2" > 0.0) THEN ln("DT_Output_3"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_3" IS NULL OR "DT_Output_3"."P_3" > 0.0) THEN ln("DT_Output_3"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_4" IS NULL OR "DT_Output_3"."P_4" > 0.0) THEN ln("DT_Output_3"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_5" IS NULL OR "DT_Output_3"."P_5" > 0.0) THEN ln("DT_Output_3"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_6" IS NULL OR "DT_Output_3"."P_6" > 0.0) THEN ln("DT_Output_3"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_7" IS NULL OR "DT_Output_3"."P_7" > 0.0) THEN ln("DT_Output_3"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_8" IS NULL OR "DT_Output_3"."P_8" > 0.0) THEN ln("DT_Output_3"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_9" IS NULL OR "DT_Output_3"."P_9" > 0.0) THEN ln("DT_Output_3"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_9", 9.0 * (CASE WHEN ("DT_Output_3"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_9" IS NULL OR "DT_Output_3"."P_9" > 0.0) THEN ln("DT_Output_3"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_3"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_0" IS NULL OR "DT_Output_3"."P_0" > 0.0) THEN ln("DT_Output_3"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_1" IS NULL OR "DT_Output_3"."P_1" > 0.0) THEN ln("DT_Output_3"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_2" IS NULL OR "DT_Output_3"."P_2" > 0.0) THEN ln("DT_Output_3"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_3" IS NULL OR "DT_Output_3"."P_3" > 0.0) THEN ln("DT_Output_3"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_4" IS NULL OR "DT_Output_3"."P_4" > 0.0) THEN ln("DT_Output_3"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_5" IS NULL OR "DT_Output_3"."P_5" > 0.0) THEN ln("DT_Output_3"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_6" IS NULL OR "DT_Output_3"."P_6" > 0.0) THEN ln("DT_Output_3"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_7" IS NULL OR "DT_Output_3"."P_7" > 0.0) THEN ln("DT_Output_3"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_8" IS NULL OR "DT_Output_3"."P_8" > 0.0) THEN ln("DT_Output_3"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_3"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_9" IS NULL OR "DT_Output_3"."P_9" > 0.0) THEN ln("DT_Output_3"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_9" 
FROM "DT_Output_3"), 
"DT_node_lookup_4" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_30 <= -1.555469036102295) THEN 1 ELSE 2 END AS node_id_2 
FROM "DEGEN_YN11LY_ADS_SCA_2_OUT" "ADS_sca_2_OUT"), 
"DT_node_data_4" AS 
(SELECT "Values".nid AS nid, CAST("Values"."P_0" AS BINARY_DOUBLE) AS "P_0", CAST("Values"."P_1" AS BINARY_DOUBLE) AS "P_1", CAST("Values"."P_2" AS BINARY_DOUBLE) AS "P_2", CAST("Values"."P_3" AS BINARY_DOUBLE) AS "P_3", CAST("Values"."P_4" AS BINARY_DOUBLE) AS "P_4", CAST("Values"."P_5" AS BINARY_DOUBLE) AS "P_5", CAST("Values"."P_6" AS BINARY_DOUBLE) AS "P_6", CAST("Values"."P_7" AS BINARY_DOUBLE) AS "P_7", CAST("Values"."P_8" AS BINARY_DOUBLE) AS "P_8", CAST("Values"."P_9" AS BINARY_DOUBLE) AS "P_9", CAST("Values"."D" AS BINARY_DOUBLE) AS "D", CAST("Values"."DP" AS BINARY_DOUBLE) AS "DP" 
FROM (SELECT 1 AS nid, 0.9711410080867539 AS "P_0", 0.0036076640492230016 AS "P_1", 0.003597516029995951 AS "P_2", 0.003608129162833103 AS "P_3", 0.003606086647190256 AS "P_4", 0.003611612947833673 AS "P_5", 0.0036122228813360874 AS "P_6", 0.003607664049222985 AS "P_7", 0.0 AS "P_8", 0.0036080961456111116 AS "P_9", 0 AS "D", 0.9711410080867539 AS "DP" FROM DUAL UNION ALL SELECT 2 AS nid, 3.0321580895474893e-07 AS "P_0", 0.11106479748951871 AS "P_1", 0.11106626570027162 AS "P_2", 0.11106504740070883 AS "P_3", 0.11106528186455196 AS "P_4", 0.1110646474911051 AS "P_5", 0.11106457747580206 AS "P_6", 0.11106479748951846 AS "P_7", 0.11147923068190288 AS "P_8", 0.11106505119081142 AS "P_9", 8 AS "D", 0.11147923068190288 AS "DP" FROM DUAL) "Values"), 
"DT_Output_4" AS 
(SELECT "DT_node_lookup_4"."KEY" AS "KEY", "DT_node_lookup_4".node_id_2 AS node_id_2, "DT_node_data_4".nid AS nid, "DT_node_data_4"."P_0" AS "P_0", "DT_node_data_4"."P_1" AS "P_1", "DT_node_data_4"."P_2" AS "P_2", "DT_node_data_4"."P_3" AS "P_3", "DT_node_data_4"."P_4" AS "P_4", "DT_node_data_4"."P_5" AS "P_5", "DT_node_data_4"."P_6" AS "P_6", "DT_node_data_4"."P_7" AS "P_7", "DT_node_data_4"."P_8" AS "P_8", "DT_node_data_4"."P_9" AS "P_9", "DT_node_data_4"."D" AS "D", "DT_node_data_4"."DP" AS "DP" 
FROM "DT_node_lookup_4" LEFT OUTER JOIN "DT_node_data_4" ON "DT_node_lookup_4".node_id_2 = "DT_node_data_4".nid), 
"ADB_Model_4" AS 
(SELECT "DT_Output_4"."KEY" AS "KEY", (9.0 * (CASE WHEN ("DT_Output_4"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_0" IS NULL OR "DT_Output_4"."P_0" > 0.0) THEN ln("DT_Output_4"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_4"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_0" IS NULL OR "DT_Output_4"."P_0" > 0.0) THEN ln("DT_Output_4"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_1" IS NULL OR "DT_Output_4"."P_1" > 0.0) THEN ln("DT_Output_4"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_2" IS NULL OR "DT_Output_4"."P_2" > 0.0) THEN ln("DT_Output_4"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_3" IS NULL OR "DT_Output_4"."P_3" > 0.0) THEN ln("DT_Output_4"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_4" IS NULL OR "DT_Output_4"."P_4" > 0.0) THEN ln("DT_Output_4"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_5" IS NULL OR "DT_Output_4"."P_5" > 0.0) THEN ln("DT_Output_4"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_6" IS NULL OR "DT_Output_4"."P_6" > 0.0) THEN ln("DT_Output_4"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_7" IS NULL OR "DT_Output_4"."P_7" > 0.0) THEN ln("DT_Output_4"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_8" IS NULL OR "DT_Output_4"."P_8" > 0.0) THEN ln("DT_Output_4"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_9" IS NULL OR "DT_Output_4"."P_9" > 0.0) THEN ln("DT_Output_4"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_0", 9.0 * (CASE WHEN ("DT_Output_4"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_0" IS NULL OR "DT_Output_4"."P_0" > 0.0) THEN ln("DT_Output_4"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_4"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_0" IS NULL OR "DT_Output_4"."P_0" > 0.0) THEN ln("DT_Output_4"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_1" IS NULL OR "DT_Output_4"."P_1" > 0.0) THEN ln("DT_Output_4"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_2" IS NULL OR "DT_Output_4"."P_2" > 0.0) THEN ln("DT_Output_4"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_3" IS NULL OR "DT_Output_4"."P_3" > 0.0) THEN ln("DT_Output_4"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_4" IS NULL OR "DT_Output_4"."P_4" > 0.0) THEN ln("DT_Output_4"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_5" IS NULL OR "DT_Output_4"."P_5" > 0.0) THEN ln("DT_Output_4"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_6" IS NULL OR "DT_Output_4"."P_6" > 0.0) THEN ln("DT_Output_4"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_7" IS NULL OR "DT_Output_4"."P_7" > 0.0) THEN ln("DT_Output_4"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_8" IS NULL OR "DT_Output_4"."P_8" > 0.0) THEN ln("DT_Output_4"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_9" IS NULL OR "DT_Output_4"."P_9" > 0.0) THEN ln("DT_Output_4"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_0", (9.0 * (CASE WHEN ("DT_Output_4"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_1" IS NULL OR "DT_Output_4"."P_1" > 0.0) THEN ln("DT_Output_4"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_4"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_0" IS NULL OR "DT_Output_4"."P_0" > 0.0) THEN ln("DT_Output_4"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_1" IS NULL OR "DT_Output_4"."P_1" > 0.0) THEN ln("DT_Output_4"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_2" IS NULL OR "DT_Output_4"."P_2" > 0.0) THEN ln("DT_Output_4"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_3" IS NULL OR "DT_Output_4"."P_3" > 0.0) THEN ln("DT_Output_4"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_4" IS NULL OR "DT_Output_4"."P_4" > 0.0) THEN ln("DT_Output_4"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_5" IS NULL OR "DT_Output_4"."P_5" > 0.0) THEN ln("DT_Output_4"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_6" IS NULL OR "DT_Output_4"."P_6" > 0.0) THEN ln("DT_Output_4"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_7" IS NULL OR "DT_Output_4"."P_7" > 0.0) THEN ln("DT_Output_4"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_8" IS NULL OR "DT_Output_4"."P_8" > 0.0) THEN ln("DT_Output_4"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_9" IS NULL OR "DT_Output_4"."P_9" > 0.0) THEN ln("DT_Output_4"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_1", 9.0 * (CASE WHEN ("DT_Output_4"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_1" IS NULL OR "DT_Output_4"."P_1" > 0.0) THEN ln("DT_Output_4"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_4"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_0" IS NULL OR "DT_Output_4"."P_0" > 0.0) THEN ln("DT_Output_4"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_1" IS NULL OR "DT_Output_4"."P_1" > 0.0) THEN ln("DT_Output_4"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_2" IS NULL OR "DT_Output_4"."P_2" > 0.0) THEN ln("DT_Output_4"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_3" IS NULL OR "DT_Output_4"."P_3" > 0.0) THEN ln("DT_Output_4"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_4" IS NULL OR "DT_Output_4"."P_4" > 0.0) THEN ln("DT_Output_4"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_5" IS NULL OR "DT_Output_4"."P_5" > 0.0) THEN ln("DT_Output_4"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_6" IS NULL OR "DT_Output_4"."P_6" > 0.0) THEN ln("DT_Output_4"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_7" IS NULL OR "DT_Output_4"."P_7" > 0.0) THEN ln("DT_Output_4"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_8" IS NULL OR "DT_Output_4"."P_8" > 0.0) THEN ln("DT_Output_4"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_9" IS NULL OR "DT_Output_4"."P_9" > 0.0) THEN ln("DT_Output_4"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_1", (9.0 * (CASE WHEN ("DT_Output_4"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_2" IS NULL OR "DT_Output_4"."P_2" > 0.0) THEN ln("DT_Output_4"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_4"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_0" IS NULL OR "DT_Output_4"."P_0" > 0.0) THEN ln("DT_Output_4"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_1" IS NULL OR "DT_Output_4"."P_1" > 0.0) THEN ln("DT_Output_4"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_2" IS NULL OR "DT_Output_4"."P_2" > 0.0) THEN ln("DT_Output_4"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_3" IS NULL OR "DT_Output_4"."P_3" > 0.0) THEN ln("DT_Output_4"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_4" IS NULL OR "DT_Output_4"."P_4" > 0.0) THEN ln("DT_Output_4"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_5" IS NULL OR "DT_Output_4"."P_5" > 0.0) THEN ln("DT_Output_4"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_6" IS NULL OR "DT_Output_4"."P_6" > 0.0) THEN ln("DT_Output_4"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_7" IS NULL OR "DT_Output_4"."P_7" > 0.0) THEN ln("DT_Output_4"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_8" IS NULL OR "DT_Output_4"."P_8" > 0.0) THEN ln("DT_Output_4"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_9" IS NULL OR "DT_Output_4"."P_9" > 0.0) THEN ln("DT_Output_4"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_2", 9.0 * (CASE WHEN ("DT_Output_4"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_2" IS NULL OR "DT_Output_4"."P_2" > 0.0) THEN ln("DT_Output_4"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_4"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_0" IS NULL OR "DT_Output_4"."P_0" > 0.0) THEN ln("DT_Output_4"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_1" IS NULL OR "DT_Output_4"."P_1" > 0.0) THEN ln("DT_Output_4"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_2" IS NULL OR "DT_Output_4"."P_2" > 0.0) THEN ln("DT_Output_4"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_3" IS NULL OR "DT_Output_4"."P_3" > 0.0) THEN ln("DT_Output_4"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_4" IS NULL OR "DT_Output_4"."P_4" > 0.0) THEN ln("DT_Output_4"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_5" IS NULL OR "DT_Output_4"."P_5" > 0.0) THEN ln("DT_Output_4"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_6" IS NULL OR "DT_Output_4"."P_6" > 0.0) THEN ln("DT_Output_4"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_7" IS NULL OR "DT_Output_4"."P_7" > 0.0) THEN ln("DT_Output_4"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_8" IS NULL OR "DT_Output_4"."P_8" > 0.0) THEN ln("DT_Output_4"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_9" IS NULL OR "DT_Output_4"."P_9" > 0.0) THEN ln("DT_Output_4"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_2", (9.0 * (CASE WHEN ("DT_Output_4"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_3" IS NULL OR "DT_Output_4"."P_3" > 0.0) THEN ln("DT_Output_4"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_4"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_0" IS NULL OR "DT_Output_4"."P_0" > 0.0) THEN ln("DT_Output_4"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_1" IS NULL OR "DT_Output_4"."P_1" > 0.0) THEN ln("DT_Output_4"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_2" IS NULL OR "DT_Output_4"."P_2" > 0.0) THEN ln("DT_Output_4"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_3" IS NULL OR "DT_Output_4"."P_3" > 0.0) THEN ln("DT_Output_4"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_4" IS NULL OR "DT_Output_4"."P_4" > 0.0) THEN ln("DT_Output_4"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_5" IS NULL OR "DT_Output_4"."P_5" > 0.0) THEN ln("DT_Output_4"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_6" IS NULL OR "DT_Output_4"."P_6" > 0.0) THEN ln("DT_Output_4"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_7" IS NULL OR "DT_Output_4"."P_7" > 0.0) THEN ln("DT_Output_4"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_8" IS NULL OR "DT_Output_4"."P_8" > 0.0) THEN ln("DT_Output_4"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_9" IS NULL OR "DT_Output_4"."P_9" > 0.0) THEN ln("DT_Output_4"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_3", 9.0 * (CASE WHEN ("DT_Output_4"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_3" IS NULL OR "DT_Output_4"."P_3" > 0.0) THEN ln("DT_Output_4"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_4"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_0" IS NULL OR "DT_Output_4"."P_0" > 0.0) THEN ln("DT_Output_4"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_1" IS NULL OR "DT_Output_4"."P_1" > 0.0) THEN ln("DT_Output_4"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_2" IS NULL OR "DT_Output_4"."P_2" > 0.0) THEN ln("DT_Output_4"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_3" IS NULL OR "DT_Output_4"."P_3" > 0.0) THEN ln("DT_Output_4"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_4" IS NULL OR "DT_Output_4"."P_4" > 0.0) THEN ln("DT_Output_4"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_5" IS NULL OR "DT_Output_4"."P_5" > 0.0) THEN ln("DT_Output_4"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_6" IS NULL OR "DT_Output_4"."P_6" > 0.0) THEN ln("DT_Output_4"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_7" IS NULL OR "DT_Output_4"."P_7" > 0.0) THEN ln("DT_Output_4"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_8" IS NULL OR "DT_Output_4"."P_8" > 0.0) THEN ln("DT_Output_4"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_9" IS NULL OR "DT_Output_4"."P_9" > 0.0) THEN ln("DT_Output_4"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_3", (9.0 * (CASE WHEN ("DT_Output_4"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_4" IS NULL OR "DT_Output_4"."P_4" > 0.0) THEN ln("DT_Output_4"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_4"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_0" IS NULL OR "DT_Output_4"."P_0" > 0.0) THEN ln("DT_Output_4"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_1" IS NULL OR "DT_Output_4"."P_1" > 0.0) THEN ln("DT_Output_4"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_2" IS NULL OR "DT_Output_4"."P_2" > 0.0) THEN ln("DT_Output_4"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_3" IS NULL OR "DT_Output_4"."P_3" > 0.0) THEN ln("DT_Output_4"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_4" IS NULL OR "DT_Output_4"."P_4" > 0.0) THEN ln("DT_Output_4"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_5" IS NULL OR "DT_Output_4"."P_5" > 0.0) THEN ln("DT_Output_4"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_6" IS NULL OR "DT_Output_4"."P_6" > 0.0) THEN ln("DT_Output_4"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_7" IS NULL OR "DT_Output_4"."P_7" > 0.0) THEN ln("DT_Output_4"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_8" IS NULL OR "DT_Output_4"."P_8" > 0.0) THEN ln("DT_Output_4"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_9" IS NULL OR "DT_Output_4"."P_9" > 0.0) THEN ln("DT_Output_4"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_4", 9.0 * (CASE WHEN ("DT_Output_4"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_4" IS NULL OR "DT_Output_4"."P_4" > 0.0) THEN ln("DT_Output_4"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_4"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_0" IS NULL OR "DT_Output_4"."P_0" > 0.0) THEN ln("DT_Output_4"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_1" IS NULL OR "DT_Output_4"."P_1" > 0.0) THEN ln("DT_Output_4"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_2" IS NULL OR "DT_Output_4"."P_2" > 0.0) THEN ln("DT_Output_4"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_3" IS NULL OR "DT_Output_4"."P_3" > 0.0) THEN ln("DT_Output_4"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_4" IS NULL OR "DT_Output_4"."P_4" > 0.0) THEN ln("DT_Output_4"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_5" IS NULL OR "DT_Output_4"."P_5" > 0.0) THEN ln("DT_Output_4"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_6" IS NULL OR "DT_Output_4"."P_6" > 0.0) THEN ln("DT_Output_4"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_7" IS NULL OR "DT_Output_4"."P_7" > 0.0) THEN ln("DT_Output_4"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_8" IS NULL OR "DT_Output_4"."P_8" > 0.0) THEN ln("DT_Output_4"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_9" IS NULL OR "DT_Output_4"."P_9" > 0.0) THEN ln("DT_Output_4"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_4", (9.0 * (CASE WHEN ("DT_Output_4"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_5" IS NULL OR "DT_Output_4"."P_5" > 0.0) THEN ln("DT_Output_4"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_4"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_0" IS NULL OR "DT_Output_4"."P_0" > 0.0) THEN ln("DT_Output_4"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_1" IS NULL OR "DT_Output_4"."P_1" > 0.0) THEN ln("DT_Output_4"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_2" IS NULL OR "DT_Output_4"."P_2" > 0.0) THEN ln("DT_Output_4"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_3" IS NULL OR "DT_Output_4"."P_3" > 0.0) THEN ln("DT_Output_4"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_4" IS NULL OR "DT_Output_4"."P_4" > 0.0) THEN ln("DT_Output_4"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_5" IS NULL OR "DT_Output_4"."P_5" > 0.0) THEN ln("DT_Output_4"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_6" IS NULL OR "DT_Output_4"."P_6" > 0.0) THEN ln("DT_Output_4"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_7" IS NULL OR "DT_Output_4"."P_7" > 0.0) THEN ln("DT_Output_4"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_8" IS NULL OR "DT_Output_4"."P_8" > 0.0) THEN ln("DT_Output_4"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_9" IS NULL OR "DT_Output_4"."P_9" > 0.0) THEN ln("DT_Output_4"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_5", 9.0 * (CASE WHEN ("DT_Output_4"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_5" IS NULL OR "DT_Output_4"."P_5" > 0.0) THEN ln("DT_Output_4"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_4"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_0" IS NULL OR "DT_Output_4"."P_0" > 0.0) THEN ln("DT_Output_4"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_1" IS NULL OR "DT_Output_4"."P_1" > 0.0) THEN ln("DT_Output_4"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_2" IS NULL OR "DT_Output_4"."P_2" > 0.0) THEN ln("DT_Output_4"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_3" IS NULL OR "DT_Output_4"."P_3" > 0.0) THEN ln("DT_Output_4"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_4" IS NULL OR "DT_Output_4"."P_4" > 0.0) THEN ln("DT_Output_4"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_5" IS NULL OR "DT_Output_4"."P_5" > 0.0) THEN ln("DT_Output_4"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_6" IS NULL OR "DT_Output_4"."P_6" > 0.0) THEN ln("DT_Output_4"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_7" IS NULL OR "DT_Output_4"."P_7" > 0.0) THEN ln("DT_Output_4"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_8" IS NULL OR "DT_Output_4"."P_8" > 0.0) THEN ln("DT_Output_4"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_9" IS NULL OR "DT_Output_4"."P_9" > 0.0) THEN ln("DT_Output_4"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_5", (9.0 * (CASE WHEN ("DT_Output_4"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_6" IS NULL OR "DT_Output_4"."P_6" > 0.0) THEN ln("DT_Output_4"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_4"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_0" IS NULL OR "DT_Output_4"."P_0" > 0.0) THEN ln("DT_Output_4"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_1" IS NULL OR "DT_Output_4"."P_1" > 0.0) THEN ln("DT_Output_4"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_2" IS NULL OR "DT_Output_4"."P_2" > 0.0) THEN ln("DT_Output_4"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_3" IS NULL OR "DT_Output_4"."P_3" > 0.0) THEN ln("DT_Output_4"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_4" IS NULL OR "DT_Output_4"."P_4" > 0.0) THEN ln("DT_Output_4"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_5" IS NULL OR "DT_Output_4"."P_5" > 0.0) THEN ln("DT_Output_4"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_6" IS NULL OR "DT_Output_4"."P_6" > 0.0) THEN ln("DT_Output_4"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_7" IS NULL OR "DT_Output_4"."P_7" > 0.0) THEN ln("DT_Output_4"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_8" IS NULL OR "DT_Output_4"."P_8" > 0.0) THEN ln("DT_Output_4"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_9" IS NULL OR "DT_Output_4"."P_9" > 0.0) THEN ln("DT_Output_4"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_6", 9.0 * (CASE WHEN ("DT_Output_4"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_6" IS NULL OR "DT_Output_4"."P_6" > 0.0) THEN ln("DT_Output_4"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_4"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_0" IS NULL OR "DT_Output_4"."P_0" > 0.0) THEN ln("DT_Output_4"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_1" IS NULL OR "DT_Output_4"."P_1" > 0.0) THEN ln("DT_Output_4"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_2" IS NULL OR "DT_Output_4"."P_2" > 0.0) THEN ln("DT_Output_4"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_3" IS NULL OR "DT_Output_4"."P_3" > 0.0) THEN ln("DT_Output_4"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_4" IS NULL OR "DT_Output_4"."P_4" > 0.0) THEN ln("DT_Output_4"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_5" IS NULL OR "DT_Output_4"."P_5" > 0.0) THEN ln("DT_Output_4"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_6" IS NULL OR "DT_Output_4"."P_6" > 0.0) THEN ln("DT_Output_4"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_7" IS NULL OR "DT_Output_4"."P_7" > 0.0) THEN ln("DT_Output_4"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_8" IS NULL OR "DT_Output_4"."P_8" > 0.0) THEN ln("DT_Output_4"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_9" IS NULL OR "DT_Output_4"."P_9" > 0.0) THEN ln("DT_Output_4"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_6", (9.0 * (CASE WHEN ("DT_Output_4"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_7" IS NULL OR "DT_Output_4"."P_7" > 0.0) THEN ln("DT_Output_4"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_4"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_0" IS NULL OR "DT_Output_4"."P_0" > 0.0) THEN ln("DT_Output_4"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_1" IS NULL OR "DT_Output_4"."P_1" > 0.0) THEN ln("DT_Output_4"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_2" IS NULL OR "DT_Output_4"."P_2" > 0.0) THEN ln("DT_Output_4"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_3" IS NULL OR "DT_Output_4"."P_3" > 0.0) THEN ln("DT_Output_4"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_4" IS NULL OR "DT_Output_4"."P_4" > 0.0) THEN ln("DT_Output_4"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_5" IS NULL OR "DT_Output_4"."P_5" > 0.0) THEN ln("DT_Output_4"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_6" IS NULL OR "DT_Output_4"."P_6" > 0.0) THEN ln("DT_Output_4"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_7" IS NULL OR "DT_Output_4"."P_7" > 0.0) THEN ln("DT_Output_4"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_8" IS NULL OR "DT_Output_4"."P_8" > 0.0) THEN ln("DT_Output_4"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_9" IS NULL OR "DT_Output_4"."P_9" > 0.0) THEN ln("DT_Output_4"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_7", 9.0 * (CASE WHEN ("DT_Output_4"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_7" IS NULL OR "DT_Output_4"."P_7" > 0.0) THEN ln("DT_Output_4"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_4"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_0" IS NULL OR "DT_Output_4"."P_0" > 0.0) THEN ln("DT_Output_4"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_1" IS NULL OR "DT_Output_4"."P_1" > 0.0) THEN ln("DT_Output_4"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_2" IS NULL OR "DT_Output_4"."P_2" > 0.0) THEN ln("DT_Output_4"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_3" IS NULL OR "DT_Output_4"."P_3" > 0.0) THEN ln("DT_Output_4"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_4" IS NULL OR "DT_Output_4"."P_4" > 0.0) THEN ln("DT_Output_4"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_5" IS NULL OR "DT_Output_4"."P_5" > 0.0) THEN ln("DT_Output_4"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_6" IS NULL OR "DT_Output_4"."P_6" > 0.0) THEN ln("DT_Output_4"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_7" IS NULL OR "DT_Output_4"."P_7" > 0.0) THEN ln("DT_Output_4"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_8" IS NULL OR "DT_Output_4"."P_8" > 0.0) THEN ln("DT_Output_4"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_9" IS NULL OR "DT_Output_4"."P_9" > 0.0) THEN ln("DT_Output_4"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_7", (9.0 * (CASE WHEN ("DT_Output_4"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_8" IS NULL OR "DT_Output_4"."P_8" > 0.0) THEN ln("DT_Output_4"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_4"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_0" IS NULL OR "DT_Output_4"."P_0" > 0.0) THEN ln("DT_Output_4"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_1" IS NULL OR "DT_Output_4"."P_1" > 0.0) THEN ln("DT_Output_4"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_2" IS NULL OR "DT_Output_4"."P_2" > 0.0) THEN ln("DT_Output_4"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_3" IS NULL OR "DT_Output_4"."P_3" > 0.0) THEN ln("DT_Output_4"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_4" IS NULL OR "DT_Output_4"."P_4" > 0.0) THEN ln("DT_Output_4"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_5" IS NULL OR "DT_Output_4"."P_5" > 0.0) THEN ln("DT_Output_4"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_6" IS NULL OR "DT_Output_4"."P_6" > 0.0) THEN ln("DT_Output_4"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_7" IS NULL OR "DT_Output_4"."P_7" > 0.0) THEN ln("DT_Output_4"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_8" IS NULL OR "DT_Output_4"."P_8" > 0.0) THEN ln("DT_Output_4"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_9" IS NULL OR "DT_Output_4"."P_9" > 0.0) THEN ln("DT_Output_4"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_8", 9.0 * (CASE WHEN ("DT_Output_4"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_8" IS NULL OR "DT_Output_4"."P_8" > 0.0) THEN ln("DT_Output_4"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_4"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_0" IS NULL OR "DT_Output_4"."P_0" > 0.0) THEN ln("DT_Output_4"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_1" IS NULL OR "DT_Output_4"."P_1" > 0.0) THEN ln("DT_Output_4"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_2" IS NULL OR "DT_Output_4"."P_2" > 0.0) THEN ln("DT_Output_4"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_3" IS NULL OR "DT_Output_4"."P_3" > 0.0) THEN ln("DT_Output_4"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_4" IS NULL OR "DT_Output_4"."P_4" > 0.0) THEN ln("DT_Output_4"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_5" IS NULL OR "DT_Output_4"."P_5" > 0.0) THEN ln("DT_Output_4"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_6" IS NULL OR "DT_Output_4"."P_6" > 0.0) THEN ln("DT_Output_4"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_7" IS NULL OR "DT_Output_4"."P_7" > 0.0) THEN ln("DT_Output_4"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_8" IS NULL OR "DT_Output_4"."P_8" > 0.0) THEN ln("DT_Output_4"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_9" IS NULL OR "DT_Output_4"."P_9" > 0.0) THEN ln("DT_Output_4"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_8", (9.0 * (CASE WHEN ("DT_Output_4"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_9" IS NULL OR "DT_Output_4"."P_9" > 0.0) THEN ln("DT_Output_4"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_4"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_0" IS NULL OR "DT_Output_4"."P_0" > 0.0) THEN ln("DT_Output_4"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_1" IS NULL OR "DT_Output_4"."P_1" > 0.0) THEN ln("DT_Output_4"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_2" IS NULL OR "DT_Output_4"."P_2" > 0.0) THEN ln("DT_Output_4"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_3" IS NULL OR "DT_Output_4"."P_3" > 0.0) THEN ln("DT_Output_4"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_4" IS NULL OR "DT_Output_4"."P_4" > 0.0) THEN ln("DT_Output_4"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_5" IS NULL OR "DT_Output_4"."P_5" > 0.0) THEN ln("DT_Output_4"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_6" IS NULL OR "DT_Output_4"."P_6" > 0.0) THEN ln("DT_Output_4"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_7" IS NULL OR "DT_Output_4"."P_7" > 0.0) THEN ln("DT_Output_4"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_8" IS NULL OR "DT_Output_4"."P_8" > 0.0) THEN ln("DT_Output_4"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_9" IS NULL OR "DT_Output_4"."P_9" > 0.0) THEN ln("DT_Output_4"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_9", 9.0 * (CASE WHEN ("DT_Output_4"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_9" IS NULL OR "DT_Output_4"."P_9" > 0.0) THEN ln("DT_Output_4"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_4"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_0" IS NULL OR "DT_Output_4"."P_0" > 0.0) THEN ln("DT_Output_4"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_1" IS NULL OR "DT_Output_4"."P_1" > 0.0) THEN ln("DT_Output_4"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_2" IS NULL OR "DT_Output_4"."P_2" > 0.0) THEN ln("DT_Output_4"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_3" IS NULL OR "DT_Output_4"."P_3" > 0.0) THEN ln("DT_Output_4"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_4" IS NULL OR "DT_Output_4"."P_4" > 0.0) THEN ln("DT_Output_4"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_5" IS NULL OR "DT_Output_4"."P_5" > 0.0) THEN ln("DT_Output_4"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_6" IS NULL OR "DT_Output_4"."P_6" > 0.0) THEN ln("DT_Output_4"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_7" IS NULL OR "DT_Output_4"."P_7" > 0.0) THEN ln("DT_Output_4"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_8" IS NULL OR "DT_Output_4"."P_8" > 0.0) THEN ln("DT_Output_4"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_4"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_9" IS NULL OR "DT_Output_4"."P_9" > 0.0) THEN ln("DT_Output_4"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_9" 
FROM "DT_Output_4"), 
"DT_node_lookup_5" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_38 <= -1.6508052349090576) THEN 1 ELSE 2 END AS node_id_2 
FROM "DEGEN_YN11LY_ADS_SCA_2_OUT" "ADS_sca_2_OUT"), 
"DT_node_data_5" AS 
(SELECT "Values".nid AS nid, CAST("Values"."P_0" AS BINARY_DOUBLE) AS "P_0", CAST("Values"."P_1" AS BINARY_DOUBLE) AS "P_1", CAST("Values"."P_2" AS BINARY_DOUBLE) AS "P_2", CAST("Values"."P_3" AS BINARY_DOUBLE) AS "P_3", CAST("Values"."P_4" AS BINARY_DOUBLE) AS "P_4", CAST("Values"."P_5" AS BINARY_DOUBLE) AS "P_5", CAST("Values"."P_6" AS BINARY_DOUBLE) AS "P_6", CAST("Values"."P_7" AS BINARY_DOUBLE) AS "P_7", CAST("Values"."P_8" AS BINARY_DOUBLE) AS "P_8", CAST("Values"."P_9" AS BINARY_DOUBLE) AS "P_9", CAST("Values"."D" AS BINARY_DOUBLE) AS "D", CAST("Values"."DP" AS BINARY_DOUBLE) AS "DP" 
FROM (SELECT 1 AS nid, 0.9999818165231056 AS "P_0", 0.0 AS "P_1", 2.145987514846921e-06 AS "P_2", 2.730803831372348e-06 AS "P_3", 2.395446115745433e-06 AS "P_4", 2.7296702038430408e-06 AS "P_5", 2.7301075247271482e-06 AS "P_6", 0.0 AS "P_7", 2.7206579657769727e-06 AS "P_8", 2.730803738183483e-06 AS "P_9", 0 AS "D", 0.9999818165231056 AS "DP" FROM DUAL UNION ALL SELECT 2 AS nid, 0.00012443730969741808 AS "P_0", 0.11111133535160998 AS "P_1", 0.11111109717078158 AS "P_2", 0.11111103226265255 AS "P_3", 0.11111106948364179 AS "P_4", 0.11111103238847242 AS "P_5", 0.1111110323399348 AS "P_6", 0.1111113353516101 AS "P_7", 0.11098659607893657 AS "P_8", 0.11111103226266278 AS "P_9", 7 AS "D", 0.1111113353516101 AS "DP" FROM DUAL) "Values"), 
"DT_Output_5" AS 
(SELECT "DT_node_lookup_5"."KEY" AS "KEY", "DT_node_lookup_5".node_id_2 AS node_id_2, "DT_node_data_5".nid AS nid, "DT_node_data_5"."P_0" AS "P_0", "DT_node_data_5"."P_1" AS "P_1", "DT_node_data_5"."P_2" AS "P_2", "DT_node_data_5"."P_3" AS "P_3", "DT_node_data_5"."P_4" AS "P_4", "DT_node_data_5"."P_5" AS "P_5", "DT_node_data_5"."P_6" AS "P_6", "DT_node_data_5"."P_7" AS "P_7", "DT_node_data_5"."P_8" AS "P_8", "DT_node_data_5"."P_9" AS "P_9", "DT_node_data_5"."D" AS "D", "DT_node_data_5"."DP" AS "DP" 
FROM "DT_node_lookup_5" LEFT OUTER JOIN "DT_node_data_5" ON "DT_node_lookup_5".node_id_2 = "DT_node_data_5".nid), 
"ADB_Model_5" AS 
(SELECT "DT_Output_5"."KEY" AS "KEY", (9.0 * (CASE WHEN ("DT_Output_5"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_0" IS NULL OR "DT_Output_5"."P_0" > 0.0) THEN ln("DT_Output_5"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_5"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_0" IS NULL OR "DT_Output_5"."P_0" > 0.0) THEN ln("DT_Output_5"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_1" IS NULL OR "DT_Output_5"."P_1" > 0.0) THEN ln("DT_Output_5"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_2" IS NULL OR "DT_Output_5"."P_2" > 0.0) THEN ln("DT_Output_5"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_3" IS NULL OR "DT_Output_5"."P_3" > 0.0) THEN ln("DT_Output_5"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_4" IS NULL OR "DT_Output_5"."P_4" > 0.0) THEN ln("DT_Output_5"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_5" IS NULL OR "DT_Output_5"."P_5" > 0.0) THEN ln("DT_Output_5"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_6" IS NULL OR "DT_Output_5"."P_6" > 0.0) THEN ln("DT_Output_5"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_7" IS NULL OR "DT_Output_5"."P_7" > 0.0) THEN ln("DT_Output_5"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_8" IS NULL OR "DT_Output_5"."P_8" > 0.0) THEN ln("DT_Output_5"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_9" IS NULL OR "DT_Output_5"."P_9" > 0.0) THEN ln("DT_Output_5"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_0", 9.0 * (CASE WHEN ("DT_Output_5"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_0" IS NULL OR "DT_Output_5"."P_0" > 0.0) THEN ln("DT_Output_5"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_5"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_0" IS NULL OR "DT_Output_5"."P_0" > 0.0) THEN ln("DT_Output_5"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_1" IS NULL OR "DT_Output_5"."P_1" > 0.0) THEN ln("DT_Output_5"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_2" IS NULL OR "DT_Output_5"."P_2" > 0.0) THEN ln("DT_Output_5"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_3" IS NULL OR "DT_Output_5"."P_3" > 0.0) THEN ln("DT_Output_5"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_4" IS NULL OR "DT_Output_5"."P_4" > 0.0) THEN ln("DT_Output_5"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_5" IS NULL OR "DT_Output_5"."P_5" > 0.0) THEN ln("DT_Output_5"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_6" IS NULL OR "DT_Output_5"."P_6" > 0.0) THEN ln("DT_Output_5"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_7" IS NULL OR "DT_Output_5"."P_7" > 0.0) THEN ln("DT_Output_5"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_8" IS NULL OR "DT_Output_5"."P_8" > 0.0) THEN ln("DT_Output_5"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_9" IS NULL OR "DT_Output_5"."P_9" > 0.0) THEN ln("DT_Output_5"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_0", (9.0 * (CASE WHEN ("DT_Output_5"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_1" IS NULL OR "DT_Output_5"."P_1" > 0.0) THEN ln("DT_Output_5"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_5"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_0" IS NULL OR "DT_Output_5"."P_0" > 0.0) THEN ln("DT_Output_5"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_1" IS NULL OR "DT_Output_5"."P_1" > 0.0) THEN ln("DT_Output_5"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_2" IS NULL OR "DT_Output_5"."P_2" > 0.0) THEN ln("DT_Output_5"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_3" IS NULL OR "DT_Output_5"."P_3" > 0.0) THEN ln("DT_Output_5"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_4" IS NULL OR "DT_Output_5"."P_4" > 0.0) THEN ln("DT_Output_5"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_5" IS NULL OR "DT_Output_5"."P_5" > 0.0) THEN ln("DT_Output_5"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_6" IS NULL OR "DT_Output_5"."P_6" > 0.0) THEN ln("DT_Output_5"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_7" IS NULL OR "DT_Output_5"."P_7" > 0.0) THEN ln("DT_Output_5"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_8" IS NULL OR "DT_Output_5"."P_8" > 0.0) THEN ln("DT_Output_5"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_9" IS NULL OR "DT_Output_5"."P_9" > 0.0) THEN ln("DT_Output_5"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_1", 9.0 * (CASE WHEN ("DT_Output_5"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_1" IS NULL OR "DT_Output_5"."P_1" > 0.0) THEN ln("DT_Output_5"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_5"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_0" IS NULL OR "DT_Output_5"."P_0" > 0.0) THEN ln("DT_Output_5"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_1" IS NULL OR "DT_Output_5"."P_1" > 0.0) THEN ln("DT_Output_5"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_2" IS NULL OR "DT_Output_5"."P_2" > 0.0) THEN ln("DT_Output_5"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_3" IS NULL OR "DT_Output_5"."P_3" > 0.0) THEN ln("DT_Output_5"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_4" IS NULL OR "DT_Output_5"."P_4" > 0.0) THEN ln("DT_Output_5"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_5" IS NULL OR "DT_Output_5"."P_5" > 0.0) THEN ln("DT_Output_5"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_6" IS NULL OR "DT_Output_5"."P_6" > 0.0) THEN ln("DT_Output_5"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_7" IS NULL OR "DT_Output_5"."P_7" > 0.0) THEN ln("DT_Output_5"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_8" IS NULL OR "DT_Output_5"."P_8" > 0.0) THEN ln("DT_Output_5"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_9" IS NULL OR "DT_Output_5"."P_9" > 0.0) THEN ln("DT_Output_5"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_1", (9.0 * (CASE WHEN ("DT_Output_5"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_2" IS NULL OR "DT_Output_5"."P_2" > 0.0) THEN ln("DT_Output_5"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_5"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_0" IS NULL OR "DT_Output_5"."P_0" > 0.0) THEN ln("DT_Output_5"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_1" IS NULL OR "DT_Output_5"."P_1" > 0.0) THEN ln("DT_Output_5"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_2" IS NULL OR "DT_Output_5"."P_2" > 0.0) THEN ln("DT_Output_5"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_3" IS NULL OR "DT_Output_5"."P_3" > 0.0) THEN ln("DT_Output_5"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_4" IS NULL OR "DT_Output_5"."P_4" > 0.0) THEN ln("DT_Output_5"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_5" IS NULL OR "DT_Output_5"."P_5" > 0.0) THEN ln("DT_Output_5"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_6" IS NULL OR "DT_Output_5"."P_6" > 0.0) THEN ln("DT_Output_5"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_7" IS NULL OR "DT_Output_5"."P_7" > 0.0) THEN ln("DT_Output_5"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_8" IS NULL OR "DT_Output_5"."P_8" > 0.0) THEN ln("DT_Output_5"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_9" IS NULL OR "DT_Output_5"."P_9" > 0.0) THEN ln("DT_Output_5"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_2", 9.0 * (CASE WHEN ("DT_Output_5"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_2" IS NULL OR "DT_Output_5"."P_2" > 0.0) THEN ln("DT_Output_5"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_5"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_0" IS NULL OR "DT_Output_5"."P_0" > 0.0) THEN ln("DT_Output_5"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_1" IS NULL OR "DT_Output_5"."P_1" > 0.0) THEN ln("DT_Output_5"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_2" IS NULL OR "DT_Output_5"."P_2" > 0.0) THEN ln("DT_Output_5"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_3" IS NULL OR "DT_Output_5"."P_3" > 0.0) THEN ln("DT_Output_5"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_4" IS NULL OR "DT_Output_5"."P_4" > 0.0) THEN ln("DT_Output_5"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_5" IS NULL OR "DT_Output_5"."P_5" > 0.0) THEN ln("DT_Output_5"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_6" IS NULL OR "DT_Output_5"."P_6" > 0.0) THEN ln("DT_Output_5"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_7" IS NULL OR "DT_Output_5"."P_7" > 0.0) THEN ln("DT_Output_5"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_8" IS NULL OR "DT_Output_5"."P_8" > 0.0) THEN ln("DT_Output_5"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_9" IS NULL OR "DT_Output_5"."P_9" > 0.0) THEN ln("DT_Output_5"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_2", (9.0 * (CASE WHEN ("DT_Output_5"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_3" IS NULL OR "DT_Output_5"."P_3" > 0.0) THEN ln("DT_Output_5"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_5"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_0" IS NULL OR "DT_Output_5"."P_0" > 0.0) THEN ln("DT_Output_5"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_1" IS NULL OR "DT_Output_5"."P_1" > 0.0) THEN ln("DT_Output_5"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_2" IS NULL OR "DT_Output_5"."P_2" > 0.0) THEN ln("DT_Output_5"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_3" IS NULL OR "DT_Output_5"."P_3" > 0.0) THEN ln("DT_Output_5"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_4" IS NULL OR "DT_Output_5"."P_4" > 0.0) THEN ln("DT_Output_5"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_5" IS NULL OR "DT_Output_5"."P_5" > 0.0) THEN ln("DT_Output_5"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_6" IS NULL OR "DT_Output_5"."P_6" > 0.0) THEN ln("DT_Output_5"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_7" IS NULL OR "DT_Output_5"."P_7" > 0.0) THEN ln("DT_Output_5"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_8" IS NULL OR "DT_Output_5"."P_8" > 0.0) THEN ln("DT_Output_5"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_9" IS NULL OR "DT_Output_5"."P_9" > 0.0) THEN ln("DT_Output_5"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_3", 9.0 * (CASE WHEN ("DT_Output_5"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_3" IS NULL OR "DT_Output_5"."P_3" > 0.0) THEN ln("DT_Output_5"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_5"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_0" IS NULL OR "DT_Output_5"."P_0" > 0.0) THEN ln("DT_Output_5"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_1" IS NULL OR "DT_Output_5"."P_1" > 0.0) THEN ln("DT_Output_5"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_2" IS NULL OR "DT_Output_5"."P_2" > 0.0) THEN ln("DT_Output_5"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_3" IS NULL OR "DT_Output_5"."P_3" > 0.0) THEN ln("DT_Output_5"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_4" IS NULL OR "DT_Output_5"."P_4" > 0.0) THEN ln("DT_Output_5"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_5" IS NULL OR "DT_Output_5"."P_5" > 0.0) THEN ln("DT_Output_5"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_6" IS NULL OR "DT_Output_5"."P_6" > 0.0) THEN ln("DT_Output_5"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_7" IS NULL OR "DT_Output_5"."P_7" > 0.0) THEN ln("DT_Output_5"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_8" IS NULL OR "DT_Output_5"."P_8" > 0.0) THEN ln("DT_Output_5"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_9" IS NULL OR "DT_Output_5"."P_9" > 0.0) THEN ln("DT_Output_5"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_3", (9.0 * (CASE WHEN ("DT_Output_5"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_4" IS NULL OR "DT_Output_5"."P_4" > 0.0) THEN ln("DT_Output_5"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_5"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_0" IS NULL OR "DT_Output_5"."P_0" > 0.0) THEN ln("DT_Output_5"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_1" IS NULL OR "DT_Output_5"."P_1" > 0.0) THEN ln("DT_Output_5"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_2" IS NULL OR "DT_Output_5"."P_2" > 0.0) THEN ln("DT_Output_5"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_3" IS NULL OR "DT_Output_5"."P_3" > 0.0) THEN ln("DT_Output_5"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_4" IS NULL OR "DT_Output_5"."P_4" > 0.0) THEN ln("DT_Output_5"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_5" IS NULL OR "DT_Output_5"."P_5" > 0.0) THEN ln("DT_Output_5"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_6" IS NULL OR "DT_Output_5"."P_6" > 0.0) THEN ln("DT_Output_5"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_7" IS NULL OR "DT_Output_5"."P_7" > 0.0) THEN ln("DT_Output_5"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_8" IS NULL OR "DT_Output_5"."P_8" > 0.0) THEN ln("DT_Output_5"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_9" IS NULL OR "DT_Output_5"."P_9" > 0.0) THEN ln("DT_Output_5"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_4", 9.0 * (CASE WHEN ("DT_Output_5"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_4" IS NULL OR "DT_Output_5"."P_4" > 0.0) THEN ln("DT_Output_5"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_5"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_0" IS NULL OR "DT_Output_5"."P_0" > 0.0) THEN ln("DT_Output_5"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_1" IS NULL OR "DT_Output_5"."P_1" > 0.0) THEN ln("DT_Output_5"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_2" IS NULL OR "DT_Output_5"."P_2" > 0.0) THEN ln("DT_Output_5"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_3" IS NULL OR "DT_Output_5"."P_3" > 0.0) THEN ln("DT_Output_5"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_4" IS NULL OR "DT_Output_5"."P_4" > 0.0) THEN ln("DT_Output_5"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_5" IS NULL OR "DT_Output_5"."P_5" > 0.0) THEN ln("DT_Output_5"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_6" IS NULL OR "DT_Output_5"."P_6" > 0.0) THEN ln("DT_Output_5"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_7" IS NULL OR "DT_Output_5"."P_7" > 0.0) THEN ln("DT_Output_5"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_8" IS NULL OR "DT_Output_5"."P_8" > 0.0) THEN ln("DT_Output_5"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_9" IS NULL OR "DT_Output_5"."P_9" > 0.0) THEN ln("DT_Output_5"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_4", (9.0 * (CASE WHEN ("DT_Output_5"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_5" IS NULL OR "DT_Output_5"."P_5" > 0.0) THEN ln("DT_Output_5"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_5"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_0" IS NULL OR "DT_Output_5"."P_0" > 0.0) THEN ln("DT_Output_5"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_1" IS NULL OR "DT_Output_5"."P_1" > 0.0) THEN ln("DT_Output_5"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_2" IS NULL OR "DT_Output_5"."P_2" > 0.0) THEN ln("DT_Output_5"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_3" IS NULL OR "DT_Output_5"."P_3" > 0.0) THEN ln("DT_Output_5"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_4" IS NULL OR "DT_Output_5"."P_4" > 0.0) THEN ln("DT_Output_5"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_5" IS NULL OR "DT_Output_5"."P_5" > 0.0) THEN ln("DT_Output_5"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_6" IS NULL OR "DT_Output_5"."P_6" > 0.0) THEN ln("DT_Output_5"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_7" IS NULL OR "DT_Output_5"."P_7" > 0.0) THEN ln("DT_Output_5"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_8" IS NULL OR "DT_Output_5"."P_8" > 0.0) THEN ln("DT_Output_5"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_9" IS NULL OR "DT_Output_5"."P_9" > 0.0) THEN ln("DT_Output_5"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_5", 9.0 * (CASE WHEN ("DT_Output_5"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_5" IS NULL OR "DT_Output_5"."P_5" > 0.0) THEN ln("DT_Output_5"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_5"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_0" IS NULL OR "DT_Output_5"."P_0" > 0.0) THEN ln("DT_Output_5"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_1" IS NULL OR "DT_Output_5"."P_1" > 0.0) THEN ln("DT_Output_5"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_2" IS NULL OR "DT_Output_5"."P_2" > 0.0) THEN ln("DT_Output_5"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_3" IS NULL OR "DT_Output_5"."P_3" > 0.0) THEN ln("DT_Output_5"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_4" IS NULL OR "DT_Output_5"."P_4" > 0.0) THEN ln("DT_Output_5"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_5" IS NULL OR "DT_Output_5"."P_5" > 0.0) THEN ln("DT_Output_5"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_6" IS NULL OR "DT_Output_5"."P_6" > 0.0) THEN ln("DT_Output_5"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_7" IS NULL OR "DT_Output_5"."P_7" > 0.0) THEN ln("DT_Output_5"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_8" IS NULL OR "DT_Output_5"."P_8" > 0.0) THEN ln("DT_Output_5"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_9" IS NULL OR "DT_Output_5"."P_9" > 0.0) THEN ln("DT_Output_5"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_5", (9.0 * (CASE WHEN ("DT_Output_5"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_6" IS NULL OR "DT_Output_5"."P_6" > 0.0) THEN ln("DT_Output_5"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_5"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_0" IS NULL OR "DT_Output_5"."P_0" > 0.0) THEN ln("DT_Output_5"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_1" IS NULL OR "DT_Output_5"."P_1" > 0.0) THEN ln("DT_Output_5"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_2" IS NULL OR "DT_Output_5"."P_2" > 0.0) THEN ln("DT_Output_5"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_3" IS NULL OR "DT_Output_5"."P_3" > 0.0) THEN ln("DT_Output_5"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_4" IS NULL OR "DT_Output_5"."P_4" > 0.0) THEN ln("DT_Output_5"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_5" IS NULL OR "DT_Output_5"."P_5" > 0.0) THEN ln("DT_Output_5"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_6" IS NULL OR "DT_Output_5"."P_6" > 0.0) THEN ln("DT_Output_5"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_7" IS NULL OR "DT_Output_5"."P_7" > 0.0) THEN ln("DT_Output_5"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_8" IS NULL OR "DT_Output_5"."P_8" > 0.0) THEN ln("DT_Output_5"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_9" IS NULL OR "DT_Output_5"."P_9" > 0.0) THEN ln("DT_Output_5"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_6", 9.0 * (CASE WHEN ("DT_Output_5"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_6" IS NULL OR "DT_Output_5"."P_6" > 0.0) THEN ln("DT_Output_5"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_5"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_0" IS NULL OR "DT_Output_5"."P_0" > 0.0) THEN ln("DT_Output_5"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_1" IS NULL OR "DT_Output_5"."P_1" > 0.0) THEN ln("DT_Output_5"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_2" IS NULL OR "DT_Output_5"."P_2" > 0.0) THEN ln("DT_Output_5"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_3" IS NULL OR "DT_Output_5"."P_3" > 0.0) THEN ln("DT_Output_5"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_4" IS NULL OR "DT_Output_5"."P_4" > 0.0) THEN ln("DT_Output_5"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_5" IS NULL OR "DT_Output_5"."P_5" > 0.0) THEN ln("DT_Output_5"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_6" IS NULL OR "DT_Output_5"."P_6" > 0.0) THEN ln("DT_Output_5"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_7" IS NULL OR "DT_Output_5"."P_7" > 0.0) THEN ln("DT_Output_5"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_8" IS NULL OR "DT_Output_5"."P_8" > 0.0) THEN ln("DT_Output_5"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_9" IS NULL OR "DT_Output_5"."P_9" > 0.0) THEN ln("DT_Output_5"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_6", (9.0 * (CASE WHEN ("DT_Output_5"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_7" IS NULL OR "DT_Output_5"."P_7" > 0.0) THEN ln("DT_Output_5"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_5"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_0" IS NULL OR "DT_Output_5"."P_0" > 0.0) THEN ln("DT_Output_5"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_1" IS NULL OR "DT_Output_5"."P_1" > 0.0) THEN ln("DT_Output_5"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_2" IS NULL OR "DT_Output_5"."P_2" > 0.0) THEN ln("DT_Output_5"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_3" IS NULL OR "DT_Output_5"."P_3" > 0.0) THEN ln("DT_Output_5"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_4" IS NULL OR "DT_Output_5"."P_4" > 0.0) THEN ln("DT_Output_5"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_5" IS NULL OR "DT_Output_5"."P_5" > 0.0) THEN ln("DT_Output_5"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_6" IS NULL OR "DT_Output_5"."P_6" > 0.0) THEN ln("DT_Output_5"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_7" IS NULL OR "DT_Output_5"."P_7" > 0.0) THEN ln("DT_Output_5"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_8" IS NULL OR "DT_Output_5"."P_8" > 0.0) THEN ln("DT_Output_5"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_9" IS NULL OR "DT_Output_5"."P_9" > 0.0) THEN ln("DT_Output_5"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_7", 9.0 * (CASE WHEN ("DT_Output_5"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_7" IS NULL OR "DT_Output_5"."P_7" > 0.0) THEN ln("DT_Output_5"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_5"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_0" IS NULL OR "DT_Output_5"."P_0" > 0.0) THEN ln("DT_Output_5"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_1" IS NULL OR "DT_Output_5"."P_1" > 0.0) THEN ln("DT_Output_5"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_2" IS NULL OR "DT_Output_5"."P_2" > 0.0) THEN ln("DT_Output_5"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_3" IS NULL OR "DT_Output_5"."P_3" > 0.0) THEN ln("DT_Output_5"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_4" IS NULL OR "DT_Output_5"."P_4" > 0.0) THEN ln("DT_Output_5"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_5" IS NULL OR "DT_Output_5"."P_5" > 0.0) THEN ln("DT_Output_5"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_6" IS NULL OR "DT_Output_5"."P_6" > 0.0) THEN ln("DT_Output_5"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_7" IS NULL OR "DT_Output_5"."P_7" > 0.0) THEN ln("DT_Output_5"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_8" IS NULL OR "DT_Output_5"."P_8" > 0.0) THEN ln("DT_Output_5"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_9" IS NULL OR "DT_Output_5"."P_9" > 0.0) THEN ln("DT_Output_5"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_7", (9.0 * (CASE WHEN ("DT_Output_5"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_8" IS NULL OR "DT_Output_5"."P_8" > 0.0) THEN ln("DT_Output_5"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_5"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_0" IS NULL OR "DT_Output_5"."P_0" > 0.0) THEN ln("DT_Output_5"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_1" IS NULL OR "DT_Output_5"."P_1" > 0.0) THEN ln("DT_Output_5"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_2" IS NULL OR "DT_Output_5"."P_2" > 0.0) THEN ln("DT_Output_5"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_3" IS NULL OR "DT_Output_5"."P_3" > 0.0) THEN ln("DT_Output_5"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_4" IS NULL OR "DT_Output_5"."P_4" > 0.0) THEN ln("DT_Output_5"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_5" IS NULL OR "DT_Output_5"."P_5" > 0.0) THEN ln("DT_Output_5"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_6" IS NULL OR "DT_Output_5"."P_6" > 0.0) THEN ln("DT_Output_5"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_7" IS NULL OR "DT_Output_5"."P_7" > 0.0) THEN ln("DT_Output_5"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_8" IS NULL OR "DT_Output_5"."P_8" > 0.0) THEN ln("DT_Output_5"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_9" IS NULL OR "DT_Output_5"."P_9" > 0.0) THEN ln("DT_Output_5"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_8", 9.0 * (CASE WHEN ("DT_Output_5"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_8" IS NULL OR "DT_Output_5"."P_8" > 0.0) THEN ln("DT_Output_5"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_5"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_0" IS NULL OR "DT_Output_5"."P_0" > 0.0) THEN ln("DT_Output_5"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_1" IS NULL OR "DT_Output_5"."P_1" > 0.0) THEN ln("DT_Output_5"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_2" IS NULL OR "DT_Output_5"."P_2" > 0.0) THEN ln("DT_Output_5"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_3" IS NULL OR "DT_Output_5"."P_3" > 0.0) THEN ln("DT_Output_5"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_4" IS NULL OR "DT_Output_5"."P_4" > 0.0) THEN ln("DT_Output_5"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_5" IS NULL OR "DT_Output_5"."P_5" > 0.0) THEN ln("DT_Output_5"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_6" IS NULL OR "DT_Output_5"."P_6" > 0.0) THEN ln("DT_Output_5"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_7" IS NULL OR "DT_Output_5"."P_7" > 0.0) THEN ln("DT_Output_5"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_8" IS NULL OR "DT_Output_5"."P_8" > 0.0) THEN ln("DT_Output_5"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_9" IS NULL OR "DT_Output_5"."P_9" > 0.0) THEN ln("DT_Output_5"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_8", (9.0 * (CASE WHEN ("DT_Output_5"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_9" IS NULL OR "DT_Output_5"."P_9" > 0.0) THEN ln("DT_Output_5"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_5"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_0" IS NULL OR "DT_Output_5"."P_0" > 0.0) THEN ln("DT_Output_5"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_1" IS NULL OR "DT_Output_5"."P_1" > 0.0) THEN ln("DT_Output_5"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_2" IS NULL OR "DT_Output_5"."P_2" > 0.0) THEN ln("DT_Output_5"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_3" IS NULL OR "DT_Output_5"."P_3" > 0.0) THEN ln("DT_Output_5"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_4" IS NULL OR "DT_Output_5"."P_4" > 0.0) THEN ln("DT_Output_5"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_5" IS NULL OR "DT_Output_5"."P_5" > 0.0) THEN ln("DT_Output_5"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_6" IS NULL OR "DT_Output_5"."P_6" > 0.0) THEN ln("DT_Output_5"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_7" IS NULL OR "DT_Output_5"."P_7" > 0.0) THEN ln("DT_Output_5"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_8" IS NULL OR "DT_Output_5"."P_8" > 0.0) THEN ln("DT_Output_5"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_9" IS NULL OR "DT_Output_5"."P_9" > 0.0) THEN ln("DT_Output_5"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_9", 9.0 * (CASE WHEN ("DT_Output_5"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_9" IS NULL OR "DT_Output_5"."P_9" > 0.0) THEN ln("DT_Output_5"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_5"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_0" IS NULL OR "DT_Output_5"."P_0" > 0.0) THEN ln("DT_Output_5"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_1" IS NULL OR "DT_Output_5"."P_1" > 0.0) THEN ln("DT_Output_5"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_2" IS NULL OR "DT_Output_5"."P_2" > 0.0) THEN ln("DT_Output_5"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_3" IS NULL OR "DT_Output_5"."P_3" > 0.0) THEN ln("DT_Output_5"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_4" IS NULL OR "DT_Output_5"."P_4" > 0.0) THEN ln("DT_Output_5"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_5" IS NULL OR "DT_Output_5"."P_5" > 0.0) THEN ln("DT_Output_5"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_6" IS NULL OR "DT_Output_5"."P_6" > 0.0) THEN ln("DT_Output_5"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_7" IS NULL OR "DT_Output_5"."P_7" > 0.0) THEN ln("DT_Output_5"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_8" IS NULL OR "DT_Output_5"."P_8" > 0.0) THEN ln("DT_Output_5"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_5"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_9" IS NULL OR "DT_Output_5"."P_9" > 0.0) THEN ln("DT_Output_5"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_9" 
FROM "DT_Output_5"), 
"DT_node_lookup_6" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_30 <= -1.555469036102295) THEN 1 ELSE 2 END AS node_id_2 
FROM "DEGEN_YN11LY_ADS_SCA_2_OUT" "ADS_sca_2_OUT"), 
"DT_node_data_6" AS 
(SELECT "Values".nid AS nid, CAST("Values"."P_0" AS BINARY_DOUBLE) AS "P_0", CAST("Values"."P_1" AS BINARY_DOUBLE) AS "P_1", CAST("Values"."P_2" AS BINARY_DOUBLE) AS "P_2", CAST("Values"."P_3" AS BINARY_DOUBLE) AS "P_3", CAST("Values"."P_4" AS BINARY_DOUBLE) AS "P_4", CAST("Values"."P_5" AS BINARY_DOUBLE) AS "P_5", CAST("Values"."P_6" AS BINARY_DOUBLE) AS "P_6", CAST("Values"."P_7" AS BINARY_DOUBLE) AS "P_7", CAST("Values"."P_8" AS BINARY_DOUBLE) AS "P_8", CAST("Values"."P_9" AS BINARY_DOUBLE) AS "P_9", CAST("Values"."D" AS BINARY_DOUBLE) AS "D", CAST("Values"."DP" AS BINARY_DOUBLE) AS "DP" 
FROM (SELECT 1 AS nid, 0.9911204327968381 AS "P_0", 0.0011099890029119264 AS "P_1", 0.0011097623106321544 AS "P_2", 0.001109992030742763 AS "P_3", 0.00110985950088987 AS "P_4", 0.0011099915753984464 AS "P_5", 0.0011099917489321197 AS "P_6", 0.0011099890029119257 AS "P_7", 0.0 AS "P_8", 0.0011099920307426593 AS "P_9", 0 AS "D", 0.9911204327968381 AS "DP" FROM DUAL UNION ALL SELECT 2 AS nid, 1.991519365655419e-08 AS "P_0", 0.11109724899436066 AS "P_1", 0.11109729434856758 AS "P_2", 0.11109726856977617 AS "P_3", 0.11109728344204602 AS "P_4", 0.1110972686208745 AS "P_5", 0.11109726860140084 AS "P_6", 0.11109724899436073 AS "P_7", 0.11122182994364334 AS "P_8", 0.11109726856977663 AS "P_9", 8 AS "D", 0.11122182994364334 AS "DP" FROM DUAL) "Values"), 
"DT_Output_6" AS 
(SELECT "DT_node_lookup_6"."KEY" AS "KEY", "DT_node_lookup_6".node_id_2 AS node_id_2, "DT_node_data_6".nid AS nid, "DT_node_data_6"."P_0" AS "P_0", "DT_node_data_6"."P_1" AS "P_1", "DT_node_data_6"."P_2" AS "P_2", "DT_node_data_6"."P_3" AS "P_3", "DT_node_data_6"."P_4" AS "P_4", "DT_node_data_6"."P_5" AS "P_5", "DT_node_data_6"."P_6" AS "P_6", "DT_node_data_6"."P_7" AS "P_7", "DT_node_data_6"."P_8" AS "P_8", "DT_node_data_6"."P_9" AS "P_9", "DT_node_data_6"."D" AS "D", "DT_node_data_6"."DP" AS "DP" 
FROM "DT_node_lookup_6" LEFT OUTER JOIN "DT_node_data_6" ON "DT_node_lookup_6".node_id_2 = "DT_node_data_6".nid), 
"ADB_Model_6" AS 
(SELECT "DT_Output_6"."KEY" AS "KEY", (9.0 * (CASE WHEN ("DT_Output_6"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_0" IS NULL OR "DT_Output_6"."P_0" > 0.0) THEN ln("DT_Output_6"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_6"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_0" IS NULL OR "DT_Output_6"."P_0" > 0.0) THEN ln("DT_Output_6"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_1" IS NULL OR "DT_Output_6"."P_1" > 0.0) THEN ln("DT_Output_6"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_2" IS NULL OR "DT_Output_6"."P_2" > 0.0) THEN ln("DT_Output_6"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_3" IS NULL OR "DT_Output_6"."P_3" > 0.0) THEN ln("DT_Output_6"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_4" IS NULL OR "DT_Output_6"."P_4" > 0.0) THEN ln("DT_Output_6"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_5" IS NULL OR "DT_Output_6"."P_5" > 0.0) THEN ln("DT_Output_6"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_6" IS NULL OR "DT_Output_6"."P_6" > 0.0) THEN ln("DT_Output_6"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_7" IS NULL OR "DT_Output_6"."P_7" > 0.0) THEN ln("DT_Output_6"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_8" IS NULL OR "DT_Output_6"."P_8" > 0.0) THEN ln("DT_Output_6"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_9" IS NULL OR "DT_Output_6"."P_9" > 0.0) THEN ln("DT_Output_6"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_0", 9.0 * (CASE WHEN ("DT_Output_6"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_0" IS NULL OR "DT_Output_6"."P_0" > 0.0) THEN ln("DT_Output_6"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_6"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_0" IS NULL OR "DT_Output_6"."P_0" > 0.0) THEN ln("DT_Output_6"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_1" IS NULL OR "DT_Output_6"."P_1" > 0.0) THEN ln("DT_Output_6"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_2" IS NULL OR "DT_Output_6"."P_2" > 0.0) THEN ln("DT_Output_6"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_3" IS NULL OR "DT_Output_6"."P_3" > 0.0) THEN ln("DT_Output_6"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_4" IS NULL OR "DT_Output_6"."P_4" > 0.0) THEN ln("DT_Output_6"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_5" IS NULL OR "DT_Output_6"."P_5" > 0.0) THEN ln("DT_Output_6"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_6" IS NULL OR "DT_Output_6"."P_6" > 0.0) THEN ln("DT_Output_6"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_7" IS NULL OR "DT_Output_6"."P_7" > 0.0) THEN ln("DT_Output_6"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_8" IS NULL OR "DT_Output_6"."P_8" > 0.0) THEN ln("DT_Output_6"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_9" IS NULL OR "DT_Output_6"."P_9" > 0.0) THEN ln("DT_Output_6"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_0", (9.0 * (CASE WHEN ("DT_Output_6"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_1" IS NULL OR "DT_Output_6"."P_1" > 0.0) THEN ln("DT_Output_6"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_6"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_0" IS NULL OR "DT_Output_6"."P_0" > 0.0) THEN ln("DT_Output_6"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_1" IS NULL OR "DT_Output_6"."P_1" > 0.0) THEN ln("DT_Output_6"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_2" IS NULL OR "DT_Output_6"."P_2" > 0.0) THEN ln("DT_Output_6"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_3" IS NULL OR "DT_Output_6"."P_3" > 0.0) THEN ln("DT_Output_6"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_4" IS NULL OR "DT_Output_6"."P_4" > 0.0) THEN ln("DT_Output_6"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_5" IS NULL OR "DT_Output_6"."P_5" > 0.0) THEN ln("DT_Output_6"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_6" IS NULL OR "DT_Output_6"."P_6" > 0.0) THEN ln("DT_Output_6"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_7" IS NULL OR "DT_Output_6"."P_7" > 0.0) THEN ln("DT_Output_6"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_8" IS NULL OR "DT_Output_6"."P_8" > 0.0) THEN ln("DT_Output_6"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_9" IS NULL OR "DT_Output_6"."P_9" > 0.0) THEN ln("DT_Output_6"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_1", 9.0 * (CASE WHEN ("DT_Output_6"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_1" IS NULL OR "DT_Output_6"."P_1" > 0.0) THEN ln("DT_Output_6"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_6"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_0" IS NULL OR "DT_Output_6"."P_0" > 0.0) THEN ln("DT_Output_6"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_1" IS NULL OR "DT_Output_6"."P_1" > 0.0) THEN ln("DT_Output_6"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_2" IS NULL OR "DT_Output_6"."P_2" > 0.0) THEN ln("DT_Output_6"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_3" IS NULL OR "DT_Output_6"."P_3" > 0.0) THEN ln("DT_Output_6"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_4" IS NULL OR "DT_Output_6"."P_4" > 0.0) THEN ln("DT_Output_6"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_5" IS NULL OR "DT_Output_6"."P_5" > 0.0) THEN ln("DT_Output_6"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_6" IS NULL OR "DT_Output_6"."P_6" > 0.0) THEN ln("DT_Output_6"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_7" IS NULL OR "DT_Output_6"."P_7" > 0.0) THEN ln("DT_Output_6"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_8" IS NULL OR "DT_Output_6"."P_8" > 0.0) THEN ln("DT_Output_6"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_9" IS NULL OR "DT_Output_6"."P_9" > 0.0) THEN ln("DT_Output_6"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_1", (9.0 * (CASE WHEN ("DT_Output_6"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_2" IS NULL OR "DT_Output_6"."P_2" > 0.0) THEN ln("DT_Output_6"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_6"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_0" IS NULL OR "DT_Output_6"."P_0" > 0.0) THEN ln("DT_Output_6"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_1" IS NULL OR "DT_Output_6"."P_1" > 0.0) THEN ln("DT_Output_6"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_2" IS NULL OR "DT_Output_6"."P_2" > 0.0) THEN ln("DT_Output_6"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_3" IS NULL OR "DT_Output_6"."P_3" > 0.0) THEN ln("DT_Output_6"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_4" IS NULL OR "DT_Output_6"."P_4" > 0.0) THEN ln("DT_Output_6"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_5" IS NULL OR "DT_Output_6"."P_5" > 0.0) THEN ln("DT_Output_6"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_6" IS NULL OR "DT_Output_6"."P_6" > 0.0) THEN ln("DT_Output_6"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_7" IS NULL OR "DT_Output_6"."P_7" > 0.0) THEN ln("DT_Output_6"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_8" IS NULL OR "DT_Output_6"."P_8" > 0.0) THEN ln("DT_Output_6"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_9" IS NULL OR "DT_Output_6"."P_9" > 0.0) THEN ln("DT_Output_6"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_2", 9.0 * (CASE WHEN ("DT_Output_6"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_2" IS NULL OR "DT_Output_6"."P_2" > 0.0) THEN ln("DT_Output_6"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_6"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_0" IS NULL OR "DT_Output_6"."P_0" > 0.0) THEN ln("DT_Output_6"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_1" IS NULL OR "DT_Output_6"."P_1" > 0.0) THEN ln("DT_Output_6"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_2" IS NULL OR "DT_Output_6"."P_2" > 0.0) THEN ln("DT_Output_6"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_3" IS NULL OR "DT_Output_6"."P_3" > 0.0) THEN ln("DT_Output_6"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_4" IS NULL OR "DT_Output_6"."P_4" > 0.0) THEN ln("DT_Output_6"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_5" IS NULL OR "DT_Output_6"."P_5" > 0.0) THEN ln("DT_Output_6"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_6" IS NULL OR "DT_Output_6"."P_6" > 0.0) THEN ln("DT_Output_6"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_7" IS NULL OR "DT_Output_6"."P_7" > 0.0) THEN ln("DT_Output_6"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_8" IS NULL OR "DT_Output_6"."P_8" > 0.0) THEN ln("DT_Output_6"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_9" IS NULL OR "DT_Output_6"."P_9" > 0.0) THEN ln("DT_Output_6"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_2", (9.0 * (CASE WHEN ("DT_Output_6"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_3" IS NULL OR "DT_Output_6"."P_3" > 0.0) THEN ln("DT_Output_6"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_6"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_0" IS NULL OR "DT_Output_6"."P_0" > 0.0) THEN ln("DT_Output_6"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_1" IS NULL OR "DT_Output_6"."P_1" > 0.0) THEN ln("DT_Output_6"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_2" IS NULL OR "DT_Output_6"."P_2" > 0.0) THEN ln("DT_Output_6"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_3" IS NULL OR "DT_Output_6"."P_3" > 0.0) THEN ln("DT_Output_6"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_4" IS NULL OR "DT_Output_6"."P_4" > 0.0) THEN ln("DT_Output_6"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_5" IS NULL OR "DT_Output_6"."P_5" > 0.0) THEN ln("DT_Output_6"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_6" IS NULL OR "DT_Output_6"."P_6" > 0.0) THEN ln("DT_Output_6"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_7" IS NULL OR "DT_Output_6"."P_7" > 0.0) THEN ln("DT_Output_6"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_8" IS NULL OR "DT_Output_6"."P_8" > 0.0) THEN ln("DT_Output_6"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_9" IS NULL OR "DT_Output_6"."P_9" > 0.0) THEN ln("DT_Output_6"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_3", 9.0 * (CASE WHEN ("DT_Output_6"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_3" IS NULL OR "DT_Output_6"."P_3" > 0.0) THEN ln("DT_Output_6"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_6"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_0" IS NULL OR "DT_Output_6"."P_0" > 0.0) THEN ln("DT_Output_6"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_1" IS NULL OR "DT_Output_6"."P_1" > 0.0) THEN ln("DT_Output_6"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_2" IS NULL OR "DT_Output_6"."P_2" > 0.0) THEN ln("DT_Output_6"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_3" IS NULL OR "DT_Output_6"."P_3" > 0.0) THEN ln("DT_Output_6"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_4" IS NULL OR "DT_Output_6"."P_4" > 0.0) THEN ln("DT_Output_6"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_5" IS NULL OR "DT_Output_6"."P_5" > 0.0) THEN ln("DT_Output_6"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_6" IS NULL OR "DT_Output_6"."P_6" > 0.0) THEN ln("DT_Output_6"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_7" IS NULL OR "DT_Output_6"."P_7" > 0.0) THEN ln("DT_Output_6"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_8" IS NULL OR "DT_Output_6"."P_8" > 0.0) THEN ln("DT_Output_6"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_9" IS NULL OR "DT_Output_6"."P_9" > 0.0) THEN ln("DT_Output_6"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_3", (9.0 * (CASE WHEN ("DT_Output_6"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_4" IS NULL OR "DT_Output_6"."P_4" > 0.0) THEN ln("DT_Output_6"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_6"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_0" IS NULL OR "DT_Output_6"."P_0" > 0.0) THEN ln("DT_Output_6"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_1" IS NULL OR "DT_Output_6"."P_1" > 0.0) THEN ln("DT_Output_6"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_2" IS NULL OR "DT_Output_6"."P_2" > 0.0) THEN ln("DT_Output_6"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_3" IS NULL OR "DT_Output_6"."P_3" > 0.0) THEN ln("DT_Output_6"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_4" IS NULL OR "DT_Output_6"."P_4" > 0.0) THEN ln("DT_Output_6"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_5" IS NULL OR "DT_Output_6"."P_5" > 0.0) THEN ln("DT_Output_6"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_6" IS NULL OR "DT_Output_6"."P_6" > 0.0) THEN ln("DT_Output_6"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_7" IS NULL OR "DT_Output_6"."P_7" > 0.0) THEN ln("DT_Output_6"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_8" IS NULL OR "DT_Output_6"."P_8" > 0.0) THEN ln("DT_Output_6"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_9" IS NULL OR "DT_Output_6"."P_9" > 0.0) THEN ln("DT_Output_6"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_4", 9.0 * (CASE WHEN ("DT_Output_6"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_4" IS NULL OR "DT_Output_6"."P_4" > 0.0) THEN ln("DT_Output_6"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_6"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_0" IS NULL OR "DT_Output_6"."P_0" > 0.0) THEN ln("DT_Output_6"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_1" IS NULL OR "DT_Output_6"."P_1" > 0.0) THEN ln("DT_Output_6"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_2" IS NULL OR "DT_Output_6"."P_2" > 0.0) THEN ln("DT_Output_6"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_3" IS NULL OR "DT_Output_6"."P_3" > 0.0) THEN ln("DT_Output_6"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_4" IS NULL OR "DT_Output_6"."P_4" > 0.0) THEN ln("DT_Output_6"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_5" IS NULL OR "DT_Output_6"."P_5" > 0.0) THEN ln("DT_Output_6"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_6" IS NULL OR "DT_Output_6"."P_6" > 0.0) THEN ln("DT_Output_6"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_7" IS NULL OR "DT_Output_6"."P_7" > 0.0) THEN ln("DT_Output_6"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_8" IS NULL OR "DT_Output_6"."P_8" > 0.0) THEN ln("DT_Output_6"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_9" IS NULL OR "DT_Output_6"."P_9" > 0.0) THEN ln("DT_Output_6"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_4", (9.0 * (CASE WHEN ("DT_Output_6"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_5" IS NULL OR "DT_Output_6"."P_5" > 0.0) THEN ln("DT_Output_6"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_6"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_0" IS NULL OR "DT_Output_6"."P_0" > 0.0) THEN ln("DT_Output_6"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_1" IS NULL OR "DT_Output_6"."P_1" > 0.0) THEN ln("DT_Output_6"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_2" IS NULL OR "DT_Output_6"."P_2" > 0.0) THEN ln("DT_Output_6"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_3" IS NULL OR "DT_Output_6"."P_3" > 0.0) THEN ln("DT_Output_6"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_4" IS NULL OR "DT_Output_6"."P_4" > 0.0) THEN ln("DT_Output_6"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_5" IS NULL OR "DT_Output_6"."P_5" > 0.0) THEN ln("DT_Output_6"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_6" IS NULL OR "DT_Output_6"."P_6" > 0.0) THEN ln("DT_Output_6"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_7" IS NULL OR "DT_Output_6"."P_7" > 0.0) THEN ln("DT_Output_6"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_8" IS NULL OR "DT_Output_6"."P_8" > 0.0) THEN ln("DT_Output_6"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_9" IS NULL OR "DT_Output_6"."P_9" > 0.0) THEN ln("DT_Output_6"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_5", 9.0 * (CASE WHEN ("DT_Output_6"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_5" IS NULL OR "DT_Output_6"."P_5" > 0.0) THEN ln("DT_Output_6"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_6"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_0" IS NULL OR "DT_Output_6"."P_0" > 0.0) THEN ln("DT_Output_6"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_1" IS NULL OR "DT_Output_6"."P_1" > 0.0) THEN ln("DT_Output_6"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_2" IS NULL OR "DT_Output_6"."P_2" > 0.0) THEN ln("DT_Output_6"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_3" IS NULL OR "DT_Output_6"."P_3" > 0.0) THEN ln("DT_Output_6"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_4" IS NULL OR "DT_Output_6"."P_4" > 0.0) THEN ln("DT_Output_6"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_5" IS NULL OR "DT_Output_6"."P_5" > 0.0) THEN ln("DT_Output_6"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_6" IS NULL OR "DT_Output_6"."P_6" > 0.0) THEN ln("DT_Output_6"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_7" IS NULL OR "DT_Output_6"."P_7" > 0.0) THEN ln("DT_Output_6"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_8" IS NULL OR "DT_Output_6"."P_8" > 0.0) THEN ln("DT_Output_6"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_9" IS NULL OR "DT_Output_6"."P_9" > 0.0) THEN ln("DT_Output_6"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_5", (9.0 * (CASE WHEN ("DT_Output_6"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_6" IS NULL OR "DT_Output_6"."P_6" > 0.0) THEN ln("DT_Output_6"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_6"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_0" IS NULL OR "DT_Output_6"."P_0" > 0.0) THEN ln("DT_Output_6"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_1" IS NULL OR "DT_Output_6"."P_1" > 0.0) THEN ln("DT_Output_6"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_2" IS NULL OR "DT_Output_6"."P_2" > 0.0) THEN ln("DT_Output_6"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_3" IS NULL OR "DT_Output_6"."P_3" > 0.0) THEN ln("DT_Output_6"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_4" IS NULL OR "DT_Output_6"."P_4" > 0.0) THEN ln("DT_Output_6"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_5" IS NULL OR "DT_Output_6"."P_5" > 0.0) THEN ln("DT_Output_6"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_6" IS NULL OR "DT_Output_6"."P_6" > 0.0) THEN ln("DT_Output_6"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_7" IS NULL OR "DT_Output_6"."P_7" > 0.0) THEN ln("DT_Output_6"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_8" IS NULL OR "DT_Output_6"."P_8" > 0.0) THEN ln("DT_Output_6"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_9" IS NULL OR "DT_Output_6"."P_9" > 0.0) THEN ln("DT_Output_6"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_6", 9.0 * (CASE WHEN ("DT_Output_6"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_6" IS NULL OR "DT_Output_6"."P_6" > 0.0) THEN ln("DT_Output_6"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_6"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_0" IS NULL OR "DT_Output_6"."P_0" > 0.0) THEN ln("DT_Output_6"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_1" IS NULL OR "DT_Output_6"."P_1" > 0.0) THEN ln("DT_Output_6"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_2" IS NULL OR "DT_Output_6"."P_2" > 0.0) THEN ln("DT_Output_6"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_3" IS NULL OR "DT_Output_6"."P_3" > 0.0) THEN ln("DT_Output_6"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_4" IS NULL OR "DT_Output_6"."P_4" > 0.0) THEN ln("DT_Output_6"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_5" IS NULL OR "DT_Output_6"."P_5" > 0.0) THEN ln("DT_Output_6"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_6" IS NULL OR "DT_Output_6"."P_6" > 0.0) THEN ln("DT_Output_6"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_7" IS NULL OR "DT_Output_6"."P_7" > 0.0) THEN ln("DT_Output_6"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_8" IS NULL OR "DT_Output_6"."P_8" > 0.0) THEN ln("DT_Output_6"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_9" IS NULL OR "DT_Output_6"."P_9" > 0.0) THEN ln("DT_Output_6"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_6", (9.0 * (CASE WHEN ("DT_Output_6"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_7" IS NULL OR "DT_Output_6"."P_7" > 0.0) THEN ln("DT_Output_6"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_6"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_0" IS NULL OR "DT_Output_6"."P_0" > 0.0) THEN ln("DT_Output_6"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_1" IS NULL OR "DT_Output_6"."P_1" > 0.0) THEN ln("DT_Output_6"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_2" IS NULL OR "DT_Output_6"."P_2" > 0.0) THEN ln("DT_Output_6"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_3" IS NULL OR "DT_Output_6"."P_3" > 0.0) THEN ln("DT_Output_6"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_4" IS NULL OR "DT_Output_6"."P_4" > 0.0) THEN ln("DT_Output_6"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_5" IS NULL OR "DT_Output_6"."P_5" > 0.0) THEN ln("DT_Output_6"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_6" IS NULL OR "DT_Output_6"."P_6" > 0.0) THEN ln("DT_Output_6"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_7" IS NULL OR "DT_Output_6"."P_7" > 0.0) THEN ln("DT_Output_6"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_8" IS NULL OR "DT_Output_6"."P_8" > 0.0) THEN ln("DT_Output_6"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_9" IS NULL OR "DT_Output_6"."P_9" > 0.0) THEN ln("DT_Output_6"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_7", 9.0 * (CASE WHEN ("DT_Output_6"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_7" IS NULL OR "DT_Output_6"."P_7" > 0.0) THEN ln("DT_Output_6"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_6"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_0" IS NULL OR "DT_Output_6"."P_0" > 0.0) THEN ln("DT_Output_6"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_1" IS NULL OR "DT_Output_6"."P_1" > 0.0) THEN ln("DT_Output_6"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_2" IS NULL OR "DT_Output_6"."P_2" > 0.0) THEN ln("DT_Output_6"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_3" IS NULL OR "DT_Output_6"."P_3" > 0.0) THEN ln("DT_Output_6"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_4" IS NULL OR "DT_Output_6"."P_4" > 0.0) THEN ln("DT_Output_6"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_5" IS NULL OR "DT_Output_6"."P_5" > 0.0) THEN ln("DT_Output_6"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_6" IS NULL OR "DT_Output_6"."P_6" > 0.0) THEN ln("DT_Output_6"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_7" IS NULL OR "DT_Output_6"."P_7" > 0.0) THEN ln("DT_Output_6"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_8" IS NULL OR "DT_Output_6"."P_8" > 0.0) THEN ln("DT_Output_6"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_9" IS NULL OR "DT_Output_6"."P_9" > 0.0) THEN ln("DT_Output_6"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_7", (9.0 * (CASE WHEN ("DT_Output_6"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_8" IS NULL OR "DT_Output_6"."P_8" > 0.0) THEN ln("DT_Output_6"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_6"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_0" IS NULL OR "DT_Output_6"."P_0" > 0.0) THEN ln("DT_Output_6"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_1" IS NULL OR "DT_Output_6"."P_1" > 0.0) THEN ln("DT_Output_6"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_2" IS NULL OR "DT_Output_6"."P_2" > 0.0) THEN ln("DT_Output_6"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_3" IS NULL OR "DT_Output_6"."P_3" > 0.0) THEN ln("DT_Output_6"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_4" IS NULL OR "DT_Output_6"."P_4" > 0.0) THEN ln("DT_Output_6"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_5" IS NULL OR "DT_Output_6"."P_5" > 0.0) THEN ln("DT_Output_6"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_6" IS NULL OR "DT_Output_6"."P_6" > 0.0) THEN ln("DT_Output_6"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_7" IS NULL OR "DT_Output_6"."P_7" > 0.0) THEN ln("DT_Output_6"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_8" IS NULL OR "DT_Output_6"."P_8" > 0.0) THEN ln("DT_Output_6"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_9" IS NULL OR "DT_Output_6"."P_9" > 0.0) THEN ln("DT_Output_6"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_8", 9.0 * (CASE WHEN ("DT_Output_6"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_8" IS NULL OR "DT_Output_6"."P_8" > 0.0) THEN ln("DT_Output_6"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_6"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_0" IS NULL OR "DT_Output_6"."P_0" > 0.0) THEN ln("DT_Output_6"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_1" IS NULL OR "DT_Output_6"."P_1" > 0.0) THEN ln("DT_Output_6"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_2" IS NULL OR "DT_Output_6"."P_2" > 0.0) THEN ln("DT_Output_6"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_3" IS NULL OR "DT_Output_6"."P_3" > 0.0) THEN ln("DT_Output_6"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_4" IS NULL OR "DT_Output_6"."P_4" > 0.0) THEN ln("DT_Output_6"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_5" IS NULL OR "DT_Output_6"."P_5" > 0.0) THEN ln("DT_Output_6"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_6" IS NULL OR "DT_Output_6"."P_6" > 0.0) THEN ln("DT_Output_6"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_7" IS NULL OR "DT_Output_6"."P_7" > 0.0) THEN ln("DT_Output_6"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_8" IS NULL OR "DT_Output_6"."P_8" > 0.0) THEN ln("DT_Output_6"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_9" IS NULL OR "DT_Output_6"."P_9" > 0.0) THEN ln("DT_Output_6"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_8", (9.0 * (CASE WHEN ("DT_Output_6"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_9" IS NULL OR "DT_Output_6"."P_9" > 0.0) THEN ln("DT_Output_6"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_6"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_0" IS NULL OR "DT_Output_6"."P_0" > 0.0) THEN ln("DT_Output_6"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_1" IS NULL OR "DT_Output_6"."P_1" > 0.0) THEN ln("DT_Output_6"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_2" IS NULL OR "DT_Output_6"."P_2" > 0.0) THEN ln("DT_Output_6"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_3" IS NULL OR "DT_Output_6"."P_3" > 0.0) THEN ln("DT_Output_6"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_4" IS NULL OR "DT_Output_6"."P_4" > 0.0) THEN ln("DT_Output_6"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_5" IS NULL OR "DT_Output_6"."P_5" > 0.0) THEN ln("DT_Output_6"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_6" IS NULL OR "DT_Output_6"."P_6" > 0.0) THEN ln("DT_Output_6"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_7" IS NULL OR "DT_Output_6"."P_7" > 0.0) THEN ln("DT_Output_6"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_8" IS NULL OR "DT_Output_6"."P_8" > 0.0) THEN ln("DT_Output_6"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_9" IS NULL OR "DT_Output_6"."P_9" > 0.0) THEN ln("DT_Output_6"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_9", 9.0 * (CASE WHEN ("DT_Output_6"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_9" IS NULL OR "DT_Output_6"."P_9" > 0.0) THEN ln("DT_Output_6"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_6"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_0" IS NULL OR "DT_Output_6"."P_0" > 0.0) THEN ln("DT_Output_6"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_1" IS NULL OR "DT_Output_6"."P_1" > 0.0) THEN ln("DT_Output_6"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_2" IS NULL OR "DT_Output_6"."P_2" > 0.0) THEN ln("DT_Output_6"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_3" IS NULL OR "DT_Output_6"."P_3" > 0.0) THEN ln("DT_Output_6"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_4" IS NULL OR "DT_Output_6"."P_4" > 0.0) THEN ln("DT_Output_6"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_5" IS NULL OR "DT_Output_6"."P_5" > 0.0) THEN ln("DT_Output_6"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_6" IS NULL OR "DT_Output_6"."P_6" > 0.0) THEN ln("DT_Output_6"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_7" IS NULL OR "DT_Output_6"."P_7" > 0.0) THEN ln("DT_Output_6"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_8" IS NULL OR "DT_Output_6"."P_8" > 0.0) THEN ln("DT_Output_6"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_6"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_9" IS NULL OR "DT_Output_6"."P_9" > 0.0) THEN ln("DT_Output_6"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_9" 
FROM "DT_Output_6"), 
"DT_node_lookup_7" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_38 <= -1.6508052349090576) THEN 1 ELSE 2 END AS node_id_2 
FROM "DEGEN_YN11LY_ADS_SCA_2_OUT" "ADS_sca_2_OUT"), 
"DT_node_data_7" AS 
(SELECT "Values".nid AS nid, CAST("Values"."P_0" AS BINARY_DOUBLE) AS "P_0", CAST("Values"."P_1" AS BINARY_DOUBLE) AS "P_1", CAST("Values"."P_2" AS BINARY_DOUBLE) AS "P_2", CAST("Values"."P_3" AS BINARY_DOUBLE) AS "P_3", CAST("Values"."P_4" AS BINARY_DOUBLE) AS "P_4", CAST("Values"."P_5" AS BINARY_DOUBLE) AS "P_5", CAST("Values"."P_6" AS BINARY_DOUBLE) AS "P_6", CAST("Values"."P_7" AS BINARY_DOUBLE) AS "P_7", CAST("Values"."P_8" AS BINARY_DOUBLE) AS "P_8", CAST("Values"."P_9" AS BINARY_DOUBLE) AS "P_9", CAST("Values"."D" AS BINARY_DOUBLE) AS "D", CAST("Values"."DP" AS BINARY_DOUBLE) AS "DP" 
FROM (SELECT 1 AS nid, 0.9999987613254807 AS "P_0", 0.0 AS "P_1", 1.687361699464324e-07 AS "P_2", 1.7925885347595692e-07 AS "P_3", 1.738708847143929e-07 AS "P_4", 1.7924276483247108e-07 AS "P_5", 1.7924889778135697e-07 AS "P_6", 0.0 AS "P_7", 1.7905809496408828e-07 AS "P_8", 1.7925885347595673e-07 AS "P_9", 0 AS "D", 0.9999987613254807 AS "DP" FROM DUAL UNION ALL SELECT 2 AS nid, 6.236991892276812e-05 AS "P_0", 0.11111112639482627 AS "P_1", 0.11111110765686072 AS "P_2", 0.11111110648832909 AS "P_3", 0.11111110708665639 AS "P_4", 0.11111110649011564 AS "P_5", 0.11111110648943405 AS "P_6", 0.11111112639482623 AS "P_7", 0.11104873659169992 AS "P_8", 0.11111110648832884 AS "P_9", 1 AS "D", 0.11111112639482627 AS "DP" FROM DUAL) "Values"), 
"DT_Output_7" AS 
(SELECT "DT_node_lookup_7"."KEY" AS "KEY", "DT_node_lookup_7".node_id_2 AS node_id_2, "DT_node_data_7".nid AS nid, "DT_node_data_7"."P_0" AS "P_0", "DT_node_data_7"."P_1" AS "P_1", "DT_node_data_7"."P_2" AS "P_2", "DT_node_data_7"."P_3" AS "P_3", "DT_node_data_7"."P_4" AS "P_4", "DT_node_data_7"."P_5" AS "P_5", "DT_node_data_7"."P_6" AS "P_6", "DT_node_data_7"."P_7" AS "P_7", "DT_node_data_7"."P_8" AS "P_8", "DT_node_data_7"."P_9" AS "P_9", "DT_node_data_7"."D" AS "D", "DT_node_data_7"."DP" AS "DP" 
FROM "DT_node_lookup_7" LEFT OUTER JOIN "DT_node_data_7" ON "DT_node_lookup_7".node_id_2 = "DT_node_data_7".nid), 
"ADB_Model_7" AS 
(SELECT "DT_Output_7"."KEY" AS "KEY", (9.0 * (CASE WHEN ("DT_Output_7"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_0" IS NULL OR "DT_Output_7"."P_0" > 0.0) THEN ln("DT_Output_7"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_7"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_0" IS NULL OR "DT_Output_7"."P_0" > 0.0) THEN ln("DT_Output_7"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_1" IS NULL OR "DT_Output_7"."P_1" > 0.0) THEN ln("DT_Output_7"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_2" IS NULL OR "DT_Output_7"."P_2" > 0.0) THEN ln("DT_Output_7"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_3" IS NULL OR "DT_Output_7"."P_3" > 0.0) THEN ln("DT_Output_7"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_4" IS NULL OR "DT_Output_7"."P_4" > 0.0) THEN ln("DT_Output_7"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_5" IS NULL OR "DT_Output_7"."P_5" > 0.0) THEN ln("DT_Output_7"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_6" IS NULL OR "DT_Output_7"."P_6" > 0.0) THEN ln("DT_Output_7"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_7" IS NULL OR "DT_Output_7"."P_7" > 0.0) THEN ln("DT_Output_7"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_8" IS NULL OR "DT_Output_7"."P_8" > 0.0) THEN ln("DT_Output_7"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_9" IS NULL OR "DT_Output_7"."P_9" > 0.0) THEN ln("DT_Output_7"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_0", 9.0 * (CASE WHEN ("DT_Output_7"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_0" IS NULL OR "DT_Output_7"."P_0" > 0.0) THEN ln("DT_Output_7"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_7"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_0" IS NULL OR "DT_Output_7"."P_0" > 0.0) THEN ln("DT_Output_7"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_1" IS NULL OR "DT_Output_7"."P_1" > 0.0) THEN ln("DT_Output_7"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_2" IS NULL OR "DT_Output_7"."P_2" > 0.0) THEN ln("DT_Output_7"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_3" IS NULL OR "DT_Output_7"."P_3" > 0.0) THEN ln("DT_Output_7"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_4" IS NULL OR "DT_Output_7"."P_4" > 0.0) THEN ln("DT_Output_7"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_5" IS NULL OR "DT_Output_7"."P_5" > 0.0) THEN ln("DT_Output_7"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_6" IS NULL OR "DT_Output_7"."P_6" > 0.0) THEN ln("DT_Output_7"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_7" IS NULL OR "DT_Output_7"."P_7" > 0.0) THEN ln("DT_Output_7"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_8" IS NULL OR "DT_Output_7"."P_8" > 0.0) THEN ln("DT_Output_7"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_9" IS NULL OR "DT_Output_7"."P_9" > 0.0) THEN ln("DT_Output_7"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_0", (9.0 * (CASE WHEN ("DT_Output_7"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_1" IS NULL OR "DT_Output_7"."P_1" > 0.0) THEN ln("DT_Output_7"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_7"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_0" IS NULL OR "DT_Output_7"."P_0" > 0.0) THEN ln("DT_Output_7"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_1" IS NULL OR "DT_Output_7"."P_1" > 0.0) THEN ln("DT_Output_7"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_2" IS NULL OR "DT_Output_7"."P_2" > 0.0) THEN ln("DT_Output_7"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_3" IS NULL OR "DT_Output_7"."P_3" > 0.0) THEN ln("DT_Output_7"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_4" IS NULL OR "DT_Output_7"."P_4" > 0.0) THEN ln("DT_Output_7"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_5" IS NULL OR "DT_Output_7"."P_5" > 0.0) THEN ln("DT_Output_7"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_6" IS NULL OR "DT_Output_7"."P_6" > 0.0) THEN ln("DT_Output_7"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_7" IS NULL OR "DT_Output_7"."P_7" > 0.0) THEN ln("DT_Output_7"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_8" IS NULL OR "DT_Output_7"."P_8" > 0.0) THEN ln("DT_Output_7"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_9" IS NULL OR "DT_Output_7"."P_9" > 0.0) THEN ln("DT_Output_7"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_1", 9.0 * (CASE WHEN ("DT_Output_7"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_1" IS NULL OR "DT_Output_7"."P_1" > 0.0) THEN ln("DT_Output_7"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_7"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_0" IS NULL OR "DT_Output_7"."P_0" > 0.0) THEN ln("DT_Output_7"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_1" IS NULL OR "DT_Output_7"."P_1" > 0.0) THEN ln("DT_Output_7"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_2" IS NULL OR "DT_Output_7"."P_2" > 0.0) THEN ln("DT_Output_7"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_3" IS NULL OR "DT_Output_7"."P_3" > 0.0) THEN ln("DT_Output_7"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_4" IS NULL OR "DT_Output_7"."P_4" > 0.0) THEN ln("DT_Output_7"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_5" IS NULL OR "DT_Output_7"."P_5" > 0.0) THEN ln("DT_Output_7"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_6" IS NULL OR "DT_Output_7"."P_6" > 0.0) THEN ln("DT_Output_7"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_7" IS NULL OR "DT_Output_7"."P_7" > 0.0) THEN ln("DT_Output_7"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_8" IS NULL OR "DT_Output_7"."P_8" > 0.0) THEN ln("DT_Output_7"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_9" IS NULL OR "DT_Output_7"."P_9" > 0.0) THEN ln("DT_Output_7"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_1", (9.0 * (CASE WHEN ("DT_Output_7"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_2" IS NULL OR "DT_Output_7"."P_2" > 0.0) THEN ln("DT_Output_7"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_7"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_0" IS NULL OR "DT_Output_7"."P_0" > 0.0) THEN ln("DT_Output_7"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_1" IS NULL OR "DT_Output_7"."P_1" > 0.0) THEN ln("DT_Output_7"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_2" IS NULL OR "DT_Output_7"."P_2" > 0.0) THEN ln("DT_Output_7"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_3" IS NULL OR "DT_Output_7"."P_3" > 0.0) THEN ln("DT_Output_7"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_4" IS NULL OR "DT_Output_7"."P_4" > 0.0) THEN ln("DT_Output_7"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_5" IS NULL OR "DT_Output_7"."P_5" > 0.0) THEN ln("DT_Output_7"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_6" IS NULL OR "DT_Output_7"."P_6" > 0.0) THEN ln("DT_Output_7"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_7" IS NULL OR "DT_Output_7"."P_7" > 0.0) THEN ln("DT_Output_7"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_8" IS NULL OR "DT_Output_7"."P_8" > 0.0) THEN ln("DT_Output_7"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_9" IS NULL OR "DT_Output_7"."P_9" > 0.0) THEN ln("DT_Output_7"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_2", 9.0 * (CASE WHEN ("DT_Output_7"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_2" IS NULL OR "DT_Output_7"."P_2" > 0.0) THEN ln("DT_Output_7"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_7"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_0" IS NULL OR "DT_Output_7"."P_0" > 0.0) THEN ln("DT_Output_7"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_1" IS NULL OR "DT_Output_7"."P_1" > 0.0) THEN ln("DT_Output_7"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_2" IS NULL OR "DT_Output_7"."P_2" > 0.0) THEN ln("DT_Output_7"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_3" IS NULL OR "DT_Output_7"."P_3" > 0.0) THEN ln("DT_Output_7"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_4" IS NULL OR "DT_Output_7"."P_4" > 0.0) THEN ln("DT_Output_7"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_5" IS NULL OR "DT_Output_7"."P_5" > 0.0) THEN ln("DT_Output_7"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_6" IS NULL OR "DT_Output_7"."P_6" > 0.0) THEN ln("DT_Output_7"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_7" IS NULL OR "DT_Output_7"."P_7" > 0.0) THEN ln("DT_Output_7"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_8" IS NULL OR "DT_Output_7"."P_8" > 0.0) THEN ln("DT_Output_7"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_9" IS NULL OR "DT_Output_7"."P_9" > 0.0) THEN ln("DT_Output_7"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_2", (9.0 * (CASE WHEN ("DT_Output_7"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_3" IS NULL OR "DT_Output_7"."P_3" > 0.0) THEN ln("DT_Output_7"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_7"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_0" IS NULL OR "DT_Output_7"."P_0" > 0.0) THEN ln("DT_Output_7"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_1" IS NULL OR "DT_Output_7"."P_1" > 0.0) THEN ln("DT_Output_7"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_2" IS NULL OR "DT_Output_7"."P_2" > 0.0) THEN ln("DT_Output_7"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_3" IS NULL OR "DT_Output_7"."P_3" > 0.0) THEN ln("DT_Output_7"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_4" IS NULL OR "DT_Output_7"."P_4" > 0.0) THEN ln("DT_Output_7"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_5" IS NULL OR "DT_Output_7"."P_5" > 0.0) THEN ln("DT_Output_7"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_6" IS NULL OR "DT_Output_7"."P_6" > 0.0) THEN ln("DT_Output_7"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_7" IS NULL OR "DT_Output_7"."P_7" > 0.0) THEN ln("DT_Output_7"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_8" IS NULL OR "DT_Output_7"."P_8" > 0.0) THEN ln("DT_Output_7"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_9" IS NULL OR "DT_Output_7"."P_9" > 0.0) THEN ln("DT_Output_7"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_3", 9.0 * (CASE WHEN ("DT_Output_7"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_3" IS NULL OR "DT_Output_7"."P_3" > 0.0) THEN ln("DT_Output_7"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_7"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_0" IS NULL OR "DT_Output_7"."P_0" > 0.0) THEN ln("DT_Output_7"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_1" IS NULL OR "DT_Output_7"."P_1" > 0.0) THEN ln("DT_Output_7"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_2" IS NULL OR "DT_Output_7"."P_2" > 0.0) THEN ln("DT_Output_7"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_3" IS NULL OR "DT_Output_7"."P_3" > 0.0) THEN ln("DT_Output_7"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_4" IS NULL OR "DT_Output_7"."P_4" > 0.0) THEN ln("DT_Output_7"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_5" IS NULL OR "DT_Output_7"."P_5" > 0.0) THEN ln("DT_Output_7"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_6" IS NULL OR "DT_Output_7"."P_6" > 0.0) THEN ln("DT_Output_7"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_7" IS NULL OR "DT_Output_7"."P_7" > 0.0) THEN ln("DT_Output_7"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_8" IS NULL OR "DT_Output_7"."P_8" > 0.0) THEN ln("DT_Output_7"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_9" IS NULL OR "DT_Output_7"."P_9" > 0.0) THEN ln("DT_Output_7"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_3", (9.0 * (CASE WHEN ("DT_Output_7"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_4" IS NULL OR "DT_Output_7"."P_4" > 0.0) THEN ln("DT_Output_7"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_7"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_0" IS NULL OR "DT_Output_7"."P_0" > 0.0) THEN ln("DT_Output_7"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_1" IS NULL OR "DT_Output_7"."P_1" > 0.0) THEN ln("DT_Output_7"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_2" IS NULL OR "DT_Output_7"."P_2" > 0.0) THEN ln("DT_Output_7"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_3" IS NULL OR "DT_Output_7"."P_3" > 0.0) THEN ln("DT_Output_7"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_4" IS NULL OR "DT_Output_7"."P_4" > 0.0) THEN ln("DT_Output_7"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_5" IS NULL OR "DT_Output_7"."P_5" > 0.0) THEN ln("DT_Output_7"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_6" IS NULL OR "DT_Output_7"."P_6" > 0.0) THEN ln("DT_Output_7"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_7" IS NULL OR "DT_Output_7"."P_7" > 0.0) THEN ln("DT_Output_7"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_8" IS NULL OR "DT_Output_7"."P_8" > 0.0) THEN ln("DT_Output_7"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_9" IS NULL OR "DT_Output_7"."P_9" > 0.0) THEN ln("DT_Output_7"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_4", 9.0 * (CASE WHEN ("DT_Output_7"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_4" IS NULL OR "DT_Output_7"."P_4" > 0.0) THEN ln("DT_Output_7"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_7"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_0" IS NULL OR "DT_Output_7"."P_0" > 0.0) THEN ln("DT_Output_7"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_1" IS NULL OR "DT_Output_7"."P_1" > 0.0) THEN ln("DT_Output_7"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_2" IS NULL OR "DT_Output_7"."P_2" > 0.0) THEN ln("DT_Output_7"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_3" IS NULL OR "DT_Output_7"."P_3" > 0.0) THEN ln("DT_Output_7"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_4" IS NULL OR "DT_Output_7"."P_4" > 0.0) THEN ln("DT_Output_7"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_5" IS NULL OR "DT_Output_7"."P_5" > 0.0) THEN ln("DT_Output_7"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_6" IS NULL OR "DT_Output_7"."P_6" > 0.0) THEN ln("DT_Output_7"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_7" IS NULL OR "DT_Output_7"."P_7" > 0.0) THEN ln("DT_Output_7"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_8" IS NULL OR "DT_Output_7"."P_8" > 0.0) THEN ln("DT_Output_7"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_9" IS NULL OR "DT_Output_7"."P_9" > 0.0) THEN ln("DT_Output_7"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_4", (9.0 * (CASE WHEN ("DT_Output_7"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_5" IS NULL OR "DT_Output_7"."P_5" > 0.0) THEN ln("DT_Output_7"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_7"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_0" IS NULL OR "DT_Output_7"."P_0" > 0.0) THEN ln("DT_Output_7"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_1" IS NULL OR "DT_Output_7"."P_1" > 0.0) THEN ln("DT_Output_7"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_2" IS NULL OR "DT_Output_7"."P_2" > 0.0) THEN ln("DT_Output_7"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_3" IS NULL OR "DT_Output_7"."P_3" > 0.0) THEN ln("DT_Output_7"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_4" IS NULL OR "DT_Output_7"."P_4" > 0.0) THEN ln("DT_Output_7"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_5" IS NULL OR "DT_Output_7"."P_5" > 0.0) THEN ln("DT_Output_7"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_6" IS NULL OR "DT_Output_7"."P_6" > 0.0) THEN ln("DT_Output_7"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_7" IS NULL OR "DT_Output_7"."P_7" > 0.0) THEN ln("DT_Output_7"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_8" IS NULL OR "DT_Output_7"."P_8" > 0.0) THEN ln("DT_Output_7"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_9" IS NULL OR "DT_Output_7"."P_9" > 0.0) THEN ln("DT_Output_7"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_5", 9.0 * (CASE WHEN ("DT_Output_7"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_5" IS NULL OR "DT_Output_7"."P_5" > 0.0) THEN ln("DT_Output_7"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_7"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_0" IS NULL OR "DT_Output_7"."P_0" > 0.0) THEN ln("DT_Output_7"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_1" IS NULL OR "DT_Output_7"."P_1" > 0.0) THEN ln("DT_Output_7"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_2" IS NULL OR "DT_Output_7"."P_2" > 0.0) THEN ln("DT_Output_7"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_3" IS NULL OR "DT_Output_7"."P_3" > 0.0) THEN ln("DT_Output_7"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_4" IS NULL OR "DT_Output_7"."P_4" > 0.0) THEN ln("DT_Output_7"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_5" IS NULL OR "DT_Output_7"."P_5" > 0.0) THEN ln("DT_Output_7"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_6" IS NULL OR "DT_Output_7"."P_6" > 0.0) THEN ln("DT_Output_7"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_7" IS NULL OR "DT_Output_7"."P_7" > 0.0) THEN ln("DT_Output_7"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_8" IS NULL OR "DT_Output_7"."P_8" > 0.0) THEN ln("DT_Output_7"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_9" IS NULL OR "DT_Output_7"."P_9" > 0.0) THEN ln("DT_Output_7"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_5", (9.0 * (CASE WHEN ("DT_Output_7"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_6" IS NULL OR "DT_Output_7"."P_6" > 0.0) THEN ln("DT_Output_7"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_7"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_0" IS NULL OR "DT_Output_7"."P_0" > 0.0) THEN ln("DT_Output_7"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_1" IS NULL OR "DT_Output_7"."P_1" > 0.0) THEN ln("DT_Output_7"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_2" IS NULL OR "DT_Output_7"."P_2" > 0.0) THEN ln("DT_Output_7"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_3" IS NULL OR "DT_Output_7"."P_3" > 0.0) THEN ln("DT_Output_7"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_4" IS NULL OR "DT_Output_7"."P_4" > 0.0) THEN ln("DT_Output_7"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_5" IS NULL OR "DT_Output_7"."P_5" > 0.0) THEN ln("DT_Output_7"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_6" IS NULL OR "DT_Output_7"."P_6" > 0.0) THEN ln("DT_Output_7"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_7" IS NULL OR "DT_Output_7"."P_7" > 0.0) THEN ln("DT_Output_7"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_8" IS NULL OR "DT_Output_7"."P_8" > 0.0) THEN ln("DT_Output_7"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_9" IS NULL OR "DT_Output_7"."P_9" > 0.0) THEN ln("DT_Output_7"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_6", 9.0 * (CASE WHEN ("DT_Output_7"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_6" IS NULL OR "DT_Output_7"."P_6" > 0.0) THEN ln("DT_Output_7"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_7"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_0" IS NULL OR "DT_Output_7"."P_0" > 0.0) THEN ln("DT_Output_7"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_1" IS NULL OR "DT_Output_7"."P_1" > 0.0) THEN ln("DT_Output_7"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_2" IS NULL OR "DT_Output_7"."P_2" > 0.0) THEN ln("DT_Output_7"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_3" IS NULL OR "DT_Output_7"."P_3" > 0.0) THEN ln("DT_Output_7"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_4" IS NULL OR "DT_Output_7"."P_4" > 0.0) THEN ln("DT_Output_7"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_5" IS NULL OR "DT_Output_7"."P_5" > 0.0) THEN ln("DT_Output_7"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_6" IS NULL OR "DT_Output_7"."P_6" > 0.0) THEN ln("DT_Output_7"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_7" IS NULL OR "DT_Output_7"."P_7" > 0.0) THEN ln("DT_Output_7"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_8" IS NULL OR "DT_Output_7"."P_8" > 0.0) THEN ln("DT_Output_7"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_9" IS NULL OR "DT_Output_7"."P_9" > 0.0) THEN ln("DT_Output_7"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_6", (9.0 * (CASE WHEN ("DT_Output_7"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_7" IS NULL OR "DT_Output_7"."P_7" > 0.0) THEN ln("DT_Output_7"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_7"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_0" IS NULL OR "DT_Output_7"."P_0" > 0.0) THEN ln("DT_Output_7"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_1" IS NULL OR "DT_Output_7"."P_1" > 0.0) THEN ln("DT_Output_7"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_2" IS NULL OR "DT_Output_7"."P_2" > 0.0) THEN ln("DT_Output_7"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_3" IS NULL OR "DT_Output_7"."P_3" > 0.0) THEN ln("DT_Output_7"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_4" IS NULL OR "DT_Output_7"."P_4" > 0.0) THEN ln("DT_Output_7"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_5" IS NULL OR "DT_Output_7"."P_5" > 0.0) THEN ln("DT_Output_7"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_6" IS NULL OR "DT_Output_7"."P_6" > 0.0) THEN ln("DT_Output_7"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_7" IS NULL OR "DT_Output_7"."P_7" > 0.0) THEN ln("DT_Output_7"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_8" IS NULL OR "DT_Output_7"."P_8" > 0.0) THEN ln("DT_Output_7"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_9" IS NULL OR "DT_Output_7"."P_9" > 0.0) THEN ln("DT_Output_7"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_7", 9.0 * (CASE WHEN ("DT_Output_7"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_7" IS NULL OR "DT_Output_7"."P_7" > 0.0) THEN ln("DT_Output_7"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_7"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_0" IS NULL OR "DT_Output_7"."P_0" > 0.0) THEN ln("DT_Output_7"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_1" IS NULL OR "DT_Output_7"."P_1" > 0.0) THEN ln("DT_Output_7"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_2" IS NULL OR "DT_Output_7"."P_2" > 0.0) THEN ln("DT_Output_7"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_3" IS NULL OR "DT_Output_7"."P_3" > 0.0) THEN ln("DT_Output_7"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_4" IS NULL OR "DT_Output_7"."P_4" > 0.0) THEN ln("DT_Output_7"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_5" IS NULL OR "DT_Output_7"."P_5" > 0.0) THEN ln("DT_Output_7"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_6" IS NULL OR "DT_Output_7"."P_6" > 0.0) THEN ln("DT_Output_7"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_7" IS NULL OR "DT_Output_7"."P_7" > 0.0) THEN ln("DT_Output_7"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_8" IS NULL OR "DT_Output_7"."P_8" > 0.0) THEN ln("DT_Output_7"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_9" IS NULL OR "DT_Output_7"."P_9" > 0.0) THEN ln("DT_Output_7"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_7", (9.0 * (CASE WHEN ("DT_Output_7"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_8" IS NULL OR "DT_Output_7"."P_8" > 0.0) THEN ln("DT_Output_7"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_7"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_0" IS NULL OR "DT_Output_7"."P_0" > 0.0) THEN ln("DT_Output_7"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_1" IS NULL OR "DT_Output_7"."P_1" > 0.0) THEN ln("DT_Output_7"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_2" IS NULL OR "DT_Output_7"."P_2" > 0.0) THEN ln("DT_Output_7"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_3" IS NULL OR "DT_Output_7"."P_3" > 0.0) THEN ln("DT_Output_7"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_4" IS NULL OR "DT_Output_7"."P_4" > 0.0) THEN ln("DT_Output_7"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_5" IS NULL OR "DT_Output_7"."P_5" > 0.0) THEN ln("DT_Output_7"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_6" IS NULL OR "DT_Output_7"."P_6" > 0.0) THEN ln("DT_Output_7"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_7" IS NULL OR "DT_Output_7"."P_7" > 0.0) THEN ln("DT_Output_7"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_8" IS NULL OR "DT_Output_7"."P_8" > 0.0) THEN ln("DT_Output_7"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_9" IS NULL OR "DT_Output_7"."P_9" > 0.0) THEN ln("DT_Output_7"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_8", 9.0 * (CASE WHEN ("DT_Output_7"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_8" IS NULL OR "DT_Output_7"."P_8" > 0.0) THEN ln("DT_Output_7"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_7"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_0" IS NULL OR "DT_Output_7"."P_0" > 0.0) THEN ln("DT_Output_7"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_1" IS NULL OR "DT_Output_7"."P_1" > 0.0) THEN ln("DT_Output_7"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_2" IS NULL OR "DT_Output_7"."P_2" > 0.0) THEN ln("DT_Output_7"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_3" IS NULL OR "DT_Output_7"."P_3" > 0.0) THEN ln("DT_Output_7"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_4" IS NULL OR "DT_Output_7"."P_4" > 0.0) THEN ln("DT_Output_7"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_5" IS NULL OR "DT_Output_7"."P_5" > 0.0) THEN ln("DT_Output_7"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_6" IS NULL OR "DT_Output_7"."P_6" > 0.0) THEN ln("DT_Output_7"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_7" IS NULL OR "DT_Output_7"."P_7" > 0.0) THEN ln("DT_Output_7"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_8" IS NULL OR "DT_Output_7"."P_8" > 0.0) THEN ln("DT_Output_7"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_9" IS NULL OR "DT_Output_7"."P_9" > 0.0) THEN ln("DT_Output_7"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_8", (9.0 * (CASE WHEN ("DT_Output_7"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_9" IS NULL OR "DT_Output_7"."P_9" > 0.0) THEN ln("DT_Output_7"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_7"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_0" IS NULL OR "DT_Output_7"."P_0" > 0.0) THEN ln("DT_Output_7"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_1" IS NULL OR "DT_Output_7"."P_1" > 0.0) THEN ln("DT_Output_7"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_2" IS NULL OR "DT_Output_7"."P_2" > 0.0) THEN ln("DT_Output_7"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_3" IS NULL OR "DT_Output_7"."P_3" > 0.0) THEN ln("DT_Output_7"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_4" IS NULL OR "DT_Output_7"."P_4" > 0.0) THEN ln("DT_Output_7"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_5" IS NULL OR "DT_Output_7"."P_5" > 0.0) THEN ln("DT_Output_7"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_6" IS NULL OR "DT_Output_7"."P_6" > 0.0) THEN ln("DT_Output_7"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_7" IS NULL OR "DT_Output_7"."P_7" > 0.0) THEN ln("DT_Output_7"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_8" IS NULL OR "DT_Output_7"."P_8" > 0.0) THEN ln("DT_Output_7"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_9" IS NULL OR "DT_Output_7"."P_9" > 0.0) THEN ln("DT_Output_7"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_9", 9.0 * (CASE WHEN ("DT_Output_7"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_9" IS NULL OR "DT_Output_7"."P_9" > 0.0) THEN ln("DT_Output_7"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_7"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_0" IS NULL OR "DT_Output_7"."P_0" > 0.0) THEN ln("DT_Output_7"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_1" IS NULL OR "DT_Output_7"."P_1" > 0.0) THEN ln("DT_Output_7"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_2" IS NULL OR "DT_Output_7"."P_2" > 0.0) THEN ln("DT_Output_7"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_3" IS NULL OR "DT_Output_7"."P_3" > 0.0) THEN ln("DT_Output_7"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_4" IS NULL OR "DT_Output_7"."P_4" > 0.0) THEN ln("DT_Output_7"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_5" IS NULL OR "DT_Output_7"."P_5" > 0.0) THEN ln("DT_Output_7"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_6" IS NULL OR "DT_Output_7"."P_6" > 0.0) THEN ln("DT_Output_7"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_7" IS NULL OR "DT_Output_7"."P_7" > 0.0) THEN ln("DT_Output_7"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_8" IS NULL OR "DT_Output_7"."P_8" > 0.0) THEN ln("DT_Output_7"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_7"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_9" IS NULL OR "DT_Output_7"."P_9" > 0.0) THEN ln("DT_Output_7"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_9" 
FROM "DT_Output_7"), 
"DT_node_lookup_8" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_30 <= -1.555469036102295) THEN 1 ELSE 2 END AS node_id_2 
FROM "DEGEN_YN11LY_ADS_SCA_2_OUT" "ADS_sca_2_OUT"), 
"DT_node_data_8" AS 
(SELECT "Values".nid AS nid, CAST("Values"."P_0" AS BINARY_DOUBLE) AS "P_0", CAST("Values"."P_1" AS BINARY_DOUBLE) AS "P_1", CAST("Values"."P_2" AS BINARY_DOUBLE) AS "P_2", CAST("Values"."P_3" AS BINARY_DOUBLE) AS "P_3", CAST("Values"."P_4" AS BINARY_DOUBLE) AS "P_4", CAST("Values"."P_5" AS BINARY_DOUBLE) AS "P_5", CAST("Values"."P_6" AS BINARY_DOUBLE) AS "P_6", CAST("Values"."P_7" AS BINARY_DOUBLE) AS "P_7", CAST("Values"."P_8" AS BINARY_DOUBLE) AS "P_8", CAST("Values"."P_9" AS BINARY_DOUBLE) AS "P_9", CAST("Values"."D" AS BINARY_DOUBLE) AS "D", CAST("Values"."DP" AS BINARY_DOUBLE) AS "DP" 
FROM (SELECT 1 AS nid, 0.9955294546232453 AS "P_0", 0.0005588197454631396 AS "P_1", 0.0005588111559508147 AS "P_2", 0.0005588198455804367 AS "P_3", 0.0005588153693197443 AS "P_4", 0.0005588198321360536 AS "P_5", 0.0005588198372609675 AS "P_6", 0.0005588197454631391 AS "P_7", 0.0 AS "P_8", 0.0005588198455804377 AS "P_9", 0 AS "D", 0.9955294546232453 AS "DP" FROM DUAL UNION ALL SELECT 2 AS nid, 3.2624992406096054e-09 AS "P_0", 0.11110417460558507 AS "P_1", 0.11110417882723904 AS "P_2", 0.11110417785690452 AS "P_3", 0.11110417835675021 AS "P_4", 0.11110417785840529 AS "P_5", 0.1111041778578339 AS "P_6", 0.11110417460558566 AS "P_7", 0.1111665789122923 AS "P_8", 0.11110417785690477 AS "P_9", 8 AS "D", 0.1111665789122923 AS "DP" FROM DUAL) "Values"), 
"DT_Output_8" AS 
(SELECT "DT_node_lookup_8"."KEY" AS "KEY", "DT_node_lookup_8".node_id_2 AS node_id_2, "DT_node_data_8".nid AS nid, "DT_node_data_8"."P_0" AS "P_0", "DT_node_data_8"."P_1" AS "P_1", "DT_node_data_8"."P_2" AS "P_2", "DT_node_data_8"."P_3" AS "P_3", "DT_node_data_8"."P_4" AS "P_4", "DT_node_data_8"."P_5" AS "P_5", "DT_node_data_8"."P_6" AS "P_6", "DT_node_data_8"."P_7" AS "P_7", "DT_node_data_8"."P_8" AS "P_8", "DT_node_data_8"."P_9" AS "P_9", "DT_node_data_8"."D" AS "D", "DT_node_data_8"."DP" AS "DP" 
FROM "DT_node_lookup_8" LEFT OUTER JOIN "DT_node_data_8" ON "DT_node_lookup_8".node_id_2 = "DT_node_data_8".nid), 
"ADB_Model_8" AS 
(SELECT "DT_Output_8"."KEY" AS "KEY", (9.0 * (CASE WHEN ("DT_Output_8"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_0" IS NULL OR "DT_Output_8"."P_0" > 0.0) THEN ln("DT_Output_8"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_8"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_0" IS NULL OR "DT_Output_8"."P_0" > 0.0) THEN ln("DT_Output_8"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_1" IS NULL OR "DT_Output_8"."P_1" > 0.0) THEN ln("DT_Output_8"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_2" IS NULL OR "DT_Output_8"."P_2" > 0.0) THEN ln("DT_Output_8"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_3" IS NULL OR "DT_Output_8"."P_3" > 0.0) THEN ln("DT_Output_8"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_4" IS NULL OR "DT_Output_8"."P_4" > 0.0) THEN ln("DT_Output_8"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_5" IS NULL OR "DT_Output_8"."P_5" > 0.0) THEN ln("DT_Output_8"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_6" IS NULL OR "DT_Output_8"."P_6" > 0.0) THEN ln("DT_Output_8"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_7" IS NULL OR "DT_Output_8"."P_7" > 0.0) THEN ln("DT_Output_8"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_8" IS NULL OR "DT_Output_8"."P_8" > 0.0) THEN ln("DT_Output_8"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_9" IS NULL OR "DT_Output_8"."P_9" > 0.0) THEN ln("DT_Output_8"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_0", 9.0 * (CASE WHEN ("DT_Output_8"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_0" IS NULL OR "DT_Output_8"."P_0" > 0.0) THEN ln("DT_Output_8"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_8"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_0" IS NULL OR "DT_Output_8"."P_0" > 0.0) THEN ln("DT_Output_8"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_1" IS NULL OR "DT_Output_8"."P_1" > 0.0) THEN ln("DT_Output_8"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_2" IS NULL OR "DT_Output_8"."P_2" > 0.0) THEN ln("DT_Output_8"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_3" IS NULL OR "DT_Output_8"."P_3" > 0.0) THEN ln("DT_Output_8"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_4" IS NULL OR "DT_Output_8"."P_4" > 0.0) THEN ln("DT_Output_8"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_5" IS NULL OR "DT_Output_8"."P_5" > 0.0) THEN ln("DT_Output_8"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_6" IS NULL OR "DT_Output_8"."P_6" > 0.0) THEN ln("DT_Output_8"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_7" IS NULL OR "DT_Output_8"."P_7" > 0.0) THEN ln("DT_Output_8"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_8" IS NULL OR "DT_Output_8"."P_8" > 0.0) THEN ln("DT_Output_8"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_9" IS NULL OR "DT_Output_8"."P_9" > 0.0) THEN ln("DT_Output_8"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_0", (9.0 * (CASE WHEN ("DT_Output_8"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_1" IS NULL OR "DT_Output_8"."P_1" > 0.0) THEN ln("DT_Output_8"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_8"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_0" IS NULL OR "DT_Output_8"."P_0" > 0.0) THEN ln("DT_Output_8"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_1" IS NULL OR "DT_Output_8"."P_1" > 0.0) THEN ln("DT_Output_8"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_2" IS NULL OR "DT_Output_8"."P_2" > 0.0) THEN ln("DT_Output_8"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_3" IS NULL OR "DT_Output_8"."P_3" > 0.0) THEN ln("DT_Output_8"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_4" IS NULL OR "DT_Output_8"."P_4" > 0.0) THEN ln("DT_Output_8"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_5" IS NULL OR "DT_Output_8"."P_5" > 0.0) THEN ln("DT_Output_8"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_6" IS NULL OR "DT_Output_8"."P_6" > 0.0) THEN ln("DT_Output_8"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_7" IS NULL OR "DT_Output_8"."P_7" > 0.0) THEN ln("DT_Output_8"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_8" IS NULL OR "DT_Output_8"."P_8" > 0.0) THEN ln("DT_Output_8"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_9" IS NULL OR "DT_Output_8"."P_9" > 0.0) THEN ln("DT_Output_8"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_1", 9.0 * (CASE WHEN ("DT_Output_8"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_1" IS NULL OR "DT_Output_8"."P_1" > 0.0) THEN ln("DT_Output_8"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_8"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_0" IS NULL OR "DT_Output_8"."P_0" > 0.0) THEN ln("DT_Output_8"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_1" IS NULL OR "DT_Output_8"."P_1" > 0.0) THEN ln("DT_Output_8"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_2" IS NULL OR "DT_Output_8"."P_2" > 0.0) THEN ln("DT_Output_8"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_3" IS NULL OR "DT_Output_8"."P_3" > 0.0) THEN ln("DT_Output_8"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_4" IS NULL OR "DT_Output_8"."P_4" > 0.0) THEN ln("DT_Output_8"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_5" IS NULL OR "DT_Output_8"."P_5" > 0.0) THEN ln("DT_Output_8"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_6" IS NULL OR "DT_Output_8"."P_6" > 0.0) THEN ln("DT_Output_8"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_7" IS NULL OR "DT_Output_8"."P_7" > 0.0) THEN ln("DT_Output_8"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_8" IS NULL OR "DT_Output_8"."P_8" > 0.0) THEN ln("DT_Output_8"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_9" IS NULL OR "DT_Output_8"."P_9" > 0.0) THEN ln("DT_Output_8"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_1", (9.0 * (CASE WHEN ("DT_Output_8"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_2" IS NULL OR "DT_Output_8"."P_2" > 0.0) THEN ln("DT_Output_8"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_8"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_0" IS NULL OR "DT_Output_8"."P_0" > 0.0) THEN ln("DT_Output_8"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_1" IS NULL OR "DT_Output_8"."P_1" > 0.0) THEN ln("DT_Output_8"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_2" IS NULL OR "DT_Output_8"."P_2" > 0.0) THEN ln("DT_Output_8"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_3" IS NULL OR "DT_Output_8"."P_3" > 0.0) THEN ln("DT_Output_8"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_4" IS NULL OR "DT_Output_8"."P_4" > 0.0) THEN ln("DT_Output_8"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_5" IS NULL OR "DT_Output_8"."P_5" > 0.0) THEN ln("DT_Output_8"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_6" IS NULL OR "DT_Output_8"."P_6" > 0.0) THEN ln("DT_Output_8"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_7" IS NULL OR "DT_Output_8"."P_7" > 0.0) THEN ln("DT_Output_8"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_8" IS NULL OR "DT_Output_8"."P_8" > 0.0) THEN ln("DT_Output_8"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_9" IS NULL OR "DT_Output_8"."P_9" > 0.0) THEN ln("DT_Output_8"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_2", 9.0 * (CASE WHEN ("DT_Output_8"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_2" IS NULL OR "DT_Output_8"."P_2" > 0.0) THEN ln("DT_Output_8"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_8"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_0" IS NULL OR "DT_Output_8"."P_0" > 0.0) THEN ln("DT_Output_8"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_1" IS NULL OR "DT_Output_8"."P_1" > 0.0) THEN ln("DT_Output_8"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_2" IS NULL OR "DT_Output_8"."P_2" > 0.0) THEN ln("DT_Output_8"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_3" IS NULL OR "DT_Output_8"."P_3" > 0.0) THEN ln("DT_Output_8"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_4" IS NULL OR "DT_Output_8"."P_4" > 0.0) THEN ln("DT_Output_8"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_5" IS NULL OR "DT_Output_8"."P_5" > 0.0) THEN ln("DT_Output_8"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_6" IS NULL OR "DT_Output_8"."P_6" > 0.0) THEN ln("DT_Output_8"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_7" IS NULL OR "DT_Output_8"."P_7" > 0.0) THEN ln("DT_Output_8"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_8" IS NULL OR "DT_Output_8"."P_8" > 0.0) THEN ln("DT_Output_8"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_9" IS NULL OR "DT_Output_8"."P_9" > 0.0) THEN ln("DT_Output_8"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_2", (9.0 * (CASE WHEN ("DT_Output_8"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_3" IS NULL OR "DT_Output_8"."P_3" > 0.0) THEN ln("DT_Output_8"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_8"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_0" IS NULL OR "DT_Output_8"."P_0" > 0.0) THEN ln("DT_Output_8"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_1" IS NULL OR "DT_Output_8"."P_1" > 0.0) THEN ln("DT_Output_8"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_2" IS NULL OR "DT_Output_8"."P_2" > 0.0) THEN ln("DT_Output_8"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_3" IS NULL OR "DT_Output_8"."P_3" > 0.0) THEN ln("DT_Output_8"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_4" IS NULL OR "DT_Output_8"."P_4" > 0.0) THEN ln("DT_Output_8"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_5" IS NULL OR "DT_Output_8"."P_5" > 0.0) THEN ln("DT_Output_8"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_6" IS NULL OR "DT_Output_8"."P_6" > 0.0) THEN ln("DT_Output_8"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_7" IS NULL OR "DT_Output_8"."P_7" > 0.0) THEN ln("DT_Output_8"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_8" IS NULL OR "DT_Output_8"."P_8" > 0.0) THEN ln("DT_Output_8"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_9" IS NULL OR "DT_Output_8"."P_9" > 0.0) THEN ln("DT_Output_8"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_3", 9.0 * (CASE WHEN ("DT_Output_8"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_3" IS NULL OR "DT_Output_8"."P_3" > 0.0) THEN ln("DT_Output_8"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_8"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_0" IS NULL OR "DT_Output_8"."P_0" > 0.0) THEN ln("DT_Output_8"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_1" IS NULL OR "DT_Output_8"."P_1" > 0.0) THEN ln("DT_Output_8"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_2" IS NULL OR "DT_Output_8"."P_2" > 0.0) THEN ln("DT_Output_8"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_3" IS NULL OR "DT_Output_8"."P_3" > 0.0) THEN ln("DT_Output_8"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_4" IS NULL OR "DT_Output_8"."P_4" > 0.0) THEN ln("DT_Output_8"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_5" IS NULL OR "DT_Output_8"."P_5" > 0.0) THEN ln("DT_Output_8"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_6" IS NULL OR "DT_Output_8"."P_6" > 0.0) THEN ln("DT_Output_8"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_7" IS NULL OR "DT_Output_8"."P_7" > 0.0) THEN ln("DT_Output_8"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_8" IS NULL OR "DT_Output_8"."P_8" > 0.0) THEN ln("DT_Output_8"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_9" IS NULL OR "DT_Output_8"."P_9" > 0.0) THEN ln("DT_Output_8"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_3", (9.0 * (CASE WHEN ("DT_Output_8"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_4" IS NULL OR "DT_Output_8"."P_4" > 0.0) THEN ln("DT_Output_8"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_8"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_0" IS NULL OR "DT_Output_8"."P_0" > 0.0) THEN ln("DT_Output_8"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_1" IS NULL OR "DT_Output_8"."P_1" > 0.0) THEN ln("DT_Output_8"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_2" IS NULL OR "DT_Output_8"."P_2" > 0.0) THEN ln("DT_Output_8"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_3" IS NULL OR "DT_Output_8"."P_3" > 0.0) THEN ln("DT_Output_8"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_4" IS NULL OR "DT_Output_8"."P_4" > 0.0) THEN ln("DT_Output_8"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_5" IS NULL OR "DT_Output_8"."P_5" > 0.0) THEN ln("DT_Output_8"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_6" IS NULL OR "DT_Output_8"."P_6" > 0.0) THEN ln("DT_Output_8"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_7" IS NULL OR "DT_Output_8"."P_7" > 0.0) THEN ln("DT_Output_8"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_8" IS NULL OR "DT_Output_8"."P_8" > 0.0) THEN ln("DT_Output_8"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_9" IS NULL OR "DT_Output_8"."P_9" > 0.0) THEN ln("DT_Output_8"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_4", 9.0 * (CASE WHEN ("DT_Output_8"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_4" IS NULL OR "DT_Output_8"."P_4" > 0.0) THEN ln("DT_Output_8"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_8"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_0" IS NULL OR "DT_Output_8"."P_0" > 0.0) THEN ln("DT_Output_8"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_1" IS NULL OR "DT_Output_8"."P_1" > 0.0) THEN ln("DT_Output_8"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_2" IS NULL OR "DT_Output_8"."P_2" > 0.0) THEN ln("DT_Output_8"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_3" IS NULL OR "DT_Output_8"."P_3" > 0.0) THEN ln("DT_Output_8"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_4" IS NULL OR "DT_Output_8"."P_4" > 0.0) THEN ln("DT_Output_8"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_5" IS NULL OR "DT_Output_8"."P_5" > 0.0) THEN ln("DT_Output_8"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_6" IS NULL OR "DT_Output_8"."P_6" > 0.0) THEN ln("DT_Output_8"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_7" IS NULL OR "DT_Output_8"."P_7" > 0.0) THEN ln("DT_Output_8"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_8" IS NULL OR "DT_Output_8"."P_8" > 0.0) THEN ln("DT_Output_8"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_9" IS NULL OR "DT_Output_8"."P_9" > 0.0) THEN ln("DT_Output_8"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_4", (9.0 * (CASE WHEN ("DT_Output_8"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_5" IS NULL OR "DT_Output_8"."P_5" > 0.0) THEN ln("DT_Output_8"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_8"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_0" IS NULL OR "DT_Output_8"."P_0" > 0.0) THEN ln("DT_Output_8"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_1" IS NULL OR "DT_Output_8"."P_1" > 0.0) THEN ln("DT_Output_8"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_2" IS NULL OR "DT_Output_8"."P_2" > 0.0) THEN ln("DT_Output_8"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_3" IS NULL OR "DT_Output_8"."P_3" > 0.0) THEN ln("DT_Output_8"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_4" IS NULL OR "DT_Output_8"."P_4" > 0.0) THEN ln("DT_Output_8"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_5" IS NULL OR "DT_Output_8"."P_5" > 0.0) THEN ln("DT_Output_8"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_6" IS NULL OR "DT_Output_8"."P_6" > 0.0) THEN ln("DT_Output_8"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_7" IS NULL OR "DT_Output_8"."P_7" > 0.0) THEN ln("DT_Output_8"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_8" IS NULL OR "DT_Output_8"."P_8" > 0.0) THEN ln("DT_Output_8"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_9" IS NULL OR "DT_Output_8"."P_9" > 0.0) THEN ln("DT_Output_8"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_5", 9.0 * (CASE WHEN ("DT_Output_8"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_5" IS NULL OR "DT_Output_8"."P_5" > 0.0) THEN ln("DT_Output_8"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_8"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_0" IS NULL OR "DT_Output_8"."P_0" > 0.0) THEN ln("DT_Output_8"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_1" IS NULL OR "DT_Output_8"."P_1" > 0.0) THEN ln("DT_Output_8"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_2" IS NULL OR "DT_Output_8"."P_2" > 0.0) THEN ln("DT_Output_8"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_3" IS NULL OR "DT_Output_8"."P_3" > 0.0) THEN ln("DT_Output_8"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_4" IS NULL OR "DT_Output_8"."P_4" > 0.0) THEN ln("DT_Output_8"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_5" IS NULL OR "DT_Output_8"."P_5" > 0.0) THEN ln("DT_Output_8"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_6" IS NULL OR "DT_Output_8"."P_6" > 0.0) THEN ln("DT_Output_8"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_7" IS NULL OR "DT_Output_8"."P_7" > 0.0) THEN ln("DT_Output_8"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_8" IS NULL OR "DT_Output_8"."P_8" > 0.0) THEN ln("DT_Output_8"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_9" IS NULL OR "DT_Output_8"."P_9" > 0.0) THEN ln("DT_Output_8"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_5", (9.0 * (CASE WHEN ("DT_Output_8"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_6" IS NULL OR "DT_Output_8"."P_6" > 0.0) THEN ln("DT_Output_8"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_8"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_0" IS NULL OR "DT_Output_8"."P_0" > 0.0) THEN ln("DT_Output_8"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_1" IS NULL OR "DT_Output_8"."P_1" > 0.0) THEN ln("DT_Output_8"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_2" IS NULL OR "DT_Output_8"."P_2" > 0.0) THEN ln("DT_Output_8"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_3" IS NULL OR "DT_Output_8"."P_3" > 0.0) THEN ln("DT_Output_8"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_4" IS NULL OR "DT_Output_8"."P_4" > 0.0) THEN ln("DT_Output_8"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_5" IS NULL OR "DT_Output_8"."P_5" > 0.0) THEN ln("DT_Output_8"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_6" IS NULL OR "DT_Output_8"."P_6" > 0.0) THEN ln("DT_Output_8"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_7" IS NULL OR "DT_Output_8"."P_7" > 0.0) THEN ln("DT_Output_8"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_8" IS NULL OR "DT_Output_8"."P_8" > 0.0) THEN ln("DT_Output_8"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_9" IS NULL OR "DT_Output_8"."P_9" > 0.0) THEN ln("DT_Output_8"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_6", 9.0 * (CASE WHEN ("DT_Output_8"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_6" IS NULL OR "DT_Output_8"."P_6" > 0.0) THEN ln("DT_Output_8"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_8"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_0" IS NULL OR "DT_Output_8"."P_0" > 0.0) THEN ln("DT_Output_8"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_1" IS NULL OR "DT_Output_8"."P_1" > 0.0) THEN ln("DT_Output_8"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_2" IS NULL OR "DT_Output_8"."P_2" > 0.0) THEN ln("DT_Output_8"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_3" IS NULL OR "DT_Output_8"."P_3" > 0.0) THEN ln("DT_Output_8"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_4" IS NULL OR "DT_Output_8"."P_4" > 0.0) THEN ln("DT_Output_8"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_5" IS NULL OR "DT_Output_8"."P_5" > 0.0) THEN ln("DT_Output_8"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_6" IS NULL OR "DT_Output_8"."P_6" > 0.0) THEN ln("DT_Output_8"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_7" IS NULL OR "DT_Output_8"."P_7" > 0.0) THEN ln("DT_Output_8"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_8" IS NULL OR "DT_Output_8"."P_8" > 0.0) THEN ln("DT_Output_8"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_9" IS NULL OR "DT_Output_8"."P_9" > 0.0) THEN ln("DT_Output_8"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_6", (9.0 * (CASE WHEN ("DT_Output_8"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_7" IS NULL OR "DT_Output_8"."P_7" > 0.0) THEN ln("DT_Output_8"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_8"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_0" IS NULL OR "DT_Output_8"."P_0" > 0.0) THEN ln("DT_Output_8"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_1" IS NULL OR "DT_Output_8"."P_1" > 0.0) THEN ln("DT_Output_8"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_2" IS NULL OR "DT_Output_8"."P_2" > 0.0) THEN ln("DT_Output_8"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_3" IS NULL OR "DT_Output_8"."P_3" > 0.0) THEN ln("DT_Output_8"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_4" IS NULL OR "DT_Output_8"."P_4" > 0.0) THEN ln("DT_Output_8"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_5" IS NULL OR "DT_Output_8"."P_5" > 0.0) THEN ln("DT_Output_8"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_6" IS NULL OR "DT_Output_8"."P_6" > 0.0) THEN ln("DT_Output_8"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_7" IS NULL OR "DT_Output_8"."P_7" > 0.0) THEN ln("DT_Output_8"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_8" IS NULL OR "DT_Output_8"."P_8" > 0.0) THEN ln("DT_Output_8"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_9" IS NULL OR "DT_Output_8"."P_9" > 0.0) THEN ln("DT_Output_8"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_7", 9.0 * (CASE WHEN ("DT_Output_8"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_7" IS NULL OR "DT_Output_8"."P_7" > 0.0) THEN ln("DT_Output_8"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_8"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_0" IS NULL OR "DT_Output_8"."P_0" > 0.0) THEN ln("DT_Output_8"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_1" IS NULL OR "DT_Output_8"."P_1" > 0.0) THEN ln("DT_Output_8"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_2" IS NULL OR "DT_Output_8"."P_2" > 0.0) THEN ln("DT_Output_8"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_3" IS NULL OR "DT_Output_8"."P_3" > 0.0) THEN ln("DT_Output_8"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_4" IS NULL OR "DT_Output_8"."P_4" > 0.0) THEN ln("DT_Output_8"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_5" IS NULL OR "DT_Output_8"."P_5" > 0.0) THEN ln("DT_Output_8"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_6" IS NULL OR "DT_Output_8"."P_6" > 0.0) THEN ln("DT_Output_8"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_7" IS NULL OR "DT_Output_8"."P_7" > 0.0) THEN ln("DT_Output_8"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_8" IS NULL OR "DT_Output_8"."P_8" > 0.0) THEN ln("DT_Output_8"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_9" IS NULL OR "DT_Output_8"."P_9" > 0.0) THEN ln("DT_Output_8"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_7", (9.0 * (CASE WHEN ("DT_Output_8"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_8" IS NULL OR "DT_Output_8"."P_8" > 0.0) THEN ln("DT_Output_8"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_8"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_0" IS NULL OR "DT_Output_8"."P_0" > 0.0) THEN ln("DT_Output_8"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_1" IS NULL OR "DT_Output_8"."P_1" > 0.0) THEN ln("DT_Output_8"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_2" IS NULL OR "DT_Output_8"."P_2" > 0.0) THEN ln("DT_Output_8"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_3" IS NULL OR "DT_Output_8"."P_3" > 0.0) THEN ln("DT_Output_8"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_4" IS NULL OR "DT_Output_8"."P_4" > 0.0) THEN ln("DT_Output_8"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_5" IS NULL OR "DT_Output_8"."P_5" > 0.0) THEN ln("DT_Output_8"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_6" IS NULL OR "DT_Output_8"."P_6" > 0.0) THEN ln("DT_Output_8"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_7" IS NULL OR "DT_Output_8"."P_7" > 0.0) THEN ln("DT_Output_8"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_8" IS NULL OR "DT_Output_8"."P_8" > 0.0) THEN ln("DT_Output_8"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_9" IS NULL OR "DT_Output_8"."P_9" > 0.0) THEN ln("DT_Output_8"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_8", 9.0 * (CASE WHEN ("DT_Output_8"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_8" IS NULL OR "DT_Output_8"."P_8" > 0.0) THEN ln("DT_Output_8"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_8"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_0" IS NULL OR "DT_Output_8"."P_0" > 0.0) THEN ln("DT_Output_8"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_1" IS NULL OR "DT_Output_8"."P_1" > 0.0) THEN ln("DT_Output_8"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_2" IS NULL OR "DT_Output_8"."P_2" > 0.0) THEN ln("DT_Output_8"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_3" IS NULL OR "DT_Output_8"."P_3" > 0.0) THEN ln("DT_Output_8"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_4" IS NULL OR "DT_Output_8"."P_4" > 0.0) THEN ln("DT_Output_8"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_5" IS NULL OR "DT_Output_8"."P_5" > 0.0) THEN ln("DT_Output_8"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_6" IS NULL OR "DT_Output_8"."P_6" > 0.0) THEN ln("DT_Output_8"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_7" IS NULL OR "DT_Output_8"."P_7" > 0.0) THEN ln("DT_Output_8"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_8" IS NULL OR "DT_Output_8"."P_8" > 0.0) THEN ln("DT_Output_8"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_9" IS NULL OR "DT_Output_8"."P_9" > 0.0) THEN ln("DT_Output_8"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_8", (9.0 * (CASE WHEN ("DT_Output_8"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_9" IS NULL OR "DT_Output_8"."P_9" > 0.0) THEN ln("DT_Output_8"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_8"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_0" IS NULL OR "DT_Output_8"."P_0" > 0.0) THEN ln("DT_Output_8"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_1" IS NULL OR "DT_Output_8"."P_1" > 0.0) THEN ln("DT_Output_8"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_2" IS NULL OR "DT_Output_8"."P_2" > 0.0) THEN ln("DT_Output_8"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_3" IS NULL OR "DT_Output_8"."P_3" > 0.0) THEN ln("DT_Output_8"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_4" IS NULL OR "DT_Output_8"."P_4" > 0.0) THEN ln("DT_Output_8"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_5" IS NULL OR "DT_Output_8"."P_5" > 0.0) THEN ln("DT_Output_8"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_6" IS NULL OR "DT_Output_8"."P_6" > 0.0) THEN ln("DT_Output_8"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_7" IS NULL OR "DT_Output_8"."P_7" > 0.0) THEN ln("DT_Output_8"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_8" IS NULL OR "DT_Output_8"."P_8" > 0.0) THEN ln("DT_Output_8"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_9" IS NULL OR "DT_Output_8"."P_9" > 0.0) THEN ln("DT_Output_8"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_9", 9.0 * (CASE WHEN ("DT_Output_8"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_9" IS NULL OR "DT_Output_8"."P_9" > 0.0) THEN ln("DT_Output_8"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_8"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_0" IS NULL OR "DT_Output_8"."P_0" > 0.0) THEN ln("DT_Output_8"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_1" IS NULL OR "DT_Output_8"."P_1" > 0.0) THEN ln("DT_Output_8"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_2" IS NULL OR "DT_Output_8"."P_2" > 0.0) THEN ln("DT_Output_8"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_3" IS NULL OR "DT_Output_8"."P_3" > 0.0) THEN ln("DT_Output_8"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_4" IS NULL OR "DT_Output_8"."P_4" > 0.0) THEN ln("DT_Output_8"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_5" IS NULL OR "DT_Output_8"."P_5" > 0.0) THEN ln("DT_Output_8"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_6" IS NULL OR "DT_Output_8"."P_6" > 0.0) THEN ln("DT_Output_8"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_7" IS NULL OR "DT_Output_8"."P_7" > 0.0) THEN ln("DT_Output_8"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_8" IS NULL OR "DT_Output_8"."P_8" > 0.0) THEN ln("DT_Output_8"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_8"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_9" IS NULL OR "DT_Output_8"."P_9" > 0.0) THEN ln("DT_Output_8"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_9" 
FROM "DT_Output_8"), 
"DT_node_lookup_9" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_38 <= -1.6508052349090576) THEN 1 ELSE 2 END AS node_id_2 
FROM "DEGEN_YN11LY_ADS_SCA_2_OUT" "ADS_sca_2_OUT"), 
"DT_node_data_9" AS 
(SELECT "Values".nid AS nid, CAST("Values"."P_0" AS BINARY_DOUBLE) AS "P_0", CAST("Values"."P_1" AS BINARY_DOUBLE) AS "P_1", CAST("Values"."P_2" AS BINARY_DOUBLE) AS "P_2", CAST("Values"."P_3" AS BINARY_DOUBLE) AS "P_3", CAST("Values"."P_4" AS BINARY_DOUBLE) AS "P_4", CAST("Values"."P_5" AS BINARY_DOUBLE) AS "P_5", CAST("Values"."P_6" AS BINARY_DOUBLE) AS "P_6", CAST("Values"."P_7" AS BINARY_DOUBLE) AS "P_7", CAST("Values"."P_8" AS BINARY_DOUBLE) AS "P_8", CAST("Values"."P_9" AS BINARY_DOUBLE) AS "P_9", CAST("Values"."D" AS BINARY_DOUBLE) AS "D", CAST("Values"."DP" AS BINARY_DOUBLE) AS "DP" 
FROM (SELECT 1 AS nid, 0.9999997953236903 AS "P_0", 0.0 AS "P_1", 2.879237100027494e-08 AS "P_2", 2.936431946830318e-08 AS "P_3", 2.908015646989882e-08 AS "P_4", 2.9363496561131934e-08 AS "P_5", 2.9363810268769103e-08 AS "P_6", 0.0 AS "P_7", 2.934783641608098e-08 AS "P_8", 2.9364319468303112e-08 AS "P_9", 0 AS "D", 0.9999997953236903 AS "DP" FROM DUAL UNION ALL SELECT 2 AS nid, 4.2977254983513205e-05 AS "P_0", 0.11111111363700235 AS "P_1", 0.11111111043908688 AS "P_2", 0.11111111037556134 AS "P_3", 0.11111111040712261 AS "P_4", 0.11111111037565327 AS "P_5", 0.11111111037561797 AS "P_6", 0.11111111363700178 AS "P_7", 0.11106813312240885 AS "P_8", 0.11111111037556141 AS "P_9", 1 AS "D", 0.11111111363700235 AS "DP" FROM DUAL) "Values"), 
"DT_Output_9" AS 
(SELECT "DT_node_lookup_9"."KEY" AS "KEY", "DT_node_lookup_9".node_id_2 AS node_id_2, "DT_node_data_9".nid AS nid, "DT_node_data_9"."P_0" AS "P_0", "DT_node_data_9"."P_1" AS "P_1", "DT_node_data_9"."P_2" AS "P_2", "DT_node_data_9"."P_3" AS "P_3", "DT_node_data_9"."P_4" AS "P_4", "DT_node_data_9"."P_5" AS "P_5", "DT_node_data_9"."P_6" AS "P_6", "DT_node_data_9"."P_7" AS "P_7", "DT_node_data_9"."P_8" AS "P_8", "DT_node_data_9"."P_9" AS "P_9", "DT_node_data_9"."D" AS "D", "DT_node_data_9"."DP" AS "DP" 
FROM "DT_node_lookup_9" LEFT OUTER JOIN "DT_node_data_9" ON "DT_node_lookup_9".node_id_2 = "DT_node_data_9".nid), 
"ADB_Model_9" AS 
(SELECT "DT_Output_9"."KEY" AS "KEY", (9.0 * (CASE WHEN ("DT_Output_9"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_0" IS NULL OR "DT_Output_9"."P_0" > 0.0) THEN ln("DT_Output_9"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_9"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_0" IS NULL OR "DT_Output_9"."P_0" > 0.0) THEN ln("DT_Output_9"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_1" IS NULL OR "DT_Output_9"."P_1" > 0.0) THEN ln("DT_Output_9"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_2" IS NULL OR "DT_Output_9"."P_2" > 0.0) THEN ln("DT_Output_9"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_3" IS NULL OR "DT_Output_9"."P_3" > 0.0) THEN ln("DT_Output_9"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_4" IS NULL OR "DT_Output_9"."P_4" > 0.0) THEN ln("DT_Output_9"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_5" IS NULL OR "DT_Output_9"."P_5" > 0.0) THEN ln("DT_Output_9"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_6" IS NULL OR "DT_Output_9"."P_6" > 0.0) THEN ln("DT_Output_9"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_7" IS NULL OR "DT_Output_9"."P_7" > 0.0) THEN ln("DT_Output_9"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_8" IS NULL OR "DT_Output_9"."P_8" > 0.0) THEN ln("DT_Output_9"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_9" IS NULL OR "DT_Output_9"."P_9" > 0.0) THEN ln("DT_Output_9"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_0", 9.0 * (CASE WHEN ("DT_Output_9"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_0" IS NULL OR "DT_Output_9"."P_0" > 0.0) THEN ln("DT_Output_9"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_9"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_0" IS NULL OR "DT_Output_9"."P_0" > 0.0) THEN ln("DT_Output_9"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_1" IS NULL OR "DT_Output_9"."P_1" > 0.0) THEN ln("DT_Output_9"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_2" IS NULL OR "DT_Output_9"."P_2" > 0.0) THEN ln("DT_Output_9"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_3" IS NULL OR "DT_Output_9"."P_3" > 0.0) THEN ln("DT_Output_9"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_4" IS NULL OR "DT_Output_9"."P_4" > 0.0) THEN ln("DT_Output_9"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_5" IS NULL OR "DT_Output_9"."P_5" > 0.0) THEN ln("DT_Output_9"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_6" IS NULL OR "DT_Output_9"."P_6" > 0.0) THEN ln("DT_Output_9"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_7" IS NULL OR "DT_Output_9"."P_7" > 0.0) THEN ln("DT_Output_9"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_8" IS NULL OR "DT_Output_9"."P_8" > 0.0) THEN ln("DT_Output_9"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_9" IS NULL OR "DT_Output_9"."P_9" > 0.0) THEN ln("DT_Output_9"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_0", (9.0 * (CASE WHEN ("DT_Output_9"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_1" IS NULL OR "DT_Output_9"."P_1" > 0.0) THEN ln("DT_Output_9"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_9"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_0" IS NULL OR "DT_Output_9"."P_0" > 0.0) THEN ln("DT_Output_9"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_1" IS NULL OR "DT_Output_9"."P_1" > 0.0) THEN ln("DT_Output_9"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_2" IS NULL OR "DT_Output_9"."P_2" > 0.0) THEN ln("DT_Output_9"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_3" IS NULL OR "DT_Output_9"."P_3" > 0.0) THEN ln("DT_Output_9"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_4" IS NULL OR "DT_Output_9"."P_4" > 0.0) THEN ln("DT_Output_9"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_5" IS NULL OR "DT_Output_9"."P_5" > 0.0) THEN ln("DT_Output_9"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_6" IS NULL OR "DT_Output_9"."P_6" > 0.0) THEN ln("DT_Output_9"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_7" IS NULL OR "DT_Output_9"."P_7" > 0.0) THEN ln("DT_Output_9"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_8" IS NULL OR "DT_Output_9"."P_8" > 0.0) THEN ln("DT_Output_9"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_9" IS NULL OR "DT_Output_9"."P_9" > 0.0) THEN ln("DT_Output_9"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_1", 9.0 * (CASE WHEN ("DT_Output_9"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_1" IS NULL OR "DT_Output_9"."P_1" > 0.0) THEN ln("DT_Output_9"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_9"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_0" IS NULL OR "DT_Output_9"."P_0" > 0.0) THEN ln("DT_Output_9"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_1" IS NULL OR "DT_Output_9"."P_1" > 0.0) THEN ln("DT_Output_9"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_2" IS NULL OR "DT_Output_9"."P_2" > 0.0) THEN ln("DT_Output_9"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_3" IS NULL OR "DT_Output_9"."P_3" > 0.0) THEN ln("DT_Output_9"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_4" IS NULL OR "DT_Output_9"."P_4" > 0.0) THEN ln("DT_Output_9"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_5" IS NULL OR "DT_Output_9"."P_5" > 0.0) THEN ln("DT_Output_9"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_6" IS NULL OR "DT_Output_9"."P_6" > 0.0) THEN ln("DT_Output_9"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_7" IS NULL OR "DT_Output_9"."P_7" > 0.0) THEN ln("DT_Output_9"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_8" IS NULL OR "DT_Output_9"."P_8" > 0.0) THEN ln("DT_Output_9"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_9" IS NULL OR "DT_Output_9"."P_9" > 0.0) THEN ln("DT_Output_9"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_1", (9.0 * (CASE WHEN ("DT_Output_9"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_2" IS NULL OR "DT_Output_9"."P_2" > 0.0) THEN ln("DT_Output_9"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_9"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_0" IS NULL OR "DT_Output_9"."P_0" > 0.0) THEN ln("DT_Output_9"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_1" IS NULL OR "DT_Output_9"."P_1" > 0.0) THEN ln("DT_Output_9"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_2" IS NULL OR "DT_Output_9"."P_2" > 0.0) THEN ln("DT_Output_9"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_3" IS NULL OR "DT_Output_9"."P_3" > 0.0) THEN ln("DT_Output_9"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_4" IS NULL OR "DT_Output_9"."P_4" > 0.0) THEN ln("DT_Output_9"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_5" IS NULL OR "DT_Output_9"."P_5" > 0.0) THEN ln("DT_Output_9"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_6" IS NULL OR "DT_Output_9"."P_6" > 0.0) THEN ln("DT_Output_9"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_7" IS NULL OR "DT_Output_9"."P_7" > 0.0) THEN ln("DT_Output_9"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_8" IS NULL OR "DT_Output_9"."P_8" > 0.0) THEN ln("DT_Output_9"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_9" IS NULL OR "DT_Output_9"."P_9" > 0.0) THEN ln("DT_Output_9"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_2", 9.0 * (CASE WHEN ("DT_Output_9"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_2" IS NULL OR "DT_Output_9"."P_2" > 0.0) THEN ln("DT_Output_9"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_9"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_0" IS NULL OR "DT_Output_9"."P_0" > 0.0) THEN ln("DT_Output_9"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_1" IS NULL OR "DT_Output_9"."P_1" > 0.0) THEN ln("DT_Output_9"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_2" IS NULL OR "DT_Output_9"."P_2" > 0.0) THEN ln("DT_Output_9"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_3" IS NULL OR "DT_Output_9"."P_3" > 0.0) THEN ln("DT_Output_9"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_4" IS NULL OR "DT_Output_9"."P_4" > 0.0) THEN ln("DT_Output_9"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_5" IS NULL OR "DT_Output_9"."P_5" > 0.0) THEN ln("DT_Output_9"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_6" IS NULL OR "DT_Output_9"."P_6" > 0.0) THEN ln("DT_Output_9"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_7" IS NULL OR "DT_Output_9"."P_7" > 0.0) THEN ln("DT_Output_9"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_8" IS NULL OR "DT_Output_9"."P_8" > 0.0) THEN ln("DT_Output_9"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_9" IS NULL OR "DT_Output_9"."P_9" > 0.0) THEN ln("DT_Output_9"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_2", (9.0 * (CASE WHEN ("DT_Output_9"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_3" IS NULL OR "DT_Output_9"."P_3" > 0.0) THEN ln("DT_Output_9"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_9"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_0" IS NULL OR "DT_Output_9"."P_0" > 0.0) THEN ln("DT_Output_9"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_1" IS NULL OR "DT_Output_9"."P_1" > 0.0) THEN ln("DT_Output_9"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_2" IS NULL OR "DT_Output_9"."P_2" > 0.0) THEN ln("DT_Output_9"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_3" IS NULL OR "DT_Output_9"."P_3" > 0.0) THEN ln("DT_Output_9"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_4" IS NULL OR "DT_Output_9"."P_4" > 0.0) THEN ln("DT_Output_9"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_5" IS NULL OR "DT_Output_9"."P_5" > 0.0) THEN ln("DT_Output_9"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_6" IS NULL OR "DT_Output_9"."P_6" > 0.0) THEN ln("DT_Output_9"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_7" IS NULL OR "DT_Output_9"."P_7" > 0.0) THEN ln("DT_Output_9"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_8" IS NULL OR "DT_Output_9"."P_8" > 0.0) THEN ln("DT_Output_9"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_9" IS NULL OR "DT_Output_9"."P_9" > 0.0) THEN ln("DT_Output_9"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_3", 9.0 * (CASE WHEN ("DT_Output_9"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_3" IS NULL OR "DT_Output_9"."P_3" > 0.0) THEN ln("DT_Output_9"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_9"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_0" IS NULL OR "DT_Output_9"."P_0" > 0.0) THEN ln("DT_Output_9"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_1" IS NULL OR "DT_Output_9"."P_1" > 0.0) THEN ln("DT_Output_9"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_2" IS NULL OR "DT_Output_9"."P_2" > 0.0) THEN ln("DT_Output_9"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_3" IS NULL OR "DT_Output_9"."P_3" > 0.0) THEN ln("DT_Output_9"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_4" IS NULL OR "DT_Output_9"."P_4" > 0.0) THEN ln("DT_Output_9"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_5" IS NULL OR "DT_Output_9"."P_5" > 0.0) THEN ln("DT_Output_9"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_6" IS NULL OR "DT_Output_9"."P_6" > 0.0) THEN ln("DT_Output_9"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_7" IS NULL OR "DT_Output_9"."P_7" > 0.0) THEN ln("DT_Output_9"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_8" IS NULL OR "DT_Output_9"."P_8" > 0.0) THEN ln("DT_Output_9"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_9" IS NULL OR "DT_Output_9"."P_9" > 0.0) THEN ln("DT_Output_9"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_3", (9.0 * (CASE WHEN ("DT_Output_9"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_4" IS NULL OR "DT_Output_9"."P_4" > 0.0) THEN ln("DT_Output_9"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_9"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_0" IS NULL OR "DT_Output_9"."P_0" > 0.0) THEN ln("DT_Output_9"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_1" IS NULL OR "DT_Output_9"."P_1" > 0.0) THEN ln("DT_Output_9"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_2" IS NULL OR "DT_Output_9"."P_2" > 0.0) THEN ln("DT_Output_9"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_3" IS NULL OR "DT_Output_9"."P_3" > 0.0) THEN ln("DT_Output_9"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_4" IS NULL OR "DT_Output_9"."P_4" > 0.0) THEN ln("DT_Output_9"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_5" IS NULL OR "DT_Output_9"."P_5" > 0.0) THEN ln("DT_Output_9"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_6" IS NULL OR "DT_Output_9"."P_6" > 0.0) THEN ln("DT_Output_9"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_7" IS NULL OR "DT_Output_9"."P_7" > 0.0) THEN ln("DT_Output_9"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_8" IS NULL OR "DT_Output_9"."P_8" > 0.0) THEN ln("DT_Output_9"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_9" IS NULL OR "DT_Output_9"."P_9" > 0.0) THEN ln("DT_Output_9"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_4", 9.0 * (CASE WHEN ("DT_Output_9"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_4" IS NULL OR "DT_Output_9"."P_4" > 0.0) THEN ln("DT_Output_9"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_9"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_0" IS NULL OR "DT_Output_9"."P_0" > 0.0) THEN ln("DT_Output_9"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_1" IS NULL OR "DT_Output_9"."P_1" > 0.0) THEN ln("DT_Output_9"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_2" IS NULL OR "DT_Output_9"."P_2" > 0.0) THEN ln("DT_Output_9"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_3" IS NULL OR "DT_Output_9"."P_3" > 0.0) THEN ln("DT_Output_9"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_4" IS NULL OR "DT_Output_9"."P_4" > 0.0) THEN ln("DT_Output_9"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_5" IS NULL OR "DT_Output_9"."P_5" > 0.0) THEN ln("DT_Output_9"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_6" IS NULL OR "DT_Output_9"."P_6" > 0.0) THEN ln("DT_Output_9"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_7" IS NULL OR "DT_Output_9"."P_7" > 0.0) THEN ln("DT_Output_9"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_8" IS NULL OR "DT_Output_9"."P_8" > 0.0) THEN ln("DT_Output_9"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_9" IS NULL OR "DT_Output_9"."P_9" > 0.0) THEN ln("DT_Output_9"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_4", (9.0 * (CASE WHEN ("DT_Output_9"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_5" IS NULL OR "DT_Output_9"."P_5" > 0.0) THEN ln("DT_Output_9"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_9"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_0" IS NULL OR "DT_Output_9"."P_0" > 0.0) THEN ln("DT_Output_9"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_1" IS NULL OR "DT_Output_9"."P_1" > 0.0) THEN ln("DT_Output_9"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_2" IS NULL OR "DT_Output_9"."P_2" > 0.0) THEN ln("DT_Output_9"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_3" IS NULL OR "DT_Output_9"."P_3" > 0.0) THEN ln("DT_Output_9"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_4" IS NULL OR "DT_Output_9"."P_4" > 0.0) THEN ln("DT_Output_9"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_5" IS NULL OR "DT_Output_9"."P_5" > 0.0) THEN ln("DT_Output_9"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_6" IS NULL OR "DT_Output_9"."P_6" > 0.0) THEN ln("DT_Output_9"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_7" IS NULL OR "DT_Output_9"."P_7" > 0.0) THEN ln("DT_Output_9"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_8" IS NULL OR "DT_Output_9"."P_8" > 0.0) THEN ln("DT_Output_9"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_9" IS NULL OR "DT_Output_9"."P_9" > 0.0) THEN ln("DT_Output_9"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_5", 9.0 * (CASE WHEN ("DT_Output_9"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_5" IS NULL OR "DT_Output_9"."P_5" > 0.0) THEN ln("DT_Output_9"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_9"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_0" IS NULL OR "DT_Output_9"."P_0" > 0.0) THEN ln("DT_Output_9"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_1" IS NULL OR "DT_Output_9"."P_1" > 0.0) THEN ln("DT_Output_9"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_2" IS NULL OR "DT_Output_9"."P_2" > 0.0) THEN ln("DT_Output_9"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_3" IS NULL OR "DT_Output_9"."P_3" > 0.0) THEN ln("DT_Output_9"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_4" IS NULL OR "DT_Output_9"."P_4" > 0.0) THEN ln("DT_Output_9"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_5" IS NULL OR "DT_Output_9"."P_5" > 0.0) THEN ln("DT_Output_9"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_6" IS NULL OR "DT_Output_9"."P_6" > 0.0) THEN ln("DT_Output_9"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_7" IS NULL OR "DT_Output_9"."P_7" > 0.0) THEN ln("DT_Output_9"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_8" IS NULL OR "DT_Output_9"."P_8" > 0.0) THEN ln("DT_Output_9"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_9" IS NULL OR "DT_Output_9"."P_9" > 0.0) THEN ln("DT_Output_9"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_5", (9.0 * (CASE WHEN ("DT_Output_9"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_6" IS NULL OR "DT_Output_9"."P_6" > 0.0) THEN ln("DT_Output_9"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_9"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_0" IS NULL OR "DT_Output_9"."P_0" > 0.0) THEN ln("DT_Output_9"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_1" IS NULL OR "DT_Output_9"."P_1" > 0.0) THEN ln("DT_Output_9"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_2" IS NULL OR "DT_Output_9"."P_2" > 0.0) THEN ln("DT_Output_9"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_3" IS NULL OR "DT_Output_9"."P_3" > 0.0) THEN ln("DT_Output_9"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_4" IS NULL OR "DT_Output_9"."P_4" > 0.0) THEN ln("DT_Output_9"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_5" IS NULL OR "DT_Output_9"."P_5" > 0.0) THEN ln("DT_Output_9"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_6" IS NULL OR "DT_Output_9"."P_6" > 0.0) THEN ln("DT_Output_9"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_7" IS NULL OR "DT_Output_9"."P_7" > 0.0) THEN ln("DT_Output_9"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_8" IS NULL OR "DT_Output_9"."P_8" > 0.0) THEN ln("DT_Output_9"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_9" IS NULL OR "DT_Output_9"."P_9" > 0.0) THEN ln("DT_Output_9"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_6", 9.0 * (CASE WHEN ("DT_Output_9"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_6" IS NULL OR "DT_Output_9"."P_6" > 0.0) THEN ln("DT_Output_9"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_9"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_0" IS NULL OR "DT_Output_9"."P_0" > 0.0) THEN ln("DT_Output_9"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_1" IS NULL OR "DT_Output_9"."P_1" > 0.0) THEN ln("DT_Output_9"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_2" IS NULL OR "DT_Output_9"."P_2" > 0.0) THEN ln("DT_Output_9"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_3" IS NULL OR "DT_Output_9"."P_3" > 0.0) THEN ln("DT_Output_9"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_4" IS NULL OR "DT_Output_9"."P_4" > 0.0) THEN ln("DT_Output_9"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_5" IS NULL OR "DT_Output_9"."P_5" > 0.0) THEN ln("DT_Output_9"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_6" IS NULL OR "DT_Output_9"."P_6" > 0.0) THEN ln("DT_Output_9"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_7" IS NULL OR "DT_Output_9"."P_7" > 0.0) THEN ln("DT_Output_9"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_8" IS NULL OR "DT_Output_9"."P_8" > 0.0) THEN ln("DT_Output_9"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_9" IS NULL OR "DT_Output_9"."P_9" > 0.0) THEN ln("DT_Output_9"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_6", (9.0 * (CASE WHEN ("DT_Output_9"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_7" IS NULL OR "DT_Output_9"."P_7" > 0.0) THEN ln("DT_Output_9"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_9"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_0" IS NULL OR "DT_Output_9"."P_0" > 0.0) THEN ln("DT_Output_9"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_1" IS NULL OR "DT_Output_9"."P_1" > 0.0) THEN ln("DT_Output_9"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_2" IS NULL OR "DT_Output_9"."P_2" > 0.0) THEN ln("DT_Output_9"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_3" IS NULL OR "DT_Output_9"."P_3" > 0.0) THEN ln("DT_Output_9"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_4" IS NULL OR "DT_Output_9"."P_4" > 0.0) THEN ln("DT_Output_9"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_5" IS NULL OR "DT_Output_9"."P_5" > 0.0) THEN ln("DT_Output_9"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_6" IS NULL OR "DT_Output_9"."P_6" > 0.0) THEN ln("DT_Output_9"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_7" IS NULL OR "DT_Output_9"."P_7" > 0.0) THEN ln("DT_Output_9"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_8" IS NULL OR "DT_Output_9"."P_8" > 0.0) THEN ln("DT_Output_9"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_9" IS NULL OR "DT_Output_9"."P_9" > 0.0) THEN ln("DT_Output_9"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_7", 9.0 * (CASE WHEN ("DT_Output_9"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_7" IS NULL OR "DT_Output_9"."P_7" > 0.0) THEN ln("DT_Output_9"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_9"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_0" IS NULL OR "DT_Output_9"."P_0" > 0.0) THEN ln("DT_Output_9"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_1" IS NULL OR "DT_Output_9"."P_1" > 0.0) THEN ln("DT_Output_9"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_2" IS NULL OR "DT_Output_9"."P_2" > 0.0) THEN ln("DT_Output_9"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_3" IS NULL OR "DT_Output_9"."P_3" > 0.0) THEN ln("DT_Output_9"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_4" IS NULL OR "DT_Output_9"."P_4" > 0.0) THEN ln("DT_Output_9"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_5" IS NULL OR "DT_Output_9"."P_5" > 0.0) THEN ln("DT_Output_9"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_6" IS NULL OR "DT_Output_9"."P_6" > 0.0) THEN ln("DT_Output_9"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_7" IS NULL OR "DT_Output_9"."P_7" > 0.0) THEN ln("DT_Output_9"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_8" IS NULL OR "DT_Output_9"."P_8" > 0.0) THEN ln("DT_Output_9"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_9" IS NULL OR "DT_Output_9"."P_9" > 0.0) THEN ln("DT_Output_9"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_7", (9.0 * (CASE WHEN ("DT_Output_9"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_8" IS NULL OR "DT_Output_9"."P_8" > 0.0) THEN ln("DT_Output_9"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_9"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_0" IS NULL OR "DT_Output_9"."P_0" > 0.0) THEN ln("DT_Output_9"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_1" IS NULL OR "DT_Output_9"."P_1" > 0.0) THEN ln("DT_Output_9"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_2" IS NULL OR "DT_Output_9"."P_2" > 0.0) THEN ln("DT_Output_9"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_3" IS NULL OR "DT_Output_9"."P_3" > 0.0) THEN ln("DT_Output_9"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_4" IS NULL OR "DT_Output_9"."P_4" > 0.0) THEN ln("DT_Output_9"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_5" IS NULL OR "DT_Output_9"."P_5" > 0.0) THEN ln("DT_Output_9"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_6" IS NULL OR "DT_Output_9"."P_6" > 0.0) THEN ln("DT_Output_9"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_7" IS NULL OR "DT_Output_9"."P_7" > 0.0) THEN ln("DT_Output_9"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_8" IS NULL OR "DT_Output_9"."P_8" > 0.0) THEN ln("DT_Output_9"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_9" IS NULL OR "DT_Output_9"."P_9" > 0.0) THEN ln("DT_Output_9"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_8", 9.0 * (CASE WHEN ("DT_Output_9"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_8" IS NULL OR "DT_Output_9"."P_8" > 0.0) THEN ln("DT_Output_9"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_9"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_0" IS NULL OR "DT_Output_9"."P_0" > 0.0) THEN ln("DT_Output_9"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_1" IS NULL OR "DT_Output_9"."P_1" > 0.0) THEN ln("DT_Output_9"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_2" IS NULL OR "DT_Output_9"."P_2" > 0.0) THEN ln("DT_Output_9"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_3" IS NULL OR "DT_Output_9"."P_3" > 0.0) THEN ln("DT_Output_9"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_4" IS NULL OR "DT_Output_9"."P_4" > 0.0) THEN ln("DT_Output_9"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_5" IS NULL OR "DT_Output_9"."P_5" > 0.0) THEN ln("DT_Output_9"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_6" IS NULL OR "DT_Output_9"."P_6" > 0.0) THEN ln("DT_Output_9"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_7" IS NULL OR "DT_Output_9"."P_7" > 0.0) THEN ln("DT_Output_9"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_8" IS NULL OR "DT_Output_9"."P_8" > 0.0) THEN ln("DT_Output_9"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_9" IS NULL OR "DT_Output_9"."P_9" > 0.0) THEN ln("DT_Output_9"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_8", (9.0 * (CASE WHEN ("DT_Output_9"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_9" IS NULL OR "DT_Output_9"."P_9" > 0.0) THEN ln("DT_Output_9"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_9"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_0" IS NULL OR "DT_Output_9"."P_0" > 0.0) THEN ln("DT_Output_9"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_1" IS NULL OR "DT_Output_9"."P_1" > 0.0) THEN ln("DT_Output_9"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_2" IS NULL OR "DT_Output_9"."P_2" > 0.0) THEN ln("DT_Output_9"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_3" IS NULL OR "DT_Output_9"."P_3" > 0.0) THEN ln("DT_Output_9"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_4" IS NULL OR "DT_Output_9"."P_4" > 0.0) THEN ln("DT_Output_9"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_5" IS NULL OR "DT_Output_9"."P_5" > 0.0) THEN ln("DT_Output_9"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_6" IS NULL OR "DT_Output_9"."P_6" > 0.0) THEN ln("DT_Output_9"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_7" IS NULL OR "DT_Output_9"."P_7" > 0.0) THEN ln("DT_Output_9"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_8" IS NULL OR "DT_Output_9"."P_8" > 0.0) THEN ln("DT_Output_9"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_9" IS NULL OR "DT_Output_9"."P_9" > 0.0) THEN ln("DT_Output_9"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_9", 9.0 * (CASE WHEN ("DT_Output_9"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_9" IS NULL OR "DT_Output_9"."P_9" > 0.0) THEN ln("DT_Output_9"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_9"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_0" IS NULL OR "DT_Output_9"."P_0" > 0.0) THEN ln("DT_Output_9"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_1" IS NULL OR "DT_Output_9"."P_1" > 0.0) THEN ln("DT_Output_9"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_2" IS NULL OR "DT_Output_9"."P_2" > 0.0) THEN ln("DT_Output_9"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_3" IS NULL OR "DT_Output_9"."P_3" > 0.0) THEN ln("DT_Output_9"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_4" IS NULL OR "DT_Output_9"."P_4" > 0.0) THEN ln("DT_Output_9"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_5" IS NULL OR "DT_Output_9"."P_5" > 0.0) THEN ln("DT_Output_9"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_6" IS NULL OR "DT_Output_9"."P_6" > 0.0) THEN ln("DT_Output_9"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_7" IS NULL OR "DT_Output_9"."P_7" > 0.0) THEN ln("DT_Output_9"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_8" IS NULL OR "DT_Output_9"."P_8" > 0.0) THEN ln("DT_Output_9"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_9"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_9" IS NULL OR "DT_Output_9"."P_9" > 0.0) THEN ln("DT_Output_9"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_9" 
FROM "DT_Output_9")
 SELECT "ADB_B0"."KEY", "ADB_B0"."Score_0", "ADB_B0"."Proba_0", "ADB_B0"."Score_1", "ADB_B0"."Proba_1", "ADB_B0"."Score_2", "ADB_B0"."Proba_2", "ADB_B0"."Score_3", "ADB_B0"."Proba_3", "ADB_B0"."Score_4", "ADB_B0"."Proba_4", "ADB_B0"."Score_5", "ADB_B0"."Proba_5", "ADB_B0"."Score_6", "ADB_B0"."Proba_6", "ADB_B0"."Score_7", "ADB_B0"."Proba_7", "ADB_B0"."Score_8", "ADB_B0"."Proba_8", "ADB_B0"."Score_9", "ADB_B0"."Proba_9" 
FROM (SELECT "ADB_esu_0"."KEY" AS "KEY", "ADB_esu_0"."Score_0" AS "Score_0", "ADB_esu_0"."Proba_0" AS "Proba_0", "ADB_esu_0"."Score_1" AS "Score_1", "ADB_esu_0"."Proba_1" AS "Proba_1", "ADB_esu_0"."Score_2" AS "Score_2", "ADB_esu_0"."Proba_2" AS "Proba_2", "ADB_esu_0"."Score_3" AS "Score_3", "ADB_esu_0"."Proba_3" AS "Proba_3", "ADB_esu_0"."Score_4" AS "Score_4", "ADB_esu_0"."Proba_4" AS "Proba_4", "ADB_esu_0"."Score_5" AS "Score_5", "ADB_esu_0"."Proba_5" AS "Proba_5", "ADB_esu_0"."Score_6" AS "Score_6", "ADB_esu_0"."Proba_6" AS "Proba_6", "ADB_esu_0"."Score_7" AS "Score_7", "ADB_esu_0"."Proba_7" AS "Proba_7", "ADB_esu_0"."Score_8" AS "Score_8", "ADB_esu_0"."Proba_8" AS "Proba_8", "ADB_esu_0"."Score_9" AS "Score_9", "ADB_esu_0"."Proba_9" AS "Proba_9" 
FROM (SELECT "ADB_Model_0"."KEY" AS "KEY", "ADB_Model_0"."Score_0" AS "Score_0", "ADB_Model_0"."Proba_0" AS "Proba_0", "ADB_Model_0"."Score_1" AS "Score_1", "ADB_Model_0"."Proba_1" AS "Proba_1", "ADB_Model_0"."Score_2" AS "Score_2", "ADB_Model_0"."Proba_2" AS "Proba_2", "ADB_Model_0"."Score_3" AS "Score_3", "ADB_Model_0"."Proba_3" AS "Proba_3", "ADB_Model_0"."Score_4" AS "Score_4", "ADB_Model_0"."Proba_4" AS "Proba_4", "ADB_Model_0"."Score_5" AS "Score_5", "ADB_Model_0"."Proba_5" AS "Proba_5", "ADB_Model_0"."Score_6" AS "Score_6", "ADB_Model_0"."Proba_6" AS "Proba_6", "ADB_Model_0"."Score_7" AS "Score_7", "ADB_Model_0"."Proba_7" AS "Proba_7", "ADB_Model_0"."Score_8" AS "Score_8", "ADB_Model_0"."Proba_8" AS "Proba_8", "ADB_Model_0"."Score_9" AS "Score_9", "ADB_Model_0"."Proba_9" AS "Proba_9" 
FROM "ADB_Model_0" UNION ALL SELECT "ADB_Model_1"."KEY" AS "KEY", "ADB_Model_1"."Score_0" AS "Score_0", "ADB_Model_1"."Proba_0" AS "Proba_0", "ADB_Model_1"."Score_1" AS "Score_1", "ADB_Model_1"."Proba_1" AS "Proba_1", "ADB_Model_1"."Score_2" AS "Score_2", "ADB_Model_1"."Proba_2" AS "Proba_2", "ADB_Model_1"."Score_3" AS "Score_3", "ADB_Model_1"."Proba_3" AS "Proba_3", "ADB_Model_1"."Score_4" AS "Score_4", "ADB_Model_1"."Proba_4" AS "Proba_4", "ADB_Model_1"."Score_5" AS "Score_5", "ADB_Model_1"."Proba_5" AS "Proba_5", "ADB_Model_1"."Score_6" AS "Score_6", "ADB_Model_1"."Proba_6" AS "Proba_6", "ADB_Model_1"."Score_7" AS "Score_7", "ADB_Model_1"."Proba_7" AS "Proba_7", "ADB_Model_1"."Score_8" AS "Score_8", "ADB_Model_1"."Proba_8" AS "Proba_8", "ADB_Model_1"."Score_9" AS "Score_9", "ADB_Model_1"."Proba_9" AS "Proba_9" 
FROM "ADB_Model_1" UNION ALL SELECT "ADB_Model_2"."KEY" AS "KEY", "ADB_Model_2"."Score_0" AS "Score_0", "ADB_Model_2"."Proba_0" AS "Proba_0", "ADB_Model_2"."Score_1" AS "Score_1", "ADB_Model_2"."Proba_1" AS "Proba_1", "ADB_Model_2"."Score_2" AS "Score_2", "ADB_Model_2"."Proba_2" AS "Proba_2", "ADB_Model_2"."Score_3" AS "Score_3", "ADB_Model_2"."Proba_3" AS "Proba_3", "ADB_Model_2"."Score_4" AS "Score_4", "ADB_Model_2"."Proba_4" AS "Proba_4", "ADB_Model_2"."Score_5" AS "Score_5", "ADB_Model_2"."Proba_5" AS "Proba_5", "ADB_Model_2"."Score_6" AS "Score_6", "ADB_Model_2"."Proba_6" AS "Proba_6", "ADB_Model_2"."Score_7" AS "Score_7", "ADB_Model_2"."Proba_7" AS "Proba_7", "ADB_Model_2"."Score_8" AS "Score_8", "ADB_Model_2"."Proba_8" AS "Proba_8", "ADB_Model_2"."Score_9" AS "Score_9", "ADB_Model_2"."Proba_9" AS "Proba_9" 
FROM "ADB_Model_2" UNION ALL SELECT "ADB_Model_3"."KEY" AS "KEY", "ADB_Model_3"."Score_0" AS "Score_0", "ADB_Model_3"."Proba_0" AS "Proba_0", "ADB_Model_3"."Score_1" AS "Score_1", "ADB_Model_3"."Proba_1" AS "Proba_1", "ADB_Model_3"."Score_2" AS "Score_2", "ADB_Model_3"."Proba_2" AS "Proba_2", "ADB_Model_3"."Score_3" AS "Score_3", "ADB_Model_3"."Proba_3" AS "Proba_3", "ADB_Model_3"."Score_4" AS "Score_4", "ADB_Model_3"."Proba_4" AS "Proba_4", "ADB_Model_3"."Score_5" AS "Score_5", "ADB_Model_3"."Proba_5" AS "Proba_5", "ADB_Model_3"."Score_6" AS "Score_6", "ADB_Model_3"."Proba_6" AS "Proba_6", "ADB_Model_3"."Score_7" AS "Score_7", "ADB_Model_3"."Proba_7" AS "Proba_7", "ADB_Model_3"."Score_8" AS "Score_8", "ADB_Model_3"."Proba_8" AS "Proba_8", "ADB_Model_3"."Score_9" AS "Score_9", "ADB_Model_3"."Proba_9" AS "Proba_9" 
FROM "ADB_Model_3" UNION ALL SELECT "ADB_Model_4"."KEY" AS "KEY", "ADB_Model_4"."Score_0" AS "Score_0", "ADB_Model_4"."Proba_0" AS "Proba_0", "ADB_Model_4"."Score_1" AS "Score_1", "ADB_Model_4"."Proba_1" AS "Proba_1", "ADB_Model_4"."Score_2" AS "Score_2", "ADB_Model_4"."Proba_2" AS "Proba_2", "ADB_Model_4"."Score_3" AS "Score_3", "ADB_Model_4"."Proba_3" AS "Proba_3", "ADB_Model_4"."Score_4" AS "Score_4", "ADB_Model_4"."Proba_4" AS "Proba_4", "ADB_Model_4"."Score_5" AS "Score_5", "ADB_Model_4"."Proba_5" AS "Proba_5", "ADB_Model_4"."Score_6" AS "Score_6", "ADB_Model_4"."Proba_6" AS "Proba_6", "ADB_Model_4"."Score_7" AS "Score_7", "ADB_Model_4"."Proba_7" AS "Proba_7", "ADB_Model_4"."Score_8" AS "Score_8", "ADB_Model_4"."Proba_8" AS "Proba_8", "ADB_Model_4"."Score_9" AS "Score_9", "ADB_Model_4"."Proba_9" AS "Proba_9" 
FROM "ADB_Model_4" UNION ALL SELECT "ADB_Model_5"."KEY" AS "KEY", "ADB_Model_5"."Score_0" AS "Score_0", "ADB_Model_5"."Proba_0" AS "Proba_0", "ADB_Model_5"."Score_1" AS "Score_1", "ADB_Model_5"."Proba_1" AS "Proba_1", "ADB_Model_5"."Score_2" AS "Score_2", "ADB_Model_5"."Proba_2" AS "Proba_2", "ADB_Model_5"."Score_3" AS "Score_3", "ADB_Model_5"."Proba_3" AS "Proba_3", "ADB_Model_5"."Score_4" AS "Score_4", "ADB_Model_5"."Proba_4" AS "Proba_4", "ADB_Model_5"."Score_5" AS "Score_5", "ADB_Model_5"."Proba_5" AS "Proba_5", "ADB_Model_5"."Score_6" AS "Score_6", "ADB_Model_5"."Proba_6" AS "Proba_6", "ADB_Model_5"."Score_7" AS "Score_7", "ADB_Model_5"."Proba_7" AS "Proba_7", "ADB_Model_5"."Score_8" AS "Score_8", "ADB_Model_5"."Proba_8" AS "Proba_8", "ADB_Model_5"."Score_9" AS "Score_9", "ADB_Model_5"."Proba_9" AS "Proba_9" 
FROM "ADB_Model_5" UNION ALL SELECT "ADB_Model_6"."KEY" AS "KEY", "ADB_Model_6"."Score_0" AS "Score_0", "ADB_Model_6"."Proba_0" AS "Proba_0", "ADB_Model_6"."Score_1" AS "Score_1", "ADB_Model_6"."Proba_1" AS "Proba_1", "ADB_Model_6"."Score_2" AS "Score_2", "ADB_Model_6"."Proba_2" AS "Proba_2", "ADB_Model_6"."Score_3" AS "Score_3", "ADB_Model_6"."Proba_3" AS "Proba_3", "ADB_Model_6"."Score_4" AS "Score_4", "ADB_Model_6"."Proba_4" AS "Proba_4", "ADB_Model_6"."Score_5" AS "Score_5", "ADB_Model_6"."Proba_5" AS "Proba_5", "ADB_Model_6"."Score_6" AS "Score_6", "ADB_Model_6"."Proba_6" AS "Proba_6", "ADB_Model_6"."Score_7" AS "Score_7", "ADB_Model_6"."Proba_7" AS "Proba_7", "ADB_Model_6"."Score_8" AS "Score_8", "ADB_Model_6"."Proba_8" AS "Proba_8", "ADB_Model_6"."Score_9" AS "Score_9", "ADB_Model_6"."Proba_9" AS "Proba_9" 
FROM "ADB_Model_6" UNION ALL SELECT "ADB_Model_7"."KEY" AS "KEY", "ADB_Model_7"."Score_0" AS "Score_0", "ADB_Model_7"."Proba_0" AS "Proba_0", "ADB_Model_7"."Score_1" AS "Score_1", "ADB_Model_7"."Proba_1" AS "Proba_1", "ADB_Model_7"."Score_2" AS "Score_2", "ADB_Model_7"."Proba_2" AS "Proba_2", "ADB_Model_7"."Score_3" AS "Score_3", "ADB_Model_7"."Proba_3" AS "Proba_3", "ADB_Model_7"."Score_4" AS "Score_4", "ADB_Model_7"."Proba_4" AS "Proba_4", "ADB_Model_7"."Score_5" AS "Score_5", "ADB_Model_7"."Proba_5" AS "Proba_5", "ADB_Model_7"."Score_6" AS "Score_6", "ADB_Model_7"."Proba_6" AS "Proba_6", "ADB_Model_7"."Score_7" AS "Score_7", "ADB_Model_7"."Proba_7" AS "Proba_7", "ADB_Model_7"."Score_8" AS "Score_8", "ADB_Model_7"."Proba_8" AS "Proba_8", "ADB_Model_7"."Score_9" AS "Score_9", "ADB_Model_7"."Proba_9" AS "Proba_9" 
FROM "ADB_Model_7" UNION ALL SELECT "ADB_Model_8"."KEY" AS "KEY", "ADB_Model_8"."Score_0" AS "Score_0", "ADB_Model_8"."Proba_0" AS "Proba_0", "ADB_Model_8"."Score_1" AS "Score_1", "ADB_Model_8"."Proba_1" AS "Proba_1", "ADB_Model_8"."Score_2" AS "Score_2", "ADB_Model_8"."Proba_2" AS "Proba_2", "ADB_Model_8"."Score_3" AS "Score_3", "ADB_Model_8"."Proba_3" AS "Proba_3", "ADB_Model_8"."Score_4" AS "Score_4", "ADB_Model_8"."Proba_4" AS "Proba_4", "ADB_Model_8"."Score_5" AS "Score_5", "ADB_Model_8"."Proba_5" AS "Proba_5", "ADB_Model_8"."Score_6" AS "Score_6", "ADB_Model_8"."Proba_6" AS "Proba_6", "ADB_Model_8"."Score_7" AS "Score_7", "ADB_Model_8"."Proba_7" AS "Proba_7", "ADB_Model_8"."Score_8" AS "Score_8", "ADB_Model_8"."Proba_8" AS "Proba_8", "ADB_Model_8"."Score_9" AS "Score_9", "ADB_Model_8"."Proba_9" AS "Proba_9" 
FROM "ADB_Model_8" UNION ALL SELECT "ADB_Model_9"."KEY" AS "KEY", "ADB_Model_9"."Score_0" AS "Score_0", "ADB_Model_9"."Proba_0" AS "Proba_0", "ADB_Model_9"."Score_1" AS "Score_1", "ADB_Model_9"."Proba_1" AS "Proba_1", "ADB_Model_9"."Score_2" AS "Score_2", "ADB_Model_9"."Proba_2" AS "Proba_2", "ADB_Model_9"."Score_3" AS "Score_3", "ADB_Model_9"."Proba_3" AS "Proba_3", "ADB_Model_9"."Score_4" AS "Score_4", "ADB_Model_9"."Proba_4" AS "Proba_4", "ADB_Model_9"."Score_5" AS "Score_5", "ADB_Model_9"."Proba_5" AS "Proba_5", "ADB_Model_9"."Score_6" AS "Score_6", "ADB_Model_9"."Proba_6" AS "Proba_6", "ADB_Model_9"."Score_7" AS "Score_7", "ADB_Model_9"."Proba_7" AS "Proba_7", "ADB_Model_9"."Score_8" AS "Score_8", "ADB_Model_9"."Proba_8" AS "Proba_8", "ADB_Model_9"."Score_9" AS "Score_9", "ADB_Model_9"."Proba_9" AS "Proba_9" 
FROM "ADB_Model_9") "ADB_esu_0") "ADB_B0") "U"

-- Code For temporary table 3644_CODEGEN_5EEF15_ADB_B1 part 1. Create 


CREATE GLOBAL TEMPORARY TABLE "3644_CODEGEN_5EEF15_ADB_B1" (
	"KEY" NUMBER(19), 
	"Score_0" BINARY_DOUBLE, 
	"Proba_0" BINARY_DOUBLE, 
	"Score_1" BINARY_DOUBLE, 
	"Proba_1" BINARY_DOUBLE, 
	"Score_2" BINARY_DOUBLE, 
	"Proba_2" BINARY_DOUBLE, 
	"Score_3" BINARY_DOUBLE, 
	"Proba_3" BINARY_DOUBLE, 
	"Score_4" BINARY_DOUBLE, 
	"Proba_4" BINARY_DOUBLE, 
	"Score_5" BINARY_DOUBLE, 
	"Proba_5" BINARY_DOUBLE, 
	"Score_6" BINARY_DOUBLE, 
	"Proba_6" BINARY_DOUBLE, 
	"Score_7" BINARY_DOUBLE, 
	"Proba_7" BINARY_DOUBLE, 
	"Score_8" BINARY_DOUBLE, 
	"Proba_8" BINARY_DOUBLE, 
	"Score_9" BINARY_DOUBLE, 
	"Proba_9" BINARY_DOUBLE
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table 3644_CODEGEN_5EEF15_ADB_B1 part 2. Populate

INSERT INTO "3644_CODEGEN_5EEF15_ADB_B1" ("KEY", "Score_0", "Proba_0", "Score_1", "Proba_1", "Score_2", "Proba_2", "Score_3", "Proba_3", "Score_4", "Proba_4", "Score_5", "Proba_5", "Score_6", "Proba_6", "Score_7", "Proba_7", "Score_8", "Proba_8", "Score_9", "Proba_9") SELECT "U"."KEY", "U"."Score_0", "U"."Proba_0", "U"."Score_1", "U"."Proba_1", "U"."Score_2", "U"."Proba_2", "U"."Score_3", "U"."Proba_3", "U"."Score_4", "U"."Proba_4", "U"."Score_5", "U"."Proba_5", "U"."Score_6", "U"."Proba_6", "U"."Score_7", "U"."Proba_7", "U"."Score_8", "U"."Proba_8", "U"."Score_9", "U"."Proba_9" 
FROM (WITH "DT_node_lookup_10" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_30 <= -1.555469036102295) THEN 1 ELSE 2 END AS node_id_2 
FROM "DEGEN_YN11LY_ADS_SCA_2_OUT" "ADS_sca_2_OUT"), 
"DT_node_data_10" AS 
(SELECT "Values".nid AS nid, CAST("Values"."P_0" AS BINARY_DOUBLE) AS "P_0", CAST("Values"."P_1" AS BINARY_DOUBLE) AS "P_1", CAST("Values"."P_2" AS BINARY_DOUBLE) AS "P_2", CAST("Values"."P_3" AS BINARY_DOUBLE) AS "P_3", CAST("Values"."P_4" AS BINARY_DOUBLE) AS "P_4", CAST("Values"."P_5" AS BINARY_DOUBLE) AS "P_5", CAST("Values"."P_6" AS BINARY_DOUBLE) AS "P_6", CAST("Values"."P_7" AS BINARY_DOUBLE) AS "P_7", CAST("Values"."P_8" AS BINARY_DOUBLE) AS "P_8", CAST("Values"."P_9" AS BINARY_DOUBLE) AS "P_9", CAST("Values"."D" AS BINARY_DOUBLE) AS "D", CAST("Values"."DP" AS BINARY_DOUBLE) AS "DP" 
FROM (SELECT 1 AS nid, 0.9969151845069867 AS "P_0", 0.00038560209396753614 AS "P_1", 0.000385601221613628 AS "P_2", 0.0003856021052861029 AS "P_3", 0.00038560166439533455 AS "P_4", 0.0003856021040041488 AS "P_5", 0.0003856021044928512 AS "P_6", 0.00038560209396753804 AS "P_7", 0.0 AS "P_8", 0.00038560210528610283 AS "P_9", 0 AS "D", 0.9969151845069867 AS "DP" FROM DUAL UNION ALL SELECT 2 AS nid, 9.604320973220276e-10 AS "P_0", 0.11110633334901078 AS "P_1", 0.11110633440670417 AS "P_2", 0.11110633430818079 AS "P_3", 0.1111063343573373 AS "P_4", 0.11110633430832378 AS "P_5", 0.11110633430826955 AS "P_6", 0.1111063333490108 AS "P_7", 0.11114932634454995 AS "P_8", 0.1111063343081807 AS "P_9", 8 AS "D", 0.11114932634454995 AS "DP" FROM DUAL) "Values"), 
"DT_Output_10" AS 
(SELECT "DT_node_lookup_10"."KEY" AS "KEY", "DT_node_lookup_10".node_id_2 AS node_id_2, "DT_node_data_10".nid AS nid, "DT_node_data_10"."P_0" AS "P_0", "DT_node_data_10"."P_1" AS "P_1", "DT_node_data_10"."P_2" AS "P_2", "DT_node_data_10"."P_3" AS "P_3", "DT_node_data_10"."P_4" AS "P_4", "DT_node_data_10"."P_5" AS "P_5", "DT_node_data_10"."P_6" AS "P_6", "DT_node_data_10"."P_7" AS "P_7", "DT_node_data_10"."P_8" AS "P_8", "DT_node_data_10"."P_9" AS "P_9", "DT_node_data_10"."D" AS "D", "DT_node_data_10"."DP" AS "DP" 
FROM "DT_node_lookup_10" LEFT OUTER JOIN "DT_node_data_10" ON "DT_node_lookup_10".node_id_2 = "DT_node_data_10".nid), 
"ADB_Model_10" AS 
(SELECT "DT_Output_10"."KEY" AS "KEY", (9.0 * (CASE WHEN ("DT_Output_10"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_0" IS NULL OR "DT_Output_10"."P_0" > 0.0) THEN ln("DT_Output_10"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_10"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_0" IS NULL OR "DT_Output_10"."P_0" > 0.0) THEN ln("DT_Output_10"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_1" IS NULL OR "DT_Output_10"."P_1" > 0.0) THEN ln("DT_Output_10"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_2" IS NULL OR "DT_Output_10"."P_2" > 0.0) THEN ln("DT_Output_10"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_3" IS NULL OR "DT_Output_10"."P_3" > 0.0) THEN ln("DT_Output_10"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_4" IS NULL OR "DT_Output_10"."P_4" > 0.0) THEN ln("DT_Output_10"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_5" IS NULL OR "DT_Output_10"."P_5" > 0.0) THEN ln("DT_Output_10"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_6" IS NULL OR "DT_Output_10"."P_6" > 0.0) THEN ln("DT_Output_10"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_7" IS NULL OR "DT_Output_10"."P_7" > 0.0) THEN ln("DT_Output_10"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_8" IS NULL OR "DT_Output_10"."P_8" > 0.0) THEN ln("DT_Output_10"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_9" IS NULL OR "DT_Output_10"."P_9" > 0.0) THEN ln("DT_Output_10"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_0", 9.0 * (CASE WHEN ("DT_Output_10"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_0" IS NULL OR "DT_Output_10"."P_0" > 0.0) THEN ln("DT_Output_10"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_10"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_0" IS NULL OR "DT_Output_10"."P_0" > 0.0) THEN ln("DT_Output_10"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_1" IS NULL OR "DT_Output_10"."P_1" > 0.0) THEN ln("DT_Output_10"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_2" IS NULL OR "DT_Output_10"."P_2" > 0.0) THEN ln("DT_Output_10"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_3" IS NULL OR "DT_Output_10"."P_3" > 0.0) THEN ln("DT_Output_10"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_4" IS NULL OR "DT_Output_10"."P_4" > 0.0) THEN ln("DT_Output_10"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_5" IS NULL OR "DT_Output_10"."P_5" > 0.0) THEN ln("DT_Output_10"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_6" IS NULL OR "DT_Output_10"."P_6" > 0.0) THEN ln("DT_Output_10"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_7" IS NULL OR "DT_Output_10"."P_7" > 0.0) THEN ln("DT_Output_10"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_8" IS NULL OR "DT_Output_10"."P_8" > 0.0) THEN ln("DT_Output_10"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_9" IS NULL OR "DT_Output_10"."P_9" > 0.0) THEN ln("DT_Output_10"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_0", (9.0 * (CASE WHEN ("DT_Output_10"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_1" IS NULL OR "DT_Output_10"."P_1" > 0.0) THEN ln("DT_Output_10"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_10"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_0" IS NULL OR "DT_Output_10"."P_0" > 0.0) THEN ln("DT_Output_10"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_1" IS NULL OR "DT_Output_10"."P_1" > 0.0) THEN ln("DT_Output_10"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_2" IS NULL OR "DT_Output_10"."P_2" > 0.0) THEN ln("DT_Output_10"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_3" IS NULL OR "DT_Output_10"."P_3" > 0.0) THEN ln("DT_Output_10"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_4" IS NULL OR "DT_Output_10"."P_4" > 0.0) THEN ln("DT_Output_10"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_5" IS NULL OR "DT_Output_10"."P_5" > 0.0) THEN ln("DT_Output_10"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_6" IS NULL OR "DT_Output_10"."P_6" > 0.0) THEN ln("DT_Output_10"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_7" IS NULL OR "DT_Output_10"."P_7" > 0.0) THEN ln("DT_Output_10"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_8" IS NULL OR "DT_Output_10"."P_8" > 0.0) THEN ln("DT_Output_10"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_9" IS NULL OR "DT_Output_10"."P_9" > 0.0) THEN ln("DT_Output_10"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_1", 9.0 * (CASE WHEN ("DT_Output_10"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_1" IS NULL OR "DT_Output_10"."P_1" > 0.0) THEN ln("DT_Output_10"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_10"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_0" IS NULL OR "DT_Output_10"."P_0" > 0.0) THEN ln("DT_Output_10"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_1" IS NULL OR "DT_Output_10"."P_1" > 0.0) THEN ln("DT_Output_10"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_2" IS NULL OR "DT_Output_10"."P_2" > 0.0) THEN ln("DT_Output_10"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_3" IS NULL OR "DT_Output_10"."P_3" > 0.0) THEN ln("DT_Output_10"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_4" IS NULL OR "DT_Output_10"."P_4" > 0.0) THEN ln("DT_Output_10"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_5" IS NULL OR "DT_Output_10"."P_5" > 0.0) THEN ln("DT_Output_10"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_6" IS NULL OR "DT_Output_10"."P_6" > 0.0) THEN ln("DT_Output_10"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_7" IS NULL OR "DT_Output_10"."P_7" > 0.0) THEN ln("DT_Output_10"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_8" IS NULL OR "DT_Output_10"."P_8" > 0.0) THEN ln("DT_Output_10"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_9" IS NULL OR "DT_Output_10"."P_9" > 0.0) THEN ln("DT_Output_10"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_1", (9.0 * (CASE WHEN ("DT_Output_10"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_2" IS NULL OR "DT_Output_10"."P_2" > 0.0) THEN ln("DT_Output_10"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_10"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_0" IS NULL OR "DT_Output_10"."P_0" > 0.0) THEN ln("DT_Output_10"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_1" IS NULL OR "DT_Output_10"."P_1" > 0.0) THEN ln("DT_Output_10"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_2" IS NULL OR "DT_Output_10"."P_2" > 0.0) THEN ln("DT_Output_10"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_3" IS NULL OR "DT_Output_10"."P_3" > 0.0) THEN ln("DT_Output_10"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_4" IS NULL OR "DT_Output_10"."P_4" > 0.0) THEN ln("DT_Output_10"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_5" IS NULL OR "DT_Output_10"."P_5" > 0.0) THEN ln("DT_Output_10"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_6" IS NULL OR "DT_Output_10"."P_6" > 0.0) THEN ln("DT_Output_10"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_7" IS NULL OR "DT_Output_10"."P_7" > 0.0) THEN ln("DT_Output_10"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_8" IS NULL OR "DT_Output_10"."P_8" > 0.0) THEN ln("DT_Output_10"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_9" IS NULL OR "DT_Output_10"."P_9" > 0.0) THEN ln("DT_Output_10"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_2", 9.0 * (CASE WHEN ("DT_Output_10"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_2" IS NULL OR "DT_Output_10"."P_2" > 0.0) THEN ln("DT_Output_10"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_10"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_0" IS NULL OR "DT_Output_10"."P_0" > 0.0) THEN ln("DT_Output_10"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_1" IS NULL OR "DT_Output_10"."P_1" > 0.0) THEN ln("DT_Output_10"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_2" IS NULL OR "DT_Output_10"."P_2" > 0.0) THEN ln("DT_Output_10"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_3" IS NULL OR "DT_Output_10"."P_3" > 0.0) THEN ln("DT_Output_10"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_4" IS NULL OR "DT_Output_10"."P_4" > 0.0) THEN ln("DT_Output_10"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_5" IS NULL OR "DT_Output_10"."P_5" > 0.0) THEN ln("DT_Output_10"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_6" IS NULL OR "DT_Output_10"."P_6" > 0.0) THEN ln("DT_Output_10"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_7" IS NULL OR "DT_Output_10"."P_7" > 0.0) THEN ln("DT_Output_10"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_8" IS NULL OR "DT_Output_10"."P_8" > 0.0) THEN ln("DT_Output_10"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_9" IS NULL OR "DT_Output_10"."P_9" > 0.0) THEN ln("DT_Output_10"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_2", (9.0 * (CASE WHEN ("DT_Output_10"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_3" IS NULL OR "DT_Output_10"."P_3" > 0.0) THEN ln("DT_Output_10"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_10"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_0" IS NULL OR "DT_Output_10"."P_0" > 0.0) THEN ln("DT_Output_10"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_1" IS NULL OR "DT_Output_10"."P_1" > 0.0) THEN ln("DT_Output_10"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_2" IS NULL OR "DT_Output_10"."P_2" > 0.0) THEN ln("DT_Output_10"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_3" IS NULL OR "DT_Output_10"."P_3" > 0.0) THEN ln("DT_Output_10"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_4" IS NULL OR "DT_Output_10"."P_4" > 0.0) THEN ln("DT_Output_10"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_5" IS NULL OR "DT_Output_10"."P_5" > 0.0) THEN ln("DT_Output_10"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_6" IS NULL OR "DT_Output_10"."P_6" > 0.0) THEN ln("DT_Output_10"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_7" IS NULL OR "DT_Output_10"."P_7" > 0.0) THEN ln("DT_Output_10"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_8" IS NULL OR "DT_Output_10"."P_8" > 0.0) THEN ln("DT_Output_10"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_9" IS NULL OR "DT_Output_10"."P_9" > 0.0) THEN ln("DT_Output_10"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_3", 9.0 * (CASE WHEN ("DT_Output_10"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_3" IS NULL OR "DT_Output_10"."P_3" > 0.0) THEN ln("DT_Output_10"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_10"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_0" IS NULL OR "DT_Output_10"."P_0" > 0.0) THEN ln("DT_Output_10"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_1" IS NULL OR "DT_Output_10"."P_1" > 0.0) THEN ln("DT_Output_10"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_2" IS NULL OR "DT_Output_10"."P_2" > 0.0) THEN ln("DT_Output_10"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_3" IS NULL OR "DT_Output_10"."P_3" > 0.0) THEN ln("DT_Output_10"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_4" IS NULL OR "DT_Output_10"."P_4" > 0.0) THEN ln("DT_Output_10"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_5" IS NULL OR "DT_Output_10"."P_5" > 0.0) THEN ln("DT_Output_10"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_6" IS NULL OR "DT_Output_10"."P_6" > 0.0) THEN ln("DT_Output_10"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_7" IS NULL OR "DT_Output_10"."P_7" > 0.0) THEN ln("DT_Output_10"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_8" IS NULL OR "DT_Output_10"."P_8" > 0.0) THEN ln("DT_Output_10"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_9" IS NULL OR "DT_Output_10"."P_9" > 0.0) THEN ln("DT_Output_10"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_3", (9.0 * (CASE WHEN ("DT_Output_10"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_4" IS NULL OR "DT_Output_10"."P_4" > 0.0) THEN ln("DT_Output_10"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_10"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_0" IS NULL OR "DT_Output_10"."P_0" > 0.0) THEN ln("DT_Output_10"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_1" IS NULL OR "DT_Output_10"."P_1" > 0.0) THEN ln("DT_Output_10"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_2" IS NULL OR "DT_Output_10"."P_2" > 0.0) THEN ln("DT_Output_10"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_3" IS NULL OR "DT_Output_10"."P_3" > 0.0) THEN ln("DT_Output_10"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_4" IS NULL OR "DT_Output_10"."P_4" > 0.0) THEN ln("DT_Output_10"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_5" IS NULL OR "DT_Output_10"."P_5" > 0.0) THEN ln("DT_Output_10"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_6" IS NULL OR "DT_Output_10"."P_6" > 0.0) THEN ln("DT_Output_10"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_7" IS NULL OR "DT_Output_10"."P_7" > 0.0) THEN ln("DT_Output_10"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_8" IS NULL OR "DT_Output_10"."P_8" > 0.0) THEN ln("DT_Output_10"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_9" IS NULL OR "DT_Output_10"."P_9" > 0.0) THEN ln("DT_Output_10"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_4", 9.0 * (CASE WHEN ("DT_Output_10"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_4" IS NULL OR "DT_Output_10"."P_4" > 0.0) THEN ln("DT_Output_10"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_10"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_0" IS NULL OR "DT_Output_10"."P_0" > 0.0) THEN ln("DT_Output_10"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_1" IS NULL OR "DT_Output_10"."P_1" > 0.0) THEN ln("DT_Output_10"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_2" IS NULL OR "DT_Output_10"."P_2" > 0.0) THEN ln("DT_Output_10"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_3" IS NULL OR "DT_Output_10"."P_3" > 0.0) THEN ln("DT_Output_10"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_4" IS NULL OR "DT_Output_10"."P_4" > 0.0) THEN ln("DT_Output_10"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_5" IS NULL OR "DT_Output_10"."P_5" > 0.0) THEN ln("DT_Output_10"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_6" IS NULL OR "DT_Output_10"."P_6" > 0.0) THEN ln("DT_Output_10"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_7" IS NULL OR "DT_Output_10"."P_7" > 0.0) THEN ln("DT_Output_10"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_8" IS NULL OR "DT_Output_10"."P_8" > 0.0) THEN ln("DT_Output_10"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_9" IS NULL OR "DT_Output_10"."P_9" > 0.0) THEN ln("DT_Output_10"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_4", (9.0 * (CASE WHEN ("DT_Output_10"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_5" IS NULL OR "DT_Output_10"."P_5" > 0.0) THEN ln("DT_Output_10"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_10"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_0" IS NULL OR "DT_Output_10"."P_0" > 0.0) THEN ln("DT_Output_10"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_1" IS NULL OR "DT_Output_10"."P_1" > 0.0) THEN ln("DT_Output_10"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_2" IS NULL OR "DT_Output_10"."P_2" > 0.0) THEN ln("DT_Output_10"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_3" IS NULL OR "DT_Output_10"."P_3" > 0.0) THEN ln("DT_Output_10"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_4" IS NULL OR "DT_Output_10"."P_4" > 0.0) THEN ln("DT_Output_10"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_5" IS NULL OR "DT_Output_10"."P_5" > 0.0) THEN ln("DT_Output_10"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_6" IS NULL OR "DT_Output_10"."P_6" > 0.0) THEN ln("DT_Output_10"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_7" IS NULL OR "DT_Output_10"."P_7" > 0.0) THEN ln("DT_Output_10"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_8" IS NULL OR "DT_Output_10"."P_8" > 0.0) THEN ln("DT_Output_10"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_9" IS NULL OR "DT_Output_10"."P_9" > 0.0) THEN ln("DT_Output_10"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_5", 9.0 * (CASE WHEN ("DT_Output_10"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_5" IS NULL OR "DT_Output_10"."P_5" > 0.0) THEN ln("DT_Output_10"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_10"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_0" IS NULL OR "DT_Output_10"."P_0" > 0.0) THEN ln("DT_Output_10"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_1" IS NULL OR "DT_Output_10"."P_1" > 0.0) THEN ln("DT_Output_10"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_2" IS NULL OR "DT_Output_10"."P_2" > 0.0) THEN ln("DT_Output_10"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_3" IS NULL OR "DT_Output_10"."P_3" > 0.0) THEN ln("DT_Output_10"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_4" IS NULL OR "DT_Output_10"."P_4" > 0.0) THEN ln("DT_Output_10"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_5" IS NULL OR "DT_Output_10"."P_5" > 0.0) THEN ln("DT_Output_10"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_6" IS NULL OR "DT_Output_10"."P_6" > 0.0) THEN ln("DT_Output_10"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_7" IS NULL OR "DT_Output_10"."P_7" > 0.0) THEN ln("DT_Output_10"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_8" IS NULL OR "DT_Output_10"."P_8" > 0.0) THEN ln("DT_Output_10"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_9" IS NULL OR "DT_Output_10"."P_9" > 0.0) THEN ln("DT_Output_10"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_5", (9.0 * (CASE WHEN ("DT_Output_10"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_6" IS NULL OR "DT_Output_10"."P_6" > 0.0) THEN ln("DT_Output_10"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_10"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_0" IS NULL OR "DT_Output_10"."P_0" > 0.0) THEN ln("DT_Output_10"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_1" IS NULL OR "DT_Output_10"."P_1" > 0.0) THEN ln("DT_Output_10"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_2" IS NULL OR "DT_Output_10"."P_2" > 0.0) THEN ln("DT_Output_10"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_3" IS NULL OR "DT_Output_10"."P_3" > 0.0) THEN ln("DT_Output_10"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_4" IS NULL OR "DT_Output_10"."P_4" > 0.0) THEN ln("DT_Output_10"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_5" IS NULL OR "DT_Output_10"."P_5" > 0.0) THEN ln("DT_Output_10"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_6" IS NULL OR "DT_Output_10"."P_6" > 0.0) THEN ln("DT_Output_10"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_7" IS NULL OR "DT_Output_10"."P_7" > 0.0) THEN ln("DT_Output_10"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_8" IS NULL OR "DT_Output_10"."P_8" > 0.0) THEN ln("DT_Output_10"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_9" IS NULL OR "DT_Output_10"."P_9" > 0.0) THEN ln("DT_Output_10"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_6", 9.0 * (CASE WHEN ("DT_Output_10"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_6" IS NULL OR "DT_Output_10"."P_6" > 0.0) THEN ln("DT_Output_10"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_10"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_0" IS NULL OR "DT_Output_10"."P_0" > 0.0) THEN ln("DT_Output_10"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_1" IS NULL OR "DT_Output_10"."P_1" > 0.0) THEN ln("DT_Output_10"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_2" IS NULL OR "DT_Output_10"."P_2" > 0.0) THEN ln("DT_Output_10"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_3" IS NULL OR "DT_Output_10"."P_3" > 0.0) THEN ln("DT_Output_10"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_4" IS NULL OR "DT_Output_10"."P_4" > 0.0) THEN ln("DT_Output_10"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_5" IS NULL OR "DT_Output_10"."P_5" > 0.0) THEN ln("DT_Output_10"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_6" IS NULL OR "DT_Output_10"."P_6" > 0.0) THEN ln("DT_Output_10"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_7" IS NULL OR "DT_Output_10"."P_7" > 0.0) THEN ln("DT_Output_10"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_8" IS NULL OR "DT_Output_10"."P_8" > 0.0) THEN ln("DT_Output_10"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_9" IS NULL OR "DT_Output_10"."P_9" > 0.0) THEN ln("DT_Output_10"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_6", (9.0 * (CASE WHEN ("DT_Output_10"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_7" IS NULL OR "DT_Output_10"."P_7" > 0.0) THEN ln("DT_Output_10"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_10"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_0" IS NULL OR "DT_Output_10"."P_0" > 0.0) THEN ln("DT_Output_10"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_1" IS NULL OR "DT_Output_10"."P_1" > 0.0) THEN ln("DT_Output_10"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_2" IS NULL OR "DT_Output_10"."P_2" > 0.0) THEN ln("DT_Output_10"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_3" IS NULL OR "DT_Output_10"."P_3" > 0.0) THEN ln("DT_Output_10"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_4" IS NULL OR "DT_Output_10"."P_4" > 0.0) THEN ln("DT_Output_10"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_5" IS NULL OR "DT_Output_10"."P_5" > 0.0) THEN ln("DT_Output_10"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_6" IS NULL OR "DT_Output_10"."P_6" > 0.0) THEN ln("DT_Output_10"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_7" IS NULL OR "DT_Output_10"."P_7" > 0.0) THEN ln("DT_Output_10"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_8" IS NULL OR "DT_Output_10"."P_8" > 0.0) THEN ln("DT_Output_10"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_9" IS NULL OR "DT_Output_10"."P_9" > 0.0) THEN ln("DT_Output_10"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_7", 9.0 * (CASE WHEN ("DT_Output_10"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_7" IS NULL OR "DT_Output_10"."P_7" > 0.0) THEN ln("DT_Output_10"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_10"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_0" IS NULL OR "DT_Output_10"."P_0" > 0.0) THEN ln("DT_Output_10"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_1" IS NULL OR "DT_Output_10"."P_1" > 0.0) THEN ln("DT_Output_10"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_2" IS NULL OR "DT_Output_10"."P_2" > 0.0) THEN ln("DT_Output_10"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_3" IS NULL OR "DT_Output_10"."P_3" > 0.0) THEN ln("DT_Output_10"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_4" IS NULL OR "DT_Output_10"."P_4" > 0.0) THEN ln("DT_Output_10"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_5" IS NULL OR "DT_Output_10"."P_5" > 0.0) THEN ln("DT_Output_10"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_6" IS NULL OR "DT_Output_10"."P_6" > 0.0) THEN ln("DT_Output_10"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_7" IS NULL OR "DT_Output_10"."P_7" > 0.0) THEN ln("DT_Output_10"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_8" IS NULL OR "DT_Output_10"."P_8" > 0.0) THEN ln("DT_Output_10"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_9" IS NULL OR "DT_Output_10"."P_9" > 0.0) THEN ln("DT_Output_10"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_7", (9.0 * (CASE WHEN ("DT_Output_10"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_8" IS NULL OR "DT_Output_10"."P_8" > 0.0) THEN ln("DT_Output_10"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_10"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_0" IS NULL OR "DT_Output_10"."P_0" > 0.0) THEN ln("DT_Output_10"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_1" IS NULL OR "DT_Output_10"."P_1" > 0.0) THEN ln("DT_Output_10"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_2" IS NULL OR "DT_Output_10"."P_2" > 0.0) THEN ln("DT_Output_10"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_3" IS NULL OR "DT_Output_10"."P_3" > 0.0) THEN ln("DT_Output_10"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_4" IS NULL OR "DT_Output_10"."P_4" > 0.0) THEN ln("DT_Output_10"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_5" IS NULL OR "DT_Output_10"."P_5" > 0.0) THEN ln("DT_Output_10"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_6" IS NULL OR "DT_Output_10"."P_6" > 0.0) THEN ln("DT_Output_10"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_7" IS NULL OR "DT_Output_10"."P_7" > 0.0) THEN ln("DT_Output_10"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_8" IS NULL OR "DT_Output_10"."P_8" > 0.0) THEN ln("DT_Output_10"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_9" IS NULL OR "DT_Output_10"."P_9" > 0.0) THEN ln("DT_Output_10"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_8", 9.0 * (CASE WHEN ("DT_Output_10"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_8" IS NULL OR "DT_Output_10"."P_8" > 0.0) THEN ln("DT_Output_10"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_10"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_0" IS NULL OR "DT_Output_10"."P_0" > 0.0) THEN ln("DT_Output_10"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_1" IS NULL OR "DT_Output_10"."P_1" > 0.0) THEN ln("DT_Output_10"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_2" IS NULL OR "DT_Output_10"."P_2" > 0.0) THEN ln("DT_Output_10"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_3" IS NULL OR "DT_Output_10"."P_3" > 0.0) THEN ln("DT_Output_10"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_4" IS NULL OR "DT_Output_10"."P_4" > 0.0) THEN ln("DT_Output_10"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_5" IS NULL OR "DT_Output_10"."P_5" > 0.0) THEN ln("DT_Output_10"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_6" IS NULL OR "DT_Output_10"."P_6" > 0.0) THEN ln("DT_Output_10"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_7" IS NULL OR "DT_Output_10"."P_7" > 0.0) THEN ln("DT_Output_10"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_8" IS NULL OR "DT_Output_10"."P_8" > 0.0) THEN ln("DT_Output_10"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_9" IS NULL OR "DT_Output_10"."P_9" > 0.0) THEN ln("DT_Output_10"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_8", (9.0 * (CASE WHEN ("DT_Output_10"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_9" IS NULL OR "DT_Output_10"."P_9" > 0.0) THEN ln("DT_Output_10"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_10"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_0" IS NULL OR "DT_Output_10"."P_0" > 0.0) THEN ln("DT_Output_10"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_1" IS NULL OR "DT_Output_10"."P_1" > 0.0) THEN ln("DT_Output_10"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_2" IS NULL OR "DT_Output_10"."P_2" > 0.0) THEN ln("DT_Output_10"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_3" IS NULL OR "DT_Output_10"."P_3" > 0.0) THEN ln("DT_Output_10"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_4" IS NULL OR "DT_Output_10"."P_4" > 0.0) THEN ln("DT_Output_10"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_5" IS NULL OR "DT_Output_10"."P_5" > 0.0) THEN ln("DT_Output_10"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_6" IS NULL OR "DT_Output_10"."P_6" > 0.0) THEN ln("DT_Output_10"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_7" IS NULL OR "DT_Output_10"."P_7" > 0.0) THEN ln("DT_Output_10"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_8" IS NULL OR "DT_Output_10"."P_8" > 0.0) THEN ln("DT_Output_10"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_9" IS NULL OR "DT_Output_10"."P_9" > 0.0) THEN ln("DT_Output_10"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_9", 9.0 * (CASE WHEN ("DT_Output_10"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_9" IS NULL OR "DT_Output_10"."P_9" > 0.0) THEN ln("DT_Output_10"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_10"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_0" IS NULL OR "DT_Output_10"."P_0" > 0.0) THEN ln("DT_Output_10"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_1" IS NULL OR "DT_Output_10"."P_1" > 0.0) THEN ln("DT_Output_10"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_2" IS NULL OR "DT_Output_10"."P_2" > 0.0) THEN ln("DT_Output_10"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_3" IS NULL OR "DT_Output_10"."P_3" > 0.0) THEN ln("DT_Output_10"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_4" IS NULL OR "DT_Output_10"."P_4" > 0.0) THEN ln("DT_Output_10"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_5" IS NULL OR "DT_Output_10"."P_5" > 0.0) THEN ln("DT_Output_10"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_6" IS NULL OR "DT_Output_10"."P_6" > 0.0) THEN ln("DT_Output_10"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_7" IS NULL OR "DT_Output_10"."P_7" > 0.0) THEN ln("DT_Output_10"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_8" IS NULL OR "DT_Output_10"."P_8" > 0.0) THEN ln("DT_Output_10"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_10"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_9" IS NULL OR "DT_Output_10"."P_9" > 0.0) THEN ln("DT_Output_10"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_9" 
FROM "DT_Output_10"), 
"DT_node_lookup_11" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_38 <= -1.6508052349090576) THEN 1 ELSE 2 END AS node_id_2 
FROM "DEGEN_YN11LY_ADS_SCA_2_OUT" "ADS_sca_2_OUT"), 
"DT_node_data_11" AS 
(SELECT "Values".nid AS nid, CAST("Values"."P_0" AS BINARY_DOUBLE) AS "P_0", CAST("Values"."P_1" AS BINARY_DOUBLE) AS "P_1", CAST("Values"."P_2" AS BINARY_DOUBLE) AS "P_2", CAST("Values"."P_3" AS BINARY_DOUBLE) AS "P_3", CAST("Values"."P_4" AS BINARY_DOUBLE) AS "P_4", CAST("Values"."P_5" AS BINARY_DOUBLE) AS "P_5", CAST("Values"."P_6" AS BINARY_DOUBLE) AS "P_6", CAST("Values"."P_7" AS BINARY_DOUBLE) AS "P_7", CAST("Values"."P_8" AS BINARY_DOUBLE) AS "P_8", CAST("Values"."P_9" AS BINARY_DOUBLE) AS "P_9", CAST("Values"."D" AS BINARY_DOUBLE) AS "D", CAST("Values"."DP" AS BINARY_DOUBLE) AS "DP" 
FROM (SELECT 1 AS nid, 0.9999999395852084 AS "P_0", 0.0 AS "P_1", 8.582899279155048e-09 AS "P_2", 8.644259981017227e-09 AS "P_3", 8.614076196709177e-09 AS "P_4", 8.644173417002526e-09 AS "P_5", 8.644206417400843e-09 AS "P_6", 0.0 AS "P_7", 8.640916421935884e-09 AS "P_8", 8.644259981017244e-09 AS "P_9", 0 AS "D", 0.9999999395852084 AS "DP" FROM DUAL UNION ALL SELECT 2 AS nid, 3.604607675984616e-05 AS "P_0", 0.11111111185673042 AS "P_1", 0.11111111090338482 AS "P_2", 0.11111111089656894 AS "P_3", 0.11111111089992153 AS "P_4", 0.1111111108965788 AS "P_5", 0.111111110896575 AS "P_6", 0.11111111185673106 AS "P_7", 0.11107506482018084 AS "P_8", 0.11111111089656885 AS "P_9", 7 AS "D", 0.11111111185673106 AS "DP" FROM DUAL) "Values"), 
"DT_Output_11" AS 
(SELECT "DT_node_lookup_11"."KEY" AS "KEY", "DT_node_lookup_11".node_id_2 AS node_id_2, "DT_node_data_11".nid AS nid, "DT_node_data_11"."P_0" AS "P_0", "DT_node_data_11"."P_1" AS "P_1", "DT_node_data_11"."P_2" AS "P_2", "DT_node_data_11"."P_3" AS "P_3", "DT_node_data_11"."P_4" AS "P_4", "DT_node_data_11"."P_5" AS "P_5", "DT_node_data_11"."P_6" AS "P_6", "DT_node_data_11"."P_7" AS "P_7", "DT_node_data_11"."P_8" AS "P_8", "DT_node_data_11"."P_9" AS "P_9", "DT_node_data_11"."D" AS "D", "DT_node_data_11"."DP" AS "DP" 
FROM "DT_node_lookup_11" LEFT OUTER JOIN "DT_node_data_11" ON "DT_node_lookup_11".node_id_2 = "DT_node_data_11".nid), 
"ADB_Model_11" AS 
(SELECT "DT_Output_11"."KEY" AS "KEY", (9.0 * (CASE WHEN ("DT_Output_11"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_0" IS NULL OR "DT_Output_11"."P_0" > 0.0) THEN ln("DT_Output_11"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_11"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_0" IS NULL OR "DT_Output_11"."P_0" > 0.0) THEN ln("DT_Output_11"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_1" IS NULL OR "DT_Output_11"."P_1" > 0.0) THEN ln("DT_Output_11"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_2" IS NULL OR "DT_Output_11"."P_2" > 0.0) THEN ln("DT_Output_11"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_3" IS NULL OR "DT_Output_11"."P_3" > 0.0) THEN ln("DT_Output_11"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_4" IS NULL OR "DT_Output_11"."P_4" > 0.0) THEN ln("DT_Output_11"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_5" IS NULL OR "DT_Output_11"."P_5" > 0.0) THEN ln("DT_Output_11"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_6" IS NULL OR "DT_Output_11"."P_6" > 0.0) THEN ln("DT_Output_11"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_7" IS NULL OR "DT_Output_11"."P_7" > 0.0) THEN ln("DT_Output_11"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_8" IS NULL OR "DT_Output_11"."P_8" > 0.0) THEN ln("DT_Output_11"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_9" IS NULL OR "DT_Output_11"."P_9" > 0.0) THEN ln("DT_Output_11"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_0", 9.0 * (CASE WHEN ("DT_Output_11"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_0" IS NULL OR "DT_Output_11"."P_0" > 0.0) THEN ln("DT_Output_11"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_11"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_0" IS NULL OR "DT_Output_11"."P_0" > 0.0) THEN ln("DT_Output_11"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_1" IS NULL OR "DT_Output_11"."P_1" > 0.0) THEN ln("DT_Output_11"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_2" IS NULL OR "DT_Output_11"."P_2" > 0.0) THEN ln("DT_Output_11"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_3" IS NULL OR "DT_Output_11"."P_3" > 0.0) THEN ln("DT_Output_11"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_4" IS NULL OR "DT_Output_11"."P_4" > 0.0) THEN ln("DT_Output_11"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_5" IS NULL OR "DT_Output_11"."P_5" > 0.0) THEN ln("DT_Output_11"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_6" IS NULL OR "DT_Output_11"."P_6" > 0.0) THEN ln("DT_Output_11"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_7" IS NULL OR "DT_Output_11"."P_7" > 0.0) THEN ln("DT_Output_11"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_8" IS NULL OR "DT_Output_11"."P_8" > 0.0) THEN ln("DT_Output_11"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_9" IS NULL OR "DT_Output_11"."P_9" > 0.0) THEN ln("DT_Output_11"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_0", (9.0 * (CASE WHEN ("DT_Output_11"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_1" IS NULL OR "DT_Output_11"."P_1" > 0.0) THEN ln("DT_Output_11"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_11"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_0" IS NULL OR "DT_Output_11"."P_0" > 0.0) THEN ln("DT_Output_11"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_1" IS NULL OR "DT_Output_11"."P_1" > 0.0) THEN ln("DT_Output_11"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_2" IS NULL OR "DT_Output_11"."P_2" > 0.0) THEN ln("DT_Output_11"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_3" IS NULL OR "DT_Output_11"."P_3" > 0.0) THEN ln("DT_Output_11"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_4" IS NULL OR "DT_Output_11"."P_4" > 0.0) THEN ln("DT_Output_11"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_5" IS NULL OR "DT_Output_11"."P_5" > 0.0) THEN ln("DT_Output_11"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_6" IS NULL OR "DT_Output_11"."P_6" > 0.0) THEN ln("DT_Output_11"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_7" IS NULL OR "DT_Output_11"."P_7" > 0.0) THEN ln("DT_Output_11"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_8" IS NULL OR "DT_Output_11"."P_8" > 0.0) THEN ln("DT_Output_11"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_9" IS NULL OR "DT_Output_11"."P_9" > 0.0) THEN ln("DT_Output_11"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_1", 9.0 * (CASE WHEN ("DT_Output_11"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_1" IS NULL OR "DT_Output_11"."P_1" > 0.0) THEN ln("DT_Output_11"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_11"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_0" IS NULL OR "DT_Output_11"."P_0" > 0.0) THEN ln("DT_Output_11"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_1" IS NULL OR "DT_Output_11"."P_1" > 0.0) THEN ln("DT_Output_11"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_2" IS NULL OR "DT_Output_11"."P_2" > 0.0) THEN ln("DT_Output_11"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_3" IS NULL OR "DT_Output_11"."P_3" > 0.0) THEN ln("DT_Output_11"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_4" IS NULL OR "DT_Output_11"."P_4" > 0.0) THEN ln("DT_Output_11"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_5" IS NULL OR "DT_Output_11"."P_5" > 0.0) THEN ln("DT_Output_11"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_6" IS NULL OR "DT_Output_11"."P_6" > 0.0) THEN ln("DT_Output_11"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_7" IS NULL OR "DT_Output_11"."P_7" > 0.0) THEN ln("DT_Output_11"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_8" IS NULL OR "DT_Output_11"."P_8" > 0.0) THEN ln("DT_Output_11"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_9" IS NULL OR "DT_Output_11"."P_9" > 0.0) THEN ln("DT_Output_11"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_1", (9.0 * (CASE WHEN ("DT_Output_11"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_2" IS NULL OR "DT_Output_11"."P_2" > 0.0) THEN ln("DT_Output_11"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_11"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_0" IS NULL OR "DT_Output_11"."P_0" > 0.0) THEN ln("DT_Output_11"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_1" IS NULL OR "DT_Output_11"."P_1" > 0.0) THEN ln("DT_Output_11"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_2" IS NULL OR "DT_Output_11"."P_2" > 0.0) THEN ln("DT_Output_11"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_3" IS NULL OR "DT_Output_11"."P_3" > 0.0) THEN ln("DT_Output_11"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_4" IS NULL OR "DT_Output_11"."P_4" > 0.0) THEN ln("DT_Output_11"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_5" IS NULL OR "DT_Output_11"."P_5" > 0.0) THEN ln("DT_Output_11"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_6" IS NULL OR "DT_Output_11"."P_6" > 0.0) THEN ln("DT_Output_11"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_7" IS NULL OR "DT_Output_11"."P_7" > 0.0) THEN ln("DT_Output_11"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_8" IS NULL OR "DT_Output_11"."P_8" > 0.0) THEN ln("DT_Output_11"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_9" IS NULL OR "DT_Output_11"."P_9" > 0.0) THEN ln("DT_Output_11"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_2", 9.0 * (CASE WHEN ("DT_Output_11"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_2" IS NULL OR "DT_Output_11"."P_2" > 0.0) THEN ln("DT_Output_11"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_11"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_0" IS NULL OR "DT_Output_11"."P_0" > 0.0) THEN ln("DT_Output_11"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_1" IS NULL OR "DT_Output_11"."P_1" > 0.0) THEN ln("DT_Output_11"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_2" IS NULL OR "DT_Output_11"."P_2" > 0.0) THEN ln("DT_Output_11"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_3" IS NULL OR "DT_Output_11"."P_3" > 0.0) THEN ln("DT_Output_11"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_4" IS NULL OR "DT_Output_11"."P_4" > 0.0) THEN ln("DT_Output_11"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_5" IS NULL OR "DT_Output_11"."P_5" > 0.0) THEN ln("DT_Output_11"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_6" IS NULL OR "DT_Output_11"."P_6" > 0.0) THEN ln("DT_Output_11"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_7" IS NULL OR "DT_Output_11"."P_7" > 0.0) THEN ln("DT_Output_11"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_8" IS NULL OR "DT_Output_11"."P_8" > 0.0) THEN ln("DT_Output_11"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_9" IS NULL OR "DT_Output_11"."P_9" > 0.0) THEN ln("DT_Output_11"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_2", (9.0 * (CASE WHEN ("DT_Output_11"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_3" IS NULL OR "DT_Output_11"."P_3" > 0.0) THEN ln("DT_Output_11"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_11"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_0" IS NULL OR "DT_Output_11"."P_0" > 0.0) THEN ln("DT_Output_11"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_1" IS NULL OR "DT_Output_11"."P_1" > 0.0) THEN ln("DT_Output_11"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_2" IS NULL OR "DT_Output_11"."P_2" > 0.0) THEN ln("DT_Output_11"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_3" IS NULL OR "DT_Output_11"."P_3" > 0.0) THEN ln("DT_Output_11"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_4" IS NULL OR "DT_Output_11"."P_4" > 0.0) THEN ln("DT_Output_11"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_5" IS NULL OR "DT_Output_11"."P_5" > 0.0) THEN ln("DT_Output_11"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_6" IS NULL OR "DT_Output_11"."P_6" > 0.0) THEN ln("DT_Output_11"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_7" IS NULL OR "DT_Output_11"."P_7" > 0.0) THEN ln("DT_Output_11"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_8" IS NULL OR "DT_Output_11"."P_8" > 0.0) THEN ln("DT_Output_11"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_9" IS NULL OR "DT_Output_11"."P_9" > 0.0) THEN ln("DT_Output_11"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_3", 9.0 * (CASE WHEN ("DT_Output_11"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_3" IS NULL OR "DT_Output_11"."P_3" > 0.0) THEN ln("DT_Output_11"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_11"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_0" IS NULL OR "DT_Output_11"."P_0" > 0.0) THEN ln("DT_Output_11"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_1" IS NULL OR "DT_Output_11"."P_1" > 0.0) THEN ln("DT_Output_11"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_2" IS NULL OR "DT_Output_11"."P_2" > 0.0) THEN ln("DT_Output_11"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_3" IS NULL OR "DT_Output_11"."P_3" > 0.0) THEN ln("DT_Output_11"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_4" IS NULL OR "DT_Output_11"."P_4" > 0.0) THEN ln("DT_Output_11"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_5" IS NULL OR "DT_Output_11"."P_5" > 0.0) THEN ln("DT_Output_11"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_6" IS NULL OR "DT_Output_11"."P_6" > 0.0) THEN ln("DT_Output_11"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_7" IS NULL OR "DT_Output_11"."P_7" > 0.0) THEN ln("DT_Output_11"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_8" IS NULL OR "DT_Output_11"."P_8" > 0.0) THEN ln("DT_Output_11"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_9" IS NULL OR "DT_Output_11"."P_9" > 0.0) THEN ln("DT_Output_11"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_3", (9.0 * (CASE WHEN ("DT_Output_11"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_4" IS NULL OR "DT_Output_11"."P_4" > 0.0) THEN ln("DT_Output_11"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_11"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_0" IS NULL OR "DT_Output_11"."P_0" > 0.0) THEN ln("DT_Output_11"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_1" IS NULL OR "DT_Output_11"."P_1" > 0.0) THEN ln("DT_Output_11"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_2" IS NULL OR "DT_Output_11"."P_2" > 0.0) THEN ln("DT_Output_11"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_3" IS NULL OR "DT_Output_11"."P_3" > 0.0) THEN ln("DT_Output_11"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_4" IS NULL OR "DT_Output_11"."P_4" > 0.0) THEN ln("DT_Output_11"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_5" IS NULL OR "DT_Output_11"."P_5" > 0.0) THEN ln("DT_Output_11"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_6" IS NULL OR "DT_Output_11"."P_6" > 0.0) THEN ln("DT_Output_11"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_7" IS NULL OR "DT_Output_11"."P_7" > 0.0) THEN ln("DT_Output_11"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_8" IS NULL OR "DT_Output_11"."P_8" > 0.0) THEN ln("DT_Output_11"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_9" IS NULL OR "DT_Output_11"."P_9" > 0.0) THEN ln("DT_Output_11"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_4", 9.0 * (CASE WHEN ("DT_Output_11"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_4" IS NULL OR "DT_Output_11"."P_4" > 0.0) THEN ln("DT_Output_11"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_11"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_0" IS NULL OR "DT_Output_11"."P_0" > 0.0) THEN ln("DT_Output_11"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_1" IS NULL OR "DT_Output_11"."P_1" > 0.0) THEN ln("DT_Output_11"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_2" IS NULL OR "DT_Output_11"."P_2" > 0.0) THEN ln("DT_Output_11"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_3" IS NULL OR "DT_Output_11"."P_3" > 0.0) THEN ln("DT_Output_11"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_4" IS NULL OR "DT_Output_11"."P_4" > 0.0) THEN ln("DT_Output_11"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_5" IS NULL OR "DT_Output_11"."P_5" > 0.0) THEN ln("DT_Output_11"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_6" IS NULL OR "DT_Output_11"."P_6" > 0.0) THEN ln("DT_Output_11"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_7" IS NULL OR "DT_Output_11"."P_7" > 0.0) THEN ln("DT_Output_11"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_8" IS NULL OR "DT_Output_11"."P_8" > 0.0) THEN ln("DT_Output_11"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_9" IS NULL OR "DT_Output_11"."P_9" > 0.0) THEN ln("DT_Output_11"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_4", (9.0 * (CASE WHEN ("DT_Output_11"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_5" IS NULL OR "DT_Output_11"."P_5" > 0.0) THEN ln("DT_Output_11"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_11"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_0" IS NULL OR "DT_Output_11"."P_0" > 0.0) THEN ln("DT_Output_11"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_1" IS NULL OR "DT_Output_11"."P_1" > 0.0) THEN ln("DT_Output_11"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_2" IS NULL OR "DT_Output_11"."P_2" > 0.0) THEN ln("DT_Output_11"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_3" IS NULL OR "DT_Output_11"."P_3" > 0.0) THEN ln("DT_Output_11"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_4" IS NULL OR "DT_Output_11"."P_4" > 0.0) THEN ln("DT_Output_11"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_5" IS NULL OR "DT_Output_11"."P_5" > 0.0) THEN ln("DT_Output_11"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_6" IS NULL OR "DT_Output_11"."P_6" > 0.0) THEN ln("DT_Output_11"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_7" IS NULL OR "DT_Output_11"."P_7" > 0.0) THEN ln("DT_Output_11"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_8" IS NULL OR "DT_Output_11"."P_8" > 0.0) THEN ln("DT_Output_11"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_9" IS NULL OR "DT_Output_11"."P_9" > 0.0) THEN ln("DT_Output_11"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_5", 9.0 * (CASE WHEN ("DT_Output_11"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_5" IS NULL OR "DT_Output_11"."P_5" > 0.0) THEN ln("DT_Output_11"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_11"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_0" IS NULL OR "DT_Output_11"."P_0" > 0.0) THEN ln("DT_Output_11"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_1" IS NULL OR "DT_Output_11"."P_1" > 0.0) THEN ln("DT_Output_11"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_2" IS NULL OR "DT_Output_11"."P_2" > 0.0) THEN ln("DT_Output_11"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_3" IS NULL OR "DT_Output_11"."P_3" > 0.0) THEN ln("DT_Output_11"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_4" IS NULL OR "DT_Output_11"."P_4" > 0.0) THEN ln("DT_Output_11"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_5" IS NULL OR "DT_Output_11"."P_5" > 0.0) THEN ln("DT_Output_11"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_6" IS NULL OR "DT_Output_11"."P_6" > 0.0) THEN ln("DT_Output_11"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_7" IS NULL OR "DT_Output_11"."P_7" > 0.0) THEN ln("DT_Output_11"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_8" IS NULL OR "DT_Output_11"."P_8" > 0.0) THEN ln("DT_Output_11"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_9" IS NULL OR "DT_Output_11"."P_9" > 0.0) THEN ln("DT_Output_11"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_5", (9.0 * (CASE WHEN ("DT_Output_11"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_6" IS NULL OR "DT_Output_11"."P_6" > 0.0) THEN ln("DT_Output_11"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_11"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_0" IS NULL OR "DT_Output_11"."P_0" > 0.0) THEN ln("DT_Output_11"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_1" IS NULL OR "DT_Output_11"."P_1" > 0.0) THEN ln("DT_Output_11"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_2" IS NULL OR "DT_Output_11"."P_2" > 0.0) THEN ln("DT_Output_11"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_3" IS NULL OR "DT_Output_11"."P_3" > 0.0) THEN ln("DT_Output_11"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_4" IS NULL OR "DT_Output_11"."P_4" > 0.0) THEN ln("DT_Output_11"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_5" IS NULL OR "DT_Output_11"."P_5" > 0.0) THEN ln("DT_Output_11"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_6" IS NULL OR "DT_Output_11"."P_6" > 0.0) THEN ln("DT_Output_11"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_7" IS NULL OR "DT_Output_11"."P_7" > 0.0) THEN ln("DT_Output_11"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_8" IS NULL OR "DT_Output_11"."P_8" > 0.0) THEN ln("DT_Output_11"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_9" IS NULL OR "DT_Output_11"."P_9" > 0.0) THEN ln("DT_Output_11"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_6", 9.0 * (CASE WHEN ("DT_Output_11"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_6" IS NULL OR "DT_Output_11"."P_6" > 0.0) THEN ln("DT_Output_11"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_11"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_0" IS NULL OR "DT_Output_11"."P_0" > 0.0) THEN ln("DT_Output_11"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_1" IS NULL OR "DT_Output_11"."P_1" > 0.0) THEN ln("DT_Output_11"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_2" IS NULL OR "DT_Output_11"."P_2" > 0.0) THEN ln("DT_Output_11"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_3" IS NULL OR "DT_Output_11"."P_3" > 0.0) THEN ln("DT_Output_11"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_4" IS NULL OR "DT_Output_11"."P_4" > 0.0) THEN ln("DT_Output_11"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_5" IS NULL OR "DT_Output_11"."P_5" > 0.0) THEN ln("DT_Output_11"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_6" IS NULL OR "DT_Output_11"."P_6" > 0.0) THEN ln("DT_Output_11"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_7" IS NULL OR "DT_Output_11"."P_7" > 0.0) THEN ln("DT_Output_11"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_8" IS NULL OR "DT_Output_11"."P_8" > 0.0) THEN ln("DT_Output_11"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_9" IS NULL OR "DT_Output_11"."P_9" > 0.0) THEN ln("DT_Output_11"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_6", (9.0 * (CASE WHEN ("DT_Output_11"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_7" IS NULL OR "DT_Output_11"."P_7" > 0.0) THEN ln("DT_Output_11"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_11"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_0" IS NULL OR "DT_Output_11"."P_0" > 0.0) THEN ln("DT_Output_11"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_1" IS NULL OR "DT_Output_11"."P_1" > 0.0) THEN ln("DT_Output_11"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_2" IS NULL OR "DT_Output_11"."P_2" > 0.0) THEN ln("DT_Output_11"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_3" IS NULL OR "DT_Output_11"."P_3" > 0.0) THEN ln("DT_Output_11"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_4" IS NULL OR "DT_Output_11"."P_4" > 0.0) THEN ln("DT_Output_11"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_5" IS NULL OR "DT_Output_11"."P_5" > 0.0) THEN ln("DT_Output_11"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_6" IS NULL OR "DT_Output_11"."P_6" > 0.0) THEN ln("DT_Output_11"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_7" IS NULL OR "DT_Output_11"."P_7" > 0.0) THEN ln("DT_Output_11"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_8" IS NULL OR "DT_Output_11"."P_8" > 0.0) THEN ln("DT_Output_11"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_9" IS NULL OR "DT_Output_11"."P_9" > 0.0) THEN ln("DT_Output_11"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_7", 9.0 * (CASE WHEN ("DT_Output_11"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_7" IS NULL OR "DT_Output_11"."P_7" > 0.0) THEN ln("DT_Output_11"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_11"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_0" IS NULL OR "DT_Output_11"."P_0" > 0.0) THEN ln("DT_Output_11"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_1" IS NULL OR "DT_Output_11"."P_1" > 0.0) THEN ln("DT_Output_11"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_2" IS NULL OR "DT_Output_11"."P_2" > 0.0) THEN ln("DT_Output_11"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_3" IS NULL OR "DT_Output_11"."P_3" > 0.0) THEN ln("DT_Output_11"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_4" IS NULL OR "DT_Output_11"."P_4" > 0.0) THEN ln("DT_Output_11"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_5" IS NULL OR "DT_Output_11"."P_5" > 0.0) THEN ln("DT_Output_11"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_6" IS NULL OR "DT_Output_11"."P_6" > 0.0) THEN ln("DT_Output_11"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_7" IS NULL OR "DT_Output_11"."P_7" > 0.0) THEN ln("DT_Output_11"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_8" IS NULL OR "DT_Output_11"."P_8" > 0.0) THEN ln("DT_Output_11"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_9" IS NULL OR "DT_Output_11"."P_9" > 0.0) THEN ln("DT_Output_11"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_7", (9.0 * (CASE WHEN ("DT_Output_11"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_8" IS NULL OR "DT_Output_11"."P_8" > 0.0) THEN ln("DT_Output_11"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_11"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_0" IS NULL OR "DT_Output_11"."P_0" > 0.0) THEN ln("DT_Output_11"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_1" IS NULL OR "DT_Output_11"."P_1" > 0.0) THEN ln("DT_Output_11"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_2" IS NULL OR "DT_Output_11"."P_2" > 0.0) THEN ln("DT_Output_11"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_3" IS NULL OR "DT_Output_11"."P_3" > 0.0) THEN ln("DT_Output_11"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_4" IS NULL OR "DT_Output_11"."P_4" > 0.0) THEN ln("DT_Output_11"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_5" IS NULL OR "DT_Output_11"."P_5" > 0.0) THEN ln("DT_Output_11"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_6" IS NULL OR "DT_Output_11"."P_6" > 0.0) THEN ln("DT_Output_11"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_7" IS NULL OR "DT_Output_11"."P_7" > 0.0) THEN ln("DT_Output_11"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_8" IS NULL OR "DT_Output_11"."P_8" > 0.0) THEN ln("DT_Output_11"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_9" IS NULL OR "DT_Output_11"."P_9" > 0.0) THEN ln("DT_Output_11"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_8", 9.0 * (CASE WHEN ("DT_Output_11"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_8" IS NULL OR "DT_Output_11"."P_8" > 0.0) THEN ln("DT_Output_11"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_11"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_0" IS NULL OR "DT_Output_11"."P_0" > 0.0) THEN ln("DT_Output_11"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_1" IS NULL OR "DT_Output_11"."P_1" > 0.0) THEN ln("DT_Output_11"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_2" IS NULL OR "DT_Output_11"."P_2" > 0.0) THEN ln("DT_Output_11"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_3" IS NULL OR "DT_Output_11"."P_3" > 0.0) THEN ln("DT_Output_11"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_4" IS NULL OR "DT_Output_11"."P_4" > 0.0) THEN ln("DT_Output_11"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_5" IS NULL OR "DT_Output_11"."P_5" > 0.0) THEN ln("DT_Output_11"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_6" IS NULL OR "DT_Output_11"."P_6" > 0.0) THEN ln("DT_Output_11"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_7" IS NULL OR "DT_Output_11"."P_7" > 0.0) THEN ln("DT_Output_11"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_8" IS NULL OR "DT_Output_11"."P_8" > 0.0) THEN ln("DT_Output_11"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_9" IS NULL OR "DT_Output_11"."P_9" > 0.0) THEN ln("DT_Output_11"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_8", (9.0 * (CASE WHEN ("DT_Output_11"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_9" IS NULL OR "DT_Output_11"."P_9" > 0.0) THEN ln("DT_Output_11"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_11"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_0" IS NULL OR "DT_Output_11"."P_0" > 0.0) THEN ln("DT_Output_11"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_1" IS NULL OR "DT_Output_11"."P_1" > 0.0) THEN ln("DT_Output_11"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_2" IS NULL OR "DT_Output_11"."P_2" > 0.0) THEN ln("DT_Output_11"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_3" IS NULL OR "DT_Output_11"."P_3" > 0.0) THEN ln("DT_Output_11"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_4" IS NULL OR "DT_Output_11"."P_4" > 0.0) THEN ln("DT_Output_11"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_5" IS NULL OR "DT_Output_11"."P_5" > 0.0) THEN ln("DT_Output_11"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_6" IS NULL OR "DT_Output_11"."P_6" > 0.0) THEN ln("DT_Output_11"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_7" IS NULL OR "DT_Output_11"."P_7" > 0.0) THEN ln("DT_Output_11"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_8" IS NULL OR "DT_Output_11"."P_8" > 0.0) THEN ln("DT_Output_11"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_9" IS NULL OR "DT_Output_11"."P_9" > 0.0) THEN ln("DT_Output_11"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_9", 9.0 * (CASE WHEN ("DT_Output_11"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_9" IS NULL OR "DT_Output_11"."P_9" > 0.0) THEN ln("DT_Output_11"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_11"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_0" IS NULL OR "DT_Output_11"."P_0" > 0.0) THEN ln("DT_Output_11"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_1" IS NULL OR "DT_Output_11"."P_1" > 0.0) THEN ln("DT_Output_11"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_2" IS NULL OR "DT_Output_11"."P_2" > 0.0) THEN ln("DT_Output_11"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_3" IS NULL OR "DT_Output_11"."P_3" > 0.0) THEN ln("DT_Output_11"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_4" IS NULL OR "DT_Output_11"."P_4" > 0.0) THEN ln("DT_Output_11"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_5" IS NULL OR "DT_Output_11"."P_5" > 0.0) THEN ln("DT_Output_11"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_6" IS NULL OR "DT_Output_11"."P_6" > 0.0) THEN ln("DT_Output_11"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_7" IS NULL OR "DT_Output_11"."P_7" > 0.0) THEN ln("DT_Output_11"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_8" IS NULL OR "DT_Output_11"."P_8" > 0.0) THEN ln("DT_Output_11"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_11"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_9" IS NULL OR "DT_Output_11"."P_9" > 0.0) THEN ln("DT_Output_11"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_9" 
FROM "DT_Output_11"), 
"DT_node_lookup_12" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_30 <= -1.555469036102295) THEN 1 ELSE 2 END AS node_id_2 
FROM "DEGEN_YN11LY_ADS_SCA_2_OUT" "ADS_sca_2_OUT"), 
"DT_node_data_12" AS 
(SELECT "Values".nid AS nid, CAST("Values"."P_0" AS BINARY_DOUBLE) AS "P_0", CAST("Values"."P_1" AS BINARY_DOUBLE) AS "P_1", CAST("Values"."P_2" AS BINARY_DOUBLE) AS "P_2", CAST("Values"."P_3" AS BINARY_DOUBLE) AS "P_3", CAST("Values"."P_4" AS BINARY_DOUBLE) AS "P_4", CAST("Values"."P_5" AS BINARY_DOUBLE) AS "P_5", CAST("Values"."P_6" AS BINARY_DOUBLE) AS "P_6", CAST("Values"."P_7" AS BINARY_DOUBLE) AS "P_7", CAST("Values"."P_8" AS BINARY_DOUBLE) AS "P_8", CAST("Values"."P_9" AS BINARY_DOUBLE) AS "P_9", CAST("Values"."D" AS BINARY_DOUBLE) AS "D", CAST("Values"."DP" AS BINARY_DOUBLE) AS "DP" 
FROM (SELECT 1 AS nid, 0.9974114009784684 AS "P_0", 0.00032357490911596673 AS "P_1", 0.00032357473260143956 AS "P_2", 0.0003235749119121244 AS "P_3", 0.0003235748234614355 AS "P_4", 0.00032357491165777854 AS "P_5", 0.0003235749117547417 AS "P_6", 0.00032357490911596505 AS "P_7", 0.0 AS "P_8", 0.0003235749119121246 AS "P_9", 0 AS "D", 0.9974114009784684 AS "DP" FROM DUAL UNION ALL SELECT 2 AS nid, 4.160682904670297e-10 AS "P_0", 0.11110710446327614 AS "P_1", 0.1111071048990142 AS "P_2", 0.11110710487903343 AS "P_3", 0.11110710488888965 AS "P_4", 0.11110710487906117 AS "P_5", 0.11110710487905048 AS "P_6", 0.11110710446327651 AS "P_7", 0.11114316135329703 AS "P_8", 0.11110710487903303 AS "P_9", 8 AS "D", 0.11114316135329703 AS "DP" FROM DUAL) "Values"), 
"DT_Output_12" AS 
(SELECT "DT_node_lookup_12"."KEY" AS "KEY", "DT_node_lookup_12".node_id_2 AS node_id_2, "DT_node_data_12".nid AS nid, "DT_node_data_12"."P_0" AS "P_0", "DT_node_data_12"."P_1" AS "P_1", "DT_node_data_12"."P_2" AS "P_2", "DT_node_data_12"."P_3" AS "P_3", "DT_node_data_12"."P_4" AS "P_4", "DT_node_data_12"."P_5" AS "P_5", "DT_node_data_12"."P_6" AS "P_6", "DT_node_data_12"."P_7" AS "P_7", "DT_node_data_12"."P_8" AS "P_8", "DT_node_data_12"."P_9" AS "P_9", "DT_node_data_12"."D" AS "D", "DT_node_data_12"."DP" AS "DP" 
FROM "DT_node_lookup_12" LEFT OUTER JOIN "DT_node_data_12" ON "DT_node_lookup_12".node_id_2 = "DT_node_data_12".nid), 
"ADB_Model_12" AS 
(SELECT "DT_Output_12"."KEY" AS "KEY", (9.0 * (CASE WHEN ("DT_Output_12"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_0" IS NULL OR "DT_Output_12"."P_0" > 0.0) THEN ln("DT_Output_12"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_12"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_0" IS NULL OR "DT_Output_12"."P_0" > 0.0) THEN ln("DT_Output_12"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_1" IS NULL OR "DT_Output_12"."P_1" > 0.0) THEN ln("DT_Output_12"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_2" IS NULL OR "DT_Output_12"."P_2" > 0.0) THEN ln("DT_Output_12"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_3" IS NULL OR "DT_Output_12"."P_3" > 0.0) THEN ln("DT_Output_12"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_4" IS NULL OR "DT_Output_12"."P_4" > 0.0) THEN ln("DT_Output_12"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_5" IS NULL OR "DT_Output_12"."P_5" > 0.0) THEN ln("DT_Output_12"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_6" IS NULL OR "DT_Output_12"."P_6" > 0.0) THEN ln("DT_Output_12"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_7" IS NULL OR "DT_Output_12"."P_7" > 0.0) THEN ln("DT_Output_12"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_8" IS NULL OR "DT_Output_12"."P_8" > 0.0) THEN ln("DT_Output_12"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_9" IS NULL OR "DT_Output_12"."P_9" > 0.0) THEN ln("DT_Output_12"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_0", 9.0 * (CASE WHEN ("DT_Output_12"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_0" IS NULL OR "DT_Output_12"."P_0" > 0.0) THEN ln("DT_Output_12"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_12"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_0" IS NULL OR "DT_Output_12"."P_0" > 0.0) THEN ln("DT_Output_12"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_1" IS NULL OR "DT_Output_12"."P_1" > 0.0) THEN ln("DT_Output_12"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_2" IS NULL OR "DT_Output_12"."P_2" > 0.0) THEN ln("DT_Output_12"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_3" IS NULL OR "DT_Output_12"."P_3" > 0.0) THEN ln("DT_Output_12"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_4" IS NULL OR "DT_Output_12"."P_4" > 0.0) THEN ln("DT_Output_12"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_5" IS NULL OR "DT_Output_12"."P_5" > 0.0) THEN ln("DT_Output_12"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_6" IS NULL OR "DT_Output_12"."P_6" > 0.0) THEN ln("DT_Output_12"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_7" IS NULL OR "DT_Output_12"."P_7" > 0.0) THEN ln("DT_Output_12"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_8" IS NULL OR "DT_Output_12"."P_8" > 0.0) THEN ln("DT_Output_12"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_9" IS NULL OR "DT_Output_12"."P_9" > 0.0) THEN ln("DT_Output_12"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_0", (9.0 * (CASE WHEN ("DT_Output_12"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_1" IS NULL OR "DT_Output_12"."P_1" > 0.0) THEN ln("DT_Output_12"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_12"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_0" IS NULL OR "DT_Output_12"."P_0" > 0.0) THEN ln("DT_Output_12"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_1" IS NULL OR "DT_Output_12"."P_1" > 0.0) THEN ln("DT_Output_12"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_2" IS NULL OR "DT_Output_12"."P_2" > 0.0) THEN ln("DT_Output_12"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_3" IS NULL OR "DT_Output_12"."P_3" > 0.0) THEN ln("DT_Output_12"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_4" IS NULL OR "DT_Output_12"."P_4" > 0.0) THEN ln("DT_Output_12"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_5" IS NULL OR "DT_Output_12"."P_5" > 0.0) THEN ln("DT_Output_12"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_6" IS NULL OR "DT_Output_12"."P_6" > 0.0) THEN ln("DT_Output_12"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_7" IS NULL OR "DT_Output_12"."P_7" > 0.0) THEN ln("DT_Output_12"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_8" IS NULL OR "DT_Output_12"."P_8" > 0.0) THEN ln("DT_Output_12"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_9" IS NULL OR "DT_Output_12"."P_9" > 0.0) THEN ln("DT_Output_12"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_1", 9.0 * (CASE WHEN ("DT_Output_12"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_1" IS NULL OR "DT_Output_12"."P_1" > 0.0) THEN ln("DT_Output_12"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_12"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_0" IS NULL OR "DT_Output_12"."P_0" > 0.0) THEN ln("DT_Output_12"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_1" IS NULL OR "DT_Output_12"."P_1" > 0.0) THEN ln("DT_Output_12"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_2" IS NULL OR "DT_Output_12"."P_2" > 0.0) THEN ln("DT_Output_12"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_3" IS NULL OR "DT_Output_12"."P_3" > 0.0) THEN ln("DT_Output_12"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_4" IS NULL OR "DT_Output_12"."P_4" > 0.0) THEN ln("DT_Output_12"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_5" IS NULL OR "DT_Output_12"."P_5" > 0.0) THEN ln("DT_Output_12"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_6" IS NULL OR "DT_Output_12"."P_6" > 0.0) THEN ln("DT_Output_12"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_7" IS NULL OR "DT_Output_12"."P_7" > 0.0) THEN ln("DT_Output_12"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_8" IS NULL OR "DT_Output_12"."P_8" > 0.0) THEN ln("DT_Output_12"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_9" IS NULL OR "DT_Output_12"."P_9" > 0.0) THEN ln("DT_Output_12"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_1", (9.0 * (CASE WHEN ("DT_Output_12"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_2" IS NULL OR "DT_Output_12"."P_2" > 0.0) THEN ln("DT_Output_12"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_12"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_0" IS NULL OR "DT_Output_12"."P_0" > 0.0) THEN ln("DT_Output_12"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_1" IS NULL OR "DT_Output_12"."P_1" > 0.0) THEN ln("DT_Output_12"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_2" IS NULL OR "DT_Output_12"."P_2" > 0.0) THEN ln("DT_Output_12"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_3" IS NULL OR "DT_Output_12"."P_3" > 0.0) THEN ln("DT_Output_12"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_4" IS NULL OR "DT_Output_12"."P_4" > 0.0) THEN ln("DT_Output_12"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_5" IS NULL OR "DT_Output_12"."P_5" > 0.0) THEN ln("DT_Output_12"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_6" IS NULL OR "DT_Output_12"."P_6" > 0.0) THEN ln("DT_Output_12"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_7" IS NULL OR "DT_Output_12"."P_7" > 0.0) THEN ln("DT_Output_12"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_8" IS NULL OR "DT_Output_12"."P_8" > 0.0) THEN ln("DT_Output_12"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_9" IS NULL OR "DT_Output_12"."P_9" > 0.0) THEN ln("DT_Output_12"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_2", 9.0 * (CASE WHEN ("DT_Output_12"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_2" IS NULL OR "DT_Output_12"."P_2" > 0.0) THEN ln("DT_Output_12"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_12"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_0" IS NULL OR "DT_Output_12"."P_0" > 0.0) THEN ln("DT_Output_12"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_1" IS NULL OR "DT_Output_12"."P_1" > 0.0) THEN ln("DT_Output_12"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_2" IS NULL OR "DT_Output_12"."P_2" > 0.0) THEN ln("DT_Output_12"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_3" IS NULL OR "DT_Output_12"."P_3" > 0.0) THEN ln("DT_Output_12"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_4" IS NULL OR "DT_Output_12"."P_4" > 0.0) THEN ln("DT_Output_12"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_5" IS NULL OR "DT_Output_12"."P_5" > 0.0) THEN ln("DT_Output_12"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_6" IS NULL OR "DT_Output_12"."P_6" > 0.0) THEN ln("DT_Output_12"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_7" IS NULL OR "DT_Output_12"."P_7" > 0.0) THEN ln("DT_Output_12"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_8" IS NULL OR "DT_Output_12"."P_8" > 0.0) THEN ln("DT_Output_12"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_9" IS NULL OR "DT_Output_12"."P_9" > 0.0) THEN ln("DT_Output_12"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_2", (9.0 * (CASE WHEN ("DT_Output_12"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_3" IS NULL OR "DT_Output_12"."P_3" > 0.0) THEN ln("DT_Output_12"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_12"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_0" IS NULL OR "DT_Output_12"."P_0" > 0.0) THEN ln("DT_Output_12"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_1" IS NULL OR "DT_Output_12"."P_1" > 0.0) THEN ln("DT_Output_12"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_2" IS NULL OR "DT_Output_12"."P_2" > 0.0) THEN ln("DT_Output_12"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_3" IS NULL OR "DT_Output_12"."P_3" > 0.0) THEN ln("DT_Output_12"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_4" IS NULL OR "DT_Output_12"."P_4" > 0.0) THEN ln("DT_Output_12"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_5" IS NULL OR "DT_Output_12"."P_5" > 0.0) THEN ln("DT_Output_12"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_6" IS NULL OR "DT_Output_12"."P_6" > 0.0) THEN ln("DT_Output_12"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_7" IS NULL OR "DT_Output_12"."P_7" > 0.0) THEN ln("DT_Output_12"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_8" IS NULL OR "DT_Output_12"."P_8" > 0.0) THEN ln("DT_Output_12"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_9" IS NULL OR "DT_Output_12"."P_9" > 0.0) THEN ln("DT_Output_12"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_3", 9.0 * (CASE WHEN ("DT_Output_12"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_3" IS NULL OR "DT_Output_12"."P_3" > 0.0) THEN ln("DT_Output_12"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_12"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_0" IS NULL OR "DT_Output_12"."P_0" > 0.0) THEN ln("DT_Output_12"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_1" IS NULL OR "DT_Output_12"."P_1" > 0.0) THEN ln("DT_Output_12"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_2" IS NULL OR "DT_Output_12"."P_2" > 0.0) THEN ln("DT_Output_12"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_3" IS NULL OR "DT_Output_12"."P_3" > 0.0) THEN ln("DT_Output_12"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_4" IS NULL OR "DT_Output_12"."P_4" > 0.0) THEN ln("DT_Output_12"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_5" IS NULL OR "DT_Output_12"."P_5" > 0.0) THEN ln("DT_Output_12"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_6" IS NULL OR "DT_Output_12"."P_6" > 0.0) THEN ln("DT_Output_12"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_7" IS NULL OR "DT_Output_12"."P_7" > 0.0) THEN ln("DT_Output_12"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_8" IS NULL OR "DT_Output_12"."P_8" > 0.0) THEN ln("DT_Output_12"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_9" IS NULL OR "DT_Output_12"."P_9" > 0.0) THEN ln("DT_Output_12"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_3", (9.0 * (CASE WHEN ("DT_Output_12"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_4" IS NULL OR "DT_Output_12"."P_4" > 0.0) THEN ln("DT_Output_12"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_12"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_0" IS NULL OR "DT_Output_12"."P_0" > 0.0) THEN ln("DT_Output_12"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_1" IS NULL OR "DT_Output_12"."P_1" > 0.0) THEN ln("DT_Output_12"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_2" IS NULL OR "DT_Output_12"."P_2" > 0.0) THEN ln("DT_Output_12"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_3" IS NULL OR "DT_Output_12"."P_3" > 0.0) THEN ln("DT_Output_12"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_4" IS NULL OR "DT_Output_12"."P_4" > 0.0) THEN ln("DT_Output_12"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_5" IS NULL OR "DT_Output_12"."P_5" > 0.0) THEN ln("DT_Output_12"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_6" IS NULL OR "DT_Output_12"."P_6" > 0.0) THEN ln("DT_Output_12"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_7" IS NULL OR "DT_Output_12"."P_7" > 0.0) THEN ln("DT_Output_12"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_8" IS NULL OR "DT_Output_12"."P_8" > 0.0) THEN ln("DT_Output_12"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_9" IS NULL OR "DT_Output_12"."P_9" > 0.0) THEN ln("DT_Output_12"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_4", 9.0 * (CASE WHEN ("DT_Output_12"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_4" IS NULL OR "DT_Output_12"."P_4" > 0.0) THEN ln("DT_Output_12"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_12"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_0" IS NULL OR "DT_Output_12"."P_0" > 0.0) THEN ln("DT_Output_12"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_1" IS NULL OR "DT_Output_12"."P_1" > 0.0) THEN ln("DT_Output_12"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_2" IS NULL OR "DT_Output_12"."P_2" > 0.0) THEN ln("DT_Output_12"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_3" IS NULL OR "DT_Output_12"."P_3" > 0.0) THEN ln("DT_Output_12"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_4" IS NULL OR "DT_Output_12"."P_4" > 0.0) THEN ln("DT_Output_12"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_5" IS NULL OR "DT_Output_12"."P_5" > 0.0) THEN ln("DT_Output_12"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_6" IS NULL OR "DT_Output_12"."P_6" > 0.0) THEN ln("DT_Output_12"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_7" IS NULL OR "DT_Output_12"."P_7" > 0.0) THEN ln("DT_Output_12"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_8" IS NULL OR "DT_Output_12"."P_8" > 0.0) THEN ln("DT_Output_12"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_9" IS NULL OR "DT_Output_12"."P_9" > 0.0) THEN ln("DT_Output_12"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_4", (9.0 * (CASE WHEN ("DT_Output_12"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_5" IS NULL OR "DT_Output_12"."P_5" > 0.0) THEN ln("DT_Output_12"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_12"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_0" IS NULL OR "DT_Output_12"."P_0" > 0.0) THEN ln("DT_Output_12"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_1" IS NULL OR "DT_Output_12"."P_1" > 0.0) THEN ln("DT_Output_12"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_2" IS NULL OR "DT_Output_12"."P_2" > 0.0) THEN ln("DT_Output_12"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_3" IS NULL OR "DT_Output_12"."P_3" > 0.0) THEN ln("DT_Output_12"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_4" IS NULL OR "DT_Output_12"."P_4" > 0.0) THEN ln("DT_Output_12"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_5" IS NULL OR "DT_Output_12"."P_5" > 0.0) THEN ln("DT_Output_12"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_6" IS NULL OR "DT_Output_12"."P_6" > 0.0) THEN ln("DT_Output_12"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_7" IS NULL OR "DT_Output_12"."P_7" > 0.0) THEN ln("DT_Output_12"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_8" IS NULL OR "DT_Output_12"."P_8" > 0.0) THEN ln("DT_Output_12"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_9" IS NULL OR "DT_Output_12"."P_9" > 0.0) THEN ln("DT_Output_12"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_5", 9.0 * (CASE WHEN ("DT_Output_12"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_5" IS NULL OR "DT_Output_12"."P_5" > 0.0) THEN ln("DT_Output_12"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_12"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_0" IS NULL OR "DT_Output_12"."P_0" > 0.0) THEN ln("DT_Output_12"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_1" IS NULL OR "DT_Output_12"."P_1" > 0.0) THEN ln("DT_Output_12"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_2" IS NULL OR "DT_Output_12"."P_2" > 0.0) THEN ln("DT_Output_12"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_3" IS NULL OR "DT_Output_12"."P_3" > 0.0) THEN ln("DT_Output_12"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_4" IS NULL OR "DT_Output_12"."P_4" > 0.0) THEN ln("DT_Output_12"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_5" IS NULL OR "DT_Output_12"."P_5" > 0.0) THEN ln("DT_Output_12"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_6" IS NULL OR "DT_Output_12"."P_6" > 0.0) THEN ln("DT_Output_12"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_7" IS NULL OR "DT_Output_12"."P_7" > 0.0) THEN ln("DT_Output_12"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_8" IS NULL OR "DT_Output_12"."P_8" > 0.0) THEN ln("DT_Output_12"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_9" IS NULL OR "DT_Output_12"."P_9" > 0.0) THEN ln("DT_Output_12"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_5", (9.0 * (CASE WHEN ("DT_Output_12"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_6" IS NULL OR "DT_Output_12"."P_6" > 0.0) THEN ln("DT_Output_12"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_12"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_0" IS NULL OR "DT_Output_12"."P_0" > 0.0) THEN ln("DT_Output_12"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_1" IS NULL OR "DT_Output_12"."P_1" > 0.0) THEN ln("DT_Output_12"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_2" IS NULL OR "DT_Output_12"."P_2" > 0.0) THEN ln("DT_Output_12"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_3" IS NULL OR "DT_Output_12"."P_3" > 0.0) THEN ln("DT_Output_12"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_4" IS NULL OR "DT_Output_12"."P_4" > 0.0) THEN ln("DT_Output_12"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_5" IS NULL OR "DT_Output_12"."P_5" > 0.0) THEN ln("DT_Output_12"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_6" IS NULL OR "DT_Output_12"."P_6" > 0.0) THEN ln("DT_Output_12"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_7" IS NULL OR "DT_Output_12"."P_7" > 0.0) THEN ln("DT_Output_12"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_8" IS NULL OR "DT_Output_12"."P_8" > 0.0) THEN ln("DT_Output_12"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_9" IS NULL OR "DT_Output_12"."P_9" > 0.0) THEN ln("DT_Output_12"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_6", 9.0 * (CASE WHEN ("DT_Output_12"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_6" IS NULL OR "DT_Output_12"."P_6" > 0.0) THEN ln("DT_Output_12"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_12"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_0" IS NULL OR "DT_Output_12"."P_0" > 0.0) THEN ln("DT_Output_12"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_1" IS NULL OR "DT_Output_12"."P_1" > 0.0) THEN ln("DT_Output_12"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_2" IS NULL OR "DT_Output_12"."P_2" > 0.0) THEN ln("DT_Output_12"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_3" IS NULL OR "DT_Output_12"."P_3" > 0.0) THEN ln("DT_Output_12"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_4" IS NULL OR "DT_Output_12"."P_4" > 0.0) THEN ln("DT_Output_12"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_5" IS NULL OR "DT_Output_12"."P_5" > 0.0) THEN ln("DT_Output_12"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_6" IS NULL OR "DT_Output_12"."P_6" > 0.0) THEN ln("DT_Output_12"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_7" IS NULL OR "DT_Output_12"."P_7" > 0.0) THEN ln("DT_Output_12"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_8" IS NULL OR "DT_Output_12"."P_8" > 0.0) THEN ln("DT_Output_12"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_9" IS NULL OR "DT_Output_12"."P_9" > 0.0) THEN ln("DT_Output_12"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_6", (9.0 * (CASE WHEN ("DT_Output_12"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_7" IS NULL OR "DT_Output_12"."P_7" > 0.0) THEN ln("DT_Output_12"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_12"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_0" IS NULL OR "DT_Output_12"."P_0" > 0.0) THEN ln("DT_Output_12"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_1" IS NULL OR "DT_Output_12"."P_1" > 0.0) THEN ln("DT_Output_12"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_2" IS NULL OR "DT_Output_12"."P_2" > 0.0) THEN ln("DT_Output_12"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_3" IS NULL OR "DT_Output_12"."P_3" > 0.0) THEN ln("DT_Output_12"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_4" IS NULL OR "DT_Output_12"."P_4" > 0.0) THEN ln("DT_Output_12"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_5" IS NULL OR "DT_Output_12"."P_5" > 0.0) THEN ln("DT_Output_12"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_6" IS NULL OR "DT_Output_12"."P_6" > 0.0) THEN ln("DT_Output_12"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_7" IS NULL OR "DT_Output_12"."P_7" > 0.0) THEN ln("DT_Output_12"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_8" IS NULL OR "DT_Output_12"."P_8" > 0.0) THEN ln("DT_Output_12"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_9" IS NULL OR "DT_Output_12"."P_9" > 0.0) THEN ln("DT_Output_12"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_7", 9.0 * (CASE WHEN ("DT_Output_12"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_7" IS NULL OR "DT_Output_12"."P_7" > 0.0) THEN ln("DT_Output_12"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_12"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_0" IS NULL OR "DT_Output_12"."P_0" > 0.0) THEN ln("DT_Output_12"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_1" IS NULL OR "DT_Output_12"."P_1" > 0.0) THEN ln("DT_Output_12"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_2" IS NULL OR "DT_Output_12"."P_2" > 0.0) THEN ln("DT_Output_12"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_3" IS NULL OR "DT_Output_12"."P_3" > 0.0) THEN ln("DT_Output_12"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_4" IS NULL OR "DT_Output_12"."P_4" > 0.0) THEN ln("DT_Output_12"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_5" IS NULL OR "DT_Output_12"."P_5" > 0.0) THEN ln("DT_Output_12"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_6" IS NULL OR "DT_Output_12"."P_6" > 0.0) THEN ln("DT_Output_12"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_7" IS NULL OR "DT_Output_12"."P_7" > 0.0) THEN ln("DT_Output_12"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_8" IS NULL OR "DT_Output_12"."P_8" > 0.0) THEN ln("DT_Output_12"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_9" IS NULL OR "DT_Output_12"."P_9" > 0.0) THEN ln("DT_Output_12"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_7", (9.0 * (CASE WHEN ("DT_Output_12"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_8" IS NULL OR "DT_Output_12"."P_8" > 0.0) THEN ln("DT_Output_12"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_12"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_0" IS NULL OR "DT_Output_12"."P_0" > 0.0) THEN ln("DT_Output_12"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_1" IS NULL OR "DT_Output_12"."P_1" > 0.0) THEN ln("DT_Output_12"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_2" IS NULL OR "DT_Output_12"."P_2" > 0.0) THEN ln("DT_Output_12"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_3" IS NULL OR "DT_Output_12"."P_3" > 0.0) THEN ln("DT_Output_12"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_4" IS NULL OR "DT_Output_12"."P_4" > 0.0) THEN ln("DT_Output_12"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_5" IS NULL OR "DT_Output_12"."P_5" > 0.0) THEN ln("DT_Output_12"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_6" IS NULL OR "DT_Output_12"."P_6" > 0.0) THEN ln("DT_Output_12"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_7" IS NULL OR "DT_Output_12"."P_7" > 0.0) THEN ln("DT_Output_12"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_8" IS NULL OR "DT_Output_12"."P_8" > 0.0) THEN ln("DT_Output_12"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_9" IS NULL OR "DT_Output_12"."P_9" > 0.0) THEN ln("DT_Output_12"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_8", 9.0 * (CASE WHEN ("DT_Output_12"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_8" IS NULL OR "DT_Output_12"."P_8" > 0.0) THEN ln("DT_Output_12"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_12"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_0" IS NULL OR "DT_Output_12"."P_0" > 0.0) THEN ln("DT_Output_12"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_1" IS NULL OR "DT_Output_12"."P_1" > 0.0) THEN ln("DT_Output_12"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_2" IS NULL OR "DT_Output_12"."P_2" > 0.0) THEN ln("DT_Output_12"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_3" IS NULL OR "DT_Output_12"."P_3" > 0.0) THEN ln("DT_Output_12"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_4" IS NULL OR "DT_Output_12"."P_4" > 0.0) THEN ln("DT_Output_12"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_5" IS NULL OR "DT_Output_12"."P_5" > 0.0) THEN ln("DT_Output_12"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_6" IS NULL OR "DT_Output_12"."P_6" > 0.0) THEN ln("DT_Output_12"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_7" IS NULL OR "DT_Output_12"."P_7" > 0.0) THEN ln("DT_Output_12"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_8" IS NULL OR "DT_Output_12"."P_8" > 0.0) THEN ln("DT_Output_12"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_9" IS NULL OR "DT_Output_12"."P_9" > 0.0) THEN ln("DT_Output_12"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_8", (9.0 * (CASE WHEN ("DT_Output_12"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_9" IS NULL OR "DT_Output_12"."P_9" > 0.0) THEN ln("DT_Output_12"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_12"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_0" IS NULL OR "DT_Output_12"."P_0" > 0.0) THEN ln("DT_Output_12"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_1" IS NULL OR "DT_Output_12"."P_1" > 0.0) THEN ln("DT_Output_12"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_2" IS NULL OR "DT_Output_12"."P_2" > 0.0) THEN ln("DT_Output_12"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_3" IS NULL OR "DT_Output_12"."P_3" > 0.0) THEN ln("DT_Output_12"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_4" IS NULL OR "DT_Output_12"."P_4" > 0.0) THEN ln("DT_Output_12"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_5" IS NULL OR "DT_Output_12"."P_5" > 0.0) THEN ln("DT_Output_12"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_6" IS NULL OR "DT_Output_12"."P_6" > 0.0) THEN ln("DT_Output_12"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_7" IS NULL OR "DT_Output_12"."P_7" > 0.0) THEN ln("DT_Output_12"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_8" IS NULL OR "DT_Output_12"."P_8" > 0.0) THEN ln("DT_Output_12"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_9" IS NULL OR "DT_Output_12"."P_9" > 0.0) THEN ln("DT_Output_12"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_9", 9.0 * (CASE WHEN ("DT_Output_12"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_9" IS NULL OR "DT_Output_12"."P_9" > 0.0) THEN ln("DT_Output_12"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_12"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_0" IS NULL OR "DT_Output_12"."P_0" > 0.0) THEN ln("DT_Output_12"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_1" IS NULL OR "DT_Output_12"."P_1" > 0.0) THEN ln("DT_Output_12"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_2" IS NULL OR "DT_Output_12"."P_2" > 0.0) THEN ln("DT_Output_12"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_3" IS NULL OR "DT_Output_12"."P_3" > 0.0) THEN ln("DT_Output_12"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_4" IS NULL OR "DT_Output_12"."P_4" > 0.0) THEN ln("DT_Output_12"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_5" IS NULL OR "DT_Output_12"."P_5" > 0.0) THEN ln("DT_Output_12"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_6" IS NULL OR "DT_Output_12"."P_6" > 0.0) THEN ln("DT_Output_12"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_7" IS NULL OR "DT_Output_12"."P_7" > 0.0) THEN ln("DT_Output_12"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_8" IS NULL OR "DT_Output_12"."P_8" > 0.0) THEN ln("DT_Output_12"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_12"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_9" IS NULL OR "DT_Output_12"."P_9" > 0.0) THEN ln("DT_Output_12"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_9" 
FROM "DT_Output_12"), 
"DT_node_lookup_13" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_38 <= -1.6508052349090576) THEN 1 ELSE 2 END AS node_id_2 
FROM "DEGEN_YN11LY_ADS_SCA_2_OUT" "ADS_sca_2_OUT"), 
"DT_node_data_13" AS 
(SELECT "Values".nid AS nid, CAST("Values"."P_0" AS BINARY_DOUBLE) AS "P_0", CAST("Values"."P_1" AS BINARY_DOUBLE) AS "P_1", CAST("Values"."P_2" AS BINARY_DOUBLE) AS "P_2", CAST("Values"."P_3" AS BINARY_DOUBLE) AS "P_3", CAST("Values"."P_4" AS BINARY_DOUBLE) AS "P_4", CAST("Values"."P_5" AS BINARY_DOUBLE) AS "P_5", CAST("Values"."P_6" AS BINARY_DOUBLE) AS "P_6", CAST("Values"."P_7" AS BINARY_DOUBLE) AS "P_7", CAST("Values"."P_8" AS BINARY_DOUBLE) AS "P_8", CAST("Values"."P_9" AS BINARY_DOUBLE) AS "P_9", CAST("Values"."D" AS BINARY_DOUBLE) AS "D", CAST("Values"."DP" AS BINARY_DOUBLE) AS "DP" 
FROM (SELECT 1 AS nid, 0.9999999737995056 AS "P_0", 0.0 AS "P_1", 3.7370186514914505e-09 AS "P_2", 3.744749537113962e-09 AS "P_3", 3.74096042979072e-09 AS "P_4", 3.7447387082028755e-09 AS "P_5", 3.744742836484096e-09 AS "P_6", 0.0 AS "P_7", 3.743534685352828e-09 AS "P_8", 3.744749537113973e-09 AS "P_9", 0 AS "D", 0.9999999737995056 AS "DP" FROM DUAL UNION ALL SELECT 2 AS nid, 3.4044417702480204e-05 AS "P_0", 0.11111111143447572 AS "P_1", 0.11111111101937769 AS "P_2", 0.11111111101851888 AS "P_3", 0.11111111101893975 AS "P_4", 0.11111111101852048 AS "P_5", 0.11111111101851978 AS "P_6", 0.11111111143447495 AS "P_7", 0.11107706660095135 AS "P_8", 0.11111111101851902 AS "P_9", 1 AS "D", 0.11111111143447572 AS "DP" FROM DUAL) "Values"), 
"DT_Output_13" AS 
(SELECT "DT_node_lookup_13"."KEY" AS "KEY", "DT_node_lookup_13".node_id_2 AS node_id_2, "DT_node_data_13".nid AS nid, "DT_node_data_13"."P_0" AS "P_0", "DT_node_data_13"."P_1" AS "P_1", "DT_node_data_13"."P_2" AS "P_2", "DT_node_data_13"."P_3" AS "P_3", "DT_node_data_13"."P_4" AS "P_4", "DT_node_data_13"."P_5" AS "P_5", "DT_node_data_13"."P_6" AS "P_6", "DT_node_data_13"."P_7" AS "P_7", "DT_node_data_13"."P_8" AS "P_8", "DT_node_data_13"."P_9" AS "P_9", "DT_node_data_13"."D" AS "D", "DT_node_data_13"."DP" AS "DP" 
FROM "DT_node_lookup_13" LEFT OUTER JOIN "DT_node_data_13" ON "DT_node_lookup_13".node_id_2 = "DT_node_data_13".nid), 
"ADB_Model_13" AS 
(SELECT "DT_Output_13"."KEY" AS "KEY", (9.0 * (CASE WHEN ("DT_Output_13"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_0" IS NULL OR "DT_Output_13"."P_0" > 0.0) THEN ln("DT_Output_13"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_13"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_0" IS NULL OR "DT_Output_13"."P_0" > 0.0) THEN ln("DT_Output_13"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_1" IS NULL OR "DT_Output_13"."P_1" > 0.0) THEN ln("DT_Output_13"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_2" IS NULL OR "DT_Output_13"."P_2" > 0.0) THEN ln("DT_Output_13"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_3" IS NULL OR "DT_Output_13"."P_3" > 0.0) THEN ln("DT_Output_13"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_4" IS NULL OR "DT_Output_13"."P_4" > 0.0) THEN ln("DT_Output_13"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_5" IS NULL OR "DT_Output_13"."P_5" > 0.0) THEN ln("DT_Output_13"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_6" IS NULL OR "DT_Output_13"."P_6" > 0.0) THEN ln("DT_Output_13"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_7" IS NULL OR "DT_Output_13"."P_7" > 0.0) THEN ln("DT_Output_13"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_8" IS NULL OR "DT_Output_13"."P_8" > 0.0) THEN ln("DT_Output_13"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_9" IS NULL OR "DT_Output_13"."P_9" > 0.0) THEN ln("DT_Output_13"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_0", 9.0 * (CASE WHEN ("DT_Output_13"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_0" IS NULL OR "DT_Output_13"."P_0" > 0.0) THEN ln("DT_Output_13"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_13"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_0" IS NULL OR "DT_Output_13"."P_0" > 0.0) THEN ln("DT_Output_13"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_1" IS NULL OR "DT_Output_13"."P_1" > 0.0) THEN ln("DT_Output_13"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_2" IS NULL OR "DT_Output_13"."P_2" > 0.0) THEN ln("DT_Output_13"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_3" IS NULL OR "DT_Output_13"."P_3" > 0.0) THEN ln("DT_Output_13"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_4" IS NULL OR "DT_Output_13"."P_4" > 0.0) THEN ln("DT_Output_13"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_5" IS NULL OR "DT_Output_13"."P_5" > 0.0) THEN ln("DT_Output_13"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_6" IS NULL OR "DT_Output_13"."P_6" > 0.0) THEN ln("DT_Output_13"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_7" IS NULL OR "DT_Output_13"."P_7" > 0.0) THEN ln("DT_Output_13"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_8" IS NULL OR "DT_Output_13"."P_8" > 0.0) THEN ln("DT_Output_13"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_9" IS NULL OR "DT_Output_13"."P_9" > 0.0) THEN ln("DT_Output_13"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_0", (9.0 * (CASE WHEN ("DT_Output_13"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_1" IS NULL OR "DT_Output_13"."P_1" > 0.0) THEN ln("DT_Output_13"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_13"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_0" IS NULL OR "DT_Output_13"."P_0" > 0.0) THEN ln("DT_Output_13"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_1" IS NULL OR "DT_Output_13"."P_1" > 0.0) THEN ln("DT_Output_13"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_2" IS NULL OR "DT_Output_13"."P_2" > 0.0) THEN ln("DT_Output_13"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_3" IS NULL OR "DT_Output_13"."P_3" > 0.0) THEN ln("DT_Output_13"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_4" IS NULL OR "DT_Output_13"."P_4" > 0.0) THEN ln("DT_Output_13"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_5" IS NULL OR "DT_Output_13"."P_5" > 0.0) THEN ln("DT_Output_13"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_6" IS NULL OR "DT_Output_13"."P_6" > 0.0) THEN ln("DT_Output_13"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_7" IS NULL OR "DT_Output_13"."P_7" > 0.0) THEN ln("DT_Output_13"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_8" IS NULL OR "DT_Output_13"."P_8" > 0.0) THEN ln("DT_Output_13"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_9" IS NULL OR "DT_Output_13"."P_9" > 0.0) THEN ln("DT_Output_13"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_1", 9.0 * (CASE WHEN ("DT_Output_13"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_1" IS NULL OR "DT_Output_13"."P_1" > 0.0) THEN ln("DT_Output_13"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_13"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_0" IS NULL OR "DT_Output_13"."P_0" > 0.0) THEN ln("DT_Output_13"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_1" IS NULL OR "DT_Output_13"."P_1" > 0.0) THEN ln("DT_Output_13"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_2" IS NULL OR "DT_Output_13"."P_2" > 0.0) THEN ln("DT_Output_13"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_3" IS NULL OR "DT_Output_13"."P_3" > 0.0) THEN ln("DT_Output_13"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_4" IS NULL OR "DT_Output_13"."P_4" > 0.0) THEN ln("DT_Output_13"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_5" IS NULL OR "DT_Output_13"."P_5" > 0.0) THEN ln("DT_Output_13"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_6" IS NULL OR "DT_Output_13"."P_6" > 0.0) THEN ln("DT_Output_13"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_7" IS NULL OR "DT_Output_13"."P_7" > 0.0) THEN ln("DT_Output_13"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_8" IS NULL OR "DT_Output_13"."P_8" > 0.0) THEN ln("DT_Output_13"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_9" IS NULL OR "DT_Output_13"."P_9" > 0.0) THEN ln("DT_Output_13"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_1", (9.0 * (CASE WHEN ("DT_Output_13"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_2" IS NULL OR "DT_Output_13"."P_2" > 0.0) THEN ln("DT_Output_13"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_13"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_0" IS NULL OR "DT_Output_13"."P_0" > 0.0) THEN ln("DT_Output_13"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_1" IS NULL OR "DT_Output_13"."P_1" > 0.0) THEN ln("DT_Output_13"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_2" IS NULL OR "DT_Output_13"."P_2" > 0.0) THEN ln("DT_Output_13"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_3" IS NULL OR "DT_Output_13"."P_3" > 0.0) THEN ln("DT_Output_13"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_4" IS NULL OR "DT_Output_13"."P_4" > 0.0) THEN ln("DT_Output_13"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_5" IS NULL OR "DT_Output_13"."P_5" > 0.0) THEN ln("DT_Output_13"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_6" IS NULL OR "DT_Output_13"."P_6" > 0.0) THEN ln("DT_Output_13"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_7" IS NULL OR "DT_Output_13"."P_7" > 0.0) THEN ln("DT_Output_13"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_8" IS NULL OR "DT_Output_13"."P_8" > 0.0) THEN ln("DT_Output_13"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_9" IS NULL OR "DT_Output_13"."P_9" > 0.0) THEN ln("DT_Output_13"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_2", 9.0 * (CASE WHEN ("DT_Output_13"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_2" IS NULL OR "DT_Output_13"."P_2" > 0.0) THEN ln("DT_Output_13"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_13"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_0" IS NULL OR "DT_Output_13"."P_0" > 0.0) THEN ln("DT_Output_13"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_1" IS NULL OR "DT_Output_13"."P_1" > 0.0) THEN ln("DT_Output_13"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_2" IS NULL OR "DT_Output_13"."P_2" > 0.0) THEN ln("DT_Output_13"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_3" IS NULL OR "DT_Output_13"."P_3" > 0.0) THEN ln("DT_Output_13"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_4" IS NULL OR "DT_Output_13"."P_4" > 0.0) THEN ln("DT_Output_13"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_5" IS NULL OR "DT_Output_13"."P_5" > 0.0) THEN ln("DT_Output_13"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_6" IS NULL OR "DT_Output_13"."P_6" > 0.0) THEN ln("DT_Output_13"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_7" IS NULL OR "DT_Output_13"."P_7" > 0.0) THEN ln("DT_Output_13"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_8" IS NULL OR "DT_Output_13"."P_8" > 0.0) THEN ln("DT_Output_13"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_9" IS NULL OR "DT_Output_13"."P_9" > 0.0) THEN ln("DT_Output_13"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_2", (9.0 * (CASE WHEN ("DT_Output_13"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_3" IS NULL OR "DT_Output_13"."P_3" > 0.0) THEN ln("DT_Output_13"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_13"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_0" IS NULL OR "DT_Output_13"."P_0" > 0.0) THEN ln("DT_Output_13"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_1" IS NULL OR "DT_Output_13"."P_1" > 0.0) THEN ln("DT_Output_13"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_2" IS NULL OR "DT_Output_13"."P_2" > 0.0) THEN ln("DT_Output_13"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_3" IS NULL OR "DT_Output_13"."P_3" > 0.0) THEN ln("DT_Output_13"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_4" IS NULL OR "DT_Output_13"."P_4" > 0.0) THEN ln("DT_Output_13"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_5" IS NULL OR "DT_Output_13"."P_5" > 0.0) THEN ln("DT_Output_13"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_6" IS NULL OR "DT_Output_13"."P_6" > 0.0) THEN ln("DT_Output_13"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_7" IS NULL OR "DT_Output_13"."P_7" > 0.0) THEN ln("DT_Output_13"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_8" IS NULL OR "DT_Output_13"."P_8" > 0.0) THEN ln("DT_Output_13"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_9" IS NULL OR "DT_Output_13"."P_9" > 0.0) THEN ln("DT_Output_13"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_3", 9.0 * (CASE WHEN ("DT_Output_13"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_3" IS NULL OR "DT_Output_13"."P_3" > 0.0) THEN ln("DT_Output_13"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_13"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_0" IS NULL OR "DT_Output_13"."P_0" > 0.0) THEN ln("DT_Output_13"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_1" IS NULL OR "DT_Output_13"."P_1" > 0.0) THEN ln("DT_Output_13"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_2" IS NULL OR "DT_Output_13"."P_2" > 0.0) THEN ln("DT_Output_13"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_3" IS NULL OR "DT_Output_13"."P_3" > 0.0) THEN ln("DT_Output_13"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_4" IS NULL OR "DT_Output_13"."P_4" > 0.0) THEN ln("DT_Output_13"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_5" IS NULL OR "DT_Output_13"."P_5" > 0.0) THEN ln("DT_Output_13"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_6" IS NULL OR "DT_Output_13"."P_6" > 0.0) THEN ln("DT_Output_13"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_7" IS NULL OR "DT_Output_13"."P_7" > 0.0) THEN ln("DT_Output_13"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_8" IS NULL OR "DT_Output_13"."P_8" > 0.0) THEN ln("DT_Output_13"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_9" IS NULL OR "DT_Output_13"."P_9" > 0.0) THEN ln("DT_Output_13"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_3", (9.0 * (CASE WHEN ("DT_Output_13"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_4" IS NULL OR "DT_Output_13"."P_4" > 0.0) THEN ln("DT_Output_13"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_13"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_0" IS NULL OR "DT_Output_13"."P_0" > 0.0) THEN ln("DT_Output_13"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_1" IS NULL OR "DT_Output_13"."P_1" > 0.0) THEN ln("DT_Output_13"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_2" IS NULL OR "DT_Output_13"."P_2" > 0.0) THEN ln("DT_Output_13"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_3" IS NULL OR "DT_Output_13"."P_3" > 0.0) THEN ln("DT_Output_13"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_4" IS NULL OR "DT_Output_13"."P_4" > 0.0) THEN ln("DT_Output_13"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_5" IS NULL OR "DT_Output_13"."P_5" > 0.0) THEN ln("DT_Output_13"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_6" IS NULL OR "DT_Output_13"."P_6" > 0.0) THEN ln("DT_Output_13"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_7" IS NULL OR "DT_Output_13"."P_7" > 0.0) THEN ln("DT_Output_13"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_8" IS NULL OR "DT_Output_13"."P_8" > 0.0) THEN ln("DT_Output_13"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_9" IS NULL OR "DT_Output_13"."P_9" > 0.0) THEN ln("DT_Output_13"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_4", 9.0 * (CASE WHEN ("DT_Output_13"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_4" IS NULL OR "DT_Output_13"."P_4" > 0.0) THEN ln("DT_Output_13"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_13"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_0" IS NULL OR "DT_Output_13"."P_0" > 0.0) THEN ln("DT_Output_13"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_1" IS NULL OR "DT_Output_13"."P_1" > 0.0) THEN ln("DT_Output_13"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_2" IS NULL OR "DT_Output_13"."P_2" > 0.0) THEN ln("DT_Output_13"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_3" IS NULL OR "DT_Output_13"."P_3" > 0.0) THEN ln("DT_Output_13"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_4" IS NULL OR "DT_Output_13"."P_4" > 0.0) THEN ln("DT_Output_13"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_5" IS NULL OR "DT_Output_13"."P_5" > 0.0) THEN ln("DT_Output_13"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_6" IS NULL OR "DT_Output_13"."P_6" > 0.0) THEN ln("DT_Output_13"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_7" IS NULL OR "DT_Output_13"."P_7" > 0.0) THEN ln("DT_Output_13"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_8" IS NULL OR "DT_Output_13"."P_8" > 0.0) THEN ln("DT_Output_13"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_9" IS NULL OR "DT_Output_13"."P_9" > 0.0) THEN ln("DT_Output_13"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_4", (9.0 * (CASE WHEN ("DT_Output_13"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_5" IS NULL OR "DT_Output_13"."P_5" > 0.0) THEN ln("DT_Output_13"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_13"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_0" IS NULL OR "DT_Output_13"."P_0" > 0.0) THEN ln("DT_Output_13"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_1" IS NULL OR "DT_Output_13"."P_1" > 0.0) THEN ln("DT_Output_13"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_2" IS NULL OR "DT_Output_13"."P_2" > 0.0) THEN ln("DT_Output_13"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_3" IS NULL OR "DT_Output_13"."P_3" > 0.0) THEN ln("DT_Output_13"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_4" IS NULL OR "DT_Output_13"."P_4" > 0.0) THEN ln("DT_Output_13"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_5" IS NULL OR "DT_Output_13"."P_5" > 0.0) THEN ln("DT_Output_13"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_6" IS NULL OR "DT_Output_13"."P_6" > 0.0) THEN ln("DT_Output_13"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_7" IS NULL OR "DT_Output_13"."P_7" > 0.0) THEN ln("DT_Output_13"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_8" IS NULL OR "DT_Output_13"."P_8" > 0.0) THEN ln("DT_Output_13"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_9" IS NULL OR "DT_Output_13"."P_9" > 0.0) THEN ln("DT_Output_13"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_5", 9.0 * (CASE WHEN ("DT_Output_13"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_5" IS NULL OR "DT_Output_13"."P_5" > 0.0) THEN ln("DT_Output_13"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_13"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_0" IS NULL OR "DT_Output_13"."P_0" > 0.0) THEN ln("DT_Output_13"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_1" IS NULL OR "DT_Output_13"."P_1" > 0.0) THEN ln("DT_Output_13"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_2" IS NULL OR "DT_Output_13"."P_2" > 0.0) THEN ln("DT_Output_13"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_3" IS NULL OR "DT_Output_13"."P_3" > 0.0) THEN ln("DT_Output_13"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_4" IS NULL OR "DT_Output_13"."P_4" > 0.0) THEN ln("DT_Output_13"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_5" IS NULL OR "DT_Output_13"."P_5" > 0.0) THEN ln("DT_Output_13"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_6" IS NULL OR "DT_Output_13"."P_6" > 0.0) THEN ln("DT_Output_13"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_7" IS NULL OR "DT_Output_13"."P_7" > 0.0) THEN ln("DT_Output_13"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_8" IS NULL OR "DT_Output_13"."P_8" > 0.0) THEN ln("DT_Output_13"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_9" IS NULL OR "DT_Output_13"."P_9" > 0.0) THEN ln("DT_Output_13"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_5", (9.0 * (CASE WHEN ("DT_Output_13"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_6" IS NULL OR "DT_Output_13"."P_6" > 0.0) THEN ln("DT_Output_13"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_13"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_0" IS NULL OR "DT_Output_13"."P_0" > 0.0) THEN ln("DT_Output_13"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_1" IS NULL OR "DT_Output_13"."P_1" > 0.0) THEN ln("DT_Output_13"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_2" IS NULL OR "DT_Output_13"."P_2" > 0.0) THEN ln("DT_Output_13"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_3" IS NULL OR "DT_Output_13"."P_3" > 0.0) THEN ln("DT_Output_13"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_4" IS NULL OR "DT_Output_13"."P_4" > 0.0) THEN ln("DT_Output_13"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_5" IS NULL OR "DT_Output_13"."P_5" > 0.0) THEN ln("DT_Output_13"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_6" IS NULL OR "DT_Output_13"."P_6" > 0.0) THEN ln("DT_Output_13"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_7" IS NULL OR "DT_Output_13"."P_7" > 0.0) THEN ln("DT_Output_13"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_8" IS NULL OR "DT_Output_13"."P_8" > 0.0) THEN ln("DT_Output_13"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_9" IS NULL OR "DT_Output_13"."P_9" > 0.0) THEN ln("DT_Output_13"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_6", 9.0 * (CASE WHEN ("DT_Output_13"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_6" IS NULL OR "DT_Output_13"."P_6" > 0.0) THEN ln("DT_Output_13"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_13"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_0" IS NULL OR "DT_Output_13"."P_0" > 0.0) THEN ln("DT_Output_13"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_1" IS NULL OR "DT_Output_13"."P_1" > 0.0) THEN ln("DT_Output_13"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_2" IS NULL OR "DT_Output_13"."P_2" > 0.0) THEN ln("DT_Output_13"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_3" IS NULL OR "DT_Output_13"."P_3" > 0.0) THEN ln("DT_Output_13"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_4" IS NULL OR "DT_Output_13"."P_4" > 0.0) THEN ln("DT_Output_13"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_5" IS NULL OR "DT_Output_13"."P_5" > 0.0) THEN ln("DT_Output_13"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_6" IS NULL OR "DT_Output_13"."P_6" > 0.0) THEN ln("DT_Output_13"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_7" IS NULL OR "DT_Output_13"."P_7" > 0.0) THEN ln("DT_Output_13"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_8" IS NULL OR "DT_Output_13"."P_8" > 0.0) THEN ln("DT_Output_13"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_9" IS NULL OR "DT_Output_13"."P_9" > 0.0) THEN ln("DT_Output_13"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_6", (9.0 * (CASE WHEN ("DT_Output_13"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_7" IS NULL OR "DT_Output_13"."P_7" > 0.0) THEN ln("DT_Output_13"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_13"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_0" IS NULL OR "DT_Output_13"."P_0" > 0.0) THEN ln("DT_Output_13"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_1" IS NULL OR "DT_Output_13"."P_1" > 0.0) THEN ln("DT_Output_13"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_2" IS NULL OR "DT_Output_13"."P_2" > 0.0) THEN ln("DT_Output_13"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_3" IS NULL OR "DT_Output_13"."P_3" > 0.0) THEN ln("DT_Output_13"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_4" IS NULL OR "DT_Output_13"."P_4" > 0.0) THEN ln("DT_Output_13"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_5" IS NULL OR "DT_Output_13"."P_5" > 0.0) THEN ln("DT_Output_13"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_6" IS NULL OR "DT_Output_13"."P_6" > 0.0) THEN ln("DT_Output_13"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_7" IS NULL OR "DT_Output_13"."P_7" > 0.0) THEN ln("DT_Output_13"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_8" IS NULL OR "DT_Output_13"."P_8" > 0.0) THEN ln("DT_Output_13"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_9" IS NULL OR "DT_Output_13"."P_9" > 0.0) THEN ln("DT_Output_13"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_7", 9.0 * (CASE WHEN ("DT_Output_13"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_7" IS NULL OR "DT_Output_13"."P_7" > 0.0) THEN ln("DT_Output_13"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_13"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_0" IS NULL OR "DT_Output_13"."P_0" > 0.0) THEN ln("DT_Output_13"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_1" IS NULL OR "DT_Output_13"."P_1" > 0.0) THEN ln("DT_Output_13"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_2" IS NULL OR "DT_Output_13"."P_2" > 0.0) THEN ln("DT_Output_13"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_3" IS NULL OR "DT_Output_13"."P_3" > 0.0) THEN ln("DT_Output_13"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_4" IS NULL OR "DT_Output_13"."P_4" > 0.0) THEN ln("DT_Output_13"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_5" IS NULL OR "DT_Output_13"."P_5" > 0.0) THEN ln("DT_Output_13"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_6" IS NULL OR "DT_Output_13"."P_6" > 0.0) THEN ln("DT_Output_13"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_7" IS NULL OR "DT_Output_13"."P_7" > 0.0) THEN ln("DT_Output_13"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_8" IS NULL OR "DT_Output_13"."P_8" > 0.0) THEN ln("DT_Output_13"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_9" IS NULL OR "DT_Output_13"."P_9" > 0.0) THEN ln("DT_Output_13"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_7", (9.0 * (CASE WHEN ("DT_Output_13"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_8" IS NULL OR "DT_Output_13"."P_8" > 0.0) THEN ln("DT_Output_13"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_13"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_0" IS NULL OR "DT_Output_13"."P_0" > 0.0) THEN ln("DT_Output_13"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_1" IS NULL OR "DT_Output_13"."P_1" > 0.0) THEN ln("DT_Output_13"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_2" IS NULL OR "DT_Output_13"."P_2" > 0.0) THEN ln("DT_Output_13"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_3" IS NULL OR "DT_Output_13"."P_3" > 0.0) THEN ln("DT_Output_13"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_4" IS NULL OR "DT_Output_13"."P_4" > 0.0) THEN ln("DT_Output_13"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_5" IS NULL OR "DT_Output_13"."P_5" > 0.0) THEN ln("DT_Output_13"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_6" IS NULL OR "DT_Output_13"."P_6" > 0.0) THEN ln("DT_Output_13"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_7" IS NULL OR "DT_Output_13"."P_7" > 0.0) THEN ln("DT_Output_13"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_8" IS NULL OR "DT_Output_13"."P_8" > 0.0) THEN ln("DT_Output_13"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_9" IS NULL OR "DT_Output_13"."P_9" > 0.0) THEN ln("DT_Output_13"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_8", 9.0 * (CASE WHEN ("DT_Output_13"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_8" IS NULL OR "DT_Output_13"."P_8" > 0.0) THEN ln("DT_Output_13"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_13"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_0" IS NULL OR "DT_Output_13"."P_0" > 0.0) THEN ln("DT_Output_13"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_1" IS NULL OR "DT_Output_13"."P_1" > 0.0) THEN ln("DT_Output_13"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_2" IS NULL OR "DT_Output_13"."P_2" > 0.0) THEN ln("DT_Output_13"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_3" IS NULL OR "DT_Output_13"."P_3" > 0.0) THEN ln("DT_Output_13"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_4" IS NULL OR "DT_Output_13"."P_4" > 0.0) THEN ln("DT_Output_13"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_5" IS NULL OR "DT_Output_13"."P_5" > 0.0) THEN ln("DT_Output_13"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_6" IS NULL OR "DT_Output_13"."P_6" > 0.0) THEN ln("DT_Output_13"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_7" IS NULL OR "DT_Output_13"."P_7" > 0.0) THEN ln("DT_Output_13"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_8" IS NULL OR "DT_Output_13"."P_8" > 0.0) THEN ln("DT_Output_13"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_9" IS NULL OR "DT_Output_13"."P_9" > 0.0) THEN ln("DT_Output_13"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_8", (9.0 * (CASE WHEN ("DT_Output_13"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_9" IS NULL OR "DT_Output_13"."P_9" > 0.0) THEN ln("DT_Output_13"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_13"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_0" IS NULL OR "DT_Output_13"."P_0" > 0.0) THEN ln("DT_Output_13"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_1" IS NULL OR "DT_Output_13"."P_1" > 0.0) THEN ln("DT_Output_13"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_2" IS NULL OR "DT_Output_13"."P_2" > 0.0) THEN ln("DT_Output_13"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_3" IS NULL OR "DT_Output_13"."P_3" > 0.0) THEN ln("DT_Output_13"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_4" IS NULL OR "DT_Output_13"."P_4" > 0.0) THEN ln("DT_Output_13"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_5" IS NULL OR "DT_Output_13"."P_5" > 0.0) THEN ln("DT_Output_13"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_6" IS NULL OR "DT_Output_13"."P_6" > 0.0) THEN ln("DT_Output_13"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_7" IS NULL OR "DT_Output_13"."P_7" > 0.0) THEN ln("DT_Output_13"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_8" IS NULL OR "DT_Output_13"."P_8" > 0.0) THEN ln("DT_Output_13"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_9" IS NULL OR "DT_Output_13"."P_9" > 0.0) THEN ln("DT_Output_13"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_9", 9.0 * (CASE WHEN ("DT_Output_13"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_9" IS NULL OR "DT_Output_13"."P_9" > 0.0) THEN ln("DT_Output_13"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_13"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_0" IS NULL OR "DT_Output_13"."P_0" > 0.0) THEN ln("DT_Output_13"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_1" IS NULL OR "DT_Output_13"."P_1" > 0.0) THEN ln("DT_Output_13"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_2" IS NULL OR "DT_Output_13"."P_2" > 0.0) THEN ln("DT_Output_13"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_3" IS NULL OR "DT_Output_13"."P_3" > 0.0) THEN ln("DT_Output_13"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_4" IS NULL OR "DT_Output_13"."P_4" > 0.0) THEN ln("DT_Output_13"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_5" IS NULL OR "DT_Output_13"."P_5" > 0.0) THEN ln("DT_Output_13"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_6" IS NULL OR "DT_Output_13"."P_6" > 0.0) THEN ln("DT_Output_13"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_7" IS NULL OR "DT_Output_13"."P_7" > 0.0) THEN ln("DT_Output_13"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_8" IS NULL OR "DT_Output_13"."P_8" > 0.0) THEN ln("DT_Output_13"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_13"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_9" IS NULL OR "DT_Output_13"."P_9" > 0.0) THEN ln("DT_Output_13"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_9" 
FROM "DT_Output_13"), 
"DT_node_lookup_14" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_30 <= -1.555469036102295) THEN 1 ELSE 2 END AS node_id_2 
FROM "DEGEN_YN11LY_ADS_SCA_2_OUT" "ADS_sca_2_OUT"), 
"DT_node_data_14" AS 
(SELECT "Values".nid AS nid, CAST("Values"."P_0" AS BINARY_DOUBLE) AS "P_0", CAST("Values"."P_1" AS BINARY_DOUBLE) AS "P_1", CAST("Values"."P_2" AS BINARY_DOUBLE) AS "P_2", CAST("Values"."P_3" AS BINARY_DOUBLE) AS "P_3", CAST("Values"."P_4" AS BINARY_DOUBLE) AS "P_4", CAST("Values"."P_5" AS BINARY_DOUBLE) AS "P_5", CAST("Values"."P_6" AS BINARY_DOUBLE) AS "P_6", CAST("Values"."P_7" AS BINARY_DOUBLE) AS "P_7", CAST("Values"."P_8" AS BINARY_DOUBLE) AS "P_8", CAST("Values"."P_9" AS BINARY_DOUBLE) AS "P_9", CAST("Values"."D" AS BINARY_DOUBLE) AS "D", CAST("Values"."DP" AS BINARY_DOUBLE) AS "DP" 
FROM (SELECT 1 AS nid, 0.9975547956915788 AS "P_0", 0.00030565054842119857 AS "P_1", 0.0003056504920901155 AS "P_2", 0.0003056505495654354 AS "P_3", 0.0003056505213574194 AS "P_4", 0.00030565054948471557 AS "P_5", 0.0003056505495154885 AS "P_6", 0.000305650548421201 AS "P_7", 0.0 AS "P_8", 0.0003056505495654356 AS "P_9", 0 AS "D", 0.9975547956915788 AS "DP" FROM DUAL UNION ALL SELECT 2 AS nid, 2.3316488991300373e-10 AS "P_0", 0.11110732715929277 AS "P_1", 0.11110732739873429 AS "P_2", 0.11110732739233076 AS "P_3", 0.11110732739547373 AS "P_4", 0.1111073273923401 AS "P_5", 0.11110732739233618 AS "P_6", 0.11110732715929299 AS "P_7", 0.11114138108470312 AS "P_8", 0.1111073273923311 AS "P_9", 8 AS "D", 0.11114138108470312 AS "DP" FROM DUAL) "Values"), 
"DT_Output_14" AS 
(SELECT "DT_node_lookup_14"."KEY" AS "KEY", "DT_node_lookup_14".node_id_2 AS node_id_2, "DT_node_data_14".nid AS nid, "DT_node_data_14"."P_0" AS "P_0", "DT_node_data_14"."P_1" AS "P_1", "DT_node_data_14"."P_2" AS "P_2", "DT_node_data_14"."P_3" AS "P_3", "DT_node_data_14"."P_4" AS "P_4", "DT_node_data_14"."P_5" AS "P_5", "DT_node_data_14"."P_6" AS "P_6", "DT_node_data_14"."P_7" AS "P_7", "DT_node_data_14"."P_8" AS "P_8", "DT_node_data_14"."P_9" AS "P_9", "DT_node_data_14"."D" AS "D", "DT_node_data_14"."DP" AS "DP" 
FROM "DT_node_lookup_14" LEFT OUTER JOIN "DT_node_data_14" ON "DT_node_lookup_14".node_id_2 = "DT_node_data_14".nid), 
"ADB_Model_14" AS 
(SELECT "DT_Output_14"."KEY" AS "KEY", (9.0 * (CASE WHEN ("DT_Output_14"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_0" IS NULL OR "DT_Output_14"."P_0" > 0.0) THEN ln("DT_Output_14"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_14"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_0" IS NULL OR "DT_Output_14"."P_0" > 0.0) THEN ln("DT_Output_14"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_1" IS NULL OR "DT_Output_14"."P_1" > 0.0) THEN ln("DT_Output_14"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_2" IS NULL OR "DT_Output_14"."P_2" > 0.0) THEN ln("DT_Output_14"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_3" IS NULL OR "DT_Output_14"."P_3" > 0.0) THEN ln("DT_Output_14"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_4" IS NULL OR "DT_Output_14"."P_4" > 0.0) THEN ln("DT_Output_14"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_5" IS NULL OR "DT_Output_14"."P_5" > 0.0) THEN ln("DT_Output_14"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_6" IS NULL OR "DT_Output_14"."P_6" > 0.0) THEN ln("DT_Output_14"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_7" IS NULL OR "DT_Output_14"."P_7" > 0.0) THEN ln("DT_Output_14"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_8" IS NULL OR "DT_Output_14"."P_8" > 0.0) THEN ln("DT_Output_14"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_9" IS NULL OR "DT_Output_14"."P_9" > 0.0) THEN ln("DT_Output_14"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_0", 9.0 * (CASE WHEN ("DT_Output_14"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_0" IS NULL OR "DT_Output_14"."P_0" > 0.0) THEN ln("DT_Output_14"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_14"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_0" IS NULL OR "DT_Output_14"."P_0" > 0.0) THEN ln("DT_Output_14"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_1" IS NULL OR "DT_Output_14"."P_1" > 0.0) THEN ln("DT_Output_14"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_2" IS NULL OR "DT_Output_14"."P_2" > 0.0) THEN ln("DT_Output_14"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_3" IS NULL OR "DT_Output_14"."P_3" > 0.0) THEN ln("DT_Output_14"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_4" IS NULL OR "DT_Output_14"."P_4" > 0.0) THEN ln("DT_Output_14"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_5" IS NULL OR "DT_Output_14"."P_5" > 0.0) THEN ln("DT_Output_14"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_6" IS NULL OR "DT_Output_14"."P_6" > 0.0) THEN ln("DT_Output_14"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_7" IS NULL OR "DT_Output_14"."P_7" > 0.0) THEN ln("DT_Output_14"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_8" IS NULL OR "DT_Output_14"."P_8" > 0.0) THEN ln("DT_Output_14"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_9" IS NULL OR "DT_Output_14"."P_9" > 0.0) THEN ln("DT_Output_14"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_0", (9.0 * (CASE WHEN ("DT_Output_14"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_1" IS NULL OR "DT_Output_14"."P_1" > 0.0) THEN ln("DT_Output_14"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_14"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_0" IS NULL OR "DT_Output_14"."P_0" > 0.0) THEN ln("DT_Output_14"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_1" IS NULL OR "DT_Output_14"."P_1" > 0.0) THEN ln("DT_Output_14"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_2" IS NULL OR "DT_Output_14"."P_2" > 0.0) THEN ln("DT_Output_14"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_3" IS NULL OR "DT_Output_14"."P_3" > 0.0) THEN ln("DT_Output_14"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_4" IS NULL OR "DT_Output_14"."P_4" > 0.0) THEN ln("DT_Output_14"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_5" IS NULL OR "DT_Output_14"."P_5" > 0.0) THEN ln("DT_Output_14"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_6" IS NULL OR "DT_Output_14"."P_6" > 0.0) THEN ln("DT_Output_14"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_7" IS NULL OR "DT_Output_14"."P_7" > 0.0) THEN ln("DT_Output_14"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_8" IS NULL OR "DT_Output_14"."P_8" > 0.0) THEN ln("DT_Output_14"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_9" IS NULL OR "DT_Output_14"."P_9" > 0.0) THEN ln("DT_Output_14"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_1", 9.0 * (CASE WHEN ("DT_Output_14"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_1" IS NULL OR "DT_Output_14"."P_1" > 0.0) THEN ln("DT_Output_14"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_14"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_0" IS NULL OR "DT_Output_14"."P_0" > 0.0) THEN ln("DT_Output_14"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_1" IS NULL OR "DT_Output_14"."P_1" > 0.0) THEN ln("DT_Output_14"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_2" IS NULL OR "DT_Output_14"."P_2" > 0.0) THEN ln("DT_Output_14"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_3" IS NULL OR "DT_Output_14"."P_3" > 0.0) THEN ln("DT_Output_14"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_4" IS NULL OR "DT_Output_14"."P_4" > 0.0) THEN ln("DT_Output_14"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_5" IS NULL OR "DT_Output_14"."P_5" > 0.0) THEN ln("DT_Output_14"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_6" IS NULL OR "DT_Output_14"."P_6" > 0.0) THEN ln("DT_Output_14"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_7" IS NULL OR "DT_Output_14"."P_7" > 0.0) THEN ln("DT_Output_14"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_8" IS NULL OR "DT_Output_14"."P_8" > 0.0) THEN ln("DT_Output_14"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_9" IS NULL OR "DT_Output_14"."P_9" > 0.0) THEN ln("DT_Output_14"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_1", (9.0 * (CASE WHEN ("DT_Output_14"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_2" IS NULL OR "DT_Output_14"."P_2" > 0.0) THEN ln("DT_Output_14"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_14"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_0" IS NULL OR "DT_Output_14"."P_0" > 0.0) THEN ln("DT_Output_14"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_1" IS NULL OR "DT_Output_14"."P_1" > 0.0) THEN ln("DT_Output_14"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_2" IS NULL OR "DT_Output_14"."P_2" > 0.0) THEN ln("DT_Output_14"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_3" IS NULL OR "DT_Output_14"."P_3" > 0.0) THEN ln("DT_Output_14"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_4" IS NULL OR "DT_Output_14"."P_4" > 0.0) THEN ln("DT_Output_14"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_5" IS NULL OR "DT_Output_14"."P_5" > 0.0) THEN ln("DT_Output_14"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_6" IS NULL OR "DT_Output_14"."P_6" > 0.0) THEN ln("DT_Output_14"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_7" IS NULL OR "DT_Output_14"."P_7" > 0.0) THEN ln("DT_Output_14"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_8" IS NULL OR "DT_Output_14"."P_8" > 0.0) THEN ln("DT_Output_14"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_9" IS NULL OR "DT_Output_14"."P_9" > 0.0) THEN ln("DT_Output_14"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_2", 9.0 * (CASE WHEN ("DT_Output_14"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_2" IS NULL OR "DT_Output_14"."P_2" > 0.0) THEN ln("DT_Output_14"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_14"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_0" IS NULL OR "DT_Output_14"."P_0" > 0.0) THEN ln("DT_Output_14"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_1" IS NULL OR "DT_Output_14"."P_1" > 0.0) THEN ln("DT_Output_14"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_2" IS NULL OR "DT_Output_14"."P_2" > 0.0) THEN ln("DT_Output_14"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_3" IS NULL OR "DT_Output_14"."P_3" > 0.0) THEN ln("DT_Output_14"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_4" IS NULL OR "DT_Output_14"."P_4" > 0.0) THEN ln("DT_Output_14"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_5" IS NULL OR "DT_Output_14"."P_5" > 0.0) THEN ln("DT_Output_14"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_6" IS NULL OR "DT_Output_14"."P_6" > 0.0) THEN ln("DT_Output_14"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_7" IS NULL OR "DT_Output_14"."P_7" > 0.0) THEN ln("DT_Output_14"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_8" IS NULL OR "DT_Output_14"."P_8" > 0.0) THEN ln("DT_Output_14"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_9" IS NULL OR "DT_Output_14"."P_9" > 0.0) THEN ln("DT_Output_14"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_2", (9.0 * (CASE WHEN ("DT_Output_14"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_3" IS NULL OR "DT_Output_14"."P_3" > 0.0) THEN ln("DT_Output_14"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_14"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_0" IS NULL OR "DT_Output_14"."P_0" > 0.0) THEN ln("DT_Output_14"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_1" IS NULL OR "DT_Output_14"."P_1" > 0.0) THEN ln("DT_Output_14"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_2" IS NULL OR "DT_Output_14"."P_2" > 0.0) THEN ln("DT_Output_14"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_3" IS NULL OR "DT_Output_14"."P_3" > 0.0) THEN ln("DT_Output_14"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_4" IS NULL OR "DT_Output_14"."P_4" > 0.0) THEN ln("DT_Output_14"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_5" IS NULL OR "DT_Output_14"."P_5" > 0.0) THEN ln("DT_Output_14"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_6" IS NULL OR "DT_Output_14"."P_6" > 0.0) THEN ln("DT_Output_14"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_7" IS NULL OR "DT_Output_14"."P_7" > 0.0) THEN ln("DT_Output_14"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_8" IS NULL OR "DT_Output_14"."P_8" > 0.0) THEN ln("DT_Output_14"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_9" IS NULL OR "DT_Output_14"."P_9" > 0.0) THEN ln("DT_Output_14"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_3", 9.0 * (CASE WHEN ("DT_Output_14"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_3" IS NULL OR "DT_Output_14"."P_3" > 0.0) THEN ln("DT_Output_14"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_14"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_0" IS NULL OR "DT_Output_14"."P_0" > 0.0) THEN ln("DT_Output_14"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_1" IS NULL OR "DT_Output_14"."P_1" > 0.0) THEN ln("DT_Output_14"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_2" IS NULL OR "DT_Output_14"."P_2" > 0.0) THEN ln("DT_Output_14"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_3" IS NULL OR "DT_Output_14"."P_3" > 0.0) THEN ln("DT_Output_14"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_4" IS NULL OR "DT_Output_14"."P_4" > 0.0) THEN ln("DT_Output_14"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_5" IS NULL OR "DT_Output_14"."P_5" > 0.0) THEN ln("DT_Output_14"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_6" IS NULL OR "DT_Output_14"."P_6" > 0.0) THEN ln("DT_Output_14"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_7" IS NULL OR "DT_Output_14"."P_7" > 0.0) THEN ln("DT_Output_14"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_8" IS NULL OR "DT_Output_14"."P_8" > 0.0) THEN ln("DT_Output_14"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_9" IS NULL OR "DT_Output_14"."P_9" > 0.0) THEN ln("DT_Output_14"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_3", (9.0 * (CASE WHEN ("DT_Output_14"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_4" IS NULL OR "DT_Output_14"."P_4" > 0.0) THEN ln("DT_Output_14"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_14"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_0" IS NULL OR "DT_Output_14"."P_0" > 0.0) THEN ln("DT_Output_14"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_1" IS NULL OR "DT_Output_14"."P_1" > 0.0) THEN ln("DT_Output_14"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_2" IS NULL OR "DT_Output_14"."P_2" > 0.0) THEN ln("DT_Output_14"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_3" IS NULL OR "DT_Output_14"."P_3" > 0.0) THEN ln("DT_Output_14"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_4" IS NULL OR "DT_Output_14"."P_4" > 0.0) THEN ln("DT_Output_14"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_5" IS NULL OR "DT_Output_14"."P_5" > 0.0) THEN ln("DT_Output_14"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_6" IS NULL OR "DT_Output_14"."P_6" > 0.0) THEN ln("DT_Output_14"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_7" IS NULL OR "DT_Output_14"."P_7" > 0.0) THEN ln("DT_Output_14"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_8" IS NULL OR "DT_Output_14"."P_8" > 0.0) THEN ln("DT_Output_14"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_9" IS NULL OR "DT_Output_14"."P_9" > 0.0) THEN ln("DT_Output_14"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_4", 9.0 * (CASE WHEN ("DT_Output_14"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_4" IS NULL OR "DT_Output_14"."P_4" > 0.0) THEN ln("DT_Output_14"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_14"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_0" IS NULL OR "DT_Output_14"."P_0" > 0.0) THEN ln("DT_Output_14"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_1" IS NULL OR "DT_Output_14"."P_1" > 0.0) THEN ln("DT_Output_14"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_2" IS NULL OR "DT_Output_14"."P_2" > 0.0) THEN ln("DT_Output_14"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_3" IS NULL OR "DT_Output_14"."P_3" > 0.0) THEN ln("DT_Output_14"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_4" IS NULL OR "DT_Output_14"."P_4" > 0.0) THEN ln("DT_Output_14"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_5" IS NULL OR "DT_Output_14"."P_5" > 0.0) THEN ln("DT_Output_14"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_6" IS NULL OR "DT_Output_14"."P_6" > 0.0) THEN ln("DT_Output_14"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_7" IS NULL OR "DT_Output_14"."P_7" > 0.0) THEN ln("DT_Output_14"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_8" IS NULL OR "DT_Output_14"."P_8" > 0.0) THEN ln("DT_Output_14"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_9" IS NULL OR "DT_Output_14"."P_9" > 0.0) THEN ln("DT_Output_14"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_4", (9.0 * (CASE WHEN ("DT_Output_14"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_5" IS NULL OR "DT_Output_14"."P_5" > 0.0) THEN ln("DT_Output_14"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_14"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_0" IS NULL OR "DT_Output_14"."P_0" > 0.0) THEN ln("DT_Output_14"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_1" IS NULL OR "DT_Output_14"."P_1" > 0.0) THEN ln("DT_Output_14"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_2" IS NULL OR "DT_Output_14"."P_2" > 0.0) THEN ln("DT_Output_14"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_3" IS NULL OR "DT_Output_14"."P_3" > 0.0) THEN ln("DT_Output_14"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_4" IS NULL OR "DT_Output_14"."P_4" > 0.0) THEN ln("DT_Output_14"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_5" IS NULL OR "DT_Output_14"."P_5" > 0.0) THEN ln("DT_Output_14"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_6" IS NULL OR "DT_Output_14"."P_6" > 0.0) THEN ln("DT_Output_14"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_7" IS NULL OR "DT_Output_14"."P_7" > 0.0) THEN ln("DT_Output_14"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_8" IS NULL OR "DT_Output_14"."P_8" > 0.0) THEN ln("DT_Output_14"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_9" IS NULL OR "DT_Output_14"."P_9" > 0.0) THEN ln("DT_Output_14"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_5", 9.0 * (CASE WHEN ("DT_Output_14"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_5" IS NULL OR "DT_Output_14"."P_5" > 0.0) THEN ln("DT_Output_14"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_14"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_0" IS NULL OR "DT_Output_14"."P_0" > 0.0) THEN ln("DT_Output_14"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_1" IS NULL OR "DT_Output_14"."P_1" > 0.0) THEN ln("DT_Output_14"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_2" IS NULL OR "DT_Output_14"."P_2" > 0.0) THEN ln("DT_Output_14"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_3" IS NULL OR "DT_Output_14"."P_3" > 0.0) THEN ln("DT_Output_14"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_4" IS NULL OR "DT_Output_14"."P_4" > 0.0) THEN ln("DT_Output_14"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_5" IS NULL OR "DT_Output_14"."P_5" > 0.0) THEN ln("DT_Output_14"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_6" IS NULL OR "DT_Output_14"."P_6" > 0.0) THEN ln("DT_Output_14"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_7" IS NULL OR "DT_Output_14"."P_7" > 0.0) THEN ln("DT_Output_14"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_8" IS NULL OR "DT_Output_14"."P_8" > 0.0) THEN ln("DT_Output_14"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_9" IS NULL OR "DT_Output_14"."P_9" > 0.0) THEN ln("DT_Output_14"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_5", (9.0 * (CASE WHEN ("DT_Output_14"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_6" IS NULL OR "DT_Output_14"."P_6" > 0.0) THEN ln("DT_Output_14"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_14"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_0" IS NULL OR "DT_Output_14"."P_0" > 0.0) THEN ln("DT_Output_14"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_1" IS NULL OR "DT_Output_14"."P_1" > 0.0) THEN ln("DT_Output_14"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_2" IS NULL OR "DT_Output_14"."P_2" > 0.0) THEN ln("DT_Output_14"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_3" IS NULL OR "DT_Output_14"."P_3" > 0.0) THEN ln("DT_Output_14"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_4" IS NULL OR "DT_Output_14"."P_4" > 0.0) THEN ln("DT_Output_14"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_5" IS NULL OR "DT_Output_14"."P_5" > 0.0) THEN ln("DT_Output_14"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_6" IS NULL OR "DT_Output_14"."P_6" > 0.0) THEN ln("DT_Output_14"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_7" IS NULL OR "DT_Output_14"."P_7" > 0.0) THEN ln("DT_Output_14"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_8" IS NULL OR "DT_Output_14"."P_8" > 0.0) THEN ln("DT_Output_14"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_9" IS NULL OR "DT_Output_14"."P_9" > 0.0) THEN ln("DT_Output_14"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_6", 9.0 * (CASE WHEN ("DT_Output_14"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_6" IS NULL OR "DT_Output_14"."P_6" > 0.0) THEN ln("DT_Output_14"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_14"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_0" IS NULL OR "DT_Output_14"."P_0" > 0.0) THEN ln("DT_Output_14"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_1" IS NULL OR "DT_Output_14"."P_1" > 0.0) THEN ln("DT_Output_14"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_2" IS NULL OR "DT_Output_14"."P_2" > 0.0) THEN ln("DT_Output_14"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_3" IS NULL OR "DT_Output_14"."P_3" > 0.0) THEN ln("DT_Output_14"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_4" IS NULL OR "DT_Output_14"."P_4" > 0.0) THEN ln("DT_Output_14"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_5" IS NULL OR "DT_Output_14"."P_5" > 0.0) THEN ln("DT_Output_14"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_6" IS NULL OR "DT_Output_14"."P_6" > 0.0) THEN ln("DT_Output_14"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_7" IS NULL OR "DT_Output_14"."P_7" > 0.0) THEN ln("DT_Output_14"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_8" IS NULL OR "DT_Output_14"."P_8" > 0.0) THEN ln("DT_Output_14"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_9" IS NULL OR "DT_Output_14"."P_9" > 0.0) THEN ln("DT_Output_14"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_6", (9.0 * (CASE WHEN ("DT_Output_14"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_7" IS NULL OR "DT_Output_14"."P_7" > 0.0) THEN ln("DT_Output_14"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_14"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_0" IS NULL OR "DT_Output_14"."P_0" > 0.0) THEN ln("DT_Output_14"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_1" IS NULL OR "DT_Output_14"."P_1" > 0.0) THEN ln("DT_Output_14"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_2" IS NULL OR "DT_Output_14"."P_2" > 0.0) THEN ln("DT_Output_14"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_3" IS NULL OR "DT_Output_14"."P_3" > 0.0) THEN ln("DT_Output_14"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_4" IS NULL OR "DT_Output_14"."P_4" > 0.0) THEN ln("DT_Output_14"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_5" IS NULL OR "DT_Output_14"."P_5" > 0.0) THEN ln("DT_Output_14"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_6" IS NULL OR "DT_Output_14"."P_6" > 0.0) THEN ln("DT_Output_14"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_7" IS NULL OR "DT_Output_14"."P_7" > 0.0) THEN ln("DT_Output_14"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_8" IS NULL OR "DT_Output_14"."P_8" > 0.0) THEN ln("DT_Output_14"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_9" IS NULL OR "DT_Output_14"."P_9" > 0.0) THEN ln("DT_Output_14"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_7", 9.0 * (CASE WHEN ("DT_Output_14"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_7" IS NULL OR "DT_Output_14"."P_7" > 0.0) THEN ln("DT_Output_14"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_14"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_0" IS NULL OR "DT_Output_14"."P_0" > 0.0) THEN ln("DT_Output_14"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_1" IS NULL OR "DT_Output_14"."P_1" > 0.0) THEN ln("DT_Output_14"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_2" IS NULL OR "DT_Output_14"."P_2" > 0.0) THEN ln("DT_Output_14"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_3" IS NULL OR "DT_Output_14"."P_3" > 0.0) THEN ln("DT_Output_14"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_4" IS NULL OR "DT_Output_14"."P_4" > 0.0) THEN ln("DT_Output_14"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_5" IS NULL OR "DT_Output_14"."P_5" > 0.0) THEN ln("DT_Output_14"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_6" IS NULL OR "DT_Output_14"."P_6" > 0.0) THEN ln("DT_Output_14"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_7" IS NULL OR "DT_Output_14"."P_7" > 0.0) THEN ln("DT_Output_14"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_8" IS NULL OR "DT_Output_14"."P_8" > 0.0) THEN ln("DT_Output_14"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_9" IS NULL OR "DT_Output_14"."P_9" > 0.0) THEN ln("DT_Output_14"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_7", (9.0 * (CASE WHEN ("DT_Output_14"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_8" IS NULL OR "DT_Output_14"."P_8" > 0.0) THEN ln("DT_Output_14"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_14"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_0" IS NULL OR "DT_Output_14"."P_0" > 0.0) THEN ln("DT_Output_14"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_1" IS NULL OR "DT_Output_14"."P_1" > 0.0) THEN ln("DT_Output_14"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_2" IS NULL OR "DT_Output_14"."P_2" > 0.0) THEN ln("DT_Output_14"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_3" IS NULL OR "DT_Output_14"."P_3" > 0.0) THEN ln("DT_Output_14"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_4" IS NULL OR "DT_Output_14"."P_4" > 0.0) THEN ln("DT_Output_14"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_5" IS NULL OR "DT_Output_14"."P_5" > 0.0) THEN ln("DT_Output_14"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_6" IS NULL OR "DT_Output_14"."P_6" > 0.0) THEN ln("DT_Output_14"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_7" IS NULL OR "DT_Output_14"."P_7" > 0.0) THEN ln("DT_Output_14"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_8" IS NULL OR "DT_Output_14"."P_8" > 0.0) THEN ln("DT_Output_14"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_9" IS NULL OR "DT_Output_14"."P_9" > 0.0) THEN ln("DT_Output_14"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_8", 9.0 * (CASE WHEN ("DT_Output_14"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_8" IS NULL OR "DT_Output_14"."P_8" > 0.0) THEN ln("DT_Output_14"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_14"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_0" IS NULL OR "DT_Output_14"."P_0" > 0.0) THEN ln("DT_Output_14"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_1" IS NULL OR "DT_Output_14"."P_1" > 0.0) THEN ln("DT_Output_14"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_2" IS NULL OR "DT_Output_14"."P_2" > 0.0) THEN ln("DT_Output_14"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_3" IS NULL OR "DT_Output_14"."P_3" > 0.0) THEN ln("DT_Output_14"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_4" IS NULL OR "DT_Output_14"."P_4" > 0.0) THEN ln("DT_Output_14"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_5" IS NULL OR "DT_Output_14"."P_5" > 0.0) THEN ln("DT_Output_14"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_6" IS NULL OR "DT_Output_14"."P_6" > 0.0) THEN ln("DT_Output_14"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_7" IS NULL OR "DT_Output_14"."P_7" > 0.0) THEN ln("DT_Output_14"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_8" IS NULL OR "DT_Output_14"."P_8" > 0.0) THEN ln("DT_Output_14"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_9" IS NULL OR "DT_Output_14"."P_9" > 0.0) THEN ln("DT_Output_14"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_8", (9.0 * (CASE WHEN ("DT_Output_14"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_9" IS NULL OR "DT_Output_14"."P_9" > 0.0) THEN ln("DT_Output_14"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_14"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_0" IS NULL OR "DT_Output_14"."P_0" > 0.0) THEN ln("DT_Output_14"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_1" IS NULL OR "DT_Output_14"."P_1" > 0.0) THEN ln("DT_Output_14"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_2" IS NULL OR "DT_Output_14"."P_2" > 0.0) THEN ln("DT_Output_14"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_3" IS NULL OR "DT_Output_14"."P_3" > 0.0) THEN ln("DT_Output_14"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_4" IS NULL OR "DT_Output_14"."P_4" > 0.0) THEN ln("DT_Output_14"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_5" IS NULL OR "DT_Output_14"."P_5" > 0.0) THEN ln("DT_Output_14"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_6" IS NULL OR "DT_Output_14"."P_6" > 0.0) THEN ln("DT_Output_14"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_7" IS NULL OR "DT_Output_14"."P_7" > 0.0) THEN ln("DT_Output_14"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_8" IS NULL OR "DT_Output_14"."P_8" > 0.0) THEN ln("DT_Output_14"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_9" IS NULL OR "DT_Output_14"."P_9" > 0.0) THEN ln("DT_Output_14"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_9", 9.0 * (CASE WHEN ("DT_Output_14"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_9" IS NULL OR "DT_Output_14"."P_9" > 0.0) THEN ln("DT_Output_14"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_14"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_0" IS NULL OR "DT_Output_14"."P_0" > 0.0) THEN ln("DT_Output_14"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_1" IS NULL OR "DT_Output_14"."P_1" > 0.0) THEN ln("DT_Output_14"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_2" IS NULL OR "DT_Output_14"."P_2" > 0.0) THEN ln("DT_Output_14"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_3" IS NULL OR "DT_Output_14"."P_3" > 0.0) THEN ln("DT_Output_14"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_4" IS NULL OR "DT_Output_14"."P_4" > 0.0) THEN ln("DT_Output_14"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_5" IS NULL OR "DT_Output_14"."P_5" > 0.0) THEN ln("DT_Output_14"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_6" IS NULL OR "DT_Output_14"."P_6" > 0.0) THEN ln("DT_Output_14"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_7" IS NULL OR "DT_Output_14"."P_7" > 0.0) THEN ln("DT_Output_14"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_8" IS NULL OR "DT_Output_14"."P_8" > 0.0) THEN ln("DT_Output_14"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_14"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_9" IS NULL OR "DT_Output_14"."P_9" > 0.0) THEN ln("DT_Output_14"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_9" 
FROM "DT_Output_14"), 
"DT_node_lookup_15" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_38 <= -1.6508052349090576) THEN 1 ELSE 2 END AS node_id_2 
FROM "DEGEN_YN11LY_ADS_SCA_2_OUT" "ADS_sca_2_OUT"), 
"DT_node_data_15" AS 
(SELECT "Values".nid AS nid, CAST("Values"."P_0" AS BINARY_DOUBLE) AS "P_0", CAST("Values"."P_1" AS BINARY_DOUBLE) AS "P_1", CAST("Values"."P_2" AS BINARY_DOUBLE) AS "P_2", CAST("Values"."P_3" AS BINARY_DOUBLE) AS "P_3", CAST("Values"."P_4" AS BINARY_DOUBLE) AS "P_4", CAST("Values"."P_5" AS BINARY_DOUBLE) AS "P_5", CAST("Values"."P_6" AS BINARY_DOUBLE) AS "P_6", CAST("Values"."P_7" AS BINARY_DOUBLE) AS "P_7", CAST("Values"."P_8" AS BINARY_DOUBLE) AS "P_8", CAST("Values"."P_9" AS BINARY_DOUBLE) AS "P_9", CAST("Values"."D" AS BINARY_DOUBLE) AS "D", CAST("Values"."DP" AS BINARY_DOUBLE) AS "DP" 
FROM (SELECT 1 AS nid, 0.9999999853094058 AS "P_0", 0.0 AS "P_1", 2.0994596028269526e-09 AS "P_2", 2.0985554414817727e-09 AS "P_3", 2.0989981216959223e-09 AS "P_4", 2.0985567053277525e-09 AS "P_5", 2.09855622351375e-09 AS "P_6", 0.0 AS "P_7", 2.09791244460039e-09 AS "P_8", 2.0985554414817723e-09 AS "P_9", 0 AS "D", 0.9999999853094058 AS "DP" FROM DUAL UNION ALL SELECT 2 AS nid, 3.4461293652897105e-05 AS "P_0", 0.1111111112924208 AS "P_1", 0.111111111059219 AS "P_2", 0.11111111105931952 AS "P_3", 0.11111111105927057 AS "P_4", 0.11111111105931928 AS "P_5", 0.11111111105931959 AS "P_6", 0.11111111129242027 AS "P_7", 0.11107664976573829 AS "P_8", 0.11111111105931974 AS "P_9", 1 AS "D", 0.1111111112924208 AS "DP" FROM DUAL) "Values"), 
"DT_Output_15" AS 
(SELECT "DT_node_lookup_15"."KEY" AS "KEY", "DT_node_lookup_15".node_id_2 AS node_id_2, "DT_node_data_15".nid AS nid, "DT_node_data_15"."P_0" AS "P_0", "DT_node_data_15"."P_1" AS "P_1", "DT_node_data_15"."P_2" AS "P_2", "DT_node_data_15"."P_3" AS "P_3", "DT_node_data_15"."P_4" AS "P_4", "DT_node_data_15"."P_5" AS "P_5", "DT_node_data_15"."P_6" AS "P_6", "DT_node_data_15"."P_7" AS "P_7", "DT_node_data_15"."P_8" AS "P_8", "DT_node_data_15"."P_9" AS "P_9", "DT_node_data_15"."D" AS "D", "DT_node_data_15"."DP" AS "DP" 
FROM "DT_node_lookup_15" LEFT OUTER JOIN "DT_node_data_15" ON "DT_node_lookup_15".node_id_2 = "DT_node_data_15".nid), 
"ADB_Model_15" AS 
(SELECT "DT_Output_15"."KEY" AS "KEY", (9.0 * (CASE WHEN ("DT_Output_15"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_0" IS NULL OR "DT_Output_15"."P_0" > 0.0) THEN ln("DT_Output_15"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_15"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_0" IS NULL OR "DT_Output_15"."P_0" > 0.0) THEN ln("DT_Output_15"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_1" IS NULL OR "DT_Output_15"."P_1" > 0.0) THEN ln("DT_Output_15"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_2" IS NULL OR "DT_Output_15"."P_2" > 0.0) THEN ln("DT_Output_15"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_3" IS NULL OR "DT_Output_15"."P_3" > 0.0) THEN ln("DT_Output_15"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_4" IS NULL OR "DT_Output_15"."P_4" > 0.0) THEN ln("DT_Output_15"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_5" IS NULL OR "DT_Output_15"."P_5" > 0.0) THEN ln("DT_Output_15"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_6" IS NULL OR "DT_Output_15"."P_6" > 0.0) THEN ln("DT_Output_15"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_7" IS NULL OR "DT_Output_15"."P_7" > 0.0) THEN ln("DT_Output_15"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_8" IS NULL OR "DT_Output_15"."P_8" > 0.0) THEN ln("DT_Output_15"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_9" IS NULL OR "DT_Output_15"."P_9" > 0.0) THEN ln("DT_Output_15"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_0", 9.0 * (CASE WHEN ("DT_Output_15"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_0" IS NULL OR "DT_Output_15"."P_0" > 0.0) THEN ln("DT_Output_15"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_15"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_0" IS NULL OR "DT_Output_15"."P_0" > 0.0) THEN ln("DT_Output_15"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_1" IS NULL OR "DT_Output_15"."P_1" > 0.0) THEN ln("DT_Output_15"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_2" IS NULL OR "DT_Output_15"."P_2" > 0.0) THEN ln("DT_Output_15"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_3" IS NULL OR "DT_Output_15"."P_3" > 0.0) THEN ln("DT_Output_15"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_4" IS NULL OR "DT_Output_15"."P_4" > 0.0) THEN ln("DT_Output_15"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_5" IS NULL OR "DT_Output_15"."P_5" > 0.0) THEN ln("DT_Output_15"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_6" IS NULL OR "DT_Output_15"."P_6" > 0.0) THEN ln("DT_Output_15"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_7" IS NULL OR "DT_Output_15"."P_7" > 0.0) THEN ln("DT_Output_15"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_8" IS NULL OR "DT_Output_15"."P_8" > 0.0) THEN ln("DT_Output_15"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_9" IS NULL OR "DT_Output_15"."P_9" > 0.0) THEN ln("DT_Output_15"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_0", (9.0 * (CASE WHEN ("DT_Output_15"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_1" IS NULL OR "DT_Output_15"."P_1" > 0.0) THEN ln("DT_Output_15"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_15"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_0" IS NULL OR "DT_Output_15"."P_0" > 0.0) THEN ln("DT_Output_15"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_1" IS NULL OR "DT_Output_15"."P_1" > 0.0) THEN ln("DT_Output_15"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_2" IS NULL OR "DT_Output_15"."P_2" > 0.0) THEN ln("DT_Output_15"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_3" IS NULL OR "DT_Output_15"."P_3" > 0.0) THEN ln("DT_Output_15"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_4" IS NULL OR "DT_Output_15"."P_4" > 0.0) THEN ln("DT_Output_15"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_5" IS NULL OR "DT_Output_15"."P_5" > 0.0) THEN ln("DT_Output_15"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_6" IS NULL OR "DT_Output_15"."P_6" > 0.0) THEN ln("DT_Output_15"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_7" IS NULL OR "DT_Output_15"."P_7" > 0.0) THEN ln("DT_Output_15"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_8" IS NULL OR "DT_Output_15"."P_8" > 0.0) THEN ln("DT_Output_15"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_9" IS NULL OR "DT_Output_15"."P_9" > 0.0) THEN ln("DT_Output_15"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_1", 9.0 * (CASE WHEN ("DT_Output_15"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_1" IS NULL OR "DT_Output_15"."P_1" > 0.0) THEN ln("DT_Output_15"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_15"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_0" IS NULL OR "DT_Output_15"."P_0" > 0.0) THEN ln("DT_Output_15"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_1" IS NULL OR "DT_Output_15"."P_1" > 0.0) THEN ln("DT_Output_15"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_2" IS NULL OR "DT_Output_15"."P_2" > 0.0) THEN ln("DT_Output_15"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_3" IS NULL OR "DT_Output_15"."P_3" > 0.0) THEN ln("DT_Output_15"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_4" IS NULL OR "DT_Output_15"."P_4" > 0.0) THEN ln("DT_Output_15"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_5" IS NULL OR "DT_Output_15"."P_5" > 0.0) THEN ln("DT_Output_15"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_6" IS NULL OR "DT_Output_15"."P_6" > 0.0) THEN ln("DT_Output_15"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_7" IS NULL OR "DT_Output_15"."P_7" > 0.0) THEN ln("DT_Output_15"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_8" IS NULL OR "DT_Output_15"."P_8" > 0.0) THEN ln("DT_Output_15"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_9" IS NULL OR "DT_Output_15"."P_9" > 0.0) THEN ln("DT_Output_15"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_1", (9.0 * (CASE WHEN ("DT_Output_15"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_2" IS NULL OR "DT_Output_15"."P_2" > 0.0) THEN ln("DT_Output_15"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_15"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_0" IS NULL OR "DT_Output_15"."P_0" > 0.0) THEN ln("DT_Output_15"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_1" IS NULL OR "DT_Output_15"."P_1" > 0.0) THEN ln("DT_Output_15"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_2" IS NULL OR "DT_Output_15"."P_2" > 0.0) THEN ln("DT_Output_15"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_3" IS NULL OR "DT_Output_15"."P_3" > 0.0) THEN ln("DT_Output_15"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_4" IS NULL OR "DT_Output_15"."P_4" > 0.0) THEN ln("DT_Output_15"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_5" IS NULL OR "DT_Output_15"."P_5" > 0.0) THEN ln("DT_Output_15"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_6" IS NULL OR "DT_Output_15"."P_6" > 0.0) THEN ln("DT_Output_15"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_7" IS NULL OR "DT_Output_15"."P_7" > 0.0) THEN ln("DT_Output_15"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_8" IS NULL OR "DT_Output_15"."P_8" > 0.0) THEN ln("DT_Output_15"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_9" IS NULL OR "DT_Output_15"."P_9" > 0.0) THEN ln("DT_Output_15"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_2", 9.0 * (CASE WHEN ("DT_Output_15"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_2" IS NULL OR "DT_Output_15"."P_2" > 0.0) THEN ln("DT_Output_15"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_15"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_0" IS NULL OR "DT_Output_15"."P_0" > 0.0) THEN ln("DT_Output_15"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_1" IS NULL OR "DT_Output_15"."P_1" > 0.0) THEN ln("DT_Output_15"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_2" IS NULL OR "DT_Output_15"."P_2" > 0.0) THEN ln("DT_Output_15"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_3" IS NULL OR "DT_Output_15"."P_3" > 0.0) THEN ln("DT_Output_15"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_4" IS NULL OR "DT_Output_15"."P_4" > 0.0) THEN ln("DT_Output_15"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_5" IS NULL OR "DT_Output_15"."P_5" > 0.0) THEN ln("DT_Output_15"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_6" IS NULL OR "DT_Output_15"."P_6" > 0.0) THEN ln("DT_Output_15"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_7" IS NULL OR "DT_Output_15"."P_7" > 0.0) THEN ln("DT_Output_15"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_8" IS NULL OR "DT_Output_15"."P_8" > 0.0) THEN ln("DT_Output_15"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_9" IS NULL OR "DT_Output_15"."P_9" > 0.0) THEN ln("DT_Output_15"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_2", (9.0 * (CASE WHEN ("DT_Output_15"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_3" IS NULL OR "DT_Output_15"."P_3" > 0.0) THEN ln("DT_Output_15"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_15"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_0" IS NULL OR "DT_Output_15"."P_0" > 0.0) THEN ln("DT_Output_15"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_1" IS NULL OR "DT_Output_15"."P_1" > 0.0) THEN ln("DT_Output_15"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_2" IS NULL OR "DT_Output_15"."P_2" > 0.0) THEN ln("DT_Output_15"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_3" IS NULL OR "DT_Output_15"."P_3" > 0.0) THEN ln("DT_Output_15"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_4" IS NULL OR "DT_Output_15"."P_4" > 0.0) THEN ln("DT_Output_15"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_5" IS NULL OR "DT_Output_15"."P_5" > 0.0) THEN ln("DT_Output_15"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_6" IS NULL OR "DT_Output_15"."P_6" > 0.0) THEN ln("DT_Output_15"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_7" IS NULL OR "DT_Output_15"."P_7" > 0.0) THEN ln("DT_Output_15"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_8" IS NULL OR "DT_Output_15"."P_8" > 0.0) THEN ln("DT_Output_15"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_9" IS NULL OR "DT_Output_15"."P_9" > 0.0) THEN ln("DT_Output_15"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_3", 9.0 * (CASE WHEN ("DT_Output_15"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_3" IS NULL OR "DT_Output_15"."P_3" > 0.0) THEN ln("DT_Output_15"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_15"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_0" IS NULL OR "DT_Output_15"."P_0" > 0.0) THEN ln("DT_Output_15"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_1" IS NULL OR "DT_Output_15"."P_1" > 0.0) THEN ln("DT_Output_15"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_2" IS NULL OR "DT_Output_15"."P_2" > 0.0) THEN ln("DT_Output_15"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_3" IS NULL OR "DT_Output_15"."P_3" > 0.0) THEN ln("DT_Output_15"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_4" IS NULL OR "DT_Output_15"."P_4" > 0.0) THEN ln("DT_Output_15"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_5" IS NULL OR "DT_Output_15"."P_5" > 0.0) THEN ln("DT_Output_15"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_6" IS NULL OR "DT_Output_15"."P_6" > 0.0) THEN ln("DT_Output_15"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_7" IS NULL OR "DT_Output_15"."P_7" > 0.0) THEN ln("DT_Output_15"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_8" IS NULL OR "DT_Output_15"."P_8" > 0.0) THEN ln("DT_Output_15"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_9" IS NULL OR "DT_Output_15"."P_9" > 0.0) THEN ln("DT_Output_15"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_3", (9.0 * (CASE WHEN ("DT_Output_15"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_4" IS NULL OR "DT_Output_15"."P_4" > 0.0) THEN ln("DT_Output_15"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_15"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_0" IS NULL OR "DT_Output_15"."P_0" > 0.0) THEN ln("DT_Output_15"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_1" IS NULL OR "DT_Output_15"."P_1" > 0.0) THEN ln("DT_Output_15"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_2" IS NULL OR "DT_Output_15"."P_2" > 0.0) THEN ln("DT_Output_15"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_3" IS NULL OR "DT_Output_15"."P_3" > 0.0) THEN ln("DT_Output_15"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_4" IS NULL OR "DT_Output_15"."P_4" > 0.0) THEN ln("DT_Output_15"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_5" IS NULL OR "DT_Output_15"."P_5" > 0.0) THEN ln("DT_Output_15"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_6" IS NULL OR "DT_Output_15"."P_6" > 0.0) THEN ln("DT_Output_15"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_7" IS NULL OR "DT_Output_15"."P_7" > 0.0) THEN ln("DT_Output_15"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_8" IS NULL OR "DT_Output_15"."P_8" > 0.0) THEN ln("DT_Output_15"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_9" IS NULL OR "DT_Output_15"."P_9" > 0.0) THEN ln("DT_Output_15"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_4", 9.0 * (CASE WHEN ("DT_Output_15"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_4" IS NULL OR "DT_Output_15"."P_4" > 0.0) THEN ln("DT_Output_15"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_15"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_0" IS NULL OR "DT_Output_15"."P_0" > 0.0) THEN ln("DT_Output_15"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_1" IS NULL OR "DT_Output_15"."P_1" > 0.0) THEN ln("DT_Output_15"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_2" IS NULL OR "DT_Output_15"."P_2" > 0.0) THEN ln("DT_Output_15"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_3" IS NULL OR "DT_Output_15"."P_3" > 0.0) THEN ln("DT_Output_15"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_4" IS NULL OR "DT_Output_15"."P_4" > 0.0) THEN ln("DT_Output_15"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_5" IS NULL OR "DT_Output_15"."P_5" > 0.0) THEN ln("DT_Output_15"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_6" IS NULL OR "DT_Output_15"."P_6" > 0.0) THEN ln("DT_Output_15"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_7" IS NULL OR "DT_Output_15"."P_7" > 0.0) THEN ln("DT_Output_15"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_8" IS NULL OR "DT_Output_15"."P_8" > 0.0) THEN ln("DT_Output_15"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_9" IS NULL OR "DT_Output_15"."P_9" > 0.0) THEN ln("DT_Output_15"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_4", (9.0 * (CASE WHEN ("DT_Output_15"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_5" IS NULL OR "DT_Output_15"."P_5" > 0.0) THEN ln("DT_Output_15"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_15"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_0" IS NULL OR "DT_Output_15"."P_0" > 0.0) THEN ln("DT_Output_15"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_1" IS NULL OR "DT_Output_15"."P_1" > 0.0) THEN ln("DT_Output_15"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_2" IS NULL OR "DT_Output_15"."P_2" > 0.0) THEN ln("DT_Output_15"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_3" IS NULL OR "DT_Output_15"."P_3" > 0.0) THEN ln("DT_Output_15"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_4" IS NULL OR "DT_Output_15"."P_4" > 0.0) THEN ln("DT_Output_15"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_5" IS NULL OR "DT_Output_15"."P_5" > 0.0) THEN ln("DT_Output_15"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_6" IS NULL OR "DT_Output_15"."P_6" > 0.0) THEN ln("DT_Output_15"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_7" IS NULL OR "DT_Output_15"."P_7" > 0.0) THEN ln("DT_Output_15"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_8" IS NULL OR "DT_Output_15"."P_8" > 0.0) THEN ln("DT_Output_15"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_9" IS NULL OR "DT_Output_15"."P_9" > 0.0) THEN ln("DT_Output_15"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_5", 9.0 * (CASE WHEN ("DT_Output_15"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_5" IS NULL OR "DT_Output_15"."P_5" > 0.0) THEN ln("DT_Output_15"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_15"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_0" IS NULL OR "DT_Output_15"."P_0" > 0.0) THEN ln("DT_Output_15"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_1" IS NULL OR "DT_Output_15"."P_1" > 0.0) THEN ln("DT_Output_15"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_2" IS NULL OR "DT_Output_15"."P_2" > 0.0) THEN ln("DT_Output_15"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_3" IS NULL OR "DT_Output_15"."P_3" > 0.0) THEN ln("DT_Output_15"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_4" IS NULL OR "DT_Output_15"."P_4" > 0.0) THEN ln("DT_Output_15"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_5" IS NULL OR "DT_Output_15"."P_5" > 0.0) THEN ln("DT_Output_15"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_6" IS NULL OR "DT_Output_15"."P_6" > 0.0) THEN ln("DT_Output_15"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_7" IS NULL OR "DT_Output_15"."P_7" > 0.0) THEN ln("DT_Output_15"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_8" IS NULL OR "DT_Output_15"."P_8" > 0.0) THEN ln("DT_Output_15"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_9" IS NULL OR "DT_Output_15"."P_9" > 0.0) THEN ln("DT_Output_15"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_5", (9.0 * (CASE WHEN ("DT_Output_15"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_6" IS NULL OR "DT_Output_15"."P_6" > 0.0) THEN ln("DT_Output_15"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_15"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_0" IS NULL OR "DT_Output_15"."P_0" > 0.0) THEN ln("DT_Output_15"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_1" IS NULL OR "DT_Output_15"."P_1" > 0.0) THEN ln("DT_Output_15"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_2" IS NULL OR "DT_Output_15"."P_2" > 0.0) THEN ln("DT_Output_15"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_3" IS NULL OR "DT_Output_15"."P_3" > 0.0) THEN ln("DT_Output_15"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_4" IS NULL OR "DT_Output_15"."P_4" > 0.0) THEN ln("DT_Output_15"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_5" IS NULL OR "DT_Output_15"."P_5" > 0.0) THEN ln("DT_Output_15"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_6" IS NULL OR "DT_Output_15"."P_6" > 0.0) THEN ln("DT_Output_15"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_7" IS NULL OR "DT_Output_15"."P_7" > 0.0) THEN ln("DT_Output_15"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_8" IS NULL OR "DT_Output_15"."P_8" > 0.0) THEN ln("DT_Output_15"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_9" IS NULL OR "DT_Output_15"."P_9" > 0.0) THEN ln("DT_Output_15"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_6", 9.0 * (CASE WHEN ("DT_Output_15"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_6" IS NULL OR "DT_Output_15"."P_6" > 0.0) THEN ln("DT_Output_15"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_15"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_0" IS NULL OR "DT_Output_15"."P_0" > 0.0) THEN ln("DT_Output_15"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_1" IS NULL OR "DT_Output_15"."P_1" > 0.0) THEN ln("DT_Output_15"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_2" IS NULL OR "DT_Output_15"."P_2" > 0.0) THEN ln("DT_Output_15"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_3" IS NULL OR "DT_Output_15"."P_3" > 0.0) THEN ln("DT_Output_15"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_4" IS NULL OR "DT_Output_15"."P_4" > 0.0) THEN ln("DT_Output_15"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_5" IS NULL OR "DT_Output_15"."P_5" > 0.0) THEN ln("DT_Output_15"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_6" IS NULL OR "DT_Output_15"."P_6" > 0.0) THEN ln("DT_Output_15"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_7" IS NULL OR "DT_Output_15"."P_7" > 0.0) THEN ln("DT_Output_15"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_8" IS NULL OR "DT_Output_15"."P_8" > 0.0) THEN ln("DT_Output_15"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_9" IS NULL OR "DT_Output_15"."P_9" > 0.0) THEN ln("DT_Output_15"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_6", (9.0 * (CASE WHEN ("DT_Output_15"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_7" IS NULL OR "DT_Output_15"."P_7" > 0.0) THEN ln("DT_Output_15"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_15"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_0" IS NULL OR "DT_Output_15"."P_0" > 0.0) THEN ln("DT_Output_15"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_1" IS NULL OR "DT_Output_15"."P_1" > 0.0) THEN ln("DT_Output_15"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_2" IS NULL OR "DT_Output_15"."P_2" > 0.0) THEN ln("DT_Output_15"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_3" IS NULL OR "DT_Output_15"."P_3" > 0.0) THEN ln("DT_Output_15"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_4" IS NULL OR "DT_Output_15"."P_4" > 0.0) THEN ln("DT_Output_15"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_5" IS NULL OR "DT_Output_15"."P_5" > 0.0) THEN ln("DT_Output_15"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_6" IS NULL OR "DT_Output_15"."P_6" > 0.0) THEN ln("DT_Output_15"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_7" IS NULL OR "DT_Output_15"."P_7" > 0.0) THEN ln("DT_Output_15"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_8" IS NULL OR "DT_Output_15"."P_8" > 0.0) THEN ln("DT_Output_15"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_9" IS NULL OR "DT_Output_15"."P_9" > 0.0) THEN ln("DT_Output_15"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_7", 9.0 * (CASE WHEN ("DT_Output_15"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_7" IS NULL OR "DT_Output_15"."P_7" > 0.0) THEN ln("DT_Output_15"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_15"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_0" IS NULL OR "DT_Output_15"."P_0" > 0.0) THEN ln("DT_Output_15"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_1" IS NULL OR "DT_Output_15"."P_1" > 0.0) THEN ln("DT_Output_15"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_2" IS NULL OR "DT_Output_15"."P_2" > 0.0) THEN ln("DT_Output_15"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_3" IS NULL OR "DT_Output_15"."P_3" > 0.0) THEN ln("DT_Output_15"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_4" IS NULL OR "DT_Output_15"."P_4" > 0.0) THEN ln("DT_Output_15"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_5" IS NULL OR "DT_Output_15"."P_5" > 0.0) THEN ln("DT_Output_15"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_6" IS NULL OR "DT_Output_15"."P_6" > 0.0) THEN ln("DT_Output_15"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_7" IS NULL OR "DT_Output_15"."P_7" > 0.0) THEN ln("DT_Output_15"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_8" IS NULL OR "DT_Output_15"."P_8" > 0.0) THEN ln("DT_Output_15"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_9" IS NULL OR "DT_Output_15"."P_9" > 0.0) THEN ln("DT_Output_15"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_7", (9.0 * (CASE WHEN ("DT_Output_15"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_8" IS NULL OR "DT_Output_15"."P_8" > 0.0) THEN ln("DT_Output_15"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_15"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_0" IS NULL OR "DT_Output_15"."P_0" > 0.0) THEN ln("DT_Output_15"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_1" IS NULL OR "DT_Output_15"."P_1" > 0.0) THEN ln("DT_Output_15"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_2" IS NULL OR "DT_Output_15"."P_2" > 0.0) THEN ln("DT_Output_15"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_3" IS NULL OR "DT_Output_15"."P_3" > 0.0) THEN ln("DT_Output_15"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_4" IS NULL OR "DT_Output_15"."P_4" > 0.0) THEN ln("DT_Output_15"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_5" IS NULL OR "DT_Output_15"."P_5" > 0.0) THEN ln("DT_Output_15"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_6" IS NULL OR "DT_Output_15"."P_6" > 0.0) THEN ln("DT_Output_15"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_7" IS NULL OR "DT_Output_15"."P_7" > 0.0) THEN ln("DT_Output_15"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_8" IS NULL OR "DT_Output_15"."P_8" > 0.0) THEN ln("DT_Output_15"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_9" IS NULL OR "DT_Output_15"."P_9" > 0.0) THEN ln("DT_Output_15"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_8", 9.0 * (CASE WHEN ("DT_Output_15"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_8" IS NULL OR "DT_Output_15"."P_8" > 0.0) THEN ln("DT_Output_15"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_15"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_0" IS NULL OR "DT_Output_15"."P_0" > 0.0) THEN ln("DT_Output_15"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_1" IS NULL OR "DT_Output_15"."P_1" > 0.0) THEN ln("DT_Output_15"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_2" IS NULL OR "DT_Output_15"."P_2" > 0.0) THEN ln("DT_Output_15"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_3" IS NULL OR "DT_Output_15"."P_3" > 0.0) THEN ln("DT_Output_15"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_4" IS NULL OR "DT_Output_15"."P_4" > 0.0) THEN ln("DT_Output_15"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_5" IS NULL OR "DT_Output_15"."P_5" > 0.0) THEN ln("DT_Output_15"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_6" IS NULL OR "DT_Output_15"."P_6" > 0.0) THEN ln("DT_Output_15"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_7" IS NULL OR "DT_Output_15"."P_7" > 0.0) THEN ln("DT_Output_15"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_8" IS NULL OR "DT_Output_15"."P_8" > 0.0) THEN ln("DT_Output_15"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_9" IS NULL OR "DT_Output_15"."P_9" > 0.0) THEN ln("DT_Output_15"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_8", (9.0 * (CASE WHEN ("DT_Output_15"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_9" IS NULL OR "DT_Output_15"."P_9" > 0.0) THEN ln("DT_Output_15"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_15"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_0" IS NULL OR "DT_Output_15"."P_0" > 0.0) THEN ln("DT_Output_15"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_1" IS NULL OR "DT_Output_15"."P_1" > 0.0) THEN ln("DT_Output_15"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_2" IS NULL OR "DT_Output_15"."P_2" > 0.0) THEN ln("DT_Output_15"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_3" IS NULL OR "DT_Output_15"."P_3" > 0.0) THEN ln("DT_Output_15"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_4" IS NULL OR "DT_Output_15"."P_4" > 0.0) THEN ln("DT_Output_15"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_5" IS NULL OR "DT_Output_15"."P_5" > 0.0) THEN ln("DT_Output_15"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_6" IS NULL OR "DT_Output_15"."P_6" > 0.0) THEN ln("DT_Output_15"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_7" IS NULL OR "DT_Output_15"."P_7" > 0.0) THEN ln("DT_Output_15"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_8" IS NULL OR "DT_Output_15"."P_8" > 0.0) THEN ln("DT_Output_15"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_9" IS NULL OR "DT_Output_15"."P_9" > 0.0) THEN ln("DT_Output_15"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10)) / 16.0 AS "Score_9", 9.0 * (CASE WHEN ("DT_Output_15"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_9" IS NULL OR "DT_Output_15"."P_9" > 0.0) THEN ln("DT_Output_15"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END - (CASE WHEN ("DT_Output_15"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_0" IS NULL OR "DT_Output_15"."P_0" > 0.0) THEN ln("DT_Output_15"."P_0") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_1" IS NULL OR "DT_Output_15"."P_1" > 0.0) THEN ln("DT_Output_15"."P_1") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_2" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_2" IS NULL OR "DT_Output_15"."P_2" > 0.0) THEN ln("DT_Output_15"."P_2") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_3" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_3" IS NULL OR "DT_Output_15"."P_3" > 0.0) THEN ln("DT_Output_15"."P_3") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_4" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_4" IS NULL OR "DT_Output_15"."P_4" > 0.0) THEN ln("DT_Output_15"."P_4") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_5" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_5" IS NULL OR "DT_Output_15"."P_5" > 0.0) THEN ln("DT_Output_15"."P_5") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_6" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_6" IS NULL OR "DT_Output_15"."P_6" > 0.0) THEN ln("DT_Output_15"."P_6") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_7" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_7" IS NULL OR "DT_Output_15"."P_7" > 0.0) THEN ln("DT_Output_15"."P_7") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_8" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_8" IS NULL OR "DT_Output_15"."P_8" > 0.0) THEN ln("DT_Output_15"."P_8") ELSE -BINARY_DOUBLE_INFINITY END END + CASE WHEN ("DT_Output_15"."P_9" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_9" IS NULL OR "DT_Output_15"."P_9" > 0.0) THEN ln("DT_Output_15"."P_9") ELSE -BINARY_DOUBLE_INFINITY END END) / 10) AS "Proba_9" 
FROM "DT_Output_15")
 SELECT "ADB_B1"."KEY", "ADB_B1"."Score_0", "ADB_B1"."Proba_0", "ADB_B1"."Score_1", "ADB_B1"."Proba_1", "ADB_B1"."Score_2", "ADB_B1"."Proba_2", "ADB_B1"."Score_3", "ADB_B1"."Proba_3", "ADB_B1"."Score_4", "ADB_B1"."Proba_4", "ADB_B1"."Score_5", "ADB_B1"."Proba_5", "ADB_B1"."Score_6", "ADB_B1"."Proba_6", "ADB_B1"."Score_7", "ADB_B1"."Proba_7", "ADB_B1"."Score_8", "ADB_B1"."Proba_8", "ADB_B1"."Score_9", "ADB_B1"."Proba_9" 
FROM (SELECT "ADB_esu_1"."KEY" AS "KEY", "ADB_esu_1"."Score_0" AS "Score_0", "ADB_esu_1"."Proba_0" AS "Proba_0", "ADB_esu_1"."Score_1" AS "Score_1", "ADB_esu_1"."Proba_1" AS "Proba_1", "ADB_esu_1"."Score_2" AS "Score_2", "ADB_esu_1"."Proba_2" AS "Proba_2", "ADB_esu_1"."Score_3" AS "Score_3", "ADB_esu_1"."Proba_3" AS "Proba_3", "ADB_esu_1"."Score_4" AS "Score_4", "ADB_esu_1"."Proba_4" AS "Proba_4", "ADB_esu_1"."Score_5" AS "Score_5", "ADB_esu_1"."Proba_5" AS "Proba_5", "ADB_esu_1"."Score_6" AS "Score_6", "ADB_esu_1"."Proba_6" AS "Proba_6", "ADB_esu_1"."Score_7" AS "Score_7", "ADB_esu_1"."Proba_7" AS "Proba_7", "ADB_esu_1"."Score_8" AS "Score_8", "ADB_esu_1"."Proba_8" AS "Proba_8", "ADB_esu_1"."Score_9" AS "Score_9", "ADB_esu_1"."Proba_9" AS "Proba_9" 
FROM (SELECT "ADB_Model_10"."KEY" AS "KEY", "ADB_Model_10"."Score_0" AS "Score_0", "ADB_Model_10"."Proba_0" AS "Proba_0", "ADB_Model_10"."Score_1" AS "Score_1", "ADB_Model_10"."Proba_1" AS "Proba_1", "ADB_Model_10"."Score_2" AS "Score_2", "ADB_Model_10"."Proba_2" AS "Proba_2", "ADB_Model_10"."Score_3" AS "Score_3", "ADB_Model_10"."Proba_3" AS "Proba_3", "ADB_Model_10"."Score_4" AS "Score_4", "ADB_Model_10"."Proba_4" AS "Proba_4", "ADB_Model_10"."Score_5" AS "Score_5", "ADB_Model_10"."Proba_5" AS "Proba_5", "ADB_Model_10"."Score_6" AS "Score_6", "ADB_Model_10"."Proba_6" AS "Proba_6", "ADB_Model_10"."Score_7" AS "Score_7", "ADB_Model_10"."Proba_7" AS "Proba_7", "ADB_Model_10"."Score_8" AS "Score_8", "ADB_Model_10"."Proba_8" AS "Proba_8", "ADB_Model_10"."Score_9" AS "Score_9", "ADB_Model_10"."Proba_9" AS "Proba_9" 
FROM "ADB_Model_10" UNION ALL SELECT "ADB_Model_11"."KEY" AS "KEY", "ADB_Model_11"."Score_0" AS "Score_0", "ADB_Model_11"."Proba_0" AS "Proba_0", "ADB_Model_11"."Score_1" AS "Score_1", "ADB_Model_11"."Proba_1" AS "Proba_1", "ADB_Model_11"."Score_2" AS "Score_2", "ADB_Model_11"."Proba_2" AS "Proba_2", "ADB_Model_11"."Score_3" AS "Score_3", "ADB_Model_11"."Proba_3" AS "Proba_3", "ADB_Model_11"."Score_4" AS "Score_4", "ADB_Model_11"."Proba_4" AS "Proba_4", "ADB_Model_11"."Score_5" AS "Score_5", "ADB_Model_11"."Proba_5" AS "Proba_5", "ADB_Model_11"."Score_6" AS "Score_6", "ADB_Model_11"."Proba_6" AS "Proba_6", "ADB_Model_11"."Score_7" AS "Score_7", "ADB_Model_11"."Proba_7" AS "Proba_7", "ADB_Model_11"."Score_8" AS "Score_8", "ADB_Model_11"."Proba_8" AS "Proba_8", "ADB_Model_11"."Score_9" AS "Score_9", "ADB_Model_11"."Proba_9" AS "Proba_9" 
FROM "ADB_Model_11" UNION ALL SELECT "ADB_Model_12"."KEY" AS "KEY", "ADB_Model_12"."Score_0" AS "Score_0", "ADB_Model_12"."Proba_0" AS "Proba_0", "ADB_Model_12"."Score_1" AS "Score_1", "ADB_Model_12"."Proba_1" AS "Proba_1", "ADB_Model_12"."Score_2" AS "Score_2", "ADB_Model_12"."Proba_2" AS "Proba_2", "ADB_Model_12"."Score_3" AS "Score_3", "ADB_Model_12"."Proba_3" AS "Proba_3", "ADB_Model_12"."Score_4" AS "Score_4", "ADB_Model_12"."Proba_4" AS "Proba_4", "ADB_Model_12"."Score_5" AS "Score_5", "ADB_Model_12"."Proba_5" AS "Proba_5", "ADB_Model_12"."Score_6" AS "Score_6", "ADB_Model_12"."Proba_6" AS "Proba_6", "ADB_Model_12"."Score_7" AS "Score_7", "ADB_Model_12"."Proba_7" AS "Proba_7", "ADB_Model_12"."Score_8" AS "Score_8", "ADB_Model_12"."Proba_8" AS "Proba_8", "ADB_Model_12"."Score_9" AS "Score_9", "ADB_Model_12"."Proba_9" AS "Proba_9" 
FROM "ADB_Model_12" UNION ALL SELECT "ADB_Model_13"."KEY" AS "KEY", "ADB_Model_13"."Score_0" AS "Score_0", "ADB_Model_13"."Proba_0" AS "Proba_0", "ADB_Model_13"."Score_1" AS "Score_1", "ADB_Model_13"."Proba_1" AS "Proba_1", "ADB_Model_13"."Score_2" AS "Score_2", "ADB_Model_13"."Proba_2" AS "Proba_2", "ADB_Model_13"."Score_3" AS "Score_3", "ADB_Model_13"."Proba_3" AS "Proba_3", "ADB_Model_13"."Score_4" AS "Score_4", "ADB_Model_13"."Proba_4" AS "Proba_4", "ADB_Model_13"."Score_5" AS "Score_5", "ADB_Model_13"."Proba_5" AS "Proba_5", "ADB_Model_13"."Score_6" AS "Score_6", "ADB_Model_13"."Proba_6" AS "Proba_6", "ADB_Model_13"."Score_7" AS "Score_7", "ADB_Model_13"."Proba_7" AS "Proba_7", "ADB_Model_13"."Score_8" AS "Score_8", "ADB_Model_13"."Proba_8" AS "Proba_8", "ADB_Model_13"."Score_9" AS "Score_9", "ADB_Model_13"."Proba_9" AS "Proba_9" 
FROM "ADB_Model_13" UNION ALL SELECT "ADB_Model_14"."KEY" AS "KEY", "ADB_Model_14"."Score_0" AS "Score_0", "ADB_Model_14"."Proba_0" AS "Proba_0", "ADB_Model_14"."Score_1" AS "Score_1", "ADB_Model_14"."Proba_1" AS "Proba_1", "ADB_Model_14"."Score_2" AS "Score_2", "ADB_Model_14"."Proba_2" AS "Proba_2", "ADB_Model_14"."Score_3" AS "Score_3", "ADB_Model_14"."Proba_3" AS "Proba_3", "ADB_Model_14"."Score_4" AS "Score_4", "ADB_Model_14"."Proba_4" AS "Proba_4", "ADB_Model_14"."Score_5" AS "Score_5", "ADB_Model_14"."Proba_5" AS "Proba_5", "ADB_Model_14"."Score_6" AS "Score_6", "ADB_Model_14"."Proba_6" AS "Proba_6", "ADB_Model_14"."Score_7" AS "Score_7", "ADB_Model_14"."Proba_7" AS "Proba_7", "ADB_Model_14"."Score_8" AS "Score_8", "ADB_Model_14"."Proba_8" AS "Proba_8", "ADB_Model_14"."Score_9" AS "Score_9", "ADB_Model_14"."Proba_9" AS "Proba_9" 
FROM "ADB_Model_14" UNION ALL SELECT "ADB_Model_15"."KEY" AS "KEY", "ADB_Model_15"."Score_0" AS "Score_0", "ADB_Model_15"."Proba_0" AS "Proba_0", "ADB_Model_15"."Score_1" AS "Score_1", "ADB_Model_15"."Proba_1" AS "Proba_1", "ADB_Model_15"."Score_2" AS "Score_2", "ADB_Model_15"."Proba_2" AS "Proba_2", "ADB_Model_15"."Score_3" AS "Score_3", "ADB_Model_15"."Proba_3" AS "Proba_3", "ADB_Model_15"."Score_4" AS "Score_4", "ADB_Model_15"."Proba_4" AS "Proba_4", "ADB_Model_15"."Score_5" AS "Score_5", "ADB_Model_15"."Proba_5" AS "Proba_5", "ADB_Model_15"."Score_6" AS "Score_6", "ADB_Model_15"."Proba_6" AS "Proba_6", "ADB_Model_15"."Score_7" AS "Score_7", "ADB_Model_15"."Proba_7" AS "Proba_7", "ADB_Model_15"."Score_8" AS "Score_8", "ADB_Model_15"."Proba_8" AS "Proba_8", "ADB_Model_15"."Score_9" AS "Score_9", "ADB_Model_15"."Proba_9" AS "Proba_9" 
FROM "ADB_Model_15") "ADB_esu_1") "ADB_B1") "U"

-- Code For temporary table 4_CODEGEN_SRU809_ADB_UNION part 1. Create 


CREATE GLOBAL TEMPORARY TABLE "4_CODEGEN_SRU809_ADB_UNION" (
	"KEY" NUMBER(19), 
	"Score_0" BINARY_DOUBLE, 
	"Proba_0" BINARY_DOUBLE, 
	"Score_1" BINARY_DOUBLE, 
	"Proba_1" BINARY_DOUBLE, 
	"Score_2" BINARY_DOUBLE, 
	"Proba_2" BINARY_DOUBLE, 
	"Score_3" BINARY_DOUBLE, 
	"Proba_3" BINARY_DOUBLE, 
	"Score_4" BINARY_DOUBLE, 
	"Proba_4" BINARY_DOUBLE, 
	"Score_5" BINARY_DOUBLE, 
	"Proba_5" BINARY_DOUBLE, 
	"Score_6" BINARY_DOUBLE, 
	"Proba_6" BINARY_DOUBLE, 
	"Score_7" BINARY_DOUBLE, 
	"Proba_7" BINARY_DOUBLE, 
	"Score_8" BINARY_DOUBLE, 
	"Proba_8" BINARY_DOUBLE, 
	"Score_9" BINARY_DOUBLE, 
	"Proba_9" BINARY_DOUBLE
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table 4_CODEGEN_SRU809_ADB_UNION part 2. Populate

INSERT INTO "4_CODEGEN_SRU809_ADB_UNION" ("KEY", "Score_0", "Proba_0", "Score_1", "Proba_1", "Score_2", "Proba_2", "Score_3", "Proba_3", "Score_4", "Proba_4", "Score_5", "Proba_5", "Score_6", "Proba_6", "Score_7", "Proba_7", "Score_8", "Proba_8", "Score_9", "Proba_9") SELECT "U"."KEY", "U"."Score_0", "U"."Proba_0", "U"."Score_1", "U"."Proba_1", "U"."Score_2", "U"."Proba_2", "U"."Score_3", "U"."Proba_3", "U"."Score_4", "U"."Proba_4", "U"."Score_5", "U"."Proba_5", "U"."Score_6", "U"."Proba_6", "U"."Score_7", "U"."Proba_7", "U"."Score_8", "U"."Proba_8", "U"."Score_9", "U"."Proba_9" 
FROM (SELECT "ADB_Union"."KEY", "ADB_Union"."Score_0", "ADB_Union"."Proba_0", "ADB_Union"."Score_1", "ADB_Union"."Proba_1", "ADB_Union"."Score_2", "ADB_Union"."Proba_2", "ADB_Union"."Score_3", "ADB_Union"."Proba_3", "ADB_Union"."Score_4", "ADB_Union"."Proba_4", "ADB_Union"."Score_5", "ADB_Union"."Proba_5", "ADB_Union"."Score_6", "ADB_Union"."Proba_6", "ADB_Union"."Score_7", "ADB_Union"."Proba_7", "ADB_Union"."Score_8", "ADB_Union"."Proba_8", "ADB_Union"."Score_9", "ADB_Union"."Proba_9" 
FROM (SELECT "ADB_EnsembleUnion"."KEY" AS "KEY", "ADB_EnsembleUnion"."Score_0" AS "Score_0", "ADB_EnsembleUnion"."Proba_0" AS "Proba_0", "ADB_EnsembleUnion"."Score_1" AS "Score_1", "ADB_EnsembleUnion"."Proba_1" AS "Proba_1", "ADB_EnsembleUnion"."Score_2" AS "Score_2", "ADB_EnsembleUnion"."Proba_2" AS "Proba_2", "ADB_EnsembleUnion"."Score_3" AS "Score_3", "ADB_EnsembleUnion"."Proba_3" AS "Proba_3", "ADB_EnsembleUnion"."Score_4" AS "Score_4", "ADB_EnsembleUnion"."Proba_4" AS "Proba_4", "ADB_EnsembleUnion"."Score_5" AS "Score_5", "ADB_EnsembleUnion"."Proba_5" AS "Proba_5", "ADB_EnsembleUnion"."Score_6" AS "Score_6", "ADB_EnsembleUnion"."Proba_6" AS "Proba_6", "ADB_EnsembleUnion"."Score_7" AS "Score_7", "ADB_EnsembleUnion"."Proba_7" AS "Proba_7", "ADB_EnsembleUnion"."Score_8" AS "Score_8", "ADB_EnsembleUnion"."Proba_8" AS "Proba_8", "ADB_EnsembleUnion"."Score_9" AS "Score_9", "ADB_EnsembleUnion"."Proba_9" AS "Proba_9" 
FROM (SELECT "ADB_B0"."KEY" AS "KEY", "ADB_B0"."Score_0" AS "Score_0", "ADB_B0"."Proba_0" AS "Proba_0", "ADB_B0"."Score_1" AS "Score_1", "ADB_B0"."Proba_1" AS "Proba_1", "ADB_B0"."Score_2" AS "Score_2", "ADB_B0"."Proba_2" AS "Proba_2", "ADB_B0"."Score_3" AS "Score_3", "ADB_B0"."Proba_3" AS "Proba_3", "ADB_B0"."Score_4" AS "Score_4", "ADB_B0"."Proba_4" AS "Proba_4", "ADB_B0"."Score_5" AS "Score_5", "ADB_B0"."Proba_5" AS "Proba_5", "ADB_B0"."Score_6" AS "Score_6", "ADB_B0"."Proba_6" AS "Proba_6", "ADB_B0"."Score_7" AS "Score_7", "ADB_B0"."Proba_7" AS "Proba_7", "ADB_B0"."Score_8" AS "Score_8", "ADB_B0"."Proba_8" AS "Proba_8", "ADB_B0"."Score_9" AS "Score_9", "ADB_B0"."Proba_9" AS "Proba_9" 
FROM "3644_CODEGEN_MSQLXN_ADB_B0" "ADB_B0" UNION ALL SELECT "ADB_B1"."KEY" AS "KEY", "ADB_B1"."Score_0" AS "Score_0", "ADB_B1"."Proba_0" AS "Proba_0", "ADB_B1"."Score_1" AS "Score_1", "ADB_B1"."Proba_1" AS "Proba_1", "ADB_B1"."Score_2" AS "Score_2", "ADB_B1"."Proba_2" AS "Proba_2", "ADB_B1"."Score_3" AS "Score_3", "ADB_B1"."Proba_3" AS "Proba_3", "ADB_B1"."Score_4" AS "Score_4", "ADB_B1"."Proba_4" AS "Proba_4", "ADB_B1"."Score_5" AS "Score_5", "ADB_B1"."Proba_5" AS "Proba_5", "ADB_B1"."Score_6" AS "Score_6", "ADB_B1"."Proba_6" AS "Proba_6", "ADB_B1"."Score_7" AS "Score_7", "ADB_B1"."Proba_7" AS "Proba_7", "ADB_B1"."Score_8" AS "Score_8", "ADB_B1"."Proba_8" AS "Proba_8", "ADB_B1"."Score_9" AS "Score_9", "ADB_B1"."Proba_9" AS "Proba_9" 
FROM "3644_CODEGEN_5EEF15_ADB_B1" "ADB_B1") "ADB_EnsembleUnion") "ADB_Union") "U"

-- Code For temporary table 644_CODEGEN_O36MAD_ADB_SUM part 1. Create 


CREATE GLOBAL TEMPORARY TABLE "644_CODEGEN_O36MAD_ADB_SUM" (
	"KEY" NUMBER(19), 
	"Score_0" BINARY_DOUBLE, 
	"Proba_0" BINARY_DOUBLE, 
	"Score_1" BINARY_DOUBLE, 
	"Proba_1" BINARY_DOUBLE, 
	"Score_2" BINARY_DOUBLE, 
	"Proba_2" BINARY_DOUBLE, 
	"Score_3" BINARY_DOUBLE, 
	"Proba_3" BINARY_DOUBLE, 
	"Score_4" BINARY_DOUBLE, 
	"Proba_4" BINARY_DOUBLE, 
	"Score_5" BINARY_DOUBLE, 
	"Proba_5" BINARY_DOUBLE, 
	"Score_6" BINARY_DOUBLE, 
	"Proba_6" BINARY_DOUBLE, 
	"Score_7" BINARY_DOUBLE, 
	"Proba_7" BINARY_DOUBLE, 
	"Score_8" BINARY_DOUBLE, 
	"Proba_8" BINARY_DOUBLE, 
	"Score_9" BINARY_DOUBLE, 
	"Proba_9" BINARY_DOUBLE
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table 644_CODEGEN_O36MAD_ADB_SUM part 2. Populate

INSERT INTO "644_CODEGEN_O36MAD_ADB_SUM" ("KEY", "Score_0", "Proba_0", "Score_1", "Proba_1", "Score_2", "Proba_2", "Score_3", "Proba_3", "Score_4", "Proba_4", "Score_5", "Proba_5", "Score_6", "Proba_6", "Score_7", "Proba_7", "Score_8", "Proba_8", "Score_9", "Proba_9") SELECT "U"."KEY", "U"."Score_0", "U"."Proba_0", "U"."Score_1", "U"."Proba_1", "U"."Score_2", "U"."Proba_2", "U"."Score_3", "U"."Proba_3", "U"."Score_4", "U"."Proba_4", "U"."Score_5", "U"."Proba_5", "U"."Score_6", "U"."Proba_6", "U"."Score_7", "U"."Proba_7", "U"."Score_8", "U"."Proba_8", "U"."Score_9", "U"."Proba_9" 
FROM (SELECT "ADB_sum"."KEY", "ADB_sum"."Score_0", "ADB_sum"."Proba_0", "ADB_sum"."Score_1", "ADB_sum"."Proba_1", "ADB_sum"."Score_2", "ADB_sum"."Proba_2", "ADB_sum"."Score_3", "ADB_sum"."Proba_3", "ADB_sum"."Score_4", "ADB_sum"."Proba_4", "ADB_sum"."Score_5", "ADB_sum"."Proba_5", "ADB_sum"."Score_6", "ADB_sum"."Proba_6", "ADB_sum"."Score_7", "ADB_sum"."Proba_7", "ADB_sum"."Score_8", "ADB_sum"."Proba_8", "ADB_sum"."Score_9", "ADB_sum"."Proba_9" 
FROM (SELECT "T"."KEY" AS "KEY", CAST("T"."Score_0" AS BINARY_DOUBLE) AS "Score_0", CAST("T"."Proba_0" AS BINARY_DOUBLE) AS "Proba_0", CAST("T"."Score_1" AS BINARY_DOUBLE) AS "Score_1", CAST("T"."Proba_1" AS BINARY_DOUBLE) AS "Proba_1", CAST("T"."Score_2" AS BINARY_DOUBLE) AS "Score_2", CAST("T"."Proba_2" AS BINARY_DOUBLE) AS "Proba_2", CAST("T"."Score_3" AS BINARY_DOUBLE) AS "Score_3", CAST("T"."Proba_3" AS BINARY_DOUBLE) AS "Proba_3", CAST("T"."Score_4" AS BINARY_DOUBLE) AS "Score_4", CAST("T"."Proba_4" AS BINARY_DOUBLE) AS "Proba_4", CAST("T"."Score_5" AS BINARY_DOUBLE) AS "Score_5", CAST("T"."Proba_5" AS BINARY_DOUBLE) AS "Proba_5", CAST("T"."Score_6" AS BINARY_DOUBLE) AS "Score_6", CAST("T"."Proba_6" AS BINARY_DOUBLE) AS "Proba_6", CAST("T"."Score_7" AS BINARY_DOUBLE) AS "Score_7", CAST("T"."Proba_7" AS BINARY_DOUBLE) AS "Proba_7", CAST("T"."Score_8" AS BINARY_DOUBLE) AS "Score_8", CAST("T"."Proba_8" AS BINARY_DOUBLE) AS "Proba_8", CAST("T"."Score_9" AS BINARY_DOUBLE) AS "Score_9", CAST("T"."Proba_9" AS BINARY_DOUBLE) AS "Proba_9" 
FROM (SELECT "ADB_Union"."KEY" AS "KEY", sum("ADB_Union"."Score_0") AS "Score_0", sum("ADB_Union"."Proba_0") AS "Proba_0", sum("ADB_Union"."Score_1") AS "Score_1", sum("ADB_Union"."Proba_1") AS "Proba_1", sum("ADB_Union"."Score_2") AS "Score_2", sum("ADB_Union"."Proba_2") AS "Proba_2", sum("ADB_Union"."Score_3") AS "Score_3", sum("ADB_Union"."Proba_3") AS "Proba_3", sum("ADB_Union"."Score_4") AS "Score_4", sum("ADB_Union"."Proba_4") AS "Proba_4", sum("ADB_Union"."Score_5") AS "Score_5", sum("ADB_Union"."Proba_5") AS "Proba_5", sum("ADB_Union"."Score_6") AS "Score_6", sum("ADB_Union"."Proba_6") AS "Proba_6", sum("ADB_Union"."Score_7") AS "Score_7", sum("ADB_Union"."Proba_7") AS "Proba_7", sum("ADB_Union"."Score_8") AS "Score_8", sum("ADB_Union"."Proba_8") AS "Proba_8", sum("ADB_Union"."Score_9") AS "Score_9", sum("ADB_Union"."Proba_9") AS "Proba_9" 
FROM "4_CODEGEN_SRU809_ADB_UNION" "ADB_Union" GROUP BY "ADB_Union"."KEY") "T") "ADB_sum") "U"

-- Model deployment code

WITH "AdaBoost_AVG_Scores_BN" AS 
(SELECT "ADB_sum"."KEY" AS "KEY", "ADB_sum"."Score_0" AS "Score_0", "ADB_sum"."Proba_0" AS "Proba_0", "ADB_sum"."Score_1" AS "Score_1", "ADB_sum"."Proba_1" AS "Proba_1", "ADB_sum"."Score_2" AS "Score_2", "ADB_sum"."Proba_2" AS "Proba_2", "ADB_sum"."Score_3" AS "Score_3", "ADB_sum"."Proba_3" AS "Proba_3", "ADB_sum"."Score_4" AS "Score_4", "ADB_sum"."Proba_4" AS "Proba_4", "ADB_sum"."Score_5" AS "Score_5", "ADB_sum"."Proba_5" AS "Proba_5", "ADB_sum"."Score_6" AS "Score_6", "ADB_sum"."Proba_6" AS "Proba_6", "ADB_sum"."Score_7" AS "Score_7", "ADB_sum"."Proba_7" AS "Proba_7", "ADB_sum"."Score_8" AS "Score_8", "ADB_sum"."Proba_8" AS "Proba_8", "ADB_sum"."Score_9" AS "Score_9", "ADB_sum"."Proba_9" AS "Proba_9" 
FROM "644_CODEGEN_O36MAD_ADB_SUM" "ADB_sum"), 
"AdaBoost_AVG_Scores" AS 
(SELECT "AdaBoost_AVG_Scores_BN"."KEY" AS "KEY", "AdaBoost_AVG_Scores_BN"."Score_0" AS "Score_0", exp(("AdaBoost_AVG_Scores_BN"."Proba_0" / 16.0) / 9) / (exp(("AdaBoost_AVG_Scores_BN"."Proba_0" / 16.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_1" / 16.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_2" / 16.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_3" / 16.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_4" / 16.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_5" / 16.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_6" / 16.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_7" / 16.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_8" / 16.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_9" / 16.0) / 9)) AS "Proba_0", CAST(NULL AS BINARY_DOUBLE) AS "LogProba_0", "AdaBoost_AVG_Scores_BN"."Score_1" AS "Score_1", exp(("AdaBoost_AVG_Scores_BN"."Proba_1" / 16.0) / 9) / (exp(("AdaBoost_AVG_Scores_BN"."Proba_0" / 16.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_1" / 16.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_2" / 16.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_3" / 16.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_4" / 16.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_5" / 16.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_6" / 16.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_7" / 16.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_8" / 16.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_9" / 16.0) / 9)) AS "Proba_1", CAST(NULL AS BINARY_DOUBLE) AS "LogProba_1", "AdaBoost_AVG_Scores_BN"."Score_2" AS "Score_2", exp(("AdaBoost_AVG_Scores_BN"."Proba_2" / 16.0) / 9) / (exp(("AdaBoost_AVG_Scores_BN"."Proba_0" / 16.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_1" / 16.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_2" / 16.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_3" / 16.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_4" / 16.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_5" / 16.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_6" / 16.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_7" / 16.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_8" / 16.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_9" / 16.0) / 9)) AS "Proba_2", CAST(NULL AS BINARY_DOUBLE) AS "LogProba_2", "AdaBoost_AVG_Scores_BN"."Score_3" AS "Score_3", exp(("AdaBoost_AVG_Scores_BN"."Proba_3" / 16.0) / 9) / (exp(("AdaBoost_AVG_Scores_BN"."Proba_0" / 16.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_1" / 16.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_2" / 16.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_3" / 16.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_4" / 16.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_5" / 16.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_6" / 16.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_7" / 16.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_8" / 16.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_9" / 16.0) / 9)) AS "Proba_3", CAST(NULL AS BINARY_DOUBLE) AS "LogProba_3", "AdaBoost_AVG_Scores_BN"."Score_4" AS "Score_4", exp(("AdaBoost_AVG_Scores_BN"."Proba_4" / 16.0) / 9) / (exp(("AdaBoost_AVG_Scores_BN"."Proba_0" / 16.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_1" / 16.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_2" / 16.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_3" / 16.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_4" / 16.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_5" / 16.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_6" / 16.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_7" / 16.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_8" / 16.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_9" / 16.0) / 9)) AS "Proba_4", CAST(NULL AS BINARY_DOUBLE) AS "LogProba_4", "AdaBoost_AVG_Scores_BN"."Score_5" AS "Score_5", exp(("AdaBoost_AVG_Scores_BN"."Proba_5" / 16.0) / 9) / (exp(("AdaBoost_AVG_Scores_BN"."Proba_0" / 16.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_1" / 16.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_2" / 16.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_3" / 16.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_4" / 16.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_5" / 16.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_6" / 16.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_7" / 16.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_8" / 16.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_9" / 16.0) / 9)) AS "Proba_5", CAST(NULL AS BINARY_DOUBLE) AS "LogProba_5", "AdaBoost_AVG_Scores_BN"."Score_6" AS "Score_6", exp(("AdaBoost_AVG_Scores_BN"."Proba_6" / 16.0) / 9) / (exp(("AdaBoost_AVG_Scores_BN"."Proba_0" / 16.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_1" / 16.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_2" / 16.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_3" / 16.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_4" / 16.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_5" / 16.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_6" / 16.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_7" / 16.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_8" / 16.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_9" / 16.0) / 9)) AS "Proba_6", CAST(NULL AS BINARY_DOUBLE) AS "LogProba_6", "AdaBoost_AVG_Scores_BN"."Score_7" AS "Score_7", exp(("AdaBoost_AVG_Scores_BN"."Proba_7" / 16.0) / 9) / (exp(("AdaBoost_AVG_Scores_BN"."Proba_0" / 16.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_1" / 16.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_2" / 16.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_3" / 16.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_4" / 16.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_5" / 16.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_6" / 16.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_7" / 16.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_8" / 16.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_9" / 16.0) / 9)) AS "Proba_7", CAST(NULL AS BINARY_DOUBLE) AS "LogProba_7", "AdaBoost_AVG_Scores_BN"."Score_8" AS "Score_8", exp(("AdaBoost_AVG_Scores_BN"."Proba_8" / 16.0) / 9) / (exp(("AdaBoost_AVG_Scores_BN"."Proba_0" / 16.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_1" / 16.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_2" / 16.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_3" / 16.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_4" / 16.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_5" / 16.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_6" / 16.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_7" / 16.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_8" / 16.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_9" / 16.0) / 9)) AS "Proba_8", CAST(NULL AS BINARY_DOUBLE) AS "LogProba_8", "AdaBoost_AVG_Scores_BN"."Score_9" AS "Score_9", exp(("AdaBoost_AVG_Scores_BN"."Proba_9" / 16.0) / 9) / (exp(("AdaBoost_AVG_Scores_BN"."Proba_0" / 16.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_1" / 16.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_2" / 16.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_3" / 16.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_4" / 16.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_5" / 16.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_6" / 16.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_7" / 16.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_8" / 16.0) / 9) + exp(("AdaBoost_AVG_Scores_BN"."Proba_9" / 16.0) / 9)) AS "Proba_9", CAST(NULL AS BINARY_DOUBLE) AS "LogProba_9" 
FROM "AdaBoost_AVG_Scores_BN"), 
orig_cte AS 
(SELECT "AdaBoost_AVG_Scores"."KEY" AS "KEY", "AdaBoost_AVG_Scores"."Score_0" AS "Score_0", "AdaBoost_AVG_Scores"."Score_1" AS "Score_1", "AdaBoost_AVG_Scores"."Score_2" AS "Score_2", "AdaBoost_AVG_Scores"."Score_3" AS "Score_3", "AdaBoost_AVG_Scores"."Score_4" AS "Score_4", "AdaBoost_AVG_Scores"."Score_5" AS "Score_5", "AdaBoost_AVG_Scores"."Score_6" AS "Score_6", "AdaBoost_AVG_Scores"."Score_7" AS "Score_7", "AdaBoost_AVG_Scores"."Score_8" AS "Score_8", "AdaBoost_AVG_Scores"."Score_9" AS "Score_9", "AdaBoost_AVG_Scores"."Proba_0" AS "Proba_0", "AdaBoost_AVG_Scores"."Proba_1" AS "Proba_1", "AdaBoost_AVG_Scores"."Proba_2" AS "Proba_2", "AdaBoost_AVG_Scores"."Proba_3" AS "Proba_3", "AdaBoost_AVG_Scores"."Proba_4" AS "Proba_4", "AdaBoost_AVG_Scores"."Proba_5" AS "Proba_5", "AdaBoost_AVG_Scores"."Proba_6" AS "Proba_6", "AdaBoost_AVG_Scores"."Proba_7" AS "Proba_7", "AdaBoost_AVG_Scores"."Proba_8" AS "Proba_8", "AdaBoost_AVG_Scores"."Proba_9" AS "Proba_9", "AdaBoost_AVG_Scores"."LogProba_0" AS "LogProba_0", "AdaBoost_AVG_Scores"."LogProba_1" AS "LogProba_1", "AdaBoost_AVG_Scores"."LogProba_2" AS "LogProba_2", "AdaBoost_AVG_Scores"."LogProba_3" AS "LogProba_3", "AdaBoost_AVG_Scores"."LogProba_4" AS "LogProba_4", "AdaBoost_AVG_Scores"."LogProba_5" AS "LogProba_5", "AdaBoost_AVG_Scores"."LogProba_6" AS "LogProba_6", "AdaBoost_AVG_Scores"."LogProba_7" AS "LogProba_7", "AdaBoost_AVG_Scores"."LogProba_8" AS "LogProba_8", "AdaBoost_AVG_Scores"."LogProba_9" AS "LogProba_9", CAST(NULL AS NUMBER(19)) AS "Decision", CAST(NULL AS BINARY_DOUBLE) AS "DecisionProba" 
FROM "AdaBoost_AVG_Scores"), 
score_class_union AS 
(SELECT scu."KEY_u" AS "KEY_u", scu.class AS class, scu."LogProba" AS "LogProba", scu."Proba" AS "Proba", scu."Score" AS "Score" 
FROM (SELECT orig_cte."KEY" AS "KEY_u", 0 AS class, orig_cte."LogProba_0" AS "LogProba", orig_cte."Proba_0" AS "Proba", orig_cte."Score_0" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 1 AS class, orig_cte."LogProba_1" AS "LogProba", orig_cte."Proba_1" AS "Proba", orig_cte."Score_1" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 2 AS class, orig_cte."LogProba_2" AS "LogProba", orig_cte."Proba_2" AS "Proba", orig_cte."Score_2" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 3 AS class, orig_cte."LogProba_3" AS "LogProba", orig_cte."Proba_3" AS "Proba", orig_cte."Score_3" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 4 AS class, orig_cte."LogProba_4" AS "LogProba", orig_cte."Proba_4" AS "Proba", orig_cte."Score_4" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 5 AS class, orig_cte."LogProba_5" AS "LogProba", orig_cte."Proba_5" AS "Proba", orig_cte."Score_5" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 6 AS class, orig_cte."LogProba_6" AS "LogProba", orig_cte."Proba_6" AS "Proba", orig_cte."Score_6" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 7 AS class, orig_cte."LogProba_7" AS "LogProba", orig_cte."Proba_7" AS "Proba", orig_cte."Score_7" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 8 AS class, orig_cte."LogProba_8" AS "LogProba", orig_cte."Proba_8" AS "Proba", orig_cte."Score_8" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 9 AS class, orig_cte."LogProba_9" AS "LogProba", orig_cte."Proba_9" AS "Proba", orig_cte."Score_9" AS "Score" 
FROM orig_cte) scu), 
score_max AS 
(SELECT orig_cte."KEY" AS "KEY", orig_cte."Score_0" AS "Score_0", orig_cte."Score_1" AS "Score_1", orig_cte."Score_2" AS "Score_2", orig_cte."Score_3" AS "Score_3", orig_cte."Score_4" AS "Score_4", orig_cte."Score_5" AS "Score_5", orig_cte."Score_6" AS "Score_6", orig_cte."Score_7" AS "Score_7", orig_cte."Score_8" AS "Score_8", orig_cte."Score_9" AS "Score_9", orig_cte."Proba_0" AS "Proba_0", orig_cte."Proba_1" AS "Proba_1", orig_cte."Proba_2" AS "Proba_2", orig_cte."Proba_3" AS "Proba_3", orig_cte."Proba_4" AS "Proba_4", orig_cte."Proba_5" AS "Proba_5", orig_cte."Proba_6" AS "Proba_6", orig_cte."Proba_7" AS "Proba_7", orig_cte."Proba_8" AS "Proba_8", orig_cte."Proba_9" AS "Proba_9", orig_cte."LogProba_0" AS "LogProba_0", orig_cte."LogProba_1" AS "LogProba_1", orig_cte."LogProba_2" AS "LogProba_2", orig_cte."LogProba_3" AS "LogProba_3", orig_cte."LogProba_4" AS "LogProba_4", orig_cte."LogProba_5" AS "LogProba_5", orig_cte."LogProba_6" AS "LogProba_6", orig_cte."LogProba_7" AS "LogProba_7", orig_cte."LogProba_8" AS "LogProba_8", orig_cte."LogProba_9" AS "LogProba_9", orig_cte."Decision" AS "Decision", orig_cte."DecisionProba" AS "DecisionProba", max_select."KEY_m" AS "KEY_m", max_select."max_Score" AS "max_Score" 
FROM orig_cte LEFT OUTER JOIN (SELECT score_class_union."KEY_u" AS "KEY_m", max(score_class_union."Score") AS "max_Score" 
FROM score_class_union GROUP BY score_class_union."KEY_u") max_select ON orig_cte."KEY" = max_select."KEY_m"), 
union_with_max AS 
(SELECT score_class_union."KEY_u" AS "KEY_u", score_class_union.class AS class, score_class_union."LogProba" AS "LogProba", score_class_union."Proba" AS "Proba", score_class_union."Score" AS "Score", score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Score_2" AS "Score_2", score_max."Score_3" AS "Score_3", score_max."Score_4" AS "Score_4", score_max."Score_5" AS "Score_5", score_max."Score_6" AS "Score_6", score_max."Score_7" AS "Score_7", score_max."Score_8" AS "Score_8", score_max."Score_9" AS "Score_9", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."Proba_2" AS "Proba_2", score_max."Proba_3" AS "Proba_3", score_max."Proba_4" AS "Proba_4", score_max."Proba_5" AS "Proba_5", score_max."Proba_6" AS "Proba_6", score_max."Proba_7" AS "Proba_7", score_max."Proba_8" AS "Proba_8", score_max."Proba_9" AS "Proba_9", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."LogProba_2" AS "LogProba_2", score_max."LogProba_3" AS "LogProba_3", score_max."LogProba_4" AS "LogProba_4", score_max."LogProba_5" AS "LogProba_5", score_max."LogProba_6" AS "LogProba_6", score_max."LogProba_7" AS "LogProba_7", score_max."LogProba_8" AS "LogProba_8", score_max."LogProba_9" AS "LogProba_9", score_max."Decision" AS "Decision", score_max."DecisionProba" AS "DecisionProba", score_max."KEY_m" AS "KEY_m", score_max."max_Score" AS "max_Score" 
FROM score_class_union LEFT OUTER JOIN score_max ON score_class_union."KEY_u" = score_max."KEY"), 
arg_max_cte AS 
(SELECT score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Score_2" AS "Score_2", score_max."Score_3" AS "Score_3", score_max."Score_4" AS "Score_4", score_max."Score_5" AS "Score_5", score_max."Score_6" AS "Score_6", score_max."Score_7" AS "Score_7", score_max."Score_8" AS "Score_8", score_max."Score_9" AS "Score_9", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."Proba_2" AS "Proba_2", score_max."Proba_3" AS "Proba_3", score_max."Proba_4" AS "Proba_4", score_max."Proba_5" AS "Proba_5", score_max."Proba_6" AS "Proba_6", score_max."Proba_7" AS "Proba_7", score_max."Proba_8" AS "Proba_8", score_max."Proba_9" AS "Proba_9", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."LogProba_2" AS "LogProba_2", score_max."LogProba_3" AS "LogProba_3", score_max."LogProba_4" AS "LogProba_4", score_max."LogProba_5" AS "LogProba_5", score_max."LogProba_6" AS "LogProba_6", score_max."LogProba_7" AS "LogProba_7", score_max."LogProba_8" AS "LogProba_8", score_max."LogProba_9" AS "LogProba_9", score_max."Decision" AS "Decision", score_max."DecisionProba" AS "DecisionProba", score_max."KEY_m" AS "KEY_m", score_max."max_Score" AS "max_Score", "arg_max_t_Score"."KEY_Score" AS "KEY_Score", "arg_max_t_Score"."arg_max_Score" AS "arg_max_Score" 
FROM score_max LEFT OUTER JOIN (SELECT union_with_max."KEY" AS "KEY_Score", min(union_with_max.class) AS "arg_max_Score" 
FROM union_with_max 
WHERE union_with_max."Score" >= union_with_max."max_Score" GROUP BY union_with_max."KEY") "arg_max_t_Score" ON score_max."KEY" = "arg_max_t_Score"."KEY_Score")
 SELECT arg_max_cte."KEY" AS "KEY", arg_max_cte."Score_0" AS "Score_0", arg_max_cte."Score_1" AS "Score_1", arg_max_cte."Score_2" AS "Score_2", arg_max_cte."Score_3" AS "Score_3", arg_max_cte."Score_4" AS "Score_4", arg_max_cte."Score_5" AS "Score_5", arg_max_cte."Score_6" AS "Score_6", arg_max_cte."Score_7" AS "Score_7", arg_max_cte."Score_8" AS "Score_8", arg_max_cte."Score_9" AS "Score_9", arg_max_cte."Proba_0" AS "Proba_0", arg_max_cte."Proba_1" AS "Proba_1", arg_max_cte."Proba_2" AS "Proba_2", arg_max_cte."Proba_3" AS "Proba_3", arg_max_cte."Proba_4" AS "Proba_4", arg_max_cte."Proba_5" AS "Proba_5", arg_max_cte."Proba_6" AS "Proba_6", arg_max_cte."Proba_7" AS "Proba_7", arg_max_cte."Proba_8" AS "Proba_8", arg_max_cte."Proba_9" AS "Proba_9", CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN ln(arg_max_cte."Proba_0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_0", CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN ln(arg_max_cte."Proba_1") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_1", CASE WHEN (arg_max_cte."Proba_2" IS NULL OR arg_max_cte."Proba_2" > 0.0) THEN ln(arg_max_cte."Proba_2") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_2", CASE WHEN (arg_max_cte."Proba_3" IS NULL OR arg_max_cte."Proba_3" > 0.0) THEN ln(arg_max_cte."Proba_3") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_3", CASE WHEN (arg_max_cte."Proba_4" IS NULL OR arg_max_cte."Proba_4" > 0.0) THEN ln(arg_max_cte."Proba_4") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_4", CASE WHEN (arg_max_cte."Proba_5" IS NULL OR arg_max_cte."Proba_5" > 0.0) THEN ln(arg_max_cte."Proba_5") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_5", CASE WHEN (arg_max_cte."Proba_6" IS NULL OR arg_max_cte."Proba_6" > 0.0) THEN ln(arg_max_cte."Proba_6") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_6", CASE WHEN (arg_max_cte."Proba_7" IS NULL OR arg_max_cte."Proba_7" > 0.0) THEN ln(arg_max_cte."Proba_7") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_7", CASE WHEN (arg_max_cte."Proba_8" IS NULL OR arg_max_cte."Proba_8" > 0.0) THEN ln(arg_max_cte."Proba_8") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_8", CASE WHEN (arg_max_cte."Proba_9" IS NULL OR arg_max_cte."Proba_9" > 0.0) THEN ln(arg_max_cte."Proba_9") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_9", arg_max_cte."arg_max_Score" AS "Decision", CASE WHEN (arg_max_cte."arg_max_Score" = 0) THEN arg_max_cte."Proba_0" WHEN (arg_max_cte."arg_max_Score" = 1) THEN arg_max_cte."Proba_1" WHEN (arg_max_cte."arg_max_Score" = 2) THEN arg_max_cte."Proba_2" WHEN (arg_max_cte."arg_max_Score" = 3) THEN arg_max_cte."Proba_3" WHEN (arg_max_cte."arg_max_Score" = 4) THEN arg_max_cte."Proba_4" WHEN (arg_max_cte."arg_max_Score" = 5) THEN arg_max_cte."Proba_5" WHEN (arg_max_cte."arg_max_Score" = 6) THEN arg_max_cte."Proba_6" WHEN (arg_max_cte."arg_max_Score" = 7) THEN arg_max_cte."Proba_7" WHEN (arg_max_cte."arg_max_Score" = 8) THEN arg_max_cte."Proba_8" WHEN (arg_max_cte."arg_max_Score" = 9) THEN arg_max_cte."Proba_9" END AS "DecisionProba" 
FROM arg_max_cte