-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2018

-- Model : BaggingRegressor_Pipeline
-- Dataset : RandomReg_100
-- Database : teradata


-- This SQL code can contain one or more statements, to be executed in the order they appear in this file.



-- Code For temporary table tmp_20180516114106_codegen_fdkq3x_ads_imp_1_out part 1. Create 


CREATE GLOBAL TEMPORARY TABLE tmp_20180516114106_codegen_fdkq3x_ads_imp_1_out  (
	"KEY" BIGINT, 
	impter_2 DOUBLE PRECISION, 
	impter_3 DOUBLE PRECISION, 
	impter_4 DOUBLE PRECISION, 
	impter_5 DOUBLE PRECISION, 
	impter_6 DOUBLE PRECISION, 
	impter_7 DOUBLE PRECISION, 
	impter_8 DOUBLE PRECISION, 
	impter_9 DOUBLE PRECISION, 
	impter_10 DOUBLE PRECISION, 
	impter_11 DOUBLE PRECISION, 
	impter_12 DOUBLE PRECISION, 
	impter_13 DOUBLE PRECISION, 
	impter_14 DOUBLE PRECISION, 
	impter_15 DOUBLE PRECISION, 
	impter_16 DOUBLE PRECISION, 
	impter_17 DOUBLE PRECISION, 
	impter_18 DOUBLE PRECISION, 
	impter_19 DOUBLE PRECISION, 
	impter_20 DOUBLE PRECISION, 
	impter_21 DOUBLE PRECISION, 
	impter_22 DOUBLE PRECISION, 
	impter_23 DOUBLE PRECISION, 
	impter_24 DOUBLE PRECISION, 
	impter_25 DOUBLE PRECISION, 
	impter_26 DOUBLE PRECISION, 
	impter_27 DOUBLE PRECISION, 
	impter_28 DOUBLE PRECISION, 
	impter_29 DOUBLE PRECISION, 
	impter_30 DOUBLE PRECISION, 
	impter_31 DOUBLE PRECISION, 
	impter_32 DOUBLE PRECISION, 
	impter_33 DOUBLE PRECISION, 
	impter_34 DOUBLE PRECISION, 
	impter_35 DOUBLE PRECISION, 
	impter_36 DOUBLE PRECISION, 
	impter_37 DOUBLE PRECISION, 
	impter_38 DOUBLE PRECISION, 
	impter_39 DOUBLE PRECISION, 
	impter_40 DOUBLE PRECISION, 
	impter_41 DOUBLE PRECISION, 
	impter_42 DOUBLE PRECISION, 
	impter_43 DOUBLE PRECISION, 
	impter_44 DOUBLE PRECISION, 
	impter_45 DOUBLE PRECISION, 
	impter_46 DOUBLE PRECISION, 
	impter_47 DOUBLE PRECISION, 
	impter_48 DOUBLE PRECISION, 
	impter_49 DOUBLE PRECISION, 
	impter_50 DOUBLE PRECISION, 
	impter_51 DOUBLE PRECISION, 
	impter_52 DOUBLE PRECISION, 
	impter_53 DOUBLE PRECISION, 
	impter_54 DOUBLE PRECISION, 
	impter_55 DOUBLE PRECISION, 
	impter_56 DOUBLE PRECISION, 
	impter_57 DOUBLE PRECISION, 
	impter_58 DOUBLE PRECISION, 
	impter_59 DOUBLE PRECISION, 
	impter_60 DOUBLE PRECISION, 
	impter_61 DOUBLE PRECISION, 
	impter_62 DOUBLE PRECISION, 
	impter_63 DOUBLE PRECISION, 
	impter_64 DOUBLE PRECISION, 
	impter_65 DOUBLE PRECISION, 
	impter_66 DOUBLE PRECISION, 
	impter_67 DOUBLE PRECISION, 
	impter_68 DOUBLE PRECISION, 
	impter_69 DOUBLE PRECISION, 
	impter_70 DOUBLE PRECISION, 
	impter_71 DOUBLE PRECISION, 
	impter_72 DOUBLE PRECISION, 
	impter_73 DOUBLE PRECISION, 
	impter_74 DOUBLE PRECISION, 
	impter_75 DOUBLE PRECISION, 
	impter_76 DOUBLE PRECISION, 
	impter_77 DOUBLE PRECISION, 
	impter_78 DOUBLE PRECISION, 
	impter_79 DOUBLE PRECISION, 
	impter_80 DOUBLE PRECISION, 
	impter_81 DOUBLE PRECISION, 
	impter_82 DOUBLE PRECISION, 
	impter_83 DOUBLE PRECISION, 
	impter_84 DOUBLE PRECISION, 
	impter_85 DOUBLE PRECISION, 
	impter_86 DOUBLE PRECISION, 
	impter_87 DOUBLE PRECISION, 
	impter_88 DOUBLE PRECISION, 
	impter_89 DOUBLE PRECISION, 
	impter_90 DOUBLE PRECISION, 
	impter_91 DOUBLE PRECISION, 
	impter_92 DOUBLE PRECISION, 
	impter_93 DOUBLE PRECISION, 
	impter_94 DOUBLE PRECISION, 
	impter_95 DOUBLE PRECISION, 
	impter_96 DOUBLE PRECISION, 
	impter_97 DOUBLE PRECISION, 
	impter_98 DOUBLE PRECISION, 
	impter_99 DOUBLE PRECISION, 
	impter_100 DOUBLE PRECISION, 
	impter_101 DOUBLE PRECISION
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table tmp_20180516114106_codegen_fdkq3x_ads_imp_1_out part 2. Populate

INSERT INTO tmp_20180516114106_codegen_fdkq3x_ads_imp_1_out ("KEY", impter_2, impter_3, impter_4, impter_5, impter_6, impter_7, impter_8, impter_9, impter_10, impter_11, impter_12, impter_13, impter_14, impter_15, impter_16, impter_17, impter_18, impter_19, impter_20, impter_21, impter_22, impter_23, impter_24, impter_25, impter_26, impter_27, impter_28, impter_29, impter_30, impter_31, impter_32, impter_33, impter_34, impter_35, impter_36, impter_37, impter_38, impter_39, impter_40, impter_41, impter_42, impter_43, impter_44, impter_45, impter_46, impter_47, impter_48, impter_49, impter_50, impter_51, impter_52, impter_53, impter_54, impter_55, impter_56, impter_57, impter_58, impter_59, impter_60, impter_61, impter_62, impter_63, impter_64, impter_65, impter_66, impter_67, impter_68, impter_69, impter_70, impter_71, impter_72, impter_73, impter_74, impter_75, impter_76, impter_77, impter_78, impter_79, impter_80, impter_81, impter_82, impter_83, impter_84, impter_85, impter_86, impter_87, impter_88, impter_89, impter_90, impter_91, impter_92, impter_93, impter_94, impter_95, impter_96, impter_97, impter_98, impter_99, impter_100, impter_101) SELECT "U"."KEY", "U".impter_2, "U".impter_3, "U".impter_4, "U".impter_5, "U".impter_6, "U".impter_7, "U".impter_8, "U".impter_9, "U".impter_10, "U".impter_11, "U".impter_12, "U".impter_13, "U".impter_14, "U".impter_15, "U".impter_16, "U".impter_17, "U".impter_18, "U".impter_19, "U".impter_20, "U".impter_21, "U".impter_22, "U".impter_23, "U".impter_24, "U".impter_25, "U".impter_26, "U".impter_27, "U".impter_28, "U".impter_29, "U".impter_30, "U".impter_31, "U".impter_32, "U".impter_33, "U".impter_34, "U".impter_35, "U".impter_36, "U".impter_37, "U".impter_38, "U".impter_39, "U".impter_40, "U".impter_41, "U".impter_42, "U".impter_43, "U".impter_44, "U".impter_45, "U".impter_46, "U".impter_47, "U".impter_48, "U".impter_49, "U".impter_50, "U".impter_51, "U".impter_52, "U".impter_53, "U".impter_54, "U".impter_55, "U".impter_56, "U".impter_57, "U".impter_58, "U".impter_59, "U".impter_60, "U".impter_61, "U".impter_62, "U".impter_63, "U".impter_64, "U".impter_65, "U".impter_66, "U".impter_67, "U".impter_68, "U".impter_69, "U".impter_70, "U".impter_71, "U".impter_72, "U".impter_73, "U".impter_74, "U".impter_75, "U".impter_76, "U".impter_77, "U".impter_78, "U".impter_79, "U".impter_80, "U".impter_81, "U".impter_82, "U".impter_83, "U".impter_84, "U".impter_85, "U".impter_86, "U".impter_87, "U".impter_88, "U".impter_89, "U".impter_90, "U".impter_91, "U".impter_92, "U".impter_93, "U".impter_94, "U".impter_95, "U".impter_96, "U".impter_97, "U".impter_98, "U".impter_99, "U".impter_100, "U".impter_101 
FROM (SELECT "ADS_imp_1_OUT"."KEY", "ADS_imp_1_OUT".impter_2, "ADS_imp_1_OUT".impter_3, "ADS_imp_1_OUT".impter_4, "ADS_imp_1_OUT".impter_5, "ADS_imp_1_OUT".impter_6, "ADS_imp_1_OUT".impter_7, "ADS_imp_1_OUT".impter_8, "ADS_imp_1_OUT".impter_9, "ADS_imp_1_OUT".impter_10, "ADS_imp_1_OUT".impter_11, "ADS_imp_1_OUT".impter_12, "ADS_imp_1_OUT".impter_13, "ADS_imp_1_OUT".impter_14, "ADS_imp_1_OUT".impter_15, "ADS_imp_1_OUT".impter_16, "ADS_imp_1_OUT".impter_17, "ADS_imp_1_OUT".impter_18, "ADS_imp_1_OUT".impter_19, "ADS_imp_1_OUT".impter_20, "ADS_imp_1_OUT".impter_21, "ADS_imp_1_OUT".impter_22, "ADS_imp_1_OUT".impter_23, "ADS_imp_1_OUT".impter_24, "ADS_imp_1_OUT".impter_25, "ADS_imp_1_OUT".impter_26, "ADS_imp_1_OUT".impter_27, "ADS_imp_1_OUT".impter_28, "ADS_imp_1_OUT".impter_29, "ADS_imp_1_OUT".impter_30, "ADS_imp_1_OUT".impter_31, "ADS_imp_1_OUT".impter_32, "ADS_imp_1_OUT".impter_33, "ADS_imp_1_OUT".impter_34, "ADS_imp_1_OUT".impter_35, "ADS_imp_1_OUT".impter_36, "ADS_imp_1_OUT".impter_37, "ADS_imp_1_OUT".impter_38, "ADS_imp_1_OUT".impter_39, "ADS_imp_1_OUT".impter_40, "ADS_imp_1_OUT".impter_41, "ADS_imp_1_OUT".impter_42, "ADS_imp_1_OUT".impter_43, "ADS_imp_1_OUT".impter_44, "ADS_imp_1_OUT".impter_45, "ADS_imp_1_OUT".impter_46, "ADS_imp_1_OUT".impter_47, "ADS_imp_1_OUT".impter_48, "ADS_imp_1_OUT".impter_49, "ADS_imp_1_OUT".impter_50, "ADS_imp_1_OUT".impter_51, "ADS_imp_1_OUT".impter_52, "ADS_imp_1_OUT".impter_53, "ADS_imp_1_OUT".impter_54, "ADS_imp_1_OUT".impter_55, "ADS_imp_1_OUT".impter_56, "ADS_imp_1_OUT".impter_57, "ADS_imp_1_OUT".impter_58, "ADS_imp_1_OUT".impter_59, "ADS_imp_1_OUT".impter_60, "ADS_imp_1_OUT".impter_61, "ADS_imp_1_OUT".impter_62, "ADS_imp_1_OUT".impter_63, "ADS_imp_1_OUT".impter_64, "ADS_imp_1_OUT".impter_65, "ADS_imp_1_OUT".impter_66, "ADS_imp_1_OUT".impter_67, "ADS_imp_1_OUT".impter_68, "ADS_imp_1_OUT".impter_69, "ADS_imp_1_OUT".impter_70, "ADS_imp_1_OUT".impter_71, "ADS_imp_1_OUT".impter_72, "ADS_imp_1_OUT".impter_73, "ADS_imp_1_OUT".impter_74, "ADS_imp_1_OUT".impter_75, "ADS_imp_1_OUT".impter_76, "ADS_imp_1_OUT".impter_77, "ADS_imp_1_OUT".impter_78, "ADS_imp_1_OUT".impter_79, "ADS_imp_1_OUT".impter_80, "ADS_imp_1_OUT".impter_81, "ADS_imp_1_OUT".impter_82, "ADS_imp_1_OUT".impter_83, "ADS_imp_1_OUT".impter_84, "ADS_imp_1_OUT".impter_85, "ADS_imp_1_OUT".impter_86, "ADS_imp_1_OUT".impter_87, "ADS_imp_1_OUT".impter_88, "ADS_imp_1_OUT".impter_89, "ADS_imp_1_OUT".impter_90, "ADS_imp_1_OUT".impter_91, "ADS_imp_1_OUT".impter_92, "ADS_imp_1_OUT".impter_93, "ADS_imp_1_OUT".impter_94, "ADS_imp_1_OUT".impter_95, "ADS_imp_1_OUT".impter_96, "ADS_imp_1_OUT".impter_97, "ADS_imp_1_OUT".impter_98, "ADS_imp_1_OUT".impter_99, "ADS_imp_1_OUT".impter_100, "ADS_imp_1_OUT".impter_101 
FROM (SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" IS NULL) THEN -0.08128085300192169 ELSE "ADS"."Feature_0" END AS impter_2, CASE WHEN ("ADS"."Feature_1" IS NULL) THEN -0.13436805172534722 ELSE "ADS"."Feature_1" END AS impter_3, CASE WHEN ("ADS"."Feature_2" IS NULL) THEN -0.1171335439265335 ELSE "ADS"."Feature_2" END AS impter_4, CASE WHEN ("ADS"."Feature_3" IS NULL) THEN 0.10314525691526008 ELSE "ADS"."Feature_3" END AS impter_5, CASE WHEN ("ADS"."Feature_4" IS NULL) THEN 0.04859877061601238 ELSE "ADS"."Feature_4" END AS impter_6, CASE WHEN ("ADS"."Feature_5" IS NULL) THEN 0.09985694677353979 ELSE "ADS"."Feature_5" END AS impter_7, CASE WHEN ("ADS"."Feature_6" IS NULL) THEN 0.0672774556565916 ELSE "ADS"."Feature_6" END AS impter_8, CASE WHEN ("ADS"."Feature_7" IS NULL) THEN 0.1622384092846963 ELSE "ADS"."Feature_7" END AS impter_9, CASE WHEN ("ADS"."Feature_8" IS NULL) THEN 0.04069362852608218 ELSE "ADS"."Feature_8" END AS impter_10, CASE WHEN ("ADS"."Feature_9" IS NULL) THEN 0.051659905088603277 ELSE "ADS"."Feature_9" END AS impter_11, CASE WHEN ("ADS"."Feature_10" IS NULL) THEN 0.10179067839269526 ELSE "ADS"."Feature_10" END AS impter_12, CASE WHEN ("ADS"."Feature_11" IS NULL) THEN -0.1759747362698276 ELSE "ADS"."Feature_11" END AS impter_13, CASE WHEN ("ADS"."Feature_12" IS NULL) THEN -0.09675138494095058 ELSE "ADS"."Feature_12" END AS impter_14, CASE WHEN ("ADS"."Feature_13" IS NULL) THEN -0.04608656912634662 ELSE "ADS"."Feature_13" END AS impter_15, CASE WHEN ("ADS"."Feature_14" IS NULL) THEN 0.10165852286085655 ELSE "ADS"."Feature_14" END AS impter_16, CASE WHEN ("ADS"."Feature_15" IS NULL) THEN 0.11179903010835046 ELSE "ADS"."Feature_15" END AS impter_17, CASE WHEN ("ADS"."Feature_16" IS NULL) THEN -0.006110233359380335 ELSE "ADS"."Feature_16" END AS impter_18, CASE WHEN ("ADS"."Feature_17" IS NULL) THEN 0.07144704068910084 ELSE "ADS"."Feature_17" END AS impter_19, CASE WHEN ("ADS"."Feature_18" IS NULL) THEN -0.08808458650118434 ELSE "ADS"."Feature_18" END AS impter_20, CASE WHEN ("ADS"."Feature_19" IS NULL) THEN -0.07182799000884085 ELSE "ADS"."Feature_19" END AS impter_21, CASE WHEN ("ADS"."Feature_20" IS NULL) THEN -0.07230200847310368 ELSE "ADS"."Feature_20" END AS impter_22, CASE WHEN ("ADS"."Feature_21" IS NULL) THEN 0.02896693079944173 ELSE "ADS"."Feature_21" END AS impter_23, CASE WHEN ("ADS"."Feature_22" IS NULL) THEN 0.21388217632997558 ELSE "ADS"."Feature_22" END AS impter_24, CASE WHEN ("ADS"."Feature_23" IS NULL) THEN -0.06669297919409706 ELSE "ADS"."Feature_23" END AS impter_25, CASE WHEN ("ADS"."Feature_24" IS NULL) THEN 0.046152348549980085 ELSE "ADS"."Feature_24" END AS impter_26, CASE WHEN ("ADS"."Feature_25" IS NULL) THEN 0.03249513222766133 ELSE "ADS"."Feature_25" END AS impter_27, CASE WHEN ("ADS"."Feature_26" IS NULL) THEN 0.05224239330612866 ELSE "ADS"."Feature_26" END AS impter_28, CASE WHEN ("ADS"."Feature_27" IS NULL) THEN 0.018745871966632584 ELSE "ADS"."Feature_27" END AS impter_29, CASE WHEN ("ADS"."Feature_28" IS NULL) THEN 0.015553079229790346 ELSE "ADS"."Feature_28" END AS impter_30, CASE WHEN ("ADS"."Feature_29" IS NULL) THEN 0.2258153729902979 ELSE "ADS"."Feature_29" END AS impter_31, CASE WHEN ("ADS"."Feature_30" IS NULL) THEN -0.16989857778838335 ELSE "ADS"."Feature_30" END AS impter_32, CASE WHEN ("ADS"."Feature_31" IS NULL) THEN 0.036044309156992346 ELSE "ADS"."Feature_31" END AS impter_33, CASE WHEN ("ADS"."Feature_32" IS NULL) THEN -0.17199324162640067 ELSE "ADS"."Feature_32" END AS impter_34, CASE WHEN ("ADS"."Feature_33" IS NULL) THEN 0.13781418887864322 ELSE "ADS"."Feature_33" END AS impter_35, CASE WHEN ("ADS"."Feature_34" IS NULL) THEN -0.002438210964217244 ELSE "ADS"."Feature_34" END AS impter_36, CASE WHEN ("ADS"."Feature_35" IS NULL) THEN 0.060833749131451356 ELSE "ADS"."Feature_35" END AS impter_37, CASE WHEN ("ADS"."Feature_36" IS NULL) THEN -0.18905998689974024 ELSE "ADS"."Feature_36" END AS impter_38, CASE WHEN ("ADS"."Feature_37" IS NULL) THEN -0.09635219278465344 ELSE "ADS"."Feature_37" END AS impter_39, CASE WHEN ("ADS"."Feature_38" IS NULL) THEN -0.10160667507355636 ELSE "ADS"."Feature_38" END AS impter_40, CASE WHEN ("ADS"."Feature_39" IS NULL) THEN 0.06475250541578681 ELSE "ADS"."Feature_39" END AS impter_41, CASE WHEN ("ADS"."Feature_40" IS NULL) THEN -0.30264305036051603 ELSE "ADS"."Feature_40" END AS impter_42, CASE WHEN ("ADS"."Feature_41" IS NULL) THEN -0.13264155681878692 ELSE "ADS"."Feature_41" END AS impter_43, CASE WHEN ("ADS"."Feature_42" IS NULL) THEN -0.1334054780733323 ELSE "ADS"."Feature_42" END AS impter_44, CASE WHEN ("ADS"."Feature_43" IS NULL) THEN -0.0011436009702802522 ELSE "ADS"."Feature_43" END AS impter_45, CASE WHEN ("ADS"."Feature_44" IS NULL) THEN -0.05335157908923337 ELSE "ADS"."Feature_44" END AS impter_46, CASE WHEN ("ADS"."Feature_45" IS NULL) THEN 0.01714537002687063 ELSE "ADS"."Feature_45" END AS impter_47, CASE WHEN ("ADS"."Feature_46" IS NULL) THEN -0.059059449572612485 ELSE "ADS"."Feature_46" END AS impter_48, CASE WHEN ("ADS"."Feature_47" IS NULL) THEN -0.09528879968183994 ELSE "ADS"."Feature_47" END AS impter_49, CASE WHEN ("ADS"."Feature_48" IS NULL) THEN -0.15781363463365924 ELSE "ADS"."Feature_48" END AS impter_50, CASE WHEN ("ADS"."Feature_49" IS NULL) THEN -0.23794433392453432 ELSE "ADS"."Feature_49" END AS impter_51, CASE WHEN ("ADS"."Feature_50" IS NULL) THEN 0.13863850693032237 ELSE "ADS"."Feature_50" END AS impter_52, CASE WHEN ("ADS"."Feature_51" IS NULL) THEN -0.01699621991492915 ELSE "ADS"."Feature_51" END AS impter_53, CASE WHEN ("ADS"."Feature_52" IS NULL) THEN 0.19701490003754304 ELSE "ADS"."Feature_52" END AS impter_54, CASE WHEN ("ADS"."Feature_53" IS NULL) THEN 0.05162990473238551 ELSE "ADS"."Feature_53" END AS impter_55, CASE WHEN ("ADS"."Feature_54" IS NULL) THEN -0.13453002098662553 ELSE "ADS"."Feature_54" END AS impter_56, CASE WHEN ("ADS"."Feature_55" IS NULL) THEN 0.14789370104559646 ELSE "ADS"."Feature_55" END AS impter_57, CASE WHEN ("ADS"."Feature_56" IS NULL) THEN -0.013142759438358454 ELSE "ADS"."Feature_56" END AS impter_58, CASE WHEN ("ADS"."Feature_57" IS NULL) THEN -0.09299162994657897 ELSE "ADS"."Feature_57" END AS impter_59, CASE WHEN ("ADS"."Feature_58" IS NULL) THEN -0.24689492768975088 ELSE "ADS"."Feature_58" END AS impter_60, CASE WHEN ("ADS"."Feature_59" IS NULL) THEN 0.13499727108287438 ELSE "ADS"."Feature_59" END AS impter_61, CASE WHEN ("ADS"."Feature_60" IS NULL) THEN 0.0025544005507731047 ELSE "ADS"."Feature_60" END AS impter_62, CASE WHEN ("ADS"."Feature_61" IS NULL) THEN 0.12527368663465327 ELSE "ADS"."Feature_61" END AS impter_63, CASE WHEN ("ADS"."Feature_62" IS NULL) THEN -0.03739962296055886 ELSE "ADS"."Feature_62" END AS impter_64, CASE WHEN ("ADS"."Feature_63" IS NULL) THEN -0.02998869580177853 ELSE "ADS"."Feature_63" END AS impter_65, CASE WHEN ("ADS"."Feature_64" IS NULL) THEN -0.04286088516871345 ELSE "ADS"."Feature_64" END AS impter_66, CASE WHEN ("ADS"."Feature_65" IS NULL) THEN -0.1438347006651433 ELSE "ADS"."Feature_65" END AS impter_67, CASE WHEN ("ADS"."Feature_66" IS NULL) THEN -0.05269793910889183 ELSE "ADS"."Feature_66" END AS impter_68, CASE WHEN ("ADS"."Feature_67" IS NULL) THEN 0.029267940271277926 ELSE "ADS"."Feature_67" END AS impter_69, CASE WHEN ("ADS"."Feature_68" IS NULL) THEN 0.10431080888322372 ELSE "ADS"."Feature_68" END AS impter_70, CASE WHEN ("ADS"."Feature_69" IS NULL) THEN -0.09619687433047125 ELSE "ADS"."Feature_69" END AS impter_71, CASE WHEN ("ADS"."Feature_70" IS NULL) THEN 0.0067333192983315745 ELSE "ADS"."Feature_70" END AS impter_72, CASE WHEN ("ADS"."Feature_71" IS NULL) THEN 0.03289665935367682 ELSE "ADS"."Feature_71" END AS impter_73, CASE WHEN ("ADS"."Feature_72" IS NULL) THEN 0.08064277275460055 ELSE "ADS"."Feature_72" END AS impter_74, CASE WHEN ("ADS"."Feature_73" IS NULL) THEN -0.10603556755491854 ELSE "ADS"."Feature_73" END AS impter_75, CASE WHEN ("ADS"."Feature_74" IS NULL) THEN 0.09489100148295918 ELSE "ADS"."Feature_74" END AS impter_76, CASE WHEN ("ADS"."Feature_75" IS NULL) THEN -0.19664887110008689 ELSE "ADS"."Feature_75" END AS impter_77, CASE WHEN ("ADS"."Feature_76" IS NULL) THEN 0.11652643514949582 ELSE "ADS"."Feature_76" END AS impter_78, CASE WHEN ("ADS"."Feature_77" IS NULL) THEN 0.19340218348071325 ELSE "ADS"."Feature_77" END AS impter_79, CASE WHEN ("ADS"."Feature_78" IS NULL) THEN 0.11209709087907249 ELSE "ADS"."Feature_78" END AS impter_80, CASE WHEN ("ADS"."Feature_79" IS NULL) THEN 0.10709013621222807 ELSE "ADS"."Feature_79" END AS impter_81, CASE WHEN ("ADS"."Feature_80" IS NULL) THEN -0.01033042920922311 ELSE "ADS"."Feature_80" END AS impter_82, CASE WHEN ("ADS"."Feature_81" IS NULL) THEN 0.11026552104356717 ELSE "ADS"."Feature_81" END AS impter_83, CASE WHEN ("ADS"."Feature_82" IS NULL) THEN 0.01191634589453312 ELSE "ADS"."Feature_82" END AS impter_84, CASE WHEN ("ADS"."Feature_83" IS NULL) THEN 0.013369825695028714 ELSE "ADS"."Feature_83" END AS impter_85, CASE WHEN ("ADS"."Feature_84" IS NULL) THEN -0.1500512000702785 ELSE "ADS"."Feature_84" END AS impter_86, CASE WHEN ("ADS"."Feature_85" IS NULL) THEN -0.09022177579448487 ELSE "ADS"."Feature_85" END AS impter_87, CASE WHEN ("ADS"."Feature_86" IS NULL) THEN -0.16029625657228264 ELSE "ADS"."Feature_86" END AS impter_88, CASE WHEN ("ADS"."Feature_87" IS NULL) THEN -0.10127017293489289 ELSE "ADS"."Feature_87" END AS impter_89, CASE WHEN ("ADS"."Feature_88" IS NULL) THEN 0.3323543006292627 ELSE "ADS"."Feature_88" END AS impter_90, CASE WHEN ("ADS"."Feature_89" IS NULL) THEN 0.051731173060791114 ELSE "ADS"."Feature_89" END AS impter_91, CASE WHEN ("ADS"."Feature_90" IS NULL) THEN 0.1078879212202887 ELSE "ADS"."Feature_90" END AS impter_92, CASE WHEN ("ADS"."Feature_91" IS NULL) THEN 0.21454931874740585 ELSE "ADS"."Feature_91" END AS impter_93, CASE WHEN ("ADS"."Feature_92" IS NULL) THEN -0.16317337769942666 ELSE "ADS"."Feature_92" END AS impter_94, CASE WHEN ("ADS"."Feature_93" IS NULL) THEN -0.2242384076879583 ELSE "ADS"."Feature_93" END AS impter_95, CASE WHEN ("ADS"."Feature_94" IS NULL) THEN -0.27695847565296017 ELSE "ADS"."Feature_94" END AS impter_96, CASE WHEN ("ADS"."Feature_95" IS NULL) THEN 0.037863552135044866 ELSE "ADS"."Feature_95" END AS impter_97, CASE WHEN ("ADS"."Feature_96" IS NULL) THEN -0.02758852803141265 ELSE "ADS"."Feature_96" END AS impter_98, CASE WHEN ("ADS"."Feature_97" IS NULL) THEN 0.1052877881031243 ELSE "ADS"."Feature_97" END AS impter_99, CASE WHEN ("ADS"."Feature_98" IS NULL) THEN 0.06640703380221318 ELSE "ADS"."Feature_98" END AS impter_100, CASE WHEN ("ADS"."Feature_99" IS NULL) THEN 0.06569930995842384 ELSE "ADS"."Feature_99" END AS impter_101 
FROM "RandomReg_100" AS "ADS") AS "ADS_imp_1_OUT") AS "U"

-- Code For temporary table tmp_20180516114106_codegen_pl3sj0_ads_sca_2_out part 1. Create 


CREATE GLOBAL TEMPORARY TABLE tmp_20180516114106_codegen_pl3sj0_ads_sca_2_out  (
	"KEY" BIGINT, 
	scaler_2 DOUBLE PRECISION, 
	scaler_3 DOUBLE PRECISION, 
	scaler_4 DOUBLE PRECISION, 
	scaler_5 DOUBLE PRECISION, 
	scaler_6 DOUBLE PRECISION, 
	scaler_7 DOUBLE PRECISION, 
	scaler_8 DOUBLE PRECISION, 
	scaler_9 DOUBLE PRECISION, 
	scaler_10 DOUBLE PRECISION, 
	scaler_11 DOUBLE PRECISION, 
	scaler_12 DOUBLE PRECISION, 
	scaler_13 DOUBLE PRECISION, 
	scaler_14 DOUBLE PRECISION, 
	scaler_15 DOUBLE PRECISION, 
	scaler_16 DOUBLE PRECISION, 
	scaler_17 DOUBLE PRECISION, 
	scaler_18 DOUBLE PRECISION, 
	scaler_19 DOUBLE PRECISION, 
	scaler_20 DOUBLE PRECISION, 
	scaler_21 DOUBLE PRECISION, 
	scaler_22 DOUBLE PRECISION, 
	scaler_23 DOUBLE PRECISION, 
	scaler_24 DOUBLE PRECISION, 
	scaler_25 DOUBLE PRECISION, 
	scaler_26 DOUBLE PRECISION, 
	scaler_27 DOUBLE PRECISION, 
	scaler_28 DOUBLE PRECISION, 
	scaler_29 DOUBLE PRECISION, 
	scaler_30 DOUBLE PRECISION, 
	scaler_31 DOUBLE PRECISION, 
	scaler_32 DOUBLE PRECISION, 
	scaler_33 DOUBLE PRECISION, 
	scaler_34 DOUBLE PRECISION, 
	scaler_35 DOUBLE PRECISION, 
	scaler_36 DOUBLE PRECISION, 
	scaler_37 DOUBLE PRECISION, 
	scaler_38 DOUBLE PRECISION, 
	scaler_39 DOUBLE PRECISION, 
	scaler_40 DOUBLE PRECISION, 
	scaler_41 DOUBLE PRECISION, 
	scaler_42 DOUBLE PRECISION, 
	scaler_43 DOUBLE PRECISION, 
	scaler_44 DOUBLE PRECISION, 
	scaler_45 DOUBLE PRECISION, 
	scaler_46 DOUBLE PRECISION, 
	scaler_47 DOUBLE PRECISION, 
	scaler_48 DOUBLE PRECISION, 
	scaler_49 DOUBLE PRECISION, 
	scaler_50 DOUBLE PRECISION, 
	scaler_51 DOUBLE PRECISION, 
	scaler_52 DOUBLE PRECISION, 
	scaler_53 DOUBLE PRECISION, 
	scaler_54 DOUBLE PRECISION, 
	scaler_55 DOUBLE PRECISION, 
	scaler_56 DOUBLE PRECISION, 
	scaler_57 DOUBLE PRECISION, 
	scaler_58 DOUBLE PRECISION, 
	scaler_59 DOUBLE PRECISION, 
	scaler_60 DOUBLE PRECISION, 
	scaler_61 DOUBLE PRECISION, 
	scaler_62 DOUBLE PRECISION, 
	scaler_63 DOUBLE PRECISION, 
	scaler_64 DOUBLE PRECISION, 
	scaler_65 DOUBLE PRECISION, 
	scaler_66 DOUBLE PRECISION, 
	scaler_67 DOUBLE PRECISION, 
	scaler_68 DOUBLE PRECISION, 
	scaler_69 DOUBLE PRECISION, 
	scaler_70 DOUBLE PRECISION, 
	scaler_71 DOUBLE PRECISION, 
	scaler_72 DOUBLE PRECISION, 
	scaler_73 DOUBLE PRECISION, 
	scaler_74 DOUBLE PRECISION, 
	scaler_75 DOUBLE PRECISION, 
	scaler_76 DOUBLE PRECISION, 
	scaler_77 DOUBLE PRECISION, 
	scaler_78 DOUBLE PRECISION, 
	scaler_79 DOUBLE PRECISION, 
	scaler_80 DOUBLE PRECISION, 
	scaler_81 DOUBLE PRECISION, 
	scaler_82 DOUBLE PRECISION, 
	scaler_83 DOUBLE PRECISION, 
	scaler_84 DOUBLE PRECISION, 
	scaler_85 DOUBLE PRECISION, 
	scaler_86 DOUBLE PRECISION, 
	scaler_87 DOUBLE PRECISION, 
	scaler_88 DOUBLE PRECISION, 
	scaler_89 DOUBLE PRECISION, 
	scaler_90 DOUBLE PRECISION, 
	scaler_91 DOUBLE PRECISION, 
	scaler_92 DOUBLE PRECISION, 
	scaler_93 DOUBLE PRECISION, 
	scaler_94 DOUBLE PRECISION, 
	scaler_95 DOUBLE PRECISION, 
	scaler_96 DOUBLE PRECISION, 
	scaler_97 DOUBLE PRECISION, 
	scaler_98 DOUBLE PRECISION, 
	scaler_99 DOUBLE PRECISION, 
	scaler_100 DOUBLE PRECISION, 
	scaler_101 DOUBLE PRECISION
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table tmp_20180516114106_codegen_pl3sj0_ads_sca_2_out part 2. Populate

INSERT INTO tmp_20180516114106_codegen_pl3sj0_ads_sca_2_out ("KEY", scaler_2, scaler_3, scaler_4, scaler_5, scaler_6, scaler_7, scaler_8, scaler_9, scaler_10, scaler_11, scaler_12, scaler_13, scaler_14, scaler_15, scaler_16, scaler_17, scaler_18, scaler_19, scaler_20, scaler_21, scaler_22, scaler_23, scaler_24, scaler_25, scaler_26, scaler_27, scaler_28, scaler_29, scaler_30, scaler_31, scaler_32, scaler_33, scaler_34, scaler_35, scaler_36, scaler_37, scaler_38, scaler_39, scaler_40, scaler_41, scaler_42, scaler_43, scaler_44, scaler_45, scaler_46, scaler_47, scaler_48, scaler_49, scaler_50, scaler_51, scaler_52, scaler_53, scaler_54, scaler_55, scaler_56, scaler_57, scaler_58, scaler_59, scaler_60, scaler_61, scaler_62, scaler_63, scaler_64, scaler_65, scaler_66, scaler_67, scaler_68, scaler_69, scaler_70, scaler_71, scaler_72, scaler_73, scaler_74, scaler_75, scaler_76, scaler_77, scaler_78, scaler_79, scaler_80, scaler_81, scaler_82, scaler_83, scaler_84, scaler_85, scaler_86, scaler_87, scaler_88, scaler_89, scaler_90, scaler_91, scaler_92, scaler_93, scaler_94, scaler_95, scaler_96, scaler_97, scaler_98, scaler_99, scaler_100, scaler_101) SELECT "U"."KEY", "U".scaler_2, "U".scaler_3, "U".scaler_4, "U".scaler_5, "U".scaler_6, "U".scaler_7, "U".scaler_8, "U".scaler_9, "U".scaler_10, "U".scaler_11, "U".scaler_12, "U".scaler_13, "U".scaler_14, "U".scaler_15, "U".scaler_16, "U".scaler_17, "U".scaler_18, "U".scaler_19, "U".scaler_20, "U".scaler_21, "U".scaler_22, "U".scaler_23, "U".scaler_24, "U".scaler_25, "U".scaler_26, "U".scaler_27, "U".scaler_28, "U".scaler_29, "U".scaler_30, "U".scaler_31, "U".scaler_32, "U".scaler_33, "U".scaler_34, "U".scaler_35, "U".scaler_36, "U".scaler_37, "U".scaler_38, "U".scaler_39, "U".scaler_40, "U".scaler_41, "U".scaler_42, "U".scaler_43, "U".scaler_44, "U".scaler_45, "U".scaler_46, "U".scaler_47, "U".scaler_48, "U".scaler_49, "U".scaler_50, "U".scaler_51, "U".scaler_52, "U".scaler_53, "U".scaler_54, "U".scaler_55, "U".scaler_56, "U".scaler_57, "U".scaler_58, "U".scaler_59, "U".scaler_60, "U".scaler_61, "U".scaler_62, "U".scaler_63, "U".scaler_64, "U".scaler_65, "U".scaler_66, "U".scaler_67, "U".scaler_68, "U".scaler_69, "U".scaler_70, "U".scaler_71, "U".scaler_72, "U".scaler_73, "U".scaler_74, "U".scaler_75, "U".scaler_76, "U".scaler_77, "U".scaler_78, "U".scaler_79, "U".scaler_80, "U".scaler_81, "U".scaler_82, "U".scaler_83, "U".scaler_84, "U".scaler_85, "U".scaler_86, "U".scaler_87, "U".scaler_88, "U".scaler_89, "U".scaler_90, "U".scaler_91, "U".scaler_92, "U".scaler_93, "U".scaler_94, "U".scaler_95, "U".scaler_96, "U".scaler_97, "U".scaler_98, "U".scaler_99, "U".scaler_100, "U".scaler_101 
FROM (SELECT "ADS_sca_2_OUT"."KEY", "ADS_sca_2_OUT".scaler_2, "ADS_sca_2_OUT".scaler_3, "ADS_sca_2_OUT".scaler_4, "ADS_sca_2_OUT".scaler_5, "ADS_sca_2_OUT".scaler_6, "ADS_sca_2_OUT".scaler_7, "ADS_sca_2_OUT".scaler_8, "ADS_sca_2_OUT".scaler_9, "ADS_sca_2_OUT".scaler_10, "ADS_sca_2_OUT".scaler_11, "ADS_sca_2_OUT".scaler_12, "ADS_sca_2_OUT".scaler_13, "ADS_sca_2_OUT".scaler_14, "ADS_sca_2_OUT".scaler_15, "ADS_sca_2_OUT".scaler_16, "ADS_sca_2_OUT".scaler_17, "ADS_sca_2_OUT".scaler_18, "ADS_sca_2_OUT".scaler_19, "ADS_sca_2_OUT".scaler_20, "ADS_sca_2_OUT".scaler_21, "ADS_sca_2_OUT".scaler_22, "ADS_sca_2_OUT".scaler_23, "ADS_sca_2_OUT".scaler_24, "ADS_sca_2_OUT".scaler_25, "ADS_sca_2_OUT".scaler_26, "ADS_sca_2_OUT".scaler_27, "ADS_sca_2_OUT".scaler_28, "ADS_sca_2_OUT".scaler_29, "ADS_sca_2_OUT".scaler_30, "ADS_sca_2_OUT".scaler_31, "ADS_sca_2_OUT".scaler_32, "ADS_sca_2_OUT".scaler_33, "ADS_sca_2_OUT".scaler_34, "ADS_sca_2_OUT".scaler_35, "ADS_sca_2_OUT".scaler_36, "ADS_sca_2_OUT".scaler_37, "ADS_sca_2_OUT".scaler_38, "ADS_sca_2_OUT".scaler_39, "ADS_sca_2_OUT".scaler_40, "ADS_sca_2_OUT".scaler_41, "ADS_sca_2_OUT".scaler_42, "ADS_sca_2_OUT".scaler_43, "ADS_sca_2_OUT".scaler_44, "ADS_sca_2_OUT".scaler_45, "ADS_sca_2_OUT".scaler_46, "ADS_sca_2_OUT".scaler_47, "ADS_sca_2_OUT".scaler_48, "ADS_sca_2_OUT".scaler_49, "ADS_sca_2_OUT".scaler_50, "ADS_sca_2_OUT".scaler_51, "ADS_sca_2_OUT".scaler_52, "ADS_sca_2_OUT".scaler_53, "ADS_sca_2_OUT".scaler_54, "ADS_sca_2_OUT".scaler_55, "ADS_sca_2_OUT".scaler_56, "ADS_sca_2_OUT".scaler_57, "ADS_sca_2_OUT".scaler_58, "ADS_sca_2_OUT".scaler_59, "ADS_sca_2_OUT".scaler_60, "ADS_sca_2_OUT".scaler_61, "ADS_sca_2_OUT".scaler_62, "ADS_sca_2_OUT".scaler_63, "ADS_sca_2_OUT".scaler_64, "ADS_sca_2_OUT".scaler_65, "ADS_sca_2_OUT".scaler_66, "ADS_sca_2_OUT".scaler_67, "ADS_sca_2_OUT".scaler_68, "ADS_sca_2_OUT".scaler_69, "ADS_sca_2_OUT".scaler_70, "ADS_sca_2_OUT".scaler_71, "ADS_sca_2_OUT".scaler_72, "ADS_sca_2_OUT".scaler_73, "ADS_sca_2_OUT".scaler_74, "ADS_sca_2_OUT".scaler_75, "ADS_sca_2_OUT".scaler_76, "ADS_sca_2_OUT".scaler_77, "ADS_sca_2_OUT".scaler_78, "ADS_sca_2_OUT".scaler_79, "ADS_sca_2_OUT".scaler_80, "ADS_sca_2_OUT".scaler_81, "ADS_sca_2_OUT".scaler_82, "ADS_sca_2_OUT".scaler_83, "ADS_sca_2_OUT".scaler_84, "ADS_sca_2_OUT".scaler_85, "ADS_sca_2_OUT".scaler_86, "ADS_sca_2_OUT".scaler_87, "ADS_sca_2_OUT".scaler_88, "ADS_sca_2_OUT".scaler_89, "ADS_sca_2_OUT".scaler_90, "ADS_sca_2_OUT".scaler_91, "ADS_sca_2_OUT".scaler_92, "ADS_sca_2_OUT".scaler_93, "ADS_sca_2_OUT".scaler_94, "ADS_sca_2_OUT".scaler_95, "ADS_sca_2_OUT".scaler_96, "ADS_sca_2_OUT".scaler_97, "ADS_sca_2_OUT".scaler_98, "ADS_sca_2_OUT".scaler_99, "ADS_sca_2_OUT".scaler_100, "ADS_sca_2_OUT".scaler_101 
FROM (SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", (CAST("ADS_imp_1_OUT".impter_2 AS DOUBLE PRECISION) - CAST(-0.081280853001922 AS DOUBLE PRECISION)) / CAST(1.000040355930583 AS DOUBLE PRECISION) AS scaler_2, (CAST("ADS_imp_1_OUT".impter_3 AS DOUBLE PRECISION) - CAST(-0.134368051725347 AS DOUBLE PRECISION)) / CAST(0.88379049881845 AS DOUBLE PRECISION) AS scaler_3, (CAST("ADS_imp_1_OUT".impter_4 AS DOUBLE PRECISION) - CAST(-0.117133543926534 AS DOUBLE PRECISION)) / CAST(0.857056902289986 AS DOUBLE PRECISION) AS scaler_4, (CAST("ADS_imp_1_OUT".impter_5 AS DOUBLE PRECISION) - CAST(0.10314525691526 AS DOUBLE PRECISION)) / CAST(1.002917628353098 AS DOUBLE PRECISION) AS scaler_5, (CAST("ADS_imp_1_OUT".impter_6 AS DOUBLE PRECISION) - CAST(0.048598770616012 AS DOUBLE PRECISION)) / CAST(0.912896663253823 AS DOUBLE PRECISION) AS scaler_6, (CAST("ADS_imp_1_OUT".impter_7 AS DOUBLE PRECISION) - CAST(0.09985694677354 AS DOUBLE PRECISION)) / CAST(0.898709059445279 AS DOUBLE PRECISION) AS scaler_7, (CAST("ADS_imp_1_OUT".impter_8 AS DOUBLE PRECISION) - CAST(0.067277455656592 AS DOUBLE PRECISION)) / CAST(1.014244761151856 AS DOUBLE PRECISION) AS scaler_8, (CAST("ADS_imp_1_OUT".impter_9 AS DOUBLE PRECISION) - CAST(0.162238409284696 AS DOUBLE PRECISION)) / CAST(1.07476623075303 AS DOUBLE PRECISION) AS scaler_9, (CAST("ADS_imp_1_OUT".impter_10 AS DOUBLE PRECISION) - CAST(0.040693628526082 AS DOUBLE PRECISION)) / CAST(1.026267867232466 AS DOUBLE PRECISION) AS scaler_10, (CAST("ADS_imp_1_OUT".impter_11 AS DOUBLE PRECISION) - CAST(0.051659905088603 AS DOUBLE PRECISION)) / CAST(0.840243604374057 AS DOUBLE PRECISION) AS scaler_11, (CAST("ADS_imp_1_OUT".impter_12 AS DOUBLE PRECISION) - CAST(0.101790678392695 AS DOUBLE PRECISION)) / CAST(1.006824236393839 AS DOUBLE PRECISION) AS scaler_12, (CAST("ADS_imp_1_OUT".impter_13 AS DOUBLE PRECISION) - CAST(-0.175974736269828 AS DOUBLE PRECISION)) / CAST(0.924071076491545 AS DOUBLE PRECISION) AS scaler_13, (CAST("ADS_imp_1_OUT".impter_14 AS DOUBLE PRECISION) - CAST(-0.096751384940951 AS DOUBLE PRECISION)) / CAST(0.978379086977287 AS DOUBLE PRECISION) AS scaler_14, (CAST("ADS_imp_1_OUT".impter_15 AS DOUBLE PRECISION) - CAST(-0.046086569126347 AS DOUBLE PRECISION)) / CAST(0.978113535429249 AS DOUBLE PRECISION) AS scaler_15, (CAST("ADS_imp_1_OUT".impter_16 AS DOUBLE PRECISION) - CAST(0.101658522860857 AS DOUBLE PRECISION)) / CAST(0.901445697871173 AS DOUBLE PRECISION) AS scaler_16, (CAST("ADS_imp_1_OUT".impter_17 AS DOUBLE PRECISION) - CAST(0.11179903010835 AS DOUBLE PRECISION)) / CAST(0.977915503485674 AS DOUBLE PRECISION) AS scaler_17, (CAST("ADS_imp_1_OUT".impter_18 AS DOUBLE PRECISION) - CAST(-0.00611023335938 AS DOUBLE PRECISION)) / CAST(0.998102069762153 AS DOUBLE PRECISION) AS scaler_18, (CAST("ADS_imp_1_OUT".impter_19 AS DOUBLE PRECISION) - CAST(0.071447040689101 AS DOUBLE PRECISION)) / CAST(0.887481646517428 AS DOUBLE PRECISION) AS scaler_19, (CAST("ADS_imp_1_OUT".impter_20 AS DOUBLE PRECISION) - CAST(-0.088084586501184 AS DOUBLE PRECISION)) / CAST(0.839292570373647 AS DOUBLE PRECISION) AS scaler_20, (CAST("ADS_imp_1_OUT".impter_21 AS DOUBLE PRECISION) - CAST(-0.071827990008841 AS DOUBLE PRECISION)) / CAST(0.950741976577692 AS DOUBLE PRECISION) AS scaler_21, (CAST("ADS_imp_1_OUT".impter_22 AS DOUBLE PRECISION) - CAST(-0.072302008473104 AS DOUBLE PRECISION)) / CAST(1.066826998652098 AS DOUBLE PRECISION) AS scaler_22, (CAST("ADS_imp_1_OUT".impter_23 AS DOUBLE PRECISION) - CAST(0.028966930799442 AS DOUBLE PRECISION)) / CAST(0.990282372492378 AS DOUBLE PRECISION) AS scaler_23, (CAST("ADS_imp_1_OUT".impter_24 AS DOUBLE PRECISION) - CAST(0.213882176329976 AS DOUBLE PRECISION)) / CAST(0.862325396877822 AS DOUBLE PRECISION) AS scaler_24, (CAST("ADS_imp_1_OUT".impter_25 AS DOUBLE PRECISION) - CAST(-0.066692979194097 AS DOUBLE PRECISION)) / CAST(0.959877056408291 AS DOUBLE PRECISION) AS scaler_25, (CAST("ADS_imp_1_OUT".impter_26 AS DOUBLE PRECISION) - CAST(0.04615234854998 AS DOUBLE PRECISION)) / CAST(0.987850288584702 AS DOUBLE PRECISION) AS scaler_26, (CAST("ADS_imp_1_OUT".impter_27 AS DOUBLE PRECISION) - CAST(0.032495132227661 AS DOUBLE PRECISION)) / CAST(0.95839547402487 AS DOUBLE PRECISION) AS scaler_27, (CAST("ADS_imp_1_OUT".impter_28 AS DOUBLE PRECISION) - CAST(0.052242393306129 AS DOUBLE PRECISION)) / CAST(0.977110727504132 AS DOUBLE PRECISION) AS scaler_28, (CAST("ADS_imp_1_OUT".impter_29 AS DOUBLE PRECISION) - CAST(0.018745871966633 AS DOUBLE PRECISION)) / CAST(1.055719926075953 AS DOUBLE PRECISION) AS scaler_29, (CAST("ADS_imp_1_OUT".impter_30 AS DOUBLE PRECISION) - CAST(0.01555307922979 AS DOUBLE PRECISION)) / CAST(0.937648102202243 AS DOUBLE PRECISION) AS scaler_30, (CAST("ADS_imp_1_OUT".impter_31 AS DOUBLE PRECISION) - CAST(0.225815372990298 AS DOUBLE PRECISION)) / CAST(1.051359755695738 AS DOUBLE PRECISION) AS scaler_31, (CAST("ADS_imp_1_OUT".impter_32 AS DOUBLE PRECISION) - CAST(-0.169898577788383 AS DOUBLE PRECISION)) / CAST(1.05781688635719 AS DOUBLE PRECISION) AS scaler_32, (CAST("ADS_imp_1_OUT".impter_33 AS DOUBLE PRECISION) - CAST(0.036044309156992 AS DOUBLE PRECISION)) / CAST(0.92001065734356 AS DOUBLE PRECISION) AS scaler_33, (CAST("ADS_imp_1_OUT".impter_34 AS DOUBLE PRECISION) - CAST(-0.171993241626401 AS DOUBLE PRECISION)) / CAST(0.981480025143543 AS DOUBLE PRECISION) AS scaler_34, (CAST("ADS_imp_1_OUT".impter_35 AS DOUBLE PRECISION) - CAST(0.137814188878643 AS DOUBLE PRECISION)) / CAST(0.917701205116808 AS DOUBLE PRECISION) AS scaler_35, (CAST("ADS_imp_1_OUT".impter_36 AS DOUBLE PRECISION) - CAST(-0.002438210964217 AS DOUBLE PRECISION)) / CAST(0.894438011610502 AS DOUBLE PRECISION) AS scaler_36, (CAST("ADS_imp_1_OUT".impter_37 AS DOUBLE PRECISION) - CAST(0.060833749131451 AS DOUBLE PRECISION)) / CAST(0.93616510548821 AS DOUBLE PRECISION) AS scaler_37, (CAST("ADS_imp_1_OUT".impter_38 AS DOUBLE PRECISION) - CAST(-0.18905998689974 AS DOUBLE PRECISION)) / CAST(1.129039817580067 AS DOUBLE PRECISION) AS scaler_38, (CAST("ADS_imp_1_OUT".impter_39 AS DOUBLE PRECISION) - CAST(-0.096352192784653 AS DOUBLE PRECISION)) / CAST(1.070354625450551 AS DOUBLE PRECISION) AS scaler_39, (CAST("ADS_imp_1_OUT".impter_40 AS DOUBLE PRECISION) - CAST(-0.101606675073556 AS DOUBLE PRECISION)) / CAST(0.920646499226522 AS DOUBLE PRECISION) AS scaler_40, (CAST("ADS_imp_1_OUT".impter_41 AS DOUBLE PRECISION) - CAST(0.064752505415787 AS DOUBLE PRECISION)) / CAST(0.898610910619398 AS DOUBLE PRECISION) AS scaler_41, (CAST("ADS_imp_1_OUT".impter_42 AS DOUBLE PRECISION) - CAST(-0.302643050360516 AS DOUBLE PRECISION)) / CAST(1.130432405967796 AS DOUBLE PRECISION) AS scaler_42, (CAST("ADS_imp_1_OUT".impter_43 AS DOUBLE PRECISION) - CAST(-0.132641556818787 AS DOUBLE PRECISION)) / CAST(0.858526079684562 AS DOUBLE PRECISION) AS scaler_43, (CAST("ADS_imp_1_OUT".impter_44 AS DOUBLE PRECISION) - CAST(-0.133405478073332 AS DOUBLE PRECISION)) / CAST(0.962489523355931 AS DOUBLE PRECISION) AS scaler_44, (CAST("ADS_imp_1_OUT".impter_45 AS DOUBLE PRECISION) - CAST(-0.00114360097028 AS DOUBLE PRECISION)) / CAST(0.904937048405028 AS DOUBLE PRECISION) AS scaler_45, (CAST("ADS_imp_1_OUT".impter_46 AS DOUBLE PRECISION) - CAST(-0.053351579089233 AS DOUBLE PRECISION)) / CAST(1.061002645763127 AS DOUBLE PRECISION) AS scaler_46, (CAST("ADS_imp_1_OUT".impter_47 AS DOUBLE PRECISION) - CAST(0.017145370026871 AS DOUBLE PRECISION)) / CAST(0.955709785830083 AS DOUBLE PRECISION) AS scaler_47, (CAST("ADS_imp_1_OUT".impter_48 AS DOUBLE PRECISION) - CAST(-0.059059449572612 AS DOUBLE PRECISION)) / CAST(1.089482201259916 AS DOUBLE PRECISION) AS scaler_48, (CAST("ADS_imp_1_OUT".impter_49 AS DOUBLE PRECISION) - CAST(-0.09528879968184 AS DOUBLE PRECISION)) / CAST(0.857147595338279 AS DOUBLE PRECISION) AS scaler_49, (CAST("ADS_imp_1_OUT".impter_50 AS DOUBLE PRECISION) - CAST(-0.157813634633659 AS DOUBLE PRECISION)) / CAST(0.991963586751777 AS DOUBLE PRECISION) AS scaler_50, (CAST("ADS_imp_1_OUT".impter_51 AS DOUBLE PRECISION) - CAST(-0.237944333924534 AS DOUBLE PRECISION)) / CAST(1.00675031297216 AS DOUBLE PRECISION) AS scaler_51, (CAST("ADS_imp_1_OUT".impter_52 AS DOUBLE PRECISION) - CAST(0.138638506930322 AS DOUBLE PRECISION)) / CAST(1.027927338889394 AS DOUBLE PRECISION) AS scaler_52, (CAST("ADS_imp_1_OUT".impter_53 AS DOUBLE PRECISION) - CAST(-0.016996219914929 AS DOUBLE PRECISION)) / CAST(0.974408927553762 AS DOUBLE PRECISION) AS scaler_53, (CAST("ADS_imp_1_OUT".impter_54 AS DOUBLE PRECISION) - CAST(0.197014900037543 AS DOUBLE PRECISION)) / CAST(0.868492071165936 AS DOUBLE PRECISION) AS scaler_54, (CAST("ADS_imp_1_OUT".impter_55 AS DOUBLE PRECISION) - CAST(0.051629904732386 AS DOUBLE PRECISION)) / CAST(0.894397475223407 AS DOUBLE PRECISION) AS scaler_55, (CAST("ADS_imp_1_OUT".impter_56 AS DOUBLE PRECISION) - CAST(-0.134530020986626 AS DOUBLE PRECISION)) / CAST(0.963483965931841 AS DOUBLE PRECISION) AS scaler_56, (CAST("ADS_imp_1_OUT".impter_57 AS DOUBLE PRECISION) - CAST(0.147893701045596 AS DOUBLE PRECISION)) / CAST(1.061539962618542 AS DOUBLE PRECISION) AS scaler_57, (CAST("ADS_imp_1_OUT".impter_58 AS DOUBLE PRECISION) - CAST(-0.013142759438358 AS DOUBLE PRECISION)) / CAST(0.97720152784957 AS DOUBLE PRECISION) AS scaler_58, (CAST("ADS_imp_1_OUT".impter_59 AS DOUBLE PRECISION) - CAST(-0.092991629946579 AS DOUBLE PRECISION)) / CAST(1.007175843550957 AS DOUBLE PRECISION) AS scaler_59, (CAST("ADS_imp_1_OUT".impter_60 AS DOUBLE PRECISION) - CAST(-0.246894927689751 AS DOUBLE PRECISION)) / CAST(0.923735412804884 AS DOUBLE PRECISION) AS scaler_60, (CAST("ADS_imp_1_OUT".impter_61 AS DOUBLE PRECISION) - CAST(0.134997271082874 AS DOUBLE PRECISION)) / CAST(1.101584368817714 AS DOUBLE PRECISION) AS scaler_61, (CAST("ADS_imp_1_OUT".impter_62 AS DOUBLE PRECISION) - CAST(0.002554400550773 AS DOUBLE PRECISION)) / CAST(1.066445163940497 AS DOUBLE PRECISION) AS scaler_62, (CAST("ADS_imp_1_OUT".impter_63 AS DOUBLE PRECISION) - CAST(0.125273686634653 AS DOUBLE PRECISION)) / CAST(1.103567722191844 AS DOUBLE PRECISION) AS scaler_63, (CAST("ADS_imp_1_OUT".impter_64 AS DOUBLE PRECISION) - CAST(-0.037399622960559 AS DOUBLE PRECISION)) / CAST(1.032169444422347 AS DOUBLE PRECISION) AS scaler_64, (CAST("ADS_imp_1_OUT".impter_65 AS DOUBLE PRECISION) - CAST(-0.029988695801779 AS DOUBLE PRECISION)) / CAST(1.071490480050808 AS DOUBLE PRECISION) AS scaler_65, (CAST("ADS_imp_1_OUT".impter_66 AS DOUBLE PRECISION) - CAST(-0.042860885168713 AS DOUBLE PRECISION)) / CAST(1.190000747288484 AS DOUBLE PRECISION) AS scaler_66, (CAST("ADS_imp_1_OUT".impter_67 AS DOUBLE PRECISION) - CAST(-0.143834700665143 AS DOUBLE PRECISION)) / CAST(0.983863253624336 AS DOUBLE PRECISION) AS scaler_67, (CAST("ADS_imp_1_OUT".impter_68 AS DOUBLE PRECISION) - CAST(-0.052697939108892 AS DOUBLE PRECISION)) / CAST(1.133004109638514 AS DOUBLE PRECISION) AS scaler_68, (CAST("ADS_imp_1_OUT".impter_69 AS DOUBLE PRECISION) - CAST(0.029267940271278 AS DOUBLE PRECISION)) / CAST(0.950591188381841 AS DOUBLE PRECISION) AS scaler_69, (CAST("ADS_imp_1_OUT".impter_70 AS DOUBLE PRECISION) - CAST(0.104310808883224 AS DOUBLE PRECISION)) / CAST(0.912489280474082 AS DOUBLE PRECISION) AS scaler_70, (CAST("ADS_imp_1_OUT".impter_71 AS DOUBLE PRECISION) - CAST(-0.096196874330471 AS DOUBLE PRECISION)) / CAST(1.043526374855211 AS DOUBLE PRECISION) AS scaler_71, (CAST("ADS_imp_1_OUT".impter_72 AS DOUBLE PRECISION) - CAST(0.006733319298332 AS DOUBLE PRECISION)) / CAST(1.068622613004622 AS DOUBLE PRECISION) AS scaler_72, (CAST("ADS_imp_1_OUT".impter_73 AS DOUBLE PRECISION) - CAST(0.032896659353677 AS DOUBLE PRECISION)) / CAST(0.859185924601115 AS DOUBLE PRECISION) AS scaler_73, (CAST("ADS_imp_1_OUT".impter_74 AS DOUBLE PRECISION) - CAST(0.080642772754601 AS DOUBLE PRECISION)) / CAST(1.031072803981909 AS DOUBLE PRECISION) AS scaler_74, (CAST("ADS_imp_1_OUT".impter_75 AS DOUBLE PRECISION) - CAST(-0.106035567554919 AS DOUBLE PRECISION)) / CAST(0.975764449180012 AS DOUBLE PRECISION) AS scaler_75, (CAST("ADS_imp_1_OUT".impter_76 AS DOUBLE PRECISION) - CAST(0.094891001482959 AS DOUBLE PRECISION)) / CAST(0.908286175367262 AS DOUBLE PRECISION) AS scaler_76, (CAST("ADS_imp_1_OUT".impter_77 AS DOUBLE PRECISION) - CAST(-0.196648871100087 AS DOUBLE PRECISION)) / CAST(0.957009111150323 AS DOUBLE PRECISION) AS scaler_77, (CAST("ADS_imp_1_OUT".impter_78 AS DOUBLE PRECISION) - CAST(0.116526435149496 AS DOUBLE PRECISION)) / CAST(0.89069936450609 AS DOUBLE PRECISION) AS scaler_78, (CAST("ADS_imp_1_OUT".impter_79 AS DOUBLE PRECISION) - CAST(0.193402183480713 AS DOUBLE PRECISION)) / CAST(1.015190635438741 AS DOUBLE PRECISION) AS scaler_79, (CAST("ADS_imp_1_OUT".impter_80 AS DOUBLE PRECISION) - CAST(0.112097090879072 AS DOUBLE PRECISION)) / CAST(1.000594132902615 AS DOUBLE PRECISION) AS scaler_80, (CAST("ADS_imp_1_OUT".impter_81 AS DOUBLE PRECISION) - CAST(0.107090136212228 AS DOUBLE PRECISION)) / CAST(0.998199099540584 AS DOUBLE PRECISION) AS scaler_81, (CAST("ADS_imp_1_OUT".impter_82 AS DOUBLE PRECISION) - CAST(-0.010330429209223 AS DOUBLE PRECISION)) / CAST(1.12613406870396 AS DOUBLE PRECISION) AS scaler_82, (CAST("ADS_imp_1_OUT".impter_83 AS DOUBLE PRECISION) - CAST(0.110265521043567 AS DOUBLE PRECISION)) / CAST(1.020363159579656 AS DOUBLE PRECISION) AS scaler_83, (CAST("ADS_imp_1_OUT".impter_84 AS DOUBLE PRECISION) - CAST(0.011916345894533 AS DOUBLE PRECISION)) / CAST(0.952019831589064 AS DOUBLE PRECISION) AS scaler_84, (CAST("ADS_imp_1_OUT".impter_85 AS DOUBLE PRECISION) - CAST(0.013369825695029 AS DOUBLE PRECISION)) / CAST(1.053965047688606 AS DOUBLE PRECISION) AS scaler_85, (CAST("ADS_imp_1_OUT".impter_86 AS DOUBLE PRECISION) - CAST(-0.150051200070278 AS DOUBLE PRECISION)) / CAST(0.998199382399194 AS DOUBLE PRECISION) AS scaler_86, (CAST("ADS_imp_1_OUT".impter_87 AS DOUBLE PRECISION) - CAST(-0.090221775794485 AS DOUBLE PRECISION)) / CAST(0.911905498566136 AS DOUBLE PRECISION) AS scaler_87, (CAST("ADS_imp_1_OUT".impter_88 AS DOUBLE PRECISION) - CAST(-0.160296256572283 AS DOUBLE PRECISION)) / CAST(1.053061144394669 AS DOUBLE PRECISION) AS scaler_88, (CAST("ADS_imp_1_OUT".impter_89 AS DOUBLE PRECISION) - CAST(-0.101270172934893 AS DOUBLE PRECISION)) / CAST(1.067308816233493 AS DOUBLE PRECISION) AS scaler_89, (CAST("ADS_imp_1_OUT".impter_90 AS DOUBLE PRECISION) - CAST(0.332354300629263 AS DOUBLE PRECISION)) / CAST(0.851739860879603 AS DOUBLE PRECISION) AS scaler_90, (CAST("ADS_imp_1_OUT".impter_91 AS DOUBLE PRECISION) - CAST(0.051731173060791 AS DOUBLE PRECISION)) / CAST(0.903657197208338 AS DOUBLE PRECISION) AS scaler_91, (CAST("ADS_imp_1_OUT".impter_92 AS DOUBLE PRECISION) - CAST(0.107887921220289 AS DOUBLE PRECISION)) / CAST(0.967916174644202 AS DOUBLE PRECISION) AS scaler_92, (CAST("ADS_imp_1_OUT".impter_93 AS DOUBLE PRECISION) - CAST(0.214549318747406 AS DOUBLE PRECISION)) / CAST(0.905927839774967 AS DOUBLE PRECISION) AS scaler_93, (CAST("ADS_imp_1_OUT".impter_94 AS DOUBLE PRECISION) - CAST(-0.163173377699427 AS DOUBLE PRECISION)) / CAST(1.097718994991099 AS DOUBLE PRECISION) AS scaler_94, (CAST("ADS_imp_1_OUT".impter_95 AS DOUBLE PRECISION) - CAST(-0.224238407687958 AS DOUBLE PRECISION)) / CAST(0.785962436802727 AS DOUBLE PRECISION) AS scaler_95, (CAST("ADS_imp_1_OUT".impter_96 AS DOUBLE PRECISION) - CAST(-0.27695847565296 AS DOUBLE PRECISION)) / CAST(1.000759742410346 AS DOUBLE PRECISION) AS scaler_96, (CAST("ADS_imp_1_OUT".impter_97 AS DOUBLE PRECISION) - CAST(0.037863552135045 AS DOUBLE PRECISION)) / CAST(0.961749101485564 AS DOUBLE PRECISION) AS scaler_97, (CAST("ADS_imp_1_OUT".impter_98 AS DOUBLE PRECISION) - CAST(-0.027588528031413 AS DOUBLE PRECISION)) / CAST(0.888578840707713 AS DOUBLE PRECISION) AS scaler_98, (CAST("ADS_imp_1_OUT".impter_99 AS DOUBLE PRECISION) - CAST(0.105287788103124 AS DOUBLE PRECISION)) / CAST(0.988117943764986 AS DOUBLE PRECISION) AS scaler_99, (CAST("ADS_imp_1_OUT".impter_100 AS DOUBLE PRECISION) - CAST(0.066407033802213 AS DOUBLE PRECISION)) / CAST(0.89313215245604 AS DOUBLE PRECISION) AS scaler_100, (CAST("ADS_imp_1_OUT".impter_101 AS DOUBLE PRECISION) - CAST(0.065699309958424 AS DOUBLE PRECISION)) / CAST(0.936700135182471 AS DOUBLE PRECISION) AS scaler_101 
FROM tmp_20180516114106_codegen_fdkq3x_ads_imp_1_out AS "ADS_imp_1_OUT") AS "ADS_sca_2_OUT") AS "U"

-- Code For temporary table tmp_20180516114106_codegen_bplamk_bag_b0 part 1. Create 


CREATE GLOBAL TEMPORARY TABLE tmp_20180516114106_codegen_bplamk_bag_b0  (
	"KEY" BIGINT, 
	"Estimator" DOUBLE PRECISION
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table tmp_20180516114106_codegen_bplamk_bag_b0 part 2. Populate

INSERT INTO tmp_20180516114106_codegen_bplamk_bag_b0 ("KEY", "Estimator") SELECT "U"."KEY", "U"."Estimator" 
FROM (WITH "DT_node_lookup" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_82 <= CAST(0.135885089635849 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_97 <= CAST(-0.348418980836868 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_43 <= CAST(-0.092288047075272 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= CAST(-1.317683935165405 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_50 <= CAST(-0.602954149246216 AS DOUBLE PRECISION)) THEN 5 ELSE 6 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_40 <= CAST(-0.415000379085541 AS DOUBLE PRECISION)) THEN 8 ELSE 9 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_92 <= CAST(-0.432160884141922 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_34 <= CAST(1.099859356880188 AS DOUBLE PRECISION)) THEN 12 ELSE 13 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_35 <= CAST(-0.93640923500061 AS DOUBLE PRECISION)) THEN 15 ELSE 16 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_86 <= CAST(0.184103474020958 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_40 <= CAST(-0.116297841072083 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_15 <= CAST(0.760758221149445 AS DOUBLE PRECISION)) THEN 20 ELSE 21 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_42 <= CAST(1.542219638824463 AS DOUBLE PRECISION)) THEN 23 ELSE 24 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_47 <= CAST(0.703337669372559 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_59 <= CAST(1.057080864906311 AS DOUBLE PRECISION)) THEN 27 ELSE 28 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_44 <= CAST(0.216818138957024 AS DOUBLE PRECISION)) THEN 30 ELSE 31 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_19 <= CAST(-0.329835176467896 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_101 <= CAST(0.366350501775742 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_70 <= CAST(-0.375320076942444 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= CAST(0.194088071584702 AS DOUBLE PRECISION)) THEN 36 ELSE 37 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= CAST(1.552549123764038 AS DOUBLE PRECISION)) THEN 39 ELSE 40 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_57 <= CAST(-0.253916561603546 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_83 <= CAST(1.138396263122558 AS DOUBLE PRECISION)) THEN 43 ELSE 44 END ELSE 45 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_34 <= CAST(-0.847743153572082 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_35 <= CAST(1.646846175193786 AS DOUBLE PRECISION)) THEN 48 ELSE 49 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_83 <= CAST(0.795784831047058 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_93 <= CAST(0.954957902431488 AS DOUBLE PRECISION)) THEN 52 ELSE 53 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_42 <= CAST(0.177779734134674 AS DOUBLE PRECISION)) THEN 55 ELSE 56 END END END END END AS node_id_2 
FROM tmp_20180516114106_codegen_pl3sj0_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS DOUBLE PRECISION) AS "E" 
FROM (SELECT 5 AS nid, CAST(-436.89308608869476 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 6 AS nid, CAST(-430.7322420182495 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 8 AS nid, CAST(-342.40540390047966 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 9 AS nid, CAST(-289.0914798442405 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 12 AS nid, CAST(-197.78121613409627 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 13 AS nid, CAST(-200.3373934821458 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 15 AS nid, CAST(-167.53786194153668 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 16 AS nid, CAST(-172.78010697974267 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 20 AS nid, CAST(17.269204342160073 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 21 AS nid, CAST(-52.19608399259265 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 23 AS nid, CAST(109.6215604796885 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 24 AS nid, CAST(183.77184322024888 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 27 AS nid, CAST(-87.98768967181586 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 28 AS nid, CAST(-146.53732849176905 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 30 AS nid, CAST(-290.52672487497273 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 31 AS nid, CAST(-207.8249772062679 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 36 AS nid, CAST(-3.859069494267214 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 37 AS nid, CAST(-10.715443370853677 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 39 AS nid, CAST(-78.19974088289858 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 40 AS nid, CAST(-107.89147253045782 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 43 AS nid, CAST(122.37894790928654 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 44 AS nid, CAST(128.74971924769997 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 45 AS nid, CAST(94.43377409338842 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 48 AS nid, CAST(419.8117904787066 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 49 AS nid, CAST(294.7646845425511 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 52 AS nid, CAST(175.13630623402935 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 53 AS nid, CAST(242.13277188530355 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 55 AS nid, CAST(130.61554227069345 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 56 AS nid, CAST(38.19976422974275 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte) AS "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".nid AS nid, "DT_node_data"."E" AS "E" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".nid), 
"BAG_Model_0" AS 
(SELECT "DT_Output"."KEY" AS "KEY", "DT_Output"."E" AS "Estimator" 
FROM "DT_Output"), 
"DT_node_lookup_1" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_43 <= CAST(-0.241904437541962 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_65 <= CAST(0.334051728248596 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_82 <= CAST(0.016605645418167 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_51 <= CAST(0.671036124229431 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_48 <= CAST(-0.132389664649963 AS DOUBLE PRECISION)) THEN 5 ELSE 6 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_92 <= CAST(-0.72048556804657 AS DOUBLE PRECISION)) THEN 8 ELSE 9 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_43 <= CAST(-1.066765785217285 AS DOUBLE PRECISION)) THEN 11 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_73 <= CAST(-1.112401485443115 AS DOUBLE PRECISION)) THEN 13 ELSE 14 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_90 <= CAST(0.158498242497444 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_82 <= CAST(-0.3875652551651 AS DOUBLE PRECISION)) THEN 17 ELSE 18 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_38 <= CAST(0.282697051763535 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_13 <= CAST(1.151238083839416 AS DOUBLE PRECISION)) THEN 21 ELSE 22 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_29 <= CAST(-0.089136354625225 AS DOUBLE PRECISION)) THEN 24 ELSE 25 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_98 <= CAST(0.063573285937309 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_95 <= CAST(1.359060525894165 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_12 <= CAST(0.341800630092621 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_57 <= CAST(-0.255055069923401 AS DOUBLE PRECISION)) THEN 30 ELSE 31 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_74 <= CAST(1.039415121078491 AS DOUBLE PRECISION)) THEN 33 ELSE 34 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_24 <= CAST(-0.372345626354218 AS DOUBLE PRECISION)) THEN 36 ELSE 37 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_69 <= CAST(0.108885027468204 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_23 <= CAST(0.269056469202042 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_58 <= CAST(0.091646060347557 AS DOUBLE PRECISION)) THEN 41 ELSE 42 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_50 <= CAST(0.514678299427032 AS DOUBLE PRECISION)) THEN 44 ELSE 45 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_93 <= CAST(1.408987760543823 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_34 <= CAST(0.972101151943207 AS DOUBLE PRECISION)) THEN 48 ELSE 49 END ELSE 50 END END END END AS node_id_2 
FROM tmp_20180516114106_codegen_pl3sj0_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte_1 AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data_1" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS DOUBLE PRECISION) AS "E" 
FROM (SELECT 5 AS nid, CAST(-277.9943003280067 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_1 UNION ALL SELECT 6 AS nid, CAST(-317.7622966546957 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_1 UNION ALL SELECT 8 AS nid, CAST(-436.89308608869476 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_1 UNION ALL SELECT 9 AS nid, CAST(-454.8215873712685 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_1 UNION ALL SELECT 11 AS nid, CAST(48.423335696929506 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_1 UNION ALL SELECT 13 AS nid, CAST(-202.60833883427068 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_1 UNION ALL SELECT 14 AS nid, CAST(-93.83764625824504 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_1 UNION ALL SELECT 17 AS nid, CAST(-146.53732849176905 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_1 UNION ALL SELECT 18 AS nid, CAST(-87.98512254511704 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_1 UNION ALL SELECT 21 AS nid, CAST(38.19976422974275 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_1 UNION ALL SELECT 22 AS nid, CAST(94.43377409338842 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_1 UNION ALL SELECT 24 AS nid, CAST(215.90083761986222 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_1 UNION ALL SELECT 25 AS nid, CAST(233.33694106574703 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_1 UNION ALL SELECT 30 AS nid, CAST(260.903930477948 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_1 UNION ALL SELECT 31 AS nid, CAST(197.52771586544975 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_1 UNION ALL SELECT 33 AS nid, CAST(143.79050379619025 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_1 UNION ALL SELECT 34 AS nid, CAST(39.44300011869663 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_1 UNION ALL SELECT 36 AS nid, CAST(419.8117904787066 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_1 UNION ALL SELECT 37 AS nid, CAST(294.7646845425511 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_1 UNION ALL SELECT 41 AS nid, CAST(288.0094422410094 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_1 UNION ALL SELECT 42 AS nid, CAST(195.39419395402132 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_1 UNION ALL SELECT 44 AS nid, CAST(75.60702200307296 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_1 UNION ALL SELECT 45 AS nid, CAST(118.41659006827764 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_1 UNION ALL SELECT 48 AS nid, CAST(-34.42289055269504 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_1 UNION ALL SELECT 49 AS nid, CAST(75.33652615813574 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_1 UNION ALL SELECT 50 AS nid, CAST(-140.57351311758325 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_1) AS "Values"), 
"DT_Output_1" AS 
(SELECT "DT_node_lookup_1"."KEY" AS "KEY", "DT_node_lookup_1".node_id_2 AS node_id_2, "DT_node_data_1".nid AS nid, "DT_node_data_1"."E" AS "E" 
FROM "DT_node_lookup_1" LEFT OUTER JOIN "DT_node_data_1" ON "DT_node_lookup_1".node_id_2 = "DT_node_data_1".nid), 
"BAG_Model_1" AS 
(SELECT "DT_Output_1"."KEY" AS "KEY", "DT_Output_1"."E" AS "Estimator" 
FROM "DT_Output_1"), 
"DT_node_lookup_2" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_43 <= CAST(-0.638442516326904 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_69 <= CAST(-0.363325655460358 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_88 <= CAST(-0.13700932264328 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_71 <= CAST(0.453428566455841 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_35 <= CAST(0.422123908996582 AS DOUBLE PRECISION)) THEN 5 ELSE 6 END ELSE 7 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_96 <= CAST(0.348998367786408 AS DOUBLE PRECISION)) THEN 9 ELSE 10 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_61 <= CAST(0.108544558286667 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= CAST(0.641231179237366 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_100 <= CAST(0.344903230667114 AS DOUBLE PRECISION)) THEN 14 ELSE 15 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_62 <= CAST(-0.634620547294617 AS DOUBLE PRECISION)) THEN 17 ELSE 18 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_68 <= CAST(0.130600273609161 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_64 <= CAST(0.61138105392456 AS DOUBLE PRECISION)) THEN 21 ELSE 22 END ELSE 23 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_41 <= CAST(0.336081475019455 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_91 <= CAST(-0.478077828884125 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_14 <= CAST(0.845025300979614 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= CAST(0.360248804092407 AS DOUBLE PRECISION)) THEN 28 ELSE 29 END ELSE 30 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_60 <= CAST(0.206202313303947 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= CAST(-0.511988997459412 AS DOUBLE PRECISION)) THEN 33 ELSE 34 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_99 <= CAST(-0.889742136001587 AS DOUBLE PRECISION)) THEN 36 ELSE 37 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= CAST(-0.139886051416397 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_61 <= CAST(-0.03917171806097 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= CAST(-0.187423139810562 AS DOUBLE PRECISION)) THEN 41 ELSE 42 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_37 <= CAST(0.5639608502388 AS DOUBLE PRECISION)) THEN 44 ELSE 45 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_93 <= CAST(-0.438172161579132 AS DOUBLE PRECISION)) THEN 47 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_40 <= CAST(-0.735612452030182 AS DOUBLE PRECISION)) THEN 49 ELSE 50 END END END END END AS node_id_2 
FROM tmp_20180516114106_codegen_pl3sj0_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte_2 AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data_2" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS DOUBLE PRECISION) AS "E" 
FROM (SELECT 5 AS nid, CAST(-87.98512254511704 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_2 UNION ALL SELECT 6 AS nid, CAST(-80.78526024187205 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_2 UNION ALL SELECT 7 AS nid, CAST(48.423335696929506 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_2 UNION ALL SELECT 9 AS nid, CAST(-146.53732849176905 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_2 UNION ALL SELECT 10 AS nid, CAST(-190.64702660055804 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_2 UNION ALL SELECT 14 AS nid, CAST(-309.6370714844199 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_2 UNION ALL SELECT 15 AS nid, CAST(-291.40483320617284 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_2 UNION ALL SELECT 17 AS nid, CAST(-338.5499431552182 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_2 UNION ALL SELECT 18 AS nid, CAST(-327.50301874204285 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_2 UNION ALL SELECT 21 AS nid, CAST(-234.4658092919816 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_2 UNION ALL SELECT 22 AS nid, CAST(-234.79191600815204 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_2 UNION ALL SELECT 23 AS nid, CAST(-207.8249772062679 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_2 UNION ALL SELECT 28 AS nid, CAST(-202.60833883427068 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_2 UNION ALL SELECT 29 AS nid, CAST(-196.1762239786283 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_2 UNION ALL SELECT 30 AS nid, CAST(-172.78010697974267 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_2 UNION ALL SELECT 33 AS nid, CAST(172.24630421448748 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_2 UNION ALL SELECT 34 AS nid, CAST(62.959830768471186 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_2 UNION ALL SELECT 36 AS nid, CAST(-107.37554008844234 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_2 UNION ALL SELECT 37 AS nid, CAST(-10.699448838632264 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_2 UNION ALL SELECT 41 AS nid, CAST(232.57313239110618 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_2 UNION ALL SELECT 42 AS nid, CAST(284.62467006023536 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_2 UNION ALL SELECT 44 AS nid, CAST(133.77117132652984 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_2 UNION ALL SELECT 45 AS nid, CAST(174.05588768325575 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_2 UNION ALL SELECT 47 AS nid, CAST(-51.54063841079579 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_2 UNION ALL SELECT 49 AS nid, CAST(195.39419395402132 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_2 UNION ALL SELECT 50 AS nid, CAST(106.33605558789863 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_2) AS "Values"), 
"DT_Output_2" AS 
(SELECT "DT_node_lookup_2"."KEY" AS "KEY", "DT_node_lookup_2".node_id_2 AS node_id_2, "DT_node_data_2".nid AS nid, "DT_node_data_2"."E" AS "E" 
FROM "DT_node_lookup_2" LEFT OUTER JOIN "DT_node_data_2" ON "DT_node_lookup_2".node_id_2 = "DT_node_data_2".nid), 
"BAG_Model_2" AS 
(SELECT "DT_Output_2"."KEY" AS "KEY", "DT_Output_2"."E" AS "Estimator" 
FROM "DT_Output_2"), 
"DT_node_lookup_3" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_82 <= CAST(-0.590545773506164 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_97 <= CAST(-0.281657636165619 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_70 <= CAST(0.327038049697876 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_15 <= CAST(-0.04730811715126 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_19 <= CAST(-0.483690142631531 AS DOUBLE PRECISION)) THEN 5 ELSE 6 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_34 <= CAST(0.27691262960434 AS DOUBLE PRECISION)) THEN 8 ELSE 9 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_32 <= CAST(1.159212231636047 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_42 <= CAST(0.821382522583008 AS DOUBLE PRECISION)) THEN 12 ELSE 13 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_49 <= CAST(1.484280347824097 AS DOUBLE PRECISION)) THEN 15 ELSE 16 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_88 <= CAST(-0.006754904985428 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= CAST(-0.642590284347534 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_70 <= CAST(0.005364324897528 AS DOUBLE PRECISION)) THEN 20 ELSE 21 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_99 <= CAST(0.651664972305298 AS DOUBLE PRECISION)) THEN 23 ELSE 24 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_66 <= CAST(0.97507917881012 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_25 <= CAST(-0.76074081659317 AS DOUBLE PRECISION)) THEN 27 ELSE 28 END ELSE 29 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_94 <= CAST(-0.76216185092926 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_15 <= CAST(0.264705270528793 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= CAST(-0.1507258862257 AS DOUBLE PRECISION)) THEN 33 ELSE 34 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= CAST(-0.572629928588867 AS DOUBLE PRECISION)) THEN 36 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_44 <= CAST(1.431268930435181 AS DOUBLE PRECISION)) THEN 38 ELSE 39 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_94 <= CAST(1.434928894042969 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_44 <= CAST(1.313400030136108 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_15 <= CAST(0.813595652580261 AS DOUBLE PRECISION)) THEN 43 ELSE 44 END ELSE 45 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_84 <= CAST(-0.434136152267456 AS DOUBLE PRECISION)) THEN 47 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= CAST(-0.675094127655029 AS DOUBLE PRECISION)) THEN 49 ELSE 50 END END END END END AS node_id_2 
FROM tmp_20180516114106_codegen_pl3sj0_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte_3 AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data_3" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS DOUBLE PRECISION) AS "E" 
FROM (SELECT 5 AS nid, CAST(-301.31124105639145 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_3 UNION ALL SELECT 6 AS nid, CAST(-352.11792714459403 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_3 UNION ALL SELECT 8 AS nid, CAST(-430.7322420182495 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_3 UNION ALL SELECT 9 AS nid, CAST(-436.89308608869476 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_3 UNION ALL SELECT 12 AS nid, CAST(-197.24621874894024 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_3 UNION ALL SELECT 13 AS nid, CAST(-200.33739348214584 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_3 UNION ALL SELECT 15 AS nid, CAST(-234.4658092919816 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_3 UNION ALL SELECT 16 AS nid, CAST(-257.9792248911822 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_3 UNION ALL SELECT 20 AS nid, CAST(75.60702200307296 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_3 UNION ALL SELECT 21 AS nid, CAST(75.33652615813574 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_3 UNION ALL SELECT 23 AS nid, CAST(183.77184322024888 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_3 UNION ALL SELECT 24 AS nid, CAST(215.90083761986222 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_3 UNION ALL SELECT 27 AS nid, CAST(-75.11307978566836 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_3 UNION ALL SELECT 28 AS nid, CAST(-176.70096647455082 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_3 UNION ALL SELECT 29 AS nid, CAST(114.45423222726873 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_3 UNION ALL SELECT 33 AS nid, CAST(-327.50301874204285 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_3 UNION ALL SELECT 34 AS nid, CAST(-172.78010697974267 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_3 UNION ALL SELECT 36 AS nid, CAST(-79.28963380412186 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_3 UNION ALL SELECT 38 AS nid, CAST(-10.715443370853677 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_3 UNION ALL SELECT 39 AS nid, CAST(38.19976422974275 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_3 UNION ALL SELECT 43 AS nid, CAST(171.2173303723761 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_3 UNION ALL SELECT 44 AS nid, CAST(286.0386139327542 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_3 UNION ALL SELECT 45 AS nid, CAST(-140.57351311758325 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_3 UNION ALL SELECT 47 AS nid, CAST(-76.8627548707201 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_3 UNION ALL SELECT 49 AS nid, CAST(-51.54063841079579 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_3 UNION ALL SELECT 50 AS nid, CAST(-54.81786631978007 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_3) AS "Values"), 
"DT_Output_3" AS 
(SELECT "DT_node_lookup_3"."KEY" AS "KEY", "DT_node_lookup_3".node_id_2 AS node_id_2, "DT_node_data_3".nid AS nid, "DT_node_data_3"."E" AS "E" 
FROM "DT_node_lookup_3" LEFT OUTER JOIN "DT_node_data_3" ON "DT_node_lookup_3".node_id_2 = "DT_node_data_3".nid), 
"BAG_Model_3" AS 
(SELECT "DT_Output_3"."KEY" AS "KEY", "DT_Output_3"."E" AS "Estimator" 
FROM "DT_Output_3"), 
"DT_node_lookup_4" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_82 <= CAST(-0.259913891553879 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_57 <= CAST(0.964031994342804 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_43 <= CAST(-0.155562564730644 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_45 <= CAST(-1.915239810943604 AS DOUBLE PRECISION)) THEN 4 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_94 <= CAST(0.1511060744524 AS DOUBLE PRECISION)) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_71 <= CAST(-0.161345690488815 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_72 <= CAST(-0.088676795363426 AS DOUBLE PRECISION)) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= CAST(-1.073592185974121 AS DOUBLE PRECISION)) THEN 13 ELSE 14 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_64 <= CAST(0.996452629566193 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= CAST(-0.462279170751572 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= CAST(0.235419869422913 AS DOUBLE PRECISION)) THEN 18 ELSE 19 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_45 <= CAST(0.047051250934601 AS DOUBLE PRECISION)) THEN 21 ELSE 22 END END ELSE 23 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_19 <= CAST(-0.488262593746185 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_31 <= CAST(-0.556856870651245 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_50 <= CAST(-1.250923752784729 AS DOUBLE PRECISION)) THEN 27 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_62 <= CAST(0.21893398463726 AS DOUBLE PRECISION)) THEN 29 ELSE 30 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_19 <= CAST(-1.705645322799682 AS DOUBLE PRECISION)) THEN 32 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_53 <= CAST(1.071792721748352 AS DOUBLE PRECISION)) THEN 34 ELSE 35 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_24 <= CAST(0.894213438034058 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_37 <= CAST(0.81710934638977 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_94 <= CAST(-1.72513735294342 AS DOUBLE PRECISION)) THEN 39 ELSE 40 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_92 <= CAST(-1.28598690032959 AS DOUBLE PRECISION)) THEN 42 ELSE 43 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_43 <= CAST(-0.542276263237 AS DOUBLE PRECISION)) THEN 45 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_45 <= CAST(-0.285414934158325 AS DOUBLE PRECISION)) THEN 47 ELSE 48 END END END END END AS node_id_2 
FROM tmp_20180516114106_codegen_pl3sj0_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte_4 AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data_4" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS DOUBLE PRECISION) AS "E" 
FROM (SELECT 4 AS nid, CAST(-146.53732849176905 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_4 UNION ALL SELECT 6 AS nid, CAST(-305.1211137513931 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_4 UNION ALL SELECT 7 AS nid, CAST(-244.00161821812998 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_4 UNION ALL SELECT 10 AS nid, CAST(-55.13785992768933 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_4 UNION ALL SELECT 11 AS nid, CAST(-86.11645147491663 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_4 UNION ALL SELECT 13 AS nid, CAST(-167.53786194153668 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_4 UNION ALL SELECT 14 AS nid, CAST(-190.99779883345465 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_4 UNION ALL SELECT 18 AS nid, CAST(183.77184322024888 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_4 UNION ALL SELECT 19 AS nid, CAST(136.92680038236625 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_4 UNION ALL SELECT 21 AS nid, CAST(75.33652615813574 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_4 UNION ALL SELECT 22 AS nid, CAST(75.60702200307296 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_4 UNION ALL SELECT 23 AS nid, CAST(-42.10296471792358 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_4 UNION ALL SELECT 27 AS nid, CAST(-10.715443370853677 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_4 UNION ALL SELECT 29 AS nid, CAST(101.56660782160331 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_4 UNION ALL SELECT 30 AS nid, CAST(128.74971924769997 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_4 UNION ALL SELECT 32 AS nid, CAST(-202.60833883427068 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_4 UNION ALL SELECT 34 AS nid, CAST(-86.53286310582766 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_4 UNION ALL SELECT 35 AS nid, CAST(-3.859069494267214 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_4 UNION ALL SELECT 39 AS nid, CAST(-17.80178458293171 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_4 UNION ALL SELECT 40 AS nid, CAST(181.01831600308512 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_4 UNION ALL SELECT 42 AS nid, CAST(419.8117904787066 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_4 UNION ALL SELECT 43 AS nid, CAST(299.12743811895916 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_4 UNION ALL SELECT 45 AS nid, CAST(38.19976422974275 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_4 UNION ALL SELECT 47 AS nid, CAST(-51.54063841079579 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_4 UNION ALL SELECT 48 AS nid, CAST(-140.57351311758325 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_4) AS "Values"), 
"DT_Output_4" AS 
(SELECT "DT_node_lookup_4"."KEY" AS "KEY", "DT_node_lookup_4".node_id_2 AS node_id_2, "DT_node_data_4".nid AS nid, "DT_node_data_4"."E" AS "E" 
FROM "DT_node_lookup_4" LEFT OUTER JOIN "DT_node_data_4" ON "DT_node_lookup_4".node_id_2 = "DT_node_data_4".nid), 
"BAG_Model_4" AS 
(SELECT "DT_Output_4"."KEY" AS "KEY", "DT_Output_4"."E" AS "Estimator" 
FROM "DT_Output_4"), 
"DT_node_lookup_5" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_82 <= CAST(-0.174784958362579 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_65 <= CAST(-0.024759966880083 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_43 <= CAST(-0.155562564730644 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= CAST(0.786942720413208 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_36 <= CAST(-1.252771615982056 AS DOUBLE PRECISION)) THEN 5 ELSE 6 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_92 <= CAST(-0.513384282588959 AS DOUBLE PRECISION)) THEN 8 ELSE 9 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_84 <= CAST(0.058285303413868 AS DOUBLE PRECISION)) THEN 11 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_40 <= CAST(1.140926241874695 AS DOUBLE PRECISION)) THEN 13 ELSE 14 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_43 <= CAST(-0.728108048439026 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_45 <= CAST(-1.468687057495117 AS DOUBLE PRECISION)) THEN 17 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= CAST(1.590306162834168 AS DOUBLE PRECISION)) THEN 19 ELSE 20 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_99 <= CAST(0.664262652397156 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_82 <= CAST(-1.031199336051941 AS DOUBLE PRECISION)) THEN 23 ELSE 24 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_80 <= CAST(0.583619356155396 AS DOUBLE PRECISION)) THEN 26 ELSE 27 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_13 <= CAST(-1.056071758270264 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= CAST(0.468440353870392 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_59 <= CAST(-0.175373464822769 AS DOUBLE PRECISION)) THEN 31 ELSE 32 END ELSE 33 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_83 <= CAST(0.965985536575317 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_37 <= CAST(0.528082430362701 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_50 <= CAST(-0.672151446342468 AS DOUBLE PRECISION)) THEN 37 ELSE 38 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_80 <= CAST(1.027842283248901 AS DOUBLE PRECISION)) THEN 40 ELSE 41 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_31 <= CAST(0.144852936267853 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_64 <= CAST(-0.390398025512695 AS DOUBLE PRECISION)) THEN 44 ELSE 45 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_24 <= CAST(0.216100424528122 AS DOUBLE PRECISION)) THEN 47 ELSE 48 END END END END END AS node_id_2 
FROM tmp_20180516114106_codegen_pl3sj0_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte_5 AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data_5" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS DOUBLE PRECISION) AS "E" 
FROM (SELECT 5 AS nid, CAST(-207.8249772062679 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_5 UNION ALL SELECT 6 AS nid, CAST(-300.4367274016759 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_5 UNION ALL SELECT 8 AS nid, CAST(-433.8126640534722 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_5 UNION ALL SELECT 9 AS nid, CAST(-361.1632498041779 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_5 UNION ALL SELECT 11 AS nid, CAST(-86.11645147491663 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_5 UNION ALL SELECT 13 AS nid, CAST(-194.98507964872636 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_5 UNION ALL SELECT 14 AS nid, CAST(-167.53786194153668 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_5 UNION ALL SELECT 17 AS nid, CAST(-146.53732849176905 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_5 UNION ALL SELECT 19 AS nid, CAST(-234.4658092919816 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_5 UNION ALL SELECT 20 AS nid, CAST(-190.64702660055804 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_5 UNION ALL SELECT 23 AS nid, CAST(57.47992842006193 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_5 UNION ALL SELECT 24 AS nid, CAST(144.06561030288705 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_5 UNION ALL SELECT 26 AS nid, CAST(-55.07386120610747 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_5 UNION ALL SELECT 27 AS nid, CAST(-42.10296471792358 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_5 UNION ALL SELECT 31 AS nid, CAST(-172.78010697974267 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_5 UNION ALL SELECT 32 AS nid, CAST(-202.60833883427068 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_5 UNION ALL SELECT 33 AS nid, CAST(-4.904591434376485 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_5 UNION ALL SELECT 37 AS nid, CAST(-1.528452902798168 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_5 UNION ALL SELECT 38 AS nid, CAST(160.19507855983858 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_5 UNION ALL SELECT 40 AS nid, CAST(259.1951167703648 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_5 UNION ALL SELECT 41 AS nid, CAST(419.8117904787066 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_5 UNION ALL SELECT 44 AS nid, CAST(99.03982346239465 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_5 UNION ALL SELECT 45 AS nid, CAST(23.42094503357611 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_5 UNION ALL SELECT 47 AS nid, CAST(-79.28963380412186 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_5 UNION ALL SELECT 48 AS nid, CAST(-140.57351311758325 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_5) AS "Values"), 
"DT_Output_5" AS 
(SELECT "DT_node_lookup_5"."KEY" AS "KEY", "DT_node_lookup_5".node_id_2 AS node_id_2, "DT_node_data_5".nid AS nid, "DT_node_data_5"."E" AS "E" 
FROM "DT_node_lookup_5" LEFT OUTER JOIN "DT_node_data_5" ON "DT_node_lookup_5".node_id_2 = "DT_node_data_5".nid), 
"BAG_Model_5" AS 
(SELECT "DT_Output_5"."KEY" AS "KEY", "DT_Output_5"."E" AS "Estimator" 
FROM "DT_Output_5"), 
"DT_node_lookup_6" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_97 <= CAST(-0.354588389396668 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_15 <= CAST(0.313223332166672 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_60 <= CAST(-0.337052792310715 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_99 <= CAST(0.378942847251892 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_47 <= CAST(1.585436224937439 AS DOUBLE PRECISION)) THEN 5 ELSE 6 END ELSE 7 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_19 <= CAST(0.848242402076721 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_77 <= CAST(-0.010394670069218 AS DOUBLE PRECISION)) THEN 10 ELSE 11 END ELSE 12 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_72 <= CAST(-0.315390080213547 AS DOUBLE PRECISION)) THEN 14 ELSE 15 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_70 <= CAST(-0.757879018783569 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_87 <= CAST(0.765872716903686 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_19 <= CAST(-1.207158803939819 AS DOUBLE PRECISION)) THEN 19 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_90 <= CAST(0.989708423614502 AS DOUBLE PRECISION)) THEN 21 ELSE 22 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_17 <= CAST(-0.020362108945847 AS DOUBLE PRECISION)) THEN 24 ELSE 25 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_81 <= CAST(-0.135007068514824 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_56 <= CAST(0.444331645965576 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_42 <= CAST(0.013656448572874 AS DOUBLE PRECISION)) THEN 29 ELSE 30 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_64 <= CAST(-0.086501926183701 AS DOUBLE PRECISION)) THEN 32 ELSE 33 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_71 <= CAST(-0.330044835805893 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_86 <= CAST(0.106517054140568 AS DOUBLE PRECISION)) THEN 36 ELSE 37 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_89 <= CAST(0.29932227730751 AS DOUBLE PRECISION)) THEN 39 ELSE 40 END END END END END AS node_id_2 
FROM tmp_20180516114106_codegen_pl3sj0_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte_6 AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data_6" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS DOUBLE PRECISION) AS "E" 
FROM (SELECT 5 AS nid, CAST(-200.19477748418348 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_6 UNION ALL SELECT 6 AS nid, CAST(-234.4658092919816 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_6 UNION ALL SELECT 7 AS nid, CAST(-167.53786194153668 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_6 UNION ALL SELECT 10 AS nid, CAST(-312.4692471373754 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_6 UNION ALL SELECT 11 AS nid, CAST(-349.85659647969806 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_6 UNION ALL SELECT 12 AS nid, CAST(-430.7322420182495 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_6 UNION ALL SELECT 14 AS nid, CAST(174.05588768325575 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_6 UNION ALL SELECT 15 AS nid, CAST(-55.13785992768933 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_6 UNION ALL SELECT 19 AS nid, CAST(-146.53732849176905 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_6 UNION ALL SELECT 21 AS nid, CAST(-88.08599662350004 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_6 UNION ALL SELECT 22 AS nid, CAST(-50.5795657858279 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_6 UNION ALL SELECT 24 AS nid, CAST(-190.99779883345465 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_6 UNION ALL SELECT 25 AS nid, CAST(-290.52672487497273 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_6 UNION ALL SELECT 29 AS nid, CAST(10.869390280461314 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_6 UNION ALL SELECT 30 AS nid, CAST(107.44906867815173 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_6 UNION ALL SELECT 32 AS nid, CAST(-207.8249772062679 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_6 UNION ALL SELECT 33 AS nid, CAST(-234.79191600815204 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_6 UNION ALL SELECT 36 AS nid, CAST(344.0999710690674 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_6 UNION ALL SELECT 37 AS nid, CAST(213.7433285611016 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_6 UNION ALL SELECT 39 AS nid, CAST(105.41534311316869 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_6 UNION ALL SELECT 40 AS nid, CAST(198.47951527633785 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_6) AS "Values"), 
"DT_Output_6" AS 
(SELECT "DT_node_lookup_6"."KEY" AS "KEY", "DT_node_lookup_6".node_id_2 AS node_id_2, "DT_node_data_6".nid AS nid, "DT_node_data_6"."E" AS "E" 
FROM "DT_node_lookup_6" LEFT OUTER JOIN "DT_node_data_6" ON "DT_node_lookup_6".node_id_2 = "DT_node_data_6".nid), 
"BAG_Model_6" AS 
(SELECT "DT_Output_6"."KEY" AS "KEY", "DT_Output_6"."E" AS "Estimator" 
FROM "DT_Output_6"), 
"DT_node_lookup_7" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_43 <= CAST(-0.44576358795166 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_82 <= CAST(-0.199323639273644 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_29 <= CAST(0.099240347743034 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_94 <= CAST(0.432953655719757 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= CAST(0.641231179237366 AS DOUBLE PRECISION)) THEN 5 ELSE 6 END ELSE 7 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_46 <= CAST(-0.45283305644989 AS DOUBLE PRECISION)) THEN 9 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_85 <= CAST(0.843051433563232 AS DOUBLE PRECISION)) THEN 11 ELSE 12 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= CAST(0.086544401943684 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_34 <= CAST(-0.357301771640778 AS DOUBLE PRECISION)) THEN 15 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_100 <= CAST(-0.646752297878265 AS DOUBLE PRECISION)) THEN 17 ELSE 18 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_60 <= CAST(-0.647964119911194 AS DOUBLE PRECISION)) THEN 20 ELSE 21 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_94 <= CAST(-0.881576538085938 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_12 <= CAST(-0.682786405086517 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_69 <= CAST(0.526757895946503 AS DOUBLE PRECISION)) THEN 25 ELSE 26 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= CAST(-0.076967850327492 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_58 <= CAST(0.380321323871613 AS DOUBLE PRECISION)) THEN 29 ELSE 30 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_17 <= CAST(-0.79450511932373 AS DOUBLE PRECISION)) THEN 32 ELSE 33 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_81 <= CAST(-0.133164018392563 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_82 <= CAST(0.829570889472961 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_43 <= CAST(0.149359479546547 AS DOUBLE PRECISION)) THEN 37 ELSE 38 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= CAST(-0.772085547447205 AS DOUBLE PRECISION)) THEN 40 ELSE 41 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_37 <= CAST(0.528082430362701 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_31 <= CAST(-1.526833295822144 AS DOUBLE PRECISION)) THEN 44 ELSE 45 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_34 <= CAST(-0.930349886417389 AS DOUBLE PRECISION)) THEN 47 ELSE 48 END END END END END AS node_id_2 
FROM tmp_20180516114106_codegen_pl3sj0_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte_7 AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data_7" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS DOUBLE PRECISION) AS "E" 
FROM (SELECT 5 AS nid, CAST(-290.9850439982121 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_7 UNION ALL SELECT 6 AS nid, CAST(-334.8676350174931 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_7 UNION ALL SELECT 7 AS nid, CAST(-436.89308608869476 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_7 UNION ALL SELECT 9 AS nid, CAST(-310.56333873263117 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_7 UNION ALL SELECT 11 AS nid, CAST(-227.9686546286384 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_7 UNION ALL SELECT 12 AS nid, CAST(-168.59217754616355 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_7 UNION ALL SELECT 15 AS nid, CAST(-202.60833883427068 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_7 UNION ALL SELECT 17 AS nid, CAST(-76.8627548707201 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_7 UNION ALL SELECT 18 AS nid, CAST(-80.78526024187205 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_7 UNION ALL SELECT 20 AS nid, CAST(48.423335696929506 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_7 UNION ALL SELECT 21 AS nid, CAST(38.19976422974275 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_7 UNION ALL SELECT 25 AS nid, CAST(-79.28963380412186 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_7 UNION ALL SELECT 26 AS nid, CAST(62.605323392817695 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_7 UNION ALL SELECT 29 AS nid, CAST(-172.78010697974267 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_7 UNION ALL SELECT 30 AS nid, CAST(-167.53786194153668 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_7 UNION ALL SELECT 32 AS nid, CAST(-200.33739348214584 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_7 UNION ALL SELECT 33 AS nid, CAST(-190.99779883345465 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_7 UNION ALL SELECT 37 AS nid, CAST(-152.83634433227704 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_7 UNION ALL SELECT 38 AS nid, CAST(-3.715048366486946 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_7 UNION ALL SELECT 40 AS nid, CAST(125.56433357849326 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_7 UNION ALL SELECT 41 AS nid, CAST(176.9109362378024 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_7 UNION ALL SELECT 44 AS nid, CAST(12.033191796138581 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_7 UNION ALL SELECT 45 AS nid, CAST(186.69926654930842 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_7 UNION ALL SELECT 47 AS nid, CAST(419.8117904787066 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_7 UNION ALL SELECT 48 AS nid, CAST(288.33141635856674 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_7) AS "Values"), 
"DT_Output_7" AS 
(SELECT "DT_node_lookup_7"."KEY" AS "KEY", "DT_node_lookup_7".node_id_2 AS node_id_2, "DT_node_data_7".nid AS nid, "DT_node_data_7"."E" AS "E" 
FROM "DT_node_lookup_7" LEFT OUTER JOIN "DT_node_data_7" ON "DT_node_lookup_7".node_id_2 = "DT_node_data_7".nid), 
"BAG_Model_7" AS 
(SELECT "DT_Output_7"."KEY" AS "KEY", "DT_Output_7"."E" AS "Estimator" 
FROM "DT_Output_7"), 
"DT_node_lookup_8" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_82 <= CAST(-0.567614257335663 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_43 <= CAST(0.149359479546547 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_28 <= CAST(-0.567071974277496 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_18 <= CAST(-0.712993800640106 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_27 <= CAST(-0.118005216121674 AS DOUBLE PRECISION)) THEN 5 ELSE 6 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= CAST(-0.018752813339233 AS DOUBLE PRECISION)) THEN 8 ELSE 9 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_63 <= CAST(-0.185186862945557 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_53 <= CAST(-0.074469372630119 AS DOUBLE PRECISION)) THEN 12 ELSE 13 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_45 <= CAST(-0.109839767217636 AS DOUBLE PRECISION)) THEN 15 ELSE 16 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_33 <= CAST(-0.518391489982605 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_76 <= CAST(-1.660255551338196 AS DOUBLE PRECISION)) THEN 19 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_33 <= CAST(-0.919711291790008 AS DOUBLE PRECISION)) THEN 21 ELSE 22 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_44 <= CAST(0.746191382408142 AS DOUBLE PRECISION)) THEN 24 ELSE 25 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_48 <= CAST(-0.224144205451012 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_17 <= CAST(1.07050609588623 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_95 <= CAST(2.162471771240234 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_64 <= CAST(-0.845737934112549 AS DOUBLE PRECISION)) THEN 30 ELSE 31 END ELSE 32 END ELSE 33 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_96 <= CAST(-0.838040709495544 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_68 <= CAST(0.245107918977737 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_22 <= CAST(-1.674247741699219 AS DOUBLE PRECISION)) THEN 37 ELSE 38 END ELSE 39 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_95 <= CAST(-0.710925936698914 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_28 <= CAST(-0.122650444507599 AS DOUBLE PRECISION)) THEN 42 ELSE 43 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_82 <= CAST(0.037791337817907 AS DOUBLE PRECISION)) THEN 45 ELSE 46 END END END END END AS node_id_2 
FROM tmp_20180516114106_codegen_pl3sj0_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte_8 AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data_8" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS DOUBLE PRECISION) AS "E" 
FROM (SELECT 5 AS nid, CAST(-430.7322420182495 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_8 UNION ALL SELECT 6 AS nid, CAST(-436.89308608869476 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_8 UNION ALL SELECT 8 AS nid, CAST(-310.56333873263117 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_8 UNION ALL SELECT 9 AS nid, CAST(-338.5499431552182 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_8 UNION ALL SELECT 12 AS nid, CAST(-146.53732849176905 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_8 UNION ALL SELECT 13 AS nid, CAST(-199.78996834853058 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_8 UNION ALL SELECT 15 AS nid, CAST(-246.3040437706245 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_8 UNION ALL SELECT 16 AS nid, CAST(-287.3395119211027 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_8 UNION ALL SELECT 19 AS nid, CAST(-200.33739348214584 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_8 UNION ALL SELECT 21 AS nid, CAST(-46.44792978784549 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_8 UNION ALL SELECT 22 AS nid, CAST(-102.26347334362194 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_8 UNION ALL SELECT 24 AS nid, CAST(114.45423222726873 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_8 UNION ALL SELECT 25 AS nid, CAST(75.60702200307296 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_8 UNION ALL SELECT 30 AS nid, CAST(157.53882923776118 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_8 UNION ALL SELECT 31 AS nid, CAST(255.712657091142 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_8 UNION ALL SELECT 32 AS nid, CAST(419.8117904787066 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_8 UNION ALL SELECT 33 AS nid, CAST(-140.57351311758325 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_8 UNION ALL SELECT 37 AS nid, CAST(76.63859902488964 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_8 UNION ALL SELECT 38 AS nid, CAST(134.61347025859965 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_8 UNION ALL SELECT 39 AS nid, CAST(327.27619652811467 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_8 UNION ALL SELECT 42 AS nid, CAST(278.8145316391315 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_8 UNION ALL SELECT 43 AS nid, CAST(136.92680038236625 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_8 UNION ALL SELECT 45 AS nid, CAST(-14.683897347860945 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_8 UNION ALL SELECT 46 AS nid, CAST(-108.12274909378837 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_8) AS "Values"), 
"DT_Output_8" AS 
(SELECT "DT_node_lookup_8"."KEY" AS "KEY", "DT_node_lookup_8".node_id_2 AS node_id_2, "DT_node_data_8".nid AS nid, "DT_node_data_8"."E" AS "E" 
FROM "DT_node_lookup_8" LEFT OUTER JOIN "DT_node_data_8" ON "DT_node_lookup_8".node_id_2 = "DT_node_data_8".nid), 
"BAG_Model_8" AS 
(SELECT "DT_Output_8"."KEY" AS "KEY", "DT_Output_8"."E" AS "Estimator" 
FROM "DT_Output_8"), 
"DT_node_lookup_9" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_82 <= CAST(-0.590545773506164 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_43 <= CAST(-0.353695660829544 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_65 <= CAST(0.070953287184238 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_18 <= CAST(-0.712993800640106 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_52 <= CAST(0.22899979352951 AS DOUBLE PRECISION)) THEN 5 ELSE 6 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_69 <= CAST(-0.328322052955627 AS DOUBLE PRECISION)) THEN 8 ELSE 9 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_81 <= CAST(-0.34679239988327 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_98 <= CAST(-0.38863331079483 AS DOUBLE PRECISION)) THEN 12 ELSE 13 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_30 <= CAST(1.517297387123108 AS DOUBLE PRECISION)) THEN 15 ELSE 16 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_83 <= CAST(-0.140258774161339 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_81 <= CAST(-0.2491864413023 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_84 <= CAST(-0.63832026720047 AS DOUBLE PRECISION)) THEN 20 ELSE 21 END ELSE 22 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_63 <= CAST(-1.03122067451477 AS DOUBLE PRECISION)) THEN 24 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_80 <= CAST(0.093872174620628 AS DOUBLE PRECISION)) THEN 26 ELSE 27 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_41 <= CAST(0.435099840164185 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= CAST(-0.081572763621807 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_19 <= CAST(-0.546132385730743 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_75 <= CAST(0.728790104389191 AS DOUBLE PRECISION)) THEN 32 ELSE 33 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_90 <= CAST(1.434392333030701 AS DOUBLE PRECISION)) THEN 35 ELSE 36 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_29 <= CAST(-0.153509587049484 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_60 <= CAST(1.444629907608032 AS DOUBLE PRECISION)) THEN 39 ELSE 40 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_28 <= CAST(0.583278954029083 AS DOUBLE PRECISION)) THEN 42 ELSE 43 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_55 <= CAST(-0.711578726768494 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_18 <= CAST(0.556627869606018 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= CAST(0.428433060646057 AS DOUBLE PRECISION)) THEN 47 ELSE 48 END ELSE 49 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_46 <= CAST(-0.04996819794178 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_54 <= CAST(0.459033668041229 AS DOUBLE PRECISION)) THEN 52 ELSE 53 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= CAST(-0.798754632472992 AS DOUBLE PRECISION)) THEN 55 ELSE 56 END END END END END AS node_id_2 
FROM tmp_20180516114106_codegen_pl3sj0_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte_9 AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data_9" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS DOUBLE PRECISION) AS "E" 
FROM (SELECT 5 AS nid, CAST(-454.8215873712685 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_9 UNION ALL SELECT 6 AS nid, CAST(-430.7322420182495 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_9 UNION ALL SELECT 8 AS nid, CAST(-346.08771203820476 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_9 UNION ALL SELECT 9 AS nid, CAST(-299.06823541675624 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_9 UNION ALL SELECT 12 AS nid, CAST(-146.53732849176905 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_9 UNION ALL SELECT 13 AS nid, CAST(-190.64702660055804 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_9 UNION ALL SELECT 15 AS nid, CAST(-257.9792248911822 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_9 UNION ALL SELECT 16 AS nid, CAST(-234.79191600815204 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_9 UNION ALL SELECT 20 AS nid, CAST(-200.3373934821458 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_9 UNION ALL SELECT 21 AS nid, CAST(-195.14053894959358 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_9 UNION ALL SELECT 22 AS nid, CAST(-102.26347334362194 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_9 UNION ALL SELECT 24 AS nid, CAST(39.44300011869663 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_9 UNION ALL SELECT 26 AS nid, CAST(75.33652615813574 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_9 UNION ALL SELECT 27 AS nid, CAST(75.60702200307296 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_9 UNION ALL SELECT 32 AS nid, CAST(98.59864297004285 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_9 UNION ALL SELECT 33 AS nid, CAST(-3.859069494267214 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_9 UNION ALL SELECT 35 AS nid, CAST(168.8457387530468 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_9 UNION ALL SELECT 36 AS nid, CAST(327.27619652811467 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_9 UNION ALL SELECT 39 AS nid, CAST(-103.15843491730894 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_9 UNION ALL SELECT 40 AS nid, CAST(-327.50301874204285 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_9 UNION ALL SELECT 42 AS nid, CAST(8.792374222390666 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_9 UNION ALL SELECT 43 AS nid, CAST(119.58121675727539 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_9 UNION ALL SELECT 47 AS nid, CAST(270.9786797098036 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_9 UNION ALL SELECT 48 AS nid, CAST(294.7961773027204 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_9 UNION ALL SELECT 49 AS nid, CAST(419.8117904787066 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_9 UNION ALL SELECT 52 AS nid, CAST(129.6826307591967 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_9 UNION ALL SELECT 53 AS nid, CAST(112.55251202912707 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_9 UNION ALL SELECT 55 AS nid, CAST(195.39419395402132 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_9 UNION ALL SELECT 56 AS nid, CAST(216.372382438852 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_9) AS "Values"), 
"DT_Output_9" AS 
(SELECT "DT_node_lookup_9"."KEY" AS "KEY", "DT_node_lookup_9".node_id_2 AS node_id_2, "DT_node_data_9".nid AS nid, "DT_node_data_9"."E" AS "E" 
FROM "DT_node_lookup_9" LEFT OUTER JOIN "DT_node_data_9" ON "DT_node_lookup_9".node_id_2 = "DT_node_data_9".nid), 
"BAG_Model_9" AS 
(SELECT "DT_Output_9"."KEY" AS "KEY", "DT_Output_9"."E" AS "Estimator" 
FROM "DT_Output_9")
 SELECT "BAG_B0"."KEY", "BAG_B0"."Estimator" 
FROM (SELECT "BAG_esu_0"."KEY" AS "KEY", "BAG_esu_0"."Estimator" AS "Estimator" 
FROM (SELECT "BAG_Model_0"."KEY" AS "KEY", "BAG_Model_0"."Estimator" AS "Estimator" 
FROM "BAG_Model_0" UNION ALL SELECT "BAG_Model_1"."KEY" AS "KEY", "BAG_Model_1"."Estimator" AS "Estimator" 
FROM "BAG_Model_1" UNION ALL SELECT "BAG_Model_2"."KEY" AS "KEY", "BAG_Model_2"."Estimator" AS "Estimator" 
FROM "BAG_Model_2" UNION ALL SELECT "BAG_Model_3"."KEY" AS "KEY", "BAG_Model_3"."Estimator" AS "Estimator" 
FROM "BAG_Model_3" UNION ALL SELECT "BAG_Model_4"."KEY" AS "KEY", "BAG_Model_4"."Estimator" AS "Estimator" 
FROM "BAG_Model_4" UNION ALL SELECT "BAG_Model_5"."KEY" AS "KEY", "BAG_Model_5"."Estimator" AS "Estimator" 
FROM "BAG_Model_5" UNION ALL SELECT "BAG_Model_6"."KEY" AS "KEY", "BAG_Model_6"."Estimator" AS "Estimator" 
FROM "BAG_Model_6" UNION ALL SELECT "BAG_Model_7"."KEY" AS "KEY", "BAG_Model_7"."Estimator" AS "Estimator" 
FROM "BAG_Model_7" UNION ALL SELECT "BAG_Model_8"."KEY" AS "KEY", "BAG_Model_8"."Estimator" AS "Estimator" 
FROM "BAG_Model_8" UNION ALL SELECT "BAG_Model_9"."KEY" AS "KEY", "BAG_Model_9"."Estimator" AS "Estimator" 
FROM "BAG_Model_9") AS "BAG_esu_0") AS "BAG_B0") AS "U"

-- Code For temporary table tmp_20180516114106_codegen_j4nbi5_bag_b1 part 1. Create 


CREATE GLOBAL TEMPORARY TABLE tmp_20180516114106_codegen_j4nbi5_bag_b1  (
	"KEY" BIGINT, 
	"Estimator" DOUBLE PRECISION
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table tmp_20180516114106_codegen_j4nbi5_bag_b1 part 2. Populate

INSERT INTO tmp_20180516114106_codegen_j4nbi5_bag_b1 ("KEY", "Estimator") SELECT "U"."KEY", "U"."Estimator" 
FROM (WITH "DT_node_lookup_10" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_82 <= CAST(-0.259913891553879 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_65 <= CAST(-0.005990596488118 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_43 <= CAST(-0.132421851158142 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_51 <= CAST(0.673223733901978 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_40 <= CAST(-0.415000379085541 AS DOUBLE PRECISION)) THEN 5 ELSE 6 END ELSE 7 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_24 <= CAST(-1.277859926223755 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_52 <= CAST(0.174034759402275 AS DOUBLE PRECISION)) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_65 <= CAST(-0.755658149719238 AS DOUBLE PRECISION)) THEN 13 ELSE 14 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_30 <= CAST(1.093533515930176 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_64 <= CAST(1.009443640708923 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_71 <= CAST(-0.917587995529175 AS DOUBLE PRECISION)) THEN 18 ELSE 19 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_44 <= CAST(0.044382929801941 AS DOUBLE PRECISION)) THEN 21 ELSE 22 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= CAST(0.177119255065918 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_52 <= CAST(0.68077564239502 AS DOUBLE PRECISION)) THEN 25 ELSE 26 END ELSE 27 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_41 <= CAST(0.435099840164185 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_96 <= CAST(-0.527289032936096 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_39 <= CAST(-0.617690443992615 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= CAST(0.833586573600769 AS DOUBLE PRECISION)) THEN 32 ELSE 33 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_87 <= CAST(0.104386478662491 AS DOUBLE PRECISION)) THEN 35 ELSE 36 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_39 <= CAST(0.894407749176025 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_68 <= CAST(-0.698673486709595 AS DOUBLE PRECISION)) THEN 39 ELSE 40 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= CAST(0.054298549890518 AS DOUBLE PRECISION)) THEN 42 ELSE 43 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_18 <= CAST(-0.9162358045578 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_82 <= CAST(0.09338803589344 AS DOUBLE PRECISION)) THEN 46 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_45 <= CAST(0.572733104228973 AS DOUBLE PRECISION)) THEN 48 ELSE 49 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_21 <= CAST(0.016459826380014 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_49 <= CAST(-0.105473786592484 AS DOUBLE PRECISION)) THEN 52 ELSE 53 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_82 <= CAST(1.5347660779953 AS DOUBLE PRECISION)) THEN 55 ELSE 56 END END END END END AS node_id_2 
FROM tmp_20180516114106_codegen_pl3sj0_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte_10 AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data_10" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS DOUBLE PRECISION) AS "E" 
FROM (SELECT 5 AS nid, CAST(-343.1764960495319 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_10 UNION ALL SELECT 6 AS nid, CAST(-289.2613657388755 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_10 UNION ALL SELECT 7 AS nid, CAST(-207.8249772062679 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_10 UNION ALL SELECT 10 AS nid, CAST(-167.53786194153668 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_10 UNION ALL SELECT 11 AS nid, CAST(-196.1762239786283 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_10 UNION ALL SELECT 13 AS nid, CAST(-86.11645147491663 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_10 UNION ALL SELECT 14 AS nid, CAST(-102.26347334362194 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_10 UNION ALL SELECT 18 AS nid, CAST(176.41381900111423 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_10 UNION ALL SELECT 19 AS nid, CAST(69.48912628462016 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_10 UNION ALL SELECT 21 AS nid, CAST(-55.13785992768933 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_10 UNION ALL SELECT 22 AS nid, CAST(-42.10296471792358 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_10 UNION ALL SELECT 25 AS nid, CAST(-234.79191600815204 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_10 UNION ALL SELECT 26 AS nid, CAST(-257.9792248911822 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_10 UNION ALL SELECT 27 AS nid, CAST(-190.64702660055804 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_10 UNION ALL SELECT 32 AS nid, CAST(57.87799416085497 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_10 UNION ALL SELECT 33 AS nid, CAST(-30.698977731486934 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_10 UNION ALL SELECT 35 AS nid, CAST(97.90244967133617 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_10 UNION ALL SELECT 36 AS nid, CAST(144.72865942116238 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_10 UNION ALL SELECT 39 AS nid, CAST(-156.67681004866296 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_10 UNION ALL SELECT 40 AS nid, CAST(-81.13315658564488 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_10 UNION ALL SELECT 42 AS nid, CAST(5.871497481653321 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_10 UNION ALL SELECT 43 AS nid, CAST(94.43377409338842 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_10 UNION ALL SELECT 46 AS nid, CAST(-51.54063841079579 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_10 UNION ALL SELECT 48 AS nid, CAST(130.61554227069345 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_10 UNION ALL SELECT 49 AS nid, CAST(128.74971924769997 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_10 UNION ALL SELECT 52 AS nid, CAST(299.93393741755256 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_10 UNION ALL SELECT 53 AS nid, CAST(256.7906055772042 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_10 UNION ALL SELECT 55 AS nid, CAST(176.1183180952158 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_10 UNION ALL SELECT 56 AS nid, CAST(219.92766037620171 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_10) AS "Values"), 
"DT_Output_10" AS 
(SELECT "DT_node_lookup_10"."KEY" AS "KEY", "DT_node_lookup_10".node_id_2 AS node_id_2, "DT_node_data_10".nid AS nid, "DT_node_data_10"."E" AS "E" 
FROM "DT_node_lookup_10" LEFT OUTER JOIN "DT_node_data_10" ON "DT_node_lookup_10".node_id_2 = "DT_node_data_10".nid), 
"BAG_Model_10" AS 
(SELECT "DT_Output_10"."KEY" AS "KEY", "DT_Output_10"."E" AS "Estimator" 
FROM "DT_Output_10"), 
"DT_node_lookup_11" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_82 <= CAST(0.178520917892456 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_65 <= CAST(0.90577757358551 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_44 <= CAST(0.328052937984467 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_51 <= CAST(0.373619675636292 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_93 <= CAST(0.674224436283112 AS DOUBLE PRECISION)) THEN 5 ELSE 6 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_96 <= CAST(-0.994117140769958 AS DOUBLE PRECISION)) THEN 8 ELSE 9 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_66 <= CAST(1.005006313323975 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_25 <= CAST(0.383615463972092 AS DOUBLE PRECISION)) THEN 12 ELSE 13 END ELSE 14 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_36 <= CAST(1.665928363800049 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_50 <= CAST(0.030869875103235 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_44 <= CAST(-0.336343258619308 AS DOUBLE PRECISION)) THEN 18 ELSE 19 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= CAST(-0.835756659507752 AS DOUBLE PRECISION)) THEN 21 ELSE 22 END END ELSE 23 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_60 <= CAST(-0.984447479248047 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_44 <= CAST(0.064039140939713 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_99 <= CAST(0.659612834453583 AS DOUBLE PRECISION)) THEN 27 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_96 <= CAST(0.967426538467407 AS DOUBLE PRECISION)) THEN 29 ELSE 30 END END ELSE 31 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_95 <= CAST(0.931726574897766 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_38 <= CAST(-0.663495898246765 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_97 <= CAST(0.708987593650818 AS DOUBLE PRECISION)) THEN 35 ELSE 36 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_81 <= CAST(0.658142149448395 AS DOUBLE PRECISION)) THEN 38 ELSE 39 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_56 <= CAST(1.763844847679138 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_34 <= CAST(-0.842316567897797 AS DOUBLE PRECISION)) THEN 42 ELSE 43 END ELSE 44 END END END END AS node_id_2 
FROM tmp_20180516114106_codegen_pl3sj0_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte_11 AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data_11" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS DOUBLE PRECISION) AS "E" 
FROM (SELECT 5 AS nid, CAST(-250.9404340048366 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_11 UNION ALL SELECT 6 AS nid, CAST(-4.904591434376485 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_11 UNION ALL SELECT 8 AS nid, CAST(-338.5499431552182 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_11 UNION ALL SELECT 9 AS nid, CAST(-440.8156384927376 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_11 UNION ALL SELECT 12 AS nid, CAST(-158.73693841912285 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_11 UNION ALL SELECT 13 AS nid, CAST(-85.19949597203019 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_11 UNION ALL SELECT 14 AS nid, CAST(114.45423222726873 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_11 UNION ALL SELECT 18 AS nid, CAST(164.2502513207056 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_11 UNION ALL SELECT 19 AS nid, CAST(305.0402047722153 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_11 UNION ALL SELECT 21 AS nid, CAST(2.273972887782435 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_11 UNION ALL SELECT 22 AS nid, CAST(75.51685672142722 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_11 UNION ALL SELECT 23 AS nid, CAST(-172.78010697974267 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_11 UNION ALL SELECT 27 AS nid, CAST(-202.60833883427068 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_11 UNION ALL SELECT 29 AS nid, CAST(-79.78381998603227 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_11 UNION ALL SELECT 30 AS nid, CAST(-107.89147253045782 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_11 UNION ALL SELECT 31 AS nid, CAST(48.423335696929506 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_11 UNION ALL SELECT 35 AS nid, CAST(192.33450735988313 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_11 UNION ALL SELECT 36 AS nid, CAST(273.5906303529129 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_11 UNION ALL SELECT 38 AS nid, CAST(137.78432322225567 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_11 UNION ALL SELECT 39 AS nid, CAST(11.656605497463172 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_11 UNION ALL SELECT 42 AS nid, CAST(294.7646845425511 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_11 UNION ALL SELECT 43 AS nid, CAST(327.27619652811467 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_11 UNION ALL SELECT 44 AS nid, CAST(419.8117904787066 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_11) AS "Values"), 
"DT_Output_11" AS 
(SELECT "DT_node_lookup_11"."KEY" AS "KEY", "DT_node_lookup_11".node_id_2 AS node_id_2, "DT_node_data_11".nid AS nid, "DT_node_data_11"."E" AS "E" 
FROM "DT_node_lookup_11" LEFT OUTER JOIN "DT_node_data_11" ON "DT_node_lookup_11".node_id_2 = "DT_node_data_11".nid), 
"BAG_Model_11" AS 
(SELECT "DT_Output_11"."KEY" AS "KEY", "DT_Output_11"."E" AS "Estimator" 
FROM "DT_Output_11"), 
"DT_node_lookup_12" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_82 <= CAST(-0.084623269736767 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_43 <= CAST(-0.537606000900269 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= CAST(0.166019767522812 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_39 <= CAST(-0.101203627884388 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_52 <= CAST(1.500061631202698 AS DOUBLE PRECISION)) THEN 5 ELSE 6 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_64 <= CAST(0.96313464641571 AS DOUBLE PRECISION)) THEN 8 ELSE 9 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_78 <= CAST(0.717964470386505 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_46 <= CAST(-0.610464453697205 AS DOUBLE PRECISION)) THEN 12 ELSE 13 END ELSE 14 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= CAST(0.382092416286468 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_50 <= CAST(-0.576224684715271 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_28 <= CAST(1.107966780662537 AS DOUBLE PRECISION)) THEN 18 ELSE 19 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_59 <= CAST(0.165557652711868 AS DOUBLE PRECISION)) THEN 21 ELSE 22 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_23 <= CAST(-0.060199797153473 AS DOUBLE PRECISION)) THEN 24 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_83 <= CAST(0.140277937054634 AS DOUBLE PRECISION)) THEN 26 ELSE 27 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_96 <= CAST(0.774296641349792 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_37 <= CAST(0.663441061973572 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_93 <= CAST(1.636881709098816 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_60 <= CAST(-0.81667149066925 AS DOUBLE PRECISION)) THEN 32 ELSE 33 END ELSE 34 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_93 <= CAST(0.607947587966919 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_59 <= CAST(1.289028882980347 AS DOUBLE PRECISION)) THEN 37 ELSE 38 END ELSE 39 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_18 <= CAST(0.557729244232178 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_88 <= CAST(0.136185735464096 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_16 <= CAST(-0.446245968341827 AS DOUBLE PRECISION)) THEN 43 ELSE 44 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_69 <= CAST(-0.199769616127014 AS DOUBLE PRECISION)) THEN 46 ELSE 47 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_53 <= CAST(1.318069934844971 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_34 <= CAST(0.414112329483032 AS DOUBLE PRECISION)) THEN 50 ELSE 51 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_57 <= CAST(-0.911201596260071 AS DOUBLE PRECISION)) THEN 53 ELSE 54 END END END END END AS node_id_2 
FROM tmp_20180516114106_codegen_pl3sj0_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte_12 AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data_12" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS DOUBLE PRECISION) AS "E" 
FROM (SELECT 5 AS nid, CAST(-290.52672487497273 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_12 UNION ALL SELECT 6 AS nid, CAST(-327.50301874204285 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_12 UNION ALL SELECT 8 AS nid, CAST(-224.55702393888157 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_12 UNION ALL SELECT 9 AS nid, CAST(-168.59217754616355 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_12 UNION ALL SELECT 12 AS nid, CAST(-309.3283157350161 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_12 UNION ALL SELECT 13 AS nid, CAST(-346.08771203820476 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_12 UNION ALL SELECT 14 AS nid, CAST(-454.8215873712685 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_12 UNION ALL SELECT 18 AS nid, CAST(-196.71122136378426 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_12 UNION ALL SELECT 19 AS nid, CAST(-280.96508601336274 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_12 UNION ALL SELECT 21 AS nid, CAST(-78.70066663565564 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_12 UNION ALL SELECT 22 AS nid, CAST(1.27981031761107 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_12 UNION ALL SELECT 24 AS nid, CAST(215.90083761986222 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_12 UNION ALL SELECT 26 AS nid, CAST(112.97620976665738 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_12 UNION ALL SELECT 27 AS nid, CAST(75.33652615813574 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_12 UNION ALL SELECT 32 AS nid, CAST(269.99164447428086 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_12 UNION ALL SELECT 33 AS nid, CAST(155.62750531878524 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_12 UNION ALL SELECT 34 AS nid, CAST(-140.57351311758325 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_12 UNION ALL SELECT 37 AS nid, CAST(309.0690189611862 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_12 UNION ALL SELECT 38 AS nid, CAST(233.33694106574703 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_12 UNION ALL SELECT 39 AS nid, CAST(419.8117904787066 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_12 UNION ALL SELECT 43 AS nid, CAST(-35.64678210528627 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_12 UNION ALL SELECT 44 AS nid, CAST(-101.25602253534423 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_12 UNION ALL SELECT 46 AS nid, CAST(-202.60833883427068 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_12 UNION ALL SELECT 47 AS nid, CAST(-172.78010697974267 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_12 UNION ALL SELECT 50 AS nid, CAST(94.43377409338842 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_12 UNION ALL SELECT 51 AS nid, CAST(38.19976422974275 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_12 UNION ALL SELECT 53 AS nid, CAST(278.8145316391315 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_12 UNION ALL SELECT 54 AS nid, CAST(212.81710450150229 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_12) AS "Values"), 
"DT_Output_12" AS 
(SELECT "DT_node_lookup_12"."KEY" AS "KEY", "DT_node_lookup_12".node_id_2 AS node_id_2, "DT_node_data_12".nid AS nid, "DT_node_data_12"."E" AS "E" 
FROM "DT_node_lookup_12" LEFT OUTER JOIN "DT_node_data_12" ON "DT_node_lookup_12".node_id_2 = "DT_node_data_12".nid), 
"BAG_Model_12" AS 
(SELECT "DT_Output_12"."KEY" AS "KEY", "DT_Output_12"."E" AS "Estimator" 
FROM "DT_Output_12"), 
"DT_node_lookup_13" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_82 <= CAST(-0.259913891553879 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= CAST(0.096522182226181 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_101 <= CAST(0.088417716324329 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_91 <= CAST(1.261785507202148 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_35 <= CAST(0.509258985519409 AS DOUBLE PRECISION)) THEN 5 ELSE 6 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_75 <= CAST(0.019435286521912 AS DOUBLE PRECISION)) THEN 8 ELSE 9 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_45 <= CAST(0.840297043323517 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_32 <= CAST(-1.04037070274353 AS DOUBLE PRECISION)) THEN 12 ELSE 13 END ELSE 14 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_21 <= CAST(0.184136062860489 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_62 <= CAST(-0.463719516992569 AS DOUBLE PRECISION)) THEN 17 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= CAST(1.1819908618927 AS DOUBLE PRECISION)) THEN 19 ELSE 20 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_25 <= CAST(0.106578722596169 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_29 <= CAST(-0.576454222202301 AS DOUBLE PRECISION)) THEN 23 ELSE 24 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_92 <= CAST(1.194059133529663 AS DOUBLE PRECISION)) THEN 26 ELSE 27 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_64 <= CAST(0.686750888824463 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_33 <= CAST(-0.953830599784851 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_96 <= CAST(-0.906700015068054 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_14 <= CAST(0.021323040127754 AS DOUBLE PRECISION)) THEN 32 ELSE 33 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_67 <= CAST(-0.685863733291626 AS DOUBLE PRECISION)) THEN 35 ELSE 36 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_83 <= CAST(0.979911744594574 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_51 <= CAST(-0.19223552942276 AS DOUBLE PRECISION)) THEN 39 ELSE 40 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= CAST(-0.16080030798912 AS DOUBLE PRECISION)) THEN 42 ELSE 43 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_67 <= CAST(-0.032901208847761 AS DOUBLE PRECISION)) THEN 45 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_48 <= CAST(-0.749872446060181 AS DOUBLE PRECISION)) THEN 47 ELSE 48 END END END END AS node_id_2 
FROM tmp_20180516114106_codegen_pl3sj0_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte_13 AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data_13" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS DOUBLE PRECISION) AS "E" 
FROM (SELECT 5 AS nid, CAST(-341.44153871416427 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_13 UNION ALL SELECT 6 AS nid, CAST(-295.97057316324384 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_13 UNION ALL SELECT 8 AS nid, CAST(-454.8215873712685 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_13 UNION ALL SELECT 9 AS nid, CAST(-430.7322420182495 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_13 UNION ALL SELECT 12 AS nid, CAST(-286.40448669256784 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_13 UNION ALL SELECT 13 AS nid, CAST(-188.15991839969823 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_13 UNION ALL SELECT 14 AS nid, CAST(-436.89308608869476 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_13 UNION ALL SELECT 17 AS nid, CAST(215.90083761986224 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_13 UNION ALL SELECT 19 AS nid, CAST(112.97620976665738 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_13 UNION ALL SELECT 20 AS nid, CAST(136.92680038236625 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_13 UNION ALL SELECT 23 AS nid, CAST(-55.13785992768933 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_13 UNION ALL SELECT 24 AS nid, CAST(-86.11645147491663 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_13 UNION ALL SELECT 26 AS nid, CAST(-234.62886265006682 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_13 UNION ALL SELECT 27 AS nid, CAST(-196.1762239786283 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_13 UNION ALL SELECT 32 AS nid, CAST(62.605323392817695 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_13 UNION ALL SELECT 33 AS nid, CAST(48.423335696929506 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_13 UNION ALL SELECT 35 AS nid, CAST(-30.698977731486934 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_13 UNION ALL SELECT 36 AS nid, CAST(-7.810017402615081 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_13 UNION ALL SELECT 39 AS nid, CAST(171.65996346917316 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_13 UNION ALL SELECT 40 AS nid, CAST(279.4711843291981 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_13 UNION ALL SELECT 42 AS nid, CAST(17.17034736773776 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_13 UNION ALL SELECT 43 AS nid, CAST(123.38369915785242 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_13 UNION ALL SELECT 45 AS nid, CAST(-202.60833883427068 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_13 UNION ALL SELECT 47 AS nid, CAST(-140.57351311758325 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_13 UNION ALL SELECT 48 AS nid, CAST(-107.89147253045782 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_13) AS "Values"), 
"DT_Output_13" AS 
(SELECT "DT_node_lookup_13"."KEY" AS "KEY", "DT_node_lookup_13".node_id_2 AS node_id_2, "DT_node_data_13".nid AS nid, "DT_node_data_13"."E" AS "E" 
FROM "DT_node_lookup_13" LEFT OUTER JOIN "DT_node_data_13" ON "DT_node_lookup_13".node_id_2 = "DT_node_data_13".nid), 
"BAG_Model_13" AS 
(SELECT "DT_Output_13"."KEY" AS "KEY", "DT_Output_13"."E" AS "Estimator" 
FROM "DT_Output_13"), 
"DT_node_lookup_14" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_82 <= CAST(-0.590545773506164 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_43 <= CAST(0.149359479546547 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_98 <= CAST(0.495387375354767 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_75 <= CAST(1.148308157920838 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_101 <= CAST(0.300549268722534 AS DOUBLE PRECISION)) THEN 5 ELSE 6 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_92 <= CAST(-0.707808971405029 AS DOUBLE PRECISION)) THEN 8 ELSE 9 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_67 <= CAST(-0.530253410339356 AS DOUBLE PRECISION)) THEN 11 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_35 <= CAST(0.509258985519409 AS DOUBLE PRECISION)) THEN 13 ELSE 14 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_69 <= CAST(0.031991302967072 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_62 <= CAST(0.544256031513214 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_59 <= CAST(0.434406280517578 AS DOUBLE PRECISION)) THEN 18 ELSE 19 END ELSE 20 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_40 <= CAST(0.635357022285461 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_16 <= CAST(-0.181904494762421 AS DOUBLE PRECISION)) THEN 23 ELSE 24 END ELSE 25 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= CAST(-0.526540160179138 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_71 <= CAST(-0.937195539474487 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= CAST(-0.077034130692482 AS DOUBLE PRECISION)) THEN 29 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_77 <= CAST(0.441163957118988 AS DOUBLE PRECISION)) THEN 31 ELSE 32 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_69 <= CAST(-0.125143274664879 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_41 <= CAST(0.373538553714752 AS DOUBLE PRECISION)) THEN 35 ELSE 36 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_12 <= CAST(1.228076696395874 AS DOUBLE PRECISION)) THEN 38 ELSE 39 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_27 <= CAST(-0.234227120876312 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_36 <= CAST(0.488365799188614 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_92 <= CAST(-0.270826280117035 AS DOUBLE PRECISION)) THEN 43 ELSE 44 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_28 <= CAST(-1.608126640319824 AS DOUBLE PRECISION)) THEN 46 ELSE 47 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_22 <= CAST(0.833512544631958 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= CAST(-0.369562447071075 AS DOUBLE PRECISION)) THEN 50 ELSE 51 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_32 <= CAST(0.597603678703308 AS DOUBLE PRECISION)) THEN 53 ELSE 54 END END END END END AS node_id_2 
FROM tmp_20180516114106_codegen_pl3sj0_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte_14 AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data_14" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS DOUBLE PRECISION) AS "E" 
FROM (SELECT 5 AS nid, CAST(-214.98883224347765 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_14 UNION ALL SELECT 6 AS nid, CAST(-284.4633246044624 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_14 UNION ALL SELECT 8 AS nid, CAST(-86.11645147491663 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_14 UNION ALL SELECT 9 AS nid, CAST(-146.53732849176905 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_14 UNION ALL SELECT 11 AS nid, CAST(-436.89308608869476 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_14 UNION ALL SELECT 13 AS nid, CAST(-353.62548092119135 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_14 UNION ALL SELECT 14 AS nid, CAST(-306.858269739786 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_14 UNION ALL SELECT 18 AS nid, CAST(88.55609207780488 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_14 UNION ALL SELECT 19 AS nid, CAST(39.44300011869663 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_14 UNION ALL SELECT 20 AS nid, CAST(183.77184322024888 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_14 UNION ALL SELECT 23 AS nid, CAST(-55.13785992768933 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_14 UNION ALL SELECT 24 AS nid, CAST(-42.10296471792358 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_14 UNION ALL SELECT 25 AS nid, CAST(-102.26347334362194 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_14 UNION ALL SELECT 29 AS nid, CAST(174.05588768325575 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_14 UNION ALL SELECT 31 AS nid, CAST(128.74971924769997 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_14 UNION ALL SELECT 32 AS nid, CAST(122.37894790928654 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_14 UNION ALL SELECT 35 AS nid, CAST(-202.60833883427068 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_14 UNION ALL SELECT 36 AS nid, CAST(-107.89147253045782 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_14 UNION ALL SELECT 38 AS nid, CAST(-41.939115048387436 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_14 UNION ALL SELECT 39 AS nid, CAST(-0.79254830324239 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_14 UNION ALL SELECT 43 AS nid, CAST(44.301154020511476 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_14 UNION ALL SELECT 44 AS nid, CAST(153.7549600229956 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_14 UNION ALL SELECT 46 AS nid, CAST(-140.57351311758325 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_14 UNION ALL SELECT 47 AS nid, CAST(-80.53816715091685 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_14 UNION ALL SELECT 50 AS nid, CAST(206.01053015362913 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_14 UNION ALL SELECT 51 AS nid, CAST(116.06946235932064 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_14 UNION ALL SELECT 53 AS nid, CAST(307.43229907746235 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_14 UNION ALL SELECT 54 AS nid, CAST(242.60253144460478 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_14) AS "Values"), 
"DT_Output_14" AS 
(SELECT "DT_node_lookup_14"."KEY" AS "KEY", "DT_node_lookup_14".node_id_2 AS node_id_2, "DT_node_data_14".nid AS nid, "DT_node_data_14"."E" AS "E" 
FROM "DT_node_lookup_14" LEFT OUTER JOIN "DT_node_data_14" ON "DT_node_lookup_14".node_id_2 = "DT_node_data_14".nid), 
"BAG_Model_14" AS 
(SELECT "DT_Output_14"."KEY" AS "KEY", "DT_Output_14"."E" AS "Estimator" 
FROM "DT_Output_14"), 
"DT_node_lookup_15" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_82 <= CAST(-0.313182681798935 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_65 <= CAST(0.46510922908783 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_43 <= CAST(-0.02538556419313 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_55 <= CAST(0.265811949968338 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_29 <= CAST(-1.759693264961243 AS DOUBLE PRECISION)) THEN 5 ELSE 6 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= CAST(0.00525901094079 AS DOUBLE PRECISION)) THEN 8 ELSE 9 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_62 <= CAST(-0.655123591423035 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_25 <= CAST(0.649115800857544 AS DOUBLE PRECISION)) THEN 12 ELSE 13 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_34 <= CAST(-1.174285531044006 AS DOUBLE PRECISION)) THEN 15 ELSE 16 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_79 <= CAST(-0.091022476553917 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_68 <= CAST(-0.151894375681877 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= CAST(-0.348288029432297 AS DOUBLE PRECISION)) THEN 20 ELSE 21 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_25 <= CAST(-0.628522634506226 AS DOUBLE PRECISION)) THEN 23 ELSE 24 END END ELSE 25 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_51 <= CAST(0.182922422885895 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_84 <= CAST(1.099877119064331 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= CAST(-0.339666187763214 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_88 <= CAST(-0.224995642900467 AS DOUBLE PRECISION)) THEN 30 ELSE 31 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_44 <= CAST(-0.395299732685089 AS DOUBLE PRECISION)) THEN 33 ELSE 34 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_98 <= CAST(0.184494599699974 AS DOUBLE PRECISION)) THEN 36 ELSE 37 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_39 <= CAST(0.856528699398041 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_65 <= CAST(1.586039781570434 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_30 <= CAST(0.335671782493591 AS DOUBLE PRECISION)) THEN 41 ELSE 42 END ELSE 43 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_64 <= CAST(-0.238338887691498 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_87 <= CAST(0.150128170847893 AS DOUBLE PRECISION)) THEN 46 ELSE 47 END ELSE 48 END END END END AS node_id_2 
FROM tmp_20180516114106_codegen_pl3sj0_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte_15 AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data_15" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS DOUBLE PRECISION) AS "E" 
FROM (SELECT 5 AS nid, CAST(-454.8215873712685 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_15 UNION ALL SELECT 6 AS nid, CAST(-334.10621943314277 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_15 UNION ALL SELECT 8 AS nid, CAST(-274.89673878290427 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_15 UNION ALL SELECT 9 AS nid, CAST(-224.590020378306 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_15 UNION ALL SELECT 12 AS nid, CAST(-96.88113272072017 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_15 UNION ALL SELECT 13 AS nid, CAST(-196.1762239786283 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_15 UNION ALL SELECT 15 AS nid, CAST(114.45423222726873 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_15 UNION ALL SELECT 16 AS nid, CAST(39.44300011869663 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_15 UNION ALL SELECT 20 AS nid, CAST(75.33652615813574 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_15 UNION ALL SELECT 21 AS nid, CAST(128.45059602359285 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_15 UNION ALL SELECT 23 AS nid, CAST(215.90083761986222 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_15 UNION ALL SELECT 24 AS nid, CAST(183.77184322024888 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_15 UNION ALL SELECT 25 AS nid, CAST(-146.53732849176905 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_15 UNION ALL SELECT 30 AS nid, CAST(-85.0536912170113 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_15 UNION ALL SELECT 31 AS nid, CAST(-156.67681004866296 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_15 UNION ALL SELECT 33 AS nid, CAST(-45.02051393489445 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_15 UNION ALL SELECT 34 AS nid, CAST(9.318352261389075 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_15 UNION ALL SELECT 36 AS nid, CAST(114.66116147528915 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_15 UNION ALL SELECT 37 AS nid, CAST(327.27619652811467 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_15 UNION ALL SELECT 41 AS nid, CAST(221.83964375999088 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_15 UNION ALL SELECT 42 AS nid, CAST(289.3899809084267 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_15 UNION ALL SELECT 43 AS nid, CAST(62.605323392817695 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_15 UNION ALL SELECT 46 AS nid, CAST(92.552824375175 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_15 UNION ALL SELECT 47 AS nid, CAST(144.72865942116238 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_15 UNION ALL SELECT 48 AS nid, CAST(-4.904591434376485 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_15) AS "Values"), 
"DT_Output_15" AS 
(SELECT "DT_node_lookup_15"."KEY" AS "KEY", "DT_node_lookup_15".node_id_2 AS node_id_2, "DT_node_data_15".nid AS nid, "DT_node_data_15"."E" AS "E" 
FROM "DT_node_lookup_15" LEFT OUTER JOIN "DT_node_data_15" ON "DT_node_lookup_15".node_id_2 = "DT_node_data_15".nid), 
"BAG_Model_15" AS 
(SELECT "DT_Output_15"."KEY" AS "KEY", "DT_Output_15"."E" AS "Estimator" 
FROM "DT_Output_15")
 SELECT "BAG_B1"."KEY", "BAG_B1"."Estimator" 
FROM (SELECT "BAG_esu_1"."KEY" AS "KEY", "BAG_esu_1"."Estimator" AS "Estimator" 
FROM (SELECT "BAG_Model_10"."KEY" AS "KEY", "BAG_Model_10"."Estimator" AS "Estimator" 
FROM "BAG_Model_10" UNION ALL SELECT "BAG_Model_11"."KEY" AS "KEY", "BAG_Model_11"."Estimator" AS "Estimator" 
FROM "BAG_Model_11" UNION ALL SELECT "BAG_Model_12"."KEY" AS "KEY", "BAG_Model_12"."Estimator" AS "Estimator" 
FROM "BAG_Model_12" UNION ALL SELECT "BAG_Model_13"."KEY" AS "KEY", "BAG_Model_13"."Estimator" AS "Estimator" 
FROM "BAG_Model_13" UNION ALL SELECT "BAG_Model_14"."KEY" AS "KEY", "BAG_Model_14"."Estimator" AS "Estimator" 
FROM "BAG_Model_14" UNION ALL SELECT "BAG_Model_15"."KEY" AS "KEY", "BAG_Model_15"."Estimator" AS "Estimator" 
FROM "BAG_Model_15") AS "BAG_esu_1") AS "BAG_B1") AS "U"

-- Code For temporary table tmp_20180516114106_codegen_ucguau_bag_avg part 1. Create 


CREATE GLOBAL TEMPORARY TABLE tmp_20180516114106_codegen_ucguau_bag_avg  (
	"KEY" BIGINT, 
	"Estimator" DOUBLE PRECISION
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table tmp_20180516114106_codegen_ucguau_bag_avg part 2. Populate

INSERT INTO tmp_20180516114106_codegen_ucguau_bag_avg ("KEY", "Estimator") SELECT "U"."KEY", "U"."Estimator" 
FROM (WITH "BAG_Union" AS 
(SELECT "BAG_EnsembleUnion"."KEY" AS "KEY", "BAG_EnsembleUnion"."Estimator" AS "Estimator" 
FROM (SELECT "BAG_B0"."KEY" AS "KEY", "BAG_B0"."Estimator" AS "Estimator" 
FROM tmp_20180516114106_codegen_bplamk_bag_b0 AS "BAG_B0" UNION ALL SELECT "BAG_B1"."KEY" AS "KEY", "BAG_B1"."Estimator" AS "Estimator" 
FROM tmp_20180516114106_codegen_j4nbi5_bag_b1 AS "BAG_B1") AS "BAG_EnsembleUnion")
 SELECT "BAG_avg"."KEY", "BAG_avg"."Estimator" 
FROM (SELECT "T"."KEY" AS "KEY", CAST("T"."Estimator" AS DOUBLE PRECISION) AS "Estimator" 
FROM (SELECT "BAG_Union"."KEY" AS "KEY", avg(CAST("BAG_Union"."Estimator" AS DOUBLE PRECISION)) AS "Estimator" 
FROM "BAG_Union" GROUP BY "BAG_Union"."KEY") AS "T") AS "BAG_avg") AS "U"

-- Model deployment code

SELECT "BAG_avg"."KEY" AS "KEY", "BAG_avg"."Estimator" AS "Estimator" 
FROM tmp_20180516114106_codegen_ucguau_bag_avg AS "BAG_avg"