-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2018

-- Model : BaggingRegressor_Pipeline
-- Dataset : freidman1
-- Database : mssql


-- This SQL code can contain one or more statements, to be executed in the order they appear in this file.



-- Code For temporary table ##TMP_20180516120617_CODEGEN_YDAGWE_ADS_imp_1_OUT part 1. Create 


CREATE TABLE ##TMP_20180516120617_CODEGEN_YDAGWE_ADS_imp_1_OUT (
	[KEY] BIGINT NULL, 
	impter_2 FLOAT(53) NULL, 
	impter_3 FLOAT(53) NULL, 
	impter_4 FLOAT(53) NULL, 
	impter_5 FLOAT(53) NULL, 
	impter_6 FLOAT(53) NULL, 
	impter_7 FLOAT(53) NULL, 
	impter_8 FLOAT(53) NULL, 
	impter_9 FLOAT(53) NULL, 
	impter_10 FLOAT(53) NULL, 
	impter_11 FLOAT(53) NULL
)



-- Code For temporary table ##TMP_20180516120617_CODEGEN_YDAGWE_ADS_imp_1_OUT part 2. Populate

INSERT INTO ##TMP_20180516120617_CODEGEN_YDAGWE_ADS_imp_1_OUT ([KEY], impter_2, impter_3, impter_4, impter_5, impter_6, impter_7, impter_8, impter_9, impter_10, impter_11) SELECT [ADS_imp_1_OUT].[KEY], [ADS_imp_1_OUT].impter_2, [ADS_imp_1_OUT].impter_3, [ADS_imp_1_OUT].impter_4, [ADS_imp_1_OUT].impter_5, [ADS_imp_1_OUT].impter_6, [ADS_imp_1_OUT].impter_7, [ADS_imp_1_OUT].impter_8, [ADS_imp_1_OUT].impter_9, [ADS_imp_1_OUT].impter_10, [ADS_imp_1_OUT].impter_11 
FROM (SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_0] IS NULL) THEN 0.5629846484809591 ELSE [ADS].[Feature_0] END AS impter_2, CASE WHEN ([ADS].[Feature_1] IS NULL) THEN 0.45606442423375926 ELSE [ADS].[Feature_1] END AS impter_3, CASE WHEN ([ADS].[Feature_2] IS NULL) THEN 0.47113817481474773 ELSE [ADS].[Feature_2] END AS impter_4, CASE WHEN ([ADS].[Feature_3] IS NULL) THEN 0.533968020094518 ELSE [ADS].[Feature_3] END AS impter_5, CASE WHEN ([ADS].[Feature_4] IS NULL) THEN 0.4780936262373869 ELSE [ADS].[Feature_4] END AS impter_6, CASE WHEN ([ADS].[Feature_5] IS NULL) THEN 0.5682849224172329 ELSE [ADS].[Feature_5] END AS impter_7, CASE WHEN ([ADS].[Feature_6] IS NULL) THEN 0.47914374714280494 ELSE [ADS].[Feature_6] END AS impter_8, CASE WHEN ([ADS].[Feature_7] IS NULL) THEN 0.4594152477223205 ELSE [ADS].[Feature_7] END AS impter_9, CASE WHEN ([ADS].[Feature_8] IS NULL) THEN 0.4901106996809651 ELSE [ADS].[Feature_8] END AS impter_10, CASE WHEN ([ADS].[Feature_9] IS NULL) THEN 0.5378806933707533 ELSE [ADS].[Feature_9] END AS impter_11 
FROM freidman1 AS [ADS]) AS [ADS_imp_1_OUT]

-- Code For temporary table ##TMP_20180516120617_CODEGEN_Y4QXQ4_ADS_sca_2_OUT part 1. Create 


CREATE TABLE ##TMP_20180516120617_CODEGEN_Y4QXQ4_ADS_sca_2_OUT (
	[KEY] BIGINT NULL, 
	scaler_2 FLOAT NULL, 
	scaler_3 FLOAT NULL, 
	scaler_4 FLOAT NULL, 
	scaler_5 FLOAT NULL, 
	scaler_6 FLOAT NULL, 
	scaler_7 FLOAT NULL, 
	scaler_8 FLOAT NULL, 
	scaler_9 FLOAT NULL, 
	scaler_10 FLOAT NULL, 
	scaler_11 FLOAT NULL
)



-- Code For temporary table ##TMP_20180516120617_CODEGEN_Y4QXQ4_ADS_sca_2_OUT part 2. Populate

INSERT INTO ##TMP_20180516120617_CODEGEN_Y4QXQ4_ADS_sca_2_OUT ([KEY], scaler_2, scaler_3, scaler_4, scaler_5, scaler_6, scaler_7, scaler_8, scaler_9, scaler_10, scaler_11) SELECT [ADS_sca_2_OUT].[KEY], [ADS_sca_2_OUT].scaler_2, [ADS_sca_2_OUT].scaler_3, [ADS_sca_2_OUT].scaler_4, [ADS_sca_2_OUT].scaler_5, [ADS_sca_2_OUT].scaler_6, [ADS_sca_2_OUT].scaler_7, [ADS_sca_2_OUT].scaler_8, [ADS_sca_2_OUT].scaler_9, [ADS_sca_2_OUT].scaler_10, [ADS_sca_2_OUT].scaler_11 
FROM (SELECT [ADS_imp_1_OUT].[KEY] AS [KEY], (CAST([ADS_imp_1_OUT].impter_2 AS FLOAT(53)) - 0.5629846484809591) / 0.2583714683396337 AS scaler_2, (CAST([ADS_imp_1_OUT].impter_3 AS FLOAT(53)) - 0.45606442423375926) / 0.2878721730712705 AS scaler_3, (CAST([ADS_imp_1_OUT].impter_4 AS FLOAT(53)) - 0.47113817481474773) / 0.3109216791553051 AS scaler_4, (CAST([ADS_imp_1_OUT].impter_5 AS FLOAT(53)) - 0.533968020094518) / 0.2826199867400281 AS scaler_5, (CAST([ADS_imp_1_OUT].impter_6 AS FLOAT(53)) - 0.4780936262373869) / 0.286140491317745 AS scaler_6, (CAST([ADS_imp_1_OUT].impter_7 AS FLOAT(53)) - 0.5682849224172329) / 0.29767408106451737 AS scaler_7, (CAST([ADS_imp_1_OUT].impter_8 AS FLOAT(53)) - 0.47914374714280494) / 0.2735314971431575 AS scaler_8, (CAST([ADS_imp_1_OUT].impter_9 AS FLOAT(53)) - 0.4594152477223205) / 0.28721149346998975 AS scaler_9, (CAST([ADS_imp_1_OUT].impter_10 AS FLOAT(53)) - 0.4901106996809651) / 0.2790486717322703 AS scaler_10, (CAST([ADS_imp_1_OUT].impter_11 AS FLOAT(53)) - 0.5378806933707533) / 0.2958192296543193 AS scaler_11 
FROM ##TMP_20180516120617_CODEGEN_YDAGWE_ADS_imp_1_OUT AS [ADS_imp_1_OUT]) AS [ADS_sca_2_OUT]

-- Code For temporary table ##TMP_20180516120617_CODEGEN_TJK2OE_BAG_B0 part 1. Create 


CREATE TABLE ##TMP_20180516120617_CODEGEN_TJK2OE_BAG_B0 (
	[KEY] BIGINT NULL, 
	[Estimator] FLOAT(53) NULL
)



-- Code For temporary table ##TMP_20180516120617_CODEGEN_TJK2OE_BAG_B0 part 2. Populate

WITH [DT_node_lookup] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_3 <= -0.5554684400558472) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_8 <= 0.07249260693788528) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_5 <= -1.0131055116653442) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_2 <= 0.5194752216339111) THEN 4 ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_6 <= -0.5465254187583923) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_6 <= -0.9904888868331909) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_4 <= -0.15859100222587585) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_3 <= -1.3994879722595215) THEN 13 ELSE 14 END END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_5 <= 0.8224952220916748) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_3 <= -0.8141056895256042) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_2 <= 0.7376105785369873) THEN 18 ELSE 19 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_3 <= -0.7081706523895264) THEN 21 ELSE 22 END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_8 <= 0.6220327615737915) THEN 24 ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_8 <= 1.2324196100234985) THEN 26 ELSE 27 END END END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_5 <= -0.8790078163146973) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_2 <= -0.6523176431655884) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_6 <= 0.8250467777252197) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_4 <= -0.37003713846206665) THEN 32 ELSE 33 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_6 <= 1.4400050640106201) THEN 35 ELSE 36 END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_10 <= 0.38361895084381104) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_6 <= 0.2582456171512604) THEN 39 ELSE 40 END ELSE 41 END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_5 <= 0.884007453918457) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_10 <= 0.26932352781295776) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_10 <= -0.09689275920391083) THEN 45 ELSE 46 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_9 <= -0.949830174446106) THEN 48 ELSE 49 END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_2 <= 0.11304868012666702) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_4 <= -0.2271086871623993) THEN 52 ELSE 53 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_8 <= 0.8534097671508789) THEN 55 ELSE 56 END END END END END AS node_id_2 
FROM ##TMP_20180516120617_CODEGEN_Y4QXQ4_ADS_sca_2_OUT AS [ADS_sca_2_OUT]), 
[DT_node_data] AS 
(SELECT [Values].nid AS nid, CAST([Values].[E] AS FLOAT(53)) AS [E] 
FROM (SELECT 4 AS nid, 8.06285010237755 AS [E] UNION ALL SELECT 6 AS nid, 5.293284001301807 AS [E] UNION ALL SELECT 7 AS nid, 6.2457102486321485 AS [E] UNION ALL SELECT 10 AS nid, 6.980046241948142 AS [E] UNION ALL SELECT 11 AS nid, 8.568626498210197 AS [E] UNION ALL SELECT 13 AS nid, 11.380993151416082 AS [E] UNION ALL SELECT 14 AS nid, 12.428643083555945 AS [E] UNION ALL SELECT 18 AS nid, 16.08254261562184 AS [E] UNION ALL SELECT 19 AS nid, 16.324769596540094 AS [E] UNION ALL SELECT 21 AS nid, 14.4669963696142 AS [E] UNION ALL SELECT 22 AS nid, 14.051184902745373 AS [E] UNION ALL SELECT 24 AS nid, 12.830344628983799 AS [E] UNION ALL SELECT 26 AS nid, 11.77602304541345 AS [E] UNION ALL SELECT 27 AS nid, 11.313518144724842 AS [E] UNION ALL SELECT 32 AS nid, 6.861453719338209 AS [E] UNION ALL SELECT 33 AS nid, 10.165017322239871 AS [E] UNION ALL SELECT 35 AS nid, 15.541797868565153 AS [E] UNION ALL SELECT 36 AS nid, 13.119756721377405 AS [E] UNION ALL SELECT 39 AS nid, 18.2506955183825 AS [E] UNION ALL SELECT 40 AS nid, 17.89244707919063 AS [E] UNION ALL SELECT 41 AS nid, 16.009611596379663 AS [E] UNION ALL SELECT 45 AS nid, 17.40946593852782 AS [E] UNION ALL SELECT 46 AS nid, 13.174202057525061 AS [E] UNION ALL SELECT 48 AS nid, 23.18131440832091 AS [E] UNION ALL SELECT 49 AS nid, 19.177023907550375 AS [E] UNION ALL SELECT 52 AS nid, 19.303788312018888 AS [E] UNION ALL SELECT 53 AS nid, 18.282515066510527 AS [E] UNION ALL SELECT 55 AS nid, 21.579545978049953 AS [E] UNION ALL SELECT 56 AS nid, 23.528047639538563 AS [E]) AS [Values]), 
[DT_Output] AS 
(SELECT [DT_node_lookup].[KEY] AS [KEY], [DT_node_lookup].node_id_2 AS node_id_2, [DT_node_data].nid AS nid, [DT_node_data].[E] AS [E] 
FROM [DT_node_lookup] LEFT OUTER JOIN [DT_node_data] ON [DT_node_lookup].node_id_2 = [DT_node_data].nid), 
[BAG_Model_0] AS 
(SELECT [DT_Output].[KEY] AS [KEY], [DT_Output].[E] AS [Estimator] 
FROM [DT_Output]), 
[DT_node_lookup_1] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_3 <= 0.3491400480270386) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_5 <= 0.2771869897842407) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_4 <= -0.6321609020233154) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_2 <= -0.05660967528820038) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_6 <= -0.6102498769760132) THEN 5 ELSE 6 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_5 <= -0.7796354293823242) THEN 8 ELSE 9 END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_8 <= -1.2744203805923462) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_2 <= 0.5011371970176697) THEN 12 ELSE 13 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_7 <= -1.1048519611358643) THEN 15 ELSE 16 END END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_3 <= -0.6435166597366333) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_8 <= 1.5058903694152832) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_8 <= 0.17773102223873138) THEN 20 ELSE 21 END ELSE 22 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_8 <= 0.4880903363227844) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_5 <= 1.4788615703582764) THEN 25 ELSE 26 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_4 <= 1.1697524785995483) THEN 28 ELSE 29 END END END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_5 <= 0.7374852299690247) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_7 <= -0.04169179126620293) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_5 <= 0.4819217324256897) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_4 <= 0.769920825958252) THEN 34 ELSE 35 END ELSE 36 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_11 <= -0.6820610761642456) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_10 <= 0.7851515412330627) THEN 39 ELSE 40 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_8 <= -0.12339046597480774) THEN 42 ELSE 43 END END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_9 <= -1.0851993560791016) THEN 45 ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_5 <= 1.6037161350250244) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_2 <= 0.7096204161643982) THEN 48 ELSE 49 END ELSE 50 END END END END AS node_id_2 
FROM ##TMP_20180516120617_CODEGEN_Y4QXQ4_ADS_sca_2_OUT AS [ADS_sca_2_OUT]), 
[DT_node_data_1] AS 
(SELECT [Values].nid AS nid, CAST([Values].[E] AS FLOAT(53)) AS [E] 
FROM (SELECT 5 AS nid, 12.071171804127433 AS [E] UNION ALL SELECT 6 AS nid, 13.146979389451232 AS [E] UNION ALL SELECT 8 AS nid, 18.2506955183825 AS [E] UNION ALL SELECT 9 AS nid, 16.08254261562184 AS [E] UNION ALL SELECT 12 AS nid, 12.760129264370008 AS [E] UNION ALL SELECT 13 AS nid, 12.123142001356333 AS [E] UNION ALL SELECT 15 AS nid, 10.351203945211374 AS [E] UNION ALL SELECT 16 AS nid, 7.423642581382579 AS [E] UNION ALL SELECT 20 AS nid, 9.767086782799772 AS [E] UNION ALL SELECT 21 AS nid, 12.605293329972511 AS [E] UNION ALL SELECT 22 AS nid, 18.493721395486528 AS [E] UNION ALL SELECT 25 AS nid, 18.207396885609956 AS [E] UNION ALL SELECT 26 AS nid, 15.308483991007721 AS [E] UNION ALL SELECT 28 AS nid, 21.340993370178953 AS [E] UNION ALL SELECT 29 AS nid, 23.693970395239383 AS [E] UNION ALL SELECT 34 AS nid, 19.36426348416223 AS [E] UNION ALL SELECT 35 AS nid, 20.13436784607212 AS [E] UNION ALL SELECT 36 AS nid, 18.10948375079814 AS [E] UNION ALL SELECT 39 AS nid, 17.857907243344265 AS [E] UNION ALL SELECT 40 AS nid, 18.250248044100616 AS [E] UNION ALL SELECT 42 AS nid, 16.00390059406837 AS [E] UNION ALL SELECT 43 AS nid, 16.914408313385564 AS [E] UNION ALL SELECT 45 AS nid, 18.900387696177468 AS [E] UNION ALL SELECT 48 AS nid, 22.53957472957775 AS [E] UNION ALL SELECT 49 AS nid, 23.76092016032117 AS [E] UNION ALL SELECT 50 AS nid, 25.24805848092261 AS [E]) AS [Values]), 
[DT_Output_1] AS 
(SELECT [DT_node_lookup_1].[KEY] AS [KEY], [DT_node_lookup_1].node_id_2 AS node_id_2, [DT_node_data_1].nid AS nid, [DT_node_data_1].[E] AS [E] 
FROM [DT_node_lookup_1] LEFT OUTER JOIN [DT_node_data_1] ON [DT_node_lookup_1].node_id_2 = [DT_node_data_1].nid), 
[BAG_Model_1] AS 
(SELECT [DT_Output_1].[KEY] AS [KEY], [DT_Output_1].[E] AS [Estimator] 
FROM [DT_Output_1]), 
[DT_node_lookup_2] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_3 <= -0.12853723764419556) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_5 <= -1.0131055116653442) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_9 <= 0.08022167533636093) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_7 <= -1.0812368392944336) THEN 4 ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_9 <= -0.9570851922035217) THEN 6 ELSE 7 END END ELSE 8 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_6 <= 1.0415067672729492) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_3 <= -0.7378084659576416) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_9 <= -0.20577767491340637) THEN 12 ELSE 13 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_6 <= -0.7141208648681641) THEN 15 ELSE 16 END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_11 <= 0.016009066253900528) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_11 <= -0.07252655923366547) THEN 19 ELSE 20 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_10 <= -0.7168996930122375) THEN 22 ELSE 23 END END END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_5 <= 0.8174906969070435) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_2 <= -1.0480525493621826) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_3 <= 0.7140388488769531) THEN 27 ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_4 <= 0.7786934971809387) THEN 29 ELSE 30 END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_7 <= -1.835197925567627) THEN 32 ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_5 <= -1.215186357498169) THEN 34 ELSE 35 END END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_2 <= -0.8964633345603943) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_11 <= -0.9529251456260681) THEN 38 ELSE 39 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_7 <= 1.1801438331604004) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_10 <= -0.35275885462760925) THEN 42 ELSE 43 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_11 <= -0.03137584030628204) THEN 45 ELSE 46 END END END END END AS node_id_2 
FROM ##TMP_20180516120617_CODEGEN_Y4QXQ4_ADS_sca_2_OUT AS [ADS_sca_2_OUT]), 
[DT_node_data_2] AS 
(SELECT [Values].nid AS nid, CAST([Values].[E] AS FLOAT(53)) AS [E] 
FROM (SELECT 4 AS nid, 9.735041217996262 AS [E] UNION ALL SELECT 6 AS nid, 6.861453719338209 AS [E] UNION ALL SELECT 7 AS nid, 7.809924090361902 AS [E] UNION ALL SELECT 8 AS nid, 5.293284001301807 AS [E] UNION ALL SELECT 12 AS nid, 8.314751977945186 AS [E] UNION ALL SELECT 13 AS nid, 11.639151859591639 AS [E] UNION ALL SELECT 15 AS nid, 12.071171804127433 AS [E] UNION ALL SELECT 16 AS nid, 13.702865836612794 AS [E] UNION ALL SELECT 19 AS nid, 18.332058017434036 AS [E] UNION ALL SELECT 20 AS nid, 23.693970395239383 AS [E] UNION ALL SELECT 22 AS nid, 11.380993151416082 AS [E] UNION ALL SELECT 23 AS nid, 15.00551178495008 AS [E] UNION ALL SELECT 27 AS nid, 7.219443350314415 AS [E] UNION ALL SELECT 29 AS nid, 14.536245187358322 AS [E] UNION ALL SELECT 30 AS nid, 12.423411759463056 AS [E] UNION ALL SELECT 32 AS nid, 10.181631174833692 AS [E] UNION ALL SELECT 34 AS nid, 16.165648310783745 AS [E] UNION ALL SELECT 35 AS nid, 18.81229911644796 AS [E] UNION ALL SELECT 38 AS nid, 15.308483991007721 AS [E] UNION ALL SELECT 39 AS nid, 19.303788312018888 AS [E] UNION ALL SELECT 42 AS nid, 21.485329031127737 AS [E] UNION ALL SELECT 43 AS nid, 22.965058271780993 AS [E] UNION ALL SELECT 45 AS nid, 24.713338273149652 AS [E] UNION ALL SELECT 46 AS nid, 25.24805848092261 AS [E]) AS [Values]), 
[DT_Output_2] AS 
(SELECT [DT_node_lookup_2].[KEY] AS [KEY], [DT_node_lookup_2].node_id_2 AS node_id_2, [DT_node_data_2].nid AS nid, [DT_node_data_2].[E] AS [E] 
FROM [DT_node_lookup_2] LEFT OUTER JOIN [DT_node_data_2] ON [DT_node_lookup_2].node_id_2 = [DT_node_data_2].nid), 
[BAG_Model_2] AS 
(SELECT [DT_Output_2].[KEY] AS [KEY], [DT_Output_2].[E] AS [Estimator] 
FROM [DT_Output_2]), 
[DT_node_lookup_3] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_3 <= -0.03575253114104271) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_5 <= -1.0502716302871704) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_3 <= -0.27085015177726746) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_7 <= -0.3291955888271332) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_4 <= 0.20176033675670624) THEN 5 ELSE 6 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_6 <= -0.0061066001653671265) THEN 8 ELSE 9 END END ELSE 10 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_5 <= 0.05798465013504028) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_9 <= -0.014901649206876755) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_6 <= 0.15673837065696716) THEN 14 ELSE 15 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_8 <= -0.4783819615840912) THEN 17 ELSE 18 END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_6 <= 0.9304661750793457) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_9 <= 1.75655198097229) THEN 21 ELSE 22 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_5 <= 0.4164460003376007) THEN 24 ELSE 25 END END END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_5 <= 0.7781765460968018) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_3 <= 1.2855579853057861) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_3 <= 0.309597909450531) THEN 29 ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_8 <= 0.6467043161392212) THEN 31 ELSE 32 END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_7 <= 1.1817528009414673) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_5 <= 0.23155492544174194) THEN 35 ELSE 36 END ELSE 37 END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_7 <= 1.2456412315368652) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_11 <= -0.34223273396492004) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_2 <= 0.9161916971206665) THEN 41 ELSE 42 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_9 <= 1.5312511920928955) THEN 44 ELSE 45 END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_6 <= 0.7342626452445984) THEN 47 ELSE 48 END END END END AS node_id_2 
FROM ##TMP_20180516120617_CODEGEN_Y4QXQ4_ADS_sca_2_OUT AS [ADS_sca_2_OUT]), 
[DT_node_data_3] AS 
(SELECT [Values].nid AS nid, CAST([Values].[E] AS FLOAT(53)) AS [E] 
FROM (SELECT 5 AS nid, 5.293284001301807 AS [E] UNION ALL SELECT 6 AS nid, 5.794379036456321 AS [E] UNION ALL SELECT 8 AS nid, 6.2457102486321485 AS [E] UNION ALL SELECT 9 AS nid, 6.861453719338209 AS [E] UNION ALL SELECT 10 AS nid, 9.735041217996262 AS [E] UNION ALL SELECT 14 AS nid, 11.965441788885121 AS [E] UNION ALL SELECT 15 AS nid, 12.99988090237494 AS [E] UNION ALL SELECT 17 AS nid, 7.610112545313168 AS [E] UNION ALL SELECT 18 AS nid, 11.380993151416082 AS [E] UNION ALL SELECT 21 AS nid, 12.8303446289838 AS [E] UNION ALL SELECT 22 AS nid, 14.051184902745371 AS [E] UNION ALL SELECT 24 AS nid, 16.324769596540094 AS [E] UNION ALL SELECT 25 AS nid, 18.250669484185913 AS [E] UNION ALL SELECT 29 AS nid, 10.131789617052231 AS [E] UNION ALL SELECT 31 AS nid, 16.224569841397432 AS [E] UNION ALL SELECT 32 AS nid, 18.469624066966187 AS [E] UNION ALL SELECT 35 AS nid, 19.42123596960235 AS [E] UNION ALL SELECT 36 AS nid, 20.199033606227683 AS [E] UNION ALL SELECT 37 AS nid, 23.18131440832091 AS [E] UNION ALL SELECT 41 AS nid, 23.127226282137368 AS [E] UNION ALL SELECT 42 AS nid, 21.774000353025308 AS [E] UNION ALL SELECT 44 AS nid, 21.289420890735993 AS [E] UNION ALL SELECT 45 AS nid, 19.303788312018888 AS [E] UNION ALL SELECT 47 AS nid, 25.24805848092261 AS [E] UNION ALL SELECT 48 AS nid, 24.713338273149652 AS [E]) AS [Values]), 
[DT_Output_3] AS 
(SELECT [DT_node_lookup_3].[KEY] AS [KEY], [DT_node_lookup_3].node_id_2 AS node_id_2, [DT_node_data_3].nid AS nid, [DT_node_data_3].[E] AS [E] 
FROM [DT_node_lookup_3] LEFT OUTER JOIN [DT_node_data_3] ON [DT_node_lookup_3].node_id_2 = [DT_node_data_3].nid), 
[BAG_Model_3] AS 
(SELECT [DT_Output_3].[KEY] AS [KEY], [DT_Output_3].[E] AS [Estimator] 
FROM [DT_Output_3]), 
[DT_node_lookup_4] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_3 <= -0.5990101099014282) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_6 <= 0.5279591083526611) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_5 <= -0.7714440822601318) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_9 <= 0.1872316300868988) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_3 <= -0.8406822681427002) THEN 5 ELSE 6 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_3 <= -1.2438207864761353) THEN 8 ELSE 9 END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_7 <= 0.5764994621276855) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_9 <= 1.7547411918640137) THEN 12 ELSE 13 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_5 <= 0.25439614057540894) THEN 15 ELSE 16 END END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_4 <= -0.5396069288253784) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_5 <= 0.4527852237224579) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_4 <= -1.056471586227417) THEN 20 ELSE 21 END ELSE 22 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_2 <= 0.8696907758712769) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_9 <= 1.1233227252960205) THEN 25 ELSE 26 END ELSE 27 END END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_7 <= -1.8065319061279297) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_9 <= -0.7506086230278015) THEN 30 ELSE 31 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_9 <= 1.0257534980773926) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_4 <= -0.6289365291595459) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_2 <= 0.3154761791229248) THEN 35 ELSE 36 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_11 <= 1.0744843482971191) THEN 38 ELSE 39 END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_8 <= 0.6242293119430542) THEN 41 ELSE 42 END END END END AS node_id_2 
FROM ##TMP_20180516120617_CODEGEN_Y4QXQ4_ADS_sca_2_OUT AS [ADS_sca_2_OUT]), 
[DT_node_data_4] AS 
(SELECT [Values].nid AS nid, CAST([Values].[E] AS FLOAT(53)) AS [E] 
FROM (SELECT 5 AS nid, 7.364680799546883 AS [E] UNION ALL SELECT 6 AS nid, 8.06285010237755 AS [E] UNION ALL SELECT 8 AS nid, 6.2457102486321485 AS [E] UNION ALL SELECT 9 AS nid, 5.293284001301807 AS [E] UNION ALL SELECT 12 AS nid, 11.712345783819897 AS [E] UNION ALL SELECT 13 AS nid, 14.051184902745373 AS [E] UNION ALL SELECT 15 AS nid, 8.070929168501522 AS [E] UNION ALL SELECT 16 AS nid, 11.134361230474887 AS [E] UNION ALL SELECT 20 AS nid, 16.08254261562184 AS [E] UNION ALL SELECT 21 AS nid, 16.302556715766507 AS [E] UNION ALL SELECT 22 AS nid, 18.332058017434036 AS [E] UNION ALL SELECT 25 AS nid, 11.380993151416082 AS [E] UNION ALL SELECT 26 AS nid, 12.830344628983799 AS [E] UNION ALL SELECT 27 AS nid, 14.4669963696142 AS [E] UNION ALL SELECT 30 AS nid, 10.181631174833692 AS [E] UNION ALL SELECT 31 AS nid, 9.735041217996262 AS [E] UNION ALL SELECT 35 AS nid, 15.627632254735069 AS [E] UNION ALL SELECT 36 AS nid, 17.18166575438495 AS [E] UNION ALL SELECT 38 AS nid, 17.66939098159554 AS [E] UNION ALL SELECT 39 AS nid, 19.622091887272106 AS [E] UNION ALL SELECT 41 AS nid, 24.713338273149652 AS [E] UNION ALL SELECT 42 AS nid, 23.693970395239386 AS [E]) AS [Values]), 
[DT_Output_4] AS 
(SELECT [DT_node_lookup_4].[KEY] AS [KEY], [DT_node_lookup_4].node_id_2 AS node_id_2, [DT_node_data_4].nid AS nid, [DT_node_data_4].[E] AS [E] 
FROM [DT_node_lookup_4] LEFT OUTER JOIN [DT_node_data_4] ON [DT_node_lookup_4].node_id_2 = [DT_node_data_4].nid), 
[BAG_Model_4] AS 
(SELECT [DT_Output_4].[KEY] AS [KEY], [DT_Output_4].[E] AS [Estimator] 
FROM [DT_Output_4]), 
[DT_node_lookup_5] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_3 <= -0.8096771240234375) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_5 <= -0.576497495174408) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_6 <= 0.1831812560558319) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_2 <= 0.7228257656097412) THEN 4 ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_3 <= -1.2411799430847168) THEN 6 ELSE 7 END END ELSE 8 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_5 <= 1.2488571405410767) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_4 <= -1.3473491668701172) THEN 11 ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_8 <= 0.7360506057739258) THEN 13 ELSE 14 END END ELSE 15 END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_5 <= -0.9059769511222839) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_6 <= -0.10462668538093567) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_3 <= 0.8780072927474976) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_7 <= -1.4467586278915405) THEN 20 ELSE 21 END ELSE 22 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_10 <= 1.0918446779251099) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_7 <= 0.8859214782714844) THEN 25 ELSE 26 END ELSE 27 END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_5 <= 0.8174906969070435) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_3 <= 1.1969408988952637) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_11 <= -0.03035035729408264) THEN 31 ELSE 32 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_8 <= -0.19910401105880737) THEN 34 ELSE 35 END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_3 <= 1.3564010858535767) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_2 <= 0.018691375851631165) THEN 38 ELSE 39 END ELSE 40 END END END END AS node_id_2 
FROM ##TMP_20180516120617_CODEGEN_Y4QXQ4_ADS_sca_2_OUT AS [ADS_sca_2_OUT]), 
[DT_node_data_5] AS 
(SELECT [Values].nid AS nid, CAST([Values].[E] AS FLOAT(53)) AS [E] 
FROM (SELECT 4 AS nid, 5.293284001301807 AS [E] UNION ALL SELECT 6 AS nid, 6.2457102486321485 AS [E] UNION ALL SELECT 7 AS nid, 6.980046241948142 AS [E] UNION ALL SELECT 8 AS nid, 12.760129264370008 AS [E] UNION ALL SELECT 11 AS nid, 16.08254261562184 AS [E] UNION ALL SELECT 13 AS nid, 11.172579189661457 AS [E] UNION ALL SELECT 14 AS nid, 7.732429808148176 AS [E] UNION ALL SELECT 15 AS nid, 18.493721395486528 AS [E] UNION ALL SELECT 20 AS nid, 10.032767855887881 AS [E] UNION ALL SELECT 21 AS nid, 6.717762881401152 AS [E] UNION ALL SELECT 22 AS nid, 15.701003452436051 AS [E] UNION ALL SELECT 25 AS nid, 15.853146527014331 AS [E] UNION ALL SELECT 26 AS nid, 18.01186322558792 AS [E] UNION ALL SELECT 27 AS nid, 10.131789617052231 AS [E] UNION ALL SELECT 31 AS nid, 17.987275977175763 AS [E] UNION ALL SELECT 32 AS nid, 14.082726073768537 AS [E] UNION ALL SELECT 34 AS nid, 23.18131440832091 AS [E] UNION ALL SELECT 35 AS nid, 20.022207690036204 AS [E] UNION ALL SELECT 38 AS nid, 18.793151689264707 AS [E] UNION ALL SELECT 39 AS nid, 22.509175946519836 AS [E] UNION ALL SELECT 40 AS nid, 17.41761147731962 AS [E]) AS [Values]), 
[DT_Output_5] AS 
(SELECT [DT_node_lookup_5].[KEY] AS [KEY], [DT_node_lookup_5].node_id_2 AS node_id_2, [DT_node_data_5].nid AS nid, [DT_node_data_5].[E] AS [E] 
FROM [DT_node_lookup_5] LEFT OUTER JOIN [DT_node_data_5] ON [DT_node_lookup_5].node_id_2 = [DT_node_data_5].nid), 
[BAG_Model_5] AS 
(SELECT [DT_Output_5].[KEY] AS [KEY], [DT_Output_5].[E] AS [Estimator] 
FROM [DT_Output_5]), 
[DT_node_lookup_6] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_5 <= 0.062120385468006134) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_3 <= -0.13997435569763184) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_5 <= -1.0131055116653442) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_8 <= -0.15321852266788483) THEN 4 ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_2 <= -0.7897611856460571) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_10 <= -0.13970722258090973) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_3 <= -0.9607077836990356) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_7 <= 0.1118408590555191) THEN 13 ELSE 14 END END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_2 <= -0.9460362792015076) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_6 <= 1.117976427078247) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_6 <= 0.17573609948158264) THEN 18 ELSE 19 END ELSE 20 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_8 <= 0.7470073699951172) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_7 <= 0.22373317182064056) THEN 23 ELSE 24 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_3 <= 0.6402660012245178) THEN 26 ELSE 27 END END END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_4 <= -0.9005289077758789) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_2 <= 0.9161916971206665) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_2 <= 0.7096204161643982) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_11 <= -0.9496104717254639) THEN 32 ELSE 33 END ELSE 34 END ELSE 35 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_6 <= 1.5835411548614502) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_11 <= 1.349806547164917) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_4 <= -0.788087010383606) THEN 39 ELSE 40 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_7 <= 1.2108368873596191) THEN 42 ELSE 43 END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_6 <= 1.63889479637146) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_6 <= 1.6251914501190186) THEN 46 ELSE 47 END ELSE 48 END END END END AS node_id_2 
FROM ##TMP_20180516120617_CODEGEN_Y4QXQ4_ADS_sca_2_OUT AS [ADS_sca_2_OUT]), 
[DT_node_data_6] AS 
(SELECT [Values].nid AS nid, CAST([Values].[E] AS FLOAT(53)) AS [E] 
FROM (SELECT 4 AS nid, 5.293284001301807 AS [E] UNION ALL SELECT 6 AS nid, 6.434623846185454 AS [E] UNION ALL SELECT 7 AS nid, 8.15720539774271 AS [E] UNION ALL SELECT 10 AS nid, 10.373600980867929 AS [E] UNION ALL SELECT 11 AS nid, 12.096423229355418 AS [E] UNION ALL SELECT 13 AS nid, 13.174202057525061 AS [E] UNION ALL SELECT 14 AS nid, 14.4669963696142 AS [E] UNION ALL SELECT 18 AS nid, 7.219443350314415 AS [E] UNION ALL SELECT 19 AS nid, 10.131789617052231 AS [E] UNION ALL SELECT 20 AS nid, 13.119756721377405 AS [E] UNION ALL SELECT 23 AS nid, 15.574742691250146 AS [E] UNION ALL SELECT 24 AS nid, 17.737499497537332 AS [E] UNION ALL SELECT 26 AS nid, 18.096145408394158 AS [E] UNION ALL SELECT 27 AS nid, 20.014322406211242 AS [E] UNION ALL SELECT 32 AS nid, 22.76939496981568 AS [E] UNION ALL SELECT 33 AS nid, 23.105796890378507 AS [E] UNION ALL SELECT 34 AS nid, 23.760920160321167 AS [E] UNION ALL SELECT 35 AS nid, 21.774000353025308 AS [E] UNION ALL SELECT 39 AS nid, 15.76903957881257 AS [E] UNION ALL SELECT 40 AS nid, 18.337722623191294 AS [E] UNION ALL SELECT 42 AS nid, 10.596890487725023 AS [E] UNION ALL SELECT 43 AS nid, 14.536245187358322 AS [E] UNION ALL SELECT 46 AS nid, 24.713338273149652 AS [E] UNION ALL SELECT 47 AS nid, 23.693970395239383 AS [E] UNION ALL SELECT 48 AS nid, 20.199033606227683 AS [E]) AS [Values]), 
[DT_Output_6] AS 
(SELECT [DT_node_lookup_6].[KEY] AS [KEY], [DT_node_lookup_6].node_id_2 AS node_id_2, [DT_node_data_6].nid AS nid, [DT_node_data_6].[E] AS [E] 
FROM [DT_node_lookup_6] LEFT OUTER JOIN [DT_node_data_6] ON [DT_node_lookup_6].node_id_2 = [DT_node_data_6].nid), 
[BAG_Model_6] AS 
(SELECT [DT_Output_6].[KEY] AS [KEY], [DT_Output_6].[E] AS [Estimator] 
FROM [DT_Output_6]), 
[DT_node_lookup_7] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_3 <= -0.03575253114104271) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_5 <= -0.18559622764587402) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_4 <= -0.6404086947441101) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_5 <= -0.5011763572692871) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_4 <= -1.0632535219192505) THEN 5 ELSE 6 END ELSE 7 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_4 <= 0.8416293859481812) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_7 <= -0.3291955888271332) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_4 <= 1.185806393623352) THEN 13 ELSE 14 END END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_3 <= -0.8259739875793457) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_8 <= 1.4722307920455933) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_7 <= 0.8419815301895142) THEN 18 ELSE 19 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_7 <= -0.7220275402069092) THEN 21 ELSE 22 END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_2 <= 1.138234257698059) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_2 <= -0.08383416384458542) THEN 25 ELSE 26 END ELSE 27 END END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_5 <= -1.7781072854995728) THEN 29 ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_5 <= 0.7781765460968018) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_3 <= 1.2873224020004272) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_8 <= 0.5515375733375549) THEN 33 ELSE 34 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_7 <= 1.1817528009414673) THEN 36 ELSE 37 END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_2 <= -0.8964633345603943) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_5 <= 1.5127599239349365) THEN 40 ELSE 41 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_11 <= 0.36913496255874634) THEN 43 ELSE 44 END END END END END AS node_id_2 
FROM ##TMP_20180516120617_CODEGEN_Y4QXQ4_ADS_sca_2_OUT AS [ADS_sca_2_OUT]), 
[DT_node_data_7] AS 
(SELECT [Values].nid AS nid, CAST([Values].[E] AS FLOAT(53)) AS [E] 
FROM (SELECT 5 AS nid, 12.071171804127433 AS [E] UNION ALL SELECT 6 AS nid, 13.119756721377405 AS [E] UNION ALL SELECT 7 AS nid, 16.08254261562184 AS [E] UNION ALL SELECT 10 AS nid, 5.293284001301807 AS [E] UNION ALL SELECT 11 AS nid, 7.575599020340126 AS [E] UNION ALL SELECT 13 AS nid, 9.735041217996262 AS [E] UNION ALL SELECT 14 AS nid, 12.335471089027559 AS [E] UNION ALL SELECT 18 AS nid, 11.833322202255506 AS [E] UNION ALL SELECT 19 AS nid, 11.074642259058237 AS [E] UNION ALL SELECT 21 AS nid, 16.324769596540094 AS [E] UNION ALL SELECT 22 AS nid, 18.493721395486528 AS [E] UNION ALL SELECT 25 AS nid, 13.999316904945474 AS [E] UNION ALL SELECT 26 AS nid, 16.956060242405563 AS [E] UNION ALL SELECT 27 AS nid, 23.693970395239383 AS [E] UNION ALL SELECT 29 AS nid, 7.219443350314415 AS [E] UNION ALL SELECT 33 AS nid, 15.823589913478115 AS [E] UNION ALL SELECT 34 AS nid, 18.644157604195122 AS [E] UNION ALL SELECT 36 AS nid, 19.895593516075195 AS [E] UNION ALL SELECT 37 AS nid, 23.18131440832091 AS [E] UNION ALL SELECT 40 AS nid, 19.303788312018888 AS [E] UNION ALL SELECT 41 AS nid, 15.308483991007721 AS [E] UNION ALL SELECT 43 AS nid, 23.619861343403777 AS [E] UNION ALL SELECT 44 AS nid, 20.9730322314688 AS [E]) AS [Values]), 
[DT_Output_7] AS 
(SELECT [DT_node_lookup_7].[KEY] AS [KEY], [DT_node_lookup_7].node_id_2 AS node_id_2, [DT_node_data_7].nid AS nid, [DT_node_data_7].[E] AS [E] 
FROM [DT_node_lookup_7] LEFT OUTER JOIN [DT_node_data_7] ON [DT_node_lookup_7].node_id_2 = [DT_node_data_7].nid), 
[BAG_Model_7] AS 
(SELECT [DT_Output_7].[KEY] AS [KEY], [DT_Output_7].[E] AS [Estimator] 
FROM [DT_Output_7]), 
[DT_node_lookup_8] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_3 <= -0.03575253114104271) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_5 <= 0.9240188598632812) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_6 <= 0.41291773319244385) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_4 <= 1.4309563636779785) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_7 <= -1.251055121421814) THEN 5 ELSE 6 END ELSE 7 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_3 <= -1.170607328414917) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_7 <= -0.37493905425071716) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_5 <= -0.4642179608345032) THEN 13 ELSE 14 END END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_2 <= 0.6866031885147095) THEN 16 ELSE 17 END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_8 <= -0.5067865252494812) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_6 <= 0.30062711238861084) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_2 <= 0.4320812225341797) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_3 <= 1.7078063488006592) THEN 22 ELSE 23 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_5 <= 0.930440366268158) THEN 25 ELSE 26 END END ELSE 27 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_7 <= 1.1817528009414673) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_9 <= -0.013723235577344894) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_11 <= 0.25312742590904236) THEN 31 ELSE 32 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_9 <= 0.5485169291496277) THEN 34 ELSE 35 END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_2 <= 0.4201740622520447) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_9 <= -1.0806388854980469) THEN 38 ELSE 39 END ELSE 40 END END END END AS node_id_2 
FROM ##TMP_20180516120617_CODEGEN_Y4QXQ4_ADS_sca_2_OUT AS [ADS_sca_2_OUT]), 
[DT_node_data_8] AS 
(SELECT [Values].nid AS nid, CAST([Values].[E] AS FLOAT(53)) AS [E] 
FROM (SELECT 5 AS nid, 10.008711284080814 AS [E] UNION ALL SELECT 6 AS nid, 7.52831454952446 AS [E] UNION ALL SELECT 7 AS nid, 14.051184902745373 AS [E] UNION ALL SELECT 10 AS nid, 11.380993151416082 AS [E] UNION ALL SELECT 11 AS nid, 12.47011560883487 AS [E] UNION ALL SELECT 13 AS nid, 14.130186457555002 AS [E] UNION ALL SELECT 14 AS nid, 16.624893912196864 AS [E] UNION ALL SELECT 16 AS nid, 18.282515066510527 AS [E] UNION ALL SELECT 17 AS nid, 23.693970395239383 AS [E] UNION ALL SELECT 22 AS nid, 15.566708961204787 AS [E] UNION ALL SELECT 23 AS nid, 17.36059041334922 AS [E] UNION ALL SELECT 25 AS nid, 18.420188988452704 AS [E] UNION ALL SELECT 26 AS nid, 21.774000353025308 AS [E] UNION ALL SELECT 27 AS nid, 10.131789617052231 AS [E] UNION ALL SELECT 31 AS nid, 17.86130306565547 AS [E] UNION ALL SELECT 32 AS nid, 20.1190033129871 AS [E] UNION ALL SELECT 34 AS nid, 22.53957472957775 AS [E] UNION ALL SELECT 35 AS nid, 20.077653186022523 AS [E] UNION ALL SELECT 38 AS nid, 23.18131440832091 AS [E] UNION ALL SELECT 39 AS nid, 25.069818411664954 AS [E] UNION ALL SELECT 40 AS nid, 20.70189537226964 AS [E]) AS [Values]), 
[DT_Output_8] AS 
(SELECT [DT_node_lookup_8].[KEY] AS [KEY], [DT_node_lookup_8].node_id_2 AS node_id_2, [DT_node_data_8].nid AS nid, [DT_node_data_8].[E] AS [E] 
FROM [DT_node_lookup_8] LEFT OUTER JOIN [DT_node_data_8] ON [DT_node_lookup_8].node_id_2 = [DT_node_data_8].nid), 
[BAG_Model_8] AS 
(SELECT [DT_Output_8].[KEY] AS [KEY], [DT_Output_8].[E] AS [Estimator] 
FROM [DT_Output_8]), 
[DT_node_lookup_9] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_3 <= -0.5990101099014282) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_6 <= 0.2855916917324066) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_5 <= -0.22010701894760132) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_4 <= -0.452738881111145) THEN 4 ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_8 <= 1.3535292148590088) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_4 <= 1.292008638381958) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_9 <= 0.17041367292404175) THEN 10 ELSE 11 END ELSE 12 END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_7 <= -0.625080943107605) THEN 14 ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_3 <= -0.8119465112686157) THEN 16 ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_3 <= -0.6828646659851074) THEN 18 ELSE 19 END END END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_5 <= -1.7781072854995728) THEN 21 ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_8 <= -0.50656658411026) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_2 <= -0.7435633540153503) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_2 <= -0.8922260999679565) THEN 25 ELSE 26 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_5 <= -1.2755718231201172) THEN 28 ELSE 29 END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_5 <= 0.8508428931236267) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_5 <= 0.6644933819770813) THEN 32 ELSE 33 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_7 <= -0.35087767243385315) THEN 35 ELSE 36 END END END END END AS node_id_2 
FROM ##TMP_20180516120617_CODEGEN_Y4QXQ4_ADS_sca_2_OUT AS [ADS_sca_2_OUT]), 
[DT_node_data_9] AS 
(SELECT [Values].nid AS nid, CAST([Values].[E] AS FLOAT(53)) AS [E] 
FROM (SELECT 4 AS nid, 5.293284001301807 AS [E] UNION ALL SELECT 6 AS nid, 7.749586961860047 AS [E] UNION ALL SELECT 7 AS nid, 10.045203605952587 AS [E] UNION ALL SELECT 10 AS nid, 11.43259401781266 AS [E] UNION ALL SELECT 11 AS nid, 10.412823354461922 AS [E] UNION ALL SELECT 12 AS nid, 14.051184902745373 AS [E] UNION ALL SELECT 14 AS nid, 16.324769596540094 AS [E] UNION ALL SELECT 16 AS nid, 12.760129264370008 AS [E] UNION ALL SELECT 18 AS nid, 14.4669963696142 AS [E] UNION ALL SELECT 19 AS nid, 14.772563754565986 AS [E] UNION ALL SELECT 21 AS nid, 7.219443350314415 AS [E] UNION ALL SELECT 25 AS nid, 14.561843015621898 AS [E] UNION ALL SELECT 26 AS nid, 10.181631174833692 AS [E] UNION ALL SELECT 28 AS nid, 15.822162309088977 AS [E] UNION ALL SELECT 29 AS nid, 18.085402316627057 AS [E] UNION ALL SELECT 32 AS nid, 18.302143717746425 AS [E] UNION ALL SELECT 33 AS nid, 12.423411759463056 AS [E] UNION ALL SELECT 35 AS nid, 18.360699894669253 AS [E] UNION ALL SELECT 36 AS nid, 23.00158348784386 AS [E]) AS [Values]), 
[DT_Output_9] AS 
(SELECT [DT_node_lookup_9].[KEY] AS [KEY], [DT_node_lookup_9].node_id_2 AS node_id_2, [DT_node_data_9].nid AS nid, [DT_node_data_9].[E] AS [E] 
FROM [DT_node_lookup_9] LEFT OUTER JOIN [DT_node_data_9] ON [DT_node_lookup_9].node_id_2 = [DT_node_data_9].nid), 
[BAG_Model_9] AS 
(SELECT [DT_Output_9].[KEY] AS [KEY], [DT_Output_9].[E] AS [Estimator] 
FROM [DT_Output_9])
 INSERT INTO ##TMP_20180516120617_CODEGEN_TJK2OE_BAG_B0 ([KEY], [Estimator]) SELECT [BAG_B0].[KEY], [BAG_B0].[Estimator] 
FROM (SELECT [BAG_esu_0].[KEY] AS [KEY], [BAG_esu_0].[Estimator] AS [Estimator] 
FROM (SELECT [BAG_Model_0].[KEY] AS [KEY], [BAG_Model_0].[Estimator] AS [Estimator] 
FROM [BAG_Model_0] UNION ALL SELECT [BAG_Model_1].[KEY] AS [KEY], [BAG_Model_1].[Estimator] AS [Estimator] 
FROM [BAG_Model_1] UNION ALL SELECT [BAG_Model_2].[KEY] AS [KEY], [BAG_Model_2].[Estimator] AS [Estimator] 
FROM [BAG_Model_2] UNION ALL SELECT [BAG_Model_3].[KEY] AS [KEY], [BAG_Model_3].[Estimator] AS [Estimator] 
FROM [BAG_Model_3] UNION ALL SELECT [BAG_Model_4].[KEY] AS [KEY], [BAG_Model_4].[Estimator] AS [Estimator] 
FROM [BAG_Model_4] UNION ALL SELECT [BAG_Model_5].[KEY] AS [KEY], [BAG_Model_5].[Estimator] AS [Estimator] 
FROM [BAG_Model_5] UNION ALL SELECT [BAG_Model_6].[KEY] AS [KEY], [BAG_Model_6].[Estimator] AS [Estimator] 
FROM [BAG_Model_6] UNION ALL SELECT [BAG_Model_7].[KEY] AS [KEY], [BAG_Model_7].[Estimator] AS [Estimator] 
FROM [BAG_Model_7] UNION ALL SELECT [BAG_Model_8].[KEY] AS [KEY], [BAG_Model_8].[Estimator] AS [Estimator] 
FROM [BAG_Model_8] UNION ALL SELECT [BAG_Model_9].[KEY] AS [KEY], [BAG_Model_9].[Estimator] AS [Estimator] 
FROM [BAG_Model_9]) AS [BAG_esu_0]) AS [BAG_B0]

-- Code For temporary table ##TMP_20180516120617_CODEGEN_UJA3FR_BAG_B1 part 1. Create 


CREATE TABLE ##TMP_20180516120617_CODEGEN_UJA3FR_BAG_B1 (
	[KEY] BIGINT NULL, 
	[Estimator] FLOAT(53) NULL
)



-- Code For temporary table ##TMP_20180516120617_CODEGEN_UJA3FR_BAG_B1 part 2. Populate

WITH [DT_node_lookup_10] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_3 <= -0.12853723764419556) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_5 <= -1.0131055116653442) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_9 <= 0.05892374366521835) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_2 <= -0.08258597552776337) THEN 4 ELSE 5 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_9 <= 0.38449516892433167) THEN 7 ELSE 8 END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_6 <= 0.6631695628166199) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_3 <= -0.6702880263328552) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_4 <= 0.5810590386390686) THEN 12 ELSE 13 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_6 <= -0.4942489564418793) THEN 15 ELSE 16 END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_6 <= 1.6327390670776367) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_9 <= -0.16896472871303558) THEN 19 ELSE 20 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_10 <= -0.33393269777297974) THEN 22 ELSE 23 END END END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_2 <= -1.0020184516906738) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_5 <= -0.744059681892395) THEN 26 ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_8 <= 0.8338518142700195) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_7 <= 1.3265424966812134) THEN 29 ELSE 30 END ELSE 31 END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_5 <= 0.7374852299690247) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_5 <= -0.9310081601142883) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_7 <= 0.8859214782714844) THEN 35 ELSE 36 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_10 <= -0.08968852460384369) THEN 38 ELSE 39 END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_2 <= 1.0331192016601562) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_3 <= 0.26171770691871643) THEN 42 ELSE 43 END ELSE 44 END END END END AS node_id_2 
FROM ##TMP_20180516120617_CODEGEN_Y4QXQ4_ADS_sca_2_OUT AS [ADS_sca_2_OUT]), 
[DT_node_data_10] AS 
(SELECT [Values].nid AS nid, CAST([Values].[E] AS FLOAT(53)) AS [E] 
FROM (SELECT 4 AS nid, 9.735041217996262 AS [E] UNION ALL SELECT 5 AS nid, 8.06285010237755 AS [E] UNION ALL SELECT 7 AS nid, 6.2457102486321485 AS [E] UNION ALL SELECT 8 AS nid, 5.293284001301807 AS [E] UNION ALL SELECT 12 AS nid, 10.048769889779829 AS [E] UNION ALL SELECT 13 AS nid, 12.53510619869998 AS [E] UNION ALL SELECT 15 AS nid, 15.922558108080853 AS [E] UNION ALL SELECT 16 AS nid, 13.612693480135217 AS [E] UNION ALL SELECT 19 AS nid, 18.331686787952787 AS [E] UNION ALL SELECT 20 AS nid, 16.155880649003397 AS [E] UNION ALL SELECT 22 AS nid, 11.380993151416082 AS [E] UNION ALL SELECT 23 AS nid, 14.4669963696142 AS [E] UNION ALL SELECT 26 AS nid, 7.219443350314415 AS [E] UNION ALL SELECT 29 AS nid, 14.922364589183022 AS [E] UNION ALL SELECT 30 AS nid, 12.423411759463056 AS [E] UNION ALL SELECT 31 AS nid, 19.303788312018888 AS [E] UNION ALL SELECT 35 AS nid, 15.88980266327039 AS [E] UNION ALL SELECT 36 AS nid, 18.01186322558792 AS [E] UNION ALL SELECT 38 AS nid, 17.874300962401314 AS [E] UNION ALL SELECT 39 AS nid, 19.429536876108994 AS [E] UNION ALL SELECT 42 AS nid, 21.557496861602132 AS [E] UNION ALL SELECT 43 AS nid, 23.18686483419098 AS [E] UNION ALL SELECT 44 AS nid, 17.41761147731962 AS [E]) AS [Values]), 
[DT_Output_10] AS 
(SELECT [DT_node_lookup_10].[KEY] AS [KEY], [DT_node_lookup_10].node_id_2 AS node_id_2, [DT_node_data_10].nid AS nid, [DT_node_data_10].[E] AS [E] 
FROM [DT_node_lookup_10] LEFT OUTER JOIN [DT_node_data_10] ON [DT_node_lookup_10].node_id_2 = [DT_node_data_10].nid), 
[BAG_Model_10] AS 
(SELECT [DT_Output_10].[KEY] AS [KEY], [DT_Output_10].[E] AS [Estimator] 
FROM [DT_Output_10]), 
[DT_node_lookup_11] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_3 <= -0.2825087904930115) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_6 <= 0.8974297046661377) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_5 <= -0.2676679491996765) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_5 <= -0.5801640748977661) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_5 <= -1.4128466844558716) THEN 5 ELSE 6 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_11 <= 0.465839684009552) THEN 8 ELSE 9 END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_3 <= -0.7602905631065369) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_8 <= -0.5940361022949219) THEN 12 ELSE 13 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_3 <= -0.557915210723877) THEN 15 ELSE 16 END END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_2 <= 1.230002522468567) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_9 <= -0.16896472871303558) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_9 <= -0.4717315435409546) THEN 20 ELSE 21 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_4 <= -0.6285172700881958) THEN 23 ELSE 24 END END ELSE 25 END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_5 <= -0.9059769511222839) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_2 <= -0.7435633540153503) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_4 <= -0.2935824394226074) THEN 29 ELSE 30 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_2 <= 0.4624776840209961) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_3 <= 1.2680851221084595) THEN 33 ELSE 34 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_6 <= 0.2582456171512604) THEN 36 ELSE 37 END END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_4 <= 1.2787377834320068) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_4 <= -0.7650327682495117) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_9 <= 0.5485169291496277) THEN 41 ELSE 42 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_7 <= 1.2519030570983887) THEN 44 ELSE 45 END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_8 <= 0.8262866735458374) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_2 <= -0.2754516303539276) THEN 48 ELSE 49 END ELSE 50 END END END END AS node_id_2 
FROM ##TMP_20180516120617_CODEGEN_Y4QXQ4_ADS_sca_2_OUT AS [ADS_sca_2_OUT]), 
[DT_node_data_11] AS 
(SELECT [Values].nid AS nid, CAST([Values].[E] AS FLOAT(53)) AS [E] 
FROM (SELECT 5 AS nid, 5.543831518879064 AS [E] UNION ALL SELECT 6 AS nid, 6.900984560208187 AS [E] UNION ALL SELECT 8 AS nid, 8.240178848678195 AS [E] UNION ALL SELECT 9 AS nid, 7.732429808148176 AS [E] UNION ALL SELECT 12 AS nid, 12.007616742372795 AS [E] UNION ALL SELECT 13 AS nid, 10.928547663367409 AS [E] UNION ALL SELECT 15 AS nid, 14.291644520018911 AS [E] UNION ALL SELECT 16 AS nid, 15.922558108080853 AS [E] UNION ALL SELECT 20 AS nid, 18.412889706460284 AS [E] UNION ALL SELECT 21 AS nid, 18.0076175728853 AS [E] UNION ALL SELECT 23 AS nid, 16.08254261562184 AS [E] UNION ALL SELECT 24 AS nid, 14.4669963696142 AS [E] UNION ALL SELECT 25 AS nid, 23.693970395239383 AS [E] UNION ALL SELECT 29 AS nid, 10.181631174833692 AS [E] UNION ALL SELECT 30 AS nid, 7.219443350314415 AS [E] UNION ALL SELECT 33 AS nid, 16.301279206146624 AS [E] UNION ALL SELECT 34 AS nid, 15.701003452436051 AS [E] UNION ALL SELECT 36 AS nid, 18.2506955183825 AS [E] UNION ALL SELECT 37 AS nid, 17.89244707919063 AS [E] UNION ALL SELECT 41 AS nid, 21.998681389401533 AS [E] UNION ALL SELECT 42 AS nid, 19.399910016653497 AS [E] UNION ALL SELECT 44 AS nid, 18.364413185435847 AS [E] UNION ALL SELECT 45 AS nid, 14.536245187358322 AS [E] UNION ALL SELECT 48 AS nid, 25.24805848092261 AS [E] UNION ALL SELECT 49 AS nid, 24.713338273149652 AS [E] UNION ALL SELECT 50 AS nid, 20.069702085916557 AS [E]) AS [Values]), 
[DT_Output_11] AS 
(SELECT [DT_node_lookup_11].[KEY] AS [KEY], [DT_node_lookup_11].node_id_2 AS node_id_2, [DT_node_data_11].nid AS nid, [DT_node_data_11].[E] AS [E] 
FROM [DT_node_lookup_11] LEFT OUTER JOIN [DT_node_data_11] ON [DT_node_lookup_11].node_id_2 = [DT_node_data_11].nid), 
[BAG_Model_11] AS 
(SELECT [DT_Output_11].[KEY] AS [KEY], [DT_Output_11].[E] AS [Estimator] 
FROM [DT_Output_11]), 
[DT_node_lookup_12] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_3 <= -0.2825087904930115) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_6 <= 0.6482125520706177) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_5 <= -1.0327386856079102) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_6 <= -0.0061066001653671265) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_9 <= 0.38449516892433167) THEN 5 ELSE 6 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_8 <= 1.070573091506958) THEN 8 ELSE 9 END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_9 <= -1.4538482427597046) THEN 11 ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_10 <= 1.2846095561981201) THEN 13 ELSE 14 END END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_5 <= 0.1865026354789734) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_11 <= 0.0970342680811882) THEN 17 ELSE 18 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_6 <= 1.5923490524291992) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_5 <= 0.4527852237224579) THEN 21 ELSE 22 END ELSE 23 END END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_2 <= -0.720198392868042) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_8 <= 0.4229904115200043) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_6 <= -0.8707681894302368) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_6 <= -1.1550463438034058) THEN 28 ELSE 29 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_9 <= -0.3240154981613159) THEN 31 ELSE 32 END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_6 <= 0.32736143469810486) THEN 34 ELSE 35 END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_5 <= 0.021007142961025238) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_9 <= 0.5294337868690491) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_10 <= -0.2313607633113861) THEN 39 ELSE 40 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_3 <= 1.049616813659668) THEN 42 ELSE 43 END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_8 <= -0.35078954696655273) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_4 <= -0.88813316822052) THEN 46 ELSE 47 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_11 <= 0.36913496255874634) THEN 49 ELSE 50 END END END END END AS node_id_2 
FROM ##TMP_20180516120617_CODEGEN_Y4QXQ4_ADS_sca_2_OUT AS [ADS_sca_2_OUT]), 
[DT_node_data_12] AS 
(SELECT [Values].nid AS nid, CAST([Values].[E] AS FLOAT(53)) AS [E] 
FROM (SELECT 5 AS nid, 5.944822773848263 AS [E] UNION ALL SELECT 6 AS nid, 5.293284001301807 AS [E] UNION ALL SELECT 8 AS nid, 6.861453719338209 AS [E] UNION ALL SELECT 9 AS nid, 7.556998078346253 AS [E] UNION ALL SELECT 11 AS nid, 17.31914707358036 AS [E] UNION ALL SELECT 13 AS nid, 11.314205034713718 AS [E] UNION ALL SELECT 14 AS nid, 6.980046241948142 AS [E] UNION ALL SELECT 17 AS nid, 14.4669963696142 AS [E] UNION ALL SELECT 18 AS nid, 11.380993151416082 AS [E] UNION ALL SELECT 21 AS nid, 16.302556715766507 AS [E] UNION ALL SELECT 22 AS nid, 18.210253639672793 AS [E] UNION ALL SELECT 23 AS nid, 23.693970395239383 AS [E] UNION ALL SELECT 28 AS nid, 12.423411759463056 AS [E] UNION ALL SELECT 29 AS nid, 10.181631174833692 AS [E] UNION ALL SELECT 31 AS nid, 14.922364589183022 AS [E] UNION ALL SELECT 32 AS nid, 13.119756721377405 AS [E] UNION ALL SELECT 34 AS nid, 19.303788312018888 AS [E] UNION ALL SELECT 35 AS nid, 20.199033606227683 AS [E] UNION ALL SELECT 39 AS nid, 17.70550060214846 AS [E] UNION ALL SELECT 40 AS nid, 18.24404280151488 AS [E] UNION ALL SELECT 42 AS nid, 15.706521981990113 AS [E] UNION ALL SELECT 43 AS nid, 15.701003452436051 AS [E] UNION ALL SELECT 46 AS nid, 22.172158199741453 AS [E] UNION ALL SELECT 47 AS nid, 18.19066790267414 AS [E] UNION ALL SELECT 49 AS nid, 24.139984525512965 AS [E] UNION ALL SELECT 50 AS nid, 20.352628427170593 AS [E]) AS [Values]), 
[DT_Output_12] AS 
(SELECT [DT_node_lookup_12].[KEY] AS [KEY], [DT_node_lookup_12].node_id_2 AS node_id_2, [DT_node_data_12].nid AS nid, [DT_node_data_12].[E] AS [E] 
FROM [DT_node_lookup_12] LEFT OUTER JOIN [DT_node_data_12] ON [DT_node_lookup_12].node_id_2 = [DT_node_data_12].nid), 
[BAG_Model_12] AS 
(SELECT [DT_Output_12].[KEY] AS [KEY], [DT_Output_12].[E] AS [Estimator] 
FROM [DT_Output_12]), 
[DT_node_lookup_13] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_5 <= -0.22762641310691833) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_6 <= 0.3923843204975128) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_3 <= 0.6856510639190674) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_7 <= -1.1491718292236328) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_5 <= -0.6961230039596558) THEN 5 ELSE 6 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_7 <= 0.17647136747837067) THEN 8 ELSE 9 END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_3 <= 1.088045358657837) THEN 11 ELSE 12 END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_9 <= -0.36881089210510254) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_3 <= 0.42646485567092896) THEN 15 ELSE 16 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_8 <= -0.6228240728378296) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_8 <= -1.2992315292358398) THEN 19 ELSE 20 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_9 <= 0.23364531993865967) THEN 22 ELSE 23 END END END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_3 <= -1.0470510721206665) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_5 <= 1.2488571405410767) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_9 <= 1.0411399602890015) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_3 <= -1.5454225540161133) THEN 28 ELSE 29 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_9 <= 1.633896827697754) THEN 31 ELSE 32 END END ELSE 33 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_5 <= 0.7781765460968018) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_7 <= 1.3235833644866943) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_11 <= 1.0998644828796387) THEN 37 ELSE 38 END ELSE 39 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_2 <= -0.746195912361145) THEN 41 ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_11 <= -0.003324707970023155) THEN 43 ELSE 44 END END END END END AS node_id_2 
FROM ##TMP_20180516120617_CODEGEN_Y4QXQ4_ADS_sca_2_OUT AS [ADS_sca_2_OUT]), 
[DT_node_data_13] AS 
(SELECT [Values].nid AS nid, CAST([Values].[E] AS FLOAT(53)) AS [E] 
FROM (SELECT 5 AS nid, 10.090679462246287 AS [E] UNION ALL SELECT 6 AS nid, 12.110149452049107 AS [E] UNION ALL SELECT 8 AS nid, 6.470397311593706 AS [E] UNION ALL SELECT 9 AS nid, 7.706398964862851 AS [E] UNION ALL SELECT 11 AS nid, 16.914408313385564 AS [E] UNION ALL SELECT 12 AS nid, 15.701003452436051 AS [E] UNION ALL SELECT 15 AS nid, 18.237613821788198 AS [E] UNION ALL SELECT 16 AS nid, 17.89244707919063 AS [E] UNION ALL SELECT 19 AS nid, 12.760129264370008 AS [E] UNION ALL SELECT 20 AS nid, 13.119756721377405 AS [E] UNION ALL SELECT 22 AS nid, 15.541797868565153 AS [E] UNION ALL SELECT 23 AS nid, 14.4669963696142 AS [E] UNION ALL SELECT 28 AS nid, 10.596890487725023 AS [E] UNION ALL SELECT 29 AS nid, 10.20209310032856 AS [E] UNION ALL SELECT 31 AS nid, 12.109886588685942 AS [E] UNION ALL SELECT 32 AS nid, 12.830344628983799 AS [E] UNION ALL SELECT 33 AS nid, 18.493721395486528 AS [E] UNION ALL SELECT 37 AS nid, 17.357028202362972 AS [E] UNION ALL SELECT 38 AS nid, 19.75716175860891 AS [E] UNION ALL SELECT 39 AS nid, 12.423411759463056 AS [E] UNION ALL SELECT 41 AS nid, 15.308483991007721 AS [E] UNION ALL SELECT 43 AS nid, 23.439746026652113 AS [E] UNION ALL SELECT 44 AS nid, 20.88265327840241 AS [E]) AS [Values]), 
[DT_Output_13] AS 
(SELECT [DT_node_lookup_13].[KEY] AS [KEY], [DT_node_lookup_13].node_id_2 AS node_id_2, [DT_node_data_13].nid AS nid, [DT_node_data_13].[E] AS [E] 
FROM [DT_node_lookup_13] LEFT OUTER JOIN [DT_node_data_13] ON [DT_node_lookup_13].node_id_2 = [DT_node_data_13].nid), 
[BAG_Model_13] AS 
(SELECT [DT_Output_13].[KEY] AS [KEY], [DT_Output_13].[E] AS [Estimator] 
FROM [DT_Output_13]), 
[DT_node_lookup_14] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_3 <= -0.016872774809598923) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_5 <= -0.2676679491996765) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_4 <= -0.6136064529418945) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_5 <= -0.7556153535842896) THEN 4 ELSE 5 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_7 <= -1.2620937824249268) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_2 <= 0.3755684792995453) THEN 8 ELSE 9 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_7 <= 0.17647136747837067) THEN 11 ELSE 12 END END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_6 <= 0.6631695628166199) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_9 <= -1.4538482427597046) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_10 <= -0.19554531574249268) THEN 16 ELSE 17 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_11 <= 1.1886308193206787) THEN 19 ELSE 20 END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_10 <= -1.224485993385315) THEN 22 ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_2 <= 0.659967839717865) THEN 24 ELSE 25 END END END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_2 <= -0.6842066049575806) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_6 <= 0.8059834241867065) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_7 <= -0.8062174320220947) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_6 <= -0.2856832444667816) THEN 30 ELSE 31 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_8 <= -0.13003459572792053) THEN 33 ELSE 34 END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_3 <= 1.2654917240142822) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_6 <= 1.3440638780593872) THEN 37 ELSE 38 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_10 <= 0.46602827310562134) THEN 40 ELSE 41 END END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_7 <= 1.207967758178711) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_5 <= 1.4537084102630615) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_4 <= -1.468867540359497) THEN 45 ELSE 46 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_2 <= 0.4270458519458771) THEN 48 ELSE 49 END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_10 <= 1.1469671726226807) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_3 <= 1.0156599283218384) THEN 52 ELSE 53 END ELSE 54 END END END END AS node_id_2 
FROM ##TMP_20180516120617_CODEGEN_Y4QXQ4_ADS_sca_2_OUT AS [ADS_sca_2_OUT]), 
[DT_node_data_14] AS 
(SELECT [Values].nid AS nid, CAST([Values].[E] AS FLOAT(53)) AS [E] 
FROM (SELECT 4 AS nid, 13.119756721377405 AS [E] UNION ALL SELECT 5 AS nid, 12.071171804127433 AS [E] UNION ALL SELECT 8 AS nid, 9.735041217996262 AS [E] UNION ALL SELECT 9 AS nid, 10.045203605952587 AS [E] UNION ALL SELECT 11 AS nid, 6.422584497525632 AS [E] UNION ALL SELECT 12 AS nid, 8.024577215395368 AS [E] UNION ALL SELECT 16 AS nid, 17.31914707358036 AS [E] UNION ALL SELECT 17 AS nid, 14.772563754565986 AS [E] UNION ALL SELECT 19 AS nid, 12.707020327176664 AS [E] UNION ALL SELECT 20 AS nid, 10.596890487725023 AS [E] UNION ALL SELECT 22 AS nid, 11.380993151416082 AS [E] UNION ALL SELECT 24 AS nid, 18.262296417507077 AS [E] UNION ALL SELECT 25 AS nid, 16.302556715766507 AS [E] UNION ALL SELECT 30 AS nid, 10.181631174833692 AS [E] UNION ALL SELECT 31 AS nid, 10.131789617052231 AS [E] UNION ALL SELECT 33 AS nid, 14.793658121908122 AS [E] UNION ALL SELECT 34 AS nid, 12.423411759463056 AS [E] UNION ALL SELECT 37 AS nid, 15.794958314425642 AS [E] UNION ALL SELECT 38 AS nid, 17.451457795201584 AS [E] UNION ALL SELECT 40 AS nid, 19.95894272650593 AS [E] UNION ALL SELECT 41 AS nid, 20.199033606227683 AS [E] UNION ALL SELECT 45 AS nid, 22.76939496981568 AS [E] UNION ALL SELECT 46 AS nid, 18.295107567347195 AS [E] UNION ALL SELECT 48 AS nid, 22.67001693088796 AS [E] UNION ALL SELECT 49 AS nid, 21.340993370178953 AS [E] UNION ALL SELECT 52 AS nid, 24.713338273149652 AS [E] UNION ALL SELECT 53 AS nid, 25.24805848092261 AS [E] UNION ALL SELECT 54 AS nid, 23.18131440832091 AS [E]) AS [Values]), 
[DT_Output_14] AS 
(SELECT [DT_node_lookup_14].[KEY] AS [KEY], [DT_node_lookup_14].node_id_2 AS node_id_2, [DT_node_data_14].nid AS nid, [DT_node_data_14].[E] AS [E] 
FROM [DT_node_lookup_14] LEFT OUTER JOIN [DT_node_data_14] ON [DT_node_lookup_14].node_id_2 = [DT_node_data_14].nid), 
[BAG_Model_14] AS 
(SELECT [DT_Output_14].[KEY] AS [KEY], [DT_Output_14].[E] AS [Estimator] 
FROM [DT_Output_14]), 
[DT_node_lookup_15] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_3 <= -0.7756910920143127) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_6 <= 0.39204227924346924) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_5 <= -0.7714440822601318) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_5 <= -1.555070161819458) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_3 <= -1.2438207864761353) THEN 5 ELSE 6 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_4 <= -0.3540548086166382) THEN 8 ELSE 9 END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_7 <= 0.5251129865646362) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_4 <= 0.7098836898803711) THEN 12 ELSE 13 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_5 <= 0.8744816780090332) THEN 15 ELSE 16 END END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_6 <= 1.05584716796875) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_2 <= -1.2398390769958496) THEN 19 ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_9 <= 0.797319233417511) THEN 21 ELSE 22 END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_2 <= 0.27647876739501953) THEN 24 ELSE 25 END END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_2 <= 0.007412798702716827) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_3 <= 0.4823174476623535) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_4 <= -0.5449816584587097) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_8 <= 0.039295729249715805) THEN 30 ELSE 31 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_10 <= 0.2446441650390625) THEN 33 ELSE 34 END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_8 <= -0.011688321828842163) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_2 <= -1.0453410148620605) THEN 37 ELSE 38 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_10 <= -0.30190595984458923) THEN 40 ELSE 41 END END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_5 <= 0.7693573236465454) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_3 <= 1.0506720542907715) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_6 <= 1.6510465145111084) THEN 45 ELSE 46 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_10 <= 0.12422573566436768) THEN 48 ELSE 49 END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_3 <= 1.122474193572998) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_5 <= 0.9712488055229187) THEN 52 ELSE 53 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_8 <= -0.6907780170440674) THEN 55 ELSE 56 END END END END END AS node_id_2 
FROM ##TMP_20180516120617_CODEGEN_Y4QXQ4_ADS_sca_2_OUT AS [ADS_sca_2_OUT]), 
[DT_node_data_15] AS 
(SELECT [Values].nid AS nid, CAST([Values].[E] AS FLOAT(53)) AS [E] 
FROM (SELECT 5 AS nid, 6.245710248632148 AS [E] UNION ALL SELECT 6 AS nid, 5.293284001301807 AS [E] UNION ALL SELECT 8 AS nid, 7.556998078346253 AS [E] UNION ALL SELECT 9 AS nid, 6.980046241948142 AS [E] UNION ALL SELECT 12 AS nid, 10.217306243866512 AS [E] UNION ALL SELECT 13 AS nid, 11.789821637076107 AS [E] UNION ALL SELECT 15 AS nid, 8.27746541331169 AS [E] UNION ALL SELECT 16 AS nid, 11.313518144724842 AS [E] UNION ALL SELECT 19 AS nid, 12.109886588685942 AS [E] UNION ALL SELECT 21 AS nid, 12.760129264370008 AS [E] UNION ALL SELECT 22 AS nid, 12.830344628983799 AS [E] UNION ALL SELECT 24 AS nid, 16.08254261562184 AS [E] UNION ALL SELECT 25 AS nid, 18.493721395486528 AS [E] UNION ALL SELECT 30 AS nid, 15.24796271923086 AS [E] UNION ALL SELECT 31 AS nid, 13.174202057525061 AS [E] UNION ALL SELECT 33 AS nid, 10.181631174833692 AS [E] UNION ALL SELECT 34 AS nid, 6.861453719338209 AS [E] UNION ALL SELECT 37 AS nid, 14.536245187358322 AS [E] UNION ALL SELECT 38 AS nid, 16.45480792563375 AS [E] UNION ALL SELECT 40 AS nid, 17.51855412510629 AS [E] UNION ALL SELECT 41 AS nid, 19.915199562745045 AS [E] UNION ALL SELECT 45 AS nid, 17.712768435601625 AS [E] UNION ALL SELECT 46 AS nid, 14.4669963696142 AS [E] UNION ALL SELECT 48 AS nid, 20.629855906779248 AS [E] UNION ALL SELECT 49 AS nid, 19.36426348416223 AS [E] UNION ALL SELECT 52 AS nid, 24.220391775464968 AS [E] UNION ALL SELECT 53 AS nid, 22.402139862730703 AS [E] UNION ALL SELECT 55 AS nid, 18.900387696177468 AS [E] UNION ALL SELECT 56 AS nid, 17.41761147731962 AS [E]) AS [Values]), 
[DT_Output_15] AS 
(SELECT [DT_node_lookup_15].[KEY] AS [KEY], [DT_node_lookup_15].node_id_2 AS node_id_2, [DT_node_data_15].nid AS nid, [DT_node_data_15].[E] AS [E] 
FROM [DT_node_lookup_15] LEFT OUTER JOIN [DT_node_data_15] ON [DT_node_lookup_15].node_id_2 = [DT_node_data_15].nid), 
[BAG_Model_15] AS 
(SELECT [DT_Output_15].[KEY] AS [KEY], [DT_Output_15].[E] AS [Estimator] 
FROM [DT_Output_15])
 INSERT INTO ##TMP_20180516120617_CODEGEN_UJA3FR_BAG_B1 ([KEY], [Estimator]) SELECT [BAG_B1].[KEY], [BAG_B1].[Estimator] 
FROM (SELECT [BAG_esu_1].[KEY] AS [KEY], [BAG_esu_1].[Estimator] AS [Estimator] 
FROM (SELECT [BAG_Model_10].[KEY] AS [KEY], [BAG_Model_10].[Estimator] AS [Estimator] 
FROM [BAG_Model_10] UNION ALL SELECT [BAG_Model_11].[KEY] AS [KEY], [BAG_Model_11].[Estimator] AS [Estimator] 
FROM [BAG_Model_11] UNION ALL SELECT [BAG_Model_12].[KEY] AS [KEY], [BAG_Model_12].[Estimator] AS [Estimator] 
FROM [BAG_Model_12] UNION ALL SELECT [BAG_Model_13].[KEY] AS [KEY], [BAG_Model_13].[Estimator] AS [Estimator] 
FROM [BAG_Model_13] UNION ALL SELECT [BAG_Model_14].[KEY] AS [KEY], [BAG_Model_14].[Estimator] AS [Estimator] 
FROM [BAG_Model_14] UNION ALL SELECT [BAG_Model_15].[KEY] AS [KEY], [BAG_Model_15].[Estimator] AS [Estimator] 
FROM [BAG_Model_15]) AS [BAG_esu_1]) AS [BAG_B1]

-- Code For temporary table ##TMP_20180516120617_CODEGEN_WYEIPS_BAG_avg part 1. Create 


CREATE TABLE ##TMP_20180516120617_CODEGEN_WYEIPS_BAG_avg (
	[KEY] BIGINT NULL, 
	[Estimator] FLOAT(53) NULL
)



-- Code For temporary table ##TMP_20180516120617_CODEGEN_WYEIPS_BAG_avg part 2. Populate

WITH [BAG_Union] AS 
(SELECT [BAG_EnsembleUnion].[KEY] AS [KEY], [BAG_EnsembleUnion].[Estimator] AS [Estimator] 
FROM (SELECT [BAG_B0].[KEY] AS [KEY], [BAG_B0].[Estimator] AS [Estimator] 
FROM ##TMP_20180516120617_CODEGEN_TJK2OE_BAG_B0 AS [BAG_B0] UNION ALL SELECT [BAG_B1].[KEY] AS [KEY], [BAG_B1].[Estimator] AS [Estimator] 
FROM ##TMP_20180516120617_CODEGEN_UJA3FR_BAG_B1 AS [BAG_B1]) AS [BAG_EnsembleUnion])
 INSERT INTO ##TMP_20180516120617_CODEGEN_WYEIPS_BAG_avg ([KEY], [Estimator]) SELECT [BAG_avg].[KEY], [BAG_avg].[Estimator] 
FROM (SELECT [T].[KEY] AS [KEY], CAST([T].[Estimator] AS FLOAT(53)) AS [Estimator] 
FROM (SELECT [BAG_Union].[KEY] AS [KEY], avg(CAST([BAG_Union].[Estimator] AS FLOAT(53))) AS [Estimator] 
FROM [BAG_Union] GROUP BY [BAG_Union].[KEY]) AS [T]) AS [BAG_avg]

-- Model deployment code

SELECT [BAG_avg].[KEY] AS [KEY], [BAG_avg].[Estimator] AS [Estimator] 
FROM ##TMP_20180516120617_CODEGEN_WYEIPS_BAG_avg AS [BAG_avg]