-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2018

-- Model : CalibratedClassifierCV_isotonic
-- Dataset : digits
-- Database : impala


-- This SQL code can contain one or more statements, to be executed in the order they appear in this file.



-- Code For temporary table tmp_20180516115801_codegen_tf6cl6_calprob_b0 part 1. Create 


CREATE TABLE tmp_20180516115801_codegen_tf6cl6_calprob_b0 (
	`KEY` BIGINT, 
	`Proba_0` DOUBLE, 
	`Proba_1` DOUBLE, 
	`Proba_2` DOUBLE, 
	`Proba_3` DOUBLE, 
	`Proba_4` DOUBLE, 
	`Proba_5` DOUBLE, 
	`Proba_6` DOUBLE, 
	`Proba_7` DOUBLE, 
	`Proba_8` DOUBLE, 
	`Proba_9` DOUBLE
)

 CACHED IN 'one_gig_pool'

-- Code For temporary table tmp_20180516115801_codegen_tf6cl6_calprob_b0 part 2. Populate

WITH `DT_node_lookup` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_36` <= 0.5) THEN CASE WHEN (`ADS`.`Feature_28` <= 2.5) THEN CASE WHEN (`ADS`.`Feature_21` <= 0.5) THEN CASE WHEN (`ADS`.`Feature_5` <= 10.0) THEN CASE WHEN (`ADS`.`Feature_41` <= 5.5) THEN 5 ELSE 6 END ELSE 7 END ELSE CASE WHEN (`ADS`.`Feature_62` <= 7.5) THEN CASE WHEN (`ADS`.`Feature_50` <= 2.5) THEN 10 ELSE 11 END ELSE 12 END END ELSE CASE WHEN (`ADS`.`Feature_21` <= 9.5) THEN CASE WHEN (`ADS`.`Feature_5` <= 2.5) THEN CASE WHEN (`ADS`.`Feature_42` <= 5.5) THEN 16 ELSE 17 END ELSE CASE WHEN (`ADS`.`Feature_28` <= 6.5) THEN 19 ELSE 20 END END ELSE CASE WHEN (`ADS`.`Feature_33` <= 1.5) THEN 22 ELSE CASE WHEN (`ADS`.`Feature_59` <= 13.5) THEN 24 ELSE 25 END END END END ELSE CASE WHEN (`ADS`.`Feature_21` <= 0.5) THEN CASE WHEN (`ADS`.`Feature_42` <= 8.5) THEN CASE WHEN (`ADS`.`Feature_5` <= 2.5) THEN CASE WHEN (`ADS`.`Feature_9` <= 0.5) THEN 30 ELSE 31 END ELSE CASE WHEN (`ADS`.`Feature_2` <= 0.5) THEN 33 ELSE 34 END END ELSE CASE WHEN (`ADS`.`Feature_54` <= 0.5) THEN CASE WHEN (`ADS`.`Feature_59` <= 11.5) THEN 37 ELSE 38 END ELSE CASE WHEN (`ADS`.`Feature_9` <= 3.0) THEN 40 ELSE 41 END END END ELSE CASE WHEN (`ADS`.`Feature_33` <= 5.5) THEN CASE WHEN (`ADS`.`Feature_60` <= 7.5) THEN CASE WHEN (`ADS`.`Feature_53` <= 4.5) THEN 45 ELSE 46 END ELSE CASE WHEN (`ADS`.`Feature_43` <= 1.5) THEN 48 ELSE 49 END END ELSE CASE WHEN (`ADS`.`Feature_26` <= 9.0) THEN 51 ELSE CASE WHEN (`ADS`.`Feature_13` <= 13.5) THEN 53 ELSE 54 END END END END END AS node_id_2 
FROM digits AS `ADS`), 
`DT_node_data` AS 
(SELECT `Values`.nid AS nid, CAST(`Values`.`P_0` AS DOUBLE) AS `P_0`, CAST(`Values`.`P_1` AS DOUBLE) AS `P_1`, CAST(`Values`.`P_2` AS DOUBLE) AS `P_2`, CAST(`Values`.`P_3` AS DOUBLE) AS `P_3`, CAST(`Values`.`P_4` AS DOUBLE) AS `P_4`, CAST(`Values`.`P_5` AS DOUBLE) AS `P_5`, CAST(`Values`.`P_6` AS DOUBLE) AS `P_6`, CAST(`Values`.`P_7` AS DOUBLE) AS `P_7`, CAST(`Values`.`P_8` AS DOUBLE) AS `P_8`, CAST(`Values`.`P_9` AS DOUBLE) AS `P_9`, CAST(`Values`.`D` AS DOUBLE) AS `D`, CAST(`Values`.`DP` AS DOUBLE) AS `DP` 
FROM (SELECT 5 AS nid, 0.3333333333333333 AS `P_0`, 0.0 AS `P_1`, 0.3333333333333333 AS `P_2`, 0.0 AS `P_3`, 0.0 AS `P_4`, 0.0 AS `P_5`, 0.3333333333333333 AS `P_6`, 0.0 AS `P_7`, 0.0 AS `P_8`, 0.0 AS `P_9`, 0 AS `D`, 0.3333333333333333 AS `DP` UNION ALL SELECT 6 AS nid, 0.0 AS `P_0`, 0.0 AS `P_1`, 0.0 AS `P_2`, 0.0 AS `P_3`, 1.0 AS `P_4`, 0.0 AS `P_5`, 0.0 AS `P_6`, 0.0 AS `P_7`, 0.0 AS `P_8`, 0.0 AS `P_9`, 4 AS `D`, 1.0 AS `DP` UNION ALL SELECT 7 AS nid, 0.0 AS `P_0`, 0.0 AS `P_1`, 0.0 AS `P_2`, 0.0 AS `P_3`, 0.0 AS `P_4`, 1.0 AS `P_5`, 0.0 AS `P_6`, 0.0 AS `P_7`, 0.0 AS `P_8`, 0.0 AS `P_9`, 5 AS `D`, 1.0 AS `DP` UNION ALL SELECT 10 AS nid, 0.0 AS `P_0`, 0.0 AS `P_1`, 0.0 AS `P_2`, 0.0 AS `P_3`, 1.0 AS `P_4`, 0.0 AS `P_5`, 0.0 AS `P_6`, 0.0 AS `P_7`, 0.0 AS `P_8`, 0.0 AS `P_9`, 4 AS `D`, 1.0 AS `DP` UNION ALL SELECT 11 AS nid, 1.0 AS `P_0`, 0.0 AS `P_1`, 0.0 AS `P_2`, 0.0 AS `P_3`, 0.0 AS `P_4`, 0.0 AS `P_5`, 0.0 AS `P_6`, 0.0 AS `P_7`, 0.0 AS `P_8`, 0.0 AS `P_9`, 0 AS `D`, 1.0 AS `DP` UNION ALL SELECT 12 AS nid, 0.0 AS `P_0`, 0.0 AS `P_1`, 1.0 AS `P_2`, 0.0 AS `P_3`, 0.0 AS `P_4`, 0.0 AS `P_5`, 0.0 AS `P_6`, 0.0 AS `P_7`, 0.0 AS `P_8`, 0.0 AS `P_9`, 2 AS `D`, 1.0 AS `DP` UNION ALL SELECT 16 AS nid, 0.0 AS `P_0`, 0.0 AS `P_1`, 0.0 AS `P_2`, 0.0 AS `P_3`, 0.0 AS `P_4`, 0.0 AS `P_5`, 0.0 AS `P_6`, 0.0 AS `P_7`, 0.0 AS `P_8`, 1.0 AS `P_9`, 9 AS `D`, 1.0 AS `DP` UNION ALL SELECT 17 AS nid, 0.0 AS `P_0`, 0.0 AS `P_1`, 0.3333333333333333 AS `P_2`, 0.0 AS `P_3`, 0.0 AS `P_4`, 0.0 AS `P_5`, 0.6666666666666666 AS `P_6`, 0.0 AS `P_7`, 0.0 AS `P_8`, 0.0 AS `P_9`, 6 AS `D`, 0.6666666666666666 AS `DP` UNION ALL SELECT 19 AS nid, 0.0 AS `P_0`, 0.0 AS `P_1`, 0.0 AS `P_2`, 0.0 AS `P_3`, 0.0 AS `P_4`, 0.0 AS `P_5`, 0.0 AS `P_6`, 0.0 AS `P_7`, 1.0 AS `P_8`, 0.0 AS `P_9`, 8 AS `D`, 1.0 AS `DP` UNION ALL SELECT 20 AS nid, 0.0 AS `P_0`, 0.0 AS `P_1`, 0.0 AS `P_2`, 0.0 AS `P_3`, 0.0 AS `P_4`, 1.0 AS `P_5`, 0.0 AS `P_6`, 0.0 AS `P_7`, 0.0 AS `P_8`, 0.0 AS `P_9`, 5 AS `D`, 1.0 AS `DP` UNION ALL SELECT 22 AS nid, 0.0 AS `P_0`, 0.0 AS `P_1`, 0.0 AS `P_2`, 0.0 AS `P_3`, 0.0 AS `P_4`, 0.0 AS `P_5`, 0.0 AS `P_6`, 0.0 AS `P_7`, 0.0 AS `P_8`, 1.0 AS `P_9`, 9 AS `D`, 1.0 AS `DP` UNION ALL SELECT 24 AS nid, 1.0 AS `P_0`, 0.0 AS `P_1`, 0.0 AS `P_2`, 0.0 AS `P_3`, 0.0 AS `P_4`, 0.0 AS `P_5`, 0.0 AS `P_6`, 0.0 AS `P_7`, 0.0 AS `P_8`, 0.0 AS `P_9`, 0 AS `D`, 1.0 AS `DP` UNION ALL SELECT 25 AS nid, 0.0 AS `P_0`, 0.0 AS `P_1`, 0.0 AS `P_2`, 0.0 AS `P_3`, 0.0 AS `P_4`, 0.0 AS `P_5`, 0.0 AS `P_6`, 0.0 AS `P_7`, 1.0 AS `P_8`, 0.0 AS `P_9`, 8 AS `D`, 1.0 AS `DP` UNION ALL SELECT 30 AS nid, 0.0 AS `P_0`, 0.6774193548387096 AS `P_1`, 0.06451612903225806 AS `P_2`, 0.03225806451612903 AS `P_3`, 0.16129032258064516 AS `P_4`, 0.0 AS `P_5`, 0.06451612903225806 AS `P_6`, 0.0 AS `P_7`, 0.0 AS `P_8`, 0.0 AS `P_9`, 1 AS `D`, 0.6774193548387096 AS `DP` UNION ALL SELECT 31 AS nid, 0.0 AS `P_0`, 0.02631578947368421 AS `P_1`, 0.5789473684210527 AS `P_2`, 0.18421052631578946 AS `P_3`, 0.0 AS `P_4`, 0.02631578947368421 AS `P_5`, 0.0 AS `P_6`, 0.07894736842105263 AS `P_7`, 0.07894736842105263 AS `P_8`, 0.02631578947368421 AS `P_9`, 2 AS `D`, 0.5789473684210527 AS `DP` UNION ALL SELECT 33 AS nid, 0.0 AS `P_0`, 0.0 AS `P_1`, 0.0 AS `P_2`, 0.0 AS `P_3`, 0.6666666666666666 AS `P_4`, 0.0 AS `P_5`, 0.0 AS `P_6`, 0.3333333333333333 AS `P_7`, 0.0 AS `P_8`, 0.0 AS `P_9`, 4 AS `D`, 0.6666666666666666 AS `DP` UNION ALL SELECT 34 AS nid, 0.0 AS `P_0`, 0.0 AS `P_1`, 0.0 AS `P_2`, 0.011111111111111112 AS `P_3`, 0.0 AS `P_4`, 0.9888888888888889 AS `P_5`, 0.0 AS `P_6`, 0.0 AS `P_7`, 0.0 AS `P_8`, 0.0 AS `P_9`, 5 AS `D`, 0.9888888888888889 AS `DP` UNION ALL SELECT 37 AS nid, 0.0 AS `P_0`, 0.0 AS `P_1`, 0.0 AS `P_2`, 0.0 AS `P_3`, 1.0 AS `P_4`, 0.0 AS `P_5`, 0.0 AS `P_6`, 0.0 AS `P_7`, 0.0 AS `P_8`, 0.0 AS `P_9`, 4 AS `D`, 1.0 AS `DP` UNION ALL SELECT 38 AS nid, 0.0 AS `P_0`, 0.7 AS `P_1`, 0.0 AS `P_2`, 0.0 AS `P_3`, 0.0 AS `P_4`, 0.1 AS `P_5`, 0.2 AS `P_6`, 0.0 AS `P_7`, 0.0 AS `P_8`, 0.0 AS `P_9`, 1 AS `D`, 0.7 AS `DP` UNION ALL SELECT 40 AS nid, 0.0 AS `P_0`, 0.0 AS `P_1`, 0.0 AS `P_2`, 0.0 AS `P_3`, 0.0 AS `P_4`, 0.010309278350515464 AS `P_5`, 0.9896907216494846 AS `P_6`, 0.0 AS `P_7`, 0.0 AS `P_8`, 0.0 AS `P_9`, 6 AS `D`, 0.9896907216494846 AS `DP` UNION ALL SELECT 41 AS nid, 0.0 AS `P_0`, 0.0 AS `P_1`, 1.0 AS `P_2`, 0.0 AS `P_3`, 0.0 AS `P_4`, 0.0 AS `P_5`, 0.0 AS `P_6`, 0.0 AS `P_7`, 0.0 AS `P_8`, 0.0 AS `P_9`, 2 AS `D`, 1.0 AS `DP` UNION ALL SELECT 45 AS nid, 0.0 AS `P_0`, 0.018691588785046728 AS `P_1`, 0.0 AS `P_2`, 0.018691588785046728 AS `P_3`, 0.04672897196261682 AS `P_4`, 0.0 AS `P_5`, 0.0 AS `P_6`, 0.794392523364486 AS `P_7`, 0.037383177570093455 AS `P_8`, 0.08411214953271028 AS `P_9`, 7 AS `D`, 0.794392523364486 AS `DP` UNION ALL SELECT 46 AS nid, 0.0 AS `P_0`, 0.1875 AS `P_1`, 0.25 AS `P_2`, 0.25 AS `P_3`, 0.0 AS `P_4`, 0.0625 AS `P_5`, 0.0 AS `P_6`, 0.0 AS `P_7`, 0.125 AS `P_8`, 0.125 AS `P_9`, 2 AS `D`, 0.25 AS `DP` UNION ALL SELECT 48 AS nid, 0.0 AS `P_0`, 0.05952380952380952 AS `P_1`, 0.011904761904761904 AS `P_2`, 0.49404761904761907 AS `P_3`, 0.011904761904761904 AS `P_4`, 0.023809523809523808 AS `P_5`, 0.0 AS `P_6`, 0.0 AS `P_7`, 0.06547619047619048 AS `P_8`, 0.3333333333333333 AS `P_9`, 3 AS `D`, 0.49404761904761907 AS `DP` UNION ALL SELECT 49 AS nid, 0.01195219123505976 AS `P_0`, 0.24701195219123506 AS `P_1`, 0.2868525896414343 AS `P_2`, 0.0398406374501992 AS `P_3`, 0.035856573705179286 AS `P_4`, 0.0 AS `P_5`, 0.00398406374501992 AS `P_6`, 0.03187250996015936 AS `P_7`, 0.3147410358565737 AS `P_8`, 0.027888446215139442 AS `P_9`, 8 AS `D`, 0.3147410358565737 AS `DP` UNION ALL SELECT 51 AS nid, 0.0 AS `P_0`, 0.0 AS `P_1`, 0.0 AS `P_2`, 0.0 AS `P_3`, 0.0 AS `P_4`, 0.0 AS `P_5`, 0.0 AS `P_6`, 1.0 AS `P_7`, 0.0 AS `P_8`, 0.0 AS `P_9`, 7 AS `D`, 1.0 AS `DP` UNION ALL SELECT 53 AS nid, 0.0 AS `P_0`, 0.014084507042253521 AS `P_1`, 0.0 AS `P_2`, 0.0 AS `P_3`, 0.971830985915493 AS `P_4`, 0.0 AS `P_5`, 0.014084507042253521 AS `P_6`, 0.0 AS `P_7`, 0.0 AS `P_8`, 0.0 AS `P_9`, 4 AS `D`, 0.971830985915493 AS `DP` UNION ALL SELECT 54 AS nid, 0.125 AS `P_0`, 0.375 AS `P_1`, 0.0 AS `P_2`, 0.0 AS `P_3`, 0.125 AS `P_4`, 0.0 AS `P_5`, 0.125 AS `P_6`, 0.25 AS `P_7`, 0.0 AS `P_8`, 0.0 AS `P_9`, 1 AS `D`, 0.375 AS `DP`) AS `Values`), 
`DT_Output` AS 
(SELECT `DT_node_lookup`.`KEY` AS `KEY`, `DT_node_lookup`.node_id_2 AS node_id_2, `DT_node_data`.nid AS nid, `DT_node_data`.`P_0` AS `P_0`, `DT_node_data`.`P_1` AS `P_1`, `DT_node_data`.`P_2` AS `P_2`, `DT_node_data`.`P_3` AS `P_3`, `DT_node_data`.`P_4` AS `P_4`, `DT_node_data`.`P_5` AS `P_5`, `DT_node_data`.`P_6` AS `P_6`, `DT_node_data`.`P_7` AS `P_7`, `DT_node_data`.`P_8` AS `P_8`, `DT_node_data`.`P_9` AS `P_9`, `DT_node_data`.`D` AS `D`, `DT_node_data`.`DP` AS `DP` 
FROM `DT_node_lookup` LEFT OUTER JOIN `DT_node_data` ON `DT_node_lookup`.node_id_2 = `DT_node_data`.nid), 
`Calibrated_Model_0` AS 
(SELECT `DT_Output`.`KEY` AS `KEY`, CAST(NULL AS DOUBLE) AS `Score_0`, CAST(NULL AS DOUBLE) AS `Score_1`, CAST(NULL AS DOUBLE) AS `Score_2`, CAST(NULL AS DOUBLE) AS `Score_3`, CAST(NULL AS DOUBLE) AS `Score_4`, CAST(NULL AS DOUBLE) AS `Score_5`, CAST(NULL AS DOUBLE) AS `Score_6`, CAST(NULL AS DOUBLE) AS `Score_7`, CAST(NULL AS DOUBLE) AS `Score_8`, CAST(NULL AS DOUBLE) AS `Score_9`, `DT_Output`.`P_0` AS `Proba_0`, `DT_Output`.`P_1` AS `Proba_1`, `DT_Output`.`P_2` AS `Proba_2`, `DT_Output`.`P_3` AS `Proba_3`, `DT_Output`.`P_4` AS `Proba_4`, `DT_Output`.`P_5` AS `Proba_5`, `DT_Output`.`P_6` AS `Proba_6`, `DT_Output`.`P_7` AS `Proba_7`, `DT_Output`.`P_8` AS `Proba_8`, `DT_Output`.`P_9` AS `Proba_9`, CASE WHEN (`DT_Output`.`P_0` IS NULL OR `DT_Output`.`P_0` > 0.0) THEN ln(`DT_Output`.`P_0`) ELSE -1.79769313486231e+308 END AS `LogProba_0`, CASE WHEN (`DT_Output`.`P_1` IS NULL OR `DT_Output`.`P_1` > 0.0) THEN ln(`DT_Output`.`P_1`) ELSE -1.79769313486231e+308 END AS `LogProba_1`, CASE WHEN (`DT_Output`.`P_2` IS NULL OR `DT_Output`.`P_2` > 0.0) THEN ln(`DT_Output`.`P_2`) ELSE -1.79769313486231e+308 END AS `LogProba_2`, CASE WHEN (`DT_Output`.`P_3` IS NULL OR `DT_Output`.`P_3` > 0.0) THEN ln(`DT_Output`.`P_3`) ELSE -1.79769313486231e+308 END AS `LogProba_3`, CASE WHEN (`DT_Output`.`P_4` IS NULL OR `DT_Output`.`P_4` > 0.0) THEN ln(`DT_Output`.`P_4`) ELSE -1.79769313486231e+308 END AS `LogProba_4`, CASE WHEN (`DT_Output`.`P_5` IS NULL OR `DT_Output`.`P_5` > 0.0) THEN ln(`DT_Output`.`P_5`) ELSE -1.79769313486231e+308 END AS `LogProba_5`, CASE WHEN (`DT_Output`.`P_6` IS NULL OR `DT_Output`.`P_6` > 0.0) THEN ln(`DT_Output`.`P_6`) ELSE -1.79769313486231e+308 END AS `LogProba_6`, CASE WHEN (`DT_Output`.`P_7` IS NULL OR `DT_Output`.`P_7` > 0.0) THEN ln(`DT_Output`.`P_7`) ELSE -1.79769313486231e+308 END AS `LogProba_7`, CASE WHEN (`DT_Output`.`P_8` IS NULL OR `DT_Output`.`P_8` > 0.0) THEN ln(`DT_Output`.`P_8`) ELSE -1.79769313486231e+308 END AS `LogProba_8`, CASE WHEN (`DT_Output`.`P_9` IS NULL OR `DT_Output`.`P_9` > 0.0) THEN ln(`DT_Output`.`P_9`) ELSE -1.79769313486231e+308 END AS `LogProba_9`, CAST(NULL AS BIGINT) AS `Decision`, CAST(NULL AS DOUBLE) AS `DecisionProba`, coalesce(CAST(NULL AS DOUBLE), `DT_Output`.`P_0`) AS `ScoreOrProba_0`, coalesce(CAST(NULL AS DOUBLE), `DT_Output`.`P_1`) AS `ScoreOrProba_1`, coalesce(CAST(NULL AS DOUBLE), `DT_Output`.`P_2`) AS `ScoreOrProba_2`, coalesce(CAST(NULL AS DOUBLE), `DT_Output`.`P_3`) AS `ScoreOrProba_3`, coalesce(CAST(NULL AS DOUBLE), `DT_Output`.`P_4`) AS `ScoreOrProba_4`, coalesce(CAST(NULL AS DOUBLE), `DT_Output`.`P_5`) AS `ScoreOrProba_5`, coalesce(CAST(NULL AS DOUBLE), `DT_Output`.`P_6`) AS `ScoreOrProba_6`, coalesce(CAST(NULL AS DOUBLE), `DT_Output`.`P_7`) AS `ScoreOrProba_7`, coalesce(CAST(NULL AS DOUBLE), `DT_Output`.`P_8`) AS `ScoreOrProba_8`, coalesce(CAST(NULL AS DOUBLE), `DT_Output`.`P_9`) AS `ScoreOrProba_9` 
FROM `DT_Output`), 
isotonic_cte_0 AS 
(SELECT `Calibrated_Model_0`.`KEY` AS `KEY`, CASE WHEN (`Calibrated_Model_0`.`ScoreOrProba_0` < 0.0) THEN 0.0 WHEN (`Calibrated_Model_0`.`ScoreOrProba_0` < 0.3333333333333333) THEN (`Calibrated_Model_0`.`ScoreOrProba_0` - 0.0) * 0.0 + 0.0 WHEN (`Calibrated_Model_0`.`ScoreOrProba_0` < 1.0) THEN (`Calibrated_Model_0`.`ScoreOrProba_0` - 0.3333333333333333) * 1.4583333333333333 + 0.0 ELSE 0.9722222222222222 END AS `Proba_0`, CASE WHEN (`Calibrated_Model_0`.`ScoreOrProba_1` < 0.0) THEN 0.0 WHEN (`Calibrated_Model_0`.`ScoreOrProba_1` < 0.014084507042253521) THEN (`Calibrated_Model_0`.`ScoreOrProba_1` - 0.0) * 3.0640209174691933 + 0.0 WHEN (`Calibrated_Model_0`.`ScoreOrProba_1` < 0.05952380952380952) THEN (`Calibrated_Model_0`.`ScoreOrProba_1` - 0.014084507042253521) * 0.0 + 0.04315522418970695 WHEN (`Calibrated_Model_0`.`ScoreOrProba_1` < 0.1875) THEN (`Calibrated_Model_0`.`ScoreOrProba_1` - 0.05952380952380952) * 2.5815285354697592 + 0.04315522418970695 WHEN (`Calibrated_Model_0`.`ScoreOrProba_1` < 0.24701195219123506) THEN (`Calibrated_Model_0`.`ScoreOrProba_1` - 0.1875) * 0.0 + 0.3735294117647059 WHEN (`Calibrated_Model_0`.`ScoreOrProba_1` < 0.375) THEN (`Calibrated_Model_0`.`ScoreOrProba_1` - 0.24701195219123506) * 0.20682078278782343 + 0.3735294117647059 WHEN (`Calibrated_Model_0`.`ScoreOrProba_1` < 0.6774193548387096) THEN (`Calibrated_Model_0`.`ScoreOrProba_1` - 0.375) * 0.606222222222222 + 0.4 WHEN (`Calibrated_Model_0`.`ScoreOrProba_1` < 0.7) THEN (`Calibrated_Model_0`.`ScoreOrProba_1` - 0.6774193548387096) * 0.0 + 0.5833333333333333 ELSE 0.5833333333333333 END AS `Proba_1`, CASE WHEN (`Calibrated_Model_0`.`ScoreOrProba_2` < 0.0) THEN 0.0 WHEN (`Calibrated_Model_0`.`ScoreOrProba_2` < 0.011904761904761904) THEN (`Calibrated_Model_0`.`ScoreOrProba_2` - 0.0) * 0.9655172413793104 + 0.0 WHEN (`Calibrated_Model_0`.`ScoreOrProba_2` < 0.25) THEN (`Calibrated_Model_0`.`ScoreOrProba_2` - 0.011904761904761904) * 0.0 + 0.011494252873563218 WHEN (`Calibrated_Model_0`.`ScoreOrProba_2` < 0.2868525896414343) THEN (`Calibrated_Model_0`.`ScoreOrProba_2` - 0.25) * 4.157418270197172 + 0.011494252873563218 WHEN (`Calibrated_Model_0`.`ScoreOrProba_2` < 0.3333333333333333) THEN (`Calibrated_Model_0`.`ScoreOrProba_2` - 0.2868525896414343) * 0.0 + 0.16470588235294117 WHEN (`Calibrated_Model_0`.`ScoreOrProba_2` < 0.5789473684210527) THEN (`Calibrated_Model_0`.`ScoreOrProba_2` - 0.3333333333333333) * 2.2375750300120045 + 0.16470588235294117 WHEN (`Calibrated_Model_0`.`ScoreOrProba_2` < 1.0) THEN (`Calibrated_Model_0`.`ScoreOrProba_2` - 0.5789473684210527) * 0.6785714285714286 + 0.7142857142857143 ELSE 1.0 END AS `Proba_2`, CASE WHEN (`Calibrated_Model_0`.`ScoreOrProba_3` < 0.0) THEN 0.0035971223021582736 WHEN (`Calibrated_Model_0`.`ScoreOrProba_3` < 0.011111111111111112) THEN (`Calibrated_Model_0`.`ScoreOrProba_3` - 0.0) * 0.0 + 0.0035971223021582736 WHEN (`Calibrated_Model_0`.`ScoreOrProba_3` < 0.018691588785046728) THEN (`Calibrated_Model_0`.`ScoreOrProba_3` - 0.011111111111111112) * 2.4196976935079766 + 0.0035971223021582736 WHEN (`Calibrated_Model_0`.`ScoreOrProba_3` < 0.0398406374501992) THEN (`Calibrated_Model_0`.`ScoreOrProba_3` - 0.018691588785046728) * 0.0 + 0.021939586645468998 WHEN (`Calibrated_Model_0`.`ScoreOrProba_3` < 0.18421052631578946) THEN (`Calibrated_Model_0`.`ScoreOrProba_3` - 0.0398406374501992) * 0.8375538497799166 + 0.021939586645468998 WHEN (`Calibrated_Model_0`.`ScoreOrProba_3` < 0.25) THEN (`Calibrated_Model_0`.`ScoreOrProba_3` - 0.18421052631578946) * 0.0 + 0.14285714285714285 WHEN (`Calibrated_Model_0`.`ScoreOrProba_3` < 0.49404761904761907) THEN (`Calibrated_Model_0`.`ScoreOrProba_3` - 0.25) * 1.60470984020185 + 0.14285714285714285 ELSE 0.5344827586206896 END AS `Proba_3`, CASE WHEN (`Calibrated_Model_0`.`ScoreOrProba_4` < 0.0) THEN 0.007462686567164179 WHEN (`Calibrated_Model_0`.`ScoreOrProba_4` < 0.011904761904761904) THEN (`Calibrated_Model_0`.`ScoreOrProba_4` - 0.0) * 0.8214101904271744 + 0.007462686567164179 WHEN (`Calibrated_Model_0`.`ScoreOrProba_4` < 0.035856573705179286) THEN (`Calibrated_Model_0`.`ScoreOrProba_4` - 0.011904761904761904) * 0.9993019099070148 + 0.017241379310344827 WHEN (`Calibrated_Model_0`.`ScoreOrProba_4` < 0.04672897196261682) THEN (`Calibrated_Model_0`.`ScoreOrProba_4` - 0.035856573705179286) * 0.0 + 0.041176470588235294 WHEN (`Calibrated_Model_0`.`ScoreOrProba_4` < 0.125) THEN (`Calibrated_Model_0`.`ScoreOrProba_4` - 0.04672897196261682) * 0.3256657887035411 + 0.041176470588235294 WHEN (`Calibrated_Model_0`.`ScoreOrProba_4` < 0.6666666666666666) THEN (`Calibrated_Model_0`.`ScoreOrProba_4` - 0.125) * 0.0 + 0.06666666666666667 WHEN (`Calibrated_Model_0`.`ScoreOrProba_4` < 0.971830985915493) THEN (`Calibrated_Model_0`.`ScoreOrProba_4` - 0.6666666666666666) * 2.3302564102564096 + 0.06666666666666667 WHEN (`Calibrated_Model_0`.`ScoreOrProba_4` < 1.0) THEN (`Calibrated_Model_0`.`ScoreOrProba_4` - 0.971830985915493) * 0.0 + 0.7777777777777777 ELSE 0.7777777777777777 END AS `Proba_4`, CASE WHEN (`Calibrated_Model_0`.`ScoreOrProba_5` < 0.0) THEN 0.0036231884057971015 WHEN (`Calibrated_Model_0`.`ScoreOrProba_5` < 0.1) THEN (`Calibrated_Model_0`.`ScoreOrProba_5` - 0.0) * 0.0 + 0.0036231884057971015 WHEN (`Calibrated_Model_0`.`ScoreOrProba_5` < 0.9888888888888889) THEN (`Calibrated_Model_0`.`ScoreOrProba_5` - 0.1) * 1.1209239130434783 + 0.0036231884057971015 WHEN (`Calibrated_Model_0`.`ScoreOrProba_5` < 1.0) THEN (`Calibrated_Model_0`.`ScoreOrProba_5` - 0.9888888888888889) * 0.0 + 1.0 ELSE 1.0 END AS `Proba_5`, CASE WHEN (`Calibrated_Model_0`.`ScoreOrProba_6` < 0.0) THEN 0.003316749585406302 WHEN (`Calibrated_Model_0`.`ScoreOrProba_6` < 0.014084507042253521) THEN (`Calibrated_Model_0`.`ScoreOrProba_6` - 0.0) * 0.0 + 0.003316749585406302 WHEN (`Calibrated_Model_0`.`ScoreOrProba_6` < 0.06451612903225806) THEN (`Calibrated_Model_0`.`ScoreOrProba_6` - 0.014084507042253521) * 0.6686338079372905 + 0.003316749585406302 WHEN (`Calibrated_Model_0`.`ScoreOrProba_6` < 0.2) THEN (`Calibrated_Model_0`.`ScoreOrProba_6` - 0.06451612903225806) * 0.0 + 0.037037037037037035 WHEN (`Calibrated_Model_0`.`ScoreOrProba_6` < 0.3333333333333333) THEN (`Calibrated_Model_0`.`ScoreOrProba_6` - 0.2) * 7.222222222222224 + 0.037037037037037035 WHEN (`Calibrated_Model_0`.`ScoreOrProba_6` < 0.9896907216494846) THEN (`Calibrated_Model_0`.`ScoreOrProba_6` - 0.3333333333333333) * 0.0 + 1.0 ELSE 1.0 END AS `Proba_6`, CASE WHEN (`Calibrated_Model_0`.`ScoreOrProba_7` < 0.0) THEN 0.003249802163017673 WHEN (`Calibrated_Model_0`.`ScoreOrProba_7` < 0.3333333333333333) THEN (`Calibrated_Model_0`.`ScoreOrProba_7` - 0.0) * 0.0 + 0.003249802163017673 WHEN (`Calibrated_Model_0`.`ScoreOrProba_7` < 0.794392523364486) THEN (`Calibrated_Model_0`.`ScoreOrProba_7` - 0.3333333333333333) * 1.6929149195963915 + 0.003249802163017673 WHEN (`Calibrated_Model_0`.`ScoreOrProba_7` < 1.0) THEN (`Calibrated_Model_0`.`ScoreOrProba_7` - 0.794392523364486) * 1.0515970515970516 + 0.7837837837837838 ELSE 1.0 END AS `Proba_7`, CASE WHEN (`Calibrated_Model_0`.`ScoreOrProba_8` < 0.0) THEN 0.017341040462427744 WHEN (`Calibrated_Model_0`.`ScoreOrProba_8` < 0.037383177570093455) THEN (`Calibrated_Model_0`.`ScoreOrProba_8` - 0.0) * 0.12821710239240644 + 0.017341040462427744 WHEN (`Calibrated_Model_0`.`ScoreOrProba_8` < 0.125) THEN (`Calibrated_Model_0`.`ScoreOrProba_8` - 0.037383177570093455) * 0.0 + 0.022134203168685928 WHEN (`Calibrated_Model_0`.`ScoreOrProba_8` < 0.3147410358565737) THEN (`Calibrated_Model_0`.`ScoreOrProba_8` - 0.125) * 1.5574535804591225 + 0.022134203168685928 ELSE 0.3176470588235294 END AS `Proba_8`, CASE WHEN (`Calibrated_Model_0`.`ScoreOrProba_9` < 0.0) THEN 0.0 WHEN (`Calibrated_Model_0`.`ScoreOrProba_9` < 0.027888446215139442) THEN (`Calibrated_Model_0`.`ScoreOrProba_9` - 0.0) * 0.0 + 0.0 WHEN (`Calibrated_Model_0`.`ScoreOrProba_9` < 0.08411214953271028) THEN (`Calibrated_Model_0`.`ScoreOrProba_9` - 0.027888446215139442) * 0.9614104170395563 + 0.0 WHEN (`Calibrated_Model_0`.`ScoreOrProba_9` < 0.125) THEN (`Calibrated_Model_0`.`ScoreOrProba_9` - 0.08411214953271028) * 9.009026760750897 + 0.05405405405405406 WHEN (`Calibrated_Model_0`.`ScoreOrProba_9` < 0.3333333333333333) THEN (`Calibrated_Model_0`.`ScoreOrProba_9` - 0.125) * 0.0 + 0.4224137931034483 WHEN (`Calibrated_Model_0`.`ScoreOrProba_9` < 1.0) THEN (`Calibrated_Model_0`.`ScoreOrProba_9` - 0.3333333333333333) * 0.6016734279918863 + 0.4224137931034483 ELSE 0.8235294117647058 END AS `Proba_9` 
FROM `Calibrated_Model_0`), 
`Normalized_Probas` AS 
(SELECT isotonic_cte_0.`KEY` AS `KEY`, isotonic_cte_0.`Proba_0` / (isotonic_cte_0.`Proba_0` + isotonic_cte_0.`Proba_1` + isotonic_cte_0.`Proba_2` + isotonic_cte_0.`Proba_3` + isotonic_cte_0.`Proba_4` + isotonic_cte_0.`Proba_5` + isotonic_cte_0.`Proba_6` + isotonic_cte_0.`Proba_7` + isotonic_cte_0.`Proba_8` + isotonic_cte_0.`Proba_9`) AS `Proba_0`, isotonic_cte_0.`Proba_1` / (isotonic_cte_0.`Proba_0` + isotonic_cte_0.`Proba_1` + isotonic_cte_0.`Proba_2` + isotonic_cte_0.`Proba_3` + isotonic_cte_0.`Proba_4` + isotonic_cte_0.`Proba_5` + isotonic_cte_0.`Proba_6` + isotonic_cte_0.`Proba_7` + isotonic_cte_0.`Proba_8` + isotonic_cte_0.`Proba_9`) AS `Proba_1`, isotonic_cte_0.`Proba_2` / (isotonic_cte_0.`Proba_0` + isotonic_cte_0.`Proba_1` + isotonic_cte_0.`Proba_2` + isotonic_cte_0.`Proba_3` + isotonic_cte_0.`Proba_4` + isotonic_cte_0.`Proba_5` + isotonic_cte_0.`Proba_6` + isotonic_cte_0.`Proba_7` + isotonic_cte_0.`Proba_8` + isotonic_cte_0.`Proba_9`) AS `Proba_2`, isotonic_cte_0.`Proba_3` / (isotonic_cte_0.`Proba_0` + isotonic_cte_0.`Proba_1` + isotonic_cte_0.`Proba_2` + isotonic_cte_0.`Proba_3` + isotonic_cte_0.`Proba_4` + isotonic_cte_0.`Proba_5` + isotonic_cte_0.`Proba_6` + isotonic_cte_0.`Proba_7` + isotonic_cte_0.`Proba_8` + isotonic_cte_0.`Proba_9`) AS `Proba_3`, isotonic_cte_0.`Proba_4` / (isotonic_cte_0.`Proba_0` + isotonic_cte_0.`Proba_1` + isotonic_cte_0.`Proba_2` + isotonic_cte_0.`Proba_3` + isotonic_cte_0.`Proba_4` + isotonic_cte_0.`Proba_5` + isotonic_cte_0.`Proba_6` + isotonic_cte_0.`Proba_7` + isotonic_cte_0.`Proba_8` + isotonic_cte_0.`Proba_9`) AS `Proba_4`, isotonic_cte_0.`Proba_5` / (isotonic_cte_0.`Proba_0` + isotonic_cte_0.`Proba_1` + isotonic_cte_0.`Proba_2` + isotonic_cte_0.`Proba_3` + isotonic_cte_0.`Proba_4` + isotonic_cte_0.`Proba_5` + isotonic_cte_0.`Proba_6` + isotonic_cte_0.`Proba_7` + isotonic_cte_0.`Proba_8` + isotonic_cte_0.`Proba_9`) AS `Proba_5`, isotonic_cte_0.`Proba_6` / (isotonic_cte_0.`Proba_0` + isotonic_cte_0.`Proba_1` + isotonic_cte_0.`Proba_2` + isotonic_cte_0.`Proba_3` + isotonic_cte_0.`Proba_4` + isotonic_cte_0.`Proba_5` + isotonic_cte_0.`Proba_6` + isotonic_cte_0.`Proba_7` + isotonic_cte_0.`Proba_8` + isotonic_cte_0.`Proba_9`) AS `Proba_6`, isotonic_cte_0.`Proba_7` / (isotonic_cte_0.`Proba_0` + isotonic_cte_0.`Proba_1` + isotonic_cte_0.`Proba_2` + isotonic_cte_0.`Proba_3` + isotonic_cte_0.`Proba_4` + isotonic_cte_0.`Proba_5` + isotonic_cte_0.`Proba_6` + isotonic_cte_0.`Proba_7` + isotonic_cte_0.`Proba_8` + isotonic_cte_0.`Proba_9`) AS `Proba_7`, isotonic_cte_0.`Proba_8` / (isotonic_cte_0.`Proba_0` + isotonic_cte_0.`Proba_1` + isotonic_cte_0.`Proba_2` + isotonic_cte_0.`Proba_3` + isotonic_cte_0.`Proba_4` + isotonic_cte_0.`Proba_5` + isotonic_cte_0.`Proba_6` + isotonic_cte_0.`Proba_7` + isotonic_cte_0.`Proba_8` + isotonic_cte_0.`Proba_9`) AS `Proba_8`, isotonic_cte_0.`Proba_9` / (isotonic_cte_0.`Proba_0` + isotonic_cte_0.`Proba_1` + isotonic_cte_0.`Proba_2` + isotonic_cte_0.`Proba_3` + isotonic_cte_0.`Proba_4` + isotonic_cte_0.`Proba_5` + isotonic_cte_0.`Proba_6` + isotonic_cte_0.`Proba_7` + isotonic_cte_0.`Proba_8` + isotonic_cte_0.`Proba_9`) AS `Proba_9` 
FROM isotonic_cte_0), 
`DT_node_lookup_1` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_36` <= 0.5) THEN CASE WHEN (`ADS`.`Feature_42` <= 6.0) THEN CASE WHEN (`ADS`.`Feature_21` <= 7.0) THEN CASE WHEN (`ADS`.`Feature_22` <= 4.0) THEN 4 ELSE 5 END ELSE CASE WHEN (`ADS`.`Feature_13` <= 1.5) THEN 7 ELSE CASE WHEN (`ADS`.`Feature_9` <= 9.5) THEN 9 ELSE 10 END END END ELSE CASE WHEN (`ADS`.`Feature_13` <= 1.5) THEN CASE WHEN (`ADS`.`Feature_54` <= 2.5) THEN 13 ELSE CASE WHEN (`ADS`.`Feature_57` <= 2.0) THEN 15 ELSE 16 END END ELSE CASE WHEN (`ADS`.`Feature_37` <= 1.0) THEN CASE WHEN (`ADS`.`Feature_28` <= 2.5) THEN 19 ELSE 20 END ELSE CASE WHEN (`ADS`.`Feature_26` <= 2.0) THEN 22 ELSE 23 END END END END ELSE CASE WHEN (`ADS`.`Feature_21` <= 0.5) THEN CASE WHEN (`ADS`.`Feature_42` <= 8.5) THEN CASE WHEN (`ADS`.`Feature_5` <= 2.0) THEN CASE WHEN (`ADS`.`Feature_19` <= 12.5) THEN 28 ELSE 29 END ELSE CASE WHEN (`ADS`.`Feature_18` <= 4.5) THEN 31 ELSE 32 END END ELSE CASE WHEN (`ADS`.`Feature_54` <= 4.0) THEN CASE WHEN (`ADS`.`Feature_45` <= 1.5) THEN 35 ELSE 36 END ELSE CASE WHEN (`ADS`.`Feature_58` <= 9.0) THEN 38 ELSE 39 END END END ELSE CASE WHEN (`ADS`.`Feature_33` <= 3.5) THEN CASE WHEN (`ADS`.`Feature_43` <= 1.5) THEN CASE WHEN (`ADS`.`Feature_26` <= 3.5) THEN 43 ELSE 44 END ELSE CASE WHEN (`ADS`.`Feature_60` <= 7.5) THEN 46 ELSE 47 END END ELSE CASE WHEN (`ADS`.`Feature_13` <= 9.5) THEN CASE WHEN (`ADS`.`Feature_2` <= 5.0) THEN 50 ELSE 51 END ELSE CASE WHEN (`ADS`.`Feature_19` <= 3.0) THEN 53 ELSE 54 END END END END END AS node_id_2 
FROM digits AS `ADS`), 
`DT_node_data_1` AS 
(SELECT `Values`.nid AS nid, CAST(`Values`.`P_0` AS DOUBLE) AS `P_0`, CAST(`Values`.`P_1` AS DOUBLE) AS `P_1`, CAST(`Values`.`P_2` AS DOUBLE) AS `P_2`, CAST(`Values`.`P_3` AS DOUBLE) AS `P_3`, CAST(`Values`.`P_4` AS DOUBLE) AS `P_4`, CAST(`Values`.`P_5` AS DOUBLE) AS `P_5`, CAST(`Values`.`P_6` AS DOUBLE) AS `P_6`, CAST(`Values`.`P_7` AS DOUBLE) AS `P_7`, CAST(`Values`.`P_8` AS DOUBLE) AS `P_8`, CAST(`Values`.`P_9` AS DOUBLE) AS `P_9`, CAST(`Values`.`D` AS DOUBLE) AS `D`, CAST(`Values`.`DP` AS DOUBLE) AS `DP` 
FROM (SELECT 4 AS nid, 0.0 AS `P_0`, 0.0 AS `P_1`, 0.0 AS `P_2`, 0.0 AS `P_3`, 0.0 AS `P_4`, 1.0 AS `P_5`, 0.0 AS `P_6`, 0.0 AS `P_7`, 0.0 AS `P_8`, 0.0 AS `P_9`, 5 AS `D`, 1.0 AS `DP` UNION ALL SELECT 5 AS nid, 1.0 AS `P_0`, 0.0 AS `P_1`, 0.0 AS `P_2`, 0.0 AS `P_3`, 0.0 AS `P_4`, 0.0 AS `P_5`, 0.0 AS `P_6`, 0.0 AS `P_7`, 0.0 AS `P_8`, 0.0 AS `P_9`, 0 AS `D`, 1.0 AS `DP` UNION ALL SELECT 7 AS nid, 0.0 AS `P_0`, 0.0 AS `P_1`, 0.0 AS `P_2`, 0.0 AS `P_3`, 0.0 AS `P_4`, 1.0 AS `P_5`, 0.0 AS `P_6`, 0.0 AS `P_7`, 0.0 AS `P_8`, 0.0 AS `P_9`, 5 AS `D`, 1.0 AS `DP` UNION ALL SELECT 9 AS nid, 0.0 AS `P_0`, 0.0 AS `P_1`, 0.0 AS `P_2`, 0.0 AS `P_3`, 0.0 AS `P_4`, 0.0 AS `P_5`, 0.0 AS `P_6`, 0.0 AS `P_7`, 0.0 AS `P_8`, 1.0 AS `P_9`, 9 AS `D`, 1.0 AS `DP` UNION ALL SELECT 10 AS nid, 0.0 AS `P_0`, 0.0 AS `P_1`, 0.0 AS `P_2`, 1.0 AS `P_3`, 0.0 AS `P_4`, 0.0 AS `P_5`, 0.0 AS `P_6`, 0.0 AS `P_7`, 0.0 AS `P_8`, 0.0 AS `P_9`, 3 AS `D`, 1.0 AS `DP` UNION ALL SELECT 13 AS nid, 0.0 AS `P_0`, 0.0 AS `P_1`, 0.0 AS `P_2`, 0.0 AS `P_3`, 1.0 AS `P_4`, 0.0 AS `P_5`, 0.0 AS `P_6`, 0.0 AS `P_7`, 0.0 AS `P_8`, 0.0 AS `P_9`, 4 AS `D`, 1.0 AS `DP` UNION ALL SELECT 15 AS nid, 0.0 AS `P_0`, 0.0 AS `P_1`, 0.0 AS `P_2`, 0.0 AS `P_3`, 0.0 AS `P_4`, 0.0 AS `P_5`, 1.0 AS `P_6`, 0.0 AS `P_7`, 0.0 AS `P_8`, 0.0 AS `P_9`, 6 AS `D`, 1.0 AS `DP` UNION ALL SELECT 16 AS nid, 0.0 AS `P_0`, 0.0 AS `P_1`, 1.0 AS `P_2`, 0.0 AS `P_3`, 0.0 AS `P_4`, 0.0 AS `P_5`, 0.0 AS `P_6`, 0.0 AS `P_7`, 0.0 AS `P_8`, 0.0 AS `P_9`, 2 AS `D`, 1.0 AS `DP` UNION ALL SELECT 19 AS nid, 0.0 AS `P_0`, 0.0 AS `P_1`, 0.0 AS `P_2`, 0.0 AS `P_3`, 0.0 AS `P_4`, 1.0 AS `P_5`, 0.0 AS `P_6`, 0.0 AS `P_7`, 0.0 AS `P_8`, 0.0 AS `P_9`, 5 AS `D`, 1.0 AS `DP` UNION ALL SELECT 20 AS nid, 0.0 AS `P_0`, 0.0 AS `P_1`, 0.0 AS `P_2`, 0.0 AS `P_3`, 0.0 AS `P_4`, 0.0 AS `P_5`, 0.0 AS `P_6`, 0.0 AS `P_7`, 1.0 AS `P_8`, 0.0 AS `P_9`, 8 AS `D`, 1.0 AS `DP` UNION ALL SELECT 22 AS nid, 0.0 AS `P_0`, 0.0 AS `P_1`, 1.0 AS `P_2`, 0.0 AS `P_3`, 0.0 AS `P_4`, 0.0 AS `P_5`, 0.0 AS `P_6`, 0.0 AS `P_7`, 0.0 AS `P_8`, 0.0 AS `P_9`, 2 AS `D`, 1.0 AS `DP` UNION ALL SELECT 23 AS nid, 1.0 AS `P_0`, 0.0 AS `P_1`, 0.0 AS `P_2`, 0.0 AS `P_3`, 0.0 AS `P_4`, 0.0 AS `P_5`, 0.0 AS `P_6`, 0.0 AS `P_7`, 0.0 AS `P_8`, 0.0 AS `P_9`, 0 AS `D`, 1.0 AS `DP` UNION ALL SELECT 28 AS nid, 0.0 AS `P_0`, 0.0 AS `P_1`, 0.5641025641025641 AS `P_2`, 0.20512820512820512 AS `P_3`, 0.0 AS `P_4`, 0.05128205128205128 AS `P_5`, 0.0 AS `P_6`, 0.10256410256410256 AS `P_7`, 0.05128205128205128 AS `P_8`, 0.02564102564102564 AS `P_9`, 2 AS `D`, 0.5641025641025641 AS `DP` UNION ALL SELECT 29 AS nid, 0.0 AS `P_0`, 0.7407407407407407 AS `P_1`, 0.07407407407407407 AS `P_2`, 0.037037037037037035 AS `P_3`, 0.07407407407407407 AS `P_4`, 0.0 AS `P_5`, 0.07407407407407407 AS `P_6`, 0.0 AS `P_7`, 0.0 AS `P_8`, 0.0 AS `P_9`, 1 AS `D`, 0.7407407407407407 AS `DP` UNION ALL SELECT 31 AS nid, 0.0 AS `P_0`, 0.0 AS `P_1`, 0.0 AS `P_2`, 0.3333333333333333 AS `P_3`, 0.3333333333333333 AS `P_4`, 0.0 AS `P_5`, 0.0 AS `P_6`, 0.3333333333333333 AS `P_7`, 0.0 AS `P_8`, 0.0 AS `P_9`, 3 AS `D`, 0.3333333333333333 AS `DP` UNION ALL SELECT 32 AS nid, 0.0 AS `P_0`, 0.0 AS `P_1`, 0.0 AS `P_2`, 0.0 AS `P_3`, 0.011627906976744186 AS `P_4`, 0.9883720930232558 AS `P_5`, 0.0 AS `P_6`, 0.0 AS `P_7`, 0.0 AS `P_8`, 0.0 AS `P_9`, 5 AS `D`, 0.9883720930232558 AS `DP` UNION ALL SELECT 35 AS nid, 0.0 AS `P_0`, 0.7777777777777778 AS `P_1`, 0.2222222222222222 AS `P_2`, 0.0 AS `P_3`, 0.0 AS `P_4`, 0.0 AS `P_5`, 0.0 AS `P_6`, 0.0 AS `P_7`, 0.0 AS `P_8`, 0.0 AS `P_9`, 1 AS `D`, 0.7777777777777778 AS `DP` UNION ALL SELECT 36 AS nid, 0.0 AS `P_0`, 0.0 AS `P_1`, 0.0 AS `P_2`, 0.0 AS `P_3`, 0.625 AS `P_4`, 0.125 AS `P_5`, 0.25 AS `P_6`, 0.0 AS `P_7`, 0.0 AS `P_8`, 0.0 AS `P_9`, 4 AS `D`, 0.625 AS `DP` UNION ALL SELECT 38 AS nid, 0.0 AS `P_0`, 0.0 AS `P_1`, 0.0 AS `P_2`, 0.0 AS `P_3`, 0.0 AS `P_4`, 0.0 AS `P_5`, 1.0 AS `P_6`, 0.0 AS `P_7`, 0.0 AS `P_8`, 0.0 AS `P_9`, 6 AS `D`, 1.0 AS `DP` UNION ALL SELECT 39 AS nid, 0.0 AS `P_0`, 0.0 AS `P_1`, 1.0 AS `P_2`, 0.0 AS `P_3`, 0.0 AS `P_4`, 0.0 AS `P_5`, 0.0 AS `P_6`, 0.0 AS `P_7`, 0.0 AS `P_8`, 0.0 AS `P_9`, 2 AS `D`, 1.0 AS `DP` UNION ALL SELECT 43 AS nid, 0.0 AS `P_0`, 0.0 AS `P_1`, 0.043478260869565216 AS `P_2`, 0.8695652173913043 AS `P_3`, 0.0 AS `P_4`, 0.0 AS `P_5`, 0.0 AS `P_6`, 0.0 AS `P_7`, 0.03260869565217391 AS `P_8`, 0.05434782608695652 AS `P_9`, 3 AS `D`, 0.8695652173913043 AS `DP` UNION ALL SELECT 44 AS nid, 0.0 AS `P_0`, 0.1411764705882353 AS `P_1`, 0.0 AS `P_2`, 0.07058823529411765 AS `P_3`, 0.0 AS `P_4`, 0.03529411764705882 AS `P_5`, 0.0 AS `P_6`, 0.023529411764705882 AS `P_7`, 0.10588235294117647 AS `P_8`, 0.6235294117647059 AS `P_9`, 9 AS `D`, 0.6235294117647059 AS `DP` UNION ALL SELECT 46 AS nid, 0.0 AS `P_0`, 0.0196078431372549 AS `P_1`, 0.029411764705882353 AS `P_2`, 0.0392156862745098 AS `P_3`, 0.0392156862745098 AS `P_4`, 0.00980392156862745 AS `P_5`, 0.0 AS `P_6`, 0.7450980392156863 AS `P_7`, 0.0392156862745098 AS `P_8`, 0.0784313725490196 AS `P_9`, 7 AS `D`, 0.7450980392156863 AS `DP` UNION ALL SELECT 47 AS nid, 0.00881057268722467 AS `P_0`, 0.2422907488986784 AS `P_1`, 0.31277533039647576 AS `P_2`, 0.03524229074889868 AS `P_3`, 0.013215859030837005 AS `P_4`, 0.0 AS `P_5`, 0.004405286343612335 AS `P_6`, 0.030837004405286344 AS `P_7`, 0.3436123348017621 AS `P_8`, 0.00881057268722467 AS `P_9`, 8 AS `D`, 0.3436123348017621 AS `DP` UNION ALL SELECT 50 AS nid, 0.0 AS `P_0`, 0.03571428571428571 AS `P_1`, 0.0 AS `P_2`, 0.0 AS `P_3`, 0.9642857142857143 AS `P_4`, 0.0 AS `P_5`, 0.0 AS `P_6`, 0.0 AS `P_7`, 0.0 AS `P_8`, 0.0 AS `P_9`, 4 AS `D`, 0.9642857142857143 AS `DP` UNION ALL SELECT 51 AS nid, 0.0 AS `P_0`, 0.0 AS `P_1`, 0.0 AS `P_2`, 0.0 AS `P_3`, 0.0 AS `P_4`, 0.25 AS `P_5`, 0.25 AS `P_6`, 0.5 AS `P_7`, 0.0 AS `P_8`, 0.0 AS `P_9`, 7 AS `D`, 0.5 AS `DP` UNION ALL SELECT 53 AS nid, 0.0 AS `P_0`, 0.0 AS `P_1`, 0.0 AS `P_2`, 0.0 AS `P_3`, 0.0 AS `P_4`, 0.0 AS `P_5`, 0.0 AS `P_6`, 1.0 AS `P_7`, 0.0 AS `P_8`, 0.0 AS `P_9`, 7 AS `D`, 1.0 AS `DP` UNION ALL SELECT 54 AS nid, 0.0 AS `P_0`, 0.5238095238095238 AS `P_1`, 0.047619047619047616 AS `P_2`, 0.0 AS `P_3`, 0.23809523809523808 AS `P_4`, 0.0 AS `P_5`, 0.0 AS `P_6`, 0.047619047619047616 AS `P_7`, 0.14285714285714285 AS `P_8`, 0.0 AS `P_9`, 1 AS `D`, 0.5238095238095238 AS `DP`) AS `Values`), 
`DT_Output_1` AS 
(SELECT `DT_node_lookup_1`.`KEY` AS `KEY`, `DT_node_lookup_1`.node_id_2 AS node_id_2, `DT_node_data_1`.nid AS nid, `DT_node_data_1`.`P_0` AS `P_0`, `DT_node_data_1`.`P_1` AS `P_1`, `DT_node_data_1`.`P_2` AS `P_2`, `DT_node_data_1`.`P_3` AS `P_3`, `DT_node_data_1`.`P_4` AS `P_4`, `DT_node_data_1`.`P_5` AS `P_5`, `DT_node_data_1`.`P_6` AS `P_6`, `DT_node_data_1`.`P_7` AS `P_7`, `DT_node_data_1`.`P_8` AS `P_8`, `DT_node_data_1`.`P_9` AS `P_9`, `DT_node_data_1`.`D` AS `D`, `DT_node_data_1`.`DP` AS `DP` 
FROM `DT_node_lookup_1` LEFT OUTER JOIN `DT_node_data_1` ON `DT_node_lookup_1`.node_id_2 = `DT_node_data_1`.nid), 
`Calibrated_Model_1` AS 
(SELECT `DT_Output_1`.`KEY` AS `KEY`, CAST(NULL AS DOUBLE) AS `Score_0`, CAST(NULL AS DOUBLE) AS `Score_1`, CAST(NULL AS DOUBLE) AS `Score_2`, CAST(NULL AS DOUBLE) AS `Score_3`, CAST(NULL AS DOUBLE) AS `Score_4`, CAST(NULL AS DOUBLE) AS `Score_5`, CAST(NULL AS DOUBLE) AS `Score_6`, CAST(NULL AS DOUBLE) AS `Score_7`, CAST(NULL AS DOUBLE) AS `Score_8`, CAST(NULL AS DOUBLE) AS `Score_9`, `DT_Output_1`.`P_0` AS `Proba_0`, `DT_Output_1`.`P_1` AS `Proba_1`, `DT_Output_1`.`P_2` AS `Proba_2`, `DT_Output_1`.`P_3` AS `Proba_3`, `DT_Output_1`.`P_4` AS `Proba_4`, `DT_Output_1`.`P_5` AS `Proba_5`, `DT_Output_1`.`P_6` AS `Proba_6`, `DT_Output_1`.`P_7` AS `Proba_7`, `DT_Output_1`.`P_8` AS `Proba_8`, `DT_Output_1`.`P_9` AS `Proba_9`, CASE WHEN (`DT_Output_1`.`P_0` IS NULL OR `DT_Output_1`.`P_0` > 0.0) THEN ln(`DT_Output_1`.`P_0`) ELSE -1.79769313486231e+308 END AS `LogProba_0`, CASE WHEN (`DT_Output_1`.`P_1` IS NULL OR `DT_Output_1`.`P_1` > 0.0) THEN ln(`DT_Output_1`.`P_1`) ELSE -1.79769313486231e+308 END AS `LogProba_1`, CASE WHEN (`DT_Output_1`.`P_2` IS NULL OR `DT_Output_1`.`P_2` > 0.0) THEN ln(`DT_Output_1`.`P_2`) ELSE -1.79769313486231e+308 END AS `LogProba_2`, CASE WHEN (`DT_Output_1`.`P_3` IS NULL OR `DT_Output_1`.`P_3` > 0.0) THEN ln(`DT_Output_1`.`P_3`) ELSE -1.79769313486231e+308 END AS `LogProba_3`, CASE WHEN (`DT_Output_1`.`P_4` IS NULL OR `DT_Output_1`.`P_4` > 0.0) THEN ln(`DT_Output_1`.`P_4`) ELSE -1.79769313486231e+308 END AS `LogProba_4`, CASE WHEN (`DT_Output_1`.`P_5` IS NULL OR `DT_Output_1`.`P_5` > 0.0) THEN ln(`DT_Output_1`.`P_5`) ELSE -1.79769313486231e+308 END AS `LogProba_5`, CASE WHEN (`DT_Output_1`.`P_6` IS NULL OR `DT_Output_1`.`P_6` > 0.0) THEN ln(`DT_Output_1`.`P_6`) ELSE -1.79769313486231e+308 END AS `LogProba_6`, CASE WHEN (`DT_Output_1`.`P_7` IS NULL OR `DT_Output_1`.`P_7` > 0.0) THEN ln(`DT_Output_1`.`P_7`) ELSE -1.79769313486231e+308 END AS `LogProba_7`, CASE WHEN (`DT_Output_1`.`P_8` IS NULL OR `DT_Output_1`.`P_8` > 0.0) THEN ln(`DT_Output_1`.`P_8`) ELSE -1.79769313486231e+308 END AS `LogProba_8`, CASE WHEN (`DT_Output_1`.`P_9` IS NULL OR `DT_Output_1`.`P_9` > 0.0) THEN ln(`DT_Output_1`.`P_9`) ELSE -1.79769313486231e+308 END AS `LogProba_9`, CAST(NULL AS BIGINT) AS `Decision`, CAST(NULL AS DOUBLE) AS `DecisionProba`, coalesce(CAST(NULL AS DOUBLE), `DT_Output_1`.`P_0`) AS `ScoreOrProba_0`, coalesce(CAST(NULL AS DOUBLE), `DT_Output_1`.`P_1`) AS `ScoreOrProba_1`, coalesce(CAST(NULL AS DOUBLE), `DT_Output_1`.`P_2`) AS `ScoreOrProba_2`, coalesce(CAST(NULL AS DOUBLE), `DT_Output_1`.`P_3`) AS `ScoreOrProba_3`, coalesce(CAST(NULL AS DOUBLE), `DT_Output_1`.`P_4`) AS `ScoreOrProba_4`, coalesce(CAST(NULL AS DOUBLE), `DT_Output_1`.`P_5`) AS `ScoreOrProba_5`, coalesce(CAST(NULL AS DOUBLE), `DT_Output_1`.`P_6`) AS `ScoreOrProba_6`, coalesce(CAST(NULL AS DOUBLE), `DT_Output_1`.`P_7`) AS `ScoreOrProba_7`, coalesce(CAST(NULL AS DOUBLE), `DT_Output_1`.`P_8`) AS `ScoreOrProba_8`, coalesce(CAST(NULL AS DOUBLE), `DT_Output_1`.`P_9`) AS `ScoreOrProba_9` 
FROM `DT_Output_1`), 
isotonic_cte_1 AS 
(SELECT `Calibrated_Model_1`.`KEY` AS `KEY`, CASE WHEN (`Calibrated_Model_1`.`ScoreOrProba_0` < 0.0) THEN 0.006198347107438017 WHEN (`Calibrated_Model_1`.`ScoreOrProba_0` < 0.00881057268722467) THEN (`Calibrated_Model_1`.`ScoreOrProba_0` - 0.0) * 0.0 + 0.006198347107438017 WHEN (`Calibrated_Model_1`.`ScoreOrProba_0` < 1.0) THEN (`Calibrated_Model_1`.`ScoreOrProba_0` - 0.00881057268722467) * 0.9432890401339599 + 0.006198347107438017 ELSE 0.9411764705882353 END AS `Proba_0`, CASE WHEN (`Calibrated_Model_1`.`ScoreOrProba_1` < 0.0) THEN 0.006289308176100629 WHEN (`Calibrated_Model_1`.`ScoreOrProba_1` < 0.0196078431372549) THEN (`Calibrated_Model_1`.`ScoreOrProba_1` - 0.0) * 1.1363881401617248 + 0.006289308176100629 WHEN (`Calibrated_Model_1`.`ScoreOrProba_1` < 0.03571428571428571) THEN (`Calibrated_Model_1`.`ScoreOrProba_1` - 0.0196078431372549) * 0.0 + 0.02857142857142857 WHEN (`Calibrated_Model_1`.`ScoreOrProba_1` < 0.1411764705882353) THEN (`Calibrated_Model_1`.`ScoreOrProba_1` - 0.03571428571428571) * 0.2558654271801682 + 0.02857142857142857 WHEN (`Calibrated_Model_1`.`ScoreOrProba_1` < 0.2422907488986784) THEN (`Calibrated_Model_1`.`ScoreOrProba_1` - 0.1411764705882353) * 1.6612278603565125 + 0.05555555555555555 WHEN (`Calibrated_Model_1`.`ScoreOrProba_1` < 0.5238095238095238) THEN (`Calibrated_Model_1`.`ScoreOrProba_1` - 0.2422907488986784) * 0.8206061668672344 + 0.2235294117647059 WHEN (`Calibrated_Model_1`.`ScoreOrProba_1` < 0.7407407407407407) THEN (`Calibrated_Model_1`.`ScoreOrProba_1` - 0.5238095238095238) * 0.8381374722838141 + 0.45454545454545453 WHEN (`Calibrated_Model_1`.`ScoreOrProba_1` < 0.7777777777777778) THEN (`Calibrated_Model_1`.`ScoreOrProba_1` - 0.7407407407407407) * 9.818181818181804 + 0.6363636363636364 ELSE 1.0 END AS `Proba_1`, CASE WHEN (`Calibrated_Model_1`.`ScoreOrProba_2` < 0.0) THEN 0.005405405405405406 WHEN (`Calibrated_Model_1`.`ScoreOrProba_2` < 0.029411764705882353) THEN (`Calibrated_Model_1`.`ScoreOrProba_2` - 0.0) * 0.14002574002573998 + 0.005405405405405406 WHEN (`Calibrated_Model_1`.`ScoreOrProba_2` < 0.047619047619047616) THEN (`Calibrated_Model_1`.`ScoreOrProba_2` - 0.029411764705882353) * 0.0 + 0.009523809523809523 WHEN (`Calibrated_Model_1`.`ScoreOrProba_2` < 0.07407407407407407) THEN (`Calibrated_Model_1`.`ScoreOrProba_2` - 0.047619047619047616) * 1.3581818181818184 + 0.009523809523809523 WHEN (`Calibrated_Model_1`.`ScoreOrProba_2` < 0.2222222222222222) THEN (`Calibrated_Model_1`.`ScoreOrProba_2` - 0.07407407407407407) * 0.0 + 0.045454545454545456 WHEN (`Calibrated_Model_1`.`ScoreOrProba_2` < 0.31277533039647576) THEN (`Calibrated_Model_1`.`ScoreOrProba_2` - 0.2222222222222222) * 3.1358086428674663 + 0.045454545454545456 WHEN (`Calibrated_Model_1`.`ScoreOrProba_2` < 0.5641025641025641) THEN (`Calibrated_Model_1`.`ScoreOrProba_2` - 0.31277533039647576) * 0.6787495042961005 + 0.32941176470588235 WHEN (`Calibrated_Model_1`.`ScoreOrProba_2` < 1.0) THEN (`Calibrated_Model_1`.`ScoreOrProba_2` - 0.5641025641025641) * 1.1470588235294117 + 0.5 ELSE 1.0 END AS `Proba_2`, CASE WHEN (`Calibrated_Model_1`.`ScoreOrProba_3` < 0.0) THEN 0.006172839506172839 WHEN (`Calibrated_Model_1`.`ScoreOrProba_3` < 0.03524229074889868) THEN (`Calibrated_Model_1`.`ScoreOrProba_3` - 0.0) * 0.8263162672476397 + 0.006172839506172839 WHEN (`Calibrated_Model_1`.`ScoreOrProba_3` < 0.037037037037037035) THEN (`Calibrated_Model_1`.`ScoreOrProba_3` - 0.03524229074889868) * 13.620945899020805 + 0.03529411764705882 WHEN (`Calibrated_Model_1`.`ScoreOrProba_3` < 0.0392156862745098) THEN (`Calibrated_Model_1`.`ScoreOrProba_3` - 0.037037037037037035) * 0.0 + 0.05974025974025974 WHEN (`Calibrated_Model_1`.`ScoreOrProba_3` < 0.07058823529411765) THEN (`Calibrated_Model_1`.`ScoreOrProba_3` - 0.0392156862745098) * 1.6374458874458873 + 0.05974025974025974 WHEN (`Calibrated_Model_1`.`ScoreOrProba_3` < 0.20512820512820512) THEN (`Calibrated_Model_1`.`ScoreOrProba_3` - 0.07058823529411765) * 0.0 + 0.1111111111111111 WHEN (`Calibrated_Model_1`.`ScoreOrProba_3` < 0.8695652173913043) THEN (`Calibrated_Model_1`.`ScoreOrProba_3` - 0.20512820512820512) * 0.5525727069351232 + 0.1111111111111111 WHEN (`Calibrated_Model_1`.`ScoreOrProba_3` < 1.0) THEN (`Calibrated_Model_1`.`ScoreOrProba_3` - 0.8695652173913043) * 0.0 + 0.4782608695652174 ELSE 0.4782608695652174 END AS `Proba_3`, CASE WHEN (`Calibrated_Model_1`.`ScoreOrProba_4` < 0.0) THEN 0.006578947368421052 WHEN (`Calibrated_Model_1`.`ScoreOrProba_4` < 0.011627906976744186) THEN (`Calibrated_Model_1`.`ScoreOrProba_4` - 0.0) * 0.0 + 0.006578947368421052 WHEN (`Calibrated_Model_1`.`ScoreOrProba_4` < 0.013215859030837005) THEN (`Calibrated_Model_1`.`ScoreOrProba_4` - 0.011627906976744186) * 3.265689603515429 + 0.006578947368421052 WHEN (`Calibrated_Model_1`.`ScoreOrProba_4` < 0.0392156862745098) THEN (`Calibrated_Model_1`.`ScoreOrProba_4` - 0.013215859030837005) * 0.6464167062173706 + 0.011764705882352941 WHEN (`Calibrated_Model_1`.`ScoreOrProba_4` < 0.07407407407407407) THEN (`Calibrated_Model_1`.`ScoreOrProba_4` - 0.0392156862745098) * 1.7883116883116887 + 0.02857142857142857 WHEN (`Calibrated_Model_1`.`ScoreOrProba_4` < 0.23809523809523808) THEN (`Calibrated_Model_1`.`ScoreOrProba_4` - 0.07407407407407407) * 1.1085043988269794 + 0.09090909090909091 WHEN (`Calibrated_Model_1`.`ScoreOrProba_4` < 0.625) THEN (`Calibrated_Model_1`.`ScoreOrProba_4` - 0.23809523809523808) * 0.9566433566433568 + 0.2727272727272727 WHEN (`Calibrated_Model_1`.`ScoreOrProba_4` < 0.9642857142857143) THEN (`Calibrated_Model_1`.`ScoreOrProba_4` - 0.625) * 0.7963386727688784 + 0.6428571428571429 ELSE 0.9130434782608695 END AS `Proba_4`, CASE WHEN (`Calibrated_Model_1`.`ScoreOrProba_5` < 0.0) THEN 0.0021551724137931034 WHEN (`Calibrated_Model_1`.`ScoreOrProba_5` < 0.00980392156862745) THEN (`Calibrated_Model_1`.`ScoreOrProba_5` - 0.0) * 0.0 + 0.0021551724137931034 WHEN (`Calibrated_Model_1`.`ScoreOrProba_5` < 0.03529411764705882) THEN (`Calibrated_Model_1`.`ScoreOrProba_5` - 0.00980392156862745) * 0.2786987916298261 + 0.0021551724137931034 WHEN (`Calibrated_Model_1`.`ScoreOrProba_5` < 0.125) THEN (`Calibrated_Model_1`.`ScoreOrProba_5` - 0.03529411764705882) * 0.0 + 0.009259259259259259 WHEN (`Calibrated_Model_1`.`ScoreOrProba_5` < 0.9883720930232558) THEN (`Calibrated_Model_1`.`ScoreOrProba_5` - 0.125) * 0.9544831026312507 + 0.009259259259259259 WHEN (`Calibrated_Model_1`.`ScoreOrProba_5` < 1.0) THEN (`Calibrated_Model_1`.`ScoreOrProba_5` - 0.9883720930232558) * 0.0 + 0.8333333333333333 ELSE 0.8333333333333333 END AS `Proba_5`, CASE WHEN (`Calibrated_Model_1`.`ScoreOrProba_6` < 0.0) THEN 0.0022522522522522522 WHEN (`Calibrated_Model_1`.`ScoreOrProba_6` < 0.004405286343612335) THEN (`Calibrated_Model_1`.`ScoreOrProba_6` - 0.0) * 0.0 + 0.0022522522522522522 WHEN (`Calibrated_Model_1`.`ScoreOrProba_6` < 0.07407407407407407) THEN (`Calibrated_Model_1`.`ScoreOrProba_6` - 0.004405286343612335) * 1.2725474569736865 + 0.0022522522522522522 WHEN (`Calibrated_Model_1`.`ScoreOrProba_6` < 0.25) THEN (`Calibrated_Model_1`.`ScoreOrProba_6` - 0.07407407407407407) * 1.5133287764866714 + 0.09090909090909091 WHEN (`Calibrated_Model_1`.`ScoreOrProba_6` < 1.0) THEN (`Calibrated_Model_1`.`ScoreOrProba_6` - 0.25) * 0.8571428571428571 + 0.35714285714285715 ELSE 1.0 END AS `Proba_6`, CASE WHEN (`Calibrated_Model_1`.`ScoreOrProba_7` < 0.0) THEN 0.0027624309392265192 WHEN (`Calibrated_Model_1`.`ScoreOrProba_7` < 0.023529411764705882) THEN (`Calibrated_Model_1`.`ScoreOrProba_7` - 0.0) * 0.0 + 0.0027624309392265192 WHEN (`Calibrated_Model_1`.`ScoreOrProba_7` < 0.030837004405286344) THEN (`Calibrated_Model_1`.`ScoreOrProba_7` - 0.023529411764705882) * 0.15862100492404946 + 0.0027624309392265192 WHEN (`Calibrated_Model_1`.`ScoreOrProba_7` < 0.10256410256410256) THEN (`Calibrated_Model_1`.`ScoreOrProba_7` - 0.030837004405286344) * 0.0 + 0.00392156862745098 WHEN (`Calibrated_Model_1`.`ScoreOrProba_7` < 0.7450980392156863) THEN (`Calibrated_Model_1`.`ScoreOrProba_7` - 0.10256410256410256) * 1.261200536552649 + 0.00392156862745098 WHEN (`Calibrated_Model_1`.`ScoreOrProba_7` < 1.0) THEN (`Calibrated_Model_1`.`ScoreOrProba_7` - 0.7450980392156863) * 0.0 + 0.8142857142857143 ELSE 0.8142857142857143 END AS `Proba_7`, CASE WHEN (`Calibrated_Model_1`.`ScoreOrProba_8` < 0.0) THEN 0.0 WHEN (`Calibrated_Model_1`.`ScoreOrProba_8` < 0.0392156862745098) THEN (`Calibrated_Model_1`.`ScoreOrProba_8` - 0.0) * 0.0 + 0.0 WHEN (`Calibrated_Model_1`.`ScoreOrProba_8` < 0.05128205128205128) THEN (`Calibrated_Model_1`.`ScoreOrProba_8` - 0.0392156862745098) * 6.5225694444444455 + 0.0 WHEN (`Calibrated_Model_1`.`ScoreOrProba_8` < 0.14285714285714285) THEN (`Calibrated_Model_1`.`ScoreOrProba_8` - 0.05128205128205128) * 0.0 + 0.0787037037037037 WHEN (`Calibrated_Model_1`.`ScoreOrProba_8` < 0.3436123348017621) THEN (`Calibrated_Model_1`.`ScoreOrProba_8` - 0.14285714285714285) * 1.2488247928917298 + 0.0787037037037037 WHEN (`Calibrated_Model_1`.`ScoreOrProba_8` < 1.0) THEN (`Calibrated_Model_1`.`ScoreOrProba_8` - 0.3436123348017621) * 0.25988945913936046 + 0.32941176470588235 ELSE 0.5 END AS `Proba_8`, CASE WHEN (`Calibrated_Model_1`.`ScoreOrProba_9` < 0.0) THEN 0.023668639053254437 WHEN (`Calibrated_Model_1`.`ScoreOrProba_9` < 0.00881057268722467) THEN (`Calibrated_Model_1`.`ScoreOrProba_9` - 0.0) * 0.6518447615732683 + 0.023668639053254437 WHEN (`Calibrated_Model_1`.`ScoreOrProba_9` < 0.02564102564102564) THEN (`Calibrated_Model_1`.`ScoreOrProba_9` - 0.00881057268722467) * 0.0 + 0.029411764705882353 WHEN (`Calibrated_Model_1`.`ScoreOrProba_9` < 0.05434782608695652) THEN (`Calibrated_Model_1`.`ScoreOrProba_9` - 0.02564102564102564) * 0.2303663212857958 + 0.029411764705882353 WHEN (`Calibrated_Model_1`.`ScoreOrProba_9` < 0.0784313725490196) THEN (`Calibrated_Model_1`.`ScoreOrProba_9` - 0.05434782608695652) * 0.0 + 0.03602484472049689 WHEN (`Calibrated_Model_1`.`ScoreOrProba_9` < 0.6235294117647059) THEN (`Calibrated_Model_1`.`ScoreOrProba_9` - 0.0784313725490196) * 1.0040551409803833 + 0.03602484472049689 WHEN (`Calibrated_Model_1`.`ScoreOrProba_9` < 1.0) THEN (`Calibrated_Model_1`.`ScoreOrProba_9` - 0.6235294117647059) * 1.1067708333333333 + 0.5833333333333334 ELSE 1.0 END AS `Proba_9` 
FROM `Calibrated_Model_1`), 
`Normalized_Probas_1` AS 
(SELECT isotonic_cte_1.`KEY` AS `KEY`, isotonic_cte_1.`Proba_0` / (isotonic_cte_1.`Proba_0` + isotonic_cte_1.`Proba_1` + isotonic_cte_1.`Proba_2` + isotonic_cte_1.`Proba_3` + isotonic_cte_1.`Proba_4` + isotonic_cte_1.`Proba_5` + isotonic_cte_1.`Proba_6` + isotonic_cte_1.`Proba_7` + isotonic_cte_1.`Proba_8` + isotonic_cte_1.`Proba_9`) AS `Proba_0`, isotonic_cte_1.`Proba_1` / (isotonic_cte_1.`Proba_0` + isotonic_cte_1.`Proba_1` + isotonic_cte_1.`Proba_2` + isotonic_cte_1.`Proba_3` + isotonic_cte_1.`Proba_4` + isotonic_cte_1.`Proba_5` + isotonic_cte_1.`Proba_6` + isotonic_cte_1.`Proba_7` + isotonic_cte_1.`Proba_8` + isotonic_cte_1.`Proba_9`) AS `Proba_1`, isotonic_cte_1.`Proba_2` / (isotonic_cte_1.`Proba_0` + isotonic_cte_1.`Proba_1` + isotonic_cte_1.`Proba_2` + isotonic_cte_1.`Proba_3` + isotonic_cte_1.`Proba_4` + isotonic_cte_1.`Proba_5` + isotonic_cte_1.`Proba_6` + isotonic_cte_1.`Proba_7` + isotonic_cte_1.`Proba_8` + isotonic_cte_1.`Proba_9`) AS `Proba_2`, isotonic_cte_1.`Proba_3` / (isotonic_cte_1.`Proba_0` + isotonic_cte_1.`Proba_1` + isotonic_cte_1.`Proba_2` + isotonic_cte_1.`Proba_3` + isotonic_cte_1.`Proba_4` + isotonic_cte_1.`Proba_5` + isotonic_cte_1.`Proba_6` + isotonic_cte_1.`Proba_7` + isotonic_cte_1.`Proba_8` + isotonic_cte_1.`Proba_9`) AS `Proba_3`, isotonic_cte_1.`Proba_4` / (isotonic_cte_1.`Proba_0` + isotonic_cte_1.`Proba_1` + isotonic_cte_1.`Proba_2` + isotonic_cte_1.`Proba_3` + isotonic_cte_1.`Proba_4` + isotonic_cte_1.`Proba_5` + isotonic_cte_1.`Proba_6` + isotonic_cte_1.`Proba_7` + isotonic_cte_1.`Proba_8` + isotonic_cte_1.`Proba_9`) AS `Proba_4`, isotonic_cte_1.`Proba_5` / (isotonic_cte_1.`Proba_0` + isotonic_cte_1.`Proba_1` + isotonic_cte_1.`Proba_2` + isotonic_cte_1.`Proba_3` + isotonic_cte_1.`Proba_4` + isotonic_cte_1.`Proba_5` + isotonic_cte_1.`Proba_6` + isotonic_cte_1.`Proba_7` + isotonic_cte_1.`Proba_8` + isotonic_cte_1.`Proba_9`) AS `Proba_5`, isotonic_cte_1.`Proba_6` / (isotonic_cte_1.`Proba_0` + isotonic_cte_1.`Proba_1` + isotonic_cte_1.`Proba_2` + isotonic_cte_1.`Proba_3` + isotonic_cte_1.`Proba_4` + isotonic_cte_1.`Proba_5` + isotonic_cte_1.`Proba_6` + isotonic_cte_1.`Proba_7` + isotonic_cte_1.`Proba_8` + isotonic_cte_1.`Proba_9`) AS `Proba_6`, isotonic_cte_1.`Proba_7` / (isotonic_cte_1.`Proba_0` + isotonic_cte_1.`Proba_1` + isotonic_cte_1.`Proba_2` + isotonic_cte_1.`Proba_3` + isotonic_cte_1.`Proba_4` + isotonic_cte_1.`Proba_5` + isotonic_cte_1.`Proba_6` + isotonic_cte_1.`Proba_7` + isotonic_cte_1.`Proba_8` + isotonic_cte_1.`Proba_9`) AS `Proba_7`, isotonic_cte_1.`Proba_8` / (isotonic_cte_1.`Proba_0` + isotonic_cte_1.`Proba_1` + isotonic_cte_1.`Proba_2` + isotonic_cte_1.`Proba_3` + isotonic_cte_1.`Proba_4` + isotonic_cte_1.`Proba_5` + isotonic_cte_1.`Proba_6` + isotonic_cte_1.`Proba_7` + isotonic_cte_1.`Proba_8` + isotonic_cte_1.`Proba_9`) AS `Proba_8`, isotonic_cte_1.`Proba_9` / (isotonic_cte_1.`Proba_0` + isotonic_cte_1.`Proba_1` + isotonic_cte_1.`Proba_2` + isotonic_cte_1.`Proba_3` + isotonic_cte_1.`Proba_4` + isotonic_cte_1.`Proba_5` + isotonic_cte_1.`Proba_6` + isotonic_cte_1.`Proba_7` + isotonic_cte_1.`Proba_8` + isotonic_cte_1.`Proba_9`) AS `Proba_9` 
FROM isotonic_cte_1), 
`DT_node_lookup_2` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_21` <= 0.5) THEN CASE WHEN (`ADS`.`Feature_42` <= 9.5) THEN CASE WHEN (`ADS`.`Feature_5` <= 2.5) THEN CASE WHEN (`ADS`.`Feature_9` <= 3.0) THEN CASE WHEN (`ADS`.`Feature_37` <= 8.0) THEN 5 ELSE 6 END ELSE CASE WHEN (`ADS`.`Feature_52` <= 8.0) THEN 8 ELSE 9 END END ELSE CASE WHEN (`ADS`.`Feature_18` <= 4.5) THEN CASE WHEN (`ADS`.`Feature_29` <= 7.0) THEN 12 ELSE 13 END ELSE 14 END END ELSE CASE WHEN (`ADS`.`Feature_54` <= 0.5) THEN CASE WHEN (`ADS`.`Feature_37` <= 5.0) THEN CASE WHEN (`ADS`.`Feature_28` <= 7.0) THEN 18 ELSE 19 END ELSE CASE WHEN (`ADS`.`Feature_5` <= 14.0) THEN 21 ELSE 22 END END ELSE CASE WHEN (`ADS`.`Feature_58` <= 9.0) THEN 24 ELSE 25 END END END ELSE CASE WHEN (`ADS`.`Feature_28` <= 0.5) THEN CASE WHEN (`ADS`.`Feature_36` <= 3.5) THEN CASE WHEN (`ADS`.`Feature_62` <= 3.5) THEN CASE WHEN (`ADS`.`Feature_59` <= 4.5) THEN 30 ELSE 31 END ELSE CASE WHEN (`ADS`.`Feature_3` <= 8.0) THEN 33 ELSE 34 END END ELSE CASE WHEN (`ADS`.`Feature_10` <= 4.5) THEN 36 ELSE CASE WHEN (`ADS`.`Feature_6` <= 0.5) THEN 38 ELSE 39 END END END ELSE CASE WHEN (`ADS`.`Feature_43` <= 2.5) THEN CASE WHEN (`ADS`.`Feature_26` <= 0.5) THEN CASE WHEN (`ADS`.`Feature_19` <= 10.5) THEN 43 ELSE 44 END ELSE CASE WHEN (`ADS`.`Feature_21` <= 9.5) THEN 46 ELSE 47 END END ELSE CASE WHEN (`ADS`.`Feature_60` <= 7.5) THEN CASE WHEN (`ADS`.`Feature_25` <= 3.5) THEN 50 ELSE 51 END ELSE CASE WHEN (`ADS`.`Feature_33` <= 1.5) THEN 53 ELSE 54 END END END END END AS node_id_2 
FROM digits AS `ADS`), 
`DT_node_data_2` AS 
(SELECT `Values`.nid AS nid, CAST(`Values`.`P_0` AS DOUBLE) AS `P_0`, CAST(`Values`.`P_1` AS DOUBLE) AS `P_1`, CAST(`Values`.`P_2` AS DOUBLE) AS `P_2`, CAST(`Values`.`P_3` AS DOUBLE) AS `P_3`, CAST(`Values`.`P_4` AS DOUBLE) AS `P_4`, CAST(`Values`.`P_5` AS DOUBLE) AS `P_5`, CAST(`Values`.`P_6` AS DOUBLE) AS `P_6`, CAST(`Values`.`P_7` AS DOUBLE) AS `P_7`, CAST(`Values`.`P_8` AS DOUBLE) AS `P_8`, CAST(`Values`.`P_9` AS DOUBLE) AS `P_9`, CAST(`Values`.`D` AS DOUBLE) AS `D`, CAST(`Values`.`DP` AS DOUBLE) AS `DP` 
FROM (SELECT 5 AS nid, 0.0 AS `P_0`, 0.8636363636363636 AS `P_1`, 0.09090909090909091 AS `P_2`, 0.0 AS `P_3`, 0.0 AS `P_4`, 0.0 AS `P_5`, 0.0 AS `P_6`, 0.0 AS `P_7`, 0.045454545454545456 AS `P_8`, 0.0 AS `P_9`, 1 AS `D`, 0.8636363636363636 AS `DP` UNION ALL SELECT 6 AS nid, 0.0 AS `P_0`, 0.0 AS `P_1`, 0.0 AS `P_2`, 0.18181818181818182 AS `P_3`, 0.36363636363636365 AS `P_4`, 0.18181818181818182 AS `P_5`, 0.18181818181818182 AS `P_6`, 0.09090909090909091 AS `P_7`, 0.0 AS `P_8`, 0.0 AS `P_9`, 4 AS `D`, 0.36363636363636365 AS `DP` UNION ALL SELECT 8 AS nid, 0.0 AS `P_0`, 0.0 AS `P_1`, 0.16666666666666666 AS `P_2`, 0.3333333333333333 AS `P_3`, 0.0 AS `P_4`, 0.0 AS `P_5`, 0.0 AS `P_6`, 0.0 AS `P_7`, 0.3333333333333333 AS `P_8`, 0.16666666666666666 AS `P_9`, 3 AS `D`, 0.3333333333333333 AS `DP` UNION ALL SELECT 9 AS nid, 0.0 AS `P_0`, 0.0 AS `P_1`, 1.0 AS `P_2`, 0.0 AS `P_3`, 0.0 AS `P_4`, 0.0 AS `P_5`, 0.0 AS `P_6`, 0.0 AS `P_7`, 0.0 AS `P_8`, 0.0 AS `P_9`, 2 AS `D`, 1.0 AS `DP` UNION ALL SELECT 12 AS nid, 0.0 AS `P_0`, 0.0 AS `P_1`, 0.0 AS `P_2`, 1.0 AS `P_3`, 0.0 AS `P_4`, 0.0 AS `P_5`, 0.0 AS `P_6`, 0.0 AS `P_7`, 0.0 AS `P_8`, 0.0 AS `P_9`, 3 AS `D`, 1.0 AS `DP` UNION ALL SELECT 13 AS nid, 0.0 AS `P_0`, 0.0 AS `P_1`, 0.0 AS `P_2`, 0.0 AS `P_3`, 0.0 AS `P_4`, 0.0 AS `P_5`, 0.0 AS `P_6`, 1.0 AS `P_7`, 0.0 AS `P_8`, 0.0 AS `P_9`, 7 AS `D`, 1.0 AS `DP` UNION ALL SELECT 14 AS nid, 0.0 AS `P_0`, 0.0 AS `P_1`, 0.0 AS `P_2`, 0.0 AS `P_3`, 0.0 AS `P_4`, 1.0 AS `P_5`, 0.0 AS `P_6`, 0.0 AS `P_7`, 0.0 AS `P_8`, 0.0 AS `P_9`, 5 AS `D`, 1.0 AS `DP` UNION ALL SELECT 18 AS nid, 0.16666666666666666 AS `P_0`, 0.0 AS `P_1`, 0.0 AS `P_2`, 0.0 AS `P_3`, 0.0 AS `P_4`, 0.16666666666666666 AS `P_5`, 0.6666666666666666 AS `P_6`, 0.0 AS `P_7`, 0.0 AS `P_8`, 0.0 AS `P_9`, 6 AS `D`, 0.6666666666666666 AS `DP` UNION ALL SELECT 19 AS nid, 0.0 AS `P_0`, 1.0 AS `P_1`, 0.0 AS `P_2`, 0.0 AS `P_3`, 0.0 AS `P_4`, 0.0 AS `P_5`, 0.0 AS `P_6`, 0.0 AS `P_7`, 0.0 AS `P_8`, 0.0 AS `P_9`, 1 AS `D`, 1.0 AS `DP` UNION ALL SELECT 21 AS nid, 0.0 AS `P_0`, 0.0 AS `P_1`, 0.0 AS `P_2`, 0.0 AS `P_3`, 1.0 AS `P_4`, 0.0 AS `P_5`, 0.0 AS `P_6`, 0.0 AS `P_7`, 0.0 AS `P_8`, 0.0 AS `P_9`, 4 AS `D`, 1.0 AS `DP` UNION ALL SELECT 22 AS nid, 0.0 AS `P_0`, 0.0 AS `P_1`, 0.0 AS `P_2`, 0.0 AS `P_3`, 0.0 AS `P_4`, 1.0 AS `P_5`, 0.0 AS `P_6`, 0.0 AS `P_7`, 0.0 AS `P_8`, 0.0 AS `P_9`, 5 AS `D`, 1.0 AS `DP` UNION ALL SELECT 24 AS nid, 0.0 AS `P_0`, 0.0 AS `P_1`, 0.0 AS `P_2`, 0.0 AS `P_3`, 0.0 AS `P_4`, 0.0 AS `P_5`, 1.0 AS `P_6`, 0.0 AS `P_7`, 0.0 AS `P_8`, 0.0 AS `P_9`, 6 AS `D`, 1.0 AS `DP` UNION ALL SELECT 25 AS nid, 0.0 AS `P_0`, 0.0 AS `P_1`, 1.0 AS `P_2`, 0.0 AS `P_3`, 0.0 AS `P_4`, 0.0 AS `P_5`, 0.0 AS `P_6`, 0.0 AS `P_7`, 0.0 AS `P_8`, 0.0 AS `P_9`, 2 AS `D`, 1.0 AS `DP` UNION ALL SELECT 30 AS nid, 0.0 AS `P_0`, 0.0 AS `P_1`, 0.0 AS `P_2`, 0.0 AS `P_3`, 1.0 AS `P_4`, 0.0 AS `P_5`, 0.0 AS `P_6`, 0.0 AS `P_7`, 0.0 AS `P_8`, 0.0 AS `P_9`, 4 AS `D`, 1.0 AS `DP` UNION ALL SELECT 31 AS nid, 1.0 AS `P_0`, 0.0 AS `P_1`, 0.0 AS `P_2`, 0.0 AS `P_3`, 0.0 AS `P_4`, 0.0 AS `P_5`, 0.0 AS `P_6`, 0.0 AS `P_7`, 0.0 AS `P_8`, 0.0 AS `P_9`, 0 AS `D`, 1.0 AS `DP` UNION ALL SELECT 33 AS nid, 0.0 AS `P_0`, 1.0 AS `P_1`, 0.0 AS `P_2`, 0.0 AS `P_3`, 0.0 AS `P_4`, 0.0 AS `P_5`, 0.0 AS `P_6`, 0.0 AS `P_7`, 0.0 AS `P_8`, 0.0 AS `P_9`, 1 AS `D`, 1.0 AS `DP` UNION ALL SELECT 34 AS nid, 0.0 AS `P_0`, 0.0 AS `P_1`, 1.0 AS `P_2`, 0.0 AS `P_3`, 0.0 AS `P_4`, 0.0 AS `P_5`, 0.0 AS `P_6`, 0.0 AS `P_7`, 0.0 AS `P_8`, 0.0 AS `P_9`, 2 AS `D`, 1.0 AS `DP` UNION ALL SELECT 36 AS nid, 0.0 AS `P_0`, 0.0 AS `P_1`, 0.0 AS `P_2`, 0.0 AS `P_3`, 1.0 AS `P_4`, 0.0 AS `P_5`, 0.0 AS `P_6`, 0.0 AS `P_7`, 0.0 AS `P_8`, 0.0 AS `P_9`, 4 AS `D`, 1.0 AS `DP` UNION ALL SELECT 38 AS nid, 0.0 AS `P_0`, 0.0 AS `P_1`, 0.3333333333333333 AS `P_2`, 0.3333333333333333 AS `P_3`, 0.0 AS `P_4`, 0.0 AS `P_5`, 0.0 AS `P_6`, 0.0 AS `P_7`, 0.0 AS `P_8`, 0.3333333333333333 AS `P_9`, 2 AS `D`, 0.3333333333333333 AS `DP` UNION ALL SELECT 39 AS nid, 0.0 AS `P_0`, 0.0 AS `P_1`, 0.0 AS `P_2`, 0.0 AS `P_3`, 0.0 AS `P_4`, 0.0 AS `P_5`, 0.0 AS `P_6`, 1.0 AS `P_7`, 0.0 AS `P_8`, 0.0 AS `P_9`, 7 AS `D`, 1.0 AS `DP` UNION ALL SELECT 43 AS nid, 0.0 AS `P_0`, 0.0 AS `P_1`, 0.013888888888888888 AS `P_2`, 0.9861111111111112 AS `P_3`, 0.0 AS `P_4`, 0.0 AS `P_5`, 0.0 AS `P_6`, 0.0 AS `P_7`, 0.0 AS `P_8`, 0.0 AS `P_9`, 3 AS `D`, 0.9861111111111112 AS `DP` UNION ALL SELECT 44 AS nid, 0.0 AS `P_0`, 0.0 AS `P_1`, 0.25 AS `P_2`, 0.0 AS `P_3`, 0.0 AS `P_4`, 0.0 AS `P_5`, 0.0 AS `P_6`, 0.0 AS `P_7`, 0.0 AS `P_8`, 0.75 AS `P_9`, 9 AS `D`, 0.75 AS `DP` UNION ALL SELECT 46 AS nid, 0.0 AS `P_0`, 0.045454545454545456 AS `P_1`, 0.0 AS `P_2`, 0.3409090909090909 AS `P_3`, 0.13636363636363635 AS `P_4`, 0.25 AS `P_5`, 0.022727272727272728 AS `P_6`, 0.045454545454545456 AS `P_7`, 0.06818181818181818 AS `P_8`, 0.09090909090909091 AS `P_9`, 3 AS `D`, 0.3409090909090909 AS `DP` UNION ALL SELECT 47 AS nid, 0.03731343283582089 AS `P_0`, 0.1044776119402985 AS `P_1`, 0.0 AS `P_2`, 0.03731343283582089 AS `P_3`, 0.007462686567164179 AS `P_4`, 0.007462686567164179 AS `P_5`, 0.0 AS `P_6`, 0.007462686567164179 AS `P_7`, 0.08955223880597014 AS `P_8`, 0.7089552238805971 AS `P_9`, 9 AS `D`, 0.7089552238805971 AS `DP` UNION ALL SELECT 50 AS nid, 0.0 AS `P_0`, 0.01904761904761905 AS `P_1`, 0.02857142857142857 AS `P_2`, 0.0380952380952381 AS `P_3`, 0.009523809523809525 AS `P_4`, 0.0 AS `P_5`, 0.0 AS `P_6`, 0.8666666666666667 AS `P_7`, 0.02857142857142857 AS `P_8`, 0.009523809523809525 AS `P_9`, 7 AS `D`, 0.8666666666666667 AS `DP` UNION ALL SELECT 51 AS nid, 0.0 AS `P_0`, 0.09523809523809523 AS `P_1`, 0.0 AS `P_2`, 0.0 AS `P_3`, 0.5238095238095238 AS `P_4`, 0.047619047619047616 AS `P_5`, 0.0 AS `P_6`, 0.19047619047619047 AS `P_7`, 0.047619047619047616 AS `P_8`, 0.09523809523809523 AS `P_9`, 4 AS `D`, 0.5238095238095238 AS `DP` UNION ALL SELECT 53 AS nid, 0.0 AS `P_0`, 0.23963133640552994 AS `P_1`, 0.35023041474654376 AS `P_2`, 0.03686635944700461 AS `P_3`, 0.0 AS `P_4`, 0.0 AS `P_5`, 0.0 AS `P_6`, 0.013824884792626729 AS `P_7`, 0.3456221198156682 AS `P_8`, 0.013824884792626729 AS `P_9`, 2 AS `D`, 0.35023041474654376 AS `DP` UNION ALL SELECT 54 AS nid, 0.013157894736842105 AS `P_0`, 0.15789473684210525 AS `P_1`, 0.0 AS `P_2`, 0.0 AS `P_3`, 0.7631578947368421 AS `P_4`, 0.0 AS `P_5`, 0.013157894736842105 AS `P_6`, 0.0 AS `P_7`, 0.05263157894736842 AS `P_8`, 0.0 AS `P_9`, 4 AS `D`, 0.7631578947368421 AS `DP`) AS `Values`), 
`DT_Output_2` AS 
(SELECT `DT_node_lookup_2`.`KEY` AS `KEY`, `DT_node_lookup_2`.node_id_2 AS node_id_2, `DT_node_data_2`.nid AS nid, `DT_node_data_2`.`P_0` AS `P_0`, `DT_node_data_2`.`P_1` AS `P_1`, `DT_node_data_2`.`P_2` AS `P_2`, `DT_node_data_2`.`P_3` AS `P_3`, `DT_node_data_2`.`P_4` AS `P_4`, `DT_node_data_2`.`P_5` AS `P_5`, `DT_node_data_2`.`P_6` AS `P_6`, `DT_node_data_2`.`P_7` AS `P_7`, `DT_node_data_2`.`P_8` AS `P_8`, `DT_node_data_2`.`P_9` AS `P_9`, `DT_node_data_2`.`D` AS `D`, `DT_node_data_2`.`DP` AS `DP` 
FROM `DT_node_lookup_2` LEFT OUTER JOIN `DT_node_data_2` ON `DT_node_lookup_2`.node_id_2 = `DT_node_data_2`.nid), 
`Calibrated_Model_2` AS 
(SELECT `DT_Output_2`.`KEY` AS `KEY`, CAST(NULL AS DOUBLE) AS `Score_0`, CAST(NULL AS DOUBLE) AS `Score_1`, CAST(NULL AS DOUBLE) AS `Score_2`, CAST(NULL AS DOUBLE) AS `Score_3`, CAST(NULL AS DOUBLE) AS `Score_4`, CAST(NULL AS DOUBLE) AS `Score_5`, CAST(NULL AS DOUBLE) AS `Score_6`, CAST(NULL AS DOUBLE) AS `Score_7`, CAST(NULL AS DOUBLE) AS `Score_8`, CAST(NULL AS DOUBLE) AS `Score_9`, `DT_Output_2`.`P_0` AS `Proba_0`, `DT_Output_2`.`P_1` AS `Proba_1`, `DT_Output_2`.`P_2` AS `Proba_2`, `DT_Output_2`.`P_3` AS `Proba_3`, `DT_Output_2`.`P_4` AS `Proba_4`, `DT_Output_2`.`P_5` AS `Proba_5`, `DT_Output_2`.`P_6` AS `Proba_6`, `DT_Output_2`.`P_7` AS `Proba_7`, `DT_Output_2`.`P_8` AS `Proba_8`, `DT_Output_2`.`P_9` AS `Proba_9`, CASE WHEN (`DT_Output_2`.`P_0` IS NULL OR `DT_Output_2`.`P_0` > 0.0) THEN ln(`DT_Output_2`.`P_0`) ELSE -1.79769313486231e+308 END AS `LogProba_0`, CASE WHEN (`DT_Output_2`.`P_1` IS NULL OR `DT_Output_2`.`P_1` > 0.0) THEN ln(`DT_Output_2`.`P_1`) ELSE -1.79769313486231e+308 END AS `LogProba_1`, CASE WHEN (`DT_Output_2`.`P_2` IS NULL OR `DT_Output_2`.`P_2` > 0.0) THEN ln(`DT_Output_2`.`P_2`) ELSE -1.79769313486231e+308 END AS `LogProba_2`, CASE WHEN (`DT_Output_2`.`P_3` IS NULL OR `DT_Output_2`.`P_3` > 0.0) THEN ln(`DT_Output_2`.`P_3`) ELSE -1.79769313486231e+308 END AS `LogProba_3`, CASE WHEN (`DT_Output_2`.`P_4` IS NULL OR `DT_Output_2`.`P_4` > 0.0) THEN ln(`DT_Output_2`.`P_4`) ELSE -1.79769313486231e+308 END AS `LogProba_4`, CASE WHEN (`DT_Output_2`.`P_5` IS NULL OR `DT_Output_2`.`P_5` > 0.0) THEN ln(`DT_Output_2`.`P_5`) ELSE -1.79769313486231e+308 END AS `LogProba_5`, CASE WHEN (`DT_Output_2`.`P_6` IS NULL OR `DT_Output_2`.`P_6` > 0.0) THEN ln(`DT_Output_2`.`P_6`) ELSE -1.79769313486231e+308 END AS `LogProba_6`, CASE WHEN (`DT_Output_2`.`P_7` IS NULL OR `DT_Output_2`.`P_7` > 0.0) THEN ln(`DT_Output_2`.`P_7`) ELSE -1.79769313486231e+308 END AS `LogProba_7`, CASE WHEN (`DT_Output_2`.`P_8` IS NULL OR `DT_Output_2`.`P_8` > 0.0) THEN ln(`DT_Output_2`.`P_8`) ELSE -1.79769313486231e+308 END AS `LogProba_8`, CASE WHEN (`DT_Output_2`.`P_9` IS NULL OR `DT_Output_2`.`P_9` > 0.0) THEN ln(`DT_Output_2`.`P_9`) ELSE -1.79769313486231e+308 END AS `LogProba_9`, CAST(NULL AS BIGINT) AS `Decision`, CAST(NULL AS DOUBLE) AS `DecisionProba`, coalesce(CAST(NULL AS DOUBLE), `DT_Output_2`.`P_0`) AS `ScoreOrProba_0`, coalesce(CAST(NULL AS DOUBLE), `DT_Output_2`.`P_1`) AS `ScoreOrProba_1`, coalesce(CAST(NULL AS DOUBLE), `DT_Output_2`.`P_2`) AS `ScoreOrProba_2`, coalesce(CAST(NULL AS DOUBLE), `DT_Output_2`.`P_3`) AS `ScoreOrProba_3`, coalesce(CAST(NULL AS DOUBLE), `DT_Output_2`.`P_4`) AS `ScoreOrProba_4`, coalesce(CAST(NULL AS DOUBLE), `DT_Output_2`.`P_5`) AS `ScoreOrProba_5`, coalesce(CAST(NULL AS DOUBLE), `DT_Output_2`.`P_6`) AS `ScoreOrProba_6`, coalesce(CAST(NULL AS DOUBLE), `DT_Output_2`.`P_7`) AS `ScoreOrProba_7`, coalesce(CAST(NULL AS DOUBLE), `DT_Output_2`.`P_8`) AS `ScoreOrProba_8`, coalesce(CAST(NULL AS DOUBLE), `DT_Output_2`.`P_9`) AS `ScoreOrProba_9` 
FROM `DT_Output_2`), 
isotonic_cte_2 AS 
(SELECT `Calibrated_Model_2`.`KEY` AS `KEY`, CASE WHEN (`Calibrated_Model_2`.`ScoreOrProba_0` < 0.0) THEN 0.004 WHEN (`Calibrated_Model_2`.`ScoreOrProba_0` < 0.013157894736842105) THEN (`Calibrated_Model_2`.`ScoreOrProba_0` - 0.0) * 2.071 + 0.004 WHEN (`Calibrated_Model_2`.`ScoreOrProba_0` < 0.03731343283582089) THEN (`Calibrated_Model_2`.`ScoreOrProba_0` - 0.013157894736842105) * 0.46793374848642105 + 0.03125 WHEN (`Calibrated_Model_2`.`ScoreOrProba_0` < 0.16666666666666666) THEN (`Calibrated_Model_2`.`ScoreOrProba_0` - 0.03731343283582089) * 0.0 + 0.0425531914893617 WHEN (`Calibrated_Model_2`.`ScoreOrProba_0` < 1.0) THEN (`Calibrated_Model_2`.`ScoreOrProba_0` - 0.16666666666666666) * 1.148936170212766 + 0.0425531914893617 ELSE 1.0 END AS `Proba_0`, CASE WHEN (`Calibrated_Model_2`.`ScoreOrProba_1` < 0.0) THEN 0.0 WHEN (`Calibrated_Model_2`.`ScoreOrProba_1` < 0.01904761904761905) THEN (`Calibrated_Model_2`.`ScoreOrProba_1` - 0.0) * 0.6730769230769231 + 0.0 WHEN (`Calibrated_Model_2`.`ScoreOrProba_1` < 0.09523809523809523) THEN (`Calibrated_Model_2`.`ScoreOrProba_1` - 0.01904761904761905) * 0.0 + 0.012820512820512822 WHEN (`Calibrated_Model_2`.`ScoreOrProba_1` < 0.1044776119402985) THEN (`Calibrated_Model_2`.`ScoreOrProba_1` - 0.09523809523809523) * 7.823555331738636 + 0.012820512820512822 WHEN (`Calibrated_Model_2`.`ScoreOrProba_1` < 0.15789473684210525) THEN (`Calibrated_Model_2`.`ScoreOrProba_1` - 0.1044776119402985) * 2.3814421634579994 + 0.0851063829787234 WHEN (`Calibrated_Model_2`.`ScoreOrProba_1` < 0.23963133640552994) THEN (`Calibrated_Model_2`.`ScoreOrProba_1` - 0.15789473684210525) * 0.0 + 0.21231617647058823 WHEN (`Calibrated_Model_2`.`ScoreOrProba_1` < 0.8636363636363636) THEN (`Calibrated_Model_2`.`ScoreOrProba_1` - 0.23963133640552994) * 0.6327299676164525 + 0.21231617647058823 WHEN (`Calibrated_Model_2`.`ScoreOrProba_1` < 1.0) THEN (`Calibrated_Model_2`.`ScoreOrProba_1` - 0.8636363636363636) * 0.0 + 0.6071428571428572 ELSE 0.6071428571428572 END AS `Proba_1`, CASE WHEN (`Calibrated_Model_2`.`ScoreOrProba_2` < 0.0) THEN 0.0047169811320754715 WHEN (`Calibrated_Model_2`.`ScoreOrProba_2` < 0.013888888888888888) THEN (`Calibrated_Model_2`.`ScoreOrProba_2` - 0.0) * 2.6813563794695874 + 0.0047169811320754715 WHEN (`Calibrated_Model_2`.`ScoreOrProba_2` < 0.02857142857142857) THEN (`Calibrated_Model_2`.`ScoreOrProba_2` - 0.013888888888888888) * 0.0 + 0.04195804195804196 WHEN (`Calibrated_Model_2`.`ScoreOrProba_2` < 0.09090909090909091) THEN (`Calibrated_Model_2`.`ScoreOrProba_2` - 0.02857142857142857) * 2.477964743589743 + 0.04195804195804196 WHEN (`Calibrated_Model_2`.`ScoreOrProba_2` < 0.25) THEN (`Calibrated_Model_2`.`ScoreOrProba_2` - 0.09090909090909091) * 0.0 + 0.19642857142857142 WHEN (`Calibrated_Model_2`.`ScoreOrProba_2` < 0.35023041474654376) THEN (`Calibrated_Model_2`.`ScoreOrProba_2` - 0.25) * 1.2680865449628131 + 0.19642857142857142 WHEN (`Calibrated_Model_2`.`ScoreOrProba_2` < 1.0) THEN (`Calibrated_Model_2`.`ScoreOrProba_2` - 0.35023041474654376) * 0.821234876929495 + 0.3235294117647059 ELSE 0.8571428571428571 END AS `Proba_2`, CASE WHEN (`Calibrated_Model_2`.`ScoreOrProba_3` < 0.0) THEN 0.0058823529411764705 WHEN (`Calibrated_Model_2`.`ScoreOrProba_3` < 0.03686635944700461) THEN (`Calibrated_Model_2`.`ScoreOrProba_3` - 0.0) * 0.4911243220692532 + 0.0058823529411764705 WHEN (`Calibrated_Model_2`.`ScoreOrProba_3` < 0.0380952380952381) THEN (`Calibrated_Model_2`.`ScoreOrProba_3` - 0.03686635944700461) * 0.0 + 0.023988318731748018 WHEN (`Calibrated_Model_2`.`ScoreOrProba_3` < 0.18181818181818182) THEN (`Calibrated_Model_2`.`ScoreOrProba_3` - 0.0380952380952381) * 2.442280071474886 + 0.023988318731748018 WHEN (`Calibrated_Model_2`.`ScoreOrProba_3` < 0.3333333333333333) THEN (`Calibrated_Model_2`.`ScoreOrProba_3` - 0.18181818181818182) * 0.0 + 0.375 WHEN (`Calibrated_Model_2`.`ScoreOrProba_3` < 0.3409090909090909) THEN (`Calibrated_Model_2`.`ScoreOrProba_3` - 0.3333333333333333) * 5.500000000000007 + 0.375 WHEN (`Calibrated_Model_2`.`ScoreOrProba_3` < 0.9861111111111112) THEN (`Calibrated_Model_2`.`ScoreOrProba_3` - 0.3409090909090909) * 0.8336594911937375 + 0.4166666666666667 ELSE 0.9545454545454546 END AS `Proba_3`, CASE WHEN (`Calibrated_Model_2`.`ScoreOrProba_4` < 0.0) THEN 0.006880733944954129 WHEN (`Calibrated_Model_2`.`ScoreOrProba_4` < 0.007462686567164179) THEN (`Calibrated_Model_2`.`ScoreOrProba_4` - 0.0) * 0.0 + 0.006880733944954129 WHEN (`Calibrated_Model_2`.`ScoreOrProba_4` < 0.009523809523809525) THEN (`Calibrated_Model_2`.`ScoreOrProba_4` - 0.007462686567164179) * 15.322135156839357 + 0.006880733944954129 WHEN (`Calibrated_Model_2`.`ScoreOrProba_4` < 0.13636363636363635) THEN (`Calibrated_Model_2`.`ScoreOrProba_4` - 0.009523809523809525) * 1.0107639800472565 + 0.038461538461538464 WHEN (`Calibrated_Model_2`.`ScoreOrProba_4` < 0.36363636363636365) THEN (`Calibrated_Model_2`.`ScoreOrProba_4` - 0.13636363636363635) * 0.0 + 0.16666666666666666 WHEN (`Calibrated_Model_2`.`ScoreOrProba_4` < 0.5238095238095238) THEN (`Calibrated_Model_2`.`ScoreOrProba_4` - 0.36363636363636365) * 2.4712837837837838 + 0.16666666666666666 WHEN (`Calibrated_Model_2`.`ScoreOrProba_4` < 0.7631578947368421) THEN (`Calibrated_Model_2`.`ScoreOrProba_4` - 0.5238095238095238) * 0.26112565445026176 + 0.5625 WHEN (`Calibrated_Model_2`.`ScoreOrProba_4` < 1.0) THEN (`Calibrated_Model_2`.`ScoreOrProba_4` - 0.7631578947368421) * 1.5833333333333337 + 0.625 ELSE 1.0 END AS `Proba_4`, CASE WHEN (`Calibrated_Model_2`.`ScoreOrProba_5` < 0.0) THEN 0.00272108843537415 WHEN (`Calibrated_Model_2`.`ScoreOrProba_5` < 0.047619047619047616) THEN (`Calibrated_Model_2`.`ScoreOrProba_5` - 0.0) * 0.0 + 0.00272108843537415 WHEN (`Calibrated_Model_2`.`ScoreOrProba_5` < 0.16666666666666666) THEN (`Calibrated_Model_2`.`ScoreOrProba_5` - 0.047619047619047616) * 2.077142857142857 + 0.00272108843537415 WHEN (`Calibrated_Model_2`.`ScoreOrProba_5` < 0.25) THEN (`Calibrated_Model_2`.`ScoreOrProba_5` - 0.16666666666666666) * 0.0 + 0.25 WHEN (`Calibrated_Model_2`.`ScoreOrProba_5` < 1.0) THEN (`Calibrated_Model_2`.`ScoreOrProba_5` - 0.25) * 0.956989247311828 + 0.25 ELSE 0.967741935483871 END AS `Proba_5`, CASE WHEN (`Calibrated_Model_2`.`ScoreOrProba_6` < 0.0) THEN 0.007272727272727273 WHEN (`Calibrated_Model_2`.`ScoreOrProba_6` < 0.013157894736842105) THEN (`Calibrated_Model_2`.`ScoreOrProba_6` - 0.0) * 0.6347727272727273 + 0.007272727272727273 WHEN (`Calibrated_Model_2`.`ScoreOrProba_6` < 0.022727272727272728) THEN (`Calibrated_Model_2`.`ScoreOrProba_6` - 0.013157894736842105) * 0.0 + 0.015625 WHEN (`Calibrated_Model_2`.`ScoreOrProba_6` < 0.18181818181818182) THEN (`Calibrated_Model_2`.`ScoreOrProba_6` - 0.022727272727272728) * 0.4255952380952381 + 0.015625 WHEN (`Calibrated_Model_2`.`ScoreOrProba_6` < 0.6666666666666666) THEN (`Calibrated_Model_2`.`ScoreOrProba_6` - 0.18181818181818182) * 0.0 + 0.08333333333333333 WHEN (`Calibrated_Model_2`.`ScoreOrProba_6` < 1.0) THEN (`Calibrated_Model_2`.`ScoreOrProba_6` - 0.6666666666666666) * 2.6562499999999996 + 0.08333333333333333 ELSE 0.96875 END AS `Proba_6`, CASE WHEN (`Calibrated_Model_2`.`ScoreOrProba_7` < 0.0) THEN 0.016483516483516484 WHEN (`Calibrated_Model_2`.`ScoreOrProba_7` < 0.007462686567164179) THEN (`Calibrated_Model_2`.`ScoreOrProba_7` - 0.0) * 2.6128608562901428 + 0.016483516483516484 WHEN (`Calibrated_Model_2`.`ScoreOrProba_7` < 0.045454545454545456) THEN (`Calibrated_Model_2`.`ScoreOrProba_7` - 0.007462686567164179) * 0.0 + 0.03598247809762203 WHEN (`Calibrated_Model_2`.`ScoreOrProba_7` < 0.09090909090909091) THEN (`Calibrated_Model_2`.`ScoreOrProba_7` - 0.045454545454545456) * 2.8750521485189817 + 0.03598247809762203 WHEN (`Calibrated_Model_2`.`ScoreOrProba_7` < 0.19047619047619047) THEN (`Calibrated_Model_2`.`ScoreOrProba_7` - 0.09090909090909091) * 0.8369565217391306 + 0.16666666666666666 WHEN (`Calibrated_Model_2`.`ScoreOrProba_7` < 0.8666666666666667) THEN (`Calibrated_Model_2`.`ScoreOrProba_7` - 0.19047619047619047) * 0.5687973997833152 + 0.25 WHEN (`Calibrated_Model_2`.`ScoreOrProba_7` < 1.0) THEN (`Calibrated_Model_2`.`ScoreOrProba_7` - 0.8666666666666667) * 0.0 + 0.6346153846153846 ELSE 0.6346153846153846 END AS `Proba_7`, CASE WHEN (`Calibrated_Model_2`.`ScoreOrProba_8` < 0.0) THEN 0.007352941176470588 WHEN (`Calibrated_Model_2`.`ScoreOrProba_8` < 0.02857142857142857) THEN (`Calibrated_Model_2`.`ScoreOrProba_8` - 0.0) * 0.41572398190045257 + 0.007352941176470588 WHEN (`Calibrated_Model_2`.`ScoreOrProba_8` < 0.045454545454545456) THEN (`Calibrated_Model_2`.`ScoreOrProba_8` - 0.02857142857142857) * 0.0 + 0.019230769230769232 WHEN (`Calibrated_Model_2`.`ScoreOrProba_8` < 0.047619047619047616) THEN (`Calibrated_Model_2`.`ScoreOrProba_8` - 0.045454545454545456) * 12.771634615384638 + 0.019230769230769232 WHEN (`Calibrated_Model_2`.`ScoreOrProba_8` < 0.05263157894736842) THEN (`Calibrated_Model_2`.`ScoreOrProba_8` - 0.047619047619047616) * 0.0 + 0.046875 WHEN (`Calibrated_Model_2`.`ScoreOrProba_8` < 0.06818181818181818) THEN (`Calibrated_Model_2`.`ScoreOrProba_8` - 0.05263157894736842) * 0.1401504819058007 + 0.046875 WHEN (`Calibrated_Model_2`.`ScoreOrProba_8` < 0.3333333333333333) THEN (`Calibrated_Model_2`.`ScoreOrProba_8` - 0.06818181818181818) * 0.0 + 0.04905437352245862 WHEN (`Calibrated_Model_2`.`ScoreOrProba_8` < 0.3456221198156682) THEN (`Calibrated_Model_2`.`ScoreOrProba_8` - 0.3333333333333333) * 27.122170942845177 + 0.04905437352245862 ELSE 0.38235294117647056 END AS `Proba_8`, CASE WHEN (`Calibrated_Model_2`.`ScoreOrProba_9` < 0.0) THEN 0.0 WHEN (`Calibrated_Model_2`.`ScoreOrProba_9` < 0.009523809523809525) THEN (`Calibrated_Model_2`.`ScoreOrProba_9` - 0.0) * 4.038461538461538 + 0.0 WHEN (`Calibrated_Model_2`.`ScoreOrProba_9` < 0.013824884792626729) THEN (`Calibrated_Model_2`.`ScoreOrProba_9` - 0.009523809523809525) * 0.0 + 0.038461538461538464 WHEN (`Calibrated_Model_2`.`ScoreOrProba_9` < 0.09090909090909091) THEN (`Calibrated_Model_2`.`ScoreOrProba_9` - 0.013824884792626729) * 0.4019358509847638 + 0.038461538461538464 WHEN (`Calibrated_Model_2`.`ScoreOrProba_9` < 0.16666666666666666) THEN (`Calibrated_Model_2`.`ScoreOrProba_9` - 0.09090909090909091) * 0.0 + 0.06944444444444443 WHEN (`Calibrated_Model_2`.`ScoreOrProba_9` < 0.7089552238805971) THEN (`Calibrated_Model_2`.`ScoreOrProba_9` - 0.16666666666666666) * 0.9410908321946775 + 0.06944444444444443 WHEN (`Calibrated_Model_2`.`ScoreOrProba_9` < 0.75) THEN (`Calibrated_Model_2`.`ScoreOrProba_9` - 0.7089552238805971) * 0.0 + 0.5797872340425532 ELSE 0.5797872340425532 END AS `Proba_9` 
FROM `Calibrated_Model_2`), 
`Normalized_Probas_2` AS 
(SELECT isotonic_cte_2.`KEY` AS `KEY`, isotonic_cte_2.`Proba_0` / (isotonic_cte_2.`Proba_0` + isotonic_cte_2.`Proba_1` + isotonic_cte_2.`Proba_2` + isotonic_cte_2.`Proba_3` + isotonic_cte_2.`Proba_4` + isotonic_cte_2.`Proba_5` + isotonic_cte_2.`Proba_6` + isotonic_cte_2.`Proba_7` + isotonic_cte_2.`Proba_8` + isotonic_cte_2.`Proba_9`) AS `Proba_0`, isotonic_cte_2.`Proba_1` / (isotonic_cte_2.`Proba_0` + isotonic_cte_2.`Proba_1` + isotonic_cte_2.`Proba_2` + isotonic_cte_2.`Proba_3` + isotonic_cte_2.`Proba_4` + isotonic_cte_2.`Proba_5` + isotonic_cte_2.`Proba_6` + isotonic_cte_2.`Proba_7` + isotonic_cte_2.`Proba_8` + isotonic_cte_2.`Proba_9`) AS `Proba_1`, isotonic_cte_2.`Proba_2` / (isotonic_cte_2.`Proba_0` + isotonic_cte_2.`Proba_1` + isotonic_cte_2.`Proba_2` + isotonic_cte_2.`Proba_3` + isotonic_cte_2.`Proba_4` + isotonic_cte_2.`Proba_5` + isotonic_cte_2.`Proba_6` + isotonic_cte_2.`Proba_7` + isotonic_cte_2.`Proba_8` + isotonic_cte_2.`Proba_9`) AS `Proba_2`, isotonic_cte_2.`Proba_3` / (isotonic_cte_2.`Proba_0` + isotonic_cte_2.`Proba_1` + isotonic_cte_2.`Proba_2` + isotonic_cte_2.`Proba_3` + isotonic_cte_2.`Proba_4` + isotonic_cte_2.`Proba_5` + isotonic_cte_2.`Proba_6` + isotonic_cte_2.`Proba_7` + isotonic_cte_2.`Proba_8` + isotonic_cte_2.`Proba_9`) AS `Proba_3`, isotonic_cte_2.`Proba_4` / (isotonic_cte_2.`Proba_0` + isotonic_cte_2.`Proba_1` + isotonic_cte_2.`Proba_2` + isotonic_cte_2.`Proba_3` + isotonic_cte_2.`Proba_4` + isotonic_cte_2.`Proba_5` + isotonic_cte_2.`Proba_6` + isotonic_cte_2.`Proba_7` + isotonic_cte_2.`Proba_8` + isotonic_cte_2.`Proba_9`) AS `Proba_4`, isotonic_cte_2.`Proba_5` / (isotonic_cte_2.`Proba_0` + isotonic_cte_2.`Proba_1` + isotonic_cte_2.`Proba_2` + isotonic_cte_2.`Proba_3` + isotonic_cte_2.`Proba_4` + isotonic_cte_2.`Proba_5` + isotonic_cte_2.`Proba_6` + isotonic_cte_2.`Proba_7` + isotonic_cte_2.`Proba_8` + isotonic_cte_2.`Proba_9`) AS `Proba_5`, isotonic_cte_2.`Proba_6` / (isotonic_cte_2.`Proba_0` + isotonic_cte_2.`Proba_1` + isotonic_cte_2.`Proba_2` + isotonic_cte_2.`Proba_3` + isotonic_cte_2.`Proba_4` + isotonic_cte_2.`Proba_5` + isotonic_cte_2.`Proba_6` + isotonic_cte_2.`Proba_7` + isotonic_cte_2.`Proba_8` + isotonic_cte_2.`Proba_9`) AS `Proba_6`, isotonic_cte_2.`Proba_7` / (isotonic_cte_2.`Proba_0` + isotonic_cte_2.`Proba_1` + isotonic_cte_2.`Proba_2` + isotonic_cte_2.`Proba_3` + isotonic_cte_2.`Proba_4` + isotonic_cte_2.`Proba_5` + isotonic_cte_2.`Proba_6` + isotonic_cte_2.`Proba_7` + isotonic_cte_2.`Proba_8` + isotonic_cte_2.`Proba_9`) AS `Proba_7`, isotonic_cte_2.`Proba_8` / (isotonic_cte_2.`Proba_0` + isotonic_cte_2.`Proba_1` + isotonic_cte_2.`Proba_2` + isotonic_cte_2.`Proba_3` + isotonic_cte_2.`Proba_4` + isotonic_cte_2.`Proba_5` + isotonic_cte_2.`Proba_6` + isotonic_cte_2.`Proba_7` + isotonic_cte_2.`Proba_8` + isotonic_cte_2.`Proba_9`) AS `Proba_8`, isotonic_cte_2.`Proba_9` / (isotonic_cte_2.`Proba_0` + isotonic_cte_2.`Proba_1` + isotonic_cte_2.`Proba_2` + isotonic_cte_2.`Proba_3` + isotonic_cte_2.`Proba_4` + isotonic_cte_2.`Proba_5` + isotonic_cte_2.`Proba_6` + isotonic_cte_2.`Proba_7` + isotonic_cte_2.`Proba_8` + isotonic_cte_2.`Proba_9`) AS `Proba_9` 
FROM isotonic_cte_2), 
`DT_node_lookup_3` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_36` <= 0.5) THEN CASE WHEN (`ADS`.`Feature_28` <= 4.5) THEN CASE WHEN (`ADS`.`Feature_21` <= 0.5) THEN CASE WHEN (`ADS`.`Feature_6` <= 1.0) THEN CASE WHEN (`ADS`.`Feature_49` <= 3.5) THEN 5 ELSE 6 END ELSE 7 END ELSE CASE WHEN (`ADS`.`Feature_3` <= 6.0) THEN 9 ELSE 10 END END ELSE CASE WHEN (`ADS`.`Feature_21` <= 9.0) THEN CASE WHEN (`ADS`.`Feature_5` <= 1.5) THEN CASE WHEN (`ADS`.`Feature_12` <= 7.0) THEN 14 ELSE 15 END ELSE CASE WHEN (`ADS`.`Feature_60` <= 4.5) THEN 17 ELSE 18 END END ELSE CASE WHEN (`ADS`.`Feature_35` <= 4.5) THEN CASE WHEN (`ADS`.`Feature_18` <= 2.0) THEN 21 ELSE 22 END ELSE CASE WHEN (`ADS`.`Feature_35` <= 8.5) THEN 24 ELSE 25 END END END END ELSE CASE WHEN (`ADS`.`Feature_21` <= 0.5) THEN CASE WHEN (`ADS`.`Feature_42` <= 8.5) THEN CASE WHEN (`ADS`.`Feature_5` <= 2.5) THEN CASE WHEN (`ADS`.`Feature_9` <= 0.5) THEN 30 ELSE 31 END ELSE CASE WHEN (`ADS`.`Feature_2` <= 0.5) THEN 33 ELSE 34 END END ELSE CASE WHEN (`ADS`.`Feature_54` <= 0.5) THEN CASE WHEN (`ADS`.`Feature_35` <= 15.5) THEN 37 ELSE 38 END ELSE CASE WHEN (`ADS`.`Feature_58` <= 9.5) THEN 40 ELSE 41 END END END ELSE CASE WHEN (`ADS`.`Feature_60` <= 7.5) THEN CASE WHEN (`ADS`.`Feature_26` <= 12.5) THEN CASE WHEN (`ADS`.`Feature_53` <= 7.5) THEN 45 ELSE 46 END ELSE CASE WHEN (`ADS`.`Feature_42` <= 3.5) THEN 48 ELSE 49 END END ELSE CASE WHEN (`ADS`.`Feature_43` <= 2.5) THEN CASE WHEN (`ADS`.`Feature_26` <= 5.5) THEN 52 ELSE 53 END ELSE CASE WHEN (`ADS`.`Feature_33` <= 3.5) THEN 55 ELSE 56 END END END END END AS node_id_2 
FROM digits AS `ADS`), 
`DT_node_data_3` AS 
(SELECT `Values`.nid AS nid, CAST(`Values`.`P_0` AS DOUBLE) AS `P_0`, CAST(`Values`.`P_1` AS DOUBLE) AS `P_1`, CAST(`Values`.`P_2` AS DOUBLE) AS `P_2`, CAST(`Values`.`P_3` AS DOUBLE) AS `P_3`, CAST(`Values`.`P_4` AS DOUBLE) AS `P_4`, CAST(`Values`.`P_5` AS DOUBLE) AS `P_5`, CAST(`Values`.`P_6` AS DOUBLE) AS `P_6`, CAST(`Values`.`P_7` AS DOUBLE) AS `P_7`, CAST(`Values`.`P_8` AS DOUBLE) AS `P_8`, CAST(`Values`.`P_9` AS DOUBLE) AS `P_9`, CAST(`Values`.`D` AS DOUBLE) AS `D`, CAST(`Values`.`DP` AS DOUBLE) AS `DP` 
FROM (SELECT 5 AS nid, 0.5 AS `P_0`, 0.0 AS `P_1`, 0.0 AS `P_2`, 0.0 AS `P_3`, 0.0 AS `P_4`, 0.0 AS `P_5`, 0.5 AS `P_6`, 0.0 AS `P_7`, 0.0 AS `P_8`, 0.0 AS `P_9`, 0 AS `D`, 0.5 AS `DP` UNION ALL SELECT 6 AS nid, 0.0 AS `P_0`, 0.0 AS `P_1`, 0.0 AS `P_2`, 0.0 AS `P_3`, 1.0 AS `P_4`, 0.0 AS `P_5`, 0.0 AS `P_6`, 0.0 AS `P_7`, 0.0 AS `P_8`, 0.0 AS `P_9`, 4 AS `D`, 1.0 AS `DP` UNION ALL SELECT 7 AS nid, 0.0 AS `P_0`, 0.0 AS `P_1`, 0.0 AS `P_2`, 0.0 AS `P_3`, 0.0 AS `P_4`, 1.0 AS `P_5`, 0.0 AS `P_6`, 0.0 AS `P_7`, 0.0 AS `P_8`, 0.0 AS `P_9`, 5 AS `D`, 1.0 AS `DP` UNION ALL SELECT 9 AS nid, 0.0 AS `P_0`, 0.0 AS `P_1`, 0.0 AS `P_2`, 0.0 AS `P_3`, 0.0 AS `P_4`, 0.0 AS `P_5`, 0.0 AS `P_6`, 0.0 AS `P_7`, 0.0 AS `P_8`, 1.0 AS `P_9`, 9 AS `D`, 1.0 AS `DP` UNION ALL SELECT 10 AS nid, 1.0 AS `P_0`, 0.0 AS `P_1`, 0.0 AS `P_2`, 0.0 AS `P_3`, 0.0 AS `P_4`, 0.0 AS `P_5`, 0.0 AS `P_6`, 0.0 AS `P_7`, 0.0 AS `P_8`, 0.0 AS `P_9`, 0 AS `D`, 1.0 AS `DP` UNION ALL SELECT 14 AS nid, 0.0 AS `P_0`, 0.0 AS `P_1`, 0.0 AS `P_2`, 0.0 AS `P_3`, 0.0 AS `P_4`, 0.0 AS `P_5`, 1.0 AS `P_6`, 0.0 AS `P_7`, 0.0 AS `P_8`, 0.0 AS `P_9`, 6 AS `D`, 1.0 AS `DP` UNION ALL SELECT 15 AS nid, 0.0 AS `P_0`, 0.0 AS `P_1`, 0.3333333333333333 AS `P_2`, 0.0 AS `P_3`, 0.0 AS `P_4`, 0.0 AS `P_5`, 0.0 AS `P_6`, 0.0 AS `P_7`, 0.0 AS `P_8`, 0.6666666666666666 AS `P_9`, 9 AS `D`, 0.6666666666666666 AS `DP` UNION ALL SELECT 17 AS nid, 0.0 AS `P_0`, 0.0 AS `P_1`, 0.0 AS `P_2`, 0.0 AS `P_3`, 0.0 AS `P_4`, 0.0 AS `P_5`, 0.0 AS `P_6`, 0.0 AS `P_7`, 1.0 AS `P_8`, 0.0 AS `P_9`, 8 AS `D`, 1.0 AS `DP` UNION ALL SELECT 18 AS nid, 0.0 AS `P_0`, 0.0 AS `P_1`, 0.0 AS `P_2`, 0.0 AS `P_3`, 0.0 AS `P_4`, 1.0 AS `P_5`, 0.0 AS `P_6`, 0.0 AS `P_7`, 0.0 AS `P_8`, 0.0 AS `P_9`, 5 AS `D`, 1.0 AS `DP` UNION ALL SELECT 21 AS nid, 0.0 AS `P_0`, 0.0 AS `P_1`, 0.0 AS `P_2`, 1.0 AS `P_3`, 0.0 AS `P_4`, 0.0 AS `P_5`, 0.0 AS `P_6`, 0.0 AS `P_7`, 0.0 AS `P_8`, 0.0 AS `P_9`, 3 AS `D`, 1.0 AS `DP` UNION ALL SELECT 22 AS nid, 0.0 AS `P_0`, 0.0 AS `P_1`, 0.0 AS `P_2`, 0.0 AS `P_3`, 0.0 AS `P_4`, 0.0 AS `P_5`, 0.0 AS `P_6`, 0.0 AS `P_7`, 0.0 AS `P_8`, 1.0 AS `P_9`, 9 AS `D`, 1.0 AS `DP` UNION ALL SELECT 24 AS nid, 0.0 AS `P_0`, 0.0 AS `P_1`, 0.0 AS `P_2`, 0.0 AS `P_3`, 0.0 AS `P_4`, 1.0 AS `P_5`, 0.0 AS `P_6`, 0.0 AS `P_7`, 0.0 AS `P_8`, 0.0 AS `P_9`, 5 AS `D`, 1.0 AS `DP` UNION ALL SELECT 25 AS nid, 0.0 AS `P_0`, 0.0 AS `P_1`, 0.0 AS `P_2`, 0.0 AS `P_3`, 0.0 AS `P_4`, 0.0 AS `P_5`, 0.0 AS `P_6`, 0.0 AS `P_7`, 1.0 AS `P_8`, 0.0 AS `P_9`, 8 AS `D`, 1.0 AS `DP` UNION ALL SELECT 30 AS nid, 0.0 AS `P_0`, 0.7058823529411765 AS `P_1`, 0.0 AS `P_2`, 0.029411764705882353 AS `P_3`, 0.11764705882352941 AS `P_4`, 0.029411764705882353 AS `P_5`, 0.08823529411764706 AS `P_6`, 0.029411764705882353 AS `P_7`, 0.0 AS `P_8`, 0.0 AS `P_9`, 1 AS `D`, 0.7058823529411765 AS `DP` UNION ALL SELECT 31 AS nid, 0.0 AS `P_0`, 0.0 AS `P_1`, 0.6176470588235294 AS `P_2`, 0.23529411764705882 AS `P_3`, 0.0 AS `P_4`, 0.029411764705882353 AS `P_5`, 0.0 AS `P_6`, 0.08823529411764706 AS `P_7`, 0.029411764705882353 AS `P_8`, 0.0 AS `P_9`, 2 AS `D`, 0.6176470588235294 AS `DP` UNION ALL SELECT 33 AS nid, 0.0 AS `P_0`, 0.0 AS `P_1`, 0.0 AS `P_2`, 0.0 AS `P_3`, 0.6666666666666666 AS `P_4`, 0.3333333333333333 AS `P_5`, 0.0 AS `P_6`, 0.0 AS `P_7`, 0.0 AS `P_8`, 0.0 AS `P_9`, 4 AS `D`, 0.6666666666666666 AS `DP` UNION ALL SELECT 34 AS nid, 0.0 AS `P_0`, 0.0 AS `P_1`, 0.0 AS `P_2`, 0.0 AS `P_3`, 0.0 AS `P_4`, 1.0 AS `P_5`, 0.0 AS `P_6`, 0.0 AS `P_7`, 0.0 AS `P_8`, 0.0 AS `P_9`, 5 AS `D`, 1.0 AS `DP` UNION ALL SELECT 37 AS nid, 0.0 AS `P_0`, 0.0 AS `P_1`, 0.0 AS `P_2`, 0.0 AS `P_3`, 0.9375 AS `P_4`, 0.0 AS `P_5`, 0.0625 AS `P_6`, 0.0 AS `P_7`, 0.0 AS `P_8`, 0.0 AS `P_9`, 4 AS `D`, 0.9375 AS `DP` UNION ALL SELECT 38 AS nid, 0.0 AS `P_0`, 0.6 AS `P_1`, 0.0 AS `P_2`, 0.0 AS `P_3`, 0.0 AS `P_4`, 0.0 AS `P_5`, 0.4 AS `P_6`, 0.0 AS `P_7`, 0.0 AS `P_8`, 0.0 AS `P_9`, 1 AS `D`, 0.6 AS `DP` UNION ALL SELECT 40 AS nid, 0.0 AS `P_0`, 0.0 AS `P_1`, 0.0 AS `P_2`, 0.0 AS `P_3`, 0.0 AS `P_4`, 0.010309278350515464 AS `P_5`, 0.9896907216494846 AS `P_6`, 0.0 AS `P_7`, 0.0 AS `P_8`, 0.0 AS `P_9`, 6 AS `D`, 0.9896907216494846 AS `DP` UNION ALL SELECT 41 AS nid, 0.0 AS `P_0`, 0.0 AS `P_1`, 1.0 AS `P_2`, 0.0 AS `P_3`, 0.0 AS `P_4`, 0.0 AS `P_5`, 0.0 AS `P_6`, 0.0 AS `P_7`, 0.0 AS `P_8`, 0.0 AS `P_9`, 2 AS `D`, 1.0 AS `DP` UNION ALL SELECT 45 AS nid, 0.0 AS `P_0`, 0.010416666666666666 AS `P_1`, 0.0 AS `P_2`, 0.03125 AS `P_3`, 0.020833333333333332 AS `P_4`, 0.0 AS `P_5`, 0.0 AS `P_6`, 0.8854166666666666 AS `P_7`, 0.041666666666666664 AS `P_8`, 0.010416666666666666 AS `P_9`, 7 AS `D`, 0.8854166666666666 AS `DP` UNION ALL SELECT 46 AS nid, 0.0 AS `P_0`, 0.5 AS `P_1`, 0.25 AS `P_2`, 0.25 AS `P_3`, 0.0 AS `P_4`, 0.0 AS `P_5`, 0.0 AS `P_6`, 0.0 AS `P_7`, 0.0 AS `P_8`, 0.0 AS `P_9`, 1 AS `D`, 0.5 AS `DP` UNION ALL SELECT 48 AS nid, 0.0 AS `P_0`, 0.08695652173913043 AS `P_1`, 0.0 AS `P_2`, 0.0 AS `P_3`, 0.08695652173913043 AS `P_4`, 0.08695652173913043 AS `P_5`, 0.0 AS `P_6`, 0.34782608695652173 AS `P_7`, 0.0 AS `P_8`, 0.391304347826087 AS `P_9`, 9 AS `D`, 0.391304347826087 AS `DP` UNION ALL SELECT 49 AS nid, 0.0 AS `P_0`, 0.125 AS `P_1`, 0.0 AS `P_2`, 0.0 AS `P_3`, 0.875 AS `P_4`, 0.0 AS `P_5`, 0.0 AS `P_6`, 0.0 AS `P_7`, 0.0 AS `P_8`, 0.0 AS `P_9`, 4 AS `D`, 0.875 AS `DP` UNION ALL SELECT 52 AS nid, 0.0 AS `P_0`, 0.00980392156862745 AS `P_1`, 0.029411764705882353 AS `P_2`, 0.8431372549019608 AS `P_3`, 0.0 AS `P_4`, 0.0 AS `P_5`, 0.0 AS `P_6`, 0.0 AS `P_7`, 0.0392156862745098 AS `P_8`, 0.0784313725490196 AS `P_9`, 3 AS `D`, 0.8431372549019608 AS `DP` UNION ALL SELECT 53 AS nid, 0.0 AS `P_0`, 0.09523809523809523 AS `P_1`, 0.0 AS `P_2`, 0.03571428571428571 AS `P_3`, 0.08333333333333333 AS `P_4`, 0.03571428571428571 AS `P_5`, 0.0 AS `P_6`, 0.023809523809523808 AS `P_7`, 0.08333333333333333 AS `P_8`, 0.6428571428571429 AS `P_9`, 9 AS `D`, 0.6428571428571429 AS `DP` UNION ALL SELECT 55 AS nid, 0.0 AS `P_0`, 0.22707423580786026 AS `P_1`, 0.3406113537117904 AS `P_2`, 0.021834061135371178 AS `P_3`, 0.013100436681222707 AS `P_4`, 0.0 AS `P_5`, 0.004366812227074236 AS `P_6`, 0.026200873362445413 AS `P_7`, 0.3537117903930131 AS `P_8`, 0.013100436681222707 AS `P_9`, 8 AS `D`, 0.3537117903930131 AS `DP` UNION ALL SELECT 56 AS nid, 0.024096385542168676 AS `P_0`, 0.1686746987951807 AS `P_1`, 0.012048192771084338 AS `P_2`, 0.0 AS `P_3`, 0.7590361445783133 AS `P_4`, 0.0 AS `P_5`, 0.012048192771084338 AS `P_6`, 0.0 AS `P_7`, 0.024096385542168676 AS `P_8`, 0.0 AS `P_9`, 4 AS `D`, 0.7590361445783133 AS `DP`) AS `Values`), 
`DT_Output_3` AS 
(SELECT `DT_node_lookup_3`.`KEY` AS `KEY`, `DT_node_lookup_3`.node_id_2 AS node_id_2, `DT_node_data_3`.nid AS nid, `DT_node_data_3`.`P_0` AS `P_0`, `DT_node_data_3`.`P_1` AS `P_1`, `DT_node_data_3`.`P_2` AS `P_2`, `DT_node_data_3`.`P_3` AS `P_3`, `DT_node_data_3`.`P_4` AS `P_4`, `DT_node_data_3`.`P_5` AS `P_5`, `DT_node_data_3`.`P_6` AS `P_6`, `DT_node_data_3`.`P_7` AS `P_7`, `DT_node_data_3`.`P_8` AS `P_8`, `DT_node_data_3`.`P_9` AS `P_9`, `DT_node_data_3`.`D` AS `D`, `DT_node_data_3`.`DP` AS `DP` 
FROM `DT_node_lookup_3` LEFT OUTER JOIN `DT_node_data_3` ON `DT_node_lookup_3`.node_id_2 = `DT_node_data_3`.nid), 
`Calibrated_Model_3` AS 
(SELECT `DT_Output_3`.`KEY` AS `KEY`, CAST(NULL AS DOUBLE) AS `Score_0`, CAST(NULL AS DOUBLE) AS `Score_1`, CAST(NULL AS DOUBLE) AS `Score_2`, CAST(NULL AS DOUBLE) AS `Score_3`, CAST(NULL AS DOUBLE) AS `Score_4`, CAST(NULL AS DOUBLE) AS `Score_5`, CAST(NULL AS DOUBLE) AS `Score_6`, CAST(NULL AS DOUBLE) AS `Score_7`, CAST(NULL AS DOUBLE) AS `Score_8`, CAST(NULL AS DOUBLE) AS `Score_9`, `DT_Output_3`.`P_0` AS `Proba_0`, `DT_Output_3`.`P_1` AS `Proba_1`, `DT_Output_3`.`P_2` AS `Proba_2`, `DT_Output_3`.`P_3` AS `Proba_3`, `DT_Output_3`.`P_4` AS `Proba_4`, `DT_Output_3`.`P_5` AS `Proba_5`, `DT_Output_3`.`P_6` AS `Proba_6`, `DT_Output_3`.`P_7` AS `Proba_7`, `DT_Output_3`.`P_8` AS `Proba_8`, `DT_Output_3`.`P_9` AS `Proba_9`, CASE WHEN (`DT_Output_3`.`P_0` IS NULL OR `DT_Output_3`.`P_0` > 0.0) THEN ln(`DT_Output_3`.`P_0`) ELSE -1.79769313486231e+308 END AS `LogProba_0`, CASE WHEN (`DT_Output_3`.`P_1` IS NULL OR `DT_Output_3`.`P_1` > 0.0) THEN ln(`DT_Output_3`.`P_1`) ELSE -1.79769313486231e+308 END AS `LogProba_1`, CASE WHEN (`DT_Output_3`.`P_2` IS NULL OR `DT_Output_3`.`P_2` > 0.0) THEN ln(`DT_Output_3`.`P_2`) ELSE -1.79769313486231e+308 END AS `LogProba_2`, CASE WHEN (`DT_Output_3`.`P_3` IS NULL OR `DT_Output_3`.`P_3` > 0.0) THEN ln(`DT_Output_3`.`P_3`) ELSE -1.79769313486231e+308 END AS `LogProba_3`, CASE WHEN (`DT_Output_3`.`P_4` IS NULL OR `DT_Output_3`.`P_4` > 0.0) THEN ln(`DT_Output_3`.`P_4`) ELSE -1.79769313486231e+308 END AS `LogProba_4`, CASE WHEN (`DT_Output_3`.`P_5` IS NULL OR `DT_Output_3`.`P_5` > 0.0) THEN ln(`DT_Output_3`.`P_5`) ELSE -1.79769313486231e+308 END AS `LogProba_5`, CASE WHEN (`DT_Output_3`.`P_6` IS NULL OR `DT_Output_3`.`P_6` > 0.0) THEN ln(`DT_Output_3`.`P_6`) ELSE -1.79769313486231e+308 END AS `LogProba_6`, CASE WHEN (`DT_Output_3`.`P_7` IS NULL OR `DT_Output_3`.`P_7` > 0.0) THEN ln(`DT_Output_3`.`P_7`) ELSE -1.79769313486231e+308 END AS `LogProba_7`, CASE WHEN (`DT_Output_3`.`P_8` IS NULL OR `DT_Output_3`.`P_8` > 0.0) THEN ln(`DT_Output_3`.`P_8`) ELSE -1.79769313486231e+308 END AS `LogProba_8`, CASE WHEN (`DT_Output_3`.`P_9` IS NULL OR `DT_Output_3`.`P_9` > 0.0) THEN ln(`DT_Output_3`.`P_9`) ELSE -1.79769313486231e+308 END AS `LogProba_9`, CAST(NULL AS BIGINT) AS `Decision`, CAST(NULL AS DOUBLE) AS `DecisionProba`, coalesce(CAST(NULL AS DOUBLE), `DT_Output_3`.`P_0`) AS `ScoreOrProba_0`, coalesce(CAST(NULL AS DOUBLE), `DT_Output_3`.`P_1`) AS `ScoreOrProba_1`, coalesce(CAST(NULL AS DOUBLE), `DT_Output_3`.`P_2`) AS `ScoreOrProba_2`, coalesce(CAST(NULL AS DOUBLE), `DT_Output_3`.`P_3`) AS `ScoreOrProba_3`, coalesce(CAST(NULL AS DOUBLE), `DT_Output_3`.`P_4`) AS `ScoreOrProba_4`, coalesce(CAST(NULL AS DOUBLE), `DT_Output_3`.`P_5`) AS `ScoreOrProba_5`, coalesce(CAST(NULL AS DOUBLE), `DT_Output_3`.`P_6`) AS `ScoreOrProba_6`, coalesce(CAST(NULL AS DOUBLE), `DT_Output_3`.`P_7`) AS `ScoreOrProba_7`, coalesce(CAST(NULL AS DOUBLE), `DT_Output_3`.`P_8`) AS `ScoreOrProba_8`, coalesce(CAST(NULL AS DOUBLE), `DT_Output_3`.`P_9`) AS `ScoreOrProba_9` 
FROM `DT_Output_3`), 
isotonic_cte_3 AS 
(SELECT `Calibrated_Model_3`.`KEY` AS `KEY`, CASE WHEN (`Calibrated_Model_3`.`ScoreOrProba_0` < 0.0) THEN 0.0022522522522522522 WHEN (`Calibrated_Model_3`.`ScoreOrProba_0` < 0.5) THEN (`Calibrated_Model_3`.`ScoreOrProba_0` - 0.0) * 0.0 + 0.0022522522522522522 WHEN (`Calibrated_Model_3`.`ScoreOrProba_0` < 1.0) THEN (`Calibrated_Model_3`.`ScoreOrProba_0` - 0.5) * 1.877848436671966 + 0.0022522522522522522 ELSE 0.9411764705882353 END AS `Proba_0`, CASE WHEN (`Calibrated_Model_3`.`ScoreOrProba_1` < 0.0) THEN 0.007246376811594203 WHEN (`Calibrated_Model_3`.`ScoreOrProba_1` < 0.00980392156862745) THEN (`Calibrated_Model_3`.`ScoreOrProba_1` - 0.0) * 0.3576437587657783 + 0.007246376811594203 WHEN (`Calibrated_Model_3`.`ScoreOrProba_1` < 0.08695652173913043) THEN (`Calibrated_Model_3`.`ScoreOrProba_1` - 0.00980392156862745) * 0.0 + 0.01075268817204301 WHEN (`Calibrated_Model_3`.`ScoreOrProba_1` < 0.09523809523809523) THEN (`Calibrated_Model_3`.`ScoreOrProba_1` - 0.08695652173913043) * 7.790322580645164 + 0.01075268817204301 WHEN (`Calibrated_Model_3`.`ScoreOrProba_1` < 0.1686746987951807) THEN (`Calibrated_Model_3`.`ScoreOrProba_1` - 0.09523809523809523) * 0.0 + 0.07526881720430108 WHEN (`Calibrated_Model_3`.`ScoreOrProba_1` < 0.22707423580786026) THEN (`Calibrated_Model_3`.`ScoreOrProba_1` - 0.1686746987951807) * 1.0023024614801075 + 0.07526881720430108 WHEN (`Calibrated_Model_3`.`ScoreOrProba_1` < 0.5) THEN (`Calibrated_Model_3`.`ScoreOrProba_1` - 0.22707423580786026) * 0.0 + 0.13380281690140844 WHEN (`Calibrated_Model_3`.`ScoreOrProba_1` < 0.6) THEN (`Calibrated_Model_3`.`ScoreOrProba_1` - 0.5) * 4.733400402414489 + 0.13380281690140844 WHEN (`Calibrated_Model_3`.`ScoreOrProba_1` < 0.7058823529411765) THEN (`Calibrated_Model_3`.`ScoreOrProba_1` - 0.6) * 0.0 + 0.6071428571428572 ELSE 0.6071428571428572 END AS `Proba_1`, CASE WHEN (`Calibrated_Model_3`.`ScoreOrProba_2` < 0.0) THEN 0.009345794392523364 WHEN (`Calibrated_Model_3`.`ScoreOrProba_2` < 0.012048192771084338) THEN (`Calibrated_Model_3`.`ScoreOrProba_2` - 0.0) * 0.0 + 0.009345794392523364 WHEN (`Calibrated_Model_3`.`ScoreOrProba_2` < 0.029411764705882353) THEN (`Calibrated_Model_3`.`ScoreOrProba_2` - 0.012048192771084338) * 3.177360905170027 + 0.009345794392523364 WHEN (`Calibrated_Model_3`.`ScoreOrProba_2` < 0.25) THEN (`Calibrated_Model_3`.`ScoreOrProba_2` - 0.029411764705882353) * 1.8571356454137007 + 0.06451612903225806 WHEN (`Calibrated_Model_3`.`ScoreOrProba_2` < 0.3406113537117904) THEN (`Calibrated_Model_3`.`ScoreOrProba_2` - 0.25) * 0.0 + 0.4741784037558685 WHEN (`Calibrated_Model_3`.`ScoreOrProba_2` < 0.6176470588235294) THEN (`Calibrated_Model_3`.`ScoreOrProba_2` - 0.3406113537117904) * 0.2572814275687985 + 0.4741784037558685 WHEN (`Calibrated_Model_3`.`ScoreOrProba_2` < 1.0) THEN (`Calibrated_Model_3`.`ScoreOrProba_2` - 0.6176470588235294) * 1.188811188811189 + 0.5454545454545454 ELSE 1.0 END AS `Proba_2`, CASE WHEN (`Calibrated_Model_3`.`ScoreOrProba_3` < 0.0) THEN 0.005917159763313609 WHEN (`Calibrated_Model_3`.`ScoreOrProba_3` < 0.021834061135371178) THEN (`Calibrated_Model_3`.`ScoreOrProba_3` - 0.0) * 1.341670139178265 + 0.005917159763313609 WHEN (`Calibrated_Model_3`.`ScoreOrProba_3` < 0.029411764705882353) THEN (`Calibrated_Model_3`.`ScoreOrProba_3` - 0.021834061135371178) * 0.0 + 0.035211267605633804 WHEN (`Calibrated_Model_3`.`ScoreOrProba_3` < 0.03125) THEN (`Calibrated_Model_3`.`ScoreOrProba_3` - 0.029411764705882353) * 13.814767392232177 + 0.035211267605633804 WHEN (`Calibrated_Model_3`.`ScoreOrProba_3` < 0.03571428571428571) THEN (`Calibrated_Model_3`.`ScoreOrProba_3` - 0.03125) * 0.8758553274682304 + 0.06060606060606061 WHEN (`Calibrated_Model_3`.`ScoreOrProba_3` < 0.23529411764705882) THEN (`Calibrated_Model_3`.`ScoreOrProba_3` - 0.03571428571428571) * 0.13224263003549933 + 0.06451612903225806 WHEN (`Calibrated_Model_3`.`ScoreOrProba_3` < 0.25) THEN (`Calibrated_Model_3`.`ScoreOrProba_3` - 0.23529411764705882) * 16.48484848484848 + 0.09090909090909091 WHEN (`Calibrated_Model_3`.`ScoreOrProba_3` < 0.8431372549019608) THEN (`Calibrated_Model_3`.`ScoreOrProba_3` - 0.25) * 0.743268461743535 + 0.3333333333333333 ELSE 0.7741935483870968 END AS `Proba_3`, CASE WHEN (`Calibrated_Model_3`.`ScoreOrProba_4` < 0.0) THEN 0.014384758161371329 WHEN (`Calibrated_Model_3`.`ScoreOrProba_4` < 0.020833333333333332) THEN (`Calibrated_Model_3`.`ScoreOrProba_4` - 0.0) * 0.0 + 0.014384758161371329 WHEN (`Calibrated_Model_3`.`ScoreOrProba_4` < 0.08333333333333333) THEN (`Calibrated_Model_3`.`ScoreOrProba_4` - 0.020833333333333332) * 0.8021019339341877 + 0.014384758161371329 WHEN (`Calibrated_Model_3`.`ScoreOrProba_4` < 0.08695652173913043) THEN (`Calibrated_Model_3`.`ScoreOrProba_4` - 0.08333333333333333) * 7.749103942652328 + 0.06451612903225806 WHEN (`Calibrated_Model_3`.`ScoreOrProba_4` < 0.6666666666666666) THEN (`Calibrated_Model_3`.`ScoreOrProba_4` - 0.08695652173913043) * 0.0 + 0.0925925925925926 WHEN (`Calibrated_Model_3`.`ScoreOrProba_4` < 0.7590361445783133) THEN (`Calibrated_Model_3`.`ScoreOrProba_4` - 0.6666666666666666) * 6.3174956082564755 + 0.0925925925925926 WHEN (`Calibrated_Model_3`.`ScoreOrProba_4` < 1.0) THEN (`Calibrated_Model_3`.`ScoreOrProba_4` - 0.7590361445783133) * 0.0 + 0.6761363636363636 ELSE 0.6761363636363636 END AS `Proba_4`, CASE WHEN (`Calibrated_Model_3`.`ScoreOrProba_5` < 0.0) THEN 0.0014492753623188406 WHEN (`Calibrated_Model_3`.`ScoreOrProba_5` < 0.029411764705882353) THEN (`Calibrated_Model_3`.`ScoreOrProba_5` - 0.0) * 0.0 + 0.0014492753623188406 WHEN (`Calibrated_Model_3`.`ScoreOrProba_5` < 0.03571428571428571) THEN (`Calibrated_Model_3`.`ScoreOrProba_5` - 0.029411764705882353) * 1.476141499142902 + 0.0014492753623188406 WHEN (`Calibrated_Model_3`.`ScoreOrProba_5` < 0.3333333333333333) THEN (`Calibrated_Model_3`.`ScoreOrProba_5` - 0.03571428571428571) * 0.0 + 0.01075268817204301 WHEN (`Calibrated_Model_3`.`ScoreOrProba_5` < 1.0) THEN (`Calibrated_Model_3`.`ScoreOrProba_5` - 0.3333333333333333) * 1.4410138248847926 + 0.01075268817204301 ELSE 0.9714285714285714 END AS `Proba_5`, CASE WHEN (`Calibrated_Model_3`.`ScoreOrProba_6` < 0.0) THEN 0.0015873015873015875 WHEN (`Calibrated_Model_3`.`ScoreOrProba_6` < 0.012048192771084338) THEN (`Calibrated_Model_3`.`ScoreOrProba_6` - 0.0) * 0.0 + 0.0015873015873015875 WHEN (`Calibrated_Model_3`.`ScoreOrProba_6` < 0.0625) THEN (`Calibrated_Model_3`.`ScoreOrProba_6` - 0.012048192771084338) * 1.6202795546079127 + 0.0015873015873015875 WHEN (`Calibrated_Model_3`.`ScoreOrProba_6` < 0.4) THEN (`Calibrated_Model_3`.`ScoreOrProba_6` - 0.0625) * 0.0 + 0.08333333333333333 WHEN (`Calibrated_Model_3`.`ScoreOrProba_6` < 0.5) THEN (`Calibrated_Model_3`.`ScoreOrProba_6` - 0.4) * 2.5000000000000004 + 0.08333333333333333 WHEN (`Calibrated_Model_3`.`ScoreOrProba_6` < 0.9896907216494846) THEN (`Calibrated_Model_3`.`ScoreOrProba_6` - 0.5) * 1.3614035087719298 + 0.3333333333333333 ELSE 1.0 END AS `Proba_6`, CASE WHEN (`Calibrated_Model_3`.`ScoreOrProba_7` < 0.0) THEN 0.004878757078553797 WHEN (`Calibrated_Model_3`.`ScoreOrProba_7` < 0.08823529411764706) THEN (`Calibrated_Model_3`.`ScoreOrProba_7` - 0.0) * 0.0 + 0.004878757078553797 WHEN (`Calibrated_Model_3`.`ScoreOrProba_7` < 0.34782608695652173) THEN (`Calibrated_Model_3`.`ScoreOrProba_7` - 0.08823529411764706) * 1.6933023030548104 + 0.004878757078553797 WHEN (`Calibrated_Model_3`.`ScoreOrProba_7` < 0.8854166666666666) THEN (`Calibrated_Model_3`.`ScoreOrProba_7` - 0.34782608695652173) * 0.7515764213321081 + 0.4444444444444444 ELSE 0.8484848484848485 END AS `Proba_7`, CASE WHEN (`Calibrated_Model_3`.`ScoreOrProba_8` < 0.0) THEN 0.003205128205128205 WHEN (`Calibrated_Model_3`.`ScoreOrProba_8` < 0.024096385542168676) THEN (`Calibrated_Model_3`.`ScoreOrProba_8` - 0.0) * 0.0 + 0.003205128205128205 WHEN (`Calibrated_Model_3`.`ScoreOrProba_8` < 0.029411764705882353) THEN (`Calibrated_Model_3`.`ScoreOrProba_8` - 0.024096385542168676) * 18.293098478582355 + 0.003205128205128205 WHEN (`Calibrated_Model_3`.`ScoreOrProba_8` < 0.08333333333333333) THEN (`Calibrated_Model_3`.`ScoreOrProba_8` - 0.029411764705882353) * 0.0 + 0.10043988269794721 WHEN (`Calibrated_Model_3`.`ScoreOrProba_8` < 0.3537117903930131) THEN (`Calibrated_Model_3`.`ScoreOrProba_8` - 0.08333333333333333) * 0.8266330894275001 + 0.10043988269794721 ELSE 0.323943661971831 END AS `Proba_8`, CASE WHEN (`Calibrated_Model_3`.`ScoreOrProba_9` < 0.0) THEN 0.003992015968063873 WHEN (`Calibrated_Model_3`.`ScoreOrProba_9` < 0.013100436681222707) THEN (`Calibrated_Model_3`.`ScoreOrProba_9` - 0.0) * 0.0 + 0.003992015968063873 WHEN (`Calibrated_Model_3`.`ScoreOrProba_9` < 0.0784313725490196) THEN (`Calibrated_Model_3`.`ScoreOrProba_9` - 0.013100436681222707) * 1.4201874861868873 + 0.003992015968063873 WHEN (`Calibrated_Model_3`.`ScoreOrProba_9` < 0.391304347826087) THEN (`Calibrated_Model_3`.`ScoreOrProba_9` - 0.0784313725490196) * 1.111218540329905 + 0.0967741935483871 WHEN (`Calibrated_Model_3`.`ScoreOrProba_9` < 0.6428571428571429) THEN (`Calibrated_Model_3`.`ScoreOrProba_9` - 0.391304347826087) * 0.1567325987875571 + 0.4444444444444444 WHEN (`Calibrated_Model_3`.`ScoreOrProba_9` < 1.0) THEN (`Calibrated_Model_3`.`ScoreOrProba_9` - 0.6428571428571429) * 1.2297766749379655 + 0.4838709677419355 ELSE 0.9230769230769231 END AS `Proba_9` 
FROM `Calibrated_Model_3`), 
`Normalized_Probas_3` AS 
(SELECT isotonic_cte_3.`KEY` AS `KEY`, isotonic_cte_3.`Proba_0` / (isotonic_cte_3.`Proba_0` + isotonic_cte_3.`Proba_1` + isotonic_cte_3.`Proba_2` + isotonic_cte_3.`Proba_3` + isotonic_cte_3.`Proba_4` + isotonic_cte_3.`Proba_5` + isotonic_cte_3.`Proba_6` + isotonic_cte_3.`Proba_7` + isotonic_cte_3.`Proba_8` + isotonic_cte_3.`Proba_9`) AS `Proba_0`, isotonic_cte_3.`Proba_1` / (isotonic_cte_3.`Proba_0` + isotonic_cte_3.`Proba_1` + isotonic_cte_3.`Proba_2` + isotonic_cte_3.`Proba_3` + isotonic_cte_3.`Proba_4` + isotonic_cte_3.`Proba_5` + isotonic_cte_3.`Proba_6` + isotonic_cte_3.`Proba_7` + isotonic_cte_3.`Proba_8` + isotonic_cte_3.`Proba_9`) AS `Proba_1`, isotonic_cte_3.`Proba_2` / (isotonic_cte_3.`Proba_0` + isotonic_cte_3.`Proba_1` + isotonic_cte_3.`Proba_2` + isotonic_cte_3.`Proba_3` + isotonic_cte_3.`Proba_4` + isotonic_cte_3.`Proba_5` + isotonic_cte_3.`Proba_6` + isotonic_cte_3.`Proba_7` + isotonic_cte_3.`Proba_8` + isotonic_cte_3.`Proba_9`) AS `Proba_2`, isotonic_cte_3.`Proba_3` / (isotonic_cte_3.`Proba_0` + isotonic_cte_3.`Proba_1` + isotonic_cte_3.`Proba_2` + isotonic_cte_3.`Proba_3` + isotonic_cte_3.`Proba_4` + isotonic_cte_3.`Proba_5` + isotonic_cte_3.`Proba_6` + isotonic_cte_3.`Proba_7` + isotonic_cte_3.`Proba_8` + isotonic_cte_3.`Proba_9`) AS `Proba_3`, isotonic_cte_3.`Proba_4` / (isotonic_cte_3.`Proba_0` + isotonic_cte_3.`Proba_1` + isotonic_cte_3.`Proba_2` + isotonic_cte_3.`Proba_3` + isotonic_cte_3.`Proba_4` + isotonic_cte_3.`Proba_5` + isotonic_cte_3.`Proba_6` + isotonic_cte_3.`Proba_7` + isotonic_cte_3.`Proba_8` + isotonic_cte_3.`Proba_9`) AS `Proba_4`, isotonic_cte_3.`Proba_5` / (isotonic_cte_3.`Proba_0` + isotonic_cte_3.`Proba_1` + isotonic_cte_3.`Proba_2` + isotonic_cte_3.`Proba_3` + isotonic_cte_3.`Proba_4` + isotonic_cte_3.`Proba_5` + isotonic_cte_3.`Proba_6` + isotonic_cte_3.`Proba_7` + isotonic_cte_3.`Proba_8` + isotonic_cte_3.`Proba_9`) AS `Proba_5`, isotonic_cte_3.`Proba_6` / (isotonic_cte_3.`Proba_0` + isotonic_cte_3.`Proba_1` + isotonic_cte_3.`Proba_2` + isotonic_cte_3.`Proba_3` + isotonic_cte_3.`Proba_4` + isotonic_cte_3.`Proba_5` + isotonic_cte_3.`Proba_6` + isotonic_cte_3.`Proba_7` + isotonic_cte_3.`Proba_8` + isotonic_cte_3.`Proba_9`) AS `Proba_6`, isotonic_cte_3.`Proba_7` / (isotonic_cte_3.`Proba_0` + isotonic_cte_3.`Proba_1` + isotonic_cte_3.`Proba_2` + isotonic_cte_3.`Proba_3` + isotonic_cte_3.`Proba_4` + isotonic_cte_3.`Proba_5` + isotonic_cte_3.`Proba_6` + isotonic_cte_3.`Proba_7` + isotonic_cte_3.`Proba_8` + isotonic_cte_3.`Proba_9`) AS `Proba_7`, isotonic_cte_3.`Proba_8` / (isotonic_cte_3.`Proba_0` + isotonic_cte_3.`Proba_1` + isotonic_cte_3.`Proba_2` + isotonic_cte_3.`Proba_3` + isotonic_cte_3.`Proba_4` + isotonic_cte_3.`Proba_5` + isotonic_cte_3.`Proba_6` + isotonic_cte_3.`Proba_7` + isotonic_cte_3.`Proba_8` + isotonic_cte_3.`Proba_9`) AS `Proba_8`, isotonic_cte_3.`Proba_9` / (isotonic_cte_3.`Proba_0` + isotonic_cte_3.`Proba_1` + isotonic_cte_3.`Proba_2` + isotonic_cte_3.`Proba_3` + isotonic_cte_3.`Proba_4` + isotonic_cte_3.`Proba_5` + isotonic_cte_3.`Proba_6` + isotonic_cte_3.`Proba_7` + isotonic_cte_3.`Proba_8` + isotonic_cte_3.`Proba_9`) AS `Proba_9` 
FROM isotonic_cte_3)
 INSERT INTO tmp_20180516115801_codegen_tf6cl6_calprob_b0 (`KEY`, `Proba_0`, `Proba_1`, `Proba_2`, `Proba_3`, `Proba_4`, `Proba_5`, `Proba_6`, `Proba_7`, `Proba_8`, `Proba_9`) SELECT `CalProb_B0`.`KEY`, `CalProb_B0`.`Proba_0`, `CalProb_B0`.`Proba_1`, `CalProb_B0`.`Proba_2`, `CalProb_B0`.`Proba_3`, `CalProb_B0`.`Proba_4`, `CalProb_B0`.`Proba_5`, `CalProb_B0`.`Proba_6`, `CalProb_B0`.`Proba_7`, `CalProb_B0`.`Proba_8`, `CalProb_B0`.`Proba_9` 
FROM (SELECT `CalProb_esu_0`.`KEY` AS `KEY`, `CalProb_esu_0`.`Proba_0` AS `Proba_0`, `CalProb_esu_0`.`Proba_1` AS `Proba_1`, `CalProb_esu_0`.`Proba_2` AS `Proba_2`, `CalProb_esu_0`.`Proba_3` AS `Proba_3`, `CalProb_esu_0`.`Proba_4` AS `Proba_4`, `CalProb_esu_0`.`Proba_5` AS `Proba_5`, `CalProb_esu_0`.`Proba_6` AS `Proba_6`, `CalProb_esu_0`.`Proba_7` AS `Proba_7`, `CalProb_esu_0`.`Proba_8` AS `Proba_8`, `CalProb_esu_0`.`Proba_9` AS `Proba_9` 
FROM (SELECT `Normalized_Probas`.`KEY` AS `KEY`, `Normalized_Probas`.`Proba_0` AS `Proba_0`, `Normalized_Probas`.`Proba_1` AS `Proba_1`, `Normalized_Probas`.`Proba_2` AS `Proba_2`, `Normalized_Probas`.`Proba_3` AS `Proba_3`, `Normalized_Probas`.`Proba_4` AS `Proba_4`, `Normalized_Probas`.`Proba_5` AS `Proba_5`, `Normalized_Probas`.`Proba_6` AS `Proba_6`, `Normalized_Probas`.`Proba_7` AS `Proba_7`, `Normalized_Probas`.`Proba_8` AS `Proba_8`, `Normalized_Probas`.`Proba_9` AS `Proba_9` 
FROM `Normalized_Probas` UNION ALL SELECT `Normalized_Probas_1`.`KEY` AS `KEY`, `Normalized_Probas_1`.`Proba_0` AS `Proba_0`, `Normalized_Probas_1`.`Proba_1` AS `Proba_1`, `Normalized_Probas_1`.`Proba_2` AS `Proba_2`, `Normalized_Probas_1`.`Proba_3` AS `Proba_3`, `Normalized_Probas_1`.`Proba_4` AS `Proba_4`, `Normalized_Probas_1`.`Proba_5` AS `Proba_5`, `Normalized_Probas_1`.`Proba_6` AS `Proba_6`, `Normalized_Probas_1`.`Proba_7` AS `Proba_7`, `Normalized_Probas_1`.`Proba_8` AS `Proba_8`, `Normalized_Probas_1`.`Proba_9` AS `Proba_9` 
FROM `Normalized_Probas_1` UNION ALL SELECT `Normalized_Probas_2`.`KEY` AS `KEY`, `Normalized_Probas_2`.`Proba_0` AS `Proba_0`, `Normalized_Probas_2`.`Proba_1` AS `Proba_1`, `Normalized_Probas_2`.`Proba_2` AS `Proba_2`, `Normalized_Probas_2`.`Proba_3` AS `Proba_3`, `Normalized_Probas_2`.`Proba_4` AS `Proba_4`, `Normalized_Probas_2`.`Proba_5` AS `Proba_5`, `Normalized_Probas_2`.`Proba_6` AS `Proba_6`, `Normalized_Probas_2`.`Proba_7` AS `Proba_7`, `Normalized_Probas_2`.`Proba_8` AS `Proba_8`, `Normalized_Probas_2`.`Proba_9` AS `Proba_9` 
FROM `Normalized_Probas_2` UNION ALL SELECT `Normalized_Probas_3`.`KEY` AS `KEY`, `Normalized_Probas_3`.`Proba_0` AS `Proba_0`, `Normalized_Probas_3`.`Proba_1` AS `Proba_1`, `Normalized_Probas_3`.`Proba_2` AS `Proba_2`, `Normalized_Probas_3`.`Proba_3` AS `Proba_3`, `Normalized_Probas_3`.`Proba_4` AS `Proba_4`, `Normalized_Probas_3`.`Proba_5` AS `Proba_5`, `Normalized_Probas_3`.`Proba_6` AS `Proba_6`, `Normalized_Probas_3`.`Proba_7` AS `Proba_7`, `Normalized_Probas_3`.`Proba_8` AS `Proba_8`, `Normalized_Probas_3`.`Proba_9` AS `Proba_9` 
FROM `Normalized_Probas_3`) AS `CalProb_esu_0`) AS `CalProb_B0`

-- Code For temporary table tmp_20180516115801_codegen_ff0pyn_calprob_avg part 1. Create 


CREATE TABLE tmp_20180516115801_codegen_ff0pyn_calprob_avg (
	`KEY` BIGINT, 
	`Proba_0` DOUBLE, 
	`Proba_1` DOUBLE, 
	`Proba_2` DOUBLE, 
	`Proba_3` DOUBLE, 
	`Proba_4` DOUBLE, 
	`Proba_5` DOUBLE, 
	`Proba_6` DOUBLE, 
	`Proba_7` DOUBLE, 
	`Proba_8` DOUBLE, 
	`Proba_9` DOUBLE
)

 CACHED IN 'one_gig_pool'

-- Code For temporary table tmp_20180516115801_codegen_ff0pyn_calprob_avg part 2. Populate

WITH `CalProb_Union` AS 
(SELECT `CalProb_EnsembleUnion`.`KEY` AS `KEY`, `CalProb_EnsembleUnion`.`Proba_0` AS `Proba_0`, `CalProb_EnsembleUnion`.`Proba_1` AS `Proba_1`, `CalProb_EnsembleUnion`.`Proba_2` AS `Proba_2`, `CalProb_EnsembleUnion`.`Proba_3` AS `Proba_3`, `CalProb_EnsembleUnion`.`Proba_4` AS `Proba_4`, `CalProb_EnsembleUnion`.`Proba_5` AS `Proba_5`, `CalProb_EnsembleUnion`.`Proba_6` AS `Proba_6`, `CalProb_EnsembleUnion`.`Proba_7` AS `Proba_7`, `CalProb_EnsembleUnion`.`Proba_8` AS `Proba_8`, `CalProb_EnsembleUnion`.`Proba_9` AS `Proba_9` 
FROM (SELECT `CalProb_B0`.`KEY` AS `KEY`, `CalProb_B0`.`Proba_0` AS `Proba_0`, `CalProb_B0`.`Proba_1` AS `Proba_1`, `CalProb_B0`.`Proba_2` AS `Proba_2`, `CalProb_B0`.`Proba_3` AS `Proba_3`, `CalProb_B0`.`Proba_4` AS `Proba_4`, `CalProb_B0`.`Proba_5` AS `Proba_5`, `CalProb_B0`.`Proba_6` AS `Proba_6`, `CalProb_B0`.`Proba_7` AS `Proba_7`, `CalProb_B0`.`Proba_8` AS `Proba_8`, `CalProb_B0`.`Proba_9` AS `Proba_9` 
FROM tmp_20180516115801_codegen_tf6cl6_calprob_b0 AS `CalProb_B0`) AS `CalProb_EnsembleUnion`)
 INSERT INTO tmp_20180516115801_codegen_ff0pyn_calprob_avg (`KEY`, `Proba_0`, `Proba_1`, `Proba_2`, `Proba_3`, `Proba_4`, `Proba_5`, `Proba_6`, `Proba_7`, `Proba_8`, `Proba_9`) SELECT `CalProb_avg`.`KEY`, `CalProb_avg`.`Proba_0`, `CalProb_avg`.`Proba_1`, `CalProb_avg`.`Proba_2`, `CalProb_avg`.`Proba_3`, `CalProb_avg`.`Proba_4`, `CalProb_avg`.`Proba_5`, `CalProb_avg`.`Proba_6`, `CalProb_avg`.`Proba_7`, `CalProb_avg`.`Proba_8`, `CalProb_avg`.`Proba_9` 
FROM (SELECT `T`.`KEY` AS `KEY`, CAST(`T`.`Proba_0` AS DOUBLE) AS `Proba_0`, CAST(`T`.`Proba_1` AS DOUBLE) AS `Proba_1`, CAST(`T`.`Proba_2` AS DOUBLE) AS `Proba_2`, CAST(`T`.`Proba_3` AS DOUBLE) AS `Proba_3`, CAST(`T`.`Proba_4` AS DOUBLE) AS `Proba_4`, CAST(`T`.`Proba_5` AS DOUBLE) AS `Proba_5`, CAST(`T`.`Proba_6` AS DOUBLE) AS `Proba_6`, CAST(`T`.`Proba_7` AS DOUBLE) AS `Proba_7`, CAST(`T`.`Proba_8` AS DOUBLE) AS `Proba_8`, CAST(`T`.`Proba_9` AS DOUBLE) AS `Proba_9` 
FROM (SELECT `CalProb_Union`.`KEY` AS `KEY`, avg(CAST(`CalProb_Union`.`Proba_0` AS DOUBLE)) AS `Proba_0`, avg(CAST(`CalProb_Union`.`Proba_1` AS DOUBLE)) AS `Proba_1`, avg(CAST(`CalProb_Union`.`Proba_2` AS DOUBLE)) AS `Proba_2`, avg(CAST(`CalProb_Union`.`Proba_3` AS DOUBLE)) AS `Proba_3`, avg(CAST(`CalProb_Union`.`Proba_4` AS DOUBLE)) AS `Proba_4`, avg(CAST(`CalProb_Union`.`Proba_5` AS DOUBLE)) AS `Proba_5`, avg(CAST(`CalProb_Union`.`Proba_6` AS DOUBLE)) AS `Proba_6`, avg(CAST(`CalProb_Union`.`Proba_7` AS DOUBLE)) AS `Proba_7`, avg(CAST(`CalProb_Union`.`Proba_8` AS DOUBLE)) AS `Proba_8`, avg(CAST(`CalProb_Union`.`Proba_9` AS DOUBLE)) AS `Proba_9` 
FROM `CalProb_Union` GROUP BY `CalProb_Union`.`KEY`) AS `T`) AS `CalProb_avg`

-- Model deployment code

WITH orig_cte AS 
(SELECT `CalProb_avg`.`KEY` AS `KEY`, CAST(NULL AS DOUBLE) AS `Score_0`, CAST(NULL AS DOUBLE) AS `Score_1`, CAST(NULL AS DOUBLE) AS `Score_2`, CAST(NULL AS DOUBLE) AS `Score_3`, CAST(NULL AS DOUBLE) AS `Score_4`, CAST(NULL AS DOUBLE) AS `Score_5`, CAST(NULL AS DOUBLE) AS `Score_6`, CAST(NULL AS DOUBLE) AS `Score_7`, CAST(NULL AS DOUBLE) AS `Score_8`, CAST(NULL AS DOUBLE) AS `Score_9`, `CalProb_avg`.`Proba_0` AS `Proba_0`, `CalProb_avg`.`Proba_1` AS `Proba_1`, `CalProb_avg`.`Proba_2` AS `Proba_2`, `CalProb_avg`.`Proba_3` AS `Proba_3`, `CalProb_avg`.`Proba_4` AS `Proba_4`, `CalProb_avg`.`Proba_5` AS `Proba_5`, `CalProb_avg`.`Proba_6` AS `Proba_6`, `CalProb_avg`.`Proba_7` AS `Proba_7`, `CalProb_avg`.`Proba_8` AS `Proba_8`, `CalProb_avg`.`Proba_9` AS `Proba_9`, CAST(NULL AS DOUBLE) AS `LogProba_0`, CAST(NULL AS DOUBLE) AS `LogProba_1`, CAST(NULL AS DOUBLE) AS `LogProba_2`, CAST(NULL AS DOUBLE) AS `LogProba_3`, CAST(NULL AS DOUBLE) AS `LogProba_4`, CAST(NULL AS DOUBLE) AS `LogProba_5`, CAST(NULL AS DOUBLE) AS `LogProba_6`, CAST(NULL AS DOUBLE) AS `LogProba_7`, CAST(NULL AS DOUBLE) AS `LogProba_8`, CAST(NULL AS DOUBLE) AS `LogProba_9`, CAST(NULL AS BIGINT) AS `Decision`, CAST(NULL AS DOUBLE) AS `DecisionProba` 
FROM tmp_20180516115801_codegen_ff0pyn_calprob_avg AS `CalProb_avg`), 
score_class_union AS 
(SELECT scu.`KEY_u` AS `KEY_u`, scu.`class` AS `class`, scu.`LogProba` AS `LogProba`, scu.`Proba` AS `Proba`, scu.`Score` AS `Score` 
FROM (SELECT orig_cte.`KEY` AS `KEY_u`, 0 AS `class`, orig_cte.`LogProba_0` AS `LogProba`, orig_cte.`Proba_0` AS `Proba`, orig_cte.`Score_0` AS `Score` 
FROM orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY_u`, 1 AS `class`, orig_cte.`LogProba_1` AS `LogProba`, orig_cte.`Proba_1` AS `Proba`, orig_cte.`Score_1` AS `Score` 
FROM orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY_u`, 2 AS `class`, orig_cte.`LogProba_2` AS `LogProba`, orig_cte.`Proba_2` AS `Proba`, orig_cte.`Score_2` AS `Score` 
FROM orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY_u`, 3 AS `class`, orig_cte.`LogProba_3` AS `LogProba`, orig_cte.`Proba_3` AS `Proba`, orig_cte.`Score_3` AS `Score` 
FROM orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY_u`, 4 AS `class`, orig_cte.`LogProba_4` AS `LogProba`, orig_cte.`Proba_4` AS `Proba`, orig_cte.`Score_4` AS `Score` 
FROM orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY_u`, 5 AS `class`, orig_cte.`LogProba_5` AS `LogProba`, orig_cte.`Proba_5` AS `Proba`, orig_cte.`Score_5` AS `Score` 
FROM orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY_u`, 6 AS `class`, orig_cte.`LogProba_6` AS `LogProba`, orig_cte.`Proba_6` AS `Proba`, orig_cte.`Score_6` AS `Score` 
FROM orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY_u`, 7 AS `class`, orig_cte.`LogProba_7` AS `LogProba`, orig_cte.`Proba_7` AS `Proba`, orig_cte.`Score_7` AS `Score` 
FROM orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY_u`, 8 AS `class`, orig_cte.`LogProba_8` AS `LogProba`, orig_cte.`Proba_8` AS `Proba`, orig_cte.`Score_8` AS `Score` 
FROM orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY_u`, 9 AS `class`, orig_cte.`LogProba_9` AS `LogProba`, orig_cte.`Proba_9` AS `Proba`, orig_cte.`Score_9` AS `Score` 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte.`KEY` AS `KEY`, orig_cte.`Score_0` AS `Score_0`, orig_cte.`Score_1` AS `Score_1`, orig_cte.`Score_2` AS `Score_2`, orig_cte.`Score_3` AS `Score_3`, orig_cte.`Score_4` AS `Score_4`, orig_cte.`Score_5` AS `Score_5`, orig_cte.`Score_6` AS `Score_6`, orig_cte.`Score_7` AS `Score_7`, orig_cte.`Score_8` AS `Score_8`, orig_cte.`Score_9` AS `Score_9`, orig_cte.`Proba_0` AS `Proba_0`, orig_cte.`Proba_1` AS `Proba_1`, orig_cte.`Proba_2` AS `Proba_2`, orig_cte.`Proba_3` AS `Proba_3`, orig_cte.`Proba_4` AS `Proba_4`, orig_cte.`Proba_5` AS `Proba_5`, orig_cte.`Proba_6` AS `Proba_6`, orig_cte.`Proba_7` AS `Proba_7`, orig_cte.`Proba_8` AS `Proba_8`, orig_cte.`Proba_9` AS `Proba_9`, orig_cte.`LogProba_0` AS `LogProba_0`, orig_cte.`LogProba_1` AS `LogProba_1`, orig_cte.`LogProba_2` AS `LogProba_2`, orig_cte.`LogProba_3` AS `LogProba_3`, orig_cte.`LogProba_4` AS `LogProba_4`, orig_cte.`LogProba_5` AS `LogProba_5`, orig_cte.`LogProba_6` AS `LogProba_6`, orig_cte.`LogProba_7` AS `LogProba_7`, orig_cte.`LogProba_8` AS `LogProba_8`, orig_cte.`LogProba_9` AS `LogProba_9`, orig_cte.`Decision` AS `Decision`, orig_cte.`DecisionProba` AS `DecisionProba`, max_select.`KEY_m` AS `KEY_m`, max_select.`max_Proba` AS `max_Proba` 
FROM orig_cte LEFT OUTER JOIN (SELECT score_class_union.`KEY_u` AS `KEY_m`, max(score_class_union.`Proba`) AS `max_Proba` 
FROM score_class_union GROUP BY score_class_union.`KEY_u`) AS max_select ON orig_cte.`KEY` = max_select.`KEY_m`), 
union_with_max AS 
(SELECT score_class_union.`KEY_u` AS `KEY_u`, score_class_union.`class` AS `class`, score_class_union.`LogProba` AS `LogProba`, score_class_union.`Proba` AS `Proba`, score_class_union.`Score` AS `Score`, score_max.`KEY` AS `KEY`, score_max.`Score_0` AS `Score_0`, score_max.`Score_1` AS `Score_1`, score_max.`Score_2` AS `Score_2`, score_max.`Score_3` AS `Score_3`, score_max.`Score_4` AS `Score_4`, score_max.`Score_5` AS `Score_5`, score_max.`Score_6` AS `Score_6`, score_max.`Score_7` AS `Score_7`, score_max.`Score_8` AS `Score_8`, score_max.`Score_9` AS `Score_9`, score_max.`Proba_0` AS `Proba_0`, score_max.`Proba_1` AS `Proba_1`, score_max.`Proba_2` AS `Proba_2`, score_max.`Proba_3` AS `Proba_3`, score_max.`Proba_4` AS `Proba_4`, score_max.`Proba_5` AS `Proba_5`, score_max.`Proba_6` AS `Proba_6`, score_max.`Proba_7` AS `Proba_7`, score_max.`Proba_8` AS `Proba_8`, score_max.`Proba_9` AS `Proba_9`, score_max.`LogProba_0` AS `LogProba_0`, score_max.`LogProba_1` AS `LogProba_1`, score_max.`LogProba_2` AS `LogProba_2`, score_max.`LogProba_3` AS `LogProba_3`, score_max.`LogProba_4` AS `LogProba_4`, score_max.`LogProba_5` AS `LogProba_5`, score_max.`LogProba_6` AS `LogProba_6`, score_max.`LogProba_7` AS `LogProba_7`, score_max.`LogProba_8` AS `LogProba_8`, score_max.`LogProba_9` AS `LogProba_9`, score_max.`Decision` AS `Decision`, score_max.`DecisionProba` AS `DecisionProba`, score_max.`KEY_m` AS `KEY_m`, score_max.`max_Proba` AS `max_Proba` 
FROM score_class_union LEFT OUTER JOIN score_max ON score_class_union.`KEY_u` = score_max.`KEY`), 
arg_max_cte AS 
(SELECT score_max.`KEY` AS `KEY`, score_max.`Score_0` AS `Score_0`, score_max.`Score_1` AS `Score_1`, score_max.`Score_2` AS `Score_2`, score_max.`Score_3` AS `Score_3`, score_max.`Score_4` AS `Score_4`, score_max.`Score_5` AS `Score_5`, score_max.`Score_6` AS `Score_6`, score_max.`Score_7` AS `Score_7`, score_max.`Score_8` AS `Score_8`, score_max.`Score_9` AS `Score_9`, score_max.`Proba_0` AS `Proba_0`, score_max.`Proba_1` AS `Proba_1`, score_max.`Proba_2` AS `Proba_2`, score_max.`Proba_3` AS `Proba_3`, score_max.`Proba_4` AS `Proba_4`, score_max.`Proba_5` AS `Proba_5`, score_max.`Proba_6` AS `Proba_6`, score_max.`Proba_7` AS `Proba_7`, score_max.`Proba_8` AS `Proba_8`, score_max.`Proba_9` AS `Proba_9`, score_max.`LogProba_0` AS `LogProba_0`, score_max.`LogProba_1` AS `LogProba_1`, score_max.`LogProba_2` AS `LogProba_2`, score_max.`LogProba_3` AS `LogProba_3`, score_max.`LogProba_4` AS `LogProba_4`, score_max.`LogProba_5` AS `LogProba_5`, score_max.`LogProba_6` AS `LogProba_6`, score_max.`LogProba_7` AS `LogProba_7`, score_max.`LogProba_8` AS `LogProba_8`, score_max.`LogProba_9` AS `LogProba_9`, score_max.`Decision` AS `Decision`, score_max.`DecisionProba` AS `DecisionProba`, score_max.`KEY_m` AS `KEY_m`, score_max.`max_Proba` AS `max_Proba`, `arg_max_t_Proba`.`KEY_Proba` AS `KEY_Proba`, `arg_max_t_Proba`.`arg_max_Proba` AS `arg_max_Proba` 
FROM score_max LEFT OUTER JOIN (SELECT union_with_max.`KEY` AS `KEY_Proba`, min(union_with_max.`class`) AS `arg_max_Proba` 
FROM union_with_max 
WHERE union_with_max.`Proba` >= union_with_max.`max_Proba` GROUP BY union_with_max.`KEY`) AS `arg_max_t_Proba` ON score_max.`KEY` = `arg_max_t_Proba`.`KEY_Proba`)
 SELECT arg_max_cte.`KEY` AS `KEY`, arg_max_cte.`Score_0` AS `Score_0`, arg_max_cte.`Score_1` AS `Score_1`, arg_max_cte.`Score_2` AS `Score_2`, arg_max_cte.`Score_3` AS `Score_3`, arg_max_cte.`Score_4` AS `Score_4`, arg_max_cte.`Score_5` AS `Score_5`, arg_max_cte.`Score_6` AS `Score_6`, arg_max_cte.`Score_7` AS `Score_7`, arg_max_cte.`Score_8` AS `Score_8`, arg_max_cte.`Score_9` AS `Score_9`, arg_max_cte.`Proba_0` AS `Proba_0`, arg_max_cte.`Proba_1` AS `Proba_1`, arg_max_cte.`Proba_2` AS `Proba_2`, arg_max_cte.`Proba_3` AS `Proba_3`, arg_max_cte.`Proba_4` AS `Proba_4`, arg_max_cte.`Proba_5` AS `Proba_5`, arg_max_cte.`Proba_6` AS `Proba_6`, arg_max_cte.`Proba_7` AS `Proba_7`, arg_max_cte.`Proba_8` AS `Proba_8`, arg_max_cte.`Proba_9` AS `Proba_9`, CASE WHEN (arg_max_cte.`Proba_0` IS NULL OR arg_max_cte.`Proba_0` > 0.0) THEN ln(arg_max_cte.`Proba_0`) ELSE -1.79769313486231e+308 END AS `LogProba_0`, CASE WHEN (arg_max_cte.`Proba_1` IS NULL OR arg_max_cte.`Proba_1` > 0.0) THEN ln(arg_max_cte.`Proba_1`) ELSE -1.79769313486231e+308 END AS `LogProba_1`, CASE WHEN (arg_max_cte.`Proba_2` IS NULL OR arg_max_cte.`Proba_2` > 0.0) THEN ln(arg_max_cte.`Proba_2`) ELSE -1.79769313486231e+308 END AS `LogProba_2`, CASE WHEN (arg_max_cte.`Proba_3` IS NULL OR arg_max_cte.`Proba_3` > 0.0) THEN ln(arg_max_cte.`Proba_3`) ELSE -1.79769313486231e+308 END AS `LogProba_3`, CASE WHEN (arg_max_cte.`Proba_4` IS NULL OR arg_max_cte.`Proba_4` > 0.0) THEN ln(arg_max_cte.`Proba_4`) ELSE -1.79769313486231e+308 END AS `LogProba_4`, CASE WHEN (arg_max_cte.`Proba_5` IS NULL OR arg_max_cte.`Proba_5` > 0.0) THEN ln(arg_max_cte.`Proba_5`) ELSE -1.79769313486231e+308 END AS `LogProba_5`, CASE WHEN (arg_max_cte.`Proba_6` IS NULL OR arg_max_cte.`Proba_6` > 0.0) THEN ln(arg_max_cte.`Proba_6`) ELSE -1.79769313486231e+308 END AS `LogProba_6`, CASE WHEN (arg_max_cte.`Proba_7` IS NULL OR arg_max_cte.`Proba_7` > 0.0) THEN ln(arg_max_cte.`Proba_7`) ELSE -1.79769313486231e+308 END AS `LogProba_7`, CASE WHEN (arg_max_cte.`Proba_8` IS NULL OR arg_max_cte.`Proba_8` > 0.0) THEN ln(arg_max_cte.`Proba_8`) ELSE -1.79769313486231e+308 END AS `LogProba_8`, CASE WHEN (arg_max_cte.`Proba_9` IS NULL OR arg_max_cte.`Proba_9` > 0.0) THEN ln(arg_max_cte.`Proba_9`) ELSE -1.79769313486231e+308 END AS `LogProba_9`, arg_max_cte.`arg_max_Proba` AS `Decision`, arg_max_cte.`max_Proba` AS `DecisionProba` 
FROM arg_max_cte