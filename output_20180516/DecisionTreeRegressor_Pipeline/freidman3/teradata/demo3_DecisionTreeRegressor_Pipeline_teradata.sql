-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2018

-- Model : DecisionTreeRegressor_Pipeline
-- Dataset : freidman3
-- Database : teradata


-- This SQL code can contain one or more statements, to be executed in the order they appear in this file.



-- Code For temporary table tmp_20180508185136_codegen_j8xb94_ads_imp_1_out part 1. Create 


CREATE GLOBAL TEMPORARY TABLE tmp_20180508185136_codegen_j8xb94_ads_imp_1_out  (
	"KEY" BIGINT, 
	imputer_output_2 DOUBLE PRECISION, 
	imputer_output_3 DOUBLE PRECISION, 
	imputer_output_4 DOUBLE PRECISION, 
	imputer_output_5 DOUBLE PRECISION
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table tmp_20180508185136_codegen_j8xb94_ads_imp_1_out part 2. Populate

INSERT INTO tmp_20180508185136_codegen_j8xb94_ads_imp_1_out ("KEY", imputer_output_2, imputer_output_3, imputer_output_4, imputer_output_5) SELECT "U"."KEY", "U".imputer_output_2, "U".imputer_output_3, "U".imputer_output_4, "U".imputer_output_5 
FROM (SELECT "ADS_imp_1_OUT"."KEY", "ADS_imp_1_OUT".imputer_output_2, "ADS_imp_1_OUT".imputer_output_3, "ADS_imp_1_OUT".imputer_output_4, "ADS_imp_1_OUT".imputer_output_5 
FROM (SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" IS NULL) THEN 43.79128122207401 ELSE "ADS"."Feature_0" END AS imputer_output_2, CASE WHEN ("ADS"."Feature_1" IS NULL) THEN 945.9672833084396 ELSE "ADS"."Feature_1" END AS imputer_output_3, CASE WHEN ("ADS"."Feature_2" IS NULL) THEN 0.5310009099975209 ELSE "ADS"."Feature_2" END AS imputer_output_4, CASE WHEN ("ADS"."Feature_3" IS NULL) THEN 6.139967152050499 ELSE "ADS"."Feature_3" END AS imputer_output_5 
FROM freidman3 AS "ADS") AS "ADS_imp_1_OUT") AS "U"

-- Code For temporary table tmp_20180508185136_codegen_dxx0y9_ads_sca_2_out part 1. Create 


CREATE GLOBAL TEMPORARY TABLE tmp_20180508185136_codegen_dxx0y9_ads_sca_2_out  (
	"KEY" BIGINT, 
	scaler_output_2 DOUBLE PRECISION, 
	scaler_output_3 DOUBLE PRECISION, 
	scaler_output_4 DOUBLE PRECISION, 
	scaler_output_5 DOUBLE PRECISION
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table tmp_20180508185136_codegen_dxx0y9_ads_sca_2_out part 2. Populate

INSERT INTO tmp_20180508185136_codegen_dxx0y9_ads_sca_2_out ("KEY", scaler_output_2, scaler_output_3, scaler_output_4, scaler_output_5) SELECT "U"."KEY", "U".scaler_output_2, "U".scaler_output_3, "U".scaler_output_4, "U".scaler_output_5 
FROM (SELECT "ADS_sca_2_OUT"."KEY", "ADS_sca_2_OUT".scaler_output_2, "ADS_sca_2_OUT".scaler_output_3, "ADS_sca_2_OUT".scaler_output_4, "ADS_sca_2_OUT".scaler_output_5 
FROM (SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", (CAST("ADS_imp_1_OUT".imputer_output_2 AS DOUBLE PRECISION) - CAST(43.79128122207402 AS DOUBLE PRECISION)) / CAST(26.03562357622511 AS DOUBLE PRECISION) AS scaler_output_2, (CAST("ADS_imp_1_OUT".imputer_output_3 AS DOUBLE PRECISION) - CAST(945.9672833084397 AS DOUBLE PRECISION)) / CAST(461.4552766146446 AS DOUBLE PRECISION) AS scaler_output_3, (CAST("ADS_imp_1_OUT".imputer_output_4 AS DOUBLE PRECISION) - CAST(0.531000909997521 AS DOUBLE PRECISION)) / CAST(0.290186328214479 AS DOUBLE PRECISION) AS scaler_output_4, (CAST("ADS_imp_1_OUT".imputer_output_5 AS DOUBLE PRECISION) - CAST(6.139967152050499 AS DOUBLE PRECISION)) / CAST(3.072917242564058 AS DOUBLE PRECISION) AS scaler_output_5 
FROM tmp_20180508185136_codegen_j8xb94_ads_imp_1_out AS "ADS_imp_1_OUT") AS "ADS_sca_2_OUT") AS "U"

-- Model deployment code

WITH "DT_node_lookup" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= CAST(-1.43090009689331 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= CAST(-0.587432563304901 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= CAST(-1.743170738220215 AS DOUBLE PRECISION)) THEN 3 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= CAST(-0.467974483966827 AS DOUBLE PRECISION)) THEN 5 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= CAST(1.341475486755371 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= CAST(-0.992632389068604 AS DOUBLE PRECISION)) THEN 8 ELSE 9 END ELSE 10 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= CAST(-1.084075689315796 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= CAST(0.088734947144985 AS DOUBLE PRECISION)) THEN 13 ELSE 14 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= CAST(-0.149870961904526 AS DOUBLE PRECISION)) THEN 16 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= CAST(-0.295665681362152 AS DOUBLE PRECISION)) THEN 18 ELSE 19 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= CAST(0.68163388967514 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= CAST(-1.498839139938354 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= CAST(0.545360624790192 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= CAST(-0.000547632575035 AS DOUBLE PRECISION)) THEN 24 ELSE 25 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= CAST(-1.717117786407471 AS DOUBLE PRECISION)) THEN 27 ELSE 28 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= CAST(-1.169748425483704 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= CAST(1.107312440872192 AS DOUBLE PRECISION)) THEN 31 ELSE 32 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= CAST(-0.997935831546784 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= CAST(-1.396639704704285 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= CAST(0.628021955490112 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= CAST(0.020498842000961 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= CAST(1.012352705001831 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= CAST(0.743147134780884 AS DOUBLE PRECISION)) THEN 39 ELSE 40 END ELSE 41 END ELSE 42 END ELSE 43 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= CAST(0.232205331325531 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= CAST(-0.492769002914429 AS DOUBLE PRECISION)) THEN 46 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= CAST(-0.464764952659607 AS DOUBLE PRECISION)) THEN 48 ELSE 49 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= CAST(0.457023322582245 AS DOUBLE PRECISION)) THEN 51 ELSE 52 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= CAST(-0.013251647353172 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= CAST(-0.078854121267796 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= CAST(-0.757246613502502 AS DOUBLE PRECISION)) THEN 56 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= CAST(-0.61484044790268 AS DOUBLE PRECISION)) THEN 58 ELSE 59 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= CAST(-1.267771124839783 AS DOUBLE PRECISION)) THEN 61 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= CAST(-0.797401309013367 AS DOUBLE PRECISION)) THEN 63 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= CAST(-0.236440345644951 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= CAST(-0.380851149559021 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= CAST(-0.567314863204956 AS DOUBLE PRECISION)) THEN 67 ELSE 68 END ELSE 69 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= CAST(1.26242196559906 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= CAST(0.369677871465683 AS DOUBLE PRECISION)) THEN 72 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= CAST(1.110722064971924 AS DOUBLE PRECISION)) THEN 74 ELSE 75 END END ELSE 76 END END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= CAST(-0.577982664108276 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= CAST(-0.28969731926918 AS DOUBLE PRECISION)) THEN 79 ELSE 80 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= CAST(0.304798632860184 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= CAST(0.352479070425034 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= CAST(-0.186920374631882 AS DOUBLE PRECISION)) THEN 84 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= CAST(-0.195831656455994 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= CAST(-0.380700975656509 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= CAST(0.467306196689606 AS DOUBLE PRECISION)) THEN 88 ELSE 89 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= CAST(0.873522698879242 AS DOUBLE PRECISION)) THEN 91 ELSE 92 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= CAST(0.357550859451294 AS DOUBLE PRECISION)) THEN 94 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= CAST(0.735086858272552 AS DOUBLE PRECISION)) THEN 96 ELSE 97 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= CAST(0.579698383808136 AS DOUBLE PRECISION)) THEN 99 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= CAST(-0.066693432629108 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= CAST(0.59707248210907 AS DOUBLE PRECISION)) THEN 102 ELSE 103 END ELSE 104 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= CAST(0.824400007724762 AS DOUBLE PRECISION)) THEN 106 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= CAST(1.327941060066223 AS DOUBLE PRECISION)) THEN 108 ELSE 109 END END END END END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= CAST(-0.203755870461464 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= CAST(-0.78878265619278 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= CAST(-1.494538426399231 AS DOUBLE PRECISION)) THEN 113 ELSE 114 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= CAST(-0.388088583946228 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= CAST(-0.391517758369446 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= CAST(-0.118141144514084 AS DOUBLE PRECISION)) THEN 118 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= CAST(-0.655173301696777 AS DOUBLE PRECISION)) THEN 120 ELSE 121 END END ELSE 122 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= CAST(-1.54426896572113 AS DOUBLE PRECISION)) THEN 124 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= CAST(0.054462283849716 AS DOUBLE PRECISION)) THEN 126 ELSE 127 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= CAST(-1.081823587417602 AS DOUBLE PRECISION)) THEN 129 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= CAST(-0.496519982814789 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= CAST(0.318284958600998 AS DOUBLE PRECISION)) THEN 132 ELSE 133 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= CAST(1.277638912200928 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= CAST(0.955989420413971 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= CAST(0.3837770819664 AS DOUBLE PRECISION)) THEN 137 ELSE 138 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= CAST(0.576291680335998 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= CAST(0.765937566757202 AS DOUBLE PRECISION)) THEN 141 ELSE 142 END ELSE 143 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= CAST(0.284331560134888 AS DOUBLE PRECISION)) THEN 145 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= CAST(1.228230953216553 AS DOUBLE PRECISION)) THEN 147 ELSE 148 END END END END END END END END AS node_id_2 
FROM tmp_20180508185136_codegen_dxx0y9_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS DOUBLE PRECISION) AS "E" 
FROM (SELECT 3 AS nid, CAST(0.610016838130485 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 5 AS nid, CAST(1.140916252454616 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 8 AS nid, CAST(1.350090108150775 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 9 AS nid, CAST(1.368717577036428 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 10 AS nid, CAST(1.409299843352078 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 13 AS nid, CAST(0.807910923031799 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 14 AS nid, CAST(0.705071467546473 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 16 AS nid, CAST(0.484866921406469 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 18 AS nid, CAST(0.375167565977065 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 19 AS nid, CAST(0.383424731855921 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 24 AS nid, CAST(1.11561476395637 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 25 AS nid, CAST(1.161007135905221 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 27 AS nid, CAST(1.535967090204416 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 28 AS nid, CAST(1.451860940436235 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 31 AS nid, CAST(1.314325621172093 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 32 AS nid, CAST(1.341344197483337 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 39 AS nid, CAST(1.569679039986645 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 40 AS nid, CAST(1.570583991203967 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 41 AS nid, CAST(1.568486693908273 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 42 AS nid, CAST(1.564440724348305 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 43 AS nid, CAST(1.554328847029144 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 46 AS nid, CAST(1.52787454660472 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 48 AS nid, CAST(1.536711230505171 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 49 AS nid, CAST(1.541589567106448 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 51 AS nid, CAST(1.556101969927248 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 52 AS nid, CAST(1.562322810576382 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 56 AS nid, CAST(1.36789414049365 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 58 AS nid, CAST(1.410743936534041 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 59 AS nid, CAST(1.425180217485532 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 61 AS nid, CAST(1.38449451720808 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 63 AS nid, CAST(1.534059281886407 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 67 AS nid, CAST(1.496561917506885 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 68 AS nid, CAST(1.499027385598966 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 69 AS nid, CAST(1.487257851510424 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 72 AS nid, CAST(1.467648677980467 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 74 AS nid, CAST(1.464248726798872 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 75 AS nid, CAST(1.46088900931266 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 76 AS nid, CAST(1.49292179344947 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 79 AS nid, CAST(1.477126396188664 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 80 AS nid, CAST(1.477951453333812 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 84 AS nid, CAST(1.50778906671016 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 88 AS nid, CAST(1.527762553523396 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 89 AS nid, CAST(1.531815584535961 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 91 AS nid, CAST(1.535253702694832 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 92 AS nid, CAST(1.532569286283314 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 94 AS nid, CAST(1.530950046349526 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 96 AS nid, CAST(1.521888938449955 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 97 AS nid, CAST(1.521297715153797 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 99 AS nid, CAST(1.524853979162229 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 102 AS nid, CAST(1.54561918356505 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 103 AS nid, CAST(1.543898379162407 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 104 AS nid, CAST(1.53740023221158 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 106 AS nid, CAST(1.484710993001392 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 108 AS nid, CAST(1.50320738962693 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 109 AS nid, CAST(1.512661962070155 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 113 AS nid, CAST(1.027484351922333 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 114 AS nid, CAST(1.076547084481779 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 118 AS nid, CAST(1.157786043431624 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 120 AS nid, CAST(1.108290403745044 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 121 AS nid, CAST(1.106344120317223 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 122 AS nid, CAST(1.196826503768119 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 124 AS nid, CAST(1.144056434914594 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 126 AS nid, CAST(1.279182409050028 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 127 AS nid, CAST(1.26722341655496 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 129 AS nid, CAST(1.081892001298726 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 132 AS nid, CAST(1.349842993228629 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 133 AS nid, CAST(1.346361479569162 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 137 AS nid, CAST(1.471939028979758 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 138 AS nid, CAST(1.467082620400384 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 141 AS nid, CAST(1.486057264662623 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 142 AS nid, CAST(1.478328126979838 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 143 AS nid, CAST(1.494966264557594 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 145 AS nid, CAST(1.493223318496025 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 147 AS nid, CAST(1.502823505154299 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 148 AS nid, CAST(1.509900148942003 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte) AS "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".nid AS nid, "DT_node_data"."E" AS "E" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".nid)
 SELECT "DT_Output"."KEY" AS "KEY", "DT_Output"."E" AS "Estimator" 
FROM "DT_Output"