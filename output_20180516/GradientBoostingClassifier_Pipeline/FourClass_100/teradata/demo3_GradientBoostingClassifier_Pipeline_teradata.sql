-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2018

-- Model : GradientBoostingClassifier_Pipeline
-- Dataset : FourClass_100
-- Database : teradata


-- This SQL code can contain one or more statements, to be executed in the order they appear in this file.



-- Code For temporary table tmp_20180602143816_d8k_ads_imp_1_out part 1. Create 


CREATE GLOBAL TEMPORARY TABLE tmp_20180602143816_d8k_ads_imp_1_out  (
	"KEY" BIGINT, 
	impter_2 DOUBLE PRECISION, 
	impter_3 DOUBLE PRECISION, 
	impter_4 DOUBLE PRECISION, 
	impter_5 DOUBLE PRECISION, 
	impter_6 DOUBLE PRECISION, 
	impter_7 DOUBLE PRECISION, 
	impter_8 DOUBLE PRECISION, 
	impter_9 DOUBLE PRECISION, 
	impter_10 DOUBLE PRECISION, 
	impter_11 DOUBLE PRECISION, 
	impter_12 DOUBLE PRECISION, 
	impter_13 DOUBLE PRECISION, 
	impter_14 DOUBLE PRECISION, 
	impter_15 DOUBLE PRECISION, 
	impter_16 DOUBLE PRECISION, 
	impter_17 DOUBLE PRECISION, 
	impter_18 DOUBLE PRECISION, 
	impter_19 DOUBLE PRECISION, 
	impter_20 DOUBLE PRECISION, 
	impter_21 DOUBLE PRECISION, 
	impter_22 DOUBLE PRECISION, 
	impter_23 DOUBLE PRECISION, 
	impter_24 DOUBLE PRECISION, 
	impter_25 DOUBLE PRECISION, 
	impter_26 DOUBLE PRECISION, 
	impter_27 DOUBLE PRECISION, 
	impter_28 DOUBLE PRECISION, 
	impter_29 DOUBLE PRECISION, 
	impter_30 DOUBLE PRECISION, 
	impter_31 DOUBLE PRECISION, 
	impter_32 DOUBLE PRECISION, 
	impter_33 DOUBLE PRECISION, 
	impter_34 DOUBLE PRECISION, 
	impter_35 DOUBLE PRECISION, 
	impter_36 DOUBLE PRECISION, 
	impter_37 DOUBLE PRECISION, 
	impter_38 DOUBLE PRECISION, 
	impter_39 DOUBLE PRECISION, 
	impter_40 DOUBLE PRECISION, 
	impter_41 DOUBLE PRECISION, 
	impter_42 DOUBLE PRECISION, 
	impter_43 DOUBLE PRECISION, 
	impter_44 DOUBLE PRECISION, 
	impter_45 DOUBLE PRECISION, 
	impter_46 DOUBLE PRECISION, 
	impter_47 DOUBLE PRECISION, 
	impter_48 DOUBLE PRECISION, 
	impter_49 DOUBLE PRECISION, 
	impter_50 DOUBLE PRECISION, 
	impter_51 DOUBLE PRECISION, 
	impter_52 DOUBLE PRECISION, 
	impter_53 DOUBLE PRECISION, 
	impter_54 DOUBLE PRECISION, 
	impter_55 DOUBLE PRECISION, 
	impter_56 DOUBLE PRECISION, 
	impter_57 DOUBLE PRECISION, 
	impter_58 DOUBLE PRECISION, 
	impter_59 DOUBLE PRECISION, 
	impter_60 DOUBLE PRECISION, 
	impter_61 DOUBLE PRECISION, 
	impter_62 DOUBLE PRECISION, 
	impter_63 DOUBLE PRECISION, 
	impter_64 DOUBLE PRECISION, 
	impter_65 DOUBLE PRECISION, 
	impter_66 DOUBLE PRECISION, 
	impter_67 DOUBLE PRECISION, 
	impter_68 DOUBLE PRECISION, 
	impter_69 DOUBLE PRECISION, 
	impter_70 DOUBLE PRECISION, 
	impter_71 DOUBLE PRECISION, 
	impter_72 DOUBLE PRECISION, 
	impter_73 DOUBLE PRECISION, 
	impter_74 DOUBLE PRECISION, 
	impter_75 DOUBLE PRECISION, 
	impter_76 DOUBLE PRECISION, 
	impter_77 DOUBLE PRECISION, 
	impter_78 DOUBLE PRECISION, 
	impter_79 DOUBLE PRECISION, 
	impter_80 DOUBLE PRECISION, 
	impter_81 DOUBLE PRECISION, 
	impter_82 DOUBLE PRECISION, 
	impter_83 DOUBLE PRECISION, 
	impter_84 DOUBLE PRECISION, 
	impter_85 DOUBLE PRECISION, 
	impter_86 DOUBLE PRECISION, 
	impter_87 DOUBLE PRECISION, 
	impter_88 DOUBLE PRECISION, 
	impter_89 DOUBLE PRECISION, 
	impter_90 DOUBLE PRECISION, 
	impter_91 DOUBLE PRECISION, 
	impter_92 DOUBLE PRECISION, 
	impter_93 DOUBLE PRECISION, 
	impter_94 DOUBLE PRECISION, 
	impter_95 DOUBLE PRECISION, 
	impter_96 DOUBLE PRECISION, 
	impter_97 DOUBLE PRECISION, 
	impter_98 DOUBLE PRECISION, 
	impter_99 DOUBLE PRECISION, 
	impter_100 DOUBLE PRECISION, 
	impter_101 DOUBLE PRECISION
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table tmp_20180602143816_d8k_ads_imp_1_out part 2. Populate

INSERT INTO tmp_20180602143816_d8k_ads_imp_1_out ("KEY", impter_2, impter_3, impter_4, impter_5, impter_6, impter_7, impter_8, impter_9, impter_10, impter_11, impter_12, impter_13, impter_14, impter_15, impter_16, impter_17, impter_18, impter_19, impter_20, impter_21, impter_22, impter_23, impter_24, impter_25, impter_26, impter_27, impter_28, impter_29, impter_30, impter_31, impter_32, impter_33, impter_34, impter_35, impter_36, impter_37, impter_38, impter_39, impter_40, impter_41, impter_42, impter_43, impter_44, impter_45, impter_46, impter_47, impter_48, impter_49, impter_50, impter_51, impter_52, impter_53, impter_54, impter_55, impter_56, impter_57, impter_58, impter_59, impter_60, impter_61, impter_62, impter_63, impter_64, impter_65, impter_66, impter_67, impter_68, impter_69, impter_70, impter_71, impter_72, impter_73, impter_74, impter_75, impter_76, impter_77, impter_78, impter_79, impter_80, impter_81, impter_82, impter_83, impter_84, impter_85, impter_86, impter_87, impter_88, impter_89, impter_90, impter_91, impter_92, impter_93, impter_94, impter_95, impter_96, impter_97, impter_98, impter_99, impter_100, impter_101) SELECT "U"."KEY", "U".impter_2, "U".impter_3, "U".impter_4, "U".impter_5, "U".impter_6, "U".impter_7, "U".impter_8, "U".impter_9, "U".impter_10, "U".impter_11, "U".impter_12, "U".impter_13, "U".impter_14, "U".impter_15, "U".impter_16, "U".impter_17, "U".impter_18, "U".impter_19, "U".impter_20, "U".impter_21, "U".impter_22, "U".impter_23, "U".impter_24, "U".impter_25, "U".impter_26, "U".impter_27, "U".impter_28, "U".impter_29, "U".impter_30, "U".impter_31, "U".impter_32, "U".impter_33, "U".impter_34, "U".impter_35, "U".impter_36, "U".impter_37, "U".impter_38, "U".impter_39, "U".impter_40, "U".impter_41, "U".impter_42, "U".impter_43, "U".impter_44, "U".impter_45, "U".impter_46, "U".impter_47, "U".impter_48, "U".impter_49, "U".impter_50, "U".impter_51, "U".impter_52, "U".impter_53, "U".impter_54, "U".impter_55, "U".impter_56, "U".impter_57, "U".impter_58, "U".impter_59, "U".impter_60, "U".impter_61, "U".impter_62, "U".impter_63, "U".impter_64, "U".impter_65, "U".impter_66, "U".impter_67, "U".impter_68, "U".impter_69, "U".impter_70, "U".impter_71, "U".impter_72, "U".impter_73, "U".impter_74, "U".impter_75, "U".impter_76, "U".impter_77, "U".impter_78, "U".impter_79, "U".impter_80, "U".impter_81, "U".impter_82, "U".impter_83, "U".impter_84, "U".impter_85, "U".impter_86, "U".impter_87, "U".impter_88, "U".impter_89, "U".impter_90, "U".impter_91, "U".impter_92, "U".impter_93, "U".impter_94, "U".impter_95, "U".impter_96, "U".impter_97, "U".impter_98, "U".impter_99, "U".impter_100, "U".impter_101 
FROM (SELECT "ADS_imp_1_OUT"."KEY", "ADS_imp_1_OUT".impter_2, "ADS_imp_1_OUT".impter_3, "ADS_imp_1_OUT".impter_4, "ADS_imp_1_OUT".impter_5, "ADS_imp_1_OUT".impter_6, "ADS_imp_1_OUT".impter_7, "ADS_imp_1_OUT".impter_8, "ADS_imp_1_OUT".impter_9, "ADS_imp_1_OUT".impter_10, "ADS_imp_1_OUT".impter_11, "ADS_imp_1_OUT".impter_12, "ADS_imp_1_OUT".impter_13, "ADS_imp_1_OUT".impter_14, "ADS_imp_1_OUT".impter_15, "ADS_imp_1_OUT".impter_16, "ADS_imp_1_OUT".impter_17, "ADS_imp_1_OUT".impter_18, "ADS_imp_1_OUT".impter_19, "ADS_imp_1_OUT".impter_20, "ADS_imp_1_OUT".impter_21, "ADS_imp_1_OUT".impter_22, "ADS_imp_1_OUT".impter_23, "ADS_imp_1_OUT".impter_24, "ADS_imp_1_OUT".impter_25, "ADS_imp_1_OUT".impter_26, "ADS_imp_1_OUT".impter_27, "ADS_imp_1_OUT".impter_28, "ADS_imp_1_OUT".impter_29, "ADS_imp_1_OUT".impter_30, "ADS_imp_1_OUT".impter_31, "ADS_imp_1_OUT".impter_32, "ADS_imp_1_OUT".impter_33, "ADS_imp_1_OUT".impter_34, "ADS_imp_1_OUT".impter_35, "ADS_imp_1_OUT".impter_36, "ADS_imp_1_OUT".impter_37, "ADS_imp_1_OUT".impter_38, "ADS_imp_1_OUT".impter_39, "ADS_imp_1_OUT".impter_40, "ADS_imp_1_OUT".impter_41, "ADS_imp_1_OUT".impter_42, "ADS_imp_1_OUT".impter_43, "ADS_imp_1_OUT".impter_44, "ADS_imp_1_OUT".impter_45, "ADS_imp_1_OUT".impter_46, "ADS_imp_1_OUT".impter_47, "ADS_imp_1_OUT".impter_48, "ADS_imp_1_OUT".impter_49, "ADS_imp_1_OUT".impter_50, "ADS_imp_1_OUT".impter_51, "ADS_imp_1_OUT".impter_52, "ADS_imp_1_OUT".impter_53, "ADS_imp_1_OUT".impter_54, "ADS_imp_1_OUT".impter_55, "ADS_imp_1_OUT".impter_56, "ADS_imp_1_OUT".impter_57, "ADS_imp_1_OUT".impter_58, "ADS_imp_1_OUT".impter_59, "ADS_imp_1_OUT".impter_60, "ADS_imp_1_OUT".impter_61, "ADS_imp_1_OUT".impter_62, "ADS_imp_1_OUT".impter_63, "ADS_imp_1_OUT".impter_64, "ADS_imp_1_OUT".impter_65, "ADS_imp_1_OUT".impter_66, "ADS_imp_1_OUT".impter_67, "ADS_imp_1_OUT".impter_68, "ADS_imp_1_OUT".impter_69, "ADS_imp_1_OUT".impter_70, "ADS_imp_1_OUT".impter_71, "ADS_imp_1_OUT".impter_72, "ADS_imp_1_OUT".impter_73, "ADS_imp_1_OUT".impter_74, "ADS_imp_1_OUT".impter_75, "ADS_imp_1_OUT".impter_76, "ADS_imp_1_OUT".impter_77, "ADS_imp_1_OUT".impter_78, "ADS_imp_1_OUT".impter_79, "ADS_imp_1_OUT".impter_80, "ADS_imp_1_OUT".impter_81, "ADS_imp_1_OUT".impter_82, "ADS_imp_1_OUT".impter_83, "ADS_imp_1_OUT".impter_84, "ADS_imp_1_OUT".impter_85, "ADS_imp_1_OUT".impter_86, "ADS_imp_1_OUT".impter_87, "ADS_imp_1_OUT".impter_88, "ADS_imp_1_OUT".impter_89, "ADS_imp_1_OUT".impter_90, "ADS_imp_1_OUT".impter_91, "ADS_imp_1_OUT".impter_92, "ADS_imp_1_OUT".impter_93, "ADS_imp_1_OUT".impter_94, "ADS_imp_1_OUT".impter_95, "ADS_imp_1_OUT".impter_96, "ADS_imp_1_OUT".impter_97, "ADS_imp_1_OUT".impter_98, "ADS_imp_1_OUT".impter_99, "ADS_imp_1_OUT".impter_100, "ADS_imp_1_OUT".impter_101 
FROM (SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" IS NULL) THEN -0.0014807007689716506 ELSE "ADS"."Feature_0" END AS impter_2, CASE WHEN ("ADS"."Feature_1" IS NULL) THEN 0.08599214990681354 ELSE "ADS"."Feature_1" END AS impter_3, CASE WHEN ("ADS"."Feature_2" IS NULL) THEN -0.006358164676411468 ELSE "ADS"."Feature_2" END AS impter_4, CASE WHEN ("ADS"."Feature_3" IS NULL) THEN -0.024301807422776375 ELSE "ADS"."Feature_3" END AS impter_5, CASE WHEN ("ADS"."Feature_4" IS NULL) THEN 0.015786548044298444 ELSE "ADS"."Feature_4" END AS impter_6, CASE WHEN ("ADS"."Feature_5" IS NULL) THEN -0.13959329445651672 ELSE "ADS"."Feature_5" END AS impter_7, CASE WHEN ("ADS"."Feature_6" IS NULL) THEN -0.06476745048019888 ELSE "ADS"."Feature_6" END AS impter_8, CASE WHEN ("ADS"."Feature_7" IS NULL) THEN 0.025579810774090658 ELSE "ADS"."Feature_7" END AS impter_9, CASE WHEN ("ADS"."Feature_8" IS NULL) THEN -0.03173937260977112 ELSE "ADS"."Feature_8" END AS impter_10, CASE WHEN ("ADS"."Feature_9" IS NULL) THEN -0.1518141420862488 ELSE "ADS"."Feature_9" END AS impter_11, CASE WHEN ("ADS"."Feature_10" IS NULL) THEN -0.13244576558492482 ELSE "ADS"."Feature_10" END AS impter_12, CASE WHEN ("ADS"."Feature_11" IS NULL) THEN 0.044172679762224144 ELSE "ADS"."Feature_11" END AS impter_13, CASE WHEN ("ADS"."Feature_12" IS NULL) THEN 0.010165946719810038 ELSE "ADS"."Feature_12" END AS impter_14, CASE WHEN ("ADS"."Feature_13" IS NULL) THEN -0.03645872019103299 ELSE "ADS"."Feature_13" END AS impter_15, CASE WHEN ("ADS"."Feature_14" IS NULL) THEN 0.06491512811593925 ELSE "ADS"."Feature_14" END AS impter_16, CASE WHEN ("ADS"."Feature_15" IS NULL) THEN -0.11930146867074032 ELSE "ADS"."Feature_15" END AS impter_17, CASE WHEN ("ADS"."Feature_16" IS NULL) THEN 0.007738863934852773 ELSE "ADS"."Feature_16" END AS impter_18, CASE WHEN ("ADS"."Feature_17" IS NULL) THEN -0.1226774060147726 ELSE "ADS"."Feature_17" END AS impter_19, CASE WHEN ("ADS"."Feature_18" IS NULL) THEN 0.019160881669086405 ELSE "ADS"."Feature_18" END AS impter_20, CASE WHEN ("ADS"."Feature_19" IS NULL) THEN -0.26340351121131067 ELSE "ADS"."Feature_19" END AS impter_21, CASE WHEN ("ADS"."Feature_20" IS NULL) THEN 0.035692361937735194 ELSE "ADS"."Feature_20" END AS impter_22, CASE WHEN ("ADS"."Feature_21" IS NULL) THEN -0.010021324964069293 ELSE "ADS"."Feature_21" END AS impter_23, CASE WHEN ("ADS"."Feature_22" IS NULL) THEN -0.1258614387723542 ELSE "ADS"."Feature_22" END AS impter_24, CASE WHEN ("ADS"."Feature_23" IS NULL) THEN 0.09372773898231128 ELSE "ADS"."Feature_23" END AS impter_25, CASE WHEN ("ADS"."Feature_24" IS NULL) THEN -0.1687929597880227 ELSE "ADS"."Feature_24" END AS impter_26, CASE WHEN ("ADS"."Feature_25" IS NULL) THEN 0.10006283199629364 ELSE "ADS"."Feature_25" END AS impter_27, CASE WHEN ("ADS"."Feature_26" IS NULL) THEN -0.10297858086822659 ELSE "ADS"."Feature_26" END AS impter_28, CASE WHEN ("ADS"."Feature_27" IS NULL) THEN 0.19240514535870415 ELSE "ADS"."Feature_27" END AS impter_29, CASE WHEN ("ADS"."Feature_28" IS NULL) THEN -0.052866434246092435 ELSE "ADS"."Feature_28" END AS impter_30, CASE WHEN ("ADS"."Feature_29" IS NULL) THEN 0.2624612146366151 ELSE "ADS"."Feature_29" END AS impter_31, CASE WHEN ("ADS"."Feature_30" IS NULL) THEN 0.002677575140361194 ELSE "ADS"."Feature_30" END AS impter_32, CASE WHEN ("ADS"."Feature_31" IS NULL) THEN 0.09707041941284063 ELSE "ADS"."Feature_31" END AS impter_33, CASE WHEN ("ADS"."Feature_32" IS NULL) THEN -0.032793219857333473 ELSE "ADS"."Feature_32" END AS impter_34, CASE WHEN ("ADS"."Feature_33" IS NULL) THEN -0.003130273745908922 ELSE "ADS"."Feature_33" END AS impter_35, CASE WHEN ("ADS"."Feature_34" IS NULL) THEN 0.053446276216279974 ELSE "ADS"."Feature_34" END AS impter_36, CASE WHEN ("ADS"."Feature_35" IS NULL) THEN -0.18668146437412367 ELSE "ADS"."Feature_35" END AS impter_37, CASE WHEN ("ADS"."Feature_36" IS NULL) THEN -0.029335964960866243 ELSE "ADS"."Feature_36" END AS impter_38, CASE WHEN ("ADS"."Feature_37" IS NULL) THEN 0.07219772199502426 ELSE "ADS"."Feature_37" END AS impter_39, CASE WHEN ("ADS"."Feature_38" IS NULL) THEN -0.0007762839781489412 ELSE "ADS"."Feature_38" END AS impter_40, CASE WHEN ("ADS"."Feature_39" IS NULL) THEN 0.08270823712098274 ELSE "ADS"."Feature_39" END AS impter_41, CASE WHEN ("ADS"."Feature_40" IS NULL) THEN 0.10432022852347983 ELSE "ADS"."Feature_40" END AS impter_42, CASE WHEN ("ADS"."Feature_41" IS NULL) THEN 0.07058566385022276 ELSE "ADS"."Feature_41" END AS impter_43, CASE WHEN ("ADS"."Feature_42" IS NULL) THEN 0.05096693098357383 ELSE "ADS"."Feature_42" END AS impter_44, CASE WHEN ("ADS"."Feature_43" IS NULL) THEN 0.0660758203367818 ELSE "ADS"."Feature_43" END AS impter_45, CASE WHEN ("ADS"."Feature_44" IS NULL) THEN -0.07075895636353369 ELSE "ADS"."Feature_44" END AS impter_46, CASE WHEN ("ADS"."Feature_45" IS NULL) THEN 0.08422536561649958 ELSE "ADS"."Feature_45" END AS impter_47, CASE WHEN ("ADS"."Feature_46" IS NULL) THEN 0.21367580667795616 ELSE "ADS"."Feature_46" END AS impter_48, CASE WHEN ("ADS"."Feature_47" IS NULL) THEN -0.055897457335624984 ELSE "ADS"."Feature_47" END AS impter_49, CASE WHEN ("ADS"."Feature_48" IS NULL) THEN -0.17453036726139817 ELSE "ADS"."Feature_48" END AS impter_50, CASE WHEN ("ADS"."Feature_49" IS NULL) THEN -0.054944001818473996 ELSE "ADS"."Feature_49" END AS impter_51, CASE WHEN ("ADS"."Feature_50" IS NULL) THEN -0.5961651261710368 ELSE "ADS"."Feature_50" END AS impter_52, CASE WHEN ("ADS"."Feature_51" IS NULL) THEN 0.5020404526565605 ELSE "ADS"."Feature_51" END AS impter_53, CASE WHEN ("ADS"."Feature_52" IS NULL) THEN -0.052340545201383926 ELSE "ADS"."Feature_52" END AS impter_54, CASE WHEN ("ADS"."Feature_53" IS NULL) THEN 0.05294307611674654 ELSE "ADS"."Feature_53" END AS impter_55, CASE WHEN ("ADS"."Feature_54" IS NULL) THEN 0.03835884479069335 ELSE "ADS"."Feature_54" END AS impter_56, CASE WHEN ("ADS"."Feature_55" IS NULL) THEN -0.13571979014964694 ELSE "ADS"."Feature_55" END AS impter_57, CASE WHEN ("ADS"."Feature_56" IS NULL) THEN -0.21903068431411843 ELSE "ADS"."Feature_56" END AS impter_58, CASE WHEN ("ADS"."Feature_57" IS NULL) THEN -0.1191752362029383 ELSE "ADS"."Feature_57" END AS impter_59, CASE WHEN ("ADS"."Feature_58" IS NULL) THEN 0.38058346912807667 ELSE "ADS"."Feature_58" END AS impter_60, CASE WHEN ("ADS"."Feature_59" IS NULL) THEN -0.12720928974168508 ELSE "ADS"."Feature_59" END AS impter_61, CASE WHEN ("ADS"."Feature_60" IS NULL) THEN -0.09072936496613782 ELSE "ADS"."Feature_60" END AS impter_62, CASE WHEN ("ADS"."Feature_61" IS NULL) THEN -0.03915125937954538 ELSE "ADS"."Feature_61" END AS impter_63, CASE WHEN ("ADS"."Feature_62" IS NULL) THEN 0.07075412393313481 ELSE "ADS"."Feature_62" END AS impter_64, CASE WHEN ("ADS"."Feature_63" IS NULL) THEN 0.10124894587016948 ELSE "ADS"."Feature_63" END AS impter_65, CASE WHEN ("ADS"."Feature_64" IS NULL) THEN -0.1945661449475579 ELSE "ADS"."Feature_64" END AS impter_66, CASE WHEN ("ADS"."Feature_65" IS NULL) THEN -0.1759482981261233 ELSE "ADS"."Feature_65" END AS impter_67, CASE WHEN ("ADS"."Feature_66" IS NULL) THEN 0.07473228971855511 ELSE "ADS"."Feature_66" END AS impter_68, CASE WHEN ("ADS"."Feature_67" IS NULL) THEN 0.0377705562115906 ELSE "ADS"."Feature_67" END AS impter_69, CASE WHEN ("ADS"."Feature_68" IS NULL) THEN 0.0139470898598917 ELSE "ADS"."Feature_68" END AS impter_70, CASE WHEN ("ADS"."Feature_69" IS NULL) THEN 0.2582685725145942 ELSE "ADS"."Feature_69" END AS impter_71, CASE WHEN ("ADS"."Feature_70" IS NULL) THEN 0.022975786233048922 ELSE "ADS"."Feature_70" END AS impter_72, CASE WHEN ("ADS"."Feature_71" IS NULL) THEN 0.17445434061949525 ELSE "ADS"."Feature_71" END AS impter_73, CASE WHEN ("ADS"."Feature_72" IS NULL) THEN -0.011413879692078346 ELSE "ADS"."Feature_72" END AS impter_74, CASE WHEN ("ADS"."Feature_73" IS NULL) THEN 0.07898984156871978 ELSE "ADS"."Feature_73" END AS impter_75, CASE WHEN ("ADS"."Feature_74" IS NULL) THEN 0.0952547273770713 ELSE "ADS"."Feature_74" END AS impter_76, CASE WHEN ("ADS"."Feature_75" IS NULL) THEN -0.03997776839639901 ELSE "ADS"."Feature_75" END AS impter_77, CASE WHEN ("ADS"."Feature_76" IS NULL) THEN -0.020839895874293496 ELSE "ADS"."Feature_76" END AS impter_78, CASE WHEN ("ADS"."Feature_77" IS NULL) THEN -0.07284631986613152 ELSE "ADS"."Feature_77" END AS impter_79, CASE WHEN ("ADS"."Feature_78" IS NULL) THEN -0.27389951764434384 ELSE "ADS"."Feature_78" END AS impter_80, CASE WHEN ("ADS"."Feature_79" IS NULL) THEN 0.08057287885287609 ELSE "ADS"."Feature_79" END AS impter_81, CASE WHEN ("ADS"."Feature_80" IS NULL) THEN -0.06244274245437891 ELSE "ADS"."Feature_80" END AS impter_82, CASE WHEN ("ADS"."Feature_81" IS NULL) THEN -0.12290855334066887 ELSE "ADS"."Feature_81" END AS impter_83, CASE WHEN ("ADS"."Feature_82" IS NULL) THEN 0.11639531793890918 ELSE "ADS"."Feature_82" END AS impter_84, CASE WHEN ("ADS"."Feature_83" IS NULL) THEN -0.03350462786128603 ELSE "ADS"."Feature_83" END AS impter_85, CASE WHEN ("ADS"."Feature_84" IS NULL) THEN -0.03914049968144583 ELSE "ADS"."Feature_84" END AS impter_86, CASE WHEN ("ADS"."Feature_85" IS NULL) THEN 0.24193903072305167 ELSE "ADS"."Feature_85" END AS impter_87, CASE WHEN ("ADS"."Feature_86" IS NULL) THEN -0.07389719862221904 ELSE "ADS"."Feature_86" END AS impter_88, CASE WHEN ("ADS"."Feature_87" IS NULL) THEN 0.1400756228320113 ELSE "ADS"."Feature_87" END AS impter_89, CASE WHEN ("ADS"."Feature_88" IS NULL) THEN 0.2765301935136145 ELSE "ADS"."Feature_88" END AS impter_90, CASE WHEN ("ADS"."Feature_89" IS NULL) THEN -0.07957147169250885 ELSE "ADS"."Feature_89" END AS impter_91, CASE WHEN ("ADS"."Feature_90" IS NULL) THEN 0.16295767680642717 ELSE "ADS"."Feature_90" END AS impter_92, CASE WHEN ("ADS"."Feature_91" IS NULL) THEN 0.07062813888509549 ELSE "ADS"."Feature_91" END AS impter_93, CASE WHEN ("ADS"."Feature_92" IS NULL) THEN 0.012995630151896219 ELSE "ADS"."Feature_92" END AS impter_94, CASE WHEN ("ADS"."Feature_93" IS NULL) THEN 0.1055212408190415 ELSE "ADS"."Feature_93" END AS impter_95, CASE WHEN ("ADS"."Feature_94" IS NULL) THEN -0.1408434425354362 ELSE "ADS"."Feature_94" END AS impter_96, CASE WHEN ("ADS"."Feature_95" IS NULL) THEN -0.1574012366732725 ELSE "ADS"."Feature_95" END AS impter_97, CASE WHEN ("ADS"."Feature_96" IS NULL) THEN 0.05477536676313335 ELSE "ADS"."Feature_96" END AS impter_98, CASE WHEN ("ADS"."Feature_97" IS NULL) THEN 0.05673272205919614 ELSE "ADS"."Feature_97" END AS impter_99, CASE WHEN ("ADS"."Feature_98" IS NULL) THEN -0.14226649213619527 ELSE "ADS"."Feature_98" END AS impter_100, CASE WHEN ("ADS"."Feature_99" IS NULL) THEN -0.04042675289131955 ELSE "ADS"."Feature_99" END AS impter_101 
FROM "FourClass_100" AS "ADS") AS "ADS_imp_1_OUT") AS "U"

-- Code For temporary table tmp_20180602143816_bkn_ads_sca_2_out part 1. Create 


CREATE GLOBAL TEMPORARY TABLE tmp_20180602143816_bkn_ads_sca_2_out  (
	"KEY" BIGINT, 
	scaler_2 DOUBLE PRECISION, 
	scaler_3 DOUBLE PRECISION, 
	scaler_4 DOUBLE PRECISION, 
	scaler_5 DOUBLE PRECISION, 
	scaler_6 DOUBLE PRECISION, 
	scaler_7 DOUBLE PRECISION, 
	scaler_8 DOUBLE PRECISION, 
	scaler_9 DOUBLE PRECISION, 
	scaler_10 DOUBLE PRECISION, 
	scaler_11 DOUBLE PRECISION, 
	scaler_12 DOUBLE PRECISION, 
	scaler_13 DOUBLE PRECISION, 
	scaler_14 DOUBLE PRECISION, 
	scaler_15 DOUBLE PRECISION, 
	scaler_16 DOUBLE PRECISION, 
	scaler_17 DOUBLE PRECISION, 
	scaler_18 DOUBLE PRECISION, 
	scaler_19 DOUBLE PRECISION, 
	scaler_20 DOUBLE PRECISION, 
	scaler_21 DOUBLE PRECISION, 
	scaler_22 DOUBLE PRECISION, 
	scaler_23 DOUBLE PRECISION, 
	scaler_24 DOUBLE PRECISION, 
	scaler_25 DOUBLE PRECISION, 
	scaler_26 DOUBLE PRECISION, 
	scaler_27 DOUBLE PRECISION, 
	scaler_28 DOUBLE PRECISION, 
	scaler_29 DOUBLE PRECISION, 
	scaler_30 DOUBLE PRECISION, 
	scaler_31 DOUBLE PRECISION, 
	scaler_32 DOUBLE PRECISION, 
	scaler_33 DOUBLE PRECISION, 
	scaler_34 DOUBLE PRECISION, 
	scaler_35 DOUBLE PRECISION, 
	scaler_36 DOUBLE PRECISION, 
	scaler_37 DOUBLE PRECISION, 
	scaler_38 DOUBLE PRECISION, 
	scaler_39 DOUBLE PRECISION, 
	scaler_40 DOUBLE PRECISION, 
	scaler_41 DOUBLE PRECISION, 
	scaler_42 DOUBLE PRECISION, 
	scaler_43 DOUBLE PRECISION, 
	scaler_44 DOUBLE PRECISION, 
	scaler_45 DOUBLE PRECISION, 
	scaler_46 DOUBLE PRECISION, 
	scaler_47 DOUBLE PRECISION, 
	scaler_48 DOUBLE PRECISION, 
	scaler_49 DOUBLE PRECISION, 
	scaler_50 DOUBLE PRECISION, 
	scaler_51 DOUBLE PRECISION, 
	scaler_52 DOUBLE PRECISION, 
	scaler_53 DOUBLE PRECISION, 
	scaler_54 DOUBLE PRECISION, 
	scaler_55 DOUBLE PRECISION, 
	scaler_56 DOUBLE PRECISION, 
	scaler_57 DOUBLE PRECISION, 
	scaler_58 DOUBLE PRECISION, 
	scaler_59 DOUBLE PRECISION, 
	scaler_60 DOUBLE PRECISION, 
	scaler_61 DOUBLE PRECISION, 
	scaler_62 DOUBLE PRECISION, 
	scaler_63 DOUBLE PRECISION, 
	scaler_64 DOUBLE PRECISION, 
	scaler_65 DOUBLE PRECISION, 
	scaler_66 DOUBLE PRECISION, 
	scaler_67 DOUBLE PRECISION, 
	scaler_68 DOUBLE PRECISION, 
	scaler_69 DOUBLE PRECISION, 
	scaler_70 DOUBLE PRECISION, 
	scaler_71 DOUBLE PRECISION, 
	scaler_72 DOUBLE PRECISION, 
	scaler_73 DOUBLE PRECISION, 
	scaler_74 DOUBLE PRECISION, 
	scaler_75 DOUBLE PRECISION, 
	scaler_76 DOUBLE PRECISION, 
	scaler_77 DOUBLE PRECISION, 
	scaler_78 DOUBLE PRECISION, 
	scaler_79 DOUBLE PRECISION, 
	scaler_80 DOUBLE PRECISION, 
	scaler_81 DOUBLE PRECISION, 
	scaler_82 DOUBLE PRECISION, 
	scaler_83 DOUBLE PRECISION, 
	scaler_84 DOUBLE PRECISION, 
	scaler_85 DOUBLE PRECISION, 
	scaler_86 DOUBLE PRECISION, 
	scaler_87 DOUBLE PRECISION, 
	scaler_88 DOUBLE PRECISION, 
	scaler_89 DOUBLE PRECISION, 
	scaler_90 DOUBLE PRECISION, 
	scaler_91 DOUBLE PRECISION, 
	scaler_92 DOUBLE PRECISION, 
	scaler_93 DOUBLE PRECISION, 
	scaler_94 DOUBLE PRECISION, 
	scaler_95 DOUBLE PRECISION, 
	scaler_96 DOUBLE PRECISION, 
	scaler_97 DOUBLE PRECISION, 
	scaler_98 DOUBLE PRECISION, 
	scaler_99 DOUBLE PRECISION, 
	scaler_100 DOUBLE PRECISION, 
	scaler_101 DOUBLE PRECISION
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table tmp_20180602143816_bkn_ads_sca_2_out part 2. Populate

INSERT INTO tmp_20180602143816_bkn_ads_sca_2_out ("KEY", scaler_2, scaler_3, scaler_4, scaler_5, scaler_6, scaler_7, scaler_8, scaler_9, scaler_10, scaler_11, scaler_12, scaler_13, scaler_14, scaler_15, scaler_16, scaler_17, scaler_18, scaler_19, scaler_20, scaler_21, scaler_22, scaler_23, scaler_24, scaler_25, scaler_26, scaler_27, scaler_28, scaler_29, scaler_30, scaler_31, scaler_32, scaler_33, scaler_34, scaler_35, scaler_36, scaler_37, scaler_38, scaler_39, scaler_40, scaler_41, scaler_42, scaler_43, scaler_44, scaler_45, scaler_46, scaler_47, scaler_48, scaler_49, scaler_50, scaler_51, scaler_52, scaler_53, scaler_54, scaler_55, scaler_56, scaler_57, scaler_58, scaler_59, scaler_60, scaler_61, scaler_62, scaler_63, scaler_64, scaler_65, scaler_66, scaler_67, scaler_68, scaler_69, scaler_70, scaler_71, scaler_72, scaler_73, scaler_74, scaler_75, scaler_76, scaler_77, scaler_78, scaler_79, scaler_80, scaler_81, scaler_82, scaler_83, scaler_84, scaler_85, scaler_86, scaler_87, scaler_88, scaler_89, scaler_90, scaler_91, scaler_92, scaler_93, scaler_94, scaler_95, scaler_96, scaler_97, scaler_98, scaler_99, scaler_100, scaler_101) SELECT "U"."KEY", "U".scaler_2, "U".scaler_3, "U".scaler_4, "U".scaler_5, "U".scaler_6, "U".scaler_7, "U".scaler_8, "U".scaler_9, "U".scaler_10, "U".scaler_11, "U".scaler_12, "U".scaler_13, "U".scaler_14, "U".scaler_15, "U".scaler_16, "U".scaler_17, "U".scaler_18, "U".scaler_19, "U".scaler_20, "U".scaler_21, "U".scaler_22, "U".scaler_23, "U".scaler_24, "U".scaler_25, "U".scaler_26, "U".scaler_27, "U".scaler_28, "U".scaler_29, "U".scaler_30, "U".scaler_31, "U".scaler_32, "U".scaler_33, "U".scaler_34, "U".scaler_35, "U".scaler_36, "U".scaler_37, "U".scaler_38, "U".scaler_39, "U".scaler_40, "U".scaler_41, "U".scaler_42, "U".scaler_43, "U".scaler_44, "U".scaler_45, "U".scaler_46, "U".scaler_47, "U".scaler_48, "U".scaler_49, "U".scaler_50, "U".scaler_51, "U".scaler_52, "U".scaler_53, "U".scaler_54, "U".scaler_55, "U".scaler_56, "U".scaler_57, "U".scaler_58, "U".scaler_59, "U".scaler_60, "U".scaler_61, "U".scaler_62, "U".scaler_63, "U".scaler_64, "U".scaler_65, "U".scaler_66, "U".scaler_67, "U".scaler_68, "U".scaler_69, "U".scaler_70, "U".scaler_71, "U".scaler_72, "U".scaler_73, "U".scaler_74, "U".scaler_75, "U".scaler_76, "U".scaler_77, "U".scaler_78, "U".scaler_79, "U".scaler_80, "U".scaler_81, "U".scaler_82, "U".scaler_83, "U".scaler_84, "U".scaler_85, "U".scaler_86, "U".scaler_87, "U".scaler_88, "U".scaler_89, "U".scaler_90, "U".scaler_91, "U".scaler_92, "U".scaler_93, "U".scaler_94, "U".scaler_95, "U".scaler_96, "U".scaler_97, "U".scaler_98, "U".scaler_99, "U".scaler_100, "U".scaler_101 
FROM (SELECT "ADS_sca_2_OUT"."KEY", "ADS_sca_2_OUT".scaler_2, "ADS_sca_2_OUT".scaler_3, "ADS_sca_2_OUT".scaler_4, "ADS_sca_2_OUT".scaler_5, "ADS_sca_2_OUT".scaler_6, "ADS_sca_2_OUT".scaler_7, "ADS_sca_2_OUT".scaler_8, "ADS_sca_2_OUT".scaler_9, "ADS_sca_2_OUT".scaler_10, "ADS_sca_2_OUT".scaler_11, "ADS_sca_2_OUT".scaler_12, "ADS_sca_2_OUT".scaler_13, "ADS_sca_2_OUT".scaler_14, "ADS_sca_2_OUT".scaler_15, "ADS_sca_2_OUT".scaler_16, "ADS_sca_2_OUT".scaler_17, "ADS_sca_2_OUT".scaler_18, "ADS_sca_2_OUT".scaler_19, "ADS_sca_2_OUT".scaler_20, "ADS_sca_2_OUT".scaler_21, "ADS_sca_2_OUT".scaler_22, "ADS_sca_2_OUT".scaler_23, "ADS_sca_2_OUT".scaler_24, "ADS_sca_2_OUT".scaler_25, "ADS_sca_2_OUT".scaler_26, "ADS_sca_2_OUT".scaler_27, "ADS_sca_2_OUT".scaler_28, "ADS_sca_2_OUT".scaler_29, "ADS_sca_2_OUT".scaler_30, "ADS_sca_2_OUT".scaler_31, "ADS_sca_2_OUT".scaler_32, "ADS_sca_2_OUT".scaler_33, "ADS_sca_2_OUT".scaler_34, "ADS_sca_2_OUT".scaler_35, "ADS_sca_2_OUT".scaler_36, "ADS_sca_2_OUT".scaler_37, "ADS_sca_2_OUT".scaler_38, "ADS_sca_2_OUT".scaler_39, "ADS_sca_2_OUT".scaler_40, "ADS_sca_2_OUT".scaler_41, "ADS_sca_2_OUT".scaler_42, "ADS_sca_2_OUT".scaler_43, "ADS_sca_2_OUT".scaler_44, "ADS_sca_2_OUT".scaler_45, "ADS_sca_2_OUT".scaler_46, "ADS_sca_2_OUT".scaler_47, "ADS_sca_2_OUT".scaler_48, "ADS_sca_2_OUT".scaler_49, "ADS_sca_2_OUT".scaler_50, "ADS_sca_2_OUT".scaler_51, "ADS_sca_2_OUT".scaler_52, "ADS_sca_2_OUT".scaler_53, "ADS_sca_2_OUT".scaler_54, "ADS_sca_2_OUT".scaler_55, "ADS_sca_2_OUT".scaler_56, "ADS_sca_2_OUT".scaler_57, "ADS_sca_2_OUT".scaler_58, "ADS_sca_2_OUT".scaler_59, "ADS_sca_2_OUT".scaler_60, "ADS_sca_2_OUT".scaler_61, "ADS_sca_2_OUT".scaler_62, "ADS_sca_2_OUT".scaler_63, "ADS_sca_2_OUT".scaler_64, "ADS_sca_2_OUT".scaler_65, "ADS_sca_2_OUT".scaler_66, "ADS_sca_2_OUT".scaler_67, "ADS_sca_2_OUT".scaler_68, "ADS_sca_2_OUT".scaler_69, "ADS_sca_2_OUT".scaler_70, "ADS_sca_2_OUT".scaler_71, "ADS_sca_2_OUT".scaler_72, "ADS_sca_2_OUT".scaler_73, "ADS_sca_2_OUT".scaler_74, "ADS_sca_2_OUT".scaler_75, "ADS_sca_2_OUT".scaler_76, "ADS_sca_2_OUT".scaler_77, "ADS_sca_2_OUT".scaler_78, "ADS_sca_2_OUT".scaler_79, "ADS_sca_2_OUT".scaler_80, "ADS_sca_2_OUT".scaler_81, "ADS_sca_2_OUT".scaler_82, "ADS_sca_2_OUT".scaler_83, "ADS_sca_2_OUT".scaler_84, "ADS_sca_2_OUT".scaler_85, "ADS_sca_2_OUT".scaler_86, "ADS_sca_2_OUT".scaler_87, "ADS_sca_2_OUT".scaler_88, "ADS_sca_2_OUT".scaler_89, "ADS_sca_2_OUT".scaler_90, "ADS_sca_2_OUT".scaler_91, "ADS_sca_2_OUT".scaler_92, "ADS_sca_2_OUT".scaler_93, "ADS_sca_2_OUT".scaler_94, "ADS_sca_2_OUT".scaler_95, "ADS_sca_2_OUT".scaler_96, "ADS_sca_2_OUT".scaler_97, "ADS_sca_2_OUT".scaler_98, "ADS_sca_2_OUT".scaler_99, "ADS_sca_2_OUT".scaler_100, "ADS_sca_2_OUT".scaler_101 
FROM (SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", (CAST("ADS_imp_1_OUT".impter_2 AS DOUBLE PRECISION) - CAST(-0.001480700768972 AS DOUBLE PRECISION)) / CAST(0.921122979031251 AS DOUBLE PRECISION) AS scaler_2, (CAST("ADS_imp_1_OUT".impter_3 AS DOUBLE PRECISION) - CAST(0.085992149906814 AS DOUBLE PRECISION)) / CAST(0.962751680923707 AS DOUBLE PRECISION) AS scaler_3, (CAST("ADS_imp_1_OUT".impter_4 AS DOUBLE PRECISION) - CAST(-0.006358164676411 AS DOUBLE PRECISION)) / CAST(0.789068783510289 AS DOUBLE PRECISION) AS scaler_4, (CAST("ADS_imp_1_OUT".impter_5 AS DOUBLE PRECISION) - CAST(-0.024301807422776 AS DOUBLE PRECISION)) / CAST(1.026527218908317 AS DOUBLE PRECISION) AS scaler_5, (CAST("ADS_imp_1_OUT".impter_6 AS DOUBLE PRECISION) - CAST(0.015786548044298 AS DOUBLE PRECISION)) / CAST(1.019809090802647 AS DOUBLE PRECISION) AS scaler_6, (CAST("ADS_imp_1_OUT".impter_7 AS DOUBLE PRECISION) - CAST(-0.139593294456517 AS DOUBLE PRECISION)) / CAST(0.918555176329368 AS DOUBLE PRECISION) AS scaler_7, (CAST("ADS_imp_1_OUT".impter_8 AS DOUBLE PRECISION) - CAST(-0.064767450480199 AS DOUBLE PRECISION)) / CAST(1.039354724961747 AS DOUBLE PRECISION) AS scaler_8, (CAST("ADS_imp_1_OUT".impter_9 AS DOUBLE PRECISION) - CAST(0.025579810774091 AS DOUBLE PRECISION)) / CAST(0.872213129464492 AS DOUBLE PRECISION) AS scaler_9, (CAST("ADS_imp_1_OUT".impter_10 AS DOUBLE PRECISION) - CAST(-0.031739372609771 AS DOUBLE PRECISION)) / CAST(1.016458829909102 AS DOUBLE PRECISION) AS scaler_10, (CAST("ADS_imp_1_OUT".impter_11 AS DOUBLE PRECISION) - CAST(-0.151814142086249 AS DOUBLE PRECISION)) / CAST(1.00754021142975 AS DOUBLE PRECISION) AS scaler_11, (CAST("ADS_imp_1_OUT".impter_12 AS DOUBLE PRECISION) - CAST(-0.132445765584925 AS DOUBLE PRECISION)) / CAST(0.921532545981637 AS DOUBLE PRECISION) AS scaler_12, (CAST("ADS_imp_1_OUT".impter_13 AS DOUBLE PRECISION) - CAST(0.044172679762224 AS DOUBLE PRECISION)) / CAST(0.905327996406631 AS DOUBLE PRECISION) AS scaler_13, (CAST("ADS_imp_1_OUT".impter_14 AS DOUBLE PRECISION) - CAST(0.01016594671981 AS DOUBLE PRECISION)) / CAST(1.219037104606336 AS DOUBLE PRECISION) AS scaler_14, (CAST("ADS_imp_1_OUT".impter_15 AS DOUBLE PRECISION) - CAST(-0.036458720191033 AS DOUBLE PRECISION)) / CAST(1.087900578658422 AS DOUBLE PRECISION) AS scaler_15, (CAST("ADS_imp_1_OUT".impter_16 AS DOUBLE PRECISION) - CAST(0.064915128115939 AS DOUBLE PRECISION)) / CAST(1.027467020140718 AS DOUBLE PRECISION) AS scaler_16, (CAST("ADS_imp_1_OUT".impter_17 AS DOUBLE PRECISION) - CAST(-0.11930146867074 AS DOUBLE PRECISION)) / CAST(0.95063123497614 AS DOUBLE PRECISION) AS scaler_17, (CAST("ADS_imp_1_OUT".impter_18 AS DOUBLE PRECISION) - CAST(0.007738863934853 AS DOUBLE PRECISION)) / CAST(1.092847758520398 AS DOUBLE PRECISION) AS scaler_18, (CAST("ADS_imp_1_OUT".impter_19 AS DOUBLE PRECISION) - CAST(-0.122677406014773 AS DOUBLE PRECISION)) / CAST(0.98305617159652 AS DOUBLE PRECISION) AS scaler_19, (CAST("ADS_imp_1_OUT".impter_20 AS DOUBLE PRECISION) - CAST(0.019160881669086 AS DOUBLE PRECISION)) / CAST(1.211741792083637 AS DOUBLE PRECISION) AS scaler_20, (CAST("ADS_imp_1_OUT".impter_21 AS DOUBLE PRECISION) - CAST(-0.263403511211311 AS DOUBLE PRECISION)) / CAST(0.980741926225598 AS DOUBLE PRECISION) AS scaler_21, (CAST("ADS_imp_1_OUT".impter_22 AS DOUBLE PRECISION) - CAST(0.035692361937735 AS DOUBLE PRECISION)) / CAST(1.115824498468156 AS DOUBLE PRECISION) AS scaler_22, (CAST("ADS_imp_1_OUT".impter_23 AS DOUBLE PRECISION) - CAST(-0.010021324964069 AS DOUBLE PRECISION)) / CAST(1.079095980341332 AS DOUBLE PRECISION) AS scaler_23, (CAST("ADS_imp_1_OUT".impter_24 AS DOUBLE PRECISION) - CAST(-0.125861438772354 AS DOUBLE PRECISION)) / CAST(1.027967261154737 AS DOUBLE PRECISION) AS scaler_24, (CAST("ADS_imp_1_OUT".impter_25 AS DOUBLE PRECISION) - CAST(0.093727738982311 AS DOUBLE PRECISION)) / CAST(0.969076029930399 AS DOUBLE PRECISION) AS scaler_25, (CAST("ADS_imp_1_OUT".impter_26 AS DOUBLE PRECISION) - CAST(-0.168792959788023 AS DOUBLE PRECISION)) / CAST(0.884585858199681 AS DOUBLE PRECISION) AS scaler_26, (CAST("ADS_imp_1_OUT".impter_27 AS DOUBLE PRECISION) - CAST(0.100062831996294 AS DOUBLE PRECISION)) / CAST(0.914934610400089 AS DOUBLE PRECISION) AS scaler_27, (CAST("ADS_imp_1_OUT".impter_28 AS DOUBLE PRECISION) - CAST(-0.102978580868227 AS DOUBLE PRECISION)) / CAST(1.076139750055733 AS DOUBLE PRECISION) AS scaler_28, (CAST("ADS_imp_1_OUT".impter_29 AS DOUBLE PRECISION) - CAST(0.192405145358704 AS DOUBLE PRECISION)) / CAST(2.089882492597775 AS DOUBLE PRECISION) AS scaler_29, (CAST("ADS_imp_1_OUT".impter_30 AS DOUBLE PRECISION) - CAST(-0.052866434246092 AS DOUBLE PRECISION)) / CAST(1.003077752989689 AS DOUBLE PRECISION) AS scaler_30, (CAST("ADS_imp_1_OUT".impter_31 AS DOUBLE PRECISION) - CAST(0.262461214636615 AS DOUBLE PRECISION)) / CAST(1.977849103847362 AS DOUBLE PRECISION) AS scaler_31, (CAST("ADS_imp_1_OUT".impter_32 AS DOUBLE PRECISION) - CAST(0.002677575140361 AS DOUBLE PRECISION)) / CAST(0.883392491521156 AS DOUBLE PRECISION) AS scaler_32, (CAST("ADS_imp_1_OUT".impter_33 AS DOUBLE PRECISION) - CAST(0.097070419412841 AS DOUBLE PRECISION)) / CAST(0.872000535171356 AS DOUBLE PRECISION) AS scaler_33, (CAST("ADS_imp_1_OUT".impter_34 AS DOUBLE PRECISION) - CAST(-0.032793219857333 AS DOUBLE PRECISION)) / CAST(0.874598909044319 AS DOUBLE PRECISION) AS scaler_34, (CAST("ADS_imp_1_OUT".impter_35 AS DOUBLE PRECISION) - CAST(-0.003130273745909 AS DOUBLE PRECISION)) / CAST(0.996769909753556 AS DOUBLE PRECISION) AS scaler_35, (CAST("ADS_imp_1_OUT".impter_36 AS DOUBLE PRECISION) - CAST(0.05344627621628 AS DOUBLE PRECISION)) / CAST(0.999728911219943 AS DOUBLE PRECISION) AS scaler_36, (CAST("ADS_imp_1_OUT".impter_37 AS DOUBLE PRECISION) - CAST(-0.186681464374124 AS DOUBLE PRECISION)) / CAST(1.027228717131086 AS DOUBLE PRECISION) AS scaler_37, (CAST("ADS_imp_1_OUT".impter_38 AS DOUBLE PRECISION) - CAST(-0.029335964960866 AS DOUBLE PRECISION)) / CAST(1.042755596045166 AS DOUBLE PRECISION) AS scaler_38, (CAST("ADS_imp_1_OUT".impter_39 AS DOUBLE PRECISION) - CAST(0.072197721995024 AS DOUBLE PRECISION)) / CAST(0.832822989045674 AS DOUBLE PRECISION) AS scaler_39, (CAST("ADS_imp_1_OUT".impter_40 AS DOUBLE PRECISION) - CAST(-0.000776283978149 AS DOUBLE PRECISION)) / CAST(0.966652435645779 AS DOUBLE PRECISION) AS scaler_40, (CAST("ADS_imp_1_OUT".impter_41 AS DOUBLE PRECISION) - CAST(0.082708237120983 AS DOUBLE PRECISION)) / CAST(1.083670494683493 AS DOUBLE PRECISION) AS scaler_41, (CAST("ADS_imp_1_OUT".impter_42 AS DOUBLE PRECISION) - CAST(0.10432022852348 AS DOUBLE PRECISION)) / CAST(1.075472547982714 AS DOUBLE PRECISION) AS scaler_42, (CAST("ADS_imp_1_OUT".impter_43 AS DOUBLE PRECISION) - CAST(0.070585663850223 AS DOUBLE PRECISION)) / CAST(0.999346279146371 AS DOUBLE PRECISION) AS scaler_43, (CAST("ADS_imp_1_OUT".impter_44 AS DOUBLE PRECISION) - CAST(0.050966930983574 AS DOUBLE PRECISION)) / CAST(0.887697125279404 AS DOUBLE PRECISION) AS scaler_44, (CAST("ADS_imp_1_OUT".impter_45 AS DOUBLE PRECISION) - CAST(0.066075820336782 AS DOUBLE PRECISION)) / CAST(1.041246125313479 AS DOUBLE PRECISION) AS scaler_45, (CAST("ADS_imp_1_OUT".impter_46 AS DOUBLE PRECISION) - CAST(-0.070758956363534 AS DOUBLE PRECISION)) / CAST(2.238310207242139 AS DOUBLE PRECISION) AS scaler_46, (CAST("ADS_imp_1_OUT".impter_47 AS DOUBLE PRECISION) - CAST(0.0842253656165 AS DOUBLE PRECISION)) / CAST(0.952095968667643 AS DOUBLE PRECISION) AS scaler_47, (CAST("ADS_imp_1_OUT".impter_48 AS DOUBLE PRECISION) - CAST(0.213675806677956 AS DOUBLE PRECISION)) / CAST(0.990723031611177 AS DOUBLE PRECISION) AS scaler_48, (CAST("ADS_imp_1_OUT".impter_49 AS DOUBLE PRECISION) - CAST(-0.055897457335625 AS DOUBLE PRECISION)) / CAST(1.039240071432049 AS DOUBLE PRECISION) AS scaler_49, (CAST("ADS_imp_1_OUT".impter_50 AS DOUBLE PRECISION) - CAST(-0.174530367261398 AS DOUBLE PRECISION)) / CAST(2.001507098381001 AS DOUBLE PRECISION) AS scaler_50, (CAST("ADS_imp_1_OUT".impter_51 AS DOUBLE PRECISION) - CAST(-0.054944001818474 AS DOUBLE PRECISION)) / CAST(1.004164554009125 AS DOUBLE PRECISION) AS scaler_51, (CAST("ADS_imp_1_OUT".impter_52 AS DOUBLE PRECISION) - CAST(-0.596165126171037 AS DOUBLE PRECISION)) / CAST(2.467511153399545 AS DOUBLE PRECISION) AS scaler_52, (CAST("ADS_imp_1_OUT".impter_53 AS DOUBLE PRECISION) - CAST(0.50204045265656 AS DOUBLE PRECISION)) / CAST(2.192932511828779 AS DOUBLE PRECISION) AS scaler_53, (CAST("ADS_imp_1_OUT".impter_54 AS DOUBLE PRECISION) - CAST(-0.052340545201384 AS DOUBLE PRECISION)) / CAST(0.98465558791252 AS DOUBLE PRECISION) AS scaler_54, (CAST("ADS_imp_1_OUT".impter_55 AS DOUBLE PRECISION) - CAST(0.052943076116747 AS DOUBLE PRECISION)) / CAST(1.813704256733718 AS DOUBLE PRECISION) AS scaler_55, (CAST("ADS_imp_1_OUT".impter_56 AS DOUBLE PRECISION) - CAST(0.038358844790693 AS DOUBLE PRECISION)) / CAST(0.924132635441134 AS DOUBLE PRECISION) AS scaler_56, (CAST("ADS_imp_1_OUT".impter_57 AS DOUBLE PRECISION) - CAST(-0.135719790149647 AS DOUBLE PRECISION)) / CAST(0.86790957559487 AS DOUBLE PRECISION) AS scaler_57, (CAST("ADS_imp_1_OUT".impter_58 AS DOUBLE PRECISION) - CAST(-0.219030684314118 AS DOUBLE PRECISION)) / CAST(4.150428869748412 AS DOUBLE PRECISION) AS scaler_58, (CAST("ADS_imp_1_OUT".impter_59 AS DOUBLE PRECISION) - CAST(-0.119175236202938 AS DOUBLE PRECISION)) / CAST(0.912333340812844 AS DOUBLE PRECISION) AS scaler_59, (CAST("ADS_imp_1_OUT".impter_60 AS DOUBLE PRECISION) - CAST(0.380583469128077 AS DOUBLE PRECISION)) / CAST(3.563501108698692 AS DOUBLE PRECISION) AS scaler_60, (CAST("ADS_imp_1_OUT".impter_61 AS DOUBLE PRECISION) - CAST(-0.127209289741685 AS DOUBLE PRECISION)) / CAST(0.930102447599163 AS DOUBLE PRECISION) AS scaler_61, (CAST("ADS_imp_1_OUT".impter_62 AS DOUBLE PRECISION) - CAST(-0.090729364966138 AS DOUBLE PRECISION)) / CAST(0.949050127730602 AS DOUBLE PRECISION) AS scaler_62, (CAST("ADS_imp_1_OUT".impter_63 AS DOUBLE PRECISION) - CAST(-0.039151259379545 AS DOUBLE PRECISION)) / CAST(0.902950460847361 AS DOUBLE PRECISION) AS scaler_63, (CAST("ADS_imp_1_OUT".impter_64 AS DOUBLE PRECISION) - CAST(0.070754123933135 AS DOUBLE PRECISION)) / CAST(0.97265616825281 AS DOUBLE PRECISION) AS scaler_64, (CAST("ADS_imp_1_OUT".impter_65 AS DOUBLE PRECISION) - CAST(0.101248945870169 AS DOUBLE PRECISION)) / CAST(0.940307592024949 AS DOUBLE PRECISION) AS scaler_65, (CAST("ADS_imp_1_OUT".impter_66 AS DOUBLE PRECISION) - CAST(-0.194566144947558 AS DOUBLE PRECISION)) / CAST(0.940090362573265 AS DOUBLE PRECISION) AS scaler_66, (CAST("ADS_imp_1_OUT".impter_67 AS DOUBLE PRECISION) - CAST(-0.175948298126123 AS DOUBLE PRECISION)) / CAST(0.943542204994379 AS DOUBLE PRECISION) AS scaler_67, (CAST("ADS_imp_1_OUT".impter_68 AS DOUBLE PRECISION) - CAST(0.074732289718555 AS DOUBLE PRECISION)) / CAST(0.887100396431977 AS DOUBLE PRECISION) AS scaler_68, (CAST("ADS_imp_1_OUT".impter_69 AS DOUBLE PRECISION) - CAST(0.037770556211591 AS DOUBLE PRECISION)) / CAST(1.022897854919659 AS DOUBLE PRECISION) AS scaler_69, (CAST("ADS_imp_1_OUT".impter_70 AS DOUBLE PRECISION) - CAST(0.013947089859892 AS DOUBLE PRECISION)) / CAST(0.946572832907949 AS DOUBLE PRECISION) AS scaler_70, (CAST("ADS_imp_1_OUT".impter_71 AS DOUBLE PRECISION) - CAST(0.258268572514594 AS DOUBLE PRECISION)) / CAST(1.102723201652148 AS DOUBLE PRECISION) AS scaler_71, (CAST("ADS_imp_1_OUT".impter_72 AS DOUBLE PRECISION) - CAST(0.022975786233049 AS DOUBLE PRECISION)) / CAST(0.920043690480938 AS DOUBLE PRECISION) AS scaler_72, (CAST("ADS_imp_1_OUT".impter_73 AS DOUBLE PRECISION) - CAST(0.174454340619495 AS DOUBLE PRECISION)) / CAST(0.900996474248213 AS DOUBLE PRECISION) AS scaler_73, (CAST("ADS_imp_1_OUT".impter_74 AS DOUBLE PRECISION) - CAST(-0.011413879692078 AS DOUBLE PRECISION)) / CAST(0.948337702556598 AS DOUBLE PRECISION) AS scaler_74, (CAST("ADS_imp_1_OUT".impter_75 AS DOUBLE PRECISION) - CAST(0.07898984156872 AS DOUBLE PRECISION)) / CAST(0.972666813886109 AS DOUBLE PRECISION) AS scaler_75, (CAST("ADS_imp_1_OUT".impter_76 AS DOUBLE PRECISION) - CAST(0.095254727377071 AS DOUBLE PRECISION)) / CAST(0.960786724587339 AS DOUBLE PRECISION) AS scaler_76, (CAST("ADS_imp_1_OUT".impter_77 AS DOUBLE PRECISION) - CAST(-0.039977768396399 AS DOUBLE PRECISION)) / CAST(1.031882868608097 AS DOUBLE PRECISION) AS scaler_77, (CAST("ADS_imp_1_OUT".impter_78 AS DOUBLE PRECISION) - CAST(-0.020839895874293 AS DOUBLE PRECISION)) / CAST(0.945141993694461 AS DOUBLE PRECISION) AS scaler_78, (CAST("ADS_imp_1_OUT".impter_79 AS DOUBLE PRECISION) - CAST(-0.072846319866132 AS DOUBLE PRECISION)) / CAST(0.910341678434891 AS DOUBLE PRECISION) AS scaler_79, (CAST("ADS_imp_1_OUT".impter_80 AS DOUBLE PRECISION) - CAST(-0.273899517644344 AS DOUBLE PRECISION)) / CAST(2.036260386299674 AS DOUBLE PRECISION) AS scaler_80, (CAST("ADS_imp_1_OUT".impter_81 AS DOUBLE PRECISION) - CAST(0.080572878852876 AS DOUBLE PRECISION)) / CAST(0.991929294422402 AS DOUBLE PRECISION) AS scaler_81, (CAST("ADS_imp_1_OUT".impter_82 AS DOUBLE PRECISION) - CAST(-0.062442742454379 AS DOUBLE PRECISION)) / CAST(0.811303929382455 AS DOUBLE PRECISION) AS scaler_82, (CAST("ADS_imp_1_OUT".impter_83 AS DOUBLE PRECISION) - CAST(-0.122908553340669 AS DOUBLE PRECISION)) / CAST(1.030730265471111 AS DOUBLE PRECISION) AS scaler_83, (CAST("ADS_imp_1_OUT".impter_84 AS DOUBLE PRECISION) - CAST(0.116395317938909 AS DOUBLE PRECISION)) / CAST(0.999359195113524 AS DOUBLE PRECISION) AS scaler_84, (CAST("ADS_imp_1_OUT".impter_85 AS DOUBLE PRECISION) - CAST(-0.033504627861286 AS DOUBLE PRECISION)) / CAST(1.019759864859449 AS DOUBLE PRECISION) AS scaler_85, (CAST("ADS_imp_1_OUT".impter_86 AS DOUBLE PRECISION) - CAST(-0.039140499681446 AS DOUBLE PRECISION)) / CAST(0.902205162205808 AS DOUBLE PRECISION) AS scaler_86, (CAST("ADS_imp_1_OUT".impter_87 AS DOUBLE PRECISION) - CAST(0.241939030723052 AS DOUBLE PRECISION)) / CAST(0.962574267839248 AS DOUBLE PRECISION) AS scaler_87, (CAST("ADS_imp_1_OUT".impter_88 AS DOUBLE PRECISION) - CAST(-0.073897198622219 AS DOUBLE PRECISION)) / CAST(1.00800709854307 AS DOUBLE PRECISION) AS scaler_88, (CAST("ADS_imp_1_OUT".impter_89 AS DOUBLE PRECISION) - CAST(0.140075622832011 AS DOUBLE PRECISION)) / CAST(0.931579127484883 AS DOUBLE PRECISION) AS scaler_89, (CAST("ADS_imp_1_OUT".impter_90 AS DOUBLE PRECISION) - CAST(0.276530193513615 AS DOUBLE PRECISION)) / CAST(1.945598232317866 AS DOUBLE PRECISION) AS scaler_90, (CAST("ADS_imp_1_OUT".impter_91 AS DOUBLE PRECISION) - CAST(-0.079571471692509 AS DOUBLE PRECISION)) / CAST(0.968884807788467 AS DOUBLE PRECISION) AS scaler_91, (CAST("ADS_imp_1_OUT".impter_92 AS DOUBLE PRECISION) - CAST(0.162957676806427 AS DOUBLE PRECISION)) / CAST(0.895274190411019 AS DOUBLE PRECISION) AS scaler_92, (CAST("ADS_imp_1_OUT".impter_93 AS DOUBLE PRECISION) - CAST(0.070628138885095 AS DOUBLE PRECISION)) / CAST(0.83317483227306 AS DOUBLE PRECISION) AS scaler_93, (CAST("ADS_imp_1_OUT".impter_94 AS DOUBLE PRECISION) - CAST(0.012995630151896 AS DOUBLE PRECISION)) / CAST(1.059167248118017 AS DOUBLE PRECISION) AS scaler_94, (CAST("ADS_imp_1_OUT".impter_95 AS DOUBLE PRECISION) - CAST(0.105521240819042 AS DOUBLE PRECISION)) / CAST(1.05259889780009 AS DOUBLE PRECISION) AS scaler_95, (CAST("ADS_imp_1_OUT".impter_96 AS DOUBLE PRECISION) - CAST(-0.140843442535436 AS DOUBLE PRECISION)) / CAST(0.917237203399668 AS DOUBLE PRECISION) AS scaler_96, (CAST("ADS_imp_1_OUT".impter_97 AS DOUBLE PRECISION) - CAST(-0.157401236673272 AS DOUBLE PRECISION)) / CAST(0.993012543364307 AS DOUBLE PRECISION) AS scaler_97, (CAST("ADS_imp_1_OUT".impter_98 AS DOUBLE PRECISION) - CAST(0.054775366763133 AS DOUBLE PRECISION)) / CAST(0.980313635365364 AS DOUBLE PRECISION) AS scaler_98, (CAST("ADS_imp_1_OUT".impter_99 AS DOUBLE PRECISION) - CAST(0.056732722059196 AS DOUBLE PRECISION)) / CAST(0.92963380321885 AS DOUBLE PRECISION) AS scaler_99, (CAST("ADS_imp_1_OUT".impter_100 AS DOUBLE PRECISION) - CAST(-0.142266492136195 AS DOUBLE PRECISION)) / CAST(1.174442941822933 AS DOUBLE PRECISION) AS scaler_100, (CAST("ADS_imp_1_OUT".impter_101 AS DOUBLE PRECISION) - CAST(-0.04042675289132 AS DOUBLE PRECISION)) / CAST(1.983747550989713 AS DOUBLE PRECISION) AS scaler_101 
FROM tmp_20180602143816_d8k_ads_imp_1_out AS "ADS_imp_1_OUT") AS "ADS_sca_2_OUT") AS "U"

-- Code For temporary table tmp_20180602143816_ir7_gb_b0 part 1. Create 


CREATE GLOBAL TEMPORARY TABLE tmp_20180602143816_ir7_gb_b0  (
	"KEY" BIGINT, 
	"Score_0" DOUBLE PRECISION, 
	"Score_1" DOUBLE PRECISION, 
	"Score_2" DOUBLE PRECISION, 
	"Score_3" DOUBLE PRECISION
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table tmp_20180602143816_ir7_gb_b0 part 2. Populate

INSERT INTO tmp_20180602143816_ir7_gb_b0 ("KEY", "Score_0", "Score_1", "Score_2", "Score_3") SELECT "U"."KEY", "U"."Score_0", "U"."Score_1", "U"."Score_2", "U"."Score_3" 
FROM (WITH "DT_node_lookup" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_80 <= CAST(-0.155378341674805 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= CAST(-1.84721565246582 AS DOUBLE PRECISION)) THEN 2 ELSE 3 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_50 <= CAST(-0.184253960847855 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_44 <= CAST(-1.21173346042633 AS DOUBLE PRECISION)) THEN 6 ELSE 7 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= CAST(-0.735676765441894 AS DOUBLE PRECISION)) THEN 9 ELSE 10 END END END AS node_id_2 
FROM tmp_20180602143816_bkn_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS DOUBLE PRECISION) AS "E" 
FROM (SELECT 2 AS nid, CAST(3.000081380944198 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 3 AS nid, CAST(-0.99999095799991 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 6 AS nid, CAST(2.7126736117e-05 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 7 AS nid, CAST(2.714361928162476 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 9 AS nid, CAST(1.800059679260964 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 10 AS nid, CAST(-0.818169488047905 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte) AS "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".nid AS nid, "DT_node_data"."E" AS "E" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".nid), 
"GB_Model_0_0" AS 
(SELECT "DT_Output"."KEY" AS "KEY", "DT_Output"."E" AS "Score_0", CAST(0.0 AS DOUBLE PRECISION) AS "Score_1", CAST(0.0 AS DOUBLE PRECISION) AS "Score_2", CAST(0.0 AS DOUBLE PRECISION) AS "Score_3" 
FROM "DT_Output"), 
"DT_node_lookup_1" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_98 <= CAST(-1.460758686065674 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= CAST(-1.160664439201355 AS DOUBLE PRECISION)) THEN 2 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_70 <= CAST(1.644784450531006 AS DOUBLE PRECISION)) THEN 4 ELSE 5 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_12 <= CAST(-1.627345085144043 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_49 <= CAST(-0.020398333668709 AS DOUBLE PRECISION)) THEN 8 ELSE 9 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_69 <= CAST(-2.090840816497803 AS DOUBLE PRECISION)) THEN 11 ELSE 12 END END END AS node_id_2 
FROM tmp_20180602143816_bkn_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte_1 AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data_1" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS DOUBLE PRECISION) AS "E" 
FROM (SELECT 2 AS nid, CAST(-1.011827504286582 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_1 UNION ALL SELECT 4 AS nid, CAST(2.905746472586037 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_1 UNION ALL SELECT 5 AS nid, CAST(2.968994747796099 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_1 UNION ALL SELECT 8 AS nid, CAST(2.898361004061352 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_1 UNION ALL SELECT 9 AS nid, CAST(2.910683754603354 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_1 UNION ALL SELECT 11 AS nid, CAST(2.968395633788201 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_1 UNION ALL SELECT 12 AS nid, CAST(-0.419291628177191 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_1) AS "Values"), 
"DT_Output_1" AS 
(SELECT "DT_node_lookup_1"."KEY" AS "KEY", "DT_node_lookup_1".node_id_2 AS node_id_2, "DT_node_data_1".nid AS nid, "DT_node_data_1"."E" AS "E" 
FROM "DT_node_lookup_1" LEFT OUTER JOIN "DT_node_data_1" ON "DT_node_lookup_1".node_id_2 = "DT_node_data_1".nid), 
"GB_Model_0_1" AS 
(SELECT "DT_Output_1"."KEY" AS "KEY", CAST(0.0 AS DOUBLE PRECISION) AS "Score_0", "DT_Output_1"."E" AS "Score_1", CAST(0.0 AS DOUBLE PRECISION) AS "Score_2", CAST(0.0 AS DOUBLE PRECISION) AS "Score_3" 
FROM "DT_Output_1"), 
"DT_node_lookup_2" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_46 <= CAST(-0.910733640193939 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_101 <= CAST(-1.085902690887451 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_51 <= CAST(0.360457837581634 AS DOUBLE PRECISION)) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_67 <= CAST(1.746506929397583 AS DOUBLE PRECISION)) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_55 <= CAST(1.674030303955078 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_15 <= CAST(-2.116902351379394 AS DOUBLE PRECISION)) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_16 <= CAST(0.300700664520264 AS DOUBLE PRECISION)) THEN 13 ELSE 14 END END END AS node_id_2 
FROM tmp_20180602143816_bkn_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte_2 AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data_2" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS DOUBLE PRECISION) AS "E" 
FROM (SELECT 3 AS nid, CAST(-1.008272543963393 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_2 UNION ALL SELECT 4 AS nid, CAST(-0.977954508308306 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_2 UNION ALL SELECT 6 AS nid, CAST(2.930023964087266 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_2 UNION ALL SELECT 7 AS nid, CAST(3.00005256759022 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_2 UNION ALL SELECT 10 AS nid, CAST(2.927931852019576 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_2 UNION ALL SELECT 11 AS nid, CAST(-0.677709001860005 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_2 UNION ALL SELECT 13 AS nid, CAST(2.927931852019576 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_2 UNION ALL SELECT 14 AS nid, CAST(3.149517762307101 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_2) AS "Values"), 
"DT_Output_2" AS 
(SELECT "DT_node_lookup_2"."KEY" AS "KEY", "DT_node_lookup_2".node_id_2 AS node_id_2, "DT_node_data_2".nid AS nid, "DT_node_data_2"."E" AS "E" 
FROM "DT_node_lookup_2" LEFT OUTER JOIN "DT_node_data_2" ON "DT_node_lookup_2".node_id_2 = "DT_node_data_2".nid), 
"GB_Model_0_2" AS 
(SELECT "DT_Output_2"."KEY" AS "KEY", CAST(0.0 AS DOUBLE PRECISION) AS "Score_0", CAST(0.0 AS DOUBLE PRECISION) AS "Score_1", "DT_Output_2"."E" AS "Score_2", CAST(0.0 AS DOUBLE PRECISION) AS "Score_3" 
FROM "DT_Output_2"), 
"DT_node_lookup_3" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_53 <= CAST(1.564861536026001 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_16 <= CAST(1.270020008087158 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= CAST(-1.855347871780396 AS DOUBLE PRECISION)) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_46 <= CAST(-0.02885190397501 AS DOUBLE PRECISION)) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_50 <= CAST(-0.782679319381714 AS DOUBLE PRECISION)) THEN 9 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_57 <= CAST(-0.509017944335938 AS DOUBLE PRECISION)) THEN 11 ELSE 12 END END END AS node_id_2 
FROM tmp_20180602143816_bkn_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte_3 AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data_3" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS DOUBLE PRECISION) AS "E" 
FROM (SELECT 3 AS nid, CAST(2.946162817253062 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_3 UNION ALL SELECT 4 AS nid, CAST(-0.536019504253178 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_3 UNION ALL SELECT 6 AS nid, CAST(-1.001553783186736 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_3 UNION ALL SELECT 7 AS nid, CAST(2.85250654822808 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_3 UNION ALL SELECT 9 AS nid, CAST(2.920329383022202 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_3 UNION ALL SELECT 11 AS nid, CAST(2.848956025656982 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_3 UNION ALL SELECT 12 AS nid, CAST(2.861407809063219 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_3) AS "Values"), 
"DT_Output_3" AS 
(SELECT "DT_node_lookup_3"."KEY" AS "KEY", "DT_node_lookup_3".node_id_2 AS node_id_2, "DT_node_data_3".nid AS nid, "DT_node_data_3"."E" AS "E" 
FROM "DT_node_lookup_3" LEFT OUTER JOIN "DT_node_data_3" ON "DT_node_lookup_3".node_id_2 = "DT_node_data_3".nid), 
"GB_Model_0_3" AS 
(SELECT "DT_Output_3"."KEY" AS "KEY", CAST(0.0 AS DOUBLE PRECISION) AS "Score_0", CAST(0.0 AS DOUBLE PRECISION) AS "Score_1", CAST(0.0 AS DOUBLE PRECISION) AS "Score_2", "DT_Output_3"."E" AS "Score_3" 
FROM "DT_Output_3"), 
"DT_node_lookup_4" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_80 <= CAST(-0.155378341674805 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_28 <= CAST(2.14944052696228 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_23 <= CAST(-0.938928008079529 AS DOUBLE PRECISION)) THEN 3 ELSE 4 END ELSE 5 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_50 <= CAST(-0.184253960847855 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_43 <= CAST(0.158449575304985 AS DOUBLE PRECISION)) THEN 8 ELSE 9 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= CAST(-0.735676765441894 AS DOUBLE PRECISION)) THEN 11 ELSE 12 END END END AS node_id_2 
FROM tmp_20180602143816_bkn_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte_4 AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data_4" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS DOUBLE PRECISION) AS "E" 
FROM (SELECT 3 AS nid, CAST(-0.986756455091515 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_4 UNION ALL SELECT 4 AS nid, CAST(-0.968337973692526 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_4 UNION ALL SELECT 5 AS nid, CAST(2.328807333575534 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_4 UNION ALL SELECT 8 AS nid, CAST(2.416016629378572 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_4 UNION ALL SELECT 9 AS nid, CAST(0.565975170629434 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_4 UNION ALL SELECT 11 AS nid, CAST(1.487932982103626 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_4 UNION ALL SELECT 12 AS nid, CAST(-0.786620009803083 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_4) AS "Values"), 
"DT_Output_4" AS 
(SELECT "DT_node_lookup_4"."KEY" AS "KEY", "DT_node_lookup_4".node_id_2 AS node_id_2, "DT_node_data_4".nid AS nid, "DT_node_data_4"."E" AS "E" 
FROM "DT_node_lookup_4" LEFT OUTER JOIN "DT_node_data_4" ON "DT_node_lookup_4".node_id_2 = "DT_node_data_4".nid), 
"GB_Model_1_0" AS 
(SELECT "DT_Output_4"."KEY" AS "KEY", "DT_Output_4"."E" AS "Score_0", CAST(0.0 AS DOUBLE PRECISION) AS "Score_1", CAST(0.0 AS DOUBLE PRECISION) AS "Score_2", CAST(0.0 AS DOUBLE PRECISION) AS "Score_3" 
FROM "DT_Output_4"), 
"DT_node_lookup_5" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_98 <= CAST(-1.460758686065674 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_27 <= CAST(1.152181267738342 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_18 <= CAST(-1.936455726623535 AS DOUBLE PRECISION)) THEN 3 ELSE 4 END ELSE 5 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_94 <= CAST(0.811809659004211 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_75 <= CAST(1.632202625274658 AS DOUBLE PRECISION)) THEN 8 ELSE 9 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_50 <= CAST(-0.216533839702606 AS DOUBLE PRECISION)) THEN 11 ELSE 12 END END END AS node_id_2 
FROM tmp_20180602143816_bkn_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte_5 AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data_5" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS DOUBLE PRECISION) AS "E" 
FROM (SELECT 3 AS nid, CAST(2.366540619700036 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_5 UNION ALL SELECT 4 AS nid, CAST(2.252353526411166 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_5 UNION ALL SELECT 5 AS nid, CAST(-1.004389843939232 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_5 UNION ALL SELECT 8 AS nid, CAST(-0.580079386964986 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_5 UNION ALL SELECT 9 AS nid, CAST(1.933314665366716 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_5 UNION ALL SELECT 11 AS nid, CAST(-0.494146649296147 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_5 UNION ALL SELECT 12 AS nid, CAST(2.693609180764203 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_5) AS "Values"), 
"DT_Output_5" AS 
(SELECT "DT_node_lookup_5"."KEY" AS "KEY", "DT_node_lookup_5".node_id_2 AS node_id_2, "DT_node_data_5".nid AS nid, "DT_node_data_5"."E" AS "E" 
FROM "DT_node_lookup_5" LEFT OUTER JOIN "DT_node_data_5" ON "DT_node_lookup_5".node_id_2 = "DT_node_data_5".nid), 
"GB_Model_1_1" AS 
(SELECT "DT_Output_5"."KEY" AS "KEY", CAST(0.0 AS DOUBLE PRECISION) AS "Score_0", "DT_Output_5"."E" AS "Score_1", CAST(0.0 AS DOUBLE PRECISION) AS "Score_2", CAST(0.0 AS DOUBLE PRECISION) AS "Score_3" 
FROM "DT_Output_5"), 
"DT_node_lookup_6" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_46 <= CAST(-0.910733640193939 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_101 <= CAST(-1.085902690887451 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_65 <= CAST(-0.281419396400452 AS DOUBLE PRECISION)) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_26 <= CAST(-0.944790005683899 AS DOUBLE PRECISION)) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_36 <= CAST(-1.705429553985596 AS DOUBLE PRECISION)) THEN 9 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_34 <= CAST(1.547230243682861 AS DOUBLE PRECISION)) THEN 11 ELSE 12 END END END AS node_id_2 
FROM tmp_20180602143816_bkn_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte_6 AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data_6" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS DOUBLE PRECISION) AS "E" 
FROM (SELECT 3 AS nid, CAST(-0.944437288982569 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_6 UNION ALL SELECT 4 AS nid, CAST(-0.977991190197475 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_6 UNION ALL SELECT 6 AS nid, CAST(2.404444062668351 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_6 UNION ALL SELECT 7 AS nid, CAST(2.270706743388166 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_6 UNION ALL SELECT 9 AS nid, CAST(2.925695195630794 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_6 UNION ALL SELECT 11 AS nid, CAST(-0.651217782710768 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_6 UNION ALL SELECT 12 AS nid, CAST(2.695596254830164 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_6) AS "Values"), 
"DT_Output_6" AS 
(SELECT "DT_node_lookup_6"."KEY" AS "KEY", "DT_node_lookup_6".node_id_2 AS node_id_2, "DT_node_data_6".nid AS nid, "DT_node_data_6"."E" AS "E" 
FROM "DT_node_lookup_6" LEFT OUTER JOIN "DT_node_data_6" ON "DT_node_lookup_6".node_id_2 = "DT_node_data_6".nid), 
"GB_Model_1_2" AS 
(SELECT "DT_Output_6"."KEY" AS "KEY", CAST(0.0 AS DOUBLE PRECISION) AS "Score_0", CAST(0.0 AS DOUBLE PRECISION) AS "Score_1", "DT_Output_6"."E" AS "Score_2", CAST(0.0 AS DOUBLE PRECISION) AS "Score_3" 
FROM "DT_Output_6"), 
"DT_node_lookup_7" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_46 <= CAST(0.3581483066082 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_53 <= CAST(1.564861536026001 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_71 <= CAST(1.657257318496704 AS DOUBLE PRECISION)) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_20 <= CAST(1.134755611419678 AS DOUBLE PRECISION)) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_101 <= CAST(-0.036666817963123 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_26 <= CAST(-1.233558177947998 AS DOUBLE PRECISION)) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_22 <= CAST(1.157403230667114 AS DOUBLE PRECISION)) THEN 13 ELSE 14 END END END AS node_id_2 
FROM tmp_20180602143816_bkn_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte_7 AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data_7" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS DOUBLE PRECISION) AS "E" 
FROM (SELECT 3 AS nid, CAST(-0.760332435689762 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_7 UNION ALL SELECT 4 AS nid, CAST(2.495959396533168 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_7 UNION ALL SELECT 6 AS nid, CAST(2.233116770286011 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_7 UNION ALL SELECT 7 AS nid, CAST(2.21781250474387 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_7 UNION ALL SELECT 10 AS nid, CAST(-0.96611080088462 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_7 UNION ALL SELECT 11 AS nid, CAST(2.478021057265966 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_7 UNION ALL SELECT 13 AS nid, CAST(-0.980395540296177 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_7 UNION ALL SELECT 14 AS nid, CAST(2.280383581950157 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_7) AS "Values"), 
"DT_Output_7" AS 
(SELECT "DT_node_lookup_7"."KEY" AS "KEY", "DT_node_lookup_7".node_id_2 AS node_id_2, "DT_node_data_7".nid AS nid, "DT_node_data_7"."E" AS "E" 
FROM "DT_node_lookup_7" LEFT OUTER JOIN "DT_node_data_7" ON "DT_node_lookup_7".node_id_2 = "DT_node_data_7".nid), 
"GB_Model_1_3" AS 
(SELECT "DT_Output_7"."KEY" AS "KEY", CAST(0.0 AS DOUBLE PRECISION) AS "Score_0", CAST(0.0 AS DOUBLE PRECISION) AS "Score_1", CAST(0.0 AS DOUBLE PRECISION) AS "Score_2", "DT_Output_7"."E" AS "Score_3" 
FROM "DT_Output_7"), 
"DT_node_lookup_8" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_80 <= CAST(-0.155378341674805 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= CAST(-1.84721565246582 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= CAST(-0.36567097902298 AS DOUBLE PRECISION)) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_91 <= CAST(0.161959439516068 AS DOUBLE PRECISION)) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_94 <= CAST(-0.057808898389339 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_51 <= CAST(0.463960826396942 AS DOUBLE PRECISION)) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_26 <= CAST(0.836352586746216 AS DOUBLE PRECISION)) THEN 13 ELSE 14 END END END AS node_id_2 
FROM tmp_20180602143816_bkn_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte_8 AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data_8" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS DOUBLE PRECISION) AS "E" 
FROM (SELECT 3 AS nid, CAST(1.92055878296925 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_8 UNION ALL SELECT 4 AS nid, CAST(1.912142736846243 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_8 UNION ALL SELECT 6 AS nid, CAST(-0.957272033548331 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_8 UNION ALL SELECT 7 AS nid, CAST(-0.934753471162294 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_8 UNION ALL SELECT 10 AS nid, CAST(1.874662554426528 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_8 UNION ALL SELECT 11 AS nid, CAST(0.073407168244121 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_8 UNION ALL SELECT 13 AS nid, CAST(-0.979866751187601 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_8 UNION ALL SELECT 14 AS nid, CAST(1.694245826303255 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_8) AS "Values"), 
"DT_Output_8" AS 
(SELECT "DT_node_lookup_8"."KEY" AS "KEY", "DT_node_lookup_8".node_id_2 AS node_id_2, "DT_node_data_8".nid AS nid, "DT_node_data_8"."E" AS "E" 
FROM "DT_node_lookup_8" LEFT OUTER JOIN "DT_node_data_8" ON "DT_node_lookup_8".node_id_2 = "DT_node_data_8".nid), 
"GB_Model_2_0" AS 
(SELECT "DT_Output_8"."KEY" AS "KEY", "DT_Output_8"."E" AS "Score_0", CAST(0.0 AS DOUBLE PRECISION) AS "Score_1", CAST(0.0 AS DOUBLE PRECISION) AS "Score_2", CAST(0.0 AS DOUBLE PRECISION) AS "Score_3" 
FROM "DT_Output_8"), 
"DT_node_lookup_9" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_98 <= CAST(-1.460758686065674 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_47 <= CAST(1.881611347198486 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_71 <= CAST(0.747761607170105 AS DOUBLE PRECISION)) THEN 3 ELSE 4 END ELSE 5 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_12 <= CAST(-1.627345085144043 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_70 <= CAST(0.379126697778702 AS DOUBLE PRECISION)) THEN 8 ELSE 9 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_75 <= CAST(1.629674911499024 AS DOUBLE PRECISION)) THEN 11 ELSE 12 END END END AS node_id_2 
FROM tmp_20180602143816_bkn_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte_9 AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data_9" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS DOUBLE PRECISION) AS "E" 
FROM (SELECT 3 AS nid, CAST(1.857372974581994 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_9 UNION ALL SELECT 4 AS nid, CAST(1.952742428597873 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_9 UNION ALL SELECT 5 AS nid, CAST(-0.968433104895255 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_9 UNION ALL SELECT 8 AS nid, CAST(1.812932782484052 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_9 UNION ALL SELECT 9 AS nid, CAST(2.22316694600337 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_9 UNION ALL SELECT 11 AS nid, CAST(-0.4045037202548 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_9 UNION ALL SELECT 12 AS nid, CAST(1.715777944979062 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_9) AS "Values"), 
"DT_Output_9" AS 
(SELECT "DT_node_lookup_9"."KEY" AS "KEY", "DT_node_lookup_9".node_id_2 AS node_id_2, "DT_node_data_9".nid AS nid, "DT_node_data_9"."E" AS "E" 
FROM "DT_node_lookup_9" LEFT OUTER JOIN "DT_node_data_9" ON "DT_node_lookup_9".node_id_2 = "DT_node_data_9".nid), 
"GB_Model_2_1" AS 
(SELECT "DT_Output_9"."KEY" AS "KEY", CAST(0.0 AS DOUBLE PRECISION) AS "Score_0", "DT_Output_9"."E" AS "Score_1", CAST(0.0 AS DOUBLE PRECISION) AS "Score_2", CAST(0.0 AS DOUBLE PRECISION) AS "Score_3" 
FROM "DT_Output_9")
 SELECT "GB_B0"."KEY", "GB_B0"."Score_0", "GB_B0"."Score_1", "GB_B0"."Score_2", "GB_B0"."Score_3" 
FROM (SELECT "GB_esu_0"."KEY" AS "KEY", "GB_esu_0"."Score_0" AS "Score_0", "GB_esu_0"."Score_1" AS "Score_1", "GB_esu_0"."Score_2" AS "Score_2", "GB_esu_0"."Score_3" AS "Score_3" 
FROM (SELECT "GB_Model_0_0"."KEY" AS "KEY", "GB_Model_0_0"."Score_0" AS "Score_0", "GB_Model_0_0"."Score_1" AS "Score_1", "GB_Model_0_0"."Score_2" AS "Score_2", "GB_Model_0_0"."Score_3" AS "Score_3" 
FROM "GB_Model_0_0" UNION ALL SELECT "GB_Model_0_1"."KEY" AS "KEY", "GB_Model_0_1"."Score_0" AS "Score_0", "GB_Model_0_1"."Score_1" AS "Score_1", "GB_Model_0_1"."Score_2" AS "Score_2", "GB_Model_0_1"."Score_3" AS "Score_3" 
FROM "GB_Model_0_1" UNION ALL SELECT "GB_Model_0_2"."KEY" AS "KEY", "GB_Model_0_2"."Score_0" AS "Score_0", "GB_Model_0_2"."Score_1" AS "Score_1", "GB_Model_0_2"."Score_2" AS "Score_2", "GB_Model_0_2"."Score_3" AS "Score_3" 
FROM "GB_Model_0_2" UNION ALL SELECT "GB_Model_0_3"."KEY" AS "KEY", "GB_Model_0_3"."Score_0" AS "Score_0", "GB_Model_0_3"."Score_1" AS "Score_1", "GB_Model_0_3"."Score_2" AS "Score_2", "GB_Model_0_3"."Score_3" AS "Score_3" 
FROM "GB_Model_0_3" UNION ALL SELECT "GB_Model_1_0"."KEY" AS "KEY", "GB_Model_1_0"."Score_0" AS "Score_0", "GB_Model_1_0"."Score_1" AS "Score_1", "GB_Model_1_0"."Score_2" AS "Score_2", "GB_Model_1_0"."Score_3" AS "Score_3" 
FROM "GB_Model_1_0" UNION ALL SELECT "GB_Model_1_1"."KEY" AS "KEY", "GB_Model_1_1"."Score_0" AS "Score_0", "GB_Model_1_1"."Score_1" AS "Score_1", "GB_Model_1_1"."Score_2" AS "Score_2", "GB_Model_1_1"."Score_3" AS "Score_3" 
FROM "GB_Model_1_1" UNION ALL SELECT "GB_Model_1_2"."KEY" AS "KEY", "GB_Model_1_2"."Score_0" AS "Score_0", "GB_Model_1_2"."Score_1" AS "Score_1", "GB_Model_1_2"."Score_2" AS "Score_2", "GB_Model_1_2"."Score_3" AS "Score_3" 
FROM "GB_Model_1_2" UNION ALL SELECT "GB_Model_1_3"."KEY" AS "KEY", "GB_Model_1_3"."Score_0" AS "Score_0", "GB_Model_1_3"."Score_1" AS "Score_1", "GB_Model_1_3"."Score_2" AS "Score_2", "GB_Model_1_3"."Score_3" AS "Score_3" 
FROM "GB_Model_1_3" UNION ALL SELECT "GB_Model_2_0"."KEY" AS "KEY", "GB_Model_2_0"."Score_0" AS "Score_0", "GB_Model_2_0"."Score_1" AS "Score_1", "GB_Model_2_0"."Score_2" AS "Score_2", "GB_Model_2_0"."Score_3" AS "Score_3" 
FROM "GB_Model_2_0" UNION ALL SELECT "GB_Model_2_1"."KEY" AS "KEY", "GB_Model_2_1"."Score_0" AS "Score_0", "GB_Model_2_1"."Score_1" AS "Score_1", "GB_Model_2_1"."Score_2" AS "Score_2", "GB_Model_2_1"."Score_3" AS "Score_3" 
FROM "GB_Model_2_1") AS "GB_esu_0") AS "GB_B0") AS "U"

-- Code For temporary table tmp_20180602143816_lh9_gb_b1 part 1. Create 


CREATE GLOBAL TEMPORARY TABLE tmp_20180602143816_lh9_gb_b1  (
	"KEY" BIGINT, 
	"Score_0" DOUBLE PRECISION, 
	"Score_1" DOUBLE PRECISION, 
	"Score_2" DOUBLE PRECISION, 
	"Score_3" DOUBLE PRECISION
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table tmp_20180602143816_lh9_gb_b1 part 2. Populate

INSERT INTO tmp_20180602143816_lh9_gb_b1 ("KEY", "Score_0", "Score_1", "Score_2", "Score_3") SELECT "U"."KEY", "U"."Score_0", "U"."Score_1", "U"."Score_2", "U"."Score_3" 
FROM (WITH "DT_node_lookup_10" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_46 <= CAST(-0.910733640193939 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_101 <= CAST(-1.085902690887451 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_21 <= CAST(-0.303088903427124 AS DOUBLE PRECISION)) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_59 <= CAST(1.010478973388672 AS DOUBLE PRECISION)) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= CAST(1.800718188285828 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_36 <= CAST(-1.705429553985596 AS DOUBLE PRECISION)) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_73 <= CAST(0.56087464094162 AS DOUBLE PRECISION)) THEN 13 ELSE 14 END END END AS node_id_2 
FROM tmp_20180602143816_bkn_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte_10 AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data_10" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS DOUBLE PRECISION) AS "E" 
FROM (SELECT 3 AS nid, CAST(-0.951557249261326 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_10 UNION ALL SELECT 4 AS nid, CAST(-0.917201800256245 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_10 UNION ALL SELECT 6 AS nid, CAST(1.886371078481502 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_10 UNION ALL SELECT 7 AS nid, CAST(2.09347051539906 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_10 UNION ALL SELECT 10 AS nid, CAST(2.264532069708662 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_10 UNION ALL SELECT 11 AS nid, CAST(-0.621388424315932 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_10 UNION ALL SELECT 13 AS nid, CAST(2.899862589464134 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_10 UNION ALL SELECT 14 AS nid, CAST(2.260601876028671 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_10) AS "Values"), 
"DT_Output_10" AS 
(SELECT "DT_node_lookup_10"."KEY" AS "KEY", "DT_node_lookup_10".node_id_2 AS node_id_2, "DT_node_data_10".nid AS nid, "DT_node_data_10"."E" AS "E" 
FROM "DT_node_lookup_10" LEFT OUTER JOIN "DT_node_data_10" ON "DT_node_lookup_10".node_id_2 = "DT_node_data_10".nid), 
"GB_Model_2_2" AS 
(SELECT "DT_Output_10"."KEY" AS "KEY", CAST(0.0 AS DOUBLE PRECISION) AS "Score_0", CAST(0.0 AS DOUBLE PRECISION) AS "Score_1", "DT_Output_10"."E" AS "Score_2", CAST(0.0 AS DOUBLE PRECISION) AS "Score_3" 
FROM "DT_Output_10"), 
"DT_node_lookup_11" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_53 <= CAST(1.564861536026001 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_46 <= CAST(0.461394906044006 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_71 <= CAST(1.657257318496704 AS DOUBLE PRECISION)) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_101 <= CAST(-0.036666817963123 AS DOUBLE PRECISION)) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= CAST(1.536516666412354 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_93 <= CAST(-0.449672788381577 AS DOUBLE PRECISION)) THEN 10 ELSE 11 END ELSE 12 END END AS node_id_2 
FROM tmp_20180602143816_bkn_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte_11 AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data_11" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS DOUBLE PRECISION) AS "E" 
FROM (SELECT 3 AS nid, CAST(-0.733190335224352 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_11 UNION ALL SELECT 4 AS nid, CAST(2.094561827333642 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_11 UNION ALL SELECT 6 AS nid, CAST(1.642100648321904 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_11 UNION ALL SELECT 7 AS nid, CAST(-0.961093256413566 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_11 UNION ALL SELECT 10 AS nid, CAST(1.851023728264323 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_11 UNION ALL SELECT 11 AS nid, CAST(1.860611523602563 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_11 UNION ALL SELECT 12 AS nid, CAST(1.979871043223806 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_11) AS "Values"), 
"DT_Output_11" AS 
(SELECT "DT_node_lookup_11"."KEY" AS "KEY", "DT_node_lookup_11".node_id_2 AS node_id_2, "DT_node_data_11".nid AS nid, "DT_node_data_11"."E" AS "E" 
FROM "DT_node_lookup_11" LEFT OUTER JOIN "DT_node_data_11" ON "DT_node_lookup_11".node_id_2 = "DT_node_data_11".nid), 
"GB_Model_2_3" AS 
(SELECT "DT_Output_11"."KEY" AS "KEY", CAST(0.0 AS DOUBLE PRECISION) AS "Score_0", CAST(0.0 AS DOUBLE PRECISION) AS "Score_1", CAST(0.0 AS DOUBLE PRECISION) AS "Score_2", "DT_Output_11"."E" AS "Score_3" 
FROM "DT_Output_11"), 
"DT_node_lookup_12" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_80 <= CAST(-0.155378341674805 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_28 <= CAST(2.14944052696228 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_76 <= CAST(-1.123494625091553 AS DOUBLE PRECISION)) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_57 <= CAST(-0.64836049079895 AS DOUBLE PRECISION)) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_78 <= CAST(-0.765346884727478 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_89 <= CAST(0.674658417701721 AS DOUBLE PRECISION)) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_63 <= CAST(0.13777482509613 AS DOUBLE PRECISION)) THEN 13 ELSE 14 END END END AS node_id_2 
FROM tmp_20180602143816_bkn_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte_12 AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data_12" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS DOUBLE PRECISION) AS "E" 
FROM (SELECT 3 AS nid, CAST(-0.963448555766358 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_12 UNION ALL SELECT 4 AS nid, CAST(-0.920999770472749 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_12 UNION ALL SELECT 6 AS nid, CAST(1.649091643658806 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_12 UNION ALL SELECT 7 AS nid, CAST(1.661326019279571 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_12 UNION ALL SELECT 10 AS nid, CAST(1.857151286528195 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_12 UNION ALL SELECT 11 AS nid, CAST(0.04238864894614 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_12 UNION ALL SELECT 13 AS nid, CAST(-0.772973568501061 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_12 UNION ALL SELECT 14 AS nid, CAST(0.887905062834014 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_12) AS "Values"), 
"DT_Output_12" AS 
(SELECT "DT_node_lookup_12"."KEY" AS "KEY", "DT_node_lookup_12".node_id_2 AS node_id_2, "DT_node_data_12".nid AS nid, "DT_node_data_12"."E" AS "E" 
FROM "DT_node_lookup_12" LEFT OUTER JOIN "DT_node_data_12" ON "DT_node_lookup_12".node_id_2 = "DT_node_data_12".nid), 
"GB_Model_3_0" AS 
(SELECT "DT_Output_12"."KEY" AS "KEY", "DT_Output_12"."E" AS "Score_0", CAST(0.0 AS DOUBLE PRECISION) AS "Score_1", CAST(0.0 AS DOUBLE PRECISION) AS "Score_2", CAST(0.0 AS DOUBLE PRECISION) AS "Score_3" 
FROM "DT_Output_12"), 
"DT_node_lookup_13" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_94 <= CAST(0.811809659004211 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_95 <= CAST(0.813712060451508 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_21 <= CAST(-1.708513975143432 AS DOUBLE PRECISION)) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_16 <= CAST(-0.34962522983551 AS DOUBLE PRECISION)) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_50 <= CAST(-0.216533839702606 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= CAST(1.157564878463745 AS DOUBLE PRECISION)) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_83 <= CAST(0.600631713867188 AS DOUBLE PRECISION)) THEN 13 ELSE 14 END END END AS node_id_2 
FROM tmp_20180602143816_bkn_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte_13 AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data_13" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS DOUBLE PRECISION) AS "E" 
FROM (SELECT 3 AS nid, CAST(2.001058956850558 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_13 UNION ALL SELECT 4 AS nid, CAST(-0.673822189603553 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_13 UNION ALL SELECT 6 AS nid, CAST(1.868696328296438 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_13 UNION ALL SELECT 7 AS nid, CAST(-0.217833401783174 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_13 UNION ALL SELECT 10 AS nid, CAST(-0.937529689131303 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_13 UNION ALL SELECT 11 AS nid, CAST(2.144768094205962 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_13 UNION ALL SELECT 13 AS nid, CAST(2.209279372926043 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_13 UNION ALL SELECT 14 AS nid, CAST(1.641883669950086 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_13) AS "Values"), 
"DT_Output_13" AS 
(SELECT "DT_node_lookup_13"."KEY" AS "KEY", "DT_node_lookup_13".node_id_2 AS node_id_2, "DT_node_data_13".nid AS nid, "DT_node_data_13"."E" AS "E" 
FROM "DT_node_lookup_13" LEFT OUTER JOIN "DT_node_data_13" ON "DT_node_lookup_13".node_id_2 = "DT_node_data_13".nid), 
"GB_Model_3_1" AS 
(SELECT "DT_Output_13"."KEY" AS "KEY", CAST(0.0 AS DOUBLE PRECISION) AS "Score_0", "DT_Output_13"."E" AS "Score_1", CAST(0.0 AS DOUBLE PRECISION) AS "Score_2", CAST(0.0 AS DOUBLE PRECISION) AS "Score_3" 
FROM "DT_Output_13"), 
"DT_node_lookup_14" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_46 <= CAST(-0.910733640193939 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_101 <= CAST(-1.085902690887451 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_89 <= CAST(-0.266898334026337 AS DOUBLE PRECISION)) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_101 <= CAST(1.398939847946167 AS DOUBLE PRECISION)) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_55 <= CAST(1.674030303955078 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= CAST(1.800718188285828 AS DOUBLE PRECISION)) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= CAST(-0.34149768948555 AS DOUBLE PRECISION)) THEN 13 ELSE 14 END END END AS node_id_2 
FROM tmp_20180602143816_bkn_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte_14 AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data_14" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS DOUBLE PRECISION) AS "E" 
FROM (SELECT 3 AS nid, CAST(-0.891321418942444 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_14 UNION ALL SELECT 4 AS nid, CAST(-0.922867275165787 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_14 UNION ALL SELECT 6 AS nid, CAST(1.622992385910989 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_14 UNION ALL SELECT 7 AS nid, CAST(1.760790899047244 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_14 UNION ALL SELECT 10 AS nid, CAST(-0.592792564418769 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_14 UNION ALL SELECT 11 AS nid, CAST(2.051741259906503 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_14 UNION ALL SELECT 13 AS nid, CAST(1.993914580953586 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_14 UNION ALL SELECT 14 AS nid, CAST(2.23863996588489 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_14) AS "Values"), 
"DT_Output_14" AS 
(SELECT "DT_node_lookup_14"."KEY" AS "KEY", "DT_node_lookup_14".node_id_2 AS node_id_2, "DT_node_data_14".nid AS nid, "DT_node_data_14"."E" AS "E" 
FROM "DT_node_lookup_14" LEFT OUTER JOIN "DT_node_data_14" ON "DT_node_lookup_14".node_id_2 = "DT_node_data_14".nid), 
"GB_Model_3_2" AS 
(SELECT "DT_Output_14"."KEY" AS "KEY", CAST(0.0 AS DOUBLE PRECISION) AS "Score_0", CAST(0.0 AS DOUBLE PRECISION) AS "Score_1", "DT_Output_14"."E" AS "Score_2", CAST(0.0 AS DOUBLE PRECISION) AS "Score_3" 
FROM "DT_Output_14"), 
"DT_node_lookup_15" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_22 <= CAST(1.097930073738098 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_101 <= CAST(-1.327006816864014 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_60 <= CAST(0.293053656816483 AS DOUBLE PRECISION)) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_16 <= CAST(1.270020008087158 AS DOUBLE PRECISION)) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_53 <= CAST(0.244987010955811 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_56 <= CAST(1.163903594017029 AS DOUBLE PRECISION)) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_86 <= CAST(0.135126486420631 AS DOUBLE PRECISION)) THEN 13 ELSE 14 END END END AS node_id_2 
FROM tmp_20180602143816_bkn_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte_15 AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data_15" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS DOUBLE PRECISION) AS "E" 
FROM (SELECT 3 AS nid, CAST(1.783335727102354 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_15 UNION ALL SELECT 4 AS nid, CAST(-0.161555283332198 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_15 UNION ALL SELECT 6 AS nid, CAST(-0.72917814804423 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_15 UNION ALL SELECT 7 AS nid, CAST(1.158120522932948 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_15 UNION ALL SELECT 10 AS nid, CAST(-0.922927483075822 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_15 UNION ALL SELECT 11 AS nid, CAST(1.590048042167672 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_15 UNION ALL SELECT 13 AS nid, CAST(1.625413659323858 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_15 UNION ALL SELECT 14 AS nid, CAST(2.278006556441756 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_15) AS "Values"), 
"DT_Output_15" AS 
(SELECT "DT_node_lookup_15"."KEY" AS "KEY", "DT_node_lookup_15".node_id_2 AS node_id_2, "DT_node_data_15".nid AS nid, "DT_node_data_15"."E" AS "E" 
FROM "DT_node_lookup_15" LEFT OUTER JOIN "DT_node_data_15" ON "DT_node_lookup_15".node_id_2 = "DT_node_data_15".nid), 
"GB_Model_3_3" AS 
(SELECT "DT_Output_15"."KEY" AS "KEY", CAST(0.0 AS DOUBLE PRECISION) AS "Score_0", CAST(0.0 AS DOUBLE PRECISION) AS "Score_1", CAST(0.0 AS DOUBLE PRECISION) AS "Score_2", "DT_Output_15"."E" AS "Score_3" 
FROM "DT_Output_15"), 
"DT_node_lookup_16" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_80 <= CAST(-0.155378341674805 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_28 <= CAST(2.14944052696228 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_76 <= CAST(-1.123494625091553 AS DOUBLE PRECISION)) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_36 <= CAST(0.014147825539112 AS DOUBLE PRECISION)) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_50 <= CAST(-0.184253960847855 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_51 <= CAST(0.717638790607452 AS DOUBLE PRECISION)) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= CAST(-0.735676765441894 AS DOUBLE PRECISION)) THEN 13 ELSE 14 END END END AS node_id_2 
FROM tmp_20180602143816_bkn_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte_16 AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data_16" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS DOUBLE PRECISION) AS "E" 
FROM (SELECT 3 AS nid, CAST(-0.951012864159958 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_16 UNION ALL SELECT 4 AS nid, CAST(-0.901927963424884 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_16 UNION ALL SELECT 6 AS nid, CAST(1.475198361441658 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_16 UNION ALL SELECT 7 AS nid, CAST(1.472147937888892 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_16 UNION ALL SELECT 10 AS nid, CAST(1.631718339942992 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_16 UNION ALL SELECT 11 AS nid, CAST(0.414987143022389 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_16 UNION ALL SELECT 13 AS nid, CAST(0.996064450479198 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_16 UNION ALL SELECT 14 AS nid, CAST(-0.73155688165495 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_16) AS "Values"), 
"DT_Output_16" AS 
(SELECT "DT_node_lookup_16"."KEY" AS "KEY", "DT_node_lookup_16".node_id_2 AS node_id_2, "DT_node_data_16".nid AS nid, "DT_node_data_16"."E" AS "E" 
FROM "DT_node_lookup_16" LEFT OUTER JOIN "DT_node_data_16" ON "DT_node_lookup_16".node_id_2 = "DT_node_data_16".nid), 
"GB_Model_4_0" AS 
(SELECT "DT_Output_16"."KEY" AS "KEY", "DT_Output_16"."E" AS "Score_0", CAST(0.0 AS DOUBLE PRECISION) AS "Score_1", CAST(0.0 AS DOUBLE PRECISION) AS "Score_2", CAST(0.0 AS DOUBLE PRECISION) AS "Score_3" 
FROM "DT_Output_16"), 
"DT_node_lookup_17" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_94 <= CAST(0.811809659004211 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_95 <= CAST(0.813712060451508 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_21 <= CAST(-1.708513975143432 AS DOUBLE PRECISION)) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_16 <= CAST(-0.34962522983551 AS DOUBLE PRECISION)) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_50 <= CAST(-0.216533839702606 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_100 <= CAST(-0.883209824562073 AS DOUBLE PRECISION)) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_83 <= CAST(0.600631713867188 AS DOUBLE PRECISION)) THEN 13 ELSE 14 END END END AS node_id_2 
FROM tmp_20180602143816_bkn_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte_17 AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data_17" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS DOUBLE PRECISION) AS "E" 
FROM (SELECT 3 AS nid, CAST(1.699258436825493 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_17 UNION ALL SELECT 4 AS nid, CAST(-0.640238890503798 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_17 UNION ALL SELECT 6 AS nid, CAST(1.633089540333288 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_17 UNION ALL SELECT 7 AS nid, CAST(-0.206959693224628 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_17 UNION ALL SELECT 10 AS nid, CAST(1.796161277100081 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_17 UNION ALL SELECT 11 AS nid, CAST(-0.911925892640828 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_17 UNION ALL SELECT 13 AS nid, CAST(1.871018155061414 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_17 UNION ALL SELECT 14 AS nid, CAST(1.461297323323793 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_17) AS "Values"), 
"DT_Output_17" AS 
(SELECT "DT_node_lookup_17"."KEY" AS "KEY", "DT_node_lookup_17".node_id_2 AS node_id_2, "DT_node_data_17".nid AS nid, "DT_node_data_17"."E" AS "E" 
FROM "DT_node_lookup_17" LEFT OUTER JOIN "DT_node_data_17" ON "DT_node_lookup_17".node_id_2 = "DT_node_data_17".nid), 
"GB_Model_4_1" AS 
(SELECT "DT_Output_17"."KEY" AS "KEY", CAST(0.0 AS DOUBLE PRECISION) AS "Score_0", "DT_Output_17"."E" AS "Score_1", CAST(0.0 AS DOUBLE PRECISION) AS "Score_2", CAST(0.0 AS DOUBLE PRECISION) AS "Score_3" 
FROM "DT_Output_17"), 
"DT_node_lookup_18" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_46 <= CAST(-0.910733640193939 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_101 <= CAST(-1.085902690887451 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_54 <= CAST(0.400055408477783 AS DOUBLE PRECISION)) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_26 <= CAST(-0.944790005683899 AS DOUBLE PRECISION)) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_34 <= CAST(1.547230243682861 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_15 <= CAST(-2.116902351379394 AS DOUBLE PRECISION)) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_30 <= CAST(-0.77510929107666 AS DOUBLE PRECISION)) THEN 13 ELSE 14 END END END AS node_id_2 
FROM tmp_20180602143816_bkn_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte_18 AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data_18" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS DOUBLE PRECISION) AS "E" 
FROM (SELECT 3 AS nid, CAST(-0.898367376630051 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_18 UNION ALL SELECT 4 AS nid, CAST(-0.868371209018193 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_18 UNION ALL SELECT 6 AS nid, CAST(1.517959788350448 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_18 UNION ALL SELECT 7 AS nid, CAST(1.43472695233204 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_18 UNION ALL SELECT 10 AS nid, CAST(1.885945485908208 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_18 UNION ALL SELECT 11 AS nid, CAST(-0.567097144462804 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_18 UNION ALL SELECT 13 AS nid, CAST(1.775058319597144 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_18 UNION ALL SELECT 14 AS nid, CAST(2.175612107364576 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_18) AS "Values"), 
"DT_Output_18" AS 
(SELECT "DT_node_lookup_18"."KEY" AS "KEY", "DT_node_lookup_18".node_id_2 AS node_id_2, "DT_node_data_18".nid AS nid, "DT_node_data_18"."E" AS "E" 
FROM "DT_node_lookup_18" LEFT OUTER JOIN "DT_node_data_18" ON "DT_node_lookup_18".node_id_2 = "DT_node_data_18".nid), 
"GB_Model_4_2" AS 
(SELECT "DT_Output_18"."KEY" AS "KEY", CAST(0.0 AS DOUBLE PRECISION) AS "Score_0", CAST(0.0 AS DOUBLE PRECISION) AS "Score_1", "DT_Output_18"."E" AS "Score_2", CAST(0.0 AS DOUBLE PRECISION) AS "Score_3" 
FROM "DT_Output_18"), 
"DT_node_lookup_19" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_53 <= CAST(1.564861536026001 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_46 <= CAST(0.461394906044006 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_71 <= CAST(1.657257318496704 AS DOUBLE PRECISION)) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_101 <= CAST(-0.036666817963123 AS DOUBLE PRECISION)) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= CAST(-0.534492611885071 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_79 <= CAST(0.03279522806406 AS DOUBLE PRECISION)) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= CAST(0.020991772413254 AS DOUBLE PRECISION)) THEN 13 ELSE 14 END END END AS node_id_2 
FROM tmp_20180602143816_bkn_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte_19 AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data_19" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS DOUBLE PRECISION) AS "E" 
FROM (SELECT 3 AS nid, CAST(-0.677045295452347 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_19 UNION ALL SELECT 4 AS nid, CAST(1.705655781684108 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_19 UNION ALL SELECT 6 AS nid, CAST(1.280614302366612 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_19 UNION ALL SELECT 7 AS nid, CAST(-0.932026768835278 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_19 UNION ALL SELECT 10 AS nid, CAST(1.445665116427606 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_19 UNION ALL SELECT 11 AS nid, CAST(1.411221347266646 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_19 UNION ALL SELECT 13 AS nid, CAST(1.53460099297659 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_19 UNION ALL SELECT 14 AS nid, CAST(1.558472183411446 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_19) AS "Values"), 
"DT_Output_19" AS 
(SELECT "DT_node_lookup_19"."KEY" AS "KEY", "DT_node_lookup_19".node_id_2 AS node_id_2, "DT_node_data_19".nid AS nid, "DT_node_data_19"."E" AS "E" 
FROM "DT_node_lookup_19" LEFT OUTER JOIN "DT_node_data_19" ON "DT_node_lookup_19".node_id_2 = "DT_node_data_19".nid), 
"GB_Model_4_3" AS 
(SELECT "DT_Output_19"."KEY" AS "KEY", CAST(0.0 AS DOUBLE PRECISION) AS "Score_0", CAST(0.0 AS DOUBLE PRECISION) AS "Score_1", CAST(0.0 AS DOUBLE PRECISION) AS "Score_2", "DT_Output_19"."E" AS "Score_3" 
FROM "DT_Output_19")
 SELECT "GB_B1"."KEY", "GB_B1"."Score_0", "GB_B1"."Score_1", "GB_B1"."Score_2", "GB_B1"."Score_3" 
FROM (SELECT "GB_esu_1"."KEY" AS "KEY", "GB_esu_1"."Score_0" AS "Score_0", "GB_esu_1"."Score_1" AS "Score_1", "GB_esu_1"."Score_2" AS "Score_2", "GB_esu_1"."Score_3" AS "Score_3" 
FROM (SELECT "GB_Model_2_2"."KEY" AS "KEY", "GB_Model_2_2"."Score_0" AS "Score_0", "GB_Model_2_2"."Score_1" AS "Score_1", "GB_Model_2_2"."Score_2" AS "Score_2", "GB_Model_2_2"."Score_3" AS "Score_3" 
FROM "GB_Model_2_2" UNION ALL SELECT "GB_Model_2_3"."KEY" AS "KEY", "GB_Model_2_3"."Score_0" AS "Score_0", "GB_Model_2_3"."Score_1" AS "Score_1", "GB_Model_2_3"."Score_2" AS "Score_2", "GB_Model_2_3"."Score_3" AS "Score_3" 
FROM "GB_Model_2_3" UNION ALL SELECT "GB_Model_3_0"."KEY" AS "KEY", "GB_Model_3_0"."Score_0" AS "Score_0", "GB_Model_3_0"."Score_1" AS "Score_1", "GB_Model_3_0"."Score_2" AS "Score_2", "GB_Model_3_0"."Score_3" AS "Score_3" 
FROM "GB_Model_3_0" UNION ALL SELECT "GB_Model_3_1"."KEY" AS "KEY", "GB_Model_3_1"."Score_0" AS "Score_0", "GB_Model_3_1"."Score_1" AS "Score_1", "GB_Model_3_1"."Score_2" AS "Score_2", "GB_Model_3_1"."Score_3" AS "Score_3" 
FROM "GB_Model_3_1" UNION ALL SELECT "GB_Model_3_2"."KEY" AS "KEY", "GB_Model_3_2"."Score_0" AS "Score_0", "GB_Model_3_2"."Score_1" AS "Score_1", "GB_Model_3_2"."Score_2" AS "Score_2", "GB_Model_3_2"."Score_3" AS "Score_3" 
FROM "GB_Model_3_2" UNION ALL SELECT "GB_Model_3_3"."KEY" AS "KEY", "GB_Model_3_3"."Score_0" AS "Score_0", "GB_Model_3_3"."Score_1" AS "Score_1", "GB_Model_3_3"."Score_2" AS "Score_2", "GB_Model_3_3"."Score_3" AS "Score_3" 
FROM "GB_Model_3_3" UNION ALL SELECT "GB_Model_4_0"."KEY" AS "KEY", "GB_Model_4_0"."Score_0" AS "Score_0", "GB_Model_4_0"."Score_1" AS "Score_1", "GB_Model_4_0"."Score_2" AS "Score_2", "GB_Model_4_0"."Score_3" AS "Score_3" 
FROM "GB_Model_4_0" UNION ALL SELECT "GB_Model_4_1"."KEY" AS "KEY", "GB_Model_4_1"."Score_0" AS "Score_0", "GB_Model_4_1"."Score_1" AS "Score_1", "GB_Model_4_1"."Score_2" AS "Score_2", "GB_Model_4_1"."Score_3" AS "Score_3" 
FROM "GB_Model_4_1" UNION ALL SELECT "GB_Model_4_2"."KEY" AS "KEY", "GB_Model_4_2"."Score_0" AS "Score_0", "GB_Model_4_2"."Score_1" AS "Score_1", "GB_Model_4_2"."Score_2" AS "Score_2", "GB_Model_4_2"."Score_3" AS "Score_3" 
FROM "GB_Model_4_2" UNION ALL SELECT "GB_Model_4_3"."KEY" AS "KEY", "GB_Model_4_3"."Score_0" AS "Score_0", "GB_Model_4_3"."Score_1" AS "Score_1", "GB_Model_4_3"."Score_2" AS "Score_2", "GB_Model_4_3"."Score_3" AS "Score_3" 
FROM "GB_Model_4_3") AS "GB_esu_1") AS "GB_B1") AS "U"

-- Code For temporary table tmp_20180602143816_lrg_gb_b2 part 1. Create 


CREATE GLOBAL TEMPORARY TABLE tmp_20180602143816_lrg_gb_b2  (
	"KEY" BIGINT, 
	"Score_0" DOUBLE PRECISION, 
	"Score_1" DOUBLE PRECISION, 
	"Score_2" DOUBLE PRECISION, 
	"Score_3" DOUBLE PRECISION
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table tmp_20180602143816_lrg_gb_b2 part 2. Populate

INSERT INTO tmp_20180602143816_lrg_gb_b2 ("KEY", "Score_0", "Score_1", "Score_2", "Score_3") SELECT "U"."KEY", "U"."Score_0", "U"."Score_1", "U"."Score_2", "U"."Score_3" 
FROM (WITH "DT_node_lookup_20" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_80 <= CAST(-0.155378341674805 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= CAST(-1.84721565246582 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_16 <= CAST(0.640664398670196 AS DOUBLE PRECISION)) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_76 <= CAST(-1.123494625091553 AS DOUBLE PRECISION)) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_94 <= CAST(-0.057808898389339 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_22 <= CAST(0.843445420265198 AS DOUBLE PRECISION)) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_26 <= CAST(0.836352586746216 AS DOUBLE PRECISION)) THEN 13 ELSE 14 END END END AS node_id_2 
FROM tmp_20180602143816_bkn_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte_20 AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data_20" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS DOUBLE PRECISION) AS "E" 
FROM (SELECT 3 AS nid, CAST(1.342619319620488 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_20 UNION ALL SELECT 4 AS nid, CAST(1.335345844362 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_20 UNION ALL SELECT 6 AS nid, CAST(-0.940638159338519 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_20 UNION ALL SELECT 7 AS nid, CAST(-0.88576681879053 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_20 UNION ALL SELECT 10 AS nid, CAST(1.22185185250721 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_20 UNION ALL SELECT 11 AS nid, CAST(-0.948563803059343 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_20 UNION ALL SELECT 13 AS nid, CAST(-0.932626632072568 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_20 UNION ALL SELECT 14 AS nid, CAST(1.21327282256041 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_20) AS "Values"), 
"DT_Output_20" AS 
(SELECT "DT_node_lookup_20"."KEY" AS "KEY", "DT_node_lookup_20".node_id_2 AS node_id_2, "DT_node_data_20".nid AS nid, "DT_node_data_20"."E" AS "E" 
FROM "DT_node_lookup_20" LEFT OUTER JOIN "DT_node_data_20" ON "DT_node_lookup_20".node_id_2 = "DT_node_data_20".nid), 
"GB_Model_5_0" AS 
(SELECT "DT_Output_20"."KEY" AS "KEY", "DT_Output_20"."E" AS "Score_0", CAST(0.0 AS DOUBLE PRECISION) AS "Score_1", CAST(0.0 AS DOUBLE PRECISION) AS "Score_2", CAST(0.0 AS DOUBLE PRECISION) AS "Score_3" 
FROM "DT_Output_20"), 
"DT_node_lookup_21" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_94 <= CAST(0.811809659004211 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_98 <= CAST(-1.460758686065674 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_47 <= CAST(1.881611347198486 AS DOUBLE PRECISION)) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_75 <= CAST(1.632202625274658 AS DOUBLE PRECISION)) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_50 <= CAST(-0.216533839702606 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_76 <= CAST(1.538803935050964 AS DOUBLE PRECISION)) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_86 <= CAST(0.399366021156311 AS DOUBLE PRECISION)) THEN 13 ELSE 14 END END END AS node_id_2 
FROM tmp_20180602143816_bkn_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte_21 AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data_21" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS DOUBLE PRECISION) AS "E" 
FROM (SELECT 3 AS nid, CAST(1.382124341582993 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_21 UNION ALL SELECT 4 AS nid, CAST(-0.93877744773968 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_21 UNION ALL SELECT 6 AS nid, CAST(-0.477557635329872 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_21 UNION ALL SELECT 7 AS nid, CAST(1.15337849016909 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_21 UNION ALL SELECT 10 AS nid, CAST(-0.889635438885889 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_21 UNION ALL SELECT 11 AS nid, CAST(1.565277908122939 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_21 UNION ALL SELECT 13 AS nid, CAST(1.638925350811039 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_21 UNION ALL SELECT 14 AS nid, CAST(1.338656161187888 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_21) AS "Values"), 
"DT_Output_21" AS 
(SELECT "DT_node_lookup_21"."KEY" AS "KEY", "DT_node_lookup_21".node_id_2 AS node_id_2, "DT_node_data_21".nid AS nid, "DT_node_data_21"."E" AS "E" 
FROM "DT_node_lookup_21" LEFT OUTER JOIN "DT_node_data_21" ON "DT_node_lookup_21".node_id_2 = "DT_node_data_21".nid), 
"GB_Model_5_1" AS 
(SELECT "DT_Output_21"."KEY" AS "KEY", CAST(0.0 AS DOUBLE PRECISION) AS "Score_0", "DT_Output_21"."E" AS "Score_1", CAST(0.0 AS DOUBLE PRECISION) AS "Score_2", CAST(0.0 AS DOUBLE PRECISION) AS "Score_3" 
FROM "DT_Output_21"), 
"DT_node_lookup_22" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_46 <= CAST(-0.910733640193939 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_101 <= CAST(-1.085902690887451 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_26 <= CAST(0.753207087516785 AS DOUBLE PRECISION)) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_75 <= CAST(1.484444379806518 AS DOUBLE PRECISION)) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_36 <= CAST(-1.705429553985596 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_85 <= CAST(-0.002150639891624 AS DOUBLE PRECISION)) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_55 <= CAST(1.674030303955078 AS DOUBLE PRECISION)) THEN 13 ELSE 14 END END END AS node_id_2 
FROM tmp_20180602143816_bkn_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte_22 AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data_22" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS DOUBLE PRECISION) AS "E" 
FROM (SELECT 3 AS nid, CAST(-0.850963079915566 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_22 UNION ALL SELECT 4 AS nid, CAST(-0.880083239584294 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_22 UNION ALL SELECT 6 AS nid, CAST(1.307514525101174 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_22 UNION ALL SELECT 7 AS nid, CAST(1.435708326345828 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_22 UNION ALL SELECT 10 AS nid, CAST(1.840768230983524 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_22 UNION ALL SELECT 11 AS nid, CAST(1.832824707396867 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_22 UNION ALL SELECT 13 AS nid, CAST(-0.544950709422414 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_22 UNION ALL SELECT 14 AS nid, CAST(1.690176354009776 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_22) AS "Values"), 
"DT_Output_22" AS 
(SELECT "DT_node_lookup_22"."KEY" AS "KEY", "DT_node_lookup_22".node_id_2 AS node_id_2, "DT_node_data_22".nid AS nid, "DT_node_data_22"."E" AS "E" 
FROM "DT_node_lookup_22" LEFT OUTER JOIN "DT_node_data_22" ON "DT_node_lookup_22".node_id_2 = "DT_node_data_22".nid), 
"GB_Model_5_2" AS 
(SELECT "DT_Output_22"."KEY" AS "KEY", CAST(0.0 AS DOUBLE PRECISION) AS "Score_0", CAST(0.0 AS DOUBLE PRECISION) AS "Score_1", "DT_Output_22"."E" AS "Score_2", CAST(0.0 AS DOUBLE PRECISION) AS "Score_3" 
FROM "DT_Output_22"), 
"DT_node_lookup_23" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_22 <= CAST(1.097930073738098 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_101 <= CAST(-1.327006816864014 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_60 <= CAST(0.293053656816483 AS DOUBLE PRECISION)) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_16 <= CAST(1.619352579116821 AS DOUBLE PRECISION)) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_53 <= CAST(0.244987010955811 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_25 <= CAST(0.823129951953888 AS DOUBLE PRECISION)) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_98 <= CAST(-1.103309154510498 AS DOUBLE PRECISION)) THEN 13 ELSE 14 END END END AS node_id_2 
FROM tmp_20180602143816_bkn_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte_23 AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data_23" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS DOUBLE PRECISION) AS "E" 
FROM (SELECT 3 AS nid, CAST(1.417567965317572 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_23 UNION ALL SELECT 4 AS nid, CAST(-0.124532462909972 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_23 UNION ALL SELECT 6 AS nid, CAST(-0.586558106308841 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_23 UNION ALL SELECT 7 AS nid, CAST(1.558041284519321 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_23 UNION ALL SELECT 10 AS nid, CAST(-0.884968138618836 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_23 UNION ALL SELECT 11 AS nid, CAST(1.302885338052693 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_23 UNION ALL SELECT 13 AS nid, CAST(2.387779467499307 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_23 UNION ALL SELECT 14 AS nid, CAST(1.378561285784344 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_23) AS "Values"), 
"DT_Output_23" AS 
(SELECT "DT_node_lookup_23"."KEY" AS "KEY", "DT_node_lookup_23".node_id_2 AS node_id_2, "DT_node_data_23".nid AS nid, "DT_node_data_23"."E" AS "E" 
FROM "DT_node_lookup_23" LEFT OUTER JOIN "DT_node_data_23" ON "DT_node_lookup_23".node_id_2 = "DT_node_data_23".nid), 
"GB_Model_5_3" AS 
(SELECT "DT_Output_23"."KEY" AS "KEY", CAST(0.0 AS DOUBLE PRECISION) AS "Score_0", CAST(0.0 AS DOUBLE PRECISION) AS "Score_1", CAST(0.0 AS DOUBLE PRECISION) AS "Score_2", "DT_Output_23"."E" AS "Score_3" 
FROM "DT_Output_23"), 
"DT_node_lookup_24" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_80 <= CAST(-0.155378341674805 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_28 <= CAST(2.14944052696228 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_76 <= CAST(-1.123494625091553 AS DOUBLE PRECISION)) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_19 <= CAST(-0.164418339729309 AS DOUBLE PRECISION)) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_50 <= CAST(-0.184253960847855 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_46 <= CAST(1.195999979972839 AS DOUBLE PRECISION)) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= CAST(-0.735676765441894 AS DOUBLE PRECISION)) THEN 13 ELSE 14 END END END AS node_id_2 
FROM tmp_20180602143816_bkn_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte_24 AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data_24" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS DOUBLE PRECISION) AS "E" 
FROM (SELECT 3 AS nid, CAST(-0.930498821014903 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_24 UNION ALL SELECT 4 AS nid, CAST(-0.872452861391603 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_24 UNION ALL SELECT 6 AS nid, CAST(1.241330380497948 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_24 UNION ALL SELECT 7 AS nid, CAST(1.235509480770766 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_24 UNION ALL SELECT 10 AS nid, CAST(1.189165191985788 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_24 UNION ALL SELECT 11 AS nid, CAST(-0.91660978158722 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_24 UNION ALL SELECT 13 AS nid, CAST(0.852409632172049 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_24 UNION ALL SELECT 14 AS nid, CAST(-0.691453849891785 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_24) AS "Values"), 
"DT_Output_24" AS 
(SELECT "DT_node_lookup_24"."KEY" AS "KEY", "DT_node_lookup_24".node_id_2 AS node_id_2, "DT_node_data_24".nid AS nid, "DT_node_data_24"."E" AS "E" 
FROM "DT_node_lookup_24" LEFT OUTER JOIN "DT_node_data_24" ON "DT_node_lookup_24".node_id_2 = "DT_node_data_24".nid), 
"GB_Model_6_0" AS 
(SELECT "DT_Output_24"."KEY" AS "KEY", "DT_Output_24"."E" AS "Score_0", CAST(0.0 AS DOUBLE PRECISION) AS "Score_1", CAST(0.0 AS DOUBLE PRECISION) AS "Score_2", CAST(0.0 AS DOUBLE PRECISION) AS "Score_3" 
FROM "DT_Output_24"), 
"DT_node_lookup_25" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_46 <= CAST(-0.227315336465836 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_101 <= CAST(-1.002084493637085 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_56 <= CAST(0.501342058181763 AS DOUBLE PRECISION)) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_76 <= CAST(-1.079550266265869 AS DOUBLE PRECISION)) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_20 <= CAST(-0.759210050106049 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= CAST(-1.045132398605347 AS DOUBLE PRECISION)) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_36 <= CAST(-1.124365091323852 AS DOUBLE PRECISION)) THEN 13 ELSE 14 END END END AS node_id_2 
FROM tmp_20180602143816_bkn_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte_25 AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data_25" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS DOUBLE PRECISION) AS "E" 
FROM (SELECT 3 AS nid, CAST(1.307606246243844 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_25 UNION ALL SELECT 4 AS nid, CAST(-0.902914892386491 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_25 UNION ALL SELECT 6 AS nid, CAST(-1.011744993928112 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_25 UNION ALL SELECT 7 AS nid, CAST(-0.895292047705748 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_25 UNION ALL SELECT 10 AS nid, CAST(-0.913532250963216 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_25 UNION ALL SELECT 11 AS nid, CAST(1.608254253826156 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_25 UNION ALL SELECT 13 AS nid, CAST(1.487339175398834 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_25 UNION ALL SELECT 14 AS nid, CAST(-0.179931428648549 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_25) AS "Values"), 
"DT_Output_25" AS 
(SELECT "DT_node_lookup_25"."KEY" AS "KEY", "DT_node_lookup_25".node_id_2 AS node_id_2, "DT_node_data_25".nid AS nid, "DT_node_data_25"."E" AS "E" 
FROM "DT_node_lookup_25" LEFT OUTER JOIN "DT_node_data_25" ON "DT_node_lookup_25".node_id_2 = "DT_node_data_25".nid), 
"GB_Model_6_1" AS 
(SELECT "DT_Output_25"."KEY" AS "KEY", CAST(0.0 AS DOUBLE PRECISION) AS "Score_0", "DT_Output_25"."E" AS "Score_1", CAST(0.0 AS DOUBLE PRECISION) AS "Score_2", CAST(0.0 AS DOUBLE PRECISION) AS "Score_3" 
FROM "DT_Output_25"), 
"DT_node_lookup_26" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_46 <= CAST(-0.910733640193939 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_101 <= CAST(-1.085902690887451 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_72 <= CAST(0.13266783952713 AS DOUBLE PRECISION)) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_26 <= CAST(-0.944790005683899 AS DOUBLE PRECISION)) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= CAST(1.800718188285828 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_34 <= CAST(1.547230243682861 AS DOUBLE PRECISION)) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_71 <= CAST(-0.274934262037277 AS DOUBLE PRECISION)) THEN 13 ELSE 14 END END END AS node_id_2 
FROM tmp_20180602143816_bkn_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte_26 AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data_26" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS DOUBLE PRECISION) AS "E" 
FROM (SELECT 3 AS nid, CAST(-0.835248999580481 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_26 UNION ALL SELECT 4 AS nid, CAST(-0.861898821203316 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_26 UNION ALL SELECT 6 AS nid, CAST(1.283555007619308 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_26 UNION ALL SELECT 7 AS nid, CAST(1.199212107991705 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_26 UNION ALL SELECT 10 AS nid, CAST(-0.518352560453086 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_26 UNION ALL SELECT 11 AS nid, CAST(1.617197946728196 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_26 UNION ALL SELECT 13 AS nid, CAST(1.405487469814837 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_26 UNION ALL SELECT 14 AS nid, CAST(1.889773813283516 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_26) AS "Values"), 
"DT_Output_26" AS 
(SELECT "DT_node_lookup_26"."KEY" AS "KEY", "DT_node_lookup_26".node_id_2 AS node_id_2, "DT_node_data_26".nid AS nid, "DT_node_data_26"."E" AS "E" 
FROM "DT_node_lookup_26" LEFT OUTER JOIN "DT_node_data_26" ON "DT_node_lookup_26".node_id_2 = "DT_node_data_26".nid), 
"GB_Model_6_2" AS 
(SELECT "DT_Output_26"."KEY" AS "KEY", CAST(0.0 AS DOUBLE PRECISION) AS "Score_0", CAST(0.0 AS DOUBLE PRECISION) AS "Score_1", "DT_Output_26"."E" AS "Score_2", CAST(0.0 AS DOUBLE PRECISION) AS "Score_3" 
FROM "DT_Output_26"), 
"DT_node_lookup_27" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_46 <= CAST(0.93085503578186 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_44 <= CAST(1.556024551391602 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_53 <= CAST(1.564861536026001 AS DOUBLE PRECISION)) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_62 <= CAST(1.414885640144348 AS DOUBLE PRECISION)) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_101 <= CAST(-0.029002565890551 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_39 <= CAST(0.778746068477631 AS DOUBLE PRECISION)) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_71 <= CAST(1.756631851196289 AS DOUBLE PRECISION)) THEN 13 ELSE 14 END END END AS node_id_2 
FROM tmp_20180602143816_bkn_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte_27 AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data_27" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS DOUBLE PRECISION) AS "E" 
FROM (SELECT 3 AS nid, CAST(-0.537727806214214 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_27 UNION ALL SELECT 4 AS nid, CAST(1.257065191004111 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_27 UNION ALL SELECT 6 AS nid, CAST(1.657938287232098 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_27 UNION ALL SELECT 7 AS nid, CAST(-0.88643775325863 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_27 UNION ALL SELECT 10 AS nid, CAST(1.305621871468404 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_27 UNION ALL SELECT 11 AS nid, CAST(1.745955206843023 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_27 UNION ALL SELECT 13 AS nid, CAST(-0.916488848563637 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_27 UNION ALL SELECT 14 AS nid, CAST(1.267278593550534 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_27) AS "Values"), 
"DT_Output_27" AS 
(SELECT "DT_node_lookup_27"."KEY" AS "KEY", "DT_node_lookup_27".node_id_2 AS node_id_2, "DT_node_data_27".nid AS nid, "DT_node_data_27"."E" AS "E" 
FROM "DT_node_lookup_27" LEFT OUTER JOIN "DT_node_data_27" ON "DT_node_lookup_27".node_id_2 = "DT_node_data_27".nid), 
"GB_Model_6_3" AS 
(SELECT "DT_Output_27"."KEY" AS "KEY", CAST(0.0 AS DOUBLE PRECISION) AS "Score_0", CAST(0.0 AS DOUBLE PRECISION) AS "Score_1", CAST(0.0 AS DOUBLE PRECISION) AS "Score_2", "DT_Output_27"."E" AS "Score_3" 
FROM "DT_Output_27"), 
"DT_node_lookup_28" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_80 <= CAST(-0.155378341674805 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= CAST(-1.84721565246582 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_22 <= CAST(-0.642440915107727 AS DOUBLE PRECISION)) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_76 <= CAST(-1.123494625091553 AS DOUBLE PRECISION)) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_78 <= CAST(-0.765346884727478 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= CAST(-1.726162672042847 AS DOUBLE PRECISION)) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_67 <= CAST(-0.669438481330872 AS DOUBLE PRECISION)) THEN 13 ELSE 14 END END END AS node_id_2 
FROM tmp_20180602143816_bkn_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte_28 AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data_28" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS DOUBLE PRECISION) AS "E" 
FROM (SELECT 3 AS nid, CAST(1.151859973267545 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_28 UNION ALL SELECT 4 AS nid, CAST(1.162692300035834 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_28 UNION ALL SELECT 6 AS nid, CAST(-0.922449137515556 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_28 UNION ALL SELECT 7 AS nid, CAST(-0.858653218482242 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_28 UNION ALL SELECT 10 AS nid, CAST(-0.902109342289585 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_28 UNION ALL SELECT 11 AS nid, CAST(1.246500717376577 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_28 UNION ALL SELECT 13 AS nid, CAST(1.029460879176859 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_28 UNION ALL SELECT 14 AS nid, CAST(-0.417509732170978 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_28) AS "Values"), 
"DT_Output_28" AS 
(SELECT "DT_node_lookup_28"."KEY" AS "KEY", "DT_node_lookup_28".node_id_2 AS node_id_2, "DT_node_data_28".nid AS nid, "DT_node_data_28"."E" AS "E" 
FROM "DT_node_lookup_28" LEFT OUTER JOIN "DT_node_data_28" ON "DT_node_lookup_28".node_id_2 = "DT_node_data_28".nid), 
"GB_Model_7_0" AS 
(SELECT "DT_Output_28"."KEY" AS "KEY", "DT_Output_28"."E" AS "Score_0", CAST(0.0 AS DOUBLE PRECISION) AS "Score_1", CAST(0.0 AS DOUBLE PRECISION) AS "Score_2", CAST(0.0 AS DOUBLE PRECISION) AS "Score_3" 
FROM "DT_Output_28"), 
"DT_node_lookup_29" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_70 <= CAST(-0.612145900726318 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_94 <= CAST(2.010139465332031 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= CAST(-0.239798903465271 AS DOUBLE PRECISION)) THEN 3 ELSE 4 END ELSE 5 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_96 <= CAST(-0.200350672006607 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= CAST(-1.846571683883667 AS DOUBLE PRECISION)) THEN 8 ELSE 9 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_69 <= CAST(-0.649189829826355 AS DOUBLE PRECISION)) THEN 11 ELSE 12 END END END AS node_id_2 
FROM tmp_20180602143816_bkn_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte_29 AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data_29" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS DOUBLE PRECISION) AS "E" 
FROM (SELECT 3 AS nid, CAST(-0.947878630422354 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_29 UNION ALL SELECT 4 AS nid, CAST(-0.873521359148442 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_29 UNION ALL SELECT 5 AS nid, CAST(1.375120896331633 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_29 UNION ALL SELECT 8 AS nid, CAST(1.565513873739039 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_29 UNION ALL SELECT 9 AS nid, CAST(-0.618006486194882 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_29 UNION ALL SELECT 11 AS nid, CAST(1.430936964048758 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_29 UNION ALL SELECT 12 AS nid, CAST(0.328989085398777 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_29) AS "Values"), 
"DT_Output_29" AS 
(SELECT "DT_node_lookup_29"."KEY" AS "KEY", "DT_node_lookup_29".node_id_2 AS node_id_2, "DT_node_data_29".nid AS nid, "DT_node_data_29"."E" AS "E" 
FROM "DT_node_lookup_29" LEFT OUTER JOIN "DT_node_data_29" ON "DT_node_lookup_29".node_id_2 = "DT_node_data_29".nid), 
"GB_Model_7_1" AS 
(SELECT "DT_Output_29"."KEY" AS "KEY", CAST(0.0 AS DOUBLE PRECISION) AS "Score_0", "DT_Output_29"."E" AS "Score_1", CAST(0.0 AS DOUBLE PRECISION) AS "Score_2", CAST(0.0 AS DOUBLE PRECISION) AS "Score_3" 
FROM "DT_Output_29")
 SELECT "GB_B2"."KEY", "GB_B2"."Score_0", "GB_B2"."Score_1", "GB_B2"."Score_2", "GB_B2"."Score_3" 
FROM (SELECT "GB_esu_2"."KEY" AS "KEY", "GB_esu_2"."Score_0" AS "Score_0", "GB_esu_2"."Score_1" AS "Score_1", "GB_esu_2"."Score_2" AS "Score_2", "GB_esu_2"."Score_3" AS "Score_3" 
FROM (SELECT "GB_Model_5_0"."KEY" AS "KEY", "GB_Model_5_0"."Score_0" AS "Score_0", "GB_Model_5_0"."Score_1" AS "Score_1", "GB_Model_5_0"."Score_2" AS "Score_2", "GB_Model_5_0"."Score_3" AS "Score_3" 
FROM "GB_Model_5_0" UNION ALL SELECT "GB_Model_5_1"."KEY" AS "KEY", "GB_Model_5_1"."Score_0" AS "Score_0", "GB_Model_5_1"."Score_1" AS "Score_1", "GB_Model_5_1"."Score_2" AS "Score_2", "GB_Model_5_1"."Score_3" AS "Score_3" 
FROM "GB_Model_5_1" UNION ALL SELECT "GB_Model_5_2"."KEY" AS "KEY", "GB_Model_5_2"."Score_0" AS "Score_0", "GB_Model_5_2"."Score_1" AS "Score_1", "GB_Model_5_2"."Score_2" AS "Score_2", "GB_Model_5_2"."Score_3" AS "Score_3" 
FROM "GB_Model_5_2" UNION ALL SELECT "GB_Model_5_3"."KEY" AS "KEY", "GB_Model_5_3"."Score_0" AS "Score_0", "GB_Model_5_3"."Score_1" AS "Score_1", "GB_Model_5_3"."Score_2" AS "Score_2", "GB_Model_5_3"."Score_3" AS "Score_3" 
FROM "GB_Model_5_3" UNION ALL SELECT "GB_Model_6_0"."KEY" AS "KEY", "GB_Model_6_0"."Score_0" AS "Score_0", "GB_Model_6_0"."Score_1" AS "Score_1", "GB_Model_6_0"."Score_2" AS "Score_2", "GB_Model_6_0"."Score_3" AS "Score_3" 
FROM "GB_Model_6_0" UNION ALL SELECT "GB_Model_6_1"."KEY" AS "KEY", "GB_Model_6_1"."Score_0" AS "Score_0", "GB_Model_6_1"."Score_1" AS "Score_1", "GB_Model_6_1"."Score_2" AS "Score_2", "GB_Model_6_1"."Score_3" AS "Score_3" 
FROM "GB_Model_6_1" UNION ALL SELECT "GB_Model_6_2"."KEY" AS "KEY", "GB_Model_6_2"."Score_0" AS "Score_0", "GB_Model_6_2"."Score_1" AS "Score_1", "GB_Model_6_2"."Score_2" AS "Score_2", "GB_Model_6_2"."Score_3" AS "Score_3" 
FROM "GB_Model_6_2" UNION ALL SELECT "GB_Model_6_3"."KEY" AS "KEY", "GB_Model_6_3"."Score_0" AS "Score_0", "GB_Model_6_3"."Score_1" AS "Score_1", "GB_Model_6_3"."Score_2" AS "Score_2", "GB_Model_6_3"."Score_3" AS "Score_3" 
FROM "GB_Model_6_3" UNION ALL SELECT "GB_Model_7_0"."KEY" AS "KEY", "GB_Model_7_0"."Score_0" AS "Score_0", "GB_Model_7_0"."Score_1" AS "Score_1", "GB_Model_7_0"."Score_2" AS "Score_2", "GB_Model_7_0"."Score_3" AS "Score_3" 
FROM "GB_Model_7_0" UNION ALL SELECT "GB_Model_7_1"."KEY" AS "KEY", "GB_Model_7_1"."Score_0" AS "Score_0", "GB_Model_7_1"."Score_1" AS "Score_1", "GB_Model_7_1"."Score_2" AS "Score_2", "GB_Model_7_1"."Score_3" AS "Score_3" 
FROM "GB_Model_7_1") AS "GB_esu_2") AS "GB_B2") AS "U"

-- Code For temporary table tmp_20180602143816_an0_gb_b3 part 1. Create 


CREATE GLOBAL TEMPORARY TABLE tmp_20180602143816_an0_gb_b3  (
	"KEY" BIGINT, 
	"Score_0" DOUBLE PRECISION, 
	"Score_1" DOUBLE PRECISION, 
	"Score_2" DOUBLE PRECISION, 
	"Score_3" DOUBLE PRECISION
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table tmp_20180602143816_an0_gb_b3 part 2. Populate

INSERT INTO tmp_20180602143816_an0_gb_b3 ("KEY", "Score_0", "Score_1", "Score_2", "Score_3") SELECT "U"."KEY", "U"."Score_0", "U"."Score_1", "U"."Score_2", "U"."Score_3" 
FROM (WITH "DT_node_lookup_30" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_46 <= CAST(-0.910733640193939 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_101 <= CAST(-1.085902690887451 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_29 <= CAST(-1.793624877929688 AS DOUBLE PRECISION)) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_26 <= CAST(-0.944790005683899 AS DOUBLE PRECISION)) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_36 <= CAST(-1.705429553985596 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_36 <= CAST(-2.102421283721924 AS DOUBLE PRECISION)) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_76 <= CAST(-1.783512830734253 AS DOUBLE PRECISION)) THEN 13 ELSE 14 END END END AS node_id_2 
FROM tmp_20180602143816_bkn_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte_30 AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data_30" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS DOUBLE PRECISION) AS "E" 
FROM (SELECT 3 AS nid, CAST(-0.821343588010238 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_30 UNION ALL SELECT 4 AS nid, CAST(-0.852425387085477 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_30 UNION ALL SELECT 6 AS nid, CAST(1.187548351072806 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_30 UNION ALL SELECT 7 AS nid, CAST(1.122818995609459 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_30 UNION ALL SELECT 10 AS nid, CAST(1.567672162923348 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_30 UNION ALL SELECT 11 AS nid, CAST(1.553967020593204 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_30 UNION ALL SELECT 13 AS nid, CAST(1.661944926081268 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_30 UNION ALL SELECT 14 AS nid, CAST(-0.517714229990029 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_30) AS "Values"), 
"DT_Output_30" AS 
(SELECT "DT_node_lookup_30"."KEY" AS "KEY", "DT_node_lookup_30".node_id_2 AS node_id_2, "DT_node_data_30".nid AS nid, "DT_node_data_30"."E" AS "E" 
FROM "DT_node_lookup_30" LEFT OUTER JOIN "DT_node_data_30" ON "DT_node_lookup_30".node_id_2 = "DT_node_data_30".nid), 
"GB_Model_7_2" AS 
(SELECT "DT_Output_30"."KEY" AS "KEY", CAST(0.0 AS DOUBLE PRECISION) AS "Score_0", CAST(0.0 AS DOUBLE PRECISION) AS "Score_1", "DT_Output_30"."E" AS "Score_2", CAST(0.0 AS DOUBLE PRECISION) AS "Score_3" 
FROM "DT_Output_30"), 
"DT_node_lookup_31" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_21 <= CAST(-0.298921883106232 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_65 <= CAST(-0.943106055259705 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= CAST(-0.312041878700256 AS DOUBLE PRECISION)) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_69 <= CAST(-1.139033317565918 AS DOUBLE PRECISION)) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_101 <= CAST(-0.036666817963123 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_90 <= CAST(0.097113817930222 AS DOUBLE PRECISION)) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= CAST(1.541509628295898 AS DOUBLE PRECISION)) THEN 13 ELSE 14 END END END AS node_id_2 
FROM tmp_20180602143816_bkn_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte_31 AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data_31" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS DOUBLE PRECISION) AS "E" 
FROM (SELECT 3 AS nid, CAST(-0.877368721339602 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_31 UNION ALL SELECT 4 AS nid, CAST(1.370093548223663 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_31 UNION ALL SELECT 6 AS nid, CAST(-1.033830768162663 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_31 UNION ALL SELECT 7 AS nid, CAST(-0.893289489304287 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_31 UNION ALL SELECT 10 AS nid, CAST(1.244527093424212 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_31 UNION ALL SELECT 11 AS nid, CAST(-0.117622032831235 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_31 UNION ALL SELECT 13 AS nid, CAST(-0.456981598714459 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_31 UNION ALL SELECT 14 AS nid, CAST(1.756774296196505 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_31) AS "Values"), 
"DT_Output_31" AS 
(SELECT "DT_node_lookup_31"."KEY" AS "KEY", "DT_node_lookup_31".node_id_2 AS node_id_2, "DT_node_data_31".nid AS nid, "DT_node_data_31"."E" AS "E" 
FROM "DT_node_lookup_31" LEFT OUTER JOIN "DT_node_data_31" ON "DT_node_lookup_31".node_id_2 = "DT_node_data_31".nid), 
"GB_Model_7_3" AS 
(SELECT "DT_Output_31"."KEY" AS "KEY", CAST(0.0 AS DOUBLE PRECISION) AS "Score_0", CAST(0.0 AS DOUBLE PRECISION) AS "Score_1", CAST(0.0 AS DOUBLE PRECISION) AS "Score_2", "DT_Output_31"."E" AS "Score_3" 
FROM "DT_Output_31"), 
"DT_node_lookup_32" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_80 <= CAST(-0.155378341674805 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= CAST(-1.84721565246582 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_60 <= CAST(0.078954637050629 AS DOUBLE PRECISION)) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_76 <= CAST(-1.123494625091553 AS DOUBLE PRECISION)) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_50 <= CAST(-0.184253960847855 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_51 <= CAST(0.717638790607452 AS DOUBLE PRECISION)) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_73 <= CAST(0.827742040157318 AS DOUBLE PRECISION)) THEN 13 ELSE 14 END END END AS node_id_2 
FROM tmp_20180602143816_bkn_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte_32 AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data_32" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS DOUBLE PRECISION) AS "E" 
FROM (SELECT 3 AS nid, CAST(1.098092930410645 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_32 UNION ALL SELECT 4 AS nid, CAST(1.104870037800559 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_32 UNION ALL SELECT 6 AS nid, CAST(-0.907300602843173 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_32 UNION ALL SELECT 7 AS nid, CAST(-0.84797513461108 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_32 UNION ALL SELECT 10 AS nid, CAST(1.20369860747547 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_32 UNION ALL SELECT 11 AS nid, CAST(0.331351154050028 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_32 UNION ALL SELECT 13 AS nid, CAST(-0.440921563398281 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_32 UNION ALL SELECT 14 AS nid, CAST(1.035712702600268 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_32) AS "Values"), 
"DT_Output_32" AS 
(SELECT "DT_node_lookup_32"."KEY" AS "KEY", "DT_node_lookup_32".node_id_2 AS node_id_2, "DT_node_data_32".nid AS nid, "DT_node_data_32"."E" AS "E" 
FROM "DT_node_lookup_32" LEFT OUTER JOIN "DT_node_data_32" ON "DT_node_lookup_32".node_id_2 = "DT_node_data_32".nid), 
"GB_Model_8_0" AS 
(SELECT "DT_Output_32"."KEY" AS "KEY", "DT_Output_32"."E" AS "Score_0", CAST(0.0 AS DOUBLE PRECISION) AS "Score_1", CAST(0.0 AS DOUBLE PRECISION) AS "Score_2", CAST(0.0 AS DOUBLE PRECISION) AS "Score_3" 
FROM "DT_Output_32"), 
"DT_node_lookup_33" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_46 <= CAST(-0.227315336465836 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_101 <= CAST(-1.002084493637085 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= CAST(-0.392716348171234 AS DOUBLE PRECISION)) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_76 <= CAST(-1.079550266265869 AS DOUBLE PRECISION)) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_20 <= CAST(-0.759210050106049 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= CAST(-1.045132398605347 AS DOUBLE PRECISION)) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_36 <= CAST(-1.124365091323852 AS DOUBLE PRECISION)) THEN 13 ELSE 14 END END END AS node_id_2 
FROM tmp_20180602143816_bkn_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte_33 AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data_33" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS DOUBLE PRECISION) AS "E" 
FROM (SELECT 3 AS nid, CAST(-0.869776739139673 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_33 UNION ALL SELECT 4 AS nid, CAST(1.161067300861143 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_33 UNION ALL SELECT 6 AS nid, CAST(-0.985383568963815 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_33 UNION ALL SELECT 7 AS nid, CAST(-0.865442572021831 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_33 UNION ALL SELECT 10 AS nid, CAST(-0.880911413294461 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_33 UNION ALL SELECT 11 AS nid, CAST(1.386271768405316 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_33 UNION ALL SELECT 13 AS nid, CAST(1.304552946616719 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_33 UNION ALL SELECT 14 AS nid, CAST(-0.171503539058829 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_33) AS "Values"), 
"DT_Output_33" AS 
(SELECT "DT_node_lookup_33"."KEY" AS "KEY", "DT_node_lookup_33".node_id_2 AS node_id_2, "DT_node_data_33".nid AS nid, "DT_node_data_33"."E" AS "E" 
FROM "DT_node_lookup_33" LEFT OUTER JOIN "DT_node_data_33" ON "DT_node_lookup_33".node_id_2 = "DT_node_data_33".nid), 
"GB_Model_8_1" AS 
(SELECT "DT_Output_33"."KEY" AS "KEY", CAST(0.0 AS DOUBLE PRECISION) AS "Score_0", "DT_Output_33"."E" AS "Score_1", CAST(0.0 AS DOUBLE PRECISION) AS "Score_2", CAST(0.0 AS DOUBLE PRECISION) AS "Score_3" 
FROM "DT_Output_33"), 
"DT_node_lookup_34" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_46 <= CAST(-0.910733640193939 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_101 <= CAST(-1.085902690887451 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_29 <= CAST(-1.793624877929688 AS DOUBLE PRECISION)) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_26 <= CAST(-0.747887015342712 AS DOUBLE PRECISION)) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_72 <= CAST(1.234012365341186 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_76 <= CAST(-1.783512830734253 AS DOUBLE PRECISION)) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_80 <= CAST(-0.090658470988274 AS DOUBLE PRECISION)) THEN 13 ELSE 14 END END END AS node_id_2 
FROM tmp_20180602143816_bkn_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte_34 AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data_34" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS DOUBLE PRECISION) AS "E" 
FROM (SELECT 3 AS nid, CAST(-0.809383569517798 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_34 UNION ALL SELECT 4 AS nid, CAST(-0.838536581653272 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_34 UNION ALL SELECT 6 AS nid, CAST(1.108218222224958 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_34 UNION ALL SELECT 7 AS nid, CAST(1.057150478185941 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_34 UNION ALL SELECT 10 AS nid, CAST(1.384592311778105 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_34 UNION ALL SELECT 11 AS nid, CAST(-0.607804106068613 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_34 UNION ALL SELECT 13 AS nid, CAST(1.752573276161282 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_34 UNION ALL SELECT 14 AS nid, CAST(-0.861373765171486 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_34) AS "Values"), 
"DT_Output_34" AS 
(SELECT "DT_node_lookup_34"."KEY" AS "KEY", "DT_node_lookup_34".node_id_2 AS node_id_2, "DT_node_data_34".nid AS nid, "DT_node_data_34"."E" AS "E" 
FROM "DT_node_lookup_34" LEFT OUTER JOIN "DT_node_data_34" ON "DT_node_lookup_34".node_id_2 = "DT_node_data_34".nid), 
"GB_Model_8_2" AS 
(SELECT "DT_Output_34"."KEY" AS "KEY", CAST(0.0 AS DOUBLE PRECISION) AS "Score_0", CAST(0.0 AS DOUBLE PRECISION) AS "Score_1", "DT_Output_34"."E" AS "Score_2", CAST(0.0 AS DOUBLE PRECISION) AS "Score_3" 
FROM "DT_Output_34"), 
"DT_node_lookup_35" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_22 <= CAST(1.097930073738098 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_16 <= CAST(1.270020008087158 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_43 <= CAST(0.462598383426666 AS DOUBLE PRECISION)) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_90 <= CAST(0.330655455589294 AS DOUBLE PRECISION)) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_53 <= CAST(0.244987010955811 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_30 <= CAST(-0.316515684127808 AS DOUBLE PRECISION)) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= CAST(1.389153003692627 AS DOUBLE PRECISION)) THEN 13 ELSE 14 END END END AS node_id_2 
FROM tmp_20180602143816_bkn_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte_35 AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data_35" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS DOUBLE PRECISION) AS "E" 
FROM (SELECT 3 AS nid, CAST(-0.795799930662442 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_35 UNION ALL SELECT 4 AS nid, CAST(0.41570713167782 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_35 UNION ALL SELECT 6 AS nid, CAST(1.248423978235715 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_35 UNION ALL SELECT 7 AS nid, CAST(-0.956891253521659 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_35 UNION ALL SELECT 10 AS nid, CAST(1.130023866830783 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_35 UNION ALL SELECT 11 AS nid, CAST(-0.852008336368538 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_35 UNION ALL SELECT 13 AS nid, CAST(1.148466904460351 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_35 UNION ALL SELECT 14 AS nid, CAST(1.919645498246487 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_35) AS "Values"), 
"DT_Output_35" AS 
(SELECT "DT_node_lookup_35"."KEY" AS "KEY", "DT_node_lookup_35".node_id_2 AS node_id_2, "DT_node_data_35".nid AS nid, "DT_node_data_35"."E" AS "E" 
FROM "DT_node_lookup_35" LEFT OUTER JOIN "DT_node_data_35" ON "DT_node_lookup_35".node_id_2 = "DT_node_data_35".nid), 
"GB_Model_8_3" AS 
(SELECT "DT_Output_35"."KEY" AS "KEY", CAST(0.0 AS DOUBLE PRECISION) AS "Score_0", CAST(0.0 AS DOUBLE PRECISION) AS "Score_1", CAST(0.0 AS DOUBLE PRECISION) AS "Score_2", "DT_Output_35"."E" AS "Score_3" 
FROM "DT_Output_35"), 
"DT_node_lookup_36" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_21 <= CAST(1.759374141693115 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_39 <= CAST(1.738533973693848 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_45 <= CAST(0.248610928654671 AS DOUBLE PRECISION)) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_87 <= CAST(-0.499444007873535 AS DOUBLE PRECISION)) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= CAST(-0.993315279483795 AS DOUBLE PRECISION)) THEN 9 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_45 <= CAST(-0.17206484079361 AS DOUBLE PRECISION)) THEN 11 ELSE 12 END END END AS node_id_2 
FROM tmp_20180602143816_bkn_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte_36 AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data_36" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS DOUBLE PRECISION) AS "E" 
FROM (SELECT 3 AS nid, CAST(-0.645133058084408 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_36 UNION ALL SELECT 4 AS nid, CAST(0.242535051713975 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_36 UNION ALL SELECT 6 AS nid, CAST(1.210510108008554 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_36 UNION ALL SELECT 7 AS nid, CAST(1.265026928120129 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_36 UNION ALL SELECT 9 AS nid, CAST(1.76955454310561 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_36 UNION ALL SELECT 11 AS nid, CAST(1.206287546052212 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_36 UNION ALL SELECT 12 AS nid, CAST(1.073184092145214 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_36) AS "Values"), 
"DT_Output_36" AS 
(SELECT "DT_node_lookup_36"."KEY" AS "KEY", "DT_node_lookup_36".node_id_2 AS node_id_2, "DT_node_data_36".nid AS nid, "DT_node_data_36"."E" AS "E" 
FROM "DT_node_lookup_36" LEFT OUTER JOIN "DT_node_data_36" ON "DT_node_lookup_36".node_id_2 = "DT_node_data_36".nid), 
"GB_Model_9_0" AS 
(SELECT "DT_Output_36"."KEY" AS "KEY", "DT_Output_36"."E" AS "Score_0", CAST(0.0 AS DOUBLE PRECISION) AS "Score_1", CAST(0.0 AS DOUBLE PRECISION) AS "Score_2", CAST(0.0 AS DOUBLE PRECISION) AS "Score_3" 
FROM "DT_Output_36"), 
"DT_node_lookup_37" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_70 <= CAST(-0.612145900726318 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_58 <= CAST(1.671057939529419 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_90 <= CAST(-1.435282349586487 AS DOUBLE PRECISION)) THEN 3 ELSE 4 END ELSE 5 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_18 <= CAST(1.371707201004028 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_16 <= CAST(-0.684131622314453 AS DOUBLE PRECISION)) THEN 8 ELSE 9 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_48 <= CAST(0.823051452636719 AS DOUBLE PRECISION)) THEN 11 ELSE 12 END END END AS node_id_2 
FROM tmp_20180602143816_bkn_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte_37 AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data_37" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS DOUBLE PRECISION) AS "E" 
FROM (SELECT 3 AS nid, CAST(-1.001030396208865 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_37 UNION ALL SELECT 4 AS nid, CAST(-0.869314933152788 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_37 UNION ALL SELECT 5 AS nid, CAST(1.238135437683748 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_37 UNION ALL SELECT 8 AS nid, CAST(0.84993513041525 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_37 UNION ALL SELECT 9 AS nid, CAST(-0.212668558035554 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_37 UNION ALL SELECT 11 AS nid, CAST(1.623896618119314 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_37 UNION ALL SELECT 12 AS nid, CAST(1.116381748104244 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_37) AS "Values"), 
"DT_Output_37" AS 
(SELECT "DT_node_lookup_37"."KEY" AS "KEY", "DT_node_lookup_37".node_id_2 AS node_id_2, "DT_node_data_37".nid AS nid, "DT_node_data_37"."E" AS "E" 
FROM "DT_node_lookup_37" LEFT OUTER JOIN "DT_node_data_37" ON "DT_node_lookup_37".node_id_2 = "DT_node_data_37".nid), 
"GB_Model_9_1" AS 
(SELECT "DT_Output_37"."KEY" AS "KEY", CAST(0.0 AS DOUBLE PRECISION) AS "Score_0", "DT_Output_37"."E" AS "Score_1", CAST(0.0 AS DOUBLE PRECISION) AS "Score_2", CAST(0.0 AS DOUBLE PRECISION) AS "Score_3" 
FROM "DT_Output_37"), 
"DT_node_lookup_38" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_46 <= CAST(-0.910733640193939 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_101 <= CAST(-1.085902690887451 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= CAST(0.429035365581512 AS DOUBLE PRECISION)) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_26 <= CAST(-0.747887015342712 AS DOUBLE PRECISION)) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= CAST(-1.621206283569336 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_78 <= CAST(0.126313507556915 AS DOUBLE PRECISION)) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_36 <= CAST(-1.705429553985596 AS DOUBLE PRECISION)) THEN 13 ELSE 14 END END END AS node_id_2 
FROM tmp_20180602143816_bkn_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte_38 AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data_38" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS DOUBLE PRECISION) AS "E" 
FROM (SELECT 3 AS nid, CAST(-0.833422368121086 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_38 UNION ALL SELECT 4 AS nid, CAST(-0.800798166366083 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_38 UNION ALL SELECT 6 AS nid, CAST(1.050687591586459 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_38 UNION ALL SELECT 7 AS nid, CAST(1.012965807167561 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_38 UNION ALL SELECT 10 AS nid, CAST(1.451614362371444 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_38 UNION ALL SELECT 11 AS nid, CAST(1.330083704266044 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_38 UNION ALL SELECT 13 AS nid, CAST(1.382464523527427 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_38 UNION ALL SELECT 14 AS nid, CAST(-0.462702112288054 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_38) AS "Values"), 
"DT_Output_38" AS 
(SELECT "DT_node_lookup_38"."KEY" AS "KEY", "DT_node_lookup_38".node_id_2 AS node_id_2, "DT_node_data_38".nid AS nid, "DT_node_data_38"."E" AS "E" 
FROM "DT_node_lookup_38" LEFT OUTER JOIN "DT_node_data_38" ON "DT_node_lookup_38".node_id_2 = "DT_node_data_38".nid), 
"GB_Model_9_2" AS 
(SELECT "DT_Output_38"."KEY" AS "KEY", CAST(0.0 AS DOUBLE PRECISION) AS "Score_0", CAST(0.0 AS DOUBLE PRECISION) AS "Score_1", "DT_Output_38"."E" AS "Score_2", CAST(0.0 AS DOUBLE PRECISION) AS "Score_3" 
FROM "DT_Output_38"), 
"DT_node_lookup_39" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_21 <= CAST(-0.298921883106232 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_65 <= CAST(-0.943106055259705 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_83 <= CAST(0.454626262187958 AS DOUBLE PRECISION)) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_69 <= CAST(-1.139033317565918 AS DOUBLE PRECISION)) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_101 <= CAST(-0.036666817963123 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_90 <= CAST(0.097113817930222 AS DOUBLE PRECISION)) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= CAST(1.541509628295898 AS DOUBLE PRECISION)) THEN 13 ELSE 14 END END END AS node_id_2 
FROM tmp_20180602143816_bkn_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte_39 AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data_39" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS DOUBLE PRECISION) AS "E" 
FROM (SELECT 3 AS nid, CAST(1.209505953882896 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_39 UNION ALL SELECT 4 AS nid, CAST(-0.858808553619621 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_39 UNION ALL SELECT 6 AS nid, CAST(-0.992912154742598 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_39 UNION ALL SELECT 7 AS nid, CAST(-0.870883653124825 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_39 UNION ALL SELECT 10 AS nid, CAST(1.112257801583606 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_39 UNION ALL SELECT 11 AS nid, CAST(-0.094251439069493 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_39 UNION ALL SELECT 13 AS nid, CAST(-0.422720075715584 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_39 UNION ALL SELECT 14 AS nid, CAST(1.513007966396637 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_39) AS "Values"), 
"DT_Output_39" AS 
(SELECT "DT_node_lookup_39"."KEY" AS "KEY", "DT_node_lookup_39".node_id_2 AS node_id_2, "DT_node_data_39".nid AS nid, "DT_node_data_39"."E" AS "E" 
FROM "DT_node_lookup_39" LEFT OUTER JOIN "DT_node_data_39" ON "DT_node_lookup_39".node_id_2 = "DT_node_data_39".nid), 
"GB_Model_9_3" AS 
(SELECT "DT_Output_39"."KEY" AS "KEY", CAST(0.0 AS DOUBLE PRECISION) AS "Score_0", CAST(0.0 AS DOUBLE PRECISION) AS "Score_1", CAST(0.0 AS DOUBLE PRECISION) AS "Score_2", "DT_Output_39"."E" AS "Score_3" 
FROM "DT_Output_39")
 SELECT "GB_B3"."KEY", "GB_B3"."Score_0", "GB_B3"."Score_1", "GB_B3"."Score_2", "GB_B3"."Score_3" 
FROM (SELECT "GB_esu_3"."KEY" AS "KEY", "GB_esu_3"."Score_0" AS "Score_0", "GB_esu_3"."Score_1" AS "Score_1", "GB_esu_3"."Score_2" AS "Score_2", "GB_esu_3"."Score_3" AS "Score_3" 
FROM (SELECT "GB_Model_7_2"."KEY" AS "KEY", "GB_Model_7_2"."Score_0" AS "Score_0", "GB_Model_7_2"."Score_1" AS "Score_1", "GB_Model_7_2"."Score_2" AS "Score_2", "GB_Model_7_2"."Score_3" AS "Score_3" 
FROM "GB_Model_7_2" UNION ALL SELECT "GB_Model_7_3"."KEY" AS "KEY", "GB_Model_7_3"."Score_0" AS "Score_0", "GB_Model_7_3"."Score_1" AS "Score_1", "GB_Model_7_3"."Score_2" AS "Score_2", "GB_Model_7_3"."Score_3" AS "Score_3" 
FROM "GB_Model_7_3" UNION ALL SELECT "GB_Model_8_0"."KEY" AS "KEY", "GB_Model_8_0"."Score_0" AS "Score_0", "GB_Model_8_0"."Score_1" AS "Score_1", "GB_Model_8_0"."Score_2" AS "Score_2", "GB_Model_8_0"."Score_3" AS "Score_3" 
FROM "GB_Model_8_0" UNION ALL SELECT "GB_Model_8_1"."KEY" AS "KEY", "GB_Model_8_1"."Score_0" AS "Score_0", "GB_Model_8_1"."Score_1" AS "Score_1", "GB_Model_8_1"."Score_2" AS "Score_2", "GB_Model_8_1"."Score_3" AS "Score_3" 
FROM "GB_Model_8_1" UNION ALL SELECT "GB_Model_8_2"."KEY" AS "KEY", "GB_Model_8_2"."Score_0" AS "Score_0", "GB_Model_8_2"."Score_1" AS "Score_1", "GB_Model_8_2"."Score_2" AS "Score_2", "GB_Model_8_2"."Score_3" AS "Score_3" 
FROM "GB_Model_8_2" UNION ALL SELECT "GB_Model_8_3"."KEY" AS "KEY", "GB_Model_8_3"."Score_0" AS "Score_0", "GB_Model_8_3"."Score_1" AS "Score_1", "GB_Model_8_3"."Score_2" AS "Score_2", "GB_Model_8_3"."Score_3" AS "Score_3" 
FROM "GB_Model_8_3" UNION ALL SELECT "GB_Model_9_0"."KEY" AS "KEY", "GB_Model_9_0"."Score_0" AS "Score_0", "GB_Model_9_0"."Score_1" AS "Score_1", "GB_Model_9_0"."Score_2" AS "Score_2", "GB_Model_9_0"."Score_3" AS "Score_3" 
FROM "GB_Model_9_0" UNION ALL SELECT "GB_Model_9_1"."KEY" AS "KEY", "GB_Model_9_1"."Score_0" AS "Score_0", "GB_Model_9_1"."Score_1" AS "Score_1", "GB_Model_9_1"."Score_2" AS "Score_2", "GB_Model_9_1"."Score_3" AS "Score_3" 
FROM "GB_Model_9_1" UNION ALL SELECT "GB_Model_9_2"."KEY" AS "KEY", "GB_Model_9_2"."Score_0" AS "Score_0", "GB_Model_9_2"."Score_1" AS "Score_1", "GB_Model_9_2"."Score_2" AS "Score_2", "GB_Model_9_2"."Score_3" AS "Score_3" 
FROM "GB_Model_9_2" UNION ALL SELECT "GB_Model_9_3"."KEY" AS "KEY", "GB_Model_9_3"."Score_0" AS "Score_0", "GB_Model_9_3"."Score_1" AS "Score_1", "GB_Model_9_3"."Score_2" AS "Score_2", "GB_Model_9_3"."Score_3" AS "Score_3" 
FROM "GB_Model_9_3") AS "GB_esu_3") AS "GB_B3") AS "U"

-- Code For temporary table tmp_20180602143816_ef3_gb_b4 part 1. Create 


CREATE GLOBAL TEMPORARY TABLE tmp_20180602143816_ef3_gb_b4  (
	"KEY" BIGINT, 
	"Score_0" DOUBLE PRECISION, 
	"Score_1" DOUBLE PRECISION, 
	"Score_2" DOUBLE PRECISION, 
	"Score_3" DOUBLE PRECISION
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table tmp_20180602143816_ef3_gb_b4 part 2. Populate

INSERT INTO tmp_20180602143816_ef3_gb_b4 ("KEY", "Score_0", "Score_1", "Score_2", "Score_3") SELECT "U"."KEY", "U"."Score_0", "U"."Score_1", "U"."Score_2", "U"."Score_3" 
FROM (WITH "DT_node_lookup_40" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_80 <= CAST(-0.155378341674805 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= CAST(-1.84721565246582 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_14 <= CAST(-0.584038496017456 AS DOUBLE PRECISION)) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_76 <= CAST(-1.123494625091553 AS DOUBLE PRECISION)) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_78 <= CAST(-0.765346884727478 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_31 <= CAST(0.612539410591126 AS DOUBLE PRECISION)) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_63 <= CAST(0.13777482509613 AS DOUBLE PRECISION)) THEN 13 ELSE 14 END END END AS node_id_2 
FROM tmp_20180602143816_bkn_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte_40 AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data_40" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS DOUBLE PRECISION) AS "E" 
FROM (SELECT 3 AS nid, CAST(1.055915577704632 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_40 UNION ALL SELECT 4 AS nid, CAST(1.007878908789019 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_40 UNION ALL SELECT 6 AS nid, CAST(-0.892487402485825 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_40 UNION ALL SELECT 7 AS nid, CAST(-0.833395844848858 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_40 UNION ALL SELECT 10 AS nid, CAST(1.093631390124748 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_40 UNION ALL SELECT 11 AS nid, CAST(-0.881924000816896 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_40 UNION ALL SELECT 13 AS nid, CAST(-0.710345598497201 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_40 UNION ALL SELECT 14 AS nid, CAST(0.601767978791117 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_40) AS "Values"), 
"DT_Output_40" AS 
(SELECT "DT_node_lookup_40"."KEY" AS "KEY", "DT_node_lookup_40".node_id_2 AS node_id_2, "DT_node_data_40".nid AS nid, "DT_node_data_40"."E" AS "E" 
FROM "DT_node_lookup_40" LEFT OUTER JOIN "DT_node_data_40" ON "DT_node_lookup_40".node_id_2 = "DT_node_data_40".nid), 
"GB_Model_10_0" AS 
(SELECT "DT_Output_40"."KEY" AS "KEY", "DT_Output_40"."E" AS "Score_0", CAST(0.0 AS DOUBLE PRECISION) AS "Score_1", CAST(0.0 AS DOUBLE PRECISION) AS "Score_2", CAST(0.0 AS DOUBLE PRECISION) AS "Score_3" 
FROM "DT_Output_40"), 
"DT_node_lookup_41" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_45 <= CAST(-0.736328721046448 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_49 <= CAST(0.373026013374329 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_98 <= CAST(-0.8627969622612 AS DOUBLE PRECISION)) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_26 <= CAST(0.614793002605438 AS DOUBLE PRECISION)) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_40 <= CAST(-0.978162407875061 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_23 <= CAST(0.652192711830139 AS DOUBLE PRECISION)) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_18 <= CAST(1.360679149627686 AS DOUBLE PRECISION)) THEN 13 ELSE 14 END END END AS node_id_2 
FROM tmp_20180602143816_bkn_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte_41 AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data_41" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS DOUBLE PRECISION) AS "E" 
FROM (SELECT 3 AS nid, CAST(1.510380615809138 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_41 UNION ALL SELECT 4 AS nid, CAST(-0.845910012507509 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_41 UNION ALL SELECT 6 AS nid, CAST(1.288336906831716 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_41 UNION ALL SELECT 7 AS nid, CAST(-1.012116162482494 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_41 UNION ALL SELECT 10 AS nid, CAST(1.080370183714709 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_41 UNION ALL SELECT 11 AS nid, CAST(-0.849443559094272 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_41 UNION ALL SELECT 13 AS nid, CAST(-0.674445567906388 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_41 UNION ALL SELECT 14 AS nid, CAST(0.901194610452037 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_41) AS "Values"), 
"DT_Output_41" AS 
(SELECT "DT_node_lookup_41"."KEY" AS "KEY", "DT_node_lookup_41".node_id_2 AS node_id_2, "DT_node_data_41".nid AS nid, "DT_node_data_41"."E" AS "E" 
FROM "DT_node_lookup_41" LEFT OUTER JOIN "DT_node_data_41" ON "DT_node_lookup_41".node_id_2 = "DT_node_data_41".nid), 
"GB_Model_10_1" AS 
(SELECT "DT_Output_41"."KEY" AS "KEY", CAST(0.0 AS DOUBLE PRECISION) AS "Score_0", "DT_Output_41"."E" AS "Score_1", CAST(0.0 AS DOUBLE PRECISION) AS "Score_2", CAST(0.0 AS DOUBLE PRECISION) AS "Score_3" 
FROM "DT_Output_41"), 
"DT_node_lookup_42" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_46 <= CAST(-0.910733640193939 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_101 <= CAST(-1.085902690887451 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_50 <= CAST(0.797222673892975 AS DOUBLE PRECISION)) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_26 <= CAST(-0.747887015342712 AS DOUBLE PRECISION)) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= CAST(2.166414737701416 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= CAST(1.800718188285828 AS DOUBLE PRECISION)) THEN 10 ELSE 11 END ELSE 12 END END AS node_id_2 
FROM tmp_20180602143816_bkn_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte_42 AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data_42" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS DOUBLE PRECISION) AS "E" 
FROM (SELECT 3 AS nid, CAST(-0.799011763568302 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_42 UNION ALL SELECT 4 AS nid, CAST(-0.832474786828231 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_42 UNION ALL SELECT 6 AS nid, CAST(1.007924187169529 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_42 UNION ALL SELECT 7 AS nid, CAST(0.972088972239203 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_42 UNION ALL SELECT 10 AS nid, CAST(-0.412055464615164 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_42 UNION ALL SELECT 11 AS nid, CAST(1.366186184878164 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_42 UNION ALL SELECT 12 AS nid, CAST(2.168045678694308 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_42) AS "Values"), 
"DT_Output_42" AS 
(SELECT "DT_node_lookup_42"."KEY" AS "KEY", "DT_node_lookup_42".node_id_2 AS node_id_2, "DT_node_data_42".nid AS nid, "DT_node_data_42"."E" AS "E" 
FROM "DT_node_lookup_42" LEFT OUTER JOIN "DT_node_data_42" ON "DT_node_lookup_42".node_id_2 = "DT_node_data_42".nid), 
"GB_Model_10_2" AS 
(SELECT "DT_Output_42"."KEY" AS "KEY", CAST(0.0 AS DOUBLE PRECISION) AS "Score_0", CAST(0.0 AS DOUBLE PRECISION) AS "Score_1", "DT_Output_42"."E" AS "Score_2", CAST(0.0 AS DOUBLE PRECISION) AS "Score_3" 
FROM "DT_Output_42"), 
"DT_node_lookup_43" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_22 <= CAST(1.097930073738098 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_24 <= CAST(-1.466227769851684 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_80 <= CAST(-0.542766153812408 AS DOUBLE PRECISION)) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_16 <= CAST(1.619352579116821 AS DOUBLE PRECISION)) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_53 <= CAST(0.244987010955811 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_18 <= CAST(1.137018918991089 AS DOUBLE PRECISION)) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_92 <= CAST(0.832555174827576 AS DOUBLE PRECISION)) THEN 13 ELSE 14 END END END AS node_id_2 
FROM tmp_20180602143816_bkn_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte_43 AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data_43" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS DOUBLE PRECISION) AS "E" 
FROM (SELECT 3 AS nid, CAST(-0.83404349782104 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_43 UNION ALL SELECT 4 AS nid, CAST(1.275324767190182 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_43 UNION ALL SELECT 6 AS nid, CAST(-0.482297910578673 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_43 UNION ALL SELECT 7 AS nid, CAST(1.163818218379666 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_43 UNION ALL SELECT 10 AS nid, CAST(-0.830893131310464 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_43 UNION ALL SELECT 11 AS nid, CAST(1.056930172805078 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_43 UNION ALL SELECT 13 AS nid, CAST(1.053818796654751 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_43 UNION ALL SELECT 14 AS nid, CAST(1.638721019367228 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_43) AS "Values"), 
"DT_Output_43" AS 
(SELECT "DT_node_lookup_43"."KEY" AS "KEY", "DT_node_lookup_43".node_id_2 AS node_id_2, "DT_node_data_43".nid AS nid, "DT_node_data_43"."E" AS "E" 
FROM "DT_node_lookup_43" LEFT OUTER JOIN "DT_node_data_43" ON "DT_node_lookup_43".node_id_2 = "DT_node_data_43".nid), 
"GB_Model_10_3" AS 
(SELECT "DT_Output_43"."KEY" AS "KEY", CAST(0.0 AS DOUBLE PRECISION) AS "Score_0", CAST(0.0 AS DOUBLE PRECISION) AS "Score_1", CAST(0.0 AS DOUBLE PRECISION) AS "Score_2", "DT_Output_43"."E" AS "Score_3" 
FROM "DT_Output_43"), 
"DT_node_lookup_44" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_80 <= CAST(-0.155378341674805 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_28 <= CAST(2.14944052696228 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_76 <= CAST(-1.123494625091553 AS DOUBLE PRECISION)) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_79 <= CAST(1.781784534454346 AS DOUBLE PRECISION)) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_94 <= CAST(-0.057808898389339 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_59 <= CAST(-0.491169333457947 AS DOUBLE PRECISION)) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_26 <= CAST(0.836352586746216 AS DOUBLE PRECISION)) THEN 13 ELSE 14 END END END AS node_id_2 
FROM tmp_20180602143816_bkn_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte_44 AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data_44" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS DOUBLE PRECISION) AS "E" 
FROM (SELECT 3 AS nid, CAST(-0.879674861578978 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_44 UNION ALL SELECT 4 AS nid, CAST(-0.825807302831568 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_44 UNION ALL SELECT 6 AS nid, CAST(0.971170796458569 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_44 UNION ALL SELECT 7 AS nid, CAST(1.00907223414902 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_44 UNION ALL SELECT 10 AS nid, CAST(-0.370185729230417 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_44 UNION ALL SELECT 11 AS nid, CAST(0.94764891395701 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_44 UNION ALL SELECT 13 AS nid, CAST(-0.870297659025396 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_44 UNION ALL SELECT 14 AS nid, CAST(0.889278203080851 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_44) AS "Values"), 
"DT_Output_44" AS 
(SELECT "DT_node_lookup_44"."KEY" AS "KEY", "DT_node_lookup_44".node_id_2 AS node_id_2, "DT_node_data_44".nid AS nid, "DT_node_data_44"."E" AS "E" 
FROM "DT_node_lookup_44" LEFT OUTER JOIN "DT_node_data_44" ON "DT_node_lookup_44".node_id_2 = "DT_node_data_44".nid), 
"GB_Model_11_0" AS 
(SELECT "DT_Output_44"."KEY" AS "KEY", "DT_Output_44"."E" AS "Score_0", CAST(0.0 AS DOUBLE PRECISION) AS "Score_1", CAST(0.0 AS DOUBLE PRECISION) AS "Score_2", CAST(0.0 AS DOUBLE PRECISION) AS "Score_3" 
FROM "DT_Output_44"), 
"DT_node_lookup_45" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_69 <= CAST(-1.659358382225036 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_47 <= CAST(-0.427576839923859 AS DOUBLE PRECISION)) THEN 2 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_29 <= CAST(0.767666220664978 AS DOUBLE PRECISION)) THEN 4 ELSE 5 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_90 <= CAST(-0.131504714488983 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_18 <= CAST(2.013758182525635 AS DOUBLE PRECISION)) THEN 8 ELSE 9 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_50 <= CAST(-0.184253960847855 AS DOUBLE PRECISION)) THEN 11 ELSE 12 END END END AS node_id_2 
FROM tmp_20180602143816_bkn_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte_45 AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data_45" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS DOUBLE PRECISION) AS "E" 
FROM (SELECT 2 AS nid, CAST(0.997472809881711 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_45 UNION ALL SELECT 4 AS nid, CAST(1.187667418271347 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_45 UNION ALL SELECT 5 AS nid, CAST(1.109292223708427 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_45 UNION ALL SELECT 8 AS nid, CAST(-0.77739133066236 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_45 UNION ALL SELECT 9 AS nid, CAST(1.306128183930786 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_45 UNION ALL SELECT 11 AS nid, CAST(-0.534600979527841 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_45 UNION ALL SELECT 12 AS nid, CAST(0.714817775800204 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_45) AS "Values"), 
"DT_Output_45" AS 
(SELECT "DT_node_lookup_45"."KEY" AS "KEY", "DT_node_lookup_45".node_id_2 AS node_id_2, "DT_node_data_45".nid AS nid, "DT_node_data_45"."E" AS "E" 
FROM "DT_node_lookup_45" LEFT OUTER JOIN "DT_node_data_45" ON "DT_node_lookup_45".node_id_2 = "DT_node_data_45".nid), 
"GB_Model_11_1" AS 
(SELECT "DT_Output_45"."KEY" AS "KEY", CAST(0.0 AS DOUBLE PRECISION) AS "Score_0", "DT_Output_45"."E" AS "Score_1", CAST(0.0 AS DOUBLE PRECISION) AS "Score_2", CAST(0.0 AS DOUBLE PRECISION) AS "Score_3" 
FROM "DT_Output_45"), 
"DT_node_lookup_46" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_46 <= CAST(-0.910733640193939 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_101 <= CAST(-1.085902690887451 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_16 <= CAST(-0.353065848350525 AS DOUBLE PRECISION)) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_26 <= CAST(-0.747887015342712 AS DOUBLE PRECISION)) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= CAST(2.446138381958008 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_55 <= CAST(1.674030303955078 AS DOUBLE PRECISION)) THEN 10 ELSE 11 END ELSE 12 END END AS node_id_2 
FROM tmp_20180602143816_bkn_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte_46 AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data_46" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS DOUBLE PRECISION) AS "E" 
FROM (SELECT 3 AS nid, CAST(-0.792264434508218 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_46 UNION ALL SELECT 4 AS nid, CAST(-0.82293906545148 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_46 UNION ALL SELECT 6 AS nid, CAST(0.975696055783688 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_46 UNION ALL SELECT 7 AS nid, CAST(0.939207996890484 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_46 UNION ALL SELECT 10 AS nid, CAST(-0.398651117841627 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_46 UNION ALL SELECT 11 AS nid, CAST(1.322389696376186 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_46 UNION ALL SELECT 12 AS nid, CAST(2.080157799987302 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_46) AS "Values"), 
"DT_Output_46" AS 
(SELECT "DT_node_lookup_46"."KEY" AS "KEY", "DT_node_lookup_46".node_id_2 AS node_id_2, "DT_node_data_46".nid AS nid, "DT_node_data_46"."E" AS "E" 
FROM "DT_node_lookup_46" LEFT OUTER JOIN "DT_node_data_46" ON "DT_node_lookup_46".node_id_2 = "DT_node_data_46".nid), 
"GB_Model_11_2" AS 
(SELECT "DT_Output_46"."KEY" AS "KEY", CAST(0.0 AS DOUBLE PRECISION) AS "Score_0", CAST(0.0 AS DOUBLE PRECISION) AS "Score_1", "DT_Output_46"."E" AS "Score_2", CAST(0.0 AS DOUBLE PRECISION) AS "Score_3" 
FROM "DT_Output_46"), 
"DT_node_lookup_47" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_21 <= CAST(-0.298921883106232 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_65 <= CAST(-0.943106055259705 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_95 <= CAST(0.52212518453598 AS DOUBLE PRECISION)) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= CAST(-0.537947416305542 AS DOUBLE PRECISION)) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_101 <= CAST(-0.036666817963123 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_90 <= CAST(0.097113817930222 AS DOUBLE PRECISION)) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_56 <= CAST(1.193067073822022 AS DOUBLE PRECISION)) THEN 13 ELSE 14 END END END AS node_id_2 
FROM tmp_20180602143816_bkn_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte_47 AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data_47" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS DOUBLE PRECISION) AS "E" 
FROM (SELECT 3 AS nid, CAST(1.121787560938244 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_47 UNION ALL SELECT 4 AS nid, CAST(-0.837850032328336 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_47 UNION ALL SELECT 6 AS nid, CAST(-0.911790244391107 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_47 UNION ALL SELECT 7 AS nid, CAST(-0.841439015704251 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_47 UNION ALL SELECT 10 AS nid, CAST(1.00504393149237 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_47 UNION ALL SELECT 11 AS nid, CAST(-0.08922852058005 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_47 UNION ALL SELECT 13 AS nid, CAST(-0.564753670028962 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_47 UNION ALL SELECT 14 AS nid, CAST(1.02329140495704 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_47) AS "Values"), 
"DT_Output_47" AS 
(SELECT "DT_node_lookup_47"."KEY" AS "KEY", "DT_node_lookup_47".node_id_2 AS node_id_2, "DT_node_data_47".nid AS nid, "DT_node_data_47"."E" AS "E" 
FROM "DT_node_lookup_47" LEFT OUTER JOIN "DT_node_data_47" ON "DT_node_lookup_47".node_id_2 = "DT_node_data_47".nid), 
"GB_Model_11_3" AS 
(SELECT "DT_Output_47"."KEY" AS "KEY", CAST(0.0 AS DOUBLE PRECISION) AS "Score_0", CAST(0.0 AS DOUBLE PRECISION) AS "Score_1", CAST(0.0 AS DOUBLE PRECISION) AS "Score_2", "DT_Output_47"."E" AS "Score_3" 
FROM "DT_Output_47"), 
"DT_node_lookup_48" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_80 <= CAST(-0.155378341674805 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_28 <= CAST(2.14944052696228 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_21 <= CAST(-0.307403236627579 AS DOUBLE PRECISION)) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_101 <= CAST(0.253772407770157 AS DOUBLE PRECISION)) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_78 <= CAST(-0.765346884727478 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= CAST(-1.726162672042847 AS DOUBLE PRECISION)) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_67 <= CAST(-0.669438481330872 AS DOUBLE PRECISION)) THEN 13 ELSE 14 END END END AS node_id_2 
FROM tmp_20180602143816_bkn_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte_48 AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data_48" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS DOUBLE PRECISION) AS "E" 
FROM (SELECT 3 AS nid, CAST(-0.847298145300002 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_48 UNION ALL SELECT 4 AS nid, CAST(-0.809201052702112 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_48 UNION ALL SELECT 6 AS nid, CAST(0.943936958779191 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_48 UNION ALL SELECT 7 AS nid, CAST(0.970694733611804 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_48 UNION ALL SELECT 10 AS nid, CAST(-0.853593135608459 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_48 UNION ALL SELECT 11 AS nid, CAST(1.005631379817596 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_48 UNION ALL SELECT 13 AS nid, CAST(0.829856751947664 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_48 UNION ALL SELECT 14 AS nid, CAST(-0.384226057856532 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_48) AS "Values"), 
"DT_Output_48" AS 
(SELECT "DT_node_lookup_48"."KEY" AS "KEY", "DT_node_lookup_48".node_id_2 AS node_id_2, "DT_node_data_48".nid AS nid, "DT_node_data_48"."E" AS "E" 
FROM "DT_node_lookup_48" LEFT OUTER JOIN "DT_node_data_48" ON "DT_node_lookup_48".node_id_2 = "DT_node_data_48".nid), 
"GB_Model_12_0" AS 
(SELECT "DT_Output_48"."KEY" AS "KEY", "DT_Output_48"."E" AS "Score_0", CAST(0.0 AS DOUBLE PRECISION) AS "Score_1", CAST(0.0 AS DOUBLE PRECISION) AS "Score_2", CAST(0.0 AS DOUBLE PRECISION) AS "Score_3" 
FROM "DT_Output_48"), 
"DT_node_lookup_49" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_70 <= CAST(-0.529032468795776 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_64 <= CAST(-1.001801490783691 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_20 <= CAST(0.259887993335724 AS DOUBLE PRECISION)) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_46 <= CAST(-1.063069581985474 AS DOUBLE PRECISION)) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_70 <= CAST(-0.355723977088928 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_36 <= CAST(1.284278750419617 AS DOUBLE PRECISION)) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_18 <= CAST(1.371707201004028 AS DOUBLE PRECISION)) THEN 13 ELSE 14 END END END AS node_id_2 
FROM tmp_20180602143816_bkn_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte_49 AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data_49" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS DOUBLE PRECISION) AS "E" 
FROM (SELECT 3 AS nid, CAST(0.98565668651272 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_49 UNION ALL SELECT 4 AS nid, CAST(1.043797864515099 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_49 UNION ALL SELECT 6 AS nid, CAST(-0.800721904094336 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_49 UNION ALL SELECT 7 AS nid, CAST(-0.874857846710695 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_49 UNION ALL SELECT 10 AS nid, CAST(1.293339233650049 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_49 UNION ALL SELECT 11 AS nid, CAST(-0.805272562128154 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_49 UNION ALL SELECT 13 AS nid, CAST(-0.050243919914588 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_49 UNION ALL SELECT 14 AS nid, CAST(1.120696815488242 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_49) AS "Values"), 
"DT_Output_49" AS 
(SELECT "DT_node_lookup_49"."KEY" AS "KEY", "DT_node_lookup_49".node_id_2 AS node_id_2, "DT_node_data_49".nid AS nid, "DT_node_data_49"."E" AS "E" 
FROM "DT_node_lookup_49" LEFT OUTER JOIN "DT_node_data_49" ON "DT_node_lookup_49".node_id_2 = "DT_node_data_49".nid), 
"GB_Model_12_1" AS 
(SELECT "DT_Output_49"."KEY" AS "KEY", CAST(0.0 AS DOUBLE PRECISION) AS "Score_0", "DT_Output_49"."E" AS "Score_1", CAST(0.0 AS DOUBLE PRECISION) AS "Score_2", CAST(0.0 AS DOUBLE PRECISION) AS "Score_3" 
FROM "DT_Output_49")
 SELECT "GB_B4"."KEY", "GB_B4"."Score_0", "GB_B4"."Score_1", "GB_B4"."Score_2", "GB_B4"."Score_3" 
FROM (SELECT "GB_esu_4"."KEY" AS "KEY", "GB_esu_4"."Score_0" AS "Score_0", "GB_esu_4"."Score_1" AS "Score_1", "GB_esu_4"."Score_2" AS "Score_2", "GB_esu_4"."Score_3" AS "Score_3" 
FROM (SELECT "GB_Model_10_0"."KEY" AS "KEY", "GB_Model_10_0"."Score_0" AS "Score_0", "GB_Model_10_0"."Score_1" AS "Score_1", "GB_Model_10_0"."Score_2" AS "Score_2", "GB_Model_10_0"."Score_3" AS "Score_3" 
FROM "GB_Model_10_0" UNION ALL SELECT "GB_Model_10_1"."KEY" AS "KEY", "GB_Model_10_1"."Score_0" AS "Score_0", "GB_Model_10_1"."Score_1" AS "Score_1", "GB_Model_10_1"."Score_2" AS "Score_2", "GB_Model_10_1"."Score_3" AS "Score_3" 
FROM "GB_Model_10_1" UNION ALL SELECT "GB_Model_10_2"."KEY" AS "KEY", "GB_Model_10_2"."Score_0" AS "Score_0", "GB_Model_10_2"."Score_1" AS "Score_1", "GB_Model_10_2"."Score_2" AS "Score_2", "GB_Model_10_2"."Score_3" AS "Score_3" 
FROM "GB_Model_10_2" UNION ALL SELECT "GB_Model_10_3"."KEY" AS "KEY", "GB_Model_10_3"."Score_0" AS "Score_0", "GB_Model_10_3"."Score_1" AS "Score_1", "GB_Model_10_3"."Score_2" AS "Score_2", "GB_Model_10_3"."Score_3" AS "Score_3" 
FROM "GB_Model_10_3" UNION ALL SELECT "GB_Model_11_0"."KEY" AS "KEY", "GB_Model_11_0"."Score_0" AS "Score_0", "GB_Model_11_0"."Score_1" AS "Score_1", "GB_Model_11_0"."Score_2" AS "Score_2", "GB_Model_11_0"."Score_3" AS "Score_3" 
FROM "GB_Model_11_0" UNION ALL SELECT "GB_Model_11_1"."KEY" AS "KEY", "GB_Model_11_1"."Score_0" AS "Score_0", "GB_Model_11_1"."Score_1" AS "Score_1", "GB_Model_11_1"."Score_2" AS "Score_2", "GB_Model_11_1"."Score_3" AS "Score_3" 
FROM "GB_Model_11_1" UNION ALL SELECT "GB_Model_11_2"."KEY" AS "KEY", "GB_Model_11_2"."Score_0" AS "Score_0", "GB_Model_11_2"."Score_1" AS "Score_1", "GB_Model_11_2"."Score_2" AS "Score_2", "GB_Model_11_2"."Score_3" AS "Score_3" 
FROM "GB_Model_11_2" UNION ALL SELECT "GB_Model_11_3"."KEY" AS "KEY", "GB_Model_11_3"."Score_0" AS "Score_0", "GB_Model_11_3"."Score_1" AS "Score_1", "GB_Model_11_3"."Score_2" AS "Score_2", "GB_Model_11_3"."Score_3" AS "Score_3" 
FROM "GB_Model_11_3" UNION ALL SELECT "GB_Model_12_0"."KEY" AS "KEY", "GB_Model_12_0"."Score_0" AS "Score_0", "GB_Model_12_0"."Score_1" AS "Score_1", "GB_Model_12_0"."Score_2" AS "Score_2", "GB_Model_12_0"."Score_3" AS "Score_3" 
FROM "GB_Model_12_0" UNION ALL SELECT "GB_Model_12_1"."KEY" AS "KEY", "GB_Model_12_1"."Score_0" AS "Score_0", "GB_Model_12_1"."Score_1" AS "Score_1", "GB_Model_12_1"."Score_2" AS "Score_2", "GB_Model_12_1"."Score_3" AS "Score_3" 
FROM "GB_Model_12_1") AS "GB_esu_4") AS "GB_B4") AS "U"

-- Code For temporary table tmp_20180602143816_o6z_gb_b5 part 1. Create 


CREATE GLOBAL TEMPORARY TABLE tmp_20180602143816_o6z_gb_b5  (
	"KEY" BIGINT, 
	"Score_0" DOUBLE PRECISION, 
	"Score_1" DOUBLE PRECISION, 
	"Score_2" DOUBLE PRECISION, 
	"Score_3" DOUBLE PRECISION
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table tmp_20180602143816_o6z_gb_b5 part 2. Populate

INSERT INTO tmp_20180602143816_o6z_gb_b5 ("KEY", "Score_0", "Score_1", "Score_2", "Score_3") SELECT "U"."KEY", "U"."Score_0", "U"."Score_1", "U"."Score_2", "U"."Score_3" 
FROM (WITH "DT_node_lookup_50" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_58 <= CAST(-0.07023861259222 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_21 <= CAST(-0.546957731246948 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_12 <= CAST(0.056686293333769 AS DOUBLE PRECISION)) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_56 <= CAST(0.021886993199587 AS DOUBLE PRECISION)) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= CAST(2.166414737701416 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_46 <= CAST(-0.907541632652283 AS DOUBLE PRECISION)) THEN 10 ELSE 11 END ELSE 12 END END AS node_id_2 
FROM tmp_20180602143816_bkn_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte_50 AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data_50" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS DOUBLE PRECISION) AS "E" 
FROM (SELECT 3 AS nid, CAST(1.284072301008171 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_50 UNION ALL SELECT 4 AS nid, CAST(0.027236841427957 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_50 UNION ALL SELECT 6 AS nid, CAST(0.713476618105804 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_50 UNION ALL SELECT 7 AS nid, CAST(-0.727801126942295 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_50 UNION ALL SELECT 10 AS nid, CAST(0.912737471141154 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_50 UNION ALL SELECT 11 AS nid, CAST(-0.833827082289982 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_50 UNION ALL SELECT 12 AS nid, CAST(1.764538986320998 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_50) AS "Values"), 
"DT_Output_50" AS 
(SELECT "DT_node_lookup_50"."KEY" AS "KEY", "DT_node_lookup_50".node_id_2 AS node_id_2, "DT_node_data_50".nid AS nid, "DT_node_data_50"."E" AS "E" 
FROM "DT_node_lookup_50" LEFT OUTER JOIN "DT_node_data_50" ON "DT_node_lookup_50".node_id_2 = "DT_node_data_50".nid), 
"GB_Model_12_2" AS 
(SELECT "DT_Output_50"."KEY" AS "KEY", CAST(0.0 AS DOUBLE PRECISION) AS "Score_0", CAST(0.0 AS DOUBLE PRECISION) AS "Score_1", "DT_Output_50"."E" AS "Score_2", CAST(0.0 AS DOUBLE PRECISION) AS "Score_3" 
FROM "DT_Output_50"), 
"DT_node_lookup_51" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_22 <= CAST(1.097930073738098 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_24 <= CAST(-1.466227769851684 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_98 <= CAST(1.335448026657104 AS DOUBLE PRECISION)) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_16 <= CAST(1.619352579116821 AS DOUBLE PRECISION)) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_53 <= CAST(0.244987010955811 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= CAST(0.719795882701874 AS DOUBLE PRECISION)) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_79 <= CAST(1.555593729019165 AS DOUBLE PRECISION)) THEN 13 ELSE 14 END END END AS node_id_2 
FROM tmp_20180602143816_bkn_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte_51 AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data_51" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS DOUBLE PRECISION) AS "E" 
FROM (SELECT 3 AS nid, CAST(1.133842764387914 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_51 UNION ALL SELECT 4 AS nid, CAST(-0.822527538292656 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_51 UNION ALL SELECT 6 AS nid, CAST(-0.456837627904207 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_51 UNION ALL SELECT 7 AS nid, CAST(1.053618982010585 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_51 UNION ALL SELECT 10 AS nid, CAST(-0.817208938750663 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_51 UNION ALL SELECT 11 AS nid, CAST(1.000866786859884 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_51 UNION ALL SELECT 13 AS nid, CAST(0.993563978270364 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_51 UNION ALL SELECT 14 AS nid, CAST(1.385647812832585 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_51) AS "Values"), 
"DT_Output_51" AS 
(SELECT "DT_node_lookup_51"."KEY" AS "KEY", "DT_node_lookup_51".node_id_2 AS node_id_2, "DT_node_data_51".nid AS nid, "DT_node_data_51"."E" AS "E" 
FROM "DT_node_lookup_51" LEFT OUTER JOIN "DT_node_data_51" ON "DT_node_lookup_51".node_id_2 = "DT_node_data_51".nid), 
"GB_Model_12_3" AS 
(SELECT "DT_Output_51"."KEY" AS "KEY", CAST(0.0 AS DOUBLE PRECISION) AS "Score_0", CAST(0.0 AS DOUBLE PRECISION) AS "Score_1", CAST(0.0 AS DOUBLE PRECISION) AS "Score_2", "DT_Output_51"."E" AS "Score_3" 
FROM "DT_Output_51"), 
"DT_node_lookup_52" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_80 <= CAST(-0.155378341674805 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= CAST(-1.84721565246582 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_46 <= CAST(0.083161175251007 AS DOUBLE PRECISION)) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_21 <= CAST(-0.307403236627579 AS DOUBLE PRECISION)) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_50 <= CAST(-0.184253960847855 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_46 <= CAST(1.195999979972839 AS DOUBLE PRECISION)) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= CAST(-0.735676765441894 AS DOUBLE PRECISION)) THEN 13 ELSE 14 END END END AS node_id_2 
FROM tmp_20180602143816_bkn_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte_52 AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data_52" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS DOUBLE PRECISION) AS "E" 
FROM (SELECT 3 AS nid, CAST(0.918999571049785 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_52 UNION ALL SELECT 4 AS nid, CAST(0.942745317375315 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_52 UNION ALL SELECT 6 AS nid, CAST(-0.836443524730966 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_52 UNION ALL SELECT 7 AS nid, CAST(-0.802906410360766 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_52 UNION ALL SELECT 10 AS nid, CAST(0.880838766523033 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_52 UNION ALL SELECT 11 AS nid, CAST(-0.853223727110492 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_52 UNION ALL SELECT 13 AS nid, CAST(0.578698360308575 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_52 UNION ALL SELECT 14 AS nid, CAST(-0.603191965020643 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_52) AS "Values"), 
"DT_Output_52" AS 
(SELECT "DT_node_lookup_52"."KEY" AS "KEY", "DT_node_lookup_52".node_id_2 AS node_id_2, "DT_node_data_52".nid AS nid, "DT_node_data_52"."E" AS "E" 
FROM "DT_node_lookup_52" LEFT OUTER JOIN "DT_node_data_52" ON "DT_node_lookup_52".node_id_2 = "DT_node_data_52".nid), 
"GB_Model_13_0" AS 
(SELECT "DT_Output_52"."KEY" AS "KEY", "DT_Output_52"."E" AS "Score_0", CAST(0.0 AS DOUBLE PRECISION) AS "Score_1", CAST(0.0 AS DOUBLE PRECISION) AS "Score_2", CAST(0.0 AS DOUBLE PRECISION) AS "Score_3" 
FROM "DT_Output_52"), 
"DT_node_lookup_53" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_45 <= CAST(-0.736328721046448 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_49 <= CAST(0.373026013374329 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_98 <= CAST(-0.8627969622612 AS DOUBLE PRECISION)) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_66 <= CAST(-1.179786801338196 AS DOUBLE PRECISION)) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_61 <= CAST(-1.88694167137146 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_60 <= CAST(0.552681386470795 AS DOUBLE PRECISION)) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_45 <= CAST(0.976987957954407 AS DOUBLE PRECISION)) THEN 13 ELSE 14 END END END AS node_id_2 
FROM tmp_20180602143816_bkn_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte_53 AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data_53" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS DOUBLE PRECISION) AS "E" 
FROM (SELECT 3 AS nid, CAST(1.249040685390615 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_53 UNION ALL SELECT 4 AS nid, CAST(-0.820280406475369 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_53 UNION ALL SELECT 6 AS nid, CAST(-0.934665904125251 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_53 UNION ALL SELECT 7 AS nid, CAST(1.131350734579706 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_53 UNION ALL SELECT 10 AS nid, CAST(1.087911708699665 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_53 UNION ALL SELECT 11 AS nid, CAST(0.973733033202959 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_53 UNION ALL SELECT 13 AS nid, CAST(-0.550717677474007 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_53 UNION ALL SELECT 14 AS nid, CAST(0.489538118484856 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_53) AS "Values"), 
"DT_Output_53" AS 
(SELECT "DT_node_lookup_53"."KEY" AS "KEY", "DT_node_lookup_53".node_id_2 AS node_id_2, "DT_node_data_53".nid AS nid, "DT_node_data_53"."E" AS "E" 
FROM "DT_node_lookup_53" LEFT OUTER JOIN "DT_node_data_53" ON "DT_node_lookup_53".node_id_2 = "DT_node_data_53".nid), 
"GB_Model_13_1" AS 
(SELECT "DT_Output_53"."KEY" AS "KEY", CAST(0.0 AS DOUBLE PRECISION) AS "Score_0", "DT_Output_53"."E" AS "Score_1", CAST(0.0 AS DOUBLE PRECISION) AS "Score_2", CAST(0.0 AS DOUBLE PRECISION) AS "Score_3" 
FROM "DT_Output_53"), 
"DT_node_lookup_54" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_58 <= CAST(-0.07023861259222 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_21 <= CAST(-0.546957731246948 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_12 <= CAST(0.056686293333769 AS DOUBLE PRECISION)) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_56 <= CAST(0.021886993199587 AS DOUBLE PRECISION)) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= CAST(2.166414737701416 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_46 <= CAST(-0.907541632652283 AS DOUBLE PRECISION)) THEN 10 ELSE 11 END ELSE 12 END END AS node_id_2 
FROM tmp_20180602143816_bkn_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte_54 AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data_54" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS DOUBLE PRECISION) AS "E" 
FROM (SELECT 3 AS nid, CAST(1.20230746941736 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_54 UNION ALL SELECT 4 AS nid, CAST(0.020976383045942 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_54 UNION ALL SELECT 6 AS nid, CAST(0.675924714015969 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_54 UNION ALL SELECT 7 AS nid, CAST(-0.704331196010733 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_54 UNION ALL SELECT 10 AS nid, CAST(0.887662939515499 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_54 UNION ALL SELECT 11 AS nid, CAST(-0.825682383409138 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_54 UNION ALL SELECT 12 AS nid, CAST(1.540464437104436 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_54) AS "Values"), 
"DT_Output_54" AS 
(SELECT "DT_node_lookup_54"."KEY" AS "KEY", "DT_node_lookup_54".node_id_2 AS node_id_2, "DT_node_data_54".nid AS nid, "DT_node_data_54"."E" AS "E" 
FROM "DT_node_lookup_54" LEFT OUTER JOIN "DT_node_data_54" ON "DT_node_lookup_54".node_id_2 = "DT_node_data_54".nid), 
"GB_Model_13_2" AS 
(SELECT "DT_Output_54"."KEY" AS "KEY", CAST(0.0 AS DOUBLE PRECISION) AS "Score_0", CAST(0.0 AS DOUBLE PRECISION) AS "Score_1", "DT_Output_54"."E" AS "Score_2", CAST(0.0 AS DOUBLE PRECISION) AS "Score_3" 
FROM "DT_Output_54"), 
"DT_node_lookup_55" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_22 <= CAST(1.097930073738098 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_101 <= CAST(-1.327006816864014 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_76 <= CAST(0.070805944502354 AS DOUBLE PRECISION)) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_16 <= CAST(1.270020008087158 AS DOUBLE PRECISION)) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_53 <= CAST(0.244987010955811 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_19 <= CAST(1.382076382637024 AS DOUBLE PRECISION)) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_75 <= CAST(1.204460263252258 AS DOUBLE PRECISION)) THEN 13 ELSE 14 END END END AS node_id_2 
FROM tmp_20180602143816_bkn_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte_55 AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data_55" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS DOUBLE PRECISION) AS "E" 
FROM (SELECT 3 AS nid, CAST(-0.183346634658603 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_55 UNION ALL SELECT 4 AS nid, CAST(1.00627905154388 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_55 UNION ALL SELECT 6 AS nid, CAST(-0.576880200154634 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_55 UNION ALL SELECT 7 AS nid, CAST(0.643610448083356 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_55 UNION ALL SELECT 10 AS nid, CAST(-0.809068068197545 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_55 UNION ALL SELECT 11 AS nid, CAST(0.959144175711984 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_55 UNION ALL SELECT 13 AS nid, CAST(0.957652049805648 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_55 UNION ALL SELECT 14 AS nid, CAST(1.27015305787607 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_55) AS "Values"), 
"DT_Output_55" AS 
(SELECT "DT_node_lookup_55"."KEY" AS "KEY", "DT_node_lookup_55".node_id_2 AS node_id_2, "DT_node_data_55".nid AS nid, "DT_node_data_55"."E" AS "E" 
FROM "DT_node_lookup_55" LEFT OUTER JOIN "DT_node_data_55" ON "DT_node_lookup_55".node_id_2 = "DT_node_data_55".nid), 
"GB_Model_13_3" AS 
(SELECT "DT_Output_55"."KEY" AS "KEY", CAST(0.0 AS DOUBLE PRECISION) AS "Score_0", CAST(0.0 AS DOUBLE PRECISION) AS "Score_1", CAST(0.0 AS DOUBLE PRECISION) AS "Score_2", "DT_Output_55"."E" AS "Score_3" 
FROM "DT_Output_55"), 
"DT_node_lookup_56" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_21 <= CAST(1.759374141693115 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_39 <= CAST(1.738533973693848 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_45 <= CAST(0.248610928654671 AS DOUBLE PRECISION)) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_44 <= CAST(0.042100757360458 AS DOUBLE PRECISION)) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= CAST(-0.993315279483795 AS DOUBLE PRECISION)) THEN 9 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_79 <= CAST(0.424704194068909 AS DOUBLE PRECISION)) THEN 11 ELSE 12 END END END AS node_id_2 
FROM tmp_20180602143816_bkn_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte_56 AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data_56" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS DOUBLE PRECISION) AS "E" 
FROM (SELECT 3 AS nid, CAST(-0.60522670943799 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_56 UNION ALL SELECT 4 AS nid, CAST(0.220934927998793 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_56 UNION ALL SELECT 6 AS nid, CAST(0.996097184070145 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_56 UNION ALL SELECT 7 AS nid, CAST(1.021364244997794 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_56 UNION ALL SELECT 9 AS nid, CAST(1.268439581256956 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_56 UNION ALL SELECT 11 AS nid, CAST(0.983379437933415 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_56 UNION ALL SELECT 12 AS nid, CAST(0.908716161857458 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_56) AS "Values"), 
"DT_Output_56" AS 
(SELECT "DT_node_lookup_56"."KEY" AS "KEY", "DT_node_lookup_56".node_id_2 AS node_id_2, "DT_node_data_56".nid AS nid, "DT_node_data_56"."E" AS "E" 
FROM "DT_node_lookup_56" LEFT OUTER JOIN "DT_node_data_56" ON "DT_node_lookup_56".node_id_2 = "DT_node_data_56".nid), 
"GB_Model_14_0" AS 
(SELECT "DT_Output_56"."KEY" AS "KEY", "DT_Output_56"."E" AS "Score_0", CAST(0.0 AS DOUBLE PRECISION) AS "Score_1", CAST(0.0 AS DOUBLE PRECISION) AS "Score_2", CAST(0.0 AS DOUBLE PRECISION) AS "Score_3" 
FROM "DT_Output_56"), 
"DT_node_lookup_57" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_69 <= CAST(-1.659358382225036 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_79 <= CAST(-0.276187062263489 AS DOUBLE PRECISION)) THEN 2 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_29 <= CAST(1.845067262649536 AS DOUBLE PRECISION)) THEN 4 ELSE 5 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_12 <= CAST(-1.627345085144043 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= CAST(-0.45977720618248 AS DOUBLE PRECISION)) THEN 8 ELSE 9 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= CAST(-1.693190217018128 AS DOUBLE PRECISION)) THEN 11 ELSE 12 END END END AS node_id_2 
FROM tmp_20180602143816_bkn_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte_57 AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data_57" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS DOUBLE PRECISION) AS "E" 
FROM (SELECT 2 AS nid, CAST(0.955059421815203 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_57 UNION ALL SELECT 4 AS nid, CAST(1.029989466846614 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_57 UNION ALL SELECT 5 AS nid, CAST(0.993977313647056 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_57 UNION ALL SELECT 8 AS nid, CAST(1.108960219363811 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_57 UNION ALL SELECT 9 AS nid, CAST(0.954142040376696 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_57 UNION ALL SELECT 11 AS nid, CAST(0.9903963980367 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_57 UNION ALL SELECT 12 AS nid, CAST(-0.227719251882804 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_57) AS "Values"), 
"DT_Output_57" AS 
(SELECT "DT_node_lookup_57"."KEY" AS "KEY", "DT_node_lookup_57".node_id_2 AS node_id_2, "DT_node_data_57".nid AS nid, "DT_node_data_57"."E" AS "E" 
FROM "DT_node_lookup_57" LEFT OUTER JOIN "DT_node_data_57" ON "DT_node_lookup_57".node_id_2 = "DT_node_data_57".nid), 
"GB_Model_14_1" AS 
(SELECT "DT_Output_57"."KEY" AS "KEY", CAST(0.0 AS DOUBLE PRECISION) AS "Score_0", "DT_Output_57"."E" AS "Score_1", CAST(0.0 AS DOUBLE PRECISION) AS "Score_2", CAST(0.0 AS DOUBLE PRECISION) AS "Score_3" 
FROM "DT_Output_57"), 
"DT_node_lookup_58" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_58 <= CAST(-0.07023861259222 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_21 <= CAST(-0.546957731246948 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_46 <= CAST(-0.302202075719833 AS DOUBLE PRECISION)) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_56 <= CAST(0.021886993199587 AS DOUBLE PRECISION)) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_88 <= CAST(1.850634932518005 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_46 <= CAST(-0.907541632652283 AS DOUBLE PRECISION)) THEN 10 ELSE 11 END ELSE 12 END END AS node_id_2 
FROM tmp_20180602143816_bkn_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte_58 AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data_58" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS DOUBLE PRECISION) AS "E" 
FROM (SELECT 3 AS nid, CAST(0.48051386091159 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_58 UNION ALL SELECT 4 AS nid, CAST(1.192031896708015 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_58 UNION ALL SELECT 6 AS nid, CAST(0.638528858068754 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_58 UNION ALL SELECT 7 AS nid, CAST(-0.685839293961585 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_58 UNION ALL SELECT 10 AS nid, CAST(0.870371779734089 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_58 UNION ALL SELECT 11 AS nid, CAST(-0.818285586239503 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_58 UNION ALL SELECT 12 AS nid, CAST(1.397256931129018 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_58) AS "Values"), 
"DT_Output_58" AS 
(SELECT "DT_node_lookup_58"."KEY" AS "KEY", "DT_node_lookup_58".node_id_2 AS node_id_2, "DT_node_data_58".nid AS nid, "DT_node_data_58"."E" AS "E" 
FROM "DT_node_lookup_58" LEFT OUTER JOIN "DT_node_data_58" ON "DT_node_lookup_58".node_id_2 = "DT_node_data_58".nid), 
"GB_Model_14_2" AS 
(SELECT "DT_Output_58"."KEY" AS "KEY", CAST(0.0 AS DOUBLE PRECISION) AS "Score_0", CAST(0.0 AS DOUBLE PRECISION) AS "Score_1", "DT_Output_58"."E" AS "Score_2", CAST(0.0 AS DOUBLE PRECISION) AS "Score_3" 
FROM "DT_Output_58"), 
"DT_node_lookup_59" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_87 <= CAST(-1.621426105499268 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_86 <= CAST(0.163010448217392 AS DOUBLE PRECISION)) THEN 2 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_25 <= CAST(-0.428598582744598 AS DOUBLE PRECISION)) THEN 4 ELSE 5 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_53 <= CAST(1.564861536026001 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_16 <= CAST(1.270020008087158 AS DOUBLE PRECISION)) THEN 8 ELSE 9 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_24 <= CAST(1.003382802009582 AS DOUBLE PRECISION)) THEN 11 ELSE 12 END END END AS node_id_2 
FROM tmp_20180602143816_bkn_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte_59 AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data_59" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS DOUBLE PRECISION) AS "E" 
FROM (SELECT 2 AS nid, CAST(-0.795379914997384 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_59 UNION ALL SELECT 4 AS nid, CAST(1.185623825707481 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_59 UNION ALL SELECT 5 AS nid, CAST(1.115338318860158 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_59 UNION ALL SELECT 8 AS nid, CAST(-0.37524544185619 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_59 UNION ALL SELECT 9 AS nid, CAST(0.67451241339354 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_59 UNION ALL SELECT 11 AS nid, CAST(0.955826964781225 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_59 UNION ALL SELECT 12 AS nid, CAST(0.88047081956042 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_59) AS "Values"), 
"DT_Output_59" AS 
(SELECT "DT_node_lookup_59"."KEY" AS "KEY", "DT_node_lookup_59".node_id_2 AS node_id_2, "DT_node_data_59".nid AS nid, "DT_node_data_59"."E" AS "E" 
FROM "DT_node_lookup_59" LEFT OUTER JOIN "DT_node_data_59" ON "DT_node_lookup_59".node_id_2 = "DT_node_data_59".nid), 
"GB_Model_14_3" AS 
(SELECT "DT_Output_59"."KEY" AS "KEY", CAST(0.0 AS DOUBLE PRECISION) AS "Score_0", CAST(0.0 AS DOUBLE PRECISION) AS "Score_1", CAST(0.0 AS DOUBLE PRECISION) AS "Score_2", "DT_Output_59"."E" AS "Score_3" 
FROM "DT_Output_59")
 SELECT "GB_B5"."KEY", "GB_B5"."Score_0", "GB_B5"."Score_1", "GB_B5"."Score_2", "GB_B5"."Score_3" 
FROM (SELECT "GB_esu_5"."KEY" AS "KEY", "GB_esu_5"."Score_0" AS "Score_0", "GB_esu_5"."Score_1" AS "Score_1", "GB_esu_5"."Score_2" AS "Score_2", "GB_esu_5"."Score_3" AS "Score_3" 
FROM (SELECT "GB_Model_12_2"."KEY" AS "KEY", "GB_Model_12_2"."Score_0" AS "Score_0", "GB_Model_12_2"."Score_1" AS "Score_1", "GB_Model_12_2"."Score_2" AS "Score_2", "GB_Model_12_2"."Score_3" AS "Score_3" 
FROM "GB_Model_12_2" UNION ALL SELECT "GB_Model_12_3"."KEY" AS "KEY", "GB_Model_12_3"."Score_0" AS "Score_0", "GB_Model_12_3"."Score_1" AS "Score_1", "GB_Model_12_3"."Score_2" AS "Score_2", "GB_Model_12_3"."Score_3" AS "Score_3" 
FROM "GB_Model_12_3" UNION ALL SELECT "GB_Model_13_0"."KEY" AS "KEY", "GB_Model_13_0"."Score_0" AS "Score_0", "GB_Model_13_0"."Score_1" AS "Score_1", "GB_Model_13_0"."Score_2" AS "Score_2", "GB_Model_13_0"."Score_3" AS "Score_3" 
FROM "GB_Model_13_0" UNION ALL SELECT "GB_Model_13_1"."KEY" AS "KEY", "GB_Model_13_1"."Score_0" AS "Score_0", "GB_Model_13_1"."Score_1" AS "Score_1", "GB_Model_13_1"."Score_2" AS "Score_2", "GB_Model_13_1"."Score_3" AS "Score_3" 
FROM "GB_Model_13_1" UNION ALL SELECT "GB_Model_13_2"."KEY" AS "KEY", "GB_Model_13_2"."Score_0" AS "Score_0", "GB_Model_13_2"."Score_1" AS "Score_1", "GB_Model_13_2"."Score_2" AS "Score_2", "GB_Model_13_2"."Score_3" AS "Score_3" 
FROM "GB_Model_13_2" UNION ALL SELECT "GB_Model_13_3"."KEY" AS "KEY", "GB_Model_13_3"."Score_0" AS "Score_0", "GB_Model_13_3"."Score_1" AS "Score_1", "GB_Model_13_3"."Score_2" AS "Score_2", "GB_Model_13_3"."Score_3" AS "Score_3" 
FROM "GB_Model_13_3" UNION ALL SELECT "GB_Model_14_0"."KEY" AS "KEY", "GB_Model_14_0"."Score_0" AS "Score_0", "GB_Model_14_0"."Score_1" AS "Score_1", "GB_Model_14_0"."Score_2" AS "Score_2", "GB_Model_14_0"."Score_3" AS "Score_3" 
FROM "GB_Model_14_0" UNION ALL SELECT "GB_Model_14_1"."KEY" AS "KEY", "GB_Model_14_1"."Score_0" AS "Score_0", "GB_Model_14_1"."Score_1" AS "Score_1", "GB_Model_14_1"."Score_2" AS "Score_2", "GB_Model_14_1"."Score_3" AS "Score_3" 
FROM "GB_Model_14_1" UNION ALL SELECT "GB_Model_14_2"."KEY" AS "KEY", "GB_Model_14_2"."Score_0" AS "Score_0", "GB_Model_14_2"."Score_1" AS "Score_1", "GB_Model_14_2"."Score_2" AS "Score_2", "GB_Model_14_2"."Score_3" AS "Score_3" 
FROM "GB_Model_14_2" UNION ALL SELECT "GB_Model_14_3"."KEY" AS "KEY", "GB_Model_14_3"."Score_0" AS "Score_0", "GB_Model_14_3"."Score_1" AS "Score_1", "GB_Model_14_3"."Score_2" AS "Score_2", "GB_Model_14_3"."Score_3" AS "Score_3" 
FROM "GB_Model_14_3") AS "GB_esu_5") AS "GB_B5") AS "U"

-- Code For temporary table tmp_20180602143816_9j2_gb_b6 part 1. Create 


CREATE GLOBAL TEMPORARY TABLE tmp_20180602143816_9j2_gb_b6  (
	"KEY" BIGINT, 
	"Score_0" DOUBLE PRECISION, 
	"Score_1" DOUBLE PRECISION, 
	"Score_2" DOUBLE PRECISION, 
	"Score_3" DOUBLE PRECISION
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table tmp_20180602143816_9j2_gb_b6 part 2. Populate

INSERT INTO tmp_20180602143816_9j2_gb_b6 ("KEY", "Score_0", "Score_1", "Score_2", "Score_3") SELECT "U"."KEY", "U"."Score_0", "U"."Score_1", "U"."Score_2", "U"."Score_3" 
FROM (WITH "DT_node_lookup_60" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_80 <= CAST(-0.155378341674805 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_28 <= CAST(2.14944052696228 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_76 <= CAST(-1.123494625091553 AS DOUBLE PRECISION)) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_58 <= CAST(-0.160848170518875 AS DOUBLE PRECISION)) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_50 <= CAST(-0.184253960847855 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_51 <= CAST(0.717638790607452 AS DOUBLE PRECISION)) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_73 <= CAST(0.827742040157318 AS DOUBLE PRECISION)) THEN 13 ELSE 14 END END END AS node_id_2 
FROM tmp_20180602143816_bkn_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte_60 AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data_60" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS DOUBLE PRECISION) AS "E" 
FROM (SELECT 3 AS nid, CAST(-0.834371674492601 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_60 UNION ALL SELECT 4 AS nid, CAST(-0.8024230807287 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_60 UNION ALL SELECT 6 AS nid, CAST(0.916453417883871 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_60 UNION ALL SELECT 7 AS nid, CAST(0.881257516687635 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_60 UNION ALL SELECT 10 AS nid, CAST(0.962797241498075 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_60 UNION ALL SELECT 11 AS nid, CAST(0.212490803240292 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_60 UNION ALL SELECT 13 AS nid, CAST(-0.385157477540055 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_60 UNION ALL SELECT 14 AS nid, CAST(0.810897554217223 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_60) AS "Values"), 
"DT_Output_60" AS 
(SELECT "DT_node_lookup_60"."KEY" AS "KEY", "DT_node_lookup_60".node_id_2 AS node_id_2, "DT_node_data_60".nid AS nid, "DT_node_data_60"."E" AS "E" 
FROM "DT_node_lookup_60" LEFT OUTER JOIN "DT_node_data_60" ON "DT_node_lookup_60".node_id_2 = "DT_node_data_60".nid), 
"GB_Model_15_0" AS 
(SELECT "DT_Output_60"."KEY" AS "KEY", "DT_Output_60"."E" AS "Score_0", CAST(0.0 AS DOUBLE PRECISION) AS "Score_1", CAST(0.0 AS DOUBLE PRECISION) AS "Score_2", CAST(0.0 AS DOUBLE PRECISION) AS "Score_3" 
FROM "DT_Output_60"), 
"DT_node_lookup_61" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= CAST(2.375492334365844 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_40 <= CAST(-0.978162407875061 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= CAST(-0.628494799137116 AS DOUBLE PRECISION)) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_75 <= CAST(1.629674911499024 AS DOUBLE PRECISION)) THEN 6 ELSE 7 END END ELSE 8 END AS node_id_2 
FROM tmp_20180602143816_bkn_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte_61 AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data_61" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS DOUBLE PRECISION) AS "E" 
FROM (SELECT 3 AS nid, CAST(-0.816312102231667 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_61 UNION ALL SELECT 4 AS nid, CAST(0.829551130124445 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_61 UNION ALL SELECT 6 AS nid, CAST(-0.323930857146084 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_61 UNION ALL SELECT 7 AS nid, CAST(0.8353037945266 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_61 UNION ALL SELECT 8 AS nid, CAST(1.446082967779353 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_61) AS "Values"), 
"DT_Output_61" AS 
(SELECT "DT_node_lookup_61"."KEY" AS "KEY", "DT_node_lookup_61".node_id_2 AS node_id_2, "DT_node_data_61".nid AS nid, "DT_node_data_61"."E" AS "E" 
FROM "DT_node_lookup_61" LEFT OUTER JOIN "DT_node_data_61" ON "DT_node_lookup_61".node_id_2 = "DT_node_data_61".nid), 
"GB_Model_15_1" AS 
(SELECT "DT_Output_61"."KEY" AS "KEY", CAST(0.0 AS DOUBLE PRECISION) AS "Score_0", "DT_Output_61"."E" AS "Score_1", CAST(0.0 AS DOUBLE PRECISION) AS "Score_2", CAST(0.0 AS DOUBLE PRECISION) AS "Score_3" 
FROM "DT_Output_61"), 
"DT_node_lookup_62" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_52 <= CAST(-1.49463677406311 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_23 <= CAST(-0.938928008079529 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_95 <= CAST(-0.05549344420433 AS DOUBLE PRECISION)) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_78 <= CAST(0.301680117845535 AS DOUBLE PRECISION)) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_55 <= CAST(1.589983463287354 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_15 <= CAST(-2.116902351379394 AS DOUBLE PRECISION)) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_95 <= CAST(-0.774695992469788 AS DOUBLE PRECISION)) THEN 13 ELSE 14 END END END AS node_id_2 
FROM tmp_20180602143816_bkn_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte_62 AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data_62" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS DOUBLE PRECISION) AS "E" 
FROM (SELECT 3 AS nid, CAST(1.426059673448819 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_62 UNION ALL SELECT 4 AS nid, CAST(1.09249678263577 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_62 UNION ALL SELECT 6 AS nid, CAST(-0.797072423209948 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_62 UNION ALL SELECT 7 AS nid, CAST(0.879492105495652 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_62 UNION ALL SELECT 10 AS nid, CAST(1.089015596617365 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_62 UNION ALL SELECT 11 AS nid, CAST(-0.299390596884707 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_62 UNION ALL SELECT 13 AS nid, CAST(0.859796636266798 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_62 UNION ALL SELECT 14 AS nid, CAST(1.070119344928069 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_62) AS "Values"), 
"DT_Output_62" AS 
(SELECT "DT_node_lookup_62"."KEY" AS "KEY", "DT_node_lookup_62".node_id_2 AS node_id_2, "DT_node_data_62".nid AS nid, "DT_node_data_62"."E" AS "E" 
FROM "DT_node_lookup_62" LEFT OUTER JOIN "DT_node_data_62" ON "DT_node_lookup_62".node_id_2 = "DT_node_data_62".nid), 
"GB_Model_15_2" AS 
(SELECT "DT_Output_62"."KEY" AS "KEY", CAST(0.0 AS DOUBLE PRECISION) AS "Score_0", CAST(0.0 AS DOUBLE PRECISION) AS "Score_1", "DT_Output_62"."E" AS "Score_2", CAST(0.0 AS DOUBLE PRECISION) AS "Score_3" 
FROM "DT_Output_62"), 
"DT_node_lookup_63" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_46 <= CAST(0.93085503578186 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_44 <= CAST(1.556024551391602 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_53 <= CAST(1.564861536026001 AS DOUBLE PRECISION)) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_43 <= CAST(0.459429502487183 AS DOUBLE PRECISION)) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_101 <= CAST(-0.029002565890551 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_28 <= CAST(-0.879472374916077 AS DOUBLE PRECISION)) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_36 <= CAST(0.692070364952087 AS DOUBLE PRECISION)) THEN 13 ELSE 14 END END END AS node_id_2 
FROM tmp_20180602143816_bkn_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte_63 AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data_63" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS DOUBLE PRECISION) AS "E" 
FROM (SELECT 3 AS nid, CAST(-0.469327950427029 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_63 UNION ALL SELECT 4 AS nid, CAST(0.93693292500681 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_63 UNION ALL SELECT 6 AS nid, CAST(0.648781299082342 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_63 UNION ALL SELECT 7 AS nid, CAST(1.177514672321674 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_63 UNION ALL SELECT 10 AS nid, CAST(1.043475068683261 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_63 UNION ALL SELECT 11 AS nid, CAST(0.93675100318634 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_63 UNION ALL SELECT 13 AS nid, CAST(-0.833220517722234 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_63 UNION ALL SELECT 14 AS nid, CAST(0.911408298760363 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_63) AS "Values"), 
"DT_Output_63" AS 
(SELECT "DT_node_lookup_63"."KEY" AS "KEY", "DT_node_lookup_63".node_id_2 AS node_id_2, "DT_node_data_63".nid AS nid, "DT_node_data_63"."E" AS "E" 
FROM "DT_node_lookup_63" LEFT OUTER JOIN "DT_node_data_63" ON "DT_node_lookup_63".node_id_2 = "DT_node_data_63".nid), 
"GB_Model_15_3" AS 
(SELECT "DT_Output_63"."KEY" AS "KEY", CAST(0.0 AS DOUBLE PRECISION) AS "Score_0", CAST(0.0 AS DOUBLE PRECISION) AS "Score_1", CAST(0.0 AS DOUBLE PRECISION) AS "Score_2", "DT_Output_63"."E" AS "Score_3" 
FROM "DT_Output_63")
 SELECT "GB_B6"."KEY", "GB_B6"."Score_0", "GB_B6"."Score_1", "GB_B6"."Score_2", "GB_B6"."Score_3" 
FROM (SELECT "GB_esu_6"."KEY" AS "KEY", "GB_esu_6"."Score_0" AS "Score_0", "GB_esu_6"."Score_1" AS "Score_1", "GB_esu_6"."Score_2" AS "Score_2", "GB_esu_6"."Score_3" AS "Score_3" 
FROM (SELECT "GB_Model_15_0"."KEY" AS "KEY", "GB_Model_15_0"."Score_0" AS "Score_0", "GB_Model_15_0"."Score_1" AS "Score_1", "GB_Model_15_0"."Score_2" AS "Score_2", "GB_Model_15_0"."Score_3" AS "Score_3" 
FROM "GB_Model_15_0" UNION ALL SELECT "GB_Model_15_1"."KEY" AS "KEY", "GB_Model_15_1"."Score_0" AS "Score_0", "GB_Model_15_1"."Score_1" AS "Score_1", "GB_Model_15_1"."Score_2" AS "Score_2", "GB_Model_15_1"."Score_3" AS "Score_3" 
FROM "GB_Model_15_1" UNION ALL SELECT "GB_Model_15_2"."KEY" AS "KEY", "GB_Model_15_2"."Score_0" AS "Score_0", "GB_Model_15_2"."Score_1" AS "Score_1", "GB_Model_15_2"."Score_2" AS "Score_2", "GB_Model_15_2"."Score_3" AS "Score_3" 
FROM "GB_Model_15_2" UNION ALL SELECT "GB_Model_15_3"."KEY" AS "KEY", "GB_Model_15_3"."Score_0" AS "Score_0", "GB_Model_15_3"."Score_1" AS "Score_1", "GB_Model_15_3"."Score_2" AS "Score_2", "GB_Model_15_3"."Score_3" AS "Score_3" 
FROM "GB_Model_15_3") AS "GB_esu_6") AS "GB_B6") AS "U"

-- Code For temporary table tmp_20180602143816_6e6_gb_sum part 1. Create 


CREATE GLOBAL TEMPORARY TABLE tmp_20180602143816_6e6_gb_sum  (
	"KEY" BIGINT, 
	"Score_0" DOUBLE PRECISION, 
	"Score_1" DOUBLE PRECISION, 
	"Score_2" DOUBLE PRECISION, 
	"Score_3" DOUBLE PRECISION
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table tmp_20180602143816_6e6_gb_sum part 2. Populate

INSERT INTO tmp_20180602143816_6e6_gb_sum ("KEY", "Score_0", "Score_1", "Score_2", "Score_3") SELECT "U"."KEY", "U"."Score_0", "U"."Score_1", "U"."Score_2", "U"."Score_3" 
FROM (WITH "GB_Union" AS 
(SELECT "GB_EnsembleUnion"."KEY" AS "KEY", "GB_EnsembleUnion"."Score_0" AS "Score_0", "GB_EnsembleUnion"."Score_1" AS "Score_1", "GB_EnsembleUnion"."Score_2" AS "Score_2", "GB_EnsembleUnion"."Score_3" AS "Score_3" 
FROM (SELECT "GB_B0"."KEY" AS "KEY", "GB_B0"."Score_0" AS "Score_0", "GB_B0"."Score_1" AS "Score_1", "GB_B0"."Score_2" AS "Score_2", "GB_B0"."Score_3" AS "Score_3" 
FROM tmp_20180602143816_ir7_gb_b0 AS "GB_B0" UNION ALL SELECT "GB_B1"."KEY" AS "KEY", "GB_B1"."Score_0" AS "Score_0", "GB_B1"."Score_1" AS "Score_1", "GB_B1"."Score_2" AS "Score_2", "GB_B1"."Score_3" AS "Score_3" 
FROM tmp_20180602143816_lh9_gb_b1 AS "GB_B1" UNION ALL SELECT "GB_B2"."KEY" AS "KEY", "GB_B2"."Score_0" AS "Score_0", "GB_B2"."Score_1" AS "Score_1", "GB_B2"."Score_2" AS "Score_2", "GB_B2"."Score_3" AS "Score_3" 
FROM tmp_20180602143816_lrg_gb_b2 AS "GB_B2" UNION ALL SELECT "GB_B3"."KEY" AS "KEY", "GB_B3"."Score_0" AS "Score_0", "GB_B3"."Score_1" AS "Score_1", "GB_B3"."Score_2" AS "Score_2", "GB_B3"."Score_3" AS "Score_3" 
FROM tmp_20180602143816_an0_gb_b3 AS "GB_B3" UNION ALL SELECT "GB_B4"."KEY" AS "KEY", "GB_B4"."Score_0" AS "Score_0", "GB_B4"."Score_1" AS "Score_1", "GB_B4"."Score_2" AS "Score_2", "GB_B4"."Score_3" AS "Score_3" 
FROM tmp_20180602143816_ef3_gb_b4 AS "GB_B4" UNION ALL SELECT "GB_B5"."KEY" AS "KEY", "GB_B5"."Score_0" AS "Score_0", "GB_B5"."Score_1" AS "Score_1", "GB_B5"."Score_2" AS "Score_2", "GB_B5"."Score_3" AS "Score_3" 
FROM tmp_20180602143816_o6z_gb_b5 AS "GB_B5" UNION ALL SELECT "GB_B6"."KEY" AS "KEY", "GB_B6"."Score_0" AS "Score_0", "GB_B6"."Score_1" AS "Score_1", "GB_B6"."Score_2" AS "Score_2", "GB_B6"."Score_3" AS "Score_3" 
FROM tmp_20180602143816_9j2_gb_b6 AS "GB_B6") AS "GB_EnsembleUnion")
 SELECT "GB_sum"."KEY", "GB_sum"."Score_0", "GB_sum"."Score_1", "GB_sum"."Score_2", "GB_sum"."Score_3" 
FROM (SELECT "T"."KEY" AS "KEY", CAST("T"."Score_0" AS DOUBLE PRECISION) AS "Score_0", CAST("T"."Score_1" AS DOUBLE PRECISION) AS "Score_1", CAST("T"."Score_2" AS DOUBLE PRECISION) AS "Score_2", CAST("T"."Score_3" AS DOUBLE PRECISION) AS "Score_3" 
FROM (SELECT "GB_Union"."KEY" AS "KEY", sum("GB_Union"."Score_0") AS "Score_0", sum("GB_Union"."Score_1") AS "Score_1", sum("GB_Union"."Score_2") AS "Score_2", sum("GB_Union"."Score_3") AS "Score_3" 
FROM "GB_Union" GROUP BY "GB_Union"."KEY") AS "T") AS "GB_sum") AS "U"

-- Model deployment code

WITH orig_cte AS 
(SELECT "GB_sum"."KEY" AS "KEY", CAST(0.25 AS DOUBLE PRECISION) + CAST(0.1 AS DOUBLE PRECISION) * "GB_sum"."Score_0" AS "Score_0", CAST(0.260416666666667 AS DOUBLE PRECISION) + CAST(0.1 AS DOUBLE PRECISION) * "GB_sum"."Score_1" AS "Score_1", CAST(0.239583333333333 AS DOUBLE PRECISION) + CAST(0.1 AS DOUBLE PRECISION) * "GB_sum"."Score_2" AS "Score_2", CAST(0.25 AS DOUBLE PRECISION) + CAST(0.1 AS DOUBLE PRECISION) * "GB_sum"."Score_3" AS "Score_3", CAST(NULL AS DOUBLE PRECISION) AS "Proba_0", CAST(NULL AS DOUBLE PRECISION) AS "Proba_1", CAST(NULL AS DOUBLE PRECISION) AS "Proba_2", CAST(NULL AS DOUBLE PRECISION) AS "Proba_3", CAST(NULL AS DOUBLE PRECISION) AS "LogProba_0", CAST(NULL AS DOUBLE PRECISION) AS "LogProba_1", CAST(NULL AS DOUBLE PRECISION) AS "LogProba_2", CAST(NULL AS DOUBLE PRECISION) AS "LogProba_3", CAST(NULL AS BIGINT) AS "Decision", CAST(NULL AS DOUBLE PRECISION) AS "DecisionProba" 
FROM tmp_20180602143816_6e6_gb_sum AS "GB_sum"), 
score_class_union AS 
(SELECT scu."KEY_u" AS "KEY_u", scu."class" AS "class", scu."LogProba" AS "LogProba", scu."Proba" AS "Proba", scu."Score" AS "Score" 
FROM (SELECT orig_cte."KEY" AS "KEY_u", 0 AS "class", orig_cte."LogProba_0" AS "LogProba", orig_cte."Proba_0" AS "Proba", orig_cte."Score_0" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 1 AS "class", orig_cte."LogProba_1" AS "LogProba", orig_cte."Proba_1" AS "Proba", orig_cte."Score_1" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 2 AS "class", orig_cte."LogProba_2" AS "LogProba", orig_cte."Proba_2" AS "Proba", orig_cte."Score_2" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 3 AS "class", orig_cte."LogProba_3" AS "LogProba", orig_cte."Proba_3" AS "Proba", orig_cte."Score_3" AS "Score" 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte."KEY" AS "KEY", orig_cte."Score_0" AS "Score_0", orig_cte."Score_1" AS "Score_1", orig_cte."Score_2" AS "Score_2", orig_cte."Score_3" AS "Score_3", orig_cte."Proba_0" AS "Proba_0", orig_cte."Proba_1" AS "Proba_1", orig_cte."Proba_2" AS "Proba_2", orig_cte."Proba_3" AS "Proba_3", orig_cte."LogProba_0" AS "LogProba_0", orig_cte."LogProba_1" AS "LogProba_1", orig_cte."LogProba_2" AS "LogProba_2", orig_cte."LogProba_3" AS "LogProba_3", orig_cte."Decision" AS "Decision", orig_cte."DecisionProba" AS "DecisionProba", max_select."KEY_m" AS "KEY_m", max_select."max_Score" AS "max_Score" 
FROM orig_cte LEFT OUTER JOIN (SELECT score_class_union."KEY_u" AS "KEY_m", max(score_class_union."Score") AS "max_Score" 
FROM score_class_union GROUP BY score_class_union."KEY_u") AS max_select ON orig_cte."KEY" = max_select."KEY_m"), 
score_soft_max_deltas AS 
(SELECT score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Score_2" AS "Score_2", score_max."Score_3" AS "Score_3", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."Proba_2" AS "Proba_2", score_max."Proba_3" AS "Proba_3", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."LogProba_2" AS "LogProba_2", score_max."LogProba_3" AS "LogProba_3", score_max."Decision" AS "Decision", score_max."DecisionProba" AS "DecisionProba", score_max."KEY_m" AS "KEY_m", score_max."max_Score" AS "max_Score", exp(greatest(CAST(-100.0 AS DOUBLE PRECISION), score_max."Score_0" - score_max."max_Score")) AS "exp_delta_Score_0", exp(greatest(CAST(-100.0 AS DOUBLE PRECISION), score_max."Score_1" - score_max."max_Score")) AS "exp_delta_Score_1", exp(greatest(CAST(-100.0 AS DOUBLE PRECISION), score_max."Score_2" - score_max."max_Score")) AS "exp_delta_Score_2", exp(greatest(CAST(-100.0 AS DOUBLE PRECISION), score_max."Score_3" - score_max."max_Score")) AS "exp_delta_Score_3" 
FROM score_max), 
score_class_union_soft AS 
(SELECT soft_scu."KEY" AS "KEY", soft_scu."class" AS "class", soft_scu."exp_delta_Score" AS "exp_delta_Score" 
FROM (SELECT score_soft_max_deltas."KEY" AS "KEY", 0 AS "class", score_soft_max_deltas."exp_delta_Score_0" AS "exp_delta_Score" 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas."KEY" AS "KEY", 1 AS "class", score_soft_max_deltas."exp_delta_Score_1" AS "exp_delta_Score" 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas."KEY" AS "KEY", 2 AS "class", score_soft_max_deltas."exp_delta_Score_2" AS "exp_delta_Score" 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas."KEY" AS "KEY", 3 AS "class", score_soft_max_deltas."exp_delta_Score_3" AS "exp_delta_Score" 
FROM score_soft_max_deltas) AS soft_scu), 
score_soft_max AS 
(SELECT score_soft_max_deltas."KEY" AS "KEY", score_soft_max_deltas."Score_0" AS "Score_0", score_soft_max_deltas."Score_1" AS "Score_1", score_soft_max_deltas."Score_2" AS "Score_2", score_soft_max_deltas."Score_3" AS "Score_3", score_soft_max_deltas."Proba_0" AS "Proba_0", score_soft_max_deltas."Proba_1" AS "Proba_1", score_soft_max_deltas."Proba_2" AS "Proba_2", score_soft_max_deltas."Proba_3" AS "Proba_3", score_soft_max_deltas."LogProba_0" AS "LogProba_0", score_soft_max_deltas."LogProba_1" AS "LogProba_1", score_soft_max_deltas."LogProba_2" AS "LogProba_2", score_soft_max_deltas."LogProba_3" AS "LogProba_3", score_soft_max_deltas."Decision" AS "Decision", score_soft_max_deltas."DecisionProba" AS "DecisionProba", score_soft_max_deltas."KEY_m" AS "KEY_m", score_soft_max_deltas."max_Score" AS "max_Score", score_soft_max_deltas."exp_delta_Score_0" AS "exp_delta_Score_0", score_soft_max_deltas."exp_delta_Score_1" AS "exp_delta_Score_1", score_soft_max_deltas."exp_delta_Score_2" AS "exp_delta_Score_2", score_soft_max_deltas."exp_delta_Score_3" AS "exp_delta_Score_3", sum_exp_t."KEY_sum" AS "KEY_sum", sum_exp_t."sum_ExpDeltaScore" AS "sum_ExpDeltaScore" 
FROM score_soft_max_deltas LEFT OUTER JOIN (SELECT score_class_union_soft."KEY" AS "KEY_sum", sum(score_class_union_soft."exp_delta_Score") AS "sum_ExpDeltaScore" 
FROM score_class_union_soft GROUP BY score_class_union_soft."KEY") AS sum_exp_t ON score_soft_max_deltas."KEY" = sum_exp_t."KEY_sum"), 
union_with_max AS 
(SELECT score_class_union."KEY_u" AS "KEY_u", score_class_union."class" AS "class", score_class_union."LogProba" AS "LogProba", score_class_union."Proba" AS "Proba", score_class_union."Score" AS "Score", score_soft_max."KEY" AS "KEY", score_soft_max."Score_0" AS "Score_0", score_soft_max."Score_1" AS "Score_1", score_soft_max."Score_2" AS "Score_2", score_soft_max."Score_3" AS "Score_3", score_soft_max."Proba_0" AS "Proba_0", score_soft_max."Proba_1" AS "Proba_1", score_soft_max."Proba_2" AS "Proba_2", score_soft_max."Proba_3" AS "Proba_3", score_soft_max."LogProba_0" AS "LogProba_0", score_soft_max."LogProba_1" AS "LogProba_1", score_soft_max."LogProba_2" AS "LogProba_2", score_soft_max."LogProba_3" AS "LogProba_3", score_soft_max."Decision" AS "Decision", score_soft_max."DecisionProba" AS "DecisionProba", score_soft_max."KEY_m" AS "KEY_m", score_soft_max."max_Score" AS "max_Score", score_soft_max."exp_delta_Score_0" AS "exp_delta_Score_0", score_soft_max."exp_delta_Score_1" AS "exp_delta_Score_1", score_soft_max."exp_delta_Score_2" AS "exp_delta_Score_2", score_soft_max."exp_delta_Score_3" AS "exp_delta_Score_3", score_soft_max."KEY_sum" AS "KEY_sum", score_soft_max."sum_ExpDeltaScore" AS "sum_ExpDeltaScore" 
FROM score_class_union LEFT OUTER JOIN score_soft_max ON score_class_union."KEY_u" = score_soft_max."KEY"), 
arg_max_cte AS 
(SELECT score_soft_max."KEY" AS "KEY", score_soft_max."Score_0" AS "Score_0", score_soft_max."Score_1" AS "Score_1", score_soft_max."Score_2" AS "Score_2", score_soft_max."Score_3" AS "Score_3", score_soft_max."Proba_0" AS "Proba_0", score_soft_max."Proba_1" AS "Proba_1", score_soft_max."Proba_2" AS "Proba_2", score_soft_max."Proba_3" AS "Proba_3", score_soft_max."LogProba_0" AS "LogProba_0", score_soft_max."LogProba_1" AS "LogProba_1", score_soft_max."LogProba_2" AS "LogProba_2", score_soft_max."LogProba_3" AS "LogProba_3", score_soft_max."Decision" AS "Decision", score_soft_max."DecisionProba" AS "DecisionProba", score_soft_max."KEY_m" AS "KEY_m", score_soft_max."max_Score" AS "max_Score", score_soft_max."exp_delta_Score_0" AS "exp_delta_Score_0", score_soft_max."exp_delta_Score_1" AS "exp_delta_Score_1", score_soft_max."exp_delta_Score_2" AS "exp_delta_Score_2", score_soft_max."exp_delta_Score_3" AS "exp_delta_Score_3", score_soft_max."KEY_sum" AS "KEY_sum", score_soft_max."sum_ExpDeltaScore" AS "sum_ExpDeltaScore", "arg_max_t_Score"."KEY_Score" AS "KEY_Score", "arg_max_t_Score"."arg_max_Score" AS "arg_max_Score", soft_max_comp."KEY_softmax" AS "KEY_softmax", soft_max_comp."SoftProba_0" AS "SoftProba_0", soft_max_comp."SoftProba_1" AS "SoftProba_1", soft_max_comp."SoftProba_2" AS "SoftProba_2", soft_max_comp."SoftProba_3" AS "SoftProba_3" 
FROM score_soft_max LEFT OUTER JOIN (SELECT union_with_max."KEY" AS "KEY_Score", min(union_with_max."class") AS "arg_max_Score" 
FROM union_with_max 
WHERE union_with_max."max_Score" <= union_with_max."Score" GROUP BY union_with_max."KEY") AS "arg_max_t_Score" ON score_soft_max."KEY" = "arg_max_t_Score"."KEY_Score" LEFT OUTER JOIN (SELECT score_soft_max."KEY" AS "KEY_softmax", score_soft_max."exp_delta_Score_0" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_0", score_soft_max."exp_delta_Score_1" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_1", score_soft_max."exp_delta_Score_2" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_2", score_soft_max."exp_delta_Score_3" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_3" 
FROM score_soft_max) AS soft_max_comp ON soft_max_comp."KEY_softmax" = "arg_max_t_Score"."KEY_Score")
 SELECT arg_max_cte."KEY" AS "KEY", arg_max_cte."Score_0" AS "Score_0", arg_max_cte."Score_1" AS "Score_1", arg_max_cte."Score_2" AS "Score_2", arg_max_cte."Score_3" AS "Score_3", arg_max_cte."SoftProba_0" AS "Proba_0", arg_max_cte."SoftProba_1" AS "Proba_1", arg_max_cte."SoftProba_2" AS "Proba_2", arg_max_cte."SoftProba_3" AS "Proba_3", CASE WHEN (arg_max_cte."SoftProba_0" IS NULL OR arg_max_cte."SoftProba_0" > CAST(0.0 AS DOUBLE PRECISION)) THEN ln(arg_max_cte."SoftProba_0") ELSE -1.79769313486231e+308 END AS "LogProba_0", CASE WHEN (arg_max_cte."SoftProba_1" IS NULL OR arg_max_cte."SoftProba_1" > CAST(0.0 AS DOUBLE PRECISION)) THEN ln(arg_max_cte."SoftProba_1") ELSE -1.79769313486231e+308 END AS "LogProba_1", CASE WHEN (arg_max_cte."SoftProba_2" IS NULL OR arg_max_cte."SoftProba_2" > CAST(0.0 AS DOUBLE PRECISION)) THEN ln(arg_max_cte."SoftProba_2") ELSE -1.79769313486231e+308 END AS "LogProba_2", CASE WHEN (arg_max_cte."SoftProba_3" IS NULL OR arg_max_cte."SoftProba_3" > CAST(0.0 AS DOUBLE PRECISION)) THEN ln(arg_max_cte."SoftProba_3") ELSE -1.79769313486231e+308 END AS "LogProba_3", arg_max_cte."arg_max_Score" AS "Decision", greatest(arg_max_cte."SoftProba_0", arg_max_cte."SoftProba_1", arg_max_cte."SoftProba_2", arg_max_cte."SoftProba_3") AS "DecisionProba" 
FROM arg_max_cte