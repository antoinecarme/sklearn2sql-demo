-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2018

-- Model : GradientBoostingRegressor_Pipeline
-- Dataset : freidman1
-- Database : teradata


-- This SQL code can contain one or more statements, to be executed in the order they appear in this file.



-- Code For temporary table tmp_20180516120740_codegen_hczmc3_ads_imp_1_out part 1. Create 


CREATE GLOBAL TEMPORARY TABLE tmp_20180516120740_codegen_hczmc3_ads_imp_1_out  (
	"KEY" BIGINT, 
	impter_2 DOUBLE PRECISION, 
	impter_3 DOUBLE PRECISION, 
	impter_4 DOUBLE PRECISION, 
	impter_5 DOUBLE PRECISION, 
	impter_6 DOUBLE PRECISION, 
	impter_7 DOUBLE PRECISION, 
	impter_8 DOUBLE PRECISION, 
	impter_9 DOUBLE PRECISION, 
	impter_10 DOUBLE PRECISION, 
	impter_11 DOUBLE PRECISION
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table tmp_20180516120740_codegen_hczmc3_ads_imp_1_out part 2. Populate

INSERT INTO tmp_20180516120740_codegen_hczmc3_ads_imp_1_out ("KEY", impter_2, impter_3, impter_4, impter_5, impter_6, impter_7, impter_8, impter_9, impter_10, impter_11) SELECT "U"."KEY", "U".impter_2, "U".impter_3, "U".impter_4, "U".impter_5, "U".impter_6, "U".impter_7, "U".impter_8, "U".impter_9, "U".impter_10, "U".impter_11 
FROM (SELECT "ADS_imp_1_OUT"."KEY", "ADS_imp_1_OUT".impter_2, "ADS_imp_1_OUT".impter_3, "ADS_imp_1_OUT".impter_4, "ADS_imp_1_OUT".impter_5, "ADS_imp_1_OUT".impter_6, "ADS_imp_1_OUT".impter_7, "ADS_imp_1_OUT".impter_8, "ADS_imp_1_OUT".impter_9, "ADS_imp_1_OUT".impter_10, "ADS_imp_1_OUT".impter_11 
FROM (SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" IS NULL) THEN 0.5629846484809591 ELSE "ADS"."Feature_0" END AS impter_2, CASE WHEN ("ADS"."Feature_1" IS NULL) THEN 0.45606442423375926 ELSE "ADS"."Feature_1" END AS impter_3, CASE WHEN ("ADS"."Feature_2" IS NULL) THEN 0.47113817481474773 ELSE "ADS"."Feature_2" END AS impter_4, CASE WHEN ("ADS"."Feature_3" IS NULL) THEN 0.533968020094518 ELSE "ADS"."Feature_3" END AS impter_5, CASE WHEN ("ADS"."Feature_4" IS NULL) THEN 0.4780936262373869 ELSE "ADS"."Feature_4" END AS impter_6, CASE WHEN ("ADS"."Feature_5" IS NULL) THEN 0.5682849224172329 ELSE "ADS"."Feature_5" END AS impter_7, CASE WHEN ("ADS"."Feature_6" IS NULL) THEN 0.47914374714280494 ELSE "ADS"."Feature_6" END AS impter_8, CASE WHEN ("ADS"."Feature_7" IS NULL) THEN 0.4594152477223205 ELSE "ADS"."Feature_7" END AS impter_9, CASE WHEN ("ADS"."Feature_8" IS NULL) THEN 0.4901106996809651 ELSE "ADS"."Feature_8" END AS impter_10, CASE WHEN ("ADS"."Feature_9" IS NULL) THEN 0.5378806933707533 ELSE "ADS"."Feature_9" END AS impter_11 
FROM freidman1 AS "ADS") AS "ADS_imp_1_OUT") AS "U"

-- Code For temporary table tmp_20180516120740_codegen_seizly_ads_sca_2_out part 1. Create 


CREATE GLOBAL TEMPORARY TABLE tmp_20180516120740_codegen_seizly_ads_sca_2_out  (
	"KEY" BIGINT, 
	scaler_2 DOUBLE PRECISION, 
	scaler_3 DOUBLE PRECISION, 
	scaler_4 DOUBLE PRECISION, 
	scaler_5 DOUBLE PRECISION, 
	scaler_6 DOUBLE PRECISION, 
	scaler_7 DOUBLE PRECISION, 
	scaler_8 DOUBLE PRECISION, 
	scaler_9 DOUBLE PRECISION, 
	scaler_10 DOUBLE PRECISION, 
	scaler_11 DOUBLE PRECISION
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table tmp_20180516120740_codegen_seizly_ads_sca_2_out part 2. Populate

INSERT INTO tmp_20180516120740_codegen_seizly_ads_sca_2_out ("KEY", scaler_2, scaler_3, scaler_4, scaler_5, scaler_6, scaler_7, scaler_8, scaler_9, scaler_10, scaler_11) SELECT "U"."KEY", "U".scaler_2, "U".scaler_3, "U".scaler_4, "U".scaler_5, "U".scaler_6, "U".scaler_7, "U".scaler_8, "U".scaler_9, "U".scaler_10, "U".scaler_11 
FROM (SELECT "ADS_sca_2_OUT"."KEY", "ADS_sca_2_OUT".scaler_2, "ADS_sca_2_OUT".scaler_3, "ADS_sca_2_OUT".scaler_4, "ADS_sca_2_OUT".scaler_5, "ADS_sca_2_OUT".scaler_6, "ADS_sca_2_OUT".scaler_7, "ADS_sca_2_OUT".scaler_8, "ADS_sca_2_OUT".scaler_9, "ADS_sca_2_OUT".scaler_10, "ADS_sca_2_OUT".scaler_11 
FROM (SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", (CAST("ADS_imp_1_OUT".impter_2 AS DOUBLE PRECISION) - CAST(0.562984648480959 AS DOUBLE PRECISION)) / CAST(0.258371468339634 AS DOUBLE PRECISION) AS scaler_2, (CAST("ADS_imp_1_OUT".impter_3 AS DOUBLE PRECISION) - CAST(0.456064424233759 AS DOUBLE PRECISION)) / CAST(0.28787217307127 AS DOUBLE PRECISION) AS scaler_3, (CAST("ADS_imp_1_OUT".impter_4 AS DOUBLE PRECISION) - CAST(0.471138174814748 AS DOUBLE PRECISION)) / CAST(0.310921679155305 AS DOUBLE PRECISION) AS scaler_4, (CAST("ADS_imp_1_OUT".impter_5 AS DOUBLE PRECISION) - CAST(0.533968020094518 AS DOUBLE PRECISION)) / CAST(0.282619986740028 AS DOUBLE PRECISION) AS scaler_5, (CAST("ADS_imp_1_OUT".impter_6 AS DOUBLE PRECISION) - CAST(0.478093626237387 AS DOUBLE PRECISION)) / CAST(0.286140491317745 AS DOUBLE PRECISION) AS scaler_6, (CAST("ADS_imp_1_OUT".impter_7 AS DOUBLE PRECISION) - CAST(0.568284922417233 AS DOUBLE PRECISION)) / CAST(0.297674081064517 AS DOUBLE PRECISION) AS scaler_7, (CAST("ADS_imp_1_OUT".impter_8 AS DOUBLE PRECISION) - CAST(0.479143747142805 AS DOUBLE PRECISION)) / CAST(0.273531497143158 AS DOUBLE PRECISION) AS scaler_8, (CAST("ADS_imp_1_OUT".impter_9 AS DOUBLE PRECISION) - CAST(0.45941524772232 AS DOUBLE PRECISION)) / CAST(0.28721149346999 AS DOUBLE PRECISION) AS scaler_9, (CAST("ADS_imp_1_OUT".impter_10 AS DOUBLE PRECISION) - CAST(0.490110699680965 AS DOUBLE PRECISION)) / CAST(0.27904867173227 AS DOUBLE PRECISION) AS scaler_10, (CAST("ADS_imp_1_OUT".impter_11 AS DOUBLE PRECISION) - CAST(0.537880693370753 AS DOUBLE PRECISION)) / CAST(0.295819229654319 AS DOUBLE PRECISION) AS scaler_11 
FROM tmp_20180516120740_codegen_hczmc3_ads_imp_1_out AS "ADS_imp_1_OUT") AS "ADS_sca_2_OUT") AS "U"

-- Code For temporary table tmp_20180516120740_codegen_zgdbzl_gb_b0 part 1. Create 


CREATE GLOBAL TEMPORARY TABLE tmp_20180516120740_codegen_zgdbzl_gb_b0  (
	"KEY" BIGINT, 
	"Estimator" DOUBLE PRECISION
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table tmp_20180516120740_codegen_zgdbzl_gb_b0 part 2. Populate

INSERT INTO tmp_20180516120740_codegen_zgdbzl_gb_b0 ("KEY", "Estimator") SELECT "U"."KEY", "U"."Estimator" 
FROM (WITH "DT_node_lookup" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= CAST(-0.035752531141043 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= CAST(0.66316956281662 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= CAST(-0.267667949199676 AS DOUBLE PRECISION)) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= CAST(0.452785223722458 AS DOUBLE PRECISION)) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= CAST(-0.905976951122284 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= CAST(-0.74356335401535 AS DOUBLE PRECISION)) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= CAST(-1.25759768486023 AS DOUBLE PRECISION)) THEN 13 ELSE 14 END END END AS node_id_2 
FROM tmp_20180516120740_codegen_seizly_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS DOUBLE PRECISION) AS "E" 
FROM (SELECT 3 AS nid, CAST(-7.093849845116415 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 4 AS nid, CAST(-2.501011412013575 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 6 AS nid, CAST(-0.740827520137812 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 7 AS nid, CAST(4.278078463400812 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 10 AS nid, CAST(-4.585097879169128 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 11 AS nid, CAST(1.289829757227098 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 13 AS nid, CAST(-1.2643830692508 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte UNION ALL SELECT 14 AS nid, CAST(4.784408715250739 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte) AS "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".nid AS nid, "DT_node_data"."E" AS "E" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".nid), 
"GB_Model_0_0" AS 
(SELECT "DT_Output"."KEY" AS "KEY", "DT_Output"."E" AS "Estimator" 
FROM "DT_Output"), 
"DT_node_lookup_1" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= CAST(-0.035752531141043 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= CAST(0.66316956281662 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= CAST(-0.267667949199676 AS DOUBLE PRECISION)) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= CAST(1.371537208557129 AS DOUBLE PRECISION)) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= CAST(-0.905976951122284 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= CAST(-1.730229616165161 AS DOUBLE PRECISION)) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= CAST(-1.25759768486023 AS DOUBLE PRECISION)) THEN 13 ELSE 14 END END END AS node_id_2 
FROM tmp_20180516120740_codegen_seizly_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte_1 AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data_1" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS DOUBLE PRECISION) AS "E" 
FROM (SELECT 3 AS nid, CAST(-6.384464860604774 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_1 UNION ALL SELECT 4 AS nid, CAST(-2.250910270812218 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_1 UNION ALL SELECT 6 AS nid, CAST(0.387579410273327 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_1 UNION ALL SELECT 7 AS nid, CAST(7.912399167038801 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_1 UNION ALL SELECT 10 AS nid, CAST(-6.219637110260264 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_1 UNION ALL SELECT 11 AS nid, CAST(0.36225031806725 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_1 UNION ALL SELECT 13 AS nid, CAST(-1.13794476232572 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_1 UNION ALL SELECT 14 AS nid, CAST(4.305967843725662 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_1) AS "Values"), 
"DT_Output_1" AS 
(SELECT "DT_node_lookup_1"."KEY" AS "KEY", "DT_node_lookup_1".node_id_2 AS node_id_2, "DT_node_data_1".nid AS nid, "DT_node_data_1"."E" AS "E" 
FROM "DT_node_lookup_1" LEFT OUTER JOIN "DT_node_data_1" ON "DT_node_lookup_1".node_id_2 = "DT_node_data_1".nid), 
"GB_Model_1_0" AS 
(SELECT "DT_Output_1"."KEY" AS "KEY", "DT_Output_1"."E" AS "Estimator" 
FROM "DT_Output_1"), 
"DT_node_lookup_2" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= CAST(-0.035752531141043 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= CAST(-1.030638456344604 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= CAST(-0.270850151777267 AS DOUBLE PRECISION)) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= CAST(-0.794110655784607 AS DOUBLE PRECISION)) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= CAST(0.778176546096802 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= CAST(-1.730229616165161 AS DOUBLE PRECISION)) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= CAST(-1.683423042297363 AS DOUBLE PRECISION)) THEN 13 ELSE 14 END END END AS node_id_2 
FROM tmp_20180516120740_codegen_seizly_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte_2 AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data_2" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS DOUBLE PRECISION) AS "E" 
FROM (SELECT 3 AS nid, CAST(-7.370152713546332 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_2 UNION ALL SELECT 4 AS nid, CAST(-4.270890693292118 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_2 UNION ALL SELECT 6 AS nid, CAST(-3.180481131124574 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_2 UNION ALL SELECT 7 AS nid, CAST(0.928473397747237 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_2 UNION ALL SELECT 10 AS nid, CAST(-5.597673399234237 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_2 UNION ALL SELECT 11 AS nid, CAST(1.605168377981131 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_2 UNION ALL SELECT 13 AS nid, CAST(0.674881915933178 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_2 UNION ALL SELECT 14 AS nid, CAST(5.905636312210524 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_2) AS "Values"), 
"DT_Output_2" AS 
(SELECT "DT_node_lookup_2"."KEY" AS "KEY", "DT_node_lookup_2".node_id_2 AS node_id_2, "DT_node_data_2".nid AS nid, "DT_node_data_2"."E" AS "E" 
FROM "DT_node_lookup_2" LEFT OUTER JOIN "DT_node_data_2" ON "DT_node_lookup_2".node_id_2 = "DT_node_data_2".nid), 
"GB_Model_2_0" AS 
(SELECT "DT_Output_2"."KEY" AS "KEY", "DT_Output_2"."E" AS "Estimator" 
FROM "DT_Output_2"), 
"DT_node_lookup_3" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= CAST(-0.035752531141043 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= CAST(0.338383316993713 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= CAST(-1.453848242759704 AS DOUBLE PRECISION)) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= CAST(1.249232530593872 AS DOUBLE PRECISION)) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= CAST(-0.684206604957581 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= CAST(0.805983424186706 AS DOUBLE PRECISION)) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= CAST(0.737485229969025 AS DOUBLE PRECISION)) THEN 13 ELSE 14 END END END AS node_id_2 
FROM tmp_20180516120740_codegen_seizly_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte_3 AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data_3" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS DOUBLE PRECISION) AS "E" 
FROM (SELECT 3 AS nid, CAST(2.8294125166928 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_3 UNION ALL SELECT 4 AS nid, CAST(-4.282294629155776 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_3 UNION ALL SELECT 6 AS nid, CAST(-0.362626306536222 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_3 UNION ALL SELECT 7 AS nid, CAST(5.009876124965633 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_3 UNION ALL SELECT 10 AS nid, CAST(-2.28524649853795 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_3 UNION ALL SELECT 11 AS nid, CAST(1.882214777048351 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_3 UNION ALL SELECT 13 AS nid, CAST(2.036037131911777 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_3 UNION ALL SELECT 14 AS nid, CAST(5.191154372346607 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_3) AS "Values"), 
"DT_Output_3" AS 
(SELECT "DT_node_lookup_3"."KEY" AS "KEY", "DT_node_lookup_3".node_id_2 AS node_id_2, "DT_node_data_3".nid AS nid, "DT_node_data_3"."E" AS "E" 
FROM "DT_node_lookup_3" LEFT OUTER JOIN "DT_node_data_3" ON "DT_node_lookup_3".node_id_2 = "DT_node_data_3".nid), 
"GB_Model_3_0" AS 
(SELECT "DT_Output_3"."KEY" AS "KEY", "DT_Output_3"."E" AS "Estimator" 
FROM "DT_Output_3"), 
"DT_node_lookup_4" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= CAST(-0.035752531141043 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= CAST(0.66316956281662 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= CAST(-0.267667949199676 AS DOUBLE PRECISION)) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= CAST(1.694932460784912 AS DOUBLE PRECISION)) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= CAST(-0.905976951122284 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= CAST(-0.74356335401535 AS DOUBLE PRECISION)) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= CAST(-1.25759768486023 AS DOUBLE PRECISION)) THEN 13 ELSE 14 END END END AS node_id_2 
FROM tmp_20180516120740_codegen_seizly_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte_4 AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data_4" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS DOUBLE PRECISION) AS "E" 
FROM (SELECT 3 AS nid, CAST(-4.859742212322365 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_4 UNION ALL SELECT 4 AS nid, CAST(-1.596017582907878 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_4 UNION ALL SELECT 6 AS nid, CAST(2.4300306931824 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_4 UNION ALL SELECT 7 AS nid, CAST(-2.248809381563529 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_4 UNION ALL SELECT 10 AS nid, CAST(-3.509755382615769 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_4 UNION ALL SELECT 11 AS nid, CAST(0.763064904622762 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_4 UNION ALL SELECT 13 AS nid, CAST(-0.925132925302534 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_4 UNION ALL SELECT 14 AS nid, CAST(3.2387562234916 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_4) AS "Values"), 
"DT_Output_4" AS 
(SELECT "DT_node_lookup_4"."KEY" AS "KEY", "DT_node_lookup_4".node_id_2 AS node_id_2, "DT_node_data_4".nid AS nid, "DT_node_data_4"."E" AS "E" 
FROM "DT_node_lookup_4" LEFT OUTER JOIN "DT_node_data_4" ON "DT_node_lookup_4".node_id_2 = "DT_node_data_4".nid), 
"GB_Model_4_0" AS 
(SELECT "DT_Output_4"."KEY" AS "KEY", "DT_Output_4"."E" AS "Estimator" 
FROM "DT_Output_4"), 
"DT_node_lookup_5" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= CAST(-0.794110655784607 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= CAST(0.513002157211304 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= CAST(-0.771444082260132 AS DOUBLE PRECISION)) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= CAST(0.02803698182106 AS DOUBLE PRECISION)) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= CAST(-0.879007816314697 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= CAST(-1.042921185493469 AS DOUBLE PRECISION)) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= CAST(0.778176546096802 AS DOUBLE PRECISION)) THEN 13 ELSE 14 END END END AS node_id_2 
FROM tmp_20180516120740_codegen_seizly_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte_5 AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data_5" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS DOUBLE PRECISION) AS "E" 
FROM (SELECT 3 AS nid, CAST(-5.940445102789389 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_5 UNION ALL SELECT 4 AS nid, CAST(-3.263158824945032 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_5 UNION ALL SELECT 6 AS nid, CAST(-1.766028500664283 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_5 UNION ALL SELECT 7 AS nid, CAST(1.413500025621926 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_5 UNION ALL SELECT 10 AS nid, CAST(-5.989390720113895 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_5 UNION ALL SELECT 11 AS nid, CAST(-0.987653025131197 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_5 UNION ALL SELECT 13 AS nid, CAST(1.203279631963778 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_5 UNION ALL SELECT 14 AS nid, CAST(4.007030033503691 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_5) AS "Values"), 
"DT_Output_5" AS 
(SELECT "DT_node_lookup_5"."KEY" AS "KEY", "DT_node_lookup_5".node_id_2 AS node_id_2, "DT_node_data_5".nid AS nid, "DT_node_data_5"."E" AS "E" 
FROM "DT_node_lookup_5" LEFT OUTER JOIN "DT_node_data_5" ON "DT_node_lookup_5".node_id_2 = "DT_node_data_5".nid), 
"GB_Model_5_0" AS 
(SELECT "DT_Output_5"."KEY" AS "KEY", "DT_Output_5"."E" AS "Estimator" 
FROM "DT_Output_5"), 
"DT_node_lookup_6" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= CAST(-0.035752531141043 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= CAST(-1.030638456344604 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= CAST(-1.458199262619018 AS DOUBLE PRECISION)) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= CAST(-0.643516659736633 AS DOUBLE PRECISION)) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= CAST(-0.684206604957581 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= CAST(0.805983424186706 AS DOUBLE PRECISION)) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= CAST(1.207967758178711 AS DOUBLE PRECISION)) THEN 13 ELSE 14 END END END AS node_id_2 
FROM tmp_20180516120740_codegen_seizly_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte_6 AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data_6" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS DOUBLE PRECISION) AS "E" 
FROM (SELECT 3 AS nid, CAST(-2.830832637301972 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_6 UNION ALL SELECT 4 AS nid, CAST(-5.205804261815099 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_6 UNION ALL SELECT 6 AS nid, CAST(-1.883446313242064 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_6 UNION ALL SELECT 7 AS nid, CAST(1.407545550889185 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_6 UNION ALL SELECT 10 AS nid, CAST(-1.948007760974087 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_6 UNION ALL SELECT 11 AS nid, CAST(1.521911078581302 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_6 UNION ALL SELECT 13 AS nid, CAST(1.862603187148068 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_6 UNION ALL SELECT 14 AS nid, CAST(5.208207179423199 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_6) AS "Values"), 
"DT_Output_6" AS 
(SELECT "DT_node_lookup_6"."KEY" AS "KEY", "DT_node_lookup_6".node_id_2 AS node_id_2, "DT_node_data_6".nid AS nid, "DT_node_data_6"."E" AS "E" 
FROM "DT_node_lookup_6" LEFT OUTER JOIN "DT_node_data_6" ON "DT_node_lookup_6".node_id_2 = "DT_node_data_6".nid), 
"GB_Model_6_0" AS 
(SELECT "DT_Output_6"."KEY" AS "KEY", "DT_Output_6"."E" AS "Estimator" 
FROM "DT_Output_6"), 
"DT_node_lookup_7" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= CAST(0.05798465013504 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= CAST(-0.016872774809599 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= CAST(0.317507863044739 AS DOUBLE PRECISION)) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= CAST(-1.730229616165161 AS DOUBLE PRECISION)) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= CAST(-0.643516659736633 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= CAST(0.66316956281662 AS DOUBLE PRECISION)) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= CAST(-0.928495049476624 AS DOUBLE PRECISION)) THEN 13 ELSE 14 END END END AS node_id_2 
FROM tmp_20180516120740_codegen_seizly_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte_7 AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data_7" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS DOUBLE PRECISION) AS "E" 
FROM (SELECT 3 AS nid, CAST(-3.432718889290516 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_7 UNION ALL SELECT 4 AS nid, CAST(-0.843841202329697 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_7 UNION ALL SELECT 6 AS nid, CAST(-3.914752907835775 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_7 UNION ALL SELECT 7 AS nid, CAST(0.553558756262732 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_7 UNION ALL SELECT 10 AS nid, CAST(-2.209802734087997 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_7 UNION ALL SELECT 11 AS nid, CAST(1.403874883258374 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_7 UNION ALL SELECT 13 AS nid, CAST(-0.032424261587907 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_7 UNION ALL SELECT 14 AS nid, CAST(2.92566369780902 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_7) AS "Values"), 
"DT_Output_7" AS 
(SELECT "DT_node_lookup_7"."KEY" AS "KEY", "DT_node_lookup_7".node_id_2 AS node_id_2, "DT_node_data_7".nid AS nid, "DT_node_data_7"."E" AS "E" 
FROM "DT_node_lookup_7" LEFT OUTER JOIN "DT_node_data_7" ON "DT_node_lookup_7".node_id_2 = "DT_node_data_7".nid), 
"GB_Model_7_0" AS 
(SELECT "DT_Output_7"."KEY" AS "KEY", "DT_Output_7"."E" AS "Estimator" 
FROM "DT_Output_7"), 
"DT_node_lookup_8" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= CAST(0.05798465013504 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= CAST(0.482317447662354 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= CAST(-0.13253228366375 AS DOUBLE PRECISION)) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= CAST(1.182614207267761 AS DOUBLE PRECISION)) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= CAST(-0.643516659736633 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= CAST(0.66316956281662 AS DOUBLE PRECISION)) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= CAST(-1.25759768486023 AS DOUBLE PRECISION)) THEN 13 ELSE 14 END END END AS node_id_2 
FROM tmp_20180516120740_codegen_seizly_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte_8 AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data_8" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS DOUBLE PRECISION) AS "E" 
FROM (SELECT 3 AS nid, CAST(-3.26748931749112 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_8 UNION ALL SELECT 4 AS nid, CAST(-0.849695343420075 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_8 UNION ALL SELECT 6 AS nid, CAST(0.236756815728641 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_8 UNION ALL SELECT 7 AS nid, CAST(2.726306760748708 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_8 UNION ALL SELECT 10 AS nid, CAST(-1.988822460679196 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_8 UNION ALL SELECT 11 AS nid, CAST(1.263487394932536 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_8 UNION ALL SELECT 13 AS nid, CAST(-0.848362740430456 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_8 UNION ALL SELECT 14 AS nid, CAST(2.526911564624024 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_8) AS "Values"), 
"DT_Output_8" AS 
(SELECT "DT_node_lookup_8"."KEY" AS "KEY", "DT_node_lookup_8".node_id_2 AS node_id_2, "DT_node_data_8".nid AS nid, "DT_node_data_8"."E" AS "E" 
FROM "DT_node_lookup_8" LEFT OUTER JOIN "DT_node_data_8" ON "DT_node_lookup_8".node_id_2 = "DT_node_data_8".nid), 
"GB_Model_8_0" AS 
(SELECT "DT_Output_8"."KEY" AS "KEY", "DT_Output_8"."E" AS "Estimator" 
FROM "DT_Output_8"), 
"DT_node_lookup_9" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= CAST(-0.13803531229496 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= CAST(-0.096427075564861 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= CAST(0.685651063919067 AS DOUBLE PRECISION)) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= CAST(-0.944685816764832 AS DOUBLE PRECISION)) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= CAST(-0.794110655784607 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= CAST(1.472230792045593 AS DOUBLE PRECISION)) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= CAST(0.778176546096802 AS DOUBLE PRECISION)) THEN 13 ELSE 14 END END END AS node_id_2 
FROM tmp_20180516120740_codegen_seizly_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte_9 AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data_9" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS DOUBLE PRECISION) AS "E" 
FROM (SELECT 3 AS nid, CAST(-3.254805377401204 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_9 UNION ALL SELECT 4 AS nid, CAST(-0.221597737909414 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_9 UNION ALL SELECT 6 AS nid, CAST(-2.693580455845465 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_9 UNION ALL SELECT 7 AS nid, CAST(0.269714468395866 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_9 UNION ALL SELECT 10 AS nid, CAST(-2.033015553816656 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_9 UNION ALL SELECT 11 AS nid, CAST(1.462802579777997 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_9 UNION ALL SELECT 13 AS nid, CAST(0.86465981380097 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_9 UNION ALL SELECT 14 AS nid, CAST(2.926715687967111 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_9) AS "Values"), 
"DT_Output_9" AS 
(SELECT "DT_node_lookup_9"."KEY" AS "KEY", "DT_node_lookup_9".node_id_2 AS node_id_2, "DT_node_data_9".nid AS nid, "DT_node_data_9"."E" AS "E" 
FROM "DT_node_lookup_9" LEFT OUTER JOIN "DT_node_data_9" ON "DT_node_lookup_9".node_id_2 = "DT_node_data_9".nid), 
"GB_Model_9_0" AS 
(SELECT "DT_Output_9"."KEY" AS "KEY", "DT_Output_9"."E" AS "Estimator" 
FROM "DT_Output_9")
 SELECT "GB_B0"."KEY", "GB_B0"."Estimator" 
FROM (SELECT "GB_esu_0"."KEY" AS "KEY", "GB_esu_0"."Estimator" AS "Estimator" 
FROM (SELECT "GB_Model_0_0"."KEY" AS "KEY", "GB_Model_0_0"."Estimator" AS "Estimator" 
FROM "GB_Model_0_0" UNION ALL SELECT "GB_Model_1_0"."KEY" AS "KEY", "GB_Model_1_0"."Estimator" AS "Estimator" 
FROM "GB_Model_1_0" UNION ALL SELECT "GB_Model_2_0"."KEY" AS "KEY", "GB_Model_2_0"."Estimator" AS "Estimator" 
FROM "GB_Model_2_0" UNION ALL SELECT "GB_Model_3_0"."KEY" AS "KEY", "GB_Model_3_0"."Estimator" AS "Estimator" 
FROM "GB_Model_3_0" UNION ALL SELECT "GB_Model_4_0"."KEY" AS "KEY", "GB_Model_4_0"."Estimator" AS "Estimator" 
FROM "GB_Model_4_0" UNION ALL SELECT "GB_Model_5_0"."KEY" AS "KEY", "GB_Model_5_0"."Estimator" AS "Estimator" 
FROM "GB_Model_5_0" UNION ALL SELECT "GB_Model_6_0"."KEY" AS "KEY", "GB_Model_6_0"."Estimator" AS "Estimator" 
FROM "GB_Model_6_0" UNION ALL SELECT "GB_Model_7_0"."KEY" AS "KEY", "GB_Model_7_0"."Estimator" AS "Estimator" 
FROM "GB_Model_7_0" UNION ALL SELECT "GB_Model_8_0"."KEY" AS "KEY", "GB_Model_8_0"."Estimator" AS "Estimator" 
FROM "GB_Model_8_0" UNION ALL SELECT "GB_Model_9_0"."KEY" AS "KEY", "GB_Model_9_0"."Estimator" AS "Estimator" 
FROM "GB_Model_9_0") AS "GB_esu_0") AS "GB_B0") AS "U"

-- Code For temporary table tmp_20180516120740_codegen_8xp44m_gb_b1 part 1. Create 


CREATE GLOBAL TEMPORARY TABLE tmp_20180516120740_codegen_8xp44m_gb_b1  (
	"KEY" BIGINT, 
	"Estimator" DOUBLE PRECISION
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table tmp_20180516120740_codegen_8xp44m_gb_b1 part 2. Populate

INSERT INTO tmp_20180516120740_codegen_8xp44m_gb_b1 ("KEY", "Estimator") SELECT "U"."KEY", "U"."Estimator" 
FROM (WITH "DT_node_lookup_10" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= CAST(-0.794110655784607 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= CAST(0.412917733192444 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= CAST(-0.771444082260132 AS DOUBLE PRECISION)) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= CAST(1.694932460784912 AS DOUBLE PRECISION)) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= CAST(-0.879007816314697 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= CAST(-1.042921185493469 AS DOUBLE PRECISION)) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= CAST(0.778176546096802 AS DOUBLE PRECISION)) THEN 13 ELSE 14 END END END AS node_id_2 
FROM tmp_20180516120740_codegen_seizly_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte_10 AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data_10" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS DOUBLE PRECISION) AS "E" 
FROM (SELECT 3 AS nid, CAST(-4.061935602121685 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_10 UNION ALL SELECT 4 AS nid, CAST(-2.079040905822101 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_10 UNION ALL SELECT 6 AS nid, CAST(0.356082524342191 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_10 UNION ALL SELECT 7 AS nid, CAST(-2.620651046188258 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_10 UNION ALL SELECT 10 AS nid, CAST(-4.066195909433462 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_10 UNION ALL SELECT 11 AS nid, CAST(-0.629419523994268 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_10 UNION ALL SELECT 13 AS nid, CAST(0.708653875047879 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_10 UNION ALL SELECT 14 AS nid, CAST(2.634044119170402 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_10) AS "Values"), 
"DT_Output_10" AS 
(SELECT "DT_node_lookup_10"."KEY" AS "KEY", "DT_node_lookup_10".node_id_2 AS node_id_2, "DT_node_data_10".nid AS nid, "DT_node_data_10"."E" AS "E" 
FROM "DT_node_lookup_10" LEFT OUTER JOIN "DT_node_data_10" ON "DT_node_lookup_10".node_id_2 = "DT_node_data_10".nid), 
"GB_Model_10_0" AS 
(SELECT "DT_Output_10"."KEY" AS "KEY", "DT_Output_10"."E" AS "Estimator" 
FROM "DT_Output_10"), 
"DT_node_lookup_11" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= CAST(-0.035752531141043 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= CAST(-1.030638456344604 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= CAST(-1.458199262619018 AS DOUBLE PRECISION)) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= CAST(0.563377737998962 AS DOUBLE PRECISION)) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= CAST(-0.946036279201508 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= CAST(-0.630115151405334 AS DOUBLE PRECISION)) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= CAST(1.090764760971069 AS DOUBLE PRECISION)) THEN 13 ELSE 14 END END END AS node_id_2 
FROM tmp_20180516120740_codegen_seizly_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte_11 AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data_11" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS DOUBLE PRECISION) AS "E" 
FROM (SELECT 3 AS nid, CAST(-1.489306062754066 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_11 UNION ALL SELECT 4 AS nid, CAST(-3.489284386653116 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_11 UNION ALL SELECT 6 AS nid, CAST(-1.196553871393998 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_11 UNION ALL SELECT 7 AS nid, CAST(0.877311305846204 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_11 UNION ALL SELECT 10 AS nid, CAST(-3.097446197837634 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_11 UNION ALL SELECT 11 AS nid, CAST(-0.271294596338794 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_11 UNION ALL SELECT 13 AS nid, CAST(0.827438007320732 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_11 UNION ALL SELECT 14 AS nid, CAST(3.251757710238614 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_11) AS "Values"), 
"DT_Output_11" AS 
(SELECT "DT_node_lookup_11"."KEY" AS "KEY", "DT_node_lookup_11".node_id_2 AS node_id_2, "DT_node_data_11".nid AS nid, "DT_node_data_11"."E" AS "E" 
FROM "DT_node_lookup_11" LEFT OUTER JOIN "DT_node_data_11" ON "DT_node_lookup_11".node_id_2 = "DT_node_data_11".nid), 
"GB_Model_11_0" AS 
(SELECT "DT_Output_11"."KEY" AS "KEY", "DT_Output_11"."E" AS "Estimator" 
FROM "DT_Output_11"), 
"DT_node_lookup_12" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= CAST(-0.794110655784607 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= CAST(0.412917733192444 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= CAST(-0.267667949199676 AS DOUBLE PRECISION)) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= CAST(-0.095251172780991 AS DOUBLE PRECISION)) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= CAST(-0.879007816314697 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= CAST(0.964491009712219 AS DOUBLE PRECISION)) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= CAST(0.778176546096802 AS DOUBLE PRECISION)) THEN 13 ELSE 14 END END END AS node_id_2 
FROM tmp_20180516120740_codegen_seizly_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte_12 AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data_12" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS DOUBLE PRECISION) AS "E" 
FROM (SELECT 3 AS nid, CAST(-2.977260410845588 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_12 UNION ALL SELECT 4 AS nid, CAST(-1.537096666642134 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_12 UNION ALL SELECT 6 AS nid, CAST(-1.09778610989858 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_12 UNION ALL SELECT 7 AS nid, CAST(0.716414914663463 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_12 UNION ALL SELECT 10 AS nid, CAST(-1.591735080484271 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_12 UNION ALL SELECT 11 AS nid, CAST(1.831979622183551 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_12 UNION ALL SELECT 13 AS nid, CAST(0.608407468012413 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_12 UNION ALL SELECT 14 AS nid, CAST(2.237232171845266 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_12) AS "Values"), 
"DT_Output_12" AS 
(SELECT "DT_node_lookup_12"."KEY" AS "KEY", "DT_node_lookup_12".node_id_2 AS node_id_2, "DT_node_data_12".nid AS nid, "DT_node_data_12"."E" AS "E" 
FROM "DT_node_lookup_12" LEFT OUTER JOIN "DT_node_data_12" ON "DT_node_lookup_12".node_id_2 = "DT_node_data_12".nid), 
"GB_Model_12_0" AS 
(SELECT "DT_Output_12"."KEY" AS "KEY", "DT_Output_12"."E" AS "Estimator" 
FROM "DT_Output_12"), 
"DT_node_lookup_13" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= CAST(-0.794110655784607 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= CAST(0.412917733192444 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= CAST(-0.771444082260132 AS DOUBLE PRECISION)) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= CAST(0.310210824012756 AS DOUBLE PRECISION)) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= CAST(-0.879007816314697 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= CAST(-0.648208498954773 AS DOUBLE PRECISION)) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= CAST(-1.428601741790772 AS DOUBLE PRECISION)) THEN 13 ELSE 14 END END END AS node_id_2 
FROM tmp_20180516120740_codegen_seizly_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte_13 AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data_13" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS DOUBLE PRECISION) AS "E" 
FROM (SELECT 3 AS nid, CAST(-3.066405825041126 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_13 UNION ALL SELECT 4 AS nid, CAST(-1.596201207998734 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_13 UNION ALL SELECT 6 AS nid, CAST(0.95063078671502 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_13 UNION ALL SELECT 7 AS nid, CAST(-0.809205291020689 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_13 UNION ALL SELECT 10 AS nid, CAST(-2.559714579521446 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_13 UNION ALL SELECT 11 AS nid, CAST(-0.252716422412835 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_13 UNION ALL SELECT 13 AS nid, CAST(3.802135703991236 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_13 UNION ALL SELECT 14 AS nid, CAST(0.853202385046255 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_13) AS "Values"), 
"DT_Output_13" AS 
(SELECT "DT_node_lookup_13"."KEY" AS "KEY", "DT_node_lookup_13".node_id_2 AS node_id_2, "DT_node_data_13".nid AS nid, "DT_node_data_13"."E" AS "E" 
FROM "DT_node_lookup_13" LEFT OUTER JOIN "DT_node_data_13" ON "DT_node_lookup_13".node_id_2 = "DT_node_data_13".nid), 
"GB_Model_13_0" AS 
(SELECT "DT_Output_13"."KEY" AS "KEY", "DT_Output_13"."E" AS "Estimator" 
FROM "DT_Output_13"), 
"DT_node_lookup_14" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= CAST(-0.946036279201508 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= CAST(-0.35263329744339 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= CAST(-1.280131578445434 AS DOUBLE PRECISION)) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= CAST(0.369264394044876 AS DOUBLE PRECISION)) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= CAST(0.05798465013504 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= CAST(-0.109657488763332 AS DOUBLE PRECISION)) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= CAST(-0.350789546966553 AS DOUBLE PRECISION)) THEN 13 ELSE 14 END END END AS node_id_2 
FROM tmp_20180516120740_codegen_seizly_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte_14 AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data_14" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS DOUBLE PRECISION) AS "E" 
FROM (SELECT 3 AS nid, CAST(-0.462632670353702 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_14 UNION ALL SELECT 4 AS nid, CAST(-2.854928864667206 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_14 UNION ALL SELECT 6 AS nid, CAST(-1.188352374696374 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_14 UNION ALL SELECT 7 AS nid, CAST(0.181232377774454 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_14 UNION ALL SELECT 10 AS nid, CAST(-1.22718603632074 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_14 UNION ALL SELECT 11 AS nid, CAST(0.40498491570941 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_14 UNION ALL SELECT 13 AS nid, CAST(0.193917840154038 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_14 UNION ALL SELECT 14 AS nid, CAST(2.025468455704156 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_14) AS "Values"), 
"DT_Output_14" AS 
(SELECT "DT_node_lookup_14"."KEY" AS "KEY", "DT_node_lookup_14".node_id_2 AS node_id_2, "DT_node_data_14".nid AS nid, "DT_node_data_14"."E" AS "E" 
FROM "DT_node_lookup_14" LEFT OUTER JOIN "DT_node_data_14" ON "DT_node_lookup_14".node_id_2 = "DT_node_data_14".nid), 
"GB_Model_14_0" AS 
(SELECT "DT_Output_14"."KEY" AS "KEY", "DT_Output_14"."E" AS "Estimator" 
FROM "DT_Output_14"), 
"DT_node_lookup_15" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= CAST(0.850655257701874 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= CAST(-1.406442880630493 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= CAST(1.207609295845032 AS DOUBLE PRECISION)) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= CAST(0.495264708995819 AS DOUBLE PRECISION)) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= CAST(1.165263652801514 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= CAST(-0.900528907775879 AS DOUBLE PRECISION)) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= CAST(-0.969320595264435 AS DOUBLE PRECISION)) THEN 13 ELSE 14 END END END AS node_id_2 
FROM tmp_20180516120740_codegen_seizly_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte_15 AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data_15" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS DOUBLE PRECISION) AS "E" 
FROM (SELECT 3 AS nid, CAST(1.823992745417961 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_15 UNION ALL SELECT 4 AS nid, CAST(3.91800268716279 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_15 UNION ALL SELECT 6 AS nid, CAST(-1.122458958713222 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_15 UNION ALL SELECT 7 AS nid, CAST(0.47984003349542 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_15 UNION ALL SELECT 10 AS nid, CAST(2.168015173134883 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_15 UNION ALL SELECT 11 AS nid, CAST(-0.209449401285672 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_15 UNION ALL SELECT 13 AS nid, CAST(1.388837001794286 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_15 UNION ALL SELECT 14 AS nid, CAST(4.29721580912825 AS DOUBLE PRECISION) AS "E" 
FROM dummy_cte_15) AS "Values"), 
"DT_Output_15" AS 
(SELECT "DT_node_lookup_15"."KEY" AS "KEY", "DT_node_lookup_15".node_id_2 AS node_id_2, "DT_node_data_15".nid AS nid, "DT_node_data_15"."E" AS "E" 
FROM "DT_node_lookup_15" LEFT OUTER JOIN "DT_node_data_15" ON "DT_node_lookup_15".node_id_2 = "DT_node_data_15".nid), 
"GB_Model_15_0" AS 
(SELECT "DT_Output_15"."KEY" AS "KEY", "DT_Output_15"."E" AS "Estimator" 
FROM "DT_Output_15")
 SELECT "GB_B1"."KEY", "GB_B1"."Estimator" 
FROM (SELECT "GB_esu_1"."KEY" AS "KEY", "GB_esu_1"."Estimator" AS "Estimator" 
FROM (SELECT "GB_Model_10_0"."KEY" AS "KEY", "GB_Model_10_0"."Estimator" AS "Estimator" 
FROM "GB_Model_10_0" UNION ALL SELECT "GB_Model_11_0"."KEY" AS "KEY", "GB_Model_11_0"."Estimator" AS "Estimator" 
FROM "GB_Model_11_0" UNION ALL SELECT "GB_Model_12_0"."KEY" AS "KEY", "GB_Model_12_0"."Estimator" AS "Estimator" 
FROM "GB_Model_12_0" UNION ALL SELECT "GB_Model_13_0"."KEY" AS "KEY", "GB_Model_13_0"."Estimator" AS "Estimator" 
FROM "GB_Model_13_0" UNION ALL SELECT "GB_Model_14_0"."KEY" AS "KEY", "GB_Model_14_0"."Estimator" AS "Estimator" 
FROM "GB_Model_14_0" UNION ALL SELECT "GB_Model_15_0"."KEY" AS "KEY", "GB_Model_15_0"."Estimator" AS "Estimator" 
FROM "GB_Model_15_0") AS "GB_esu_1") AS "GB_B1") AS "U"

-- Code For temporary table tmp_20180516120740_codegen_39y7gp_gb_sum part 1. Create 


CREATE GLOBAL TEMPORARY TABLE tmp_20180516120740_codegen_39y7gp_gb_sum  (
	"KEY" BIGINT, 
	"Estimator" DOUBLE PRECISION
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table tmp_20180516120740_codegen_39y7gp_gb_sum part 2. Populate

INSERT INTO tmp_20180516120740_codegen_39y7gp_gb_sum ("KEY", "Estimator") SELECT "U"."KEY", "U"."Estimator" 
FROM (WITH "GB_Union" AS 
(SELECT "GB_EnsembleUnion"."KEY" AS "KEY", "GB_EnsembleUnion"."Estimator" AS "Estimator" 
FROM (SELECT "GB_B0"."KEY" AS "KEY", "GB_B0"."Estimator" AS "Estimator" 
FROM tmp_20180516120740_codegen_zgdbzl_gb_b0 AS "GB_B0" UNION ALL SELECT "GB_B1"."KEY" AS "KEY", "GB_B1"."Estimator" AS "Estimator" 
FROM tmp_20180516120740_codegen_8xp44m_gb_b1 AS "GB_B1") AS "GB_EnsembleUnion")
 SELECT "GB_sum"."KEY", "GB_sum"."Estimator" 
FROM (SELECT "T"."KEY" AS "KEY", CAST("T"."Estimator" AS DOUBLE PRECISION) AS "Estimator" 
FROM (SELECT "GB_Union"."KEY" AS "KEY", sum("GB_Union"."Estimator") AS "Estimator" 
FROM "GB_Union" GROUP BY "GB_Union"."KEY") AS "T") AS "GB_sum") AS "U"

-- Model deployment code

SELECT "GB_sum"."KEY" AS "KEY", CAST(15.3537633818605 AS DOUBLE PRECISION) + CAST(0.1 AS DOUBLE PRECISION) * "GB_sum"."Estimator" AS "Estimator" 
FROM tmp_20180516120740_codegen_39y7gp_gb_sum AS "GB_sum"