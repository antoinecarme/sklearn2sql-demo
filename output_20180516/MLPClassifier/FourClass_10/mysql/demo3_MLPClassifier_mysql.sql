-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2018

-- Model : MLPClassifier
-- Dataset : FourClass_10
-- Database : mysql


-- This SQL code can contain one or more statements, to be executed in the order they appear in this file.



-- Code For temporary table TMP_20180602143231_7QF_HL_1_relu_1 part 1. Create 


CREATE TEMPORARY TABLE `TMP_20180602143231_7QF_HL_1_relu_1` (
	`KEY` BIGINT NOT NULL, 
	`NEUR_1_1` DOUBLE, 
	`NEUR_1_2` DOUBLE, 
	`NEUR_1_3` DOUBLE, 
	PRIMARY KEY (`KEY`)
)

 ENGINE=MEMORY

-- Code For temporary table TMP_20180602143231_7QF_HL_1_relu_1 part 2. Populate

INSERT INTO `TMP_20180602143231_7QF_HL_1_relu_1` (`KEY`, `NEUR_1_1`, `NEUR_1_2`, `NEUR_1_3`) SELECT `U`.`KEY`, `U`.`NEUR_1_1`, `U`.`NEUR_1_2`, `U`.`NEUR_1_3` 
FROM (WITH `IL` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CAST(`ADS`.`Feature_0` AS DOUBLE) AS `Feature_0`, CAST(`ADS`.`Feature_1` AS DOUBLE) AS `Feature_1`, CAST(`ADS`.`Feature_2` AS DOUBLE) AS `Feature_2`, CAST(`ADS`.`Feature_3` AS DOUBLE) AS `Feature_3`, CAST(`ADS`.`Feature_4` AS DOUBLE) AS `Feature_4`, CAST(`ADS`.`Feature_5` AS DOUBLE) AS `Feature_5`, CAST(`ADS`.`Feature_6` AS DOUBLE) AS `Feature_6`, CAST(`ADS`.`Feature_7` AS DOUBLE) AS `Feature_7`, CAST(`ADS`.`Feature_8` AS DOUBLE) AS `Feature_8`, CAST(`ADS`.`Feature_9` AS DOUBLE) AS `Feature_9` 
FROM `FourClass_10` AS `ADS`), 
`HL_BA_1` AS 
(SELECT `IL`.`KEY` AS `KEY`, -4.057864689247659 * `IL`.`Feature_0` + -3.186777966691134 * `IL`.`Feature_1` + -5.0245857527688464 * `IL`.`Feature_2` + -5.172195318920799 * `IL`.`Feature_3` + -2.1231434101274425 * `IL`.`Feature_4` + -4.154816810568216 * `IL`.`Feature_5` + 1.1429589628753984 * `IL`.`Feature_6` + 2.2750393004277614 * `IL`.`Feature_7` + 0.637783454238211 * `IL`.`Feature_8` + 0.4768067860621673 * `IL`.`Feature_9` + -1.1610849910951593 AS `NEUR_1_1`, -5.030410872374527 * `IL`.`Feature_0` + 1.7923849603497457 * `IL`.`Feature_1` + 1.065607819476821 * `IL`.`Feature_2` + 2.1443887804790154 * `IL`.`Feature_3` + -0.3978078924506557 * `IL`.`Feature_4` + -0.010915085581179422 * `IL`.`Feature_5` + -0.7790565800691673 * `IL`.`Feature_6` + -2.940937443663685 * `IL`.`Feature_7` + 1.9584746118245036 * `IL`.`Feature_8` + 0.4252541970316232 * `IL`.`Feature_9` + -1.145896603997291 AS `NEUR_1_2`, -2.2533108306270946 * `IL`.`Feature_0` + 0.8820363585077042 * `IL`.`Feature_1` + -2.5098836503936504 * `IL`.`Feature_2` + -1.2633053159345404 * `IL`.`Feature_3` + -4.844463861903808 * `IL`.`Feature_4` + 1.2768588164333203 * `IL`.`Feature_5` + 1.046275642960337 * `IL`.`Feature_6` + -2.239355131322779 * `IL`.`Feature_7` + -1.6027630245870477 * `IL`.`Feature_8` + -0.5407344322635516 * `IL`.`Feature_9` + -0.8016947047991628 AS `NEUR_1_3` 
FROM `IL`), 
`HL_1_relu` AS 
(SELECT `HL_BA_1`.`KEY` AS `KEY`, greatest(`HL_BA_1`.`NEUR_1_1`, 0) AS `NEUR_1_1`, greatest(`HL_BA_1`.`NEUR_1_2`, 0) AS `NEUR_1_2`, greatest(`HL_BA_1`.`NEUR_1_3`, 0) AS `NEUR_1_3` 
FROM `HL_BA_1`)
 SELECT `HL_1_relu_1`.`KEY`, `HL_1_relu_1`.`NEUR_1_1`, `HL_1_relu_1`.`NEUR_1_2`, `HL_1_relu_1`.`NEUR_1_3` 
FROM (SELECT `HL_1_relu`.`KEY` AS `KEY`, `HL_1_relu`.`NEUR_1_1` AS `NEUR_1_1`, `HL_1_relu`.`NEUR_1_2` AS `NEUR_1_2`, `HL_1_relu`.`NEUR_1_3` AS `NEUR_1_3` 
FROM `HL_1_relu`) AS `HL_1_relu_1`) AS `U`

-- Code For temporary table TMP_20180602143231_7QF_HL_1_relu_1 part 3. Create Index 

CREATE INDEX `ix_TMP_20180602143231_7QF_HL_1_relu_1_KEY` ON `TMP_20180602143231_7QF_HL_1_relu_1` (`KEY`)

-- Code For temporary table TMP_20180602143231_QI5_OL_softmax_1 part 1. Create 


CREATE TEMPORARY TABLE `TMP_20180602143231_QI5_OL_softmax_1` (
	`KEY` BIGINT NOT NULL, 
	`NEUR_3_1` DOUBLE, 
	`NEUR_3_2` DOUBLE, 
	`NEUR_3_3` DOUBLE, 
	`NEUR_3_4` DOUBLE, 
	PRIMARY KEY (`KEY`)
)

 ENGINE=MEMORY

-- Code For temporary table TMP_20180602143231_QI5_OL_softmax_1 part 2. Populate

INSERT INTO `TMP_20180602143231_QI5_OL_softmax_1` (`KEY`, `NEUR_3_1`, `NEUR_3_2`, `NEUR_3_3`, `NEUR_3_4`) SELECT `U`.`KEY`, `U`.`NEUR_3_1`, `U`.`NEUR_3_2`, `U`.`NEUR_3_3`, `U`.`NEUR_3_4` 
FROM (WITH `HL_BA_2` AS 
(SELECT `HL_1_relu_1`.`KEY` AS `KEY`, 0.7879069840492618 * `HL_1_relu_1`.`NEUR_1_1` + 1.4222924237184418 * `HL_1_relu_1`.`NEUR_1_2` + 2.336487427354591 * `HL_1_relu_1`.`NEUR_1_3` + -3.860821434950514 AS `NEUR_2_1`, -1.5411362730261013 * `HL_1_relu_1`.`NEUR_1_1` + 1.4619655462928813 * `HL_1_relu_1`.`NEUR_1_2` + -1.876047904754745 * `HL_1_relu_1`.`NEUR_1_3` + 0.20326734416937173 AS `NEUR_2_2`, 6.666182681070269 * `HL_1_relu_1`.`NEUR_1_1` + -2.6396030957163568 * `HL_1_relu_1`.`NEUR_1_2` + 0.46196088494158194 * `HL_1_relu_1`.`NEUR_1_3` + -2.592748407003763 AS `NEUR_2_3`, -0.24687523928817973 * `HL_1_relu_1`.`NEUR_1_1` + -0.5047099613140266 * `HL_1_relu_1`.`NEUR_1_2` + -0.40897299702026024 * `HL_1_relu_1`.`NEUR_1_3` + -0.836543287122836 AS `NEUR_2_4`, -3.032308724877087 * `HL_1_relu_1`.`NEUR_1_1` + 2.3396753855192682 * `HL_1_relu_1`.`NEUR_1_2` + -0.606322553327556 * `HL_1_relu_1`.`NEUR_1_3` + 1.5479040829045785 AS `NEUR_2_5` 
FROM `TMP_20180602143231_7QF_HL_1_relu_1` AS `HL_1_relu_1`), 
`HL_2_relu` AS 
(SELECT `HL_BA_2`.`KEY` AS `KEY`, greatest(`HL_BA_2`.`NEUR_2_1`, 0) AS `NEUR_2_1`, greatest(`HL_BA_2`.`NEUR_2_2`, 0) AS `NEUR_2_2`, greatest(`HL_BA_2`.`NEUR_2_3`, 0) AS `NEUR_2_3`, greatest(`HL_BA_2`.`NEUR_2_4`, 0) AS `NEUR_2_4`, greatest(`HL_BA_2`.`NEUR_2_5`, 0) AS `NEUR_2_5` 
FROM `HL_BA_2`), 
`OL_BA` AS 
(SELECT `HL_2_relu`.`KEY` AS `KEY`, -2.22979877878584 * `HL_2_relu`.`NEUR_2_1` + -1.654290558716426 * `HL_2_relu`.`NEUR_2_2` + 2.565831006676212 * `HL_2_relu`.`NEUR_2_3` + 0.367436600145874 * `HL_2_relu`.`NEUR_2_4` + -2.2772021532225093 * `HL_2_relu`.`NEUR_2_5` + 6.060031564427302 AS `NEUR_3_1`, 2.0409206096267405 * `HL_2_relu`.`NEUR_2_1` + 1.7930771057470163 * `HL_2_relu`.`NEUR_2_2` + -4.2525358465877625 * `HL_2_relu`.`NEUR_2_3` + 0.4106304979982397 * `HL_2_relu`.`NEUR_2_4` + -0.17891416892710715 * `HL_2_relu`.`NEUR_2_5` + 0.8536745959438293 AS `NEUR_3_2`, -2.097327944038266 * `HL_2_relu`.`NEUR_2_1` + -0.020473607493826828 * `HL_2_relu`.`NEUR_2_2` + 2.639594887203068 * `HL_2_relu`.`NEUR_2_3` + -0.5938879523056809 * `HL_2_relu`.`NEUR_2_4` + 1.3804445038479205 * `HL_2_relu`.`NEUR_2_5` + -2.9868973960438026 AS `NEUR_3_3`, 2.2580036392372533 * `HL_2_relu`.`NEUR_2_1` + -0.7025456985443939 * `HL_2_relu`.`NEUR_2_2` + -1.4215886672769997 * `HL_2_relu`.`NEUR_2_3` + -0.8140440388278294 * `HL_2_relu`.`NEUR_2_4` + 1.3192060362997289 * `HL_2_relu`.`NEUR_2_5` + -2.902059636087133 AS `NEUR_3_4` 
FROM `HL_2_relu`), 
`OL_softmax` AS 
(SELECT `OL_BA`.`KEY` AS `KEY`, `OL_BA`.`NEUR_3_1` AS `NEUR_3_1`, `OL_BA`.`NEUR_3_2` AS `NEUR_3_2`, `OL_BA`.`NEUR_3_3` AS `NEUR_3_3`, `OL_BA`.`NEUR_3_4` AS `NEUR_3_4` 
FROM `OL_BA`)
 SELECT `OL_softmax_1`.`KEY`, `OL_softmax_1`.`NEUR_3_1`, `OL_softmax_1`.`NEUR_3_2`, `OL_softmax_1`.`NEUR_3_3`, `OL_softmax_1`.`NEUR_3_4` 
FROM (SELECT `OL_softmax`.`KEY` AS `KEY`, `OL_softmax`.`NEUR_3_1` AS `NEUR_3_1`, `OL_softmax`.`NEUR_3_2` AS `NEUR_3_2`, `OL_softmax`.`NEUR_3_3` AS `NEUR_3_3`, `OL_softmax`.`NEUR_3_4` AS `NEUR_3_4` 
FROM `OL_softmax`) AS `OL_softmax_1`) AS `U`

-- Code For temporary table TMP_20180602143231_QI5_OL_softmax_1 part 3. Create Index 

CREATE INDEX `ix_TMP_20180602143231_QI5_OL_softmax_1_KEY` ON `TMP_20180602143231_QI5_OL_softmax_1` (`KEY`)

-- Model deployment code

WITH orig_cte AS 
(SELECT `OL_softmax_1`.`KEY` AS `KEY`, `OL_softmax_1`.`NEUR_3_1` AS `Score_0`, `OL_softmax_1`.`NEUR_3_2` AS `Score_1`, `OL_softmax_1`.`NEUR_3_3` AS `Score_2`, `OL_softmax_1`.`NEUR_3_4` AS `Score_3`, NULL AS `Proba_0`, NULL AS `Proba_1`, NULL AS `Proba_2`, NULL AS `Proba_3`, NULL AS `LogProba_0`, NULL AS `LogProba_1`, NULL AS `LogProba_2`, NULL AS `LogProba_3`, CAST(NULL AS SIGNED INTEGER) AS `Decision`, NULL AS `DecisionProba` 
FROM `TMP_20180602143231_QI5_OL_softmax_1` AS `OL_softmax_1`), 
score_class_union AS 
(SELECT scu.`KEY_u` AS `KEY_u`, scu.class AS class, scu.`LogProba` AS `LogProba`, scu.`Proba` AS `Proba`, scu.`Score` AS `Score` 
FROM (SELECT orig_cte.`KEY` AS `KEY_u`, 0 AS class, orig_cte.`LogProba_0` AS `LogProba`, orig_cte.`Proba_0` AS `Proba`, orig_cte.`Score_0` AS `Score` 
FROM orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY_u`, 1 AS class, orig_cte.`LogProba_1` AS `LogProba`, orig_cte.`Proba_1` AS `Proba`, orig_cte.`Score_1` AS `Score` 
FROM orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY_u`, 2 AS class, orig_cte.`LogProba_2` AS `LogProba`, orig_cte.`Proba_2` AS `Proba`, orig_cte.`Score_2` AS `Score` 
FROM orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY_u`, 3 AS class, orig_cte.`LogProba_3` AS `LogProba`, orig_cte.`Proba_3` AS `Proba`, orig_cte.`Score_3` AS `Score` 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte.`KEY` AS `KEY`, orig_cte.`Score_0` AS `Score_0`, orig_cte.`Score_1` AS `Score_1`, orig_cte.`Score_2` AS `Score_2`, orig_cte.`Score_3` AS `Score_3`, orig_cte.`Proba_0` AS `Proba_0`, orig_cte.`Proba_1` AS `Proba_1`, orig_cte.`Proba_2` AS `Proba_2`, orig_cte.`Proba_3` AS `Proba_3`, orig_cte.`LogProba_0` AS `LogProba_0`, orig_cte.`LogProba_1` AS `LogProba_1`, orig_cte.`LogProba_2` AS `LogProba_2`, orig_cte.`LogProba_3` AS `LogProba_3`, orig_cte.`Decision` AS `Decision`, orig_cte.`DecisionProba` AS `DecisionProba`, max_select.`KEY_m` AS `KEY_m`, max_select.`max_Score` AS `max_Score` 
FROM orig_cte LEFT OUTER JOIN (SELECT score_class_union.`KEY_u` AS `KEY_m`, max(score_class_union.`Score`) AS `max_Score` 
FROM score_class_union GROUP BY score_class_union.`KEY_u`) AS max_select ON orig_cte.`KEY` = max_select.`KEY_m`), 
score_soft_max_deltas AS 
(SELECT score_max.`KEY` AS `KEY`, score_max.`Score_0` AS `Score_0`, score_max.`Score_1` AS `Score_1`, score_max.`Score_2` AS `Score_2`, score_max.`Score_3` AS `Score_3`, score_max.`Proba_0` AS `Proba_0`, score_max.`Proba_1` AS `Proba_1`, score_max.`Proba_2` AS `Proba_2`, score_max.`Proba_3` AS `Proba_3`, score_max.`LogProba_0` AS `LogProba_0`, score_max.`LogProba_1` AS `LogProba_1`, score_max.`LogProba_2` AS `LogProba_2`, score_max.`LogProba_3` AS `LogProba_3`, score_max.`Decision` AS `Decision`, score_max.`DecisionProba` AS `DecisionProba`, score_max.`KEY_m` AS `KEY_m`, score_max.`max_Score` AS `max_Score`, exp(greatest(-100.0, score_max.`Score_0` - score_max.`max_Score`)) AS `exp_delta_Score_0`, exp(greatest(-100.0, score_max.`Score_1` - score_max.`max_Score`)) AS `exp_delta_Score_1`, exp(greatest(-100.0, score_max.`Score_2` - score_max.`max_Score`)) AS `exp_delta_Score_2`, exp(greatest(-100.0, score_max.`Score_3` - score_max.`max_Score`)) AS `exp_delta_Score_3` 
FROM score_max), 
score_class_union_soft AS 
(SELECT soft_scu.`KEY` AS `KEY`, soft_scu.class AS class, soft_scu.`exp_delta_Score` AS `exp_delta_Score` 
FROM (SELECT score_soft_max_deltas.`KEY` AS `KEY`, 0 AS class, score_soft_max_deltas.`exp_delta_Score_0` AS `exp_delta_Score` 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas.`KEY` AS `KEY`, 1 AS class, score_soft_max_deltas.`exp_delta_Score_1` AS `exp_delta_Score` 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas.`KEY` AS `KEY`, 2 AS class, score_soft_max_deltas.`exp_delta_Score_2` AS `exp_delta_Score` 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas.`KEY` AS `KEY`, 3 AS class, score_soft_max_deltas.`exp_delta_Score_3` AS `exp_delta_Score` 
FROM score_soft_max_deltas) AS soft_scu), 
score_soft_max AS 
(SELECT score_soft_max_deltas.`KEY` AS `KEY`, score_soft_max_deltas.`Score_0` AS `Score_0`, score_soft_max_deltas.`Score_1` AS `Score_1`, score_soft_max_deltas.`Score_2` AS `Score_2`, score_soft_max_deltas.`Score_3` AS `Score_3`, score_soft_max_deltas.`Proba_0` AS `Proba_0`, score_soft_max_deltas.`Proba_1` AS `Proba_1`, score_soft_max_deltas.`Proba_2` AS `Proba_2`, score_soft_max_deltas.`Proba_3` AS `Proba_3`, score_soft_max_deltas.`LogProba_0` AS `LogProba_0`, score_soft_max_deltas.`LogProba_1` AS `LogProba_1`, score_soft_max_deltas.`LogProba_2` AS `LogProba_2`, score_soft_max_deltas.`LogProba_3` AS `LogProba_3`, score_soft_max_deltas.`Decision` AS `Decision`, score_soft_max_deltas.`DecisionProba` AS `DecisionProba`, score_soft_max_deltas.`KEY_m` AS `KEY_m`, score_soft_max_deltas.`max_Score` AS `max_Score`, score_soft_max_deltas.`exp_delta_Score_0` AS `exp_delta_Score_0`, score_soft_max_deltas.`exp_delta_Score_1` AS `exp_delta_Score_1`, score_soft_max_deltas.`exp_delta_Score_2` AS `exp_delta_Score_2`, score_soft_max_deltas.`exp_delta_Score_3` AS `exp_delta_Score_3`, sum_exp_t.`KEY_sum` AS `KEY_sum`, sum_exp_t.`sum_ExpDeltaScore` AS `sum_ExpDeltaScore` 
FROM score_soft_max_deltas LEFT OUTER JOIN (SELECT score_class_union_soft.`KEY` AS `KEY_sum`, sum(score_class_union_soft.`exp_delta_Score`) AS `sum_ExpDeltaScore` 
FROM score_class_union_soft GROUP BY score_class_union_soft.`KEY`) AS sum_exp_t ON score_soft_max_deltas.`KEY` = sum_exp_t.`KEY_sum`), 
union_with_max AS 
(SELECT score_class_union.`KEY_u` AS `KEY_u`, score_class_union.class AS class, score_class_union.`LogProba` AS `LogProba`, score_class_union.`Proba` AS `Proba`, score_class_union.`Score` AS `Score`, score_soft_max.`KEY` AS `KEY`, score_soft_max.`Score_0` AS `Score_0`, score_soft_max.`Score_1` AS `Score_1`, score_soft_max.`Score_2` AS `Score_2`, score_soft_max.`Score_3` AS `Score_3`, score_soft_max.`Proba_0` AS `Proba_0`, score_soft_max.`Proba_1` AS `Proba_1`, score_soft_max.`Proba_2` AS `Proba_2`, score_soft_max.`Proba_3` AS `Proba_3`, score_soft_max.`LogProba_0` AS `LogProba_0`, score_soft_max.`LogProba_1` AS `LogProba_1`, score_soft_max.`LogProba_2` AS `LogProba_2`, score_soft_max.`LogProba_3` AS `LogProba_3`, score_soft_max.`Decision` AS `Decision`, score_soft_max.`DecisionProba` AS `DecisionProba`, score_soft_max.`KEY_m` AS `KEY_m`, score_soft_max.`max_Score` AS `max_Score`, score_soft_max.`exp_delta_Score_0` AS `exp_delta_Score_0`, score_soft_max.`exp_delta_Score_1` AS `exp_delta_Score_1`, score_soft_max.`exp_delta_Score_2` AS `exp_delta_Score_2`, score_soft_max.`exp_delta_Score_3` AS `exp_delta_Score_3`, score_soft_max.`KEY_sum` AS `KEY_sum`, score_soft_max.`sum_ExpDeltaScore` AS `sum_ExpDeltaScore` 
FROM score_class_union LEFT OUTER JOIN score_soft_max ON score_class_union.`KEY_u` = score_soft_max.`KEY`), 
arg_max_cte AS 
(SELECT score_soft_max.`KEY` AS `KEY`, score_soft_max.`Score_0` AS `Score_0`, score_soft_max.`Score_1` AS `Score_1`, score_soft_max.`Score_2` AS `Score_2`, score_soft_max.`Score_3` AS `Score_3`, score_soft_max.`Proba_0` AS `Proba_0`, score_soft_max.`Proba_1` AS `Proba_1`, score_soft_max.`Proba_2` AS `Proba_2`, score_soft_max.`Proba_3` AS `Proba_3`, score_soft_max.`LogProba_0` AS `LogProba_0`, score_soft_max.`LogProba_1` AS `LogProba_1`, score_soft_max.`LogProba_2` AS `LogProba_2`, score_soft_max.`LogProba_3` AS `LogProba_3`, score_soft_max.`Decision` AS `Decision`, score_soft_max.`DecisionProba` AS `DecisionProba`, score_soft_max.`KEY_m` AS `KEY_m`, score_soft_max.`max_Score` AS `max_Score`, score_soft_max.`exp_delta_Score_0` AS `exp_delta_Score_0`, score_soft_max.`exp_delta_Score_1` AS `exp_delta_Score_1`, score_soft_max.`exp_delta_Score_2` AS `exp_delta_Score_2`, score_soft_max.`exp_delta_Score_3` AS `exp_delta_Score_3`, score_soft_max.`KEY_sum` AS `KEY_sum`, score_soft_max.`sum_ExpDeltaScore` AS `sum_ExpDeltaScore`, `arg_max_t_Score`.`KEY_Score` AS `KEY_Score`, `arg_max_t_Score`.`arg_max_Score` AS `arg_max_Score`, soft_max_comp.`KEY_softmax` AS `KEY_softmax`, soft_max_comp.`SoftProba_0` AS `SoftProba_0`, soft_max_comp.`SoftProba_1` AS `SoftProba_1`, soft_max_comp.`SoftProba_2` AS `SoftProba_2`, soft_max_comp.`SoftProba_3` AS `SoftProba_3` 
FROM score_soft_max LEFT OUTER JOIN (SELECT union_with_max.`KEY` AS `KEY_Score`, min(union_with_max.class) AS `arg_max_Score` 
FROM union_with_max 
WHERE union_with_max.`Score` >= union_with_max.`max_Score` GROUP BY union_with_max.`KEY`) AS `arg_max_t_Score` ON score_soft_max.`KEY` = `arg_max_t_Score`.`KEY_Score` LEFT OUTER JOIN (SELECT score_soft_max.`KEY` AS `KEY_softmax`, score_soft_max.`exp_delta_Score_0` / score_soft_max.`sum_ExpDeltaScore` AS `SoftProba_0`, score_soft_max.`exp_delta_Score_1` / score_soft_max.`sum_ExpDeltaScore` AS `SoftProba_1`, score_soft_max.`exp_delta_Score_2` / score_soft_max.`sum_ExpDeltaScore` AS `SoftProba_2`, score_soft_max.`exp_delta_Score_3` / score_soft_max.`sum_ExpDeltaScore` AS `SoftProba_3` 
FROM score_soft_max) AS soft_max_comp ON soft_max_comp.`KEY_softmax` = `arg_max_t_Score`.`KEY_Score`)
 SELECT arg_max_cte.`KEY` AS `KEY`, NULL AS `Score_0`, NULL AS `Score_1`, NULL AS `Score_2`, NULL AS `Score_3`, arg_max_cte.`SoftProba_0` AS `Proba_0`, arg_max_cte.`SoftProba_1` AS `Proba_1`, arg_max_cte.`SoftProba_2` AS `Proba_2`, arg_max_cte.`SoftProba_3` AS `Proba_3`, CASE WHEN (arg_max_cte.`SoftProba_0` IS NULL OR arg_max_cte.`SoftProba_0` > 0.0) THEN ln(arg_max_cte.`SoftProba_0`) ELSE -1.79769313486231e+308 END AS `LogProba_0`, CASE WHEN (arg_max_cte.`SoftProba_1` IS NULL OR arg_max_cte.`SoftProba_1` > 0.0) THEN ln(arg_max_cte.`SoftProba_1`) ELSE -1.79769313486231e+308 END AS `LogProba_1`, CASE WHEN (arg_max_cte.`SoftProba_2` IS NULL OR arg_max_cte.`SoftProba_2` > 0.0) THEN ln(arg_max_cte.`SoftProba_2`) ELSE -1.79769313486231e+308 END AS `LogProba_2`, CASE WHEN (arg_max_cte.`SoftProba_3` IS NULL OR arg_max_cte.`SoftProba_3` > 0.0) THEN ln(arg_max_cte.`SoftProba_3`) ELSE -1.79769313486231e+308 END AS `LogProba_3`, arg_max_cte.`arg_max_Score` AS `Decision`, greatest(arg_max_cte.`SoftProba_0`, arg_max_cte.`SoftProba_1`, arg_max_cte.`SoftProba_2`, arg_max_cte.`SoftProba_3`) AS `DecisionProba` 
FROM arg_max_cte