-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2018

-- Model : MLPClassifier_Pipeline
-- Dataset : BinaryClass_100
-- Database : teradata


-- This SQL code can contain one or more statements, to be executed in the order they appear in this file.



-- Code For temporary table tmp_20180602141946_cgc_ads_imp_1_out part 1. Create 


CREATE GLOBAL TEMPORARY TABLE tmp_20180602141946_cgc_ads_imp_1_out  (
	"KEY" BIGINT, 
	impter_2 DOUBLE PRECISION, 
	impter_3 DOUBLE PRECISION, 
	impter_4 DOUBLE PRECISION, 
	impter_5 DOUBLE PRECISION, 
	impter_6 DOUBLE PRECISION, 
	impter_7 DOUBLE PRECISION, 
	impter_8 DOUBLE PRECISION, 
	impter_9 DOUBLE PRECISION, 
	impter_10 DOUBLE PRECISION, 
	impter_11 DOUBLE PRECISION, 
	impter_12 DOUBLE PRECISION, 
	impter_13 DOUBLE PRECISION, 
	impter_14 DOUBLE PRECISION, 
	impter_15 DOUBLE PRECISION, 
	impter_16 DOUBLE PRECISION, 
	impter_17 DOUBLE PRECISION, 
	impter_18 DOUBLE PRECISION, 
	impter_19 DOUBLE PRECISION, 
	impter_20 DOUBLE PRECISION, 
	impter_21 DOUBLE PRECISION, 
	impter_22 DOUBLE PRECISION, 
	impter_23 DOUBLE PRECISION, 
	impter_24 DOUBLE PRECISION, 
	impter_25 DOUBLE PRECISION, 
	impter_26 DOUBLE PRECISION, 
	impter_27 DOUBLE PRECISION, 
	impter_28 DOUBLE PRECISION, 
	impter_29 DOUBLE PRECISION, 
	impter_30 DOUBLE PRECISION, 
	impter_31 DOUBLE PRECISION, 
	impter_32 DOUBLE PRECISION, 
	impter_33 DOUBLE PRECISION, 
	impter_34 DOUBLE PRECISION, 
	impter_35 DOUBLE PRECISION, 
	impter_36 DOUBLE PRECISION, 
	impter_37 DOUBLE PRECISION, 
	impter_38 DOUBLE PRECISION, 
	impter_39 DOUBLE PRECISION, 
	impter_40 DOUBLE PRECISION, 
	impter_41 DOUBLE PRECISION, 
	impter_42 DOUBLE PRECISION, 
	impter_43 DOUBLE PRECISION, 
	impter_44 DOUBLE PRECISION, 
	impter_45 DOUBLE PRECISION, 
	impter_46 DOUBLE PRECISION, 
	impter_47 DOUBLE PRECISION, 
	impter_48 DOUBLE PRECISION, 
	impter_49 DOUBLE PRECISION, 
	impter_50 DOUBLE PRECISION, 
	impter_51 DOUBLE PRECISION, 
	impter_52 DOUBLE PRECISION, 
	impter_53 DOUBLE PRECISION, 
	impter_54 DOUBLE PRECISION, 
	impter_55 DOUBLE PRECISION, 
	impter_56 DOUBLE PRECISION, 
	impter_57 DOUBLE PRECISION, 
	impter_58 DOUBLE PRECISION, 
	impter_59 DOUBLE PRECISION, 
	impter_60 DOUBLE PRECISION, 
	impter_61 DOUBLE PRECISION, 
	impter_62 DOUBLE PRECISION, 
	impter_63 DOUBLE PRECISION, 
	impter_64 DOUBLE PRECISION, 
	impter_65 DOUBLE PRECISION, 
	impter_66 DOUBLE PRECISION, 
	impter_67 DOUBLE PRECISION, 
	impter_68 DOUBLE PRECISION, 
	impter_69 DOUBLE PRECISION, 
	impter_70 DOUBLE PRECISION, 
	impter_71 DOUBLE PRECISION, 
	impter_72 DOUBLE PRECISION, 
	impter_73 DOUBLE PRECISION, 
	impter_74 DOUBLE PRECISION, 
	impter_75 DOUBLE PRECISION, 
	impter_76 DOUBLE PRECISION, 
	impter_77 DOUBLE PRECISION, 
	impter_78 DOUBLE PRECISION, 
	impter_79 DOUBLE PRECISION, 
	impter_80 DOUBLE PRECISION, 
	impter_81 DOUBLE PRECISION, 
	impter_82 DOUBLE PRECISION, 
	impter_83 DOUBLE PRECISION, 
	impter_84 DOUBLE PRECISION, 
	impter_85 DOUBLE PRECISION, 
	impter_86 DOUBLE PRECISION, 
	impter_87 DOUBLE PRECISION, 
	impter_88 DOUBLE PRECISION, 
	impter_89 DOUBLE PRECISION, 
	impter_90 DOUBLE PRECISION, 
	impter_91 DOUBLE PRECISION, 
	impter_92 DOUBLE PRECISION, 
	impter_93 DOUBLE PRECISION, 
	impter_94 DOUBLE PRECISION, 
	impter_95 DOUBLE PRECISION, 
	impter_96 DOUBLE PRECISION, 
	impter_97 DOUBLE PRECISION, 
	impter_98 DOUBLE PRECISION, 
	impter_99 DOUBLE PRECISION, 
	impter_100 DOUBLE PRECISION, 
	impter_101 DOUBLE PRECISION
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table tmp_20180602141946_cgc_ads_imp_1_out part 2. Populate

INSERT INTO tmp_20180602141946_cgc_ads_imp_1_out ("KEY", impter_2, impter_3, impter_4, impter_5, impter_6, impter_7, impter_8, impter_9, impter_10, impter_11, impter_12, impter_13, impter_14, impter_15, impter_16, impter_17, impter_18, impter_19, impter_20, impter_21, impter_22, impter_23, impter_24, impter_25, impter_26, impter_27, impter_28, impter_29, impter_30, impter_31, impter_32, impter_33, impter_34, impter_35, impter_36, impter_37, impter_38, impter_39, impter_40, impter_41, impter_42, impter_43, impter_44, impter_45, impter_46, impter_47, impter_48, impter_49, impter_50, impter_51, impter_52, impter_53, impter_54, impter_55, impter_56, impter_57, impter_58, impter_59, impter_60, impter_61, impter_62, impter_63, impter_64, impter_65, impter_66, impter_67, impter_68, impter_69, impter_70, impter_71, impter_72, impter_73, impter_74, impter_75, impter_76, impter_77, impter_78, impter_79, impter_80, impter_81, impter_82, impter_83, impter_84, impter_85, impter_86, impter_87, impter_88, impter_89, impter_90, impter_91, impter_92, impter_93, impter_94, impter_95, impter_96, impter_97, impter_98, impter_99, impter_100, impter_101) SELECT "U"."KEY", "U".impter_2, "U".impter_3, "U".impter_4, "U".impter_5, "U".impter_6, "U".impter_7, "U".impter_8, "U".impter_9, "U".impter_10, "U".impter_11, "U".impter_12, "U".impter_13, "U".impter_14, "U".impter_15, "U".impter_16, "U".impter_17, "U".impter_18, "U".impter_19, "U".impter_20, "U".impter_21, "U".impter_22, "U".impter_23, "U".impter_24, "U".impter_25, "U".impter_26, "U".impter_27, "U".impter_28, "U".impter_29, "U".impter_30, "U".impter_31, "U".impter_32, "U".impter_33, "U".impter_34, "U".impter_35, "U".impter_36, "U".impter_37, "U".impter_38, "U".impter_39, "U".impter_40, "U".impter_41, "U".impter_42, "U".impter_43, "U".impter_44, "U".impter_45, "U".impter_46, "U".impter_47, "U".impter_48, "U".impter_49, "U".impter_50, "U".impter_51, "U".impter_52, "U".impter_53, "U".impter_54, "U".impter_55, "U".impter_56, "U".impter_57, "U".impter_58, "U".impter_59, "U".impter_60, "U".impter_61, "U".impter_62, "U".impter_63, "U".impter_64, "U".impter_65, "U".impter_66, "U".impter_67, "U".impter_68, "U".impter_69, "U".impter_70, "U".impter_71, "U".impter_72, "U".impter_73, "U".impter_74, "U".impter_75, "U".impter_76, "U".impter_77, "U".impter_78, "U".impter_79, "U".impter_80, "U".impter_81, "U".impter_82, "U".impter_83, "U".impter_84, "U".impter_85, "U".impter_86, "U".impter_87, "U".impter_88, "U".impter_89, "U".impter_90, "U".impter_91, "U".impter_92, "U".impter_93, "U".impter_94, "U".impter_95, "U".impter_96, "U".impter_97, "U".impter_98, "U".impter_99, "U".impter_100, "U".impter_101 
FROM (SELECT "ADS_imp_1_OUT"."KEY", "ADS_imp_1_OUT".impter_2, "ADS_imp_1_OUT".impter_3, "ADS_imp_1_OUT".impter_4, "ADS_imp_1_OUT".impter_5, "ADS_imp_1_OUT".impter_6, "ADS_imp_1_OUT".impter_7, "ADS_imp_1_OUT".impter_8, "ADS_imp_1_OUT".impter_9, "ADS_imp_1_OUT".impter_10, "ADS_imp_1_OUT".impter_11, "ADS_imp_1_OUT".impter_12, "ADS_imp_1_OUT".impter_13, "ADS_imp_1_OUT".impter_14, "ADS_imp_1_OUT".impter_15, "ADS_imp_1_OUT".impter_16, "ADS_imp_1_OUT".impter_17, "ADS_imp_1_OUT".impter_18, "ADS_imp_1_OUT".impter_19, "ADS_imp_1_OUT".impter_20, "ADS_imp_1_OUT".impter_21, "ADS_imp_1_OUT".impter_22, "ADS_imp_1_OUT".impter_23, "ADS_imp_1_OUT".impter_24, "ADS_imp_1_OUT".impter_25, "ADS_imp_1_OUT".impter_26, "ADS_imp_1_OUT".impter_27, "ADS_imp_1_OUT".impter_28, "ADS_imp_1_OUT".impter_29, "ADS_imp_1_OUT".impter_30, "ADS_imp_1_OUT".impter_31, "ADS_imp_1_OUT".impter_32, "ADS_imp_1_OUT".impter_33, "ADS_imp_1_OUT".impter_34, "ADS_imp_1_OUT".impter_35, "ADS_imp_1_OUT".impter_36, "ADS_imp_1_OUT".impter_37, "ADS_imp_1_OUT".impter_38, "ADS_imp_1_OUT".impter_39, "ADS_imp_1_OUT".impter_40, "ADS_imp_1_OUT".impter_41, "ADS_imp_1_OUT".impter_42, "ADS_imp_1_OUT".impter_43, "ADS_imp_1_OUT".impter_44, "ADS_imp_1_OUT".impter_45, "ADS_imp_1_OUT".impter_46, "ADS_imp_1_OUT".impter_47, "ADS_imp_1_OUT".impter_48, "ADS_imp_1_OUT".impter_49, "ADS_imp_1_OUT".impter_50, "ADS_imp_1_OUT".impter_51, "ADS_imp_1_OUT".impter_52, "ADS_imp_1_OUT".impter_53, "ADS_imp_1_OUT".impter_54, "ADS_imp_1_OUT".impter_55, "ADS_imp_1_OUT".impter_56, "ADS_imp_1_OUT".impter_57, "ADS_imp_1_OUT".impter_58, "ADS_imp_1_OUT".impter_59, "ADS_imp_1_OUT".impter_60, "ADS_imp_1_OUT".impter_61, "ADS_imp_1_OUT".impter_62, "ADS_imp_1_OUT".impter_63, "ADS_imp_1_OUT".impter_64, "ADS_imp_1_OUT".impter_65, "ADS_imp_1_OUT".impter_66, "ADS_imp_1_OUT".impter_67, "ADS_imp_1_OUT".impter_68, "ADS_imp_1_OUT".impter_69, "ADS_imp_1_OUT".impter_70, "ADS_imp_1_OUT".impter_71, "ADS_imp_1_OUT".impter_72, "ADS_imp_1_OUT".impter_73, "ADS_imp_1_OUT".impter_74, "ADS_imp_1_OUT".impter_75, "ADS_imp_1_OUT".impter_76, "ADS_imp_1_OUT".impter_77, "ADS_imp_1_OUT".impter_78, "ADS_imp_1_OUT".impter_79, "ADS_imp_1_OUT".impter_80, "ADS_imp_1_OUT".impter_81, "ADS_imp_1_OUT".impter_82, "ADS_imp_1_OUT".impter_83, "ADS_imp_1_OUT".impter_84, "ADS_imp_1_OUT".impter_85, "ADS_imp_1_OUT".impter_86, "ADS_imp_1_OUT".impter_87, "ADS_imp_1_OUT".impter_88, "ADS_imp_1_OUT".impter_89, "ADS_imp_1_OUT".impter_90, "ADS_imp_1_OUT".impter_91, "ADS_imp_1_OUT".impter_92, "ADS_imp_1_OUT".impter_93, "ADS_imp_1_OUT".impter_94, "ADS_imp_1_OUT".impter_95, "ADS_imp_1_OUT".impter_96, "ADS_imp_1_OUT".impter_97, "ADS_imp_1_OUT".impter_98, "ADS_imp_1_OUT".impter_99, "ADS_imp_1_OUT".impter_100, "ADS_imp_1_OUT".impter_101 
FROM (SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" IS NULL) THEN 0.14903440845324958 ELSE "ADS"."Feature_0" END AS impter_2, CASE WHEN ("ADS"."Feature_1" IS NULL) THEN -0.03367636493032261 ELSE "ADS"."Feature_1" END AS impter_3, CASE WHEN ("ADS"."Feature_2" IS NULL) THEN 0.11933316355610842 ELSE "ADS"."Feature_2" END AS impter_4, CASE WHEN ("ADS"."Feature_3" IS NULL) THEN -0.17369203130189262 ELSE "ADS"."Feature_3" END AS impter_5, CASE WHEN ("ADS"."Feature_4" IS NULL) THEN 0.06534355492106358 ELSE "ADS"."Feature_4" END AS impter_6, CASE WHEN ("ADS"."Feature_5" IS NULL) THEN 0.2436228993764152 ELSE "ADS"."Feature_5" END AS impter_7, CASE WHEN ("ADS"."Feature_6" IS NULL) THEN -0.11367357911147091 ELSE "ADS"."Feature_6" END AS impter_8, CASE WHEN ("ADS"."Feature_7" IS NULL) THEN -0.21176443876708548 ELSE "ADS"."Feature_7" END AS impter_9, CASE WHEN ("ADS"."Feature_8" IS NULL) THEN 0.11513979914587343 ELSE "ADS"."Feature_8" END AS impter_10, CASE WHEN ("ADS"."Feature_9" IS NULL) THEN 0.029111924938589835 ELSE "ADS"."Feature_9" END AS impter_11, CASE WHEN ("ADS"."Feature_10" IS NULL) THEN 0.1107718926861467 ELSE "ADS"."Feature_10" END AS impter_12, CASE WHEN ("ADS"."Feature_11" IS NULL) THEN 0.0014580375424568769 ELSE "ADS"."Feature_11" END AS impter_13, CASE WHEN ("ADS"."Feature_12" IS NULL) THEN -0.0773739291867229 ELSE "ADS"."Feature_12" END AS impter_14, CASE WHEN ("ADS"."Feature_13" IS NULL) THEN -0.1139572875884789 ELSE "ADS"."Feature_13" END AS impter_15, CASE WHEN ("ADS"."Feature_14" IS NULL) THEN -0.12567631285043362 ELSE "ADS"."Feature_14" END AS impter_16, CASE WHEN ("ADS"."Feature_15" IS NULL) THEN -0.05799597833985687 ELSE "ADS"."Feature_15" END AS impter_17, CASE WHEN ("ADS"."Feature_16" IS NULL) THEN -0.14181264174476002 ELSE "ADS"."Feature_16" END AS impter_18, CASE WHEN ("ADS"."Feature_17" IS NULL) THEN -0.1265454286904762 ELSE "ADS"."Feature_17" END AS impter_19, CASE WHEN ("ADS"."Feature_18" IS NULL) THEN -0.07812248683518369 ELSE "ADS"."Feature_18" END AS impter_20, CASE WHEN ("ADS"."Feature_19" IS NULL) THEN -0.07648737683022465 ELSE "ADS"."Feature_19" END AS impter_21, CASE WHEN ("ADS"."Feature_20" IS NULL) THEN 0.05864262427869482 ELSE "ADS"."Feature_20" END AS impter_22, CASE WHEN ("ADS"."Feature_21" IS NULL) THEN 0.10844037074552852 ELSE "ADS"."Feature_21" END AS impter_23, CASE WHEN ("ADS"."Feature_22" IS NULL) THEN 0.060065969333441514 ELSE "ADS"."Feature_22" END AS impter_24, CASE WHEN ("ADS"."Feature_23" IS NULL) THEN 0.15255771271935042 ELSE "ADS"."Feature_23" END AS impter_25, CASE WHEN ("ADS"."Feature_24" IS NULL) THEN -0.047123256877991036 ELSE "ADS"."Feature_24" END AS impter_26, CASE WHEN ("ADS"."Feature_25" IS NULL) THEN -0.05696296914089203 ELSE "ADS"."Feature_25" END AS impter_27, CASE WHEN ("ADS"."Feature_26" IS NULL) THEN 0.09614684099943512 ELSE "ADS"."Feature_26" END AS impter_28, CASE WHEN ("ADS"."Feature_27" IS NULL) THEN 0.10433833409752227 ELSE "ADS"."Feature_27" END AS impter_29, CASE WHEN ("ADS"."Feature_28" IS NULL) THEN 0.03257716191960926 ELSE "ADS"."Feature_28" END AS impter_30, CASE WHEN ("ADS"."Feature_29" IS NULL) THEN 0.06142905749366723 ELSE "ADS"."Feature_29" END AS impter_31, CASE WHEN ("ADS"."Feature_30" IS NULL) THEN -0.014540423460679405 ELSE "ADS"."Feature_30" END AS impter_32, CASE WHEN ("ADS"."Feature_31" IS NULL) THEN -0.1123380099941879 ELSE "ADS"."Feature_31" END AS impter_33, CASE WHEN ("ADS"."Feature_32" IS NULL) THEN 0.1189128446049145 ELSE "ADS"."Feature_32" END AS impter_34, CASE WHEN ("ADS"."Feature_33" IS NULL) THEN 0.2286864930078044 ELSE "ADS"."Feature_33" END AS impter_35, CASE WHEN ("ADS"."Feature_34" IS NULL) THEN 0.23566181549921908 ELSE "ADS"."Feature_34" END AS impter_36, CASE WHEN ("ADS"."Feature_35" IS NULL) THEN 0.07316970399964386 ELSE "ADS"."Feature_35" END AS impter_37, CASE WHEN ("ADS"."Feature_36" IS NULL) THEN -0.03319409827469623 ELSE "ADS"."Feature_36" END AS impter_38, CASE WHEN ("ADS"."Feature_37" IS NULL) THEN 0.2734938774177451 ELSE "ADS"."Feature_37" END AS impter_39, CASE WHEN ("ADS"."Feature_38" IS NULL) THEN -0.023289567742236165 ELSE "ADS"."Feature_38" END AS impter_40, CASE WHEN ("ADS"."Feature_39" IS NULL) THEN 0.030288379260645946 ELSE "ADS"."Feature_39" END AS impter_41, CASE WHEN ("ADS"."Feature_40" IS NULL) THEN -0.10736826233135917 ELSE "ADS"."Feature_40" END AS impter_42, CASE WHEN ("ADS"."Feature_41" IS NULL) THEN 0.026402950097887946 ELSE "ADS"."Feature_41" END AS impter_43, CASE WHEN ("ADS"."Feature_42" IS NULL) THEN -0.09677146654911453 ELSE "ADS"."Feature_42" END AS impter_44, CASE WHEN ("ADS"."Feature_43" IS NULL) THEN 0.005974248342970334 ELSE "ADS"."Feature_43" END AS impter_45, CASE WHEN ("ADS"."Feature_44" IS NULL) THEN 0.036917268127071114 ELSE "ADS"."Feature_44" END AS impter_46, CASE WHEN ("ADS"."Feature_45" IS NULL) THEN -0.14525717382374131 ELSE "ADS"."Feature_45" END AS impter_47, CASE WHEN ("ADS"."Feature_46" IS NULL) THEN -0.16675269881177787 ELSE "ADS"."Feature_46" END AS impter_48, CASE WHEN ("ADS"."Feature_47" IS NULL) THEN 0.25084465695652713 ELSE "ADS"."Feature_47" END AS impter_49, CASE WHEN ("ADS"."Feature_48" IS NULL) THEN 0.14623398322257627 ELSE "ADS"."Feature_48" END AS impter_50, CASE WHEN ("ADS"."Feature_49" IS NULL) THEN 0.10185431133406106 ELSE "ADS"."Feature_49" END AS impter_51, CASE WHEN ("ADS"."Feature_50" IS NULL) THEN -0.13292560945085755 ELSE "ADS"."Feature_50" END AS impter_52, CASE WHEN ("ADS"."Feature_51" IS NULL) THEN -0.042191791365440365 ELSE "ADS"."Feature_51" END AS impter_53, CASE WHEN ("ADS"."Feature_52" IS NULL) THEN 0.15214028404681929 ELSE "ADS"."Feature_52" END AS impter_54, CASE WHEN ("ADS"."Feature_53" IS NULL) THEN -0.15821372314298002 ELSE "ADS"."Feature_53" END AS impter_55, CASE WHEN ("ADS"."Feature_54" IS NULL) THEN 0.17926260535776073 ELSE "ADS"."Feature_54" END AS impter_56, CASE WHEN ("ADS"."Feature_55" IS NULL) THEN 0.05077533210437681 ELSE "ADS"."Feature_55" END AS impter_57, CASE WHEN ("ADS"."Feature_56" IS NULL) THEN -0.011884551362322174 ELSE "ADS"."Feature_56" END AS impter_58, CASE WHEN ("ADS"."Feature_57" IS NULL) THEN -0.04948745069141103 ELSE "ADS"."Feature_57" END AS impter_59, CASE WHEN ("ADS"."Feature_58" IS NULL) THEN -0.13256733552482858 ELSE "ADS"."Feature_58" END AS impter_60, CASE WHEN ("ADS"."Feature_59" IS NULL) THEN 0.11866238202513515 ELSE "ADS"."Feature_59" END AS impter_61, CASE WHEN ("ADS"."Feature_60" IS NULL) THEN -0.06590828520229039 ELSE "ADS"."Feature_60" END AS impter_62, CASE WHEN ("ADS"."Feature_61" IS NULL) THEN 0.1554857338869047 ELSE "ADS"."Feature_61" END AS impter_63, CASE WHEN ("ADS"."Feature_62" IS NULL) THEN -0.006608301490984002 ELSE "ADS"."Feature_62" END AS impter_64, CASE WHEN ("ADS"."Feature_63" IS NULL) THEN -0.01827580148493827 ELSE "ADS"."Feature_63" END AS impter_65, CASE WHEN ("ADS"."Feature_64" IS NULL) THEN -0.027366317428668574 ELSE "ADS"."Feature_64" END AS impter_66, CASE WHEN ("ADS"."Feature_65" IS NULL) THEN 0.01436625003668961 ELSE "ADS"."Feature_65" END AS impter_67, CASE WHEN ("ADS"."Feature_66" IS NULL) THEN 0.054075300089557875 ELSE "ADS"."Feature_66" END AS impter_68, CASE WHEN ("ADS"."Feature_67" IS NULL) THEN -0.23085273383923544 ELSE "ADS"."Feature_67" END AS impter_69, CASE WHEN ("ADS"."Feature_68" IS NULL) THEN -0.24396528808375115 ELSE "ADS"."Feature_68" END AS impter_70, CASE WHEN ("ADS"."Feature_69" IS NULL) THEN 0.06545065787659607 ELSE "ADS"."Feature_69" END AS impter_71, CASE WHEN ("ADS"."Feature_70" IS NULL) THEN 0.04266518302023082 ELSE "ADS"."Feature_70" END AS impter_72, CASE WHEN ("ADS"."Feature_71" IS NULL) THEN -0.1540451820349279 ELSE "ADS"."Feature_71" END AS impter_73, CASE WHEN ("ADS"."Feature_72" IS NULL) THEN -0.2222352564572451 ELSE "ADS"."Feature_72" END AS impter_74, CASE WHEN ("ADS"."Feature_73" IS NULL) THEN 0.0685606372972674 ELSE "ADS"."Feature_73" END AS impter_75, CASE WHEN ("ADS"."Feature_74" IS NULL) THEN -0.09639592085393558 ELSE "ADS"."Feature_74" END AS impter_76, CASE WHEN ("ADS"."Feature_75" IS NULL) THEN 0.20747518927524572 ELSE "ADS"."Feature_75" END AS impter_77, CASE WHEN ("ADS"."Feature_76" IS NULL) THEN -0.13945256367132464 ELSE "ADS"."Feature_76" END AS impter_78, CASE WHEN ("ADS"."Feature_77" IS NULL) THEN 0.021954208773706758 ELSE "ADS"."Feature_77" END AS impter_79, CASE WHEN ("ADS"."Feature_78" IS NULL) THEN 0.07033517037026028 ELSE "ADS"."Feature_78" END AS impter_80, CASE WHEN ("ADS"."Feature_79" IS NULL) THEN 0.12062472190694748 ELSE "ADS"."Feature_79" END AS impter_81, CASE WHEN ("ADS"."Feature_80" IS NULL) THEN -0.03376594744247921 ELSE "ADS"."Feature_80" END AS impter_82, CASE WHEN ("ADS"."Feature_81" IS NULL) THEN -0.11063521313283846 ELSE "ADS"."Feature_81" END AS impter_83, CASE WHEN ("ADS"."Feature_82" IS NULL) THEN 0.040264280436689885 ELSE "ADS"."Feature_82" END AS impter_84, CASE WHEN ("ADS"."Feature_83" IS NULL) THEN 0.047619698634703535 ELSE "ADS"."Feature_83" END AS impter_85, CASE WHEN ("ADS"."Feature_84" IS NULL) THEN 0.10294542896565007 ELSE "ADS"."Feature_84" END AS impter_86, CASE WHEN ("ADS"."Feature_85" IS NULL) THEN 0.03543139086541035 ELSE "ADS"."Feature_85" END AS impter_87, CASE WHEN ("ADS"."Feature_86" IS NULL) THEN 0.15812674995414752 ELSE "ADS"."Feature_86" END AS impter_88, CASE WHEN ("ADS"."Feature_87" IS NULL) THEN -0.09370679202503561 ELSE "ADS"."Feature_87" END AS impter_89, CASE WHEN ("ADS"."Feature_88" IS NULL) THEN -0.05352174133125283 ELSE "ADS"."Feature_88" END AS impter_90, CASE WHEN ("ADS"."Feature_89" IS NULL) THEN -0.05671142135749989 ELSE "ADS"."Feature_89" END AS impter_91, CASE WHEN ("ADS"."Feature_90" IS NULL) THEN 0.1683501919918398 ELSE "ADS"."Feature_90" END AS impter_92, CASE WHEN ("ADS"."Feature_91" IS NULL) THEN -0.08014687785959375 ELSE "ADS"."Feature_91" END AS impter_93, CASE WHEN ("ADS"."Feature_92" IS NULL) THEN 0.06732751721128641 ELSE "ADS"."Feature_92" END AS impter_94, CASE WHEN ("ADS"."Feature_93" IS NULL) THEN -0.00888651681786575 ELSE "ADS"."Feature_93" END AS impter_95, CASE WHEN ("ADS"."Feature_94" IS NULL) THEN 0.026095385517810564 ELSE "ADS"."Feature_94" END AS impter_96, CASE WHEN ("ADS"."Feature_95" IS NULL) THEN 0.04435425200996614 ELSE "ADS"."Feature_95" END AS impter_97, CASE WHEN ("ADS"."Feature_96" IS NULL) THEN 0.026895408070568623 ELSE "ADS"."Feature_96" END AS impter_98, CASE WHEN ("ADS"."Feature_97" IS NULL) THEN 0.18232971539070067 ELSE "ADS"."Feature_97" END AS impter_99, CASE WHEN ("ADS"."Feature_98" IS NULL) THEN -0.12132540363011564 ELSE "ADS"."Feature_98" END AS impter_100, CASE WHEN ("ADS"."Feature_99" IS NULL) THEN 0.004420132524286926 ELSE "ADS"."Feature_99" END AS impter_101 
FROM "BinaryClass_100" AS "ADS") AS "ADS_imp_1_OUT") AS "U"

-- Code For temporary table tmp_20180602141946_cr1_ads_sca_2_out part 1. Create 


CREATE GLOBAL TEMPORARY TABLE tmp_20180602141946_cr1_ads_sca_2_out  (
	"KEY" BIGINT, 
	scaler_2 DOUBLE PRECISION, 
	scaler_3 DOUBLE PRECISION, 
	scaler_4 DOUBLE PRECISION, 
	scaler_5 DOUBLE PRECISION, 
	scaler_6 DOUBLE PRECISION, 
	scaler_7 DOUBLE PRECISION, 
	scaler_8 DOUBLE PRECISION, 
	scaler_9 DOUBLE PRECISION, 
	scaler_10 DOUBLE PRECISION, 
	scaler_11 DOUBLE PRECISION, 
	scaler_12 DOUBLE PRECISION, 
	scaler_13 DOUBLE PRECISION, 
	scaler_14 DOUBLE PRECISION, 
	scaler_15 DOUBLE PRECISION, 
	scaler_16 DOUBLE PRECISION, 
	scaler_17 DOUBLE PRECISION, 
	scaler_18 DOUBLE PRECISION, 
	scaler_19 DOUBLE PRECISION, 
	scaler_20 DOUBLE PRECISION, 
	scaler_21 DOUBLE PRECISION, 
	scaler_22 DOUBLE PRECISION, 
	scaler_23 DOUBLE PRECISION, 
	scaler_24 DOUBLE PRECISION, 
	scaler_25 DOUBLE PRECISION, 
	scaler_26 DOUBLE PRECISION, 
	scaler_27 DOUBLE PRECISION, 
	scaler_28 DOUBLE PRECISION, 
	scaler_29 DOUBLE PRECISION, 
	scaler_30 DOUBLE PRECISION, 
	scaler_31 DOUBLE PRECISION, 
	scaler_32 DOUBLE PRECISION, 
	scaler_33 DOUBLE PRECISION, 
	scaler_34 DOUBLE PRECISION, 
	scaler_35 DOUBLE PRECISION, 
	scaler_36 DOUBLE PRECISION, 
	scaler_37 DOUBLE PRECISION, 
	scaler_38 DOUBLE PRECISION, 
	scaler_39 DOUBLE PRECISION, 
	scaler_40 DOUBLE PRECISION, 
	scaler_41 DOUBLE PRECISION, 
	scaler_42 DOUBLE PRECISION, 
	scaler_43 DOUBLE PRECISION, 
	scaler_44 DOUBLE PRECISION, 
	scaler_45 DOUBLE PRECISION, 
	scaler_46 DOUBLE PRECISION, 
	scaler_47 DOUBLE PRECISION, 
	scaler_48 DOUBLE PRECISION, 
	scaler_49 DOUBLE PRECISION, 
	scaler_50 DOUBLE PRECISION, 
	scaler_51 DOUBLE PRECISION, 
	scaler_52 DOUBLE PRECISION, 
	scaler_53 DOUBLE PRECISION, 
	scaler_54 DOUBLE PRECISION, 
	scaler_55 DOUBLE PRECISION, 
	scaler_56 DOUBLE PRECISION, 
	scaler_57 DOUBLE PRECISION, 
	scaler_58 DOUBLE PRECISION, 
	scaler_59 DOUBLE PRECISION, 
	scaler_60 DOUBLE PRECISION, 
	scaler_61 DOUBLE PRECISION, 
	scaler_62 DOUBLE PRECISION, 
	scaler_63 DOUBLE PRECISION, 
	scaler_64 DOUBLE PRECISION, 
	scaler_65 DOUBLE PRECISION, 
	scaler_66 DOUBLE PRECISION, 
	scaler_67 DOUBLE PRECISION, 
	scaler_68 DOUBLE PRECISION, 
	scaler_69 DOUBLE PRECISION, 
	scaler_70 DOUBLE PRECISION, 
	scaler_71 DOUBLE PRECISION, 
	scaler_72 DOUBLE PRECISION, 
	scaler_73 DOUBLE PRECISION, 
	scaler_74 DOUBLE PRECISION, 
	scaler_75 DOUBLE PRECISION, 
	scaler_76 DOUBLE PRECISION, 
	scaler_77 DOUBLE PRECISION, 
	scaler_78 DOUBLE PRECISION, 
	scaler_79 DOUBLE PRECISION, 
	scaler_80 DOUBLE PRECISION, 
	scaler_81 DOUBLE PRECISION, 
	scaler_82 DOUBLE PRECISION, 
	scaler_83 DOUBLE PRECISION, 
	scaler_84 DOUBLE PRECISION, 
	scaler_85 DOUBLE PRECISION, 
	scaler_86 DOUBLE PRECISION, 
	scaler_87 DOUBLE PRECISION, 
	scaler_88 DOUBLE PRECISION, 
	scaler_89 DOUBLE PRECISION, 
	scaler_90 DOUBLE PRECISION, 
	scaler_91 DOUBLE PRECISION, 
	scaler_92 DOUBLE PRECISION, 
	scaler_93 DOUBLE PRECISION, 
	scaler_94 DOUBLE PRECISION, 
	scaler_95 DOUBLE PRECISION, 
	scaler_96 DOUBLE PRECISION, 
	scaler_97 DOUBLE PRECISION, 
	scaler_98 DOUBLE PRECISION, 
	scaler_99 DOUBLE PRECISION, 
	scaler_100 DOUBLE PRECISION, 
	scaler_101 DOUBLE PRECISION
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table tmp_20180602141946_cr1_ads_sca_2_out part 2. Populate

INSERT INTO tmp_20180602141946_cr1_ads_sca_2_out ("KEY", scaler_2, scaler_3, scaler_4, scaler_5, scaler_6, scaler_7, scaler_8, scaler_9, scaler_10, scaler_11, scaler_12, scaler_13, scaler_14, scaler_15, scaler_16, scaler_17, scaler_18, scaler_19, scaler_20, scaler_21, scaler_22, scaler_23, scaler_24, scaler_25, scaler_26, scaler_27, scaler_28, scaler_29, scaler_30, scaler_31, scaler_32, scaler_33, scaler_34, scaler_35, scaler_36, scaler_37, scaler_38, scaler_39, scaler_40, scaler_41, scaler_42, scaler_43, scaler_44, scaler_45, scaler_46, scaler_47, scaler_48, scaler_49, scaler_50, scaler_51, scaler_52, scaler_53, scaler_54, scaler_55, scaler_56, scaler_57, scaler_58, scaler_59, scaler_60, scaler_61, scaler_62, scaler_63, scaler_64, scaler_65, scaler_66, scaler_67, scaler_68, scaler_69, scaler_70, scaler_71, scaler_72, scaler_73, scaler_74, scaler_75, scaler_76, scaler_77, scaler_78, scaler_79, scaler_80, scaler_81, scaler_82, scaler_83, scaler_84, scaler_85, scaler_86, scaler_87, scaler_88, scaler_89, scaler_90, scaler_91, scaler_92, scaler_93, scaler_94, scaler_95, scaler_96, scaler_97, scaler_98, scaler_99, scaler_100, scaler_101) SELECT "U"."KEY", "U".scaler_2, "U".scaler_3, "U".scaler_4, "U".scaler_5, "U".scaler_6, "U".scaler_7, "U".scaler_8, "U".scaler_9, "U".scaler_10, "U".scaler_11, "U".scaler_12, "U".scaler_13, "U".scaler_14, "U".scaler_15, "U".scaler_16, "U".scaler_17, "U".scaler_18, "U".scaler_19, "U".scaler_20, "U".scaler_21, "U".scaler_22, "U".scaler_23, "U".scaler_24, "U".scaler_25, "U".scaler_26, "U".scaler_27, "U".scaler_28, "U".scaler_29, "U".scaler_30, "U".scaler_31, "U".scaler_32, "U".scaler_33, "U".scaler_34, "U".scaler_35, "U".scaler_36, "U".scaler_37, "U".scaler_38, "U".scaler_39, "U".scaler_40, "U".scaler_41, "U".scaler_42, "U".scaler_43, "U".scaler_44, "U".scaler_45, "U".scaler_46, "U".scaler_47, "U".scaler_48, "U".scaler_49, "U".scaler_50, "U".scaler_51, "U".scaler_52, "U".scaler_53, "U".scaler_54, "U".scaler_55, "U".scaler_56, "U".scaler_57, "U".scaler_58, "U".scaler_59, "U".scaler_60, "U".scaler_61, "U".scaler_62, "U".scaler_63, "U".scaler_64, "U".scaler_65, "U".scaler_66, "U".scaler_67, "U".scaler_68, "U".scaler_69, "U".scaler_70, "U".scaler_71, "U".scaler_72, "U".scaler_73, "U".scaler_74, "U".scaler_75, "U".scaler_76, "U".scaler_77, "U".scaler_78, "U".scaler_79, "U".scaler_80, "U".scaler_81, "U".scaler_82, "U".scaler_83, "U".scaler_84, "U".scaler_85, "U".scaler_86, "U".scaler_87, "U".scaler_88, "U".scaler_89, "U".scaler_90, "U".scaler_91, "U".scaler_92, "U".scaler_93, "U".scaler_94, "U".scaler_95, "U".scaler_96, "U".scaler_97, "U".scaler_98, "U".scaler_99, "U".scaler_100, "U".scaler_101 
FROM (SELECT "ADS_sca_2_OUT"."KEY", "ADS_sca_2_OUT".scaler_2, "ADS_sca_2_OUT".scaler_3, "ADS_sca_2_OUT".scaler_4, "ADS_sca_2_OUT".scaler_5, "ADS_sca_2_OUT".scaler_6, "ADS_sca_2_OUT".scaler_7, "ADS_sca_2_OUT".scaler_8, "ADS_sca_2_OUT".scaler_9, "ADS_sca_2_OUT".scaler_10, "ADS_sca_2_OUT".scaler_11, "ADS_sca_2_OUT".scaler_12, "ADS_sca_2_OUT".scaler_13, "ADS_sca_2_OUT".scaler_14, "ADS_sca_2_OUT".scaler_15, "ADS_sca_2_OUT".scaler_16, "ADS_sca_2_OUT".scaler_17, "ADS_sca_2_OUT".scaler_18, "ADS_sca_2_OUT".scaler_19, "ADS_sca_2_OUT".scaler_20, "ADS_sca_2_OUT".scaler_21, "ADS_sca_2_OUT".scaler_22, "ADS_sca_2_OUT".scaler_23, "ADS_sca_2_OUT".scaler_24, "ADS_sca_2_OUT".scaler_25, "ADS_sca_2_OUT".scaler_26, "ADS_sca_2_OUT".scaler_27, "ADS_sca_2_OUT".scaler_28, "ADS_sca_2_OUT".scaler_29, "ADS_sca_2_OUT".scaler_30, "ADS_sca_2_OUT".scaler_31, "ADS_sca_2_OUT".scaler_32, "ADS_sca_2_OUT".scaler_33, "ADS_sca_2_OUT".scaler_34, "ADS_sca_2_OUT".scaler_35, "ADS_sca_2_OUT".scaler_36, "ADS_sca_2_OUT".scaler_37, "ADS_sca_2_OUT".scaler_38, "ADS_sca_2_OUT".scaler_39, "ADS_sca_2_OUT".scaler_40, "ADS_sca_2_OUT".scaler_41, "ADS_sca_2_OUT".scaler_42, "ADS_sca_2_OUT".scaler_43, "ADS_sca_2_OUT".scaler_44, "ADS_sca_2_OUT".scaler_45, "ADS_sca_2_OUT".scaler_46, "ADS_sca_2_OUT".scaler_47, "ADS_sca_2_OUT".scaler_48, "ADS_sca_2_OUT".scaler_49, "ADS_sca_2_OUT".scaler_50, "ADS_sca_2_OUT".scaler_51, "ADS_sca_2_OUT".scaler_52, "ADS_sca_2_OUT".scaler_53, "ADS_sca_2_OUT".scaler_54, "ADS_sca_2_OUT".scaler_55, "ADS_sca_2_OUT".scaler_56, "ADS_sca_2_OUT".scaler_57, "ADS_sca_2_OUT".scaler_58, "ADS_sca_2_OUT".scaler_59, "ADS_sca_2_OUT".scaler_60, "ADS_sca_2_OUT".scaler_61, "ADS_sca_2_OUT".scaler_62, "ADS_sca_2_OUT".scaler_63, "ADS_sca_2_OUT".scaler_64, "ADS_sca_2_OUT".scaler_65, "ADS_sca_2_OUT".scaler_66, "ADS_sca_2_OUT".scaler_67, "ADS_sca_2_OUT".scaler_68, "ADS_sca_2_OUT".scaler_69, "ADS_sca_2_OUT".scaler_70, "ADS_sca_2_OUT".scaler_71, "ADS_sca_2_OUT".scaler_72, "ADS_sca_2_OUT".scaler_73, "ADS_sca_2_OUT".scaler_74, "ADS_sca_2_OUT".scaler_75, "ADS_sca_2_OUT".scaler_76, "ADS_sca_2_OUT".scaler_77, "ADS_sca_2_OUT".scaler_78, "ADS_sca_2_OUT".scaler_79, "ADS_sca_2_OUT".scaler_80, "ADS_sca_2_OUT".scaler_81, "ADS_sca_2_OUT".scaler_82, "ADS_sca_2_OUT".scaler_83, "ADS_sca_2_OUT".scaler_84, "ADS_sca_2_OUT".scaler_85, "ADS_sca_2_OUT".scaler_86, "ADS_sca_2_OUT".scaler_87, "ADS_sca_2_OUT".scaler_88, "ADS_sca_2_OUT".scaler_89, "ADS_sca_2_OUT".scaler_90, "ADS_sca_2_OUT".scaler_91, "ADS_sca_2_OUT".scaler_92, "ADS_sca_2_OUT".scaler_93, "ADS_sca_2_OUT".scaler_94, "ADS_sca_2_OUT".scaler_95, "ADS_sca_2_OUT".scaler_96, "ADS_sca_2_OUT".scaler_97, "ADS_sca_2_OUT".scaler_98, "ADS_sca_2_OUT".scaler_99, "ADS_sca_2_OUT".scaler_100, "ADS_sca_2_OUT".scaler_101 
FROM (SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", (CAST("ADS_imp_1_OUT".impter_2 AS DOUBLE PRECISION) - CAST(0.14903440845325 AS DOUBLE PRECISION)) / CAST(0.863660967892847 AS DOUBLE PRECISION) AS scaler_2, (CAST("ADS_imp_1_OUT".impter_3 AS DOUBLE PRECISION) - CAST(-0.033676364930323 AS DOUBLE PRECISION)) / CAST(0.957846118882389 AS DOUBLE PRECISION) AS scaler_3, (CAST("ADS_imp_1_OUT".impter_4 AS DOUBLE PRECISION) - CAST(0.119333163556108 AS DOUBLE PRECISION)) / CAST(0.988940710894537 AS DOUBLE PRECISION) AS scaler_4, (CAST("ADS_imp_1_OUT".impter_5 AS DOUBLE PRECISION) - CAST(-0.173692031301893 AS DOUBLE PRECISION)) / CAST(0.92555554243697 AS DOUBLE PRECISION) AS scaler_5, (CAST("ADS_imp_1_OUT".impter_6 AS DOUBLE PRECISION) - CAST(0.065343554921064 AS DOUBLE PRECISION)) / CAST(1.254906659052201 AS DOUBLE PRECISION) AS scaler_6, (CAST("ADS_imp_1_OUT".impter_7 AS DOUBLE PRECISION) - CAST(0.243622899376415 AS DOUBLE PRECISION)) / CAST(1.02899858974544 AS DOUBLE PRECISION) AS scaler_7, (CAST("ADS_imp_1_OUT".impter_8 AS DOUBLE PRECISION) - CAST(-0.113673579111471 AS DOUBLE PRECISION)) / CAST(0.892313689577553 AS DOUBLE PRECISION) AS scaler_8, (CAST("ADS_imp_1_OUT".impter_9 AS DOUBLE PRECISION) - CAST(-0.211764438767085 AS DOUBLE PRECISION)) / CAST(0.900298899995206 AS DOUBLE PRECISION) AS scaler_9, (CAST("ADS_imp_1_OUT".impter_10 AS DOUBLE PRECISION) - CAST(0.115139799145873 AS DOUBLE PRECISION)) / CAST(1.040793117817414 AS DOUBLE PRECISION) AS scaler_10, (CAST("ADS_imp_1_OUT".impter_11 AS DOUBLE PRECISION) - CAST(0.02911192493859 AS DOUBLE PRECISION)) / CAST(0.8191882677751 AS DOUBLE PRECISION) AS scaler_11, (CAST("ADS_imp_1_OUT".impter_12 AS DOUBLE PRECISION) - CAST(0.110771892686147 AS DOUBLE PRECISION)) / CAST(1.125034434302641 AS DOUBLE PRECISION) AS scaler_12, (CAST("ADS_imp_1_OUT".impter_13 AS DOUBLE PRECISION) - CAST(0.001458037542457 AS DOUBLE PRECISION)) / CAST(1.058175278230346 AS DOUBLE PRECISION) AS scaler_13, (CAST("ADS_imp_1_OUT".impter_14 AS DOUBLE PRECISION) - CAST(-0.077373929186723 AS DOUBLE PRECISION)) / CAST(0.941909260461873 AS DOUBLE PRECISION) AS scaler_14, (CAST("ADS_imp_1_OUT".impter_15 AS DOUBLE PRECISION) - CAST(-0.113957287588479 AS DOUBLE PRECISION)) / CAST(0.984434017257049 AS DOUBLE PRECISION) AS scaler_15, (CAST("ADS_imp_1_OUT".impter_16 AS DOUBLE PRECISION) - CAST(-0.125676312850434 AS DOUBLE PRECISION)) / CAST(1.069696065987588 AS DOUBLE PRECISION) AS scaler_16, (CAST("ADS_imp_1_OUT".impter_17 AS DOUBLE PRECISION) - CAST(-0.057995978339857 AS DOUBLE PRECISION)) / CAST(0.957224686976594 AS DOUBLE PRECISION) AS scaler_17, (CAST("ADS_imp_1_OUT".impter_18 AS DOUBLE PRECISION) - CAST(-0.14181264174476 AS DOUBLE PRECISION)) / CAST(0.940278231802043 AS DOUBLE PRECISION) AS scaler_18, (CAST("ADS_imp_1_OUT".impter_19 AS DOUBLE PRECISION) - CAST(-0.126545428690476 AS DOUBLE PRECISION)) / CAST(1.039407577462294 AS DOUBLE PRECISION) AS scaler_19, (CAST("ADS_imp_1_OUT".impter_20 AS DOUBLE PRECISION) - CAST(-0.078122486835184 AS DOUBLE PRECISION)) / CAST(1.322376023064411 AS DOUBLE PRECISION) AS scaler_20, (CAST("ADS_imp_1_OUT".impter_21 AS DOUBLE PRECISION) - CAST(-0.076487376830225 AS DOUBLE PRECISION)) / CAST(0.948894937924858 AS DOUBLE PRECISION) AS scaler_21, (CAST("ADS_imp_1_OUT".impter_22 AS DOUBLE PRECISION) - CAST(0.058642624278695 AS DOUBLE PRECISION)) / CAST(0.95385814266449 AS DOUBLE PRECISION) AS scaler_22, (CAST("ADS_imp_1_OUT".impter_23 AS DOUBLE PRECISION) - CAST(0.108440370745529 AS DOUBLE PRECISION)) / CAST(1.210930082570065 AS DOUBLE PRECISION) AS scaler_23, (CAST("ADS_imp_1_OUT".impter_24 AS DOUBLE PRECISION) - CAST(0.060065969333442 AS DOUBLE PRECISION)) / CAST(0.91915021565078 AS DOUBLE PRECISION) AS scaler_24, (CAST("ADS_imp_1_OUT".impter_25 AS DOUBLE PRECISION) - CAST(0.15255771271935 AS DOUBLE PRECISION)) / CAST(0.929957615475464 AS DOUBLE PRECISION) AS scaler_25, (CAST("ADS_imp_1_OUT".impter_26 AS DOUBLE PRECISION) - CAST(-0.047123256877991 AS DOUBLE PRECISION)) / CAST(0.772185544077356 AS DOUBLE PRECISION) AS scaler_26, (CAST("ADS_imp_1_OUT".impter_27 AS DOUBLE PRECISION) - CAST(-0.056962969140892 AS DOUBLE PRECISION)) / CAST(0.865508439351345 AS DOUBLE PRECISION) AS scaler_27, (CAST("ADS_imp_1_OUT".impter_28 AS DOUBLE PRECISION) - CAST(0.096146840999435 AS DOUBLE PRECISION)) / CAST(0.96937898078964 AS DOUBLE PRECISION) AS scaler_28, (CAST("ADS_imp_1_OUT".impter_29 AS DOUBLE PRECISION) - CAST(0.104338334097522 AS DOUBLE PRECISION)) / CAST(1.097473150876916 AS DOUBLE PRECISION) AS scaler_29, (CAST("ADS_imp_1_OUT".impter_30 AS DOUBLE PRECISION) - CAST(0.032577161919609 AS DOUBLE PRECISION)) / CAST(0.9435063968783 AS DOUBLE PRECISION) AS scaler_30, (CAST("ADS_imp_1_OUT".impter_31 AS DOUBLE PRECISION) - CAST(0.061429057493667 AS DOUBLE PRECISION)) / CAST(1.117073273326786 AS DOUBLE PRECISION) AS scaler_31, (CAST("ADS_imp_1_OUT".impter_32 AS DOUBLE PRECISION) - CAST(-0.014540423460679 AS DOUBLE PRECISION)) / CAST(1.057316819732303 AS DOUBLE PRECISION) AS scaler_32, (CAST("ADS_imp_1_OUT".impter_33 AS DOUBLE PRECISION) - CAST(-0.112338009994188 AS DOUBLE PRECISION)) / CAST(0.978615165974966 AS DOUBLE PRECISION) AS scaler_33, (CAST("ADS_imp_1_OUT".impter_34 AS DOUBLE PRECISION) - CAST(0.118912844604914 AS DOUBLE PRECISION)) / CAST(1.006356340077283 AS DOUBLE PRECISION) AS scaler_34, (CAST("ADS_imp_1_OUT".impter_35 AS DOUBLE PRECISION) - CAST(0.228686493007804 AS DOUBLE PRECISION)) / CAST(0.998751789910217 AS DOUBLE PRECISION) AS scaler_35, (CAST("ADS_imp_1_OUT".impter_36 AS DOUBLE PRECISION) - CAST(0.235661815499219 AS DOUBLE PRECISION)) / CAST(0.889212557544874 AS DOUBLE PRECISION) AS scaler_36, (CAST("ADS_imp_1_OUT".impter_37 AS DOUBLE PRECISION) - CAST(0.073169703999644 AS DOUBLE PRECISION)) / CAST(0.847859331457988 AS DOUBLE PRECISION) AS scaler_37, (CAST("ADS_imp_1_OUT".impter_38 AS DOUBLE PRECISION) - CAST(-0.033194098274696 AS DOUBLE PRECISION)) / CAST(0.941776159175585 AS DOUBLE PRECISION) AS scaler_38, (CAST("ADS_imp_1_OUT".impter_39 AS DOUBLE PRECISION) - CAST(0.273493877417745 AS DOUBLE PRECISION)) / CAST(0.884271094109858 AS DOUBLE PRECISION) AS scaler_39, (CAST("ADS_imp_1_OUT".impter_40 AS DOUBLE PRECISION) - CAST(-0.023289567742236 AS DOUBLE PRECISION)) / CAST(0.994764574925203 AS DOUBLE PRECISION) AS scaler_40, (CAST("ADS_imp_1_OUT".impter_41 AS DOUBLE PRECISION) - CAST(0.030288379260646 AS DOUBLE PRECISION)) / CAST(1.038539402148216 AS DOUBLE PRECISION) AS scaler_41, (CAST("ADS_imp_1_OUT".impter_42 AS DOUBLE PRECISION) - CAST(-0.107368262331359 AS DOUBLE PRECISION)) / CAST(0.983011795114688 AS DOUBLE PRECISION) AS scaler_42, (CAST("ADS_imp_1_OUT".impter_43 AS DOUBLE PRECISION) - CAST(0.026402950097888 AS DOUBLE PRECISION)) / CAST(1.03982875397101 AS DOUBLE PRECISION) AS scaler_43, (CAST("ADS_imp_1_OUT".impter_44 AS DOUBLE PRECISION) - CAST(-0.096771466549115 AS DOUBLE PRECISION)) / CAST(1.001522556409823 AS DOUBLE PRECISION) AS scaler_44, (CAST("ADS_imp_1_OUT".impter_45 AS DOUBLE PRECISION) - CAST(0.00597424834297 AS DOUBLE PRECISION)) / CAST(0.919224835728663 AS DOUBLE PRECISION) AS scaler_45, (CAST("ADS_imp_1_OUT".impter_46 AS DOUBLE PRECISION) - CAST(0.036917268127071 AS DOUBLE PRECISION)) / CAST(1.069754938973098 AS DOUBLE PRECISION) AS scaler_46, (CAST("ADS_imp_1_OUT".impter_47 AS DOUBLE PRECISION) - CAST(-0.145257173823741 AS DOUBLE PRECISION)) / CAST(1.002214302304833 AS DOUBLE PRECISION) AS scaler_47, (CAST("ADS_imp_1_OUT".impter_48 AS DOUBLE PRECISION) - CAST(-0.166752698811778 AS DOUBLE PRECISION)) / CAST(1.026497617355572 AS DOUBLE PRECISION) AS scaler_48, (CAST("ADS_imp_1_OUT".impter_49 AS DOUBLE PRECISION) - CAST(0.250844656956527 AS DOUBLE PRECISION)) / CAST(1.017635129553183 AS DOUBLE PRECISION) AS scaler_49, (CAST("ADS_imp_1_OUT".impter_50 AS DOUBLE PRECISION) - CAST(0.146233983222576 AS DOUBLE PRECISION)) / CAST(0.949901088245471 AS DOUBLE PRECISION) AS scaler_50, (CAST("ADS_imp_1_OUT".impter_51 AS DOUBLE PRECISION) - CAST(0.101854311334061 AS DOUBLE PRECISION)) / CAST(1.083491302324885 AS DOUBLE PRECISION) AS scaler_51, (CAST("ADS_imp_1_OUT".impter_52 AS DOUBLE PRECISION) - CAST(-0.132925609450858 AS DOUBLE PRECISION)) / CAST(1.203043012940759 AS DOUBLE PRECISION) AS scaler_52, (CAST("ADS_imp_1_OUT".impter_53 AS DOUBLE PRECISION) - CAST(-0.04219179136544 AS DOUBLE PRECISION)) / CAST(1.089071848195465 AS DOUBLE PRECISION) AS scaler_53, (CAST("ADS_imp_1_OUT".impter_54 AS DOUBLE PRECISION) - CAST(0.152140284046819 AS DOUBLE PRECISION)) / CAST(1.035592816265623 AS DOUBLE PRECISION) AS scaler_54, (CAST("ADS_imp_1_OUT".impter_55 AS DOUBLE PRECISION) - CAST(-0.15821372314298 AS DOUBLE PRECISION)) / CAST(0.813084857358626 AS DOUBLE PRECISION) AS scaler_55, (CAST("ADS_imp_1_OUT".impter_56 AS DOUBLE PRECISION) - CAST(0.179262605357761 AS DOUBLE PRECISION)) / CAST(1.070467146333524 AS DOUBLE PRECISION) AS scaler_56, (CAST("ADS_imp_1_OUT".impter_57 AS DOUBLE PRECISION) - CAST(0.050775332104377 AS DOUBLE PRECISION)) / CAST(1.005256494121725 AS DOUBLE PRECISION) AS scaler_57, (CAST("ADS_imp_1_OUT".impter_58 AS DOUBLE PRECISION) - CAST(-0.011884551362322 AS DOUBLE PRECISION)) / CAST(0.969141309786655 AS DOUBLE PRECISION) AS scaler_58, (CAST("ADS_imp_1_OUT".impter_59 AS DOUBLE PRECISION) - CAST(-0.049487450691411 AS DOUBLE PRECISION)) / CAST(1.260976826993756 AS DOUBLE PRECISION) AS scaler_59, (CAST("ADS_imp_1_OUT".impter_60 AS DOUBLE PRECISION) - CAST(-0.132567335524829 AS DOUBLE PRECISION)) / CAST(0.868625102233044 AS DOUBLE PRECISION) AS scaler_60, (CAST("ADS_imp_1_OUT".impter_61 AS DOUBLE PRECISION) - CAST(0.118662382025135 AS DOUBLE PRECISION)) / CAST(1.063165484959242 AS DOUBLE PRECISION) AS scaler_61, (CAST("ADS_imp_1_OUT".impter_62 AS DOUBLE PRECISION) - CAST(-0.06590828520229 AS DOUBLE PRECISION)) / CAST(1.04187279082961 AS DOUBLE PRECISION) AS scaler_62, (CAST("ADS_imp_1_OUT".impter_63 AS DOUBLE PRECISION) - CAST(0.155485733886905 AS DOUBLE PRECISION)) / CAST(0.894651979404286 AS DOUBLE PRECISION) AS scaler_63, (CAST("ADS_imp_1_OUT".impter_64 AS DOUBLE PRECISION) - CAST(-0.006608301490984 AS DOUBLE PRECISION)) / CAST(0.916615314171647 AS DOUBLE PRECISION) AS scaler_64, (CAST("ADS_imp_1_OUT".impter_65 AS DOUBLE PRECISION) - CAST(-0.018275801484938 AS DOUBLE PRECISION)) / CAST(1.037281466599587 AS DOUBLE PRECISION) AS scaler_65, (CAST("ADS_imp_1_OUT".impter_66 AS DOUBLE PRECISION) - CAST(-0.027366317428669 AS DOUBLE PRECISION)) / CAST(0.887668072204422 AS DOUBLE PRECISION) AS scaler_66, (CAST("ADS_imp_1_OUT".impter_67 AS DOUBLE PRECISION) - CAST(0.01436625003669 AS DOUBLE PRECISION)) / CAST(0.918497664594974 AS DOUBLE PRECISION) AS scaler_67, (CAST("ADS_imp_1_OUT".impter_68 AS DOUBLE PRECISION) - CAST(0.054075300089558 AS DOUBLE PRECISION)) / CAST(0.929588489370402 AS DOUBLE PRECISION) AS scaler_68, (CAST("ADS_imp_1_OUT".impter_69 AS DOUBLE PRECISION) - CAST(-0.230852733839235 AS DOUBLE PRECISION)) / CAST(0.944088767881375 AS DOUBLE PRECISION) AS scaler_69, (CAST("ADS_imp_1_OUT".impter_70 AS DOUBLE PRECISION) - CAST(-0.243965288083751 AS DOUBLE PRECISION)) / CAST(1.04592379692413 AS DOUBLE PRECISION) AS scaler_70, (CAST("ADS_imp_1_OUT".impter_71 AS DOUBLE PRECISION) - CAST(0.065450657876596 AS DOUBLE PRECISION)) / CAST(0.896770163984976 AS DOUBLE PRECISION) AS scaler_71, (CAST("ADS_imp_1_OUT".impter_72 AS DOUBLE PRECISION) - CAST(0.042665183020231 AS DOUBLE PRECISION)) / CAST(0.883539188169085 AS DOUBLE PRECISION) AS scaler_72, (CAST("ADS_imp_1_OUT".impter_73 AS DOUBLE PRECISION) - CAST(-0.154045182034928 AS DOUBLE PRECISION)) / CAST(0.986979156102055 AS DOUBLE PRECISION) AS scaler_73, (CAST("ADS_imp_1_OUT".impter_74 AS DOUBLE PRECISION) - CAST(-0.222235256457245 AS DOUBLE PRECISION)) / CAST(0.953792741195696 AS DOUBLE PRECISION) AS scaler_74, (CAST("ADS_imp_1_OUT".impter_75 AS DOUBLE PRECISION) - CAST(0.068560637297267 AS DOUBLE PRECISION)) / CAST(0.953717717145669 AS DOUBLE PRECISION) AS scaler_75, (CAST("ADS_imp_1_OUT".impter_76 AS DOUBLE PRECISION) - CAST(-0.096395920853936 AS DOUBLE PRECISION)) / CAST(1.035877532027052 AS DOUBLE PRECISION) AS scaler_76, (CAST("ADS_imp_1_OUT".impter_77 AS DOUBLE PRECISION) - CAST(0.207475189275246 AS DOUBLE PRECISION)) / CAST(1.061107622225759 AS DOUBLE PRECISION) AS scaler_77, (CAST("ADS_imp_1_OUT".impter_78 AS DOUBLE PRECISION) - CAST(-0.139452563671325 AS DOUBLE PRECISION)) / CAST(1.022370053319208 AS DOUBLE PRECISION) AS scaler_78, (CAST("ADS_imp_1_OUT".impter_79 AS DOUBLE PRECISION) - CAST(0.021954208773707 AS DOUBLE PRECISION)) / CAST(0.487524475329659 AS DOUBLE PRECISION) AS scaler_79, (CAST("ADS_imp_1_OUT".impter_80 AS DOUBLE PRECISION) - CAST(0.07033517037026 AS DOUBLE PRECISION)) / CAST(0.998427876189206 AS DOUBLE PRECISION) AS scaler_80, (CAST("ADS_imp_1_OUT".impter_81 AS DOUBLE PRECISION) - CAST(0.120624721906947 AS DOUBLE PRECISION)) / CAST(1.04829143705393 AS DOUBLE PRECISION) AS scaler_81, (CAST("ADS_imp_1_OUT".impter_82 AS DOUBLE PRECISION) - CAST(-0.033765947442479 AS DOUBLE PRECISION)) / CAST(1.012039503981992 AS DOUBLE PRECISION) AS scaler_82, (CAST("ADS_imp_1_OUT".impter_83 AS DOUBLE PRECISION) - CAST(-0.110635213132838 AS DOUBLE PRECISION)) / CAST(0.848796528198155 AS DOUBLE PRECISION) AS scaler_83, (CAST("ADS_imp_1_OUT".impter_84 AS DOUBLE PRECISION) - CAST(0.04026428043669 AS DOUBLE PRECISION)) / CAST(0.92788655199788 AS DOUBLE PRECISION) AS scaler_84, (CAST("ADS_imp_1_OUT".impter_85 AS DOUBLE PRECISION) - CAST(0.047619698634704 AS DOUBLE PRECISION)) / CAST(1.017368167682884 AS DOUBLE PRECISION) AS scaler_85, (CAST("ADS_imp_1_OUT".impter_86 AS DOUBLE PRECISION) - CAST(0.10294542896565 AS DOUBLE PRECISION)) / CAST(0.936375113826835 AS DOUBLE PRECISION) AS scaler_86, (CAST("ADS_imp_1_OUT".impter_87 AS DOUBLE PRECISION) - CAST(0.03543139086541 AS DOUBLE PRECISION)) / CAST(0.976657395204482 AS DOUBLE PRECISION) AS scaler_87, (CAST("ADS_imp_1_OUT".impter_88 AS DOUBLE PRECISION) - CAST(0.158126749954148 AS DOUBLE PRECISION)) / CAST(1.00656799984153 AS DOUBLE PRECISION) AS scaler_88, (CAST("ADS_imp_1_OUT".impter_89 AS DOUBLE PRECISION) - CAST(-0.093706792025036 AS DOUBLE PRECISION)) / CAST(0.952144160923936 AS DOUBLE PRECISION) AS scaler_89, (CAST("ADS_imp_1_OUT".impter_90 AS DOUBLE PRECISION) - CAST(-0.053521741331253 AS DOUBLE PRECISION)) / CAST(1.033667987678185 AS DOUBLE PRECISION) AS scaler_90, (CAST("ADS_imp_1_OUT".impter_91 AS DOUBLE PRECISION) - CAST(-0.0567114213575 AS DOUBLE PRECISION)) / CAST(1.085110781158617 AS DOUBLE PRECISION) AS scaler_91, (CAST("ADS_imp_1_OUT".impter_92 AS DOUBLE PRECISION) - CAST(0.16835019199184 AS DOUBLE PRECISION)) / CAST(0.8286544432717 AS DOUBLE PRECISION) AS scaler_92, (CAST("ADS_imp_1_OUT".impter_93 AS DOUBLE PRECISION) - CAST(-0.080146877859594 AS DOUBLE PRECISION)) / CAST(1.070420432549587 AS DOUBLE PRECISION) AS scaler_93, (CAST("ADS_imp_1_OUT".impter_94 AS DOUBLE PRECISION) - CAST(0.067327517211286 AS DOUBLE PRECISION)) / CAST(1.174979219976032 AS DOUBLE PRECISION) AS scaler_94, (CAST("ADS_imp_1_OUT".impter_95 AS DOUBLE PRECISION) - CAST(-0.008886516817866 AS DOUBLE PRECISION)) / CAST(1.075007337715426 AS DOUBLE PRECISION) AS scaler_95, (CAST("ADS_imp_1_OUT".impter_96 AS DOUBLE PRECISION) - CAST(0.026095385517811 AS DOUBLE PRECISION)) / CAST(1.107818387820904 AS DOUBLE PRECISION) AS scaler_96, (CAST("ADS_imp_1_OUT".impter_97 AS DOUBLE PRECISION) - CAST(0.044354252009966 AS DOUBLE PRECISION)) / CAST(0.886137541119912 AS DOUBLE PRECISION) AS scaler_97, (CAST("ADS_imp_1_OUT".impter_98 AS DOUBLE PRECISION) - CAST(0.026895408070569 AS DOUBLE PRECISION)) / CAST(1.009528882392893 AS DOUBLE PRECISION) AS scaler_98, (CAST("ADS_imp_1_OUT".impter_99 AS DOUBLE PRECISION) - CAST(0.182329715390701 AS DOUBLE PRECISION)) / CAST(0.955138205623935 AS DOUBLE PRECISION) AS scaler_99, (CAST("ADS_imp_1_OUT".impter_100 AS DOUBLE PRECISION) - CAST(-0.121325403630116 AS DOUBLE PRECISION)) / CAST(0.925885755686941 AS DOUBLE PRECISION) AS scaler_100, (CAST("ADS_imp_1_OUT".impter_101 AS DOUBLE PRECISION) - CAST(0.004420132524287 AS DOUBLE PRECISION)) / CAST(0.937196598221073 AS DOUBLE PRECISION) AS scaler_101 
FROM tmp_20180602141946_cgc_ads_imp_1_out AS "ADS_imp_1_OUT") AS "ADS_sca_2_OUT") AS "U"

-- Code For temporary table tmp_20180602141946_o2e_hl_1_relu_1 part 1. Create 


CREATE GLOBAL TEMPORARY TABLE tmp_20180602141946_o2e_hl_1_relu_1  (
	"KEY" BIGINT, 
	"NEUR_1_1" DOUBLE PRECISION, 
	"NEUR_1_2" DOUBLE PRECISION, 
	"NEUR_1_3" DOUBLE PRECISION
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table tmp_20180602141946_o2e_hl_1_relu_1 part 2. Populate

INSERT INTO tmp_20180602141946_o2e_hl_1_relu_1 ("KEY", "NEUR_1_1", "NEUR_1_2", "NEUR_1_3") SELECT "U"."KEY", "U"."NEUR_1_1", "U"."NEUR_1_2", "U"."NEUR_1_3" 
FROM (WITH "IL" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CAST("ADS_sca_2_OUT".scaler_2 AS DOUBLE PRECISION) AS scaler_2, CAST("ADS_sca_2_OUT".scaler_3 AS DOUBLE PRECISION) AS scaler_3, CAST("ADS_sca_2_OUT".scaler_4 AS DOUBLE PRECISION) AS scaler_4, CAST("ADS_sca_2_OUT".scaler_5 AS DOUBLE PRECISION) AS scaler_5, CAST("ADS_sca_2_OUT".scaler_6 AS DOUBLE PRECISION) AS scaler_6, CAST("ADS_sca_2_OUT".scaler_7 AS DOUBLE PRECISION) AS scaler_7, CAST("ADS_sca_2_OUT".scaler_8 AS DOUBLE PRECISION) AS scaler_8, CAST("ADS_sca_2_OUT".scaler_9 AS DOUBLE PRECISION) AS scaler_9, CAST("ADS_sca_2_OUT".scaler_10 AS DOUBLE PRECISION) AS scaler_10, CAST("ADS_sca_2_OUT".scaler_11 AS DOUBLE PRECISION) AS scaler_11, CAST("ADS_sca_2_OUT".scaler_12 AS DOUBLE PRECISION) AS scaler_12, CAST("ADS_sca_2_OUT".scaler_13 AS DOUBLE PRECISION) AS scaler_13, CAST("ADS_sca_2_OUT".scaler_14 AS DOUBLE PRECISION) AS scaler_14, CAST("ADS_sca_2_OUT".scaler_15 AS DOUBLE PRECISION) AS scaler_15, CAST("ADS_sca_2_OUT".scaler_16 AS DOUBLE PRECISION) AS scaler_16, CAST("ADS_sca_2_OUT".scaler_17 AS DOUBLE PRECISION) AS scaler_17, CAST("ADS_sca_2_OUT".scaler_18 AS DOUBLE PRECISION) AS scaler_18, CAST("ADS_sca_2_OUT".scaler_19 AS DOUBLE PRECISION) AS scaler_19, CAST("ADS_sca_2_OUT".scaler_20 AS DOUBLE PRECISION) AS scaler_20, CAST("ADS_sca_2_OUT".scaler_21 AS DOUBLE PRECISION) AS scaler_21, CAST("ADS_sca_2_OUT".scaler_22 AS DOUBLE PRECISION) AS scaler_22, CAST("ADS_sca_2_OUT".scaler_23 AS DOUBLE PRECISION) AS scaler_23, CAST("ADS_sca_2_OUT".scaler_24 AS DOUBLE PRECISION) AS scaler_24, CAST("ADS_sca_2_OUT".scaler_25 AS DOUBLE PRECISION) AS scaler_25, CAST("ADS_sca_2_OUT".scaler_26 AS DOUBLE PRECISION) AS scaler_26, CAST("ADS_sca_2_OUT".scaler_27 AS DOUBLE PRECISION) AS scaler_27, CAST("ADS_sca_2_OUT".scaler_28 AS DOUBLE PRECISION) AS scaler_28, CAST("ADS_sca_2_OUT".scaler_29 AS DOUBLE PRECISION) AS scaler_29, CAST("ADS_sca_2_OUT".scaler_30 AS DOUBLE PRECISION) AS scaler_30, CAST("ADS_sca_2_OUT".scaler_31 AS DOUBLE PRECISION) AS scaler_31, CAST("ADS_sca_2_OUT".scaler_32 AS DOUBLE PRECISION) AS scaler_32, CAST("ADS_sca_2_OUT".scaler_33 AS DOUBLE PRECISION) AS scaler_33, CAST("ADS_sca_2_OUT".scaler_34 AS DOUBLE PRECISION) AS scaler_34, CAST("ADS_sca_2_OUT".scaler_35 AS DOUBLE PRECISION) AS scaler_35, CAST("ADS_sca_2_OUT".scaler_36 AS DOUBLE PRECISION) AS scaler_36, CAST("ADS_sca_2_OUT".scaler_37 AS DOUBLE PRECISION) AS scaler_37, CAST("ADS_sca_2_OUT".scaler_38 AS DOUBLE PRECISION) AS scaler_38, CAST("ADS_sca_2_OUT".scaler_39 AS DOUBLE PRECISION) AS scaler_39, CAST("ADS_sca_2_OUT".scaler_40 AS DOUBLE PRECISION) AS scaler_40, CAST("ADS_sca_2_OUT".scaler_41 AS DOUBLE PRECISION) AS scaler_41, CAST("ADS_sca_2_OUT".scaler_42 AS DOUBLE PRECISION) AS scaler_42, CAST("ADS_sca_2_OUT".scaler_43 AS DOUBLE PRECISION) AS scaler_43, CAST("ADS_sca_2_OUT".scaler_44 AS DOUBLE PRECISION) AS scaler_44, CAST("ADS_sca_2_OUT".scaler_45 AS DOUBLE PRECISION) AS scaler_45, CAST("ADS_sca_2_OUT".scaler_46 AS DOUBLE PRECISION) AS scaler_46, CAST("ADS_sca_2_OUT".scaler_47 AS DOUBLE PRECISION) AS scaler_47, CAST("ADS_sca_2_OUT".scaler_48 AS DOUBLE PRECISION) AS scaler_48, CAST("ADS_sca_2_OUT".scaler_49 AS DOUBLE PRECISION) AS scaler_49, CAST("ADS_sca_2_OUT".scaler_50 AS DOUBLE PRECISION) AS scaler_50, CAST("ADS_sca_2_OUT".scaler_51 AS DOUBLE PRECISION) AS scaler_51, CAST("ADS_sca_2_OUT".scaler_52 AS DOUBLE PRECISION) AS scaler_52, CAST("ADS_sca_2_OUT".scaler_53 AS DOUBLE PRECISION) AS scaler_53, CAST("ADS_sca_2_OUT".scaler_54 AS DOUBLE PRECISION) AS scaler_54, CAST("ADS_sca_2_OUT".scaler_55 AS DOUBLE PRECISION) AS scaler_55, CAST("ADS_sca_2_OUT".scaler_56 AS DOUBLE PRECISION) AS scaler_56, CAST("ADS_sca_2_OUT".scaler_57 AS DOUBLE PRECISION) AS scaler_57, CAST("ADS_sca_2_OUT".scaler_58 AS DOUBLE PRECISION) AS scaler_58, CAST("ADS_sca_2_OUT".scaler_59 AS DOUBLE PRECISION) AS scaler_59, CAST("ADS_sca_2_OUT".scaler_60 AS DOUBLE PRECISION) AS scaler_60, CAST("ADS_sca_2_OUT".scaler_61 AS DOUBLE PRECISION) AS scaler_61, CAST("ADS_sca_2_OUT".scaler_62 AS DOUBLE PRECISION) AS scaler_62, CAST("ADS_sca_2_OUT".scaler_63 AS DOUBLE PRECISION) AS scaler_63, CAST("ADS_sca_2_OUT".scaler_64 AS DOUBLE PRECISION) AS scaler_64, CAST("ADS_sca_2_OUT".scaler_65 AS DOUBLE PRECISION) AS scaler_65, CAST("ADS_sca_2_OUT".scaler_66 AS DOUBLE PRECISION) AS scaler_66, CAST("ADS_sca_2_OUT".scaler_67 AS DOUBLE PRECISION) AS scaler_67, CAST("ADS_sca_2_OUT".scaler_68 AS DOUBLE PRECISION) AS scaler_68, CAST("ADS_sca_2_OUT".scaler_69 AS DOUBLE PRECISION) AS scaler_69, CAST("ADS_sca_2_OUT".scaler_70 AS DOUBLE PRECISION) AS scaler_70, CAST("ADS_sca_2_OUT".scaler_71 AS DOUBLE PRECISION) AS scaler_71, CAST("ADS_sca_2_OUT".scaler_72 AS DOUBLE PRECISION) AS scaler_72, CAST("ADS_sca_2_OUT".scaler_73 AS DOUBLE PRECISION) AS scaler_73, CAST("ADS_sca_2_OUT".scaler_74 AS DOUBLE PRECISION) AS scaler_74, CAST("ADS_sca_2_OUT".scaler_75 AS DOUBLE PRECISION) AS scaler_75, CAST("ADS_sca_2_OUT".scaler_76 AS DOUBLE PRECISION) AS scaler_76, CAST("ADS_sca_2_OUT".scaler_77 AS DOUBLE PRECISION) AS scaler_77, CAST("ADS_sca_2_OUT".scaler_78 AS DOUBLE PRECISION) AS scaler_78, CAST("ADS_sca_2_OUT".scaler_79 AS DOUBLE PRECISION) AS scaler_79, CAST("ADS_sca_2_OUT".scaler_80 AS DOUBLE PRECISION) AS scaler_80, CAST("ADS_sca_2_OUT".scaler_81 AS DOUBLE PRECISION) AS scaler_81, CAST("ADS_sca_2_OUT".scaler_82 AS DOUBLE PRECISION) AS scaler_82, CAST("ADS_sca_2_OUT".scaler_83 AS DOUBLE PRECISION) AS scaler_83, CAST("ADS_sca_2_OUT".scaler_84 AS DOUBLE PRECISION) AS scaler_84, CAST("ADS_sca_2_OUT".scaler_85 AS DOUBLE PRECISION) AS scaler_85, CAST("ADS_sca_2_OUT".scaler_86 AS DOUBLE PRECISION) AS scaler_86, CAST("ADS_sca_2_OUT".scaler_87 AS DOUBLE PRECISION) AS scaler_87, CAST("ADS_sca_2_OUT".scaler_88 AS DOUBLE PRECISION) AS scaler_88, CAST("ADS_sca_2_OUT".scaler_89 AS DOUBLE PRECISION) AS scaler_89, CAST("ADS_sca_2_OUT".scaler_90 AS DOUBLE PRECISION) AS scaler_90, CAST("ADS_sca_2_OUT".scaler_91 AS DOUBLE PRECISION) AS scaler_91, CAST("ADS_sca_2_OUT".scaler_92 AS DOUBLE PRECISION) AS scaler_92, CAST("ADS_sca_2_OUT".scaler_93 AS DOUBLE PRECISION) AS scaler_93, CAST("ADS_sca_2_OUT".scaler_94 AS DOUBLE PRECISION) AS scaler_94, CAST("ADS_sca_2_OUT".scaler_95 AS DOUBLE PRECISION) AS scaler_95, CAST("ADS_sca_2_OUT".scaler_96 AS DOUBLE PRECISION) AS scaler_96, CAST("ADS_sca_2_OUT".scaler_97 AS DOUBLE PRECISION) AS scaler_97, CAST("ADS_sca_2_OUT".scaler_98 AS DOUBLE PRECISION) AS scaler_98, CAST("ADS_sca_2_OUT".scaler_99 AS DOUBLE PRECISION) AS scaler_99, CAST("ADS_sca_2_OUT".scaler_100 AS DOUBLE PRECISION) AS scaler_100, CAST("ADS_sca_2_OUT".scaler_101 AS DOUBLE PRECISION) AS scaler_101 
FROM tmp_20180602141946_cr1_ads_sca_2_out AS "ADS_sca_2_OUT"), 
"HL_BA_1" AS 
(SELECT "IL"."KEY" AS "KEY", CAST(0.357003284071401 AS DOUBLE PRECISION) * "IL".scaler_2 + CAST(-0.103759454318467 AS DOUBLE PRECISION) * "IL".scaler_3 + CAST(-0.031819805251471 AS DOUBLE PRECISION) * "IL".scaler_4 + CAST(0.058951834963935 AS DOUBLE PRECISION) * "IL".scaler_5 + CAST(-0.699288723130437 AS DOUBLE PRECISION) * "IL".scaler_6 + CAST(0.571417526102485 AS DOUBLE PRECISION) * "IL".scaler_7 + CAST(0.058814140148695 AS DOUBLE PRECISION) * "IL".scaler_8 + CAST(0.154946813391143 AS DOUBLE PRECISION) * "IL".scaler_9 + CAST(0.83861291490295 AS DOUBLE PRECISION) * "IL".scaler_10 + CAST(-0.052158336055008 AS DOUBLE PRECISION) * "IL".scaler_11 + CAST(-1.01536132604778 AS DOUBLE PRECISION) * "IL".scaler_12 + CAST(0.305335362653142 AS DOUBLE PRECISION) * "IL".scaler_13 + CAST(0.074280351971118 AS DOUBLE PRECISION) * "IL".scaler_14 + CAST(0.121473862702386 AS DOUBLE PRECISION) * "IL".scaler_15 + CAST(0.295152273210566 AS DOUBLE PRECISION) * "IL".scaler_16 + CAST(-0.696164729400779 AS DOUBLE PRECISION) * "IL".scaler_17 + CAST(0.245625025140962 AS DOUBLE PRECISION) * "IL".scaler_18 + CAST(-0.169782633283884 AS DOUBLE PRECISION) * "IL".scaler_19 + CAST(0.034632377731906 AS DOUBLE PRECISION) * "IL".scaler_20 + CAST(0.046171779259396 AS DOUBLE PRECISION) * "IL".scaler_21 + CAST(-0.308366791744474 AS DOUBLE PRECISION) * "IL".scaler_22 + CAST(0.414919804107525 AS DOUBLE PRECISION) * "IL".scaler_23 + CAST(-0.23738195139335 AS DOUBLE PRECISION) * "IL".scaler_24 + CAST(-0.29828349737569 AS DOUBLE PRECISION) * "IL".scaler_25 + CAST(0.144013719695211 AS DOUBLE PRECISION) * "IL".scaler_26 + CAST(-0.089737120380623 AS DOUBLE PRECISION) * "IL".scaler_27 + CAST(0.003595658405444 AS DOUBLE PRECISION) * "IL".scaler_28 + CAST(-0.23073564319929 AS DOUBLE PRECISION) * "IL".scaler_29 + CAST(-0.360209032105563 AS DOUBLE PRECISION) * "IL".scaler_30 + CAST(0.475971161629822 AS DOUBLE PRECISION) * "IL".scaler_31 + CAST(0.120201370853064 AS DOUBLE PRECISION) * "IL".scaler_32 + CAST(-0.181579412034071 AS DOUBLE PRECISION) * "IL".scaler_33 + CAST(0.138592332776708 AS DOUBLE PRECISION) * "IL".scaler_34 + CAST(-0.453142956153303 AS DOUBLE PRECISION) * "IL".scaler_35 + CAST(-0.332005246694315 AS DOUBLE PRECISION) * "IL".scaler_36 + CAST(0.094122783681673 AS DOUBLE PRECISION) * "IL".scaler_37 + CAST(-0.490404665499092 AS DOUBLE PRECISION) * "IL".scaler_38 + CAST(1.052587084844894 AS DOUBLE PRECISION) * "IL".scaler_39 + CAST(-0.483599836734325 AS DOUBLE PRECISION) * "IL".scaler_40 + CAST(-0.20588879552039 AS DOUBLE PRECISION) * "IL".scaler_41 + CAST(-0.071238040591151 AS DOUBLE PRECISION) * "IL".scaler_42 + CAST(-0.53387270789372 AS DOUBLE PRECISION) * "IL".scaler_43 + CAST(0.30514655313726 AS DOUBLE PRECISION) * "IL".scaler_44 + CAST(-0.009707511154488 AS DOUBLE PRECISION) * "IL".scaler_45 + CAST(-0.375648526365939 AS DOUBLE PRECISION) * "IL".scaler_46 + CAST(0.377862407582254 AS DOUBLE PRECISION) * "IL".scaler_47 + CAST(0.503466980213623 AS DOUBLE PRECISION) * "IL".scaler_48 + CAST(0.269336727034845 AS DOUBLE PRECISION) * "IL".scaler_49 + CAST(-0.269019333533218 AS DOUBLE PRECISION) * "IL".scaler_50 + CAST(-0.222260888206935 AS DOUBLE PRECISION) * "IL".scaler_51 + CAST(-0.351471018433771 AS DOUBLE PRECISION) * "IL".scaler_52 + CAST(0.33099255867056 AS DOUBLE PRECISION) * "IL".scaler_53 + CAST(-0.235680716274009 AS DOUBLE PRECISION) * "IL".scaler_54 + CAST(-0.390817549304016 AS DOUBLE PRECISION) * "IL".scaler_55 + CAST(0.14406060209233 AS DOUBLE PRECISION) * "IL".scaler_56 + CAST(-0.264316657725187 AS DOUBLE PRECISION) * "IL".scaler_57 + CAST(0.234835791946634 AS DOUBLE PRECISION) * "IL".scaler_58 + CAST(0.588461060148098 AS DOUBLE PRECISION) * "IL".scaler_59 + CAST(-0.17172921646054 AS DOUBLE PRECISION) * "IL".scaler_60 + CAST(0.06865982649313 AS DOUBLE PRECISION) * "IL".scaler_61 + CAST(-0.163549142242112 AS DOUBLE PRECISION) * "IL".scaler_62 + CAST(-0.037216110586879 AS DOUBLE PRECISION) * "IL".scaler_63 + CAST(0.50078401892721 AS DOUBLE PRECISION) * "IL".scaler_64 + CAST(0.615924459735601 AS DOUBLE PRECISION) * "IL".scaler_65 + CAST(0.135573702129932 AS DOUBLE PRECISION) * "IL".scaler_66 + CAST(-0.164871869488507 AS DOUBLE PRECISION) * "IL".scaler_67 + CAST(-0.557609240159923 AS DOUBLE PRECISION) * "IL".scaler_68 + CAST(-0.199312766484753 AS DOUBLE PRECISION) * "IL".scaler_69 + CAST(-0.525099003022901 AS DOUBLE PRECISION) * "IL".scaler_70 + CAST(-0.186578589694067 AS DOUBLE PRECISION) * "IL".scaler_71 + CAST(-0.295016113297654 AS DOUBLE PRECISION) * "IL".scaler_72 + CAST(-0.660275816164355 AS DOUBLE PRECISION) * "IL".scaler_73 + CAST(0.025744091227942 AS DOUBLE PRECISION) * "IL".scaler_74 + CAST(-0.211380415861819 AS DOUBLE PRECISION) * "IL".scaler_75 + CAST(0.20228971863354 AS DOUBLE PRECISION) * "IL".scaler_76 + CAST(0.432901042124684 AS DOUBLE PRECISION) * "IL".scaler_77 + CAST(0.323842732776393 AS DOUBLE PRECISION) * "IL".scaler_78 + CAST(-1.00603480276961 AS DOUBLE PRECISION) * "IL".scaler_79 + CAST(0.116207085647927 AS DOUBLE PRECISION) * "IL".scaler_80 + CAST(0.058006276476599 AS DOUBLE PRECISION) * "IL".scaler_81 + CAST(-0.202638574937044 AS DOUBLE PRECISION) * "IL".scaler_82 + CAST(-0.507060412847935 AS DOUBLE PRECISION) * "IL".scaler_83 + CAST(0.042930570891396 AS DOUBLE PRECISION) * "IL".scaler_84 + CAST(0.206723372044626 AS DOUBLE PRECISION) * "IL".scaler_85 + CAST(0.321653271140547 AS DOUBLE PRECISION) * "IL".scaler_86 + CAST(-0.314715830128281 AS DOUBLE PRECISION) * "IL".scaler_87 + CAST(-0.473125876538516 AS DOUBLE PRECISION) * "IL".scaler_88 + CAST(0.03794493401137 AS DOUBLE PRECISION) * "IL".scaler_89 + CAST(0.786943732691666 AS DOUBLE PRECISION) * "IL".scaler_90 + CAST(-0.336680591516454 AS DOUBLE PRECISION) * "IL".scaler_91 + CAST(-0.574456387646434 AS DOUBLE PRECISION) * "IL".scaler_92 + CAST(-0.496858779680515 AS DOUBLE PRECISION) * "IL".scaler_93 + CAST(0.508206328202759 AS DOUBLE PRECISION) * "IL".scaler_94 + CAST(-0.239699504111374 AS DOUBLE PRECISION) * "IL".scaler_95 + CAST(-0.093514024695483 AS DOUBLE PRECISION) * "IL".scaler_96 + CAST(-0.070848856098696 AS DOUBLE PRECISION) * "IL".scaler_97 + CAST(-0.310071070334206 AS DOUBLE PRECISION) * "IL".scaler_98 + CAST(-0.151134993867898 AS DOUBLE PRECISION) * "IL".scaler_99 + CAST(0.304271454181675 AS DOUBLE PRECISION) * "IL".scaler_100 + CAST(0.54056941067457 AS DOUBLE PRECISION) * "IL".scaler_101 + CAST(-1.01499007524247 AS DOUBLE PRECISION) AS "NEUR_1_1", CAST(0.220878966192483 AS DOUBLE PRECISION) * "IL".scaler_2 + CAST(0.102345719530721 AS DOUBLE PRECISION) * "IL".scaler_3 + CAST(-0.185630268583536 AS DOUBLE PRECISION) * "IL".scaler_4 + CAST(0.212807335171877 AS DOUBLE PRECISION) * "IL".scaler_5 + CAST(-0.493193134605849 AS DOUBLE PRECISION) * "IL".scaler_6 + CAST(0.030063706212672 AS DOUBLE PRECISION) * "IL".scaler_7 + CAST(0.007553145100237 AS DOUBLE PRECISION) * "IL".scaler_8 + CAST(-0.376316517599934 AS DOUBLE PRECISION) * "IL".scaler_9 + CAST(0.37621992789864 AS DOUBLE PRECISION) * "IL".scaler_10 + CAST(-0.183384611090342 AS DOUBLE PRECISION) * "IL".scaler_11 + CAST(-0.229512433485375 AS DOUBLE PRECISION) * "IL".scaler_12 + CAST(-0.114318137838434 AS DOUBLE PRECISION) * "IL".scaler_13 + CAST(-0.193990632040884 AS DOUBLE PRECISION) * "IL".scaler_14 + CAST(0.436574491625992 AS DOUBLE PRECISION) * "IL".scaler_15 + CAST(0.217628121680904 AS DOUBLE PRECISION) * "IL".scaler_16 + CAST(-0.1209500193081 AS DOUBLE PRECISION) * "IL".scaler_17 + CAST(0.10649350433301 AS DOUBLE PRECISION) * "IL".scaler_18 + CAST(-0.104562882829784 AS DOUBLE PRECISION) * "IL".scaler_19 + CAST(-0.109306259249365 AS DOUBLE PRECISION) * "IL".scaler_20 + CAST(0.179929630993008 AS DOUBLE PRECISION) * "IL".scaler_21 + CAST(-0.021558379729115 AS DOUBLE PRECISION) * "IL".scaler_22 + CAST(-0.197692570609322 AS DOUBLE PRECISION) * "IL".scaler_23 + CAST(-0.374347479795284 AS DOUBLE PRECISION) * "IL".scaler_24 + CAST(-0.193076505671693 AS DOUBLE PRECISION) * "IL".scaler_25 + CAST(-0.050355209083855 AS DOUBLE PRECISION) * "IL".scaler_26 + CAST(-0.175289717470562 AS DOUBLE PRECISION) * "IL".scaler_27 + CAST(0.014844762851986 AS DOUBLE PRECISION) * "IL".scaler_28 + CAST(0.194553475455857 AS DOUBLE PRECISION) * "IL".scaler_29 + CAST(-0.148225801823513 AS DOUBLE PRECISION) * "IL".scaler_30 + CAST(-0.331633685557752 AS DOUBLE PRECISION) * "IL".scaler_31 + CAST(-0.245424310075074 AS DOUBLE PRECISION) * "IL".scaler_32 + CAST(-0.38409167768595 AS DOUBLE PRECISION) * "IL".scaler_33 + CAST(-0.150458695068548 AS DOUBLE PRECISION) * "IL".scaler_34 + CAST(-0.175247869921503 AS DOUBLE PRECISION) * "IL".scaler_35 + CAST(-0.412294826997745 AS DOUBLE PRECISION) * "IL".scaler_36 + CAST(0.134056817489284 AS DOUBLE PRECISION) * "IL".scaler_37 + CAST(0.065327619313551 AS DOUBLE PRECISION) * "IL".scaler_38 + CAST(-0.174930966242157 AS DOUBLE PRECISION) * "IL".scaler_39 + CAST(0.121644554323775 AS DOUBLE PRECISION) * "IL".scaler_40 + CAST(0.041504604507936 AS DOUBLE PRECISION) * "IL".scaler_41 + CAST(0.273251127340334 AS DOUBLE PRECISION) * "IL".scaler_42 + CAST(0.000534293869267 AS DOUBLE PRECISION) * "IL".scaler_43 + CAST(0.154567243998102 AS DOUBLE PRECISION) * "IL".scaler_44 + CAST(-0.029225231157502 AS DOUBLE PRECISION) * "IL".scaler_45 + CAST(0.022400416008722 AS DOUBLE PRECISION) * "IL".scaler_46 + CAST(-0.183081975866256 AS DOUBLE PRECISION) * "IL".scaler_47 + CAST(0.293757925186783 AS DOUBLE PRECISION) * "IL".scaler_48 + CAST(0.088029754496019 AS DOUBLE PRECISION) * "IL".scaler_49 + CAST(-0.191501278614 AS DOUBLE PRECISION) * "IL".scaler_50 + CAST(-0.252249971608135 AS DOUBLE PRECISION) * "IL".scaler_51 + CAST(0.036327040620647 AS DOUBLE PRECISION) * "IL".scaler_52 + CAST(-0.244728913211223 AS DOUBLE PRECISION) * "IL".scaler_53 + CAST(-0.198838040504117 AS DOUBLE PRECISION) * "IL".scaler_54 + CAST(0.026523814815531 AS DOUBLE PRECISION) * "IL".scaler_55 + CAST(0.118099396074623 AS DOUBLE PRECISION) * "IL".scaler_56 + CAST(-0.149347870235959 AS DOUBLE PRECISION) * "IL".scaler_57 + CAST(0.094456373421197 AS DOUBLE PRECISION) * "IL".scaler_58 + CAST(0.667131111093648 AS DOUBLE PRECISION) * "IL".scaler_59 + CAST(0.067646446462083 AS DOUBLE PRECISION) * "IL".scaler_60 + CAST(-0.149351650953107 AS DOUBLE PRECISION) * "IL".scaler_61 + CAST(-0.455009190991409 AS DOUBLE PRECISION) * "IL".scaler_62 + CAST(0.309818947759012 AS DOUBLE PRECISION) * "IL".scaler_63 + CAST(-0.064437404733755 AS DOUBLE PRECISION) * "IL".scaler_64 + CAST(0.162401035171761 AS DOUBLE PRECISION) * "IL".scaler_65 + CAST(0.4400953141518 AS DOUBLE PRECISION) * "IL".scaler_66 + CAST(0.131594572200002 AS DOUBLE PRECISION) * "IL".scaler_67 + CAST(0.485467232667404 AS DOUBLE PRECISION) * "IL".scaler_68 + CAST(0.5411878923394 AS DOUBLE PRECISION) * "IL".scaler_69 + CAST(0.059080665381134 AS DOUBLE PRECISION) * "IL".scaler_70 + CAST(-0.255561404235082 AS DOUBLE PRECISION) * "IL".scaler_71 + CAST(-0.22097221809908 AS DOUBLE PRECISION) * "IL".scaler_72 + CAST(0.440907607951197 AS DOUBLE PRECISION) * "IL".scaler_73 + CAST(0.050123831550024 AS DOUBLE PRECISION) * "IL".scaler_74 + CAST(-0.029822926447014 AS DOUBLE PRECISION) * "IL".scaler_75 + CAST(0.031830271938826 AS DOUBLE PRECISION) * "IL".scaler_76 + CAST(0.271763939492019 AS DOUBLE PRECISION) * "IL".scaler_77 + CAST(0.111454455191537 AS DOUBLE PRECISION) * "IL".scaler_78 + CAST(-0.498687486545586 AS DOUBLE PRECISION) * "IL".scaler_79 + CAST(0.054650549871442 AS DOUBLE PRECISION) * "IL".scaler_80 + CAST(0.119071936822539 AS DOUBLE PRECISION) * "IL".scaler_81 + CAST(0.158949791933339 AS DOUBLE PRECISION) * "IL".scaler_82 + CAST(0.11219754542879 AS DOUBLE PRECISION) * "IL".scaler_83 + CAST(0.016854029199558 AS DOUBLE PRECISION) * "IL".scaler_84 + CAST(0.119909737985174 AS DOUBLE PRECISION) * "IL".scaler_85 + CAST(-0.166578880181413 AS DOUBLE PRECISION) * "IL".scaler_86 + CAST(0.035911961500287 AS DOUBLE PRECISION) * "IL".scaler_87 + CAST(-0.10486864976845 AS DOUBLE PRECISION) * "IL".scaler_88 + CAST(-0.277679838336399 AS DOUBLE PRECISION) * "IL".scaler_89 + CAST(-0.269878224523965 AS DOUBLE PRECISION) * "IL".scaler_90 + CAST(-0.109723452154889 AS DOUBLE PRECISION) * "IL".scaler_91 + CAST(-0.206665835029725 AS DOUBLE PRECISION) * "IL".scaler_92 + CAST(-0.42966877233747 AS DOUBLE PRECISION) * "IL".scaler_93 + CAST(0.464911463155985 AS DOUBLE PRECISION) * "IL".scaler_94 + CAST(0.432953438999923 AS DOUBLE PRECISION) * "IL".scaler_95 + CAST(-0.35545091634939 AS DOUBLE PRECISION) * "IL".scaler_96 + CAST(-0.054441405303188 AS DOUBLE PRECISION) * "IL".scaler_97 + CAST(0.065999972355854 AS DOUBLE PRECISION) * "IL".scaler_98 + CAST(-0.117614684412679 AS DOUBLE PRECISION) * "IL".scaler_99 + CAST(0.288526508314653 AS DOUBLE PRECISION) * "IL".scaler_100 + CAST(-0.301473491073526 AS DOUBLE PRECISION) * "IL".scaler_101 + CAST(-0.161346466776491 AS DOUBLE PRECISION) AS "NEUR_1_2", CAST(0.295394407449027 AS DOUBLE PRECISION) * "IL".scaler_2 + CAST(-0.280585573746398 AS DOUBLE PRECISION) * "IL".scaler_3 + CAST(-0.135245236293885 AS DOUBLE PRECISION) * "IL".scaler_4 + CAST(-0.161623399991539 AS DOUBLE PRECISION) * "IL".scaler_5 + CAST(-0.95540313939322 AS DOUBLE PRECISION) * "IL".scaler_6 + CAST(0.271461178759061 AS DOUBLE PRECISION) * "IL".scaler_7 + CAST(-0.154455482783004 AS DOUBLE PRECISION) * "IL".scaler_8 + CAST(-0.068628649451472 AS DOUBLE PRECISION) * "IL".scaler_9 + CAST(-0.297598783980931 AS DOUBLE PRECISION) * "IL".scaler_10 + CAST(0.504403366504544 AS DOUBLE PRECISION) * "IL".scaler_11 + CAST(0.141116026334422 AS DOUBLE PRECISION) * "IL".scaler_12 + CAST(-0.122363572864555 AS DOUBLE PRECISION) * "IL".scaler_13 + CAST(0.350525623085387 AS DOUBLE PRECISION) * "IL".scaler_14 + CAST(0.01748298557793 AS DOUBLE PRECISION) * "IL".scaler_15 + CAST(-0.269908908030403 AS DOUBLE PRECISION) * "IL".scaler_16 + CAST(-0.251528457430378 AS DOUBLE PRECISION) * "IL".scaler_17 + CAST(-0.17127909282934 AS DOUBLE PRECISION) * "IL".scaler_18 + CAST(0.087390515861701 AS DOUBLE PRECISION) * "IL".scaler_19 + CAST(-0.20737245096453 AS DOUBLE PRECISION) * "IL".scaler_20 + CAST(-0.261429430849801 AS DOUBLE PRECISION) * "IL".scaler_21 + CAST(0.05765718176671 AS DOUBLE PRECISION) * "IL".scaler_22 + CAST(-0.070307833698891 AS DOUBLE PRECISION) * "IL".scaler_23 + CAST(-0.272609178021962 AS DOUBLE PRECISION) * "IL".scaler_24 + CAST(-0.001057984843277 AS DOUBLE PRECISION) * "IL".scaler_25 + CAST(-0.174566810272395 AS DOUBLE PRECISION) * "IL".scaler_26 + CAST(0.194149271215419 AS DOUBLE PRECISION) * "IL".scaler_27 + CAST(0.058660469446785 AS DOUBLE PRECISION) * "IL".scaler_28 + CAST(0.324316015763296 AS DOUBLE PRECISION) * "IL".scaler_29 + CAST(0.041148806157851 AS DOUBLE PRECISION) * "IL".scaler_30 + CAST(-0.030353444429454 AS DOUBLE PRECISION) * "IL".scaler_31 + CAST(-0.25854100517651 AS DOUBLE PRECISION) * "IL".scaler_32 + CAST(-0.293238378137275 AS DOUBLE PRECISION) * "IL".scaler_33 + CAST(-0.005600502714169 AS DOUBLE PRECISION) * "IL".scaler_34 + CAST(-0.258390458470647 AS DOUBLE PRECISION) * "IL".scaler_35 + CAST(-0.26940549192689 AS DOUBLE PRECISION) * "IL".scaler_36 + CAST(-0.130543111332544 AS DOUBLE PRECISION) * "IL".scaler_37 + CAST(-0.16906000409587 AS DOUBLE PRECISION) * "IL".scaler_38 + CAST(0.368272116376879 AS DOUBLE PRECISION) * "IL".scaler_39 + CAST(-0.159717761729323 AS DOUBLE PRECISION) * "IL".scaler_40 + CAST(-0.350782245332873 AS DOUBLE PRECISION) * "IL".scaler_41 + CAST(0.035210417609139 AS DOUBLE PRECISION) * "IL".scaler_42 + CAST(-0.242900417344837 AS DOUBLE PRECISION) * "IL".scaler_43 + CAST(-0.432014762887797 AS DOUBLE PRECISION) * "IL".scaler_44 + CAST(0.115211179894862 AS DOUBLE PRECISION) * "IL".scaler_45 + CAST(-0.553920123209414 AS DOUBLE PRECISION) * "IL".scaler_46 + CAST(-0.475934600448257 AS DOUBLE PRECISION) * "IL".scaler_47 + CAST(0.316643839979693 AS DOUBLE PRECISION) * "IL".scaler_48 + CAST(0.084188487479441 AS DOUBLE PRECISION) * "IL".scaler_49 + CAST(-0.592655986923956 AS DOUBLE PRECISION) * "IL".scaler_50 + CAST(-0.254594132779093 AS DOUBLE PRECISION) * "IL".scaler_51 + CAST(0.393720933824104 AS DOUBLE PRECISION) * "IL".scaler_52 + CAST(0.077355193600954 AS DOUBLE PRECISION) * "IL".scaler_53 + CAST(0.144652861026031 AS DOUBLE PRECISION) * "IL".scaler_54 + CAST(0.226869811743707 AS DOUBLE PRECISION) * "IL".scaler_55 + CAST(-0.02608000744291 AS DOUBLE PRECISION) * "IL".scaler_56 + CAST(-0.185512788258389 AS DOUBLE PRECISION) * "IL".scaler_57 + CAST(0.114534644817928 AS DOUBLE PRECISION) * "IL".scaler_58 + CAST(0.876065959525232 AS DOUBLE PRECISION) * "IL".scaler_59 + CAST(-0.106649290179296 AS DOUBLE PRECISION) * "IL".scaler_60 + CAST(0.165200765728499 AS DOUBLE PRECISION) * "IL".scaler_61 + CAST(-0.4282128222309 AS DOUBLE PRECISION) * "IL".scaler_62 + CAST(0.08132893780069 AS DOUBLE PRECISION) * "IL".scaler_63 + CAST(-0.288792559706423 AS DOUBLE PRECISION) * "IL".scaler_64 + CAST(0.371757311140926 AS DOUBLE PRECISION) * "IL".scaler_65 + CAST(-0.094944760093405 AS DOUBLE PRECISION) * "IL".scaler_66 + CAST(0.179570894416697 AS DOUBLE PRECISION) * "IL".scaler_67 + CAST(-0.137324857055653 AS DOUBLE PRECISION) * "IL".scaler_68 + CAST(0.276643032643858 AS DOUBLE PRECISION) * "IL".scaler_69 + CAST(-0.301577796219294 AS DOUBLE PRECISION) * "IL".scaler_70 + CAST(0.038278272880292 AS DOUBLE PRECISION) * "IL".scaler_71 + CAST(0.017864402149703 AS DOUBLE PRECISION) * "IL".scaler_72 + CAST(-0.352840515627103 AS DOUBLE PRECISION) * "IL".scaler_73 + CAST(-0.036562770674705 AS DOUBLE PRECISION) * "IL".scaler_74 + CAST(-0.421203530178297 AS DOUBLE PRECISION) * "IL".scaler_75 + CAST(0.292158904953642 AS DOUBLE PRECISION) * "IL".scaler_76 + CAST(-0.181149266553246 AS DOUBLE PRECISION) * "IL".scaler_77 + CAST(0.505873976857873 AS DOUBLE PRECISION) * "IL".scaler_78 + CAST(-0.660589372685823 AS DOUBLE PRECISION) * "IL".scaler_79 + CAST(-0.240668468661479 AS DOUBLE PRECISION) * "IL".scaler_80 + CAST(-0.197904569883083 AS DOUBLE PRECISION) * "IL".scaler_81 + CAST(0.109184843659716 AS DOUBLE PRECISION) * "IL".scaler_82 + CAST(0.442604347079295 AS DOUBLE PRECISION) * "IL".scaler_83 + CAST(0.590987772798441 AS DOUBLE PRECISION) * "IL".scaler_84 + CAST(-0.12442491948341 AS DOUBLE PRECISION) * "IL".scaler_85 + CAST(0.063494829424613 AS DOUBLE PRECISION) * "IL".scaler_86 + CAST(-0.084558230118682 AS DOUBLE PRECISION) * "IL".scaler_87 + CAST(-0.215952668191529 AS DOUBLE PRECISION) * "IL".scaler_88 + CAST(0.197346804509492 AS DOUBLE PRECISION) * "IL".scaler_89 + CAST(0.03332165333886 AS DOUBLE PRECISION) * "IL".scaler_90 + CAST(-0.308595314920574 AS DOUBLE PRECISION) * "IL".scaler_91 + CAST(-0.268494073353663 AS DOUBLE PRECISION) * "IL".scaler_92 + CAST(-0.002336611527806 AS DOUBLE PRECISION) * "IL".scaler_93 + CAST(0.203331011397604 AS DOUBLE PRECISION) * "IL".scaler_94 + CAST(-0.523475263692002 AS DOUBLE PRECISION) * "IL".scaler_95 + CAST(-0.160547082217834 AS DOUBLE PRECISION) * "IL".scaler_96 + CAST(-0.113630242440867 AS DOUBLE PRECISION) * "IL".scaler_97 + CAST(-0.186327570510758 AS DOUBLE PRECISION) * "IL".scaler_98 + CAST(-0.069815990236885 AS DOUBLE PRECISION) * "IL".scaler_99 + CAST(0.245030921310905 AS DOUBLE PRECISION) * "IL".scaler_100 + CAST(-0.057126812446354 AS DOUBLE PRECISION) * "IL".scaler_101 + CAST(0.421841001384555 AS DOUBLE PRECISION) AS "NEUR_1_3" 
FROM "IL"), 
"HL_1_relu" AS 
(SELECT "HL_BA_1"."KEY" AS "KEY", greatest("HL_BA_1"."NEUR_1_1", CAST(0 AS DOUBLE PRECISION)) AS "NEUR_1_1", greatest("HL_BA_1"."NEUR_1_2", CAST(0 AS DOUBLE PRECISION)) AS "NEUR_1_2", greatest("HL_BA_1"."NEUR_1_3", CAST(0 AS DOUBLE PRECISION)) AS "NEUR_1_3" 
FROM "HL_BA_1")
 SELECT "HL_1_relu_1"."KEY", "HL_1_relu_1"."NEUR_1_1", "HL_1_relu_1"."NEUR_1_2", "HL_1_relu_1"."NEUR_1_3" 
FROM (SELECT "HL_1_relu"."KEY" AS "KEY", "HL_1_relu"."NEUR_1_1" AS "NEUR_1_1", "HL_1_relu"."NEUR_1_2" AS "NEUR_1_2", "HL_1_relu"."NEUR_1_3" AS "NEUR_1_3" 
FROM "HL_1_relu") AS "HL_1_relu_1") AS "U"

-- Code For temporary table tmp_20180602141946_e3k_ol_logistic_1 part 1. Create 


CREATE GLOBAL TEMPORARY TABLE tmp_20180602141946_e3k_ol_logistic_1  (
	"KEY" BIGINT, 
	"NEUR_3_1" DOUBLE PRECISION
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table tmp_20180602141946_e3k_ol_logistic_1 part 2. Populate

INSERT INTO tmp_20180602141946_e3k_ol_logistic_1 ("KEY", "NEUR_3_1") SELECT "U"."KEY", "U"."NEUR_3_1" 
FROM (WITH "HL_BA_2" AS 
(SELECT "HL_1_relu_1"."KEY" AS "KEY", CAST(0.487783509348219 AS DOUBLE PRECISION) * "HL_1_relu_1"."NEUR_1_1" + CAST(0.764082017764749 AS DOUBLE PRECISION) * "HL_1_relu_1"."NEUR_1_2" + CAST(1.293586873260072 AS DOUBLE PRECISION) * "HL_1_relu_1"."NEUR_1_3" + CAST(-0.383629139146286 AS DOUBLE PRECISION) AS "NEUR_2_1", CAST(-0.209386329415816 AS DOUBLE PRECISION) * "HL_1_relu_1"."NEUR_1_1" + CAST(-0.099823674586449 AS DOUBLE PRECISION) * "HL_1_relu_1"."NEUR_1_2" + CAST(0.148903805830189 AS DOUBLE PRECISION) * "HL_1_relu_1"."NEUR_1_3" + CAST(1.943429158580875 AS DOUBLE PRECISION) AS "NEUR_2_2", CAST(-0.350164823436357 AS DOUBLE PRECISION) * "HL_1_relu_1"."NEUR_1_1" + CAST(1.348353148981151 AS DOUBLE PRECISION) * "HL_1_relu_1"."NEUR_1_2" + CAST(1.052478928808141 AS DOUBLE PRECISION) * "HL_1_relu_1"."NEUR_1_3" + CAST(-0.316999385930751 AS DOUBLE PRECISION) AS "NEUR_2_3", CAST(-1.096676191737428 AS DOUBLE PRECISION) * "HL_1_relu_1"."NEUR_1_1" + CAST(0.227164835427206 AS DOUBLE PRECISION) * "HL_1_relu_1"."NEUR_1_2" + CAST(-0.566949600468358 AS DOUBLE PRECISION) * "HL_1_relu_1"."NEUR_1_3" + CAST(0.940819253762832 AS DOUBLE PRECISION) AS "NEUR_2_4", CAST(-0.609222901336354 AS DOUBLE PRECISION) * "HL_1_relu_1"."NEUR_1_1" + CAST(-0.377591698458477 AS DOUBLE PRECISION) * "HL_1_relu_1"."NEUR_1_2" + CAST(-0.67286482544232 AS DOUBLE PRECISION) * "HL_1_relu_1"."NEUR_1_3" + CAST(-0.018078316226986 AS DOUBLE PRECISION) AS "NEUR_2_5" 
FROM tmp_20180602141946_o2e_hl_1_relu_1 AS "HL_1_relu_1"), 
"HL_2_relu" AS 
(SELECT "HL_BA_2"."KEY" AS "KEY", greatest("HL_BA_2"."NEUR_2_1", CAST(0 AS DOUBLE PRECISION)) AS "NEUR_2_1", greatest("HL_BA_2"."NEUR_2_2", CAST(0 AS DOUBLE PRECISION)) AS "NEUR_2_2", greatest("HL_BA_2"."NEUR_2_3", CAST(0 AS DOUBLE PRECISION)) AS "NEUR_2_3", greatest("HL_BA_2"."NEUR_2_4", CAST(0 AS DOUBLE PRECISION)) AS "NEUR_2_4", greatest("HL_BA_2"."NEUR_2_5", CAST(0 AS DOUBLE PRECISION)) AS "NEUR_2_5" 
FROM "HL_BA_2"), 
"OL_BA" AS 
(SELECT "HL_2_relu"."KEY" AS "KEY", CAST(1.551306757198663 AS DOUBLE PRECISION) * "HL_2_relu"."NEUR_2_1" + CAST(-1.38523809826484 AS DOUBLE PRECISION) * "HL_2_relu"."NEUR_2_2" + CAST(1.410782550589642 AS DOUBLE PRECISION) * "HL_2_relu"."NEUR_2_3" + CAST(-0.918068845509325 AS DOUBLE PRECISION) * "HL_2_relu"."NEUR_2_4" + CAST(-0.273419524905331 AS DOUBLE PRECISION) * "HL_2_relu"."NEUR_2_5" + CAST(-0.184834367118694 AS DOUBLE PRECISION) AS "NEUR_3_1" 
FROM "HL_2_relu"), 
"OL_logistic" AS 
(SELECT "OL_BA"."KEY" AS "KEY", CAST(1.0 AS DOUBLE PRECISION) / (CAST(1.0 AS DOUBLE PRECISION) + exp(least(greatest(-CAST(100.0 AS DOUBLE PRECISION), -"OL_BA"."NEUR_3_1"), CAST(100.0 AS DOUBLE PRECISION)))) AS "NEUR_3_1" 
FROM "OL_BA")
 SELECT "OL_logistic_1"."KEY", "OL_logistic_1"."NEUR_3_1" 
FROM (SELECT "OL_logistic"."KEY" AS "KEY", "OL_logistic"."NEUR_3_1" AS "NEUR_3_1" 
FROM "OL_logistic") AS "OL_logistic_1") AS "U"

-- Model deployment code

WITH orig_cte AS 
(SELECT "OL_logistic_1"."KEY" AS "KEY", CAST(NULL AS DOUBLE PRECISION) AS "Score_0", CAST(NULL AS DOUBLE PRECISION) AS "Score_1", CAST(1.0 AS DOUBLE PRECISION) - "OL_logistic_1"."NEUR_3_1" AS "Proba_0", "OL_logistic_1"."NEUR_3_1" AS "Proba_1", CAST(NULL AS DOUBLE PRECISION) AS "LogProba_0", CAST(NULL AS DOUBLE PRECISION) AS "LogProba_1", CAST(NULL AS BIGINT) AS "Decision", CAST(NULL AS DOUBLE PRECISION) AS "DecisionProba" 
FROM tmp_20180602141946_e3k_ol_logistic_1 AS "OL_logistic_1"), 
score_class_union AS 
(SELECT scu."KEY_u" AS "KEY_u", scu."class" AS "class", scu."LogProba" AS "LogProba", scu."Proba" AS "Proba", scu."Score" AS "Score" 
FROM (SELECT orig_cte."KEY" AS "KEY_u", 0 AS "class", orig_cte."LogProba_0" AS "LogProba", orig_cte."Proba_0" AS "Proba", orig_cte."Score_0" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 1 AS "class", orig_cte."LogProba_1" AS "LogProba", orig_cte."Proba_1" AS "Proba", orig_cte."Score_1" AS "Score" 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte."KEY" AS "KEY", orig_cte."Score_0" AS "Score_0", orig_cte."Score_1" AS "Score_1", orig_cte."Proba_0" AS "Proba_0", orig_cte."Proba_1" AS "Proba_1", orig_cte."LogProba_0" AS "LogProba_0", orig_cte."LogProba_1" AS "LogProba_1", orig_cte."Decision" AS "Decision", orig_cte."DecisionProba" AS "DecisionProba", max_select."KEY_m" AS "KEY_m", max_select."max_Proba" AS "max_Proba" 
FROM orig_cte LEFT OUTER JOIN (SELECT score_class_union."KEY_u" AS "KEY_m", max(score_class_union."Proba") AS "max_Proba" 
FROM score_class_union GROUP BY score_class_union."KEY_u") AS max_select ON orig_cte."KEY" = max_select."KEY_m"), 
union_with_max AS 
(SELECT score_class_union."KEY_u" AS "KEY_u", score_class_union."class" AS "class", score_class_union."LogProba" AS "LogProba", score_class_union."Proba" AS "Proba", score_class_union."Score" AS "Score", score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."Decision" AS "Decision", score_max."DecisionProba" AS "DecisionProba", score_max."KEY_m" AS "KEY_m", score_max."max_Proba" AS "max_Proba" 
FROM score_class_union LEFT OUTER JOIN score_max ON score_class_union."KEY_u" = score_max."KEY"), 
arg_max_cte AS 
(SELECT score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."Decision" AS "Decision", score_max."DecisionProba" AS "DecisionProba", score_max."KEY_m" AS "KEY_m", score_max."max_Proba" AS "max_Proba", "arg_max_t_Proba"."KEY_Proba" AS "KEY_Proba", "arg_max_t_Proba"."arg_max_Proba" AS "arg_max_Proba" 
FROM score_max LEFT OUTER JOIN (SELECT union_with_max."KEY" AS "KEY_Proba", min(union_with_max."class") AS "arg_max_Proba" 
FROM union_with_max 
WHERE union_with_max."max_Proba" <= union_with_max."Proba" GROUP BY union_with_max."KEY") AS "arg_max_t_Proba" ON score_max."KEY" = "arg_max_t_Proba"."KEY_Proba")
 SELECT arg_max_cte."KEY" AS "KEY", arg_max_cte."Score_0" AS "Score_0", arg_max_cte."Score_1" AS "Score_1", arg_max_cte."Proba_0" AS "Proba_0", arg_max_cte."Proba_1" AS "Proba_1", CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > CAST(0.0 AS DOUBLE PRECISION)) THEN ln(arg_max_cte."Proba_0") ELSE -1.79769313486231e+308 END AS "LogProba_0", CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > CAST(0.0 AS DOUBLE PRECISION)) THEN ln(arg_max_cte."Proba_1") ELSE -1.79769313486231e+308 END AS "LogProba_1", arg_max_cte."arg_max_Proba" AS "Decision", arg_max_cte."max_Proba" AS "DecisionProba" 
FROM arg_max_cte