-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2018

-- Model : MLPRegressor_Pipeline
-- Dataset : RandomReg_100
-- Database : teradata


-- This SQL code can contain one or more statements, to be executed in the order they appear in this file.



-- Code For temporary table tmp_20180508182641_codegen_9eah02_ads_imp_1_out part 1. Create 


CREATE GLOBAL TEMPORARY TABLE tmp_20180508182641_codegen_9eah02_ads_imp_1_out  (
	"KEY" BIGINT, 
	impter_2 DOUBLE PRECISION, 
	impter_3 DOUBLE PRECISION, 
	impter_4 DOUBLE PRECISION, 
	impter_5 DOUBLE PRECISION, 
	impter_6 DOUBLE PRECISION, 
	impter_7 DOUBLE PRECISION, 
	impter_8 DOUBLE PRECISION, 
	impter_9 DOUBLE PRECISION, 
	impter_10 DOUBLE PRECISION, 
	impter_11 DOUBLE PRECISION, 
	impter_12 DOUBLE PRECISION, 
	impter_13 DOUBLE PRECISION, 
	impter_14 DOUBLE PRECISION, 
	impter_15 DOUBLE PRECISION, 
	impter_16 DOUBLE PRECISION, 
	impter_17 DOUBLE PRECISION, 
	impter_18 DOUBLE PRECISION, 
	impter_19 DOUBLE PRECISION, 
	impter_20 DOUBLE PRECISION, 
	impter_21 DOUBLE PRECISION, 
	impter_22 DOUBLE PRECISION, 
	impter_23 DOUBLE PRECISION, 
	impter_24 DOUBLE PRECISION, 
	impter_25 DOUBLE PRECISION, 
	impter_26 DOUBLE PRECISION, 
	impter_27 DOUBLE PRECISION, 
	impter_28 DOUBLE PRECISION, 
	impter_29 DOUBLE PRECISION, 
	impter_30 DOUBLE PRECISION, 
	impter_31 DOUBLE PRECISION, 
	impter_32 DOUBLE PRECISION, 
	impter_33 DOUBLE PRECISION, 
	impter_34 DOUBLE PRECISION, 
	impter_35 DOUBLE PRECISION, 
	impter_36 DOUBLE PRECISION, 
	impter_37 DOUBLE PRECISION, 
	impter_38 DOUBLE PRECISION, 
	impter_39 DOUBLE PRECISION, 
	impter_40 DOUBLE PRECISION, 
	impter_41 DOUBLE PRECISION, 
	impter_42 DOUBLE PRECISION, 
	impter_43 DOUBLE PRECISION, 
	impter_44 DOUBLE PRECISION, 
	impter_45 DOUBLE PRECISION, 
	impter_46 DOUBLE PRECISION, 
	impter_47 DOUBLE PRECISION, 
	impter_48 DOUBLE PRECISION, 
	impter_49 DOUBLE PRECISION, 
	impter_50 DOUBLE PRECISION, 
	impter_51 DOUBLE PRECISION, 
	impter_52 DOUBLE PRECISION, 
	impter_53 DOUBLE PRECISION, 
	impter_54 DOUBLE PRECISION, 
	impter_55 DOUBLE PRECISION, 
	impter_56 DOUBLE PRECISION, 
	impter_57 DOUBLE PRECISION, 
	impter_58 DOUBLE PRECISION, 
	impter_59 DOUBLE PRECISION, 
	impter_60 DOUBLE PRECISION, 
	impter_61 DOUBLE PRECISION, 
	impter_62 DOUBLE PRECISION, 
	impter_63 DOUBLE PRECISION, 
	impter_64 DOUBLE PRECISION, 
	impter_65 DOUBLE PRECISION, 
	impter_66 DOUBLE PRECISION, 
	impter_67 DOUBLE PRECISION, 
	impter_68 DOUBLE PRECISION, 
	impter_69 DOUBLE PRECISION, 
	impter_70 DOUBLE PRECISION, 
	impter_71 DOUBLE PRECISION, 
	impter_72 DOUBLE PRECISION, 
	impter_73 DOUBLE PRECISION, 
	impter_74 DOUBLE PRECISION, 
	impter_75 DOUBLE PRECISION, 
	impter_76 DOUBLE PRECISION, 
	impter_77 DOUBLE PRECISION, 
	impter_78 DOUBLE PRECISION, 
	impter_79 DOUBLE PRECISION, 
	impter_80 DOUBLE PRECISION, 
	impter_81 DOUBLE PRECISION, 
	impter_82 DOUBLE PRECISION, 
	impter_83 DOUBLE PRECISION, 
	impter_84 DOUBLE PRECISION, 
	impter_85 DOUBLE PRECISION, 
	impter_86 DOUBLE PRECISION, 
	impter_87 DOUBLE PRECISION, 
	impter_88 DOUBLE PRECISION, 
	impter_89 DOUBLE PRECISION, 
	impter_90 DOUBLE PRECISION, 
	impter_91 DOUBLE PRECISION, 
	impter_92 DOUBLE PRECISION, 
	impter_93 DOUBLE PRECISION, 
	impter_94 DOUBLE PRECISION, 
	impter_95 DOUBLE PRECISION, 
	impter_96 DOUBLE PRECISION, 
	impter_97 DOUBLE PRECISION, 
	impter_98 DOUBLE PRECISION, 
	impter_99 DOUBLE PRECISION, 
	impter_100 DOUBLE PRECISION, 
	impter_101 DOUBLE PRECISION
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table tmp_20180508182641_codegen_9eah02_ads_imp_1_out part 2. Populate

INSERT INTO tmp_20180508182641_codegen_9eah02_ads_imp_1_out ("KEY", impter_2, impter_3, impter_4, impter_5, impter_6, impter_7, impter_8, impter_9, impter_10, impter_11, impter_12, impter_13, impter_14, impter_15, impter_16, impter_17, impter_18, impter_19, impter_20, impter_21, impter_22, impter_23, impter_24, impter_25, impter_26, impter_27, impter_28, impter_29, impter_30, impter_31, impter_32, impter_33, impter_34, impter_35, impter_36, impter_37, impter_38, impter_39, impter_40, impter_41, impter_42, impter_43, impter_44, impter_45, impter_46, impter_47, impter_48, impter_49, impter_50, impter_51, impter_52, impter_53, impter_54, impter_55, impter_56, impter_57, impter_58, impter_59, impter_60, impter_61, impter_62, impter_63, impter_64, impter_65, impter_66, impter_67, impter_68, impter_69, impter_70, impter_71, impter_72, impter_73, impter_74, impter_75, impter_76, impter_77, impter_78, impter_79, impter_80, impter_81, impter_82, impter_83, impter_84, impter_85, impter_86, impter_87, impter_88, impter_89, impter_90, impter_91, impter_92, impter_93, impter_94, impter_95, impter_96, impter_97, impter_98, impter_99, impter_100, impter_101) SELECT "U"."KEY", "U".impter_2, "U".impter_3, "U".impter_4, "U".impter_5, "U".impter_6, "U".impter_7, "U".impter_8, "U".impter_9, "U".impter_10, "U".impter_11, "U".impter_12, "U".impter_13, "U".impter_14, "U".impter_15, "U".impter_16, "U".impter_17, "U".impter_18, "U".impter_19, "U".impter_20, "U".impter_21, "U".impter_22, "U".impter_23, "U".impter_24, "U".impter_25, "U".impter_26, "U".impter_27, "U".impter_28, "U".impter_29, "U".impter_30, "U".impter_31, "U".impter_32, "U".impter_33, "U".impter_34, "U".impter_35, "U".impter_36, "U".impter_37, "U".impter_38, "U".impter_39, "U".impter_40, "U".impter_41, "U".impter_42, "U".impter_43, "U".impter_44, "U".impter_45, "U".impter_46, "U".impter_47, "U".impter_48, "U".impter_49, "U".impter_50, "U".impter_51, "U".impter_52, "U".impter_53, "U".impter_54, "U".impter_55, "U".impter_56, "U".impter_57, "U".impter_58, "U".impter_59, "U".impter_60, "U".impter_61, "U".impter_62, "U".impter_63, "U".impter_64, "U".impter_65, "U".impter_66, "U".impter_67, "U".impter_68, "U".impter_69, "U".impter_70, "U".impter_71, "U".impter_72, "U".impter_73, "U".impter_74, "U".impter_75, "U".impter_76, "U".impter_77, "U".impter_78, "U".impter_79, "U".impter_80, "U".impter_81, "U".impter_82, "U".impter_83, "U".impter_84, "U".impter_85, "U".impter_86, "U".impter_87, "U".impter_88, "U".impter_89, "U".impter_90, "U".impter_91, "U".impter_92, "U".impter_93, "U".impter_94, "U".impter_95, "U".impter_96, "U".impter_97, "U".impter_98, "U".impter_99, "U".impter_100, "U".impter_101 
FROM (SELECT "ADS_imp_1_OUT"."KEY", "ADS_imp_1_OUT".impter_2, "ADS_imp_1_OUT".impter_3, "ADS_imp_1_OUT".impter_4, "ADS_imp_1_OUT".impter_5, "ADS_imp_1_OUT".impter_6, "ADS_imp_1_OUT".impter_7, "ADS_imp_1_OUT".impter_8, "ADS_imp_1_OUT".impter_9, "ADS_imp_1_OUT".impter_10, "ADS_imp_1_OUT".impter_11, "ADS_imp_1_OUT".impter_12, "ADS_imp_1_OUT".impter_13, "ADS_imp_1_OUT".impter_14, "ADS_imp_1_OUT".impter_15, "ADS_imp_1_OUT".impter_16, "ADS_imp_1_OUT".impter_17, "ADS_imp_1_OUT".impter_18, "ADS_imp_1_OUT".impter_19, "ADS_imp_1_OUT".impter_20, "ADS_imp_1_OUT".impter_21, "ADS_imp_1_OUT".impter_22, "ADS_imp_1_OUT".impter_23, "ADS_imp_1_OUT".impter_24, "ADS_imp_1_OUT".impter_25, "ADS_imp_1_OUT".impter_26, "ADS_imp_1_OUT".impter_27, "ADS_imp_1_OUT".impter_28, "ADS_imp_1_OUT".impter_29, "ADS_imp_1_OUT".impter_30, "ADS_imp_1_OUT".impter_31, "ADS_imp_1_OUT".impter_32, "ADS_imp_1_OUT".impter_33, "ADS_imp_1_OUT".impter_34, "ADS_imp_1_OUT".impter_35, "ADS_imp_1_OUT".impter_36, "ADS_imp_1_OUT".impter_37, "ADS_imp_1_OUT".impter_38, "ADS_imp_1_OUT".impter_39, "ADS_imp_1_OUT".impter_40, "ADS_imp_1_OUT".impter_41, "ADS_imp_1_OUT".impter_42, "ADS_imp_1_OUT".impter_43, "ADS_imp_1_OUT".impter_44, "ADS_imp_1_OUT".impter_45, "ADS_imp_1_OUT".impter_46, "ADS_imp_1_OUT".impter_47, "ADS_imp_1_OUT".impter_48, "ADS_imp_1_OUT".impter_49, "ADS_imp_1_OUT".impter_50, "ADS_imp_1_OUT".impter_51, "ADS_imp_1_OUT".impter_52, "ADS_imp_1_OUT".impter_53, "ADS_imp_1_OUT".impter_54, "ADS_imp_1_OUT".impter_55, "ADS_imp_1_OUT".impter_56, "ADS_imp_1_OUT".impter_57, "ADS_imp_1_OUT".impter_58, "ADS_imp_1_OUT".impter_59, "ADS_imp_1_OUT".impter_60, "ADS_imp_1_OUT".impter_61, "ADS_imp_1_OUT".impter_62, "ADS_imp_1_OUT".impter_63, "ADS_imp_1_OUT".impter_64, "ADS_imp_1_OUT".impter_65, "ADS_imp_1_OUT".impter_66, "ADS_imp_1_OUT".impter_67, "ADS_imp_1_OUT".impter_68, "ADS_imp_1_OUT".impter_69, "ADS_imp_1_OUT".impter_70, "ADS_imp_1_OUT".impter_71, "ADS_imp_1_OUT".impter_72, "ADS_imp_1_OUT".impter_73, "ADS_imp_1_OUT".impter_74, "ADS_imp_1_OUT".impter_75, "ADS_imp_1_OUT".impter_76, "ADS_imp_1_OUT".impter_77, "ADS_imp_1_OUT".impter_78, "ADS_imp_1_OUT".impter_79, "ADS_imp_1_OUT".impter_80, "ADS_imp_1_OUT".impter_81, "ADS_imp_1_OUT".impter_82, "ADS_imp_1_OUT".impter_83, "ADS_imp_1_OUT".impter_84, "ADS_imp_1_OUT".impter_85, "ADS_imp_1_OUT".impter_86, "ADS_imp_1_OUT".impter_87, "ADS_imp_1_OUT".impter_88, "ADS_imp_1_OUT".impter_89, "ADS_imp_1_OUT".impter_90, "ADS_imp_1_OUT".impter_91, "ADS_imp_1_OUT".impter_92, "ADS_imp_1_OUT".impter_93, "ADS_imp_1_OUT".impter_94, "ADS_imp_1_OUT".impter_95, "ADS_imp_1_OUT".impter_96, "ADS_imp_1_OUT".impter_97, "ADS_imp_1_OUT".impter_98, "ADS_imp_1_OUT".impter_99, "ADS_imp_1_OUT".impter_100, "ADS_imp_1_OUT".impter_101 
FROM (SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" IS NULL) THEN -0.08128085300192169 ELSE "ADS"."Feature_0" END AS impter_2, CASE WHEN ("ADS"."Feature_1" IS NULL) THEN -0.13436805172534722 ELSE "ADS"."Feature_1" END AS impter_3, CASE WHEN ("ADS"."Feature_2" IS NULL) THEN -0.1171335439265335 ELSE "ADS"."Feature_2" END AS impter_4, CASE WHEN ("ADS"."Feature_3" IS NULL) THEN 0.10314525691526008 ELSE "ADS"."Feature_3" END AS impter_5, CASE WHEN ("ADS"."Feature_4" IS NULL) THEN 0.04859877061601238 ELSE "ADS"."Feature_4" END AS impter_6, CASE WHEN ("ADS"."Feature_5" IS NULL) THEN 0.09985694677353979 ELSE "ADS"."Feature_5" END AS impter_7, CASE WHEN ("ADS"."Feature_6" IS NULL) THEN 0.0672774556565916 ELSE "ADS"."Feature_6" END AS impter_8, CASE WHEN ("ADS"."Feature_7" IS NULL) THEN 0.1622384092846963 ELSE "ADS"."Feature_7" END AS impter_9, CASE WHEN ("ADS"."Feature_8" IS NULL) THEN 0.04069362852608218 ELSE "ADS"."Feature_8" END AS impter_10, CASE WHEN ("ADS"."Feature_9" IS NULL) THEN 0.051659905088603277 ELSE "ADS"."Feature_9" END AS impter_11, CASE WHEN ("ADS"."Feature_10" IS NULL) THEN 0.10179067839269526 ELSE "ADS"."Feature_10" END AS impter_12, CASE WHEN ("ADS"."Feature_11" IS NULL) THEN -0.1759747362698276 ELSE "ADS"."Feature_11" END AS impter_13, CASE WHEN ("ADS"."Feature_12" IS NULL) THEN -0.09675138494095058 ELSE "ADS"."Feature_12" END AS impter_14, CASE WHEN ("ADS"."Feature_13" IS NULL) THEN -0.04608656912634662 ELSE "ADS"."Feature_13" END AS impter_15, CASE WHEN ("ADS"."Feature_14" IS NULL) THEN 0.10165852286085655 ELSE "ADS"."Feature_14" END AS impter_16, CASE WHEN ("ADS"."Feature_15" IS NULL) THEN 0.11179903010835046 ELSE "ADS"."Feature_15" END AS impter_17, CASE WHEN ("ADS"."Feature_16" IS NULL) THEN -0.006110233359380335 ELSE "ADS"."Feature_16" END AS impter_18, CASE WHEN ("ADS"."Feature_17" IS NULL) THEN 0.07144704068910084 ELSE "ADS"."Feature_17" END AS impter_19, CASE WHEN ("ADS"."Feature_18" IS NULL) THEN -0.08808458650118434 ELSE "ADS"."Feature_18" END AS impter_20, CASE WHEN ("ADS"."Feature_19" IS NULL) THEN -0.07182799000884085 ELSE "ADS"."Feature_19" END AS impter_21, CASE WHEN ("ADS"."Feature_20" IS NULL) THEN -0.07230200847310368 ELSE "ADS"."Feature_20" END AS impter_22, CASE WHEN ("ADS"."Feature_21" IS NULL) THEN 0.02896693079944173 ELSE "ADS"."Feature_21" END AS impter_23, CASE WHEN ("ADS"."Feature_22" IS NULL) THEN 0.21388217632997558 ELSE "ADS"."Feature_22" END AS impter_24, CASE WHEN ("ADS"."Feature_23" IS NULL) THEN -0.06669297919409706 ELSE "ADS"."Feature_23" END AS impter_25, CASE WHEN ("ADS"."Feature_24" IS NULL) THEN 0.046152348549980085 ELSE "ADS"."Feature_24" END AS impter_26, CASE WHEN ("ADS"."Feature_25" IS NULL) THEN 0.03249513222766133 ELSE "ADS"."Feature_25" END AS impter_27, CASE WHEN ("ADS"."Feature_26" IS NULL) THEN 0.05224239330612866 ELSE "ADS"."Feature_26" END AS impter_28, CASE WHEN ("ADS"."Feature_27" IS NULL) THEN 0.018745871966632584 ELSE "ADS"."Feature_27" END AS impter_29, CASE WHEN ("ADS"."Feature_28" IS NULL) THEN 0.015553079229790346 ELSE "ADS"."Feature_28" END AS impter_30, CASE WHEN ("ADS"."Feature_29" IS NULL) THEN 0.2258153729902979 ELSE "ADS"."Feature_29" END AS impter_31, CASE WHEN ("ADS"."Feature_30" IS NULL) THEN -0.16989857778838335 ELSE "ADS"."Feature_30" END AS impter_32, CASE WHEN ("ADS"."Feature_31" IS NULL) THEN 0.036044309156992346 ELSE "ADS"."Feature_31" END AS impter_33, CASE WHEN ("ADS"."Feature_32" IS NULL) THEN -0.17199324162640067 ELSE "ADS"."Feature_32" END AS impter_34, CASE WHEN ("ADS"."Feature_33" IS NULL) THEN 0.13781418887864322 ELSE "ADS"."Feature_33" END AS impter_35, CASE WHEN ("ADS"."Feature_34" IS NULL) THEN -0.002438210964217244 ELSE "ADS"."Feature_34" END AS impter_36, CASE WHEN ("ADS"."Feature_35" IS NULL) THEN 0.060833749131451356 ELSE "ADS"."Feature_35" END AS impter_37, CASE WHEN ("ADS"."Feature_36" IS NULL) THEN -0.18905998689974024 ELSE "ADS"."Feature_36" END AS impter_38, CASE WHEN ("ADS"."Feature_37" IS NULL) THEN -0.09635219278465344 ELSE "ADS"."Feature_37" END AS impter_39, CASE WHEN ("ADS"."Feature_38" IS NULL) THEN -0.10160667507355636 ELSE "ADS"."Feature_38" END AS impter_40, CASE WHEN ("ADS"."Feature_39" IS NULL) THEN 0.06475250541578681 ELSE "ADS"."Feature_39" END AS impter_41, CASE WHEN ("ADS"."Feature_40" IS NULL) THEN -0.30264305036051603 ELSE "ADS"."Feature_40" END AS impter_42, CASE WHEN ("ADS"."Feature_41" IS NULL) THEN -0.13264155681878692 ELSE "ADS"."Feature_41" END AS impter_43, CASE WHEN ("ADS"."Feature_42" IS NULL) THEN -0.1334054780733323 ELSE "ADS"."Feature_42" END AS impter_44, CASE WHEN ("ADS"."Feature_43" IS NULL) THEN -0.0011436009702802522 ELSE "ADS"."Feature_43" END AS impter_45, CASE WHEN ("ADS"."Feature_44" IS NULL) THEN -0.05335157908923337 ELSE "ADS"."Feature_44" END AS impter_46, CASE WHEN ("ADS"."Feature_45" IS NULL) THEN 0.01714537002687063 ELSE "ADS"."Feature_45" END AS impter_47, CASE WHEN ("ADS"."Feature_46" IS NULL) THEN -0.059059449572612485 ELSE "ADS"."Feature_46" END AS impter_48, CASE WHEN ("ADS"."Feature_47" IS NULL) THEN -0.09528879968183994 ELSE "ADS"."Feature_47" END AS impter_49, CASE WHEN ("ADS"."Feature_48" IS NULL) THEN -0.15781363463365924 ELSE "ADS"."Feature_48" END AS impter_50, CASE WHEN ("ADS"."Feature_49" IS NULL) THEN -0.23794433392453432 ELSE "ADS"."Feature_49" END AS impter_51, CASE WHEN ("ADS"."Feature_50" IS NULL) THEN 0.13863850693032237 ELSE "ADS"."Feature_50" END AS impter_52, CASE WHEN ("ADS"."Feature_51" IS NULL) THEN -0.01699621991492915 ELSE "ADS"."Feature_51" END AS impter_53, CASE WHEN ("ADS"."Feature_52" IS NULL) THEN 0.19701490003754304 ELSE "ADS"."Feature_52" END AS impter_54, CASE WHEN ("ADS"."Feature_53" IS NULL) THEN 0.05162990473238551 ELSE "ADS"."Feature_53" END AS impter_55, CASE WHEN ("ADS"."Feature_54" IS NULL) THEN -0.13453002098662553 ELSE "ADS"."Feature_54" END AS impter_56, CASE WHEN ("ADS"."Feature_55" IS NULL) THEN 0.14789370104559646 ELSE "ADS"."Feature_55" END AS impter_57, CASE WHEN ("ADS"."Feature_56" IS NULL) THEN -0.013142759438358454 ELSE "ADS"."Feature_56" END AS impter_58, CASE WHEN ("ADS"."Feature_57" IS NULL) THEN -0.09299162994657897 ELSE "ADS"."Feature_57" END AS impter_59, CASE WHEN ("ADS"."Feature_58" IS NULL) THEN -0.24689492768975088 ELSE "ADS"."Feature_58" END AS impter_60, CASE WHEN ("ADS"."Feature_59" IS NULL) THEN 0.13499727108287438 ELSE "ADS"."Feature_59" END AS impter_61, CASE WHEN ("ADS"."Feature_60" IS NULL) THEN 0.0025544005507731047 ELSE "ADS"."Feature_60" END AS impter_62, CASE WHEN ("ADS"."Feature_61" IS NULL) THEN 0.12527368663465327 ELSE "ADS"."Feature_61" END AS impter_63, CASE WHEN ("ADS"."Feature_62" IS NULL) THEN -0.03739962296055886 ELSE "ADS"."Feature_62" END AS impter_64, CASE WHEN ("ADS"."Feature_63" IS NULL) THEN -0.02998869580177853 ELSE "ADS"."Feature_63" END AS impter_65, CASE WHEN ("ADS"."Feature_64" IS NULL) THEN -0.04286088516871345 ELSE "ADS"."Feature_64" END AS impter_66, CASE WHEN ("ADS"."Feature_65" IS NULL) THEN -0.1438347006651433 ELSE "ADS"."Feature_65" END AS impter_67, CASE WHEN ("ADS"."Feature_66" IS NULL) THEN -0.05269793910889183 ELSE "ADS"."Feature_66" END AS impter_68, CASE WHEN ("ADS"."Feature_67" IS NULL) THEN 0.029267940271277926 ELSE "ADS"."Feature_67" END AS impter_69, CASE WHEN ("ADS"."Feature_68" IS NULL) THEN 0.10431080888322372 ELSE "ADS"."Feature_68" END AS impter_70, CASE WHEN ("ADS"."Feature_69" IS NULL) THEN -0.09619687433047125 ELSE "ADS"."Feature_69" END AS impter_71, CASE WHEN ("ADS"."Feature_70" IS NULL) THEN 0.0067333192983315745 ELSE "ADS"."Feature_70" END AS impter_72, CASE WHEN ("ADS"."Feature_71" IS NULL) THEN 0.03289665935367682 ELSE "ADS"."Feature_71" END AS impter_73, CASE WHEN ("ADS"."Feature_72" IS NULL) THEN 0.08064277275460055 ELSE "ADS"."Feature_72" END AS impter_74, CASE WHEN ("ADS"."Feature_73" IS NULL) THEN -0.10603556755491854 ELSE "ADS"."Feature_73" END AS impter_75, CASE WHEN ("ADS"."Feature_74" IS NULL) THEN 0.09489100148295918 ELSE "ADS"."Feature_74" END AS impter_76, CASE WHEN ("ADS"."Feature_75" IS NULL) THEN -0.19664887110008689 ELSE "ADS"."Feature_75" END AS impter_77, CASE WHEN ("ADS"."Feature_76" IS NULL) THEN 0.11652643514949582 ELSE "ADS"."Feature_76" END AS impter_78, CASE WHEN ("ADS"."Feature_77" IS NULL) THEN 0.19340218348071325 ELSE "ADS"."Feature_77" END AS impter_79, CASE WHEN ("ADS"."Feature_78" IS NULL) THEN 0.11209709087907249 ELSE "ADS"."Feature_78" END AS impter_80, CASE WHEN ("ADS"."Feature_79" IS NULL) THEN 0.10709013621222807 ELSE "ADS"."Feature_79" END AS impter_81, CASE WHEN ("ADS"."Feature_80" IS NULL) THEN -0.01033042920922311 ELSE "ADS"."Feature_80" END AS impter_82, CASE WHEN ("ADS"."Feature_81" IS NULL) THEN 0.11026552104356717 ELSE "ADS"."Feature_81" END AS impter_83, CASE WHEN ("ADS"."Feature_82" IS NULL) THEN 0.01191634589453312 ELSE "ADS"."Feature_82" END AS impter_84, CASE WHEN ("ADS"."Feature_83" IS NULL) THEN 0.013369825695028714 ELSE "ADS"."Feature_83" END AS impter_85, CASE WHEN ("ADS"."Feature_84" IS NULL) THEN -0.1500512000702785 ELSE "ADS"."Feature_84" END AS impter_86, CASE WHEN ("ADS"."Feature_85" IS NULL) THEN -0.09022177579448487 ELSE "ADS"."Feature_85" END AS impter_87, CASE WHEN ("ADS"."Feature_86" IS NULL) THEN -0.16029625657228264 ELSE "ADS"."Feature_86" END AS impter_88, CASE WHEN ("ADS"."Feature_87" IS NULL) THEN -0.10127017293489289 ELSE "ADS"."Feature_87" END AS impter_89, CASE WHEN ("ADS"."Feature_88" IS NULL) THEN 0.3323543006292627 ELSE "ADS"."Feature_88" END AS impter_90, CASE WHEN ("ADS"."Feature_89" IS NULL) THEN 0.051731173060791114 ELSE "ADS"."Feature_89" END AS impter_91, CASE WHEN ("ADS"."Feature_90" IS NULL) THEN 0.1078879212202887 ELSE "ADS"."Feature_90" END AS impter_92, CASE WHEN ("ADS"."Feature_91" IS NULL) THEN 0.21454931874740585 ELSE "ADS"."Feature_91" END AS impter_93, CASE WHEN ("ADS"."Feature_92" IS NULL) THEN -0.16317337769942666 ELSE "ADS"."Feature_92" END AS impter_94, CASE WHEN ("ADS"."Feature_93" IS NULL) THEN -0.2242384076879583 ELSE "ADS"."Feature_93" END AS impter_95, CASE WHEN ("ADS"."Feature_94" IS NULL) THEN -0.27695847565296017 ELSE "ADS"."Feature_94" END AS impter_96, CASE WHEN ("ADS"."Feature_95" IS NULL) THEN 0.037863552135044866 ELSE "ADS"."Feature_95" END AS impter_97, CASE WHEN ("ADS"."Feature_96" IS NULL) THEN -0.02758852803141265 ELSE "ADS"."Feature_96" END AS impter_98, CASE WHEN ("ADS"."Feature_97" IS NULL) THEN 0.1052877881031243 ELSE "ADS"."Feature_97" END AS impter_99, CASE WHEN ("ADS"."Feature_98" IS NULL) THEN 0.06640703380221318 ELSE "ADS"."Feature_98" END AS impter_100, CASE WHEN ("ADS"."Feature_99" IS NULL) THEN 0.06569930995842384 ELSE "ADS"."Feature_99" END AS impter_101 
FROM "RandomReg_100" AS "ADS") AS "ADS_imp_1_OUT") AS "U"

-- Code For temporary table tmp_20180508182641_codegen_2rpw2y_ads_sca_2_out part 1. Create 


CREATE GLOBAL TEMPORARY TABLE tmp_20180508182641_codegen_2rpw2y_ads_sca_2_out  (
	"KEY" BIGINT, 
	scaler_2 DOUBLE PRECISION, 
	scaler_3 DOUBLE PRECISION, 
	scaler_4 DOUBLE PRECISION, 
	scaler_5 DOUBLE PRECISION, 
	scaler_6 DOUBLE PRECISION, 
	scaler_7 DOUBLE PRECISION, 
	scaler_8 DOUBLE PRECISION, 
	scaler_9 DOUBLE PRECISION, 
	scaler_10 DOUBLE PRECISION, 
	scaler_11 DOUBLE PRECISION, 
	scaler_12 DOUBLE PRECISION, 
	scaler_13 DOUBLE PRECISION, 
	scaler_14 DOUBLE PRECISION, 
	scaler_15 DOUBLE PRECISION, 
	scaler_16 DOUBLE PRECISION, 
	scaler_17 DOUBLE PRECISION, 
	scaler_18 DOUBLE PRECISION, 
	scaler_19 DOUBLE PRECISION, 
	scaler_20 DOUBLE PRECISION, 
	scaler_21 DOUBLE PRECISION, 
	scaler_22 DOUBLE PRECISION, 
	scaler_23 DOUBLE PRECISION, 
	scaler_24 DOUBLE PRECISION, 
	scaler_25 DOUBLE PRECISION, 
	scaler_26 DOUBLE PRECISION, 
	scaler_27 DOUBLE PRECISION, 
	scaler_28 DOUBLE PRECISION, 
	scaler_29 DOUBLE PRECISION, 
	scaler_30 DOUBLE PRECISION, 
	scaler_31 DOUBLE PRECISION, 
	scaler_32 DOUBLE PRECISION, 
	scaler_33 DOUBLE PRECISION, 
	scaler_34 DOUBLE PRECISION, 
	scaler_35 DOUBLE PRECISION, 
	scaler_36 DOUBLE PRECISION, 
	scaler_37 DOUBLE PRECISION, 
	scaler_38 DOUBLE PRECISION, 
	scaler_39 DOUBLE PRECISION, 
	scaler_40 DOUBLE PRECISION, 
	scaler_41 DOUBLE PRECISION, 
	scaler_42 DOUBLE PRECISION, 
	scaler_43 DOUBLE PRECISION, 
	scaler_44 DOUBLE PRECISION, 
	scaler_45 DOUBLE PRECISION, 
	scaler_46 DOUBLE PRECISION, 
	scaler_47 DOUBLE PRECISION, 
	scaler_48 DOUBLE PRECISION, 
	scaler_49 DOUBLE PRECISION, 
	scaler_50 DOUBLE PRECISION, 
	scaler_51 DOUBLE PRECISION, 
	scaler_52 DOUBLE PRECISION, 
	scaler_53 DOUBLE PRECISION, 
	scaler_54 DOUBLE PRECISION, 
	scaler_55 DOUBLE PRECISION, 
	scaler_56 DOUBLE PRECISION, 
	scaler_57 DOUBLE PRECISION, 
	scaler_58 DOUBLE PRECISION, 
	scaler_59 DOUBLE PRECISION, 
	scaler_60 DOUBLE PRECISION, 
	scaler_61 DOUBLE PRECISION, 
	scaler_62 DOUBLE PRECISION, 
	scaler_63 DOUBLE PRECISION, 
	scaler_64 DOUBLE PRECISION, 
	scaler_65 DOUBLE PRECISION, 
	scaler_66 DOUBLE PRECISION, 
	scaler_67 DOUBLE PRECISION, 
	scaler_68 DOUBLE PRECISION, 
	scaler_69 DOUBLE PRECISION, 
	scaler_70 DOUBLE PRECISION, 
	scaler_71 DOUBLE PRECISION, 
	scaler_72 DOUBLE PRECISION, 
	scaler_73 DOUBLE PRECISION, 
	scaler_74 DOUBLE PRECISION, 
	scaler_75 DOUBLE PRECISION, 
	scaler_76 DOUBLE PRECISION, 
	scaler_77 DOUBLE PRECISION, 
	scaler_78 DOUBLE PRECISION, 
	scaler_79 DOUBLE PRECISION, 
	scaler_80 DOUBLE PRECISION, 
	scaler_81 DOUBLE PRECISION, 
	scaler_82 DOUBLE PRECISION, 
	scaler_83 DOUBLE PRECISION, 
	scaler_84 DOUBLE PRECISION, 
	scaler_85 DOUBLE PRECISION, 
	scaler_86 DOUBLE PRECISION, 
	scaler_87 DOUBLE PRECISION, 
	scaler_88 DOUBLE PRECISION, 
	scaler_89 DOUBLE PRECISION, 
	scaler_90 DOUBLE PRECISION, 
	scaler_91 DOUBLE PRECISION, 
	scaler_92 DOUBLE PRECISION, 
	scaler_93 DOUBLE PRECISION, 
	scaler_94 DOUBLE PRECISION, 
	scaler_95 DOUBLE PRECISION, 
	scaler_96 DOUBLE PRECISION, 
	scaler_97 DOUBLE PRECISION, 
	scaler_98 DOUBLE PRECISION, 
	scaler_99 DOUBLE PRECISION, 
	scaler_100 DOUBLE PRECISION, 
	scaler_101 DOUBLE PRECISION
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table tmp_20180508182641_codegen_2rpw2y_ads_sca_2_out part 2. Populate

INSERT INTO tmp_20180508182641_codegen_2rpw2y_ads_sca_2_out ("KEY", scaler_2, scaler_3, scaler_4, scaler_5, scaler_6, scaler_7, scaler_8, scaler_9, scaler_10, scaler_11, scaler_12, scaler_13, scaler_14, scaler_15, scaler_16, scaler_17, scaler_18, scaler_19, scaler_20, scaler_21, scaler_22, scaler_23, scaler_24, scaler_25, scaler_26, scaler_27, scaler_28, scaler_29, scaler_30, scaler_31, scaler_32, scaler_33, scaler_34, scaler_35, scaler_36, scaler_37, scaler_38, scaler_39, scaler_40, scaler_41, scaler_42, scaler_43, scaler_44, scaler_45, scaler_46, scaler_47, scaler_48, scaler_49, scaler_50, scaler_51, scaler_52, scaler_53, scaler_54, scaler_55, scaler_56, scaler_57, scaler_58, scaler_59, scaler_60, scaler_61, scaler_62, scaler_63, scaler_64, scaler_65, scaler_66, scaler_67, scaler_68, scaler_69, scaler_70, scaler_71, scaler_72, scaler_73, scaler_74, scaler_75, scaler_76, scaler_77, scaler_78, scaler_79, scaler_80, scaler_81, scaler_82, scaler_83, scaler_84, scaler_85, scaler_86, scaler_87, scaler_88, scaler_89, scaler_90, scaler_91, scaler_92, scaler_93, scaler_94, scaler_95, scaler_96, scaler_97, scaler_98, scaler_99, scaler_100, scaler_101) SELECT "U"."KEY", "U".scaler_2, "U".scaler_3, "U".scaler_4, "U".scaler_5, "U".scaler_6, "U".scaler_7, "U".scaler_8, "U".scaler_9, "U".scaler_10, "U".scaler_11, "U".scaler_12, "U".scaler_13, "U".scaler_14, "U".scaler_15, "U".scaler_16, "U".scaler_17, "U".scaler_18, "U".scaler_19, "U".scaler_20, "U".scaler_21, "U".scaler_22, "U".scaler_23, "U".scaler_24, "U".scaler_25, "U".scaler_26, "U".scaler_27, "U".scaler_28, "U".scaler_29, "U".scaler_30, "U".scaler_31, "U".scaler_32, "U".scaler_33, "U".scaler_34, "U".scaler_35, "U".scaler_36, "U".scaler_37, "U".scaler_38, "U".scaler_39, "U".scaler_40, "U".scaler_41, "U".scaler_42, "U".scaler_43, "U".scaler_44, "U".scaler_45, "U".scaler_46, "U".scaler_47, "U".scaler_48, "U".scaler_49, "U".scaler_50, "U".scaler_51, "U".scaler_52, "U".scaler_53, "U".scaler_54, "U".scaler_55, "U".scaler_56, "U".scaler_57, "U".scaler_58, "U".scaler_59, "U".scaler_60, "U".scaler_61, "U".scaler_62, "U".scaler_63, "U".scaler_64, "U".scaler_65, "U".scaler_66, "U".scaler_67, "U".scaler_68, "U".scaler_69, "U".scaler_70, "U".scaler_71, "U".scaler_72, "U".scaler_73, "U".scaler_74, "U".scaler_75, "U".scaler_76, "U".scaler_77, "U".scaler_78, "U".scaler_79, "U".scaler_80, "U".scaler_81, "U".scaler_82, "U".scaler_83, "U".scaler_84, "U".scaler_85, "U".scaler_86, "U".scaler_87, "U".scaler_88, "U".scaler_89, "U".scaler_90, "U".scaler_91, "U".scaler_92, "U".scaler_93, "U".scaler_94, "U".scaler_95, "U".scaler_96, "U".scaler_97, "U".scaler_98, "U".scaler_99, "U".scaler_100, "U".scaler_101 
FROM (SELECT "ADS_sca_2_OUT"."KEY", "ADS_sca_2_OUT".scaler_2, "ADS_sca_2_OUT".scaler_3, "ADS_sca_2_OUT".scaler_4, "ADS_sca_2_OUT".scaler_5, "ADS_sca_2_OUT".scaler_6, "ADS_sca_2_OUT".scaler_7, "ADS_sca_2_OUT".scaler_8, "ADS_sca_2_OUT".scaler_9, "ADS_sca_2_OUT".scaler_10, "ADS_sca_2_OUT".scaler_11, "ADS_sca_2_OUT".scaler_12, "ADS_sca_2_OUT".scaler_13, "ADS_sca_2_OUT".scaler_14, "ADS_sca_2_OUT".scaler_15, "ADS_sca_2_OUT".scaler_16, "ADS_sca_2_OUT".scaler_17, "ADS_sca_2_OUT".scaler_18, "ADS_sca_2_OUT".scaler_19, "ADS_sca_2_OUT".scaler_20, "ADS_sca_2_OUT".scaler_21, "ADS_sca_2_OUT".scaler_22, "ADS_sca_2_OUT".scaler_23, "ADS_sca_2_OUT".scaler_24, "ADS_sca_2_OUT".scaler_25, "ADS_sca_2_OUT".scaler_26, "ADS_sca_2_OUT".scaler_27, "ADS_sca_2_OUT".scaler_28, "ADS_sca_2_OUT".scaler_29, "ADS_sca_2_OUT".scaler_30, "ADS_sca_2_OUT".scaler_31, "ADS_sca_2_OUT".scaler_32, "ADS_sca_2_OUT".scaler_33, "ADS_sca_2_OUT".scaler_34, "ADS_sca_2_OUT".scaler_35, "ADS_sca_2_OUT".scaler_36, "ADS_sca_2_OUT".scaler_37, "ADS_sca_2_OUT".scaler_38, "ADS_sca_2_OUT".scaler_39, "ADS_sca_2_OUT".scaler_40, "ADS_sca_2_OUT".scaler_41, "ADS_sca_2_OUT".scaler_42, "ADS_sca_2_OUT".scaler_43, "ADS_sca_2_OUT".scaler_44, "ADS_sca_2_OUT".scaler_45, "ADS_sca_2_OUT".scaler_46, "ADS_sca_2_OUT".scaler_47, "ADS_sca_2_OUT".scaler_48, "ADS_sca_2_OUT".scaler_49, "ADS_sca_2_OUT".scaler_50, "ADS_sca_2_OUT".scaler_51, "ADS_sca_2_OUT".scaler_52, "ADS_sca_2_OUT".scaler_53, "ADS_sca_2_OUT".scaler_54, "ADS_sca_2_OUT".scaler_55, "ADS_sca_2_OUT".scaler_56, "ADS_sca_2_OUT".scaler_57, "ADS_sca_2_OUT".scaler_58, "ADS_sca_2_OUT".scaler_59, "ADS_sca_2_OUT".scaler_60, "ADS_sca_2_OUT".scaler_61, "ADS_sca_2_OUT".scaler_62, "ADS_sca_2_OUT".scaler_63, "ADS_sca_2_OUT".scaler_64, "ADS_sca_2_OUT".scaler_65, "ADS_sca_2_OUT".scaler_66, "ADS_sca_2_OUT".scaler_67, "ADS_sca_2_OUT".scaler_68, "ADS_sca_2_OUT".scaler_69, "ADS_sca_2_OUT".scaler_70, "ADS_sca_2_OUT".scaler_71, "ADS_sca_2_OUT".scaler_72, "ADS_sca_2_OUT".scaler_73, "ADS_sca_2_OUT".scaler_74, "ADS_sca_2_OUT".scaler_75, "ADS_sca_2_OUT".scaler_76, "ADS_sca_2_OUT".scaler_77, "ADS_sca_2_OUT".scaler_78, "ADS_sca_2_OUT".scaler_79, "ADS_sca_2_OUT".scaler_80, "ADS_sca_2_OUT".scaler_81, "ADS_sca_2_OUT".scaler_82, "ADS_sca_2_OUT".scaler_83, "ADS_sca_2_OUT".scaler_84, "ADS_sca_2_OUT".scaler_85, "ADS_sca_2_OUT".scaler_86, "ADS_sca_2_OUT".scaler_87, "ADS_sca_2_OUT".scaler_88, "ADS_sca_2_OUT".scaler_89, "ADS_sca_2_OUT".scaler_90, "ADS_sca_2_OUT".scaler_91, "ADS_sca_2_OUT".scaler_92, "ADS_sca_2_OUT".scaler_93, "ADS_sca_2_OUT".scaler_94, "ADS_sca_2_OUT".scaler_95, "ADS_sca_2_OUT".scaler_96, "ADS_sca_2_OUT".scaler_97, "ADS_sca_2_OUT".scaler_98, "ADS_sca_2_OUT".scaler_99, "ADS_sca_2_OUT".scaler_100, "ADS_sca_2_OUT".scaler_101 
FROM (SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", (CAST("ADS_imp_1_OUT".impter_2 AS DOUBLE PRECISION) - CAST(-0.081280853001922 AS DOUBLE PRECISION)) / CAST(1.000040355930583 AS DOUBLE PRECISION) AS scaler_2, (CAST("ADS_imp_1_OUT".impter_3 AS DOUBLE PRECISION) - CAST(-0.134368051725347 AS DOUBLE PRECISION)) / CAST(0.88379049881845 AS DOUBLE PRECISION) AS scaler_3, (CAST("ADS_imp_1_OUT".impter_4 AS DOUBLE PRECISION) - CAST(-0.117133543926534 AS DOUBLE PRECISION)) / CAST(0.857056902289986 AS DOUBLE PRECISION) AS scaler_4, (CAST("ADS_imp_1_OUT".impter_5 AS DOUBLE PRECISION) - CAST(0.10314525691526 AS DOUBLE PRECISION)) / CAST(1.002917628353098 AS DOUBLE PRECISION) AS scaler_5, (CAST("ADS_imp_1_OUT".impter_6 AS DOUBLE PRECISION) - CAST(0.048598770616012 AS DOUBLE PRECISION)) / CAST(0.912896663253823 AS DOUBLE PRECISION) AS scaler_6, (CAST("ADS_imp_1_OUT".impter_7 AS DOUBLE PRECISION) - CAST(0.09985694677354 AS DOUBLE PRECISION)) / CAST(0.898709059445279 AS DOUBLE PRECISION) AS scaler_7, (CAST("ADS_imp_1_OUT".impter_8 AS DOUBLE PRECISION) - CAST(0.067277455656592 AS DOUBLE PRECISION)) / CAST(1.014244761151856 AS DOUBLE PRECISION) AS scaler_8, (CAST("ADS_imp_1_OUT".impter_9 AS DOUBLE PRECISION) - CAST(0.162238409284696 AS DOUBLE PRECISION)) / CAST(1.07476623075303 AS DOUBLE PRECISION) AS scaler_9, (CAST("ADS_imp_1_OUT".impter_10 AS DOUBLE PRECISION) - CAST(0.040693628526082 AS DOUBLE PRECISION)) / CAST(1.026267867232466 AS DOUBLE PRECISION) AS scaler_10, (CAST("ADS_imp_1_OUT".impter_11 AS DOUBLE PRECISION) - CAST(0.051659905088603 AS DOUBLE PRECISION)) / CAST(0.840243604374057 AS DOUBLE PRECISION) AS scaler_11, (CAST("ADS_imp_1_OUT".impter_12 AS DOUBLE PRECISION) - CAST(0.101790678392695 AS DOUBLE PRECISION)) / CAST(1.006824236393839 AS DOUBLE PRECISION) AS scaler_12, (CAST("ADS_imp_1_OUT".impter_13 AS DOUBLE PRECISION) - CAST(-0.175974736269828 AS DOUBLE PRECISION)) / CAST(0.924071076491545 AS DOUBLE PRECISION) AS scaler_13, (CAST("ADS_imp_1_OUT".impter_14 AS DOUBLE PRECISION) - CAST(-0.096751384940951 AS DOUBLE PRECISION)) / CAST(0.978379086977287 AS DOUBLE PRECISION) AS scaler_14, (CAST("ADS_imp_1_OUT".impter_15 AS DOUBLE PRECISION) - CAST(-0.046086569126347 AS DOUBLE PRECISION)) / CAST(0.978113535429249 AS DOUBLE PRECISION) AS scaler_15, (CAST("ADS_imp_1_OUT".impter_16 AS DOUBLE PRECISION) - CAST(0.101658522860857 AS DOUBLE PRECISION)) / CAST(0.901445697871173 AS DOUBLE PRECISION) AS scaler_16, (CAST("ADS_imp_1_OUT".impter_17 AS DOUBLE PRECISION) - CAST(0.11179903010835 AS DOUBLE PRECISION)) / CAST(0.977915503485674 AS DOUBLE PRECISION) AS scaler_17, (CAST("ADS_imp_1_OUT".impter_18 AS DOUBLE PRECISION) - CAST(-0.00611023335938 AS DOUBLE PRECISION)) / CAST(0.998102069762153 AS DOUBLE PRECISION) AS scaler_18, (CAST("ADS_imp_1_OUT".impter_19 AS DOUBLE PRECISION) - CAST(0.071447040689101 AS DOUBLE PRECISION)) / CAST(0.887481646517428 AS DOUBLE PRECISION) AS scaler_19, (CAST("ADS_imp_1_OUT".impter_20 AS DOUBLE PRECISION) - CAST(-0.088084586501184 AS DOUBLE PRECISION)) / CAST(0.839292570373647 AS DOUBLE PRECISION) AS scaler_20, (CAST("ADS_imp_1_OUT".impter_21 AS DOUBLE PRECISION) - CAST(-0.071827990008841 AS DOUBLE PRECISION)) / CAST(0.950741976577692 AS DOUBLE PRECISION) AS scaler_21, (CAST("ADS_imp_1_OUT".impter_22 AS DOUBLE PRECISION) - CAST(-0.072302008473104 AS DOUBLE PRECISION)) / CAST(1.066826998652098 AS DOUBLE PRECISION) AS scaler_22, (CAST("ADS_imp_1_OUT".impter_23 AS DOUBLE PRECISION) - CAST(0.028966930799442 AS DOUBLE PRECISION)) / CAST(0.990282372492378 AS DOUBLE PRECISION) AS scaler_23, (CAST("ADS_imp_1_OUT".impter_24 AS DOUBLE PRECISION) - CAST(0.213882176329976 AS DOUBLE PRECISION)) / CAST(0.862325396877822 AS DOUBLE PRECISION) AS scaler_24, (CAST("ADS_imp_1_OUT".impter_25 AS DOUBLE PRECISION) - CAST(-0.066692979194097 AS DOUBLE PRECISION)) / CAST(0.959877056408291 AS DOUBLE PRECISION) AS scaler_25, (CAST("ADS_imp_1_OUT".impter_26 AS DOUBLE PRECISION) - CAST(0.04615234854998 AS DOUBLE PRECISION)) / CAST(0.987850288584702 AS DOUBLE PRECISION) AS scaler_26, (CAST("ADS_imp_1_OUT".impter_27 AS DOUBLE PRECISION) - CAST(0.032495132227661 AS DOUBLE PRECISION)) / CAST(0.95839547402487 AS DOUBLE PRECISION) AS scaler_27, (CAST("ADS_imp_1_OUT".impter_28 AS DOUBLE PRECISION) - CAST(0.052242393306129 AS DOUBLE PRECISION)) / CAST(0.977110727504132 AS DOUBLE PRECISION) AS scaler_28, (CAST("ADS_imp_1_OUT".impter_29 AS DOUBLE PRECISION) - CAST(0.018745871966633 AS DOUBLE PRECISION)) / CAST(1.055719926075953 AS DOUBLE PRECISION) AS scaler_29, (CAST("ADS_imp_1_OUT".impter_30 AS DOUBLE PRECISION) - CAST(0.01555307922979 AS DOUBLE PRECISION)) / CAST(0.937648102202243 AS DOUBLE PRECISION) AS scaler_30, (CAST("ADS_imp_1_OUT".impter_31 AS DOUBLE PRECISION) - CAST(0.225815372990298 AS DOUBLE PRECISION)) / CAST(1.051359755695738 AS DOUBLE PRECISION) AS scaler_31, (CAST("ADS_imp_1_OUT".impter_32 AS DOUBLE PRECISION) - CAST(-0.169898577788383 AS DOUBLE PRECISION)) / CAST(1.05781688635719 AS DOUBLE PRECISION) AS scaler_32, (CAST("ADS_imp_1_OUT".impter_33 AS DOUBLE PRECISION) - CAST(0.036044309156992 AS DOUBLE PRECISION)) / CAST(0.92001065734356 AS DOUBLE PRECISION) AS scaler_33, (CAST("ADS_imp_1_OUT".impter_34 AS DOUBLE PRECISION) - CAST(-0.171993241626401 AS DOUBLE PRECISION)) / CAST(0.981480025143543 AS DOUBLE PRECISION) AS scaler_34, (CAST("ADS_imp_1_OUT".impter_35 AS DOUBLE PRECISION) - CAST(0.137814188878643 AS DOUBLE PRECISION)) / CAST(0.917701205116808 AS DOUBLE PRECISION) AS scaler_35, (CAST("ADS_imp_1_OUT".impter_36 AS DOUBLE PRECISION) - CAST(-0.002438210964217 AS DOUBLE PRECISION)) / CAST(0.894438011610502 AS DOUBLE PRECISION) AS scaler_36, (CAST("ADS_imp_1_OUT".impter_37 AS DOUBLE PRECISION) - CAST(0.060833749131451 AS DOUBLE PRECISION)) / CAST(0.93616510548821 AS DOUBLE PRECISION) AS scaler_37, (CAST("ADS_imp_1_OUT".impter_38 AS DOUBLE PRECISION) - CAST(-0.18905998689974 AS DOUBLE PRECISION)) / CAST(1.129039817580067 AS DOUBLE PRECISION) AS scaler_38, (CAST("ADS_imp_1_OUT".impter_39 AS DOUBLE PRECISION) - CAST(-0.096352192784653 AS DOUBLE PRECISION)) / CAST(1.070354625450551 AS DOUBLE PRECISION) AS scaler_39, (CAST("ADS_imp_1_OUT".impter_40 AS DOUBLE PRECISION) - CAST(-0.101606675073556 AS DOUBLE PRECISION)) / CAST(0.920646499226522 AS DOUBLE PRECISION) AS scaler_40, (CAST("ADS_imp_1_OUT".impter_41 AS DOUBLE PRECISION) - CAST(0.064752505415787 AS DOUBLE PRECISION)) / CAST(0.898610910619398 AS DOUBLE PRECISION) AS scaler_41, (CAST("ADS_imp_1_OUT".impter_42 AS DOUBLE PRECISION) - CAST(-0.302643050360516 AS DOUBLE PRECISION)) / CAST(1.130432405967796 AS DOUBLE PRECISION) AS scaler_42, (CAST("ADS_imp_1_OUT".impter_43 AS DOUBLE PRECISION) - CAST(-0.132641556818787 AS DOUBLE PRECISION)) / CAST(0.858526079684562 AS DOUBLE PRECISION) AS scaler_43, (CAST("ADS_imp_1_OUT".impter_44 AS DOUBLE PRECISION) - CAST(-0.133405478073332 AS DOUBLE PRECISION)) / CAST(0.962489523355931 AS DOUBLE PRECISION) AS scaler_44, (CAST("ADS_imp_1_OUT".impter_45 AS DOUBLE PRECISION) - CAST(-0.00114360097028 AS DOUBLE PRECISION)) / CAST(0.904937048405028 AS DOUBLE PRECISION) AS scaler_45, (CAST("ADS_imp_1_OUT".impter_46 AS DOUBLE PRECISION) - CAST(-0.053351579089233 AS DOUBLE PRECISION)) / CAST(1.061002645763127 AS DOUBLE PRECISION) AS scaler_46, (CAST("ADS_imp_1_OUT".impter_47 AS DOUBLE PRECISION) - CAST(0.017145370026871 AS DOUBLE PRECISION)) / CAST(0.955709785830083 AS DOUBLE PRECISION) AS scaler_47, (CAST("ADS_imp_1_OUT".impter_48 AS DOUBLE PRECISION) - CAST(-0.059059449572612 AS DOUBLE PRECISION)) / CAST(1.089482201259916 AS DOUBLE PRECISION) AS scaler_48, (CAST("ADS_imp_1_OUT".impter_49 AS DOUBLE PRECISION) - CAST(-0.09528879968184 AS DOUBLE PRECISION)) / CAST(0.857147595338279 AS DOUBLE PRECISION) AS scaler_49, (CAST("ADS_imp_1_OUT".impter_50 AS DOUBLE PRECISION) - CAST(-0.157813634633659 AS DOUBLE PRECISION)) / CAST(0.991963586751777 AS DOUBLE PRECISION) AS scaler_50, (CAST("ADS_imp_1_OUT".impter_51 AS DOUBLE PRECISION) - CAST(-0.237944333924534 AS DOUBLE PRECISION)) / CAST(1.00675031297216 AS DOUBLE PRECISION) AS scaler_51, (CAST("ADS_imp_1_OUT".impter_52 AS DOUBLE PRECISION) - CAST(0.138638506930322 AS DOUBLE PRECISION)) / CAST(1.027927338889394 AS DOUBLE PRECISION) AS scaler_52, (CAST("ADS_imp_1_OUT".impter_53 AS DOUBLE PRECISION) - CAST(-0.016996219914929 AS DOUBLE PRECISION)) / CAST(0.974408927553762 AS DOUBLE PRECISION) AS scaler_53, (CAST("ADS_imp_1_OUT".impter_54 AS DOUBLE PRECISION) - CAST(0.197014900037543 AS DOUBLE PRECISION)) / CAST(0.868492071165936 AS DOUBLE PRECISION) AS scaler_54, (CAST("ADS_imp_1_OUT".impter_55 AS DOUBLE PRECISION) - CAST(0.051629904732386 AS DOUBLE PRECISION)) / CAST(0.894397475223407 AS DOUBLE PRECISION) AS scaler_55, (CAST("ADS_imp_1_OUT".impter_56 AS DOUBLE PRECISION) - CAST(-0.134530020986626 AS DOUBLE PRECISION)) / CAST(0.963483965931841 AS DOUBLE PRECISION) AS scaler_56, (CAST("ADS_imp_1_OUT".impter_57 AS DOUBLE PRECISION) - CAST(0.147893701045596 AS DOUBLE PRECISION)) / CAST(1.061539962618542 AS DOUBLE PRECISION) AS scaler_57, (CAST("ADS_imp_1_OUT".impter_58 AS DOUBLE PRECISION) - CAST(-0.013142759438358 AS DOUBLE PRECISION)) / CAST(0.97720152784957 AS DOUBLE PRECISION) AS scaler_58, (CAST("ADS_imp_1_OUT".impter_59 AS DOUBLE PRECISION) - CAST(-0.092991629946579 AS DOUBLE PRECISION)) / CAST(1.007175843550957 AS DOUBLE PRECISION) AS scaler_59, (CAST("ADS_imp_1_OUT".impter_60 AS DOUBLE PRECISION) - CAST(-0.246894927689751 AS DOUBLE PRECISION)) / CAST(0.923735412804884 AS DOUBLE PRECISION) AS scaler_60, (CAST("ADS_imp_1_OUT".impter_61 AS DOUBLE PRECISION) - CAST(0.134997271082874 AS DOUBLE PRECISION)) / CAST(1.101584368817714 AS DOUBLE PRECISION) AS scaler_61, (CAST("ADS_imp_1_OUT".impter_62 AS DOUBLE PRECISION) - CAST(0.002554400550773 AS DOUBLE PRECISION)) / CAST(1.066445163940497 AS DOUBLE PRECISION) AS scaler_62, (CAST("ADS_imp_1_OUT".impter_63 AS DOUBLE PRECISION) - CAST(0.125273686634653 AS DOUBLE PRECISION)) / CAST(1.103567722191844 AS DOUBLE PRECISION) AS scaler_63, (CAST("ADS_imp_1_OUT".impter_64 AS DOUBLE PRECISION) - CAST(-0.037399622960559 AS DOUBLE PRECISION)) / CAST(1.032169444422347 AS DOUBLE PRECISION) AS scaler_64, (CAST("ADS_imp_1_OUT".impter_65 AS DOUBLE PRECISION) - CAST(-0.029988695801779 AS DOUBLE PRECISION)) / CAST(1.071490480050808 AS DOUBLE PRECISION) AS scaler_65, (CAST("ADS_imp_1_OUT".impter_66 AS DOUBLE PRECISION) - CAST(-0.042860885168713 AS DOUBLE PRECISION)) / CAST(1.190000747288484 AS DOUBLE PRECISION) AS scaler_66, (CAST("ADS_imp_1_OUT".impter_67 AS DOUBLE PRECISION) - CAST(-0.143834700665143 AS DOUBLE PRECISION)) / CAST(0.983863253624336 AS DOUBLE PRECISION) AS scaler_67, (CAST("ADS_imp_1_OUT".impter_68 AS DOUBLE PRECISION) - CAST(-0.052697939108892 AS DOUBLE PRECISION)) / CAST(1.133004109638514 AS DOUBLE PRECISION) AS scaler_68, (CAST("ADS_imp_1_OUT".impter_69 AS DOUBLE PRECISION) - CAST(0.029267940271278 AS DOUBLE PRECISION)) / CAST(0.950591188381841 AS DOUBLE PRECISION) AS scaler_69, (CAST("ADS_imp_1_OUT".impter_70 AS DOUBLE PRECISION) - CAST(0.104310808883224 AS DOUBLE PRECISION)) / CAST(0.912489280474082 AS DOUBLE PRECISION) AS scaler_70, (CAST("ADS_imp_1_OUT".impter_71 AS DOUBLE PRECISION) - CAST(-0.096196874330471 AS DOUBLE PRECISION)) / CAST(1.043526374855211 AS DOUBLE PRECISION) AS scaler_71, (CAST("ADS_imp_1_OUT".impter_72 AS DOUBLE PRECISION) - CAST(0.006733319298332 AS DOUBLE PRECISION)) / CAST(1.068622613004622 AS DOUBLE PRECISION) AS scaler_72, (CAST("ADS_imp_1_OUT".impter_73 AS DOUBLE PRECISION) - CAST(0.032896659353677 AS DOUBLE PRECISION)) / CAST(0.859185924601115 AS DOUBLE PRECISION) AS scaler_73, (CAST("ADS_imp_1_OUT".impter_74 AS DOUBLE PRECISION) - CAST(0.080642772754601 AS DOUBLE PRECISION)) / CAST(1.031072803981909 AS DOUBLE PRECISION) AS scaler_74, (CAST("ADS_imp_1_OUT".impter_75 AS DOUBLE PRECISION) - CAST(-0.106035567554919 AS DOUBLE PRECISION)) / CAST(0.975764449180012 AS DOUBLE PRECISION) AS scaler_75, (CAST("ADS_imp_1_OUT".impter_76 AS DOUBLE PRECISION) - CAST(0.094891001482959 AS DOUBLE PRECISION)) / CAST(0.908286175367262 AS DOUBLE PRECISION) AS scaler_76, (CAST("ADS_imp_1_OUT".impter_77 AS DOUBLE PRECISION) - CAST(-0.196648871100087 AS DOUBLE PRECISION)) / CAST(0.957009111150323 AS DOUBLE PRECISION) AS scaler_77, (CAST("ADS_imp_1_OUT".impter_78 AS DOUBLE PRECISION) - CAST(0.116526435149496 AS DOUBLE PRECISION)) / CAST(0.89069936450609 AS DOUBLE PRECISION) AS scaler_78, (CAST("ADS_imp_1_OUT".impter_79 AS DOUBLE PRECISION) - CAST(0.193402183480713 AS DOUBLE PRECISION)) / CAST(1.015190635438741 AS DOUBLE PRECISION) AS scaler_79, (CAST("ADS_imp_1_OUT".impter_80 AS DOUBLE PRECISION) - CAST(0.112097090879072 AS DOUBLE PRECISION)) / CAST(1.000594132902615 AS DOUBLE PRECISION) AS scaler_80, (CAST("ADS_imp_1_OUT".impter_81 AS DOUBLE PRECISION) - CAST(0.107090136212228 AS DOUBLE PRECISION)) / CAST(0.998199099540584 AS DOUBLE PRECISION) AS scaler_81, (CAST("ADS_imp_1_OUT".impter_82 AS DOUBLE PRECISION) - CAST(-0.010330429209223 AS DOUBLE PRECISION)) / CAST(1.12613406870396 AS DOUBLE PRECISION) AS scaler_82, (CAST("ADS_imp_1_OUT".impter_83 AS DOUBLE PRECISION) - CAST(0.110265521043567 AS DOUBLE PRECISION)) / CAST(1.020363159579656 AS DOUBLE PRECISION) AS scaler_83, (CAST("ADS_imp_1_OUT".impter_84 AS DOUBLE PRECISION) - CAST(0.011916345894533 AS DOUBLE PRECISION)) / CAST(0.952019831589064 AS DOUBLE PRECISION) AS scaler_84, (CAST("ADS_imp_1_OUT".impter_85 AS DOUBLE PRECISION) - CAST(0.013369825695029 AS DOUBLE PRECISION)) / CAST(1.053965047688606 AS DOUBLE PRECISION) AS scaler_85, (CAST("ADS_imp_1_OUT".impter_86 AS DOUBLE PRECISION) - CAST(-0.150051200070278 AS DOUBLE PRECISION)) / CAST(0.998199382399194 AS DOUBLE PRECISION) AS scaler_86, (CAST("ADS_imp_1_OUT".impter_87 AS DOUBLE PRECISION) - CAST(-0.090221775794485 AS DOUBLE PRECISION)) / CAST(0.911905498566136 AS DOUBLE PRECISION) AS scaler_87, (CAST("ADS_imp_1_OUT".impter_88 AS DOUBLE PRECISION) - CAST(-0.160296256572283 AS DOUBLE PRECISION)) / CAST(1.053061144394669 AS DOUBLE PRECISION) AS scaler_88, (CAST("ADS_imp_1_OUT".impter_89 AS DOUBLE PRECISION) - CAST(-0.101270172934893 AS DOUBLE PRECISION)) / CAST(1.067308816233493 AS DOUBLE PRECISION) AS scaler_89, (CAST("ADS_imp_1_OUT".impter_90 AS DOUBLE PRECISION) - CAST(0.332354300629263 AS DOUBLE PRECISION)) / CAST(0.851739860879603 AS DOUBLE PRECISION) AS scaler_90, (CAST("ADS_imp_1_OUT".impter_91 AS DOUBLE PRECISION) - CAST(0.051731173060791 AS DOUBLE PRECISION)) / CAST(0.903657197208338 AS DOUBLE PRECISION) AS scaler_91, (CAST("ADS_imp_1_OUT".impter_92 AS DOUBLE PRECISION) - CAST(0.107887921220289 AS DOUBLE PRECISION)) / CAST(0.967916174644202 AS DOUBLE PRECISION) AS scaler_92, (CAST("ADS_imp_1_OUT".impter_93 AS DOUBLE PRECISION) - CAST(0.214549318747406 AS DOUBLE PRECISION)) / CAST(0.905927839774967 AS DOUBLE PRECISION) AS scaler_93, (CAST("ADS_imp_1_OUT".impter_94 AS DOUBLE PRECISION) - CAST(-0.163173377699427 AS DOUBLE PRECISION)) / CAST(1.097718994991099 AS DOUBLE PRECISION) AS scaler_94, (CAST("ADS_imp_1_OUT".impter_95 AS DOUBLE PRECISION) - CAST(-0.224238407687958 AS DOUBLE PRECISION)) / CAST(0.785962436802727 AS DOUBLE PRECISION) AS scaler_95, (CAST("ADS_imp_1_OUT".impter_96 AS DOUBLE PRECISION) - CAST(-0.27695847565296 AS DOUBLE PRECISION)) / CAST(1.000759742410346 AS DOUBLE PRECISION) AS scaler_96, (CAST("ADS_imp_1_OUT".impter_97 AS DOUBLE PRECISION) - CAST(0.037863552135045 AS DOUBLE PRECISION)) / CAST(0.961749101485564 AS DOUBLE PRECISION) AS scaler_97, (CAST("ADS_imp_1_OUT".impter_98 AS DOUBLE PRECISION) - CAST(-0.027588528031413 AS DOUBLE PRECISION)) / CAST(0.888578840707713 AS DOUBLE PRECISION) AS scaler_98, (CAST("ADS_imp_1_OUT".impter_99 AS DOUBLE PRECISION) - CAST(0.105287788103124 AS DOUBLE PRECISION)) / CAST(0.988117943764986 AS DOUBLE PRECISION) AS scaler_99, (CAST("ADS_imp_1_OUT".impter_100 AS DOUBLE PRECISION) - CAST(0.066407033802213 AS DOUBLE PRECISION)) / CAST(0.89313215245604 AS DOUBLE PRECISION) AS scaler_100, (CAST("ADS_imp_1_OUT".impter_101 AS DOUBLE PRECISION) - CAST(0.065699309958424 AS DOUBLE PRECISION)) / CAST(0.936700135182471 AS DOUBLE PRECISION) AS scaler_101 
FROM tmp_20180508182641_codegen_9eah02_ads_imp_1_out AS "ADS_imp_1_OUT") AS "ADS_sca_2_OUT") AS "U"

-- Code For temporary table tmp_20180508182641_codegen_mwwzxo_hl_1_relu_1 part 1. Create 


CREATE GLOBAL TEMPORARY TABLE tmp_20180508182641_codegen_mwwzxo_hl_1_relu_1  (
	"KEY" BIGINT, 
	"NEUR_1_1" DOUBLE PRECISION, 
	"NEUR_1_2" DOUBLE PRECISION, 
	"NEUR_1_3" DOUBLE PRECISION
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table tmp_20180508182641_codegen_mwwzxo_hl_1_relu_1 part 2. Populate

INSERT INTO tmp_20180508182641_codegen_mwwzxo_hl_1_relu_1 ("KEY", "NEUR_1_1", "NEUR_1_2", "NEUR_1_3") SELECT "U"."KEY", "U"."NEUR_1_1", "U"."NEUR_1_2", "U"."NEUR_1_3" 
FROM (WITH "IL" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CAST("ADS_sca_2_OUT".scaler_2 AS DOUBLE PRECISION) AS scaler_2, CAST("ADS_sca_2_OUT".scaler_3 AS DOUBLE PRECISION) AS scaler_3, CAST("ADS_sca_2_OUT".scaler_4 AS DOUBLE PRECISION) AS scaler_4, CAST("ADS_sca_2_OUT".scaler_5 AS DOUBLE PRECISION) AS scaler_5, CAST("ADS_sca_2_OUT".scaler_6 AS DOUBLE PRECISION) AS scaler_6, CAST("ADS_sca_2_OUT".scaler_7 AS DOUBLE PRECISION) AS scaler_7, CAST("ADS_sca_2_OUT".scaler_8 AS DOUBLE PRECISION) AS scaler_8, CAST("ADS_sca_2_OUT".scaler_9 AS DOUBLE PRECISION) AS scaler_9, CAST("ADS_sca_2_OUT".scaler_10 AS DOUBLE PRECISION) AS scaler_10, CAST("ADS_sca_2_OUT".scaler_11 AS DOUBLE PRECISION) AS scaler_11, CAST("ADS_sca_2_OUT".scaler_12 AS DOUBLE PRECISION) AS scaler_12, CAST("ADS_sca_2_OUT".scaler_13 AS DOUBLE PRECISION) AS scaler_13, CAST("ADS_sca_2_OUT".scaler_14 AS DOUBLE PRECISION) AS scaler_14, CAST("ADS_sca_2_OUT".scaler_15 AS DOUBLE PRECISION) AS scaler_15, CAST("ADS_sca_2_OUT".scaler_16 AS DOUBLE PRECISION) AS scaler_16, CAST("ADS_sca_2_OUT".scaler_17 AS DOUBLE PRECISION) AS scaler_17, CAST("ADS_sca_2_OUT".scaler_18 AS DOUBLE PRECISION) AS scaler_18, CAST("ADS_sca_2_OUT".scaler_19 AS DOUBLE PRECISION) AS scaler_19, CAST("ADS_sca_2_OUT".scaler_20 AS DOUBLE PRECISION) AS scaler_20, CAST("ADS_sca_2_OUT".scaler_21 AS DOUBLE PRECISION) AS scaler_21, CAST("ADS_sca_2_OUT".scaler_22 AS DOUBLE PRECISION) AS scaler_22, CAST("ADS_sca_2_OUT".scaler_23 AS DOUBLE PRECISION) AS scaler_23, CAST("ADS_sca_2_OUT".scaler_24 AS DOUBLE PRECISION) AS scaler_24, CAST("ADS_sca_2_OUT".scaler_25 AS DOUBLE PRECISION) AS scaler_25, CAST("ADS_sca_2_OUT".scaler_26 AS DOUBLE PRECISION) AS scaler_26, CAST("ADS_sca_2_OUT".scaler_27 AS DOUBLE PRECISION) AS scaler_27, CAST("ADS_sca_2_OUT".scaler_28 AS DOUBLE PRECISION) AS scaler_28, CAST("ADS_sca_2_OUT".scaler_29 AS DOUBLE PRECISION) AS scaler_29, CAST("ADS_sca_2_OUT".scaler_30 AS DOUBLE PRECISION) AS scaler_30, CAST("ADS_sca_2_OUT".scaler_31 AS DOUBLE PRECISION) AS scaler_31, CAST("ADS_sca_2_OUT".scaler_32 AS DOUBLE PRECISION) AS scaler_32, CAST("ADS_sca_2_OUT".scaler_33 AS DOUBLE PRECISION) AS scaler_33, CAST("ADS_sca_2_OUT".scaler_34 AS DOUBLE PRECISION) AS scaler_34, CAST("ADS_sca_2_OUT".scaler_35 AS DOUBLE PRECISION) AS scaler_35, CAST("ADS_sca_2_OUT".scaler_36 AS DOUBLE PRECISION) AS scaler_36, CAST("ADS_sca_2_OUT".scaler_37 AS DOUBLE PRECISION) AS scaler_37, CAST("ADS_sca_2_OUT".scaler_38 AS DOUBLE PRECISION) AS scaler_38, CAST("ADS_sca_2_OUT".scaler_39 AS DOUBLE PRECISION) AS scaler_39, CAST("ADS_sca_2_OUT".scaler_40 AS DOUBLE PRECISION) AS scaler_40, CAST("ADS_sca_2_OUT".scaler_41 AS DOUBLE PRECISION) AS scaler_41, CAST("ADS_sca_2_OUT".scaler_42 AS DOUBLE PRECISION) AS scaler_42, CAST("ADS_sca_2_OUT".scaler_43 AS DOUBLE PRECISION) AS scaler_43, CAST("ADS_sca_2_OUT".scaler_44 AS DOUBLE PRECISION) AS scaler_44, CAST("ADS_sca_2_OUT".scaler_45 AS DOUBLE PRECISION) AS scaler_45, CAST("ADS_sca_2_OUT".scaler_46 AS DOUBLE PRECISION) AS scaler_46, CAST("ADS_sca_2_OUT".scaler_47 AS DOUBLE PRECISION) AS scaler_47, CAST("ADS_sca_2_OUT".scaler_48 AS DOUBLE PRECISION) AS scaler_48, CAST("ADS_sca_2_OUT".scaler_49 AS DOUBLE PRECISION) AS scaler_49, CAST("ADS_sca_2_OUT".scaler_50 AS DOUBLE PRECISION) AS scaler_50, CAST("ADS_sca_2_OUT".scaler_51 AS DOUBLE PRECISION) AS scaler_51, CAST("ADS_sca_2_OUT".scaler_52 AS DOUBLE PRECISION) AS scaler_52, CAST("ADS_sca_2_OUT".scaler_53 AS DOUBLE PRECISION) AS scaler_53, CAST("ADS_sca_2_OUT".scaler_54 AS DOUBLE PRECISION) AS scaler_54, CAST("ADS_sca_2_OUT".scaler_55 AS DOUBLE PRECISION) AS scaler_55, CAST("ADS_sca_2_OUT".scaler_56 AS DOUBLE PRECISION) AS scaler_56, CAST("ADS_sca_2_OUT".scaler_57 AS DOUBLE PRECISION) AS scaler_57, CAST("ADS_sca_2_OUT".scaler_58 AS DOUBLE PRECISION) AS scaler_58, CAST("ADS_sca_2_OUT".scaler_59 AS DOUBLE PRECISION) AS scaler_59, CAST("ADS_sca_2_OUT".scaler_60 AS DOUBLE PRECISION) AS scaler_60, CAST("ADS_sca_2_OUT".scaler_61 AS DOUBLE PRECISION) AS scaler_61, CAST("ADS_sca_2_OUT".scaler_62 AS DOUBLE PRECISION) AS scaler_62, CAST("ADS_sca_2_OUT".scaler_63 AS DOUBLE PRECISION) AS scaler_63, CAST("ADS_sca_2_OUT".scaler_64 AS DOUBLE PRECISION) AS scaler_64, CAST("ADS_sca_2_OUT".scaler_65 AS DOUBLE PRECISION) AS scaler_65, CAST("ADS_sca_2_OUT".scaler_66 AS DOUBLE PRECISION) AS scaler_66, CAST("ADS_sca_2_OUT".scaler_67 AS DOUBLE PRECISION) AS scaler_67, CAST("ADS_sca_2_OUT".scaler_68 AS DOUBLE PRECISION) AS scaler_68, CAST("ADS_sca_2_OUT".scaler_69 AS DOUBLE PRECISION) AS scaler_69, CAST("ADS_sca_2_OUT".scaler_70 AS DOUBLE PRECISION) AS scaler_70, CAST("ADS_sca_2_OUT".scaler_71 AS DOUBLE PRECISION) AS scaler_71, CAST("ADS_sca_2_OUT".scaler_72 AS DOUBLE PRECISION) AS scaler_72, CAST("ADS_sca_2_OUT".scaler_73 AS DOUBLE PRECISION) AS scaler_73, CAST("ADS_sca_2_OUT".scaler_74 AS DOUBLE PRECISION) AS scaler_74, CAST("ADS_sca_2_OUT".scaler_75 AS DOUBLE PRECISION) AS scaler_75, CAST("ADS_sca_2_OUT".scaler_76 AS DOUBLE PRECISION) AS scaler_76, CAST("ADS_sca_2_OUT".scaler_77 AS DOUBLE PRECISION) AS scaler_77, CAST("ADS_sca_2_OUT".scaler_78 AS DOUBLE PRECISION) AS scaler_78, CAST("ADS_sca_2_OUT".scaler_79 AS DOUBLE PRECISION) AS scaler_79, CAST("ADS_sca_2_OUT".scaler_80 AS DOUBLE PRECISION) AS scaler_80, CAST("ADS_sca_2_OUT".scaler_81 AS DOUBLE PRECISION) AS scaler_81, CAST("ADS_sca_2_OUT".scaler_82 AS DOUBLE PRECISION) AS scaler_82, CAST("ADS_sca_2_OUT".scaler_83 AS DOUBLE PRECISION) AS scaler_83, CAST("ADS_sca_2_OUT".scaler_84 AS DOUBLE PRECISION) AS scaler_84, CAST("ADS_sca_2_OUT".scaler_85 AS DOUBLE PRECISION) AS scaler_85, CAST("ADS_sca_2_OUT".scaler_86 AS DOUBLE PRECISION) AS scaler_86, CAST("ADS_sca_2_OUT".scaler_87 AS DOUBLE PRECISION) AS scaler_87, CAST("ADS_sca_2_OUT".scaler_88 AS DOUBLE PRECISION) AS scaler_88, CAST("ADS_sca_2_OUT".scaler_89 AS DOUBLE PRECISION) AS scaler_89, CAST("ADS_sca_2_OUT".scaler_90 AS DOUBLE PRECISION) AS scaler_90, CAST("ADS_sca_2_OUT".scaler_91 AS DOUBLE PRECISION) AS scaler_91, CAST("ADS_sca_2_OUT".scaler_92 AS DOUBLE PRECISION) AS scaler_92, CAST("ADS_sca_2_OUT".scaler_93 AS DOUBLE PRECISION) AS scaler_93, CAST("ADS_sca_2_OUT".scaler_94 AS DOUBLE PRECISION) AS scaler_94, CAST("ADS_sca_2_OUT".scaler_95 AS DOUBLE PRECISION) AS scaler_95, CAST("ADS_sca_2_OUT".scaler_96 AS DOUBLE PRECISION) AS scaler_96, CAST("ADS_sca_2_OUT".scaler_97 AS DOUBLE PRECISION) AS scaler_97, CAST("ADS_sca_2_OUT".scaler_98 AS DOUBLE PRECISION) AS scaler_98, CAST("ADS_sca_2_OUT".scaler_99 AS DOUBLE PRECISION) AS scaler_99, CAST("ADS_sca_2_OUT".scaler_100 AS DOUBLE PRECISION) AS scaler_100, CAST("ADS_sca_2_OUT".scaler_101 AS DOUBLE PRECISION) AS scaler_101 
FROM tmp_20180508182641_codegen_2rpw2y_ads_sca_2_out AS "ADS_sca_2_OUT"), 
"HL_BA_1" AS 
(SELECT "IL"."KEY" AS "KEY", CAST(-5.501970126738155 AS DOUBLE PRECISION) * "IL".scaler_2 + CAST(1.514331306739506 AS DOUBLE PRECISION) * "IL".scaler_3 + CAST(1.372111606487654 AS DOUBLE PRECISION) * "IL".scaler_4 + CAST(-2.273389551733747 AS DOUBLE PRECISION) * "IL".scaler_5 + CAST(7.944636719559711 AS DOUBLE PRECISION) * "IL".scaler_6 + CAST(-1.794499899200768 AS DOUBLE PRECISION) * "IL".scaler_7 + CAST(-2.202408812683363 AS DOUBLE PRECISION) * "IL".scaler_8 + CAST(6.118376215467435 AS DOUBLE PRECISION) * "IL".scaler_9 + CAST(-1.077112392460805 AS DOUBLE PRECISION) * "IL".scaler_10 + CAST(2.188036898753638 AS DOUBLE PRECISION) * "IL".scaler_11 + CAST(1.342074226500022 AS DOUBLE PRECISION) * "IL".scaler_12 + CAST(-0.366990143087024 AS DOUBLE PRECISION) * "IL".scaler_13 + CAST(-1.850477520147118 AS DOUBLE PRECISION) * "IL".scaler_14 + CAST(2.482062688572638 AS DOUBLE PRECISION) * "IL".scaler_15 + CAST(-7.935105831293032 AS DOUBLE PRECISION) * "IL".scaler_16 + CAST(-5.960357206209235 AS DOUBLE PRECISION) * "IL".scaler_17 + CAST(7.411410966486057 AS DOUBLE PRECISION) * "IL".scaler_18 + CAST(-3.107539388351089 AS DOUBLE PRECISION) * "IL".scaler_19 + CAST(-2.063666548998427 AS DOUBLE PRECISION) * "IL".scaler_20 + CAST(3.61468845633886 AS DOUBLE PRECISION) * "IL".scaler_21 + CAST(1.329725250068684 AS DOUBLE PRECISION) * "IL".scaler_22 + CAST(1.362207124309277 AS DOUBLE PRECISION) * "IL".scaler_23 + CAST(0.145915214762754 AS DOUBLE PRECISION) * "IL".scaler_24 + CAST(0.605262641779178 AS DOUBLE PRECISION) * "IL".scaler_25 + CAST(0.799205987789282 AS DOUBLE PRECISION) * "IL".scaler_26 + CAST(2.06611104386865 AS DOUBLE PRECISION) * "IL".scaler_27 + CAST(4.942074987659359 AS DOUBLE PRECISION) * "IL".scaler_28 + CAST(-2.199895307794868 AS DOUBLE PRECISION) * "IL".scaler_29 + CAST(-1.119314442263688 AS DOUBLE PRECISION) * "IL".scaler_30 + CAST(-0.98707124085764 AS DOUBLE PRECISION) * "IL".scaler_31 + CAST(1.384397527182411 AS DOUBLE PRECISION) * "IL".scaler_32 + CAST(-0.169807328184759 AS DOUBLE PRECISION) * "IL".scaler_33 + CAST(3.736847275507482 AS DOUBLE PRECISION) * "IL".scaler_34 + CAST(-0.384133250903174 AS DOUBLE PRECISION) * "IL".scaler_35 + CAST(-3.726998150374723 AS DOUBLE PRECISION) * "IL".scaler_36 + CAST(2.605269350109299 AS DOUBLE PRECISION) * "IL".scaler_37 + CAST(-3.072601177719394 AS DOUBLE PRECISION) * "IL".scaler_38 + CAST(0.272493777201131 AS DOUBLE PRECISION) * "IL".scaler_39 + CAST(2.777163031087624 AS DOUBLE PRECISION) * "IL".scaler_40 + CAST(1.37820250223413 AS DOUBLE PRECISION) * "IL".scaler_41 + CAST(-6.482966389918325 AS DOUBLE PRECISION) * "IL".scaler_42 + CAST(2.468956580147631 AS DOUBLE PRECISION) * "IL".scaler_43 + CAST(0.492590651098295 AS DOUBLE PRECISION) * "IL".scaler_44 + CAST(-1.127232003799796 AS DOUBLE PRECISION) * "IL".scaler_45 + CAST(3.907664559232082 AS DOUBLE PRECISION) * "IL".scaler_46 + CAST(-1.178969941179932 AS DOUBLE PRECISION) * "IL".scaler_47 + CAST(-3.286402615932078 AS DOUBLE PRECISION) * "IL".scaler_48 + CAST(-6.080296958563055 AS DOUBLE PRECISION) * "IL".scaler_49 + CAST(1.204390228077287 AS DOUBLE PRECISION) * "IL".scaler_50 + CAST(-2.085165391267288 AS DOUBLE PRECISION) * "IL".scaler_51 + CAST(0.264510810444668 AS DOUBLE PRECISION) * "IL".scaler_52 + CAST(0.985002532636181 AS DOUBLE PRECISION) * "IL".scaler_53 + CAST(2.044846747994458 AS DOUBLE PRECISION) * "IL".scaler_54 + CAST(-3.503570864563976 AS DOUBLE PRECISION) * "IL".scaler_55 + CAST(2.387318317676832 AS DOUBLE PRECISION) * "IL".scaler_56 + CAST(0.279013166975537 AS DOUBLE PRECISION) * "IL".scaler_57 + CAST(1.875427339638419 AS DOUBLE PRECISION) * "IL".scaler_58 + CAST(2.233750546615226 AS DOUBLE PRECISION) * "IL".scaler_59 + CAST(2.039043689918667 AS DOUBLE PRECISION) * "IL".scaler_60 + CAST(-0.040763931986408 AS DOUBLE PRECISION) * "IL".scaler_61 + CAST(0.7296624648842 AS DOUBLE PRECISION) * "IL".scaler_62 + CAST(-0.0613780050914 AS DOUBLE PRECISION) * "IL".scaler_63 + CAST(3.213320042999203 AS DOUBLE PRECISION) * "IL".scaler_64 + CAST(6.983692103742943 AS DOUBLE PRECISION) * "IL".scaler_65 + CAST(3.141707801479044 AS DOUBLE PRECISION) * "IL".scaler_66 + CAST(3.796235116117726 AS DOUBLE PRECISION) * "IL".scaler_67 + CAST(3.390896082293731 AS DOUBLE PRECISION) * "IL".scaler_68 + CAST(-1.813638068189576 AS DOUBLE PRECISION) * "IL".scaler_69 + CAST(-3.340999549903818 AS DOUBLE PRECISION) * "IL".scaler_70 + CAST(-1.487722260123975 AS DOUBLE PRECISION) * "IL".scaler_71 + CAST(2.060972898658795 AS DOUBLE PRECISION) * "IL".scaler_72 + CAST(-2.615853321328775 AS DOUBLE PRECISION) * "IL".scaler_73 + CAST(-7.589518755121273 AS DOUBLE PRECISION) * "IL".scaler_74 + CAST(5.518909354816504 AS DOUBLE PRECISION) * "IL".scaler_75 + CAST(-6.613855495522652 AS DOUBLE PRECISION) * "IL".scaler_76 + CAST(1.70530105979121 AS DOUBLE PRECISION) * "IL".scaler_77 + CAST(-2.000565689661149 AS DOUBLE PRECISION) * "IL".scaler_78 + CAST(-0.738098184716125 AS DOUBLE PRECISION) * "IL".scaler_79 + CAST(-4.46669294463397 AS DOUBLE PRECISION) * "IL".scaler_80 + CAST(4.063902075158695 AS DOUBLE PRECISION) * "IL".scaler_81 + CAST(8.450667483197863 AS DOUBLE PRECISION) * "IL".scaler_82 + CAST(-1.224175380504468 AS DOUBLE PRECISION) * "IL".scaler_83 + CAST(-1.715652442994992 AS DOUBLE PRECISION) * "IL".scaler_84 + CAST(-1.192959834002324 AS DOUBLE PRECISION) * "IL".scaler_85 + CAST(-3.83571716956196 AS DOUBLE PRECISION) * "IL".scaler_86 + CAST(5.422913840581117 AS DOUBLE PRECISION) * "IL".scaler_87 + CAST(0.021452434641063 AS DOUBLE PRECISION) * "IL".scaler_88 + CAST(3.852336193339822 AS DOUBLE PRECISION) * "IL".scaler_89 + CAST(1.779290202035024 AS DOUBLE PRECISION) * "IL".scaler_90 + CAST(5.414537032838626 AS DOUBLE PRECISION) * "IL".scaler_91 + CAST(4.242930279147836 AS DOUBLE PRECISION) * "IL".scaler_92 + CAST(0.819704501773304 AS DOUBLE PRECISION) * "IL".scaler_93 + CAST(2.898359628786316 AS DOUBLE PRECISION) * "IL".scaler_94 + CAST(-4.116197058747537 AS DOUBLE PRECISION) * "IL".scaler_95 + CAST(1.400682818078284 AS DOUBLE PRECISION) * "IL".scaler_96 + CAST(2.296992181893812 AS DOUBLE PRECISION) * "IL".scaler_97 + CAST(-4.672375800166423 AS DOUBLE PRECISION) * "IL".scaler_98 + CAST(-1.357583908572013 AS DOUBLE PRECISION) * "IL".scaler_99 + CAST(0.684868316314341 AS DOUBLE PRECISION) * "IL".scaler_100 + CAST(1.460735595191978 AS DOUBLE PRECISION) * "IL".scaler_101 + CAST(-9.42799104745315 AS DOUBLE PRECISION) AS "NEUR_1_1", CAST(1.018144082940517 AS DOUBLE PRECISION) * "IL".scaler_2 + CAST(-7.697441934762359 AS DOUBLE PRECISION) * "IL".scaler_3 + CAST(-9.06158999715586 AS DOUBLE PRECISION) * "IL".scaler_4 + CAST(4.763079740194134 AS DOUBLE PRECISION) * "IL".scaler_5 + CAST(-4.089706223796126 AS DOUBLE PRECISION) * "IL".scaler_6 + CAST(-1.079329537269625 AS DOUBLE PRECISION) * "IL".scaler_7 + CAST(-4.211989622956316 AS DOUBLE PRECISION) * "IL".scaler_8 + CAST(-7.130296161781435 AS DOUBLE PRECISION) * "IL".scaler_9 + CAST(5.158637925165325 AS DOUBLE PRECISION) * "IL".scaler_10 + CAST(5.63682674885669 AS DOUBLE PRECISION) * "IL".scaler_11 + CAST(-0.376271635005347 AS DOUBLE PRECISION) * "IL".scaler_12 + CAST(0.176367397667768 AS DOUBLE PRECISION) * "IL".scaler_13 + CAST(6.114391897119713 AS DOUBLE PRECISION) * "IL".scaler_14 + CAST(-0.081254472573345 AS DOUBLE PRECISION) * "IL".scaler_15 + CAST(5.889733772493225 AS DOUBLE PRECISION) * "IL".scaler_16 + CAST(5.678792545485573 AS DOUBLE PRECISION) * "IL".scaler_17 + CAST(6.349458258000095 AS DOUBLE PRECISION) * "IL".scaler_18 + CAST(7.679817822731972 AS DOUBLE PRECISION) * "IL".scaler_19 + CAST(8.648116225102097 AS DOUBLE PRECISION) * "IL".scaler_20 + CAST(-8.268898026789033 AS DOUBLE PRECISION) * "IL".scaler_21 + CAST(4.224614461538396 AS DOUBLE PRECISION) * "IL".scaler_22 + CAST(-2.82355073453555 AS DOUBLE PRECISION) * "IL".scaler_23 + CAST(-0.691321964687062 AS DOUBLE PRECISION) * "IL".scaler_24 + CAST(2.277263525916844 AS DOUBLE PRECISION) * "IL".scaler_25 + CAST(1.413980360291282 AS DOUBLE PRECISION) * "IL".scaler_26 + CAST(-5.721913700893106 AS DOUBLE PRECISION) * "IL".scaler_27 + CAST(2.924237519432368 AS DOUBLE PRECISION) * "IL".scaler_28 + CAST(6.949731757428914 AS DOUBLE PRECISION) * "IL".scaler_29 + CAST(-0.216167402183835 AS DOUBLE PRECISION) * "IL".scaler_30 + CAST(5.910173484707151 AS DOUBLE PRECISION) * "IL".scaler_31 + CAST(-6.507141067007782 AS DOUBLE PRECISION) * "IL".scaler_32 + CAST(3.088991433601671 AS DOUBLE PRECISION) * "IL".scaler_33 + CAST(-5.903423572650349 AS DOUBLE PRECISION) * "IL".scaler_34 + CAST(5.638794232673559 AS DOUBLE PRECISION) * "IL".scaler_35 + CAST(-9.711999808155573 AS DOUBLE PRECISION) * "IL".scaler_36 + CAST(0.304975198099505 AS DOUBLE PRECISION) * "IL".scaler_37 + CAST(-2.658795857399601 AS DOUBLE PRECISION) * "IL".scaler_38 + CAST(-0.730353564212398 AS DOUBLE PRECISION) * "IL".scaler_39 + CAST(7.413015282286511 AS DOUBLE PRECISION) * "IL".scaler_40 + CAST(18.733690220311566 AS DOUBLE PRECISION) * "IL".scaler_41 + CAST(1.603161775553705 AS DOUBLE PRECISION) * "IL".scaler_42 + CAST(16.295604084018404 AS DOUBLE PRECISION) * "IL".scaler_43 + CAST(-2.42143914146953 AS DOUBLE PRECISION) * "IL".scaler_44 + CAST(6.025181407634809 AS DOUBLE PRECISION) * "IL".scaler_45 + CAST(-1.129315149931111 AS DOUBLE PRECISION) * "IL".scaler_46 + CAST(8.189988599921099 AS DOUBLE PRECISION) * "IL".scaler_47 + CAST(-6.922709458731513 AS DOUBLE PRECISION) * "IL".scaler_48 + CAST(-3.983083007586973 AS DOUBLE PRECISION) * "IL".scaler_49 + CAST(-0.565003934818432 AS DOUBLE PRECISION) * "IL".scaler_50 + CAST(2.0691271282558 AS DOUBLE PRECISION) * "IL".scaler_51 + CAST(-1.991153825765957 AS DOUBLE PRECISION) * "IL".scaler_52 + CAST(1.887884843048662 AS DOUBLE PRECISION) * "IL".scaler_53 + CAST(2.031774358617184 AS DOUBLE PRECISION) * "IL".scaler_54 + CAST(-1.080918252396073 AS DOUBLE PRECISION) * "IL".scaler_55 + CAST(-3.616408543033712 AS DOUBLE PRECISION) * "IL".scaler_56 + CAST(2.143955636419442 AS DOUBLE PRECISION) * "IL".scaler_57 + CAST(-9.266658013641772 AS DOUBLE PRECISION) * "IL".scaler_58 + CAST(-3.139298755291732 AS DOUBLE PRECISION) * "IL".scaler_59 + CAST(-2.851758571396184 AS DOUBLE PRECISION) * "IL".scaler_60 + CAST(2.802548402554778 AS DOUBLE PRECISION) * "IL".scaler_61 + CAST(7.200330905296683 AS DOUBLE PRECISION) * "IL".scaler_62 + CAST(-2.53520431274836 AS DOUBLE PRECISION) * "IL".scaler_63 + CAST(-7.703441664399483 AS DOUBLE PRECISION) * "IL".scaler_64 + CAST(14.090171812171995 AS DOUBLE PRECISION) * "IL".scaler_65 + CAST(0.169380857403399 AS DOUBLE PRECISION) * "IL".scaler_66 + CAST(-0.151393319122987 AS DOUBLE PRECISION) * "IL".scaler_67 + CAST(-5.931804105663635 AS DOUBLE PRECISION) * "IL".scaler_68 + CAST(-3.565525551229418 AS DOUBLE PRECISION) * "IL".scaler_69 + CAST(3.116702819439202 AS DOUBLE PRECISION) * "IL".scaler_70 + CAST(-4.413162731467435 AS DOUBLE PRECISION) * "IL".scaler_71 + CAST(-5.98995533903739 AS DOUBLE PRECISION) * "IL".scaler_72 + CAST(6.057618037999982 AS DOUBLE PRECISION) * "IL".scaler_73 + CAST(7.66421600918988 AS DOUBLE PRECISION) * "IL".scaler_74 + CAST(-10.046619169189697 AS DOUBLE PRECISION) * "IL".scaler_75 + CAST(6.854239945913333 AS DOUBLE PRECISION) * "IL".scaler_76 + CAST(0.447931644203809 AS DOUBLE PRECISION) * "IL".scaler_77 + CAST(-2.433251787146887 AS DOUBLE PRECISION) * "IL".scaler_78 + CAST(-8.594993255289747 AS DOUBLE PRECISION) * "IL".scaler_79 + CAST(3.56089423273946 AS DOUBLE PRECISION) * "IL".scaler_80 + CAST(8.51410566783648 AS DOUBLE PRECISION) * "IL".scaler_81 + CAST(16.377288263983996 AS DOUBLE PRECISION) * "IL".scaler_82 + CAST(5.71522815342276 AS DOUBLE PRECISION) * "IL".scaler_83 + CAST(0.052059462144251 AS DOUBLE PRECISION) * "IL".scaler_84 + CAST(-1.180765521333057 AS DOUBLE PRECISION) * "IL".scaler_85 + CAST(0.279980231830554 AS DOUBLE PRECISION) * "IL".scaler_86 + CAST(-0.048662303380432 AS DOUBLE PRECISION) * "IL".scaler_87 + CAST(4.395428844035058 AS DOUBLE PRECISION) * "IL".scaler_88 + CAST(-5.260186852702059 AS DOUBLE PRECISION) * "IL".scaler_89 + CAST(-10.394469154924586 AS DOUBLE PRECISION) * "IL".scaler_90 + CAST(0.654425628055764 AS DOUBLE PRECISION) * "IL".scaler_91 + CAST(-8.118204215472785 AS DOUBLE PRECISION) * "IL".scaler_92 + CAST(5.041837047299992 AS DOUBLE PRECISION) * "IL".scaler_93 + CAST(-2.309388260765718 AS DOUBLE PRECISION) * "IL".scaler_94 + CAST(-1.174380938215541 AS DOUBLE PRECISION) * "IL".scaler_95 + CAST(-8.374061474988713 AS DOUBLE PRECISION) * "IL".scaler_96 + CAST(6.990875731870865 AS DOUBLE PRECISION) * "IL".scaler_97 + CAST(2.366842866488674 AS DOUBLE PRECISION) * "IL".scaler_98 + CAST(7.751473706990318 AS DOUBLE PRECISION) * "IL".scaler_99 + CAST(-1.817659605725995 AS DOUBLE PRECISION) * "IL".scaler_100 + CAST(7.103884934385404 AS DOUBLE PRECISION) * "IL".scaler_101 + CAST(0.883384306208458 AS DOUBLE PRECISION) AS "NEUR_1_2", CAST(-3.670212778670016 AS DOUBLE PRECISION) * "IL".scaler_2 + CAST(-14.558001201605848 AS DOUBLE PRECISION) * "IL".scaler_3 + CAST(-7.44399967521062 AS DOUBLE PRECISION) * "IL".scaler_4 + CAST(0.830431445662703 AS DOUBLE PRECISION) * "IL".scaler_5 + CAST(-1.781145837433969 AS DOUBLE PRECISION) * "IL".scaler_6 + CAST(4.052318098322073 AS DOUBLE PRECISION) * "IL".scaler_7 + CAST(1.429662203007006 AS DOUBLE PRECISION) * "IL".scaler_8 + CAST(-6.938675654195062 AS DOUBLE PRECISION) * "IL".scaler_9 + CAST(16.782368192234404 AS DOUBLE PRECISION) * "IL".scaler_10 + CAST(4.870317060288707 AS DOUBLE PRECISION) * "IL".scaler_11 + CAST(-11.050057874207132 AS DOUBLE PRECISION) * "IL".scaler_12 + CAST(-3.792687312759227 AS DOUBLE PRECISION) * "IL".scaler_13 + CAST(8.655846527462181 AS DOUBLE PRECISION) * "IL".scaler_14 + CAST(3.326570003634624 AS DOUBLE PRECISION) * "IL".scaler_15 + CAST(0.644462859037364 AS DOUBLE PRECISION) * "IL".scaler_16 + CAST(4.425057097236198 AS DOUBLE PRECISION) * "IL".scaler_17 + CAST(11.252186185820324 AS DOUBLE PRECISION) * "IL".scaler_18 + CAST(12.4065209102592 AS DOUBLE PRECISION) * "IL".scaler_19 + CAST(4.292478939839342 AS DOUBLE PRECISION) * "IL".scaler_20 + CAST(-25.758829915089276 AS DOUBLE PRECISION) * "IL".scaler_21 + CAST(12.09191273612861 AS DOUBLE PRECISION) * "IL".scaler_22 + CAST(-4.1083358428881 AS DOUBLE PRECISION) * "IL".scaler_23 + CAST(9.266175325827623 AS DOUBLE PRECISION) * "IL".scaler_24 + CAST(-5.0593038087504 AS DOUBLE PRECISION) * "IL".scaler_25 + CAST(10.557240431768353 AS DOUBLE PRECISION) * "IL".scaler_26 + CAST(10.289653629200554 AS DOUBLE PRECISION) * "IL".scaler_27 + CAST(1.32227058827708 AS DOUBLE PRECISION) * "IL".scaler_28 + CAST(15.796141297280839 AS DOUBLE PRECISION) * "IL".scaler_29 + CAST(5.516693210669578 AS DOUBLE PRECISION) * "IL".scaler_30 + CAST(5.047183174843415 AS DOUBLE PRECISION) * "IL".scaler_31 + CAST(0.240372208238448 AS DOUBLE PRECISION) * "IL".scaler_32 + CAST(13.591068673903866 AS DOUBLE PRECISION) * "IL".scaler_33 + CAST(4.177026157766205 AS DOUBLE PRECISION) * "IL".scaler_34 + CAST(7.210268915680896 AS DOUBLE PRECISION) * "IL".scaler_35 + CAST(0.701922418793015 AS DOUBLE PRECISION) * "IL".scaler_36 + CAST(5.328489416978562 AS DOUBLE PRECISION) * "IL".scaler_37 + CAST(-2.395992106421907 AS DOUBLE PRECISION) * "IL".scaler_38 + CAST(-13.907026492810164 AS DOUBLE PRECISION) * "IL".scaler_39 + CAST(8.783453203778842 AS DOUBLE PRECISION) * "IL".scaler_40 + CAST(27.641605073295757 AS DOUBLE PRECISION) * "IL".scaler_41 + CAST(-5.87678953131365 AS DOUBLE PRECISION) * "IL".scaler_42 + CAST(24.365456806707336 AS DOUBLE PRECISION) * "IL".scaler_43 + CAST(-11.657356519621311 AS DOUBLE PRECISION) * "IL".scaler_44 + CAST(9.793712254428295 AS DOUBLE PRECISION) * "IL".scaler_45 + CAST(6.973044426451851 AS DOUBLE PRECISION) * "IL".scaler_46 + CAST(-2.413127055083414 AS DOUBLE PRECISION) * "IL".scaler_47 + CAST(1.78995474234288 AS DOUBLE PRECISION) * "IL".scaler_48 + CAST(3.988929195586658 AS DOUBLE PRECISION) * "IL".scaler_49 + CAST(2.703363590132175 AS DOUBLE PRECISION) * "IL".scaler_50 + CAST(12.828754228996367 AS DOUBLE PRECISION) * "IL".scaler_51 + CAST(-2.070674070998786 AS DOUBLE PRECISION) * "IL".scaler_52 + CAST(4.219656058652642 AS DOUBLE PRECISION) * "IL".scaler_53 + CAST(-4.204780923837424 AS DOUBLE PRECISION) * "IL".scaler_54 + CAST(-3.7208860677864 AS DOUBLE PRECISION) * "IL".scaler_55 + CAST(12.686817742140963 AS DOUBLE PRECISION) * "IL".scaler_56 + CAST(-6.017281693583161 AS DOUBLE PRECISION) * "IL".scaler_57 + CAST(-6.019355882243667 AS DOUBLE PRECISION) * "IL".scaler_58 + CAST(9.715119061920515 AS DOUBLE PRECISION) * "IL".scaler_59 + CAST(-0.485320435819289 AS DOUBLE PRECISION) * "IL".scaler_60 + CAST(6.503715883398949 AS DOUBLE PRECISION) * "IL".scaler_61 + CAST(7.588564142153241 AS DOUBLE PRECISION) * "IL".scaler_62 + CAST(-5.061661011191325 AS DOUBLE PRECISION) * "IL".scaler_63 + CAST(-12.616283046585336 AS DOUBLE PRECISION) * "IL".scaler_64 + CAST(23.284784342272385 AS DOUBLE PRECISION) * "IL".scaler_65 + CAST(1.945464337235035 AS DOUBLE PRECISION) * "IL".scaler_66 + CAST(1.205565860254762 AS DOUBLE PRECISION) * "IL".scaler_67 + CAST(-3.706275612391366 AS DOUBLE PRECISION) * "IL".scaler_68 + CAST(-11.4262741403721 AS DOUBLE PRECISION) * "IL".scaler_69 + CAST(14.992224357753084 AS DOUBLE PRECISION) * "IL".scaler_70 + CAST(-3.747415064227552 AS DOUBLE PRECISION) * "IL".scaler_71 + CAST(-3.572630571987983 AS DOUBLE PRECISION) * "IL".scaler_72 + CAST(5.813531604767409 AS DOUBLE PRECISION) * "IL".scaler_73 + CAST(-1.202872642361122 AS DOUBLE PRECISION) * "IL".scaler_74 + CAST(-6.635614274729789 AS DOUBLE PRECISION) * "IL".scaler_75 + CAST(3.533596013777538 AS DOUBLE PRECISION) * "IL".scaler_76 + CAST(3.478255664739534 AS DOUBLE PRECISION) * "IL".scaler_77 + CAST(-1.101260531114516 AS DOUBLE PRECISION) * "IL".scaler_78 + CAST(-21.054518633855835 AS DOUBLE PRECISION) * "IL".scaler_79 + CAST(11.973437716686474 AS DOUBLE PRECISION) * "IL".scaler_80 + CAST(7.254345783330979 AS DOUBLE PRECISION) * "IL".scaler_81 + CAST(36.991914818388295 AS DOUBLE PRECISION) * "IL".scaler_82 + CAST(7.589780489348709 AS DOUBLE PRECISION) * "IL".scaler_83 + CAST(2.117215234771478 AS DOUBLE PRECISION) * "IL".scaler_84 + CAST(2.003401927461659 AS DOUBLE PRECISION) * "IL".scaler_85 + CAST(-5.570429620288643 AS DOUBLE PRECISION) * "IL".scaler_86 + CAST(-1.16583817010123 AS DOUBLE PRECISION) * "IL".scaler_87 + CAST(-11.232449537786499 AS DOUBLE PRECISION) * "IL".scaler_88 + CAST(4.712084580237164 AS DOUBLE PRECISION) * "IL".scaler_89 + CAST(5.569606007135735 AS DOUBLE PRECISION) * "IL".scaler_90 + CAST(0.021302742862004 AS DOUBLE PRECISION) * "IL".scaler_91 + CAST(1.532453216164526 AS DOUBLE PRECISION) * "IL".scaler_92 + CAST(10.913151729448417 AS DOUBLE PRECISION) * "IL".scaler_93 + CAST(8.35603733431844 AS DOUBLE PRECISION) * "IL".scaler_94 + CAST(-12.004248076268391 AS DOUBLE PRECISION) * "IL".scaler_95 + CAST(-18.94037741186473 AS DOUBLE PRECISION) * "IL".scaler_96 + CAST(23.65623331671917 AS DOUBLE PRECISION) * "IL".scaler_97 + CAST(1.489147808526774 AS DOUBLE PRECISION) * "IL".scaler_98 + CAST(-1.352357085352943 AS DOUBLE PRECISION) * "IL".scaler_99 + CAST(-1.003446535258628 AS DOUBLE PRECISION) * "IL".scaler_100 + CAST(-4.373958691989902 AS DOUBLE PRECISION) * "IL".scaler_101 + CAST(0.101873454793851 AS DOUBLE PRECISION) AS "NEUR_1_3" 
FROM "IL"), 
"HL_1_relu" AS 
(SELECT "HL_BA_1"."KEY" AS "KEY", greatest("HL_BA_1"."NEUR_1_1", CAST(0 AS DOUBLE PRECISION)) AS "NEUR_1_1", greatest("HL_BA_1"."NEUR_1_2", CAST(0 AS DOUBLE PRECISION)) AS "NEUR_1_2", greatest("HL_BA_1"."NEUR_1_3", CAST(0 AS DOUBLE PRECISION)) AS "NEUR_1_3" 
FROM "HL_BA_1")
 SELECT "HL_1_relu_1"."KEY", "HL_1_relu_1"."NEUR_1_1", "HL_1_relu_1"."NEUR_1_2", "HL_1_relu_1"."NEUR_1_3" 
FROM (SELECT "HL_1_relu"."KEY" AS "KEY", "HL_1_relu"."NEUR_1_1" AS "NEUR_1_1", "HL_1_relu"."NEUR_1_2" AS "NEUR_1_2", "HL_1_relu"."NEUR_1_3" AS "NEUR_1_3" 
FROM "HL_1_relu") AS "HL_1_relu_1") AS "U"

-- Code For temporary table tmp_20180508182641_codegen_87ye26_ol_identity_1 part 1. Create 


CREATE GLOBAL TEMPORARY TABLE tmp_20180508182641_codegen_87ye26_ol_identity_1  (
	"KEY" BIGINT, 
	"NEUR_3_1" DOUBLE PRECISION
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table tmp_20180508182641_codegen_87ye26_ol_identity_1 part 2. Populate

INSERT INTO tmp_20180508182641_codegen_87ye26_ol_identity_1 ("KEY", "NEUR_3_1") SELECT "U"."KEY", "U"."NEUR_3_1" 
FROM (WITH "HL_BA_2" AS 
(SELECT "HL_1_relu_1"."KEY" AS "KEY", CAST(2.537265220106498 AS DOUBLE PRECISION) * "HL_1_relu_1"."NEUR_1_1" + CAST(2.51250203287142 AS DOUBLE PRECISION) * "HL_1_relu_1"."NEUR_1_2" + CAST(4.268375315777942 AS DOUBLE PRECISION) * "HL_1_relu_1"."NEUR_1_3" + CAST(-1.756931722408861 AS DOUBLE PRECISION) AS "NEUR_2_1", CAST(-0.853754444369225 AS DOUBLE PRECISION) * "HL_1_relu_1"."NEUR_1_1" + CAST(-1.985752937290946 AS DOUBLE PRECISION) * "HL_1_relu_1"."NEUR_1_2" + CAST(-0.227024034024654 AS DOUBLE PRECISION) * "HL_1_relu_1"."NEUR_1_3" + CAST(15.572327896713642 AS DOUBLE PRECISION) AS "NEUR_2_2", CAST(6.800023493927056 AS DOUBLE PRECISION) * "HL_1_relu_1"."NEUR_1_1" + CAST(9.90716769090376 AS DOUBLE PRECISION) * "HL_1_relu_1"."NEUR_1_2" + CAST(16.14335011867644 AS DOUBLE PRECISION) * "HL_1_relu_1"."NEUR_1_3" + CAST(-4.390829260252704 AS DOUBLE PRECISION) AS "NEUR_2_3", CAST(1.590658734349929 AS DOUBLE PRECISION) * "HL_1_relu_1"."NEUR_1_1" + CAST(1.533826062523344 AS DOUBLE PRECISION) * "HL_1_relu_1"."NEUR_1_2" + CAST(1.388568464433258 AS DOUBLE PRECISION) * "HL_1_relu_1"."NEUR_1_3" + CAST(3.167578272718082 AS DOUBLE PRECISION) AS "NEUR_2_4", CAST(-0.609346706181592 AS DOUBLE PRECISION) * "HL_1_relu_1"."NEUR_1_1" + CAST(-0.377668431755491 AS DOUBLE PRECISION) * "HL_1_relu_1"."NEUR_1_2" + CAST(-0.673001563449855 AS DOUBLE PRECISION) * "HL_1_relu_1"."NEUR_1_3" + CAST(-0.018078316226986 AS DOUBLE PRECISION) AS "NEUR_2_5" 
FROM tmp_20180508182641_codegen_mwwzxo_hl_1_relu_1 AS "HL_1_relu_1"), 
"HL_2_relu" AS 
(SELECT "HL_BA_2"."KEY" AS "KEY", greatest("HL_BA_2"."NEUR_2_1", CAST(0 AS DOUBLE PRECISION)) AS "NEUR_2_1", greatest("HL_BA_2"."NEUR_2_2", CAST(0 AS DOUBLE PRECISION)) AS "NEUR_2_2", greatest("HL_BA_2"."NEUR_2_3", CAST(0 AS DOUBLE PRECISION)) AS "NEUR_2_3", greatest("HL_BA_2"."NEUR_2_4", CAST(0 AS DOUBLE PRECISION)) AS "NEUR_2_4", greatest("HL_BA_2"."NEUR_2_5", CAST(0 AS DOUBLE PRECISION)) AS "NEUR_2_5" 
FROM "HL_BA_2"), 
"OL_BA" AS 
(SELECT "HL_2_relu"."KEY" AS "KEY", CAST(1.02332124359526 AS DOUBLE PRECISION) * "HL_2_relu"."NEUR_2_1" + CAST(-13.695942017505473 AS DOUBLE PRECISION) * "HL_2_relu"."NEUR_2_2" + CAST(-0.272249659726494 AS DOUBLE PRECISION) * "HL_2_relu"."NEUR_2_3" + CAST(0.527782995408019 AS DOUBLE PRECISION) * "HL_2_relu"."NEUR_2_4" + CAST(-0.273475088578178 AS DOUBLE PRECISION) * "HL_2_relu"."NEUR_2_5" + CAST(-22.257232932379285 AS DOUBLE PRECISION) AS "NEUR_3_1" 
FROM "HL_2_relu"), 
"OL_identity" AS 
(SELECT "OL_BA"."KEY" AS "KEY", "OL_BA"."NEUR_3_1" AS "NEUR_3_1" 
FROM "OL_BA")
 SELECT "OL_identity_1"."KEY", "OL_identity_1"."NEUR_3_1" 
FROM (SELECT "OL_identity"."KEY" AS "KEY", "OL_identity"."NEUR_3_1" AS "NEUR_3_1" 
FROM "OL_identity") AS "OL_identity_1") AS "U"

-- Model deployment code

SELECT "OL_identity_1"."KEY" AS "KEY", "OL_identity_1"."NEUR_3_1" AS "Estimator" 
FROM tmp_20180508182641_codegen_87ye26_ol_identity_1 AS "OL_identity_1"