-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2018

-- Model : RandomForestClassifier
-- Dataset : FourClass_100
-- Database : oracle


-- This SQL code can contain one or more statements, to be executed in the order they appear in this file.



-- Code For temporary table 80516_CODEGEN_0GP0E2_RF_B0 part 1. Create 


CREATE GLOBAL TEMPORARY TABLE "80516_CODEGEN_0GP0E2_RF_B0" (
	"KEY" NUMBER(19), 
	"Score_0" BINARY_DOUBLE, 
	"Proba_0" BINARY_DOUBLE, 
	"LogProba_0" BINARY_DOUBLE, 
	"Score_1" BINARY_DOUBLE, 
	"Proba_1" BINARY_DOUBLE, 
	"LogProba_1" BINARY_DOUBLE, 
	"Score_2" BINARY_DOUBLE, 
	"Proba_2" BINARY_DOUBLE, 
	"LogProba_2" BINARY_DOUBLE, 
	"Score_3" BINARY_DOUBLE, 
	"Proba_3" BINARY_DOUBLE, 
	"LogProba_3" BINARY_DOUBLE
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table 80516_CODEGEN_0GP0E2_RF_B0 part 2. Populate

INSERT INTO "80516_CODEGEN_0GP0E2_RF_B0" ("KEY", "Score_0", "Proba_0", "LogProba_0", "Score_1", "Proba_1", "LogProba_1", "Score_2", "Proba_2", "LogProba_2", "Score_3", "Proba_3", "LogProba_3") SELECT "U"."KEY", "U"."Score_0", "U"."Proba_0", "U"."LogProba_0", "U"."Score_1", "U"."Proba_1", "U"."LogProba_1", "U"."Score_2", "U"."Proba_2", "U"."LogProba_2", "U"."Score_3", "U"."Proba_3", "U"."LogProba_3" 
FROM (WITH "DT_node_lookup" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_65" <= 0.5756146907806396) THEN CASE WHEN ("ADS"."Feature_70" <= 1.0987422466278076) THEN CASE WHEN ("ADS"."Feature_34" <= 0.5442450046539307) THEN CASE WHEN ("ADS"."Feature_41" <= -0.3011489510536194) THEN CASE WHEN ("ADS"."Feature_99" <= 0.4967024624347687) THEN 5 ELSE CASE WHEN ("ADS"."Feature_56" <= -2.5421388149261475) THEN 7 ELSE 8 END END ELSE CASE WHEN ("ADS"."Feature_17" <= -0.239972785115242) THEN CASE WHEN ("ADS"."Feature_90" <= 1.7714502811431885) THEN 11 ELSE 12 END ELSE CASE WHEN ("ADS"."Feature_24" <= 0.09437672793865204) THEN 14 ELSE CASE WHEN ("ADS"."Feature_4" <= -0.8614770770072937) THEN 16 ELSE CASE WHEN ("ADS"."Feature_37" <= 0.5710773468017578) THEN 18 ELSE 19 END END END END END ELSE CASE WHEN ("ADS"."Feature_8" <= -0.6079371571540833) THEN CASE WHEN ("ADS"."Feature_82" <= -0.5997563600540161) THEN CASE WHEN ("ADS"."Feature_4" <= -0.47749948501586914) THEN 23 ELSE CASE WHEN ("ADS"."Feature_6" <= -1.002400279045105) THEN 25 ELSE 26 END END ELSE 27 END ELSE CASE WHEN ("ADS"."Feature_0" <= 0.3214724659919739) THEN 29 ELSE CASE WHEN ("ADS"."Feature_13" <= -0.025273285806179047) THEN 31 ELSE CASE WHEN ("ADS"."Feature_73" <= 0.19319891929626465) THEN 33 ELSE 34 END END END END END ELSE 35 END ELSE CASE WHEN ("ADS"."Feature_44" <= -1.4257612228393555) THEN 37 ELSE CASE WHEN ("ADS"."Feature_66" <= 1.4623148441314697) THEN CASE WHEN ("ADS"."Feature_13" <= -2.333749771118164) THEN 40 ELSE 41 END ELSE 42 END END END AS node_id_2 
FROM "FOURCLASS_100" "ADS"), 
"DT_node_data" AS 
(SELECT "Values".nid AS nid, CAST("Values"."P_0.0" AS BINARY_DOUBLE) AS "P_0.0", CAST("Values"."P_1.0" AS BINARY_DOUBLE) AS "P_1.0", CAST("Values"."P_2.0" AS BINARY_DOUBLE) AS "P_2.0", CAST("Values"."P_3.0" AS BINARY_DOUBLE) AS "P_3.0", CAST("Values"."D" AS BINARY_DOUBLE) AS "D", CAST("Values"."DP" AS BINARY_DOUBLE) AS "DP" 
FROM (SELECT 5 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 7 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 8 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 11 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 12 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 14 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 16 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 18 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 19 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 23 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 25 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 26 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 27 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 29 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 31 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 33 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 34 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 35 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 37 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 40 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 41 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 42 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" FROM DUAL) "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".nid AS nid, "DT_node_data"."P_0.0" AS "P_0.0", "DT_node_data"."P_1.0" AS "P_1.0", "DT_node_data"."P_2.0" AS "P_2.0", "DT_node_data"."P_3.0" AS "P_3.0", "DT_node_data"."D" AS "D", "DT_node_data"."DP" AS "DP" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".nid), 
"RF_Model_0" AS 
(SELECT "DT_Output"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output"."P_0.0" AS "Proba_0", CASE WHEN ("DT_Output"."P_0.0" IS NULL OR "DT_Output"."P_0.0" > 0.0) THEN ln("DT_Output"."P_0.0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output"."P_1.0" AS "Proba_1", CASE WHEN ("DT_Output"."P_1.0" IS NULL OR "DT_Output"."P_1.0" > 0.0) THEN ln("DT_Output"."P_1.0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_1", CAST(NULL AS BINARY_DOUBLE) AS "Score_2", "DT_Output"."P_2.0" AS "Proba_2", CASE WHEN ("DT_Output"."P_2.0" IS NULL OR "DT_Output"."P_2.0" > 0.0) THEN ln("DT_Output"."P_2.0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_2", CAST(NULL AS BINARY_DOUBLE) AS "Score_3", "DT_Output"."P_3.0" AS "Proba_3", CASE WHEN ("DT_Output"."P_3.0" IS NULL OR "DT_Output"."P_3.0" > 0.0) THEN ln("DT_Output"."P_3.0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_3" 
FROM "DT_Output"), 
"DT_node_lookup_1" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_20" <= 1.2607896327972412) THEN CASE WHEN ("ADS"."Feature_38" <= -0.49664822220802307) THEN CASE WHEN ("ADS"."Feature_44" <= 1.743991732597351) THEN CASE WHEN ("ADS"."Feature_50" <= -3.4377970695495605) THEN 4 ELSE CASE WHEN ("ADS"."Feature_29" <= 1.4739717245101929) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_4" <= 1.5177510976791382) THEN CASE WHEN ("ADS"."Feature_41" <= -0.1652175337076187) THEN 10 ELSE 11 END ELSE 12 END END ELSE CASE WHEN ("ADS"."Feature_61" <= 0.2440231889486313) THEN CASE WHEN ("ADS"."Feature_13" <= -0.6335369944572449) THEN CASE WHEN ("ADS"."Feature_94" <= -0.6756346821784973) THEN 16 ELSE CASE WHEN ("ADS"."Feature_56" <= 3.7055552005767822) THEN 18 ELSE 19 END END ELSE CASE WHEN ("ADS"."Feature_97" <= 0.7548292875289917) THEN CASE WHEN ("ADS"."Feature_37" <= -0.9780203104019165) THEN 22 ELSE 23 END ELSE CASE WHEN ("ADS"."Feature_50" <= -3.4799880981445312) THEN 25 ELSE CASE WHEN ("ADS"."Feature_88" <= 0.1742376983165741) THEN 27 ELSE 28 END END END END ELSE CASE WHEN ("ADS"."Feature_99" <= 0.5552158355712891) THEN CASE WHEN ("ADS"."Feature_50" <= -1.452916145324707) THEN 31 ELSE 32 END ELSE CASE WHEN ("ADS"."Feature_31" <= 1.2142385244369507) THEN 34 ELSE 35 END END END END ELSE CASE WHEN ("ADS"."Feature_94" <= 0.28579768538475037) THEN 37 ELSE CASE WHEN ("ADS"."Feature_10" <= -0.18433356285095215) THEN 39 ELSE 40 END END END AS node_id_2 
FROM "FOURCLASS_100" "ADS"), 
"DT_node_data_1" AS 
(SELECT "Values".nid AS nid, CAST("Values"."P_0.0" AS BINARY_DOUBLE) AS "P_0.0", CAST("Values"."P_1.0" AS BINARY_DOUBLE) AS "P_1.0", CAST("Values"."P_2.0" AS BINARY_DOUBLE) AS "P_2.0", CAST("Values"."P_3.0" AS BINARY_DOUBLE) AS "P_3.0", CAST("Values"."D" AS BINARY_DOUBLE) AS "D", CAST("Values"."DP" AS BINARY_DOUBLE) AS "DP" 
FROM (SELECT 4 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 6 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 7 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 10 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 11 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 12 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 16 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 18 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 19 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 22 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 23 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 25 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 27 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 28 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 31 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 32 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 34 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 35 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 37 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 39 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 40 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" FROM DUAL) "Values"), 
"DT_Output_1" AS 
(SELECT "DT_node_lookup_1"."KEY" AS "KEY", "DT_node_lookup_1".node_id_2 AS node_id_2, "DT_node_data_1".nid AS nid, "DT_node_data_1"."P_0.0" AS "P_0.0", "DT_node_data_1"."P_1.0" AS "P_1.0", "DT_node_data_1"."P_2.0" AS "P_2.0", "DT_node_data_1"."P_3.0" AS "P_3.0", "DT_node_data_1"."D" AS "D", "DT_node_data_1"."DP" AS "DP" 
FROM "DT_node_lookup_1" LEFT OUTER JOIN "DT_node_data_1" ON "DT_node_lookup_1".node_id_2 = "DT_node_data_1".nid), 
"RF_Model_1" AS 
(SELECT "DT_Output_1"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output_1"."P_0.0" AS "Proba_0", CASE WHEN ("DT_Output_1"."P_0.0" IS NULL OR "DT_Output_1"."P_0.0" > 0.0) THEN ln("DT_Output_1"."P_0.0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output_1"."P_1.0" AS "Proba_1", CASE WHEN ("DT_Output_1"."P_1.0" IS NULL OR "DT_Output_1"."P_1.0" > 0.0) THEN ln("DT_Output_1"."P_1.0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_1", CAST(NULL AS BINARY_DOUBLE) AS "Score_2", "DT_Output_1"."P_2.0" AS "Proba_2", CASE WHEN ("DT_Output_1"."P_2.0" IS NULL OR "DT_Output_1"."P_2.0" > 0.0) THEN ln("DT_Output_1"."P_2.0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_2", CAST(NULL AS BINARY_DOUBLE) AS "Score_3", "DT_Output_1"."P_3.0" AS "Proba_3", CASE WHEN ("DT_Output_1"."P_3.0" IS NULL OR "DT_Output_1"."P_3.0" > 0.0) THEN ln("DT_Output_1"."P_3.0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_3" 
FROM "DT_Output_1"), 
"DT_node_lookup_2" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_56" <= -2.911862850189209) THEN CASE WHEN ("ADS"."Feature_2" <= -0.5149670839309692) THEN CASE WHEN ("ADS"."Feature_56" <= -4.635003089904785) THEN CASE WHEN ("ADS"."Feature_74" <= -1.206205129623413) THEN 4 ELSE 5 END ELSE 6 END ELSE CASE WHEN ("ADS"."Feature_94" <= -0.2808651626110077) THEN 8 ELSE CASE WHEN ("ADS"."Feature_82" <= 0.5174555778503418) THEN CASE WHEN ("ADS"."Feature_70" <= 1.4284355640411377) THEN 11 ELSE 12 END ELSE 13 END END END ELSE CASE WHEN ("ADS"."Feature_24" <= 0.47453591227531433) THEN CASE WHEN ("ADS"."Feature_96" <= -1.3772263526916504) THEN 16 ELSE CASE WHEN ("ADS"."Feature_21" <= -0.3934338092803955) THEN CASE WHEN ("ADS"."Feature_89" <= 0.7237262725830078) THEN 19 ELSE CASE WHEN ("ADS"."Feature_61" <= -0.08900528401136398) THEN 21 ELSE CASE WHEN ("ADS"."Feature_41" <= 0.8839997053146362) THEN 23 ELSE 24 END END END ELSE CASE WHEN ("ADS"."Feature_33" <= -1.034287929534912) THEN 26 ELSE 27 END END END ELSE CASE WHEN ("ADS"."Feature_41" <= 0.7087945938110352) THEN CASE WHEN ("ADS"."Feature_29" <= 0.6531289219856262) THEN 30 ELSE CASE WHEN ("ADS"."Feature_7" <= -0.47305911779403687) THEN 32 ELSE CASE WHEN ("ADS"."Feature_36" <= -0.04683502018451691) THEN 34 ELSE 35 END END END ELSE 36 END END END AS node_id_2 
FROM "FOURCLASS_100" "ADS"), 
"DT_node_data_2" AS 
(SELECT "Values".nid AS nid, CAST("Values"."P_0.0" AS BINARY_DOUBLE) AS "P_0.0", CAST("Values"."P_1.0" AS BINARY_DOUBLE) AS "P_1.0", CAST("Values"."P_2.0" AS BINARY_DOUBLE) AS "P_2.0", CAST("Values"."P_3.0" AS BINARY_DOUBLE) AS "P_3.0", CAST("Values"."D" AS BINARY_DOUBLE) AS "D", CAST("Values"."DP" AS BINARY_DOUBLE) AS "DP" 
FROM (SELECT 4 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 5 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 6 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 8 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 11 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 12 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 13 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 16 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 19 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 21 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 23 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 24 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 26 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 27 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 30 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 32 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 34 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 35 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 36 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" FROM DUAL) "Values"), 
"DT_Output_2" AS 
(SELECT "DT_node_lookup_2"."KEY" AS "KEY", "DT_node_lookup_2".node_id_2 AS node_id_2, "DT_node_data_2".nid AS nid, "DT_node_data_2"."P_0.0" AS "P_0.0", "DT_node_data_2"."P_1.0" AS "P_1.0", "DT_node_data_2"."P_2.0" AS "P_2.0", "DT_node_data_2"."P_3.0" AS "P_3.0", "DT_node_data_2"."D" AS "D", "DT_node_data_2"."DP" AS "DP" 
FROM "DT_node_lookup_2" LEFT OUTER JOIN "DT_node_data_2" ON "DT_node_lookup_2".node_id_2 = "DT_node_data_2".nid), 
"RF_Model_2" AS 
(SELECT "DT_Output_2"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output_2"."P_0.0" AS "Proba_0", CASE WHEN ("DT_Output_2"."P_0.0" IS NULL OR "DT_Output_2"."P_0.0" > 0.0) THEN ln("DT_Output_2"."P_0.0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output_2"."P_1.0" AS "Proba_1", CASE WHEN ("DT_Output_2"."P_1.0" IS NULL OR "DT_Output_2"."P_1.0" > 0.0) THEN ln("DT_Output_2"."P_1.0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_1", CAST(NULL AS BINARY_DOUBLE) AS "Score_2", "DT_Output_2"."P_2.0" AS "Proba_2", CASE WHEN ("DT_Output_2"."P_2.0" IS NULL OR "DT_Output_2"."P_2.0" > 0.0) THEN ln("DT_Output_2"."P_2.0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_2", CAST(NULL AS BINARY_DOUBLE) AS "Score_3", "DT_Output_2"."P_3.0" AS "Proba_3", CASE WHEN ("DT_Output_2"."P_3.0" IS NULL OR "DT_Output_2"."P_3.0" > 0.0) THEN ln("DT_Output_2"."P_3.0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_3" 
FROM "DT_Output_2"), 
"DT_node_lookup_3" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_41" <= 0.6812763214111328) THEN CASE WHEN ("ADS"."Feature_42" <= -0.975092887878418) THEN CASE WHEN ("ADS"."Feature_96" <= 0.40261581540107727) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_69" <= 1.2575531005859375) THEN CASE WHEN ("ADS"."Feature_5" <= -0.1481621414422989) THEN CASE WHEN ("ADS"."Feature_45" <= -0.7189580202102661) THEN CASE WHEN ("ADS"."Feature_10" <= -1.0125744342803955) THEN 9 ELSE CASE WHEN ("ADS"."Feature_71" <= 0.10227470099925995) THEN 11 ELSE 12 END END ELSE CASE WHEN ("ADS"."Feature_51" <= 2.0370028018951416) THEN 14 ELSE 15 END END ELSE CASE WHEN ("ADS"."Feature_69" <= 0.5642804503440857) THEN CASE WHEN ("ADS"."Feature_25" <= -0.19116893410682678) THEN CASE WHEN ("ADS"."Feature_12" <= 1.1158251762390137) THEN 19 ELSE 20 END ELSE CASE WHEN ("ADS"."Feature_14" <= -0.3974980413913727) THEN 22 ELSE 23 END END ELSE CASE WHEN ("ADS"."Feature_75" <= 1.342522382736206) THEN 25 ELSE 26 END END END ELSE CASE WHEN ("ADS"."Feature_10" <= -1.8646533489227295) THEN 28 ELSE 29 END END END ELSE CASE WHEN ("ADS"."Feature_19" <= -0.5565687417984009) THEN 31 ELSE CASE WHEN ("ADS"."Feature_53" <= 2.644408941268921) THEN CASE WHEN ("ADS"."Feature_92" <= -0.5938350558280945) THEN 34 ELSE 35 END ELSE CASE WHEN ("ADS"."Feature_87" <= 0.5887751579284668) THEN 37 ELSE 38 END END END END AS node_id_2 
FROM "FOURCLASS_100" "ADS"), 
"DT_node_data_3" AS 
(SELECT "Values".nid AS nid, CAST("Values"."P_0.0" AS BINARY_DOUBLE) AS "P_0.0", CAST("Values"."P_1.0" AS BINARY_DOUBLE) AS "P_1.0", CAST("Values"."P_2.0" AS BINARY_DOUBLE) AS "P_2.0", CAST("Values"."P_3.0" AS BINARY_DOUBLE) AS "P_3.0", CAST("Values"."D" AS BINARY_DOUBLE) AS "D", CAST("Values"."DP" AS BINARY_DOUBLE) AS "DP" 
FROM (SELECT 3 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 4 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 9 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 11 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 12 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 14 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 15 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 19 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 20 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 22 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 23 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 25 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 26 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 28 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 29 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 31 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 34 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 35 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 37 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 38 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" FROM DUAL) "Values"), 
"DT_Output_3" AS 
(SELECT "DT_node_lookup_3"."KEY" AS "KEY", "DT_node_lookup_3".node_id_2 AS node_id_2, "DT_node_data_3".nid AS nid, "DT_node_data_3"."P_0.0" AS "P_0.0", "DT_node_data_3"."P_1.0" AS "P_1.0", "DT_node_data_3"."P_2.0" AS "P_2.0", "DT_node_data_3"."P_3.0" AS "P_3.0", "DT_node_data_3"."D" AS "D", "DT_node_data_3"."DP" AS "DP" 
FROM "DT_node_lookup_3" LEFT OUTER JOIN "DT_node_data_3" ON "DT_node_lookup_3".node_id_2 = "DT_node_data_3".nid), 
"RF_Model_3" AS 
(SELECT "DT_Output_3"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output_3"."P_0.0" AS "Proba_0", CASE WHEN ("DT_Output_3"."P_0.0" IS NULL OR "DT_Output_3"."P_0.0" > 0.0) THEN ln("DT_Output_3"."P_0.0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output_3"."P_1.0" AS "Proba_1", CASE WHEN ("DT_Output_3"."P_1.0" IS NULL OR "DT_Output_3"."P_1.0" > 0.0) THEN ln("DT_Output_3"."P_1.0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_1", CAST(NULL AS BINARY_DOUBLE) AS "Score_2", "DT_Output_3"."P_2.0" AS "Proba_2", CASE WHEN ("DT_Output_3"."P_2.0" IS NULL OR "DT_Output_3"."P_2.0" > 0.0) THEN ln("DT_Output_3"."P_2.0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_2", CAST(NULL AS BINARY_DOUBLE) AS "Score_3", "DT_Output_3"."P_3.0" AS "Proba_3", CASE WHEN ("DT_Output_3"."P_3.0" IS NULL OR "DT_Output_3"."P_3.0" > 0.0) THEN ln("DT_Output_3"."P_3.0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_3" 
FROM "DT_Output_3"), 
"DT_node_lookup_4" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_77" <= 1.2399883270263672) THEN CASE WHEN ("ADS"."Feature_91" <= -0.14450274407863617) THEN CASE WHEN ("ADS"."Feature_46" <= -0.18871530890464783) THEN CASE WHEN ("ADS"."Feature_8" <= 0.03080693632364273) THEN CASE WHEN ("ADS"."Feature_51" <= -2.5124404430389404) THEN 5 ELSE 6 END ELSE 7 END ELSE CASE WHEN ("ADS"."Feature_92" <= 0.07349112629890442) THEN 9 ELSE CASE WHEN ("ADS"."Feature_6" <= 0.36955708265304565) THEN CASE WHEN ("ADS"."Feature_63" <= -1.3905309438705444) THEN 12 ELSE 13 END ELSE CASE WHEN ("ADS"."Feature_84" <= -0.3265901207923889) THEN 15 ELSE 16 END END END END ELSE CASE WHEN ("ADS"."Feature_87" <= 0.4710720181465149) THEN CASE WHEN ("ADS"."Feature_83" <= 0.6263594627380371) THEN CASE WHEN ("ADS"."Feature_44" <= -0.8896979093551636) THEN CASE WHEN ("ADS"."Feature_44" <= -2.9961094856262207) THEN 21 ELSE 22 END ELSE CASE WHEN ("ADS"."Feature_70" <= -0.5203946828842163) THEN 24 ELSE CASE WHEN ("ADS"."Feature_81" <= -0.4663102626800537) THEN 26 ELSE CASE WHEN ("ADS"."Feature_68" <= 0.9961568117141724) THEN 28 ELSE 29 END END END END ELSE CASE WHEN ("ADS"."Feature_87" <= 0.03259318694472313) THEN 31 ELSE 32 END END ELSE CASE WHEN ("ADS"."Feature_32" <= 0.26671192049980164) THEN CASE WHEN ("ADS"."Feature_45" <= 0.938022255897522) THEN 35 ELSE 36 END ELSE CASE WHEN ("ADS"."Feature_19" <= 0.22918567061424255) THEN 38 ELSE 39 END END END END ELSE 40 END AS node_id_2 
FROM "FOURCLASS_100" "ADS"), 
"DT_node_data_4" AS 
(SELECT "Values".nid AS nid, CAST("Values"."P_0.0" AS BINARY_DOUBLE) AS "P_0.0", CAST("Values"."P_1.0" AS BINARY_DOUBLE) AS "P_1.0", CAST("Values"."P_2.0" AS BINARY_DOUBLE) AS "P_2.0", CAST("Values"."P_3.0" AS BINARY_DOUBLE) AS "P_3.0", CAST("Values"."D" AS BINARY_DOUBLE) AS "D", CAST("Values"."DP" AS BINARY_DOUBLE) AS "DP" 
FROM (SELECT 5 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 6 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 7 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 9 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 12 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 13 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 15 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 16 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 21 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 22 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 24 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 26 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 28 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 29 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 31 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 32 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 35 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 36 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 38 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 39 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 40 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" FROM DUAL) "Values"), 
"DT_Output_4" AS 
(SELECT "DT_node_lookup_4"."KEY" AS "KEY", "DT_node_lookup_4".node_id_2 AS node_id_2, "DT_node_data_4".nid AS nid, "DT_node_data_4"."P_0.0" AS "P_0.0", "DT_node_data_4"."P_1.0" AS "P_1.0", "DT_node_data_4"."P_2.0" AS "P_2.0", "DT_node_data_4"."P_3.0" AS "P_3.0", "DT_node_data_4"."D" AS "D", "DT_node_data_4"."DP" AS "DP" 
FROM "DT_node_lookup_4" LEFT OUTER JOIN "DT_node_data_4" ON "DT_node_lookup_4".node_id_2 = "DT_node_data_4".nid), 
"RF_Model_4" AS 
(SELECT "DT_Output_4"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output_4"."P_0.0" AS "Proba_0", CASE WHEN ("DT_Output_4"."P_0.0" IS NULL OR "DT_Output_4"."P_0.0" > 0.0) THEN ln("DT_Output_4"."P_0.0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output_4"."P_1.0" AS "Proba_1", CASE WHEN ("DT_Output_4"."P_1.0" IS NULL OR "DT_Output_4"."P_1.0" > 0.0) THEN ln("DT_Output_4"."P_1.0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_1", CAST(NULL AS BINARY_DOUBLE) AS "Score_2", "DT_Output_4"."P_2.0" AS "Proba_2", CASE WHEN ("DT_Output_4"."P_2.0" IS NULL OR "DT_Output_4"."P_2.0" > 0.0) THEN ln("DT_Output_4"."P_2.0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_2", CAST(NULL AS BINARY_DOUBLE) AS "Score_3", "DT_Output_4"."P_3.0" AS "Proba_3", CASE WHEN ("DT_Output_4"."P_3.0" IS NULL OR "DT_Output_4"."P_3.0" > 0.0) THEN ln("DT_Output_4"."P_3.0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_3" 
FROM "DT_Output_4"), 
"DT_node_lookup_5" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_56" <= 0.37852635979652405) THEN CASE WHEN ("ADS"."Feature_47" <= -0.5525532960891724) THEN CASE WHEN ("ADS"."Feature_12" <= 1.4743156433105469) THEN CASE WHEN ("ADS"."Feature_38" <= -0.5972155928611755) THEN 4 ELSE 5 END ELSE 6 END ELSE CASE WHEN ("ADS"."Feature_31" <= 0.2619132399559021) THEN CASE WHEN ("ADS"."Feature_82" <= -0.03218809515237808) THEN CASE WHEN ("ADS"."Feature_46" <= 1.5021750926971436) THEN CASE WHEN ("ADS"."Feature_38" <= 0.3871070444583893) THEN 11 ELSE CASE WHEN ("ADS"."Feature_75" <= -0.6572774648666382) THEN 13 ELSE 14 END END ELSE 15 END ELSE CASE WHEN ("ADS"."Feature_9" <= 0.7306522727012634) THEN CASE WHEN ("ADS"."Feature_71" <= 2.2072784900665283) THEN CASE WHEN ("ADS"."Feature_93" <= -0.8113163709640503) THEN 19 ELSE 20 END ELSE 21 END ELSE 22 END END ELSE CASE WHEN ("ADS"."Feature_90" <= 1.8618731498718262) THEN 24 ELSE 25 END END END ELSE CASE WHEN ("ADS"."Feature_72" <= 0.9992960691452026) THEN CASE WHEN ("ADS"."Feature_30" <= -0.601716935634613) THEN 28 ELSE CASE WHEN ("ADS"."Feature_38" <= 0.3018949627876282) THEN CASE WHEN ("ADS"."Feature_67" <= -0.1308799684047699) THEN 31 ELSE CASE WHEN ("ADS"."Feature_69" <= -1.2795696258544922) THEN 33 ELSE 34 END END ELSE CASE WHEN ("ADS"."Feature_46" <= 0.3908202648162842) THEN 36 ELSE 37 END END END ELSE CASE WHEN ("ADS"."Feature_15" <= -0.6133137941360474) THEN CASE WHEN ("ADS"."Feature_47" <= 1.9250562191009521) THEN 40 ELSE 41 END ELSE 42 END END END AS node_id_2 
FROM "FOURCLASS_100" "ADS"), 
"DT_node_data_5" AS 
(SELECT "Values".nid AS nid, CAST("Values"."P_0.0" AS BINARY_DOUBLE) AS "P_0.0", CAST("Values"."P_1.0" AS BINARY_DOUBLE) AS "P_1.0", CAST("Values"."P_2.0" AS BINARY_DOUBLE) AS "P_2.0", CAST("Values"."P_3.0" AS BINARY_DOUBLE) AS "P_3.0", CAST("Values"."D" AS BINARY_DOUBLE) AS "D", CAST("Values"."DP" AS BINARY_DOUBLE) AS "DP" 
FROM (SELECT 4 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 5 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 6 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 11 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 13 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 14 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 15 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 19 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 20 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 21 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 22 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 24 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 25 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 28 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 31 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 33 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 34 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 36 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 37 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 40 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 41 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 42 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" FROM DUAL) "Values"), 
"DT_Output_5" AS 
(SELECT "DT_node_lookup_5"."KEY" AS "KEY", "DT_node_lookup_5".node_id_2 AS node_id_2, "DT_node_data_5".nid AS nid, "DT_node_data_5"."P_0.0" AS "P_0.0", "DT_node_data_5"."P_1.0" AS "P_1.0", "DT_node_data_5"."P_2.0" AS "P_2.0", "DT_node_data_5"."P_3.0" AS "P_3.0", "DT_node_data_5"."D" AS "D", "DT_node_data_5"."DP" AS "DP" 
FROM "DT_node_lookup_5" LEFT OUTER JOIN "DT_node_data_5" ON "DT_node_lookup_5".node_id_2 = "DT_node_data_5".nid), 
"RF_Model_5" AS 
(SELECT "DT_Output_5"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output_5"."P_0.0" AS "Proba_0", CASE WHEN ("DT_Output_5"."P_0.0" IS NULL OR "DT_Output_5"."P_0.0" > 0.0) THEN ln("DT_Output_5"."P_0.0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output_5"."P_1.0" AS "Proba_1", CASE WHEN ("DT_Output_5"."P_1.0" IS NULL OR "DT_Output_5"."P_1.0" > 0.0) THEN ln("DT_Output_5"."P_1.0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_1", CAST(NULL AS BINARY_DOUBLE) AS "Score_2", "DT_Output_5"."P_2.0" AS "Proba_2", CASE WHEN ("DT_Output_5"."P_2.0" IS NULL OR "DT_Output_5"."P_2.0" > 0.0) THEN ln("DT_Output_5"."P_2.0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_2", CAST(NULL AS BINARY_DOUBLE) AS "Score_3", "DT_Output_5"."P_3.0" AS "Proba_3", CASE WHEN ("DT_Output_5"."P_3.0" IS NULL OR "DT_Output_5"."P_3.0" > 0.0) THEN ln("DT_Output_5"."P_3.0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_3" 
FROM "DT_Output_5"), 
"DT_node_lookup_6" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_71" <= 0.8836559653282166) THEN CASE WHEN ("ADS"."Feature_91" <= 0.16355794668197632) THEN CASE WHEN ("ADS"."Feature_59" <= -0.10585790872573853) THEN CASE WHEN ("ADS"."Feature_33" <= 0.14871282875537872) THEN CASE WHEN ("ADS"."Feature_41" <= 0.7229150533676147) THEN CASE WHEN ("ADS"."Feature_87" <= 1.4712142944335938) THEN 6 ELSE 7 END ELSE CASE WHEN ("ADS"."Feature_18" <= -1.1163207292556763) THEN 9 ELSE 10 END END ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_68" <= -1.1216784715652466) THEN 13 ELSE CASE WHEN ("ADS"."Feature_97" <= -0.08847849816083908) THEN CASE WHEN ("ADS"."Feature_83" <= 1.114375352859497) THEN 16 ELSE 17 END ELSE CASE WHEN ("ADS"."Feature_91" <= -0.22096899151802063) THEN 19 ELSE CASE WHEN ("ADS"."Feature_16" <= 1.0245331525802612) THEN 21 ELSE 22 END END END END END ELSE CASE WHEN ("ADS"."Feature_64" <= -0.002119172364473343) THEN CASE WHEN ("ADS"."Feature_32" <= 0.9890307188034058) THEN CASE WHEN ("ADS"."Feature_1" <= 1.34183669090271) THEN CASE WHEN ("ADS"."Feature_33" <= 0.5194782018661499) THEN 27 ELSE CASE WHEN ("ADS"."Feature_56" <= 1.4886270761489868) THEN 29 ELSE 30 END END ELSE 31 END ELSE 32 END ELSE CASE WHEN ("ADS"."Feature_90" <= -0.8329676389694214) THEN CASE WHEN ("ADS"."Feature_89" <= 0.29235103726387024) THEN 35 ELSE 36 END ELSE 37 END END END ELSE CASE WHEN ("ADS"."Feature_92" <= 0.16372115910053253) THEN CASE WHEN ("ADS"."Feature_24" <= 1.3707175254821777) THEN 40 ELSE 41 END ELSE CASE WHEN ("ADS"."Feature_69" <= 0.9057985544204712) THEN 43 ELSE 44 END END END AS node_id_2 
FROM "FOURCLASS_100" "ADS"), 
"DT_node_data_6" AS 
(SELECT "Values".nid AS nid, CAST("Values"."P_0.0" AS BINARY_DOUBLE) AS "P_0.0", CAST("Values"."P_1.0" AS BINARY_DOUBLE) AS "P_1.0", CAST("Values"."P_2.0" AS BINARY_DOUBLE) AS "P_2.0", CAST("Values"."P_3.0" AS BINARY_DOUBLE) AS "P_3.0", CAST("Values"."D" AS BINARY_DOUBLE) AS "D", CAST("Values"."DP" AS BINARY_DOUBLE) AS "DP" 
FROM (SELECT 6 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 7 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 9 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 10 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 11 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 13 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 16 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 17 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 19 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 21 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 22 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 27 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 29 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 30 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 31 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 32 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 35 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 36 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 37 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 40 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 41 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 43 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 44 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" FROM DUAL) "Values"), 
"DT_Output_6" AS 
(SELECT "DT_node_lookup_6"."KEY" AS "KEY", "DT_node_lookup_6".node_id_2 AS node_id_2, "DT_node_data_6".nid AS nid, "DT_node_data_6"."P_0.0" AS "P_0.0", "DT_node_data_6"."P_1.0" AS "P_1.0", "DT_node_data_6"."P_2.0" AS "P_2.0", "DT_node_data_6"."P_3.0" AS "P_3.0", "DT_node_data_6"."D" AS "D", "DT_node_data_6"."DP" AS "DP" 
FROM "DT_node_lookup_6" LEFT OUTER JOIN "DT_node_data_6" ON "DT_node_lookup_6".node_id_2 = "DT_node_data_6".nid), 
"RF_Model_6" AS 
(SELECT "DT_Output_6"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output_6"."P_0.0" AS "Proba_0", CASE WHEN ("DT_Output_6"."P_0.0" IS NULL OR "DT_Output_6"."P_0.0" > 0.0) THEN ln("DT_Output_6"."P_0.0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output_6"."P_1.0" AS "Proba_1", CASE WHEN ("DT_Output_6"."P_1.0" IS NULL OR "DT_Output_6"."P_1.0" > 0.0) THEN ln("DT_Output_6"."P_1.0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_1", CAST(NULL AS BINARY_DOUBLE) AS "Score_2", "DT_Output_6"."P_2.0" AS "Proba_2", CASE WHEN ("DT_Output_6"."P_2.0" IS NULL OR "DT_Output_6"."P_2.0" > 0.0) THEN ln("DT_Output_6"."P_2.0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_2", CAST(NULL AS BINARY_DOUBLE) AS "Score_3", "DT_Output_6"."P_3.0" AS "Proba_3", CASE WHEN ("DT_Output_6"."P_3.0" IS NULL OR "DT_Output_6"."P_3.0" > 0.0) THEN ln("DT_Output_6"."P_3.0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_3" 
FROM "DT_Output_6"), 
"DT_node_lookup_7" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_67" <= -1.659583568572998) THEN 1 ELSE CASE WHEN ("ADS"."Feature_44" <= -2.1092634201049805) THEN 3 ELSE CASE WHEN ("ADS"."Feature_99" <= -0.3237369656562805) THEN CASE WHEN ("ADS"."Feature_9" <= -0.7175924777984619) THEN CASE WHEN ("ADS"."Feature_52" <= 0.4660970866680145) THEN 7 ELSE 8 END ELSE CASE WHEN ("ADS"."Feature_73" <= -0.11650481820106506) THEN CASE WHEN ("ADS"."Feature_33" <= 0.3792915940284729) THEN CASE WHEN ("ADS"."Feature_17" <= 1.0318975448608398) THEN 12 ELSE 13 END ELSE 14 END ELSE CASE WHEN ("ADS"."Feature_71" <= 0.7512513399124146) THEN CASE WHEN ("ADS"."Feature_70" <= 1.2998323440551758) THEN 17 ELSE CASE WHEN ("ADS"."Feature_60" <= -0.17744140326976776) THEN 19 ELSE 20 END END ELSE 21 END END END ELSE CASE WHEN ("ADS"."Feature_29" <= -0.7183531522750854) THEN CASE WHEN ("ADS"."Feature_51" <= 3.2625927925109863) THEN 24 ELSE CASE WHEN ("ADS"."Feature_75" <= 0.09365054965019226) THEN 26 ELSE 27 END END ELSE CASE WHEN ("ADS"."Feature_95" <= -0.4910154938697815) THEN CASE WHEN ("ADS"."Feature_70" <= -0.04111047834157944) THEN CASE WHEN ("ADS"."Feature_11" <= -1.0236852169036865) THEN 31 ELSE 32 END ELSE CASE WHEN ("ADS"."Feature_40" <= 1.2461663484573364) THEN 34 ELSE 35 END END ELSE CASE WHEN ("ADS"."Feature_70" <= -0.17774222791194916) THEN 37 ELSE CASE WHEN ("ADS"."Feature_71" <= 0.603213369846344) THEN 39 ELSE CASE WHEN ("ADS"."Feature_51" <= 1.189400315284729) THEN 41 ELSE 42 END END END END END END END END AS node_id_2 
FROM "FOURCLASS_100" "ADS"), 
"DT_node_data_7" AS 
(SELECT "Values".nid AS nid, CAST("Values"."P_0.0" AS BINARY_DOUBLE) AS "P_0.0", CAST("Values"."P_1.0" AS BINARY_DOUBLE) AS "P_1.0", CAST("Values"."P_2.0" AS BINARY_DOUBLE) AS "P_2.0", CAST("Values"."P_3.0" AS BINARY_DOUBLE) AS "P_3.0", CAST("Values"."D" AS BINARY_DOUBLE) AS "D", CAST("Values"."DP" AS BINARY_DOUBLE) AS "DP" 
FROM (SELECT 1 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 3 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 7 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 8 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 12 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 13 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 14 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 17 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 19 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 20 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 21 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 24 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 26 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 27 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 31 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 32 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 34 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 35 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 37 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 39 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 41 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 42 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" FROM DUAL) "Values"), 
"DT_Output_7" AS 
(SELECT "DT_node_lookup_7"."KEY" AS "KEY", "DT_node_lookup_7".node_id_2 AS node_id_2, "DT_node_data_7".nid AS nid, "DT_node_data_7"."P_0.0" AS "P_0.0", "DT_node_data_7"."P_1.0" AS "P_1.0", "DT_node_data_7"."P_2.0" AS "P_2.0", "DT_node_data_7"."P_3.0" AS "P_3.0", "DT_node_data_7"."D" AS "D", "DT_node_data_7"."DP" AS "DP" 
FROM "DT_node_lookup_7" LEFT OUTER JOIN "DT_node_data_7" ON "DT_node_lookup_7".node_id_2 = "DT_node_data_7".nid), 
"RF_Model_7" AS 
(SELECT "DT_Output_7"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output_7"."P_0.0" AS "Proba_0", CASE WHEN ("DT_Output_7"."P_0.0" IS NULL OR "DT_Output_7"."P_0.0" > 0.0) THEN ln("DT_Output_7"."P_0.0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output_7"."P_1.0" AS "Proba_1", CASE WHEN ("DT_Output_7"."P_1.0" IS NULL OR "DT_Output_7"."P_1.0" > 0.0) THEN ln("DT_Output_7"."P_1.0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_1", CAST(NULL AS BINARY_DOUBLE) AS "Score_2", "DT_Output_7"."P_2.0" AS "Proba_2", CASE WHEN ("DT_Output_7"."P_2.0" IS NULL OR "DT_Output_7"."P_2.0" > 0.0) THEN ln("DT_Output_7"."P_2.0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_2", CAST(NULL AS BINARY_DOUBLE) AS "Score_3", "DT_Output_7"."P_3.0" AS "Proba_3", CASE WHEN ("DT_Output_7"."P_3.0" IS NULL OR "DT_Output_7"."P_3.0" > 0.0) THEN ln("DT_Output_7"."P_3.0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_3" 
FROM "DT_Output_7"), 
"DT_node_lookup_8" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_96" <= 1.443886637687683) THEN CASE WHEN ("ADS"."Feature_19" <= -0.5243173837661743) THEN CASE WHEN ("ADS"."Feature_58" <= 0.9760615825653076) THEN CASE WHEN ("ADS"."Feature_79" <= 0.10795290023088455) THEN CASE WHEN ("ADS"."Feature_55" <= -0.5163384675979614) THEN 5 ELSE 6 END ELSE CASE WHEN ("ADS"."Feature_80" <= 0.6898255348205566) THEN 8 ELSE 9 END END ELSE CASE WHEN ("ADS"."Feature_76" <= 0.8984529972076416) THEN CASE WHEN ("ADS"."Feature_30" <= 0.8080693483352661) THEN CASE WHEN ("ADS"."Feature_47" <= -0.1394159197807312) THEN CASE WHEN ("ADS"."Feature_32" <= -0.505994439125061) THEN 14 ELSE CASE WHEN ("ADS"."Feature_74" <= 0.48734137415885925) THEN 16 ELSE 17 END END ELSE 18 END ELSE 19 END ELSE 20 END END ELSE CASE WHEN ("ADS"."Feature_96" <= 0.5078103542327881) THEN CASE WHEN ("ADS"."Feature_11" <= -0.2964703440666199) THEN CASE WHEN ("ADS"."Feature_62" <= -1.467550277709961) THEN 24 ELSE 25 END ELSE CASE WHEN ("ADS"."Feature_29" <= 0.9955036640167236) THEN CASE WHEN ("ADS"."Feature_18" <= 1.3227509260177612) THEN CASE WHEN ("ADS"."Feature_28" <= -0.43894147872924805) THEN CASE WHEN ("ADS"."Feature_23" <= -1.559311866760254) THEN 30 ELSE CASE WHEN ("ADS"."Feature_9" <= 0.1958850771188736) THEN 32 ELSE 33 END END ELSE 34 END ELSE 35 END ELSE CASE WHEN ("ADS"."Feature_44" <= -0.23404978215694427) THEN 37 ELSE 38 END END END ELSE CASE WHEN ("ADS"."Feature_44" <= 1.172381043434143) THEN CASE WHEN ("ADS"."Feature_42" <= -0.5711535811424255) THEN 41 ELSE 42 END ELSE CASE WHEN ("ADS"."Feature_46" <= 0.9780033826828003) THEN CASE WHEN ("ADS"."Feature_12" <= -1.1348793506622314) THEN 45 ELSE 46 END ELSE 47 END END END END ELSE 48 END AS node_id_2 
FROM "FOURCLASS_100" "ADS"), 
"DT_node_data_8" AS 
(SELECT "Values".nid AS nid, CAST("Values"."P_0.0" AS BINARY_DOUBLE) AS "P_0.0", CAST("Values"."P_1.0" AS BINARY_DOUBLE) AS "P_1.0", CAST("Values"."P_2.0" AS BINARY_DOUBLE) AS "P_2.0", CAST("Values"."P_3.0" AS BINARY_DOUBLE) AS "P_3.0", CAST("Values"."D" AS BINARY_DOUBLE) AS "D", CAST("Values"."DP" AS BINARY_DOUBLE) AS "DP" 
FROM (SELECT 5 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 6 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 8 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 9 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 14 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 16 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 17 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 18 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 19 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 20 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 24 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 25 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 30 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 32 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 33 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 34 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 35 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 37 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 38 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 41 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 42 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 45 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 46 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 47 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 48 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" FROM DUAL) "Values"), 
"DT_Output_8" AS 
(SELECT "DT_node_lookup_8"."KEY" AS "KEY", "DT_node_lookup_8".node_id_2 AS node_id_2, "DT_node_data_8".nid AS nid, "DT_node_data_8"."P_0.0" AS "P_0.0", "DT_node_data_8"."P_1.0" AS "P_1.0", "DT_node_data_8"."P_2.0" AS "P_2.0", "DT_node_data_8"."P_3.0" AS "P_3.0", "DT_node_data_8"."D" AS "D", "DT_node_data_8"."DP" AS "DP" 
FROM "DT_node_lookup_8" LEFT OUTER JOIN "DT_node_data_8" ON "DT_node_lookup_8".node_id_2 = "DT_node_data_8".nid), 
"RF_Model_8" AS 
(SELECT "DT_Output_8"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output_8"."P_0.0" AS "Proba_0", CASE WHEN ("DT_Output_8"."P_0.0" IS NULL OR "DT_Output_8"."P_0.0" > 0.0) THEN ln("DT_Output_8"."P_0.0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output_8"."P_1.0" AS "Proba_1", CASE WHEN ("DT_Output_8"."P_1.0" IS NULL OR "DT_Output_8"."P_1.0" > 0.0) THEN ln("DT_Output_8"."P_1.0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_1", CAST(NULL AS BINARY_DOUBLE) AS "Score_2", "DT_Output_8"."P_2.0" AS "Proba_2", CASE WHEN ("DT_Output_8"."P_2.0" IS NULL OR "DT_Output_8"."P_2.0" > 0.0) THEN ln("DT_Output_8"."P_2.0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_2", CAST(NULL AS BINARY_DOUBLE) AS "Score_3", "DT_Output_8"."P_3.0" AS "Proba_3", CASE WHEN ("DT_Output_8"."P_3.0" IS NULL OR "DT_Output_8"."P_3.0" > 0.0) THEN ln("DT_Output_8"."P_3.0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_3" 
FROM "DT_Output_8"), 
"DT_node_lookup_9" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_68" <= -0.3964340090751648) THEN CASE WHEN ("ADS"."Feature_71" <= 0.7337297201156616) THEN CASE WHEN ("ADS"."Feature_11" <= 1.259221076965332) THEN CASE WHEN ("ADS"."Feature_35" <= -0.15478017926216125) THEN CASE WHEN ("ADS"."Feature_8" <= 0.03819380700588226) THEN 5 ELSE CASE WHEN ("ADS"."Feature_41" <= -0.32092568278312683) THEN 7 ELSE 8 END END ELSE CASE WHEN ("ADS"."Feature_65" <= -0.9667724370956421) THEN 10 ELSE CASE WHEN ("ADS"."Feature_29" <= -0.38237008452415466) THEN 12 ELSE 13 END END END ELSE 14 END ELSE 15 END ELSE CASE WHEN ("ADS"."Feature_93" <= 0.4800719618797302) THEN CASE WHEN ("ADS"."Feature_8" <= 1.1960835456848145) THEN CASE WHEN ("ADS"."Feature_42" <= -0.8414431810379028) THEN 19 ELSE CASE WHEN ("ADS"."Feature_34" <= 0.6002828478813171) THEN CASE WHEN ("ADS"."Feature_86" <= -1.3131427764892578) THEN CASE WHEN ("ADS"."Feature_52" <= 0.24499894678592682) THEN 23 ELSE 24 END ELSE 25 END ELSE CASE WHEN ("ADS"."Feature_23" <= 0.9973589777946472) THEN 27 ELSE 28 END END END ELSE CASE WHEN ("ADS"."Feature_1" <= -0.19744673371315002) THEN 30 ELSE 31 END END ELSE CASE WHEN ("ADS"."Feature_34" <= -0.4948374032974243) THEN CASE WHEN ("ADS"."Feature_33" <= 0.4359830617904663) THEN 34 ELSE 35 END ELSE CASE WHEN ("ADS"."Feature_96" <= -0.4021235704421997) THEN 37 ELSE CASE WHEN ("ADS"."Feature_91" <= 1.4282407760620117) THEN 39 ELSE 40 END END END END END AS node_id_2 
FROM "FOURCLASS_100" "ADS"), 
"DT_node_data_9" AS 
(SELECT "Values".nid AS nid, CAST("Values"."P_0.0" AS BINARY_DOUBLE) AS "P_0.0", CAST("Values"."P_1.0" AS BINARY_DOUBLE) AS "P_1.0", CAST("Values"."P_2.0" AS BINARY_DOUBLE) AS "P_2.0", CAST("Values"."P_3.0" AS BINARY_DOUBLE) AS "P_3.0", CAST("Values"."D" AS BINARY_DOUBLE) AS "D", CAST("Values"."DP" AS BINARY_DOUBLE) AS "DP" 
FROM (SELECT 5 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 7 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 8 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 10 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 12 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 13 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 14 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 15 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 19 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 23 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 24 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 25 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 27 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 28 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 30 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 31 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 34 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 35 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 37 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 39 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 40 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" FROM DUAL) "Values"), 
"DT_Output_9" AS 
(SELECT "DT_node_lookup_9"."KEY" AS "KEY", "DT_node_lookup_9".node_id_2 AS node_id_2, "DT_node_data_9".nid AS nid, "DT_node_data_9"."P_0.0" AS "P_0.0", "DT_node_data_9"."P_1.0" AS "P_1.0", "DT_node_data_9"."P_2.0" AS "P_2.0", "DT_node_data_9"."P_3.0" AS "P_3.0", "DT_node_data_9"."D" AS "D", "DT_node_data_9"."DP" AS "DP" 
FROM "DT_node_lookup_9" LEFT OUTER JOIN "DT_node_data_9" ON "DT_node_lookup_9".node_id_2 = "DT_node_data_9".nid), 
"RF_Model_9" AS 
(SELECT "DT_Output_9"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output_9"."P_0.0" AS "Proba_0", CASE WHEN ("DT_Output_9"."P_0.0" IS NULL OR "DT_Output_9"."P_0.0" > 0.0) THEN ln("DT_Output_9"."P_0.0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output_9"."P_1.0" AS "Proba_1", CASE WHEN ("DT_Output_9"."P_1.0" IS NULL OR "DT_Output_9"."P_1.0" > 0.0) THEN ln("DT_Output_9"."P_1.0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_1", CAST(NULL AS BINARY_DOUBLE) AS "Score_2", "DT_Output_9"."P_2.0" AS "Proba_2", CASE WHEN ("DT_Output_9"."P_2.0" IS NULL OR "DT_Output_9"."P_2.0" > 0.0) THEN ln("DT_Output_9"."P_2.0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_2", CAST(NULL AS BINARY_DOUBLE) AS "Score_3", "DT_Output_9"."P_3.0" AS "Proba_3", CASE WHEN ("DT_Output_9"."P_3.0" IS NULL OR "DT_Output_9"."P_3.0" > 0.0) THEN ln("DT_Output_9"."P_3.0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_3" 
FROM "DT_Output_9")
 SELECT "RF_B0"."KEY", "RF_B0"."Score_0", "RF_B0"."Proba_0", "RF_B0"."LogProba_0", "RF_B0"."Score_1", "RF_B0"."Proba_1", "RF_B0"."LogProba_1", "RF_B0"."Score_2", "RF_B0"."Proba_2", "RF_B0"."LogProba_2", "RF_B0"."Score_3", "RF_B0"."Proba_3", "RF_B0"."LogProba_3" 
FROM (SELECT "RF_esu_0"."KEY" AS "KEY", "RF_esu_0"."Score_0" AS "Score_0", "RF_esu_0"."Proba_0" AS "Proba_0", "RF_esu_0"."LogProba_0" AS "LogProba_0", "RF_esu_0"."Score_1" AS "Score_1", "RF_esu_0"."Proba_1" AS "Proba_1", "RF_esu_0"."LogProba_1" AS "LogProba_1", "RF_esu_0"."Score_2" AS "Score_2", "RF_esu_0"."Proba_2" AS "Proba_2", "RF_esu_0"."LogProba_2" AS "LogProba_2", "RF_esu_0"."Score_3" AS "Score_3", "RF_esu_0"."Proba_3" AS "Proba_3", "RF_esu_0"."LogProba_3" AS "LogProba_3" 
FROM (SELECT "RF_Model_0"."KEY" AS "KEY", "RF_Model_0"."Score_0" AS "Score_0", "RF_Model_0"."Proba_0" AS "Proba_0", "RF_Model_0"."LogProba_0" AS "LogProba_0", "RF_Model_0"."Score_1" AS "Score_1", "RF_Model_0"."Proba_1" AS "Proba_1", "RF_Model_0"."LogProba_1" AS "LogProba_1", "RF_Model_0"."Score_2" AS "Score_2", "RF_Model_0"."Proba_2" AS "Proba_2", "RF_Model_0"."LogProba_2" AS "LogProba_2", "RF_Model_0"."Score_3" AS "Score_3", "RF_Model_0"."Proba_3" AS "Proba_3", "RF_Model_0"."LogProba_3" AS "LogProba_3" 
FROM "RF_Model_0" UNION ALL SELECT "RF_Model_1"."KEY" AS "KEY", "RF_Model_1"."Score_0" AS "Score_0", "RF_Model_1"."Proba_0" AS "Proba_0", "RF_Model_1"."LogProba_0" AS "LogProba_0", "RF_Model_1"."Score_1" AS "Score_1", "RF_Model_1"."Proba_1" AS "Proba_1", "RF_Model_1"."LogProba_1" AS "LogProba_1", "RF_Model_1"."Score_2" AS "Score_2", "RF_Model_1"."Proba_2" AS "Proba_2", "RF_Model_1"."LogProba_2" AS "LogProba_2", "RF_Model_1"."Score_3" AS "Score_3", "RF_Model_1"."Proba_3" AS "Proba_3", "RF_Model_1"."LogProba_3" AS "LogProba_3" 
FROM "RF_Model_1" UNION ALL SELECT "RF_Model_2"."KEY" AS "KEY", "RF_Model_2"."Score_0" AS "Score_0", "RF_Model_2"."Proba_0" AS "Proba_0", "RF_Model_2"."LogProba_0" AS "LogProba_0", "RF_Model_2"."Score_1" AS "Score_1", "RF_Model_2"."Proba_1" AS "Proba_1", "RF_Model_2"."LogProba_1" AS "LogProba_1", "RF_Model_2"."Score_2" AS "Score_2", "RF_Model_2"."Proba_2" AS "Proba_2", "RF_Model_2"."LogProba_2" AS "LogProba_2", "RF_Model_2"."Score_3" AS "Score_3", "RF_Model_2"."Proba_3" AS "Proba_3", "RF_Model_2"."LogProba_3" AS "LogProba_3" 
FROM "RF_Model_2" UNION ALL SELECT "RF_Model_3"."KEY" AS "KEY", "RF_Model_3"."Score_0" AS "Score_0", "RF_Model_3"."Proba_0" AS "Proba_0", "RF_Model_3"."LogProba_0" AS "LogProba_0", "RF_Model_3"."Score_1" AS "Score_1", "RF_Model_3"."Proba_1" AS "Proba_1", "RF_Model_3"."LogProba_1" AS "LogProba_1", "RF_Model_3"."Score_2" AS "Score_2", "RF_Model_3"."Proba_2" AS "Proba_2", "RF_Model_3"."LogProba_2" AS "LogProba_2", "RF_Model_3"."Score_3" AS "Score_3", "RF_Model_3"."Proba_3" AS "Proba_3", "RF_Model_3"."LogProba_3" AS "LogProba_3" 
FROM "RF_Model_3" UNION ALL SELECT "RF_Model_4"."KEY" AS "KEY", "RF_Model_4"."Score_0" AS "Score_0", "RF_Model_4"."Proba_0" AS "Proba_0", "RF_Model_4"."LogProba_0" AS "LogProba_0", "RF_Model_4"."Score_1" AS "Score_1", "RF_Model_4"."Proba_1" AS "Proba_1", "RF_Model_4"."LogProba_1" AS "LogProba_1", "RF_Model_4"."Score_2" AS "Score_2", "RF_Model_4"."Proba_2" AS "Proba_2", "RF_Model_4"."LogProba_2" AS "LogProba_2", "RF_Model_4"."Score_3" AS "Score_3", "RF_Model_4"."Proba_3" AS "Proba_3", "RF_Model_4"."LogProba_3" AS "LogProba_3" 
FROM "RF_Model_4" UNION ALL SELECT "RF_Model_5"."KEY" AS "KEY", "RF_Model_5"."Score_0" AS "Score_0", "RF_Model_5"."Proba_0" AS "Proba_0", "RF_Model_5"."LogProba_0" AS "LogProba_0", "RF_Model_5"."Score_1" AS "Score_1", "RF_Model_5"."Proba_1" AS "Proba_1", "RF_Model_5"."LogProba_1" AS "LogProba_1", "RF_Model_5"."Score_2" AS "Score_2", "RF_Model_5"."Proba_2" AS "Proba_2", "RF_Model_5"."LogProba_2" AS "LogProba_2", "RF_Model_5"."Score_3" AS "Score_3", "RF_Model_5"."Proba_3" AS "Proba_3", "RF_Model_5"."LogProba_3" AS "LogProba_3" 
FROM "RF_Model_5" UNION ALL SELECT "RF_Model_6"."KEY" AS "KEY", "RF_Model_6"."Score_0" AS "Score_0", "RF_Model_6"."Proba_0" AS "Proba_0", "RF_Model_6"."LogProba_0" AS "LogProba_0", "RF_Model_6"."Score_1" AS "Score_1", "RF_Model_6"."Proba_1" AS "Proba_1", "RF_Model_6"."LogProba_1" AS "LogProba_1", "RF_Model_6"."Score_2" AS "Score_2", "RF_Model_6"."Proba_2" AS "Proba_2", "RF_Model_6"."LogProba_2" AS "LogProba_2", "RF_Model_6"."Score_3" AS "Score_3", "RF_Model_6"."Proba_3" AS "Proba_3", "RF_Model_6"."LogProba_3" AS "LogProba_3" 
FROM "RF_Model_6" UNION ALL SELECT "RF_Model_7"."KEY" AS "KEY", "RF_Model_7"."Score_0" AS "Score_0", "RF_Model_7"."Proba_0" AS "Proba_0", "RF_Model_7"."LogProba_0" AS "LogProba_0", "RF_Model_7"."Score_1" AS "Score_1", "RF_Model_7"."Proba_1" AS "Proba_1", "RF_Model_7"."LogProba_1" AS "LogProba_1", "RF_Model_7"."Score_2" AS "Score_2", "RF_Model_7"."Proba_2" AS "Proba_2", "RF_Model_7"."LogProba_2" AS "LogProba_2", "RF_Model_7"."Score_3" AS "Score_3", "RF_Model_7"."Proba_3" AS "Proba_3", "RF_Model_7"."LogProba_3" AS "LogProba_3" 
FROM "RF_Model_7" UNION ALL SELECT "RF_Model_8"."KEY" AS "KEY", "RF_Model_8"."Score_0" AS "Score_0", "RF_Model_8"."Proba_0" AS "Proba_0", "RF_Model_8"."LogProba_0" AS "LogProba_0", "RF_Model_8"."Score_1" AS "Score_1", "RF_Model_8"."Proba_1" AS "Proba_1", "RF_Model_8"."LogProba_1" AS "LogProba_1", "RF_Model_8"."Score_2" AS "Score_2", "RF_Model_8"."Proba_2" AS "Proba_2", "RF_Model_8"."LogProba_2" AS "LogProba_2", "RF_Model_8"."Score_3" AS "Score_3", "RF_Model_8"."Proba_3" AS "Proba_3", "RF_Model_8"."LogProba_3" AS "LogProba_3" 
FROM "RF_Model_8" UNION ALL SELECT "RF_Model_9"."KEY" AS "KEY", "RF_Model_9"."Score_0" AS "Score_0", "RF_Model_9"."Proba_0" AS "Proba_0", "RF_Model_9"."LogProba_0" AS "LogProba_0", "RF_Model_9"."Score_1" AS "Score_1", "RF_Model_9"."Proba_1" AS "Proba_1", "RF_Model_9"."LogProba_1" AS "LogProba_1", "RF_Model_9"."Score_2" AS "Score_2", "RF_Model_9"."Proba_2" AS "Proba_2", "RF_Model_9"."LogProba_2" AS "LogProba_2", "RF_Model_9"."Score_3" AS "Score_3", "RF_Model_9"."Proba_3" AS "Proba_3", "RF_Model_9"."LogProba_3" AS "LogProba_3" 
FROM "RF_Model_9") "RF_esu_0") "RF_B0") "U"

-- Code For temporary table 80516_CODEGEN_L5RWG7_RF_B1 part 1. Create 


CREATE GLOBAL TEMPORARY TABLE "80516_CODEGEN_L5RWG7_RF_B1" (
	"KEY" NUMBER(19), 
	"Score_0" BINARY_DOUBLE, 
	"Proba_0" BINARY_DOUBLE, 
	"LogProba_0" BINARY_DOUBLE, 
	"Score_1" BINARY_DOUBLE, 
	"Proba_1" BINARY_DOUBLE, 
	"LogProba_1" BINARY_DOUBLE, 
	"Score_2" BINARY_DOUBLE, 
	"Proba_2" BINARY_DOUBLE, 
	"LogProba_2" BINARY_DOUBLE, 
	"Score_3" BINARY_DOUBLE, 
	"Proba_3" BINARY_DOUBLE, 
	"LogProba_3" BINARY_DOUBLE
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table 80516_CODEGEN_L5RWG7_RF_B1 part 2. Populate

INSERT INTO "80516_CODEGEN_L5RWG7_RF_B1" ("KEY", "Score_0", "Proba_0", "LogProba_0", "Score_1", "Proba_1", "LogProba_1", "Score_2", "Proba_2", "LogProba_2", "Score_3", "Proba_3", "LogProba_3") SELECT "U"."KEY", "U"."Score_0", "U"."Proba_0", "U"."LogProba_0", "U"."Score_1", "U"."Proba_1", "U"."LogProba_1", "U"."Score_2", "U"."Proba_2", "U"."LogProba_2", "U"."Score_3", "U"."Proba_3", "U"."LogProba_3" 
FROM (WITH "DT_node_lookup_10" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_73" <= 1.6641205549240112) THEN CASE WHEN ("ADS"."Feature_56" <= 0.6710653305053711) THEN CASE WHEN ("ADS"."Feature_94" <= 1.5053610801696777) THEN CASE WHEN ("ADS"."Feature_51" <= 3.0495033264160156) THEN CASE WHEN ("ADS"."Feature_56" <= -1.138293981552124) THEN CASE WHEN ("ADS"."Feature_54" <= 0.32513749599456787) THEN CASE WHEN ("ADS"."Feature_53" <= -3.0611824989318848) THEN 7 ELSE 8 END ELSE CASE WHEN ("ADS"."Feature_33" <= -0.5274901390075684) THEN 10 ELSE CASE WHEN ("ADS"."Feature_82" <= 1.0715925693511963) THEN CASE WHEN ("ADS"."Feature_5" <= -0.07872672379016876) THEN 13 ELSE 14 END ELSE 15 END END END ELSE CASE WHEN ("ADS"."Feature_27" <= 0.6374855041503906) THEN 17 ELSE CASE WHEN ("ADS"."Feature_51" <= 0.1841343492269516) THEN 19 ELSE 20 END END END ELSE 21 END ELSE 22 END ELSE CASE WHEN ("ADS"."Feature_62" <= 0.33532100915908813) THEN CASE WHEN ("ADS"."Feature_53" <= 2.106461763381958) THEN CASE WHEN ("ADS"."Feature_33" <= 0.6387379765510559) THEN 26 ELSE CASE WHEN ("ADS"."Feature_87" <= 0.2247212529182434) THEN 28 ELSE 29 END END ELSE CASE WHEN ("ADS"."Feature_19" <= -0.39912694692611694) THEN CASE WHEN ("ADS"."Feature_87" <= 0.2607893645763397) THEN 32 ELSE 33 END ELSE 34 END END ELSE CASE WHEN ("ADS"."Feature_23" <= -0.10857518017292023) THEN 36 ELSE 37 END END END ELSE CASE WHEN ("ADS"."Feature_75" <= -1.472202181816101) THEN 39 ELSE 40 END END AS node_id_2 
FROM "FOURCLASS_100" "ADS"), 
"DT_node_data_10" AS 
(SELECT "Values".nid AS nid, CAST("Values"."P_0.0" AS BINARY_DOUBLE) AS "P_0.0", CAST("Values"."P_1.0" AS BINARY_DOUBLE) AS "P_1.0", CAST("Values"."P_2.0" AS BINARY_DOUBLE) AS "P_2.0", CAST("Values"."P_3.0" AS BINARY_DOUBLE) AS "P_3.0", CAST("Values"."D" AS BINARY_DOUBLE) AS "D", CAST("Values"."DP" AS BINARY_DOUBLE) AS "DP" 
FROM (SELECT 7 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 8 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 10 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 13 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 14 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 15 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 17 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 19 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 20 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 21 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 22 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 26 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 28 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 29 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 32 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 33 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 34 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 36 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 37 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 39 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 40 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" FROM DUAL) "Values"), 
"DT_Output_10" AS 
(SELECT "DT_node_lookup_10"."KEY" AS "KEY", "DT_node_lookup_10".node_id_2 AS node_id_2, "DT_node_data_10".nid AS nid, "DT_node_data_10"."P_0.0" AS "P_0.0", "DT_node_data_10"."P_1.0" AS "P_1.0", "DT_node_data_10"."P_2.0" AS "P_2.0", "DT_node_data_10"."P_3.0" AS "P_3.0", "DT_node_data_10"."D" AS "D", "DT_node_data_10"."DP" AS "DP" 
FROM "DT_node_lookup_10" LEFT OUTER JOIN "DT_node_data_10" ON "DT_node_lookup_10".node_id_2 = "DT_node_data_10".nid), 
"RF_Model_10" AS 
(SELECT "DT_Output_10"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output_10"."P_0.0" AS "Proba_0", CASE WHEN ("DT_Output_10"."P_0.0" IS NULL OR "DT_Output_10"."P_0.0" > 0.0) THEN ln("DT_Output_10"."P_0.0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output_10"."P_1.0" AS "Proba_1", CASE WHEN ("DT_Output_10"."P_1.0" IS NULL OR "DT_Output_10"."P_1.0" > 0.0) THEN ln("DT_Output_10"."P_1.0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_1", CAST(NULL AS BINARY_DOUBLE) AS "Score_2", "DT_Output_10"."P_2.0" AS "Proba_2", CASE WHEN ("DT_Output_10"."P_2.0" IS NULL OR "DT_Output_10"."P_2.0" > 0.0) THEN ln("DT_Output_10"."P_2.0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_2", CAST(NULL AS BINARY_DOUBLE) AS "Score_3", "DT_Output_10"."P_3.0" AS "Proba_3", CASE WHEN ("DT_Output_10"."P_3.0" IS NULL OR "DT_Output_10"."P_3.0" > 0.0) THEN ln("DT_Output_10"."P_3.0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_3" 
FROM "DT_Output_10"), 
"DT_node_lookup_11" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_24" <= 0.5892128348350525) THEN CASE WHEN ("ADS"."Feature_78" <= -0.7860373258590698) THEN CASE WHEN ("ADS"."Feature_67" <= -0.12871003150939941) THEN CASE WHEN ("ADS"."Feature_60" <= 1.028817892074585) THEN CASE WHEN ("ADS"."Feature_90" <= 1.1918116807937622) THEN 5 ELSE 6 END ELSE 7 END ELSE CASE WHEN ("ADS"."Feature_56" <= -3.956645965576172) THEN 9 ELSE CASE WHEN ("ADS"."Feature_97" <= -0.10051272809505463) THEN 11 ELSE CASE WHEN ("ADS"."Feature_9" <= -0.52235347032547) THEN CASE WHEN ("ADS"."Feature_83" <= -0.15864622592926025) THEN 14 ELSE 15 END ELSE 16 END END END END ELSE CASE WHEN ("ADS"."Feature_25" <= 0.8278211355209351) THEN CASE WHEN ("ADS"."Feature_69" <= 1.6634972095489502) THEN CASE WHEN ("ADS"."Feature_85" <= -0.54183429479599) THEN CASE WHEN ("ADS"."Feature_12" <= -0.23733896017074585) THEN 21 ELSE CASE WHEN ("ADS"."Feature_76" <= 0.3792734146118164) THEN 23 ELSE 24 END END ELSE CASE WHEN ("ADS"."Feature_60" <= -1.6282904148101807) THEN 26 ELSE CASE WHEN ("ADS"."Feature_86" <= 0.9426428079605103) THEN 28 ELSE CASE WHEN ("ADS"."Feature_91" <= -0.09086257219314575) THEN 30 ELSE 31 END END END END ELSE CASE WHEN ("ADS"."Feature_36" <= 0.2856452763080597) THEN 33 ELSE 34 END END ELSE 35 END END ELSE CASE WHEN ("ADS"."Feature_14" <= -0.324061781167984) THEN CASE WHEN ("ADS"."Feature_16" <= -0.2744964063167572) THEN 38 ELSE 39 END ELSE CASE WHEN ("ADS"."Feature_57" <= 1.2342336177825928) THEN 41 ELSE CASE WHEN ("ADS"."Feature_74" <= 0.6675131320953369) THEN 43 ELSE 44 END END END END AS node_id_2 
FROM "FOURCLASS_100" "ADS"), 
"DT_node_data_11" AS 
(SELECT "Values".nid AS nid, CAST("Values"."P_0.0" AS BINARY_DOUBLE) AS "P_0.0", CAST("Values"."P_1.0" AS BINARY_DOUBLE) AS "P_1.0", CAST("Values"."P_2.0" AS BINARY_DOUBLE) AS "P_2.0", CAST("Values"."P_3.0" AS BINARY_DOUBLE) AS "P_3.0", CAST("Values"."D" AS BINARY_DOUBLE) AS "D", CAST("Values"."DP" AS BINARY_DOUBLE) AS "DP" 
FROM (SELECT 5 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 6 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 7 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 9 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 11 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 14 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 15 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 16 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 21 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 23 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 24 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 26 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 28 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 30 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 31 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 33 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 34 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 35 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 38 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 39 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 41 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 43 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 44 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" FROM DUAL) "Values"), 
"DT_Output_11" AS 
(SELECT "DT_node_lookup_11"."KEY" AS "KEY", "DT_node_lookup_11".node_id_2 AS node_id_2, "DT_node_data_11".nid AS nid, "DT_node_data_11"."P_0.0" AS "P_0.0", "DT_node_data_11"."P_1.0" AS "P_1.0", "DT_node_data_11"."P_2.0" AS "P_2.0", "DT_node_data_11"."P_3.0" AS "P_3.0", "DT_node_data_11"."D" AS "D", "DT_node_data_11"."DP" AS "DP" 
FROM "DT_node_lookup_11" LEFT OUTER JOIN "DT_node_data_11" ON "DT_node_lookup_11".node_id_2 = "DT_node_data_11".nid), 
"RF_Model_11" AS 
(SELECT "DT_Output_11"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output_11"."P_0.0" AS "Proba_0", CASE WHEN ("DT_Output_11"."P_0.0" IS NULL OR "DT_Output_11"."P_0.0" > 0.0) THEN ln("DT_Output_11"."P_0.0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output_11"."P_1.0" AS "Proba_1", CASE WHEN ("DT_Output_11"."P_1.0" IS NULL OR "DT_Output_11"."P_1.0" > 0.0) THEN ln("DT_Output_11"."P_1.0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_1", CAST(NULL AS BINARY_DOUBLE) AS "Score_2", "DT_Output_11"."P_2.0" AS "Proba_2", CASE WHEN ("DT_Output_11"."P_2.0" IS NULL OR "DT_Output_11"."P_2.0" > 0.0) THEN ln("DT_Output_11"."P_2.0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_2", CAST(NULL AS BINARY_DOUBLE) AS "Score_3", "DT_Output_11"."P_3.0" AS "Proba_3", CASE WHEN ("DT_Output_11"."P_3.0" IS NULL OR "DT_Output_11"."P_3.0" > 0.0) THEN ln("DT_Output_11"."P_3.0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_3" 
FROM "DT_Output_11"), 
"DT_node_lookup_12" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_71" <= 0.6812551021575928) THEN CASE WHEN ("ADS"."Feature_98" <= -1.5031542778015137) THEN 2 ELSE CASE WHEN ("ADS"."Feature_33" <= -0.8739383220672607) THEN CASE WHEN ("ADS"."Feature_16" <= 0.6236363649368286) THEN 5 ELSE CASE WHEN ("ADS"."Feature_95" <= -0.7947325110435486) THEN 7 ELSE 8 END END ELSE CASE WHEN ("ADS"."Feature_9" <= -0.05584600567817688) THEN CASE WHEN ("ADS"."Feature_88" <= 1.3013091087341309) THEN CASE WHEN ("ADS"."Feature_35" <= -0.4972797632217407) THEN CASE WHEN ("ADS"."Feature_85" <= 0.17001107335090637) THEN CASE WHEN ("ADS"."Feature_1" <= -0.8342361450195312) THEN 14 ELSE 15 END ELSE 16 END ELSE 17 END ELSE CASE WHEN ("ADS"."Feature_29" <= -1.8309555053710938) THEN 19 ELSE CASE WHEN ("ADS"."Feature_13" <= -0.025273285806179047) THEN 21 ELSE CASE WHEN ("ADS"."Feature_75" <= 0.29074835777282715) THEN 23 ELSE 24 END END END END ELSE CASE WHEN ("ADS"."Feature_93" <= -0.45558518171310425) THEN 26 ELSE CASE WHEN ("ADS"."Feature_99" <= 2.6758155822753906) THEN CASE WHEN ("ADS"."Feature_53" <= 1.4809341430664062) THEN CASE WHEN ("ADS"."Feature_23" <= 1.474241018295288) THEN 30 ELSE 31 END ELSE 32 END ELSE 33 END END END END END ELSE CASE WHEN ("ADS"."Feature_95" <= -0.43195921182632446) THEN 35 ELSE CASE WHEN ("ADS"."Feature_44" <= -2.4494237899780273) THEN 37 ELSE CASE WHEN ("ADS"."Feature_20" <= -0.4287315607070923) THEN 39 ELSE CASE WHEN ("ADS"."Feature_12" <= 0.10923604667186737) THEN 41 ELSE 42 END END END END END AS node_id_2 
FROM "FOURCLASS_100" "ADS"), 
"DT_node_data_12" AS 
(SELECT "Values".nid AS nid, CAST("Values"."P_0.0" AS BINARY_DOUBLE) AS "P_0.0", CAST("Values"."P_1.0" AS BINARY_DOUBLE) AS "P_1.0", CAST("Values"."P_2.0" AS BINARY_DOUBLE) AS "P_2.0", CAST("Values"."P_3.0" AS BINARY_DOUBLE) AS "P_3.0", CAST("Values"."D" AS BINARY_DOUBLE) AS "D", CAST("Values"."DP" AS BINARY_DOUBLE) AS "DP" 
FROM (SELECT 2 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 5 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 7 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 8 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 14 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 15 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 16 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 17 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 19 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 21 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 23 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 24 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 26 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 30 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 31 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 32 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 33 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 35 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 37 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 39 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 41 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 42 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" FROM DUAL) "Values"), 
"DT_Output_12" AS 
(SELECT "DT_node_lookup_12"."KEY" AS "KEY", "DT_node_lookup_12".node_id_2 AS node_id_2, "DT_node_data_12".nid AS nid, "DT_node_data_12"."P_0.0" AS "P_0.0", "DT_node_data_12"."P_1.0" AS "P_1.0", "DT_node_data_12"."P_2.0" AS "P_2.0", "DT_node_data_12"."P_3.0" AS "P_3.0", "DT_node_data_12"."D" AS "D", "DT_node_data_12"."DP" AS "DP" 
FROM "DT_node_lookup_12" LEFT OUTER JOIN "DT_node_data_12" ON "DT_node_lookup_12".node_id_2 = "DT_node_data_12".nid), 
"RF_Model_12" AS 
(SELECT "DT_Output_12"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output_12"."P_0.0" AS "Proba_0", CASE WHEN ("DT_Output_12"."P_0.0" IS NULL OR "DT_Output_12"."P_0.0" > 0.0) THEN ln("DT_Output_12"."P_0.0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output_12"."P_1.0" AS "Proba_1", CASE WHEN ("DT_Output_12"."P_1.0" IS NULL OR "DT_Output_12"."P_1.0" > 0.0) THEN ln("DT_Output_12"."P_1.0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_1", CAST(NULL AS BINARY_DOUBLE) AS "Score_2", "DT_Output_12"."P_2.0" AS "Proba_2", CASE WHEN ("DT_Output_12"."P_2.0" IS NULL OR "DT_Output_12"."P_2.0" > 0.0) THEN ln("DT_Output_12"."P_2.0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_2", CAST(NULL AS BINARY_DOUBLE) AS "Score_3", "DT_Output_12"."P_3.0" AS "Proba_3", CASE WHEN ("DT_Output_12"."P_3.0" IS NULL OR "DT_Output_12"."P_3.0" > 0.0) THEN ln("DT_Output_12"."P_3.0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_3" 
FROM "DT_Output_12"), 
"DT_node_lookup_13" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_68" <= -0.4814900755882263) THEN CASE WHEN ("ADS"."Feature_9" <= -1.1490826606750488) THEN CASE WHEN ("ADS"."Feature_88" <= 1.015899658203125) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_93" <= -0.8736599087715149) THEN CASE WHEN ("ADS"."Feature_60" <= 0.24349725246429443) THEN 7 ELSE 8 END ELSE CASE WHEN ("ADS"."Feature_90" <= -1.8340574502944946) THEN 10 ELSE 11 END END END ELSE CASE WHEN ("ADS"."Feature_20" <= -0.0854404866695404) THEN CASE WHEN ("ADS"."Feature_28" <= -0.48232048749923706) THEN CASE WHEN ("ADS"."Feature_58" <= -2.5162906646728516) THEN CASE WHEN ("ADS"."Feature_19" <= -0.19215552508831024) THEN 16 ELSE 17 END ELSE CASE WHEN ("ADS"."Feature_5" <= 0.6540847420692444) THEN 19 ELSE 20 END END ELSE CASE WHEN ("ADS"."Feature_92" <= 0.16372115910053253) THEN 22 ELSE CASE WHEN ("ADS"."Feature_13" <= -0.5646369457244873) THEN 24 ELSE CASE WHEN ("ADS"."Feature_31" <= -0.7322090268135071) THEN 26 ELSE 27 END END END END ELSE CASE WHEN ("ADS"."Feature_94" <= -0.3314339816570282) THEN CASE WHEN ("ADS"."Feature_19" <= 0.7653372287750244) THEN CASE WHEN ("ADS"."Feature_79" <= 0.6196461915969849) THEN 31 ELSE 32 END ELSE 33 END ELSE CASE WHEN ("ADS"."Feature_62" <= -0.8122302889823914) THEN CASE WHEN ("ADS"."Feature_33" <= 0.1336769312620163) THEN 36 ELSE 37 END ELSE CASE WHEN ("ADS"."Feature_86" <= -1.2778699398040771) THEN CASE WHEN ("ADS"."Feature_82" <= 0.2875085473060608) THEN 40 ELSE CASE WHEN ("ADS"."Feature_61" <= 0.5119550228118896) THEN 42 ELSE 43 END END ELSE CASE WHEN ("ADS"."Feature_0" <= -1.7787692546844482) THEN 45 ELSE CASE WHEN ("ADS"."Feature_33" <= 0.9283007979393005) THEN 47 ELSE 48 END END END END END END END AS node_id_2 
FROM "FOURCLASS_100" "ADS"), 
"DT_node_data_13" AS 
(SELECT "Values".nid AS nid, CAST("Values"."P_0.0" AS BINARY_DOUBLE) AS "P_0.0", CAST("Values"."P_1.0" AS BINARY_DOUBLE) AS "P_1.0", CAST("Values"."P_2.0" AS BINARY_DOUBLE) AS "P_2.0", CAST("Values"."P_3.0" AS BINARY_DOUBLE) AS "P_3.0", CAST("Values"."D" AS BINARY_DOUBLE) AS "D", CAST("Values"."DP" AS BINARY_DOUBLE) AS "DP" 
FROM (SELECT 3 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 4 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 7 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 8 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 10 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 11 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 16 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 17 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 19 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 20 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 22 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 24 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 26 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 27 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 31 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 32 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 33 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 36 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 37 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 40 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 42 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 43 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 45 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 47 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 48 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" FROM DUAL) "Values"), 
"DT_Output_13" AS 
(SELECT "DT_node_lookup_13"."KEY" AS "KEY", "DT_node_lookup_13".node_id_2 AS node_id_2, "DT_node_data_13".nid AS nid, "DT_node_data_13"."P_0.0" AS "P_0.0", "DT_node_data_13"."P_1.0" AS "P_1.0", "DT_node_data_13"."P_2.0" AS "P_2.0", "DT_node_data_13"."P_3.0" AS "P_3.0", "DT_node_data_13"."D" AS "D", "DT_node_data_13"."DP" AS "DP" 
FROM "DT_node_lookup_13" LEFT OUTER JOIN "DT_node_data_13" ON "DT_node_lookup_13".node_id_2 = "DT_node_data_13".nid), 
"RF_Model_13" AS 
(SELECT "DT_Output_13"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output_13"."P_0.0" AS "Proba_0", CASE WHEN ("DT_Output_13"."P_0.0" IS NULL OR "DT_Output_13"."P_0.0" > 0.0) THEN ln("DT_Output_13"."P_0.0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output_13"."P_1.0" AS "Proba_1", CASE WHEN ("DT_Output_13"."P_1.0" IS NULL OR "DT_Output_13"."P_1.0" > 0.0) THEN ln("DT_Output_13"."P_1.0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_1", CAST(NULL AS BINARY_DOUBLE) AS "Score_2", "DT_Output_13"."P_2.0" AS "Proba_2", CASE WHEN ("DT_Output_13"."P_2.0" IS NULL OR "DT_Output_13"."P_2.0" > 0.0) THEN ln("DT_Output_13"."P_2.0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_2", CAST(NULL AS BINARY_DOUBLE) AS "Score_3", "DT_Output_13"."P_3.0" AS "Proba_3", CASE WHEN ("DT_Output_13"."P_3.0" IS NULL OR "DT_Output_13"."P_3.0" > 0.0) THEN ln("DT_Output_13"."P_3.0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_3" 
FROM "DT_Output_13"), 
"DT_node_lookup_14" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_24" <= 0.2110154777765274) THEN CASE WHEN ("ADS"."Feature_20" <= -1.1230664253234863) THEN 2 ELSE CASE WHEN ("ADS"."Feature_42" <= 0.09335917979478836) THEN CASE WHEN ("ADS"."Feature_9" <= -0.373964786529541) THEN CASE WHEN ("ADS"."Feature_55" <= -0.4972727298736572) THEN CASE WHEN ("ADS"."Feature_45" <= 1.5031616687774658) THEN 7 ELSE 8 END ELSE 9 END ELSE CASE WHEN ("ADS"."Feature_99" <= 0.6257116198539734) THEN 11 ELSE CASE WHEN ("ADS"."Feature_91" <= -0.0927547812461853) THEN CASE WHEN ("ADS"."Feature_18" <= 1.552700161933899) THEN CASE WHEN ("ADS"."Feature_43" <= -0.506350040435791) THEN 15 ELSE 16 END ELSE 17 END ELSE 18 END END END ELSE CASE WHEN ("ADS"."Feature_17" <= -0.239972785115242) THEN CASE WHEN ("ADS"."Feature_27" <= 0.005673093721270561) THEN CASE WHEN ("ADS"."Feature_24" <= -0.32812994718551636) THEN 22 ELSE CASE WHEN ("ADS"."Feature_49" <= 0.23596960306167603) THEN 24 ELSE 25 END END ELSE CASE WHEN ("ADS"."Feature_27" <= 3.110680341720581) THEN 27 ELSE 28 END END ELSE 29 END END END ELSE CASE WHEN ("ADS"."Feature_18" <= -0.33795446157455444) THEN CASE WHEN ("ADS"."Feature_31" <= -1.0348149538040161) THEN 32 ELSE 33 END ELSE CASE WHEN ("ADS"."Feature_90" <= -0.40223148465156555) THEN CASE WHEN ("ADS"."Feature_93" <= -0.3877717852592468) THEN 36 ELSE 37 END ELSE CASE WHEN ("ADS"."Feature_41" <= 0.7087945938110352) THEN CASE WHEN ("ADS"."Feature_20" <= -1.414776086807251) THEN 40 ELSE 41 END ELSE 42 END END END END AS node_id_2 
FROM "FOURCLASS_100" "ADS"), 
"DT_node_data_14" AS 
(SELECT "Values".nid AS nid, CAST("Values"."P_0.0" AS BINARY_DOUBLE) AS "P_0.0", CAST("Values"."P_1.0" AS BINARY_DOUBLE) AS "P_1.0", CAST("Values"."P_2.0" AS BINARY_DOUBLE) AS "P_2.0", CAST("Values"."P_3.0" AS BINARY_DOUBLE) AS "P_3.0", CAST("Values"."D" AS BINARY_DOUBLE) AS "D", CAST("Values"."DP" AS BINARY_DOUBLE) AS "DP" 
FROM (SELECT 2 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 7 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 8 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 9 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 11 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 15 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 16 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 17 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 18 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 22 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 24 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 25 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 27 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 28 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 29 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 32 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 33 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 36 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 37 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 40 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 41 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 42 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" FROM DUAL) "Values"), 
"DT_Output_14" AS 
(SELECT "DT_node_lookup_14"."KEY" AS "KEY", "DT_node_lookup_14".node_id_2 AS node_id_2, "DT_node_data_14".nid AS nid, "DT_node_data_14"."P_0.0" AS "P_0.0", "DT_node_data_14"."P_1.0" AS "P_1.0", "DT_node_data_14"."P_2.0" AS "P_2.0", "DT_node_data_14"."P_3.0" AS "P_3.0", "DT_node_data_14"."D" AS "D", "DT_node_data_14"."DP" AS "DP" 
FROM "DT_node_lookup_14" LEFT OUTER JOIN "DT_node_data_14" ON "DT_node_lookup_14".node_id_2 = "DT_node_data_14".nid), 
"RF_Model_14" AS 
(SELECT "DT_Output_14"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output_14"."P_0.0" AS "Proba_0", CASE WHEN ("DT_Output_14"."P_0.0" IS NULL OR "DT_Output_14"."P_0.0" > 0.0) THEN ln("DT_Output_14"."P_0.0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output_14"."P_1.0" AS "Proba_1", CASE WHEN ("DT_Output_14"."P_1.0" IS NULL OR "DT_Output_14"."P_1.0" > 0.0) THEN ln("DT_Output_14"."P_1.0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_1", CAST(NULL AS BINARY_DOUBLE) AS "Score_2", "DT_Output_14"."P_2.0" AS "Proba_2", CASE WHEN ("DT_Output_14"."P_2.0" IS NULL OR "DT_Output_14"."P_2.0" > 0.0) THEN ln("DT_Output_14"."P_2.0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_2", CAST(NULL AS BINARY_DOUBLE) AS "Score_3", "DT_Output_14"."P_3.0" AS "Proba_3", CASE WHEN ("DT_Output_14"."P_3.0" IS NULL OR "DT_Output_14"."P_3.0" > 0.0) THEN ln("DT_Output_14"."P_3.0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_3" 
FROM "DT_Output_14"), 
"DT_node_lookup_15" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_41" <= 0.6812763214111328) THEN CASE WHEN ("ADS"."Feature_29" <= 0.08311790972948074) THEN CASE WHEN ("ADS"."Feature_9" <= -0.3872184157371521) THEN CASE WHEN ("ADS"."Feature_96" <= 1.5753014087677002) THEN CASE WHEN ("ADS"."Feature_61" <= -0.4194190502166748) THEN CASE WHEN ("ADS"."Feature_55" <= -0.6718018054962158) THEN 6 ELSE 7 END ELSE 8 END ELSE 9 END ELSE CASE WHEN ("ADS"."Feature_46" <= 0.3097681403160095) THEN 11 ELSE CASE WHEN ("ADS"."Feature_8" <= 0.4047667980194092) THEN CASE WHEN ("ADS"."Feature_23" <= 1.1815876960754395) THEN 14 ELSE 15 END ELSE CASE WHEN ("ADS"."Feature_2" <= -0.6000869870185852) THEN 17 ELSE 18 END END END END ELSE CASE WHEN ("ADS"."Feature_19" <= 0.5168549418449402) THEN CASE WHEN ("ADS"."Feature_61" <= 1.1421473026275635) THEN CASE WHEN ("ADS"."Feature_2" <= -0.5119854807853699) THEN CASE WHEN ("ADS"."Feature_50" <= -1.286837100982666) THEN 23 ELSE 24 END ELSE CASE WHEN ("ADS"."Feature_64" <= -0.02436649426817894) THEN CASE WHEN ("ADS"."Feature_92" <= -0.9891905784606934) THEN 27 ELSE 28 END ELSE CASE WHEN ("ADS"."Feature_9" <= -0.8340058922767639) THEN 30 ELSE CASE WHEN ("ADS"."Feature_77" <= 0.8774078488349915) THEN 32 ELSE 33 END END END END ELSE 34 END ELSE 35 END END ELSE CASE WHEN ("ADS"."Feature_93" <= -0.2040482461452484) THEN CASE WHEN ("ADS"."Feature_75" <= 0.3998737931251526) THEN CASE WHEN ("ADS"."Feature_61" <= -0.06412331759929657) THEN 39 ELSE 40 END ELSE 41 END ELSE CASE WHEN ("ADS"."Feature_92" <= -0.4179338216781616) THEN 43 ELSE 44 END END END AS node_id_2 
FROM "FOURCLASS_100" "ADS"), 
"DT_node_data_15" AS 
(SELECT "Values".nid AS nid, CAST("Values"."P_0.0" AS BINARY_DOUBLE) AS "P_0.0", CAST("Values"."P_1.0" AS BINARY_DOUBLE) AS "P_1.0", CAST("Values"."P_2.0" AS BINARY_DOUBLE) AS "P_2.0", CAST("Values"."P_3.0" AS BINARY_DOUBLE) AS "P_3.0", CAST("Values"."D" AS BINARY_DOUBLE) AS "D", CAST("Values"."DP" AS BINARY_DOUBLE) AS "DP" 
FROM (SELECT 6 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 7 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 8 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 9 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 11 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 14 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 15 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 17 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 18 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 23 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 24 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 27 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 28 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 30 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 32 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 33 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 34 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 35 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 39 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 40 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 41 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 43 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" FROM DUAL UNION ALL SELECT 44 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" FROM DUAL) "Values"), 
"DT_Output_15" AS 
(SELECT "DT_node_lookup_15"."KEY" AS "KEY", "DT_node_lookup_15".node_id_2 AS node_id_2, "DT_node_data_15".nid AS nid, "DT_node_data_15"."P_0.0" AS "P_0.0", "DT_node_data_15"."P_1.0" AS "P_1.0", "DT_node_data_15"."P_2.0" AS "P_2.0", "DT_node_data_15"."P_3.0" AS "P_3.0", "DT_node_data_15"."D" AS "D", "DT_node_data_15"."DP" AS "DP" 
FROM "DT_node_lookup_15" LEFT OUTER JOIN "DT_node_data_15" ON "DT_node_lookup_15".node_id_2 = "DT_node_data_15".nid), 
"RF_Model_15" AS 
(SELECT "DT_Output_15"."KEY" AS "KEY", CAST(NULL AS BINARY_DOUBLE) AS "Score_0", "DT_Output_15"."P_0.0" AS "Proba_0", CASE WHEN ("DT_Output_15"."P_0.0" IS NULL OR "DT_Output_15"."P_0.0" > 0.0) THEN ln("DT_Output_15"."P_0.0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "Score_1", "DT_Output_15"."P_1.0" AS "Proba_1", CASE WHEN ("DT_Output_15"."P_1.0" IS NULL OR "DT_Output_15"."P_1.0" > 0.0) THEN ln("DT_Output_15"."P_1.0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_1", CAST(NULL AS BINARY_DOUBLE) AS "Score_2", "DT_Output_15"."P_2.0" AS "Proba_2", CASE WHEN ("DT_Output_15"."P_2.0" IS NULL OR "DT_Output_15"."P_2.0" > 0.0) THEN ln("DT_Output_15"."P_2.0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_2", CAST(NULL AS BINARY_DOUBLE) AS "Score_3", "DT_Output_15"."P_3.0" AS "Proba_3", CASE WHEN ("DT_Output_15"."P_3.0" IS NULL OR "DT_Output_15"."P_3.0" > 0.0) THEN ln("DT_Output_15"."P_3.0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_3" 
FROM "DT_Output_15")
 SELECT "RF_B1"."KEY", "RF_B1"."Score_0", "RF_B1"."Proba_0", "RF_B1"."LogProba_0", "RF_B1"."Score_1", "RF_B1"."Proba_1", "RF_B1"."LogProba_1", "RF_B1"."Score_2", "RF_B1"."Proba_2", "RF_B1"."LogProba_2", "RF_B1"."Score_3", "RF_B1"."Proba_3", "RF_B1"."LogProba_3" 
FROM (SELECT "RF_esu_1"."KEY" AS "KEY", "RF_esu_1"."Score_0" AS "Score_0", "RF_esu_1"."Proba_0" AS "Proba_0", "RF_esu_1"."LogProba_0" AS "LogProba_0", "RF_esu_1"."Score_1" AS "Score_1", "RF_esu_1"."Proba_1" AS "Proba_1", "RF_esu_1"."LogProba_1" AS "LogProba_1", "RF_esu_1"."Score_2" AS "Score_2", "RF_esu_1"."Proba_2" AS "Proba_2", "RF_esu_1"."LogProba_2" AS "LogProba_2", "RF_esu_1"."Score_3" AS "Score_3", "RF_esu_1"."Proba_3" AS "Proba_3", "RF_esu_1"."LogProba_3" AS "LogProba_3" 
FROM (SELECT "RF_Model_10"."KEY" AS "KEY", "RF_Model_10"."Score_0" AS "Score_0", "RF_Model_10"."Proba_0" AS "Proba_0", "RF_Model_10"."LogProba_0" AS "LogProba_0", "RF_Model_10"."Score_1" AS "Score_1", "RF_Model_10"."Proba_1" AS "Proba_1", "RF_Model_10"."LogProba_1" AS "LogProba_1", "RF_Model_10"."Score_2" AS "Score_2", "RF_Model_10"."Proba_2" AS "Proba_2", "RF_Model_10"."LogProba_2" AS "LogProba_2", "RF_Model_10"."Score_3" AS "Score_3", "RF_Model_10"."Proba_3" AS "Proba_3", "RF_Model_10"."LogProba_3" AS "LogProba_3" 
FROM "RF_Model_10" UNION ALL SELECT "RF_Model_11"."KEY" AS "KEY", "RF_Model_11"."Score_0" AS "Score_0", "RF_Model_11"."Proba_0" AS "Proba_0", "RF_Model_11"."LogProba_0" AS "LogProba_0", "RF_Model_11"."Score_1" AS "Score_1", "RF_Model_11"."Proba_1" AS "Proba_1", "RF_Model_11"."LogProba_1" AS "LogProba_1", "RF_Model_11"."Score_2" AS "Score_2", "RF_Model_11"."Proba_2" AS "Proba_2", "RF_Model_11"."LogProba_2" AS "LogProba_2", "RF_Model_11"."Score_3" AS "Score_3", "RF_Model_11"."Proba_3" AS "Proba_3", "RF_Model_11"."LogProba_3" AS "LogProba_3" 
FROM "RF_Model_11" UNION ALL SELECT "RF_Model_12"."KEY" AS "KEY", "RF_Model_12"."Score_0" AS "Score_0", "RF_Model_12"."Proba_0" AS "Proba_0", "RF_Model_12"."LogProba_0" AS "LogProba_0", "RF_Model_12"."Score_1" AS "Score_1", "RF_Model_12"."Proba_1" AS "Proba_1", "RF_Model_12"."LogProba_1" AS "LogProba_1", "RF_Model_12"."Score_2" AS "Score_2", "RF_Model_12"."Proba_2" AS "Proba_2", "RF_Model_12"."LogProba_2" AS "LogProba_2", "RF_Model_12"."Score_3" AS "Score_3", "RF_Model_12"."Proba_3" AS "Proba_3", "RF_Model_12"."LogProba_3" AS "LogProba_3" 
FROM "RF_Model_12" UNION ALL SELECT "RF_Model_13"."KEY" AS "KEY", "RF_Model_13"."Score_0" AS "Score_0", "RF_Model_13"."Proba_0" AS "Proba_0", "RF_Model_13"."LogProba_0" AS "LogProba_0", "RF_Model_13"."Score_1" AS "Score_1", "RF_Model_13"."Proba_1" AS "Proba_1", "RF_Model_13"."LogProba_1" AS "LogProba_1", "RF_Model_13"."Score_2" AS "Score_2", "RF_Model_13"."Proba_2" AS "Proba_2", "RF_Model_13"."LogProba_2" AS "LogProba_2", "RF_Model_13"."Score_3" AS "Score_3", "RF_Model_13"."Proba_3" AS "Proba_3", "RF_Model_13"."LogProba_3" AS "LogProba_3" 
FROM "RF_Model_13" UNION ALL SELECT "RF_Model_14"."KEY" AS "KEY", "RF_Model_14"."Score_0" AS "Score_0", "RF_Model_14"."Proba_0" AS "Proba_0", "RF_Model_14"."LogProba_0" AS "LogProba_0", "RF_Model_14"."Score_1" AS "Score_1", "RF_Model_14"."Proba_1" AS "Proba_1", "RF_Model_14"."LogProba_1" AS "LogProba_1", "RF_Model_14"."Score_2" AS "Score_2", "RF_Model_14"."Proba_2" AS "Proba_2", "RF_Model_14"."LogProba_2" AS "LogProba_2", "RF_Model_14"."Score_3" AS "Score_3", "RF_Model_14"."Proba_3" AS "Proba_3", "RF_Model_14"."LogProba_3" AS "LogProba_3" 
FROM "RF_Model_14" UNION ALL SELECT "RF_Model_15"."KEY" AS "KEY", "RF_Model_15"."Score_0" AS "Score_0", "RF_Model_15"."Proba_0" AS "Proba_0", "RF_Model_15"."LogProba_0" AS "LogProba_0", "RF_Model_15"."Score_1" AS "Score_1", "RF_Model_15"."Proba_1" AS "Proba_1", "RF_Model_15"."LogProba_1" AS "LogProba_1", "RF_Model_15"."Score_2" AS "Score_2", "RF_Model_15"."Proba_2" AS "Proba_2", "RF_Model_15"."LogProba_2" AS "LogProba_2", "RF_Model_15"."Score_3" AS "Score_3", "RF_Model_15"."Proba_3" AS "Proba_3", "RF_Model_15"."LogProba_3" AS "LogProba_3" 
FROM "RF_Model_15") "RF_esu_1") "RF_B1") "U"

-- Code For temporary table 0516_CODEGEN_I3X9E8_RF_AVG part 1. Create 


CREATE GLOBAL TEMPORARY TABLE "0516_CODEGEN_I3X9E8_RF_AVG" (
	"KEY" NUMBER(19), 
	"Score_0" BINARY_DOUBLE, 
	"Proba_0" BINARY_DOUBLE, 
	"LogProba_0" BINARY_DOUBLE, 
	"Score_1" BINARY_DOUBLE, 
	"Proba_1" BINARY_DOUBLE, 
	"LogProba_1" BINARY_DOUBLE, 
	"Score_2" BINARY_DOUBLE, 
	"Proba_2" BINARY_DOUBLE, 
	"LogProba_2" BINARY_DOUBLE, 
	"Score_3" BINARY_DOUBLE, 
	"Proba_3" BINARY_DOUBLE, 
	"LogProba_3" BINARY_DOUBLE
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table 0516_CODEGEN_I3X9E8_RF_AVG part 2. Populate

INSERT INTO "0516_CODEGEN_I3X9E8_RF_AVG" ("KEY", "Score_0", "Proba_0", "LogProba_0", "Score_1", "Proba_1", "LogProba_1", "Score_2", "Proba_2", "LogProba_2", "Score_3", "Proba_3", "LogProba_3") SELECT "U"."KEY", "U"."Score_0", "U"."Proba_0", "U"."LogProba_0", "U"."Score_1", "U"."Proba_1", "U"."LogProba_1", "U"."Score_2", "U"."Proba_2", "U"."LogProba_2", "U"."Score_3", "U"."Proba_3", "U"."LogProba_3" 
FROM (WITH "RF_Union" AS 
(SELECT "RF_EnsembleUnion"."KEY" AS "KEY", "RF_EnsembleUnion"."Score_0" AS "Score_0", "RF_EnsembleUnion"."Proba_0" AS "Proba_0", "RF_EnsembleUnion"."LogProba_0" AS "LogProba_0", "RF_EnsembleUnion"."Score_1" AS "Score_1", "RF_EnsembleUnion"."Proba_1" AS "Proba_1", "RF_EnsembleUnion"."LogProba_1" AS "LogProba_1", "RF_EnsembleUnion"."Score_2" AS "Score_2", "RF_EnsembleUnion"."Proba_2" AS "Proba_2", "RF_EnsembleUnion"."LogProba_2" AS "LogProba_2", "RF_EnsembleUnion"."Score_3" AS "Score_3", "RF_EnsembleUnion"."Proba_3" AS "Proba_3", "RF_EnsembleUnion"."LogProba_3" AS "LogProba_3" 
FROM (SELECT "RF_B0"."KEY" AS "KEY", "RF_B0"."Score_0" AS "Score_0", "RF_B0"."Proba_0" AS "Proba_0", "RF_B0"."LogProba_0" AS "LogProba_0", "RF_B0"."Score_1" AS "Score_1", "RF_B0"."Proba_1" AS "Proba_1", "RF_B0"."LogProba_1" AS "LogProba_1", "RF_B0"."Score_2" AS "Score_2", "RF_B0"."Proba_2" AS "Proba_2", "RF_B0"."LogProba_2" AS "LogProba_2", "RF_B0"."Score_3" AS "Score_3", "RF_B0"."Proba_3" AS "Proba_3", "RF_B0"."LogProba_3" AS "LogProba_3" 
FROM "80516_CODEGEN_0GP0E2_RF_B0" "RF_B0" UNION ALL SELECT "RF_B1"."KEY" AS "KEY", "RF_B1"."Score_0" AS "Score_0", "RF_B1"."Proba_0" AS "Proba_0", "RF_B1"."LogProba_0" AS "LogProba_0", "RF_B1"."Score_1" AS "Score_1", "RF_B1"."Proba_1" AS "Proba_1", "RF_B1"."LogProba_1" AS "LogProba_1", "RF_B1"."Score_2" AS "Score_2", "RF_B1"."Proba_2" AS "Proba_2", "RF_B1"."LogProba_2" AS "LogProba_2", "RF_B1"."Score_3" AS "Score_3", "RF_B1"."Proba_3" AS "Proba_3", "RF_B1"."LogProba_3" AS "LogProba_3" 
FROM "80516_CODEGEN_L5RWG7_RF_B1" "RF_B1") "RF_EnsembleUnion")
 SELECT "RF_avg"."KEY", "RF_avg"."Score_0", "RF_avg"."Proba_0", "RF_avg"."LogProba_0", "RF_avg"."Score_1", "RF_avg"."Proba_1", "RF_avg"."LogProba_1", "RF_avg"."Score_2", "RF_avg"."Proba_2", "RF_avg"."LogProba_2", "RF_avg"."Score_3", "RF_avg"."Proba_3", "RF_avg"."LogProba_3" 
FROM (SELECT "T"."KEY" AS "KEY", CAST("T"."Score_0" AS BINARY_DOUBLE) AS "Score_0", CAST("T"."Proba_0" AS BINARY_DOUBLE) AS "Proba_0", CAST("T"."LogProba_0" AS BINARY_DOUBLE) AS "LogProba_0", CAST("T"."Score_1" AS BINARY_DOUBLE) AS "Score_1", CAST("T"."Proba_1" AS BINARY_DOUBLE) AS "Proba_1", CAST("T"."LogProba_1" AS BINARY_DOUBLE) AS "LogProba_1", CAST("T"."Score_2" AS BINARY_DOUBLE) AS "Score_2", CAST("T"."Proba_2" AS BINARY_DOUBLE) AS "Proba_2", CAST("T"."LogProba_2" AS BINARY_DOUBLE) AS "LogProba_2", CAST("T"."Score_3" AS BINARY_DOUBLE) AS "Score_3", CAST("T"."Proba_3" AS BINARY_DOUBLE) AS "Proba_3", CAST("T"."LogProba_3" AS BINARY_DOUBLE) AS "LogProba_3" 
FROM (SELECT "RF_Union"."KEY" AS "KEY", avg(CAST("RF_Union"."Score_0" AS BINARY_DOUBLE)) AS "Score_0", avg(CAST("RF_Union"."Proba_0" AS BINARY_DOUBLE)) AS "Proba_0", CAST(NULL AS BINARY_DOUBLE) AS "LogProba_0", avg(CAST("RF_Union"."Score_1" AS BINARY_DOUBLE)) AS "Score_1", avg(CAST("RF_Union"."Proba_1" AS BINARY_DOUBLE)) AS "Proba_1", CAST(NULL AS BINARY_DOUBLE) AS "LogProba_1", avg(CAST("RF_Union"."Score_2" AS BINARY_DOUBLE)) AS "Score_2", avg(CAST("RF_Union"."Proba_2" AS BINARY_DOUBLE)) AS "Proba_2", CAST(NULL AS BINARY_DOUBLE) AS "LogProba_2", avg(CAST("RF_Union"."Score_3" AS BINARY_DOUBLE)) AS "Score_3", avg(CAST("RF_Union"."Proba_3" AS BINARY_DOUBLE)) AS "Proba_3", CAST(NULL AS BINARY_DOUBLE) AS "LogProba_3" 
FROM "RF_Union" GROUP BY "RF_Union"."KEY") "T") "RF_avg") "U"

-- Model deployment code

WITH orig_cte AS 
(SELECT "RF_avg"."KEY" AS "KEY", "RF_avg"."Score_0" AS "Score_0", "RF_avg"."Score_1" AS "Score_1", "RF_avg"."Score_2" AS "Score_2", "RF_avg"."Score_3" AS "Score_3", "RF_avg"."Proba_0" AS "Proba_0", "RF_avg"."Proba_1" AS "Proba_1", "RF_avg"."Proba_2" AS "Proba_2", "RF_avg"."Proba_3" AS "Proba_3", "RF_avg"."LogProba_0" AS "LogProba_0", "RF_avg"."LogProba_1" AS "LogProba_1", "RF_avg"."LogProba_2" AS "LogProba_2", "RF_avg"."LogProba_3" AS "LogProba_3", CAST(NULL AS NUMBER(19)) AS "Decision", CAST(NULL AS BINARY_DOUBLE) AS "DecisionProba" 
FROM "0516_CODEGEN_I3X9E8_RF_AVG" "RF_avg"), 
score_class_union AS 
(SELECT scu."KEY_u" AS "KEY_u", scu.class AS class, scu."LogProba" AS "LogProba", scu."Proba" AS "Proba", scu."Score" AS "Score" 
FROM (SELECT orig_cte."KEY" AS "KEY_u", 0 AS class, orig_cte."LogProba_0" AS "LogProba", orig_cte."Proba_0" AS "Proba", orig_cte."Score_0" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 1 AS class, orig_cte."LogProba_1" AS "LogProba", orig_cte."Proba_1" AS "Proba", orig_cte."Score_1" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 2 AS class, orig_cte."LogProba_2" AS "LogProba", orig_cte."Proba_2" AS "Proba", orig_cte."Score_2" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 3 AS class, orig_cte."LogProba_3" AS "LogProba", orig_cte."Proba_3" AS "Proba", orig_cte."Score_3" AS "Score" 
FROM orig_cte) scu), 
score_max AS 
(SELECT orig_cte."KEY" AS "KEY", orig_cte."Score_0" AS "Score_0", orig_cte."Score_1" AS "Score_1", orig_cte."Score_2" AS "Score_2", orig_cte."Score_3" AS "Score_3", orig_cte."Proba_0" AS "Proba_0", orig_cte."Proba_1" AS "Proba_1", orig_cte."Proba_2" AS "Proba_2", orig_cte."Proba_3" AS "Proba_3", orig_cte."LogProba_0" AS "LogProba_0", orig_cte."LogProba_1" AS "LogProba_1", orig_cte."LogProba_2" AS "LogProba_2", orig_cte."LogProba_3" AS "LogProba_3", orig_cte."Decision" AS "Decision", orig_cte."DecisionProba" AS "DecisionProba", max_select."KEY_m" AS "KEY_m", max_select."max_Proba" AS "max_Proba" 
FROM orig_cte LEFT OUTER JOIN (SELECT score_class_union."KEY_u" AS "KEY_m", max(score_class_union."Proba") AS "max_Proba" 
FROM score_class_union GROUP BY score_class_union."KEY_u") max_select ON orig_cte."KEY" = max_select."KEY_m"), 
union_with_max AS 
(SELECT score_class_union."KEY_u" AS "KEY_u", score_class_union.class AS class, score_class_union."LogProba" AS "LogProba", score_class_union."Proba" AS "Proba", score_class_union."Score" AS "Score", score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Score_2" AS "Score_2", score_max."Score_3" AS "Score_3", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."Proba_2" AS "Proba_2", score_max."Proba_3" AS "Proba_3", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."LogProba_2" AS "LogProba_2", score_max."LogProba_3" AS "LogProba_3", score_max."Decision" AS "Decision", score_max."DecisionProba" AS "DecisionProba", score_max."KEY_m" AS "KEY_m", score_max."max_Proba" AS "max_Proba" 
FROM score_class_union LEFT OUTER JOIN score_max ON score_class_union."KEY_u" = score_max."KEY"), 
arg_max_cte AS 
(SELECT score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Score_2" AS "Score_2", score_max."Score_3" AS "Score_3", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."Proba_2" AS "Proba_2", score_max."Proba_3" AS "Proba_3", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."LogProba_2" AS "LogProba_2", score_max."LogProba_3" AS "LogProba_3", score_max."Decision" AS "Decision", score_max."DecisionProba" AS "DecisionProba", score_max."KEY_m" AS "KEY_m", score_max."max_Proba" AS "max_Proba", "arg_max_t_Proba"."KEY_Proba" AS "KEY_Proba", "arg_max_t_Proba"."arg_max_Proba" AS "arg_max_Proba" 
FROM score_max LEFT OUTER JOIN (SELECT union_with_max."KEY" AS "KEY_Proba", min(union_with_max.class) AS "arg_max_Proba" 
FROM union_with_max 
WHERE union_with_max."Proba" >= union_with_max."max_Proba" GROUP BY union_with_max."KEY") "arg_max_t_Proba" ON score_max."KEY" = "arg_max_t_Proba"."KEY_Proba")
 SELECT arg_max_cte."KEY" AS "KEY", arg_max_cte."Score_0" AS "Score_0", arg_max_cte."Score_1" AS "Score_1", arg_max_cte."Score_2" AS "Score_2", arg_max_cte."Score_3" AS "Score_3", arg_max_cte."Proba_0" AS "Proba_0", arg_max_cte."Proba_1" AS "Proba_1", arg_max_cte."Proba_2" AS "Proba_2", arg_max_cte."Proba_3" AS "Proba_3", CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN ln(arg_max_cte."Proba_0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_0", CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN ln(arg_max_cte."Proba_1") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_1", CASE WHEN (arg_max_cte."Proba_2" IS NULL OR arg_max_cte."Proba_2" > 0.0) THEN ln(arg_max_cte."Proba_2") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_2", CASE WHEN (arg_max_cte."Proba_3" IS NULL OR arg_max_cte."Proba_3" > 0.0) THEN ln(arg_max_cte."Proba_3") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_3", arg_max_cte."arg_max_Proba" AS "Decision", arg_max_cte."max_Proba" AS "DecisionProba" 
FROM arg_max_cte