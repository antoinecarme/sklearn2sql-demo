-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2018

-- Model : RandomForestClassifier_Pipeline
-- Dataset : FourClass_100
-- Database : sqlite


-- This SQL code can contain one or more statements, to be executed in the order they appear in this file.



-- Code For temporary table TMP_20180516113158_CODEGEN_2H9K5M_ADS_imp_1_OUT part 1. Create 


CREATE TEMPORARY TABLE "TMP_20180516113158_CODEGEN_2H9K5M_ADS_imp_1_OUT" (
	"KEY" BIGINT NOT NULL, 
	impter_2 FLOAT, 
	impter_3 FLOAT, 
	impter_4 FLOAT, 
	impter_5 FLOAT, 
	impter_6 FLOAT, 
	impter_7 FLOAT, 
	impter_8 FLOAT, 
	impter_9 FLOAT, 
	impter_10 FLOAT, 
	impter_11 FLOAT, 
	impter_12 FLOAT, 
	impter_13 FLOAT, 
	impter_14 FLOAT, 
	impter_15 FLOAT, 
	impter_16 FLOAT, 
	impter_17 FLOAT, 
	impter_18 FLOAT, 
	impter_19 FLOAT, 
	impter_20 FLOAT, 
	impter_21 FLOAT, 
	impter_22 FLOAT, 
	impter_23 FLOAT, 
	impter_24 FLOAT, 
	impter_25 FLOAT, 
	impter_26 FLOAT, 
	impter_27 FLOAT, 
	impter_28 FLOAT, 
	impter_29 FLOAT, 
	impter_30 FLOAT, 
	impter_31 FLOAT, 
	impter_32 FLOAT, 
	impter_33 FLOAT, 
	impter_34 FLOAT, 
	impter_35 FLOAT, 
	impter_36 FLOAT, 
	impter_37 FLOAT, 
	impter_38 FLOAT, 
	impter_39 FLOAT, 
	impter_40 FLOAT, 
	impter_41 FLOAT, 
	impter_42 FLOAT, 
	impter_43 FLOAT, 
	impter_44 FLOAT, 
	impter_45 FLOAT, 
	impter_46 FLOAT, 
	impter_47 FLOAT, 
	impter_48 FLOAT, 
	impter_49 FLOAT, 
	impter_50 FLOAT, 
	impter_51 FLOAT, 
	impter_52 FLOAT, 
	impter_53 FLOAT, 
	impter_54 FLOAT, 
	impter_55 FLOAT, 
	impter_56 FLOAT, 
	impter_57 FLOAT, 
	impter_58 FLOAT, 
	impter_59 FLOAT, 
	impter_60 FLOAT, 
	impter_61 FLOAT, 
	impter_62 FLOAT, 
	impter_63 FLOAT, 
	impter_64 FLOAT, 
	impter_65 FLOAT, 
	impter_66 FLOAT, 
	impter_67 FLOAT, 
	impter_68 FLOAT, 
	impter_69 FLOAT, 
	impter_70 FLOAT, 
	impter_71 FLOAT, 
	impter_72 FLOAT, 
	impter_73 FLOAT, 
	impter_74 FLOAT, 
	impter_75 FLOAT, 
	impter_76 FLOAT, 
	impter_77 FLOAT, 
	impter_78 FLOAT, 
	impter_79 FLOAT, 
	impter_80 FLOAT, 
	impter_81 FLOAT, 
	impter_82 FLOAT, 
	impter_83 FLOAT, 
	impter_84 FLOAT, 
	impter_85 FLOAT, 
	impter_86 FLOAT, 
	impter_87 FLOAT, 
	impter_88 FLOAT, 
	impter_89 FLOAT, 
	impter_90 FLOAT, 
	impter_91 FLOAT, 
	impter_92 FLOAT, 
	impter_93 FLOAT, 
	impter_94 FLOAT, 
	impter_95 FLOAT, 
	impter_96 FLOAT, 
	impter_97 FLOAT, 
	impter_98 FLOAT, 
	impter_99 FLOAT, 
	impter_100 FLOAT, 
	impter_101 FLOAT, 
	PRIMARY KEY ("KEY")
)



-- Code For temporary table TMP_20180516113158_CODEGEN_2H9K5M_ADS_imp_1_OUT part 2. Populate

INSERT INTO "TMP_20180516113158_CODEGEN_2H9K5M_ADS_imp_1_OUT" ("KEY", impter_2, impter_3, impter_4, impter_5, impter_6, impter_7, impter_8, impter_9, impter_10, impter_11, impter_12, impter_13, impter_14, impter_15, impter_16, impter_17, impter_18, impter_19, impter_20, impter_21, impter_22, impter_23, impter_24, impter_25, impter_26, impter_27, impter_28, impter_29, impter_30, impter_31, impter_32, impter_33, impter_34, impter_35, impter_36, impter_37, impter_38, impter_39, impter_40, impter_41, impter_42, impter_43, impter_44, impter_45, impter_46, impter_47, impter_48, impter_49, impter_50, impter_51, impter_52, impter_53, impter_54, impter_55, impter_56, impter_57, impter_58, impter_59, impter_60, impter_61, impter_62, impter_63, impter_64, impter_65, impter_66, impter_67, impter_68, impter_69, impter_70, impter_71, impter_72, impter_73, impter_74, impter_75, impter_76, impter_77, impter_78, impter_79, impter_80, impter_81, impter_82, impter_83, impter_84, impter_85, impter_86, impter_87, impter_88, impter_89, impter_90, impter_91, impter_92, impter_93, impter_94, impter_95, impter_96, impter_97, impter_98, impter_99, impter_100, impter_101) SELECT "ADS_imp_1_OUT"."KEY", "ADS_imp_1_OUT".impter_2, "ADS_imp_1_OUT".impter_3, "ADS_imp_1_OUT".impter_4, "ADS_imp_1_OUT".impter_5, "ADS_imp_1_OUT".impter_6, "ADS_imp_1_OUT".impter_7, "ADS_imp_1_OUT".impter_8, "ADS_imp_1_OUT".impter_9, "ADS_imp_1_OUT".impter_10, "ADS_imp_1_OUT".impter_11, "ADS_imp_1_OUT".impter_12, "ADS_imp_1_OUT".impter_13, "ADS_imp_1_OUT".impter_14, "ADS_imp_1_OUT".impter_15, "ADS_imp_1_OUT".impter_16, "ADS_imp_1_OUT".impter_17, "ADS_imp_1_OUT".impter_18, "ADS_imp_1_OUT".impter_19, "ADS_imp_1_OUT".impter_20, "ADS_imp_1_OUT".impter_21, "ADS_imp_1_OUT".impter_22, "ADS_imp_1_OUT".impter_23, "ADS_imp_1_OUT".impter_24, "ADS_imp_1_OUT".impter_25, "ADS_imp_1_OUT".impter_26, "ADS_imp_1_OUT".impter_27, "ADS_imp_1_OUT".impter_28, "ADS_imp_1_OUT".impter_29, "ADS_imp_1_OUT".impter_30, "ADS_imp_1_OUT".impter_31, "ADS_imp_1_OUT".impter_32, "ADS_imp_1_OUT".impter_33, "ADS_imp_1_OUT".impter_34, "ADS_imp_1_OUT".impter_35, "ADS_imp_1_OUT".impter_36, "ADS_imp_1_OUT".impter_37, "ADS_imp_1_OUT".impter_38, "ADS_imp_1_OUT".impter_39, "ADS_imp_1_OUT".impter_40, "ADS_imp_1_OUT".impter_41, "ADS_imp_1_OUT".impter_42, "ADS_imp_1_OUT".impter_43, "ADS_imp_1_OUT".impter_44, "ADS_imp_1_OUT".impter_45, "ADS_imp_1_OUT".impter_46, "ADS_imp_1_OUT".impter_47, "ADS_imp_1_OUT".impter_48, "ADS_imp_1_OUT".impter_49, "ADS_imp_1_OUT".impter_50, "ADS_imp_1_OUT".impter_51, "ADS_imp_1_OUT".impter_52, "ADS_imp_1_OUT".impter_53, "ADS_imp_1_OUT".impter_54, "ADS_imp_1_OUT".impter_55, "ADS_imp_1_OUT".impter_56, "ADS_imp_1_OUT".impter_57, "ADS_imp_1_OUT".impter_58, "ADS_imp_1_OUT".impter_59, "ADS_imp_1_OUT".impter_60, "ADS_imp_1_OUT".impter_61, "ADS_imp_1_OUT".impter_62, "ADS_imp_1_OUT".impter_63, "ADS_imp_1_OUT".impter_64, "ADS_imp_1_OUT".impter_65, "ADS_imp_1_OUT".impter_66, "ADS_imp_1_OUT".impter_67, "ADS_imp_1_OUT".impter_68, "ADS_imp_1_OUT".impter_69, "ADS_imp_1_OUT".impter_70, "ADS_imp_1_OUT".impter_71, "ADS_imp_1_OUT".impter_72, "ADS_imp_1_OUT".impter_73, "ADS_imp_1_OUT".impter_74, "ADS_imp_1_OUT".impter_75, "ADS_imp_1_OUT".impter_76, "ADS_imp_1_OUT".impter_77, "ADS_imp_1_OUT".impter_78, "ADS_imp_1_OUT".impter_79, "ADS_imp_1_OUT".impter_80, "ADS_imp_1_OUT".impter_81, "ADS_imp_1_OUT".impter_82, "ADS_imp_1_OUT".impter_83, "ADS_imp_1_OUT".impter_84, "ADS_imp_1_OUT".impter_85, "ADS_imp_1_OUT".impter_86, "ADS_imp_1_OUT".impter_87, "ADS_imp_1_OUT".impter_88, "ADS_imp_1_OUT".impter_89, "ADS_imp_1_OUT".impter_90, "ADS_imp_1_OUT".impter_91, "ADS_imp_1_OUT".impter_92, "ADS_imp_1_OUT".impter_93, "ADS_imp_1_OUT".impter_94, "ADS_imp_1_OUT".impter_95, "ADS_imp_1_OUT".impter_96, "ADS_imp_1_OUT".impter_97, "ADS_imp_1_OUT".impter_98, "ADS_imp_1_OUT".impter_99, "ADS_imp_1_OUT".impter_100, "ADS_imp_1_OUT".impter_101 
FROM (SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" IS NULL) THEN -0.0014807007689716506 ELSE "ADS"."Feature_0" END AS impter_2, CASE WHEN ("ADS"."Feature_1" IS NULL) THEN 0.08599214990681354 ELSE "ADS"."Feature_1" END AS impter_3, CASE WHEN ("ADS"."Feature_2" IS NULL) THEN -0.006358164676411468 ELSE "ADS"."Feature_2" END AS impter_4, CASE WHEN ("ADS"."Feature_3" IS NULL) THEN -0.024301807422776375 ELSE "ADS"."Feature_3" END AS impter_5, CASE WHEN ("ADS"."Feature_4" IS NULL) THEN 0.015786548044298444 ELSE "ADS"."Feature_4" END AS impter_6, CASE WHEN ("ADS"."Feature_5" IS NULL) THEN -0.13959329445651672 ELSE "ADS"."Feature_5" END AS impter_7, CASE WHEN ("ADS"."Feature_6" IS NULL) THEN -0.06476745048019888 ELSE "ADS"."Feature_6" END AS impter_8, CASE WHEN ("ADS"."Feature_7" IS NULL) THEN 0.025579810774090658 ELSE "ADS"."Feature_7" END AS impter_9, CASE WHEN ("ADS"."Feature_8" IS NULL) THEN -0.03173937260977112 ELSE "ADS"."Feature_8" END AS impter_10, CASE WHEN ("ADS"."Feature_9" IS NULL) THEN -0.1518141420862488 ELSE "ADS"."Feature_9" END AS impter_11, CASE WHEN ("ADS"."Feature_10" IS NULL) THEN -0.13244576558492482 ELSE "ADS"."Feature_10" END AS impter_12, CASE WHEN ("ADS"."Feature_11" IS NULL) THEN 0.044172679762224144 ELSE "ADS"."Feature_11" END AS impter_13, CASE WHEN ("ADS"."Feature_12" IS NULL) THEN 0.010165946719810038 ELSE "ADS"."Feature_12" END AS impter_14, CASE WHEN ("ADS"."Feature_13" IS NULL) THEN -0.03645872019103299 ELSE "ADS"."Feature_13" END AS impter_15, CASE WHEN ("ADS"."Feature_14" IS NULL) THEN 0.06491512811593925 ELSE "ADS"."Feature_14" END AS impter_16, CASE WHEN ("ADS"."Feature_15" IS NULL) THEN -0.11930146867074032 ELSE "ADS"."Feature_15" END AS impter_17, CASE WHEN ("ADS"."Feature_16" IS NULL) THEN 0.007738863934852773 ELSE "ADS"."Feature_16" END AS impter_18, CASE WHEN ("ADS"."Feature_17" IS NULL) THEN -0.1226774060147726 ELSE "ADS"."Feature_17" END AS impter_19, CASE WHEN ("ADS"."Feature_18" IS NULL) THEN 0.019160881669086405 ELSE "ADS"."Feature_18" END AS impter_20, CASE WHEN ("ADS"."Feature_19" IS NULL) THEN -0.26340351121131067 ELSE "ADS"."Feature_19" END AS impter_21, CASE WHEN ("ADS"."Feature_20" IS NULL) THEN 0.035692361937735194 ELSE "ADS"."Feature_20" END AS impter_22, CASE WHEN ("ADS"."Feature_21" IS NULL) THEN -0.010021324964069293 ELSE "ADS"."Feature_21" END AS impter_23, CASE WHEN ("ADS"."Feature_22" IS NULL) THEN -0.1258614387723542 ELSE "ADS"."Feature_22" END AS impter_24, CASE WHEN ("ADS"."Feature_23" IS NULL) THEN 0.09372773898231128 ELSE "ADS"."Feature_23" END AS impter_25, CASE WHEN ("ADS"."Feature_24" IS NULL) THEN -0.1687929597880227 ELSE "ADS"."Feature_24" END AS impter_26, CASE WHEN ("ADS"."Feature_25" IS NULL) THEN 0.10006283199629364 ELSE "ADS"."Feature_25" END AS impter_27, CASE WHEN ("ADS"."Feature_26" IS NULL) THEN -0.10297858086822659 ELSE "ADS"."Feature_26" END AS impter_28, CASE WHEN ("ADS"."Feature_27" IS NULL) THEN 0.19240514535870415 ELSE "ADS"."Feature_27" END AS impter_29, CASE WHEN ("ADS"."Feature_28" IS NULL) THEN -0.052866434246092435 ELSE "ADS"."Feature_28" END AS impter_30, CASE WHEN ("ADS"."Feature_29" IS NULL) THEN 0.2624612146366151 ELSE "ADS"."Feature_29" END AS impter_31, CASE WHEN ("ADS"."Feature_30" IS NULL) THEN 0.002677575140361194 ELSE "ADS"."Feature_30" END AS impter_32, CASE WHEN ("ADS"."Feature_31" IS NULL) THEN 0.09707041941284063 ELSE "ADS"."Feature_31" END AS impter_33, CASE WHEN ("ADS"."Feature_32" IS NULL) THEN -0.032793219857333473 ELSE "ADS"."Feature_32" END AS impter_34, CASE WHEN ("ADS"."Feature_33" IS NULL) THEN -0.003130273745908922 ELSE "ADS"."Feature_33" END AS impter_35, CASE WHEN ("ADS"."Feature_34" IS NULL) THEN 0.053446276216279974 ELSE "ADS"."Feature_34" END AS impter_36, CASE WHEN ("ADS"."Feature_35" IS NULL) THEN -0.18668146437412367 ELSE "ADS"."Feature_35" END AS impter_37, CASE WHEN ("ADS"."Feature_36" IS NULL) THEN -0.029335964960866243 ELSE "ADS"."Feature_36" END AS impter_38, CASE WHEN ("ADS"."Feature_37" IS NULL) THEN 0.07219772199502426 ELSE "ADS"."Feature_37" END AS impter_39, CASE WHEN ("ADS"."Feature_38" IS NULL) THEN -0.0007762839781489412 ELSE "ADS"."Feature_38" END AS impter_40, CASE WHEN ("ADS"."Feature_39" IS NULL) THEN 0.08270823712098274 ELSE "ADS"."Feature_39" END AS impter_41, CASE WHEN ("ADS"."Feature_40" IS NULL) THEN 0.10432022852347983 ELSE "ADS"."Feature_40" END AS impter_42, CASE WHEN ("ADS"."Feature_41" IS NULL) THEN 0.07058566385022276 ELSE "ADS"."Feature_41" END AS impter_43, CASE WHEN ("ADS"."Feature_42" IS NULL) THEN 0.05096693098357383 ELSE "ADS"."Feature_42" END AS impter_44, CASE WHEN ("ADS"."Feature_43" IS NULL) THEN 0.0660758203367818 ELSE "ADS"."Feature_43" END AS impter_45, CASE WHEN ("ADS"."Feature_44" IS NULL) THEN -0.07075895636353369 ELSE "ADS"."Feature_44" END AS impter_46, CASE WHEN ("ADS"."Feature_45" IS NULL) THEN 0.08422536561649958 ELSE "ADS"."Feature_45" END AS impter_47, CASE WHEN ("ADS"."Feature_46" IS NULL) THEN 0.21367580667795616 ELSE "ADS"."Feature_46" END AS impter_48, CASE WHEN ("ADS"."Feature_47" IS NULL) THEN -0.055897457335624984 ELSE "ADS"."Feature_47" END AS impter_49, CASE WHEN ("ADS"."Feature_48" IS NULL) THEN -0.17453036726139817 ELSE "ADS"."Feature_48" END AS impter_50, CASE WHEN ("ADS"."Feature_49" IS NULL) THEN -0.054944001818473996 ELSE "ADS"."Feature_49" END AS impter_51, CASE WHEN ("ADS"."Feature_50" IS NULL) THEN -0.5961651261710368 ELSE "ADS"."Feature_50" END AS impter_52, CASE WHEN ("ADS"."Feature_51" IS NULL) THEN 0.5020404526565605 ELSE "ADS"."Feature_51" END AS impter_53, CASE WHEN ("ADS"."Feature_52" IS NULL) THEN -0.052340545201383926 ELSE "ADS"."Feature_52" END AS impter_54, CASE WHEN ("ADS"."Feature_53" IS NULL) THEN 0.05294307611674654 ELSE "ADS"."Feature_53" END AS impter_55, CASE WHEN ("ADS"."Feature_54" IS NULL) THEN 0.03835884479069335 ELSE "ADS"."Feature_54" END AS impter_56, CASE WHEN ("ADS"."Feature_55" IS NULL) THEN -0.13571979014964694 ELSE "ADS"."Feature_55" END AS impter_57, CASE WHEN ("ADS"."Feature_56" IS NULL) THEN -0.21903068431411843 ELSE "ADS"."Feature_56" END AS impter_58, CASE WHEN ("ADS"."Feature_57" IS NULL) THEN -0.1191752362029383 ELSE "ADS"."Feature_57" END AS impter_59, CASE WHEN ("ADS"."Feature_58" IS NULL) THEN 0.38058346912807667 ELSE "ADS"."Feature_58" END AS impter_60, CASE WHEN ("ADS"."Feature_59" IS NULL) THEN -0.12720928974168508 ELSE "ADS"."Feature_59" END AS impter_61, CASE WHEN ("ADS"."Feature_60" IS NULL) THEN -0.09072936496613782 ELSE "ADS"."Feature_60" END AS impter_62, CASE WHEN ("ADS"."Feature_61" IS NULL) THEN -0.03915125937954538 ELSE "ADS"."Feature_61" END AS impter_63, CASE WHEN ("ADS"."Feature_62" IS NULL) THEN 0.07075412393313481 ELSE "ADS"."Feature_62" END AS impter_64, CASE WHEN ("ADS"."Feature_63" IS NULL) THEN 0.10124894587016948 ELSE "ADS"."Feature_63" END AS impter_65, CASE WHEN ("ADS"."Feature_64" IS NULL) THEN -0.1945661449475579 ELSE "ADS"."Feature_64" END AS impter_66, CASE WHEN ("ADS"."Feature_65" IS NULL) THEN -0.1759482981261233 ELSE "ADS"."Feature_65" END AS impter_67, CASE WHEN ("ADS"."Feature_66" IS NULL) THEN 0.07473228971855511 ELSE "ADS"."Feature_66" END AS impter_68, CASE WHEN ("ADS"."Feature_67" IS NULL) THEN 0.0377705562115906 ELSE "ADS"."Feature_67" END AS impter_69, CASE WHEN ("ADS"."Feature_68" IS NULL) THEN 0.0139470898598917 ELSE "ADS"."Feature_68" END AS impter_70, CASE WHEN ("ADS"."Feature_69" IS NULL) THEN 0.2582685725145942 ELSE "ADS"."Feature_69" END AS impter_71, CASE WHEN ("ADS"."Feature_70" IS NULL) THEN 0.022975786233048922 ELSE "ADS"."Feature_70" END AS impter_72, CASE WHEN ("ADS"."Feature_71" IS NULL) THEN 0.17445434061949525 ELSE "ADS"."Feature_71" END AS impter_73, CASE WHEN ("ADS"."Feature_72" IS NULL) THEN -0.011413879692078346 ELSE "ADS"."Feature_72" END AS impter_74, CASE WHEN ("ADS"."Feature_73" IS NULL) THEN 0.07898984156871978 ELSE "ADS"."Feature_73" END AS impter_75, CASE WHEN ("ADS"."Feature_74" IS NULL) THEN 0.0952547273770713 ELSE "ADS"."Feature_74" END AS impter_76, CASE WHEN ("ADS"."Feature_75" IS NULL) THEN -0.03997776839639901 ELSE "ADS"."Feature_75" END AS impter_77, CASE WHEN ("ADS"."Feature_76" IS NULL) THEN -0.020839895874293496 ELSE "ADS"."Feature_76" END AS impter_78, CASE WHEN ("ADS"."Feature_77" IS NULL) THEN -0.07284631986613152 ELSE "ADS"."Feature_77" END AS impter_79, CASE WHEN ("ADS"."Feature_78" IS NULL) THEN -0.27389951764434384 ELSE "ADS"."Feature_78" END AS impter_80, CASE WHEN ("ADS"."Feature_79" IS NULL) THEN 0.08057287885287609 ELSE "ADS"."Feature_79" END AS impter_81, CASE WHEN ("ADS"."Feature_80" IS NULL) THEN -0.06244274245437891 ELSE "ADS"."Feature_80" END AS impter_82, CASE WHEN ("ADS"."Feature_81" IS NULL) THEN -0.12290855334066887 ELSE "ADS"."Feature_81" END AS impter_83, CASE WHEN ("ADS"."Feature_82" IS NULL) THEN 0.11639531793890918 ELSE "ADS"."Feature_82" END AS impter_84, CASE WHEN ("ADS"."Feature_83" IS NULL) THEN -0.03350462786128603 ELSE "ADS"."Feature_83" END AS impter_85, CASE WHEN ("ADS"."Feature_84" IS NULL) THEN -0.03914049968144583 ELSE "ADS"."Feature_84" END AS impter_86, CASE WHEN ("ADS"."Feature_85" IS NULL) THEN 0.24193903072305167 ELSE "ADS"."Feature_85" END AS impter_87, CASE WHEN ("ADS"."Feature_86" IS NULL) THEN -0.07389719862221904 ELSE "ADS"."Feature_86" END AS impter_88, CASE WHEN ("ADS"."Feature_87" IS NULL) THEN 0.1400756228320113 ELSE "ADS"."Feature_87" END AS impter_89, CASE WHEN ("ADS"."Feature_88" IS NULL) THEN 0.2765301935136145 ELSE "ADS"."Feature_88" END AS impter_90, CASE WHEN ("ADS"."Feature_89" IS NULL) THEN -0.07957147169250885 ELSE "ADS"."Feature_89" END AS impter_91, CASE WHEN ("ADS"."Feature_90" IS NULL) THEN 0.16295767680642717 ELSE "ADS"."Feature_90" END AS impter_92, CASE WHEN ("ADS"."Feature_91" IS NULL) THEN 0.07062813888509549 ELSE "ADS"."Feature_91" END AS impter_93, CASE WHEN ("ADS"."Feature_92" IS NULL) THEN 0.012995630151896219 ELSE "ADS"."Feature_92" END AS impter_94, CASE WHEN ("ADS"."Feature_93" IS NULL) THEN 0.1055212408190415 ELSE "ADS"."Feature_93" END AS impter_95, CASE WHEN ("ADS"."Feature_94" IS NULL) THEN -0.1408434425354362 ELSE "ADS"."Feature_94" END AS impter_96, CASE WHEN ("ADS"."Feature_95" IS NULL) THEN -0.1574012366732725 ELSE "ADS"."Feature_95" END AS impter_97, CASE WHEN ("ADS"."Feature_96" IS NULL) THEN 0.05477536676313335 ELSE "ADS"."Feature_96" END AS impter_98, CASE WHEN ("ADS"."Feature_97" IS NULL) THEN 0.05673272205919614 ELSE "ADS"."Feature_97" END AS impter_99, CASE WHEN ("ADS"."Feature_98" IS NULL) THEN -0.14226649213619527 ELSE "ADS"."Feature_98" END AS impter_100, CASE WHEN ("ADS"."Feature_99" IS NULL) THEN -0.04042675289131955 ELSE "ADS"."Feature_99" END AS impter_101 
FROM "FourClass_100" AS "ADS") AS "ADS_imp_1_OUT"

-- Code For temporary table TMP_20180516113158_CODEGEN_2H9K5M_ADS_imp_1_OUT part 3. Create Index 

CREATE INDEX "ix_TMP_20180516113158_CODEGEN_2H9K5M_ADS_imp_1_OUT_KEY" ON "TMP_20180516113158_CODEGEN_2H9K5M_ADS_imp_1_OUT" ("KEY")

-- Code For temporary table TMP_20180516113158_CODEGEN_KKAXF1_ADS_sca_2_OUT part 1. Create 


CREATE TEMPORARY TABLE "TMP_20180516113158_CODEGEN_KKAXF1_ADS_sca_2_OUT" (
	"KEY" BIGINT NOT NULL, 
	scaler_2 FLOAT, 
	scaler_3 FLOAT, 
	scaler_4 FLOAT, 
	scaler_5 FLOAT, 
	scaler_6 FLOAT, 
	scaler_7 FLOAT, 
	scaler_8 FLOAT, 
	scaler_9 FLOAT, 
	scaler_10 FLOAT, 
	scaler_11 FLOAT, 
	scaler_12 FLOAT, 
	scaler_13 FLOAT, 
	scaler_14 FLOAT, 
	scaler_15 FLOAT, 
	scaler_16 FLOAT, 
	scaler_17 FLOAT, 
	scaler_18 FLOAT, 
	scaler_19 FLOAT, 
	scaler_20 FLOAT, 
	scaler_21 FLOAT, 
	scaler_22 FLOAT, 
	scaler_23 FLOAT, 
	scaler_24 FLOAT, 
	scaler_25 FLOAT, 
	scaler_26 FLOAT, 
	scaler_27 FLOAT, 
	scaler_28 FLOAT, 
	scaler_29 FLOAT, 
	scaler_30 FLOAT, 
	scaler_31 FLOAT, 
	scaler_32 FLOAT, 
	scaler_33 FLOAT, 
	scaler_34 FLOAT, 
	scaler_35 FLOAT, 
	scaler_36 FLOAT, 
	scaler_37 FLOAT, 
	scaler_38 FLOAT, 
	scaler_39 FLOAT, 
	scaler_40 FLOAT, 
	scaler_41 FLOAT, 
	scaler_42 FLOAT, 
	scaler_43 FLOAT, 
	scaler_44 FLOAT, 
	scaler_45 FLOAT, 
	scaler_46 FLOAT, 
	scaler_47 FLOAT, 
	scaler_48 FLOAT, 
	scaler_49 FLOAT, 
	scaler_50 FLOAT, 
	scaler_51 FLOAT, 
	scaler_52 FLOAT, 
	scaler_53 FLOAT, 
	scaler_54 FLOAT, 
	scaler_55 FLOAT, 
	scaler_56 FLOAT, 
	scaler_57 FLOAT, 
	scaler_58 FLOAT, 
	scaler_59 FLOAT, 
	scaler_60 FLOAT, 
	scaler_61 FLOAT, 
	scaler_62 FLOAT, 
	scaler_63 FLOAT, 
	scaler_64 FLOAT, 
	scaler_65 FLOAT, 
	scaler_66 FLOAT, 
	scaler_67 FLOAT, 
	scaler_68 FLOAT, 
	scaler_69 FLOAT, 
	scaler_70 FLOAT, 
	scaler_71 FLOAT, 
	scaler_72 FLOAT, 
	scaler_73 FLOAT, 
	scaler_74 FLOAT, 
	scaler_75 FLOAT, 
	scaler_76 FLOAT, 
	scaler_77 FLOAT, 
	scaler_78 FLOAT, 
	scaler_79 FLOAT, 
	scaler_80 FLOAT, 
	scaler_81 FLOAT, 
	scaler_82 FLOAT, 
	scaler_83 FLOAT, 
	scaler_84 FLOAT, 
	scaler_85 FLOAT, 
	scaler_86 FLOAT, 
	scaler_87 FLOAT, 
	scaler_88 FLOAT, 
	scaler_89 FLOAT, 
	scaler_90 FLOAT, 
	scaler_91 FLOAT, 
	scaler_92 FLOAT, 
	scaler_93 FLOAT, 
	scaler_94 FLOAT, 
	scaler_95 FLOAT, 
	scaler_96 FLOAT, 
	scaler_97 FLOAT, 
	scaler_98 FLOAT, 
	scaler_99 FLOAT, 
	scaler_100 FLOAT, 
	scaler_101 FLOAT, 
	PRIMARY KEY ("KEY")
)



-- Code For temporary table TMP_20180516113158_CODEGEN_KKAXF1_ADS_sca_2_OUT part 2. Populate

INSERT INTO "TMP_20180516113158_CODEGEN_KKAXF1_ADS_sca_2_OUT" ("KEY", scaler_2, scaler_3, scaler_4, scaler_5, scaler_6, scaler_7, scaler_8, scaler_9, scaler_10, scaler_11, scaler_12, scaler_13, scaler_14, scaler_15, scaler_16, scaler_17, scaler_18, scaler_19, scaler_20, scaler_21, scaler_22, scaler_23, scaler_24, scaler_25, scaler_26, scaler_27, scaler_28, scaler_29, scaler_30, scaler_31, scaler_32, scaler_33, scaler_34, scaler_35, scaler_36, scaler_37, scaler_38, scaler_39, scaler_40, scaler_41, scaler_42, scaler_43, scaler_44, scaler_45, scaler_46, scaler_47, scaler_48, scaler_49, scaler_50, scaler_51, scaler_52, scaler_53, scaler_54, scaler_55, scaler_56, scaler_57, scaler_58, scaler_59, scaler_60, scaler_61, scaler_62, scaler_63, scaler_64, scaler_65, scaler_66, scaler_67, scaler_68, scaler_69, scaler_70, scaler_71, scaler_72, scaler_73, scaler_74, scaler_75, scaler_76, scaler_77, scaler_78, scaler_79, scaler_80, scaler_81, scaler_82, scaler_83, scaler_84, scaler_85, scaler_86, scaler_87, scaler_88, scaler_89, scaler_90, scaler_91, scaler_92, scaler_93, scaler_94, scaler_95, scaler_96, scaler_97, scaler_98, scaler_99, scaler_100, scaler_101) SELECT "ADS_sca_2_OUT"."KEY", "ADS_sca_2_OUT".scaler_2, "ADS_sca_2_OUT".scaler_3, "ADS_sca_2_OUT".scaler_4, "ADS_sca_2_OUT".scaler_5, "ADS_sca_2_OUT".scaler_6, "ADS_sca_2_OUT".scaler_7, "ADS_sca_2_OUT".scaler_8, "ADS_sca_2_OUT".scaler_9, "ADS_sca_2_OUT".scaler_10, "ADS_sca_2_OUT".scaler_11, "ADS_sca_2_OUT".scaler_12, "ADS_sca_2_OUT".scaler_13, "ADS_sca_2_OUT".scaler_14, "ADS_sca_2_OUT".scaler_15, "ADS_sca_2_OUT".scaler_16, "ADS_sca_2_OUT".scaler_17, "ADS_sca_2_OUT".scaler_18, "ADS_sca_2_OUT".scaler_19, "ADS_sca_2_OUT".scaler_20, "ADS_sca_2_OUT".scaler_21, "ADS_sca_2_OUT".scaler_22, "ADS_sca_2_OUT".scaler_23, "ADS_sca_2_OUT".scaler_24, "ADS_sca_2_OUT".scaler_25, "ADS_sca_2_OUT".scaler_26, "ADS_sca_2_OUT".scaler_27, "ADS_sca_2_OUT".scaler_28, "ADS_sca_2_OUT".scaler_29, "ADS_sca_2_OUT".scaler_30, "ADS_sca_2_OUT".scaler_31, "ADS_sca_2_OUT".scaler_32, "ADS_sca_2_OUT".scaler_33, "ADS_sca_2_OUT".scaler_34, "ADS_sca_2_OUT".scaler_35, "ADS_sca_2_OUT".scaler_36, "ADS_sca_2_OUT".scaler_37, "ADS_sca_2_OUT".scaler_38, "ADS_sca_2_OUT".scaler_39, "ADS_sca_2_OUT".scaler_40, "ADS_sca_2_OUT".scaler_41, "ADS_sca_2_OUT".scaler_42, "ADS_sca_2_OUT".scaler_43, "ADS_sca_2_OUT".scaler_44, "ADS_sca_2_OUT".scaler_45, "ADS_sca_2_OUT".scaler_46, "ADS_sca_2_OUT".scaler_47, "ADS_sca_2_OUT".scaler_48, "ADS_sca_2_OUT".scaler_49, "ADS_sca_2_OUT".scaler_50, "ADS_sca_2_OUT".scaler_51, "ADS_sca_2_OUT".scaler_52, "ADS_sca_2_OUT".scaler_53, "ADS_sca_2_OUT".scaler_54, "ADS_sca_2_OUT".scaler_55, "ADS_sca_2_OUT".scaler_56, "ADS_sca_2_OUT".scaler_57, "ADS_sca_2_OUT".scaler_58, "ADS_sca_2_OUT".scaler_59, "ADS_sca_2_OUT".scaler_60, "ADS_sca_2_OUT".scaler_61, "ADS_sca_2_OUT".scaler_62, "ADS_sca_2_OUT".scaler_63, "ADS_sca_2_OUT".scaler_64, "ADS_sca_2_OUT".scaler_65, "ADS_sca_2_OUT".scaler_66, "ADS_sca_2_OUT".scaler_67, "ADS_sca_2_OUT".scaler_68, "ADS_sca_2_OUT".scaler_69, "ADS_sca_2_OUT".scaler_70, "ADS_sca_2_OUT".scaler_71, "ADS_sca_2_OUT".scaler_72, "ADS_sca_2_OUT".scaler_73, "ADS_sca_2_OUT".scaler_74, "ADS_sca_2_OUT".scaler_75, "ADS_sca_2_OUT".scaler_76, "ADS_sca_2_OUT".scaler_77, "ADS_sca_2_OUT".scaler_78, "ADS_sca_2_OUT".scaler_79, "ADS_sca_2_OUT".scaler_80, "ADS_sca_2_OUT".scaler_81, "ADS_sca_2_OUT".scaler_82, "ADS_sca_2_OUT".scaler_83, "ADS_sca_2_OUT".scaler_84, "ADS_sca_2_OUT".scaler_85, "ADS_sca_2_OUT".scaler_86, "ADS_sca_2_OUT".scaler_87, "ADS_sca_2_OUT".scaler_88, "ADS_sca_2_OUT".scaler_89, "ADS_sca_2_OUT".scaler_90, "ADS_sca_2_OUT".scaler_91, "ADS_sca_2_OUT".scaler_92, "ADS_sca_2_OUT".scaler_93, "ADS_sca_2_OUT".scaler_94, "ADS_sca_2_OUT".scaler_95, "ADS_sca_2_OUT".scaler_96, "ADS_sca_2_OUT".scaler_97, "ADS_sca_2_OUT".scaler_98, "ADS_sca_2_OUT".scaler_99, "ADS_sca_2_OUT".scaler_100, "ADS_sca_2_OUT".scaler_101 
FROM (SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", (CAST("ADS_imp_1_OUT".impter_2 AS FLOAT) - -0.0014807007689716506) / 0.9211229790312512 AS scaler_2, (CAST("ADS_imp_1_OUT".impter_3 AS FLOAT) - 0.08599214990681354) / 0.9627516809237073 AS scaler_3, (CAST("ADS_imp_1_OUT".impter_4 AS FLOAT) - -0.006358164676411468) / 0.7890687835102894 AS scaler_4, (CAST("ADS_imp_1_OUT".impter_5 AS FLOAT) - -0.024301807422776375) / 1.0265272189083172 AS scaler_5, (CAST("ADS_imp_1_OUT".impter_6 AS FLOAT) - 0.015786548044298444) / 1.0198090908026474 AS scaler_6, (CAST("ADS_imp_1_OUT".impter_7 AS FLOAT) - -0.13959329445651672) / 0.9185551763293686 AS scaler_7, (CAST("ADS_imp_1_OUT".impter_8 AS FLOAT) - -0.06476745048019888) / 1.0393547249617474 AS scaler_8, (CAST("ADS_imp_1_OUT".impter_9 AS FLOAT) - 0.025579810774090658) / 0.8722131294644917 AS scaler_9, (CAST("ADS_imp_1_OUT".impter_10 AS FLOAT) - -0.03173937260977112) / 1.0164588299091024 AS scaler_10, (CAST("ADS_imp_1_OUT".impter_11 AS FLOAT) - -0.1518141420862488) / 1.0075402114297496 AS scaler_11, (CAST("ADS_imp_1_OUT".impter_12 AS FLOAT) - -0.13244576558492482) / 0.9215325459816371 AS scaler_12, (CAST("ADS_imp_1_OUT".impter_13 AS FLOAT) - 0.044172679762224144) / 0.9053279964066308 AS scaler_13, (CAST("ADS_imp_1_OUT".impter_14 AS FLOAT) - 0.010165946719810038) / 1.2190371046063362 AS scaler_14, (CAST("ADS_imp_1_OUT".impter_15 AS FLOAT) - -0.03645872019103299) / 1.0879005786584215 AS scaler_15, (CAST("ADS_imp_1_OUT".impter_16 AS FLOAT) - 0.06491512811593925) / 1.0274670201407186 AS scaler_16, (CAST("ADS_imp_1_OUT".impter_17 AS FLOAT) - -0.11930146867074032) / 0.9506312349761404 AS scaler_17, (CAST("ADS_imp_1_OUT".impter_18 AS FLOAT) - 0.007738863934852773) / 1.0928477585203984 AS scaler_18, (CAST("ADS_imp_1_OUT".impter_19 AS FLOAT) - -0.1226774060147726) / 0.9830561715965196 AS scaler_19, (CAST("ADS_imp_1_OUT".impter_20 AS FLOAT) - 0.019160881669086405) / 1.2117417920836373 AS scaler_20, (CAST("ADS_imp_1_OUT".impter_21 AS FLOAT) - -0.26340351121131067) / 0.9807419262255984 AS scaler_21, (CAST("ADS_imp_1_OUT".impter_22 AS FLOAT) - 0.035692361937735194) / 1.115824498468156 AS scaler_22, (CAST("ADS_imp_1_OUT".impter_23 AS FLOAT) - -0.010021324964069293) / 1.0790959803413318 AS scaler_23, (CAST("ADS_imp_1_OUT".impter_24 AS FLOAT) - -0.1258614387723542) / 1.0279672611547366 AS scaler_24, (CAST("ADS_imp_1_OUT".impter_25 AS FLOAT) - 0.09372773898231128) / 0.9690760299303989 AS scaler_25, (CAST("ADS_imp_1_OUT".impter_26 AS FLOAT) - -0.1687929597880227) / 0.8845858581996813 AS scaler_26, (CAST("ADS_imp_1_OUT".impter_27 AS FLOAT) - 0.10006283199629364) / 0.9149346104000894 AS scaler_27, (CAST("ADS_imp_1_OUT".impter_28 AS FLOAT) - -0.10297858086822659) / 1.0761397500557328 AS scaler_28, (CAST("ADS_imp_1_OUT".impter_29 AS FLOAT) - 0.19240514535870415) / 2.089882492597775 AS scaler_29, (CAST("ADS_imp_1_OUT".impter_30 AS FLOAT) - -0.052866434246092435) / 1.0030777529896888 AS scaler_30, (CAST("ADS_imp_1_OUT".impter_31 AS FLOAT) - 0.2624612146366151) / 1.9778491038473625 AS scaler_31, (CAST("ADS_imp_1_OUT".impter_32 AS FLOAT) - 0.002677575140361194) / 0.8833924915211555 AS scaler_32, (CAST("ADS_imp_1_OUT".impter_33 AS FLOAT) - 0.09707041941284063) / 0.8720005351713555 AS scaler_33, (CAST("ADS_imp_1_OUT".impter_34 AS FLOAT) - -0.032793219857333473) / 0.8745989090443193 AS scaler_34, (CAST("ADS_imp_1_OUT".impter_35 AS FLOAT) - -0.003130273745908922) / 0.9967699097535561 AS scaler_35, (CAST("ADS_imp_1_OUT".impter_36 AS FLOAT) - 0.053446276216279974) / 0.9997289112199433 AS scaler_36, (CAST("ADS_imp_1_OUT".impter_37 AS FLOAT) - -0.18668146437412367) / 1.0272287171310865 AS scaler_37, (CAST("ADS_imp_1_OUT".impter_38 AS FLOAT) - -0.029335964960866243) / 1.0427555960451658 AS scaler_38, (CAST("ADS_imp_1_OUT".impter_39 AS FLOAT) - 0.07219772199502426) / 0.8328229890456742 AS scaler_39, (CAST("ADS_imp_1_OUT".impter_40 AS FLOAT) - -0.0007762839781489412) / 0.9666524356457794 AS scaler_40, (CAST("ADS_imp_1_OUT".impter_41 AS FLOAT) - 0.08270823712098274) / 1.083670494683493 AS scaler_41, (CAST("ADS_imp_1_OUT".impter_42 AS FLOAT) - 0.10432022852347983) / 1.075472547982714 AS scaler_42, (CAST("ADS_imp_1_OUT".impter_43 AS FLOAT) - 0.07058566385022276) / 0.9993462791463713 AS scaler_43, (CAST("ADS_imp_1_OUT".impter_44 AS FLOAT) - 0.05096693098357383) / 0.8876971252794036 AS scaler_44, (CAST("ADS_imp_1_OUT".impter_45 AS FLOAT) - 0.0660758203367818) / 1.041246125313479 AS scaler_45, (CAST("ADS_imp_1_OUT".impter_46 AS FLOAT) - -0.07075895636353369) / 2.238310207242139 AS scaler_46, (CAST("ADS_imp_1_OUT".impter_47 AS FLOAT) - 0.08422536561649958) / 0.9520959686676432 AS scaler_47, (CAST("ADS_imp_1_OUT".impter_48 AS FLOAT) - 0.21367580667795616) / 0.9907230316111766 AS scaler_48, (CAST("ADS_imp_1_OUT".impter_49 AS FLOAT) - -0.055897457335624984) / 1.0392400714320487 AS scaler_49, (CAST("ADS_imp_1_OUT".impter_50 AS FLOAT) - -0.17453036726139817) / 2.001507098381001 AS scaler_50, (CAST("ADS_imp_1_OUT".impter_51 AS FLOAT) - -0.054944001818473996) / 1.0041645540091246 AS scaler_51, (CAST("ADS_imp_1_OUT".impter_52 AS FLOAT) - -0.5961651261710368) / 2.467511153399545 AS scaler_52, (CAST("ADS_imp_1_OUT".impter_53 AS FLOAT) - 0.5020404526565605) / 2.1929325118287792 AS scaler_53, (CAST("ADS_imp_1_OUT".impter_54 AS FLOAT) - -0.052340545201383926) / 0.98465558791252 AS scaler_54, (CAST("ADS_imp_1_OUT".impter_55 AS FLOAT) - 0.05294307611674654) / 1.8137042567337183 AS scaler_55, (CAST("ADS_imp_1_OUT".impter_56 AS FLOAT) - 0.03835884479069335) / 0.9241326354411343 AS scaler_56, (CAST("ADS_imp_1_OUT".impter_57 AS FLOAT) - -0.13571979014964694) / 0.8679095755948701 AS scaler_57, (CAST("ADS_imp_1_OUT".impter_58 AS FLOAT) - -0.21903068431411843) / 4.150428869748413 AS scaler_58, (CAST("ADS_imp_1_OUT".impter_59 AS FLOAT) - -0.1191752362029383) / 0.9123333408128436 AS scaler_59, (CAST("ADS_imp_1_OUT".impter_60 AS FLOAT) - 0.38058346912807667) / 3.5635011086986927 AS scaler_60, (CAST("ADS_imp_1_OUT".impter_61 AS FLOAT) - -0.12720928974168508) / 0.9301024475991629 AS scaler_61, (CAST("ADS_imp_1_OUT".impter_62 AS FLOAT) - -0.09072936496613782) / 0.9490501277306023 AS scaler_62, (CAST("ADS_imp_1_OUT".impter_63 AS FLOAT) - -0.03915125937954538) / 0.9029504608473613 AS scaler_63, (CAST("ADS_imp_1_OUT".impter_64 AS FLOAT) - 0.07075412393313481) / 0.9726561682528103 AS scaler_64, (CAST("ADS_imp_1_OUT".impter_65 AS FLOAT) - 0.10124894587016948) / 0.9403075920249493 AS scaler_65, (CAST("ADS_imp_1_OUT".impter_66 AS FLOAT) - -0.1945661449475579) / 0.9400903625732654 AS scaler_66, (CAST("ADS_imp_1_OUT".impter_67 AS FLOAT) - -0.1759482981261233) / 0.9435422049943787 AS scaler_67, (CAST("ADS_imp_1_OUT".impter_68 AS FLOAT) - 0.07473228971855511) / 0.8871003964319768 AS scaler_68, (CAST("ADS_imp_1_OUT".impter_69 AS FLOAT) - 0.0377705562115906) / 1.0228978549196588 AS scaler_69, (CAST("ADS_imp_1_OUT".impter_70 AS FLOAT) - 0.0139470898598917) / 0.9465728329079491 AS scaler_70, (CAST("ADS_imp_1_OUT".impter_71 AS FLOAT) - 0.2582685725145942) / 1.1027232016521478 AS scaler_71, (CAST("ADS_imp_1_OUT".impter_72 AS FLOAT) - 0.022975786233048922) / 0.9200436904809381 AS scaler_72, (CAST("ADS_imp_1_OUT".impter_73 AS FLOAT) - 0.17445434061949525) / 0.9009964742482128 AS scaler_73, (CAST("ADS_imp_1_OUT".impter_74 AS FLOAT) - -0.011413879692078346) / 0.9483377025565977 AS scaler_74, (CAST("ADS_imp_1_OUT".impter_75 AS FLOAT) - 0.07898984156871978) / 0.9726668138861088 AS scaler_75, (CAST("ADS_imp_1_OUT".impter_76 AS FLOAT) - 0.0952547273770713) / 0.9607867245873394 AS scaler_76, (CAST("ADS_imp_1_OUT".impter_77 AS FLOAT) - -0.03997776839639901) / 1.0318828686080972 AS scaler_77, (CAST("ADS_imp_1_OUT".impter_78 AS FLOAT) - -0.020839895874293496) / 0.945141993694461 AS scaler_78, (CAST("ADS_imp_1_OUT".impter_79 AS FLOAT) - -0.07284631986613152) / 0.9103416784348913 AS scaler_79, (CAST("ADS_imp_1_OUT".impter_80 AS FLOAT) - -0.27389951764434384) / 2.0362603862996735 AS scaler_80, (CAST("ADS_imp_1_OUT".impter_81 AS FLOAT) - 0.08057287885287609) / 0.9919292944224015 AS scaler_81, (CAST("ADS_imp_1_OUT".impter_82 AS FLOAT) - -0.06244274245437891) / 0.8113039293824552 AS scaler_82, (CAST("ADS_imp_1_OUT".impter_83 AS FLOAT) - -0.12290855334066887) / 1.0307302654711112 AS scaler_83, (CAST("ADS_imp_1_OUT".impter_84 AS FLOAT) - 0.11639531793890918) / 0.9993591951135242 AS scaler_84, (CAST("ADS_imp_1_OUT".impter_85 AS FLOAT) - -0.03350462786128603) / 1.0197598648594488 AS scaler_85, (CAST("ADS_imp_1_OUT".impter_86 AS FLOAT) - -0.03914049968144583) / 0.9022051622058084 AS scaler_86, (CAST("ADS_imp_1_OUT".impter_87 AS FLOAT) - 0.24193903072305167) / 0.9625742678392476 AS scaler_87, (CAST("ADS_imp_1_OUT".impter_88 AS FLOAT) - -0.07389719862221904) / 1.0080070985430696 AS scaler_88, (CAST("ADS_imp_1_OUT".impter_89 AS FLOAT) - 0.1400756228320113) / 0.9315791274848828 AS scaler_89, (CAST("ADS_imp_1_OUT".impter_90 AS FLOAT) - 0.2765301935136145) / 1.9455982323178656 AS scaler_90, (CAST("ADS_imp_1_OUT".impter_91 AS FLOAT) - -0.07957147169250885) / 0.9688848077884671 AS scaler_91, (CAST("ADS_imp_1_OUT".impter_92 AS FLOAT) - 0.16295767680642717) / 0.8952741904110189 AS scaler_92, (CAST("ADS_imp_1_OUT".impter_93 AS FLOAT) - 0.07062813888509549) / 0.8331748322730601 AS scaler_93, (CAST("ADS_imp_1_OUT".impter_94 AS FLOAT) - 0.012995630151896219) / 1.059167248118017 AS scaler_94, (CAST("ADS_imp_1_OUT".impter_95 AS FLOAT) - 0.1055212408190415) / 1.0525988978000902 AS scaler_95, (CAST("ADS_imp_1_OUT".impter_96 AS FLOAT) - -0.1408434425354362) / 0.9172372033996682 AS scaler_96, (CAST("ADS_imp_1_OUT".impter_97 AS FLOAT) - -0.1574012366732725) / 0.9930125433643069 AS scaler_97, (CAST("ADS_imp_1_OUT".impter_98 AS FLOAT) - 0.05477536676313335) / 0.9803136353653645 AS scaler_98, (CAST("ADS_imp_1_OUT".impter_99 AS FLOAT) - 0.05673272205919614) / 0.9296338032188498 AS scaler_99, (CAST("ADS_imp_1_OUT".impter_100 AS FLOAT) - -0.14226649213619527) / 1.174442941822933 AS scaler_100, (CAST("ADS_imp_1_OUT".impter_101 AS FLOAT) - -0.04042675289131955) / 1.983747550989713 AS scaler_101 
FROM "TMP_20180516113158_CODEGEN_2H9K5M_ADS_imp_1_OUT" AS "ADS_imp_1_OUT") AS "ADS_sca_2_OUT"

-- Code For temporary table TMP_20180516113158_CODEGEN_KKAXF1_ADS_sca_2_OUT part 3. Create Index 

CREATE INDEX "ix_TMP_20180516113158_CODEGEN_KKAXF1_ADS_sca_2_OUT_KEY" ON "TMP_20180516113158_CODEGEN_KKAXF1_ADS_sca_2_OUT" ("KEY")

-- Code For temporary table TMP_20180516113159_CODEGEN_860VWR_RF_B0 part 1. Create 


CREATE TEMPORARY TABLE "TMP_20180516113159_CODEGEN_860VWR_RF_B0" (
	"KEY" BIGINT, 
	"Score_0" FLOAT, 
	"Proba_0" FLOAT, 
	"LogProba_0" FLOAT, 
	"Score_1" FLOAT, 
	"Proba_1" FLOAT, 
	"LogProba_1" FLOAT, 
	"Score_2" FLOAT, 
	"Proba_2" FLOAT, 
	"LogProba_2" FLOAT, 
	"Score_3" FLOAT, 
	"Proba_3" FLOAT, 
	"LogProba_3" FLOAT
)



-- Code For temporary table TMP_20180516113159_CODEGEN_860VWR_RF_B0 part 2. Populate

WITH "DT_node_lookup" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_67 <= 0.7965335845947266) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_72 <= 1.1692557334899902) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_36 <= 0.49093183875083923) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_43 <= -0.3719777762889862) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_101 <= 0.27076488733291626) THEN 5 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_58 <= -0.5597272515296936) THEN 7 ELSE 8 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_19 <= -0.11931706964969635) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_92 <= 1.7966480255126953) THEN 11 ELSE 12 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_26 <= 0.29750609397888184) THEN 14 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= -0.8602234125137329) THEN 16 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_39 <= 0.599022388458252) THEN 18 ELSE 19 END END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= -0.5668677687644958) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_84 <= -0.7166109085083008) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= -0.48370426893234253) THEN 23 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= -0.9021297693252563) THEN 25 ELSE 26 END END ELSE 27 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= 0.35060811042785645) THEN 29 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_15 <= 0.010281674563884735) THEN 31 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_75 <= 0.11741852760314941) THEN 33 ELSE 34 END END END END END ELSE 35 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_46 <= -0.6053683757781982) THEN 37 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_68 <= 1.5641776323318481) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_15 <= -2.1116738319396973) THEN 40 ELSE 41 END ELSE 42 END END END AS node_id_2 
FROM "TMP_20180516113158_CODEGEN_KKAXF1_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data" AS 
(SELECT "Values".nid AS nid, CAST("Values"."P_0.0" AS FLOAT) AS "P_0.0", CAST("Values"."P_1.0" AS FLOAT) AS "P_1.0", CAST("Values"."P_2.0" AS FLOAT) AS "P_2.0", CAST("Values"."P_3.0" AS FLOAT) AS "P_3.0", CAST("Values"."D" AS FLOAT) AS "D", CAST("Values"."DP" AS FLOAT) AS "DP" 
FROM (SELECT 5 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 7 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 8 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 11 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 12 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 14 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 16 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 18 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 19 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 23 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 25 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 26 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 27 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 29 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 31 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 33 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 34 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 35 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 37 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 40 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 41 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 42 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP") AS "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".nid AS nid, "DT_node_data"."P_0.0" AS "P_0.0", "DT_node_data"."P_1.0" AS "P_1.0", "DT_node_data"."P_2.0" AS "P_2.0", "DT_node_data"."P_3.0" AS "P_3.0", "DT_node_data"."D" AS "D", "DT_node_data"."DP" AS "DP" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".nid), 
"RF_Model_0" AS 
(SELECT "DT_Output"."KEY" AS "KEY", CAST(NULL AS FLOAT) AS "Score_0", "DT_Output"."P_0.0" AS "Proba_0", CASE WHEN ("DT_Output"."P_0.0" IS NULL OR "DT_Output"."P_0.0" > 0.0) THEN ln("DT_Output"."P_0.0") ELSE -1.79769313486231e+308 END AS "LogProba_0", CAST(NULL AS FLOAT) AS "Score_1", "DT_Output"."P_1.0" AS "Proba_1", CASE WHEN ("DT_Output"."P_1.0" IS NULL OR "DT_Output"."P_1.0" > 0.0) THEN ln("DT_Output"."P_1.0") ELSE -1.79769313486231e+308 END AS "LogProba_1", CAST(NULL AS FLOAT) AS "Score_2", "DT_Output"."P_2.0" AS "Proba_2", CASE WHEN ("DT_Output"."P_2.0" IS NULL OR "DT_Output"."P_2.0" > 0.0) THEN ln("DT_Output"."P_2.0") ELSE -1.79769313486231e+308 END AS "LogProba_2", CAST(NULL AS FLOAT) AS "Score_3", "DT_Output"."P_3.0" AS "Proba_3", CASE WHEN ("DT_Output"."P_3.0" IS NULL OR "DT_Output"."P_3.0" > 0.0) THEN ln("DT_Output"."P_3.0") ELSE -1.79769313486231e+308 END AS "LogProba_3" 
FROM "DT_Output"), 
"DT_node_lookup_1" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_22 <= 1.0979300737380981) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_40 <= -0.5129785537719727) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_46 <= 0.8107681274414062) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_52 <= -1.1516187191009521) THEN 4 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_31 <= 0.6125394105911255) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= 1.4727898836135864) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_43 <= -0.23595744371414185) THEN 10 ELSE 11 END ELSE 12 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_63 <= 0.31361016631126404) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_15 <= -0.5488353371620178) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_96 <= -0.5830457210540771) THEN 16 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_58 <= 0.9455856084823608) THEN 18 ELSE 19 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_99 <= 0.7509372234344482) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_39 <= -1.2610338926315308) THEN 22 ELSE 23 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_52 <= -1.1687172651290894) THEN 25 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_90 <= -0.05257636308670044) THEN 27 ELSE 28 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_101 <= 0.30026131868362427) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_52 <= -0.34721264243125916) THEN 31 ELSE 32 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_33 <= 1.2811552286148071) THEN 34 ELSE 35 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_96 <= 0.46513715386390686) THEN 37 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_12 <= -0.05630597472190857) THEN 39 ELSE 40 END END END AS node_id_2 
FROM "TMP_20180516113158_CODEGEN_KKAXF1_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_1" AS 
(SELECT "Values".nid AS nid, CAST("Values"."P_0.0" AS FLOAT) AS "P_0.0", CAST("Values"."P_1.0" AS FLOAT) AS "P_1.0", CAST("Values"."P_2.0" AS FLOAT) AS "P_2.0", CAST("Values"."P_3.0" AS FLOAT) AS "P_3.0", CAST("Values"."D" AS FLOAT) AS "D", CAST("Values"."DP" AS FLOAT) AS "DP" 
FROM (SELECT 4 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 6 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 7 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 10 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 11 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 12 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 16 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 18 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 19 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 22 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 23 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 25 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 27 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 28 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 31 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 32 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 34 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 35 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 37 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 39 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 40 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP") AS "Values"), 
"DT_Output_1" AS 
(SELECT "DT_node_lookup_1"."KEY" AS "KEY", "DT_node_lookup_1".node_id_2 AS node_id_2, "DT_node_data_1".nid AS nid, "DT_node_data_1"."P_0.0" AS "P_0.0", "DT_node_data_1"."P_1.0" AS "P_1.0", "DT_node_data_1"."P_2.0" AS "P_2.0", "DT_node_data_1"."P_3.0" AS "P_3.0", "DT_node_data_1"."D" AS "D", "DT_node_data_1"."DP" AS "DP" 
FROM "DT_node_lookup_1" LEFT OUTER JOIN "DT_node_data_1" ON "DT_node_lookup_1".node_id_2 = "DT_node_data_1".nid), 
"RF_Model_1" AS 
(SELECT "DT_Output_1"."KEY" AS "KEY", CAST(NULL AS FLOAT) AS "Score_0", "DT_Output_1"."P_0.0" AS "Proba_0", CASE WHEN ("DT_Output_1"."P_0.0" IS NULL OR "DT_Output_1"."P_0.0" > 0.0) THEN ln("DT_Output_1"."P_0.0") ELSE -1.79769313486231e+308 END AS "LogProba_0", CAST(NULL AS FLOAT) AS "Score_1", "DT_Output_1"."P_1.0" AS "Proba_1", CASE WHEN ("DT_Output_1"."P_1.0" IS NULL OR "DT_Output_1"."P_1.0" > 0.0) THEN ln("DT_Output_1"."P_1.0") ELSE -1.79769313486231e+308 END AS "LogProba_1", CAST(NULL AS FLOAT) AS "Score_2", "DT_Output_1"."P_2.0" AS "Proba_2", CASE WHEN ("DT_Output_1"."P_2.0" IS NULL OR "DT_Output_1"."P_2.0" > 0.0) THEN ln("DT_Output_1"."P_2.0") ELSE -1.79769313486231e+308 END AS "LogProba_2", CAST(NULL AS FLOAT) AS "Score_3", "DT_Output_1"."P_3.0" AS "Proba_3", CASE WHEN ("DT_Output_1"."P_3.0" IS NULL OR "DT_Output_1"."P_3.0" > 0.0) THEN ln("DT_Output_1"."P_3.0") ELSE -1.79769313486231e+308 END AS "LogProba_3" 
FROM "DT_Output_1"), 
"DT_node_lookup_2" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_58 <= -0.6488082408905029) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= -0.6445685029029846) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_58 <= -1.0639798641204834) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_76 <= -1.3545773029327393) THEN 4 ELSE 5 END ELSE 6 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_96 <= -0.1526559442281723) THEN 8 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_84 <= 0.40131741762161255) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_72 <= 1.5276011228561401) THEN 11 ELSE 12 END ELSE 13 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_26 <= 0.7272655963897705) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_98 <= -1.4607586860656738) THEN 16 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_23 <= -0.3553089499473572) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_91 <= 0.8290952444076538) THEN 19 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_63 <= -0.055212363600730896) THEN 21 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_43 <= 0.8139461874961853) THEN 23 ELSE 24 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_35 <= -1.034499168395996) THEN 26 ELSE 27 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_43 <= 0.6386263966560364) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_31 <= 0.19752147793769836) THEN 30 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= -0.5716938972473145) THEN 32 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_38 <= -0.01678154617547989) THEN 34 ELSE 35 END END END ELSE 36 END END END AS node_id_2 
FROM "TMP_20180516113158_CODEGEN_KKAXF1_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_2" AS 
(SELECT "Values".nid AS nid, CAST("Values"."P_0.0" AS FLOAT) AS "P_0.0", CAST("Values"."P_1.0" AS FLOAT) AS "P_1.0", CAST("Values"."P_2.0" AS FLOAT) AS "P_2.0", CAST("Values"."P_3.0" AS FLOAT) AS "P_3.0", CAST("Values"."D" AS FLOAT) AS "D", CAST("Values"."DP" AS FLOAT) AS "DP" 
FROM (SELECT 4 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 5 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 6 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 8 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 11 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 12 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 13 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 16 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 19 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 21 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 23 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 24 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 26 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 27 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 30 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 32 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 34 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 35 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 36 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP") AS "Values"), 
"DT_Output_2" AS 
(SELECT "DT_node_lookup_2"."KEY" AS "KEY", "DT_node_lookup_2".node_id_2 AS node_id_2, "DT_node_data_2".nid AS nid, "DT_node_data_2"."P_0.0" AS "P_0.0", "DT_node_data_2"."P_1.0" AS "P_1.0", "DT_node_data_2"."P_2.0" AS "P_2.0", "DT_node_data_2"."P_3.0" AS "P_3.0", "DT_node_data_2"."D" AS "D", "DT_node_data_2"."DP" AS "DP" 
FROM "DT_node_lookup_2" LEFT OUTER JOIN "DT_node_data_2" ON "DT_node_lookup_2".node_id_2 = "DT_node_data_2".nid), 
"RF_Model_2" AS 
(SELECT "DT_Output_2"."KEY" AS "KEY", CAST(NULL AS FLOAT) AS "Score_0", "DT_Output_2"."P_0.0" AS "Proba_0", CASE WHEN ("DT_Output_2"."P_0.0" IS NULL OR "DT_Output_2"."P_0.0" > 0.0) THEN ln("DT_Output_2"."P_0.0") ELSE -1.79769313486231e+308 END AS "LogProba_0", CAST(NULL AS FLOAT) AS "Score_1", "DT_Output_2"."P_1.0" AS "Proba_1", CASE WHEN ("DT_Output_2"."P_1.0" IS NULL OR "DT_Output_2"."P_1.0" > 0.0) THEN ln("DT_Output_2"."P_1.0") ELSE -1.79769313486231e+308 END AS "LogProba_1", CAST(NULL AS FLOAT) AS "Score_2", "DT_Output_2"."P_2.0" AS "Proba_2", CASE WHEN ("DT_Output_2"."P_2.0" IS NULL OR "DT_Output_2"."P_2.0" > 0.0) THEN ln("DT_Output_2"."P_2.0") ELSE -1.79769313486231e+308 END AS "LogProba_2", CAST(NULL AS FLOAT) AS "Score_3", "DT_Output_2"."P_3.0" AS "Proba_3", CASE WHEN ("DT_Output_2"."P_3.0" IS NULL OR "DT_Output_2"."P_3.0" > 0.0) THEN ln("DT_Output_2"."P_3.0") ELSE -1.79769313486231e+308 END AS "LogProba_3" 
FROM "DT_Output_2"), 
"DT_node_lookup_3" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_43 <= 0.6110901832580566) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_44 <= -1.1558668613433838) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_98 <= 0.3548256754875183) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_71 <= 0.9061970114707947) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= -0.009328611195087433) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_47 <= -0.843595027923584) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_12 <= -0.9550706148147583) THEN 9 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_73 <= -0.08011087775230408) THEN 11 ELSE 12 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_53 <= 0.6999587416648865) THEN 14 ELSE 15 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_71 <= 0.27750563621520996) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_27 <= -0.31830883026123047) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_14 <= 0.9069939255714417) THEN 19 ELSE 20 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_16 <= -0.45005160570144653) THEN 22 ELSE 23 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_77 <= 1.3397839069366455) THEN 25 ELSE 26 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_12 <= -1.879703164100647) THEN 28 ELSE 29 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_21 <= -0.2989218831062317) THEN 31 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_55 <= 1.4288249015808105) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_94 <= -0.5729318857192993) THEN 34 ELSE 35 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_89 <= 0.4816547632217407) THEN 37 ELSE 38 END END END END AS node_id_2 
FROM "TMP_20180516113158_CODEGEN_KKAXF1_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_3" AS 
(SELECT "Values".nid AS nid, CAST("Values"."P_0.0" AS FLOAT) AS "P_0.0", CAST("Values"."P_1.0" AS FLOAT) AS "P_1.0", CAST("Values"."P_2.0" AS FLOAT) AS "P_2.0", CAST("Values"."P_3.0" AS FLOAT) AS "P_3.0", CAST("Values"."D" AS FLOAT) AS "D", CAST("Values"."DP" AS FLOAT) AS "DP" 
FROM (SELECT 3 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 4 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 9 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 11 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 12 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 14 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 15 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 19 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 20 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 22 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 23 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 25 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 26 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 28 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 29 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 31 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 34 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 35 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 37 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 38 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP") AS "Values"), 
"DT_Output_3" AS 
(SELECT "DT_node_lookup_3"."KEY" AS "KEY", "DT_node_lookup_3".node_id_2 AS node_id_2, "DT_node_data_3".nid AS nid, "DT_node_data_3"."P_0.0" AS "P_0.0", "DT_node_data_3"."P_1.0" AS "P_1.0", "DT_node_data_3"."P_2.0" AS "P_2.0", "DT_node_data_3"."P_3.0" AS "P_3.0", "DT_node_data_3"."D" AS "D", "DT_node_data_3"."DP" AS "DP" 
FROM "DT_node_lookup_3" LEFT OUTER JOIN "DT_node_data_3" ON "DT_node_lookup_3".node_id_2 = "DT_node_data_3".nid), 
"RF_Model_3" AS 
(SELECT "DT_Output_3"."KEY" AS "KEY", CAST(NULL AS FLOAT) AS "Score_0", "DT_Output_3"."P_0.0" AS "Proba_0", CASE WHEN ("DT_Output_3"."P_0.0" IS NULL OR "DT_Output_3"."P_0.0" > 0.0) THEN ln("DT_Output_3"."P_0.0") ELSE -1.79769313486231e+308 END AS "LogProba_0", CAST(NULL AS FLOAT) AS "Score_1", "DT_Output_3"."P_1.0" AS "Proba_1", CASE WHEN ("DT_Output_3"."P_1.0" IS NULL OR "DT_Output_3"."P_1.0" > 0.0) THEN ln("DT_Output_3"."P_1.0") ELSE -1.79769313486231e+308 END AS "LogProba_1", CAST(NULL AS FLOAT) AS "Score_2", "DT_Output_3"."P_2.0" AS "Proba_2", CASE WHEN ("DT_Output_3"."P_2.0" IS NULL OR "DT_Output_3"."P_2.0" > 0.0) THEN ln("DT_Output_3"."P_2.0") ELSE -1.79769313486231e+308 END AS "LogProba_2", CAST(NULL AS FLOAT) AS "Score_3", "DT_Output_3"."P_3.0" AS "Proba_3", CASE WHEN ("DT_Output_3"."P_3.0" IS NULL OR "DT_Output_3"."P_3.0" > 0.0) THEN ln("DT_Output_3"."P_3.0") ELSE -1.79769313486231e+308 END AS "LogProba_3" 
FROM "DT_Output_3"), 
"DT_node_lookup_4" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_79 <= 1.442133903503418) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_93 <= -0.25820615887641907) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_48 <= -0.40615904331207275) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= 0.06153354048728943) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_53 <= -1.3746345043182373) THEN 5 ELSE 6 END ELSE 7 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_94 <= 0.05711609870195389) THEN 9 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= 0.41787901520729065) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_65 <= -1.586480736732483) THEN 12 ELSE 13 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_86 <= -0.31860780715942383) THEN 15 ELSE 16 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_89 <= 0.35530680418014526) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_85 <= 0.6470779180526733) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_46 <= -0.3658737540245056) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_46 <= -1.306946039199829) THEN 21 ELSE 22 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_72 <= -0.5905920267105103) THEN 24 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_83 <= -0.3331634998321533) THEN 26 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_70 <= 1.037648320198059) THEN 28 ELSE 29 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_89 <= -0.11537660658359528) THEN 31 ELSE 32 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_34 <= 0.34244856238365173) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_47 <= 0.8967550992965698) THEN 35 ELSE 36 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_21 <= 0.5022618174552917) THEN 38 ELSE 39 END END END END ELSE 40 END AS node_id_2 
FROM "TMP_20180516113158_CODEGEN_KKAXF1_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_4" AS 
(SELECT "Values".nid AS nid, CAST("Values"."P_0.0" AS FLOAT) AS "P_0.0", CAST("Values"."P_1.0" AS FLOAT) AS "P_1.0", CAST("Values"."P_2.0" AS FLOAT) AS "P_2.0", CAST("Values"."P_3.0" AS FLOAT) AS "P_3.0", CAST("Values"."D" AS FLOAT) AS "D", CAST("Values"."DP" AS FLOAT) AS "DP" 
FROM (SELECT 5 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 6 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 7 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 9 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 12 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 13 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 15 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 16 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 21 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 22 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 24 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 26 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 28 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 29 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 31 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 32 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 35 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 36 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 38 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 39 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 40 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP") AS "Values"), 
"DT_Output_4" AS 
(SELECT "DT_node_lookup_4"."KEY" AS "KEY", "DT_node_lookup_4".node_id_2 AS node_id_2, "DT_node_data_4".nid AS nid, "DT_node_data_4"."P_0.0" AS "P_0.0", "DT_node_data_4"."P_1.0" AS "P_1.0", "DT_node_data_4"."P_2.0" AS "P_2.0", "DT_node_data_4"."P_3.0" AS "P_3.0", "DT_node_data_4"."D" AS "D", "DT_node_data_4"."DP" AS "DP" 
FROM "DT_node_lookup_4" LEFT OUTER JOIN "DT_node_data_4" ON "DT_node_lookup_4".node_id_2 = "DT_node_data_4".nid), 
"RF_Model_4" AS 
(SELECT "DT_Output_4"."KEY" AS "KEY", CAST(NULL AS FLOAT) AS "Score_0", "DT_Output_4"."P_0.0" AS "Proba_0", CASE WHEN ("DT_Output_4"."P_0.0" IS NULL OR "DT_Output_4"."P_0.0" > 0.0) THEN ln("DT_Output_4"."P_0.0") ELSE -1.79769313486231e+308 END AS "LogProba_0", CAST(NULL AS FLOAT) AS "Score_1", "DT_Output_4"."P_1.0" AS "Proba_1", CASE WHEN ("DT_Output_4"."P_1.0" IS NULL OR "DT_Output_4"."P_1.0" > 0.0) THEN ln("DT_Output_4"."P_1.0") ELSE -1.79769313486231e+308 END AS "LogProba_1", CAST(NULL AS FLOAT) AS "Score_2", "DT_Output_4"."P_2.0" AS "Proba_2", CASE WHEN ("DT_Output_4"."P_2.0" IS NULL OR "DT_Output_4"."P_2.0" > 0.0) THEN ln("DT_Output_4"."P_2.0") ELSE -1.79769313486231e+308 END AS "LogProba_2", CAST(NULL AS FLOAT) AS "Score_3", "DT_Output_4"."P_3.0" AS "Proba_3", CASE WHEN ("DT_Output_4"."P_3.0" IS NULL OR "DT_Output_4"."P_3.0" > 0.0) THEN ln("DT_Output_4"."P_3.0") ELSE -1.79769313486231e+308 END AS "LogProba_3" 
FROM "DT_Output_4"), 
"DT_node_lookup_5" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_58 <= 0.14397476613521576) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_49 <= -0.477902889251709) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_14 <= 1.2010706663131714) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_40 <= -0.6170152425765991) THEN 4 ELSE 5 END ELSE 6 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_33 <= 0.18903982639312744) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_84 <= -0.14867869019508362) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_48 <= 1.3005645275115967) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_40 <= 0.4012645483016968) THEN 11 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_77 <= -0.5982265472412109) THEN 13 ELSE 14 END END ELSE 15 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= 0.8758622407913208) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_73 <= 2.256195545196533) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_95 <= -0.8710227608680725) THEN 19 ELSE 20 END ELSE 21 END ELSE 22 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_92 <= 1.8976480960845947) THEN 24 ELSE 25 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_74 <= 1.065770149230957) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_32 <= -0.6841744184494019) THEN 28 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_40 <= 0.3131127953529358) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_69 <= -0.16487523913383484) THEN 31 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_71 <= -1.3945822715759277) THEN 33 ELSE 34 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_48 <= 0.1788032203912735) THEN 36 ELSE 37 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_17 <= -0.5196677446365356) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_49 <= 1.9061558246612549) THEN 40 ELSE 41 END ELSE 42 END END END AS node_id_2 
FROM "TMP_20180516113158_CODEGEN_KKAXF1_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_5" AS 
(SELECT "Values".nid AS nid, CAST("Values"."P_0.0" AS FLOAT) AS "P_0.0", CAST("Values"."P_1.0" AS FLOAT) AS "P_1.0", CAST("Values"."P_2.0" AS FLOAT) AS "P_2.0", CAST("Values"."P_3.0" AS FLOAT) AS "P_3.0", CAST("Values"."D" AS FLOAT) AS "D", CAST("Values"."DP" AS FLOAT) AS "DP" 
FROM (SELECT 4 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 5 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 6 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 11 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 13 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 14 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 15 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 19 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 20 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 21 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 22 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 24 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 25 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 28 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 31 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 33 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 34 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 36 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 37 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 40 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 41 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 42 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP") AS "Values"), 
"DT_Output_5" AS 
(SELECT "DT_node_lookup_5"."KEY" AS "KEY", "DT_node_lookup_5".node_id_2 AS node_id_2, "DT_node_data_5".nid AS nid, "DT_node_data_5"."P_0.0" AS "P_0.0", "DT_node_data_5"."P_1.0" AS "P_1.0", "DT_node_data_5"."P_2.0" AS "P_2.0", "DT_node_data_5"."P_3.0" AS "P_3.0", "DT_node_data_5"."D" AS "D", "DT_node_data_5"."DP" AS "DP" 
FROM "DT_node_lookup_5" LEFT OUTER JOIN "DT_node_data_5" ON "DT_node_lookup_5".node_id_2 = "DT_node_data_5".nid), 
"RF_Model_5" AS 
(SELECT "DT_Output_5"."KEY" AS "KEY", CAST(NULL AS FLOAT) AS "Score_0", "DT_Output_5"."P_0.0" AS "Proba_0", CASE WHEN ("DT_Output_5"."P_0.0" IS NULL OR "DT_Output_5"."P_0.0" > 0.0) THEN ln("DT_Output_5"."P_0.0") ELSE -1.79769313486231e+308 END AS "LogProba_0", CAST(NULL AS FLOAT) AS "Score_1", "DT_Output_5"."P_1.0" AS "Proba_1", CASE WHEN ("DT_Output_5"."P_1.0" IS NULL OR "DT_Output_5"."P_1.0" > 0.0) THEN ln("DT_Output_5"."P_1.0") ELSE -1.79769313486231e+308 END AS "LogProba_1", CAST(NULL AS FLOAT) AS "Score_2", "DT_Output_5"."P_2.0" AS "Proba_2", CASE WHEN ("DT_Output_5"."P_2.0" IS NULL OR "DT_Output_5"."P_2.0" > 0.0) THEN ln("DT_Output_5"."P_2.0") ELSE -1.79769313486231e+308 END AS "LogProba_2", CAST(NULL AS FLOAT) AS "Score_3", "DT_Output_5"."P_3.0" AS "Proba_3", CASE WHEN ("DT_Output_5"."P_3.0" IS NULL OR "DT_Output_5"."P_3.0" > 0.0) THEN ln("DT_Output_5"."P_3.0") ELSE -1.79769313486231e+308 END AS "LogProba_3" 
FROM "DT_Output_5"), 
"DT_node_lookup_6" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_73 <= 0.7871303558349609) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_93 <= 0.11153698712587357) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_61 <= 0.022955946624279022) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_35 <= 0.15233516693115234) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_43 <= 0.6527560949325562) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_89 <= 1.428905725479126) THEN 6 ELSE 7 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_20 <= -0.9370656609535217) THEN 9 ELSE 10 END END ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_70 <= -1.199723482131958) THEN 13 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_99 <= -0.15620261430740356) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_85 <= 1.1256376504898071) THEN 16 ELSE 17 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_93 <= -0.3499831259250641) THEN 19 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_18 <= 0.9304080009460449) THEN 21 ELSE 22 END END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_66 <= 0.20471113920211792) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_34 <= 1.1683342456817627) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= 1.3044326305389404) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_35 <= 0.5243020057678223) THEN 27 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_58 <= 0.41144129633903503) THEN 29 ELSE 30 END END ELSE 31 END ELSE 32 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_92 <= -1.1124248504638672) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_91 <= 0.3838666081428528) THEN 35 ELSE 36 END ELSE 37 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_94 <= 0.14230568706989288) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_26 <= 1.7403743267059326) THEN 40 ELSE 41 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_71 <= 0.5872098803520203) THEN 43 ELSE 44 END END END AS node_id_2 
FROM "TMP_20180516113158_CODEGEN_KKAXF1_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_6" AS 
(SELECT "Values".nid AS nid, CAST("Values"."P_0.0" AS FLOAT) AS "P_0.0", CAST("Values"."P_1.0" AS FLOAT) AS "P_1.0", CAST("Values"."P_2.0" AS FLOAT) AS "P_2.0", CAST("Values"."P_3.0" AS FLOAT) AS "P_3.0", CAST("Values"."D" AS FLOAT) AS "D", CAST("Values"."DP" AS FLOAT) AS "DP" 
FROM (SELECT 6 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 7 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 9 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 10 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 11 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 13 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 16 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 17 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 19 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 21 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 22 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 27 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 29 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 30 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 31 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 32 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 35 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 36 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 37 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 40 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 41 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 43 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 44 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP") AS "Values"), 
"DT_Output_6" AS 
(SELECT "DT_node_lookup_6"."KEY" AS "KEY", "DT_node_lookup_6".node_id_2 AS node_id_2, "DT_node_data_6".nid AS nid, "DT_node_data_6"."P_0.0" AS "P_0.0", "DT_node_data_6"."P_1.0" AS "P_1.0", "DT_node_data_6"."P_2.0" AS "P_2.0", "DT_node_data_6"."P_3.0" AS "P_3.0", "DT_node_data_6"."D" AS "D", "DT_node_data_6"."DP" AS "DP" 
FROM "DT_node_lookup_6" LEFT OUTER JOIN "DT_node_data_6" ON "DT_node_lookup_6".node_id_2 = "DT_node_data_6".nid), 
"RF_Model_6" AS 
(SELECT "DT_Output_6"."KEY" AS "KEY", CAST(NULL AS FLOAT) AS "Score_0", "DT_Output_6"."P_0.0" AS "Proba_0", CASE WHEN ("DT_Output_6"."P_0.0" IS NULL OR "DT_Output_6"."P_0.0" > 0.0) THEN ln("DT_Output_6"."P_0.0") ELSE -1.79769313486231e+308 END AS "LogProba_0", CAST(NULL AS FLOAT) AS "Score_1", "DT_Output_6"."P_1.0" AS "Proba_1", CASE WHEN ("DT_Output_6"."P_1.0" IS NULL OR "DT_Output_6"."P_1.0" > 0.0) THEN ln("DT_Output_6"."P_1.0") ELSE -1.79769313486231e+308 END AS "LogProba_1", CAST(NULL AS FLOAT) AS "Score_2", "DT_Output_6"."P_2.0" AS "Proba_2", CASE WHEN ("DT_Output_6"."P_2.0" IS NULL OR "DT_Output_6"."P_2.0" > 0.0) THEN ln("DT_Output_6"."P_2.0") ELSE -1.79769313486231e+308 END AS "LogProba_2", CAST(NULL AS FLOAT) AS "Score_3", "DT_Output_6"."P_3.0" AS "Proba_3", CASE WHEN ("DT_Output_6"."P_3.0" IS NULL OR "DT_Output_6"."P_3.0" > 0.0) THEN ln("DT_Output_6"."P_3.0") ELSE -1.79769313486231e+308 END AS "LogProba_3" 
FROM "DT_Output_6"), 
"DT_node_lookup_7" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_69 <= -1.6593583822250366) THEN 1 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_46 <= -0.9107336401939392) THEN 3 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_101 <= -0.14281564950942993) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= -0.5615441799163818) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_54 <= 0.5265167355537415) THEN 7 ELSE 8 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_75 <= -0.20098832249641418) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_35 <= 0.3836611211299896) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_19 <= 1.1744749546051025) THEN 12 ELSE 13 END ELSE 14 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_73 <= 0.6401767730712891) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_72 <= 1.3878216743469238) THEN 17 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_62 <= -0.09136715531349182) THEN 19 ELSE 20 END END ELSE 21 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_31 <= -0.495899498462677) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_53 <= 1.258840560913086) THEN 24 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_77 <= 0.12949949502944946) THEN 26 ELSE 27 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_97 <= -0.33596181869506836) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_72 <= -0.06965567916631699) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_13 <= -1.1795259714126587) THEN 31 ELSE 32 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_42 <= 1.0617157220840454) THEN 34 ELSE 35 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_72 <= -0.21816140413284302) THEN 37 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_73 <= 0.4758720397949219) THEN 39 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_53 <= 0.31344324350357056) THEN 41 ELSE 42 END END END END END END END END AS node_id_2 
FROM "TMP_20180516113158_CODEGEN_KKAXF1_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_7" AS 
(SELECT "Values".nid AS nid, CAST("Values"."P_0.0" AS FLOAT) AS "P_0.0", CAST("Values"."P_1.0" AS FLOAT) AS "P_1.0", CAST("Values"."P_2.0" AS FLOAT) AS "P_2.0", CAST("Values"."P_3.0" AS FLOAT) AS "P_3.0", CAST("Values"."D" AS FLOAT) AS "D", CAST("Values"."DP" AS FLOAT) AS "DP" 
FROM (SELECT 1 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 3 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 7 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 8 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 12 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 13 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 14 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 17 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 19 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 20 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 21 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 24 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 26 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 27 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 31 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 32 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 34 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 35 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 37 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 39 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 41 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 42 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP") AS "Values"), 
"DT_Output_7" AS 
(SELECT "DT_node_lookup_7"."KEY" AS "KEY", "DT_node_lookup_7".node_id_2 AS node_id_2, "DT_node_data_7".nid AS nid, "DT_node_data_7"."P_0.0" AS "P_0.0", "DT_node_data_7"."P_1.0" AS "P_1.0", "DT_node_data_7"."P_2.0" AS "P_2.0", "DT_node_data_7"."P_3.0" AS "P_3.0", "DT_node_data_7"."D" AS "D", "DT_node_data_7"."DP" AS "DP" 
FROM "DT_node_lookup_7" LEFT OUTER JOIN "DT_node_data_7" ON "DT_node_lookup_7".node_id_2 = "DT_node_data_7".nid), 
"RF_Model_7" AS 
(SELECT "DT_Output_7"."KEY" AS "KEY", CAST(NULL AS FLOAT) AS "Score_0", "DT_Output_7"."P_0.0" AS "Proba_0", CASE WHEN ("DT_Output_7"."P_0.0" IS NULL OR "DT_Output_7"."P_0.0" > 0.0) THEN ln("DT_Output_7"."P_0.0") ELSE -1.79769313486231e+308 END AS "LogProba_0", CAST(NULL AS FLOAT) AS "Score_1", "DT_Output_7"."P_1.0" AS "Proba_1", CASE WHEN ("DT_Output_7"."P_1.0" IS NULL OR "DT_Output_7"."P_1.0" > 0.0) THEN ln("DT_Output_7"."P_1.0") ELSE -1.79769313486231e+308 END AS "LogProba_1", CAST(NULL AS FLOAT) AS "Score_2", "DT_Output_7"."P_2.0" AS "Proba_2", CASE WHEN ("DT_Output_7"."P_2.0" IS NULL OR "DT_Output_7"."P_2.0" > 0.0) THEN ln("DT_Output_7"."P_2.0") ELSE -1.79769313486231e+308 END AS "LogProba_2", CAST(NULL AS FLOAT) AS "Score_3", "DT_Output_7"."P_3.0" AS "Proba_3", CASE WHEN ("DT_Output_7"."P_3.0" IS NULL OR "DT_Output_7"."P_3.0" > 0.0) THEN ln("DT_Output_7"."P_3.0") ELSE -1.79769313486231e+308 END AS "LogProba_3" 
FROM "DT_Output_7"), 
"DT_node_lookup_8" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_98 <= 1.4170069694519043) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_21 <= -0.2660372257232666) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_60 <= 0.1671047955751419) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_81 <= 0.027602799236774445) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_57 <= -0.43854647874832153) THEN 5 ELSE 6 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_82 <= 0.9272336363792419) THEN 8 ELSE 9 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_78 <= 0.9726506471633911) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_32 <= 0.9117032289505005) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_49 <= -0.08036493510007858) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_34 <= -0.5410494208335876) THEN 14 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_76 <= 0.40808913111686707) THEN 16 ELSE 17 END END ELSE 18 END ELSE 19 END ELSE 20 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_98 <= 0.46213269233703613) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_13 <= -0.3762647807598114) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_64 <= -1.581550121307373) THEN 24 ELSE 25 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_31 <= 0.3706260919570923) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_20 <= 1.075798511505127) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_30 <= -0.38489049673080444) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_25 <= -1.70578932762146) THEN 30 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= 0.3450970947742462) THEN 32 ELSE 33 END END ELSE 34 END ELSE 35 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_46 <= -0.07295272499322891) THEN 37 ELSE 38 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_46 <= 0.5553921461105347) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_44 <= -0.7008251547813416) THEN 41 ELSE 42 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_48 <= 0.7714846134185791) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_14 <= -0.9393031001091003) THEN 45 ELSE 46 END ELSE 47 END END END END ELSE 48 END AS node_id_2 
FROM "TMP_20180516113158_CODEGEN_KKAXF1_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_8" AS 
(SELECT "Values".nid AS nid, CAST("Values"."P_0.0" AS FLOAT) AS "P_0.0", CAST("Values"."P_1.0" AS FLOAT) AS "P_1.0", CAST("Values"."P_2.0" AS FLOAT) AS "P_2.0", CAST("Values"."P_3.0" AS FLOAT) AS "P_3.0", CAST("Values"."D" AS FLOAT) AS "D", CAST("Values"."DP" AS FLOAT) AS "DP" 
FROM (SELECT 5 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 6 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 8 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 9 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 14 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 16 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 17 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 18 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 19 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 20 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 24 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 25 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 30 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 32 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 33 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 34 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 35 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 37 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 38 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 41 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 42 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 45 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 46 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 47 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 48 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP") AS "Values"), 
"DT_Output_8" AS 
(SELECT "DT_node_lookup_8"."KEY" AS "KEY", "DT_node_lookup_8".node_id_2 AS node_id_2, "DT_node_data_8".nid AS nid, "DT_node_data_8"."P_0.0" AS "P_0.0", "DT_node_data_8"."P_1.0" AS "P_1.0", "DT_node_data_8"."P_2.0" AS "P_2.0", "DT_node_data_8"."P_3.0" AS "P_3.0", "DT_node_data_8"."D" AS "D", "DT_node_data_8"."DP" AS "DP" 
FROM "DT_node_lookup_8" LEFT OUTER JOIN "DT_node_data_8" ON "DT_node_lookup_8".node_id_2 = "DT_node_data_8".nid), 
"RF_Model_8" AS 
(SELECT "DT_Output_8"."KEY" AS "KEY", CAST(NULL AS FLOAT) AS "Score_0", "DT_Output_8"."P_0.0" AS "Proba_0", CASE WHEN ("DT_Output_8"."P_0.0" IS NULL OR "DT_Output_8"."P_0.0" > 0.0) THEN ln("DT_Output_8"."P_0.0") ELSE -1.79769313486231e+308 END AS "LogProba_0", CAST(NULL AS FLOAT) AS "Score_1", "DT_Output_8"."P_1.0" AS "Proba_1", CASE WHEN ("DT_Output_8"."P_1.0" IS NULL OR "DT_Output_8"."P_1.0" > 0.0) THEN ln("DT_Output_8"."P_1.0") ELSE -1.79769313486231e+308 END AS "LogProba_1", CAST(NULL AS FLOAT) AS "Score_2", "DT_Output_8"."P_2.0" AS "Proba_2", CASE WHEN ("DT_Output_8"."P_2.0" IS NULL OR "DT_Output_8"."P_2.0" > 0.0) THEN ln("DT_Output_8"."P_2.0") ELSE -1.79769313486231e+308 END AS "LogProba_2", CAST(NULL AS FLOAT) AS "Score_3", "DT_Output_8"."P_3.0" AS "Proba_3", CASE WHEN ("DT_Output_8"."P_3.0" IS NULL OR "DT_Output_8"."P_3.0" > 0.0) THEN ln("DT_Output_8"."P_3.0") ELSE -1.79769313486231e+308 END AS "LogProba_3" 
FROM "DT_Output_8"), 
"DT_node_lookup_9" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_70 <= -0.4335441291332245) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_73 <= 0.6207298040390015) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_13 <= 1.3421086072921753) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_37 <= 0.031055673956871033) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= 0.06880080699920654) THEN 5 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_43 <= -0.3917674720287323) THEN 7 ELSE 8 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_67 <= -0.8381438851356506) THEN 10 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_31 <= -0.3260265290737152) THEN 12 ELSE 13 END END END ELSE 14 END ELSE 15 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_95 <= 0.3558342158794403) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= 1.2079416513442993) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_44 <= -1.0053091049194336) THEN 19 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_36 <= 0.546984851360321) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_88 <= -1.2294015884399414) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_54 <= 0.3019731044769287) THEN 23 ELSE 24 END ELSE 25 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_25 <= 0.9324668645858765) THEN 27 ELSE 28 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= -0.2944049835205078) THEN 30 ELSE 31 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_36 <= -0.5484323501586914) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_35 <= 0.4405362904071808) THEN 34 ELSE 35 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_98 <= -0.46607425808906555) THEN 37 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_93 <= 1.629445195198059) THEN 39 ELSE 40 END END END END END AS node_id_2 
FROM "TMP_20180516113158_CODEGEN_KKAXF1_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_9" AS 
(SELECT "Values".nid AS nid, CAST("Values"."P_0.0" AS FLOAT) AS "P_0.0", CAST("Values"."P_1.0" AS FLOAT) AS "P_1.0", CAST("Values"."P_2.0" AS FLOAT) AS "P_2.0", CAST("Values"."P_3.0" AS FLOAT) AS "P_3.0", CAST("Values"."D" AS FLOAT) AS "D", CAST("Values"."DP" AS FLOAT) AS "DP" 
FROM (SELECT 5 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 7 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 8 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 10 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 12 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 13 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 14 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 15 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 19 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 23 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 24 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 25 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 27 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 28 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 30 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 31 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 34 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 35 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 37 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 39 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 40 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP") AS "Values"), 
"DT_Output_9" AS 
(SELECT "DT_node_lookup_9"."KEY" AS "KEY", "DT_node_lookup_9".node_id_2 AS node_id_2, "DT_node_data_9".nid AS nid, "DT_node_data_9"."P_0.0" AS "P_0.0", "DT_node_data_9"."P_1.0" AS "P_1.0", "DT_node_data_9"."P_2.0" AS "P_2.0", "DT_node_data_9"."P_3.0" AS "P_3.0", "DT_node_data_9"."D" AS "D", "DT_node_data_9"."DP" AS "DP" 
FROM "DT_node_lookup_9" LEFT OUTER JOIN "DT_node_data_9" ON "DT_node_lookup_9".node_id_2 = "DT_node_data_9".nid), 
"RF_Model_9" AS 
(SELECT "DT_Output_9"."KEY" AS "KEY", CAST(NULL AS FLOAT) AS "Score_0", "DT_Output_9"."P_0.0" AS "Proba_0", CASE WHEN ("DT_Output_9"."P_0.0" IS NULL OR "DT_Output_9"."P_0.0" > 0.0) THEN ln("DT_Output_9"."P_0.0") ELSE -1.79769313486231e+308 END AS "LogProba_0", CAST(NULL AS FLOAT) AS "Score_1", "DT_Output_9"."P_1.0" AS "Proba_1", CASE WHEN ("DT_Output_9"."P_1.0" IS NULL OR "DT_Output_9"."P_1.0" > 0.0) THEN ln("DT_Output_9"."P_1.0") ELSE -1.79769313486231e+308 END AS "LogProba_1", CAST(NULL AS FLOAT) AS "Score_2", "DT_Output_9"."P_2.0" AS "Proba_2", CASE WHEN ("DT_Output_9"."P_2.0" IS NULL OR "DT_Output_9"."P_2.0" > 0.0) THEN ln("DT_Output_9"."P_2.0") ELSE -1.79769313486231e+308 END AS "LogProba_2", CAST(NULL AS FLOAT) AS "Score_3", "DT_Output_9"."P_3.0" AS "Proba_3", CASE WHEN ("DT_Output_9"."P_3.0" IS NULL OR "DT_Output_9"."P_3.0" > 0.0) THEN ln("DT_Output_9"."P_3.0") ELSE -1.79769313486231e+308 END AS "LogProba_3" 
FROM "DT_Output_9")
 INSERT INTO "TMP_20180516113159_CODEGEN_860VWR_RF_B0" ("KEY", "Score_0", "Proba_0", "LogProba_0", "Score_1", "Proba_1", "LogProba_1", "Score_2", "Proba_2", "LogProba_2", "Score_3", "Proba_3", "LogProba_3") SELECT "RF_B0"."KEY", "RF_B0"."Score_0", "RF_B0"."Proba_0", "RF_B0"."LogProba_0", "RF_B0"."Score_1", "RF_B0"."Proba_1", "RF_B0"."LogProba_1", "RF_B0"."Score_2", "RF_B0"."Proba_2", "RF_B0"."LogProba_2", "RF_B0"."Score_3", "RF_B0"."Proba_3", "RF_B0"."LogProba_3" 
FROM (SELECT "RF_esu_0"."KEY" AS "KEY", "RF_esu_0"."Score_0" AS "Score_0", "RF_esu_0"."Proba_0" AS "Proba_0", "RF_esu_0"."LogProba_0" AS "LogProba_0", "RF_esu_0"."Score_1" AS "Score_1", "RF_esu_0"."Proba_1" AS "Proba_1", "RF_esu_0"."LogProba_1" AS "LogProba_1", "RF_esu_0"."Score_2" AS "Score_2", "RF_esu_0"."Proba_2" AS "Proba_2", "RF_esu_0"."LogProba_2" AS "LogProba_2", "RF_esu_0"."Score_3" AS "Score_3", "RF_esu_0"."Proba_3" AS "Proba_3", "RF_esu_0"."LogProba_3" AS "LogProba_3" 
FROM (SELECT "RF_Model_0"."KEY" AS "KEY", "RF_Model_0"."Score_0" AS "Score_0", "RF_Model_0"."Proba_0" AS "Proba_0", "RF_Model_0"."LogProba_0" AS "LogProba_0", "RF_Model_0"."Score_1" AS "Score_1", "RF_Model_0"."Proba_1" AS "Proba_1", "RF_Model_0"."LogProba_1" AS "LogProba_1", "RF_Model_0"."Score_2" AS "Score_2", "RF_Model_0"."Proba_2" AS "Proba_2", "RF_Model_0"."LogProba_2" AS "LogProba_2", "RF_Model_0"."Score_3" AS "Score_3", "RF_Model_0"."Proba_3" AS "Proba_3", "RF_Model_0"."LogProba_3" AS "LogProba_3" 
FROM "RF_Model_0" UNION ALL SELECT "RF_Model_1"."KEY" AS "KEY", "RF_Model_1"."Score_0" AS "Score_0", "RF_Model_1"."Proba_0" AS "Proba_0", "RF_Model_1"."LogProba_0" AS "LogProba_0", "RF_Model_1"."Score_1" AS "Score_1", "RF_Model_1"."Proba_1" AS "Proba_1", "RF_Model_1"."LogProba_1" AS "LogProba_1", "RF_Model_1"."Score_2" AS "Score_2", "RF_Model_1"."Proba_2" AS "Proba_2", "RF_Model_1"."LogProba_2" AS "LogProba_2", "RF_Model_1"."Score_3" AS "Score_3", "RF_Model_1"."Proba_3" AS "Proba_3", "RF_Model_1"."LogProba_3" AS "LogProba_3" 
FROM "RF_Model_1" UNION ALL SELECT "RF_Model_2"."KEY" AS "KEY", "RF_Model_2"."Score_0" AS "Score_0", "RF_Model_2"."Proba_0" AS "Proba_0", "RF_Model_2"."LogProba_0" AS "LogProba_0", "RF_Model_2"."Score_1" AS "Score_1", "RF_Model_2"."Proba_1" AS "Proba_1", "RF_Model_2"."LogProba_1" AS "LogProba_1", "RF_Model_2"."Score_2" AS "Score_2", "RF_Model_2"."Proba_2" AS "Proba_2", "RF_Model_2"."LogProba_2" AS "LogProba_2", "RF_Model_2"."Score_3" AS "Score_3", "RF_Model_2"."Proba_3" AS "Proba_3", "RF_Model_2"."LogProba_3" AS "LogProba_3" 
FROM "RF_Model_2" UNION ALL SELECT "RF_Model_3"."KEY" AS "KEY", "RF_Model_3"."Score_0" AS "Score_0", "RF_Model_3"."Proba_0" AS "Proba_0", "RF_Model_3"."LogProba_0" AS "LogProba_0", "RF_Model_3"."Score_1" AS "Score_1", "RF_Model_3"."Proba_1" AS "Proba_1", "RF_Model_3"."LogProba_1" AS "LogProba_1", "RF_Model_3"."Score_2" AS "Score_2", "RF_Model_3"."Proba_2" AS "Proba_2", "RF_Model_3"."LogProba_2" AS "LogProba_2", "RF_Model_3"."Score_3" AS "Score_3", "RF_Model_3"."Proba_3" AS "Proba_3", "RF_Model_3"."LogProba_3" AS "LogProba_3" 
FROM "RF_Model_3" UNION ALL SELECT "RF_Model_4"."KEY" AS "KEY", "RF_Model_4"."Score_0" AS "Score_0", "RF_Model_4"."Proba_0" AS "Proba_0", "RF_Model_4"."LogProba_0" AS "LogProba_0", "RF_Model_4"."Score_1" AS "Score_1", "RF_Model_4"."Proba_1" AS "Proba_1", "RF_Model_4"."LogProba_1" AS "LogProba_1", "RF_Model_4"."Score_2" AS "Score_2", "RF_Model_4"."Proba_2" AS "Proba_2", "RF_Model_4"."LogProba_2" AS "LogProba_2", "RF_Model_4"."Score_3" AS "Score_3", "RF_Model_4"."Proba_3" AS "Proba_3", "RF_Model_4"."LogProba_3" AS "LogProba_3" 
FROM "RF_Model_4" UNION ALL SELECT "RF_Model_5"."KEY" AS "KEY", "RF_Model_5"."Score_0" AS "Score_0", "RF_Model_5"."Proba_0" AS "Proba_0", "RF_Model_5"."LogProba_0" AS "LogProba_0", "RF_Model_5"."Score_1" AS "Score_1", "RF_Model_5"."Proba_1" AS "Proba_1", "RF_Model_5"."LogProba_1" AS "LogProba_1", "RF_Model_5"."Score_2" AS "Score_2", "RF_Model_5"."Proba_2" AS "Proba_2", "RF_Model_5"."LogProba_2" AS "LogProba_2", "RF_Model_5"."Score_3" AS "Score_3", "RF_Model_5"."Proba_3" AS "Proba_3", "RF_Model_5"."LogProba_3" AS "LogProba_3" 
FROM "RF_Model_5" UNION ALL SELECT "RF_Model_6"."KEY" AS "KEY", "RF_Model_6"."Score_0" AS "Score_0", "RF_Model_6"."Proba_0" AS "Proba_0", "RF_Model_6"."LogProba_0" AS "LogProba_0", "RF_Model_6"."Score_1" AS "Score_1", "RF_Model_6"."Proba_1" AS "Proba_1", "RF_Model_6"."LogProba_1" AS "LogProba_1", "RF_Model_6"."Score_2" AS "Score_2", "RF_Model_6"."Proba_2" AS "Proba_2", "RF_Model_6"."LogProba_2" AS "LogProba_2", "RF_Model_6"."Score_3" AS "Score_3", "RF_Model_6"."Proba_3" AS "Proba_3", "RF_Model_6"."LogProba_3" AS "LogProba_3" 
FROM "RF_Model_6" UNION ALL SELECT "RF_Model_7"."KEY" AS "KEY", "RF_Model_7"."Score_0" AS "Score_0", "RF_Model_7"."Proba_0" AS "Proba_0", "RF_Model_7"."LogProba_0" AS "LogProba_0", "RF_Model_7"."Score_1" AS "Score_1", "RF_Model_7"."Proba_1" AS "Proba_1", "RF_Model_7"."LogProba_1" AS "LogProba_1", "RF_Model_7"."Score_2" AS "Score_2", "RF_Model_7"."Proba_2" AS "Proba_2", "RF_Model_7"."LogProba_2" AS "LogProba_2", "RF_Model_7"."Score_3" AS "Score_3", "RF_Model_7"."Proba_3" AS "Proba_3", "RF_Model_7"."LogProba_3" AS "LogProba_3" 
FROM "RF_Model_7" UNION ALL SELECT "RF_Model_8"."KEY" AS "KEY", "RF_Model_8"."Score_0" AS "Score_0", "RF_Model_8"."Proba_0" AS "Proba_0", "RF_Model_8"."LogProba_0" AS "LogProba_0", "RF_Model_8"."Score_1" AS "Score_1", "RF_Model_8"."Proba_1" AS "Proba_1", "RF_Model_8"."LogProba_1" AS "LogProba_1", "RF_Model_8"."Score_2" AS "Score_2", "RF_Model_8"."Proba_2" AS "Proba_2", "RF_Model_8"."LogProba_2" AS "LogProba_2", "RF_Model_8"."Score_3" AS "Score_3", "RF_Model_8"."Proba_3" AS "Proba_3", "RF_Model_8"."LogProba_3" AS "LogProba_3" 
FROM "RF_Model_8" UNION ALL SELECT "RF_Model_9"."KEY" AS "KEY", "RF_Model_9"."Score_0" AS "Score_0", "RF_Model_9"."Proba_0" AS "Proba_0", "RF_Model_9"."LogProba_0" AS "LogProba_0", "RF_Model_9"."Score_1" AS "Score_1", "RF_Model_9"."Proba_1" AS "Proba_1", "RF_Model_9"."LogProba_1" AS "LogProba_1", "RF_Model_9"."Score_2" AS "Score_2", "RF_Model_9"."Proba_2" AS "Proba_2", "RF_Model_9"."LogProba_2" AS "LogProba_2", "RF_Model_9"."Score_3" AS "Score_3", "RF_Model_9"."Proba_3" AS "Proba_3", "RF_Model_9"."LogProba_3" AS "LogProba_3" 
FROM "RF_Model_9") AS "RF_esu_0") AS "RF_B0"

-- Code For temporary table TMP_20180516113159_CODEGEN_NWV6SJ_RF_B1 part 1. Create 


CREATE TEMPORARY TABLE "TMP_20180516113159_CODEGEN_NWV6SJ_RF_B1" (
	"KEY" BIGINT, 
	"Score_0" FLOAT, 
	"Proba_0" FLOAT, 
	"LogProba_0" FLOAT, 
	"Score_1" FLOAT, 
	"Proba_1" FLOAT, 
	"LogProba_1" FLOAT, 
	"Score_2" FLOAT, 
	"Proba_2" FLOAT, 
	"LogProba_2" FLOAT, 
	"Score_3" FLOAT, 
	"Proba_3" FLOAT, 
	"LogProba_3" FLOAT
)



-- Code For temporary table TMP_20180516113159_CODEGEN_NWV6SJ_RF_B1 part 2. Populate

WITH "DT_node_lookup_10" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_75 <= 1.6296749114990234) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_58 <= 0.21445879340171814) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_96 <= 1.794742465019226) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_53 <= 1.1616694927215576) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_58 <= -0.22148633003234863) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_56 <= 0.31032195687294006) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_55 <= -1.7169973850250244) THEN 7 ELSE 8 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_35 <= -0.5260591506958008) THEN 10 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_84 <= 0.9558098316192627) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= 0.06626337766647339) THEN 13 ELSE 14 END ELSE 15 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_29 <= 0.2129690945148468) THEN 17 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_53 <= -0.14496847987174988) THEN 19 ELSE 20 END END END ELSE 21 END ELSE 22 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_64 <= 0.27200451493263245) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_55 <= 1.1322236061096191) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_35 <= 0.6439482569694519) THEN 26 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_89 <= 0.09086251258850098) THEN 28 ELSE 29 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_21 <= -0.1383885145187378) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_89 <= 0.12957966327667236) THEN 32 ELSE 33 END ELSE 34 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_25 <= -0.20875856280326843) THEN 36 ELSE 37 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_77 <= -1.3879718780517578) THEN 39 ELSE 40 END END AS node_id_2 
FROM "TMP_20180516113158_CODEGEN_KKAXF1_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_10" AS 
(SELECT "Values".nid AS nid, CAST("Values"."P_0.0" AS FLOAT) AS "P_0.0", CAST("Values"."P_1.0" AS FLOAT) AS "P_1.0", CAST("Values"."P_2.0" AS FLOAT) AS "P_2.0", CAST("Values"."P_3.0" AS FLOAT) AS "P_3.0", CAST("Values"."D" AS FLOAT) AS "D", CAST("Values"."DP" AS FLOAT) AS "DP" 
FROM (SELECT 7 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 8 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 10 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 13 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 14 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 15 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 17 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 19 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 20 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 21 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 22 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 26 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 28 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 29 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 32 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 33 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 34 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 36 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 37 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 39 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 40 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP") AS "Values"), 
"DT_Output_10" AS 
(SELECT "DT_node_lookup_10"."KEY" AS "KEY", "DT_node_lookup_10".node_id_2 AS node_id_2, "DT_node_data_10".nid AS nid, "DT_node_data_10"."P_0.0" AS "P_0.0", "DT_node_data_10"."P_1.0" AS "P_1.0", "DT_node_data_10"."P_2.0" AS "P_2.0", "DT_node_data_10"."P_3.0" AS "P_3.0", "DT_node_data_10"."D" AS "D", "DT_node_data_10"."DP" AS "DP" 
FROM "DT_node_lookup_10" LEFT OUTER JOIN "DT_node_data_10" ON "DT_node_lookup_10".node_id_2 = "DT_node_data_10".nid), 
"RF_Model_10" AS 
(SELECT "DT_Output_10"."KEY" AS "KEY", CAST(NULL AS FLOAT) AS "Score_0", "DT_Output_10"."P_0.0" AS "Proba_0", CASE WHEN ("DT_Output_10"."P_0.0" IS NULL OR "DT_Output_10"."P_0.0" > 0.0) THEN ln("DT_Output_10"."P_0.0") ELSE -1.79769313486231e+308 END AS "LogProba_0", CAST(NULL AS FLOAT) AS "Score_1", "DT_Output_10"."P_1.0" AS "Proba_1", CASE WHEN ("DT_Output_10"."P_1.0" IS NULL OR "DT_Output_10"."P_1.0" > 0.0) THEN ln("DT_Output_10"."P_1.0") ELSE -1.79769313486231e+308 END AS "LogProba_1", CAST(NULL AS FLOAT) AS "Score_2", "DT_Output_10"."P_2.0" AS "Proba_2", CASE WHEN ("DT_Output_10"."P_2.0" IS NULL OR "DT_Output_10"."P_2.0" > 0.0) THEN ln("DT_Output_10"."P_2.0") ELSE -1.79769313486231e+308 END AS "LogProba_2", CAST(NULL AS FLOAT) AS "Score_3", "DT_Output_10"."P_3.0" AS "Proba_3", CASE WHEN ("DT_Output_10"."P_3.0" IS NULL OR "DT_Output_10"."P_3.0" > 0.0) THEN ln("DT_Output_10"."P_3.0") ELSE -1.79769313486231e+308 END AS "LogProba_3" 
FROM "DT_Output_10"), 
"DT_node_lookup_11" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_26 <= 0.8569047451019287) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_80 <= -0.25150901079177856) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_69 <= -0.1627538800239563) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_62 <= 1.1796503067016602) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_92 <= 1.1492054462432861) THEN 5 ELSE 6 END ELSE 7 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_58 <= -0.9005370140075684) THEN 9 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_99 <= -0.16914774477481842) THEN 11 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= -0.36776629090309143) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_85 <= -0.12271672487258911) THEN 14 ELSE 15 END ELSE 16 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_27 <= 0.7954211235046387) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_71 <= 1.2743257284164429) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_87 <= -0.8142471313476562) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_14 <= -0.20303310453891754) THEN 21 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_78 <= 0.4233367443084717) THEN 23 ELSE 24 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_62 <= -1.620105266571045) THEN 26 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_88 <= 1.0084651708602905) THEN 28 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_93 <= -0.19382573664188385) THEN 30 ELSE 31 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_38 <= 0.30206620693206787) THEN 33 ELSE 34 END END ELSE 35 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_16 <= -0.3785784840583801) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_18 <= -0.2582567036151886) THEN 38 ELSE 39 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_59 <= 1.4834586381912231) THEN 41 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_76 <= 0.5956143736839294) THEN 43 ELSE 44 END END END END AS node_id_2 
FROM "TMP_20180516113158_CODEGEN_KKAXF1_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_11" AS 
(SELECT "Values".nid AS nid, CAST("Values"."P_0.0" AS FLOAT) AS "P_0.0", CAST("Values"."P_1.0" AS FLOAT) AS "P_1.0", CAST("Values"."P_2.0" AS FLOAT) AS "P_2.0", CAST("Values"."P_3.0" AS FLOAT) AS "P_3.0", CAST("Values"."D" AS FLOAT) AS "D", CAST("Values"."DP" AS FLOAT) AS "DP" 
FROM (SELECT 5 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 6 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 7 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 9 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 11 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 14 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 15 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 16 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 21 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 23 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 24 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 26 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 28 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 30 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 31 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 33 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 34 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 35 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 38 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 39 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 41 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 43 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 44 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP") AS "Values"), 
"DT_Output_11" AS 
(SELECT "DT_node_lookup_11"."KEY" AS "KEY", "DT_node_lookup_11".node_id_2 AS node_id_2, "DT_node_data_11".nid AS nid, "DT_node_data_11"."P_0.0" AS "P_0.0", "DT_node_data_11"."P_1.0" AS "P_1.0", "DT_node_data_11"."P_2.0" AS "P_2.0", "DT_node_data_11"."P_3.0" AS "P_3.0", "DT_node_data_11"."D" AS "D", "DT_node_data_11"."DP" AS "DP" 
FROM "DT_node_lookup_11" LEFT OUTER JOIN "DT_node_data_11" ON "DT_node_lookup_11".node_id_2 = "DT_node_data_11".nid), 
"RF_Model_11" AS 
(SELECT "DT_Output_11"."KEY" AS "KEY", CAST(NULL AS FLOAT) AS "Score_0", "DT_Output_11"."P_0.0" AS "Proba_0", CASE WHEN ("DT_Output_11"."P_0.0" IS NULL OR "DT_Output_11"."P_0.0" > 0.0) THEN ln("DT_Output_11"."P_0.0") ELSE -1.79769313486231e+308 END AS "LogProba_0", CAST(NULL AS FLOAT) AS "Score_1", "DT_Output_11"."P_1.0" AS "Proba_1", CASE WHEN ("DT_Output_11"."P_1.0" IS NULL OR "DT_Output_11"."P_1.0" > 0.0) THEN ln("DT_Output_11"."P_1.0") ELSE -1.79769313486231e+308 END AS "LogProba_1", CAST(NULL AS FLOAT) AS "Score_2", "DT_Output_11"."P_2.0" AS "Proba_2", CASE WHEN ("DT_Output_11"."P_2.0" IS NULL OR "DT_Output_11"."P_2.0" > 0.0) THEN ln("DT_Output_11"."P_2.0") ELSE -1.79769313486231e+308 END AS "LogProba_2", CAST(NULL AS FLOAT) AS "Score_3", "DT_Output_11"."P_3.0" AS "Proba_3", CASE WHEN ("DT_Output_11"."P_3.0" IS NULL OR "DT_Output_11"."P_3.0" > 0.0) THEN ln("DT_Output_11"."P_3.0") ELSE -1.79769313486231e+308 END AS "LogProba_3" 
FROM "DT_Output_11"), 
"DT_node_lookup_12" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_73 <= 0.5624892115592957) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_100 <= -1.1587517261505127) THEN 2 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_35 <= -0.8736299276351929) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_18 <= 0.5635712146759033) THEN 5 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_97 <= -0.6418159008026123) THEN 7 ELSE 8 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= 0.09524992853403091) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_90 <= 0.5267166495323181) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_37 <= -0.302365243434906) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_87 <= -0.07472456991672516) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= -0.9558314085006714) THEN 14 ELSE 15 END ELSE 16 END ELSE 17 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_31 <= -1.0584309101104736) THEN 19 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_15 <= 0.010281674563884735) THEN 21 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_77 <= 0.3205074369907379) THEN 23 ELSE 24 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_95 <= -0.5330676436424255) THEN 26 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_101 <= 1.3692479133605957) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_55 <= 0.7873340845108032) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_25 <= 1.424566626548767) THEN 30 ELSE 31 END ELSE 32 END ELSE 33 END END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_97 <= -0.2764899730682373) THEN 35 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_46 <= -1.062705636024475) THEN 37 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_22 <= -0.4162159264087677) THEN 39 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_14 <= 0.08126914501190186) THEN 41 ELSE 42 END END END END END AS node_id_2 
FROM "TMP_20180516113158_CODEGEN_KKAXF1_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_12" AS 
(SELECT "Values".nid AS nid, CAST("Values"."P_0.0" AS FLOAT) AS "P_0.0", CAST("Values"."P_1.0" AS FLOAT) AS "P_1.0", CAST("Values"."P_2.0" AS FLOAT) AS "P_2.0", CAST("Values"."P_3.0" AS FLOAT) AS "P_3.0", CAST("Values"."D" AS FLOAT) AS "D", CAST("Values"."DP" AS FLOAT) AS "DP" 
FROM (SELECT 2 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 5 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 7 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 8 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 14 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 15 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 16 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 17 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 19 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 21 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 23 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 24 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 26 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 30 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 31 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 32 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 33 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 35 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 37 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 39 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 41 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 42 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP") AS "Values"), 
"DT_Output_12" AS 
(SELECT "DT_node_lookup_12"."KEY" AS "KEY", "DT_node_lookup_12".node_id_2 AS node_id_2, "DT_node_data_12".nid AS nid, "DT_node_data_12"."P_0.0" AS "P_0.0", "DT_node_data_12"."P_1.0" AS "P_1.0", "DT_node_data_12"."P_2.0" AS "P_2.0", "DT_node_data_12"."P_3.0" AS "P_3.0", "DT_node_data_12"."D" AS "D", "DT_node_data_12"."DP" AS "DP" 
FROM "DT_node_lookup_12" LEFT OUTER JOIN "DT_node_data_12" ON "DT_node_lookup_12".node_id_2 = "DT_node_data_12".nid), 
"RF_Model_12" AS 
(SELECT "DT_Output_12"."KEY" AS "KEY", CAST(NULL AS FLOAT) AS "Score_0", "DT_Output_12"."P_0.0" AS "Proba_0", CASE WHEN ("DT_Output_12"."P_0.0" IS NULL OR "DT_Output_12"."P_0.0" > 0.0) THEN ln("DT_Output_12"."P_0.0") ELSE -1.79769313486231e+308 END AS "LogProba_0", CAST(NULL AS FLOAT) AS "Score_1", "DT_Output_12"."P_1.0" AS "Proba_1", CASE WHEN ("DT_Output_12"."P_1.0" IS NULL OR "DT_Output_12"."P_1.0" > 0.0) THEN ln("DT_Output_12"."P_1.0") ELSE -1.79769313486231e+308 END AS "LogProba_1", CAST(NULL AS FLOAT) AS "Score_2", "DT_Output_12"."P_2.0" AS "Proba_2", CASE WHEN ("DT_Output_12"."P_2.0" IS NULL OR "DT_Output_12"."P_2.0" > 0.0) THEN ln("DT_Output_12"."P_2.0") ELSE -1.79769313486231e+308 END AS "LogProba_2", CAST(NULL AS FLOAT) AS "Score_3", "DT_Output_12"."P_3.0" AS "Proba_3", CASE WHEN ("DT_Output_12"."P_3.0" IS NULL OR "DT_Output_12"."P_3.0" > 0.0) THEN ln("DT_Output_12"."P_3.0") ELSE -1.79769313486231e+308 END AS "LogProba_3" 
FROM "DT_Output_12"), 
"DT_node_lookup_13" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_70 <= -0.5234010219573975) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= -0.9898052215576172) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_90 <= 0.3800216317176819) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_95 <= -0.9302509427070618) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_62 <= 0.35216963291168213) THEN 7 ELSE 8 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_92 <= -2.230618476867676) THEN 10 ELSE 11 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_22 <= -0.10855905711650848) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_30 <= -0.42813634872436523) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_60 <= -0.8129291534423828) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_21 <= 0.07264702767133713) THEN 16 ELSE 17 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= 0.8640505075454712) THEN 19 ELSE 20 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_94 <= 0.14230568706989288) THEN 22 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_15 <= -0.48550230264663696) THEN 24 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_33 <= -0.9510079622268677) THEN 26 ELSE 27 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_96 <= -0.2077876180410385) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_21 <= 1.0489413738250732) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_81 <= 0.543459415435791) THEN 31 ELSE 32 END ELSE 33 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_64 <= -0.9078073501586914) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_35 <= 0.13725052773952484) THEN 36 ELSE 37 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_88 <= -1.1944091320037842) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_84 <= 0.17122295498847961) THEN 40 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_63 <= 0.6103394031524658) THEN 42 ELSE 43 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= -1.9294803142547607) THEN 45 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_35 <= 0.9344494342803955) THEN 47 ELSE 48 END END END END END END END AS node_id_2 
FROM "TMP_20180516113158_CODEGEN_KKAXF1_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_13" AS 
(SELECT "Values".nid AS nid, CAST("Values"."P_0.0" AS FLOAT) AS "P_0.0", CAST("Values"."P_1.0" AS FLOAT) AS "P_1.0", CAST("Values"."P_2.0" AS FLOAT) AS "P_2.0", CAST("Values"."P_3.0" AS FLOAT) AS "P_3.0", CAST("Values"."D" AS FLOAT) AS "D", CAST("Values"."DP" AS FLOAT) AS "DP" 
FROM (SELECT 3 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 4 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 7 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 8 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 10 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 11 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 16 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 17 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 19 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 20 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 22 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 24 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 26 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 27 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 31 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 32 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 33 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 36 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 37 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 40 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 42 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 43 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 45 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 47 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 48 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP") AS "Values"), 
"DT_Output_13" AS 
(SELECT "DT_node_lookup_13"."KEY" AS "KEY", "DT_node_lookup_13".node_id_2 AS node_id_2, "DT_node_data_13".nid AS nid, "DT_node_data_13"."P_0.0" AS "P_0.0", "DT_node_data_13"."P_1.0" AS "P_1.0", "DT_node_data_13"."P_2.0" AS "P_2.0", "DT_node_data_13"."P_3.0" AS "P_3.0", "DT_node_data_13"."D" AS "D", "DT_node_data_13"."DP" AS "DP" 
FROM "DT_node_lookup_13" LEFT OUTER JOIN "DT_node_data_13" ON "DT_node_lookup_13".node_id_2 = "DT_node_data_13".nid), 
"RF_Model_13" AS 
(SELECT "DT_Output_13"."KEY" AS "KEY", CAST(NULL AS FLOAT) AS "Score_0", "DT_Output_13"."P_0.0" AS "Proba_0", CASE WHEN ("DT_Output_13"."P_0.0" IS NULL OR "DT_Output_13"."P_0.0" > 0.0) THEN ln("DT_Output_13"."P_0.0") ELSE -1.79769313486231e+308 END AS "LogProba_0", CAST(NULL AS FLOAT) AS "Score_1", "DT_Output_13"."P_1.0" AS "Proba_1", CASE WHEN ("DT_Output_13"."P_1.0" IS NULL OR "DT_Output_13"."P_1.0" > 0.0) THEN ln("DT_Output_13"."P_1.0") ELSE -1.79769313486231e+308 END AS "LogProba_1", CAST(NULL AS FLOAT) AS "Score_2", "DT_Output_13"."P_2.0" AS "Proba_2", CASE WHEN ("DT_Output_13"."P_2.0" IS NULL OR "DT_Output_13"."P_2.0" > 0.0) THEN ln("DT_Output_13"."P_2.0") ELSE -1.79769313486231e+308 END AS "LogProba_2", CAST(NULL AS FLOAT) AS "Score_3", "DT_Output_13"."P_3.0" AS "Proba_3", CASE WHEN ("DT_Output_13"."P_3.0" IS NULL OR "DT_Output_13"."P_3.0" > 0.0) THEN ln("DT_Output_13"."P_3.0") ELSE -1.79769313486231e+308 END AS "LogProba_3" 
FROM "DT_Output_13"), 
"DT_node_lookup_14" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_26 <= 0.4293630123138428) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_22 <= -1.0384776592254639) THEN 2 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_44 <= 0.04775530844926834) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= -0.22048810124397278) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_57 <= -0.4165790379047394) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_47 <= 1.4903290271759033) THEN 7 ELSE 8 END ELSE 9 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_101 <= 0.3357979953289032) THEN 11 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_93 <= -0.19609680771827698) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_20 <= 1.265566110610962) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_45 <= -0.549750804901123) THEN 15 ELSE 16 END ELSE 17 END ELSE 18 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_19 <= -0.11931706964969635) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_29 <= -0.08935049921274185) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_26 <= -0.1801261007785797) THEN 22 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_51 <= 0.28970709443092346) THEN 24 ELSE 25 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_29 <= 1.396382451057434) THEN 27 ELSE 28 END END ELSE 29 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_20 <= -0.2947124242782593) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_33 <= -1.2980328798294067) THEN 32 ELSE 33 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_92 <= -0.6313028335571289) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_95 <= -0.4686429500579834) THEN 36 ELSE 37 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_43 <= 0.6386263966560364) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_22 <= -1.2999072074890137) THEN 40 ELSE 41 END ELSE 42 END END END END AS node_id_2 
FROM "TMP_20180516113158_CODEGEN_KKAXF1_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_14" AS 
(SELECT "Values".nid AS nid, CAST("Values"."P_0.0" AS FLOAT) AS "P_0.0", CAST("Values"."P_1.0" AS FLOAT) AS "P_1.0", CAST("Values"."P_2.0" AS FLOAT) AS "P_2.0", CAST("Values"."P_3.0" AS FLOAT) AS "P_3.0", CAST("Values"."D" AS FLOAT) AS "D", CAST("Values"."DP" AS FLOAT) AS "DP" 
FROM (SELECT 2 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 7 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 8 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 9 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 11 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 15 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 16 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 17 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 18 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 22 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 24 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 25 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 27 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 28 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 29 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 32 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 33 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 36 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 37 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 40 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 41 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 42 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP") AS "Values"), 
"DT_Output_14" AS 
(SELECT "DT_node_lookup_14"."KEY" AS "KEY", "DT_node_lookup_14".node_id_2 AS node_id_2, "DT_node_data_14".nid AS nid, "DT_node_data_14"."P_0.0" AS "P_0.0", "DT_node_data_14"."P_1.0" AS "P_1.0", "DT_node_data_14"."P_2.0" AS "P_2.0", "DT_node_data_14"."P_3.0" AS "P_3.0", "DT_node_data_14"."D" AS "D", "DT_node_data_14"."DP" AS "DP" 
FROM "DT_node_lookup_14" LEFT OUTER JOIN "DT_node_data_14" ON "DT_node_lookup_14".node_id_2 = "DT_node_data_14".nid), 
"RF_Model_14" AS 
(SELECT "DT_Output_14"."KEY" AS "KEY", CAST(NULL AS FLOAT) AS "Score_0", "DT_Output_14"."P_0.0" AS "Proba_0", CASE WHEN ("DT_Output_14"."P_0.0" IS NULL OR "DT_Output_14"."P_0.0" > 0.0) THEN ln("DT_Output_14"."P_0.0") ELSE -1.79769313486231e+308 END AS "LogProba_0", CAST(NULL AS FLOAT) AS "Score_1", "DT_Output_14"."P_1.0" AS "Proba_1", CASE WHEN ("DT_Output_14"."P_1.0" IS NULL OR "DT_Output_14"."P_1.0" > 0.0) THEN ln("DT_Output_14"."P_1.0") ELSE -1.79769313486231e+308 END AS "LogProba_1", CAST(NULL AS FLOAT) AS "Score_2", "DT_Output_14"."P_2.0" AS "Proba_2", CASE WHEN ("DT_Output_14"."P_2.0" IS NULL OR "DT_Output_14"."P_2.0" > 0.0) THEN ln("DT_Output_14"."P_2.0") ELSE -1.79769313486231e+308 END AS "LogProba_2", CAST(NULL AS FLOAT) AS "Score_3", "DT_Output_14"."P_3.0" AS "Proba_3", CASE WHEN ("DT_Output_14"."P_3.0" IS NULL OR "DT_Output_14"."P_3.0" > 0.0) THEN ln("DT_Output_14"."P_3.0") ELSE -1.79769313486231e+308 END AS "LogProba_3" 
FROM "DT_Output_14"), 
"DT_node_lookup_15" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_43 <= 0.6110901832580566) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_31 <= -0.09067592769861221) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= -0.2336425483226776) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_98 <= 1.5510609149932861) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_63 <= -0.4211391806602478) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_57 <= -0.6176704168319702) THEN 6 ELSE 7 END ELSE 8 END ELSE 9 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_48 <= 0.0969921350479126) THEN 11 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= 0.42943811416625977) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_25 <= 1.1225743293762207) THEN 14 ELSE 15 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= -0.7524423599243164) THEN 17 ELSE 18 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_21 <= 0.7955797910690308) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_63 <= 1.308265209197998) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= -0.6407898664474487) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_52 <= -0.27990633249282837) THEN 23 ELSE 24 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_66 <= 0.18104605376720428) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_94 <= -0.9462020397186279) THEN 27 ELSE 28 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= -0.6770864129066467) THEN 30 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_79 <= 1.043843388557434) THEN 32 ELSE 33 END END END END ELSE 34 END ELSE 35 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_95 <= -0.29410016536712646) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_77 <= 0.42626112699508667) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_63 <= -0.02765606716275215) THEN 39 ELSE 40 END ELSE 41 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_94 <= -0.40685683488845825) THEN 43 ELSE 44 END END END AS node_id_2 
FROM "TMP_20180516113158_CODEGEN_KKAXF1_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_15" AS 
(SELECT "Values".nid AS nid, CAST("Values"."P_0.0" AS FLOAT) AS "P_0.0", CAST("Values"."P_1.0" AS FLOAT) AS "P_1.0", CAST("Values"."P_2.0" AS FLOAT) AS "P_2.0", CAST("Values"."P_3.0" AS FLOAT) AS "P_3.0", CAST("Values"."D" AS FLOAT) AS "D", CAST("Values"."DP" AS FLOAT) AS "DP" 
FROM (SELECT 6 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 7 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 8 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 9 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 11 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 14 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 15 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 17 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 18 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 23 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 24 AS nid, 1.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 0.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 27 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 28 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 30 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 32 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 33 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 34 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 35 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 39 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 40 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 1.0 AS "P_2.0", 0.0 AS "P_3.0", 2.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 41 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 43 AS nid, 0.0 AS "P_0.0", 1.0 AS "P_1.0", 0.0 AS "P_2.0", 0.0 AS "P_3.0", 1.0 AS "D", 1.0 AS "DP" UNION ALL SELECT 44 AS nid, 0.0 AS "P_0.0", 0.0 AS "P_1.0", 0.0 AS "P_2.0", 1.0 AS "P_3.0", 3.0 AS "D", 1.0 AS "DP") AS "Values"), 
"DT_Output_15" AS 
(SELECT "DT_node_lookup_15"."KEY" AS "KEY", "DT_node_lookup_15".node_id_2 AS node_id_2, "DT_node_data_15".nid AS nid, "DT_node_data_15"."P_0.0" AS "P_0.0", "DT_node_data_15"."P_1.0" AS "P_1.0", "DT_node_data_15"."P_2.0" AS "P_2.0", "DT_node_data_15"."P_3.0" AS "P_3.0", "DT_node_data_15"."D" AS "D", "DT_node_data_15"."DP" AS "DP" 
FROM "DT_node_lookup_15" LEFT OUTER JOIN "DT_node_data_15" ON "DT_node_lookup_15".node_id_2 = "DT_node_data_15".nid), 
"RF_Model_15" AS 
(SELECT "DT_Output_15"."KEY" AS "KEY", CAST(NULL AS FLOAT) AS "Score_0", "DT_Output_15"."P_0.0" AS "Proba_0", CASE WHEN ("DT_Output_15"."P_0.0" IS NULL OR "DT_Output_15"."P_0.0" > 0.0) THEN ln("DT_Output_15"."P_0.0") ELSE -1.79769313486231e+308 END AS "LogProba_0", CAST(NULL AS FLOAT) AS "Score_1", "DT_Output_15"."P_1.0" AS "Proba_1", CASE WHEN ("DT_Output_15"."P_1.0" IS NULL OR "DT_Output_15"."P_1.0" > 0.0) THEN ln("DT_Output_15"."P_1.0") ELSE -1.79769313486231e+308 END AS "LogProba_1", CAST(NULL AS FLOAT) AS "Score_2", "DT_Output_15"."P_2.0" AS "Proba_2", CASE WHEN ("DT_Output_15"."P_2.0" IS NULL OR "DT_Output_15"."P_2.0" > 0.0) THEN ln("DT_Output_15"."P_2.0") ELSE -1.79769313486231e+308 END AS "LogProba_2", CAST(NULL AS FLOAT) AS "Score_3", "DT_Output_15"."P_3.0" AS "Proba_3", CASE WHEN ("DT_Output_15"."P_3.0" IS NULL OR "DT_Output_15"."P_3.0" > 0.0) THEN ln("DT_Output_15"."P_3.0") ELSE -1.79769313486231e+308 END AS "LogProba_3" 
FROM "DT_Output_15")
 INSERT INTO "TMP_20180516113159_CODEGEN_NWV6SJ_RF_B1" ("KEY", "Score_0", "Proba_0", "LogProba_0", "Score_1", "Proba_1", "LogProba_1", "Score_2", "Proba_2", "LogProba_2", "Score_3", "Proba_3", "LogProba_3") SELECT "RF_B1"."KEY", "RF_B1"."Score_0", "RF_B1"."Proba_0", "RF_B1"."LogProba_0", "RF_B1"."Score_1", "RF_B1"."Proba_1", "RF_B1"."LogProba_1", "RF_B1"."Score_2", "RF_B1"."Proba_2", "RF_B1"."LogProba_2", "RF_B1"."Score_3", "RF_B1"."Proba_3", "RF_B1"."LogProba_3" 
FROM (SELECT "RF_esu_1"."KEY" AS "KEY", "RF_esu_1"."Score_0" AS "Score_0", "RF_esu_1"."Proba_0" AS "Proba_0", "RF_esu_1"."LogProba_0" AS "LogProba_0", "RF_esu_1"."Score_1" AS "Score_1", "RF_esu_1"."Proba_1" AS "Proba_1", "RF_esu_1"."LogProba_1" AS "LogProba_1", "RF_esu_1"."Score_2" AS "Score_2", "RF_esu_1"."Proba_2" AS "Proba_2", "RF_esu_1"."LogProba_2" AS "LogProba_2", "RF_esu_1"."Score_3" AS "Score_3", "RF_esu_1"."Proba_3" AS "Proba_3", "RF_esu_1"."LogProba_3" AS "LogProba_3" 
FROM (SELECT "RF_Model_10"."KEY" AS "KEY", "RF_Model_10"."Score_0" AS "Score_0", "RF_Model_10"."Proba_0" AS "Proba_0", "RF_Model_10"."LogProba_0" AS "LogProba_0", "RF_Model_10"."Score_1" AS "Score_1", "RF_Model_10"."Proba_1" AS "Proba_1", "RF_Model_10"."LogProba_1" AS "LogProba_1", "RF_Model_10"."Score_2" AS "Score_2", "RF_Model_10"."Proba_2" AS "Proba_2", "RF_Model_10"."LogProba_2" AS "LogProba_2", "RF_Model_10"."Score_3" AS "Score_3", "RF_Model_10"."Proba_3" AS "Proba_3", "RF_Model_10"."LogProba_3" AS "LogProba_3" 
FROM "RF_Model_10" UNION ALL SELECT "RF_Model_11"."KEY" AS "KEY", "RF_Model_11"."Score_0" AS "Score_0", "RF_Model_11"."Proba_0" AS "Proba_0", "RF_Model_11"."LogProba_0" AS "LogProba_0", "RF_Model_11"."Score_1" AS "Score_1", "RF_Model_11"."Proba_1" AS "Proba_1", "RF_Model_11"."LogProba_1" AS "LogProba_1", "RF_Model_11"."Score_2" AS "Score_2", "RF_Model_11"."Proba_2" AS "Proba_2", "RF_Model_11"."LogProba_2" AS "LogProba_2", "RF_Model_11"."Score_3" AS "Score_3", "RF_Model_11"."Proba_3" AS "Proba_3", "RF_Model_11"."LogProba_3" AS "LogProba_3" 
FROM "RF_Model_11" UNION ALL SELECT "RF_Model_12"."KEY" AS "KEY", "RF_Model_12"."Score_0" AS "Score_0", "RF_Model_12"."Proba_0" AS "Proba_0", "RF_Model_12"."LogProba_0" AS "LogProba_0", "RF_Model_12"."Score_1" AS "Score_1", "RF_Model_12"."Proba_1" AS "Proba_1", "RF_Model_12"."LogProba_1" AS "LogProba_1", "RF_Model_12"."Score_2" AS "Score_2", "RF_Model_12"."Proba_2" AS "Proba_2", "RF_Model_12"."LogProba_2" AS "LogProba_2", "RF_Model_12"."Score_3" AS "Score_3", "RF_Model_12"."Proba_3" AS "Proba_3", "RF_Model_12"."LogProba_3" AS "LogProba_3" 
FROM "RF_Model_12" UNION ALL SELECT "RF_Model_13"."KEY" AS "KEY", "RF_Model_13"."Score_0" AS "Score_0", "RF_Model_13"."Proba_0" AS "Proba_0", "RF_Model_13"."LogProba_0" AS "LogProba_0", "RF_Model_13"."Score_1" AS "Score_1", "RF_Model_13"."Proba_1" AS "Proba_1", "RF_Model_13"."LogProba_1" AS "LogProba_1", "RF_Model_13"."Score_2" AS "Score_2", "RF_Model_13"."Proba_2" AS "Proba_2", "RF_Model_13"."LogProba_2" AS "LogProba_2", "RF_Model_13"."Score_3" AS "Score_3", "RF_Model_13"."Proba_3" AS "Proba_3", "RF_Model_13"."LogProba_3" AS "LogProba_3" 
FROM "RF_Model_13" UNION ALL SELECT "RF_Model_14"."KEY" AS "KEY", "RF_Model_14"."Score_0" AS "Score_0", "RF_Model_14"."Proba_0" AS "Proba_0", "RF_Model_14"."LogProba_0" AS "LogProba_0", "RF_Model_14"."Score_1" AS "Score_1", "RF_Model_14"."Proba_1" AS "Proba_1", "RF_Model_14"."LogProba_1" AS "LogProba_1", "RF_Model_14"."Score_2" AS "Score_2", "RF_Model_14"."Proba_2" AS "Proba_2", "RF_Model_14"."LogProba_2" AS "LogProba_2", "RF_Model_14"."Score_3" AS "Score_3", "RF_Model_14"."Proba_3" AS "Proba_3", "RF_Model_14"."LogProba_3" AS "LogProba_3" 
FROM "RF_Model_14" UNION ALL SELECT "RF_Model_15"."KEY" AS "KEY", "RF_Model_15"."Score_0" AS "Score_0", "RF_Model_15"."Proba_0" AS "Proba_0", "RF_Model_15"."LogProba_0" AS "LogProba_0", "RF_Model_15"."Score_1" AS "Score_1", "RF_Model_15"."Proba_1" AS "Proba_1", "RF_Model_15"."LogProba_1" AS "LogProba_1", "RF_Model_15"."Score_2" AS "Score_2", "RF_Model_15"."Proba_2" AS "Proba_2", "RF_Model_15"."LogProba_2" AS "LogProba_2", "RF_Model_15"."Score_3" AS "Score_3", "RF_Model_15"."Proba_3" AS "Proba_3", "RF_Model_15"."LogProba_3" AS "LogProba_3" 
FROM "RF_Model_15") AS "RF_esu_1") AS "RF_B1"

-- Code For temporary table TMP_20180516113159_CODEGEN_Q2MCGO_RF_avg part 1. Create 


CREATE TEMPORARY TABLE "TMP_20180516113159_CODEGEN_Q2MCGO_RF_avg" (
	"KEY" BIGINT NOT NULL, 
	"Score_0" FLOAT, 
	"Proba_0" FLOAT, 
	"LogProba_0" FLOAT, 
	"Score_1" FLOAT, 
	"Proba_1" FLOAT, 
	"LogProba_1" FLOAT, 
	"Score_2" FLOAT, 
	"Proba_2" FLOAT, 
	"LogProba_2" FLOAT, 
	"Score_3" FLOAT, 
	"Proba_3" FLOAT, 
	"LogProba_3" FLOAT, 
	PRIMARY KEY ("KEY")
)



-- Code For temporary table TMP_20180516113159_CODEGEN_Q2MCGO_RF_avg part 2. Populate

WITH "RF_Union" AS 
(SELECT "RF_EnsembleUnion"."KEY" AS "KEY", "RF_EnsembleUnion"."Score_0" AS "Score_0", "RF_EnsembleUnion"."Proba_0" AS "Proba_0", "RF_EnsembleUnion"."LogProba_0" AS "LogProba_0", "RF_EnsembleUnion"."Score_1" AS "Score_1", "RF_EnsembleUnion"."Proba_1" AS "Proba_1", "RF_EnsembleUnion"."LogProba_1" AS "LogProba_1", "RF_EnsembleUnion"."Score_2" AS "Score_2", "RF_EnsembleUnion"."Proba_2" AS "Proba_2", "RF_EnsembleUnion"."LogProba_2" AS "LogProba_2", "RF_EnsembleUnion"."Score_3" AS "Score_3", "RF_EnsembleUnion"."Proba_3" AS "Proba_3", "RF_EnsembleUnion"."LogProba_3" AS "LogProba_3" 
FROM (SELECT "RF_B0"."KEY" AS "KEY", "RF_B0"."Score_0" AS "Score_0", "RF_B0"."Proba_0" AS "Proba_0", "RF_B0"."LogProba_0" AS "LogProba_0", "RF_B0"."Score_1" AS "Score_1", "RF_B0"."Proba_1" AS "Proba_1", "RF_B0"."LogProba_1" AS "LogProba_1", "RF_B0"."Score_2" AS "Score_2", "RF_B0"."Proba_2" AS "Proba_2", "RF_B0"."LogProba_2" AS "LogProba_2", "RF_B0"."Score_3" AS "Score_3", "RF_B0"."Proba_3" AS "Proba_3", "RF_B0"."LogProba_3" AS "LogProba_3" 
FROM "TMP_20180516113159_CODEGEN_860VWR_RF_B0" AS "RF_B0" UNION ALL SELECT "RF_B1"."KEY" AS "KEY", "RF_B1"."Score_0" AS "Score_0", "RF_B1"."Proba_0" AS "Proba_0", "RF_B1"."LogProba_0" AS "LogProba_0", "RF_B1"."Score_1" AS "Score_1", "RF_B1"."Proba_1" AS "Proba_1", "RF_B1"."LogProba_1" AS "LogProba_1", "RF_B1"."Score_2" AS "Score_2", "RF_B1"."Proba_2" AS "Proba_2", "RF_B1"."LogProba_2" AS "LogProba_2", "RF_B1"."Score_3" AS "Score_3", "RF_B1"."Proba_3" AS "Proba_3", "RF_B1"."LogProba_3" AS "LogProba_3" 
FROM "TMP_20180516113159_CODEGEN_NWV6SJ_RF_B1" AS "RF_B1") AS "RF_EnsembleUnion")
 INSERT INTO "TMP_20180516113159_CODEGEN_Q2MCGO_RF_avg" ("KEY", "Score_0", "Proba_0", "LogProba_0", "Score_1", "Proba_1", "LogProba_1", "Score_2", "Proba_2", "LogProba_2", "Score_3", "Proba_3", "LogProba_3") SELECT "RF_avg"."KEY", "RF_avg"."Score_0", "RF_avg"."Proba_0", "RF_avg"."LogProba_0", "RF_avg"."Score_1", "RF_avg"."Proba_1", "RF_avg"."LogProba_1", "RF_avg"."Score_2", "RF_avg"."Proba_2", "RF_avg"."LogProba_2", "RF_avg"."Score_3", "RF_avg"."Proba_3", "RF_avg"."LogProba_3" 
FROM (SELECT "T"."KEY" AS "KEY", CAST("T"."Score_0" AS FLOAT) AS "Score_0", CAST("T"."Proba_0" AS FLOAT) AS "Proba_0", CAST("T"."LogProba_0" AS FLOAT) AS "LogProba_0", CAST("T"."Score_1" AS FLOAT) AS "Score_1", CAST("T"."Proba_1" AS FLOAT) AS "Proba_1", CAST("T"."LogProba_1" AS FLOAT) AS "LogProba_1", CAST("T"."Score_2" AS FLOAT) AS "Score_2", CAST("T"."Proba_2" AS FLOAT) AS "Proba_2", CAST("T"."LogProba_2" AS FLOAT) AS "LogProba_2", CAST("T"."Score_3" AS FLOAT) AS "Score_3", CAST("T"."Proba_3" AS FLOAT) AS "Proba_3", CAST("T"."LogProba_3" AS FLOAT) AS "LogProba_3" 
FROM (SELECT "RF_Union"."KEY" AS "KEY", avg(CAST("RF_Union"."Score_0" AS FLOAT)) AS "Score_0", avg(CAST("RF_Union"."Proba_0" AS FLOAT)) AS "Proba_0", CAST(NULL AS FLOAT) AS "LogProba_0", avg(CAST("RF_Union"."Score_1" AS FLOAT)) AS "Score_1", avg(CAST("RF_Union"."Proba_1" AS FLOAT)) AS "Proba_1", CAST(NULL AS FLOAT) AS "LogProba_1", avg(CAST("RF_Union"."Score_2" AS FLOAT)) AS "Score_2", avg(CAST("RF_Union"."Proba_2" AS FLOAT)) AS "Proba_2", CAST(NULL AS FLOAT) AS "LogProba_2", avg(CAST("RF_Union"."Score_3" AS FLOAT)) AS "Score_3", avg(CAST("RF_Union"."Proba_3" AS FLOAT)) AS "Proba_3", CAST(NULL AS FLOAT) AS "LogProba_3" 
FROM "RF_Union" GROUP BY "RF_Union"."KEY") AS "T") AS "RF_avg"

-- Code For temporary table TMP_20180516113159_CODEGEN_Q2MCGO_RF_avg part 3. Create Index 

CREATE INDEX "ix_TMP_20180516113159_CODEGEN_Q2MCGO_RF_avg_KEY" ON "TMP_20180516113159_CODEGEN_Q2MCGO_RF_avg" ("KEY")

-- Model deployment code

WITH orig_cte AS 
(SELECT "RF_avg"."KEY" AS "KEY", "RF_avg"."Score_0" AS "Score_0", "RF_avg"."Score_1" AS "Score_1", "RF_avg"."Score_2" AS "Score_2", "RF_avg"."Score_3" AS "Score_3", "RF_avg"."Proba_0" AS "Proba_0", "RF_avg"."Proba_1" AS "Proba_1", "RF_avg"."Proba_2" AS "Proba_2", "RF_avg"."Proba_3" AS "Proba_3", "RF_avg"."LogProba_0" AS "LogProba_0", "RF_avg"."LogProba_1" AS "LogProba_1", "RF_avg"."LogProba_2" AS "LogProba_2", "RF_avg"."LogProba_3" AS "LogProba_3", CAST(NULL AS BIGINT) AS "Decision", CAST(NULL AS FLOAT) AS "DecisionProba" 
FROM "TMP_20180516113159_CODEGEN_Q2MCGO_RF_avg" AS "RF_avg"), 
score_class_union AS 
(SELECT scu."KEY_u" AS "KEY_u", scu.class AS class, scu."LogProba" AS "LogProba", scu."Proba" AS "Proba", scu."Score" AS "Score" 
FROM (SELECT orig_cte."KEY" AS "KEY_u", 0 AS class, orig_cte."LogProba_0" AS "LogProba", orig_cte."Proba_0" AS "Proba", orig_cte."Score_0" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 1 AS class, orig_cte."LogProba_1" AS "LogProba", orig_cte."Proba_1" AS "Proba", orig_cte."Score_1" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 2 AS class, orig_cte."LogProba_2" AS "LogProba", orig_cte."Proba_2" AS "Proba", orig_cte."Score_2" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 3 AS class, orig_cte."LogProba_3" AS "LogProba", orig_cte."Proba_3" AS "Proba", orig_cte."Score_3" AS "Score" 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte."KEY" AS "KEY", orig_cte."Score_0" AS "Score_0", orig_cte."Score_1" AS "Score_1", orig_cte."Score_2" AS "Score_2", orig_cte."Score_3" AS "Score_3", orig_cte."Proba_0" AS "Proba_0", orig_cte."Proba_1" AS "Proba_1", orig_cte."Proba_2" AS "Proba_2", orig_cte."Proba_3" AS "Proba_3", orig_cte."LogProba_0" AS "LogProba_0", orig_cte."LogProba_1" AS "LogProba_1", orig_cte."LogProba_2" AS "LogProba_2", orig_cte."LogProba_3" AS "LogProba_3", orig_cte."Decision" AS "Decision", orig_cte."DecisionProba" AS "DecisionProba", max_select."KEY_m" AS "KEY_m", max_select."max_Proba" AS "max_Proba" 
FROM orig_cte LEFT OUTER JOIN (SELECT score_class_union."KEY_u" AS "KEY_m", max(score_class_union."Proba") AS "max_Proba" 
FROM score_class_union GROUP BY score_class_union."KEY_u") AS max_select ON orig_cte."KEY" = max_select."KEY_m"), 
union_with_max AS 
(SELECT score_class_union."KEY_u" AS "KEY_u", score_class_union.class AS class, score_class_union."LogProba" AS "LogProba", score_class_union."Proba" AS "Proba", score_class_union."Score" AS "Score", score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Score_2" AS "Score_2", score_max."Score_3" AS "Score_3", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."Proba_2" AS "Proba_2", score_max."Proba_3" AS "Proba_3", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."LogProba_2" AS "LogProba_2", score_max."LogProba_3" AS "LogProba_3", score_max."Decision" AS "Decision", score_max."DecisionProba" AS "DecisionProba", score_max."KEY_m" AS "KEY_m", score_max."max_Proba" AS "max_Proba" 
FROM score_class_union LEFT OUTER JOIN score_max ON score_class_union."KEY_u" = score_max."KEY"), 
arg_max_cte AS 
(SELECT score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Score_2" AS "Score_2", score_max."Score_3" AS "Score_3", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."Proba_2" AS "Proba_2", score_max."Proba_3" AS "Proba_3", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."LogProba_2" AS "LogProba_2", score_max."LogProba_3" AS "LogProba_3", score_max."Decision" AS "Decision", score_max."DecisionProba" AS "DecisionProba", score_max."KEY_m" AS "KEY_m", score_max."max_Proba" AS "max_Proba", "arg_max_t_Proba"."KEY_Proba" AS "KEY_Proba", "arg_max_t_Proba"."arg_max_Proba" AS "arg_max_Proba" 
FROM score_max LEFT OUTER JOIN (SELECT union_with_max."KEY" AS "KEY_Proba", min(union_with_max.class) AS "arg_max_Proba" 
FROM union_with_max 
WHERE union_with_max."Proba" >= union_with_max."max_Proba" GROUP BY union_with_max."KEY") AS "arg_max_t_Proba" ON score_max."KEY" = "arg_max_t_Proba"."KEY_Proba")
 SELECT arg_max_cte."KEY" AS "KEY", arg_max_cte."Score_0" AS "Score_0", arg_max_cte."Score_1" AS "Score_1", arg_max_cte."Score_2" AS "Score_2", arg_max_cte."Score_3" AS "Score_3", arg_max_cte."Proba_0" AS "Proba_0", arg_max_cte."Proba_1" AS "Proba_1", arg_max_cte."Proba_2" AS "Proba_2", arg_max_cte."Proba_3" AS "Proba_3", CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN ln(arg_max_cte."Proba_0") ELSE -1.79769313486231e+308 END AS "LogProba_0", CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN ln(arg_max_cte."Proba_1") ELSE -1.79769313486231e+308 END AS "LogProba_1", CASE WHEN (arg_max_cte."Proba_2" IS NULL OR arg_max_cte."Proba_2" > 0.0) THEN ln(arg_max_cte."Proba_2") ELSE -1.79769313486231e+308 END AS "LogProba_2", CASE WHEN (arg_max_cte."Proba_3" IS NULL OR arg_max_cte."Proba_3" > 0.0) THEN ln(arg_max_cte."Proba_3") ELSE -1.79769313486231e+308 END AS "LogProba_3", arg_max_cte."arg_max_Proba" AS "Decision", arg_max_cte."max_Proba" AS "DecisionProba" 
FROM arg_max_cte