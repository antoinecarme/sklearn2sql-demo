-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2018

-- Model : RandomForestClassifier_Pipeline
-- Dataset : iris_str_tgt
-- Database : teradata


-- This SQL code can contain one or more statements, to be executed in the order they appear in this file.



-- Code For temporary table tmp_20180602160444_2vp_ads_imp_1_out part 1. Create 


CREATE GLOBAL TEMPORARY TABLE tmp_20180602160444_2vp_ads_imp_1_out  (
	"KEY" BIGINT, 
	imputer_output_2 DOUBLE PRECISION, 
	imputer_output_3 DOUBLE PRECISION, 
	imputer_output_4 DOUBLE PRECISION, 
	imputer_output_5 DOUBLE PRECISION
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table tmp_20180602160444_2vp_ads_imp_1_out part 2. Populate

INSERT INTO tmp_20180602160444_2vp_ads_imp_1_out ("KEY", imputer_output_2, imputer_output_3, imputer_output_4, imputer_output_5) SELECT "U"."KEY", "U".imputer_output_2, "U".imputer_output_3, "U".imputer_output_4, "U".imputer_output_5 
FROM (SELECT "ADS_imp_1_OUT"."KEY", "ADS_imp_1_OUT".imputer_output_2, "ADS_imp_1_OUT".imputer_output_3, "ADS_imp_1_OUT".imputer_output_4, "ADS_imp_1_OUT".imputer_output_5 
FROM (SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" IS NULL) THEN 5.8474999999999975 ELSE "ADS"."Feature_0" END AS imputer_output_2, CASE WHEN ("ADS"."Feature_1" IS NULL) THEN 3.0366666666666657 ELSE "ADS"."Feature_1" END AS imputer_output_3, CASE WHEN ("ADS"."Feature_2" IS NULL) THEN 3.8450000000000006 ELSE "ADS"."Feature_2" END AS imputer_output_4, CASE WHEN ("ADS"."Feature_3" IS NULL) THEN 1.245 ELSE "ADS"."Feature_3" END AS imputer_output_5 
FROM iris_str_tgt AS "ADS") AS "ADS_imp_1_OUT") AS "U"

-- Code For temporary table tmp_20180602160444_jzo_ads_sca_2_out part 1. Create 


CREATE GLOBAL TEMPORARY TABLE tmp_20180602160444_jzo_ads_sca_2_out  (
	"KEY" BIGINT, 
	scaler_output_2 DOUBLE PRECISION, 
	scaler_output_3 DOUBLE PRECISION, 
	scaler_output_4 DOUBLE PRECISION, 
	scaler_output_5 DOUBLE PRECISION
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table tmp_20180602160444_jzo_ads_sca_2_out part 2. Populate

INSERT INTO tmp_20180602160444_jzo_ads_sca_2_out ("KEY", scaler_output_2, scaler_output_3, scaler_output_4, scaler_output_5) SELECT "U"."KEY", "U".scaler_output_2, "U".scaler_output_3, "U".scaler_output_4, "U".scaler_output_5 
FROM (SELECT "ADS_sca_2_OUT"."KEY", "ADS_sca_2_OUT".scaler_output_2, "ADS_sca_2_OUT".scaler_output_3, "ADS_sca_2_OUT".scaler_output_4, "ADS_sca_2_OUT".scaler_output_5 
FROM (SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", (CAST("ADS_imp_1_OUT".imputer_output_2 AS DOUBLE PRECISION) - CAST(5.847499999999997 AS DOUBLE PRECISION)) / CAST(0.827039146594646 AS DOUBLE PRECISION) AS scaler_output_2, (CAST("ADS_imp_1_OUT".imputer_output_3 AS DOUBLE PRECISION) - CAST(3.036666666666666 AS DOUBLE PRECISION)) / CAST(0.436259352016919 AS DOUBLE PRECISION) AS scaler_output_3, (CAST("ADS_imp_1_OUT".imputer_output_4 AS DOUBLE PRECISION) - CAST(3.845 AS DOUBLE PRECISION)) / CAST(1.709817241695732 AS DOUBLE PRECISION) AS scaler_output_4, (CAST("ADS_imp_1_OUT".imputer_output_5 AS DOUBLE PRECISION) - CAST(1.245 AS DOUBLE PRECISION)) / CAST(0.749872211335594 AS DOUBLE PRECISION) AS scaler_output_5 
FROM tmp_20180602160444_2vp_ads_imp_1_out AS "ADS_imp_1_OUT") AS "ADS_sca_2_OUT") AS "U"

-- Code For temporary table tmp_20180602160445_ze5_rf_b0 part 1. Create 


CREATE GLOBAL TEMPORARY TABLE tmp_20180602160445_ze5_rf_b0  (
	"KEY" BIGINT, 
	"Score_CLASS_0" DOUBLE PRECISION, 
	"Proba_CLASS_0" DOUBLE PRECISION, 
	"LogProba_CLASS_0" DOUBLE PRECISION, 
	"Score_CLASS_1" DOUBLE PRECISION, 
	"Proba_CLASS_1" DOUBLE PRECISION, 
	"LogProba_CLASS_1" DOUBLE PRECISION, 
	"Score_CLASS_2" DOUBLE PRECISION, 
	"Proba_CLASS_2" DOUBLE PRECISION, 
	"LogProba_CLASS_2" DOUBLE PRECISION
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table tmp_20180602160445_ze5_rf_b0 part 2. Populate

INSERT INTO tmp_20180602160445_ze5_rf_b0 ("KEY", "Score_CLASS_0", "Proba_CLASS_0", "LogProba_CLASS_0", "Score_CLASS_1", "Proba_CLASS_1", "LogProba_CLASS_1", "Score_CLASS_2", "Proba_CLASS_2", "LogProba_CLASS_2") SELECT "U"."KEY", "U"."Score_CLASS_0", "U"."Proba_CLASS_0", "U"."LogProba_CLASS_0", "U"."Score_CLASS_1", "U"."Proba_CLASS_1", "U"."LogProba_CLASS_1", "U"."Score_CLASS_2", "U"."Proba_CLASS_2", "U"."LogProba_CLASS_2" 
FROM (WITH "DT_node_lookup" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= CAST(-0.480630218982697 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= CAST(-0.593434453010559 AS DOUBLE PRECISION)) THEN 2 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= CAST(0.47341400384903 AS DOUBLE PRECISION)) THEN 4 ELSE 5 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= CAST(0.673448085784912 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= CAST(-0.726790547370911 AS DOUBLE PRECISION)) THEN 8 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= CAST(0.646267890930176 AS DOUBLE PRECISION)) THEN 10 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= CAST(-1.000933647155762 AS DOUBLE PRECISION)) THEN 12 ELSE 13 END END END ELSE 14 END END AS node_id_2 
FROM tmp_20180602160444_jzo_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data" AS 
(SELECT "Values".nid AS nid, CAST("Values"."P_0.0" AS DOUBLE PRECISION) AS "P_0.0", CAST("Values"."P_1.0" AS DOUBLE PRECISION) AS "P_1.0", CAST("Values"."P_2.0" AS DOUBLE PRECISION) AS "P_2.0", CAST("Values"."D" AS DOUBLE PRECISION) AS "D", CAST("Values"."DP" AS DOUBLE PRECISION) AS "DP" 
FROM (SELECT 2 AS nid, CAST(1.0 AS DOUBLE PRECISION) AS "P_0.0", CAST(0.0 AS DOUBLE PRECISION) AS "P_1.0", CAST(0.0 AS DOUBLE PRECISION) AS "P_2.0", CAST(0.0 AS DOUBLE PRECISION) AS "D", CAST(1.0 AS DOUBLE PRECISION) AS "DP" 
FROM dummy_cte UNION ALL SELECT 4 AS nid, CAST(0.0 AS DOUBLE PRECISION) AS "P_0.0", CAST(1.0 AS DOUBLE PRECISION) AS "P_1.0", CAST(0.0 AS DOUBLE PRECISION) AS "P_2.0", CAST(1.0 AS DOUBLE PRECISION) AS "D", CAST(1.0 AS DOUBLE PRECISION) AS "DP" 
FROM dummy_cte UNION ALL SELECT 5 AS nid, CAST(0.0 AS DOUBLE PRECISION) AS "P_0.0", CAST(0.0 AS DOUBLE PRECISION) AS "P_1.0", CAST(1.0 AS DOUBLE PRECISION) AS "P_2.0", CAST(2.0 AS DOUBLE PRECISION) AS "D", CAST(1.0 AS DOUBLE PRECISION) AS "DP" 
FROM dummy_cte UNION ALL SELECT 8 AS nid, CAST(1.0 AS DOUBLE PRECISION) AS "P_0.0", CAST(0.0 AS DOUBLE PRECISION) AS "P_1.0", CAST(0.0 AS DOUBLE PRECISION) AS "P_2.0", CAST(0.0 AS DOUBLE PRECISION) AS "D", CAST(1.0 AS DOUBLE PRECISION) AS "DP" 
FROM dummy_cte UNION ALL SELECT 10 AS nid, CAST(0.0 AS DOUBLE PRECISION) AS "P_0.0", CAST(1.0 AS DOUBLE PRECISION) AS "P_1.0", CAST(0.0 AS DOUBLE PRECISION) AS "P_2.0", CAST(1.0 AS DOUBLE PRECISION) AS "D", CAST(1.0 AS DOUBLE PRECISION) AS "DP" 
FROM dummy_cte UNION ALL SELECT 12 AS nid, CAST(0.0 AS DOUBLE PRECISION) AS "P_0.0", CAST(0.0 AS DOUBLE PRECISION) AS "P_1.0", CAST(1.0 AS DOUBLE PRECISION) AS "P_2.0", CAST(2.0 AS DOUBLE PRECISION) AS "D", CAST(1.0 AS DOUBLE PRECISION) AS "DP" 
FROM dummy_cte UNION ALL SELECT 13 AS nid, CAST(0.0 AS DOUBLE PRECISION) AS "P_0.0", CAST(1.0 AS DOUBLE PRECISION) AS "P_1.0", CAST(0.0 AS DOUBLE PRECISION) AS "P_2.0", CAST(1.0 AS DOUBLE PRECISION) AS "D", CAST(1.0 AS DOUBLE PRECISION) AS "DP" 
FROM dummy_cte UNION ALL SELECT 14 AS nid, CAST(0.0 AS DOUBLE PRECISION) AS "P_0.0", CAST(0.0 AS DOUBLE PRECISION) AS "P_1.0", CAST(1.0 AS DOUBLE PRECISION) AS "P_2.0", CAST(2.0 AS DOUBLE PRECISION) AS "D", CAST(1.0 AS DOUBLE PRECISION) AS "DP" 
FROM dummy_cte) AS "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".nid AS nid, "DT_node_data"."P_0.0" AS "P_0.0", "DT_node_data"."P_1.0" AS "P_1.0", "DT_node_data"."P_2.0" AS "P_2.0", "DT_node_data"."D" AS "D", "DT_node_data"."DP" AS "DP" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".nid), 
"RF_Model_0" AS 
(SELECT "DT_Output"."KEY" AS "KEY", CAST(NULL AS DOUBLE PRECISION) AS "Score_CLASS_0", "DT_Output"."P_0.0" AS "Proba_CLASS_0", CASE WHEN ("DT_Output"."P_0.0" IS NULL OR "DT_Output"."P_0.0" > CAST(0.0 AS DOUBLE PRECISION)) THEN ln("DT_Output"."P_0.0") ELSE -1.79769313486231e+308 END AS "LogProba_CLASS_0", CAST(NULL AS DOUBLE PRECISION) AS "Score_CLASS_1", "DT_Output"."P_1.0" AS "Proba_CLASS_1", CASE WHEN ("DT_Output"."P_1.0" IS NULL OR "DT_Output"."P_1.0" > CAST(0.0 AS DOUBLE PRECISION)) THEN ln("DT_Output"."P_1.0") ELSE -1.79769313486231e+308 END AS "LogProba_CLASS_1", CAST(NULL AS DOUBLE PRECISION) AS "Score_CLASS_2", "DT_Output"."P_2.0" AS "Proba_CLASS_2", CASE WHEN ("DT_Output"."P_2.0" IS NULL OR "DT_Output"."P_2.0" > CAST(0.0 AS DOUBLE PRECISION)) THEN ln("DT_Output"."P_2.0") ELSE -1.79769313486231e+308 END AS "LogProba_CLASS_2" 
FROM "DT_Output"), 
"DT_node_lookup_1" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= CAST(-0.728147983551025 AS DOUBLE PRECISION)) THEN 1 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= CAST(0.587782144546509 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= CAST(0.606770038604736 AS DOUBLE PRECISION)) THEN 4 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= CAST(0.145173594355583 AS DOUBLE PRECISION)) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= CAST(0.673448085784912 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= CAST(-1.573987245559692 AS DOUBLE PRECISION)) THEN 10 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= CAST(0.704753637313843 AS DOUBLE PRECISION)) THEN 12 ELSE 13 END END ELSE 14 END END END AS node_id_2 
FROM tmp_20180602160444_jzo_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte_1 AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data_1" AS 
(SELECT "Values".nid AS nid, CAST("Values"."P_0.0" AS DOUBLE PRECISION) AS "P_0.0", CAST("Values"."P_1.0" AS DOUBLE PRECISION) AS "P_1.0", CAST("Values"."P_2.0" AS DOUBLE PRECISION) AS "P_2.0", CAST("Values"."D" AS DOUBLE PRECISION) AS "D", CAST("Values"."DP" AS DOUBLE PRECISION) AS "DP" 
FROM (SELECT 1 AS nid, CAST(1.0 AS DOUBLE PRECISION) AS "P_0.0", CAST(0.0 AS DOUBLE PRECISION) AS "P_1.0", CAST(0.0 AS DOUBLE PRECISION) AS "P_2.0", CAST(0.0 AS DOUBLE PRECISION) AS "D", CAST(1.0 AS DOUBLE PRECISION) AS "DP" 
FROM dummy_cte_1 UNION ALL SELECT 4 AS nid, CAST(0.0 AS DOUBLE PRECISION) AS "P_0.0", CAST(1.0 AS DOUBLE PRECISION) AS "P_1.0", CAST(0.0 AS DOUBLE PRECISION) AS "P_2.0", CAST(1.0 AS DOUBLE PRECISION) AS "D", CAST(1.0 AS DOUBLE PRECISION) AS "DP" 
FROM dummy_cte_1 UNION ALL SELECT 6 AS nid, CAST(0.0 AS DOUBLE PRECISION) AS "P_0.0", CAST(0.0 AS DOUBLE PRECISION) AS "P_1.0", CAST(1.0 AS DOUBLE PRECISION) AS "P_2.0", CAST(2.0 AS DOUBLE PRECISION) AS "D", CAST(1.0 AS DOUBLE PRECISION) AS "DP" 
FROM dummy_cte_1 UNION ALL SELECT 7 AS nid, CAST(0.0 AS DOUBLE PRECISION) AS "P_0.0", CAST(1.0 AS DOUBLE PRECISION) AS "P_1.0", CAST(0.0 AS DOUBLE PRECISION) AS "P_2.0", CAST(1.0 AS DOUBLE PRECISION) AS "D", CAST(1.0 AS DOUBLE PRECISION) AS "DP" 
FROM dummy_cte_1 UNION ALL SELECT 10 AS nid, CAST(0.0 AS DOUBLE PRECISION) AS "P_0.0", CAST(0.0 AS DOUBLE PRECISION) AS "P_1.0", CAST(1.0 AS DOUBLE PRECISION) AS "P_2.0", CAST(2.0 AS DOUBLE PRECISION) AS "D", CAST(1.0 AS DOUBLE PRECISION) AS "DP" 
FROM dummy_cte_1 UNION ALL SELECT 12 AS nid, CAST(0.0 AS DOUBLE PRECISION) AS "P_0.0", CAST(1.0 AS DOUBLE PRECISION) AS "P_1.0", CAST(0.0 AS DOUBLE PRECISION) AS "P_2.0", CAST(1.0 AS DOUBLE PRECISION) AS "D", CAST(1.0 AS DOUBLE PRECISION) AS "DP" 
FROM dummy_cte_1 UNION ALL SELECT 13 AS nid, CAST(0.0 AS DOUBLE PRECISION) AS "P_0.0", CAST(0.0 AS DOUBLE PRECISION) AS "P_1.0", CAST(1.0 AS DOUBLE PRECISION) AS "P_2.0", CAST(2.0 AS DOUBLE PRECISION) AS "D", CAST(1.0 AS DOUBLE PRECISION) AS "DP" 
FROM dummy_cte_1 UNION ALL SELECT 14 AS nid, CAST(0.0 AS DOUBLE PRECISION) AS "P_0.0", CAST(0.0 AS DOUBLE PRECISION) AS "P_1.0", CAST(1.0 AS DOUBLE PRECISION) AS "P_2.0", CAST(2.0 AS DOUBLE PRECISION) AS "D", CAST(1.0 AS DOUBLE PRECISION) AS "DP" 
FROM dummy_cte_1) AS "Values"), 
"DT_Output_1" AS 
(SELECT "DT_node_lookup_1"."KEY" AS "KEY", "DT_node_lookup_1".node_id_2 AS node_id_2, "DT_node_data_1".nid AS nid, "DT_node_data_1"."P_0.0" AS "P_0.0", "DT_node_data_1"."P_1.0" AS "P_1.0", "DT_node_data_1"."P_2.0" AS "P_2.0", "DT_node_data_1"."D" AS "D", "DT_node_data_1"."DP" AS "DP" 
FROM "DT_node_lookup_1" LEFT OUTER JOIN "DT_node_data_1" ON "DT_node_lookup_1".node_id_2 = "DT_node_data_1".nid), 
"RF_Model_1" AS 
(SELECT "DT_Output_1"."KEY" AS "KEY", CAST(NULL AS DOUBLE PRECISION) AS "Score_CLASS_0", "DT_Output_1"."P_0.0" AS "Proba_CLASS_0", CASE WHEN ("DT_Output_1"."P_0.0" IS NULL OR "DT_Output_1"."P_0.0" > CAST(0.0 AS DOUBLE PRECISION)) THEN ln("DT_Output_1"."P_0.0") ELSE -1.79769313486231e+308 END AS "LogProba_CLASS_0", CAST(NULL AS DOUBLE PRECISION) AS "Score_CLASS_1", "DT_Output_1"."P_1.0" AS "Proba_CLASS_1", CASE WHEN ("DT_Output_1"."P_1.0" IS NULL OR "DT_Output_1"."P_1.0" > CAST(0.0 AS DOUBLE PRECISION)) THEN ln("DT_Output_1"."P_1.0") ELSE -1.79769313486231e+308 END AS "LogProba_CLASS_1", CAST(NULL AS DOUBLE PRECISION) AS "Score_CLASS_2", "DT_Output_1"."P_2.0" AS "Proba_CLASS_2", CASE WHEN ("DT_Output_1"."P_2.0" IS NULL OR "DT_Output_1"."P_2.0" > CAST(0.0 AS DOUBLE PRECISION)) THEN ln("DT_Output_1"."P_2.0") ELSE -1.79769313486231e+308 END AS "LogProba_CLASS_2" 
FROM "DT_Output_1"), 
"DT_node_lookup_2" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= CAST(0.673448085784912 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= CAST(-0.593434453010559 AS DOUBLE PRECISION)) THEN 2 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= CAST(0.273379921913147 AS DOUBLE PRECISION)) THEN 4 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= CAST(-0.427880048751831 AS DOUBLE PRECISION)) THEN 6 ELSE 7 END END END ELSE 8 END AS node_id_2 
FROM tmp_20180602160444_jzo_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte_2 AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data_2" AS 
(SELECT "Values".nid AS nid, CAST("Values"."P_0.0" AS DOUBLE PRECISION) AS "P_0.0", CAST("Values"."P_1.0" AS DOUBLE PRECISION) AS "P_1.0", CAST("Values"."P_2.0" AS DOUBLE PRECISION) AS "P_2.0", CAST("Values"."D" AS DOUBLE PRECISION) AS "D", CAST("Values"."DP" AS DOUBLE PRECISION) AS "DP" 
FROM (SELECT 2 AS nid, CAST(1.0 AS DOUBLE PRECISION) AS "P_0.0", CAST(0.0 AS DOUBLE PRECISION) AS "P_1.0", CAST(0.0 AS DOUBLE PRECISION) AS "P_2.0", CAST(0.0 AS DOUBLE PRECISION) AS "D", CAST(1.0 AS DOUBLE PRECISION) AS "DP" 
FROM dummy_cte_2 UNION ALL SELECT 4 AS nid, CAST(0.0 AS DOUBLE PRECISION) AS "P_0.0", CAST(1.0 AS DOUBLE PRECISION) AS "P_1.0", CAST(0.0 AS DOUBLE PRECISION) AS "P_2.0", CAST(1.0 AS DOUBLE PRECISION) AS "D", CAST(1.0 AS DOUBLE PRECISION) AS "DP" 
FROM dummy_cte_2 UNION ALL SELECT 6 AS nid, CAST(0.0 AS DOUBLE PRECISION) AS "P_0.0", CAST(0.0 AS DOUBLE PRECISION) AS "P_1.0", CAST(1.0 AS DOUBLE PRECISION) AS "P_2.0", CAST(2.0 AS DOUBLE PRECISION) AS "D", CAST(1.0 AS DOUBLE PRECISION) AS "DP" 
FROM dummy_cte_2 UNION ALL SELECT 7 AS nid, CAST(0.0 AS DOUBLE PRECISION) AS "P_0.0", CAST(1.0 AS DOUBLE PRECISION) AS "P_1.0", CAST(0.0 AS DOUBLE PRECISION) AS "P_2.0", CAST(1.0 AS DOUBLE PRECISION) AS "D", CAST(1.0 AS DOUBLE PRECISION) AS "DP" 
FROM dummy_cte_2 UNION ALL SELECT 8 AS nid, CAST(0.0 AS DOUBLE PRECISION) AS "P_0.0", CAST(0.0 AS DOUBLE PRECISION) AS "P_1.0", CAST(1.0 AS DOUBLE PRECISION) AS "P_2.0", CAST(2.0 AS DOUBLE PRECISION) AS "D", CAST(1.0 AS DOUBLE PRECISION) AS "DP" 
FROM dummy_cte_2) AS "Values"), 
"DT_Output_2" AS 
(SELECT "DT_node_lookup_2"."KEY" AS "KEY", "DT_node_lookup_2".node_id_2 AS node_id_2, "DT_node_data_2".nid AS nid, "DT_node_data_2"."P_0.0" AS "P_0.0", "DT_node_data_2"."P_1.0" AS "P_1.0", "DT_node_data_2"."P_2.0" AS "P_2.0", "DT_node_data_2"."D" AS "D", "DT_node_data_2"."DP" AS "DP" 
FROM "DT_node_lookup_2" LEFT OUTER JOIN "DT_node_data_2" ON "DT_node_lookup_2".node_id_2 = "DT_node_data_2".nid), 
"RF_Model_2" AS 
(SELECT "DT_Output_2"."KEY" AS "KEY", CAST(NULL AS DOUBLE PRECISION) AS "Score_CLASS_0", "DT_Output_2"."P_0.0" AS "Proba_CLASS_0", CASE WHEN ("DT_Output_2"."P_0.0" IS NULL OR "DT_Output_2"."P_0.0" > CAST(0.0 AS DOUBLE PRECISION)) THEN ln("DT_Output_2"."P_0.0") ELSE -1.79769313486231e+308 END AS "LogProba_CLASS_0", CAST(NULL AS DOUBLE PRECISION) AS "Score_CLASS_1", "DT_Output_2"."P_1.0" AS "Proba_CLASS_1", CASE WHEN ("DT_Output_2"."P_1.0" IS NULL OR "DT_Output_2"."P_1.0" > CAST(0.0 AS DOUBLE PRECISION)) THEN ln("DT_Output_2"."P_1.0") ELSE -1.79769313486231e+308 END AS "LogProba_CLASS_1", CAST(NULL AS DOUBLE PRECISION) AS "Score_CLASS_2", "DT_Output_2"."P_2.0" AS "Proba_CLASS_2", CASE WHEN ("DT_Output_2"."P_2.0" IS NULL OR "DT_Output_2"."P_2.0" > CAST(0.0 AS DOUBLE PRECISION)) THEN ln("DT_Output_2"."P_2.0") ELSE -1.79769313486231e+308 END AS "LogProba_CLASS_2" 
FROM "DT_Output_2"), 
"DT_node_lookup_3" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= CAST(-0.660112500190735 AS DOUBLE PRECISION)) THEN 1 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= CAST(0.587782144546509 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= CAST(0.540091991424561 AS DOUBLE PRECISION)) THEN 4 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= CAST(0.470810532569885 AS DOUBLE PRECISION)) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= CAST(0.704753637313843 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= CAST(0.78895902633667 AS DOUBLE PRECISION)) THEN 10 ELSE 11 END ELSE 12 END END END AS node_id_2 
FROM tmp_20180602160444_jzo_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte_3 AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data_3" AS 
(SELECT "Values".nid AS nid, CAST("Values"."P_0.0" AS DOUBLE PRECISION) AS "P_0.0", CAST("Values"."P_1.0" AS DOUBLE PRECISION) AS "P_1.0", CAST("Values"."P_2.0" AS DOUBLE PRECISION) AS "P_2.0", CAST("Values"."D" AS DOUBLE PRECISION) AS "D", CAST("Values"."DP" AS DOUBLE PRECISION) AS "DP" 
FROM (SELECT 1 AS nid, CAST(1.0 AS DOUBLE PRECISION) AS "P_0.0", CAST(0.0 AS DOUBLE PRECISION) AS "P_1.0", CAST(0.0 AS DOUBLE PRECISION) AS "P_2.0", CAST(0.0 AS DOUBLE PRECISION) AS "D", CAST(1.0 AS DOUBLE PRECISION) AS "DP" 
FROM dummy_cte_3 UNION ALL SELECT 4 AS nid, CAST(0.0 AS DOUBLE PRECISION) AS "P_0.0", CAST(1.0 AS DOUBLE PRECISION) AS "P_1.0", CAST(0.0 AS DOUBLE PRECISION) AS "P_2.0", CAST(1.0 AS DOUBLE PRECISION) AS "D", CAST(1.0 AS DOUBLE PRECISION) AS "DP" 
FROM dummy_cte_3 UNION ALL SELECT 6 AS nid, CAST(0.0 AS DOUBLE PRECISION) AS "P_0.0", CAST(0.0 AS DOUBLE PRECISION) AS "P_1.0", CAST(1.0 AS DOUBLE PRECISION) AS "P_2.0", CAST(2.0 AS DOUBLE PRECISION) AS "D", CAST(1.0 AS DOUBLE PRECISION) AS "DP" 
FROM dummy_cte_3 UNION ALL SELECT 7 AS nid, CAST(0.0 AS DOUBLE PRECISION) AS "P_0.0", CAST(1.0 AS DOUBLE PRECISION) AS "P_1.0", CAST(0.0 AS DOUBLE PRECISION) AS "P_2.0", CAST(1.0 AS DOUBLE PRECISION) AS "D", CAST(1.0 AS DOUBLE PRECISION) AS "DP" 
FROM dummy_cte_3 UNION ALL SELECT 10 AS nid, CAST(0.0 AS DOUBLE PRECISION) AS "P_0.0", CAST(0.0 AS DOUBLE PRECISION) AS "P_1.0", CAST(1.0 AS DOUBLE PRECISION) AS "P_2.0", CAST(2.0 AS DOUBLE PRECISION) AS "D", CAST(1.0 AS DOUBLE PRECISION) AS "DP" 
FROM dummy_cte_3 UNION ALL SELECT 11 AS nid, CAST(0.0 AS DOUBLE PRECISION) AS "P_0.0", CAST(1.0 AS DOUBLE PRECISION) AS "P_1.0", CAST(0.0 AS DOUBLE PRECISION) AS "P_2.0", CAST(1.0 AS DOUBLE PRECISION) AS "D", CAST(1.0 AS DOUBLE PRECISION) AS "DP" 
FROM dummy_cte_3 UNION ALL SELECT 12 AS nid, CAST(0.0 AS DOUBLE PRECISION) AS "P_0.0", CAST(0.0 AS DOUBLE PRECISION) AS "P_1.0", CAST(1.0 AS DOUBLE PRECISION) AS "P_2.0", CAST(2.0 AS DOUBLE PRECISION) AS "D", CAST(1.0 AS DOUBLE PRECISION) AS "DP" 
FROM dummy_cte_3) AS "Values"), 
"DT_Output_3" AS 
(SELECT "DT_node_lookup_3"."KEY" AS "KEY", "DT_node_lookup_3".node_id_2 AS node_id_2, "DT_node_data_3".nid AS nid, "DT_node_data_3"."P_0.0" AS "P_0.0", "DT_node_data_3"."P_1.0" AS "P_1.0", "DT_node_data_3"."P_2.0" AS "P_2.0", "DT_node_data_3"."D" AS "D", "DT_node_data_3"."DP" AS "DP" 
FROM "DT_node_lookup_3" LEFT OUTER JOIN "DT_node_data_3" ON "DT_node_lookup_3".node_id_2 = "DT_node_data_3".nid), 
"RF_Model_3" AS 
(SELECT "DT_Output_3"."KEY" AS "KEY", CAST(NULL AS DOUBLE PRECISION) AS "Score_CLASS_0", "DT_Output_3"."P_0.0" AS "Proba_CLASS_0", CASE WHEN ("DT_Output_3"."P_0.0" IS NULL OR "DT_Output_3"."P_0.0" > CAST(0.0 AS DOUBLE PRECISION)) THEN ln("DT_Output_3"."P_0.0") ELSE -1.79769313486231e+308 END AS "LogProba_CLASS_0", CAST(NULL AS DOUBLE PRECISION) AS "Score_CLASS_1", "DT_Output_3"."P_1.0" AS "Proba_CLASS_1", CASE WHEN ("DT_Output_3"."P_1.0" IS NULL OR "DT_Output_3"."P_1.0" > CAST(0.0 AS DOUBLE PRECISION)) THEN ln("DT_Output_3"."P_1.0") ELSE -1.79769313486231e+308 END AS "LogProba_CLASS_1", CAST(NULL AS DOUBLE PRECISION) AS "Score_CLASS_2", "DT_Output_3"."P_2.0" AS "Proba_CLASS_2", CASE WHEN ("DT_Output_3"."P_2.0" IS NULL OR "DT_Output_3"."P_2.0" > CAST(0.0 AS DOUBLE PRECISION)) THEN ln("DT_Output_3"."P_2.0") ELSE -1.79769313486231e+308 END AS "LogProba_CLASS_2" 
FROM "DT_Output_3"), 
"DT_node_lookup_4" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= CAST(-0.815876662731171 AS DOUBLE PRECISION)) THEN 1 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= CAST(-0.238803684711456 AS DOUBLE PRECISION)) THEN 3 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= CAST(0.673448085784912 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= CAST(0.646267890930176 AS DOUBLE PRECISION)) THEN 6 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= CAST(-0.313269317150116 AS DOUBLE PRECISION)) THEN 8 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= CAST(1.33306872844696 AS DOUBLE PRECISION)) THEN 10 ELSE 11 END END END ELSE 12 END END END AS node_id_2 
FROM tmp_20180602160444_jzo_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte_4 AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data_4" AS 
(SELECT "Values".nid AS nid, CAST("Values"."P_0.0" AS DOUBLE PRECISION) AS "P_0.0", CAST("Values"."P_1.0" AS DOUBLE PRECISION) AS "P_1.0", CAST("Values"."P_2.0" AS DOUBLE PRECISION) AS "P_2.0", CAST("Values"."D" AS DOUBLE PRECISION) AS "D", CAST("Values"."DP" AS DOUBLE PRECISION) AS "DP" 
FROM (SELECT 1 AS nid, CAST(1.0 AS DOUBLE PRECISION) AS "P_0.0", CAST(0.0 AS DOUBLE PRECISION) AS "P_1.0", CAST(0.0 AS DOUBLE PRECISION) AS "P_2.0", CAST(0.0 AS DOUBLE PRECISION) AS "D", CAST(1.0 AS DOUBLE PRECISION) AS "DP" 
FROM dummy_cte_4 UNION ALL SELECT 3 AS nid, CAST(0.0 AS DOUBLE PRECISION) AS "P_0.0", CAST(1.0 AS DOUBLE PRECISION) AS "P_1.0", CAST(0.0 AS DOUBLE PRECISION) AS "P_2.0", CAST(1.0 AS DOUBLE PRECISION) AS "D", CAST(1.0 AS DOUBLE PRECISION) AS "DP" 
FROM dummy_cte_4 UNION ALL SELECT 6 AS nid, CAST(0.0 AS DOUBLE PRECISION) AS "P_0.0", CAST(1.0 AS DOUBLE PRECISION) AS "P_1.0", CAST(0.0 AS DOUBLE PRECISION) AS "P_2.0", CAST(1.0 AS DOUBLE PRECISION) AS "D", CAST(1.0 AS DOUBLE PRECISION) AS "DP" 
FROM dummy_cte_4 UNION ALL SELECT 8 AS nid, CAST(0.0 AS DOUBLE PRECISION) AS "P_0.0", CAST(0.0 AS DOUBLE PRECISION) AS "P_1.0", CAST(1.0 AS DOUBLE PRECISION) AS "P_2.0", CAST(2.0 AS DOUBLE PRECISION) AS "D", CAST(1.0 AS DOUBLE PRECISION) AS "DP" 
FROM dummy_cte_4 UNION ALL SELECT 10 AS nid, CAST(0.0 AS DOUBLE PRECISION) AS "P_0.0", CAST(1.0 AS DOUBLE PRECISION) AS "P_1.0", CAST(0.0 AS DOUBLE PRECISION) AS "P_2.0", CAST(1.0 AS DOUBLE PRECISION) AS "D", CAST(1.0 AS DOUBLE PRECISION) AS "DP" 
FROM dummy_cte_4 UNION ALL SELECT 11 AS nid, CAST(0.0 AS DOUBLE PRECISION) AS "P_0.0", CAST(0.0 AS DOUBLE PRECISION) AS "P_1.0", CAST(1.0 AS DOUBLE PRECISION) AS "P_2.0", CAST(2.0 AS DOUBLE PRECISION) AS "D", CAST(1.0 AS DOUBLE PRECISION) AS "DP" 
FROM dummy_cte_4 UNION ALL SELECT 12 AS nid, CAST(0.0 AS DOUBLE PRECISION) AS "P_0.0", CAST(0.0 AS DOUBLE PRECISION) AS "P_1.0", CAST(1.0 AS DOUBLE PRECISION) AS "P_2.0", CAST(2.0 AS DOUBLE PRECISION) AS "D", CAST(1.0 AS DOUBLE PRECISION) AS "DP" 
FROM dummy_cte_4) AS "Values"), 
"DT_Output_4" AS 
(SELECT "DT_node_lookup_4"."KEY" AS "KEY", "DT_node_lookup_4".node_id_2 AS node_id_2, "DT_node_data_4".nid AS nid, "DT_node_data_4"."P_0.0" AS "P_0.0", "DT_node_data_4"."P_1.0" AS "P_1.0", "DT_node_data_4"."P_2.0" AS "P_2.0", "DT_node_data_4"."D" AS "D", "DT_node_data_4"."DP" AS "DP" 
FROM "DT_node_lookup_4" LEFT OUTER JOIN "DT_node_data_4" ON "DT_node_lookup_4".node_id_2 = "DT_node_data_4".nid), 
"RF_Model_4" AS 
(SELECT "DT_Output_4"."KEY" AS "KEY", CAST(NULL AS DOUBLE PRECISION) AS "Score_CLASS_0", "DT_Output_4"."P_0.0" AS "Proba_CLASS_0", CASE WHEN ("DT_Output_4"."P_0.0" IS NULL OR "DT_Output_4"."P_0.0" > CAST(0.0 AS DOUBLE PRECISION)) THEN ln("DT_Output_4"."P_0.0") ELSE -1.79769313486231e+308 END AS "LogProba_CLASS_0", CAST(NULL AS DOUBLE PRECISION) AS "Score_CLASS_1", "DT_Output_4"."P_1.0" AS "Proba_CLASS_1", CASE WHEN ("DT_Output_4"."P_1.0" IS NULL OR "DT_Output_4"."P_1.0" > CAST(0.0 AS DOUBLE PRECISION)) THEN ln("DT_Output_4"."P_1.0") ELSE -1.79769313486231e+308 END AS "LogProba_CLASS_1", CAST(NULL AS DOUBLE PRECISION) AS "Score_CLASS_2", "DT_Output_4"."P_2.0" AS "Proba_CLASS_2", CASE WHEN ("DT_Output_4"."P_2.0" IS NULL OR "DT_Output_4"."P_2.0" > CAST(0.0 AS DOUBLE PRECISION)) THEN ln("DT_Output_4"."P_2.0") ELSE -1.79769313486231e+308 END AS "LogProba_CLASS_2" 
FROM "DT_Output_4"), 
"DT_node_lookup_5" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= CAST(-0.480630218982697 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= CAST(-0.874362468719482 AS DOUBLE PRECISION)) THEN 2 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= CAST(-1.344765901565552 AS DOUBLE PRECISION)) THEN 4 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= CAST(0.206701874732971 AS DOUBLE PRECISION)) THEN 6 ELSE 7 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= CAST(0.529296338558197 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= CAST(-0.793468475341797 AS DOUBLE PRECISION)) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= CAST(0.646267890930176 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= CAST(0.540092051029205 AS DOUBLE PRECISION)) THEN 14 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= CAST(0.145173594355583 AS DOUBLE PRECISION)) THEN 16 ELSE 17 END END ELSE 18 END END END AS node_id_2 
FROM tmp_20180602160444_jzo_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte_5 AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data_5" AS 
(SELECT "Values".nid AS nid, CAST("Values"."P_0.0" AS DOUBLE PRECISION) AS "P_0.0", CAST("Values"."P_1.0" AS DOUBLE PRECISION) AS "P_1.0", CAST("Values"."P_2.0" AS DOUBLE PRECISION) AS "P_2.0", CAST("Values"."D" AS DOUBLE PRECISION) AS "D", CAST("Values"."DP" AS DOUBLE PRECISION) AS "DP" 
FROM (SELECT 2 AS nid, CAST(1.0 AS DOUBLE PRECISION) AS "P_0.0", CAST(0.0 AS DOUBLE PRECISION) AS "P_1.0", CAST(0.0 AS DOUBLE PRECISION) AS "P_2.0", CAST(0.0 AS DOUBLE PRECISION) AS "D", CAST(1.0 AS DOUBLE PRECISION) AS "DP" 
FROM dummy_cte_5 UNION ALL SELECT 4 AS nid, CAST(0.0 AS DOUBLE PRECISION) AS "P_0.0", CAST(1.0 AS DOUBLE PRECISION) AS "P_1.0", CAST(0.0 AS DOUBLE PRECISION) AS "P_2.0", CAST(1.0 AS DOUBLE PRECISION) AS "D", CAST(1.0 AS DOUBLE PRECISION) AS "DP" 
FROM dummy_cte_5 UNION ALL SELECT 6 AS nid, CAST(0.0 AS DOUBLE PRECISION) AS "P_0.0", CAST(1.0 AS DOUBLE PRECISION) AS "P_1.0", CAST(0.0 AS DOUBLE PRECISION) AS "P_2.0", CAST(1.0 AS DOUBLE PRECISION) AS "D", CAST(1.0 AS DOUBLE PRECISION) AS "DP" 
FROM dummy_cte_5 UNION ALL SELECT 7 AS nid, CAST(0.0 AS DOUBLE PRECISION) AS "P_0.0", CAST(0.0 AS DOUBLE PRECISION) AS "P_1.0", CAST(1.0 AS DOUBLE PRECISION) AS "P_2.0", CAST(2.0 AS DOUBLE PRECISION) AS "D", CAST(1.0 AS DOUBLE PRECISION) AS "DP" 
FROM dummy_cte_5 UNION ALL SELECT 10 AS nid, CAST(1.0 AS DOUBLE PRECISION) AS "P_0.0", CAST(0.0 AS DOUBLE PRECISION) AS "P_1.0", CAST(0.0 AS DOUBLE PRECISION) AS "P_2.0", CAST(0.0 AS DOUBLE PRECISION) AS "D", CAST(1.0 AS DOUBLE PRECISION) AS "DP" 
FROM dummy_cte_5 UNION ALL SELECT 11 AS nid, CAST(0.0 AS DOUBLE PRECISION) AS "P_0.0", CAST(1.0 AS DOUBLE PRECISION) AS "P_1.0", CAST(0.0 AS DOUBLE PRECISION) AS "P_2.0", CAST(1.0 AS DOUBLE PRECISION) AS "D", CAST(1.0 AS DOUBLE PRECISION) AS "DP" 
FROM dummy_cte_5 UNION ALL SELECT 14 AS nid, CAST(0.0 AS DOUBLE PRECISION) AS "P_0.0", CAST(1.0 AS DOUBLE PRECISION) AS "P_1.0", CAST(0.0 AS DOUBLE PRECISION) AS "P_2.0", CAST(1.0 AS DOUBLE PRECISION) AS "D", CAST(1.0 AS DOUBLE PRECISION) AS "DP" 
FROM dummy_cte_5 UNION ALL SELECT 16 AS nid, CAST(0.0 AS DOUBLE PRECISION) AS "P_0.0", CAST(0.0 AS DOUBLE PRECISION) AS "P_1.0", CAST(1.0 AS DOUBLE PRECISION) AS "P_2.0", CAST(2.0 AS DOUBLE PRECISION) AS "D", CAST(1.0 AS DOUBLE PRECISION) AS "DP" 
FROM dummy_cte_5 UNION ALL SELECT 17 AS nid, CAST(0.0 AS DOUBLE PRECISION) AS "P_0.0", CAST(1.0 AS DOUBLE PRECISION) AS "P_1.0", CAST(0.0 AS DOUBLE PRECISION) AS "P_2.0", CAST(1.0 AS DOUBLE PRECISION) AS "D", CAST(1.0 AS DOUBLE PRECISION) AS "DP" 
FROM dummy_cte_5 UNION ALL SELECT 18 AS nid, CAST(0.0 AS DOUBLE PRECISION) AS "P_0.0", CAST(0.0 AS DOUBLE PRECISION) AS "P_1.0", CAST(1.0 AS DOUBLE PRECISION) AS "P_2.0", CAST(2.0 AS DOUBLE PRECISION) AS "D", CAST(1.0 AS DOUBLE PRECISION) AS "DP" 
FROM dummy_cte_5) AS "Values"), 
"DT_Output_5" AS 
(SELECT "DT_node_lookup_5"."KEY" AS "KEY", "DT_node_lookup_5".node_id_2 AS node_id_2, "DT_node_data_5".nid AS nid, "DT_node_data_5"."P_0.0" AS "P_0.0", "DT_node_data_5"."P_1.0" AS "P_1.0", "DT_node_data_5"."P_2.0" AS "P_2.0", "DT_node_data_5"."D" AS "D", "DT_node_data_5"."DP" AS "DP" 
FROM "DT_node_lookup_5" LEFT OUTER JOIN "DT_node_data_5" ON "DT_node_lookup_5".node_id_2 = "DT_node_data_5".nid), 
"RF_Model_5" AS 
(SELECT "DT_Output_5"."KEY" AS "KEY", CAST(NULL AS DOUBLE PRECISION) AS "Score_CLASS_0", "DT_Output_5"."P_0.0" AS "Proba_CLASS_0", CASE WHEN ("DT_Output_5"."P_0.0" IS NULL OR "DT_Output_5"."P_0.0" > CAST(0.0 AS DOUBLE PRECISION)) THEN ln("DT_Output_5"."P_0.0") ELSE -1.79769313486231e+308 END AS "LogProba_CLASS_0", CAST(NULL AS DOUBLE PRECISION) AS "Score_CLASS_1", "DT_Output_5"."P_1.0" AS "Proba_CLASS_1", CASE WHEN ("DT_Output_5"."P_1.0" IS NULL OR "DT_Output_5"."P_1.0" > CAST(0.0 AS DOUBLE PRECISION)) THEN ln("DT_Output_5"."P_1.0") ELSE -1.79769313486231e+308 END AS "LogProba_CLASS_1", CAST(NULL AS DOUBLE PRECISION) AS "Score_CLASS_2", "DT_Output_5"."P_2.0" AS "Proba_CLASS_2", CASE WHEN ("DT_Output_5"."P_2.0" IS NULL OR "DT_Output_5"."P_2.0" > CAST(0.0 AS DOUBLE PRECISION)) THEN ln("DT_Output_5"."P_2.0") ELSE -1.79769313486231e+308 END AS "LogProba_CLASS_2" 
FROM "DT_Output_5"), 
"DT_node_lookup_6" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= CAST(-0.593434453010559 AS DOUBLE PRECISION)) THEN 1 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= CAST(0.587782144546509 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= CAST(0.540091991424561 AS DOUBLE PRECISION)) THEN 4 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= CAST(0.145173594355583 AS DOUBLE PRECISION)) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= CAST(0.406735956668854 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= CAST(0.675510764122009 AS DOUBLE PRECISION)) THEN 10 ELSE 11 END ELSE 12 END END END AS node_id_2 
FROM tmp_20180602160444_jzo_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte_6 AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data_6" AS 
(SELECT "Values".nid AS nid, CAST("Values"."P_0.0" AS DOUBLE PRECISION) AS "P_0.0", CAST("Values"."P_1.0" AS DOUBLE PRECISION) AS "P_1.0", CAST("Values"."P_2.0" AS DOUBLE PRECISION) AS "P_2.0", CAST("Values"."D" AS DOUBLE PRECISION) AS "D", CAST("Values"."DP" AS DOUBLE PRECISION) AS "DP" 
FROM (SELECT 1 AS nid, CAST(1.0 AS DOUBLE PRECISION) AS "P_0.0", CAST(0.0 AS DOUBLE PRECISION) AS "P_1.0", CAST(0.0 AS DOUBLE PRECISION) AS "P_2.0", CAST(0.0 AS DOUBLE PRECISION) AS "D", CAST(1.0 AS DOUBLE PRECISION) AS "DP" 
FROM dummy_cte_6 UNION ALL SELECT 4 AS nid, CAST(0.0 AS DOUBLE PRECISION) AS "P_0.0", CAST(1.0 AS DOUBLE PRECISION) AS "P_1.0", CAST(0.0 AS DOUBLE PRECISION) AS "P_2.0", CAST(1.0 AS DOUBLE PRECISION) AS "D", CAST(1.0 AS DOUBLE PRECISION) AS "DP" 
FROM dummy_cte_6 UNION ALL SELECT 6 AS nid, CAST(0.0 AS DOUBLE PRECISION) AS "P_0.0", CAST(0.0 AS DOUBLE PRECISION) AS "P_1.0", CAST(1.0 AS DOUBLE PRECISION) AS "P_2.0", CAST(2.0 AS DOUBLE PRECISION) AS "D", CAST(1.0 AS DOUBLE PRECISION) AS "DP" 
FROM dummy_cte_6 UNION ALL SELECT 7 AS nid, CAST(0.0 AS DOUBLE PRECISION) AS "P_0.0", CAST(1.0 AS DOUBLE PRECISION) AS "P_1.0", CAST(0.0 AS DOUBLE PRECISION) AS "P_2.0", CAST(1.0 AS DOUBLE PRECISION) AS "D", CAST(1.0 AS DOUBLE PRECISION) AS "DP" 
FROM dummy_cte_6 UNION ALL SELECT 10 AS nid, CAST(0.0 AS DOUBLE PRECISION) AS "P_0.0", CAST(1.0 AS DOUBLE PRECISION) AS "P_1.0", CAST(0.0 AS DOUBLE PRECISION) AS "P_2.0", CAST(1.0 AS DOUBLE PRECISION) AS "D", CAST(1.0 AS DOUBLE PRECISION) AS "DP" 
FROM dummy_cte_6 UNION ALL SELECT 11 AS nid, CAST(0.0 AS DOUBLE PRECISION) AS "P_0.0", CAST(0.0 AS DOUBLE PRECISION) AS "P_1.0", CAST(1.0 AS DOUBLE PRECISION) AS "P_2.0", CAST(2.0 AS DOUBLE PRECISION) AS "D", CAST(1.0 AS DOUBLE PRECISION) AS "DP" 
FROM dummy_cte_6 UNION ALL SELECT 12 AS nid, CAST(0.0 AS DOUBLE PRECISION) AS "P_0.0", CAST(0.0 AS DOUBLE PRECISION) AS "P_1.0", CAST(1.0 AS DOUBLE PRECISION) AS "P_2.0", CAST(2.0 AS DOUBLE PRECISION) AS "D", CAST(1.0 AS DOUBLE PRECISION) AS "DP" 
FROM dummy_cte_6) AS "Values"), 
"DT_Output_6" AS 
(SELECT "DT_node_lookup_6"."KEY" AS "KEY", "DT_node_lookup_6".node_id_2 AS node_id_2, "DT_node_data_6".nid AS nid, "DT_node_data_6"."P_0.0" AS "P_0.0", "DT_node_data_6"."P_1.0" AS "P_1.0", "DT_node_data_6"."P_2.0" AS "P_2.0", "DT_node_data_6"."D" AS "D", "DT_node_data_6"."DP" AS "DP" 
FROM "DT_node_lookup_6" LEFT OUTER JOIN "DT_node_data_6" ON "DT_node_lookup_6".node_id_2 = "DT_node_data_6".nid), 
"RF_Model_6" AS 
(SELECT "DT_Output_6"."KEY" AS "KEY", CAST(NULL AS DOUBLE PRECISION) AS "Score_CLASS_0", "DT_Output_6"."P_0.0" AS "Proba_CLASS_0", CASE WHEN ("DT_Output_6"."P_0.0" IS NULL OR "DT_Output_6"."P_0.0" > CAST(0.0 AS DOUBLE PRECISION)) THEN ln("DT_Output_6"."P_0.0") ELSE -1.79769313486231e+308 END AS "LogProba_CLASS_0", CAST(NULL AS DOUBLE PRECISION) AS "Score_CLASS_1", "DT_Output_6"."P_1.0" AS "Proba_CLASS_1", CASE WHEN ("DT_Output_6"."P_1.0" IS NULL OR "DT_Output_6"."P_1.0" > CAST(0.0 AS DOUBLE PRECISION)) THEN ln("DT_Output_6"."P_1.0") ELSE -1.79769313486231e+308 END AS "LogProba_CLASS_1", CAST(NULL AS DOUBLE PRECISION) AS "Score_CLASS_2", "DT_Output_6"."P_2.0" AS "Proba_CLASS_2", CASE WHEN ("DT_Output_6"."P_2.0" IS NULL OR "DT_Output_6"."P_2.0" > CAST(0.0 AS DOUBLE PRECISION)) THEN ln("DT_Output_6"."P_2.0") ELSE -1.79769313486231e+308 END AS "LogProba_CLASS_2" 
FROM "DT_Output_6"), 
"DT_node_lookup_7" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= CAST(-0.815876662731171 AS DOUBLE PRECISION)) THEN 1 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= CAST(0.540091991424561 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= CAST(0.617025017738342 AS DOUBLE PRECISION)) THEN 4 ELSE 5 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= CAST(0.587782144546509 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= CAST(0.123936086893082 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= CAST(-0.427880048751831 AS DOUBLE PRECISION)) THEN 9 ELSE 10 END ELSE 11 END ELSE 12 END END END AS node_id_2 
FROM tmp_20180602160444_jzo_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte_7 AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data_7" AS 
(SELECT "Values".nid AS nid, CAST("Values"."P_0.0" AS DOUBLE PRECISION) AS "P_0.0", CAST("Values"."P_1.0" AS DOUBLE PRECISION) AS "P_1.0", CAST("Values"."P_2.0" AS DOUBLE PRECISION) AS "P_2.0", CAST("Values"."D" AS DOUBLE PRECISION) AS "D", CAST("Values"."DP" AS DOUBLE PRECISION) AS "DP" 
FROM (SELECT 1 AS nid, CAST(1.0 AS DOUBLE PRECISION) AS "P_0.0", CAST(0.0 AS DOUBLE PRECISION) AS "P_1.0", CAST(0.0 AS DOUBLE PRECISION) AS "P_2.0", CAST(0.0 AS DOUBLE PRECISION) AS "D", CAST(1.0 AS DOUBLE PRECISION) AS "DP" 
FROM dummy_cte_7 UNION ALL SELECT 4 AS nid, CAST(0.0 AS DOUBLE PRECISION) AS "P_0.0", CAST(1.0 AS DOUBLE PRECISION) AS "P_1.0", CAST(0.0 AS DOUBLE PRECISION) AS "P_2.0", CAST(1.0 AS DOUBLE PRECISION) AS "D", CAST(1.0 AS DOUBLE PRECISION) AS "DP" 
FROM dummy_cte_7 UNION ALL SELECT 5 AS nid, CAST(0.0 AS DOUBLE PRECISION) AS "P_0.0", CAST(0.0 AS DOUBLE PRECISION) AS "P_1.0", CAST(1.0 AS DOUBLE PRECISION) AS "P_2.0", CAST(2.0 AS DOUBLE PRECISION) AS "D", CAST(1.0 AS DOUBLE PRECISION) AS "DP" 
FROM dummy_cte_7 UNION ALL SELECT 9 AS nid, CAST(0.0 AS DOUBLE PRECISION) AS "P_0.0", CAST(0.0 AS DOUBLE PRECISION) AS "P_1.0", CAST(1.0 AS DOUBLE PRECISION) AS "P_2.0", CAST(2.0 AS DOUBLE PRECISION) AS "D", CAST(1.0 AS DOUBLE PRECISION) AS "DP" 
FROM dummy_cte_7 UNION ALL SELECT 10 AS nid, CAST(0.0 AS DOUBLE PRECISION) AS "P_0.0", CAST(1.0 AS DOUBLE PRECISION) AS "P_1.0", CAST(0.0 AS DOUBLE PRECISION) AS "P_2.0", CAST(1.0 AS DOUBLE PRECISION) AS "D", CAST(1.0 AS DOUBLE PRECISION) AS "DP" 
FROM dummy_cte_7 UNION ALL SELECT 11 AS nid, CAST(0.0 AS DOUBLE PRECISION) AS "P_0.0", CAST(0.0 AS DOUBLE PRECISION) AS "P_1.0", CAST(1.0 AS DOUBLE PRECISION) AS "P_2.0", CAST(2.0 AS DOUBLE PRECISION) AS "D", CAST(1.0 AS DOUBLE PRECISION) AS "DP" 
FROM dummy_cte_7 UNION ALL SELECT 12 AS nid, CAST(0.0 AS DOUBLE PRECISION) AS "P_0.0", CAST(0.0 AS DOUBLE PRECISION) AS "P_1.0", CAST(1.0 AS DOUBLE PRECISION) AS "P_2.0", CAST(2.0 AS DOUBLE PRECISION) AS "D", CAST(1.0 AS DOUBLE PRECISION) AS "DP" 
FROM dummy_cte_7) AS "Values"), 
"DT_Output_7" AS 
(SELECT "DT_node_lookup_7"."KEY" AS "KEY", "DT_node_lookup_7".node_id_2 AS node_id_2, "DT_node_data_7".nid AS nid, "DT_node_data_7"."P_0.0" AS "P_0.0", "DT_node_data_7"."P_1.0" AS "P_1.0", "DT_node_data_7"."P_2.0" AS "P_2.0", "DT_node_data_7"."D" AS "D", "DT_node_data_7"."DP" AS "DP" 
FROM "DT_node_lookup_7" LEFT OUTER JOIN "DT_node_data_7" ON "DT_node_lookup_7".node_id_2 = "DT_node_data_7".nid), 
"RF_Model_7" AS 
(SELECT "DT_Output_7"."KEY" AS "KEY", CAST(NULL AS DOUBLE PRECISION) AS "Score_CLASS_0", "DT_Output_7"."P_0.0" AS "Proba_CLASS_0", CASE WHEN ("DT_Output_7"."P_0.0" IS NULL OR "DT_Output_7"."P_0.0" > CAST(0.0 AS DOUBLE PRECISION)) THEN ln("DT_Output_7"."P_0.0") ELSE -1.79769313486231e+308 END AS "LogProba_CLASS_0", CAST(NULL AS DOUBLE PRECISION) AS "Score_CLASS_1", "DT_Output_7"."P_1.0" AS "Proba_CLASS_1", CASE WHEN ("DT_Output_7"."P_1.0" IS NULL OR "DT_Output_7"."P_1.0" > CAST(0.0 AS DOUBLE PRECISION)) THEN ln("DT_Output_7"."P_1.0") ELSE -1.79769313486231e+308 END AS "LogProba_CLASS_1", CAST(NULL AS DOUBLE PRECISION) AS "Score_CLASS_2", "DT_Output_7"."P_2.0" AS "Proba_CLASS_2", CASE WHEN ("DT_Output_7"."P_2.0" IS NULL OR "DT_Output_7"."P_2.0" > CAST(0.0 AS DOUBLE PRECISION)) THEN ln("DT_Output_7"."P_2.0") ELSE -1.79769313486231e+308 END AS "LogProba_CLASS_2" 
FROM "DT_Output_7"), 
"DT_node_lookup_8" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= CAST(0.587782144546509 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= CAST(-0.480630218982697 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= CAST(-0.726790547370911 AS DOUBLE PRECISION)) THEN 3 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= CAST(0.207624524831772 AS DOUBLE PRECISION)) THEN 5 ELSE 6 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= CAST(-0.669662177562714 AS DOUBLE PRECISION)) THEN 8 ELSE 9 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= CAST(0.646267890930176 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= CAST(0.030562859028578 AS DOUBLE PRECISION)) THEN 12 ELSE 13 END ELSE 14 END END AS node_id_2 
FROM tmp_20180602160444_jzo_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte_8 AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data_8" AS 
(SELECT "Values".nid AS nid, CAST("Values"."P_0.0" AS DOUBLE PRECISION) AS "P_0.0", CAST("Values"."P_1.0" AS DOUBLE PRECISION) AS "P_1.0", CAST("Values"."P_2.0" AS DOUBLE PRECISION) AS "P_2.0", CAST("Values"."D" AS DOUBLE PRECISION) AS "D", CAST("Values"."DP" AS DOUBLE PRECISION) AS "DP" 
FROM (SELECT 3 AS nid, CAST(1.0 AS DOUBLE PRECISION) AS "P_0.0", CAST(0.0 AS DOUBLE PRECISION) AS "P_1.0", CAST(0.0 AS DOUBLE PRECISION) AS "P_2.0", CAST(0.0 AS DOUBLE PRECISION) AS "D", CAST(1.0 AS DOUBLE PRECISION) AS "DP" 
FROM dummy_cte_8 UNION ALL SELECT 5 AS nid, CAST(0.0 AS DOUBLE PRECISION) AS "P_0.0", CAST(1.0 AS DOUBLE PRECISION) AS "P_1.0", CAST(0.0 AS DOUBLE PRECISION) AS "P_2.0", CAST(1.0 AS DOUBLE PRECISION) AS "D", CAST(1.0 AS DOUBLE PRECISION) AS "DP" 
FROM dummy_cte_8 UNION ALL SELECT 6 AS nid, CAST(0.0 AS DOUBLE PRECISION) AS "P_0.0", CAST(0.0 AS DOUBLE PRECISION) AS "P_1.0", CAST(1.0 AS DOUBLE PRECISION) AS "P_2.0", CAST(2.0 AS DOUBLE PRECISION) AS "D", CAST(1.0 AS DOUBLE PRECISION) AS "DP" 
FROM dummy_cte_8 UNION ALL SELECT 8 AS nid, CAST(1.0 AS DOUBLE PRECISION) AS "P_0.0", CAST(0.0 AS DOUBLE PRECISION) AS "P_1.0", CAST(0.0 AS DOUBLE PRECISION) AS "P_2.0", CAST(0.0 AS DOUBLE PRECISION) AS "D", CAST(1.0 AS DOUBLE PRECISION) AS "DP" 
FROM dummy_cte_8 UNION ALL SELECT 9 AS nid, CAST(0.0 AS DOUBLE PRECISION) AS "P_0.0", CAST(1.0 AS DOUBLE PRECISION) AS "P_1.0", CAST(0.0 AS DOUBLE PRECISION) AS "P_2.0", CAST(1.0 AS DOUBLE PRECISION) AS "D", CAST(1.0 AS DOUBLE PRECISION) AS "DP" 
FROM dummy_cte_8 UNION ALL SELECT 12 AS nid, CAST(0.0 AS DOUBLE PRECISION) AS "P_0.0", CAST(0.0 AS DOUBLE PRECISION) AS "P_1.0", CAST(1.0 AS DOUBLE PRECISION) AS "P_2.0", CAST(2.0 AS DOUBLE PRECISION) AS "D", CAST(1.0 AS DOUBLE PRECISION) AS "DP" 
FROM dummy_cte_8 UNION ALL SELECT 13 AS nid, CAST(0.0 AS DOUBLE PRECISION) AS "P_0.0", CAST(1.0 AS DOUBLE PRECISION) AS "P_1.0", CAST(0.0 AS DOUBLE PRECISION) AS "P_2.0", CAST(1.0 AS DOUBLE PRECISION) AS "D", CAST(1.0 AS DOUBLE PRECISION) AS "DP" 
FROM dummy_cte_8 UNION ALL SELECT 14 AS nid, CAST(0.0 AS DOUBLE PRECISION) AS "P_0.0", CAST(0.0 AS DOUBLE PRECISION) AS "P_1.0", CAST(1.0 AS DOUBLE PRECISION) AS "P_2.0", CAST(2.0 AS DOUBLE PRECISION) AS "D", CAST(1.0 AS DOUBLE PRECISION) AS "DP" 
FROM dummy_cte_8) AS "Values"), 
"DT_Output_8" AS 
(SELECT "DT_node_lookup_8"."KEY" AS "KEY", "DT_node_lookup_8".node_id_2 AS node_id_2, "DT_node_data_8".nid AS nid, "DT_node_data_8"."P_0.0" AS "P_0.0", "DT_node_data_8"."P_1.0" AS "P_1.0", "DT_node_data_8"."P_2.0" AS "P_2.0", "DT_node_data_8"."D" AS "D", "DT_node_data_8"."DP" AS "DP" 
FROM "DT_node_lookup_8" LEFT OUTER JOIN "DT_node_data_8" ON "DT_node_lookup_8".node_id_2 = "DT_node_data_8".nid), 
"RF_Model_8" AS 
(SELECT "DT_Output_8"."KEY" AS "KEY", CAST(NULL AS DOUBLE PRECISION) AS "Score_CLASS_0", "DT_Output_8"."P_0.0" AS "Proba_CLASS_0", CASE WHEN ("DT_Output_8"."P_0.0" IS NULL OR "DT_Output_8"."P_0.0" > CAST(0.0 AS DOUBLE PRECISION)) THEN ln("DT_Output_8"."P_0.0") ELSE -1.79769313486231e+308 END AS "LogProba_CLASS_0", CAST(NULL AS DOUBLE PRECISION) AS "Score_CLASS_1", "DT_Output_8"."P_1.0" AS "Proba_CLASS_1", CASE WHEN ("DT_Output_8"."P_1.0" IS NULL OR "DT_Output_8"."P_1.0" > CAST(0.0 AS DOUBLE PRECISION)) THEN ln("DT_Output_8"."P_1.0") ELSE -1.79769313486231e+308 END AS "LogProba_CLASS_1", CAST(NULL AS DOUBLE PRECISION) AS "Score_CLASS_2", "DT_Output_8"."P_2.0" AS "Proba_CLASS_2", CASE WHEN ("DT_Output_8"."P_2.0" IS NULL OR "DT_Output_8"."P_2.0" > CAST(0.0 AS DOUBLE PRECISION)) THEN ln("DT_Output_8"."P_2.0") ELSE -1.79769313486231e+308 END AS "LogProba_CLASS_2" 
FROM "DT_Output_8"), 
"DT_node_lookup_9" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= CAST(-0.593434453010559 AS DOUBLE PRECISION)) THEN 1 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= CAST(0.406735956668854 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= CAST(0.646267890930176 AS DOUBLE PRECISION)) THEN 4 ELSE 5 END ELSE 6 END END AS node_id_2 
FROM tmp_20180602160444_jzo_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte_9 AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data_9" AS 
(SELECT "Values".nid AS nid, CAST("Values"."P_0.0" AS DOUBLE PRECISION) AS "P_0.0", CAST("Values"."P_1.0" AS DOUBLE PRECISION) AS "P_1.0", CAST("Values"."P_2.0" AS DOUBLE PRECISION) AS "P_2.0", CAST("Values"."D" AS DOUBLE PRECISION) AS "D", CAST("Values"."DP" AS DOUBLE PRECISION) AS "DP" 
FROM (SELECT 1 AS nid, CAST(1.0 AS DOUBLE PRECISION) AS "P_0.0", CAST(0.0 AS DOUBLE PRECISION) AS "P_1.0", CAST(0.0 AS DOUBLE PRECISION) AS "P_2.0", CAST(0.0 AS DOUBLE PRECISION) AS "D", CAST(1.0 AS DOUBLE PRECISION) AS "DP" 
FROM dummy_cte_9 UNION ALL SELECT 4 AS nid, CAST(0.0 AS DOUBLE PRECISION) AS "P_0.0", CAST(1.0 AS DOUBLE PRECISION) AS "P_1.0", CAST(0.0 AS DOUBLE PRECISION) AS "P_2.0", CAST(1.0 AS DOUBLE PRECISION) AS "D", CAST(1.0 AS DOUBLE PRECISION) AS "DP" 
FROM dummy_cte_9 UNION ALL SELECT 5 AS nid, CAST(0.0 AS DOUBLE PRECISION) AS "P_0.0", CAST(0.0 AS DOUBLE PRECISION) AS "P_1.0", CAST(1.0 AS DOUBLE PRECISION) AS "P_2.0", CAST(2.0 AS DOUBLE PRECISION) AS "D", CAST(1.0 AS DOUBLE PRECISION) AS "DP" 
FROM dummy_cte_9 UNION ALL SELECT 6 AS nid, CAST(0.0 AS DOUBLE PRECISION) AS "P_0.0", CAST(0.0 AS DOUBLE PRECISION) AS "P_1.0", CAST(1.0 AS DOUBLE PRECISION) AS "P_2.0", CAST(2.0 AS DOUBLE PRECISION) AS "D", CAST(1.0 AS DOUBLE PRECISION) AS "DP" 
FROM dummy_cte_9) AS "Values"), 
"DT_Output_9" AS 
(SELECT "DT_node_lookup_9"."KEY" AS "KEY", "DT_node_lookup_9".node_id_2 AS node_id_2, "DT_node_data_9".nid AS nid, "DT_node_data_9"."P_0.0" AS "P_0.0", "DT_node_data_9"."P_1.0" AS "P_1.0", "DT_node_data_9"."P_2.0" AS "P_2.0", "DT_node_data_9"."D" AS "D", "DT_node_data_9"."DP" AS "DP" 
FROM "DT_node_lookup_9" LEFT OUTER JOIN "DT_node_data_9" ON "DT_node_lookup_9".node_id_2 = "DT_node_data_9".nid), 
"RF_Model_9" AS 
(SELECT "DT_Output_9"."KEY" AS "KEY", CAST(NULL AS DOUBLE PRECISION) AS "Score_CLASS_0", "DT_Output_9"."P_0.0" AS "Proba_CLASS_0", CASE WHEN ("DT_Output_9"."P_0.0" IS NULL OR "DT_Output_9"."P_0.0" > CAST(0.0 AS DOUBLE PRECISION)) THEN ln("DT_Output_9"."P_0.0") ELSE -1.79769313486231e+308 END AS "LogProba_CLASS_0", CAST(NULL AS DOUBLE PRECISION) AS "Score_CLASS_1", "DT_Output_9"."P_1.0" AS "Proba_CLASS_1", CASE WHEN ("DT_Output_9"."P_1.0" IS NULL OR "DT_Output_9"."P_1.0" > CAST(0.0 AS DOUBLE PRECISION)) THEN ln("DT_Output_9"."P_1.0") ELSE -1.79769313486231e+308 END AS "LogProba_CLASS_1", CAST(NULL AS DOUBLE PRECISION) AS "Score_CLASS_2", "DT_Output_9"."P_2.0" AS "Proba_CLASS_2", CASE WHEN ("DT_Output_9"."P_2.0" IS NULL OR "DT_Output_9"."P_2.0" > CAST(0.0 AS DOUBLE PRECISION)) THEN ln("DT_Output_9"."P_2.0") ELSE -1.79769313486231e+308 END AS "LogProba_CLASS_2" 
FROM "DT_Output_9")
 SELECT "RF_B0"."KEY", "RF_B0"."Score_CLASS_0", "RF_B0"."Proba_CLASS_0", "RF_B0"."LogProba_CLASS_0", "RF_B0"."Score_CLASS_1", "RF_B0"."Proba_CLASS_1", "RF_B0"."LogProba_CLASS_1", "RF_B0"."Score_CLASS_2", "RF_B0"."Proba_CLASS_2", "RF_B0"."LogProba_CLASS_2" 
FROM (SELECT "RF_esu_0"."KEY" AS "KEY", "RF_esu_0"."Score_CLASS_0" AS "Score_CLASS_0", "RF_esu_0"."Proba_CLASS_0" AS "Proba_CLASS_0", "RF_esu_0"."LogProba_CLASS_0" AS "LogProba_CLASS_0", "RF_esu_0"."Score_CLASS_1" AS "Score_CLASS_1", "RF_esu_0"."Proba_CLASS_1" AS "Proba_CLASS_1", "RF_esu_0"."LogProba_CLASS_1" AS "LogProba_CLASS_1", "RF_esu_0"."Score_CLASS_2" AS "Score_CLASS_2", "RF_esu_0"."Proba_CLASS_2" AS "Proba_CLASS_2", "RF_esu_0"."LogProba_CLASS_2" AS "LogProba_CLASS_2" 
FROM (SELECT "RF_Model_0"."KEY" AS "KEY", "RF_Model_0"."Score_CLASS_0" AS "Score_CLASS_0", "RF_Model_0"."Proba_CLASS_0" AS "Proba_CLASS_0", "RF_Model_0"."LogProba_CLASS_0" AS "LogProba_CLASS_0", "RF_Model_0"."Score_CLASS_1" AS "Score_CLASS_1", "RF_Model_0"."Proba_CLASS_1" AS "Proba_CLASS_1", "RF_Model_0"."LogProba_CLASS_1" AS "LogProba_CLASS_1", "RF_Model_0"."Score_CLASS_2" AS "Score_CLASS_2", "RF_Model_0"."Proba_CLASS_2" AS "Proba_CLASS_2", "RF_Model_0"."LogProba_CLASS_2" AS "LogProba_CLASS_2" 
FROM "RF_Model_0" UNION ALL SELECT "RF_Model_1"."KEY" AS "KEY", "RF_Model_1"."Score_CLASS_0" AS "Score_CLASS_0", "RF_Model_1"."Proba_CLASS_0" AS "Proba_CLASS_0", "RF_Model_1"."LogProba_CLASS_0" AS "LogProba_CLASS_0", "RF_Model_1"."Score_CLASS_1" AS "Score_CLASS_1", "RF_Model_1"."Proba_CLASS_1" AS "Proba_CLASS_1", "RF_Model_1"."LogProba_CLASS_1" AS "LogProba_CLASS_1", "RF_Model_1"."Score_CLASS_2" AS "Score_CLASS_2", "RF_Model_1"."Proba_CLASS_2" AS "Proba_CLASS_2", "RF_Model_1"."LogProba_CLASS_2" AS "LogProba_CLASS_2" 
FROM "RF_Model_1" UNION ALL SELECT "RF_Model_2"."KEY" AS "KEY", "RF_Model_2"."Score_CLASS_0" AS "Score_CLASS_0", "RF_Model_2"."Proba_CLASS_0" AS "Proba_CLASS_0", "RF_Model_2"."LogProba_CLASS_0" AS "LogProba_CLASS_0", "RF_Model_2"."Score_CLASS_1" AS "Score_CLASS_1", "RF_Model_2"."Proba_CLASS_1" AS "Proba_CLASS_1", "RF_Model_2"."LogProba_CLASS_1" AS "LogProba_CLASS_1", "RF_Model_2"."Score_CLASS_2" AS "Score_CLASS_2", "RF_Model_2"."Proba_CLASS_2" AS "Proba_CLASS_2", "RF_Model_2"."LogProba_CLASS_2" AS "LogProba_CLASS_2" 
FROM "RF_Model_2" UNION ALL SELECT "RF_Model_3"."KEY" AS "KEY", "RF_Model_3"."Score_CLASS_0" AS "Score_CLASS_0", "RF_Model_3"."Proba_CLASS_0" AS "Proba_CLASS_0", "RF_Model_3"."LogProba_CLASS_0" AS "LogProba_CLASS_0", "RF_Model_3"."Score_CLASS_1" AS "Score_CLASS_1", "RF_Model_3"."Proba_CLASS_1" AS "Proba_CLASS_1", "RF_Model_3"."LogProba_CLASS_1" AS "LogProba_CLASS_1", "RF_Model_3"."Score_CLASS_2" AS "Score_CLASS_2", "RF_Model_3"."Proba_CLASS_2" AS "Proba_CLASS_2", "RF_Model_3"."LogProba_CLASS_2" AS "LogProba_CLASS_2" 
FROM "RF_Model_3" UNION ALL SELECT "RF_Model_4"."KEY" AS "KEY", "RF_Model_4"."Score_CLASS_0" AS "Score_CLASS_0", "RF_Model_4"."Proba_CLASS_0" AS "Proba_CLASS_0", "RF_Model_4"."LogProba_CLASS_0" AS "LogProba_CLASS_0", "RF_Model_4"."Score_CLASS_1" AS "Score_CLASS_1", "RF_Model_4"."Proba_CLASS_1" AS "Proba_CLASS_1", "RF_Model_4"."LogProba_CLASS_1" AS "LogProba_CLASS_1", "RF_Model_4"."Score_CLASS_2" AS "Score_CLASS_2", "RF_Model_4"."Proba_CLASS_2" AS "Proba_CLASS_2", "RF_Model_4"."LogProba_CLASS_2" AS "LogProba_CLASS_2" 
FROM "RF_Model_4" UNION ALL SELECT "RF_Model_5"."KEY" AS "KEY", "RF_Model_5"."Score_CLASS_0" AS "Score_CLASS_0", "RF_Model_5"."Proba_CLASS_0" AS "Proba_CLASS_0", "RF_Model_5"."LogProba_CLASS_0" AS "LogProba_CLASS_0", "RF_Model_5"."Score_CLASS_1" AS "Score_CLASS_1", "RF_Model_5"."Proba_CLASS_1" AS "Proba_CLASS_1", "RF_Model_5"."LogProba_CLASS_1" AS "LogProba_CLASS_1", "RF_Model_5"."Score_CLASS_2" AS "Score_CLASS_2", "RF_Model_5"."Proba_CLASS_2" AS "Proba_CLASS_2", "RF_Model_5"."LogProba_CLASS_2" AS "LogProba_CLASS_2" 
FROM "RF_Model_5" UNION ALL SELECT "RF_Model_6"."KEY" AS "KEY", "RF_Model_6"."Score_CLASS_0" AS "Score_CLASS_0", "RF_Model_6"."Proba_CLASS_0" AS "Proba_CLASS_0", "RF_Model_6"."LogProba_CLASS_0" AS "LogProba_CLASS_0", "RF_Model_6"."Score_CLASS_1" AS "Score_CLASS_1", "RF_Model_6"."Proba_CLASS_1" AS "Proba_CLASS_1", "RF_Model_6"."LogProba_CLASS_1" AS "LogProba_CLASS_1", "RF_Model_6"."Score_CLASS_2" AS "Score_CLASS_2", "RF_Model_6"."Proba_CLASS_2" AS "Proba_CLASS_2", "RF_Model_6"."LogProba_CLASS_2" AS "LogProba_CLASS_2" 
FROM "RF_Model_6" UNION ALL SELECT "RF_Model_7"."KEY" AS "KEY", "RF_Model_7"."Score_CLASS_0" AS "Score_CLASS_0", "RF_Model_7"."Proba_CLASS_0" AS "Proba_CLASS_0", "RF_Model_7"."LogProba_CLASS_0" AS "LogProba_CLASS_0", "RF_Model_7"."Score_CLASS_1" AS "Score_CLASS_1", "RF_Model_7"."Proba_CLASS_1" AS "Proba_CLASS_1", "RF_Model_7"."LogProba_CLASS_1" AS "LogProba_CLASS_1", "RF_Model_7"."Score_CLASS_2" AS "Score_CLASS_2", "RF_Model_7"."Proba_CLASS_2" AS "Proba_CLASS_2", "RF_Model_7"."LogProba_CLASS_2" AS "LogProba_CLASS_2" 
FROM "RF_Model_7" UNION ALL SELECT "RF_Model_8"."KEY" AS "KEY", "RF_Model_8"."Score_CLASS_0" AS "Score_CLASS_0", "RF_Model_8"."Proba_CLASS_0" AS "Proba_CLASS_0", "RF_Model_8"."LogProba_CLASS_0" AS "LogProba_CLASS_0", "RF_Model_8"."Score_CLASS_1" AS "Score_CLASS_1", "RF_Model_8"."Proba_CLASS_1" AS "Proba_CLASS_1", "RF_Model_8"."LogProba_CLASS_1" AS "LogProba_CLASS_1", "RF_Model_8"."Score_CLASS_2" AS "Score_CLASS_2", "RF_Model_8"."Proba_CLASS_2" AS "Proba_CLASS_2", "RF_Model_8"."LogProba_CLASS_2" AS "LogProba_CLASS_2" 
FROM "RF_Model_8" UNION ALL SELECT "RF_Model_9"."KEY" AS "KEY", "RF_Model_9"."Score_CLASS_0" AS "Score_CLASS_0", "RF_Model_9"."Proba_CLASS_0" AS "Proba_CLASS_0", "RF_Model_9"."LogProba_CLASS_0" AS "LogProba_CLASS_0", "RF_Model_9"."Score_CLASS_1" AS "Score_CLASS_1", "RF_Model_9"."Proba_CLASS_1" AS "Proba_CLASS_1", "RF_Model_9"."LogProba_CLASS_1" AS "LogProba_CLASS_1", "RF_Model_9"."Score_CLASS_2" AS "Score_CLASS_2", "RF_Model_9"."Proba_CLASS_2" AS "Proba_CLASS_2", "RF_Model_9"."LogProba_CLASS_2" AS "LogProba_CLASS_2" 
FROM "RF_Model_9") AS "RF_esu_0") AS "RF_B0") AS "U"

-- Code For temporary table tmp_20180602160445_s6l_rf_b1 part 1. Create 


CREATE GLOBAL TEMPORARY TABLE tmp_20180602160445_s6l_rf_b1  (
	"KEY" BIGINT, 
	"Score_CLASS_0" DOUBLE PRECISION, 
	"Proba_CLASS_0" DOUBLE PRECISION, 
	"LogProba_CLASS_0" DOUBLE PRECISION, 
	"Score_CLASS_1" DOUBLE PRECISION, 
	"Proba_CLASS_1" DOUBLE PRECISION, 
	"LogProba_CLASS_1" DOUBLE PRECISION, 
	"Score_CLASS_2" DOUBLE PRECISION, 
	"Proba_CLASS_2" DOUBLE PRECISION, 
	"LogProba_CLASS_2" DOUBLE PRECISION
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table tmp_20180602160445_s6l_rf_b1 part 2. Populate

INSERT INTO tmp_20180602160445_s6l_rf_b1 ("KEY", "Score_CLASS_0", "Proba_CLASS_0", "LogProba_CLASS_0", "Score_CLASS_1", "Proba_CLASS_1", "LogProba_CLASS_1", "Score_CLASS_2", "Proba_CLASS_2", "LogProba_CLASS_2") SELECT "U"."KEY", "U"."Score_CLASS_0", "U"."Proba_CLASS_0", "U"."LogProba_CLASS_0", "U"."Score_CLASS_1", "U"."Proba_CLASS_1", "U"."LogProba_CLASS_1", "U"."Score_CLASS_2", "U"."Proba_CLASS_2", "U"."LogProba_CLASS_2" 
FROM (WITH "DT_node_lookup_10" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= CAST(-0.480630218982697 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= CAST(-0.728147983551025 AS DOUBLE PRECISION)) THEN 2 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= CAST(0.47341400384903 AS DOUBLE PRECISION)) THEN 4 ELSE 5 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= CAST(0.587782144546509 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= CAST(1.17667007446289 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= CAST(0.529296338558197 AS DOUBLE PRECISION)) THEN 9 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= CAST(0.123936086893082 AS DOUBLE PRECISION)) THEN 11 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= CAST(0.47341400384903 AS DOUBLE PRECISION)) THEN 13 ELSE 14 END END END ELSE 15 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= CAST(0.646267890930176 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= CAST(0.42621922492981 AS DOUBLE PRECISION)) THEN 18 ELSE 19 END ELSE 20 END END END AS node_id_2 
FROM tmp_20180602160444_jzo_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte_10 AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data_10" AS 
(SELECT "Values".nid AS nid, CAST("Values"."P_0.0" AS DOUBLE PRECISION) AS "P_0.0", CAST("Values"."P_1.0" AS DOUBLE PRECISION) AS "P_1.0", CAST("Values"."P_2.0" AS DOUBLE PRECISION) AS "P_2.0", CAST("Values"."D" AS DOUBLE PRECISION) AS "D", CAST("Values"."DP" AS DOUBLE PRECISION) AS "DP" 
FROM (SELECT 2 AS nid, CAST(1.0 AS DOUBLE PRECISION) AS "P_0.0", CAST(0.0 AS DOUBLE PRECISION) AS "P_1.0", CAST(0.0 AS DOUBLE PRECISION) AS "P_2.0", CAST(0.0 AS DOUBLE PRECISION) AS "D", CAST(1.0 AS DOUBLE PRECISION) AS "DP" 
FROM dummy_cte_10 UNION ALL SELECT 4 AS nid, CAST(0.0 AS DOUBLE PRECISION) AS "P_0.0", CAST(1.0 AS DOUBLE PRECISION) AS "P_1.0", CAST(0.0 AS DOUBLE PRECISION) AS "P_2.0", CAST(1.0 AS DOUBLE PRECISION) AS "D", CAST(1.0 AS DOUBLE PRECISION) AS "DP" 
FROM dummy_cte_10 UNION ALL SELECT 5 AS nid, CAST(0.0 AS DOUBLE PRECISION) AS "P_0.0", CAST(0.0 AS DOUBLE PRECISION) AS "P_1.0", CAST(1.0 AS DOUBLE PRECISION) AS "P_2.0", CAST(2.0 AS DOUBLE PRECISION) AS "D", CAST(1.0 AS DOUBLE PRECISION) AS "DP" 
FROM dummy_cte_10 UNION ALL SELECT 9 AS nid, CAST(0.0 AS DOUBLE PRECISION) AS "P_0.0", CAST(1.0 AS DOUBLE PRECISION) AS "P_1.0", CAST(0.0 AS DOUBLE PRECISION) AS "P_2.0", CAST(1.0 AS DOUBLE PRECISION) AS "D", CAST(1.0 AS DOUBLE PRECISION) AS "DP" 
FROM dummy_cte_10 UNION ALL SELECT 11 AS nid, CAST(0.0 AS DOUBLE PRECISION) AS "P_0.0", CAST(1.0 AS DOUBLE PRECISION) AS "P_1.0", CAST(0.0 AS DOUBLE PRECISION) AS "P_2.0", CAST(1.0 AS DOUBLE PRECISION) AS "D", CAST(1.0 AS DOUBLE PRECISION) AS "DP" 
FROM dummy_cte_10 UNION ALL SELECT 13 AS nid, CAST(0.0 AS DOUBLE PRECISION) AS "P_0.0", CAST(1.0 AS DOUBLE PRECISION) AS "P_1.0", CAST(0.0 AS DOUBLE PRECISION) AS "P_2.0", CAST(1.0 AS DOUBLE PRECISION) AS "D", CAST(1.0 AS DOUBLE PRECISION) AS "DP" 
FROM dummy_cte_10 UNION ALL SELECT 14 AS nid, CAST(0.0 AS DOUBLE PRECISION) AS "P_0.0", CAST(0.0 AS DOUBLE PRECISION) AS "P_1.0", CAST(1.0 AS DOUBLE PRECISION) AS "P_2.0", CAST(2.0 AS DOUBLE PRECISION) AS "D", CAST(1.0 AS DOUBLE PRECISION) AS "DP" 
FROM dummy_cte_10 UNION ALL SELECT 15 AS nid, CAST(1.0 AS DOUBLE PRECISION) AS "P_0.0", CAST(0.0 AS DOUBLE PRECISION) AS "P_1.0", CAST(0.0 AS DOUBLE PRECISION) AS "P_2.0", CAST(0.0 AS DOUBLE PRECISION) AS "D", CAST(1.0 AS DOUBLE PRECISION) AS "DP" 
FROM dummy_cte_10 UNION ALL SELECT 18 AS nid, CAST(0.0 AS DOUBLE PRECISION) AS "P_0.0", CAST(0.0 AS DOUBLE PRECISION) AS "P_1.0", CAST(1.0 AS DOUBLE PRECISION) AS "P_2.0", CAST(2.0 AS DOUBLE PRECISION) AS "D", CAST(1.0 AS DOUBLE PRECISION) AS "DP" 
FROM dummy_cte_10 UNION ALL SELECT 19 AS nid, CAST(0.0 AS DOUBLE PRECISION) AS "P_0.0", CAST(1.0 AS DOUBLE PRECISION) AS "P_1.0", CAST(0.0 AS DOUBLE PRECISION) AS "P_2.0", CAST(1.0 AS DOUBLE PRECISION) AS "D", CAST(1.0 AS DOUBLE PRECISION) AS "DP" 
FROM dummy_cte_10 UNION ALL SELECT 20 AS nid, CAST(0.0 AS DOUBLE PRECISION) AS "P_0.0", CAST(0.0 AS DOUBLE PRECISION) AS "P_1.0", CAST(1.0 AS DOUBLE PRECISION) AS "P_2.0", CAST(2.0 AS DOUBLE PRECISION) AS "D", CAST(1.0 AS DOUBLE PRECISION) AS "DP" 
FROM dummy_cte_10) AS "Values"), 
"DT_Output_10" AS 
(SELECT "DT_node_lookup_10"."KEY" AS "KEY", "DT_node_lookup_10".node_id_2 AS node_id_2, "DT_node_data_10".nid AS nid, "DT_node_data_10"."P_0.0" AS "P_0.0", "DT_node_data_10"."P_1.0" AS "P_1.0", "DT_node_data_10"."P_2.0" AS "P_2.0", "DT_node_data_10"."D" AS "D", "DT_node_data_10"."DP" AS "DP" 
FROM "DT_node_lookup_10" LEFT OUTER JOIN "DT_node_data_10" ON "DT_node_lookup_10".node_id_2 = "DT_node_data_10".nid), 
"RF_Model_10" AS 
(SELECT "DT_Output_10"."KEY" AS "KEY", CAST(NULL AS DOUBLE PRECISION) AS "Score_CLASS_0", "DT_Output_10"."P_0.0" AS "Proba_CLASS_0", CASE WHEN ("DT_Output_10"."P_0.0" IS NULL OR "DT_Output_10"."P_0.0" > CAST(0.0 AS DOUBLE PRECISION)) THEN ln("DT_Output_10"."P_0.0") ELSE -1.79769313486231e+308 END AS "LogProba_CLASS_0", CAST(NULL AS DOUBLE PRECISION) AS "Score_CLASS_1", "DT_Output_10"."P_1.0" AS "Proba_CLASS_1", CASE WHEN ("DT_Output_10"."P_1.0" IS NULL OR "DT_Output_10"."P_1.0" > CAST(0.0 AS DOUBLE PRECISION)) THEN ln("DT_Output_10"."P_1.0") ELSE -1.79769313486231e+308 END AS "LogProba_CLASS_1", CAST(NULL AS DOUBLE PRECISION) AS "Score_CLASS_2", "DT_Output_10"."P_2.0" AS "Proba_CLASS_2", CASE WHEN ("DT_Output_10"."P_2.0" IS NULL OR "DT_Output_10"."P_2.0" > CAST(0.0 AS DOUBLE PRECISION)) THEN ln("DT_Output_10"."P_2.0") ELSE -1.79769313486231e+308 END AS "LogProba_CLASS_2" 
FROM "DT_Output_10"), 
"DT_node_lookup_11" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= CAST(0.646267890930176 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= CAST(-0.815876662731171 AS DOUBLE PRECISION)) THEN 2 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= CAST(0.873482167720795 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= CAST(-1.085196495056152 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= CAST(-1.344765901565552 AS DOUBLE PRECISION)) THEN 6 ELSE 7 END ELSE 8 END ELSE 9 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= CAST(0.704753637313843 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= CAST(0.740126132965088 AS DOUBLE PRECISION)) THEN 12 ELSE 13 END ELSE 14 END END AS node_id_2 
FROM tmp_20180602160444_jzo_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte_11 AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data_11" AS 
(SELECT "Values".nid AS nid, CAST("Values"."P_0.0" AS DOUBLE PRECISION) AS "P_0.0", CAST("Values"."P_1.0" AS DOUBLE PRECISION) AS "P_1.0", CAST("Values"."P_2.0" AS DOUBLE PRECISION) AS "P_2.0", CAST("Values"."D" AS DOUBLE PRECISION) AS "D", CAST("Values"."DP" AS DOUBLE PRECISION) AS "DP" 
FROM (SELECT 2 AS nid, CAST(1.0 AS DOUBLE PRECISION) AS "P_0.0", CAST(0.0 AS DOUBLE PRECISION) AS "P_1.0", CAST(0.0 AS DOUBLE PRECISION) AS "P_2.0", CAST(0.0 AS DOUBLE PRECISION) AS "D", CAST(1.0 AS DOUBLE PRECISION) AS "DP" 
FROM dummy_cte_11 UNION ALL SELECT 6 AS nid, CAST(0.0 AS DOUBLE PRECISION) AS "P_0.0", CAST(1.0 AS DOUBLE PRECISION) AS "P_1.0", CAST(0.0 AS DOUBLE PRECISION) AS "P_2.0", CAST(1.0 AS DOUBLE PRECISION) AS "D", CAST(1.0 AS DOUBLE PRECISION) AS "DP" 
FROM dummy_cte_11 UNION ALL SELECT 7 AS nid, CAST(0.0 AS DOUBLE PRECISION) AS "P_0.0", CAST(0.0 AS DOUBLE PRECISION) AS "P_1.0", CAST(1.0 AS DOUBLE PRECISION) AS "P_2.0", CAST(2.0 AS DOUBLE PRECISION) AS "D", CAST(1.0 AS DOUBLE PRECISION) AS "DP" 
FROM dummy_cte_11 UNION ALL SELECT 8 AS nid, CAST(0.0 AS DOUBLE PRECISION) AS "P_0.0", CAST(1.0 AS DOUBLE PRECISION) AS "P_1.0", CAST(0.0 AS DOUBLE PRECISION) AS "P_2.0", CAST(1.0 AS DOUBLE PRECISION) AS "D", CAST(1.0 AS DOUBLE PRECISION) AS "DP" 
FROM dummy_cte_11 UNION ALL SELECT 9 AS nid, CAST(0.0 AS DOUBLE PRECISION) AS "P_0.0", CAST(0.0 AS DOUBLE PRECISION) AS "P_1.0", CAST(1.0 AS DOUBLE PRECISION) AS "P_2.0", CAST(2.0 AS DOUBLE PRECISION) AS "D", CAST(1.0 AS DOUBLE PRECISION) AS "DP" 
FROM dummy_cte_11 UNION ALL SELECT 12 AS nid, CAST(0.0 AS DOUBLE PRECISION) AS "P_0.0", CAST(1.0 AS DOUBLE PRECISION) AS "P_1.0", CAST(0.0 AS DOUBLE PRECISION) AS "P_2.0", CAST(1.0 AS DOUBLE PRECISION) AS "D", CAST(1.0 AS DOUBLE PRECISION) AS "DP" 
FROM dummy_cte_11 UNION ALL SELECT 13 AS nid, CAST(0.0 AS DOUBLE PRECISION) AS "P_0.0", CAST(0.0 AS DOUBLE PRECISION) AS "P_1.0", CAST(1.0 AS DOUBLE PRECISION) AS "P_2.0", CAST(2.0 AS DOUBLE PRECISION) AS "D", CAST(1.0 AS DOUBLE PRECISION) AS "DP" 
FROM dummy_cte_11 UNION ALL SELECT 14 AS nid, CAST(0.0 AS DOUBLE PRECISION) AS "P_0.0", CAST(0.0 AS DOUBLE PRECISION) AS "P_1.0", CAST(1.0 AS DOUBLE PRECISION) AS "P_2.0", CAST(2.0 AS DOUBLE PRECISION) AS "D", CAST(1.0 AS DOUBLE PRECISION) AS "DP" 
FROM dummy_cte_11) AS "Values"), 
"DT_Output_11" AS 
(SELECT "DT_node_lookup_11"."KEY" AS "KEY", "DT_node_lookup_11".node_id_2 AS node_id_2, "DT_node_data_11".nid AS nid, "DT_node_data_11"."P_0.0" AS "P_0.0", "DT_node_data_11"."P_1.0" AS "P_1.0", "DT_node_data_11"."P_2.0" AS "P_2.0", "DT_node_data_11"."D" AS "D", "DT_node_data_11"."DP" AS "DP" 
FROM "DT_node_lookup_11" LEFT OUTER JOIN "DT_node_data_11" ON "DT_node_lookup_11".node_id_2 = "DT_node_data_11".nid), 
"RF_Model_11" AS 
(SELECT "DT_Output_11"."KEY" AS "KEY", CAST(NULL AS DOUBLE PRECISION) AS "Score_CLASS_0", "DT_Output_11"."P_0.0" AS "Proba_CLASS_0", CASE WHEN ("DT_Output_11"."P_0.0" IS NULL OR "DT_Output_11"."P_0.0" > CAST(0.0 AS DOUBLE PRECISION)) THEN ln("DT_Output_11"."P_0.0") ELSE -1.79769313486231e+308 END AS "LogProba_CLASS_0", CAST(NULL AS DOUBLE PRECISION) AS "Score_CLASS_1", "DT_Output_11"."P_1.0" AS "Proba_CLASS_1", CASE WHEN ("DT_Output_11"."P_1.0" IS NULL OR "DT_Output_11"."P_1.0" > CAST(0.0 AS DOUBLE PRECISION)) THEN ln("DT_Output_11"."P_1.0") ELSE -1.79769313486231e+308 END AS "LogProba_CLASS_1", CAST(NULL AS DOUBLE PRECISION) AS "Score_CLASS_2", "DT_Output_11"."P_2.0" AS "Proba_CLASS_2", CASE WHEN ("DT_Output_11"."P_2.0" IS NULL OR "DT_Output_11"."P_2.0" > CAST(0.0 AS DOUBLE PRECISION)) THEN ln("DT_Output_11"."P_2.0") ELSE -1.79769313486231e+308 END AS "LogProba_CLASS_2" 
FROM "DT_Output_11"), 
"DT_node_lookup_12" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= CAST(-0.660112500190735 AS DOUBLE PRECISION)) THEN 1 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= CAST(0.540091991424561 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= CAST(0.646267890930176 AS DOUBLE PRECISION)) THEN 4 ELSE 5 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= CAST(0.704753637313843 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= CAST(0.78895902633667 AS DOUBLE PRECISION)) THEN 8 ELSE 9 END ELSE 10 END END END AS node_id_2 
FROM tmp_20180602160444_jzo_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte_12 AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data_12" AS 
(SELECT "Values".nid AS nid, CAST("Values"."P_0.0" AS DOUBLE PRECISION) AS "P_0.0", CAST("Values"."P_1.0" AS DOUBLE PRECISION) AS "P_1.0", CAST("Values"."P_2.0" AS DOUBLE PRECISION) AS "P_2.0", CAST("Values"."D" AS DOUBLE PRECISION) AS "D", CAST("Values"."DP" AS DOUBLE PRECISION) AS "DP" 
FROM (SELECT 1 AS nid, CAST(1.0 AS DOUBLE PRECISION) AS "P_0.0", CAST(0.0 AS DOUBLE PRECISION) AS "P_1.0", CAST(0.0 AS DOUBLE PRECISION) AS "P_2.0", CAST(0.0 AS DOUBLE PRECISION) AS "D", CAST(1.0 AS DOUBLE PRECISION) AS "DP" 
FROM dummy_cte_12 UNION ALL SELECT 4 AS nid, CAST(0.0 AS DOUBLE PRECISION) AS "P_0.0", CAST(1.0 AS DOUBLE PRECISION) AS "P_1.0", CAST(0.0 AS DOUBLE PRECISION) AS "P_2.0", CAST(1.0 AS DOUBLE PRECISION) AS "D", CAST(1.0 AS DOUBLE PRECISION) AS "DP" 
FROM dummy_cte_12 UNION ALL SELECT 5 AS nid, CAST(0.0 AS DOUBLE PRECISION) AS "P_0.0", CAST(0.0 AS DOUBLE PRECISION) AS "P_1.0", CAST(1.0 AS DOUBLE PRECISION) AS "P_2.0", CAST(2.0 AS DOUBLE PRECISION) AS "D", CAST(1.0 AS DOUBLE PRECISION) AS "DP" 
FROM dummy_cte_12 UNION ALL SELECT 8 AS nid, CAST(0.0 AS DOUBLE PRECISION) AS "P_0.0", CAST(0.0 AS DOUBLE PRECISION) AS "P_1.0", CAST(1.0 AS DOUBLE PRECISION) AS "P_2.0", CAST(2.0 AS DOUBLE PRECISION) AS "D", CAST(1.0 AS DOUBLE PRECISION) AS "DP" 
FROM dummy_cte_12 UNION ALL SELECT 9 AS nid, CAST(0.0 AS DOUBLE PRECISION) AS "P_0.0", CAST(1.0 AS DOUBLE PRECISION) AS "P_1.0", CAST(0.0 AS DOUBLE PRECISION) AS "P_2.0", CAST(1.0 AS DOUBLE PRECISION) AS "D", CAST(1.0 AS DOUBLE PRECISION) AS "DP" 
FROM dummy_cte_12 UNION ALL SELECT 10 AS nid, CAST(0.0 AS DOUBLE PRECISION) AS "P_0.0", CAST(0.0 AS DOUBLE PRECISION) AS "P_1.0", CAST(1.0 AS DOUBLE PRECISION) AS "P_2.0", CAST(2.0 AS DOUBLE PRECISION) AS "D", CAST(1.0 AS DOUBLE PRECISION) AS "DP" 
FROM dummy_cte_12) AS "Values"), 
"DT_Output_12" AS 
(SELECT "DT_node_lookup_12"."KEY" AS "KEY", "DT_node_lookup_12".node_id_2 AS node_id_2, "DT_node_data_12".nid AS nid, "DT_node_data_12"."P_0.0" AS "P_0.0", "DT_node_data_12"."P_1.0" AS "P_1.0", "DT_node_data_12"."P_2.0" AS "P_2.0", "DT_node_data_12"."D" AS "D", "DT_node_data_12"."DP" AS "DP" 
FROM "DT_node_lookup_12" LEFT OUTER JOIN "DT_node_data_12" ON "DT_node_lookup_12".node_id_2 = "DT_node_data_12".nid), 
"RF_Model_12" AS 
(SELECT "DT_Output_12"."KEY" AS "KEY", CAST(NULL AS DOUBLE PRECISION) AS "Score_CLASS_0", "DT_Output_12"."P_0.0" AS "Proba_CLASS_0", CASE WHEN ("DT_Output_12"."P_0.0" IS NULL OR "DT_Output_12"."P_0.0" > CAST(0.0 AS DOUBLE PRECISION)) THEN ln("DT_Output_12"."P_0.0") ELSE -1.79769313486231e+308 END AS "LogProba_CLASS_0", CAST(NULL AS DOUBLE PRECISION) AS "Score_CLASS_1", "DT_Output_12"."P_1.0" AS "Proba_CLASS_1", CASE WHEN ("DT_Output_12"."P_1.0" IS NULL OR "DT_Output_12"."P_1.0" > CAST(0.0 AS DOUBLE PRECISION)) THEN ln("DT_Output_12"."P_1.0") ELSE -1.79769313486231e+308 END AS "LogProba_CLASS_1", CAST(NULL AS DOUBLE PRECISION) AS "Score_CLASS_2", "DT_Output_12"."P_2.0" AS "Proba_CLASS_2", CASE WHEN ("DT_Output_12"."P_2.0" IS NULL OR "DT_Output_12"."P_2.0" > CAST(0.0 AS DOUBLE PRECISION)) THEN ln("DT_Output_12"."P_2.0") ELSE -1.79769313486231e+308 END AS "LogProba_CLASS_2" 
FROM "DT_Output_12"), 
"DT_node_lookup_13" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= CAST(0.587782144546509 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= CAST(-0.815876662731171 AS DOUBLE PRECISION)) THEN 2 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= CAST(0.540091991424561 AS DOUBLE PRECISION)) THEN 4 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= CAST(0.470810532569885 AS DOUBLE PRECISION)) THEN 6 ELSE 7 END END END ELSE 8 END AS node_id_2 
FROM tmp_20180602160444_jzo_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte_13 AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data_13" AS 
(SELECT "Values".nid AS nid, CAST("Values"."P_0.0" AS DOUBLE PRECISION) AS "P_0.0", CAST("Values"."P_1.0" AS DOUBLE PRECISION) AS "P_1.0", CAST("Values"."P_2.0" AS DOUBLE PRECISION) AS "P_2.0", CAST("Values"."D" AS DOUBLE PRECISION) AS "D", CAST("Values"."DP" AS DOUBLE PRECISION) AS "DP" 
FROM (SELECT 2 AS nid, CAST(1.0 AS DOUBLE PRECISION) AS "P_0.0", CAST(0.0 AS DOUBLE PRECISION) AS "P_1.0", CAST(0.0 AS DOUBLE PRECISION) AS "P_2.0", CAST(0.0 AS DOUBLE PRECISION) AS "D", CAST(1.0 AS DOUBLE PRECISION) AS "DP" 
FROM dummy_cte_13 UNION ALL SELECT 4 AS nid, CAST(0.0 AS DOUBLE PRECISION) AS "P_0.0", CAST(1.0 AS DOUBLE PRECISION) AS "P_1.0", CAST(0.0 AS DOUBLE PRECISION) AS "P_2.0", CAST(1.0 AS DOUBLE PRECISION) AS "D", CAST(1.0 AS DOUBLE PRECISION) AS "DP" 
FROM dummy_cte_13 UNION ALL SELECT 6 AS nid, CAST(0.0 AS DOUBLE PRECISION) AS "P_0.0", CAST(0.0 AS DOUBLE PRECISION) AS "P_1.0", CAST(1.0 AS DOUBLE PRECISION) AS "P_2.0", CAST(2.0 AS DOUBLE PRECISION) AS "D", CAST(1.0 AS DOUBLE PRECISION) AS "DP" 
FROM dummy_cte_13 UNION ALL SELECT 7 AS nid, CAST(0.0 AS DOUBLE PRECISION) AS "P_0.0", CAST(1.0 AS DOUBLE PRECISION) AS "P_1.0", CAST(0.0 AS DOUBLE PRECISION) AS "P_2.0", CAST(1.0 AS DOUBLE PRECISION) AS "D", CAST(1.0 AS DOUBLE PRECISION) AS "DP" 
FROM dummy_cte_13 UNION ALL SELECT 8 AS nid, CAST(0.0 AS DOUBLE PRECISION) AS "P_0.0", CAST(0.0 AS DOUBLE PRECISION) AS "P_1.0", CAST(1.0 AS DOUBLE PRECISION) AS "P_2.0", CAST(2.0 AS DOUBLE PRECISION) AS "D", CAST(1.0 AS DOUBLE PRECISION) AS "DP" 
FROM dummy_cte_13) AS "Values"), 
"DT_Output_13" AS 
(SELECT "DT_node_lookup_13"."KEY" AS "KEY", "DT_node_lookup_13".node_id_2 AS node_id_2, "DT_node_data_13".nid AS nid, "DT_node_data_13"."P_0.0" AS "P_0.0", "DT_node_data_13"."P_1.0" AS "P_1.0", "DT_node_data_13"."P_2.0" AS "P_2.0", "DT_node_data_13"."D" AS "D", "DT_node_data_13"."DP" AS "DP" 
FROM "DT_node_lookup_13" LEFT OUTER JOIN "DT_node_data_13" ON "DT_node_lookup_13".node_id_2 = "DT_node_data_13".nid), 
"RF_Model_13" AS 
(SELECT "DT_Output_13"."KEY" AS "KEY", CAST(NULL AS DOUBLE PRECISION) AS "Score_CLASS_0", "DT_Output_13"."P_0.0" AS "Proba_CLASS_0", CASE WHEN ("DT_Output_13"."P_0.0" IS NULL OR "DT_Output_13"."P_0.0" > CAST(0.0 AS DOUBLE PRECISION)) THEN ln("DT_Output_13"."P_0.0") ELSE -1.79769313486231e+308 END AS "LogProba_CLASS_0", CAST(NULL AS DOUBLE PRECISION) AS "Score_CLASS_1", "DT_Output_13"."P_1.0" AS "Proba_CLASS_1", CASE WHEN ("DT_Output_13"."P_1.0" IS NULL OR "DT_Output_13"."P_1.0" > CAST(0.0 AS DOUBLE PRECISION)) THEN ln("DT_Output_13"."P_1.0") ELSE -1.79769313486231e+308 END AS "LogProba_CLASS_1", CAST(NULL AS DOUBLE PRECISION) AS "Score_CLASS_2", "DT_Output_13"."P_2.0" AS "Proba_CLASS_2", CASE WHEN ("DT_Output_13"."P_2.0" IS NULL OR "DT_Output_13"."P_2.0" > CAST(0.0 AS DOUBLE PRECISION)) THEN ln("DT_Output_13"."P_2.0") ELSE -1.79769313486231e+308 END AS "LogProba_CLASS_2" 
FROM "DT_Output_13"), 
"DT_node_lookup_14" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= CAST(-0.815876662731171 AS DOUBLE PRECISION)) THEN 1 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= CAST(0.646267890930176 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= CAST(0.606770038604736 AS DOUBLE PRECISION)) THEN 4 ELSE 5 END ELSE 6 END END AS node_id_2 
FROM tmp_20180602160444_jzo_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte_14 AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data_14" AS 
(SELECT "Values".nid AS nid, CAST("Values"."P_0.0" AS DOUBLE PRECISION) AS "P_0.0", CAST("Values"."P_1.0" AS DOUBLE PRECISION) AS "P_1.0", CAST("Values"."P_2.0" AS DOUBLE PRECISION) AS "P_2.0", CAST("Values"."D" AS DOUBLE PRECISION) AS "D", CAST("Values"."DP" AS DOUBLE PRECISION) AS "DP" 
FROM (SELECT 1 AS nid, CAST(1.0 AS DOUBLE PRECISION) AS "P_0.0", CAST(0.0 AS DOUBLE PRECISION) AS "P_1.0", CAST(0.0 AS DOUBLE PRECISION) AS "P_2.0", CAST(0.0 AS DOUBLE PRECISION) AS "D", CAST(1.0 AS DOUBLE PRECISION) AS "DP" 
FROM dummy_cte_14 UNION ALL SELECT 4 AS nid, CAST(0.0 AS DOUBLE PRECISION) AS "P_0.0", CAST(1.0 AS DOUBLE PRECISION) AS "P_1.0", CAST(0.0 AS DOUBLE PRECISION) AS "P_2.0", CAST(1.0 AS DOUBLE PRECISION) AS "D", CAST(1.0 AS DOUBLE PRECISION) AS "DP" 
FROM dummy_cte_14 UNION ALL SELECT 5 AS nid, CAST(0.0 AS DOUBLE PRECISION) AS "P_0.0", CAST(0.0 AS DOUBLE PRECISION) AS "P_1.0", CAST(1.0 AS DOUBLE PRECISION) AS "P_2.0", CAST(2.0 AS DOUBLE PRECISION) AS "D", CAST(1.0 AS DOUBLE PRECISION) AS "DP" 
FROM dummy_cte_14 UNION ALL SELECT 6 AS nid, CAST(0.0 AS DOUBLE PRECISION) AS "P_0.0", CAST(0.0 AS DOUBLE PRECISION) AS "P_1.0", CAST(1.0 AS DOUBLE PRECISION) AS "P_2.0", CAST(2.0 AS DOUBLE PRECISION) AS "D", CAST(1.0 AS DOUBLE PRECISION) AS "DP" 
FROM dummy_cte_14) AS "Values"), 
"DT_Output_14" AS 
(SELECT "DT_node_lookup_14"."KEY" AS "KEY", "DT_node_lookup_14".node_id_2 AS node_id_2, "DT_node_data_14".nid AS nid, "DT_node_data_14"."P_0.0" AS "P_0.0", "DT_node_data_14"."P_1.0" AS "P_1.0", "DT_node_data_14"."P_2.0" AS "P_2.0", "DT_node_data_14"."D" AS "D", "DT_node_data_14"."DP" AS "DP" 
FROM "DT_node_lookup_14" LEFT OUTER JOIN "DT_node_data_14" ON "DT_node_lookup_14".node_id_2 = "DT_node_data_14".nid), 
"RF_Model_14" AS 
(SELECT "DT_Output_14"."KEY" AS "KEY", CAST(NULL AS DOUBLE PRECISION) AS "Score_CLASS_0", "DT_Output_14"."P_0.0" AS "Proba_CLASS_0", CASE WHEN ("DT_Output_14"."P_0.0" IS NULL OR "DT_Output_14"."P_0.0" > CAST(0.0 AS DOUBLE PRECISION)) THEN ln("DT_Output_14"."P_0.0") ELSE -1.79769313486231e+308 END AS "LogProba_CLASS_0", CAST(NULL AS DOUBLE PRECISION) AS "Score_CLASS_1", "DT_Output_14"."P_1.0" AS "Proba_CLASS_1", CASE WHEN ("DT_Output_14"."P_1.0" IS NULL OR "DT_Output_14"."P_1.0" > CAST(0.0 AS DOUBLE PRECISION)) THEN ln("DT_Output_14"."P_1.0") ELSE -1.79769313486231e+308 END AS "LogProba_CLASS_1", CAST(NULL AS DOUBLE PRECISION) AS "Score_CLASS_2", "DT_Output_14"."P_2.0" AS "Proba_CLASS_2", CASE WHEN ("DT_Output_14"."P_2.0" IS NULL OR "DT_Output_14"."P_2.0" > CAST(0.0 AS DOUBLE PRECISION)) THEN ln("DT_Output_14"."P_2.0") ELSE -1.79769313486231e+308 END AS "LogProba_CLASS_2" 
FROM "DT_Output_14"), 
"DT_node_lookup_15" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= CAST(-0.815876662731171 AS DOUBLE PRECISION)) THEN 1 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= CAST(0.673448085784912 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= CAST(0.8509681224823 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= CAST(0.540091991424561 AS DOUBLE PRECISION)) THEN 5 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= CAST(0.529296338558197 AS DOUBLE PRECISION)) THEN 7 ELSE 8 END END ELSE 9 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= CAST(0.806804180145264 AS DOUBLE PRECISION)) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= CAST(0.123936086893082 AS DOUBLE PRECISION)) THEN 12 ELSE 13 END ELSE 14 END END END AS node_id_2 
FROM tmp_20180602160444_jzo_ads_sca_2_out AS "ADS_sca_2_OUT"), 
dummy_cte_15 AS 
(SELECT CAST(0.0 AS DOUBLE PRECISION) AS "X"), 
"DT_node_data_15" AS 
(SELECT "Values".nid AS nid, CAST("Values"."P_0.0" AS DOUBLE PRECISION) AS "P_0.0", CAST("Values"."P_1.0" AS DOUBLE PRECISION) AS "P_1.0", CAST("Values"."P_2.0" AS DOUBLE PRECISION) AS "P_2.0", CAST("Values"."D" AS DOUBLE PRECISION) AS "D", CAST("Values"."DP" AS DOUBLE PRECISION) AS "DP" 
FROM (SELECT 1 AS nid, CAST(1.0 AS DOUBLE PRECISION) AS "P_0.0", CAST(0.0 AS DOUBLE PRECISION) AS "P_1.0", CAST(0.0 AS DOUBLE PRECISION) AS "P_2.0", CAST(0.0 AS DOUBLE PRECISION) AS "D", CAST(1.0 AS DOUBLE PRECISION) AS "DP" 
FROM dummy_cte_15 UNION ALL SELECT 5 AS nid, CAST(0.0 AS DOUBLE PRECISION) AS "P_0.0", CAST(1.0 AS DOUBLE PRECISION) AS "P_1.0", CAST(0.0 AS DOUBLE PRECISION) AS "P_2.0", CAST(1.0 AS DOUBLE PRECISION) AS "D", CAST(1.0 AS DOUBLE PRECISION) AS "DP" 
FROM dummy_cte_15 UNION ALL SELECT 7 AS nid, CAST(0.0 AS DOUBLE PRECISION) AS "P_0.0", CAST(0.0 AS DOUBLE PRECISION) AS "P_1.0", CAST(1.0 AS DOUBLE PRECISION) AS "P_2.0", CAST(2.0 AS DOUBLE PRECISION) AS "D", CAST(1.0 AS DOUBLE PRECISION) AS "DP" 
FROM dummy_cte_15 UNION ALL SELECT 8 AS nid, CAST(0.0 AS DOUBLE PRECISION) AS "P_0.0", CAST(1.0 AS DOUBLE PRECISION) AS "P_1.0", CAST(0.0 AS DOUBLE PRECISION) AS "P_2.0", CAST(1.0 AS DOUBLE PRECISION) AS "D", CAST(1.0 AS DOUBLE PRECISION) AS "DP" 
FROM dummy_cte_15 UNION ALL SELECT 9 AS nid, CAST(0.0 AS DOUBLE PRECISION) AS "P_0.0", CAST(0.0 AS DOUBLE PRECISION) AS "P_1.0", CAST(1.0 AS DOUBLE PRECISION) AS "P_2.0", CAST(2.0 AS DOUBLE PRECISION) AS "D", CAST(1.0 AS DOUBLE PRECISION) AS "DP" 
FROM dummy_cte_15 UNION ALL SELECT 12 AS nid, CAST(0.0 AS DOUBLE PRECISION) AS "P_0.0", CAST(1.0 AS DOUBLE PRECISION) AS "P_1.0", CAST(0.0 AS DOUBLE PRECISION) AS "P_2.0", CAST(1.0 AS DOUBLE PRECISION) AS "D", CAST(1.0 AS DOUBLE PRECISION) AS "DP" 
FROM dummy_cte_15 UNION ALL SELECT 13 AS nid, CAST(0.0 AS DOUBLE PRECISION) AS "P_0.0", CAST(0.0 AS DOUBLE PRECISION) AS "P_1.0", CAST(1.0 AS DOUBLE PRECISION) AS "P_2.0", CAST(2.0 AS DOUBLE PRECISION) AS "D", CAST(1.0 AS DOUBLE PRECISION) AS "DP" 
FROM dummy_cte_15 UNION ALL SELECT 14 AS nid, CAST(0.0 AS DOUBLE PRECISION) AS "P_0.0", CAST(0.0 AS DOUBLE PRECISION) AS "P_1.0", CAST(1.0 AS DOUBLE PRECISION) AS "P_2.0", CAST(2.0 AS DOUBLE PRECISION) AS "D", CAST(1.0 AS DOUBLE PRECISION) AS "DP" 
FROM dummy_cte_15) AS "Values"), 
"DT_Output_15" AS 
(SELECT "DT_node_lookup_15"."KEY" AS "KEY", "DT_node_lookup_15".node_id_2 AS node_id_2, "DT_node_data_15".nid AS nid, "DT_node_data_15"."P_0.0" AS "P_0.0", "DT_node_data_15"."P_1.0" AS "P_1.0", "DT_node_data_15"."P_2.0" AS "P_2.0", "DT_node_data_15"."D" AS "D", "DT_node_data_15"."DP" AS "DP" 
FROM "DT_node_lookup_15" LEFT OUTER JOIN "DT_node_data_15" ON "DT_node_lookup_15".node_id_2 = "DT_node_data_15".nid), 
"RF_Model_15" AS 
(SELECT "DT_Output_15"."KEY" AS "KEY", CAST(NULL AS DOUBLE PRECISION) AS "Score_CLASS_0", "DT_Output_15"."P_0.0" AS "Proba_CLASS_0", CASE WHEN ("DT_Output_15"."P_0.0" IS NULL OR "DT_Output_15"."P_0.0" > CAST(0.0 AS DOUBLE PRECISION)) THEN ln("DT_Output_15"."P_0.0") ELSE -1.79769313486231e+308 END AS "LogProba_CLASS_0", CAST(NULL AS DOUBLE PRECISION) AS "Score_CLASS_1", "DT_Output_15"."P_1.0" AS "Proba_CLASS_1", CASE WHEN ("DT_Output_15"."P_1.0" IS NULL OR "DT_Output_15"."P_1.0" > CAST(0.0 AS DOUBLE PRECISION)) THEN ln("DT_Output_15"."P_1.0") ELSE -1.79769313486231e+308 END AS "LogProba_CLASS_1", CAST(NULL AS DOUBLE PRECISION) AS "Score_CLASS_2", "DT_Output_15"."P_2.0" AS "Proba_CLASS_2", CASE WHEN ("DT_Output_15"."P_2.0" IS NULL OR "DT_Output_15"."P_2.0" > CAST(0.0 AS DOUBLE PRECISION)) THEN ln("DT_Output_15"."P_2.0") ELSE -1.79769313486231e+308 END AS "LogProba_CLASS_2" 
FROM "DT_Output_15")
 SELECT "RF_B1"."KEY", "RF_B1"."Score_CLASS_0", "RF_B1"."Proba_CLASS_0", "RF_B1"."LogProba_CLASS_0", "RF_B1"."Score_CLASS_1", "RF_B1"."Proba_CLASS_1", "RF_B1"."LogProba_CLASS_1", "RF_B1"."Score_CLASS_2", "RF_B1"."Proba_CLASS_2", "RF_B1"."LogProba_CLASS_2" 
FROM (SELECT "RF_esu_1"."KEY" AS "KEY", "RF_esu_1"."Score_CLASS_0" AS "Score_CLASS_0", "RF_esu_1"."Proba_CLASS_0" AS "Proba_CLASS_0", "RF_esu_1"."LogProba_CLASS_0" AS "LogProba_CLASS_0", "RF_esu_1"."Score_CLASS_1" AS "Score_CLASS_1", "RF_esu_1"."Proba_CLASS_1" AS "Proba_CLASS_1", "RF_esu_1"."LogProba_CLASS_1" AS "LogProba_CLASS_1", "RF_esu_1"."Score_CLASS_2" AS "Score_CLASS_2", "RF_esu_1"."Proba_CLASS_2" AS "Proba_CLASS_2", "RF_esu_1"."LogProba_CLASS_2" AS "LogProba_CLASS_2" 
FROM (SELECT "RF_Model_10"."KEY" AS "KEY", "RF_Model_10"."Score_CLASS_0" AS "Score_CLASS_0", "RF_Model_10"."Proba_CLASS_0" AS "Proba_CLASS_0", "RF_Model_10"."LogProba_CLASS_0" AS "LogProba_CLASS_0", "RF_Model_10"."Score_CLASS_1" AS "Score_CLASS_1", "RF_Model_10"."Proba_CLASS_1" AS "Proba_CLASS_1", "RF_Model_10"."LogProba_CLASS_1" AS "LogProba_CLASS_1", "RF_Model_10"."Score_CLASS_2" AS "Score_CLASS_2", "RF_Model_10"."Proba_CLASS_2" AS "Proba_CLASS_2", "RF_Model_10"."LogProba_CLASS_2" AS "LogProba_CLASS_2" 
FROM "RF_Model_10" UNION ALL SELECT "RF_Model_11"."KEY" AS "KEY", "RF_Model_11"."Score_CLASS_0" AS "Score_CLASS_0", "RF_Model_11"."Proba_CLASS_0" AS "Proba_CLASS_0", "RF_Model_11"."LogProba_CLASS_0" AS "LogProba_CLASS_0", "RF_Model_11"."Score_CLASS_1" AS "Score_CLASS_1", "RF_Model_11"."Proba_CLASS_1" AS "Proba_CLASS_1", "RF_Model_11"."LogProba_CLASS_1" AS "LogProba_CLASS_1", "RF_Model_11"."Score_CLASS_2" AS "Score_CLASS_2", "RF_Model_11"."Proba_CLASS_2" AS "Proba_CLASS_2", "RF_Model_11"."LogProba_CLASS_2" AS "LogProba_CLASS_2" 
FROM "RF_Model_11" UNION ALL SELECT "RF_Model_12"."KEY" AS "KEY", "RF_Model_12"."Score_CLASS_0" AS "Score_CLASS_0", "RF_Model_12"."Proba_CLASS_0" AS "Proba_CLASS_0", "RF_Model_12"."LogProba_CLASS_0" AS "LogProba_CLASS_0", "RF_Model_12"."Score_CLASS_1" AS "Score_CLASS_1", "RF_Model_12"."Proba_CLASS_1" AS "Proba_CLASS_1", "RF_Model_12"."LogProba_CLASS_1" AS "LogProba_CLASS_1", "RF_Model_12"."Score_CLASS_2" AS "Score_CLASS_2", "RF_Model_12"."Proba_CLASS_2" AS "Proba_CLASS_2", "RF_Model_12"."LogProba_CLASS_2" AS "LogProba_CLASS_2" 
FROM "RF_Model_12" UNION ALL SELECT "RF_Model_13"."KEY" AS "KEY", "RF_Model_13"."Score_CLASS_0" AS "Score_CLASS_0", "RF_Model_13"."Proba_CLASS_0" AS "Proba_CLASS_0", "RF_Model_13"."LogProba_CLASS_0" AS "LogProba_CLASS_0", "RF_Model_13"."Score_CLASS_1" AS "Score_CLASS_1", "RF_Model_13"."Proba_CLASS_1" AS "Proba_CLASS_1", "RF_Model_13"."LogProba_CLASS_1" AS "LogProba_CLASS_1", "RF_Model_13"."Score_CLASS_2" AS "Score_CLASS_2", "RF_Model_13"."Proba_CLASS_2" AS "Proba_CLASS_2", "RF_Model_13"."LogProba_CLASS_2" AS "LogProba_CLASS_2" 
FROM "RF_Model_13" UNION ALL SELECT "RF_Model_14"."KEY" AS "KEY", "RF_Model_14"."Score_CLASS_0" AS "Score_CLASS_0", "RF_Model_14"."Proba_CLASS_0" AS "Proba_CLASS_0", "RF_Model_14"."LogProba_CLASS_0" AS "LogProba_CLASS_0", "RF_Model_14"."Score_CLASS_1" AS "Score_CLASS_1", "RF_Model_14"."Proba_CLASS_1" AS "Proba_CLASS_1", "RF_Model_14"."LogProba_CLASS_1" AS "LogProba_CLASS_1", "RF_Model_14"."Score_CLASS_2" AS "Score_CLASS_2", "RF_Model_14"."Proba_CLASS_2" AS "Proba_CLASS_2", "RF_Model_14"."LogProba_CLASS_2" AS "LogProba_CLASS_2" 
FROM "RF_Model_14" UNION ALL SELECT "RF_Model_15"."KEY" AS "KEY", "RF_Model_15"."Score_CLASS_0" AS "Score_CLASS_0", "RF_Model_15"."Proba_CLASS_0" AS "Proba_CLASS_0", "RF_Model_15"."LogProba_CLASS_0" AS "LogProba_CLASS_0", "RF_Model_15"."Score_CLASS_1" AS "Score_CLASS_1", "RF_Model_15"."Proba_CLASS_1" AS "Proba_CLASS_1", "RF_Model_15"."LogProba_CLASS_1" AS "LogProba_CLASS_1", "RF_Model_15"."Score_CLASS_2" AS "Score_CLASS_2", "RF_Model_15"."Proba_CLASS_2" AS "Proba_CLASS_2", "RF_Model_15"."LogProba_CLASS_2" AS "LogProba_CLASS_2" 
FROM "RF_Model_15") AS "RF_esu_1") AS "RF_B1") AS "U"

-- Code For temporary table tmp_20180602160445_2dk_rf_avg part 1. Create 


CREATE GLOBAL TEMPORARY TABLE tmp_20180602160445_2dk_rf_avg  (
	"KEY" BIGINT, 
	"Score_CLASS_0" DOUBLE PRECISION, 
	"Proba_CLASS_0" DOUBLE PRECISION, 
	"LogProba_CLASS_0" DOUBLE PRECISION, 
	"Score_CLASS_1" DOUBLE PRECISION, 
	"Proba_CLASS_1" DOUBLE PRECISION, 
	"LogProba_CLASS_1" DOUBLE PRECISION, 
	"Score_CLASS_2" DOUBLE PRECISION, 
	"Proba_CLASS_2" DOUBLE PRECISION, 
	"LogProba_CLASS_2" DOUBLE PRECISION
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table tmp_20180602160445_2dk_rf_avg part 2. Populate

INSERT INTO tmp_20180602160445_2dk_rf_avg ("KEY", "Score_CLASS_0", "Proba_CLASS_0", "LogProba_CLASS_0", "Score_CLASS_1", "Proba_CLASS_1", "LogProba_CLASS_1", "Score_CLASS_2", "Proba_CLASS_2", "LogProba_CLASS_2") SELECT "U"."KEY", "U"."Score_CLASS_0", "U"."Proba_CLASS_0", "U"."LogProba_CLASS_0", "U"."Score_CLASS_1", "U"."Proba_CLASS_1", "U"."LogProba_CLASS_1", "U"."Score_CLASS_2", "U"."Proba_CLASS_2", "U"."LogProba_CLASS_2" 
FROM (WITH "RF_Union" AS 
(SELECT "RF_EnsembleUnion"."KEY" AS "KEY", "RF_EnsembleUnion"."Score_CLASS_0" AS "Score_CLASS_0", "RF_EnsembleUnion"."Proba_CLASS_0" AS "Proba_CLASS_0", "RF_EnsembleUnion"."LogProba_CLASS_0" AS "LogProba_CLASS_0", "RF_EnsembleUnion"."Score_CLASS_1" AS "Score_CLASS_1", "RF_EnsembleUnion"."Proba_CLASS_1" AS "Proba_CLASS_1", "RF_EnsembleUnion"."LogProba_CLASS_1" AS "LogProba_CLASS_1", "RF_EnsembleUnion"."Score_CLASS_2" AS "Score_CLASS_2", "RF_EnsembleUnion"."Proba_CLASS_2" AS "Proba_CLASS_2", "RF_EnsembleUnion"."LogProba_CLASS_2" AS "LogProba_CLASS_2" 
FROM (SELECT "RF_B0"."KEY" AS "KEY", "RF_B0"."Score_CLASS_0" AS "Score_CLASS_0", "RF_B0"."Proba_CLASS_0" AS "Proba_CLASS_0", "RF_B0"."LogProba_CLASS_0" AS "LogProba_CLASS_0", "RF_B0"."Score_CLASS_1" AS "Score_CLASS_1", "RF_B0"."Proba_CLASS_1" AS "Proba_CLASS_1", "RF_B0"."LogProba_CLASS_1" AS "LogProba_CLASS_1", "RF_B0"."Score_CLASS_2" AS "Score_CLASS_2", "RF_B0"."Proba_CLASS_2" AS "Proba_CLASS_2", "RF_B0"."LogProba_CLASS_2" AS "LogProba_CLASS_2" 
FROM tmp_20180602160445_ze5_rf_b0 AS "RF_B0" UNION ALL SELECT "RF_B1"."KEY" AS "KEY", "RF_B1"."Score_CLASS_0" AS "Score_CLASS_0", "RF_B1"."Proba_CLASS_0" AS "Proba_CLASS_0", "RF_B1"."LogProba_CLASS_0" AS "LogProba_CLASS_0", "RF_B1"."Score_CLASS_1" AS "Score_CLASS_1", "RF_B1"."Proba_CLASS_1" AS "Proba_CLASS_1", "RF_B1"."LogProba_CLASS_1" AS "LogProba_CLASS_1", "RF_B1"."Score_CLASS_2" AS "Score_CLASS_2", "RF_B1"."Proba_CLASS_2" AS "Proba_CLASS_2", "RF_B1"."LogProba_CLASS_2" AS "LogProba_CLASS_2" 
FROM tmp_20180602160445_s6l_rf_b1 AS "RF_B1") AS "RF_EnsembleUnion")
 SELECT "RF_avg"."KEY", "RF_avg"."Score_CLASS_0", "RF_avg"."Proba_CLASS_0", "RF_avg"."LogProba_CLASS_0", "RF_avg"."Score_CLASS_1", "RF_avg"."Proba_CLASS_1", "RF_avg"."LogProba_CLASS_1", "RF_avg"."Score_CLASS_2", "RF_avg"."Proba_CLASS_2", "RF_avg"."LogProba_CLASS_2" 
FROM (SELECT "T"."KEY" AS "KEY", CAST("T"."Score_CLASS_0" AS DOUBLE PRECISION) AS "Score_CLASS_0", CAST("T"."Proba_CLASS_0" AS DOUBLE PRECISION) AS "Proba_CLASS_0", CAST("T"."LogProba_CLASS_0" AS DOUBLE PRECISION) AS "LogProba_CLASS_0", CAST("T"."Score_CLASS_1" AS DOUBLE PRECISION) AS "Score_CLASS_1", CAST("T"."Proba_CLASS_1" AS DOUBLE PRECISION) AS "Proba_CLASS_1", CAST("T"."LogProba_CLASS_1" AS DOUBLE PRECISION) AS "LogProba_CLASS_1", CAST("T"."Score_CLASS_2" AS DOUBLE PRECISION) AS "Score_CLASS_2", CAST("T"."Proba_CLASS_2" AS DOUBLE PRECISION) AS "Proba_CLASS_2", CAST("T"."LogProba_CLASS_2" AS DOUBLE PRECISION) AS "LogProba_CLASS_2" 
FROM (SELECT "RF_Union"."KEY" AS "KEY", avg(CAST("RF_Union"."Score_CLASS_0" AS DOUBLE PRECISION)) AS "Score_CLASS_0", avg(CAST("RF_Union"."Proba_CLASS_0" AS DOUBLE PRECISION)) AS "Proba_CLASS_0", CAST(NULL AS DOUBLE PRECISION) AS "LogProba_CLASS_0", avg(CAST("RF_Union"."Score_CLASS_1" AS DOUBLE PRECISION)) AS "Score_CLASS_1", avg(CAST("RF_Union"."Proba_CLASS_1" AS DOUBLE PRECISION)) AS "Proba_CLASS_1", CAST(NULL AS DOUBLE PRECISION) AS "LogProba_CLASS_1", avg(CAST("RF_Union"."Score_CLASS_2" AS DOUBLE PRECISION)) AS "Score_CLASS_2", avg(CAST("RF_Union"."Proba_CLASS_2" AS DOUBLE PRECISION)) AS "Proba_CLASS_2", CAST(NULL AS DOUBLE PRECISION) AS "LogProba_CLASS_2" 
FROM "RF_Union" GROUP BY "RF_Union"."KEY") AS "T") AS "RF_avg") AS "U"

-- Model deployment code

WITH orig_cte AS 
(SELECT "RF_avg"."KEY" AS "KEY", "RF_avg"."Score_CLASS_0" AS "Score_CLASS_0", "RF_avg"."Score_CLASS_1" AS "Score_CLASS_1", "RF_avg"."Score_CLASS_2" AS "Score_CLASS_2", "RF_avg"."Proba_CLASS_0" AS "Proba_CLASS_0", "RF_avg"."Proba_CLASS_1" AS "Proba_CLASS_1", "RF_avg"."Proba_CLASS_2" AS "Proba_CLASS_2", "RF_avg"."LogProba_CLASS_0" AS "LogProba_CLASS_0", "RF_avg"."LogProba_CLASS_1" AS "LogProba_CLASS_1", "RF_avg"."LogProba_CLASS_2" AS "LogProba_CLASS_2", CAST(NULL AS BIGINT) AS "Decision", CAST(NULL AS DOUBLE PRECISION) AS "DecisionProba" 
FROM tmp_20180602160445_2dk_rf_avg AS "RF_avg"), 
score_class_union AS 
(SELECT scu."KEY_u" AS "KEY_u", scu."class" AS "class", scu."LogProba" AS "LogProba", scu."Proba" AS "Proba", scu."Score" AS "Score" 
FROM (SELECT orig_cte."KEY" AS "KEY_u", 'CLASS_0' AS "class", orig_cte."LogProba_CLASS_0" AS "LogProba", orig_cte."Proba_CLASS_0" AS "Proba", orig_cte."Score_CLASS_0" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 'CLASS_1' AS "class", orig_cte."LogProba_CLASS_1" AS "LogProba", orig_cte."Proba_CLASS_1" AS "Proba", orig_cte."Score_CLASS_1" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 'CLASS_2' AS "class", orig_cte."LogProba_CLASS_2" AS "LogProba", orig_cte."Proba_CLASS_2" AS "Proba", orig_cte."Score_CLASS_2" AS "Score" 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte."KEY" AS "KEY", orig_cte."Score_CLASS_0" AS "Score_CLASS_0", orig_cte."Score_CLASS_1" AS "Score_CLASS_1", orig_cte."Score_CLASS_2" AS "Score_CLASS_2", orig_cte."Proba_CLASS_0" AS "Proba_CLASS_0", orig_cte."Proba_CLASS_1" AS "Proba_CLASS_1", orig_cte."Proba_CLASS_2" AS "Proba_CLASS_2", orig_cte."LogProba_CLASS_0" AS "LogProba_CLASS_0", orig_cte."LogProba_CLASS_1" AS "LogProba_CLASS_1", orig_cte."LogProba_CLASS_2" AS "LogProba_CLASS_2", orig_cte."Decision" AS "Decision", orig_cte."DecisionProba" AS "DecisionProba", max_select."KEY_m" AS "KEY_m", max_select."max_Proba" AS "max_Proba" 
FROM orig_cte LEFT OUTER JOIN (SELECT score_class_union."KEY_u" AS "KEY_m", max(score_class_union."Proba") AS "max_Proba" 
FROM score_class_union GROUP BY score_class_union."KEY_u") AS max_select ON orig_cte."KEY" = max_select."KEY_m"), 
union_with_max AS 
(SELECT score_class_union."KEY_u" AS "KEY_u", score_class_union."class" AS "class", score_class_union."LogProba" AS "LogProba", score_class_union."Proba" AS "Proba", score_class_union."Score" AS "Score", score_max."KEY" AS "KEY", score_max."Score_CLASS_0" AS "Score_CLASS_0", score_max."Score_CLASS_1" AS "Score_CLASS_1", score_max."Score_CLASS_2" AS "Score_CLASS_2", score_max."Proba_CLASS_0" AS "Proba_CLASS_0", score_max."Proba_CLASS_1" AS "Proba_CLASS_1", score_max."Proba_CLASS_2" AS "Proba_CLASS_2", score_max."LogProba_CLASS_0" AS "LogProba_CLASS_0", score_max."LogProba_CLASS_1" AS "LogProba_CLASS_1", score_max."LogProba_CLASS_2" AS "LogProba_CLASS_2", score_max."Decision" AS "Decision", score_max."DecisionProba" AS "DecisionProba", score_max."KEY_m" AS "KEY_m", score_max."max_Proba" AS "max_Proba" 
FROM score_class_union LEFT OUTER JOIN score_max ON score_class_union."KEY_u" = score_max."KEY"), 
arg_max_cte AS 
(SELECT score_max."KEY" AS "KEY", score_max."Score_CLASS_0" AS "Score_CLASS_0", score_max."Score_CLASS_1" AS "Score_CLASS_1", score_max."Score_CLASS_2" AS "Score_CLASS_2", score_max."Proba_CLASS_0" AS "Proba_CLASS_0", score_max."Proba_CLASS_1" AS "Proba_CLASS_1", score_max."Proba_CLASS_2" AS "Proba_CLASS_2", score_max."LogProba_CLASS_0" AS "LogProba_CLASS_0", score_max."LogProba_CLASS_1" AS "LogProba_CLASS_1", score_max."LogProba_CLASS_2" AS "LogProba_CLASS_2", score_max."Decision" AS "Decision", score_max."DecisionProba" AS "DecisionProba", score_max."KEY_m" AS "KEY_m", score_max."max_Proba" AS "max_Proba", "arg_max_t_Proba"."KEY_Proba" AS "KEY_Proba", "arg_max_t_Proba"."arg_max_Proba" AS "arg_max_Proba" 
FROM score_max LEFT OUTER JOIN (SELECT union_with_max."KEY" AS "KEY_Proba", min(union_with_max."class") AS "arg_max_Proba" 
FROM union_with_max 
WHERE union_with_max."Proba" >= union_with_max."max_Proba" GROUP BY union_with_max."KEY") AS "arg_max_t_Proba" ON score_max."KEY" = "arg_max_t_Proba"."KEY_Proba")
 SELECT arg_max_cte."KEY" AS "KEY", arg_max_cte."Score_CLASS_0" AS "Score_CLASS_0", arg_max_cte."Score_CLASS_1" AS "Score_CLASS_1", arg_max_cte."Score_CLASS_2" AS "Score_CLASS_2", arg_max_cte."Proba_CLASS_0" AS "Proba_CLASS_0", arg_max_cte."Proba_CLASS_1" AS "Proba_CLASS_1", arg_max_cte."Proba_CLASS_2" AS "Proba_CLASS_2", CASE WHEN (arg_max_cte."Proba_CLASS_0" IS NULL OR arg_max_cte."Proba_CLASS_0" > CAST(0.0 AS DOUBLE PRECISION)) THEN ln(arg_max_cte."Proba_CLASS_0") ELSE -1.79769313486231e+308 END AS "LogProba_CLASS_0", CASE WHEN (arg_max_cte."Proba_CLASS_1" IS NULL OR arg_max_cte."Proba_CLASS_1" > CAST(0.0 AS DOUBLE PRECISION)) THEN ln(arg_max_cte."Proba_CLASS_1") ELSE -1.79769313486231e+308 END AS "LogProba_CLASS_1", CASE WHEN (arg_max_cte."Proba_CLASS_2" IS NULL OR arg_max_cte."Proba_CLASS_2" > CAST(0.0 AS DOUBLE PRECISION)) THEN ln(arg_max_cte."Proba_CLASS_2") ELSE -1.79769313486231e+308 END AS "LogProba_CLASS_2", arg_max_cte."arg_max_Proba" AS "Decision", arg_max_cte."max_Proba" AS "DecisionProba" 
FROM arg_max_cte