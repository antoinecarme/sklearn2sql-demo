-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2018

-- Model : AdaBoostRegressor_Pipeline
-- Dataset : RandomReg_100
-- Database : mssql


-- This SQL code can contain one or more statements, to be executed in the order they appear in this file.



-- Code For temporary table ##TMP_20180602144734_V6T_ADS_imp_1_OUT part 1. Create 


CREATE TABLE ##TMP_20180602144734_V6T_ADS_imp_1_OUT (
	[KEY] BIGINT NULL, 
	impter_2 FLOAT(53) NULL, 
	impter_3 FLOAT(53) NULL, 
	impter_4 FLOAT(53) NULL, 
	impter_5 FLOAT(53) NULL, 
	impter_6 FLOAT(53) NULL, 
	impter_7 FLOAT(53) NULL, 
	impter_8 FLOAT(53) NULL, 
	impter_9 FLOAT(53) NULL, 
	impter_10 FLOAT(53) NULL, 
	impter_11 FLOAT(53) NULL, 
	impter_12 FLOAT(53) NULL, 
	impter_13 FLOAT(53) NULL, 
	impter_14 FLOAT(53) NULL, 
	impter_15 FLOAT(53) NULL, 
	impter_16 FLOAT(53) NULL, 
	impter_17 FLOAT(53) NULL, 
	impter_18 FLOAT(53) NULL, 
	impter_19 FLOAT(53) NULL, 
	impter_20 FLOAT(53) NULL, 
	impter_21 FLOAT(53) NULL, 
	impter_22 FLOAT(53) NULL, 
	impter_23 FLOAT(53) NULL, 
	impter_24 FLOAT(53) NULL, 
	impter_25 FLOAT(53) NULL, 
	impter_26 FLOAT(53) NULL, 
	impter_27 FLOAT(53) NULL, 
	impter_28 FLOAT(53) NULL, 
	impter_29 FLOAT(53) NULL, 
	impter_30 FLOAT(53) NULL, 
	impter_31 FLOAT(53) NULL, 
	impter_32 FLOAT(53) NULL, 
	impter_33 FLOAT(53) NULL, 
	impter_34 FLOAT(53) NULL, 
	impter_35 FLOAT(53) NULL, 
	impter_36 FLOAT(53) NULL, 
	impter_37 FLOAT(53) NULL, 
	impter_38 FLOAT(53) NULL, 
	impter_39 FLOAT(53) NULL, 
	impter_40 FLOAT(53) NULL, 
	impter_41 FLOAT(53) NULL, 
	impter_42 FLOAT(53) NULL, 
	impter_43 FLOAT(53) NULL, 
	impter_44 FLOAT(53) NULL, 
	impter_45 FLOAT(53) NULL, 
	impter_46 FLOAT(53) NULL, 
	impter_47 FLOAT(53) NULL, 
	impter_48 FLOAT(53) NULL, 
	impter_49 FLOAT(53) NULL, 
	impter_50 FLOAT(53) NULL, 
	impter_51 FLOAT(53) NULL, 
	impter_52 FLOAT(53) NULL, 
	impter_53 FLOAT(53) NULL, 
	impter_54 FLOAT(53) NULL, 
	impter_55 FLOAT(53) NULL, 
	impter_56 FLOAT(53) NULL, 
	impter_57 FLOAT(53) NULL, 
	impter_58 FLOAT(53) NULL, 
	impter_59 FLOAT(53) NULL, 
	impter_60 FLOAT(53) NULL, 
	impter_61 FLOAT(53) NULL, 
	impter_62 FLOAT(53) NULL, 
	impter_63 FLOAT(53) NULL, 
	impter_64 FLOAT(53) NULL, 
	impter_65 FLOAT(53) NULL, 
	impter_66 FLOAT(53) NULL, 
	impter_67 FLOAT(53) NULL, 
	impter_68 FLOAT(53) NULL, 
	impter_69 FLOAT(53) NULL, 
	impter_70 FLOAT(53) NULL, 
	impter_71 FLOAT(53) NULL, 
	impter_72 FLOAT(53) NULL, 
	impter_73 FLOAT(53) NULL, 
	impter_74 FLOAT(53) NULL, 
	impter_75 FLOAT(53) NULL, 
	impter_76 FLOAT(53) NULL, 
	impter_77 FLOAT(53) NULL, 
	impter_78 FLOAT(53) NULL, 
	impter_79 FLOAT(53) NULL, 
	impter_80 FLOAT(53) NULL, 
	impter_81 FLOAT(53) NULL, 
	impter_82 FLOAT(53) NULL, 
	impter_83 FLOAT(53) NULL, 
	impter_84 FLOAT(53) NULL, 
	impter_85 FLOAT(53) NULL, 
	impter_86 FLOAT(53) NULL, 
	impter_87 FLOAT(53) NULL, 
	impter_88 FLOAT(53) NULL, 
	impter_89 FLOAT(53) NULL, 
	impter_90 FLOAT(53) NULL, 
	impter_91 FLOAT(53) NULL, 
	impter_92 FLOAT(53) NULL, 
	impter_93 FLOAT(53) NULL, 
	impter_94 FLOAT(53) NULL, 
	impter_95 FLOAT(53) NULL, 
	impter_96 FLOAT(53) NULL, 
	impter_97 FLOAT(53) NULL, 
	impter_98 FLOAT(53) NULL, 
	impter_99 FLOAT(53) NULL, 
	impter_100 FLOAT(53) NULL, 
	impter_101 FLOAT(53) NULL
)



-- Code For temporary table ##TMP_20180602144734_V6T_ADS_imp_1_OUT part 2. Populate

INSERT INTO ##TMP_20180602144734_V6T_ADS_imp_1_OUT ([KEY], impter_2, impter_3, impter_4, impter_5, impter_6, impter_7, impter_8, impter_9, impter_10, impter_11, impter_12, impter_13, impter_14, impter_15, impter_16, impter_17, impter_18, impter_19, impter_20, impter_21, impter_22, impter_23, impter_24, impter_25, impter_26, impter_27, impter_28, impter_29, impter_30, impter_31, impter_32, impter_33, impter_34, impter_35, impter_36, impter_37, impter_38, impter_39, impter_40, impter_41, impter_42, impter_43, impter_44, impter_45, impter_46, impter_47, impter_48, impter_49, impter_50, impter_51, impter_52, impter_53, impter_54, impter_55, impter_56, impter_57, impter_58, impter_59, impter_60, impter_61, impter_62, impter_63, impter_64, impter_65, impter_66, impter_67, impter_68, impter_69, impter_70, impter_71, impter_72, impter_73, impter_74, impter_75, impter_76, impter_77, impter_78, impter_79, impter_80, impter_81, impter_82, impter_83, impter_84, impter_85, impter_86, impter_87, impter_88, impter_89, impter_90, impter_91, impter_92, impter_93, impter_94, impter_95, impter_96, impter_97, impter_98, impter_99, impter_100, impter_101) SELECT [ADS_imp_1_OUT].[KEY], [ADS_imp_1_OUT].impter_2, [ADS_imp_1_OUT].impter_3, [ADS_imp_1_OUT].impter_4, [ADS_imp_1_OUT].impter_5, [ADS_imp_1_OUT].impter_6, [ADS_imp_1_OUT].impter_7, [ADS_imp_1_OUT].impter_8, [ADS_imp_1_OUT].impter_9, [ADS_imp_1_OUT].impter_10, [ADS_imp_1_OUT].impter_11, [ADS_imp_1_OUT].impter_12, [ADS_imp_1_OUT].impter_13, [ADS_imp_1_OUT].impter_14, [ADS_imp_1_OUT].impter_15, [ADS_imp_1_OUT].impter_16, [ADS_imp_1_OUT].impter_17, [ADS_imp_1_OUT].impter_18, [ADS_imp_1_OUT].impter_19, [ADS_imp_1_OUT].impter_20, [ADS_imp_1_OUT].impter_21, [ADS_imp_1_OUT].impter_22, [ADS_imp_1_OUT].impter_23, [ADS_imp_1_OUT].impter_24, [ADS_imp_1_OUT].impter_25, [ADS_imp_1_OUT].impter_26, [ADS_imp_1_OUT].impter_27, [ADS_imp_1_OUT].impter_28, [ADS_imp_1_OUT].impter_29, [ADS_imp_1_OUT].impter_30, [ADS_imp_1_OUT].impter_31, [ADS_imp_1_OUT].impter_32, [ADS_imp_1_OUT].impter_33, [ADS_imp_1_OUT].impter_34, [ADS_imp_1_OUT].impter_35, [ADS_imp_1_OUT].impter_36, [ADS_imp_1_OUT].impter_37, [ADS_imp_1_OUT].impter_38, [ADS_imp_1_OUT].impter_39, [ADS_imp_1_OUT].impter_40, [ADS_imp_1_OUT].impter_41, [ADS_imp_1_OUT].impter_42, [ADS_imp_1_OUT].impter_43, [ADS_imp_1_OUT].impter_44, [ADS_imp_1_OUT].impter_45, [ADS_imp_1_OUT].impter_46, [ADS_imp_1_OUT].impter_47, [ADS_imp_1_OUT].impter_48, [ADS_imp_1_OUT].impter_49, [ADS_imp_1_OUT].impter_50, [ADS_imp_1_OUT].impter_51, [ADS_imp_1_OUT].impter_52, [ADS_imp_1_OUT].impter_53, [ADS_imp_1_OUT].impter_54, [ADS_imp_1_OUT].impter_55, [ADS_imp_1_OUT].impter_56, [ADS_imp_1_OUT].impter_57, [ADS_imp_1_OUT].impter_58, [ADS_imp_1_OUT].impter_59, [ADS_imp_1_OUT].impter_60, [ADS_imp_1_OUT].impter_61, [ADS_imp_1_OUT].impter_62, [ADS_imp_1_OUT].impter_63, [ADS_imp_1_OUT].impter_64, [ADS_imp_1_OUT].impter_65, [ADS_imp_1_OUT].impter_66, [ADS_imp_1_OUT].impter_67, [ADS_imp_1_OUT].impter_68, [ADS_imp_1_OUT].impter_69, [ADS_imp_1_OUT].impter_70, [ADS_imp_1_OUT].impter_71, [ADS_imp_1_OUT].impter_72, [ADS_imp_1_OUT].impter_73, [ADS_imp_1_OUT].impter_74, [ADS_imp_1_OUT].impter_75, [ADS_imp_1_OUT].impter_76, [ADS_imp_1_OUT].impter_77, [ADS_imp_1_OUT].impter_78, [ADS_imp_1_OUT].impter_79, [ADS_imp_1_OUT].impter_80, [ADS_imp_1_OUT].impter_81, [ADS_imp_1_OUT].impter_82, [ADS_imp_1_OUT].impter_83, [ADS_imp_1_OUT].impter_84, [ADS_imp_1_OUT].impter_85, [ADS_imp_1_OUT].impter_86, [ADS_imp_1_OUT].impter_87, [ADS_imp_1_OUT].impter_88, [ADS_imp_1_OUT].impter_89, [ADS_imp_1_OUT].impter_90, [ADS_imp_1_OUT].impter_91, [ADS_imp_1_OUT].impter_92, [ADS_imp_1_OUT].impter_93, [ADS_imp_1_OUT].impter_94, [ADS_imp_1_OUT].impter_95, [ADS_imp_1_OUT].impter_96, [ADS_imp_1_OUT].impter_97, [ADS_imp_1_OUT].impter_98, [ADS_imp_1_OUT].impter_99, [ADS_imp_1_OUT].impter_100, [ADS_imp_1_OUT].impter_101 
FROM (SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_0] IS NULL) THEN -0.08128085300192169 ELSE [ADS].[Feature_0] END AS impter_2, CASE WHEN ([ADS].[Feature_1] IS NULL) THEN -0.13436805172534722 ELSE [ADS].[Feature_1] END AS impter_3, CASE WHEN ([ADS].[Feature_2] IS NULL) THEN -0.1171335439265335 ELSE [ADS].[Feature_2] END AS impter_4, CASE WHEN ([ADS].[Feature_3] IS NULL) THEN 0.10314525691526008 ELSE [ADS].[Feature_3] END AS impter_5, CASE WHEN ([ADS].[Feature_4] IS NULL) THEN 0.04859877061601238 ELSE [ADS].[Feature_4] END AS impter_6, CASE WHEN ([ADS].[Feature_5] IS NULL) THEN 0.09985694677353979 ELSE [ADS].[Feature_5] END AS impter_7, CASE WHEN ([ADS].[Feature_6] IS NULL) THEN 0.0672774556565916 ELSE [ADS].[Feature_6] END AS impter_8, CASE WHEN ([ADS].[Feature_7] IS NULL) THEN 0.1622384092846963 ELSE [ADS].[Feature_7] END AS impter_9, CASE WHEN ([ADS].[Feature_8] IS NULL) THEN 0.04069362852608218 ELSE [ADS].[Feature_8] END AS impter_10, CASE WHEN ([ADS].[Feature_9] IS NULL) THEN 0.051659905088603277 ELSE [ADS].[Feature_9] END AS impter_11, CASE WHEN ([ADS].[Feature_10] IS NULL) THEN 0.10179067839269526 ELSE [ADS].[Feature_10] END AS impter_12, CASE WHEN ([ADS].[Feature_11] IS NULL) THEN -0.1759747362698276 ELSE [ADS].[Feature_11] END AS impter_13, CASE WHEN ([ADS].[Feature_12] IS NULL) THEN -0.09675138494095058 ELSE [ADS].[Feature_12] END AS impter_14, CASE WHEN ([ADS].[Feature_13] IS NULL) THEN -0.04608656912634662 ELSE [ADS].[Feature_13] END AS impter_15, CASE WHEN ([ADS].[Feature_14] IS NULL) THEN 0.10165852286085655 ELSE [ADS].[Feature_14] END AS impter_16, CASE WHEN ([ADS].[Feature_15] IS NULL) THEN 0.11179903010835046 ELSE [ADS].[Feature_15] END AS impter_17, CASE WHEN ([ADS].[Feature_16] IS NULL) THEN -0.006110233359380335 ELSE [ADS].[Feature_16] END AS impter_18, CASE WHEN ([ADS].[Feature_17] IS NULL) THEN 0.07144704068910084 ELSE [ADS].[Feature_17] END AS impter_19, CASE WHEN ([ADS].[Feature_18] IS NULL) THEN -0.08808458650118434 ELSE [ADS].[Feature_18] END AS impter_20, CASE WHEN ([ADS].[Feature_19] IS NULL) THEN -0.07182799000884085 ELSE [ADS].[Feature_19] END AS impter_21, CASE WHEN ([ADS].[Feature_20] IS NULL) THEN -0.07230200847310368 ELSE [ADS].[Feature_20] END AS impter_22, CASE WHEN ([ADS].[Feature_21] IS NULL) THEN 0.02896693079944173 ELSE [ADS].[Feature_21] END AS impter_23, CASE WHEN ([ADS].[Feature_22] IS NULL) THEN 0.21388217632997558 ELSE [ADS].[Feature_22] END AS impter_24, CASE WHEN ([ADS].[Feature_23] IS NULL) THEN -0.06669297919409706 ELSE [ADS].[Feature_23] END AS impter_25, CASE WHEN ([ADS].[Feature_24] IS NULL) THEN 0.046152348549980085 ELSE [ADS].[Feature_24] END AS impter_26, CASE WHEN ([ADS].[Feature_25] IS NULL) THEN 0.03249513222766133 ELSE [ADS].[Feature_25] END AS impter_27, CASE WHEN ([ADS].[Feature_26] IS NULL) THEN 0.05224239330612866 ELSE [ADS].[Feature_26] END AS impter_28, CASE WHEN ([ADS].[Feature_27] IS NULL) THEN 0.018745871966632584 ELSE [ADS].[Feature_27] END AS impter_29, CASE WHEN ([ADS].[Feature_28] IS NULL) THEN 0.015553079229790346 ELSE [ADS].[Feature_28] END AS impter_30, CASE WHEN ([ADS].[Feature_29] IS NULL) THEN 0.2258153729902979 ELSE [ADS].[Feature_29] END AS impter_31, CASE WHEN ([ADS].[Feature_30] IS NULL) THEN -0.16989857778838335 ELSE [ADS].[Feature_30] END AS impter_32, CASE WHEN ([ADS].[Feature_31] IS NULL) THEN 0.036044309156992346 ELSE [ADS].[Feature_31] END AS impter_33, CASE WHEN ([ADS].[Feature_32] IS NULL) THEN -0.17199324162640067 ELSE [ADS].[Feature_32] END AS impter_34, CASE WHEN ([ADS].[Feature_33] IS NULL) THEN 0.13781418887864322 ELSE [ADS].[Feature_33] END AS impter_35, CASE WHEN ([ADS].[Feature_34] IS NULL) THEN -0.002438210964217244 ELSE [ADS].[Feature_34] END AS impter_36, CASE WHEN ([ADS].[Feature_35] IS NULL) THEN 0.060833749131451356 ELSE [ADS].[Feature_35] END AS impter_37, CASE WHEN ([ADS].[Feature_36] IS NULL) THEN -0.18905998689974024 ELSE [ADS].[Feature_36] END AS impter_38, CASE WHEN ([ADS].[Feature_37] IS NULL) THEN -0.09635219278465344 ELSE [ADS].[Feature_37] END AS impter_39, CASE WHEN ([ADS].[Feature_38] IS NULL) THEN -0.10160667507355636 ELSE [ADS].[Feature_38] END AS impter_40, CASE WHEN ([ADS].[Feature_39] IS NULL) THEN 0.06475250541578681 ELSE [ADS].[Feature_39] END AS impter_41, CASE WHEN ([ADS].[Feature_40] IS NULL) THEN -0.30264305036051603 ELSE [ADS].[Feature_40] END AS impter_42, CASE WHEN ([ADS].[Feature_41] IS NULL) THEN -0.13264155681878692 ELSE [ADS].[Feature_41] END AS impter_43, CASE WHEN ([ADS].[Feature_42] IS NULL) THEN -0.1334054780733323 ELSE [ADS].[Feature_42] END AS impter_44, CASE WHEN ([ADS].[Feature_43] IS NULL) THEN -0.0011436009702802522 ELSE [ADS].[Feature_43] END AS impter_45, CASE WHEN ([ADS].[Feature_44] IS NULL) THEN -0.05335157908923337 ELSE [ADS].[Feature_44] END AS impter_46, CASE WHEN ([ADS].[Feature_45] IS NULL) THEN 0.01714537002687063 ELSE [ADS].[Feature_45] END AS impter_47, CASE WHEN ([ADS].[Feature_46] IS NULL) THEN -0.059059449572612485 ELSE [ADS].[Feature_46] END AS impter_48, CASE WHEN ([ADS].[Feature_47] IS NULL) THEN -0.09528879968183994 ELSE [ADS].[Feature_47] END AS impter_49, CASE WHEN ([ADS].[Feature_48] IS NULL) THEN -0.15781363463365924 ELSE [ADS].[Feature_48] END AS impter_50, CASE WHEN ([ADS].[Feature_49] IS NULL) THEN -0.23794433392453432 ELSE [ADS].[Feature_49] END AS impter_51, CASE WHEN ([ADS].[Feature_50] IS NULL) THEN 0.13863850693032237 ELSE [ADS].[Feature_50] END AS impter_52, CASE WHEN ([ADS].[Feature_51] IS NULL) THEN -0.01699621991492915 ELSE [ADS].[Feature_51] END AS impter_53, CASE WHEN ([ADS].[Feature_52] IS NULL) THEN 0.19701490003754304 ELSE [ADS].[Feature_52] END AS impter_54, CASE WHEN ([ADS].[Feature_53] IS NULL) THEN 0.05162990473238551 ELSE [ADS].[Feature_53] END AS impter_55, CASE WHEN ([ADS].[Feature_54] IS NULL) THEN -0.13453002098662553 ELSE [ADS].[Feature_54] END AS impter_56, CASE WHEN ([ADS].[Feature_55] IS NULL) THEN 0.14789370104559646 ELSE [ADS].[Feature_55] END AS impter_57, CASE WHEN ([ADS].[Feature_56] IS NULL) THEN -0.013142759438358454 ELSE [ADS].[Feature_56] END AS impter_58, CASE WHEN ([ADS].[Feature_57] IS NULL) THEN -0.09299162994657897 ELSE [ADS].[Feature_57] END AS impter_59, CASE WHEN ([ADS].[Feature_58] IS NULL) THEN -0.24689492768975088 ELSE [ADS].[Feature_58] END AS impter_60, CASE WHEN ([ADS].[Feature_59] IS NULL) THEN 0.13499727108287438 ELSE [ADS].[Feature_59] END AS impter_61, CASE WHEN ([ADS].[Feature_60] IS NULL) THEN 0.0025544005507731047 ELSE [ADS].[Feature_60] END AS impter_62, CASE WHEN ([ADS].[Feature_61] IS NULL) THEN 0.12527368663465327 ELSE [ADS].[Feature_61] END AS impter_63, CASE WHEN ([ADS].[Feature_62] IS NULL) THEN -0.03739962296055886 ELSE [ADS].[Feature_62] END AS impter_64, CASE WHEN ([ADS].[Feature_63] IS NULL) THEN -0.02998869580177853 ELSE [ADS].[Feature_63] END AS impter_65, CASE WHEN ([ADS].[Feature_64] IS NULL) THEN -0.04286088516871345 ELSE [ADS].[Feature_64] END AS impter_66, CASE WHEN ([ADS].[Feature_65] IS NULL) THEN -0.1438347006651433 ELSE [ADS].[Feature_65] END AS impter_67, CASE WHEN ([ADS].[Feature_66] IS NULL) THEN -0.05269793910889183 ELSE [ADS].[Feature_66] END AS impter_68, CASE WHEN ([ADS].[Feature_67] IS NULL) THEN 0.029267940271277926 ELSE [ADS].[Feature_67] END AS impter_69, CASE WHEN ([ADS].[Feature_68] IS NULL) THEN 0.10431080888322372 ELSE [ADS].[Feature_68] END AS impter_70, CASE WHEN ([ADS].[Feature_69] IS NULL) THEN -0.09619687433047125 ELSE [ADS].[Feature_69] END AS impter_71, CASE WHEN ([ADS].[Feature_70] IS NULL) THEN 0.0067333192983315745 ELSE [ADS].[Feature_70] END AS impter_72, CASE WHEN ([ADS].[Feature_71] IS NULL) THEN 0.03289665935367682 ELSE [ADS].[Feature_71] END AS impter_73, CASE WHEN ([ADS].[Feature_72] IS NULL) THEN 0.08064277275460055 ELSE [ADS].[Feature_72] END AS impter_74, CASE WHEN ([ADS].[Feature_73] IS NULL) THEN -0.10603556755491854 ELSE [ADS].[Feature_73] END AS impter_75, CASE WHEN ([ADS].[Feature_74] IS NULL) THEN 0.09489100148295918 ELSE [ADS].[Feature_74] END AS impter_76, CASE WHEN ([ADS].[Feature_75] IS NULL) THEN -0.19664887110008689 ELSE [ADS].[Feature_75] END AS impter_77, CASE WHEN ([ADS].[Feature_76] IS NULL) THEN 0.11652643514949582 ELSE [ADS].[Feature_76] END AS impter_78, CASE WHEN ([ADS].[Feature_77] IS NULL) THEN 0.19340218348071325 ELSE [ADS].[Feature_77] END AS impter_79, CASE WHEN ([ADS].[Feature_78] IS NULL) THEN 0.11209709087907249 ELSE [ADS].[Feature_78] END AS impter_80, CASE WHEN ([ADS].[Feature_79] IS NULL) THEN 0.10709013621222807 ELSE [ADS].[Feature_79] END AS impter_81, CASE WHEN ([ADS].[Feature_80] IS NULL) THEN -0.01033042920922311 ELSE [ADS].[Feature_80] END AS impter_82, CASE WHEN ([ADS].[Feature_81] IS NULL) THEN 0.11026552104356717 ELSE [ADS].[Feature_81] END AS impter_83, CASE WHEN ([ADS].[Feature_82] IS NULL) THEN 0.01191634589453312 ELSE [ADS].[Feature_82] END AS impter_84, CASE WHEN ([ADS].[Feature_83] IS NULL) THEN 0.013369825695028714 ELSE [ADS].[Feature_83] END AS impter_85, CASE WHEN ([ADS].[Feature_84] IS NULL) THEN -0.1500512000702785 ELSE [ADS].[Feature_84] END AS impter_86, CASE WHEN ([ADS].[Feature_85] IS NULL) THEN -0.09022177579448487 ELSE [ADS].[Feature_85] END AS impter_87, CASE WHEN ([ADS].[Feature_86] IS NULL) THEN -0.16029625657228264 ELSE [ADS].[Feature_86] END AS impter_88, CASE WHEN ([ADS].[Feature_87] IS NULL) THEN -0.10127017293489289 ELSE [ADS].[Feature_87] END AS impter_89, CASE WHEN ([ADS].[Feature_88] IS NULL) THEN 0.3323543006292627 ELSE [ADS].[Feature_88] END AS impter_90, CASE WHEN ([ADS].[Feature_89] IS NULL) THEN 0.051731173060791114 ELSE [ADS].[Feature_89] END AS impter_91, CASE WHEN ([ADS].[Feature_90] IS NULL) THEN 0.1078879212202887 ELSE [ADS].[Feature_90] END AS impter_92, CASE WHEN ([ADS].[Feature_91] IS NULL) THEN 0.21454931874740585 ELSE [ADS].[Feature_91] END AS impter_93, CASE WHEN ([ADS].[Feature_92] IS NULL) THEN -0.16317337769942666 ELSE [ADS].[Feature_92] END AS impter_94, CASE WHEN ([ADS].[Feature_93] IS NULL) THEN -0.2242384076879583 ELSE [ADS].[Feature_93] END AS impter_95, CASE WHEN ([ADS].[Feature_94] IS NULL) THEN -0.27695847565296017 ELSE [ADS].[Feature_94] END AS impter_96, CASE WHEN ([ADS].[Feature_95] IS NULL) THEN 0.037863552135044866 ELSE [ADS].[Feature_95] END AS impter_97, CASE WHEN ([ADS].[Feature_96] IS NULL) THEN -0.02758852803141265 ELSE [ADS].[Feature_96] END AS impter_98, CASE WHEN ([ADS].[Feature_97] IS NULL) THEN 0.1052877881031243 ELSE [ADS].[Feature_97] END AS impter_99, CASE WHEN ([ADS].[Feature_98] IS NULL) THEN 0.06640703380221318 ELSE [ADS].[Feature_98] END AS impter_100, CASE WHEN ([ADS].[Feature_99] IS NULL) THEN 0.06569930995842384 ELSE [ADS].[Feature_99] END AS impter_101 
FROM [RandomReg_100] AS [ADS]) AS [ADS_imp_1_OUT]

-- Code For temporary table ##TMP_20180602144734_R86_ADS_sca_2_OUT part 1. Create 


CREATE TABLE ##TMP_20180602144734_R86_ADS_sca_2_OUT (
	[KEY] BIGINT NULL, 
	scaler_2 FLOAT NULL, 
	scaler_3 FLOAT NULL, 
	scaler_4 FLOAT NULL, 
	scaler_5 FLOAT NULL, 
	scaler_6 FLOAT NULL, 
	scaler_7 FLOAT NULL, 
	scaler_8 FLOAT NULL, 
	scaler_9 FLOAT NULL, 
	scaler_10 FLOAT NULL, 
	scaler_11 FLOAT NULL, 
	scaler_12 FLOAT NULL, 
	scaler_13 FLOAT NULL, 
	scaler_14 FLOAT NULL, 
	scaler_15 FLOAT NULL, 
	scaler_16 FLOAT NULL, 
	scaler_17 FLOAT NULL, 
	scaler_18 FLOAT NULL, 
	scaler_19 FLOAT NULL, 
	scaler_20 FLOAT NULL, 
	scaler_21 FLOAT NULL, 
	scaler_22 FLOAT NULL, 
	scaler_23 FLOAT NULL, 
	scaler_24 FLOAT NULL, 
	scaler_25 FLOAT NULL, 
	scaler_26 FLOAT NULL, 
	scaler_27 FLOAT NULL, 
	scaler_28 FLOAT NULL, 
	scaler_29 FLOAT NULL, 
	scaler_30 FLOAT NULL, 
	scaler_31 FLOAT NULL, 
	scaler_32 FLOAT NULL, 
	scaler_33 FLOAT NULL, 
	scaler_34 FLOAT NULL, 
	scaler_35 FLOAT NULL, 
	scaler_36 FLOAT NULL, 
	scaler_37 FLOAT NULL, 
	scaler_38 FLOAT NULL, 
	scaler_39 FLOAT NULL, 
	scaler_40 FLOAT NULL, 
	scaler_41 FLOAT NULL, 
	scaler_42 FLOAT NULL, 
	scaler_43 FLOAT NULL, 
	scaler_44 FLOAT NULL, 
	scaler_45 FLOAT NULL, 
	scaler_46 FLOAT NULL, 
	scaler_47 FLOAT NULL, 
	scaler_48 FLOAT NULL, 
	scaler_49 FLOAT NULL, 
	scaler_50 FLOAT NULL, 
	scaler_51 FLOAT NULL, 
	scaler_52 FLOAT NULL, 
	scaler_53 FLOAT NULL, 
	scaler_54 FLOAT NULL, 
	scaler_55 FLOAT NULL, 
	scaler_56 FLOAT NULL, 
	scaler_57 FLOAT NULL, 
	scaler_58 FLOAT NULL, 
	scaler_59 FLOAT NULL, 
	scaler_60 FLOAT NULL, 
	scaler_61 FLOAT NULL, 
	scaler_62 FLOAT NULL, 
	scaler_63 FLOAT NULL, 
	scaler_64 FLOAT NULL, 
	scaler_65 FLOAT NULL, 
	scaler_66 FLOAT NULL, 
	scaler_67 FLOAT NULL, 
	scaler_68 FLOAT NULL, 
	scaler_69 FLOAT NULL, 
	scaler_70 FLOAT NULL, 
	scaler_71 FLOAT NULL, 
	scaler_72 FLOAT NULL, 
	scaler_73 FLOAT NULL, 
	scaler_74 FLOAT NULL, 
	scaler_75 FLOAT NULL, 
	scaler_76 FLOAT NULL, 
	scaler_77 FLOAT NULL, 
	scaler_78 FLOAT NULL, 
	scaler_79 FLOAT NULL, 
	scaler_80 FLOAT NULL, 
	scaler_81 FLOAT NULL, 
	scaler_82 FLOAT NULL, 
	scaler_83 FLOAT NULL, 
	scaler_84 FLOAT NULL, 
	scaler_85 FLOAT NULL, 
	scaler_86 FLOAT NULL, 
	scaler_87 FLOAT NULL, 
	scaler_88 FLOAT NULL, 
	scaler_89 FLOAT NULL, 
	scaler_90 FLOAT NULL, 
	scaler_91 FLOAT NULL, 
	scaler_92 FLOAT NULL, 
	scaler_93 FLOAT NULL, 
	scaler_94 FLOAT NULL, 
	scaler_95 FLOAT NULL, 
	scaler_96 FLOAT NULL, 
	scaler_97 FLOAT NULL, 
	scaler_98 FLOAT NULL, 
	scaler_99 FLOAT NULL, 
	scaler_100 FLOAT NULL, 
	scaler_101 FLOAT NULL
)



-- Code For temporary table ##TMP_20180602144734_R86_ADS_sca_2_OUT part 2. Populate

INSERT INTO ##TMP_20180602144734_R86_ADS_sca_2_OUT ([KEY], scaler_2, scaler_3, scaler_4, scaler_5, scaler_6, scaler_7, scaler_8, scaler_9, scaler_10, scaler_11, scaler_12, scaler_13, scaler_14, scaler_15, scaler_16, scaler_17, scaler_18, scaler_19, scaler_20, scaler_21, scaler_22, scaler_23, scaler_24, scaler_25, scaler_26, scaler_27, scaler_28, scaler_29, scaler_30, scaler_31, scaler_32, scaler_33, scaler_34, scaler_35, scaler_36, scaler_37, scaler_38, scaler_39, scaler_40, scaler_41, scaler_42, scaler_43, scaler_44, scaler_45, scaler_46, scaler_47, scaler_48, scaler_49, scaler_50, scaler_51, scaler_52, scaler_53, scaler_54, scaler_55, scaler_56, scaler_57, scaler_58, scaler_59, scaler_60, scaler_61, scaler_62, scaler_63, scaler_64, scaler_65, scaler_66, scaler_67, scaler_68, scaler_69, scaler_70, scaler_71, scaler_72, scaler_73, scaler_74, scaler_75, scaler_76, scaler_77, scaler_78, scaler_79, scaler_80, scaler_81, scaler_82, scaler_83, scaler_84, scaler_85, scaler_86, scaler_87, scaler_88, scaler_89, scaler_90, scaler_91, scaler_92, scaler_93, scaler_94, scaler_95, scaler_96, scaler_97, scaler_98, scaler_99, scaler_100, scaler_101) SELECT [ADS_sca_2_OUT].[KEY], [ADS_sca_2_OUT].scaler_2, [ADS_sca_2_OUT].scaler_3, [ADS_sca_2_OUT].scaler_4, [ADS_sca_2_OUT].scaler_5, [ADS_sca_2_OUT].scaler_6, [ADS_sca_2_OUT].scaler_7, [ADS_sca_2_OUT].scaler_8, [ADS_sca_2_OUT].scaler_9, [ADS_sca_2_OUT].scaler_10, [ADS_sca_2_OUT].scaler_11, [ADS_sca_2_OUT].scaler_12, [ADS_sca_2_OUT].scaler_13, [ADS_sca_2_OUT].scaler_14, [ADS_sca_2_OUT].scaler_15, [ADS_sca_2_OUT].scaler_16, [ADS_sca_2_OUT].scaler_17, [ADS_sca_2_OUT].scaler_18, [ADS_sca_2_OUT].scaler_19, [ADS_sca_2_OUT].scaler_20, [ADS_sca_2_OUT].scaler_21, [ADS_sca_2_OUT].scaler_22, [ADS_sca_2_OUT].scaler_23, [ADS_sca_2_OUT].scaler_24, [ADS_sca_2_OUT].scaler_25, [ADS_sca_2_OUT].scaler_26, [ADS_sca_2_OUT].scaler_27, [ADS_sca_2_OUT].scaler_28, [ADS_sca_2_OUT].scaler_29, [ADS_sca_2_OUT].scaler_30, [ADS_sca_2_OUT].scaler_31, [ADS_sca_2_OUT].scaler_32, [ADS_sca_2_OUT].scaler_33, [ADS_sca_2_OUT].scaler_34, [ADS_sca_2_OUT].scaler_35, [ADS_sca_2_OUT].scaler_36, [ADS_sca_2_OUT].scaler_37, [ADS_sca_2_OUT].scaler_38, [ADS_sca_2_OUT].scaler_39, [ADS_sca_2_OUT].scaler_40, [ADS_sca_2_OUT].scaler_41, [ADS_sca_2_OUT].scaler_42, [ADS_sca_2_OUT].scaler_43, [ADS_sca_2_OUT].scaler_44, [ADS_sca_2_OUT].scaler_45, [ADS_sca_2_OUT].scaler_46, [ADS_sca_2_OUT].scaler_47, [ADS_sca_2_OUT].scaler_48, [ADS_sca_2_OUT].scaler_49, [ADS_sca_2_OUT].scaler_50, [ADS_sca_2_OUT].scaler_51, [ADS_sca_2_OUT].scaler_52, [ADS_sca_2_OUT].scaler_53, [ADS_sca_2_OUT].scaler_54, [ADS_sca_2_OUT].scaler_55, [ADS_sca_2_OUT].scaler_56, [ADS_sca_2_OUT].scaler_57, [ADS_sca_2_OUT].scaler_58, [ADS_sca_2_OUT].scaler_59, [ADS_sca_2_OUT].scaler_60, [ADS_sca_2_OUT].scaler_61, [ADS_sca_2_OUT].scaler_62, [ADS_sca_2_OUT].scaler_63, [ADS_sca_2_OUT].scaler_64, [ADS_sca_2_OUT].scaler_65, [ADS_sca_2_OUT].scaler_66, [ADS_sca_2_OUT].scaler_67, [ADS_sca_2_OUT].scaler_68, [ADS_sca_2_OUT].scaler_69, [ADS_sca_2_OUT].scaler_70, [ADS_sca_2_OUT].scaler_71, [ADS_sca_2_OUT].scaler_72, [ADS_sca_2_OUT].scaler_73, [ADS_sca_2_OUT].scaler_74, [ADS_sca_2_OUT].scaler_75, [ADS_sca_2_OUT].scaler_76, [ADS_sca_2_OUT].scaler_77, [ADS_sca_2_OUT].scaler_78, [ADS_sca_2_OUT].scaler_79, [ADS_sca_2_OUT].scaler_80, [ADS_sca_2_OUT].scaler_81, [ADS_sca_2_OUT].scaler_82, [ADS_sca_2_OUT].scaler_83, [ADS_sca_2_OUT].scaler_84, [ADS_sca_2_OUT].scaler_85, [ADS_sca_2_OUT].scaler_86, [ADS_sca_2_OUT].scaler_87, [ADS_sca_2_OUT].scaler_88, [ADS_sca_2_OUT].scaler_89, [ADS_sca_2_OUT].scaler_90, [ADS_sca_2_OUT].scaler_91, [ADS_sca_2_OUT].scaler_92, [ADS_sca_2_OUT].scaler_93, [ADS_sca_2_OUT].scaler_94, [ADS_sca_2_OUT].scaler_95, [ADS_sca_2_OUT].scaler_96, [ADS_sca_2_OUT].scaler_97, [ADS_sca_2_OUT].scaler_98, [ADS_sca_2_OUT].scaler_99, [ADS_sca_2_OUT].scaler_100, [ADS_sca_2_OUT].scaler_101 
FROM (SELECT [ADS_imp_1_OUT].[KEY] AS [KEY], (CAST([ADS_imp_1_OUT].impter_2 AS FLOAT(53)) - -0.08128085300192169) / 1.0000403559305833 AS scaler_2, (CAST([ADS_imp_1_OUT].impter_3 AS FLOAT(53)) - -0.13436805172534722) / 0.8837904988184502 AS scaler_3, (CAST([ADS_imp_1_OUT].impter_4 AS FLOAT(53)) - -0.1171335439265335) / 0.8570569022899862 AS scaler_4, (CAST([ADS_imp_1_OUT].impter_5 AS FLOAT(53)) - 0.10314525691526008) / 1.0029176283530983 AS scaler_5, (CAST([ADS_imp_1_OUT].impter_6 AS FLOAT(53)) - 0.04859877061601238) / 0.9128966632538227 AS scaler_6, (CAST([ADS_imp_1_OUT].impter_7 AS FLOAT(53)) - 0.09985694677353979) / 0.8987090594452791 AS scaler_7, (CAST([ADS_imp_1_OUT].impter_8 AS FLOAT(53)) - 0.0672774556565916) / 1.0142447611518557 AS scaler_8, (CAST([ADS_imp_1_OUT].impter_9 AS FLOAT(53)) - 0.1622384092846963) / 1.0747662307530297 AS scaler_9, (CAST([ADS_imp_1_OUT].impter_10 AS FLOAT(53)) - 0.04069362852608218) / 1.026267867232466 AS scaler_10, (CAST([ADS_imp_1_OUT].impter_11 AS FLOAT(53)) - 0.051659905088603277) / 0.8402436043740567 AS scaler_11, (CAST([ADS_imp_1_OUT].impter_12 AS FLOAT(53)) - 0.10179067839269526) / 1.0068242363938393 AS scaler_12, (CAST([ADS_imp_1_OUT].impter_13 AS FLOAT(53)) - -0.1759747362698276) / 0.9240710764915452 AS scaler_13, (CAST([ADS_imp_1_OUT].impter_14 AS FLOAT(53)) - -0.09675138494095058) / 0.9783790869772869 AS scaler_14, (CAST([ADS_imp_1_OUT].impter_15 AS FLOAT(53)) - -0.04608656912634662) / 0.9781135354292492 AS scaler_15, (CAST([ADS_imp_1_OUT].impter_16 AS FLOAT(53)) - 0.10165852286085655) / 0.9014456978711726 AS scaler_16, (CAST([ADS_imp_1_OUT].impter_17 AS FLOAT(53)) - 0.11179903010835046) / 0.9779155034856741 AS scaler_17, (CAST([ADS_imp_1_OUT].impter_18 AS FLOAT(53)) - -0.006110233359380335) / 0.9981020697621527 AS scaler_18, (CAST([ADS_imp_1_OUT].impter_19 AS FLOAT(53)) - 0.07144704068910084) / 0.8874816465174282 AS scaler_19, (CAST([ADS_imp_1_OUT].impter_20 AS FLOAT(53)) - -0.08808458650118434) / 0.8392925703736469 AS scaler_20, (CAST([ADS_imp_1_OUT].impter_21 AS FLOAT(53)) - -0.07182799000884085) / 0.9507419765776924 AS scaler_21, (CAST([ADS_imp_1_OUT].impter_22 AS FLOAT(53)) - -0.07230200847310368) / 1.066826998652098 AS scaler_22, (CAST([ADS_imp_1_OUT].impter_23 AS FLOAT(53)) - 0.02896693079944173) / 0.9902823724923776 AS scaler_23, (CAST([ADS_imp_1_OUT].impter_24 AS FLOAT(53)) - 0.21388217632997558) / 0.8623253968778218 AS scaler_24, (CAST([ADS_imp_1_OUT].impter_25 AS FLOAT(53)) - -0.06669297919409706) / 0.9598770564082906 AS scaler_25, (CAST([ADS_imp_1_OUT].impter_26 AS FLOAT(53)) - 0.046152348549980085) / 0.9878502885847017 AS scaler_26, (CAST([ADS_imp_1_OUT].impter_27 AS FLOAT(53)) - 0.03249513222766133) / 0.9583954740248698 AS scaler_27, (CAST([ADS_imp_1_OUT].impter_28 AS FLOAT(53)) - 0.05224239330612866) / 0.9771107275041324 AS scaler_28, (CAST([ADS_imp_1_OUT].impter_29 AS FLOAT(53)) - 0.018745871966632584) / 1.0557199260759529 AS scaler_29, (CAST([ADS_imp_1_OUT].impter_30 AS FLOAT(53)) - 0.015553079229790346) / 0.9376481022022428 AS scaler_30, (CAST([ADS_imp_1_OUT].impter_31 AS FLOAT(53)) - 0.2258153729902979) / 1.0513597556957384 AS scaler_31, (CAST([ADS_imp_1_OUT].impter_32 AS FLOAT(53)) - -0.16989857778838335) / 1.0578168863571897 AS scaler_32, (CAST([ADS_imp_1_OUT].impter_33 AS FLOAT(53)) - 0.036044309156992346) / 0.9200106573435598 AS scaler_33, (CAST([ADS_imp_1_OUT].impter_34 AS FLOAT(53)) - -0.17199324162640067) / 0.9814800251435433 AS scaler_34, (CAST([ADS_imp_1_OUT].impter_35 AS FLOAT(53)) - 0.13781418887864322) / 0.9177012051168076 AS scaler_35, (CAST([ADS_imp_1_OUT].impter_36 AS FLOAT(53)) - -0.002438210964217244) / 0.8944380116105023 AS scaler_36, (CAST([ADS_imp_1_OUT].impter_37 AS FLOAT(53)) - 0.060833749131451356) / 0.9361651054882097 AS scaler_37, (CAST([ADS_imp_1_OUT].impter_38 AS FLOAT(53)) - -0.18905998689974024) / 1.1290398175800667 AS scaler_38, (CAST([ADS_imp_1_OUT].impter_39 AS FLOAT(53)) - -0.09635219278465344) / 1.0703546254505507 AS scaler_39, (CAST([ADS_imp_1_OUT].impter_40 AS FLOAT(53)) - -0.10160667507355636) / 0.920646499226522 AS scaler_40, (CAST([ADS_imp_1_OUT].impter_41 AS FLOAT(53)) - 0.06475250541578681) / 0.8986109106193976 AS scaler_41, (CAST([ADS_imp_1_OUT].impter_42 AS FLOAT(53)) - -0.30264305036051603) / 1.1304324059677955 AS scaler_42, (CAST([ADS_imp_1_OUT].impter_43 AS FLOAT(53)) - -0.13264155681878692) / 0.8585260796845616 AS scaler_43, (CAST([ADS_imp_1_OUT].impter_44 AS FLOAT(53)) - -0.1334054780733323) / 0.962489523355931 AS scaler_44, (CAST([ADS_imp_1_OUT].impter_45 AS FLOAT(53)) - -0.0011436009702802522) / 0.9049370484050282 AS scaler_45, (CAST([ADS_imp_1_OUT].impter_46 AS FLOAT(53)) - -0.05335157908923337) / 1.0610026457631268 AS scaler_46, (CAST([ADS_imp_1_OUT].impter_47 AS FLOAT(53)) - 0.01714537002687063) / 0.9557097858300829 AS scaler_47, (CAST([ADS_imp_1_OUT].impter_48 AS FLOAT(53)) - -0.059059449572612485) / 1.0894822012599163 AS scaler_48, (CAST([ADS_imp_1_OUT].impter_49 AS FLOAT(53)) - -0.09528879968183994) / 0.8571475953382788 AS scaler_49, (CAST([ADS_imp_1_OUT].impter_50 AS FLOAT(53)) - -0.15781363463365924) / 0.9919635867517769 AS scaler_50, (CAST([ADS_imp_1_OUT].impter_51 AS FLOAT(53)) - -0.23794433392453432) / 1.0067503129721596 AS scaler_51, (CAST([ADS_imp_1_OUT].impter_52 AS FLOAT(53)) - 0.13863850693032237) / 1.0279273388893944 AS scaler_52, (CAST([ADS_imp_1_OUT].impter_53 AS FLOAT(53)) - -0.01699621991492915) / 0.974408927553762 AS scaler_53, (CAST([ADS_imp_1_OUT].impter_54 AS FLOAT(53)) - 0.19701490003754304) / 0.8684920711659356 AS scaler_54, (CAST([ADS_imp_1_OUT].impter_55 AS FLOAT(53)) - 0.05162990473238551) / 0.8943974752234072 AS scaler_55, (CAST([ADS_imp_1_OUT].impter_56 AS FLOAT(53)) - -0.13453002098662553) / 0.9634839659318408 AS scaler_56, (CAST([ADS_imp_1_OUT].impter_57 AS FLOAT(53)) - 0.14789370104559646) / 1.0615399626185422 AS scaler_57, (CAST([ADS_imp_1_OUT].impter_58 AS FLOAT(53)) - -0.013142759438358454) / 0.9772015278495697 AS scaler_58, (CAST([ADS_imp_1_OUT].impter_59 AS FLOAT(53)) - -0.09299162994657897) / 1.007175843550957 AS scaler_59, (CAST([ADS_imp_1_OUT].impter_60 AS FLOAT(53)) - -0.24689492768975088) / 0.9237354128048836 AS scaler_60, (CAST([ADS_imp_1_OUT].impter_61 AS FLOAT(53)) - 0.13499727108287438) / 1.1015843688177136 AS scaler_61, (CAST([ADS_imp_1_OUT].impter_62 AS FLOAT(53)) - 0.0025544005507731047) / 1.0664451639404966 AS scaler_62, (CAST([ADS_imp_1_OUT].impter_63 AS FLOAT(53)) - 0.12527368663465327) / 1.1035677221918443 AS scaler_63, (CAST([ADS_imp_1_OUT].impter_64 AS FLOAT(53)) - -0.03739962296055886) / 1.0321694444223468 AS scaler_64, (CAST([ADS_imp_1_OUT].impter_65 AS FLOAT(53)) - -0.02998869580177853) / 1.0714904800508076 AS scaler_65, (CAST([ADS_imp_1_OUT].impter_66 AS FLOAT(53)) - -0.04286088516871345) / 1.1900007472884844 AS scaler_66, (CAST([ADS_imp_1_OUT].impter_67 AS FLOAT(53)) - -0.1438347006651433) / 0.9838632536243364 AS scaler_67, (CAST([ADS_imp_1_OUT].impter_68 AS FLOAT(53)) - -0.05269793910889183) / 1.133004109638514 AS scaler_68, (CAST([ADS_imp_1_OUT].impter_69 AS FLOAT(53)) - 0.029267940271277926) / 0.9505911883818412 AS scaler_69, (CAST([ADS_imp_1_OUT].impter_70 AS FLOAT(53)) - 0.10431080888322372) / 0.9124892804740817 AS scaler_70, (CAST([ADS_imp_1_OUT].impter_71 AS FLOAT(53)) - -0.09619687433047125) / 1.0435263748552108 AS scaler_71, (CAST([ADS_imp_1_OUT].impter_72 AS FLOAT(53)) - 0.0067333192983315745) / 1.0686226130046215 AS scaler_72, (CAST([ADS_imp_1_OUT].impter_73 AS FLOAT(53)) - 0.03289665935367682) / 0.859185924601115 AS scaler_73, (CAST([ADS_imp_1_OUT].impter_74 AS FLOAT(53)) - 0.08064277275460055) / 1.031072803981909 AS scaler_74, (CAST([ADS_imp_1_OUT].impter_75 AS FLOAT(53)) - -0.10603556755491854) / 0.9757644491800123 AS scaler_75, (CAST([ADS_imp_1_OUT].impter_76 AS FLOAT(53)) - 0.09489100148295918) / 0.9082861753672621 AS scaler_76, (CAST([ADS_imp_1_OUT].impter_77 AS FLOAT(53)) - -0.19664887110008689) / 0.9570091111503233 AS scaler_77, (CAST([ADS_imp_1_OUT].impter_78 AS FLOAT(53)) - 0.11652643514949582) / 0.8906993645060894 AS scaler_78, (CAST([ADS_imp_1_OUT].impter_79 AS FLOAT(53)) - 0.19340218348071325) / 1.015190635438741 AS scaler_79, (CAST([ADS_imp_1_OUT].impter_80 AS FLOAT(53)) - 0.11209709087907249) / 1.0005941329026147 AS scaler_80, (CAST([ADS_imp_1_OUT].impter_81 AS FLOAT(53)) - 0.10709013621222807) / 0.9981990995405838 AS scaler_81, (CAST([ADS_imp_1_OUT].impter_82 AS FLOAT(53)) - -0.01033042920922311) / 1.1261340687039605 AS scaler_82, (CAST([ADS_imp_1_OUT].impter_83 AS FLOAT(53)) - 0.11026552104356717) / 1.0203631595796565 AS scaler_83, (CAST([ADS_imp_1_OUT].impter_84 AS FLOAT(53)) - 0.01191634589453312) / 0.9520198315890641 AS scaler_84, (CAST([ADS_imp_1_OUT].impter_85 AS FLOAT(53)) - 0.013369825695028714) / 1.0539650476886062 AS scaler_85, (CAST([ADS_imp_1_OUT].impter_86 AS FLOAT(53)) - -0.1500512000702785) / 0.9981993823991944 AS scaler_86, (CAST([ADS_imp_1_OUT].impter_87 AS FLOAT(53)) - -0.09022177579448487) / 0.9119054985661357 AS scaler_87, (CAST([ADS_imp_1_OUT].impter_88 AS FLOAT(53)) - -0.16029625657228264) / 1.0530611443946694 AS scaler_88, (CAST([ADS_imp_1_OUT].impter_89 AS FLOAT(53)) - -0.10127017293489289) / 1.0673088162334932 AS scaler_89, (CAST([ADS_imp_1_OUT].impter_90 AS FLOAT(53)) - 0.3323543006292627) / 0.8517398608796033 AS scaler_90, (CAST([ADS_imp_1_OUT].impter_91 AS FLOAT(53)) - 0.051731173060791114) / 0.9036571972083375 AS scaler_91, (CAST([ADS_imp_1_OUT].impter_92 AS FLOAT(53)) - 0.1078879212202887) / 0.9679161746442023 AS scaler_92, (CAST([ADS_imp_1_OUT].impter_93 AS FLOAT(53)) - 0.21454931874740585) / 0.9059278397749674 AS scaler_93, (CAST([ADS_imp_1_OUT].impter_94 AS FLOAT(53)) - -0.16317337769942666) / 1.097718994991099 AS scaler_94, (CAST([ADS_imp_1_OUT].impter_95 AS FLOAT(53)) - -0.2242384076879583) / 0.7859624368027274 AS scaler_95, (CAST([ADS_imp_1_OUT].impter_96 AS FLOAT(53)) - -0.27695847565296017) / 1.000759742410346 AS scaler_96, (CAST([ADS_imp_1_OUT].impter_97 AS FLOAT(53)) - 0.037863552135044866) / 0.9617491014855645 AS scaler_97, (CAST([ADS_imp_1_OUT].impter_98 AS FLOAT(53)) - -0.02758852803141265) / 0.888578840707713 AS scaler_98, (CAST([ADS_imp_1_OUT].impter_99 AS FLOAT(53)) - 0.1052877881031243) / 0.9881179437649864 AS scaler_99, (CAST([ADS_imp_1_OUT].impter_100 AS FLOAT(53)) - 0.06640703380221318) / 0.8931321524560405 AS scaler_100, (CAST([ADS_imp_1_OUT].impter_101 AS FLOAT(53)) - 0.06569930995842384) / 0.9367001351824711 AS scaler_101 
FROM ##TMP_20180602144734_V6T_ADS_imp_1_OUT AS [ADS_imp_1_OUT]) AS [ADS_sca_2_OUT]

-- Code For temporary table ##TMP_20180602144734_PQF_Quantiles part 1. Create 


CREATE TABLE ##TMP_20180602144734_PQF_Quantiles (
	[KEY] BIGINT NULL, 
	[Quantile] FLOAT(53) NULL
)



-- Code For temporary table ##TMP_20180602144734_PQF_Quantiles part 2. Populate

WITH [DT_node_lookup] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_82 <= -0.29766207933425903) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_43 <= -0.020951315760612488) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_51 <= 0.5660598874092102) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_83 <= 0.3355150520801544) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_55 <= -0.7162802219390869) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_39 <= 0.044099658727645874) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_14 <= -1.0553932189941406) THEN 13 ELSE 14 END END END AS node_id_2 
FROM ##TMP_20180602144734_R86_ADS_sca_2_OUT AS [ADS_sca_2_OUT]), 
[DT_node_data] AS 
(SELECT [Values].nid AS nid, CAST([Values].[E] AS FLOAT(53)) AS [E] 
FROM (SELECT 3 AS nid, -299.55516868188016 AS [E] UNION ALL SELECT 4 AS nid, -439.78883114766336 AS [E] UNION ALL SELECT 6 AS nid, -149.93062882389108 AS [E] UNION ALL SELECT 7 AS nid, 111.60742166947276 AS [E] UNION ALL SELECT 10 AS nid, 319.6456319352328 AS [E] UNION ALL SELECT 11 AS nid, 108.14981384071251 AS [E] UNION ALL SELECT 13 AS nid, -74.03087422300632 AS [E] UNION ALL SELECT 14 AS nid, 120.35070981059704 AS [E]) AS [Values]), 
[DT_Output] AS 
(SELECT [DT_node_lookup].[KEY] AS [KEY], [DT_node_lookup].node_id_2 AS node_id_2, [DT_node_data].nid AS nid, [DT_node_data].[E] AS [E] 
FROM [DT_node_lookup] LEFT OUTER JOIN [DT_node_data] ON [DT_node_lookup].node_id_2 = [DT_node_data].nid), 
[ADB_Model_0] AS 
(SELECT [DT_Output].[KEY] AS [KEY], [DT_Output].[E] AS [Estimator], 0.0662842423356548 AS [Weight], 0 AS est_index 
FROM [DT_Output]), 
[DT_node_lookup_1] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_15 <= -0.9590684175491333) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_92 <= -1.0033159255981445) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_27 <= -1.3567290306091309) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_15 <= -1.1346824169158936) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_51 <= -0.4705507755279541) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_64 <= 0.47876042127609253) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_76 <= -0.5321195721626282) THEN 13 ELSE 14 END END END AS node_id_2 
FROM ##TMP_20180602144734_R86_ADS_sca_2_OUT AS [ADS_sca_2_OUT]), 
[DT_node_data_1] AS 
(SELECT [Values].nid AS nid, CAST([Values].[E] AS FLOAT(53)) AS [E] 
FROM (SELECT 3 AS nid, 75.60702200307296 AS [E] UNION ALL SELECT 4 AS nid, 419.8117904787066 AS [E] UNION ALL SELECT 6 AS nid, -150.50585850810697 AS [E] UNION ALL SELECT 7 AS nid, -334.8676350174931 AS [E] UNION ALL SELECT 10 AS nid, 79.09631375271496 AS [E] UNION ALL SELECT 11 AS nid, -169.73339035166558 AS [E] UNION ALL SELECT 13 AS nid, 89.9551260739289 AS [E] UNION ALL SELECT 14 AS nid, 232.21531580410792 AS [E]) AS [Values]), 
[DT_Output_1] AS 
(SELECT [DT_node_lookup_1].[KEY] AS [KEY], [DT_node_lookup_1].node_id_2 AS node_id_2, [DT_node_data_1].nid AS nid, [DT_node_data_1].[E] AS [E] 
FROM [DT_node_lookup_1] LEFT OUTER JOIN [DT_node_data_1] ON [DT_node_lookup_1].node_id_2 = [DT_node_data_1].nid), 
[ADB_Model_1] AS 
(SELECT [DT_Output_1].[KEY] AS [KEY], [DT_Output_1].[E] AS [Estimator], 0.0576482692120721 AS [Weight], 1 AS est_index 
FROM [DT_Output_1]), 
[DT_node_lookup_2] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_43 <= -0.44576358795166016) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_82 <= -0.210164874792099) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_93 <= -0.5397822856903076) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_68 <= 0.8173680305480957) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_91 <= 0.9625909328460693) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_62 <= -0.7250446081161499) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_33 <= -0.45973116159439087) THEN 13 ELSE 14 END END END AS node_id_2 
FROM ##TMP_20180602144734_R86_ADS_sca_2_OUT AS [ADS_sca_2_OUT]), 
[DT_node_data_2] AS 
(SELECT [Values].nid AS nid, CAST([Values].[E] AS FLOAT(53)) AS [E] 
FROM (SELECT 3 AS nid, -422.76491839408925 AS [E] UNION ALL SELECT 4 AS nid, -243.53908567938973 AS [E] UNION ALL SELECT 6 AS nid, -81.38465826950127 AS [E] UNION ALL SELECT 7 AS nid, 233.33694106574706 AS [E] UNION ALL SELECT 10 AS nid, -56.83957441014503 AS [E] UNION ALL SELECT 11 AS nid, 134.62937712576715 AS [E] UNION ALL SELECT 13 AS nid, -280.96508601336274 AS [E] UNION ALL SELECT 14 AS nid, -153.06328093387233 AS [E]) AS [Values]), 
[DT_Output_2] AS 
(SELECT [DT_node_lookup_2].[KEY] AS [KEY], [DT_node_lookup_2].node_id_2 AS node_id_2, [DT_node_data_2].nid AS nid, [DT_node_data_2].[E] AS [E] 
FROM [DT_node_lookup_2] LEFT OUTER JOIN [DT_node_data_2] ON [DT_node_lookup_2].node_id_2 = [DT_node_data_2].nid), 
[ADB_Model_2] AS 
(SELECT [DT_Output_2].[KEY] AS [KEY], [DT_Output_2].[E] AS [Estimator], 0.05571332269059435 AS [Weight], 2 AS est_index 
FROM [DT_Output_2]), 
[DT_node_lookup_3] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_43 <= -0.44576358795166016) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_82 <= 1.1208453178405762) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_47 <= 0.4729793071746826) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_79 <= 0.49118366837501526) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_41 <= -0.6322095990180969) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_59 <= -0.34907266497612) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_51 <= -1.2654943466186523) THEN 13 ELSE 14 END END END AS node_id_2 
FROM ##TMP_20180602144734_R86_ADS_sca_2_OUT AS [ADS_sca_2_OUT]), 
[DT_node_data_3] AS 
(SELECT [Values].nid AS nid, CAST([Values].[E] AS FLOAT(53)) AS [E] 
FROM (SELECT 3 AS nid, -359.3225987208778 AS [E] UNION ALL SELECT 4 AS nid, -218.33311725313078 AS [E] UNION ALL SELECT 6 AS nid, 327.27619652811467 AS [E] UNION ALL SELECT 7 AS nid, 48.423335696929506 AS [E] UNION ALL SELECT 10 AS nid, -165.08085766797484 AS [E] UNION ALL SELECT 11 AS nid, -16.45296535992008 AS [E] UNION ALL SELECT 13 AS nid, -104.86554844683326 AS [E] UNION ALL SELECT 14 AS nid, 175.4532994575898 AS [E]) AS [Values]), 
[DT_Output_3] AS 
(SELECT [DT_node_lookup_3].[KEY] AS [KEY], [DT_node_lookup_3].node_id_2 AS node_id_2, [DT_node_data_3].nid AS nid, [DT_node_data_3].[E] AS [E] 
FROM [DT_node_lookup_3] LEFT OUTER JOIN [DT_node_data_3] ON [DT_node_lookup_3].node_id_2 = [DT_node_data_3].nid), 
[ADB_Model_3] AS 
(SELECT [DT_Output_3].[KEY] AS [KEY], [DT_Output_3].[E] AS [Estimator], 0.06142148173446328 AS [Weight], 3 AS est_index 
FROM [DT_Output_3]), 
[DT_node_lookup_4] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_90 <= -1.4298961162567139) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_67 <= -0.03880050778388977) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_41 <= 1.6310546398162842) THEN 3 ELSE 4 END ELSE 5 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_97 <= -0.8279357552528381) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_68 <= 0.2689551115036011) THEN 8 ELSE 9 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_82 <= -0.7010325193405151) THEN 11 ELSE 12 END END END AS node_id_2 
FROM ##TMP_20180602144734_R86_ADS_sca_2_OUT AS [ADS_sca_2_OUT]), 
[DT_node_data_4] AS 
(SELECT [Values].nid AS nid, CAST([Values].[E] AS FLOAT(53)) AS [E] 
FROM (SELECT 3 AS nid, 245.21860440601063 AS [E] UNION ALL SELECT 4 AS nid, 305.0402047722153 AS [E] UNION ALL SELECT 5 AS nid, 419.81179047870665 AS [E] UNION ALL SELECT 8 AS nid, -173.73866973283788 AS [E] UNION ALL SELECT 9 AS nid, -387.5326881456799 AS [E] UNION ALL SELECT 11 AS nid, -106.36961064660952 AS [E] UNION ALL SELECT 12 AS nid, 80.25033909068998 AS [E]) AS [Values]), 
[DT_Output_4] AS 
(SELECT [DT_node_lookup_4].[KEY] AS [KEY], [DT_node_lookup_4].node_id_2 AS node_id_2, [DT_node_data_4].nid AS nid, [DT_node_data_4].[E] AS [E] 
FROM [DT_node_lookup_4] LEFT OUTER JOIN [DT_node_data_4] ON [DT_node_lookup_4].node_id_2 = [DT_node_data_4].nid), 
[ADB_Model_4] AS 
(SELECT [DT_Output_4].[KEY] AS [KEY], [DT_Output_4].[E] AS [Estimator], 0.06926725469721884 AS [Weight], 4 AS est_index 
FROM [DT_Output_4]), 
[DT_node_lookup_5] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_82 <= -0.579852819442749) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_65 <= -0.00990229845046997) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_94 <= 0.053530264645814896) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_43 <= -0.2702264189720154) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_46 <= -0.8821824789047241) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_85 <= -0.06269937753677368) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_3 <= 0.6375933885574341) THEN 13 ELSE 14 END END END AS node_id_2 
FROM ##TMP_20180602144734_R86_ADS_sca_2_OUT AS [ADS_sca_2_OUT]), 
[DT_node_data_5] AS 
(SELECT [Values].nid AS nid, CAST([Values].[E] AS FLOAT(53)) AS [E] 
FROM (SELECT 3 AS nid, -250.1411376723568 AS [E] UNION ALL SELECT 4 AS nid, -431.1969669859277 AS [E] UNION ALL SELECT 6 AS nid, -194.4689573946363 AS [E] UNION ALL SELECT 7 AS nid, 39.53652680210184 AS [E] UNION ALL SELECT 10 AS nid, -52.26649363412389 AS [E] UNION ALL SELECT 11 AS nid, -166.33878820731078 AS [E] UNION ALL SELECT 13 AS nid, 198.9904787086985 AS [E] UNION ALL SELECT 14 AS nid, -34.15921261125043 AS [E]) AS [Values]), 
[DT_Output_5] AS 
(SELECT [DT_node_lookup_5].[KEY] AS [KEY], [DT_node_lookup_5].node_id_2 AS node_id_2, [DT_node_data_5].nid AS nid, [DT_node_data_5].[E] AS [E] 
FROM [DT_node_lookup_5] LEFT OUTER JOIN [DT_node_data_5] ON [DT_node_lookup_5].node_id_2 = [DT_node_data_5].nid), 
[ADB_Model_5] AS 
(SELECT [DT_Output_5].[KEY] AS [KEY], [DT_Output_5].[E] AS [Estimator], 0.05536112300519518 AS [Weight], 5 AS est_index 
FROM [DT_Output_5]), 
[DT_node_lookup_6] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_65 <= -0.2679380774497986) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_98 <= 1.5113595724105835) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_51 <= 1.2287237644195557) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_69 <= 0.5256731510162354) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_71 <= 0.1751530021429062) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_81 <= -0.3422964811325073) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_45 <= -0.5059979557991028) THEN 13 ELSE 14 END END END AS node_id_2 
FROM ##TMP_20180602144734_R86_ADS_sca_2_OUT AS [ADS_sca_2_OUT]), 
[DT_node_data_6] AS 
(SELECT [Values].nid AS nid, CAST([Values].[E] AS FLOAT(53)) AS [E] 
FROM (SELECT 3 AS nid, -146.81309318434305 AS [E] UNION ALL SELECT 4 AS nid, 234.75877165475936 AS [E] UNION ALL SELECT 6 AS nid, -436.89308608869476 AS [E] UNION ALL SELECT 7 AS nid, -454.8215873712685 AS [E] UNION ALL SELECT 10 AS nid, 48.7762016183392 AS [E] UNION ALL SELECT 11 AS nid, 265.5272995551691 AS [E] UNION ALL SELECT 13 AS nid, -202.30311906307523 AS [E] UNION ALL SELECT 14 AS nid, 59.00190945501265 AS [E]) AS [Values]), 
[DT_Output_6] AS 
(SELECT [DT_node_lookup_6].[KEY] AS [KEY], [DT_node_lookup_6].node_id_2 AS node_id_2, [DT_node_data_6].nid AS nid, [DT_node_data_6].[E] AS [E] 
FROM [DT_node_lookup_6] LEFT OUTER JOIN [DT_node_data_6] ON [DT_node_lookup_6].node_id_2 = [DT_node_data_6].nid), 
[ADB_Model_6] AS 
(SELECT [DT_Output_6].[KEY] AS [KEY], [DT_Output_6].[E] AS [Estimator], 0.06895166935934854 AS [Weight], 6 AS est_index 
FROM [DT_Output_6]), 
[DT_node_lookup_7] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_43 <= -0.44576358795166016) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_57 <= 0.5646339654922485) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_81 <= 0.6599217653274536) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_17 <= 1.2226165533065796) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_97 <= -0.4716874957084656) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_34 <= -0.6425999402999878) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_5 <= 1.1910450458526611) THEN 13 ELSE 14 END END END AS node_id_2 
FROM ##TMP_20180602144734_R86_ADS_sca_2_OUT AS [ADS_sca_2_OUT]), 
[DT_node_data_7] AS 
(SELECT [Values].nid AS nid, CAST([Values].[E] AS FLOAT(53)) AS [E] 
FROM (SELECT 3 AS nid, -246.1786931426876 AS [E] UNION ALL SELECT 4 AS nid, -52.10870342095156 AS [E] UNION ALL SELECT 6 AS nid, -437.5246838653099 AS [E] UNION ALL SELECT 7 AS nid, -327.50301874204285 AS [E] UNION ALL SELECT 10 AS nid, 117.89556480946582 AS [E] UNION ALL SELECT 11 AS nid, -171.36829448707329 AS [E] UNION ALL SELECT 13 AS nid, 104.24162385615097 AS [E] UNION ALL SELECT 14 AS nid, 327.0201989083299 AS [E]) AS [Values]), 
[DT_Output_7] AS 
(SELECT [DT_node_lookup_7].[KEY] AS [KEY], [DT_node_lookup_7].node_id_2 AS node_id_2, [DT_node_data_7].nid AS nid, [DT_node_data_7].[E] AS [E] 
FROM [DT_node_lookup_7] LEFT OUTER JOIN [DT_node_data_7] ON [DT_node_lookup_7].node_id_2 = [DT_node_data_7].nid), 
[ADB_Model_7] AS 
(SELECT [DT_Output_7].[KEY] AS [KEY], [DT_Output_7].[E] AS [Estimator], 0.06154726925609073 AS [Weight], 7 AS est_index 
FROM [DT_Output_7]), 
[DT_node_lookup_8] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_97 <= -0.3484189808368683) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_3 <= -1.4249722957611084) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_58 <= -0.9572751522064209) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_43 <= -0.48259589076042175) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_81 <= 0.19375014305114746) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_70 <= -0.38685205578804016) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_71 <= -0.5826714038848877) THEN 13 ELSE 14 END END END AS node_id_2 
FROM ##TMP_20180602144734_R86_ADS_sca_2_OUT AS [ADS_sca_2_OUT]), 
[DT_node_data_8] AS 
(SELECT [Values].nid AS nid, CAST([Values].[E] AS FLOAT(53)) AS [E] 
FROM (SELECT 3 AS nid, 212.81710450150226 AS [E] UNION ALL SELECT 4 AS nid, 219.92766037620171 AS [E] UNION ALL SELECT 6 AS nid, -357.0894177181091 AS [E] UNION ALL SELECT 7 AS nid, -160.98488985685765 AS [E] UNION ALL SELECT 10 AS nid, -135.17627509375765 AS [E] UNION ALL SELECT 11 AS nid, 85.26034557003274 AS [E] UNION ALL SELECT 13 AS nid, 277.81274127427787 AS [E] UNION ALL SELECT 14 AS nid, 125.55647826963536 AS [E]) AS [Values]), 
[DT_Output_8] AS 
(SELECT [DT_node_lookup_8].[KEY] AS [KEY], [DT_node_lookup_8].node_id_2 AS node_id_2, [DT_node_data_8].nid AS nid, [DT_node_data_8].[E] AS [E] 
FROM [DT_node_lookup_8] LEFT OUTER JOIN [DT_node_data_8] ON [DT_node_lookup_8].node_id_2 = [DT_node_data_8].nid), 
[ADB_Model_8] AS 
(SELECT [DT_Output_8].[KEY] AS [KEY], [DT_Output_8].[E] AS [Estimator], 0.049941690054889035 AS [Weight], 8 AS est_index 
FROM [DT_Output_8]), 
[DT_node_lookup_9] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_65 <= 0.45749431848526) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_43 <= -0.013263647444546223) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_82 <= -0.27137991786003113) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_95 <= -0.7057732939720154) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_13 <= -0.9444249868392944) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_15 <= 0.4098881483078003) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_71 <= -0.33004483580589294) THEN 13 ELSE 14 END END END AS node_id_2 
FROM ##TMP_20180602144734_R86_ADS_sca_2_OUT AS [ADS_sca_2_OUT]), 
[DT_node_data_9] AS 
(SELECT [Values].nid AS nid, CAST([Values].[E] AS FLOAT(53)) AS [E] 
FROM (SELECT 3 AS nid, -283.74889504755856 AS [E] UNION ALL SELECT 4 AS nid, -109.5863292926706 AS [E] UNION ALL SELECT 6 AS nid, 247.11490781997932 AS [E] UNION ALL SELECT 7 AS nid, -64.3641298000168 AS [E] UNION ALL SELECT 10 AS nid, -186.18029669535417 AS [E] UNION ALL SELECT 11 AS nid, -146.53732849176905 AS [E] UNION ALL SELECT 13 AS nid, 267.0025306442181 AS [E] UNION ALL SELECT 14 AS nid, 142.6334358229316 AS [E]) AS [Values]), 
[DT_Output_9] AS 
(SELECT [DT_node_lookup_9].[KEY] AS [KEY], [DT_node_lookup_9].node_id_2 AS node_id_2, [DT_node_data_9].nid AS nid, [DT_node_data_9].[E] AS [E] 
FROM [DT_node_lookup_9] LEFT OUTER JOIN [DT_node_data_9] ON [DT_node_lookup_9].node_id_2 = [DT_node_data_9].nid), 
[ADB_Model_9] AS 
(SELECT [DT_Output_9].[KEY] AS [KEY], [DT_Output_9].[E] AS [Estimator], 0.059550659864497 AS [Weight], 9 AS est_index 
FROM [DT_Output_9]), 
[DT_node_lookup_10] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_65 <= -0.7392844557762146) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_58 <= -0.3591315746307373) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_80 <= 0.5295537114143372) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_80 <= 0.815008282661438) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_82 <= 0.8365672826766968) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_67 <= 1.101576328277588) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_95 <= 0.6311028599739075) THEN 13 ELSE 14 END END END AS node_id_2 
FROM ##TMP_20180602144734_R86_ADS_sca_2_OUT AS [ADS_sca_2_OUT]), 
[DT_node_data_10] AS 
(SELECT [Values].nid AS nid, CAST([Values].[E] AS FLOAT(53)) AS [E] 
FROM (SELECT 3 AS nid, -46.89741779569693 AS [E] UNION ALL SELECT 4 AS nid, 128.74971924769997 AS [E] UNION ALL SELECT 6 AS nid, -194.64536551564441 AS [E] UNION ALL SELECT 7 AS nid, -432.78585670839794 AS [E] UNION ALL SELECT 10 AS nid, 26.278419883211438 AS [E] UNION ALL SELECT 11 AS nid, -250.18297267655564 AS [E] UNION ALL SELECT 13 AS nid, 213.40502898228738 AS [E] UNION ALL SELECT 14 AS nid, 347.2842238497908 AS [E]) AS [Values]), 
[DT_Output_10] AS 
(SELECT [DT_node_lookup_10].[KEY] AS [KEY], [DT_node_lookup_10].node_id_2 AS node_id_2, [DT_node_data_10].nid AS nid, [DT_node_data_10].[E] AS [E] 
FROM [DT_node_lookup_10] LEFT OUTER JOIN [DT_node_data_10] ON [DT_node_lookup_10].node_id_2 = [DT_node_data_10].nid), 
[ADB_Model_10] AS 
(SELECT [DT_Output_10].[KEY] AS [KEY], [DT_Output_10].[E] AS [Estimator], 0.0718035611011946 AS [Weight], 10 AS est_index 
FROM [DT_Output_10]), 
[DT_node_lookup_11] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_82 <= -0.5905457735061646) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_54 <= 1.3918404579162598) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_98 <= 1.0108442306518555) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_45 <= -1.3796191215515137) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_19 <= -0.4882625937461853) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_97 <= 0.2915550768375397) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_22 <= 0.665626049041748) THEN 13 ELSE 14 END END END AS node_id_2 
FROM ##TMP_20180602144734_R86_ADS_sca_2_OUT AS [ADS_sca_2_OUT]), 
[DT_node_data_11] AS 
(SELECT [Values].nid AS nid, CAST([Values].[E] AS FLOAT(53)) AS [E] 
FROM (SELECT 3 AS nid, -254.39888647855693 AS [E] UNION ALL SELECT 4 AS nid, -427.51192244368093 AS [E] UNION ALL SELECT 6 AS nid, -86.11645147491663 AS [E] UNION ALL SELECT 7 AS nid, 215.90083761986224 AS [E] UNION ALL SELECT 10 AS nid, -80.6416086866768 AS [E] UNION ALL SELECT 11 AS nid, 169.16897281669048 AS [E] UNION ALL SELECT 13 AS nid, 167.85216124440603 AS [E] UNION ALL SELECT 14 AS nid, 310.86621384651613 AS [E]) AS [Values]), 
[DT_Output_11] AS 
(SELECT [DT_node_lookup_11].[KEY] AS [KEY], [DT_node_lookup_11].node_id_2 AS node_id_2, [DT_node_data_11].nid AS nid, [DT_node_data_11].[E] AS [E] 
FROM [DT_node_lookup_11] LEFT OUTER JOIN [DT_node_data_11] ON [DT_node_lookup_11].node_id_2 = [DT_node_data_11].nid), 
[ADB_Model_11] AS 
(SELECT [DT_Output_11].[KEY] AS [KEY], [DT_Output_11].[E] AS [Estimator], 0.06519009096675096 AS [Weight], 11 AS est_index 
FROM [DT_Output_11]), 
[DT_node_lookup_12] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_93 <= -0.2811480164527893) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_21 <= -0.6382255554199219) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_39 <= 0.1271977424621582) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_43 <= -0.24330994486808777) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_41 <= 0.33645302057266235) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_64 <= 0.40926051139831543) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_82 <= 1.5126240253448486) THEN 13 ELSE 14 END END END AS node_id_2 
FROM ##TMP_20180602144734_R86_ADS_sca_2_OUT AS [ADS_sca_2_OUT]), 
[DT_node_data_12] AS 
(SELECT [Values].nid AS nid, CAST([Values].[E] AS FLOAT(53)) AS [E] 
FROM (SELECT 3 AS nid, 128.70994156313017 AS [E] UNION ALL SELECT 4 AS nid, -84.88591152141443 AS [E] UNION ALL SELECT 6 AS nid, -360.0761788021789 AS [E] UNION ALL SELECT 7 AS nid, -176.06805164953155 AS [E] UNION ALL SELECT 10 AS nid, 49.17610059789685 AS [E] UNION ALL SELECT 11 AS nid, -174.6693610135026 AS [E] UNION ALL SELECT 13 AS nid, 208.40677806881985 AS [E] UNION ALL SELECT 14 AS nid, 419.81179047870665 AS [E]) AS [Values]), 
[DT_Output_12] AS 
(SELECT [DT_node_lookup_12].[KEY] AS [KEY], [DT_node_lookup_12].node_id_2 AS node_id_2, [DT_node_data_12].nid AS nid, [DT_node_data_12].[E] AS [E] 
FROM [DT_node_lookup_12] LEFT OUTER JOIN [DT_node_data_12] ON [DT_node_lookup_12].node_id_2 = [DT_node_data_12].nid), 
[ADB_Model_12] AS 
(SELECT [DT_Output_12].[KEY] AS [KEY], [DT_Output_12].[E] AS [Estimator], 0.06452696916181104 AS [Weight], 12 AS est_index 
FROM [DT_Output_12]), 
[DT_node_lookup_13] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_65 <= 0.2668015956878662) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_82 <= -0.29766207933425903) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_20 <= -0.36781108379364014) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_14 <= 0.001756623387336731) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_61 <= -0.8201034665107727) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_49 <= 1.6850446462631226) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_29 <= 0.33394724130630493) THEN 13 ELSE 14 END END END AS node_id_2 
FROM ##TMP_20180602144734_R86_ADS_sca_2_OUT AS [ADS_sca_2_OUT]), 
[DT_node_data_13] AS 
(SELECT [Values].nid AS nid, CAST([Values].[E] AS FLOAT(53)) AS [E] 
FROM (SELECT 3 AS nid, -416.9696088757073 AS [E] UNION ALL SELECT 4 AS nid, -178.1208998678555 AS [E] UNION ALL SELECT 6 AS nid, -95.51114924846917 AS [E] UNION ALL SELECT 7 AS nid, 68.03071719681672 AS [E] UNION ALL SELECT 10 AS nid, -38.114295082326265 AS [E] UNION ALL SELECT 11 AS nid, -257.9792248911822 AS [E] UNION ALL SELECT 13 AS nid, 256.49688781095426 AS [E] UNION ALL SELECT 14 AS nid, 119.43164365651639 AS [E]) AS [Values]), 
[DT_Output_13] AS 
(SELECT [DT_node_lookup_13].[KEY] AS [KEY], [DT_node_lookup_13].node_id_2 AS node_id_2, [DT_node_data_13].nid AS nid, [DT_node_data_13].[E] AS [E] 
FROM [DT_node_lookup_13] LEFT OUTER JOIN [DT_node_data_13] ON [DT_node_lookup_13].node_id_2 = [DT_node_data_13].nid), 
[ADB_Model_13] AS 
(SELECT [DT_Output_13].[KEY] AS [KEY], [DT_Output_13].[E] AS [Estimator], 0.06240374788626324 AS [Weight], 13 AS est_index 
FROM [DT_Output_13]), 
[DT_node_lookup_14] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_82 <= -0.6706985235214233) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_3 <= -0.19744738936424255) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_31 <= -0.09158246219158173) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_57 <= 1.1331713199615479) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_35 <= -0.46873006224632263) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_49 <= -0.4755476117134094) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_3 <= 0.6686553955078125) THEN 13 ELSE 14 END END END AS node_id_2 
FROM ##TMP_20180602144734_R86_ADS_sca_2_OUT AS [ADS_sca_2_OUT]), 
[DT_node_data_14] AS 
(SELECT [Values].nid AS nid, CAST([Values].[E] AS FLOAT(53)) AS [E] 
FROM (SELECT 3 AS nid, -311.3240743964379 AS [E] UNION ALL SELECT 4 AS nid, -454.8215873712685 AS [E] UNION ALL SELECT 6 AS nid, -140.76117130611314 AS [E] UNION ALL SELECT 7 AS nid, 172.79513511576155 AS [E] UNION ALL SELECT 10 AS nid, -180.97543591851664 AS [E] UNION ALL SELECT 11 AS nid, 62.882494629935834 AS [E] UNION ALL SELECT 13 AS nid, 179.37907527259367 AS [E] UNION ALL SELECT 14 AS nid, -66.78234314356789 AS [E]) AS [Values]), 
[DT_Output_14] AS 
(SELECT [DT_node_lookup_14].[KEY] AS [KEY], [DT_node_lookup_14].node_id_2 AS node_id_2, [DT_node_data_14].nid AS nid, [DT_node_data_14].[E] AS [E] 
FROM [DT_node_lookup_14] LEFT OUTER JOIN [DT_node_data_14] ON [DT_node_lookup_14].node_id_2 = [DT_node_data_14].nid), 
[ADB_Model_14] AS 
(SELECT [DT_Output_14].[KEY] AS [KEY], [DT_Output_14].[E] AS [Estimator], 0.07077177190417273 AS [Weight], 14 AS est_index 
FROM [DT_Output_14]), 
[DT_node_lookup_15] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_82 <= -0.21862636506557465) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_43 <= -0.4531792104244232) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_64 <= 1.2096076011657715) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_4 <= -0.6843444108963013) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_43 <= -0.859998345375061) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_62 <= 0.2424440085887909) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_80 <= -0.9687784910202026) THEN 13 ELSE 14 END END END AS node_id_2 
FROM ##TMP_20180602144734_R86_ADS_sca_2_OUT AS [ADS_sca_2_OUT]), 
[DT_node_data_15] AS 
(SELECT [Values].nid AS nid, CAST([Values].[E] AS FLOAT(53)) AS [E] 
FROM (SELECT 3 AS nid, -381.9745888498094 AS [E] UNION ALL SELECT 4 AS nid, -208.7579662950499 AS [E] UNION ALL SELECT 6 AS nid, 110.77904144712802 AS [E] UNION ALL SELECT 7 AS nid, -120.33010917423199 AS [E] UNION ALL SELECT 10 AS nid, -83.49561556211482 AS [E] UNION ALL SELECT 11 AS nid, 59.62618655916408 AS [E] UNION ALL SELECT 13 AS nid, -75.64447824421846 AS [E] UNION ALL SELECT 14 AS nid, 236.27379253268913 AS [E]) AS [Values]), 
[DT_Output_15] AS 
(SELECT [DT_node_lookup_15].[KEY] AS [KEY], [DT_node_lookup_15].node_id_2 AS node_id_2, [DT_node_data_15].nid AS nid, [DT_node_data_15].[E] AS [E] 
FROM [DT_node_lookup_15] LEFT OUTER JOIN [DT_node_data_15] ON [DT_node_lookup_15].node_id_2 = [DT_node_data_15].nid), 
[ADB_Model_15] AS 
(SELECT [DT_Output_15].[KEY] AS [KEY], [DT_Output_15].[E] AS [Estimator], 0.059616876769783576 AS [Weight], 15 AS est_index 
FROM [DT_Output_15]), 
[WE] AS 
(SELECT ensemble_score_union.[KEY] AS [KEY], ensemble_score_union.[Estimator] AS [Estimator], ensemble_score_union.[Weight] AS [Weight], ensemble_score_union.est_index AS est_index 
FROM (SELECT [ADB_Model_0].[KEY] AS [KEY], [ADB_Model_0].[Estimator] AS [Estimator], [ADB_Model_0].[Weight] AS [Weight], [ADB_Model_0].est_index AS est_index 
FROM [ADB_Model_0] UNION ALL SELECT [ADB_Model_1].[KEY] AS [KEY], [ADB_Model_1].[Estimator] AS [Estimator], [ADB_Model_1].[Weight] AS [Weight], [ADB_Model_1].est_index AS est_index 
FROM [ADB_Model_1] UNION ALL SELECT [ADB_Model_2].[KEY] AS [KEY], [ADB_Model_2].[Estimator] AS [Estimator], [ADB_Model_2].[Weight] AS [Weight], [ADB_Model_2].est_index AS est_index 
FROM [ADB_Model_2] UNION ALL SELECT [ADB_Model_3].[KEY] AS [KEY], [ADB_Model_3].[Estimator] AS [Estimator], [ADB_Model_3].[Weight] AS [Weight], [ADB_Model_3].est_index AS est_index 
FROM [ADB_Model_3] UNION ALL SELECT [ADB_Model_4].[KEY] AS [KEY], [ADB_Model_4].[Estimator] AS [Estimator], [ADB_Model_4].[Weight] AS [Weight], [ADB_Model_4].est_index AS est_index 
FROM [ADB_Model_4] UNION ALL SELECT [ADB_Model_5].[KEY] AS [KEY], [ADB_Model_5].[Estimator] AS [Estimator], [ADB_Model_5].[Weight] AS [Weight], [ADB_Model_5].est_index AS est_index 
FROM [ADB_Model_5] UNION ALL SELECT [ADB_Model_6].[KEY] AS [KEY], [ADB_Model_6].[Estimator] AS [Estimator], [ADB_Model_6].[Weight] AS [Weight], [ADB_Model_6].est_index AS est_index 
FROM [ADB_Model_6] UNION ALL SELECT [ADB_Model_7].[KEY] AS [KEY], [ADB_Model_7].[Estimator] AS [Estimator], [ADB_Model_7].[Weight] AS [Weight], [ADB_Model_7].est_index AS est_index 
FROM [ADB_Model_7] UNION ALL SELECT [ADB_Model_8].[KEY] AS [KEY], [ADB_Model_8].[Estimator] AS [Estimator], [ADB_Model_8].[Weight] AS [Weight], [ADB_Model_8].est_index AS est_index 
FROM [ADB_Model_8] UNION ALL SELECT [ADB_Model_9].[KEY] AS [KEY], [ADB_Model_9].[Estimator] AS [Estimator], [ADB_Model_9].[Weight] AS [Weight], [ADB_Model_9].est_index AS est_index 
FROM [ADB_Model_9] UNION ALL SELECT [ADB_Model_10].[KEY] AS [KEY], [ADB_Model_10].[Estimator] AS [Estimator], [ADB_Model_10].[Weight] AS [Weight], [ADB_Model_10].est_index AS est_index 
FROM [ADB_Model_10] UNION ALL SELECT [ADB_Model_11].[KEY] AS [KEY], [ADB_Model_11].[Estimator] AS [Estimator], [ADB_Model_11].[Weight] AS [Weight], [ADB_Model_11].est_index AS est_index 
FROM [ADB_Model_11] UNION ALL SELECT [ADB_Model_12].[KEY] AS [KEY], [ADB_Model_12].[Estimator] AS [Estimator], [ADB_Model_12].[Weight] AS [Weight], [ADB_Model_12].est_index AS est_index 
FROM [ADB_Model_12] UNION ALL SELECT [ADB_Model_13].[KEY] AS [KEY], [ADB_Model_13].[Estimator] AS [Estimator], [ADB_Model_13].[Weight] AS [Weight], [ADB_Model_13].est_index AS est_index 
FROM [ADB_Model_13] UNION ALL SELECT [ADB_Model_14].[KEY] AS [KEY], [ADB_Model_14].[Estimator] AS [Estimator], [ADB_Model_14].[Weight] AS [Weight], [ADB_Model_14].est_index AS est_index 
FROM [ADB_Model_14] UNION ALL SELECT [ADB_Model_15].[KEY] AS [KEY], [ADB_Model_15].[Estimator] AS [Estimator], [ADB_Model_15].[Weight] AS [Weight], [ADB_Model_15].est_index AS est_index 
FROM [ADB_Model_15]) AS ensemble_score_union), 
[Cumulative_Frequencies] AS 
(SELECT [CW].[KEY] AS [KEY], [CW].[Estimator] AS [Estimator], [CW].[Weight] AS [Weight], [CW].est_index AS est_index, [CW].cum_weight AS cum_weight 
FROM (SELECT u1.[KEY] AS [KEY], u1.[Estimator] AS [Estimator], u1.[Weight] AS [Weight], u1.est_index AS est_index, sum(u2.[Weight]) AS cum_weight 
FROM [WE] AS u1, [WE] AS u2 
WHERE u1.[Estimator] >= u2.[Estimator] AND u1.[KEY] = u2.[KEY] GROUP BY u1.[KEY], u1.est_index, u1.[Estimator], u1.[Weight]) AS [CW])
 INSERT INTO ##TMP_20180602144734_PQF_Quantiles ([KEY], [Quantile]) SELECT [Quantiles].[KEY], [Quantiles].[Quantile] 
FROM (SELECT [CW2].[KEY] AS [KEY], [CW2].[Quantile] AS [Quantile] 
FROM (SELECT [Cumulative_Frequencies].[KEY] AS [KEY], min([Cumulative_Frequencies].[Estimator]) AS [Quantile] 
FROM [Cumulative_Frequencies] 
WHERE [Cumulative_Frequencies].cum_weight >= 0.5 GROUP BY [Cumulative_Frequencies].[KEY]) AS [CW2]) AS [Quantiles]

-- Model deployment code

SELECT [Quantiles].[KEY] AS [KEY], [Quantiles].[Quantile] AS [Estimator] 
FROM ##TMP_20180602144734_PQF_Quantiles AS [Quantiles]