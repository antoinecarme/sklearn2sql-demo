-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2018

-- Model : GradientBoostingClassifier
-- Dataset : BreastCancer
-- Database : oracle


-- This SQL code can contain one or more statements, to be executed in the order they appear in this file.



-- Code For temporary table TMP_20180602_VT4_GB_B0 part 1. Create 


CREATE GLOBAL TEMPORARY TABLE "TMP_20180602_VT4_GB_B0" (
	"KEY" NUMBER(19), 
	"Score_0" BINARY_DOUBLE, 
	"Score_1" BINARY_DOUBLE
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table TMP_20180602_VT4_GB_B0 part 2. Populate

INSERT INTO "TMP_20180602_VT4_GB_B0" ("KEY", "Score_0", "Score_1") SELECT "U"."KEY", "U"."Score_0", "U"."Score_1" 
FROM (WITH "DT_node_lookup" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_27" <= 0.14544999599456787) THEN CASE WHEN ("ADS"."Feature_23" <= 961.550048828125) THEN CASE WHEN ("ADS"."Feature_10" <= 1.0475499629974365) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_24" <= 0.0879800021648407) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_16" <= 0.13565000891685486) THEN CASE WHEN ("ADS"."Feature_26" <= 0.20340000092983246) THEN 10 ELSE 11 END ELSE 12 END END AS node_id_2 
FROM "BREASTCANCER" "ADS"), 
"DT_node_data" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS BINARY_DOUBLE) AS "E" 
FROM (SELECT 3 AS nid, 1.4672680374970977 AS "E" FROM DUAL UNION ALL SELECT 4 AS nid, -2.84375 AS "E" FROM DUAL UNION ALL SELECT 6 AS nid, 1.542372881355932 AS "E" FROM DUAL UNION ALL SELECT 7 AS nid, -2.5513418079096044 AS "E" FROM DUAL UNION ALL SELECT 10 AS nid, 1.542372881355932 AS "E" FROM DUAL UNION ALL SELECT 11 AS nid, -2.8126427455222975 AS "E" FROM DUAL UNION ALL SELECT 12 AS nid, 1.542372881355932 AS "E" FROM DUAL) "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".nid AS nid, "DT_node_data"."E" AS "E" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".nid), 
"GB_Model_0_0" AS 
(SELECT "DT_Output"."KEY" AS "KEY", -"DT_Output"."E" AS "Score_0", 0.0 AS "Score_1" 
FROM "DT_Output"), 
"GB_Model_0_1" AS 
(SELECT "DT_Output"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output"."E" AS "Score_1" 
FROM "DT_Output"), 
"DT_node_lookup_1" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_27" <= 0.14544999599456787) THEN CASE WHEN ("ADS"."Feature_23" <= 1058.0) THEN CASE WHEN ("ADS"."Feature_13" <= 48.974998474121094) THEN 3 ELSE 4 END ELSE 5 END ELSE CASE WHEN ("ADS"."Feature_16" <= 0.13565000891685486) THEN CASE WHEN ("ADS"."Feature_26" <= 0.20340000092983246) THEN 8 ELSE 9 END ELSE 10 END END AS node_id_2 
FROM "BREASTCANCER" "ADS"), 
"DT_node_data_1" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS BINARY_DOUBLE) AS "E" 
FROM (SELECT 3 AS nid, 1.3910810640434235 AS "E" FROM DUAL UNION ALL SELECT 4 AS nid, -0.6596363687823121 AS "E" FROM DUAL UNION ALL SELECT 5 AS nid, -2.4285605948643654 AS "E" FROM DUAL UNION ALL SELECT 8 AS nid, 1.4648507794791157 AS "E" FROM DUAL UNION ALL SELECT 9 AS nid, -2.3625649177559 AS "E" FROM DUAL UNION ALL SELECT 10 AS nid, 1.4648507794791157 AS "E" FROM DUAL) "Values"), 
"DT_Output_1" AS 
(SELECT "DT_node_lookup_1"."KEY" AS "KEY", "DT_node_lookup_1".node_id_2 AS node_id_2, "DT_node_data_1".nid AS nid, "DT_node_data_1"."E" AS "E" 
FROM "DT_node_lookup_1" LEFT OUTER JOIN "DT_node_data_1" ON "DT_node_lookup_1".node_id_2 = "DT_node_data_1".nid), 
"GB_Model_1_0" AS 
(SELECT "DT_Output_1"."KEY" AS "KEY", -"DT_Output_1"."E" AS "Score_0", 0.0 AS "Score_1" 
FROM "DT_Output_1"), 
"GB_Model_1_1" AS 
(SELECT "DT_Output_1"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_1"."E" AS "Score_1" 
FROM "DT_Output_1"), 
"DT_node_lookup_2" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_27" <= 0.14544999599456787) THEN CASE WHEN ("ADS"."Feature_20" <= 17.719999313354492) THEN CASE WHEN ("ADS"."Feature_10" <= 1.0475499629974365) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_26" <= 0.1906999945640564) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_16" <= 0.13565000891685486) THEN CASE WHEN ("ADS"."Feature_26" <= 0.20340000092983246) THEN 10 ELSE 11 END ELSE 12 END END AS node_id_2 
FROM "BREASTCANCER" "ADS"), 
"DT_node_data_2" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS BINARY_DOUBLE) AS "E" 
FROM (SELECT 3 AS nid, 1.325752981201139 AS "E" FROM DUAL UNION ALL SELECT 4 AS nid, -2.298828759622404 AS "E" FROM DUAL UNION ALL SELECT 6 AS nid, -0.41581243138643503 AS "E" FROM DUAL UNION ALL SELECT 7 AS nid, -2.1796581996190336 AS "E" FROM DUAL UNION ALL SELECT 10 AS nid, 1.4015095712340189 AS "E" FROM DUAL UNION ALL SELECT 11 AS nid, -2.0704363544628133 AS "E" FROM DUAL UNION ALL SELECT 12 AS nid, 1.4015095712340189 AS "E" FROM DUAL) "Values"), 
"DT_Output_2" AS 
(SELECT "DT_node_lookup_2"."KEY" AS "KEY", "DT_node_lookup_2".node_id_2 AS node_id_2, "DT_node_data_2".nid AS nid, "DT_node_data_2"."E" AS "E" 
FROM "DT_node_lookup_2" LEFT OUTER JOIN "DT_node_data_2" ON "DT_node_lookup_2".node_id_2 = "DT_node_data_2".nid), 
"GB_Model_2_0" AS 
(SELECT "DT_Output_2"."KEY" AS "KEY", -"DT_Output_2"."E" AS "Score_0", 0.0 AS "Score_1" 
FROM "DT_Output_2"), 
"GB_Model_2_1" AS 
(SELECT "DT_Output_2"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_2"."E" AS "Score_1" 
FROM "DT_Output_2"), 
"DT_node_lookup_3" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_27" <= 0.14544999599456787) THEN CASE WHEN ("ADS"."Feature_23" <= 961.550048828125) THEN CASE WHEN ("ADS"."Feature_13" <= 33.00499725341797) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_11" <= 1.4359999895095825) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_16" <= 0.13565000891685486) THEN CASE WHEN ("ADS"."Feature_26" <= 0.20340000092983246) THEN 10 ELSE 11 END ELSE 12 END END AS node_id_2 
FROM "BREASTCANCER" "ADS"), 
"DT_node_data_3" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS BINARY_DOUBLE) AS "E" 
FROM (SELECT 3 AS nid, 1.337391257440793 AS "E" FROM DUAL UNION ALL SELECT 4 AS nid, 0.5259058848218274 AS "E" FROM DUAL UNION ALL SELECT 6 AS nid, -1.964524712944416 AS "E" FROM DUAL UNION ALL SELECT 7 AS nid, -0.3250280638871503 AS "E" FROM DUAL UNION ALL SELECT 10 AS nid, 1.3490029638835022 AS "E" FROM DUAL UNION ALL SELECT 11 AS nid, -1.864903415871084 AS "E" FROM DUAL UNION ALL SELECT 12 AS nid, 1.3490029638835022 AS "E" FROM DUAL) "Values"), 
"DT_Output_3" AS 
(SELECT "DT_node_lookup_3"."KEY" AS "KEY", "DT_node_lookup_3".node_id_2 AS node_id_2, "DT_node_data_3".nid AS nid, "DT_node_data_3"."E" AS "E" 
FROM "DT_node_lookup_3" LEFT OUTER JOIN "DT_node_data_3" ON "DT_node_lookup_3".node_id_2 = "DT_node_data_3".nid), 
"GB_Model_3_0" AS 
(SELECT "DT_Output_3"."KEY" AS "KEY", -"DT_Output_3"."E" AS "Score_0", 0.0 AS "Score_1" 
FROM "DT_Output_3"), 
"GB_Model_3_1" AS 
(SELECT "DT_Output_3"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_3"."E" AS "Score_1" 
FROM "DT_Output_3"), 
"DT_node_lookup_4" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_27" <= 0.14544999599456787) THEN CASE WHEN ("ADS"."Feature_22" <= 122.05000305175781) THEN CASE WHEN ("ADS"."Feature_13" <= 48.974998474121094) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_26" <= 0.16955000162124634) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_16" <= 0.13565000891685486) THEN CASE WHEN ("ADS"."Feature_26" <= 0.20340000092983246) THEN 10 ELSE 11 END ELSE 12 END END AS node_id_2 
FROM "BREASTCANCER" "ADS"), 
"DT_node_data_4" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS BINARY_DOUBLE) AS "E" 
FROM (SELECT 3 AS nid, 1.2252582301094506 AS "E" FROM DUAL UNION ALL SELECT 4 AS nid, -0.6444012093376688 AS "E" FROM DUAL UNION ALL SELECT 6 AS nid, -1.8831833870360208 AS "E" FROM DUAL UNION ALL SELECT 7 AS nid, -1.7537720394216378 AS "E" FROM DUAL UNION ALL SELECT 10 AS nid, 1.304959846853716 AS "E" FROM DUAL UNION ALL SELECT 11 AS nid, -1.7123629964831781 AS "E" FROM DUAL UNION ALL SELECT 12 AS nid, 1.304959846853716 AS "E" FROM DUAL) "Values"), 
"DT_Output_4" AS 
(SELECT "DT_node_lookup_4"."KEY" AS "KEY", "DT_node_lookup_4".node_id_2 AS node_id_2, "DT_node_data_4".nid AS nid, "DT_node_data_4"."E" AS "E" 
FROM "DT_node_lookup_4" LEFT OUTER JOIN "DT_node_data_4" ON "DT_node_lookup_4".node_id_2 = "DT_node_data_4".nid), 
"GB_Model_4_0" AS 
(SELECT "DT_Output_4"."KEY" AS "KEY", -"DT_Output_4"."E" AS "Score_0", 0.0 AS "Score_1" 
FROM "DT_Output_4"), 
"GB_Model_4_1" AS 
(SELECT "DT_Output_4"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_4"."E" AS "Score_1" 
FROM "DT_Output_4")
 SELECT "GB_B0"."KEY", "GB_B0"."Score_0", "GB_B0"."Score_1" 
FROM (SELECT "GB_esu_0"."KEY" AS "KEY", "GB_esu_0"."Score_0" AS "Score_0", "GB_esu_0"."Score_1" AS "Score_1" 
FROM (SELECT "GB_Model_0_0"."KEY" AS "KEY", "GB_Model_0_0"."Score_0" AS "Score_0", "GB_Model_0_0"."Score_1" AS "Score_1" 
FROM "GB_Model_0_0" UNION ALL SELECT "GB_Model_0_1"."KEY" AS "KEY", "GB_Model_0_1"."Score_0" AS "Score_0", "GB_Model_0_1"."Score_1" AS "Score_1" 
FROM "GB_Model_0_1" UNION ALL SELECT "GB_Model_1_0"."KEY" AS "KEY", "GB_Model_1_0"."Score_0" AS "Score_0", "GB_Model_1_0"."Score_1" AS "Score_1" 
FROM "GB_Model_1_0" UNION ALL SELECT "GB_Model_1_1"."KEY" AS "KEY", "GB_Model_1_1"."Score_0" AS "Score_0", "GB_Model_1_1"."Score_1" AS "Score_1" 
FROM "GB_Model_1_1" UNION ALL SELECT "GB_Model_2_0"."KEY" AS "KEY", "GB_Model_2_0"."Score_0" AS "Score_0", "GB_Model_2_0"."Score_1" AS "Score_1" 
FROM "GB_Model_2_0" UNION ALL SELECT "GB_Model_2_1"."KEY" AS "KEY", "GB_Model_2_1"."Score_0" AS "Score_0", "GB_Model_2_1"."Score_1" AS "Score_1" 
FROM "GB_Model_2_1" UNION ALL SELECT "GB_Model_3_0"."KEY" AS "KEY", "GB_Model_3_0"."Score_0" AS "Score_0", "GB_Model_3_0"."Score_1" AS "Score_1" 
FROM "GB_Model_3_0" UNION ALL SELECT "GB_Model_3_1"."KEY" AS "KEY", "GB_Model_3_1"."Score_0" AS "Score_0", "GB_Model_3_1"."Score_1" AS "Score_1" 
FROM "GB_Model_3_1" UNION ALL SELECT "GB_Model_4_0"."KEY" AS "KEY", "GB_Model_4_0"."Score_0" AS "Score_0", "GB_Model_4_0"."Score_1" AS "Score_1" 
FROM "GB_Model_4_0" UNION ALL SELECT "GB_Model_4_1"."KEY" AS "KEY", "GB_Model_4_1"."Score_0" AS "Score_0", "GB_Model_4_1"."Score_1" AS "Score_1" 
FROM "GB_Model_4_1") "GB_esu_0") "GB_B0") "U"

-- Code For temporary table TMP_20180602_GIM_GB_B1 part 1. Create 


CREATE GLOBAL TEMPORARY TABLE "TMP_20180602_GIM_GB_B1" (
	"KEY" NUMBER(19), 
	"Score_0" BINARY_DOUBLE, 
	"Score_1" BINARY_DOUBLE
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table TMP_20180602_GIM_GB_B1 part 2. Populate

INSERT INTO "TMP_20180602_GIM_GB_B1" ("KEY", "Score_0", "Score_1") SELECT "U"."KEY", "U"."Score_0", "U"."Score_1" 
FROM (WITH "DT_node_lookup_5" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_27" <= 0.14544999599456787) THEN CASE WHEN ("ADS"."Feature_23" <= 961.550048828125) THEN CASE WHEN ("ADS"."Feature_27" <= 0.12229999899864197) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_26" <= 0.1906999945640564) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_16" <= 0.13565000891685486) THEN CASE WHEN ("ADS"."Feature_26" <= 0.20340000092983246) THEN 10 ELSE 11 END ELSE 12 END END AS node_id_2 
FROM "BREASTCANCER" "ADS"), 
"DT_node_data_5" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS BINARY_DOUBLE) AS "E" 
FROM (SELECT 3 AS nid, 1.2415089447386418 AS "E" FROM DUAL UNION ALL SELECT 4 AS nid, 0.30503527183452517 AS "E" FROM DUAL UNION ALL SELECT 6 AS nid, -0.21670809809280697 AS "E" FROM DUAL UNION ALL SELECT 7 AS nid, -1.7137770178917424 AS "E" FROM DUAL UNION ALL SELECT 10 AS nid, 1.2676510643808934 AS "E" FROM DUAL UNION ALL SELECT 11 AS nid, -1.5947285027219134 AS "E" FROM DUAL UNION ALL SELECT 12 AS nid, 1.2676510643808934 AS "E" FROM DUAL) "Values"), 
"DT_Output_5" AS 
(SELECT "DT_node_lookup_5"."KEY" AS "KEY", "DT_node_lookup_5".node_id_2 AS node_id_2, "DT_node_data_5".nid AS nid, "DT_node_data_5"."E" AS "E" 
FROM "DT_node_lookup_5" LEFT OUTER JOIN "DT_node_data_5" ON "DT_node_lookup_5".node_id_2 = "DT_node_data_5".nid), 
"GB_Model_5_0" AS 
(SELECT "DT_Output_5"."KEY" AS "KEY", -"DT_Output_5"."E" AS "Score_0", 0.0 AS "Score_1" 
FROM "DT_Output_5"), 
"GB_Model_5_1" AS 
(SELECT "DT_Output_5"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_5"."E" AS "Score_1" 
FROM "DT_Output_5"), 
"DT_node_lookup_6" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_27" <= 0.14544999599456787) THEN CASE WHEN ("ADS"."Feature_23" <= 961.550048828125) THEN CASE WHEN ("ADS"."Feature_10" <= 1.0475499629974365) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_24" <= 0.0879800021648407) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_16" <= 0.13565000891685486) THEN CASE WHEN ("ADS"."Feature_26" <= 0.20340000092983246) THEN 10 ELSE 11 END ELSE 12 END END AS node_id_2 
FROM "BREASTCANCER" "ADS"), 
"DT_node_data_6" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS BINARY_DOUBLE) AS "E" 
FROM (SELECT 3 AS nid, 1.1431754507972833 AS "E" FROM DUAL UNION ALL SELECT 4 AS nid, -2.154747136176465 AS "E" FROM DUAL UNION ALL SELECT 6 AS nid, 1.3937977212659114 AS "E" FROM DUAL UNION ALL SELECT 7 AS nid, -1.4053585903840005 AS "E" FROM DUAL UNION ALL SELECT 10 AS nid, 1.2357846827064884 AS "E" FROM DUAL UNION ALL SELECT 11 AS nid, -1.5013341803568825 AS "E" FROM DUAL UNION ALL SELECT 12 AS nid, 1.2357846827064884 AS "E" FROM DUAL) "Values"), 
"DT_Output_6" AS 
(SELECT "DT_node_lookup_6"."KEY" AS "KEY", "DT_node_lookup_6".node_id_2 AS node_id_2, "DT_node_data_6".nid AS nid, "DT_node_data_6"."E" AS "E" 
FROM "DT_node_lookup_6" LEFT OUTER JOIN "DT_node_data_6" ON "DT_node_lookup_6".node_id_2 = "DT_node_data_6".nid), 
"GB_Model_6_0" AS 
(SELECT "DT_Output_6"."KEY" AS "KEY", -"DT_Output_6"."E" AS "Score_0", 0.0 AS "Score_1" 
FROM "DT_Output_6"), 
"GB_Model_6_1" AS 
(SELECT "DT_Output_6"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_6"."E" AS "Score_1" 
FROM "DT_Output_6"), 
"DT_node_lookup_7" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_27" <= 0.14544999599456787) THEN CASE WHEN ("ADS"."Feature_22" <= 122.05000305175781) THEN CASE WHEN ("ADS"."Feature_13" <= 48.974998474121094) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_5" <= 0.06695500016212463) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_16" <= 0.13565000891685486) THEN CASE WHEN ("ADS"."Feature_6" <= 0.08588500320911407) THEN 10 ELSE 11 END ELSE 12 END END AS node_id_2 
FROM "BREASTCANCER" "ADS"), 
"DT_node_data_7" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS BINARY_DOUBLE) AS "E" 
FROM (SELECT 3 AS nid, 1.1140638313109361 AS "E" FROM DUAL UNION ALL SELECT 4 AS nid, -0.6850547208862369 AS "E" FROM DUAL UNION ALL SELECT 6 AS nid, -1.622042151312407 AS "E" FROM DUAL UNION ALL SELECT 7 AS nid, -1.463316569996885 AS "E" FROM DUAL UNION ALL SELECT 10 AS nid, -0.6223244208798957 AS "E" FROM DUAL UNION ALL SELECT 11 AS nid, -1.458362111766775 AS "E" FROM DUAL UNION ALL SELECT 12 AS nid, 1.2083752537625256 AS "E" FROM DUAL) "Values"), 
"DT_Output_7" AS 
(SELECT "DT_node_lookup_7"."KEY" AS "KEY", "DT_node_lookup_7".node_id_2 AS node_id_2, "DT_node_data_7".nid AS nid, "DT_node_data_7"."E" AS "E" 
FROM "DT_node_lookup_7" LEFT OUTER JOIN "DT_node_data_7" ON "DT_node_lookup_7".node_id_2 = "DT_node_data_7".nid), 
"GB_Model_7_0" AS 
(SELECT "DT_Output_7"."KEY" AS "KEY", -"DT_Output_7"."E" AS "Score_0", 0.0 AS "Score_1" 
FROM "DT_Output_7"), 
"GB_Model_7_1" AS 
(SELECT "DT_Output_7"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_7"."E" AS "Score_1" 
FROM "DT_Output_7"), 
"DT_node_lookup_8" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_22" <= 113.14999389648438) THEN CASE WHEN ("ADS"."Feature_27" <= 0.13580000400543213) THEN CASE WHEN ("ADS"."Feature_13" <= 48.974998474121094) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_27" <= 0.13905000686645508) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_23" <= 810.25) THEN CASE WHEN ("ADS"."Feature_6" <= 0.15735000371932983) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_11" <= 0.43689998984336853) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "BREASTCANCER" "ADS"), 
"DT_node_data_8" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS BINARY_DOUBLE) AS "E" 
FROM (SELECT 3 AS nid, 1.170082852660399 AS "E" FROM DUAL UNION ALL SELECT 4 AS nid, -0.7688817876615806 AS "E" FROM DUAL UNION ALL SELECT 6 AS nid, -5.312663161823737 AS "E" FROM DUAL UNION ALL SELECT 7 AS nid, -0.3499135131559847 AS "E" FROM DUAL UNION ALL SELECT 10 AS nid, 1.2604609511249625 AS "E" FROM DUAL UNION ALL SELECT 11 AS nid, -1.39616203133061 AS "E" FROM DUAL UNION ALL SELECT 13 AS nid, 1.2045413152456894 AS "E" FROM DUAL UNION ALL SELECT 14 AS nid, -1.375147552727802 AS "E" FROM DUAL) "Values"), 
"DT_Output_8" AS 
(SELECT "DT_node_lookup_8"."KEY" AS "KEY", "DT_node_lookup_8".node_id_2 AS node_id_2, "DT_node_data_8".nid AS nid, "DT_node_data_8"."E" AS "E" 
FROM "DT_node_lookup_8" LEFT OUTER JOIN "DT_node_data_8" ON "DT_node_lookup_8".node_id_2 = "DT_node_data_8".nid), 
"GB_Model_8_0" AS 
(SELECT "DT_Output_8"."KEY" AS "KEY", -"DT_Output_8"."E" AS "Score_0", 0.0 AS "Score_1" 
FROM "DT_Output_8"), 
"GB_Model_8_1" AS 
(SELECT "DT_Output_8"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_8"."E" AS "Score_1" 
FROM "DT_Output_8"), 
"DT_node_lookup_9" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_27" <= 0.14544999599456787) THEN CASE WHEN ("ADS"."Feature_22" <= 122.05000305175781) THEN CASE WHEN ("ADS"."Feature_18" <= 0.010335000231862068) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_5" <= 0.06695500016212463) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_16" <= 0.13565000891685486) THEN CASE WHEN ("ADS"."Feature_6" <= 0.08588500320911407) THEN 10 ELSE 11 END ELSE 12 END END AS node_id_2 
FROM "BREASTCANCER" "ADS"), 
"DT_node_data_9" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS BINARY_DOUBLE) AS "E" 
FROM (SELECT 3 AS nid, -1.2313893936130431 AS "E" FROM DUAL UNION ALL SELECT 4 AS nid, 1.0404918231271474 AS "E" FROM DUAL UNION ALL SELECT 6 AS nid, -1.4609496820265393 AS "E" FROM DUAL UNION ALL SELECT 7 AS nid, -1.348935694543427 AS "E" FROM DUAL UNION ALL SELECT 10 AS nid, -0.4909139260216936 AS "E" FROM DUAL UNION ALL SELECT 11 AS nid, -1.3496117136742993 AS "E" FROM DUAL UNION ALL SELECT 12 AS nid, 1.1912333451680777 AS "E" FROM DUAL) "Values"), 
"DT_Output_9" AS 
(SELECT "DT_node_lookup_9"."KEY" AS "KEY", "DT_node_lookup_9".node_id_2 AS node_id_2, "DT_node_data_9".nid AS nid, "DT_node_data_9"."E" AS "E" 
FROM "DT_node_lookup_9" LEFT OUTER JOIN "DT_node_data_9" ON "DT_node_lookup_9".node_id_2 = "DT_node_data_9".nid), 
"GB_Model_9_0" AS 
(SELECT "DT_Output_9"."KEY" AS "KEY", -"DT_Output_9"."E" AS "Score_0", 0.0 AS "Score_1" 
FROM "DT_Output_9"), 
"GB_Model_9_1" AS 
(SELECT "DT_Output_9"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_9"."E" AS "Score_1" 
FROM "DT_Output_9")
 SELECT "GB_B1"."KEY", "GB_B1"."Score_0", "GB_B1"."Score_1" 
FROM (SELECT "GB_esu_1"."KEY" AS "KEY", "GB_esu_1"."Score_0" AS "Score_0", "GB_esu_1"."Score_1" AS "Score_1" 
FROM (SELECT "GB_Model_5_0"."KEY" AS "KEY", "GB_Model_5_0"."Score_0" AS "Score_0", "GB_Model_5_0"."Score_1" AS "Score_1" 
FROM "GB_Model_5_0" UNION ALL SELECT "GB_Model_5_1"."KEY" AS "KEY", "GB_Model_5_1"."Score_0" AS "Score_0", "GB_Model_5_1"."Score_1" AS "Score_1" 
FROM "GB_Model_5_1" UNION ALL SELECT "GB_Model_6_0"."KEY" AS "KEY", "GB_Model_6_0"."Score_0" AS "Score_0", "GB_Model_6_0"."Score_1" AS "Score_1" 
FROM "GB_Model_6_0" UNION ALL SELECT "GB_Model_6_1"."KEY" AS "KEY", "GB_Model_6_1"."Score_0" AS "Score_0", "GB_Model_6_1"."Score_1" AS "Score_1" 
FROM "GB_Model_6_1" UNION ALL SELECT "GB_Model_7_0"."KEY" AS "KEY", "GB_Model_7_0"."Score_0" AS "Score_0", "GB_Model_7_0"."Score_1" AS "Score_1" 
FROM "GB_Model_7_0" UNION ALL SELECT "GB_Model_7_1"."KEY" AS "KEY", "GB_Model_7_1"."Score_0" AS "Score_0", "GB_Model_7_1"."Score_1" AS "Score_1" 
FROM "GB_Model_7_1" UNION ALL SELECT "GB_Model_8_0"."KEY" AS "KEY", "GB_Model_8_0"."Score_0" AS "Score_0", "GB_Model_8_0"."Score_1" AS "Score_1" 
FROM "GB_Model_8_0" UNION ALL SELECT "GB_Model_8_1"."KEY" AS "KEY", "GB_Model_8_1"."Score_0" AS "Score_0", "GB_Model_8_1"."Score_1" AS "Score_1" 
FROM "GB_Model_8_1" UNION ALL SELECT "GB_Model_9_0"."KEY" AS "KEY", "GB_Model_9_0"."Score_0" AS "Score_0", "GB_Model_9_0"."Score_1" AS "Score_1" 
FROM "GB_Model_9_0" UNION ALL SELECT "GB_Model_9_1"."KEY" AS "KEY", "GB_Model_9_1"."Score_0" AS "Score_0", "GB_Model_9_1"."Score_1" AS "Score_1" 
FROM "GB_Model_9_1") "GB_esu_1") "GB_B1") "U"

-- Code For temporary table TMP_20180602_PN2_GB_B2 part 1. Create 


CREATE GLOBAL TEMPORARY TABLE "TMP_20180602_PN2_GB_B2" (
	"KEY" NUMBER(19), 
	"Score_0" BINARY_DOUBLE, 
	"Score_1" BINARY_DOUBLE
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table TMP_20180602_PN2_GB_B2 part 2. Populate

INSERT INTO "TMP_20180602_PN2_GB_B2" ("KEY", "Score_0", "Score_1") SELECT "U"."KEY", "U"."Score_0", "U"."Score_1" 
FROM (WITH "DT_node_lookup_10" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_22" <= 113.14999389648438) THEN CASE WHEN ("ADS"."Feature_27" <= 0.13580000400543213) THEN CASE WHEN ("ADS"."Feature_13" <= 38.60499954223633) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_27" <= 0.13905000686645508) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_23" <= 810.25) THEN CASE WHEN ("ADS"."Feature_5" <= 0.1907999962568283) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_22" <= 113.25) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "BREASTCANCER" "ADS"), 
"DT_node_data_10" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS BINARY_DOUBLE) AS "E" 
FROM (SELECT 3 AS nid, 1.1573788010278787 AS "E" FROM DUAL UNION ALL SELECT 4 AS nid, -0.24332334325649765 AS "E" FROM DUAL UNION ALL SELECT 6 AS nid, -3.813244609114664 AS "E" FROM DUAL UNION ALL SELECT 7 AS nid, -0.28311533886774737 AS "E" FROM DUAL UNION ALL SELECT 10 AS nid, 1.2081843772263323 AS "E" FROM DUAL UNION ALL SELECT 11 AS nid, -1.301040835931553 AS "E" FROM DUAL UNION ALL SELECT 13 AS nid, -5.5232853654050516 AS "E" FROM DUAL UNION ALL SELECT 14 AS nid, -1.228061813737884 AS "E" FROM DUAL) "Values"), 
"DT_Output_10" AS 
(SELECT "DT_node_lookup_10"."KEY" AS "KEY", "DT_node_lookup_10".node_id_2 AS node_id_2, "DT_node_data_10".nid AS nid, "DT_node_data_10"."E" AS "E" 
FROM "DT_node_lookup_10" LEFT OUTER JOIN "DT_node_data_10" ON "DT_node_lookup_10".node_id_2 = "DT_node_data_10".nid), 
"GB_Model_10_0" AS 
(SELECT "DT_Output_10"."KEY" AS "KEY", -"DT_Output_10"."E" AS "Score_0", 0.0 AS "Score_1" 
FROM "DT_Output_10"), 
"GB_Model_10_1" AS 
(SELECT "DT_Output_10"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_10"."E" AS "Score_1" 
FROM "DT_Output_10"), 
"DT_node_lookup_11" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_27" <= 0.14544999599456787) THEN CASE WHEN ("ADS"."Feature_22" <= 122.05000305175781) THEN CASE WHEN ("ADS"."Feature_13" <= 48.974998474121094) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_16" <= 0.01334499940276146) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_16" <= 0.13565000891685486) THEN CASE WHEN ("ADS"."Feature_26" <= 0.20340000092983246) THEN 10 ELSE 11 END ELSE 12 END END AS node_id_2 
FROM "BREASTCANCER" "ADS"), 
"DT_node_data_11" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS BINARY_DOUBLE) AS "E" 
FROM (SELECT 3 AS nid, 1.0130050080939823 AS "E" FROM DUAL UNION ALL SELECT 4 AS nid, -0.6085975537753274 AS "E" FROM DUAL UNION ALL SELECT 6 AS nid, -1.35226641067665 AS "E" FROM DUAL UNION ALL SELECT 7 AS nid, -1.2697380467331816 AS "E" FROM DUAL UNION ALL SELECT 10 AS nid, 1.248133592056964 AS "E" FROM DUAL UNION ALL SELECT 11 AS nid, -1.2355331057844585 AS "E" FROM DUAL UNION ALL SELECT 12 AS nid, 1.174632293648151 AS "E" FROM DUAL) "Values"), 
"DT_Output_11" AS 
(SELECT "DT_node_lookup_11"."KEY" AS "KEY", "DT_node_lookup_11".node_id_2 AS node_id_2, "DT_node_data_11".nid AS nid, "DT_node_data_11"."E" AS "E" 
FROM "DT_node_lookup_11" LEFT OUTER JOIN "DT_node_data_11" ON "DT_node_lookup_11".node_id_2 = "DT_node_data_11".nid), 
"GB_Model_11_0" AS 
(SELECT "DT_Output_11"."KEY" AS "KEY", -"DT_Output_11"."E" AS "Score_0", 0.0 AS "Score_1" 
FROM "DT_Output_11"), 
"GB_Model_11_1" AS 
(SELECT "DT_Output_11"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_11"."E" AS "Score_1" 
FROM "DT_Output_11"), 
"DT_node_lookup_12" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_7" <= 0.04891999810934067) THEN CASE WHEN ("ADS"."Feature_13" <= 48.70000076293945) THEN CASE WHEN ("ADS"."Feature_20" <= 16.829999923706055) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_5" <= 0.06257499754428864) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_26" <= 0.2248000055551529) THEN CASE WHEN ("ADS"."Feature_2" <= 108.0) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_1" <= 15.425000190734863) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "BREASTCANCER" "ADS"), 
"DT_node_data_12" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS BINARY_DOUBLE) AS "E" 
FROM (SELECT 3 AS nid, 1.1129323613426614 AS "E" FROM DUAL UNION ALL SELECT 4 AS nid, -0.3833120183862359 AS "E" FROM DUAL UNION ALL SELECT 6 AS nid, -2.512518864432701 AS "E" FROM DUAL UNION ALL SELECT 7 AS nid, 1.3964432581512807 AS "E" FROM DUAL UNION ALL SELECT 10 AS nid, 1.175433734908052 AS "E" FROM DUAL UNION ALL SELECT 11 AS nid, -1.2330697012930862 AS "E" FROM DUAL UNION ALL SELECT 13 AS nid, 0.13615090246014946 AS "E" FROM DUAL UNION ALL SELECT 14 AS nid, -1.2503365564467128 AS "E" FROM DUAL) "Values"), 
"DT_Output_12" AS 
(SELECT "DT_node_lookup_12"."KEY" AS "KEY", "DT_node_lookup_12".node_id_2 AS node_id_2, "DT_node_data_12".nid AS nid, "DT_node_data_12"."E" AS "E" 
FROM "DT_node_lookup_12" LEFT OUTER JOIN "DT_node_data_12" ON "DT_node_lookup_12".node_id_2 = "DT_node_data_12".nid), 
"GB_Model_12_0" AS 
(SELECT "DT_Output_12"."KEY" AS "KEY", -"DT_Output_12"."E" AS "Score_0", 0.0 AS "Score_1" 
FROM "DT_Output_12"), 
"GB_Model_12_1" AS 
(SELECT "DT_Output_12"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_12"."E" AS "Score_1" 
FROM "DT_Output_12"), 
"DT_node_lookup_13" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_27" <= 0.13099999725818634) THEN CASE WHEN ("ADS"."Feature_23" <= 1058.0) THEN CASE WHEN ("ADS"."Feature_14" <= 0.002832000143826008) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_5" <= 0.06695500016212463) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_20" <= 15.46500015258789) THEN CASE WHEN ("ADS"."Feature_27" <= 0.18074999749660492) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_21" <= 21.674999237060547) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "BREASTCANCER" "ADS"), 
"DT_node_data_13" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS BINARY_DOUBLE) AS "E" 
FROM (SELECT 3 AS nid, -1.728247179407999 AS "E" FROM DUAL UNION ALL SELECT 4 AS nid, 1.0122933091300323 AS "E" FROM DUAL UNION ALL SELECT 6 AS nid, -1.2961392831818679 AS "E" FROM DUAL UNION ALL SELECT 7 AS nid, -1.2121769656039516 AS "E" FROM DUAL UNION ALL SELECT 10 AS nid, 1.1616683622263533 AS "E" FROM DUAL UNION ALL SELECT 11 AS nid, -1.253400761953175 AS "E" FROM DUAL UNION ALL SELECT 13 AS nid, -0.2370429284357811 AS "E" FROM DUAL UNION ALL SELECT 14 AS nid, -1.2514709178702141 AS "E" FROM DUAL) "Values"), 
"DT_Output_13" AS 
(SELECT "DT_node_lookup_13"."KEY" AS "KEY", "DT_node_lookup_13".node_id_2 AS node_id_2, "DT_node_data_13".nid AS nid, "DT_node_data_13"."E" AS "E" 
FROM "DT_node_lookup_13" LEFT OUTER JOIN "DT_node_data_13" ON "DT_node_lookup_13".node_id_2 = "DT_node_data_13".nid), 
"GB_Model_13_0" AS 
(SELECT "DT_Output_13"."KEY" AS "KEY", -"DT_Output_13"."E" AS "Score_0", 0.0 AS "Score_1" 
FROM "DT_Output_13"), 
"GB_Model_13_1" AS 
(SELECT "DT_Output_13"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_13"."E" AS "Score_1" 
FROM "DT_Output_13"), 
"DT_node_lookup_14" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_7" <= 0.04891999810934067) THEN CASE WHEN ("ADS"."Feature_13" <= 48.70000076293945) THEN CASE WHEN ("ADS"."Feature_23" <= 1058.0) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_19" <= 0.004316499922424555) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_23" <= 784.1500244140625) THEN CASE WHEN ("ADS"."Feature_21" <= 25.744998931884766) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_7" <= 0.050599999725818634) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "BREASTCANCER" "ADS"), 
"DT_node_data_14" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS BINARY_DOUBLE) AS "E" 
FROM (SELECT 3 AS nid, 1.015313346764975 AS "E" FROM DUAL UNION ALL SELECT 4 AS nid, -1.2320153919118215 AS "E" FROM DUAL UNION ALL SELECT 6 AS nid, -2.340648965439501 AS "E" FROM DUAL UNION ALL SELECT 7 AS nid, 1.311580978429844 AS "E" FROM DUAL UNION ALL SELECT 10 AS nid, 1.4370603152604646 AS "E" FROM DUAL UNION ALL SELECT 11 AS nid, -1.0100591137193176 AS "E" FROM DUAL UNION ALL SELECT 13 AS nid, -6.67333385029474 AS "E" FROM DUAL UNION ALL SELECT 14 AS nid, -1.1537588917855885 AS "E" FROM DUAL) "Values"), 
"DT_Output_14" AS 
(SELECT "DT_node_lookup_14"."KEY" AS "KEY", "DT_node_lookup_14".node_id_2 AS node_id_2, "DT_node_data_14".nid AS nid, "DT_node_data_14"."E" AS "E" 
FROM "DT_node_lookup_14" LEFT OUTER JOIN "DT_node_data_14" ON "DT_node_lookup_14".node_id_2 = "DT_node_data_14".nid), 
"GB_Model_14_0" AS 
(SELECT "DT_Output_14"."KEY" AS "KEY", -"DT_Output_14"."E" AS "Score_0", 0.0 AS "Score_1" 
FROM "DT_Output_14"), 
"GB_Model_14_1" AS 
(SELECT "DT_Output_14"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_14"."E" AS "Score_1" 
FROM "DT_Output_14")
 SELECT "GB_B2"."KEY", "GB_B2"."Score_0", "GB_B2"."Score_1" 
FROM (SELECT "GB_esu_2"."KEY" AS "KEY", "GB_esu_2"."Score_0" AS "Score_0", "GB_esu_2"."Score_1" AS "Score_1" 
FROM (SELECT "GB_Model_10_0"."KEY" AS "KEY", "GB_Model_10_0"."Score_0" AS "Score_0", "GB_Model_10_0"."Score_1" AS "Score_1" 
FROM "GB_Model_10_0" UNION ALL SELECT "GB_Model_10_1"."KEY" AS "KEY", "GB_Model_10_1"."Score_0" AS "Score_0", "GB_Model_10_1"."Score_1" AS "Score_1" 
FROM "GB_Model_10_1" UNION ALL SELECT "GB_Model_11_0"."KEY" AS "KEY", "GB_Model_11_0"."Score_0" AS "Score_0", "GB_Model_11_0"."Score_1" AS "Score_1" 
FROM "GB_Model_11_0" UNION ALL SELECT "GB_Model_11_1"."KEY" AS "KEY", "GB_Model_11_1"."Score_0" AS "Score_0", "GB_Model_11_1"."Score_1" AS "Score_1" 
FROM "GB_Model_11_1" UNION ALL SELECT "GB_Model_12_0"."KEY" AS "KEY", "GB_Model_12_0"."Score_0" AS "Score_0", "GB_Model_12_0"."Score_1" AS "Score_1" 
FROM "GB_Model_12_0" UNION ALL SELECT "GB_Model_12_1"."KEY" AS "KEY", "GB_Model_12_1"."Score_0" AS "Score_0", "GB_Model_12_1"."Score_1" AS "Score_1" 
FROM "GB_Model_12_1" UNION ALL SELECT "GB_Model_13_0"."KEY" AS "KEY", "GB_Model_13_0"."Score_0" AS "Score_0", "GB_Model_13_0"."Score_1" AS "Score_1" 
FROM "GB_Model_13_0" UNION ALL SELECT "GB_Model_13_1"."KEY" AS "KEY", "GB_Model_13_1"."Score_0" AS "Score_0", "GB_Model_13_1"."Score_1" AS "Score_1" 
FROM "GB_Model_13_1" UNION ALL SELECT "GB_Model_14_0"."KEY" AS "KEY", "GB_Model_14_0"."Score_0" AS "Score_0", "GB_Model_14_0"."Score_1" AS "Score_1" 
FROM "GB_Model_14_0" UNION ALL SELECT "GB_Model_14_1"."KEY" AS "KEY", "GB_Model_14_1"."Score_0" AS "Score_0", "GB_Model_14_1"."Score_1" AS "Score_1" 
FROM "GB_Model_14_1") "GB_esu_2") "GB_B2") "U"

-- Code For temporary table TMP_20180602_FKU_GB_B3 part 1. Create 


CREATE GLOBAL TEMPORARY TABLE "TMP_20180602_FKU_GB_B3" (
	"KEY" NUMBER(19), 
	"Score_0" BINARY_DOUBLE, 
	"Score_1" BINARY_DOUBLE
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table TMP_20180602_FKU_GB_B3 part 2. Populate

INSERT INTO "TMP_20180602_FKU_GB_B3" ("KEY", "Score_0", "Score_1") SELECT "U"."KEY", "U"."Score_0", "U"."Score_1" 
FROM (WITH "DT_node_lookup_15" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_22" <= 113.14999389648438) THEN CASE WHEN ("ADS"."Feature_27" <= 0.16029998660087585) THEN CASE WHEN ("ADS"."Feature_27" <= 0.15850000083446503) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_15" <= 0.08032000064849854) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_22" <= 113.25) THEN 9 ELSE CASE WHEN ("ADS"."Feature_7" <= 0.050085000693798065) THEN 11 ELSE 12 END END END AS node_id_2 
FROM "BREASTCANCER" "ADS"), 
"DT_node_data_15" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS BINARY_DOUBLE) AS "E" 
FROM (SELECT 3 AS nid, 0.8646324817801285 AS "E" FROM DUAL UNION ALL SELECT 4 AS nid, 3.5719361261467393 AS "E" FROM DUAL UNION ALL SELECT 6 AS nid, -1.205331690676246 AS "E" FROM DUAL UNION ALL SELECT 7 AS nid, 1.111745945147061 AS "E" FROM DUAL UNION ALL SELECT 9 AS nid, -3.708144152948966 AS "E" FROM DUAL UNION ALL SELECT 11 AS nid, -0.010190020632271308 AS "E" FROM DUAL UNION ALL SELECT 12 AS nid, -1.146306323182662 AS "E" FROM DUAL) "Values"), 
"DT_Output_15" AS 
(SELECT "DT_node_lookup_15"."KEY" AS "KEY", "DT_node_lookup_15".node_id_2 AS node_id_2, "DT_node_data_15".nid AS nid, "DT_node_data_15"."E" AS "E" 
FROM "DT_node_lookup_15" LEFT OUTER JOIN "DT_node_data_15" ON "DT_node_lookup_15".node_id_2 = "DT_node_data_15".nid), 
"GB_Model_15_0" AS 
(SELECT "DT_Output_15"."KEY" AS "KEY", -"DT_Output_15"."E" AS "Score_0", 0.0 AS "Score_1" 
FROM "DT_Output_15"), 
"GB_Model_15_1" AS 
(SELECT "DT_Output_15"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_15"."E" AS "Score_1" 
FROM "DT_Output_15")
 SELECT "GB_B3"."KEY", "GB_B3"."Score_0", "GB_B3"."Score_1" 
FROM (SELECT "GB_esu_3"."KEY" AS "KEY", "GB_esu_3"."Score_0" AS "Score_0", "GB_esu_3"."Score_1" AS "Score_1" 
FROM (SELECT "GB_Model_15_0"."KEY" AS "KEY", "GB_Model_15_0"."Score_0" AS "Score_0", "GB_Model_15_0"."Score_1" AS "Score_1" 
FROM "GB_Model_15_0" UNION ALL SELECT "GB_Model_15_1"."KEY" AS "KEY", "GB_Model_15_1"."Score_0" AS "Score_0", "GB_Model_15_1"."Score_1" AS "Score_1" 
FROM "GB_Model_15_1") "GB_esu_3") "GB_B3") "U"

-- Code For temporary table TMP_20180602_MO8_GB_SUM part 1. Create 


CREATE GLOBAL TEMPORARY TABLE "TMP_20180602_MO8_GB_SUM" (
	"KEY" NUMBER(19), 
	"Score_0" BINARY_DOUBLE, 
	"Score_1" BINARY_DOUBLE
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table TMP_20180602_MO8_GB_SUM part 2. Populate

INSERT INTO "TMP_20180602_MO8_GB_SUM" ("KEY", "Score_0", "Score_1") SELECT "U"."KEY", "U"."Score_0", "U"."Score_1" 
FROM (WITH "GB_Union" AS 
(SELECT "GB_EnsembleUnion"."KEY" AS "KEY", "GB_EnsembleUnion"."Score_0" AS "Score_0", "GB_EnsembleUnion"."Score_1" AS "Score_1" 
FROM (SELECT "GB_B0"."KEY" AS "KEY", "GB_B0"."Score_0" AS "Score_0", "GB_B0"."Score_1" AS "Score_1" 
FROM "TMP_20180602_VT4_GB_B0" "GB_B0" UNION ALL SELECT "GB_B1"."KEY" AS "KEY", "GB_B1"."Score_0" AS "Score_0", "GB_B1"."Score_1" AS "Score_1" 
FROM "TMP_20180602_GIM_GB_B1" "GB_B1" UNION ALL SELECT "GB_B2"."KEY" AS "KEY", "GB_B2"."Score_0" AS "Score_0", "GB_B2"."Score_1" AS "Score_1" 
FROM "TMP_20180602_PN2_GB_B2" "GB_B2" UNION ALL SELECT "GB_B3"."KEY" AS "KEY", "GB_B3"."Score_0" AS "Score_0", "GB_B3"."Score_1" AS "Score_1" 
FROM "TMP_20180602_FKU_GB_B3" "GB_B3") "GB_EnsembleUnion")
 SELECT "GB_sum"."KEY", "GB_sum"."Score_0", "GB_sum"."Score_1" 
FROM (SELECT "T"."KEY" AS "KEY", CAST("T"."Score_0" AS BINARY_DOUBLE) AS "Score_0", CAST("T"."Score_1" AS BINARY_DOUBLE) AS "Score_1" 
FROM (SELECT "GB_Union"."KEY" AS "KEY", sum("GB_Union"."Score_0") AS "Score_0", sum("GB_Union"."Score_1") AS "Score_1" 
FROM "GB_Union" GROUP BY "GB_Union"."KEY") "T") "GB_sum") "U"

-- Model deployment code

WITH orig_cte AS 
(SELECT "GB_sum"."KEY" AS "KEY", -(0.6118015411059929 + 0.1 * "GB_sum"."Score_1") AS "Score_0", 0.6118015411059929 + 0.1 * "GB_sum"."Score_1" AS "Score_1", 1.0 - 1.0 / (1.0 + exp(least(greatest(-100.0, -(0.6118015411059929 + 0.1 * "GB_sum"."Score_1")), 100.0))) AS "Proba_0", 1.0 / (1.0 + exp(least(greatest(-100.0, -(0.6118015411059929 + 0.1 * "GB_sum"."Score_1")), 100.0))) AS "Proba_1", CAST(NULL AS BINARY_DOUBLE) AS "LogProba_0", CAST(NULL AS BINARY_DOUBLE) AS "LogProba_1", CAST(NULL AS NUMBER(19)) AS "Decision", CAST(NULL AS BINARY_DOUBLE) AS "DecisionProba" 
FROM "TMP_20180602_MO8_GB_SUM" "GB_sum"), 
score_class_union AS 
(SELECT scu."KEY_u" AS "KEY_u", scu.class AS class, scu."LogProba" AS "LogProba", scu."Proba" AS "Proba", scu."Score" AS "Score" 
FROM (SELECT orig_cte."KEY" AS "KEY_u", 0 AS class, orig_cte."LogProba_0" AS "LogProba", orig_cte."Proba_0" AS "Proba", orig_cte."Score_0" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 1 AS class, orig_cte."LogProba_1" AS "LogProba", orig_cte."Proba_1" AS "Proba", orig_cte."Score_1" AS "Score" 
FROM orig_cte) scu), 
score_max AS 
(SELECT orig_cte."KEY" AS "KEY", orig_cte."Score_0" AS "Score_0", orig_cte."Score_1" AS "Score_1", orig_cte."Proba_0" AS "Proba_0", orig_cte."Proba_1" AS "Proba_1", orig_cte."LogProba_0" AS "LogProba_0", orig_cte."LogProba_1" AS "LogProba_1", orig_cte."Decision" AS "Decision", orig_cte."DecisionProba" AS "DecisionProba", max_select."KEY_m" AS "KEY_m", max_select."max_Proba" AS "max_Proba" 
FROM orig_cte LEFT OUTER JOIN (SELECT score_class_union."KEY_u" AS "KEY_m", max(score_class_union."Proba") AS "max_Proba" 
FROM score_class_union GROUP BY score_class_union."KEY_u") max_select ON orig_cte."KEY" = max_select."KEY_m"), 
union_with_max AS 
(SELECT score_class_union."KEY_u" AS "KEY_u", score_class_union.class AS class, score_class_union."LogProba" AS "LogProba", score_class_union."Proba" AS "Proba", score_class_union."Score" AS "Score", score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."Decision" AS "Decision", score_max."DecisionProba" AS "DecisionProba", score_max."KEY_m" AS "KEY_m", score_max."max_Proba" AS "max_Proba" 
FROM score_class_union LEFT OUTER JOIN score_max ON score_class_union."KEY_u" = score_max."KEY"), 
arg_max_cte AS 
(SELECT score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."Decision" AS "Decision", score_max."DecisionProba" AS "DecisionProba", score_max."KEY_m" AS "KEY_m", score_max."max_Proba" AS "max_Proba", "arg_max_t_Proba"."KEY_Proba" AS "KEY_Proba", "arg_max_t_Proba"."arg_max_Proba" AS "arg_max_Proba" 
FROM score_max LEFT OUTER JOIN (SELECT union_with_max."KEY" AS "KEY_Proba", min(union_with_max.class) AS "arg_max_Proba" 
FROM union_with_max 
WHERE union_with_max."max_Proba" <= union_with_max."Proba" GROUP BY union_with_max."KEY") "arg_max_t_Proba" ON score_max."KEY" = "arg_max_t_Proba"."KEY_Proba")
 SELECT arg_max_cte."KEY" AS "KEY", arg_max_cte."Score_0" AS "Score_0", arg_max_cte."Score_1" AS "Score_1", arg_max_cte."Proba_0" AS "Proba_0", arg_max_cte."Proba_1" AS "Proba_1", CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN ln(arg_max_cte."Proba_0") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_0", CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN ln(arg_max_cte."Proba_1") ELSE -BINARY_DOUBLE_INFINITY END AS "LogProba_1", arg_max_cte."arg_max_Proba" AS "Decision", arg_max_cte."max_Proba" AS "DecisionProba" 
FROM arg_max_cte