-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2018

-- Model : GradientBoostingClassifier_Pipeline
-- Dataset : FourClass_100
-- Database : pgsql


-- This SQL code can contain one or more statements, to be executed in the order they appear in this file.



-- Code For temporary table TMP_20180602143814_GY1_ADS_imp_1_OUT part 1. Create 


CREATE TEMPORARY TABLE "TMP_20180602143814_GY1_ADS_imp_1_OUT" (
	"KEY" BIGINT NOT NULL, 
	impter_2 FLOAT, 
	impter_3 FLOAT, 
	impter_4 FLOAT, 
	impter_5 FLOAT, 
	impter_6 FLOAT, 
	impter_7 FLOAT, 
	impter_8 FLOAT, 
	impter_9 FLOAT, 
	impter_10 FLOAT, 
	impter_11 FLOAT, 
	impter_12 FLOAT, 
	impter_13 FLOAT, 
	impter_14 FLOAT, 
	impter_15 FLOAT, 
	impter_16 FLOAT, 
	impter_17 FLOAT, 
	impter_18 FLOAT, 
	impter_19 FLOAT, 
	impter_20 FLOAT, 
	impter_21 FLOAT, 
	impter_22 FLOAT, 
	impter_23 FLOAT, 
	impter_24 FLOAT, 
	impter_25 FLOAT, 
	impter_26 FLOAT, 
	impter_27 FLOAT, 
	impter_28 FLOAT, 
	impter_29 FLOAT, 
	impter_30 FLOAT, 
	impter_31 FLOAT, 
	impter_32 FLOAT, 
	impter_33 FLOAT, 
	impter_34 FLOAT, 
	impter_35 FLOAT, 
	impter_36 FLOAT, 
	impter_37 FLOAT, 
	impter_38 FLOAT, 
	impter_39 FLOAT, 
	impter_40 FLOAT, 
	impter_41 FLOAT, 
	impter_42 FLOAT, 
	impter_43 FLOAT, 
	impter_44 FLOAT, 
	impter_45 FLOAT, 
	impter_46 FLOAT, 
	impter_47 FLOAT, 
	impter_48 FLOAT, 
	impter_49 FLOAT, 
	impter_50 FLOAT, 
	impter_51 FLOAT, 
	impter_52 FLOAT, 
	impter_53 FLOAT, 
	impter_54 FLOAT, 
	impter_55 FLOAT, 
	impter_56 FLOAT, 
	impter_57 FLOAT, 
	impter_58 FLOAT, 
	impter_59 FLOAT, 
	impter_60 FLOAT, 
	impter_61 FLOAT, 
	impter_62 FLOAT, 
	impter_63 FLOAT, 
	impter_64 FLOAT, 
	impter_65 FLOAT, 
	impter_66 FLOAT, 
	impter_67 FLOAT, 
	impter_68 FLOAT, 
	impter_69 FLOAT, 
	impter_70 FLOAT, 
	impter_71 FLOAT, 
	impter_72 FLOAT, 
	impter_73 FLOAT, 
	impter_74 FLOAT, 
	impter_75 FLOAT, 
	impter_76 FLOAT, 
	impter_77 FLOAT, 
	impter_78 FLOAT, 
	impter_79 FLOAT, 
	impter_80 FLOAT, 
	impter_81 FLOAT, 
	impter_82 FLOAT, 
	impter_83 FLOAT, 
	impter_84 FLOAT, 
	impter_85 FLOAT, 
	impter_86 FLOAT, 
	impter_87 FLOAT, 
	impter_88 FLOAT, 
	impter_89 FLOAT, 
	impter_90 FLOAT, 
	impter_91 FLOAT, 
	impter_92 FLOAT, 
	impter_93 FLOAT, 
	impter_94 FLOAT, 
	impter_95 FLOAT, 
	impter_96 FLOAT, 
	impter_97 FLOAT, 
	impter_98 FLOAT, 
	impter_99 FLOAT, 
	impter_100 FLOAT, 
	impter_101 FLOAT, 
	PRIMARY KEY ("KEY")
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table TMP_20180602143814_GY1_ADS_imp_1_OUT part 2. Populate

INSERT INTO "TMP_20180602143814_GY1_ADS_imp_1_OUT" ("KEY", impter_2, impter_3, impter_4, impter_5, impter_6, impter_7, impter_8, impter_9, impter_10, impter_11, impter_12, impter_13, impter_14, impter_15, impter_16, impter_17, impter_18, impter_19, impter_20, impter_21, impter_22, impter_23, impter_24, impter_25, impter_26, impter_27, impter_28, impter_29, impter_30, impter_31, impter_32, impter_33, impter_34, impter_35, impter_36, impter_37, impter_38, impter_39, impter_40, impter_41, impter_42, impter_43, impter_44, impter_45, impter_46, impter_47, impter_48, impter_49, impter_50, impter_51, impter_52, impter_53, impter_54, impter_55, impter_56, impter_57, impter_58, impter_59, impter_60, impter_61, impter_62, impter_63, impter_64, impter_65, impter_66, impter_67, impter_68, impter_69, impter_70, impter_71, impter_72, impter_73, impter_74, impter_75, impter_76, impter_77, impter_78, impter_79, impter_80, impter_81, impter_82, impter_83, impter_84, impter_85, impter_86, impter_87, impter_88, impter_89, impter_90, impter_91, impter_92, impter_93, impter_94, impter_95, impter_96, impter_97, impter_98, impter_99, impter_100, impter_101) SELECT "ADS_imp_1_OUT"."KEY", "ADS_imp_1_OUT".impter_2, "ADS_imp_1_OUT".impter_3, "ADS_imp_1_OUT".impter_4, "ADS_imp_1_OUT".impter_5, "ADS_imp_1_OUT".impter_6, "ADS_imp_1_OUT".impter_7, "ADS_imp_1_OUT".impter_8, "ADS_imp_1_OUT".impter_9, "ADS_imp_1_OUT".impter_10, "ADS_imp_1_OUT".impter_11, "ADS_imp_1_OUT".impter_12, "ADS_imp_1_OUT".impter_13, "ADS_imp_1_OUT".impter_14, "ADS_imp_1_OUT".impter_15, "ADS_imp_1_OUT".impter_16, "ADS_imp_1_OUT".impter_17, "ADS_imp_1_OUT".impter_18, "ADS_imp_1_OUT".impter_19, "ADS_imp_1_OUT".impter_20, "ADS_imp_1_OUT".impter_21, "ADS_imp_1_OUT".impter_22, "ADS_imp_1_OUT".impter_23, "ADS_imp_1_OUT".impter_24, "ADS_imp_1_OUT".impter_25, "ADS_imp_1_OUT".impter_26, "ADS_imp_1_OUT".impter_27, "ADS_imp_1_OUT".impter_28, "ADS_imp_1_OUT".impter_29, "ADS_imp_1_OUT".impter_30, "ADS_imp_1_OUT".impter_31, "ADS_imp_1_OUT".impter_32, "ADS_imp_1_OUT".impter_33, "ADS_imp_1_OUT".impter_34, "ADS_imp_1_OUT".impter_35, "ADS_imp_1_OUT".impter_36, "ADS_imp_1_OUT".impter_37, "ADS_imp_1_OUT".impter_38, "ADS_imp_1_OUT".impter_39, "ADS_imp_1_OUT".impter_40, "ADS_imp_1_OUT".impter_41, "ADS_imp_1_OUT".impter_42, "ADS_imp_1_OUT".impter_43, "ADS_imp_1_OUT".impter_44, "ADS_imp_1_OUT".impter_45, "ADS_imp_1_OUT".impter_46, "ADS_imp_1_OUT".impter_47, "ADS_imp_1_OUT".impter_48, "ADS_imp_1_OUT".impter_49, "ADS_imp_1_OUT".impter_50, "ADS_imp_1_OUT".impter_51, "ADS_imp_1_OUT".impter_52, "ADS_imp_1_OUT".impter_53, "ADS_imp_1_OUT".impter_54, "ADS_imp_1_OUT".impter_55, "ADS_imp_1_OUT".impter_56, "ADS_imp_1_OUT".impter_57, "ADS_imp_1_OUT".impter_58, "ADS_imp_1_OUT".impter_59, "ADS_imp_1_OUT".impter_60, "ADS_imp_1_OUT".impter_61, "ADS_imp_1_OUT".impter_62, "ADS_imp_1_OUT".impter_63, "ADS_imp_1_OUT".impter_64, "ADS_imp_1_OUT".impter_65, "ADS_imp_1_OUT".impter_66, "ADS_imp_1_OUT".impter_67, "ADS_imp_1_OUT".impter_68, "ADS_imp_1_OUT".impter_69, "ADS_imp_1_OUT".impter_70, "ADS_imp_1_OUT".impter_71, "ADS_imp_1_OUT".impter_72, "ADS_imp_1_OUT".impter_73, "ADS_imp_1_OUT".impter_74, "ADS_imp_1_OUT".impter_75, "ADS_imp_1_OUT".impter_76, "ADS_imp_1_OUT".impter_77, "ADS_imp_1_OUT".impter_78, "ADS_imp_1_OUT".impter_79, "ADS_imp_1_OUT".impter_80, "ADS_imp_1_OUT".impter_81, "ADS_imp_1_OUT".impter_82, "ADS_imp_1_OUT".impter_83, "ADS_imp_1_OUT".impter_84, "ADS_imp_1_OUT".impter_85, "ADS_imp_1_OUT".impter_86, "ADS_imp_1_OUT".impter_87, "ADS_imp_1_OUT".impter_88, "ADS_imp_1_OUT".impter_89, "ADS_imp_1_OUT".impter_90, "ADS_imp_1_OUT".impter_91, "ADS_imp_1_OUT".impter_92, "ADS_imp_1_OUT".impter_93, "ADS_imp_1_OUT".impter_94, "ADS_imp_1_OUT".impter_95, "ADS_imp_1_OUT".impter_96, "ADS_imp_1_OUT".impter_97, "ADS_imp_1_OUT".impter_98, "ADS_imp_1_OUT".impter_99, "ADS_imp_1_OUT".impter_100, "ADS_imp_1_OUT".impter_101 
FROM (SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" IS NULL) THEN -0.0014807007689716506 ELSE "ADS"."Feature_0" END AS impter_2, CASE WHEN ("ADS"."Feature_1" IS NULL) THEN 0.08599214990681354 ELSE "ADS"."Feature_1" END AS impter_3, CASE WHEN ("ADS"."Feature_2" IS NULL) THEN -0.006358164676411468 ELSE "ADS"."Feature_2" END AS impter_4, CASE WHEN ("ADS"."Feature_3" IS NULL) THEN -0.024301807422776375 ELSE "ADS"."Feature_3" END AS impter_5, CASE WHEN ("ADS"."Feature_4" IS NULL) THEN 0.015786548044298444 ELSE "ADS"."Feature_4" END AS impter_6, CASE WHEN ("ADS"."Feature_5" IS NULL) THEN -0.13959329445651672 ELSE "ADS"."Feature_5" END AS impter_7, CASE WHEN ("ADS"."Feature_6" IS NULL) THEN -0.06476745048019888 ELSE "ADS"."Feature_6" END AS impter_8, CASE WHEN ("ADS"."Feature_7" IS NULL) THEN 0.025579810774090658 ELSE "ADS"."Feature_7" END AS impter_9, CASE WHEN ("ADS"."Feature_8" IS NULL) THEN -0.03173937260977112 ELSE "ADS"."Feature_8" END AS impter_10, CASE WHEN ("ADS"."Feature_9" IS NULL) THEN -0.1518141420862488 ELSE "ADS"."Feature_9" END AS impter_11, CASE WHEN ("ADS"."Feature_10" IS NULL) THEN -0.13244576558492482 ELSE "ADS"."Feature_10" END AS impter_12, CASE WHEN ("ADS"."Feature_11" IS NULL) THEN 0.044172679762224144 ELSE "ADS"."Feature_11" END AS impter_13, CASE WHEN ("ADS"."Feature_12" IS NULL) THEN 0.010165946719810038 ELSE "ADS"."Feature_12" END AS impter_14, CASE WHEN ("ADS"."Feature_13" IS NULL) THEN -0.03645872019103299 ELSE "ADS"."Feature_13" END AS impter_15, CASE WHEN ("ADS"."Feature_14" IS NULL) THEN 0.06491512811593925 ELSE "ADS"."Feature_14" END AS impter_16, CASE WHEN ("ADS"."Feature_15" IS NULL) THEN -0.11930146867074032 ELSE "ADS"."Feature_15" END AS impter_17, CASE WHEN ("ADS"."Feature_16" IS NULL) THEN 0.007738863934852773 ELSE "ADS"."Feature_16" END AS impter_18, CASE WHEN ("ADS"."Feature_17" IS NULL) THEN -0.1226774060147726 ELSE "ADS"."Feature_17" END AS impter_19, CASE WHEN ("ADS"."Feature_18" IS NULL) THEN 0.019160881669086405 ELSE "ADS"."Feature_18" END AS impter_20, CASE WHEN ("ADS"."Feature_19" IS NULL) THEN -0.26340351121131067 ELSE "ADS"."Feature_19" END AS impter_21, CASE WHEN ("ADS"."Feature_20" IS NULL) THEN 0.035692361937735194 ELSE "ADS"."Feature_20" END AS impter_22, CASE WHEN ("ADS"."Feature_21" IS NULL) THEN -0.010021324964069293 ELSE "ADS"."Feature_21" END AS impter_23, CASE WHEN ("ADS"."Feature_22" IS NULL) THEN -0.1258614387723542 ELSE "ADS"."Feature_22" END AS impter_24, CASE WHEN ("ADS"."Feature_23" IS NULL) THEN 0.09372773898231128 ELSE "ADS"."Feature_23" END AS impter_25, CASE WHEN ("ADS"."Feature_24" IS NULL) THEN -0.1687929597880227 ELSE "ADS"."Feature_24" END AS impter_26, CASE WHEN ("ADS"."Feature_25" IS NULL) THEN 0.10006283199629364 ELSE "ADS"."Feature_25" END AS impter_27, CASE WHEN ("ADS"."Feature_26" IS NULL) THEN -0.10297858086822659 ELSE "ADS"."Feature_26" END AS impter_28, CASE WHEN ("ADS"."Feature_27" IS NULL) THEN 0.19240514535870415 ELSE "ADS"."Feature_27" END AS impter_29, CASE WHEN ("ADS"."Feature_28" IS NULL) THEN -0.052866434246092435 ELSE "ADS"."Feature_28" END AS impter_30, CASE WHEN ("ADS"."Feature_29" IS NULL) THEN 0.2624612146366151 ELSE "ADS"."Feature_29" END AS impter_31, CASE WHEN ("ADS"."Feature_30" IS NULL) THEN 0.002677575140361194 ELSE "ADS"."Feature_30" END AS impter_32, CASE WHEN ("ADS"."Feature_31" IS NULL) THEN 0.09707041941284063 ELSE "ADS"."Feature_31" END AS impter_33, CASE WHEN ("ADS"."Feature_32" IS NULL) THEN -0.032793219857333473 ELSE "ADS"."Feature_32" END AS impter_34, CASE WHEN ("ADS"."Feature_33" IS NULL) THEN -0.003130273745908922 ELSE "ADS"."Feature_33" END AS impter_35, CASE WHEN ("ADS"."Feature_34" IS NULL) THEN 0.053446276216279974 ELSE "ADS"."Feature_34" END AS impter_36, CASE WHEN ("ADS"."Feature_35" IS NULL) THEN -0.18668146437412367 ELSE "ADS"."Feature_35" END AS impter_37, CASE WHEN ("ADS"."Feature_36" IS NULL) THEN -0.029335964960866243 ELSE "ADS"."Feature_36" END AS impter_38, CASE WHEN ("ADS"."Feature_37" IS NULL) THEN 0.07219772199502426 ELSE "ADS"."Feature_37" END AS impter_39, CASE WHEN ("ADS"."Feature_38" IS NULL) THEN -0.0007762839781489412 ELSE "ADS"."Feature_38" END AS impter_40, CASE WHEN ("ADS"."Feature_39" IS NULL) THEN 0.08270823712098274 ELSE "ADS"."Feature_39" END AS impter_41, CASE WHEN ("ADS"."Feature_40" IS NULL) THEN 0.10432022852347983 ELSE "ADS"."Feature_40" END AS impter_42, CASE WHEN ("ADS"."Feature_41" IS NULL) THEN 0.07058566385022276 ELSE "ADS"."Feature_41" END AS impter_43, CASE WHEN ("ADS"."Feature_42" IS NULL) THEN 0.05096693098357383 ELSE "ADS"."Feature_42" END AS impter_44, CASE WHEN ("ADS"."Feature_43" IS NULL) THEN 0.0660758203367818 ELSE "ADS"."Feature_43" END AS impter_45, CASE WHEN ("ADS"."Feature_44" IS NULL) THEN -0.07075895636353369 ELSE "ADS"."Feature_44" END AS impter_46, CASE WHEN ("ADS"."Feature_45" IS NULL) THEN 0.08422536561649958 ELSE "ADS"."Feature_45" END AS impter_47, CASE WHEN ("ADS"."Feature_46" IS NULL) THEN 0.21367580667795616 ELSE "ADS"."Feature_46" END AS impter_48, CASE WHEN ("ADS"."Feature_47" IS NULL) THEN -0.055897457335624984 ELSE "ADS"."Feature_47" END AS impter_49, CASE WHEN ("ADS"."Feature_48" IS NULL) THEN -0.17453036726139817 ELSE "ADS"."Feature_48" END AS impter_50, CASE WHEN ("ADS"."Feature_49" IS NULL) THEN -0.054944001818473996 ELSE "ADS"."Feature_49" END AS impter_51, CASE WHEN ("ADS"."Feature_50" IS NULL) THEN -0.5961651261710368 ELSE "ADS"."Feature_50" END AS impter_52, CASE WHEN ("ADS"."Feature_51" IS NULL) THEN 0.5020404526565605 ELSE "ADS"."Feature_51" END AS impter_53, CASE WHEN ("ADS"."Feature_52" IS NULL) THEN -0.052340545201383926 ELSE "ADS"."Feature_52" END AS impter_54, CASE WHEN ("ADS"."Feature_53" IS NULL) THEN 0.05294307611674654 ELSE "ADS"."Feature_53" END AS impter_55, CASE WHEN ("ADS"."Feature_54" IS NULL) THEN 0.03835884479069335 ELSE "ADS"."Feature_54" END AS impter_56, CASE WHEN ("ADS"."Feature_55" IS NULL) THEN -0.13571979014964694 ELSE "ADS"."Feature_55" END AS impter_57, CASE WHEN ("ADS"."Feature_56" IS NULL) THEN -0.21903068431411843 ELSE "ADS"."Feature_56" END AS impter_58, CASE WHEN ("ADS"."Feature_57" IS NULL) THEN -0.1191752362029383 ELSE "ADS"."Feature_57" END AS impter_59, CASE WHEN ("ADS"."Feature_58" IS NULL) THEN 0.38058346912807667 ELSE "ADS"."Feature_58" END AS impter_60, CASE WHEN ("ADS"."Feature_59" IS NULL) THEN -0.12720928974168508 ELSE "ADS"."Feature_59" END AS impter_61, CASE WHEN ("ADS"."Feature_60" IS NULL) THEN -0.09072936496613782 ELSE "ADS"."Feature_60" END AS impter_62, CASE WHEN ("ADS"."Feature_61" IS NULL) THEN -0.03915125937954538 ELSE "ADS"."Feature_61" END AS impter_63, CASE WHEN ("ADS"."Feature_62" IS NULL) THEN 0.07075412393313481 ELSE "ADS"."Feature_62" END AS impter_64, CASE WHEN ("ADS"."Feature_63" IS NULL) THEN 0.10124894587016948 ELSE "ADS"."Feature_63" END AS impter_65, CASE WHEN ("ADS"."Feature_64" IS NULL) THEN -0.1945661449475579 ELSE "ADS"."Feature_64" END AS impter_66, CASE WHEN ("ADS"."Feature_65" IS NULL) THEN -0.1759482981261233 ELSE "ADS"."Feature_65" END AS impter_67, CASE WHEN ("ADS"."Feature_66" IS NULL) THEN 0.07473228971855511 ELSE "ADS"."Feature_66" END AS impter_68, CASE WHEN ("ADS"."Feature_67" IS NULL) THEN 0.0377705562115906 ELSE "ADS"."Feature_67" END AS impter_69, CASE WHEN ("ADS"."Feature_68" IS NULL) THEN 0.0139470898598917 ELSE "ADS"."Feature_68" END AS impter_70, CASE WHEN ("ADS"."Feature_69" IS NULL) THEN 0.2582685725145942 ELSE "ADS"."Feature_69" END AS impter_71, CASE WHEN ("ADS"."Feature_70" IS NULL) THEN 0.022975786233048922 ELSE "ADS"."Feature_70" END AS impter_72, CASE WHEN ("ADS"."Feature_71" IS NULL) THEN 0.17445434061949525 ELSE "ADS"."Feature_71" END AS impter_73, CASE WHEN ("ADS"."Feature_72" IS NULL) THEN -0.011413879692078346 ELSE "ADS"."Feature_72" END AS impter_74, CASE WHEN ("ADS"."Feature_73" IS NULL) THEN 0.07898984156871978 ELSE "ADS"."Feature_73" END AS impter_75, CASE WHEN ("ADS"."Feature_74" IS NULL) THEN 0.0952547273770713 ELSE "ADS"."Feature_74" END AS impter_76, CASE WHEN ("ADS"."Feature_75" IS NULL) THEN -0.03997776839639901 ELSE "ADS"."Feature_75" END AS impter_77, CASE WHEN ("ADS"."Feature_76" IS NULL) THEN -0.020839895874293496 ELSE "ADS"."Feature_76" END AS impter_78, CASE WHEN ("ADS"."Feature_77" IS NULL) THEN -0.07284631986613152 ELSE "ADS"."Feature_77" END AS impter_79, CASE WHEN ("ADS"."Feature_78" IS NULL) THEN -0.27389951764434384 ELSE "ADS"."Feature_78" END AS impter_80, CASE WHEN ("ADS"."Feature_79" IS NULL) THEN 0.08057287885287609 ELSE "ADS"."Feature_79" END AS impter_81, CASE WHEN ("ADS"."Feature_80" IS NULL) THEN -0.06244274245437891 ELSE "ADS"."Feature_80" END AS impter_82, CASE WHEN ("ADS"."Feature_81" IS NULL) THEN -0.12290855334066887 ELSE "ADS"."Feature_81" END AS impter_83, CASE WHEN ("ADS"."Feature_82" IS NULL) THEN 0.11639531793890918 ELSE "ADS"."Feature_82" END AS impter_84, CASE WHEN ("ADS"."Feature_83" IS NULL) THEN -0.03350462786128603 ELSE "ADS"."Feature_83" END AS impter_85, CASE WHEN ("ADS"."Feature_84" IS NULL) THEN -0.03914049968144583 ELSE "ADS"."Feature_84" END AS impter_86, CASE WHEN ("ADS"."Feature_85" IS NULL) THEN 0.24193903072305167 ELSE "ADS"."Feature_85" END AS impter_87, CASE WHEN ("ADS"."Feature_86" IS NULL) THEN -0.07389719862221904 ELSE "ADS"."Feature_86" END AS impter_88, CASE WHEN ("ADS"."Feature_87" IS NULL) THEN 0.1400756228320113 ELSE "ADS"."Feature_87" END AS impter_89, CASE WHEN ("ADS"."Feature_88" IS NULL) THEN 0.2765301935136145 ELSE "ADS"."Feature_88" END AS impter_90, CASE WHEN ("ADS"."Feature_89" IS NULL) THEN -0.07957147169250885 ELSE "ADS"."Feature_89" END AS impter_91, CASE WHEN ("ADS"."Feature_90" IS NULL) THEN 0.16295767680642717 ELSE "ADS"."Feature_90" END AS impter_92, CASE WHEN ("ADS"."Feature_91" IS NULL) THEN 0.07062813888509549 ELSE "ADS"."Feature_91" END AS impter_93, CASE WHEN ("ADS"."Feature_92" IS NULL) THEN 0.012995630151896219 ELSE "ADS"."Feature_92" END AS impter_94, CASE WHEN ("ADS"."Feature_93" IS NULL) THEN 0.1055212408190415 ELSE "ADS"."Feature_93" END AS impter_95, CASE WHEN ("ADS"."Feature_94" IS NULL) THEN -0.1408434425354362 ELSE "ADS"."Feature_94" END AS impter_96, CASE WHEN ("ADS"."Feature_95" IS NULL) THEN -0.1574012366732725 ELSE "ADS"."Feature_95" END AS impter_97, CASE WHEN ("ADS"."Feature_96" IS NULL) THEN 0.05477536676313335 ELSE "ADS"."Feature_96" END AS impter_98, CASE WHEN ("ADS"."Feature_97" IS NULL) THEN 0.05673272205919614 ELSE "ADS"."Feature_97" END AS impter_99, CASE WHEN ("ADS"."Feature_98" IS NULL) THEN -0.14226649213619527 ELSE "ADS"."Feature_98" END AS impter_100, CASE WHEN ("ADS"."Feature_99" IS NULL) THEN -0.04042675289131955 ELSE "ADS"."Feature_99" END AS impter_101 
FROM "FourClass_100" AS "ADS") AS "ADS_imp_1_OUT"

-- Code For temporary table TMP_20180602143814_GY1_ADS_imp_1_OUT part 3. Create Index 

CREATE INDEX "ix_TMP_20180602143814_GY1_ADS_imp_1_OUT_KEY" ON "TMP_20180602143814_GY1_ADS_imp_1_OUT" ("KEY")

-- Code For temporary table TMP_20180602143814_85R_ADS_sca_2_OUT part 1. Create 


CREATE TEMPORARY TABLE "TMP_20180602143814_85R_ADS_sca_2_OUT" (
	"KEY" BIGINT NOT NULL, 
	scaler_2 FLOAT, 
	scaler_3 FLOAT, 
	scaler_4 FLOAT, 
	scaler_5 FLOAT, 
	scaler_6 FLOAT, 
	scaler_7 FLOAT, 
	scaler_8 FLOAT, 
	scaler_9 FLOAT, 
	scaler_10 FLOAT, 
	scaler_11 FLOAT, 
	scaler_12 FLOAT, 
	scaler_13 FLOAT, 
	scaler_14 FLOAT, 
	scaler_15 FLOAT, 
	scaler_16 FLOAT, 
	scaler_17 FLOAT, 
	scaler_18 FLOAT, 
	scaler_19 FLOAT, 
	scaler_20 FLOAT, 
	scaler_21 FLOAT, 
	scaler_22 FLOAT, 
	scaler_23 FLOAT, 
	scaler_24 FLOAT, 
	scaler_25 FLOAT, 
	scaler_26 FLOAT, 
	scaler_27 FLOAT, 
	scaler_28 FLOAT, 
	scaler_29 FLOAT, 
	scaler_30 FLOAT, 
	scaler_31 FLOAT, 
	scaler_32 FLOAT, 
	scaler_33 FLOAT, 
	scaler_34 FLOAT, 
	scaler_35 FLOAT, 
	scaler_36 FLOAT, 
	scaler_37 FLOAT, 
	scaler_38 FLOAT, 
	scaler_39 FLOAT, 
	scaler_40 FLOAT, 
	scaler_41 FLOAT, 
	scaler_42 FLOAT, 
	scaler_43 FLOAT, 
	scaler_44 FLOAT, 
	scaler_45 FLOAT, 
	scaler_46 FLOAT, 
	scaler_47 FLOAT, 
	scaler_48 FLOAT, 
	scaler_49 FLOAT, 
	scaler_50 FLOAT, 
	scaler_51 FLOAT, 
	scaler_52 FLOAT, 
	scaler_53 FLOAT, 
	scaler_54 FLOAT, 
	scaler_55 FLOAT, 
	scaler_56 FLOAT, 
	scaler_57 FLOAT, 
	scaler_58 FLOAT, 
	scaler_59 FLOAT, 
	scaler_60 FLOAT, 
	scaler_61 FLOAT, 
	scaler_62 FLOAT, 
	scaler_63 FLOAT, 
	scaler_64 FLOAT, 
	scaler_65 FLOAT, 
	scaler_66 FLOAT, 
	scaler_67 FLOAT, 
	scaler_68 FLOAT, 
	scaler_69 FLOAT, 
	scaler_70 FLOAT, 
	scaler_71 FLOAT, 
	scaler_72 FLOAT, 
	scaler_73 FLOAT, 
	scaler_74 FLOAT, 
	scaler_75 FLOAT, 
	scaler_76 FLOAT, 
	scaler_77 FLOAT, 
	scaler_78 FLOAT, 
	scaler_79 FLOAT, 
	scaler_80 FLOAT, 
	scaler_81 FLOAT, 
	scaler_82 FLOAT, 
	scaler_83 FLOAT, 
	scaler_84 FLOAT, 
	scaler_85 FLOAT, 
	scaler_86 FLOAT, 
	scaler_87 FLOAT, 
	scaler_88 FLOAT, 
	scaler_89 FLOAT, 
	scaler_90 FLOAT, 
	scaler_91 FLOAT, 
	scaler_92 FLOAT, 
	scaler_93 FLOAT, 
	scaler_94 FLOAT, 
	scaler_95 FLOAT, 
	scaler_96 FLOAT, 
	scaler_97 FLOAT, 
	scaler_98 FLOAT, 
	scaler_99 FLOAT, 
	scaler_100 FLOAT, 
	scaler_101 FLOAT, 
	PRIMARY KEY ("KEY")
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table TMP_20180602143814_85R_ADS_sca_2_OUT part 2. Populate

INSERT INTO "TMP_20180602143814_85R_ADS_sca_2_OUT" ("KEY", scaler_2, scaler_3, scaler_4, scaler_5, scaler_6, scaler_7, scaler_8, scaler_9, scaler_10, scaler_11, scaler_12, scaler_13, scaler_14, scaler_15, scaler_16, scaler_17, scaler_18, scaler_19, scaler_20, scaler_21, scaler_22, scaler_23, scaler_24, scaler_25, scaler_26, scaler_27, scaler_28, scaler_29, scaler_30, scaler_31, scaler_32, scaler_33, scaler_34, scaler_35, scaler_36, scaler_37, scaler_38, scaler_39, scaler_40, scaler_41, scaler_42, scaler_43, scaler_44, scaler_45, scaler_46, scaler_47, scaler_48, scaler_49, scaler_50, scaler_51, scaler_52, scaler_53, scaler_54, scaler_55, scaler_56, scaler_57, scaler_58, scaler_59, scaler_60, scaler_61, scaler_62, scaler_63, scaler_64, scaler_65, scaler_66, scaler_67, scaler_68, scaler_69, scaler_70, scaler_71, scaler_72, scaler_73, scaler_74, scaler_75, scaler_76, scaler_77, scaler_78, scaler_79, scaler_80, scaler_81, scaler_82, scaler_83, scaler_84, scaler_85, scaler_86, scaler_87, scaler_88, scaler_89, scaler_90, scaler_91, scaler_92, scaler_93, scaler_94, scaler_95, scaler_96, scaler_97, scaler_98, scaler_99, scaler_100, scaler_101) SELECT "ADS_sca_2_OUT"."KEY", "ADS_sca_2_OUT".scaler_2, "ADS_sca_2_OUT".scaler_3, "ADS_sca_2_OUT".scaler_4, "ADS_sca_2_OUT".scaler_5, "ADS_sca_2_OUT".scaler_6, "ADS_sca_2_OUT".scaler_7, "ADS_sca_2_OUT".scaler_8, "ADS_sca_2_OUT".scaler_9, "ADS_sca_2_OUT".scaler_10, "ADS_sca_2_OUT".scaler_11, "ADS_sca_2_OUT".scaler_12, "ADS_sca_2_OUT".scaler_13, "ADS_sca_2_OUT".scaler_14, "ADS_sca_2_OUT".scaler_15, "ADS_sca_2_OUT".scaler_16, "ADS_sca_2_OUT".scaler_17, "ADS_sca_2_OUT".scaler_18, "ADS_sca_2_OUT".scaler_19, "ADS_sca_2_OUT".scaler_20, "ADS_sca_2_OUT".scaler_21, "ADS_sca_2_OUT".scaler_22, "ADS_sca_2_OUT".scaler_23, "ADS_sca_2_OUT".scaler_24, "ADS_sca_2_OUT".scaler_25, "ADS_sca_2_OUT".scaler_26, "ADS_sca_2_OUT".scaler_27, "ADS_sca_2_OUT".scaler_28, "ADS_sca_2_OUT".scaler_29, "ADS_sca_2_OUT".scaler_30, "ADS_sca_2_OUT".scaler_31, "ADS_sca_2_OUT".scaler_32, "ADS_sca_2_OUT".scaler_33, "ADS_sca_2_OUT".scaler_34, "ADS_sca_2_OUT".scaler_35, "ADS_sca_2_OUT".scaler_36, "ADS_sca_2_OUT".scaler_37, "ADS_sca_2_OUT".scaler_38, "ADS_sca_2_OUT".scaler_39, "ADS_sca_2_OUT".scaler_40, "ADS_sca_2_OUT".scaler_41, "ADS_sca_2_OUT".scaler_42, "ADS_sca_2_OUT".scaler_43, "ADS_sca_2_OUT".scaler_44, "ADS_sca_2_OUT".scaler_45, "ADS_sca_2_OUT".scaler_46, "ADS_sca_2_OUT".scaler_47, "ADS_sca_2_OUT".scaler_48, "ADS_sca_2_OUT".scaler_49, "ADS_sca_2_OUT".scaler_50, "ADS_sca_2_OUT".scaler_51, "ADS_sca_2_OUT".scaler_52, "ADS_sca_2_OUT".scaler_53, "ADS_sca_2_OUT".scaler_54, "ADS_sca_2_OUT".scaler_55, "ADS_sca_2_OUT".scaler_56, "ADS_sca_2_OUT".scaler_57, "ADS_sca_2_OUT".scaler_58, "ADS_sca_2_OUT".scaler_59, "ADS_sca_2_OUT".scaler_60, "ADS_sca_2_OUT".scaler_61, "ADS_sca_2_OUT".scaler_62, "ADS_sca_2_OUT".scaler_63, "ADS_sca_2_OUT".scaler_64, "ADS_sca_2_OUT".scaler_65, "ADS_sca_2_OUT".scaler_66, "ADS_sca_2_OUT".scaler_67, "ADS_sca_2_OUT".scaler_68, "ADS_sca_2_OUT".scaler_69, "ADS_sca_2_OUT".scaler_70, "ADS_sca_2_OUT".scaler_71, "ADS_sca_2_OUT".scaler_72, "ADS_sca_2_OUT".scaler_73, "ADS_sca_2_OUT".scaler_74, "ADS_sca_2_OUT".scaler_75, "ADS_sca_2_OUT".scaler_76, "ADS_sca_2_OUT".scaler_77, "ADS_sca_2_OUT".scaler_78, "ADS_sca_2_OUT".scaler_79, "ADS_sca_2_OUT".scaler_80, "ADS_sca_2_OUT".scaler_81, "ADS_sca_2_OUT".scaler_82, "ADS_sca_2_OUT".scaler_83, "ADS_sca_2_OUT".scaler_84, "ADS_sca_2_OUT".scaler_85, "ADS_sca_2_OUT".scaler_86, "ADS_sca_2_OUT".scaler_87, "ADS_sca_2_OUT".scaler_88, "ADS_sca_2_OUT".scaler_89, "ADS_sca_2_OUT".scaler_90, "ADS_sca_2_OUT".scaler_91, "ADS_sca_2_OUT".scaler_92, "ADS_sca_2_OUT".scaler_93, "ADS_sca_2_OUT".scaler_94, "ADS_sca_2_OUT".scaler_95, "ADS_sca_2_OUT".scaler_96, "ADS_sca_2_OUT".scaler_97, "ADS_sca_2_OUT".scaler_98, "ADS_sca_2_OUT".scaler_99, "ADS_sca_2_OUT".scaler_100, "ADS_sca_2_OUT".scaler_101 
FROM (SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", (CAST("ADS_imp_1_OUT".impter_2 AS FLOAT) - -0.0014807007689716506) / 0.9211229790312512 AS scaler_2, (CAST("ADS_imp_1_OUT".impter_3 AS FLOAT) - 0.08599214990681354) / 0.9627516809237073 AS scaler_3, (CAST("ADS_imp_1_OUT".impter_4 AS FLOAT) - -0.006358164676411468) / 0.7890687835102894 AS scaler_4, (CAST("ADS_imp_1_OUT".impter_5 AS FLOAT) - -0.024301807422776375) / 1.0265272189083172 AS scaler_5, (CAST("ADS_imp_1_OUT".impter_6 AS FLOAT) - 0.015786548044298444) / 1.0198090908026474 AS scaler_6, (CAST("ADS_imp_1_OUT".impter_7 AS FLOAT) - -0.13959329445651672) / 0.9185551763293686 AS scaler_7, (CAST("ADS_imp_1_OUT".impter_8 AS FLOAT) - -0.06476745048019888) / 1.0393547249617474 AS scaler_8, (CAST("ADS_imp_1_OUT".impter_9 AS FLOAT) - 0.025579810774090658) / 0.8722131294644917 AS scaler_9, (CAST("ADS_imp_1_OUT".impter_10 AS FLOAT) - -0.03173937260977112) / 1.0164588299091024 AS scaler_10, (CAST("ADS_imp_1_OUT".impter_11 AS FLOAT) - -0.1518141420862488) / 1.0075402114297496 AS scaler_11, (CAST("ADS_imp_1_OUT".impter_12 AS FLOAT) - -0.13244576558492482) / 0.9215325459816371 AS scaler_12, (CAST("ADS_imp_1_OUT".impter_13 AS FLOAT) - 0.044172679762224144) / 0.9053279964066308 AS scaler_13, (CAST("ADS_imp_1_OUT".impter_14 AS FLOAT) - 0.010165946719810038) / 1.2190371046063362 AS scaler_14, (CAST("ADS_imp_1_OUT".impter_15 AS FLOAT) - -0.03645872019103299) / 1.0879005786584215 AS scaler_15, (CAST("ADS_imp_1_OUT".impter_16 AS FLOAT) - 0.06491512811593925) / 1.0274670201407186 AS scaler_16, (CAST("ADS_imp_1_OUT".impter_17 AS FLOAT) - -0.11930146867074032) / 0.9506312349761404 AS scaler_17, (CAST("ADS_imp_1_OUT".impter_18 AS FLOAT) - 0.007738863934852773) / 1.0928477585203984 AS scaler_18, (CAST("ADS_imp_1_OUT".impter_19 AS FLOAT) - -0.1226774060147726) / 0.9830561715965196 AS scaler_19, (CAST("ADS_imp_1_OUT".impter_20 AS FLOAT) - 0.019160881669086405) / 1.2117417920836373 AS scaler_20, (CAST("ADS_imp_1_OUT".impter_21 AS FLOAT) - -0.26340351121131067) / 0.9807419262255984 AS scaler_21, (CAST("ADS_imp_1_OUT".impter_22 AS FLOAT) - 0.035692361937735194) / 1.115824498468156 AS scaler_22, (CAST("ADS_imp_1_OUT".impter_23 AS FLOAT) - -0.010021324964069293) / 1.0790959803413318 AS scaler_23, (CAST("ADS_imp_1_OUT".impter_24 AS FLOAT) - -0.1258614387723542) / 1.0279672611547366 AS scaler_24, (CAST("ADS_imp_1_OUT".impter_25 AS FLOAT) - 0.09372773898231128) / 0.9690760299303989 AS scaler_25, (CAST("ADS_imp_1_OUT".impter_26 AS FLOAT) - -0.1687929597880227) / 0.8845858581996813 AS scaler_26, (CAST("ADS_imp_1_OUT".impter_27 AS FLOAT) - 0.10006283199629364) / 0.9149346104000894 AS scaler_27, (CAST("ADS_imp_1_OUT".impter_28 AS FLOAT) - -0.10297858086822659) / 1.0761397500557328 AS scaler_28, (CAST("ADS_imp_1_OUT".impter_29 AS FLOAT) - 0.19240514535870415) / 2.089882492597775 AS scaler_29, (CAST("ADS_imp_1_OUT".impter_30 AS FLOAT) - -0.052866434246092435) / 1.0030777529896888 AS scaler_30, (CAST("ADS_imp_1_OUT".impter_31 AS FLOAT) - 0.2624612146366151) / 1.9778491038473625 AS scaler_31, (CAST("ADS_imp_1_OUT".impter_32 AS FLOAT) - 0.002677575140361194) / 0.8833924915211555 AS scaler_32, (CAST("ADS_imp_1_OUT".impter_33 AS FLOAT) - 0.09707041941284063) / 0.8720005351713555 AS scaler_33, (CAST("ADS_imp_1_OUT".impter_34 AS FLOAT) - -0.032793219857333473) / 0.8745989090443193 AS scaler_34, (CAST("ADS_imp_1_OUT".impter_35 AS FLOAT) - -0.003130273745908922) / 0.9967699097535561 AS scaler_35, (CAST("ADS_imp_1_OUT".impter_36 AS FLOAT) - 0.053446276216279974) / 0.9997289112199433 AS scaler_36, (CAST("ADS_imp_1_OUT".impter_37 AS FLOAT) - -0.18668146437412367) / 1.0272287171310865 AS scaler_37, (CAST("ADS_imp_1_OUT".impter_38 AS FLOAT) - -0.029335964960866243) / 1.0427555960451658 AS scaler_38, (CAST("ADS_imp_1_OUT".impter_39 AS FLOAT) - 0.07219772199502426) / 0.8328229890456742 AS scaler_39, (CAST("ADS_imp_1_OUT".impter_40 AS FLOAT) - -0.0007762839781489412) / 0.9666524356457794 AS scaler_40, (CAST("ADS_imp_1_OUT".impter_41 AS FLOAT) - 0.08270823712098274) / 1.083670494683493 AS scaler_41, (CAST("ADS_imp_1_OUT".impter_42 AS FLOAT) - 0.10432022852347983) / 1.075472547982714 AS scaler_42, (CAST("ADS_imp_1_OUT".impter_43 AS FLOAT) - 0.07058566385022276) / 0.9993462791463713 AS scaler_43, (CAST("ADS_imp_1_OUT".impter_44 AS FLOAT) - 0.05096693098357383) / 0.8876971252794036 AS scaler_44, (CAST("ADS_imp_1_OUT".impter_45 AS FLOAT) - 0.0660758203367818) / 1.041246125313479 AS scaler_45, (CAST("ADS_imp_1_OUT".impter_46 AS FLOAT) - -0.07075895636353369) / 2.238310207242139 AS scaler_46, (CAST("ADS_imp_1_OUT".impter_47 AS FLOAT) - 0.08422536561649958) / 0.9520959686676432 AS scaler_47, (CAST("ADS_imp_1_OUT".impter_48 AS FLOAT) - 0.21367580667795616) / 0.9907230316111766 AS scaler_48, (CAST("ADS_imp_1_OUT".impter_49 AS FLOAT) - -0.055897457335624984) / 1.0392400714320487 AS scaler_49, (CAST("ADS_imp_1_OUT".impter_50 AS FLOAT) - -0.17453036726139817) / 2.001507098381001 AS scaler_50, (CAST("ADS_imp_1_OUT".impter_51 AS FLOAT) - -0.054944001818473996) / 1.0041645540091246 AS scaler_51, (CAST("ADS_imp_1_OUT".impter_52 AS FLOAT) - -0.5961651261710368) / 2.467511153399545 AS scaler_52, (CAST("ADS_imp_1_OUT".impter_53 AS FLOAT) - 0.5020404526565605) / 2.1929325118287792 AS scaler_53, (CAST("ADS_imp_1_OUT".impter_54 AS FLOAT) - -0.052340545201383926) / 0.98465558791252 AS scaler_54, (CAST("ADS_imp_1_OUT".impter_55 AS FLOAT) - 0.05294307611674654) / 1.8137042567337183 AS scaler_55, (CAST("ADS_imp_1_OUT".impter_56 AS FLOAT) - 0.03835884479069335) / 0.9241326354411343 AS scaler_56, (CAST("ADS_imp_1_OUT".impter_57 AS FLOAT) - -0.13571979014964694) / 0.8679095755948701 AS scaler_57, (CAST("ADS_imp_1_OUT".impter_58 AS FLOAT) - -0.21903068431411843) / 4.150428869748413 AS scaler_58, (CAST("ADS_imp_1_OUT".impter_59 AS FLOAT) - -0.1191752362029383) / 0.9123333408128436 AS scaler_59, (CAST("ADS_imp_1_OUT".impter_60 AS FLOAT) - 0.38058346912807667) / 3.5635011086986927 AS scaler_60, (CAST("ADS_imp_1_OUT".impter_61 AS FLOAT) - -0.12720928974168508) / 0.9301024475991629 AS scaler_61, (CAST("ADS_imp_1_OUT".impter_62 AS FLOAT) - -0.09072936496613782) / 0.9490501277306023 AS scaler_62, (CAST("ADS_imp_1_OUT".impter_63 AS FLOAT) - -0.03915125937954538) / 0.9029504608473613 AS scaler_63, (CAST("ADS_imp_1_OUT".impter_64 AS FLOAT) - 0.07075412393313481) / 0.9726561682528103 AS scaler_64, (CAST("ADS_imp_1_OUT".impter_65 AS FLOAT) - 0.10124894587016948) / 0.9403075920249493 AS scaler_65, (CAST("ADS_imp_1_OUT".impter_66 AS FLOAT) - -0.1945661449475579) / 0.9400903625732654 AS scaler_66, (CAST("ADS_imp_1_OUT".impter_67 AS FLOAT) - -0.1759482981261233) / 0.9435422049943787 AS scaler_67, (CAST("ADS_imp_1_OUT".impter_68 AS FLOAT) - 0.07473228971855511) / 0.8871003964319768 AS scaler_68, (CAST("ADS_imp_1_OUT".impter_69 AS FLOAT) - 0.0377705562115906) / 1.0228978549196588 AS scaler_69, (CAST("ADS_imp_1_OUT".impter_70 AS FLOAT) - 0.0139470898598917) / 0.9465728329079491 AS scaler_70, (CAST("ADS_imp_1_OUT".impter_71 AS FLOAT) - 0.2582685725145942) / 1.1027232016521478 AS scaler_71, (CAST("ADS_imp_1_OUT".impter_72 AS FLOAT) - 0.022975786233048922) / 0.9200436904809381 AS scaler_72, (CAST("ADS_imp_1_OUT".impter_73 AS FLOAT) - 0.17445434061949525) / 0.9009964742482128 AS scaler_73, (CAST("ADS_imp_1_OUT".impter_74 AS FLOAT) - -0.011413879692078346) / 0.9483377025565977 AS scaler_74, (CAST("ADS_imp_1_OUT".impter_75 AS FLOAT) - 0.07898984156871978) / 0.9726668138861088 AS scaler_75, (CAST("ADS_imp_1_OUT".impter_76 AS FLOAT) - 0.0952547273770713) / 0.9607867245873394 AS scaler_76, (CAST("ADS_imp_1_OUT".impter_77 AS FLOAT) - -0.03997776839639901) / 1.0318828686080972 AS scaler_77, (CAST("ADS_imp_1_OUT".impter_78 AS FLOAT) - -0.020839895874293496) / 0.945141993694461 AS scaler_78, (CAST("ADS_imp_1_OUT".impter_79 AS FLOAT) - -0.07284631986613152) / 0.9103416784348913 AS scaler_79, (CAST("ADS_imp_1_OUT".impter_80 AS FLOAT) - -0.27389951764434384) / 2.0362603862996735 AS scaler_80, (CAST("ADS_imp_1_OUT".impter_81 AS FLOAT) - 0.08057287885287609) / 0.9919292944224015 AS scaler_81, (CAST("ADS_imp_1_OUT".impter_82 AS FLOAT) - -0.06244274245437891) / 0.8113039293824552 AS scaler_82, (CAST("ADS_imp_1_OUT".impter_83 AS FLOAT) - -0.12290855334066887) / 1.0307302654711112 AS scaler_83, (CAST("ADS_imp_1_OUT".impter_84 AS FLOAT) - 0.11639531793890918) / 0.9993591951135242 AS scaler_84, (CAST("ADS_imp_1_OUT".impter_85 AS FLOAT) - -0.03350462786128603) / 1.0197598648594488 AS scaler_85, (CAST("ADS_imp_1_OUT".impter_86 AS FLOAT) - -0.03914049968144583) / 0.9022051622058084 AS scaler_86, (CAST("ADS_imp_1_OUT".impter_87 AS FLOAT) - 0.24193903072305167) / 0.9625742678392476 AS scaler_87, (CAST("ADS_imp_1_OUT".impter_88 AS FLOAT) - -0.07389719862221904) / 1.0080070985430696 AS scaler_88, (CAST("ADS_imp_1_OUT".impter_89 AS FLOAT) - 0.1400756228320113) / 0.9315791274848828 AS scaler_89, (CAST("ADS_imp_1_OUT".impter_90 AS FLOAT) - 0.2765301935136145) / 1.9455982323178656 AS scaler_90, (CAST("ADS_imp_1_OUT".impter_91 AS FLOAT) - -0.07957147169250885) / 0.9688848077884671 AS scaler_91, (CAST("ADS_imp_1_OUT".impter_92 AS FLOAT) - 0.16295767680642717) / 0.8952741904110189 AS scaler_92, (CAST("ADS_imp_1_OUT".impter_93 AS FLOAT) - 0.07062813888509549) / 0.8331748322730601 AS scaler_93, (CAST("ADS_imp_1_OUT".impter_94 AS FLOAT) - 0.012995630151896219) / 1.059167248118017 AS scaler_94, (CAST("ADS_imp_1_OUT".impter_95 AS FLOAT) - 0.1055212408190415) / 1.0525988978000902 AS scaler_95, (CAST("ADS_imp_1_OUT".impter_96 AS FLOAT) - -0.1408434425354362) / 0.9172372033996682 AS scaler_96, (CAST("ADS_imp_1_OUT".impter_97 AS FLOAT) - -0.1574012366732725) / 0.9930125433643069 AS scaler_97, (CAST("ADS_imp_1_OUT".impter_98 AS FLOAT) - 0.05477536676313335) / 0.9803136353653645 AS scaler_98, (CAST("ADS_imp_1_OUT".impter_99 AS FLOAT) - 0.05673272205919614) / 0.9296338032188498 AS scaler_99, (CAST("ADS_imp_1_OUT".impter_100 AS FLOAT) - -0.14226649213619527) / 1.174442941822933 AS scaler_100, (CAST("ADS_imp_1_OUT".impter_101 AS FLOAT) - -0.04042675289131955) / 1.983747550989713 AS scaler_101 
FROM "TMP_20180602143814_GY1_ADS_imp_1_OUT" AS "ADS_imp_1_OUT") AS "ADS_sca_2_OUT"

-- Code For temporary table TMP_20180602143814_85R_ADS_sca_2_OUT part 3. Create Index 

CREATE INDEX "ix_TMP_20180602143814_85R_ADS_sca_2_OUT_KEY" ON "TMP_20180602143814_85R_ADS_sca_2_OUT" ("KEY")

-- Code For temporary table TMP_20180602143815_8TP_GB_B0 part 1. Create 


CREATE TEMPORARY TABLE "TMP_20180602143815_8TP_GB_B0" (
	"KEY" BIGINT, 
	"Score_0" FLOAT, 
	"Score_1" FLOAT, 
	"Score_2" FLOAT, 
	"Score_3" FLOAT
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table TMP_20180602143815_8TP_GB_B0 part 2. Populate

WITH "DT_node_lookup" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_80 <= -0.1553783416748047) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= -1.8472156524658203) THEN 2 ELSE 3 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_50 <= -0.18425396084785461) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_44 <= -1.2117334604263306) THEN 6 ELSE 7 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= -0.7356767654418945) THEN 9 ELSE 10 END END END AS node_id_2 
FROM "TMP_20180602143814_85R_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS FLOAT) AS "E" 
FROM (SELECT 2 AS nid, 3.0000813809441973 AS "E" UNION ALL SELECT 3 AS nid, -0.9999909579999096 AS "E" UNION ALL SELECT 6 AS nid, 2.712673611667341e-05 AS "E" UNION ALL SELECT 7 AS nid, 2.7143619281624756 AS "E" UNION ALL SELECT 9 AS nid, 1.8000596792609644 AS "E" UNION ALL SELECT 10 AS nid, -0.818169488047905 AS "E") AS "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".nid AS nid, "DT_node_data"."E" AS "E" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".nid), 
"GB_Model_0_0" AS 
(SELECT "DT_Output"."KEY" AS "KEY", "DT_Output"."E" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output"), 
"DT_node_lookup_1" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_98 <= -1.4607586860656738) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= -1.160664439201355) THEN 2 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_70 <= 1.6447844505310059) THEN 4 ELSE 5 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_12 <= -1.627345085144043) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_49 <= -0.0203983336687088) THEN 8 ELSE 9 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_69 <= -2.0908408164978027) THEN 11 ELSE 12 END END END AS node_id_2 
FROM "TMP_20180602143814_85R_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_1" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS FLOAT) AS "E" 
FROM (SELECT 2 AS nid, -1.0118275042865825 AS "E" UNION ALL SELECT 4 AS nid, 2.905746472586037 AS "E" UNION ALL SELECT 5 AS nid, 2.968994747796099 AS "E" UNION ALL SELECT 8 AS nid, 2.8983610040613517 AS "E" UNION ALL SELECT 9 AS nid, 2.9106837546033533 AS "E" UNION ALL SELECT 11 AS nid, 2.968395633788201 AS "E" UNION ALL SELECT 12 AS nid, -0.41929162817719146 AS "E") AS "Values"), 
"DT_Output_1" AS 
(SELECT "DT_node_lookup_1"."KEY" AS "KEY", "DT_node_lookup_1".node_id_2 AS node_id_2, "DT_node_data_1".nid AS nid, "DT_node_data_1"."E" AS "E" 
FROM "DT_node_lookup_1" LEFT OUTER JOIN "DT_node_data_1" ON "DT_node_lookup_1".node_id_2 = "DT_node_data_1".nid), 
"GB_Model_0_1" AS 
(SELECT "DT_Output_1"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_1"."E" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_1"), 
"DT_node_lookup_2" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_46 <= -0.9107336401939392) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_101 <= -1.0859026908874512) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_51 <= 0.3604578375816345) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_67 <= 1.746506929397583) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_55 <= 1.6740303039550781) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_15 <= -2.1169023513793945) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_16 <= 0.30070066452026367) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20180602143814_85R_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_2" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS FLOAT) AS "E" 
FROM (SELECT 3 AS nid, -1.008272543963393 AS "E" UNION ALL SELECT 4 AS nid, -0.9779545083083064 AS "E" UNION ALL SELECT 6 AS nid, 2.9300239640872663 AS "E" UNION ALL SELECT 7 AS nid, 3.00005256759022 AS "E" UNION ALL SELECT 10 AS nid, 2.9279318520195763 AS "E" UNION ALL SELECT 11 AS nid, -0.6777090018600046 AS "E" UNION ALL SELECT 13 AS nid, 2.9279318520195763 AS "E" UNION ALL SELECT 14 AS nid, 3.149517762307101 AS "E") AS "Values"), 
"DT_Output_2" AS 
(SELECT "DT_node_lookup_2"."KEY" AS "KEY", "DT_node_lookup_2".node_id_2 AS node_id_2, "DT_node_data_2".nid AS nid, "DT_node_data_2"."E" AS "E" 
FROM "DT_node_lookup_2" LEFT OUTER JOIN "DT_node_data_2" ON "DT_node_lookup_2".node_id_2 = "DT_node_data_2".nid), 
"GB_Model_0_2" AS 
(SELECT "DT_Output_2"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_2"."E" AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_2"), 
"DT_node_lookup_3" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_53 <= 1.564861536026001) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_16 <= 1.2700200080871582) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= -1.8553478717803955) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_46 <= -0.028851903975009918) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_50 <= -0.7826793193817139) THEN 9 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_57 <= -0.5090179443359375) THEN 11 ELSE 12 END END END AS node_id_2 
FROM "TMP_20180602143814_85R_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_3" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS FLOAT) AS "E" 
FROM (SELECT 3 AS nid, 2.9461628172530614 AS "E" UNION ALL SELECT 4 AS nid, -0.5360195042531782 AS "E" UNION ALL SELECT 6 AS nid, -1.0015537831867356 AS "E" UNION ALL SELECT 7 AS nid, 2.8525065482280794 AS "E" UNION ALL SELECT 9 AS nid, 2.9203293830222017 AS "E" UNION ALL SELECT 11 AS nid, 2.848956025656982 AS "E" UNION ALL SELECT 12 AS nid, 2.861407809063219 AS "E") AS "Values"), 
"DT_Output_3" AS 
(SELECT "DT_node_lookup_3"."KEY" AS "KEY", "DT_node_lookup_3".node_id_2 AS node_id_2, "DT_node_data_3".nid AS nid, "DT_node_data_3"."E" AS "E" 
FROM "DT_node_lookup_3" LEFT OUTER JOIN "DT_node_data_3" ON "DT_node_lookup_3".node_id_2 = "DT_node_data_3".nid), 
"GB_Model_0_3" AS 
(SELECT "DT_Output_3"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_3"."E" AS "Score_3" 
FROM "DT_Output_3"), 
"DT_node_lookup_4" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_80 <= -0.1553783416748047) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_28 <= 2.1494405269622803) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_23 <= -0.9389280080795288) THEN 3 ELSE 4 END ELSE 5 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_50 <= -0.18425396084785461) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_43 <= 0.15844957530498505) THEN 8 ELSE 9 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= -0.7356767654418945) THEN 11 ELSE 12 END END END AS node_id_2 
FROM "TMP_20180602143814_85R_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_4" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS FLOAT) AS "E" 
FROM (SELECT 3 AS nid, -0.9867564550915149 AS "E" UNION ALL SELECT 4 AS nid, -0.9683379736925262 AS "E" UNION ALL SELECT 5 AS nid, 2.3288073335755337 AS "E" UNION ALL SELECT 8 AS nid, 2.4160166293785714 AS "E" UNION ALL SELECT 9 AS nid, 0.5659751706294345 AS "E" UNION ALL SELECT 11 AS nid, 1.4879329821036256 AS "E" UNION ALL SELECT 12 AS nid, -0.7866200098030829 AS "E") AS "Values"), 
"DT_Output_4" AS 
(SELECT "DT_node_lookup_4"."KEY" AS "KEY", "DT_node_lookup_4".node_id_2 AS node_id_2, "DT_node_data_4".nid AS nid, "DT_node_data_4"."E" AS "E" 
FROM "DT_node_lookup_4" LEFT OUTER JOIN "DT_node_data_4" ON "DT_node_lookup_4".node_id_2 = "DT_node_data_4".nid), 
"GB_Model_1_0" AS 
(SELECT "DT_Output_4"."KEY" AS "KEY", "DT_Output_4"."E" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_4"), 
"DT_node_lookup_5" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_98 <= -1.4607586860656738) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_27 <= 1.1521812677383423) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_18 <= -1.9364557266235352) THEN 3 ELSE 4 END ELSE 5 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_94 <= 0.8118096590042114) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_75 <= 1.6322026252746582) THEN 8 ELSE 9 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_50 <= -0.2165338397026062) THEN 11 ELSE 12 END END END AS node_id_2 
FROM "TMP_20180602143814_85R_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_5" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS FLOAT) AS "E" 
FROM (SELECT 3 AS nid, 2.3665406197000354 AS "E" UNION ALL SELECT 4 AS nid, 2.2523535264111656 AS "E" UNION ALL SELECT 5 AS nid, -1.0043898439392318 AS "E" UNION ALL SELECT 8 AS nid, -0.580079386964986 AS "E" UNION ALL SELECT 9 AS nid, 1.9333146653667166 AS "E" UNION ALL SELECT 11 AS nid, -0.4941466492961474 AS "E" UNION ALL SELECT 12 AS nid, 2.693609180764203 AS "E") AS "Values"), 
"DT_Output_5" AS 
(SELECT "DT_node_lookup_5"."KEY" AS "KEY", "DT_node_lookup_5".node_id_2 AS node_id_2, "DT_node_data_5".nid AS nid, "DT_node_data_5"."E" AS "E" 
FROM "DT_node_lookup_5" LEFT OUTER JOIN "DT_node_data_5" ON "DT_node_lookup_5".node_id_2 = "DT_node_data_5".nid), 
"GB_Model_1_1" AS 
(SELECT "DT_Output_5"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_5"."E" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_5"), 
"DT_node_lookup_6" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_46 <= -0.9107336401939392) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_101 <= -1.0859026908874512) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_65 <= -0.28141939640045166) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_26 <= -0.9447900056838989) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_36 <= -1.7054295539855957) THEN 9 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_34 <= 1.5472302436828613) THEN 11 ELSE 12 END END END AS node_id_2 
FROM "TMP_20180602143814_85R_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_6" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS FLOAT) AS "E" 
FROM (SELECT 3 AS nid, -0.9444372889825687 AS "E" UNION ALL SELECT 4 AS nid, -0.9779911901974747 AS "E" UNION ALL SELECT 6 AS nid, 2.404444062668351 AS "E" UNION ALL SELECT 7 AS nid, 2.2707067433881662 AS "E" UNION ALL SELECT 9 AS nid, 2.9256951956307944 AS "E" UNION ALL SELECT 11 AS nid, -0.6512177827107685 AS "E" UNION ALL SELECT 12 AS nid, 2.6955962548301633 AS "E") AS "Values"), 
"DT_Output_6" AS 
(SELECT "DT_node_lookup_6"."KEY" AS "KEY", "DT_node_lookup_6".node_id_2 AS node_id_2, "DT_node_data_6".nid AS nid, "DT_node_data_6"."E" AS "E" 
FROM "DT_node_lookup_6" LEFT OUTER JOIN "DT_node_data_6" ON "DT_node_lookup_6".node_id_2 = "DT_node_data_6".nid), 
"GB_Model_1_2" AS 
(SELECT "DT_Output_6"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_6"."E" AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_6"), 
"DT_node_lookup_7" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_46 <= 0.3581483066082001) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_53 <= 1.564861536026001) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_71 <= 1.657257318496704) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_20 <= 1.1347556114196777) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_101 <= -0.03666681796312332) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_26 <= -1.233558177947998) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_22 <= 1.1574032306671143) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20180602143814_85R_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_7" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS FLOAT) AS "E" 
FROM (SELECT 3 AS nid, -0.7603324356897619 AS "E" UNION ALL SELECT 4 AS nid, 2.4959593965331686 AS "E" UNION ALL SELECT 6 AS nid, 2.2331167702860113 AS "E" UNION ALL SELECT 7 AS nid, 2.2178125047438706 AS "E" UNION ALL SELECT 10 AS nid, -0.9661108008846202 AS "E" UNION ALL SELECT 11 AS nid, 2.4780210572659658 AS "E" UNION ALL SELECT 13 AS nid, -0.9803955402961774 AS "E" UNION ALL SELECT 14 AS nid, 2.280383581950157 AS "E") AS "Values"), 
"DT_Output_7" AS 
(SELECT "DT_node_lookup_7"."KEY" AS "KEY", "DT_node_lookup_7".node_id_2 AS node_id_2, "DT_node_data_7".nid AS nid, "DT_node_data_7"."E" AS "E" 
FROM "DT_node_lookup_7" LEFT OUTER JOIN "DT_node_data_7" ON "DT_node_lookup_7".node_id_2 = "DT_node_data_7".nid), 
"GB_Model_1_3" AS 
(SELECT "DT_Output_7"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_7"."E" AS "Score_3" 
FROM "DT_Output_7"), 
"DT_node_lookup_8" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_80 <= -0.1553783416748047) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= -1.8472156524658203) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= -0.36567097902297974) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_91 <= 0.1619594395160675) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_94 <= -0.05780889838933945) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_51 <= 0.46396082639694214) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_26 <= 0.8363525867462158) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20180602143814_85R_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_8" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS FLOAT) AS "E" 
FROM (SELECT 3 AS nid, 1.9205587829692496 AS "E" UNION ALL SELECT 4 AS nid, 1.9121427368462434 AS "E" UNION ALL SELECT 6 AS nid, -0.957272033548331 AS "E" UNION ALL SELECT 7 AS nid, -0.9347534711622937 AS "E" UNION ALL SELECT 10 AS nid, 1.8746625544265285 AS "E" UNION ALL SELECT 11 AS nid, 0.07340716824412079 AS "E" UNION ALL SELECT 13 AS nid, -0.9798667511876009 AS "E" UNION ALL SELECT 14 AS nid, 1.6942458263032547 AS "E") AS "Values"), 
"DT_Output_8" AS 
(SELECT "DT_node_lookup_8"."KEY" AS "KEY", "DT_node_lookup_8".node_id_2 AS node_id_2, "DT_node_data_8".nid AS nid, "DT_node_data_8"."E" AS "E" 
FROM "DT_node_lookup_8" LEFT OUTER JOIN "DT_node_data_8" ON "DT_node_lookup_8".node_id_2 = "DT_node_data_8".nid), 
"GB_Model_2_0" AS 
(SELECT "DT_Output_8"."KEY" AS "KEY", "DT_Output_8"."E" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_8"), 
"DT_node_lookup_9" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_98 <= -1.4607586860656738) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_47 <= 1.8816113471984863) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_71 <= 0.747761607170105) THEN 3 ELSE 4 END ELSE 5 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_12 <= -1.627345085144043) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_70 <= 0.3791266977787018) THEN 8 ELSE 9 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_75 <= 1.6296749114990234) THEN 11 ELSE 12 END END END AS node_id_2 
FROM "TMP_20180602143814_85R_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_9" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS FLOAT) AS "E" 
FROM (SELECT 3 AS nid, 1.857372974581994 AS "E" UNION ALL SELECT 4 AS nid, 1.952742428597873 AS "E" UNION ALL SELECT 5 AS nid, -0.968433104895255 AS "E" UNION ALL SELECT 8 AS nid, 1.8129327824840522 AS "E" UNION ALL SELECT 9 AS nid, 2.2231669460033694 AS "E" UNION ALL SELECT 11 AS nid, -0.4045037202547995 AS "E" UNION ALL SELECT 12 AS nid, 1.7157779449790624 AS "E") AS "Values"), 
"DT_Output_9" AS 
(SELECT "DT_node_lookup_9"."KEY" AS "KEY", "DT_node_lookup_9".node_id_2 AS node_id_2, "DT_node_data_9".nid AS nid, "DT_node_data_9"."E" AS "E" 
FROM "DT_node_lookup_9" LEFT OUTER JOIN "DT_node_data_9" ON "DT_node_lookup_9".node_id_2 = "DT_node_data_9".nid), 
"GB_Model_2_1" AS 
(SELECT "DT_Output_9"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_9"."E" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_9")
 INSERT INTO "TMP_20180602143815_8TP_GB_B0" ("KEY", "Score_0", "Score_1", "Score_2", "Score_3") SELECT "GB_B0"."KEY", "GB_B0"."Score_0", "GB_B0"."Score_1", "GB_B0"."Score_2", "GB_B0"."Score_3" 
FROM (SELECT "GB_esu_0"."KEY" AS "KEY", "GB_esu_0"."Score_0" AS "Score_0", "GB_esu_0"."Score_1" AS "Score_1", "GB_esu_0"."Score_2" AS "Score_2", "GB_esu_0"."Score_3" AS "Score_3" 
FROM (SELECT "GB_Model_0_0"."KEY" AS "KEY", "GB_Model_0_0"."Score_0" AS "Score_0", "GB_Model_0_0"."Score_1" AS "Score_1", "GB_Model_0_0"."Score_2" AS "Score_2", "GB_Model_0_0"."Score_3" AS "Score_3" 
FROM "GB_Model_0_0" UNION ALL SELECT "GB_Model_0_1"."KEY" AS "KEY", "GB_Model_0_1"."Score_0" AS "Score_0", "GB_Model_0_1"."Score_1" AS "Score_1", "GB_Model_0_1"."Score_2" AS "Score_2", "GB_Model_0_1"."Score_3" AS "Score_3" 
FROM "GB_Model_0_1" UNION ALL SELECT "GB_Model_0_2"."KEY" AS "KEY", "GB_Model_0_2"."Score_0" AS "Score_0", "GB_Model_0_2"."Score_1" AS "Score_1", "GB_Model_0_2"."Score_2" AS "Score_2", "GB_Model_0_2"."Score_3" AS "Score_3" 
FROM "GB_Model_0_2" UNION ALL SELECT "GB_Model_0_3"."KEY" AS "KEY", "GB_Model_0_3"."Score_0" AS "Score_0", "GB_Model_0_3"."Score_1" AS "Score_1", "GB_Model_0_3"."Score_2" AS "Score_2", "GB_Model_0_3"."Score_3" AS "Score_3" 
FROM "GB_Model_0_3" UNION ALL SELECT "GB_Model_1_0"."KEY" AS "KEY", "GB_Model_1_0"."Score_0" AS "Score_0", "GB_Model_1_0"."Score_1" AS "Score_1", "GB_Model_1_0"."Score_2" AS "Score_2", "GB_Model_1_0"."Score_3" AS "Score_3" 
FROM "GB_Model_1_0" UNION ALL SELECT "GB_Model_1_1"."KEY" AS "KEY", "GB_Model_1_1"."Score_0" AS "Score_0", "GB_Model_1_1"."Score_1" AS "Score_1", "GB_Model_1_1"."Score_2" AS "Score_2", "GB_Model_1_1"."Score_3" AS "Score_3" 
FROM "GB_Model_1_1" UNION ALL SELECT "GB_Model_1_2"."KEY" AS "KEY", "GB_Model_1_2"."Score_0" AS "Score_0", "GB_Model_1_2"."Score_1" AS "Score_1", "GB_Model_1_2"."Score_2" AS "Score_2", "GB_Model_1_2"."Score_3" AS "Score_3" 
FROM "GB_Model_1_2" UNION ALL SELECT "GB_Model_1_3"."KEY" AS "KEY", "GB_Model_1_3"."Score_0" AS "Score_0", "GB_Model_1_3"."Score_1" AS "Score_1", "GB_Model_1_3"."Score_2" AS "Score_2", "GB_Model_1_3"."Score_3" AS "Score_3" 
FROM "GB_Model_1_3" UNION ALL SELECT "GB_Model_2_0"."KEY" AS "KEY", "GB_Model_2_0"."Score_0" AS "Score_0", "GB_Model_2_0"."Score_1" AS "Score_1", "GB_Model_2_0"."Score_2" AS "Score_2", "GB_Model_2_0"."Score_3" AS "Score_3" 
FROM "GB_Model_2_0" UNION ALL SELECT "GB_Model_2_1"."KEY" AS "KEY", "GB_Model_2_1"."Score_0" AS "Score_0", "GB_Model_2_1"."Score_1" AS "Score_1", "GB_Model_2_1"."Score_2" AS "Score_2", "GB_Model_2_1"."Score_3" AS "Score_3" 
FROM "GB_Model_2_1") AS "GB_esu_0") AS "GB_B0"

-- Code For temporary table TMP_20180602143815_PDT_GB_B1 part 1. Create 


CREATE TEMPORARY TABLE "TMP_20180602143815_PDT_GB_B1" (
	"KEY" BIGINT, 
	"Score_0" FLOAT, 
	"Score_1" FLOAT, 
	"Score_2" FLOAT, 
	"Score_3" FLOAT
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table TMP_20180602143815_PDT_GB_B1 part 2. Populate

WITH "DT_node_lookup_10" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_46 <= -0.9107336401939392) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_101 <= -1.0859026908874512) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_21 <= -0.303088903427124) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_59 <= 1.0104789733886719) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= 1.8007181882858276) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_36 <= -1.7054295539855957) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_73 <= 0.5608746409416199) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20180602143814_85R_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_10" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS FLOAT) AS "E" 
FROM (SELECT 3 AS nid, -0.9515572492613259 AS "E" UNION ALL SELECT 4 AS nid, -0.9172018002562454 AS "E" UNION ALL SELECT 6 AS nid, 1.8863710784815018 AS "E" UNION ALL SELECT 7 AS nid, 2.0934705153990603 AS "E" UNION ALL SELECT 10 AS nid, 2.2645320697086615 AS "E" UNION ALL SELECT 11 AS nid, -0.6213884243159324 AS "E" UNION ALL SELECT 13 AS nid, 2.8998625894641337 AS "E" UNION ALL SELECT 14 AS nid, 2.2606018760286712 AS "E") AS "Values"), 
"DT_Output_10" AS 
(SELECT "DT_node_lookup_10"."KEY" AS "KEY", "DT_node_lookup_10".node_id_2 AS node_id_2, "DT_node_data_10".nid AS nid, "DT_node_data_10"."E" AS "E" 
FROM "DT_node_lookup_10" LEFT OUTER JOIN "DT_node_data_10" ON "DT_node_lookup_10".node_id_2 = "DT_node_data_10".nid), 
"GB_Model_2_2" AS 
(SELECT "DT_Output_10"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_10"."E" AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_10"), 
"DT_node_lookup_11" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_53 <= 1.564861536026001) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_46 <= 0.46139490604400635) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_71 <= 1.657257318496704) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_101 <= -0.03666681796312332) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= 1.5365166664123535) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_93 <= -0.44967278838157654) THEN 10 ELSE 11 END ELSE 12 END END AS node_id_2 
FROM "TMP_20180602143814_85R_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_11" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS FLOAT) AS "E" 
FROM (SELECT 3 AS nid, -0.7331903352243523 AS "E" UNION ALL SELECT 4 AS nid, 2.0945618273336426 AS "E" UNION ALL SELECT 6 AS nid, 1.6421006483219045 AS "E" UNION ALL SELECT 7 AS nid, -0.9610932564135655 AS "E" UNION ALL SELECT 10 AS nid, 1.8510237282643227 AS "E" UNION ALL SELECT 11 AS nid, 1.8606115236025633 AS "E" UNION ALL SELECT 12 AS nid, 1.979871043223806 AS "E") AS "Values"), 
"DT_Output_11" AS 
(SELECT "DT_node_lookup_11"."KEY" AS "KEY", "DT_node_lookup_11".node_id_2 AS node_id_2, "DT_node_data_11".nid AS nid, "DT_node_data_11"."E" AS "E" 
FROM "DT_node_lookup_11" LEFT OUTER JOIN "DT_node_data_11" ON "DT_node_lookup_11".node_id_2 = "DT_node_data_11".nid), 
"GB_Model_2_3" AS 
(SELECT "DT_Output_11"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_11"."E" AS "Score_3" 
FROM "DT_Output_11"), 
"DT_node_lookup_12" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_80 <= -0.1553783416748047) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_28 <= 2.1494405269622803) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_76 <= -1.1234946250915527) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_57 <= -0.6483604907989502) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_78 <= -0.765346884727478) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_89 <= 0.6746584177017212) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_63 <= 0.13777482509613037) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20180602143814_85R_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_12" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS FLOAT) AS "E" 
FROM (SELECT 3 AS nid, -0.9634485557663582 AS "E" UNION ALL SELECT 4 AS nid, -0.9209997704727491 AS "E" UNION ALL SELECT 6 AS nid, 1.6490916436588055 AS "E" UNION ALL SELECT 7 AS nid, 1.6613260192795711 AS "E" UNION ALL SELECT 10 AS nid, 1.8571512865281947 AS "E" UNION ALL SELECT 11 AS nid, 0.04238864894614031 AS "E" UNION ALL SELECT 13 AS nid, -0.772973568501061 AS "E" UNION ALL SELECT 14 AS nid, 0.8879050628340136 AS "E") AS "Values"), 
"DT_Output_12" AS 
(SELECT "DT_node_lookup_12"."KEY" AS "KEY", "DT_node_lookup_12".node_id_2 AS node_id_2, "DT_node_data_12".nid AS nid, "DT_node_data_12"."E" AS "E" 
FROM "DT_node_lookup_12" LEFT OUTER JOIN "DT_node_data_12" ON "DT_node_lookup_12".node_id_2 = "DT_node_data_12".nid), 
"GB_Model_3_0" AS 
(SELECT "DT_Output_12"."KEY" AS "KEY", "DT_Output_12"."E" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_12"), 
"DT_node_lookup_13" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_94 <= 0.8118096590042114) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_95 <= 0.8137120604515076) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_21 <= -1.7085139751434326) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_16 <= -0.34962522983551025) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_50 <= -0.2165338397026062) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= 1.1575648784637451) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_83 <= 0.6006317138671875) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20180602143814_85R_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_13" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS FLOAT) AS "E" 
FROM (SELECT 3 AS nid, 2.001058956850558 AS "E" UNION ALL SELECT 4 AS nid, -0.6738221896035527 AS "E" UNION ALL SELECT 6 AS nid, 1.868696328296438 AS "E" UNION ALL SELECT 7 AS nid, -0.21783340178317395 AS "E" UNION ALL SELECT 10 AS nid, -0.9375296891313031 AS "E" UNION ALL SELECT 11 AS nid, 2.144768094205962 AS "E" UNION ALL SELECT 13 AS nid, 2.2092793729260434 AS "E" UNION ALL SELECT 14 AS nid, 1.6418836699500858 AS "E") AS "Values"), 
"DT_Output_13" AS 
(SELECT "DT_node_lookup_13"."KEY" AS "KEY", "DT_node_lookup_13".node_id_2 AS node_id_2, "DT_node_data_13".nid AS nid, "DT_node_data_13"."E" AS "E" 
FROM "DT_node_lookup_13" LEFT OUTER JOIN "DT_node_data_13" ON "DT_node_lookup_13".node_id_2 = "DT_node_data_13".nid), 
"GB_Model_3_1" AS 
(SELECT "DT_Output_13"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_13"."E" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_13"), 
"DT_node_lookup_14" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_46 <= -0.9107336401939392) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_101 <= -1.0859026908874512) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_89 <= -0.26689833402633667) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_101 <= 1.398939847946167) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_55 <= 1.6740303039550781) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= 1.8007181882858276) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= -0.3414976894855499) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20180602143814_85R_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_14" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS FLOAT) AS "E" 
FROM (SELECT 3 AS nid, -0.8913214189424442 AS "E" UNION ALL SELECT 4 AS nid, -0.9228672751657869 AS "E" UNION ALL SELECT 6 AS nid, 1.6229923859109892 AS "E" UNION ALL SELECT 7 AS nid, 1.760790899047244 AS "E" UNION ALL SELECT 10 AS nid, -0.5927925644187693 AS "E" UNION ALL SELECT 11 AS nid, 2.051741259906503 AS "E" UNION ALL SELECT 13 AS nid, 1.993914580953586 AS "E" UNION ALL SELECT 14 AS nid, 2.2386399658848894 AS "E") AS "Values"), 
"DT_Output_14" AS 
(SELECT "DT_node_lookup_14"."KEY" AS "KEY", "DT_node_lookup_14".node_id_2 AS node_id_2, "DT_node_data_14".nid AS nid, "DT_node_data_14"."E" AS "E" 
FROM "DT_node_lookup_14" LEFT OUTER JOIN "DT_node_data_14" ON "DT_node_lookup_14".node_id_2 = "DT_node_data_14".nid), 
"GB_Model_3_2" AS 
(SELECT "DT_Output_14"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_14"."E" AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_14"), 
"DT_node_lookup_15" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_22 <= 1.0979300737380981) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_101 <= -1.3270068168640137) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_60 <= 0.29305365681648254) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_16 <= 1.2700200080871582) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_53 <= 0.24498701095581055) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_56 <= 1.1639035940170288) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_86 <= 0.1351264864206314) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20180602143814_85R_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_15" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS FLOAT) AS "E" 
FROM (SELECT 3 AS nid, 1.7833357271023536 AS "E" UNION ALL SELECT 4 AS nid, -0.16155528333219818 AS "E" UNION ALL SELECT 6 AS nid, -0.7291781480442301 AS "E" UNION ALL SELECT 7 AS nid, 1.1581205229329479 AS "E" UNION ALL SELECT 10 AS nid, -0.9229274830758221 AS "E" UNION ALL SELECT 11 AS nid, 1.5900480421676721 AS "E" UNION ALL SELECT 13 AS nid, 1.6254136593238586 AS "E" UNION ALL SELECT 14 AS nid, 2.2780065564417553 AS "E") AS "Values"), 
"DT_Output_15" AS 
(SELECT "DT_node_lookup_15"."KEY" AS "KEY", "DT_node_lookup_15".node_id_2 AS node_id_2, "DT_node_data_15".nid AS nid, "DT_node_data_15"."E" AS "E" 
FROM "DT_node_lookup_15" LEFT OUTER JOIN "DT_node_data_15" ON "DT_node_lookup_15".node_id_2 = "DT_node_data_15".nid), 
"GB_Model_3_3" AS 
(SELECT "DT_Output_15"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_15"."E" AS "Score_3" 
FROM "DT_Output_15"), 
"DT_node_lookup_16" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_80 <= -0.1553783416748047) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_28 <= 2.1494405269622803) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_76 <= -1.1234946250915527) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_36 <= 0.014147825539112091) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_50 <= -0.18425396084785461) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_51 <= 0.7176387906074524) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= -0.7356767654418945) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20180602143814_85R_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_16" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS FLOAT) AS "E" 
FROM (SELECT 3 AS nid, -0.9510128641599577 AS "E" UNION ALL SELECT 4 AS nid, -0.901927963424884 AS "E" UNION ALL SELECT 6 AS nid, 1.475198361441658 AS "E" UNION ALL SELECT 7 AS nid, 1.4721479378888922 AS "E" UNION ALL SELECT 10 AS nid, 1.631718339942992 AS "E" UNION ALL SELECT 11 AS nid, 0.41498714302238854 AS "E" UNION ALL SELECT 13 AS nid, 0.9960644504791984 AS "E" UNION ALL SELECT 14 AS nid, -0.7315568816549503 AS "E") AS "Values"), 
"DT_Output_16" AS 
(SELECT "DT_node_lookup_16"."KEY" AS "KEY", "DT_node_lookup_16".node_id_2 AS node_id_2, "DT_node_data_16".nid AS nid, "DT_node_data_16"."E" AS "E" 
FROM "DT_node_lookup_16" LEFT OUTER JOIN "DT_node_data_16" ON "DT_node_lookup_16".node_id_2 = "DT_node_data_16".nid), 
"GB_Model_4_0" AS 
(SELECT "DT_Output_16"."KEY" AS "KEY", "DT_Output_16"."E" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_16"), 
"DT_node_lookup_17" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_94 <= 0.8118096590042114) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_95 <= 0.8137120604515076) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_21 <= -1.7085139751434326) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_16 <= -0.34962522983551025) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_50 <= -0.2165338397026062) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_100 <= -0.8832098245620728) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_83 <= 0.6006317138671875) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20180602143814_85R_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_17" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS FLOAT) AS "E" 
FROM (SELECT 3 AS nid, 1.699258436825493 AS "E" UNION ALL SELECT 4 AS nid, -0.6402388905037979 AS "E" UNION ALL SELECT 6 AS nid, 1.6330895403332883 AS "E" UNION ALL SELECT 7 AS nid, -0.206959693224628 AS "E" UNION ALL SELECT 10 AS nid, 1.7961612771000812 AS "E" UNION ALL SELECT 11 AS nid, -0.9119258926408279 AS "E" UNION ALL SELECT 13 AS nid, 1.8710181550614142 AS "E" UNION ALL SELECT 14 AS nid, 1.4612973233237927 AS "E") AS "Values"), 
"DT_Output_17" AS 
(SELECT "DT_node_lookup_17"."KEY" AS "KEY", "DT_node_lookup_17".node_id_2 AS node_id_2, "DT_node_data_17".nid AS nid, "DT_node_data_17"."E" AS "E" 
FROM "DT_node_lookup_17" LEFT OUTER JOIN "DT_node_data_17" ON "DT_node_lookup_17".node_id_2 = "DT_node_data_17".nid), 
"GB_Model_4_1" AS 
(SELECT "DT_Output_17"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_17"."E" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_17"), 
"DT_node_lookup_18" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_46 <= -0.9107336401939392) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_101 <= -1.0859026908874512) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_54 <= 0.4000554084777832) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_26 <= -0.9447900056838989) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_34 <= 1.5472302436828613) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_15 <= -2.1169023513793945) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_30 <= -0.7751092910766602) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20180602143814_85R_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_18" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS FLOAT) AS "E" 
FROM (SELECT 3 AS nid, -0.8983673766300507 AS "E" UNION ALL SELECT 4 AS nid, -0.8683712090181926 AS "E" UNION ALL SELECT 6 AS nid, 1.517959788350448 AS "E" UNION ALL SELECT 7 AS nid, 1.43472695233204 AS "E" UNION ALL SELECT 10 AS nid, 1.885945485908208 AS "E" UNION ALL SELECT 11 AS nid, -0.5670971444628041 AS "E" UNION ALL SELECT 13 AS nid, 1.7750583195971443 AS "E" UNION ALL SELECT 14 AS nid, 2.1756121073645756 AS "E") AS "Values"), 
"DT_Output_18" AS 
(SELECT "DT_node_lookup_18"."KEY" AS "KEY", "DT_node_lookup_18".node_id_2 AS node_id_2, "DT_node_data_18".nid AS nid, "DT_node_data_18"."E" AS "E" 
FROM "DT_node_lookup_18" LEFT OUTER JOIN "DT_node_data_18" ON "DT_node_lookup_18".node_id_2 = "DT_node_data_18".nid), 
"GB_Model_4_2" AS 
(SELECT "DT_Output_18"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_18"."E" AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_18"), 
"DT_node_lookup_19" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_53 <= 1.564861536026001) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_46 <= 0.46139490604400635) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_71 <= 1.657257318496704) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_101 <= -0.03666681796312332) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= -0.5344926118850708) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_79 <= 0.03279522806406021) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= 0.020991772413253784) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20180602143814_85R_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_19" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS FLOAT) AS "E" 
FROM (SELECT 3 AS nid, -0.6770452954523474 AS "E" UNION ALL SELECT 4 AS nid, 1.7056557816841083 AS "E" UNION ALL SELECT 6 AS nid, 1.2806143023666126 AS "E" UNION ALL SELECT 7 AS nid, -0.9320267688352781 AS "E" UNION ALL SELECT 10 AS nid, 1.445665116427606 AS "E" UNION ALL SELECT 11 AS nid, 1.4112213472666462 AS "E" UNION ALL SELECT 13 AS nid, 1.5346009929765903 AS "E" UNION ALL SELECT 14 AS nid, 1.558472183411446 AS "E") AS "Values"), 
"DT_Output_19" AS 
(SELECT "DT_node_lookup_19"."KEY" AS "KEY", "DT_node_lookup_19".node_id_2 AS node_id_2, "DT_node_data_19".nid AS nid, "DT_node_data_19"."E" AS "E" 
FROM "DT_node_lookup_19" LEFT OUTER JOIN "DT_node_data_19" ON "DT_node_lookup_19".node_id_2 = "DT_node_data_19".nid), 
"GB_Model_4_3" AS 
(SELECT "DT_Output_19"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_19"."E" AS "Score_3" 
FROM "DT_Output_19")
 INSERT INTO "TMP_20180602143815_PDT_GB_B1" ("KEY", "Score_0", "Score_1", "Score_2", "Score_3") SELECT "GB_B1"."KEY", "GB_B1"."Score_0", "GB_B1"."Score_1", "GB_B1"."Score_2", "GB_B1"."Score_3" 
FROM (SELECT "GB_esu_1"."KEY" AS "KEY", "GB_esu_1"."Score_0" AS "Score_0", "GB_esu_1"."Score_1" AS "Score_1", "GB_esu_1"."Score_2" AS "Score_2", "GB_esu_1"."Score_3" AS "Score_3" 
FROM (SELECT "GB_Model_2_2"."KEY" AS "KEY", "GB_Model_2_2"."Score_0" AS "Score_0", "GB_Model_2_2"."Score_1" AS "Score_1", "GB_Model_2_2"."Score_2" AS "Score_2", "GB_Model_2_2"."Score_3" AS "Score_3" 
FROM "GB_Model_2_2" UNION ALL SELECT "GB_Model_2_3"."KEY" AS "KEY", "GB_Model_2_3"."Score_0" AS "Score_0", "GB_Model_2_3"."Score_1" AS "Score_1", "GB_Model_2_3"."Score_2" AS "Score_2", "GB_Model_2_3"."Score_3" AS "Score_3" 
FROM "GB_Model_2_3" UNION ALL SELECT "GB_Model_3_0"."KEY" AS "KEY", "GB_Model_3_0"."Score_0" AS "Score_0", "GB_Model_3_0"."Score_1" AS "Score_1", "GB_Model_3_0"."Score_2" AS "Score_2", "GB_Model_3_0"."Score_3" AS "Score_3" 
FROM "GB_Model_3_0" UNION ALL SELECT "GB_Model_3_1"."KEY" AS "KEY", "GB_Model_3_1"."Score_0" AS "Score_0", "GB_Model_3_1"."Score_1" AS "Score_1", "GB_Model_3_1"."Score_2" AS "Score_2", "GB_Model_3_1"."Score_3" AS "Score_3" 
FROM "GB_Model_3_1" UNION ALL SELECT "GB_Model_3_2"."KEY" AS "KEY", "GB_Model_3_2"."Score_0" AS "Score_0", "GB_Model_3_2"."Score_1" AS "Score_1", "GB_Model_3_2"."Score_2" AS "Score_2", "GB_Model_3_2"."Score_3" AS "Score_3" 
FROM "GB_Model_3_2" UNION ALL SELECT "GB_Model_3_3"."KEY" AS "KEY", "GB_Model_3_3"."Score_0" AS "Score_0", "GB_Model_3_3"."Score_1" AS "Score_1", "GB_Model_3_3"."Score_2" AS "Score_2", "GB_Model_3_3"."Score_3" AS "Score_3" 
FROM "GB_Model_3_3" UNION ALL SELECT "GB_Model_4_0"."KEY" AS "KEY", "GB_Model_4_0"."Score_0" AS "Score_0", "GB_Model_4_0"."Score_1" AS "Score_1", "GB_Model_4_0"."Score_2" AS "Score_2", "GB_Model_4_0"."Score_3" AS "Score_3" 
FROM "GB_Model_4_0" UNION ALL SELECT "GB_Model_4_1"."KEY" AS "KEY", "GB_Model_4_1"."Score_0" AS "Score_0", "GB_Model_4_1"."Score_1" AS "Score_1", "GB_Model_4_1"."Score_2" AS "Score_2", "GB_Model_4_1"."Score_3" AS "Score_3" 
FROM "GB_Model_4_1" UNION ALL SELECT "GB_Model_4_2"."KEY" AS "KEY", "GB_Model_4_2"."Score_0" AS "Score_0", "GB_Model_4_2"."Score_1" AS "Score_1", "GB_Model_4_2"."Score_2" AS "Score_2", "GB_Model_4_2"."Score_3" AS "Score_3" 
FROM "GB_Model_4_2" UNION ALL SELECT "GB_Model_4_3"."KEY" AS "KEY", "GB_Model_4_3"."Score_0" AS "Score_0", "GB_Model_4_3"."Score_1" AS "Score_1", "GB_Model_4_3"."Score_2" AS "Score_2", "GB_Model_4_3"."Score_3" AS "Score_3" 
FROM "GB_Model_4_3") AS "GB_esu_1") AS "GB_B1"

-- Code For temporary table TMP_20180602143815_3RE_GB_B2 part 1. Create 


CREATE TEMPORARY TABLE "TMP_20180602143815_3RE_GB_B2" (
	"KEY" BIGINT, 
	"Score_0" FLOAT, 
	"Score_1" FLOAT, 
	"Score_2" FLOAT, 
	"Score_3" FLOAT
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table TMP_20180602143815_3RE_GB_B2 part 2. Populate

WITH "DT_node_lookup_20" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_80 <= -0.1553783416748047) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= -1.8472156524658203) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_16 <= 0.6406643986701965) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_76 <= -1.1234946250915527) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_94 <= -0.05780889838933945) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_22 <= 0.8434454202651978) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_26 <= 0.8363525867462158) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20180602143814_85R_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_20" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS FLOAT) AS "E" 
FROM (SELECT 3 AS nid, 1.3426193196204883 AS "E" UNION ALL SELECT 4 AS nid, 1.3353458443620005 AS "E" UNION ALL SELECT 6 AS nid, -0.9406381593385187 AS "E" UNION ALL SELECT 7 AS nid, -0.8857668187905298 AS "E" UNION ALL SELECT 10 AS nid, 1.2218518525072095 AS "E" UNION ALL SELECT 11 AS nid, -0.9485638030593427 AS "E" UNION ALL SELECT 13 AS nid, -0.9326266320725684 AS "E" UNION ALL SELECT 14 AS nid, 1.2132728225604097 AS "E") AS "Values"), 
"DT_Output_20" AS 
(SELECT "DT_node_lookup_20"."KEY" AS "KEY", "DT_node_lookup_20".node_id_2 AS node_id_2, "DT_node_data_20".nid AS nid, "DT_node_data_20"."E" AS "E" 
FROM "DT_node_lookup_20" LEFT OUTER JOIN "DT_node_data_20" ON "DT_node_lookup_20".node_id_2 = "DT_node_data_20".nid), 
"GB_Model_5_0" AS 
(SELECT "DT_Output_20"."KEY" AS "KEY", "DT_Output_20"."E" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_20"), 
"DT_node_lookup_21" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_94 <= 0.8118096590042114) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_98 <= -1.4607586860656738) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_47 <= 1.8816113471984863) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_75 <= 1.6322026252746582) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_50 <= -0.2165338397026062) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_76 <= 1.5388039350509644) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_86 <= 0.39936602115631104) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20180602143814_85R_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_21" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS FLOAT) AS "E" 
FROM (SELECT 3 AS nid, 1.3821243415829927 AS "E" UNION ALL SELECT 4 AS nid, -0.9387774477396797 AS "E" UNION ALL SELECT 6 AS nid, -0.4775576353298719 AS "E" UNION ALL SELECT 7 AS nid, 1.15337849016909 AS "E" UNION ALL SELECT 10 AS nid, -0.8896354388858893 AS "E" UNION ALL SELECT 11 AS nid, 1.565277908122939 AS "E" UNION ALL SELECT 13 AS nid, 1.638925350811039 AS "E" UNION ALL SELECT 14 AS nid, 1.338656161187888 AS "E") AS "Values"), 
"DT_Output_21" AS 
(SELECT "DT_node_lookup_21"."KEY" AS "KEY", "DT_node_lookup_21".node_id_2 AS node_id_2, "DT_node_data_21".nid AS nid, "DT_node_data_21"."E" AS "E" 
FROM "DT_node_lookup_21" LEFT OUTER JOIN "DT_node_data_21" ON "DT_node_lookup_21".node_id_2 = "DT_node_data_21".nid), 
"GB_Model_5_1" AS 
(SELECT "DT_Output_21"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_21"."E" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_21"), 
"DT_node_lookup_22" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_46 <= -0.9107336401939392) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_101 <= -1.0859026908874512) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_26 <= 0.7532070875167847) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_75 <= 1.4844443798065186) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_36 <= -1.7054295539855957) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_85 <= -0.0021506398916244507) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_55 <= 1.6740303039550781) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20180602143814_85R_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_22" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS FLOAT) AS "E" 
FROM (SELECT 3 AS nid, -0.8509630799155656 AS "E" UNION ALL SELECT 4 AS nid, -0.8800832395842942 AS "E" UNION ALL SELECT 6 AS nid, 1.3075145251011744 AS "E" UNION ALL SELECT 7 AS nid, 1.4357083263458277 AS "E" UNION ALL SELECT 10 AS nid, 1.8407682309835238 AS "E" UNION ALL SELECT 11 AS nid, 1.8328247073968666 AS "E" UNION ALL SELECT 13 AS nid, -0.5449507094224137 AS "E" UNION ALL SELECT 14 AS nid, 1.6901763540097763 AS "E") AS "Values"), 
"DT_Output_22" AS 
(SELECT "DT_node_lookup_22"."KEY" AS "KEY", "DT_node_lookup_22".node_id_2 AS node_id_2, "DT_node_data_22".nid AS nid, "DT_node_data_22"."E" AS "E" 
FROM "DT_node_lookup_22" LEFT OUTER JOIN "DT_node_data_22" ON "DT_node_lookup_22".node_id_2 = "DT_node_data_22".nid), 
"GB_Model_5_2" AS 
(SELECT "DT_Output_22"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_22"."E" AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_22"), 
"DT_node_lookup_23" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_22 <= 1.0979300737380981) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_101 <= -1.3270068168640137) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_60 <= 0.29305365681648254) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_16 <= 1.6193525791168213) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_53 <= 0.24498701095581055) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_25 <= 0.8231299519538879) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_98 <= -1.103309154510498) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20180602143814_85R_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_23" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS FLOAT) AS "E" 
FROM (SELECT 3 AS nid, 1.4175679653175726 AS "E" UNION ALL SELECT 4 AS nid, -0.12453246290997186 AS "E" UNION ALL SELECT 6 AS nid, -0.586558106308841 AS "E" UNION ALL SELECT 7 AS nid, 1.5580412845193212 AS "E" UNION ALL SELECT 10 AS nid, -0.8849681386188358 AS "E" UNION ALL SELECT 11 AS nid, 1.3028853380526932 AS "E" UNION ALL SELECT 13 AS nid, 2.387779467499307 AS "E" UNION ALL SELECT 14 AS nid, 1.378561285784344 AS "E") AS "Values"), 
"DT_Output_23" AS 
(SELECT "DT_node_lookup_23"."KEY" AS "KEY", "DT_node_lookup_23".node_id_2 AS node_id_2, "DT_node_data_23".nid AS nid, "DT_node_data_23"."E" AS "E" 
FROM "DT_node_lookup_23" LEFT OUTER JOIN "DT_node_data_23" ON "DT_node_lookup_23".node_id_2 = "DT_node_data_23".nid), 
"GB_Model_5_3" AS 
(SELECT "DT_Output_23"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_23"."E" AS "Score_3" 
FROM "DT_Output_23"), 
"DT_node_lookup_24" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_80 <= -0.1553783416748047) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_28 <= 2.1494405269622803) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_76 <= -1.1234946250915527) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_19 <= -0.16441833972930908) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_50 <= -0.18425396084785461) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_46 <= 1.1959999799728394) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= -0.7356767654418945) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20180602143814_85R_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_24" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS FLOAT) AS "E" 
FROM (SELECT 3 AS nid, -0.9304988210149031 AS "E" UNION ALL SELECT 4 AS nid, -0.8724528613916034 AS "E" UNION ALL SELECT 6 AS nid, 1.2413303804979483 AS "E" UNION ALL SELECT 7 AS nid, 1.2355094807707665 AS "E" UNION ALL SELECT 10 AS nid, 1.189165191985788 AS "E" UNION ALL SELECT 11 AS nid, -0.9166097815872198 AS "E" UNION ALL SELECT 13 AS nid, 0.8524096321720492 AS "E" UNION ALL SELECT 14 AS nid, -0.6914538498917849 AS "E") AS "Values"), 
"DT_Output_24" AS 
(SELECT "DT_node_lookup_24"."KEY" AS "KEY", "DT_node_lookup_24".node_id_2 AS node_id_2, "DT_node_data_24".nid AS nid, "DT_node_data_24"."E" AS "E" 
FROM "DT_node_lookup_24" LEFT OUTER JOIN "DT_node_data_24" ON "DT_node_lookup_24".node_id_2 = "DT_node_data_24".nid), 
"GB_Model_6_0" AS 
(SELECT "DT_Output_24"."KEY" AS "KEY", "DT_Output_24"."E" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_24"), 
"DT_node_lookup_25" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_46 <= -0.22731533646583557) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_101 <= -1.002084493637085) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_56 <= 0.5013420581817627) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_76 <= -1.0795502662658691) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_20 <= -0.7592100501060486) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= -1.0451323986053467) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_36 <= -1.1243650913238525) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20180602143814_85R_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_25" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS FLOAT) AS "E" 
FROM (SELECT 3 AS nid, 1.3076062462438436 AS "E" UNION ALL SELECT 4 AS nid, -0.9029148923864913 AS "E" UNION ALL SELECT 6 AS nid, -1.0117449939281118 AS "E" UNION ALL SELECT 7 AS nid, -0.895292047705748 AS "E" UNION ALL SELECT 10 AS nid, -0.9135322509632156 AS "E" UNION ALL SELECT 11 AS nid, 1.6082542538261564 AS "E" UNION ALL SELECT 13 AS nid, 1.4873391753988339 AS "E" UNION ALL SELECT 14 AS nid, -0.17993142864854897 AS "E") AS "Values"), 
"DT_Output_25" AS 
(SELECT "DT_node_lookup_25"."KEY" AS "KEY", "DT_node_lookup_25".node_id_2 AS node_id_2, "DT_node_data_25".nid AS nid, "DT_node_data_25"."E" AS "E" 
FROM "DT_node_lookup_25" LEFT OUTER JOIN "DT_node_data_25" ON "DT_node_lookup_25".node_id_2 = "DT_node_data_25".nid), 
"GB_Model_6_1" AS 
(SELECT "DT_Output_25"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_25"."E" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_25"), 
"DT_node_lookup_26" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_46 <= -0.9107336401939392) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_101 <= -1.0859026908874512) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_72 <= 0.13266783952713013) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_26 <= -0.9447900056838989) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= 1.8007181882858276) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_34 <= 1.5472302436828613) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_71 <= -0.2749342620372772) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20180602143814_85R_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_26" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS FLOAT) AS "E" 
FROM (SELECT 3 AS nid, -0.8352489995804813 AS "E" UNION ALL SELECT 4 AS nid, -0.8618988212033161 AS "E" UNION ALL SELECT 6 AS nid, 1.2835550076193074 AS "E" UNION ALL SELECT 7 AS nid, 1.1992121079917049 AS "E" UNION ALL SELECT 10 AS nid, -0.5183525604530856 AS "E" UNION ALL SELECT 11 AS nid, 1.617197946728196 AS "E" UNION ALL SELECT 13 AS nid, 1.4054874698148367 AS "E" UNION ALL SELECT 14 AS nid, 1.8897738132835158 AS "E") AS "Values"), 
"DT_Output_26" AS 
(SELECT "DT_node_lookup_26"."KEY" AS "KEY", "DT_node_lookup_26".node_id_2 AS node_id_2, "DT_node_data_26".nid AS nid, "DT_node_data_26"."E" AS "E" 
FROM "DT_node_lookup_26" LEFT OUTER JOIN "DT_node_data_26" ON "DT_node_lookup_26".node_id_2 = "DT_node_data_26".nid), 
"GB_Model_6_2" AS 
(SELECT "DT_Output_26"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_26"."E" AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_26"), 
"DT_node_lookup_27" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_46 <= 0.9308550357818604) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_44 <= 1.5560245513916016) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_53 <= 1.564861536026001) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_62 <= 1.4148856401443481) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_101 <= -0.029002565890550613) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_39 <= 0.7787460684776306) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_71 <= 1.756631851196289) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20180602143814_85R_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_27" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS FLOAT) AS "E" 
FROM (SELECT 3 AS nid, -0.5377278062142139 AS "E" UNION ALL SELECT 4 AS nid, 1.2570651910041113 AS "E" UNION ALL SELECT 6 AS nid, 1.6579382872320982 AS "E" UNION ALL SELECT 7 AS nid, -0.8864377532586295 AS "E" UNION ALL SELECT 10 AS nid, 1.3056218714684036 AS "E" UNION ALL SELECT 11 AS nid, 1.7459552068430226 AS "E" UNION ALL SELECT 13 AS nid, -0.9164888485636374 AS "E" UNION ALL SELECT 14 AS nid, 1.267278593550534 AS "E") AS "Values"), 
"DT_Output_27" AS 
(SELECT "DT_node_lookup_27"."KEY" AS "KEY", "DT_node_lookup_27".node_id_2 AS node_id_2, "DT_node_data_27".nid AS nid, "DT_node_data_27"."E" AS "E" 
FROM "DT_node_lookup_27" LEFT OUTER JOIN "DT_node_data_27" ON "DT_node_lookup_27".node_id_2 = "DT_node_data_27".nid), 
"GB_Model_6_3" AS 
(SELECT "DT_Output_27"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_27"."E" AS "Score_3" 
FROM "DT_Output_27"), 
"DT_node_lookup_28" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_80 <= -0.1553783416748047) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= -1.8472156524658203) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_22 <= -0.642440915107727) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_76 <= -1.1234946250915527) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_78 <= -0.765346884727478) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= -1.7261626720428467) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_67 <= -0.6694384813308716) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20180602143814_85R_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_28" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS FLOAT) AS "E" 
FROM (SELECT 3 AS nid, 1.1518599732675447 AS "E" UNION ALL SELECT 4 AS nid, 1.1626923000358345 AS "E" UNION ALL SELECT 6 AS nid, -0.9224491375155561 AS "E" UNION ALL SELECT 7 AS nid, -0.8586532184822421 AS "E" UNION ALL SELECT 10 AS nid, -0.9021093422895854 AS "E" UNION ALL SELECT 11 AS nid, 1.246500717376577 AS "E" UNION ALL SELECT 13 AS nid, 1.0294608791768587 AS "E" UNION ALL SELECT 14 AS nid, -0.4175097321709779 AS "E") AS "Values"), 
"DT_Output_28" AS 
(SELECT "DT_node_lookup_28"."KEY" AS "KEY", "DT_node_lookup_28".node_id_2 AS node_id_2, "DT_node_data_28".nid AS nid, "DT_node_data_28"."E" AS "E" 
FROM "DT_node_lookup_28" LEFT OUTER JOIN "DT_node_data_28" ON "DT_node_lookup_28".node_id_2 = "DT_node_data_28".nid), 
"GB_Model_7_0" AS 
(SELECT "DT_Output_28"."KEY" AS "KEY", "DT_Output_28"."E" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_28"), 
"DT_node_lookup_29" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_70 <= -0.6121459007263184) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_94 <= 2.0101394653320312) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= -0.239798903465271) THEN 3 ELSE 4 END ELSE 5 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_96 <= -0.20035067200660706) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= -1.846571683883667) THEN 8 ELSE 9 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_69 <= -0.649189829826355) THEN 11 ELSE 12 END END END AS node_id_2 
FROM "TMP_20180602143814_85R_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_29" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS FLOAT) AS "E" 
FROM (SELECT 3 AS nid, -0.9478786304223537 AS "E" UNION ALL SELECT 4 AS nid, -0.8735213591484415 AS "E" UNION ALL SELECT 5 AS nid, 1.375120896331633 AS "E" UNION ALL SELECT 8 AS nid, 1.5655138737390388 AS "E" UNION ALL SELECT 9 AS nid, -0.6180064861948817 AS "E" UNION ALL SELECT 11 AS nid, 1.430936964048758 AS "E" UNION ALL SELECT 12 AS nid, 0.3289890853987769 AS "E") AS "Values"), 
"DT_Output_29" AS 
(SELECT "DT_node_lookup_29"."KEY" AS "KEY", "DT_node_lookup_29".node_id_2 AS node_id_2, "DT_node_data_29".nid AS nid, "DT_node_data_29"."E" AS "E" 
FROM "DT_node_lookup_29" LEFT OUTER JOIN "DT_node_data_29" ON "DT_node_lookup_29".node_id_2 = "DT_node_data_29".nid), 
"GB_Model_7_1" AS 
(SELECT "DT_Output_29"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_29"."E" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_29")
 INSERT INTO "TMP_20180602143815_3RE_GB_B2" ("KEY", "Score_0", "Score_1", "Score_2", "Score_3") SELECT "GB_B2"."KEY", "GB_B2"."Score_0", "GB_B2"."Score_1", "GB_B2"."Score_2", "GB_B2"."Score_3" 
FROM (SELECT "GB_esu_2"."KEY" AS "KEY", "GB_esu_2"."Score_0" AS "Score_0", "GB_esu_2"."Score_1" AS "Score_1", "GB_esu_2"."Score_2" AS "Score_2", "GB_esu_2"."Score_3" AS "Score_3" 
FROM (SELECT "GB_Model_5_0"."KEY" AS "KEY", "GB_Model_5_0"."Score_0" AS "Score_0", "GB_Model_5_0"."Score_1" AS "Score_1", "GB_Model_5_0"."Score_2" AS "Score_2", "GB_Model_5_0"."Score_3" AS "Score_3" 
FROM "GB_Model_5_0" UNION ALL SELECT "GB_Model_5_1"."KEY" AS "KEY", "GB_Model_5_1"."Score_0" AS "Score_0", "GB_Model_5_1"."Score_1" AS "Score_1", "GB_Model_5_1"."Score_2" AS "Score_2", "GB_Model_5_1"."Score_3" AS "Score_3" 
FROM "GB_Model_5_1" UNION ALL SELECT "GB_Model_5_2"."KEY" AS "KEY", "GB_Model_5_2"."Score_0" AS "Score_0", "GB_Model_5_2"."Score_1" AS "Score_1", "GB_Model_5_2"."Score_2" AS "Score_2", "GB_Model_5_2"."Score_3" AS "Score_3" 
FROM "GB_Model_5_2" UNION ALL SELECT "GB_Model_5_3"."KEY" AS "KEY", "GB_Model_5_3"."Score_0" AS "Score_0", "GB_Model_5_3"."Score_1" AS "Score_1", "GB_Model_5_3"."Score_2" AS "Score_2", "GB_Model_5_3"."Score_3" AS "Score_3" 
FROM "GB_Model_5_3" UNION ALL SELECT "GB_Model_6_0"."KEY" AS "KEY", "GB_Model_6_0"."Score_0" AS "Score_0", "GB_Model_6_0"."Score_1" AS "Score_1", "GB_Model_6_0"."Score_2" AS "Score_2", "GB_Model_6_0"."Score_3" AS "Score_3" 
FROM "GB_Model_6_0" UNION ALL SELECT "GB_Model_6_1"."KEY" AS "KEY", "GB_Model_6_1"."Score_0" AS "Score_0", "GB_Model_6_1"."Score_1" AS "Score_1", "GB_Model_6_1"."Score_2" AS "Score_2", "GB_Model_6_1"."Score_3" AS "Score_3" 
FROM "GB_Model_6_1" UNION ALL SELECT "GB_Model_6_2"."KEY" AS "KEY", "GB_Model_6_2"."Score_0" AS "Score_0", "GB_Model_6_2"."Score_1" AS "Score_1", "GB_Model_6_2"."Score_2" AS "Score_2", "GB_Model_6_2"."Score_3" AS "Score_3" 
FROM "GB_Model_6_2" UNION ALL SELECT "GB_Model_6_3"."KEY" AS "KEY", "GB_Model_6_3"."Score_0" AS "Score_0", "GB_Model_6_3"."Score_1" AS "Score_1", "GB_Model_6_3"."Score_2" AS "Score_2", "GB_Model_6_3"."Score_3" AS "Score_3" 
FROM "GB_Model_6_3" UNION ALL SELECT "GB_Model_7_0"."KEY" AS "KEY", "GB_Model_7_0"."Score_0" AS "Score_0", "GB_Model_7_0"."Score_1" AS "Score_1", "GB_Model_7_0"."Score_2" AS "Score_2", "GB_Model_7_0"."Score_3" AS "Score_3" 
FROM "GB_Model_7_0" UNION ALL SELECT "GB_Model_7_1"."KEY" AS "KEY", "GB_Model_7_1"."Score_0" AS "Score_0", "GB_Model_7_1"."Score_1" AS "Score_1", "GB_Model_7_1"."Score_2" AS "Score_2", "GB_Model_7_1"."Score_3" AS "Score_3" 
FROM "GB_Model_7_1") AS "GB_esu_2") AS "GB_B2"

-- Code For temporary table TMP_20180602143815_9E7_GB_B3 part 1. Create 


CREATE TEMPORARY TABLE "TMP_20180602143815_9E7_GB_B3" (
	"KEY" BIGINT, 
	"Score_0" FLOAT, 
	"Score_1" FLOAT, 
	"Score_2" FLOAT, 
	"Score_3" FLOAT
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table TMP_20180602143815_9E7_GB_B3 part 2. Populate

WITH "DT_node_lookup_30" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_46 <= -0.9107336401939392) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_101 <= -1.0859026908874512) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_29 <= -1.7936248779296875) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_26 <= -0.9447900056838989) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_36 <= -1.7054295539855957) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_36 <= -2.102421283721924) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_76 <= -1.783512830734253) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20180602143814_85R_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_30" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS FLOAT) AS "E" 
FROM (SELECT 3 AS nid, -0.8213435880102378 AS "E" UNION ALL SELECT 4 AS nid, -0.8524253870854769 AS "E" UNION ALL SELECT 6 AS nid, 1.1875483510728062 AS "E" UNION ALL SELECT 7 AS nid, 1.1228189956094587 AS "E" UNION ALL SELECT 10 AS nid, 1.5676721629233483 AS "E" UNION ALL SELECT 11 AS nid, 1.5539670205932044 AS "E" UNION ALL SELECT 13 AS nid, 1.6619449260812678 AS "E" UNION ALL SELECT 14 AS nid, -0.5177142299900293 AS "E") AS "Values"), 
"DT_Output_30" AS 
(SELECT "DT_node_lookup_30"."KEY" AS "KEY", "DT_node_lookup_30".node_id_2 AS node_id_2, "DT_node_data_30".nid AS nid, "DT_node_data_30"."E" AS "E" 
FROM "DT_node_lookup_30" LEFT OUTER JOIN "DT_node_data_30" ON "DT_node_lookup_30".node_id_2 = "DT_node_data_30".nid), 
"GB_Model_7_2" AS 
(SELECT "DT_Output_30"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_30"."E" AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_30"), 
"DT_node_lookup_31" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_21 <= -0.2989218831062317) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_65 <= -0.9431060552597046) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= -0.31204187870025635) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_69 <= -1.139033317565918) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_101 <= -0.03666681796312332) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_90 <= 0.09711381793022156) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= 1.5415096282958984) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20180602143814_85R_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_31" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS FLOAT) AS "E" 
FROM (SELECT 3 AS nid, -0.8773687213396018 AS "E" UNION ALL SELECT 4 AS nid, 1.3700935482236631 AS "E" UNION ALL SELECT 6 AS nid, -1.0338307681626626 AS "E" UNION ALL SELECT 7 AS nid, -0.8932894893042872 AS "E" UNION ALL SELECT 10 AS nid, 1.2445270934242114 AS "E" UNION ALL SELECT 11 AS nid, -0.117622032831235 AS "E" UNION ALL SELECT 13 AS nid, -0.4569815987144589 AS "E" UNION ALL SELECT 14 AS nid, 1.756774296196505 AS "E") AS "Values"), 
"DT_Output_31" AS 
(SELECT "DT_node_lookup_31"."KEY" AS "KEY", "DT_node_lookup_31".node_id_2 AS node_id_2, "DT_node_data_31".nid AS nid, "DT_node_data_31"."E" AS "E" 
FROM "DT_node_lookup_31" LEFT OUTER JOIN "DT_node_data_31" ON "DT_node_lookup_31".node_id_2 = "DT_node_data_31".nid), 
"GB_Model_7_3" AS 
(SELECT "DT_Output_31"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_31"."E" AS "Score_3" 
FROM "DT_Output_31"), 
"DT_node_lookup_32" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_80 <= -0.1553783416748047) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= -1.8472156524658203) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_60 <= 0.07895463705062866) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_76 <= -1.1234946250915527) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_50 <= -0.18425396084785461) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_51 <= 0.7176387906074524) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_73 <= 0.8277420401573181) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20180602143814_85R_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_32" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS FLOAT) AS "E" 
FROM (SELECT 3 AS nid, 1.098092930410645 AS "E" UNION ALL SELECT 4 AS nid, 1.1048700378005594 AS "E" UNION ALL SELECT 6 AS nid, -0.9073006028431733 AS "E" UNION ALL SELECT 7 AS nid, -0.8479751346110799 AS "E" UNION ALL SELECT 10 AS nid, 1.2036986074754696 AS "E" UNION ALL SELECT 11 AS nid, 0.33135115405002846 AS "E" UNION ALL SELECT 13 AS nid, -0.4409215633982806 AS "E" UNION ALL SELECT 14 AS nid, 1.0357127026002682 AS "E") AS "Values"), 
"DT_Output_32" AS 
(SELECT "DT_node_lookup_32"."KEY" AS "KEY", "DT_node_lookup_32".node_id_2 AS node_id_2, "DT_node_data_32".nid AS nid, "DT_node_data_32"."E" AS "E" 
FROM "DT_node_lookup_32" LEFT OUTER JOIN "DT_node_data_32" ON "DT_node_lookup_32".node_id_2 = "DT_node_data_32".nid), 
"GB_Model_8_0" AS 
(SELECT "DT_Output_32"."KEY" AS "KEY", "DT_Output_32"."E" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_32"), 
"DT_node_lookup_33" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_46 <= -0.22731533646583557) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_101 <= -1.002084493637085) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= -0.39271634817123413) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_76 <= -1.0795502662658691) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_20 <= -0.7592100501060486) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= -1.0451323986053467) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_36 <= -1.1243650913238525) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20180602143814_85R_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_33" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS FLOAT) AS "E" 
FROM (SELECT 3 AS nid, -0.8697767391396731 AS "E" UNION ALL SELECT 4 AS nid, 1.161067300861143 AS "E" UNION ALL SELECT 6 AS nid, -0.9853835689638151 AS "E" UNION ALL SELECT 7 AS nid, -0.8654425720218312 AS "E" UNION ALL SELECT 10 AS nid, -0.8809114132944612 AS "E" UNION ALL SELECT 11 AS nid, 1.386271768405316 AS "E" UNION ALL SELECT 13 AS nid, 1.3045529466167187 AS "E" UNION ALL SELECT 14 AS nid, -0.17150353905882865 AS "E") AS "Values"), 
"DT_Output_33" AS 
(SELECT "DT_node_lookup_33"."KEY" AS "KEY", "DT_node_lookup_33".node_id_2 AS node_id_2, "DT_node_data_33".nid AS nid, "DT_node_data_33"."E" AS "E" 
FROM "DT_node_lookup_33" LEFT OUTER JOIN "DT_node_data_33" ON "DT_node_lookup_33".node_id_2 = "DT_node_data_33".nid), 
"GB_Model_8_1" AS 
(SELECT "DT_Output_33"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_33"."E" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_33"), 
"DT_node_lookup_34" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_46 <= -0.9107336401939392) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_101 <= -1.0859026908874512) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_29 <= -1.7936248779296875) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_26 <= -0.7478870153427124) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_72 <= 1.2340123653411865) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_76 <= -1.783512830734253) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_80 <= -0.09065847098827362) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20180602143814_85R_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_34" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS FLOAT) AS "E" 
FROM (SELECT 3 AS nid, -0.8093835695177974 AS "E" UNION ALL SELECT 4 AS nid, -0.8385365816532723 AS "E" UNION ALL SELECT 6 AS nid, 1.1082182222249575 AS "E" UNION ALL SELECT 7 AS nid, 1.0571504781859413 AS "E" UNION ALL SELECT 10 AS nid, 1.3845923117781047 AS "E" UNION ALL SELECT 11 AS nid, -0.607804106068613 AS "E" UNION ALL SELECT 13 AS nid, 1.752573276161282 AS "E" UNION ALL SELECT 14 AS nid, -0.8613737651714855 AS "E") AS "Values"), 
"DT_Output_34" AS 
(SELECT "DT_node_lookup_34"."KEY" AS "KEY", "DT_node_lookup_34".node_id_2 AS node_id_2, "DT_node_data_34".nid AS nid, "DT_node_data_34"."E" AS "E" 
FROM "DT_node_lookup_34" LEFT OUTER JOIN "DT_node_data_34" ON "DT_node_lookup_34".node_id_2 = "DT_node_data_34".nid), 
"GB_Model_8_2" AS 
(SELECT "DT_Output_34"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_34"."E" AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_34"), 
"DT_node_lookup_35" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_22 <= 1.0979300737380981) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_16 <= 1.2700200080871582) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_43 <= 0.46259838342666626) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_90 <= 0.33065545558929443) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_53 <= 0.24498701095581055) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_30 <= -0.3165156841278076) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= 1.389153003692627) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20180602143814_85R_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_35" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS FLOAT) AS "E" 
FROM (SELECT 3 AS nid, -0.7957999306624423 AS "E" UNION ALL SELECT 4 AS nid, 0.4157071316778201 AS "E" UNION ALL SELECT 6 AS nid, 1.2484239782357147 AS "E" UNION ALL SELECT 7 AS nid, -0.9568912535216594 AS "E" UNION ALL SELECT 10 AS nid, 1.130023866830783 AS "E" UNION ALL SELECT 11 AS nid, -0.8520083363685381 AS "E" UNION ALL SELECT 13 AS nid, 1.148466904460351 AS "E" UNION ALL SELECT 14 AS nid, 1.919645498246487 AS "E") AS "Values"), 
"DT_Output_35" AS 
(SELECT "DT_node_lookup_35"."KEY" AS "KEY", "DT_node_lookup_35".node_id_2 AS node_id_2, "DT_node_data_35".nid AS nid, "DT_node_data_35"."E" AS "E" 
FROM "DT_node_lookup_35" LEFT OUTER JOIN "DT_node_data_35" ON "DT_node_lookup_35".node_id_2 = "DT_node_data_35".nid), 
"GB_Model_8_3" AS 
(SELECT "DT_Output_35"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_35"."E" AS "Score_3" 
FROM "DT_Output_35"), 
"DT_node_lookup_36" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_21 <= 1.7593741416931152) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_39 <= 1.7385339736938477) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_45 <= 0.24861092865467072) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_87 <= -0.49944400787353516) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= -0.9933152794837952) THEN 9 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_45 <= -0.17206484079360962) THEN 11 ELSE 12 END END END AS node_id_2 
FROM "TMP_20180602143814_85R_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_36" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS FLOAT) AS "E" 
FROM (SELECT 3 AS nid, -0.6451330580844075 AS "E" UNION ALL SELECT 4 AS nid, 0.2425350517139753 AS "E" UNION ALL SELECT 6 AS nid, 1.2105101080085545 AS "E" UNION ALL SELECT 7 AS nid, 1.265026928120129 AS "E" UNION ALL SELECT 9 AS nid, 1.76955454310561 AS "E" UNION ALL SELECT 11 AS nid, 1.206287546052212 AS "E" UNION ALL SELECT 12 AS nid, 1.0731840921452138 AS "E") AS "Values"), 
"DT_Output_36" AS 
(SELECT "DT_node_lookup_36"."KEY" AS "KEY", "DT_node_lookup_36".node_id_2 AS node_id_2, "DT_node_data_36".nid AS nid, "DT_node_data_36"."E" AS "E" 
FROM "DT_node_lookup_36" LEFT OUTER JOIN "DT_node_data_36" ON "DT_node_lookup_36".node_id_2 = "DT_node_data_36".nid), 
"GB_Model_9_0" AS 
(SELECT "DT_Output_36"."KEY" AS "KEY", "DT_Output_36"."E" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_36"), 
"DT_node_lookup_37" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_70 <= -0.6121459007263184) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_58 <= 1.671057939529419) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_90 <= -1.4352823495864868) THEN 3 ELSE 4 END ELSE 5 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_18 <= 1.3717072010040283) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_16 <= -0.6841316223144531) THEN 8 ELSE 9 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_48 <= 0.8230514526367188) THEN 11 ELSE 12 END END END AS node_id_2 
FROM "TMP_20180602143814_85R_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_37" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS FLOAT) AS "E" 
FROM (SELECT 3 AS nid, -1.0010303962088651 AS "E" UNION ALL SELECT 4 AS nid, -0.8693149331527883 AS "E" UNION ALL SELECT 5 AS nid, 1.2381354376837475 AS "E" UNION ALL SELECT 8 AS nid, 0.8499351304152499 AS "E" UNION ALL SELECT 9 AS nid, -0.21266855803555398 AS "E" UNION ALL SELECT 11 AS nid, 1.6238966181193137 AS "E" UNION ALL SELECT 12 AS nid, 1.116381748104244 AS "E") AS "Values"), 
"DT_Output_37" AS 
(SELECT "DT_node_lookup_37"."KEY" AS "KEY", "DT_node_lookup_37".node_id_2 AS node_id_2, "DT_node_data_37".nid AS nid, "DT_node_data_37"."E" AS "E" 
FROM "DT_node_lookup_37" LEFT OUTER JOIN "DT_node_data_37" ON "DT_node_lookup_37".node_id_2 = "DT_node_data_37".nid), 
"GB_Model_9_1" AS 
(SELECT "DT_Output_37"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_37"."E" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_37"), 
"DT_node_lookup_38" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_46 <= -0.9107336401939392) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_101 <= -1.0859026908874512) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= 0.42903536558151245) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_26 <= -0.7478870153427124) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= -1.621206283569336) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_78 <= 0.12631350755691528) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_36 <= -1.7054295539855957) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20180602143814_85R_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_38" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS FLOAT) AS "E" 
FROM (SELECT 3 AS nid, -0.8334223681210862 AS "E" UNION ALL SELECT 4 AS nid, -0.8007981663660826 AS "E" UNION ALL SELECT 6 AS nid, 1.0506875915864593 AS "E" UNION ALL SELECT 7 AS nid, 1.0129658071675613 AS "E" UNION ALL SELECT 10 AS nid, 1.4516143623714441 AS "E" UNION ALL SELECT 11 AS nid, 1.330083704266044 AS "E" UNION ALL SELECT 13 AS nid, 1.3824645235274267 AS "E" UNION ALL SELECT 14 AS nid, -0.46270211228805375 AS "E") AS "Values"), 
"DT_Output_38" AS 
(SELECT "DT_node_lookup_38"."KEY" AS "KEY", "DT_node_lookup_38".node_id_2 AS node_id_2, "DT_node_data_38".nid AS nid, "DT_node_data_38"."E" AS "E" 
FROM "DT_node_lookup_38" LEFT OUTER JOIN "DT_node_data_38" ON "DT_node_lookup_38".node_id_2 = "DT_node_data_38".nid), 
"GB_Model_9_2" AS 
(SELECT "DT_Output_38"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_38"."E" AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_38"), 
"DT_node_lookup_39" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_21 <= -0.2989218831062317) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_65 <= -0.9431060552597046) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_83 <= 0.45462626218795776) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_69 <= -1.139033317565918) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_101 <= -0.03666681796312332) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_90 <= 0.09711381793022156) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= 1.5415096282958984) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20180602143814_85R_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_39" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS FLOAT) AS "E" 
FROM (SELECT 3 AS nid, 1.2095059538828965 AS "E" UNION ALL SELECT 4 AS nid, -0.858808553619621 AS "E" UNION ALL SELECT 6 AS nid, -0.9929121547425984 AS "E" UNION ALL SELECT 7 AS nid, -0.870883653124825 AS "E" UNION ALL SELECT 10 AS nid, 1.1122578015836058 AS "E" UNION ALL SELECT 11 AS nid, -0.09425143906949286 AS "E" UNION ALL SELECT 13 AS nid, -0.42272007571558384 AS "E" UNION ALL SELECT 14 AS nid, 1.5130079663966367 AS "E") AS "Values"), 
"DT_Output_39" AS 
(SELECT "DT_node_lookup_39"."KEY" AS "KEY", "DT_node_lookup_39".node_id_2 AS node_id_2, "DT_node_data_39".nid AS nid, "DT_node_data_39"."E" AS "E" 
FROM "DT_node_lookup_39" LEFT OUTER JOIN "DT_node_data_39" ON "DT_node_lookup_39".node_id_2 = "DT_node_data_39".nid), 
"GB_Model_9_3" AS 
(SELECT "DT_Output_39"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_39"."E" AS "Score_3" 
FROM "DT_Output_39")
 INSERT INTO "TMP_20180602143815_9E7_GB_B3" ("KEY", "Score_0", "Score_1", "Score_2", "Score_3") SELECT "GB_B3"."KEY", "GB_B3"."Score_0", "GB_B3"."Score_1", "GB_B3"."Score_2", "GB_B3"."Score_3" 
FROM (SELECT "GB_esu_3"."KEY" AS "KEY", "GB_esu_3"."Score_0" AS "Score_0", "GB_esu_3"."Score_1" AS "Score_1", "GB_esu_3"."Score_2" AS "Score_2", "GB_esu_3"."Score_3" AS "Score_3" 
FROM (SELECT "GB_Model_7_2"."KEY" AS "KEY", "GB_Model_7_2"."Score_0" AS "Score_0", "GB_Model_7_2"."Score_1" AS "Score_1", "GB_Model_7_2"."Score_2" AS "Score_2", "GB_Model_7_2"."Score_3" AS "Score_3" 
FROM "GB_Model_7_2" UNION ALL SELECT "GB_Model_7_3"."KEY" AS "KEY", "GB_Model_7_3"."Score_0" AS "Score_0", "GB_Model_7_3"."Score_1" AS "Score_1", "GB_Model_7_3"."Score_2" AS "Score_2", "GB_Model_7_3"."Score_3" AS "Score_3" 
FROM "GB_Model_7_3" UNION ALL SELECT "GB_Model_8_0"."KEY" AS "KEY", "GB_Model_8_0"."Score_0" AS "Score_0", "GB_Model_8_0"."Score_1" AS "Score_1", "GB_Model_8_0"."Score_2" AS "Score_2", "GB_Model_8_0"."Score_3" AS "Score_3" 
FROM "GB_Model_8_0" UNION ALL SELECT "GB_Model_8_1"."KEY" AS "KEY", "GB_Model_8_1"."Score_0" AS "Score_0", "GB_Model_8_1"."Score_1" AS "Score_1", "GB_Model_8_1"."Score_2" AS "Score_2", "GB_Model_8_1"."Score_3" AS "Score_3" 
FROM "GB_Model_8_1" UNION ALL SELECT "GB_Model_8_2"."KEY" AS "KEY", "GB_Model_8_2"."Score_0" AS "Score_0", "GB_Model_8_2"."Score_1" AS "Score_1", "GB_Model_8_2"."Score_2" AS "Score_2", "GB_Model_8_2"."Score_3" AS "Score_3" 
FROM "GB_Model_8_2" UNION ALL SELECT "GB_Model_8_3"."KEY" AS "KEY", "GB_Model_8_3"."Score_0" AS "Score_0", "GB_Model_8_3"."Score_1" AS "Score_1", "GB_Model_8_3"."Score_2" AS "Score_2", "GB_Model_8_3"."Score_3" AS "Score_3" 
FROM "GB_Model_8_3" UNION ALL SELECT "GB_Model_9_0"."KEY" AS "KEY", "GB_Model_9_0"."Score_0" AS "Score_0", "GB_Model_9_0"."Score_1" AS "Score_1", "GB_Model_9_0"."Score_2" AS "Score_2", "GB_Model_9_0"."Score_3" AS "Score_3" 
FROM "GB_Model_9_0" UNION ALL SELECT "GB_Model_9_1"."KEY" AS "KEY", "GB_Model_9_1"."Score_0" AS "Score_0", "GB_Model_9_1"."Score_1" AS "Score_1", "GB_Model_9_1"."Score_2" AS "Score_2", "GB_Model_9_1"."Score_3" AS "Score_3" 
FROM "GB_Model_9_1" UNION ALL SELECT "GB_Model_9_2"."KEY" AS "KEY", "GB_Model_9_2"."Score_0" AS "Score_0", "GB_Model_9_2"."Score_1" AS "Score_1", "GB_Model_9_2"."Score_2" AS "Score_2", "GB_Model_9_2"."Score_3" AS "Score_3" 
FROM "GB_Model_9_2" UNION ALL SELECT "GB_Model_9_3"."KEY" AS "KEY", "GB_Model_9_3"."Score_0" AS "Score_0", "GB_Model_9_3"."Score_1" AS "Score_1", "GB_Model_9_3"."Score_2" AS "Score_2", "GB_Model_9_3"."Score_3" AS "Score_3" 
FROM "GB_Model_9_3") AS "GB_esu_3") AS "GB_B3"

-- Code For temporary table TMP_20180602143815_EP9_GB_B4 part 1. Create 


CREATE TEMPORARY TABLE "TMP_20180602143815_EP9_GB_B4" (
	"KEY" BIGINT, 
	"Score_0" FLOAT, 
	"Score_1" FLOAT, 
	"Score_2" FLOAT, 
	"Score_3" FLOAT
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table TMP_20180602143815_EP9_GB_B4 part 2. Populate

WITH "DT_node_lookup_40" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_80 <= -0.1553783416748047) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= -1.8472156524658203) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_14 <= -0.584038496017456) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_76 <= -1.1234946250915527) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_78 <= -0.765346884727478) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_31 <= 0.6125394105911255) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_63 <= 0.13777482509613037) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20180602143814_85R_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_40" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS FLOAT) AS "E" 
FROM (SELECT 3 AS nid, 1.055915577704632 AS "E" UNION ALL SELECT 4 AS nid, 1.0078789087890192 AS "E" UNION ALL SELECT 6 AS nid, -0.8924874024858246 AS "E" UNION ALL SELECT 7 AS nid, -0.8333958448488576 AS "E" UNION ALL SELECT 10 AS nid, 1.0936313901247483 AS "E" UNION ALL SELECT 11 AS nid, -0.8819240008168961 AS "E" UNION ALL SELECT 13 AS nid, -0.710345598497201 AS "E" UNION ALL SELECT 14 AS nid, 0.6017679787911173 AS "E") AS "Values"), 
"DT_Output_40" AS 
(SELECT "DT_node_lookup_40"."KEY" AS "KEY", "DT_node_lookup_40".node_id_2 AS node_id_2, "DT_node_data_40".nid AS nid, "DT_node_data_40"."E" AS "E" 
FROM "DT_node_lookup_40" LEFT OUTER JOIN "DT_node_data_40" ON "DT_node_lookup_40".node_id_2 = "DT_node_data_40".nid), 
"GB_Model_10_0" AS 
(SELECT "DT_Output_40"."KEY" AS "KEY", "DT_Output_40"."E" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_40"), 
"DT_node_lookup_41" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_45 <= -0.7363287210464478) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_49 <= 0.3730260133743286) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_98 <= -0.8627969622612) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_26 <= 0.6147930026054382) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_40 <= -0.978162407875061) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_23 <= 0.6521927118301392) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_18 <= 1.3606791496276855) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20180602143814_85R_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_41" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS FLOAT) AS "E" 
FROM (SELECT 3 AS nid, 1.5103806158091377 AS "E" UNION ALL SELECT 4 AS nid, -0.8459100125075093 AS "E" UNION ALL SELECT 6 AS nid, 1.2883369068317156 AS "E" UNION ALL SELECT 7 AS nid, -1.012116162482494 AS "E" UNION ALL SELECT 10 AS nid, 1.0803701837147086 AS "E" UNION ALL SELECT 11 AS nid, -0.8494435590942715 AS "E" UNION ALL SELECT 13 AS nid, -0.6744455679063878 AS "E" UNION ALL SELECT 14 AS nid, 0.9011946104520373 AS "E") AS "Values"), 
"DT_Output_41" AS 
(SELECT "DT_node_lookup_41"."KEY" AS "KEY", "DT_node_lookup_41".node_id_2 AS node_id_2, "DT_node_data_41".nid AS nid, "DT_node_data_41"."E" AS "E" 
FROM "DT_node_lookup_41" LEFT OUTER JOIN "DT_node_data_41" ON "DT_node_lookup_41".node_id_2 = "DT_node_data_41".nid), 
"GB_Model_10_1" AS 
(SELECT "DT_Output_41"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_41"."E" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_41"), 
"DT_node_lookup_42" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_46 <= -0.9107336401939392) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_101 <= -1.0859026908874512) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_50 <= 0.7972226738929749) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_26 <= -0.7478870153427124) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= 2.166414737701416) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= 1.8007181882858276) THEN 10 ELSE 11 END ELSE 12 END END AS node_id_2 
FROM "TMP_20180602143814_85R_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_42" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS FLOAT) AS "E" 
FROM (SELECT 3 AS nid, -0.7990117635683021 AS "E" UNION ALL SELECT 4 AS nid, -0.8324747868282314 AS "E" UNION ALL SELECT 6 AS nid, 1.0079241871695286 AS "E" UNION ALL SELECT 7 AS nid, 0.9720889722392027 AS "E" UNION ALL SELECT 10 AS nid, -0.4120554646151642 AS "E" UNION ALL SELECT 11 AS nid, 1.3661861848781645 AS "E" UNION ALL SELECT 12 AS nid, 2.168045678694308 AS "E") AS "Values"), 
"DT_Output_42" AS 
(SELECT "DT_node_lookup_42"."KEY" AS "KEY", "DT_node_lookup_42".node_id_2 AS node_id_2, "DT_node_data_42".nid AS nid, "DT_node_data_42"."E" AS "E" 
FROM "DT_node_lookup_42" LEFT OUTER JOIN "DT_node_data_42" ON "DT_node_lookup_42".node_id_2 = "DT_node_data_42".nid), 
"GB_Model_10_2" AS 
(SELECT "DT_Output_42"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_42"."E" AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_42"), 
"DT_node_lookup_43" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_22 <= 1.0979300737380981) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_24 <= -1.4662277698516846) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_80 <= -0.5427661538124084) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_16 <= 1.6193525791168213) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_53 <= 0.24498701095581055) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_18 <= 1.1370189189910889) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_92 <= 0.8325551748275757) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20180602143814_85R_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_43" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS FLOAT) AS "E" 
FROM (SELECT 3 AS nid, -0.8340434978210404 AS "E" UNION ALL SELECT 4 AS nid, 1.2753247671901824 AS "E" UNION ALL SELECT 6 AS nid, -0.482297910578673 AS "E" UNION ALL SELECT 7 AS nid, 1.1638182183796661 AS "E" UNION ALL SELECT 10 AS nid, -0.8308931313104643 AS "E" UNION ALL SELECT 11 AS nid, 1.056930172805078 AS "E" UNION ALL SELECT 13 AS nid, 1.053818796654751 AS "E" UNION ALL SELECT 14 AS nid, 1.6387210193672277 AS "E") AS "Values"), 
"DT_Output_43" AS 
(SELECT "DT_node_lookup_43"."KEY" AS "KEY", "DT_node_lookup_43".node_id_2 AS node_id_2, "DT_node_data_43".nid AS nid, "DT_node_data_43"."E" AS "E" 
FROM "DT_node_lookup_43" LEFT OUTER JOIN "DT_node_data_43" ON "DT_node_lookup_43".node_id_2 = "DT_node_data_43".nid), 
"GB_Model_10_3" AS 
(SELECT "DT_Output_43"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_43"."E" AS "Score_3" 
FROM "DT_Output_43"), 
"DT_node_lookup_44" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_80 <= -0.1553783416748047) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_28 <= 2.1494405269622803) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_76 <= -1.1234946250915527) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_79 <= 1.7817845344543457) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_94 <= -0.05780889838933945) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_59 <= -0.4911693334579468) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_26 <= 0.8363525867462158) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20180602143814_85R_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_44" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS FLOAT) AS "E" 
FROM (SELECT 3 AS nid, -0.8796748615789783 AS "E" UNION ALL SELECT 4 AS nid, -0.8258073028315684 AS "E" UNION ALL SELECT 6 AS nid, 0.9711707964585689 AS "E" UNION ALL SELECT 7 AS nid, 1.00907223414902 AS "E" UNION ALL SELECT 10 AS nid, -0.370185729230417 AS "E" UNION ALL SELECT 11 AS nid, 0.9476489139570102 AS "E" UNION ALL SELECT 13 AS nid, -0.8702976590253965 AS "E" UNION ALL SELECT 14 AS nid, 0.8892782030808514 AS "E") AS "Values"), 
"DT_Output_44" AS 
(SELECT "DT_node_lookup_44"."KEY" AS "KEY", "DT_node_lookup_44".node_id_2 AS node_id_2, "DT_node_data_44".nid AS nid, "DT_node_data_44"."E" AS "E" 
FROM "DT_node_lookup_44" LEFT OUTER JOIN "DT_node_data_44" ON "DT_node_lookup_44".node_id_2 = "DT_node_data_44".nid), 
"GB_Model_11_0" AS 
(SELECT "DT_Output_44"."KEY" AS "KEY", "DT_Output_44"."E" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_44"), 
"DT_node_lookup_45" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_69 <= -1.6593583822250366) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_47 <= -0.42757683992385864) THEN 2 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_29 <= 0.767666220664978) THEN 4 ELSE 5 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_90 <= -0.13150471448898315) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_18 <= 2.0137581825256348) THEN 8 ELSE 9 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_50 <= -0.18425396084785461) THEN 11 ELSE 12 END END END AS node_id_2 
FROM "TMP_20180602143814_85R_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_45" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS FLOAT) AS "E" 
FROM (SELECT 2 AS nid, 0.9974728098817106 AS "E" UNION ALL SELECT 4 AS nid, 1.1876674182713471 AS "E" UNION ALL SELECT 5 AS nid, 1.1092922237084273 AS "E" UNION ALL SELECT 8 AS nid, -0.7773913306623603 AS "E" UNION ALL SELECT 9 AS nid, 1.3061281839307866 AS "E" UNION ALL SELECT 11 AS nid, -0.5346009795278406 AS "E" UNION ALL SELECT 12 AS nid, 0.7148177758002038 AS "E") AS "Values"), 
"DT_Output_45" AS 
(SELECT "DT_node_lookup_45"."KEY" AS "KEY", "DT_node_lookup_45".node_id_2 AS node_id_2, "DT_node_data_45".nid AS nid, "DT_node_data_45"."E" AS "E" 
FROM "DT_node_lookup_45" LEFT OUTER JOIN "DT_node_data_45" ON "DT_node_lookup_45".node_id_2 = "DT_node_data_45".nid), 
"GB_Model_11_1" AS 
(SELECT "DT_Output_45"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_45"."E" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_45"), 
"DT_node_lookup_46" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_46 <= -0.9107336401939392) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_101 <= -1.0859026908874512) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_16 <= -0.3530658483505249) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_26 <= -0.7478870153427124) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 2.446138381958008) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_55 <= 1.6740303039550781) THEN 10 ELSE 11 END ELSE 12 END END AS node_id_2 
FROM "TMP_20180602143814_85R_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_46" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS FLOAT) AS "E" 
FROM (SELECT 3 AS nid, -0.7922644345082183 AS "E" UNION ALL SELECT 4 AS nid, -0.8229390654514804 AS "E" UNION ALL SELECT 6 AS nid, 0.9756960557836875 AS "E" UNION ALL SELECT 7 AS nid, 0.9392079968904841 AS "E" UNION ALL SELECT 10 AS nid, -0.3986511178416269 AS "E" UNION ALL SELECT 11 AS nid, 1.3223896963761863 AS "E" UNION ALL SELECT 12 AS nid, 2.0801577999873015 AS "E") AS "Values"), 
"DT_Output_46" AS 
(SELECT "DT_node_lookup_46"."KEY" AS "KEY", "DT_node_lookup_46".node_id_2 AS node_id_2, "DT_node_data_46".nid AS nid, "DT_node_data_46"."E" AS "E" 
FROM "DT_node_lookup_46" LEFT OUTER JOIN "DT_node_data_46" ON "DT_node_lookup_46".node_id_2 = "DT_node_data_46".nid), 
"GB_Model_11_2" AS 
(SELECT "DT_Output_46"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_46"."E" AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_46"), 
"DT_node_lookup_47" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_21 <= -0.2989218831062317) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_65 <= -0.9431060552597046) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_95 <= 0.5221251845359802) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= -0.537947416305542) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_101 <= -0.03666681796312332) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_90 <= 0.09711381793022156) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_56 <= 1.1930670738220215) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20180602143814_85R_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_47" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS FLOAT) AS "E" 
FROM (SELECT 3 AS nid, 1.121787560938244 AS "E" UNION ALL SELECT 4 AS nid, -0.8378500323283361 AS "E" UNION ALL SELECT 6 AS nid, -0.9117902443911069 AS "E" UNION ALL SELECT 7 AS nid, -0.8414390157042507 AS "E" UNION ALL SELECT 10 AS nid, 1.00504393149237 AS "E" UNION ALL SELECT 11 AS nid, -0.0892285205800499 AS "E" UNION ALL SELECT 13 AS nid, -0.564753670028962 AS "E" UNION ALL SELECT 14 AS nid, 1.0232914049570403 AS "E") AS "Values"), 
"DT_Output_47" AS 
(SELECT "DT_node_lookup_47"."KEY" AS "KEY", "DT_node_lookup_47".node_id_2 AS node_id_2, "DT_node_data_47".nid AS nid, "DT_node_data_47"."E" AS "E" 
FROM "DT_node_lookup_47" LEFT OUTER JOIN "DT_node_data_47" ON "DT_node_lookup_47".node_id_2 = "DT_node_data_47".nid), 
"GB_Model_11_3" AS 
(SELECT "DT_Output_47"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_47"."E" AS "Score_3" 
FROM "DT_Output_47"), 
"DT_node_lookup_48" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_80 <= -0.1553783416748047) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_28 <= 2.1494405269622803) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_21 <= -0.30740323662757874) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_101 <= 0.25377240777015686) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_78 <= -0.765346884727478) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= -1.7261626720428467) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_67 <= -0.6694384813308716) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20180602143814_85R_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_48" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS FLOAT) AS "E" 
FROM (SELECT 3 AS nid, -0.8472981453000017 AS "E" UNION ALL SELECT 4 AS nid, -0.8092010527021115 AS "E" UNION ALL SELECT 6 AS nid, 0.943936958779191 AS "E" UNION ALL SELECT 7 AS nid, 0.9706947336118041 AS "E" UNION ALL SELECT 10 AS nid, -0.8535931356084588 AS "E" UNION ALL SELECT 11 AS nid, 1.0056313798175958 AS "E" UNION ALL SELECT 13 AS nid, 0.8298567519476642 AS "E" UNION ALL SELECT 14 AS nid, -0.38422605785653213 AS "E") AS "Values"), 
"DT_Output_48" AS 
(SELECT "DT_node_lookup_48"."KEY" AS "KEY", "DT_node_lookup_48".node_id_2 AS node_id_2, "DT_node_data_48".nid AS nid, "DT_node_data_48"."E" AS "E" 
FROM "DT_node_lookup_48" LEFT OUTER JOIN "DT_node_data_48" ON "DT_node_lookup_48".node_id_2 = "DT_node_data_48".nid), 
"GB_Model_12_0" AS 
(SELECT "DT_Output_48"."KEY" AS "KEY", "DT_Output_48"."E" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_48"), 
"DT_node_lookup_49" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_70 <= -0.5290324687957764) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_64 <= -1.0018014907836914) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_20 <= 0.2598879933357239) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_46 <= -1.0630695819854736) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_70 <= -0.3557239770889282) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_36 <= 1.2842787504196167) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_18 <= 1.3717072010040283) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20180602143814_85R_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_49" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS FLOAT) AS "E" 
FROM (SELECT 3 AS nid, 0.9856566865127201 AS "E" UNION ALL SELECT 4 AS nid, 1.0437978645150991 AS "E" UNION ALL SELECT 6 AS nid, -0.8007219040943356 AS "E" UNION ALL SELECT 7 AS nid, -0.8748578467106947 AS "E" UNION ALL SELECT 10 AS nid, 1.293339233650049 AS "E" UNION ALL SELECT 11 AS nid, -0.8052725621281542 AS "E" UNION ALL SELECT 13 AS nid, -0.050243919914587695 AS "E" UNION ALL SELECT 14 AS nid, 1.1206968154882422 AS "E") AS "Values"), 
"DT_Output_49" AS 
(SELECT "DT_node_lookup_49"."KEY" AS "KEY", "DT_node_lookup_49".node_id_2 AS node_id_2, "DT_node_data_49".nid AS nid, "DT_node_data_49"."E" AS "E" 
FROM "DT_node_lookup_49" LEFT OUTER JOIN "DT_node_data_49" ON "DT_node_lookup_49".node_id_2 = "DT_node_data_49".nid), 
"GB_Model_12_1" AS 
(SELECT "DT_Output_49"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_49"."E" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_49")
 INSERT INTO "TMP_20180602143815_EP9_GB_B4" ("KEY", "Score_0", "Score_1", "Score_2", "Score_3") SELECT "GB_B4"."KEY", "GB_B4"."Score_0", "GB_B4"."Score_1", "GB_B4"."Score_2", "GB_B4"."Score_3" 
FROM (SELECT "GB_esu_4"."KEY" AS "KEY", "GB_esu_4"."Score_0" AS "Score_0", "GB_esu_4"."Score_1" AS "Score_1", "GB_esu_4"."Score_2" AS "Score_2", "GB_esu_4"."Score_3" AS "Score_3" 
FROM (SELECT "GB_Model_10_0"."KEY" AS "KEY", "GB_Model_10_0"."Score_0" AS "Score_0", "GB_Model_10_0"."Score_1" AS "Score_1", "GB_Model_10_0"."Score_2" AS "Score_2", "GB_Model_10_0"."Score_3" AS "Score_3" 
FROM "GB_Model_10_0" UNION ALL SELECT "GB_Model_10_1"."KEY" AS "KEY", "GB_Model_10_1"."Score_0" AS "Score_0", "GB_Model_10_1"."Score_1" AS "Score_1", "GB_Model_10_1"."Score_2" AS "Score_2", "GB_Model_10_1"."Score_3" AS "Score_3" 
FROM "GB_Model_10_1" UNION ALL SELECT "GB_Model_10_2"."KEY" AS "KEY", "GB_Model_10_2"."Score_0" AS "Score_0", "GB_Model_10_2"."Score_1" AS "Score_1", "GB_Model_10_2"."Score_2" AS "Score_2", "GB_Model_10_2"."Score_3" AS "Score_3" 
FROM "GB_Model_10_2" UNION ALL SELECT "GB_Model_10_3"."KEY" AS "KEY", "GB_Model_10_3"."Score_0" AS "Score_0", "GB_Model_10_3"."Score_1" AS "Score_1", "GB_Model_10_3"."Score_2" AS "Score_2", "GB_Model_10_3"."Score_3" AS "Score_3" 
FROM "GB_Model_10_3" UNION ALL SELECT "GB_Model_11_0"."KEY" AS "KEY", "GB_Model_11_0"."Score_0" AS "Score_0", "GB_Model_11_0"."Score_1" AS "Score_1", "GB_Model_11_0"."Score_2" AS "Score_2", "GB_Model_11_0"."Score_3" AS "Score_3" 
FROM "GB_Model_11_0" UNION ALL SELECT "GB_Model_11_1"."KEY" AS "KEY", "GB_Model_11_1"."Score_0" AS "Score_0", "GB_Model_11_1"."Score_1" AS "Score_1", "GB_Model_11_1"."Score_2" AS "Score_2", "GB_Model_11_1"."Score_3" AS "Score_3" 
FROM "GB_Model_11_1" UNION ALL SELECT "GB_Model_11_2"."KEY" AS "KEY", "GB_Model_11_2"."Score_0" AS "Score_0", "GB_Model_11_2"."Score_1" AS "Score_1", "GB_Model_11_2"."Score_2" AS "Score_2", "GB_Model_11_2"."Score_3" AS "Score_3" 
FROM "GB_Model_11_2" UNION ALL SELECT "GB_Model_11_3"."KEY" AS "KEY", "GB_Model_11_3"."Score_0" AS "Score_0", "GB_Model_11_3"."Score_1" AS "Score_1", "GB_Model_11_3"."Score_2" AS "Score_2", "GB_Model_11_3"."Score_3" AS "Score_3" 
FROM "GB_Model_11_3" UNION ALL SELECT "GB_Model_12_0"."KEY" AS "KEY", "GB_Model_12_0"."Score_0" AS "Score_0", "GB_Model_12_0"."Score_1" AS "Score_1", "GB_Model_12_0"."Score_2" AS "Score_2", "GB_Model_12_0"."Score_3" AS "Score_3" 
FROM "GB_Model_12_0" UNION ALL SELECT "GB_Model_12_1"."KEY" AS "KEY", "GB_Model_12_1"."Score_0" AS "Score_0", "GB_Model_12_1"."Score_1" AS "Score_1", "GB_Model_12_1"."Score_2" AS "Score_2", "GB_Model_12_1"."Score_3" AS "Score_3" 
FROM "GB_Model_12_1") AS "GB_esu_4") AS "GB_B4"

-- Code For temporary table TMP_20180602143815_EPB_GB_B5 part 1. Create 


CREATE TEMPORARY TABLE "TMP_20180602143815_EPB_GB_B5" (
	"KEY" BIGINT, 
	"Score_0" FLOAT, 
	"Score_1" FLOAT, 
	"Score_2" FLOAT, 
	"Score_3" FLOAT
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table TMP_20180602143815_EPB_GB_B5 part 2. Populate

WITH "DT_node_lookup_50" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_58 <= -0.0702386125922203) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_21 <= -0.5469577312469482) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_12 <= 0.056686293333768845) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_56 <= 0.02188699319958687) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= 2.166414737701416) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_46 <= -0.9075416326522827) THEN 10 ELSE 11 END ELSE 12 END END AS node_id_2 
FROM "TMP_20180602143814_85R_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_50" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS FLOAT) AS "E" 
FROM (SELECT 3 AS nid, 1.2840723010081712 AS "E" UNION ALL SELECT 4 AS nid, 0.02723684142795747 AS "E" UNION ALL SELECT 6 AS nid, 0.7134766181058043 AS "E" UNION ALL SELECT 7 AS nid, -0.7278011269422952 AS "E" UNION ALL SELECT 10 AS nid, 0.912737471141154 AS "E" UNION ALL SELECT 11 AS nid, -0.8338270822899821 AS "E" UNION ALL SELECT 12 AS nid, 1.7645389863209981 AS "E") AS "Values"), 
"DT_Output_50" AS 
(SELECT "DT_node_lookup_50"."KEY" AS "KEY", "DT_node_lookup_50".node_id_2 AS node_id_2, "DT_node_data_50".nid AS nid, "DT_node_data_50"."E" AS "E" 
FROM "DT_node_lookup_50" LEFT OUTER JOIN "DT_node_data_50" ON "DT_node_lookup_50".node_id_2 = "DT_node_data_50".nid), 
"GB_Model_12_2" AS 
(SELECT "DT_Output_50"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_50"."E" AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_50"), 
"DT_node_lookup_51" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_22 <= 1.0979300737380981) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_24 <= -1.4662277698516846) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_98 <= 1.3354480266571045) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_16 <= 1.6193525791168213) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_53 <= 0.24498701095581055) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= 0.7197958827018738) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_79 <= 1.555593729019165) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20180602143814_85R_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_51" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS FLOAT) AS "E" 
FROM (SELECT 3 AS nid, 1.1338427643879143 AS "E" UNION ALL SELECT 4 AS nid, -0.8225275382926561 AS "E" UNION ALL SELECT 6 AS nid, -0.45683762790420696 AS "E" UNION ALL SELECT 7 AS nid, 1.0536189820105846 AS "E" UNION ALL SELECT 10 AS nid, -0.8172089387506634 AS "E" UNION ALL SELECT 11 AS nid, 1.0008667868598837 AS "E" UNION ALL SELECT 13 AS nid, 0.9935639782703639 AS "E" UNION ALL SELECT 14 AS nid, 1.3856478128325853 AS "E") AS "Values"), 
"DT_Output_51" AS 
(SELECT "DT_node_lookup_51"."KEY" AS "KEY", "DT_node_lookup_51".node_id_2 AS node_id_2, "DT_node_data_51".nid AS nid, "DT_node_data_51"."E" AS "E" 
FROM "DT_node_lookup_51" LEFT OUTER JOIN "DT_node_data_51" ON "DT_node_lookup_51".node_id_2 = "DT_node_data_51".nid), 
"GB_Model_12_3" AS 
(SELECT "DT_Output_51"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_51"."E" AS "Score_3" 
FROM "DT_Output_51"), 
"DT_node_lookup_52" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_80 <= -0.1553783416748047) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= -1.8472156524658203) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_46 <= 0.08316117525100708) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_21 <= -0.30740323662757874) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_50 <= -0.18425396084785461) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_46 <= 1.1959999799728394) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= -0.7356767654418945) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20180602143814_85R_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_52" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS FLOAT) AS "E" 
FROM (SELECT 3 AS nid, 0.9189995710497851 AS "E" UNION ALL SELECT 4 AS nid, 0.942745317375315 AS "E" UNION ALL SELECT 6 AS nid, -0.8364435247309665 AS "E" UNION ALL SELECT 7 AS nid, -0.8029064103607655 AS "E" UNION ALL SELECT 10 AS nid, 0.8808387665230334 AS "E" UNION ALL SELECT 11 AS nid, -0.853223727110492 AS "E" UNION ALL SELECT 13 AS nid, 0.578698360308575 AS "E" UNION ALL SELECT 14 AS nid, -0.603191965020643 AS "E") AS "Values"), 
"DT_Output_52" AS 
(SELECT "DT_node_lookup_52"."KEY" AS "KEY", "DT_node_lookup_52".node_id_2 AS node_id_2, "DT_node_data_52".nid AS nid, "DT_node_data_52"."E" AS "E" 
FROM "DT_node_lookup_52" LEFT OUTER JOIN "DT_node_data_52" ON "DT_node_lookup_52".node_id_2 = "DT_node_data_52".nid), 
"GB_Model_13_0" AS 
(SELECT "DT_Output_52"."KEY" AS "KEY", "DT_Output_52"."E" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_52"), 
"DT_node_lookup_53" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_45 <= -0.7363287210464478) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_49 <= 0.3730260133743286) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_98 <= -0.8627969622612) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_66 <= -1.1797868013381958) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_61 <= -1.88694167137146) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_60 <= 0.5526813864707947) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_45 <= 0.9769879579544067) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20180602143814_85R_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_53" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS FLOAT) AS "E" 
FROM (SELECT 3 AS nid, 1.249040685390615 AS "E" UNION ALL SELECT 4 AS nid, -0.8202804064753694 AS "E" UNION ALL SELECT 6 AS nid, -0.934665904125251 AS "E" UNION ALL SELECT 7 AS nid, 1.131350734579706 AS "E" UNION ALL SELECT 10 AS nid, 1.0879117086996652 AS "E" UNION ALL SELECT 11 AS nid, 0.9737330332029588 AS "E" UNION ALL SELECT 13 AS nid, -0.5507176774740068 AS "E" UNION ALL SELECT 14 AS nid, 0.4895381184848563 AS "E") AS "Values"), 
"DT_Output_53" AS 
(SELECT "DT_node_lookup_53"."KEY" AS "KEY", "DT_node_lookup_53".node_id_2 AS node_id_2, "DT_node_data_53".nid AS nid, "DT_node_data_53"."E" AS "E" 
FROM "DT_node_lookup_53" LEFT OUTER JOIN "DT_node_data_53" ON "DT_node_lookup_53".node_id_2 = "DT_node_data_53".nid), 
"GB_Model_13_1" AS 
(SELECT "DT_Output_53"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_53"."E" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_53"), 
"DT_node_lookup_54" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_58 <= -0.0702386125922203) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_21 <= -0.5469577312469482) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_12 <= 0.056686293333768845) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_56 <= 0.02188699319958687) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= 2.166414737701416) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_46 <= -0.9075416326522827) THEN 10 ELSE 11 END ELSE 12 END END AS node_id_2 
FROM "TMP_20180602143814_85R_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_54" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS FLOAT) AS "E" 
FROM (SELECT 3 AS nid, 1.2023074694173594 AS "E" UNION ALL SELECT 4 AS nid, 0.020976383045942116 AS "E" UNION ALL SELECT 6 AS nid, 0.6759247140159687 AS "E" UNION ALL SELECT 7 AS nid, -0.7043311960107327 AS "E" UNION ALL SELECT 10 AS nid, 0.887662939515499 AS "E" UNION ALL SELECT 11 AS nid, -0.8256823834091379 AS "E" UNION ALL SELECT 12 AS nid, 1.5404644371044358 AS "E") AS "Values"), 
"DT_Output_54" AS 
(SELECT "DT_node_lookup_54"."KEY" AS "KEY", "DT_node_lookup_54".node_id_2 AS node_id_2, "DT_node_data_54".nid AS nid, "DT_node_data_54"."E" AS "E" 
FROM "DT_node_lookup_54" LEFT OUTER JOIN "DT_node_data_54" ON "DT_node_lookup_54".node_id_2 = "DT_node_data_54".nid), 
"GB_Model_13_2" AS 
(SELECT "DT_Output_54"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_54"."E" AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_54"), 
"DT_node_lookup_55" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_22 <= 1.0979300737380981) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_101 <= -1.3270068168640137) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_76 <= 0.07080594450235367) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_16 <= 1.2700200080871582) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_53 <= 0.24498701095581055) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_19 <= 1.382076382637024) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_75 <= 1.2044602632522583) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20180602143814_85R_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_55" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS FLOAT) AS "E" 
FROM (SELECT 3 AS nid, -0.18334663465860318 AS "E" UNION ALL SELECT 4 AS nid, 1.0062790515438798 AS "E" UNION ALL SELECT 6 AS nid, -0.5768802001546335 AS "E" UNION ALL SELECT 7 AS nid, 0.6436104480833557 AS "E" UNION ALL SELECT 10 AS nid, -0.8090680681975453 AS "E" UNION ALL SELECT 11 AS nid, 0.9591441757119842 AS "E" UNION ALL SELECT 13 AS nid, 0.9576520498056483 AS "E" UNION ALL SELECT 14 AS nid, 1.2701530578760705 AS "E") AS "Values"), 
"DT_Output_55" AS 
(SELECT "DT_node_lookup_55"."KEY" AS "KEY", "DT_node_lookup_55".node_id_2 AS node_id_2, "DT_node_data_55".nid AS nid, "DT_node_data_55"."E" AS "E" 
FROM "DT_node_lookup_55" LEFT OUTER JOIN "DT_node_data_55" ON "DT_node_lookup_55".node_id_2 = "DT_node_data_55".nid), 
"GB_Model_13_3" AS 
(SELECT "DT_Output_55"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_55"."E" AS "Score_3" 
FROM "DT_Output_55"), 
"DT_node_lookup_56" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_21 <= 1.7593741416931152) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_39 <= 1.7385339736938477) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_45 <= 0.24861092865467072) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_44 <= 0.042100757360458374) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= -0.9933152794837952) THEN 9 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_79 <= 0.4247041940689087) THEN 11 ELSE 12 END END END AS node_id_2 
FROM "TMP_20180602143814_85R_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_56" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS FLOAT) AS "E" 
FROM (SELECT 3 AS nid, -0.6052267094379898 AS "E" UNION ALL SELECT 4 AS nid, 0.22093492799879252 AS "E" UNION ALL SELECT 6 AS nid, 0.996097184070145 AS "E" UNION ALL SELECT 7 AS nid, 1.021364244997794 AS "E" UNION ALL SELECT 9 AS nid, 1.2684395812569562 AS "E" UNION ALL SELECT 11 AS nid, 0.9833794379334153 AS "E" UNION ALL SELECT 12 AS nid, 0.9087161618574575 AS "E") AS "Values"), 
"DT_Output_56" AS 
(SELECT "DT_node_lookup_56"."KEY" AS "KEY", "DT_node_lookup_56".node_id_2 AS node_id_2, "DT_node_data_56".nid AS nid, "DT_node_data_56"."E" AS "E" 
FROM "DT_node_lookup_56" LEFT OUTER JOIN "DT_node_data_56" ON "DT_node_lookup_56".node_id_2 = "DT_node_data_56".nid), 
"GB_Model_14_0" AS 
(SELECT "DT_Output_56"."KEY" AS "KEY", "DT_Output_56"."E" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_56"), 
"DT_node_lookup_57" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_69 <= -1.6593583822250366) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_79 <= -0.27618706226348877) THEN 2 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_29 <= 1.8450672626495361) THEN 4 ELSE 5 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_12 <= -1.627345085144043) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= -0.45977720618247986) THEN 8 ELSE 9 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= -1.6931902170181274) THEN 11 ELSE 12 END END END AS node_id_2 
FROM "TMP_20180602143814_85R_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_57" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS FLOAT) AS "E" 
FROM (SELECT 2 AS nid, 0.9550594218152028 AS "E" UNION ALL SELECT 4 AS nid, 1.0299894668466136 AS "E" UNION ALL SELECT 5 AS nid, 0.9939773136470563 AS "E" UNION ALL SELECT 8 AS nid, 1.1089602193638113 AS "E" UNION ALL SELECT 9 AS nid, 0.9541420403766963 AS "E" UNION ALL SELECT 11 AS nid, 0.9903963980367002 AS "E" UNION ALL SELECT 12 AS nid, -0.22771925188280392 AS "E") AS "Values"), 
"DT_Output_57" AS 
(SELECT "DT_node_lookup_57"."KEY" AS "KEY", "DT_node_lookup_57".node_id_2 AS node_id_2, "DT_node_data_57".nid AS nid, "DT_node_data_57"."E" AS "E" 
FROM "DT_node_lookup_57" LEFT OUTER JOIN "DT_node_data_57" ON "DT_node_lookup_57".node_id_2 = "DT_node_data_57".nid), 
"GB_Model_14_1" AS 
(SELECT "DT_Output_57"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_57"."E" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_57"), 
"DT_node_lookup_58" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_58 <= -0.0702386125922203) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_21 <= -0.5469577312469482) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_46 <= -0.3022020757198334) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_56 <= 0.02188699319958687) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_88 <= 1.8506349325180054) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_46 <= -0.9075416326522827) THEN 10 ELSE 11 END ELSE 12 END END AS node_id_2 
FROM "TMP_20180602143814_85R_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_58" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS FLOAT) AS "E" 
FROM (SELECT 3 AS nid, 0.48051386091159004 AS "E" UNION ALL SELECT 4 AS nid, 1.192031896708015 AS "E" UNION ALL SELECT 6 AS nid, 0.6385288580687535 AS "E" UNION ALL SELECT 7 AS nid, -0.6858392939615849 AS "E" UNION ALL SELECT 10 AS nid, 0.870371779734089 AS "E" UNION ALL SELECT 11 AS nid, -0.8182855862395031 AS "E" UNION ALL SELECT 12 AS nid, 1.3972569311290184 AS "E") AS "Values"), 
"DT_Output_58" AS 
(SELECT "DT_node_lookup_58"."KEY" AS "KEY", "DT_node_lookup_58".node_id_2 AS node_id_2, "DT_node_data_58".nid AS nid, "DT_node_data_58"."E" AS "E" 
FROM "DT_node_lookup_58" LEFT OUTER JOIN "DT_node_data_58" ON "DT_node_lookup_58".node_id_2 = "DT_node_data_58".nid), 
"GB_Model_14_2" AS 
(SELECT "DT_Output_58"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_58"."E" AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_58"), 
"DT_node_lookup_59" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_87 <= -1.6214261054992676) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_86 <= 0.16301044821739197) THEN 2 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_25 <= -0.4285985827445984) THEN 4 ELSE 5 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_53 <= 1.564861536026001) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_16 <= 1.2700200080871582) THEN 8 ELSE 9 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_24 <= 1.0033828020095825) THEN 11 ELSE 12 END END END AS node_id_2 
FROM "TMP_20180602143814_85R_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_59" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS FLOAT) AS "E" 
FROM (SELECT 2 AS nid, -0.7953799149973841 AS "E" UNION ALL SELECT 4 AS nid, 1.1856238257074807 AS "E" UNION ALL SELECT 5 AS nid, 1.1153383188601584 AS "E" UNION ALL SELECT 8 AS nid, -0.3752454418561905 AS "E" UNION ALL SELECT 9 AS nid, 0.6745124133935402 AS "E" UNION ALL SELECT 11 AS nid, 0.9558269647812254 AS "E" UNION ALL SELECT 12 AS nid, 0.8804708195604201 AS "E") AS "Values"), 
"DT_Output_59" AS 
(SELECT "DT_node_lookup_59"."KEY" AS "KEY", "DT_node_lookup_59".node_id_2 AS node_id_2, "DT_node_data_59".nid AS nid, "DT_node_data_59"."E" AS "E" 
FROM "DT_node_lookup_59" LEFT OUTER JOIN "DT_node_data_59" ON "DT_node_lookup_59".node_id_2 = "DT_node_data_59".nid), 
"GB_Model_14_3" AS 
(SELECT "DT_Output_59"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_59"."E" AS "Score_3" 
FROM "DT_Output_59")
 INSERT INTO "TMP_20180602143815_EPB_GB_B5" ("KEY", "Score_0", "Score_1", "Score_2", "Score_3") SELECT "GB_B5"."KEY", "GB_B5"."Score_0", "GB_B5"."Score_1", "GB_B5"."Score_2", "GB_B5"."Score_3" 
FROM (SELECT "GB_esu_5"."KEY" AS "KEY", "GB_esu_5"."Score_0" AS "Score_0", "GB_esu_5"."Score_1" AS "Score_1", "GB_esu_5"."Score_2" AS "Score_2", "GB_esu_5"."Score_3" AS "Score_3" 
FROM (SELECT "GB_Model_12_2"."KEY" AS "KEY", "GB_Model_12_2"."Score_0" AS "Score_0", "GB_Model_12_2"."Score_1" AS "Score_1", "GB_Model_12_2"."Score_2" AS "Score_2", "GB_Model_12_2"."Score_3" AS "Score_3" 
FROM "GB_Model_12_2" UNION ALL SELECT "GB_Model_12_3"."KEY" AS "KEY", "GB_Model_12_3"."Score_0" AS "Score_0", "GB_Model_12_3"."Score_1" AS "Score_1", "GB_Model_12_3"."Score_2" AS "Score_2", "GB_Model_12_3"."Score_3" AS "Score_3" 
FROM "GB_Model_12_3" UNION ALL SELECT "GB_Model_13_0"."KEY" AS "KEY", "GB_Model_13_0"."Score_0" AS "Score_0", "GB_Model_13_0"."Score_1" AS "Score_1", "GB_Model_13_0"."Score_2" AS "Score_2", "GB_Model_13_0"."Score_3" AS "Score_3" 
FROM "GB_Model_13_0" UNION ALL SELECT "GB_Model_13_1"."KEY" AS "KEY", "GB_Model_13_1"."Score_0" AS "Score_0", "GB_Model_13_1"."Score_1" AS "Score_1", "GB_Model_13_1"."Score_2" AS "Score_2", "GB_Model_13_1"."Score_3" AS "Score_3" 
FROM "GB_Model_13_1" UNION ALL SELECT "GB_Model_13_2"."KEY" AS "KEY", "GB_Model_13_2"."Score_0" AS "Score_0", "GB_Model_13_2"."Score_1" AS "Score_1", "GB_Model_13_2"."Score_2" AS "Score_2", "GB_Model_13_2"."Score_3" AS "Score_3" 
FROM "GB_Model_13_2" UNION ALL SELECT "GB_Model_13_3"."KEY" AS "KEY", "GB_Model_13_3"."Score_0" AS "Score_0", "GB_Model_13_3"."Score_1" AS "Score_1", "GB_Model_13_3"."Score_2" AS "Score_2", "GB_Model_13_3"."Score_3" AS "Score_3" 
FROM "GB_Model_13_3" UNION ALL SELECT "GB_Model_14_0"."KEY" AS "KEY", "GB_Model_14_0"."Score_0" AS "Score_0", "GB_Model_14_0"."Score_1" AS "Score_1", "GB_Model_14_0"."Score_2" AS "Score_2", "GB_Model_14_0"."Score_3" AS "Score_3" 
FROM "GB_Model_14_0" UNION ALL SELECT "GB_Model_14_1"."KEY" AS "KEY", "GB_Model_14_1"."Score_0" AS "Score_0", "GB_Model_14_1"."Score_1" AS "Score_1", "GB_Model_14_1"."Score_2" AS "Score_2", "GB_Model_14_1"."Score_3" AS "Score_3" 
FROM "GB_Model_14_1" UNION ALL SELECT "GB_Model_14_2"."KEY" AS "KEY", "GB_Model_14_2"."Score_0" AS "Score_0", "GB_Model_14_2"."Score_1" AS "Score_1", "GB_Model_14_2"."Score_2" AS "Score_2", "GB_Model_14_2"."Score_3" AS "Score_3" 
FROM "GB_Model_14_2" UNION ALL SELECT "GB_Model_14_3"."KEY" AS "KEY", "GB_Model_14_3"."Score_0" AS "Score_0", "GB_Model_14_3"."Score_1" AS "Score_1", "GB_Model_14_3"."Score_2" AS "Score_2", "GB_Model_14_3"."Score_3" AS "Score_3" 
FROM "GB_Model_14_3") AS "GB_esu_5") AS "GB_B5"

-- Code For temporary table TMP_20180602143815_DX9_GB_B6 part 1. Create 


CREATE TEMPORARY TABLE "TMP_20180602143815_DX9_GB_B6" (
	"KEY" BIGINT, 
	"Score_0" FLOAT, 
	"Score_1" FLOAT, 
	"Score_2" FLOAT, 
	"Score_3" FLOAT
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table TMP_20180602143815_DX9_GB_B6 part 2. Populate

WITH "DT_node_lookup_60" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_80 <= -0.1553783416748047) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_28 <= 2.1494405269622803) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_76 <= -1.1234946250915527) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_58 <= -0.16084817051887512) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_50 <= -0.18425396084785461) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_51 <= 0.7176387906074524) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_73 <= 0.8277420401573181) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20180602143814_85R_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_60" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS FLOAT) AS "E" 
FROM (SELECT 3 AS nid, -0.8343716744926009 AS "E" UNION ALL SELECT 4 AS nid, -0.8024230807287004 AS "E" UNION ALL SELECT 6 AS nid, 0.9164534178838711 AS "E" UNION ALL SELECT 7 AS nid, 0.8812575166876347 AS "E" UNION ALL SELECT 10 AS nid, 0.962797241498075 AS "E" UNION ALL SELECT 11 AS nid, 0.21249080324029185 AS "E" UNION ALL SELECT 13 AS nid, -0.3851574775400551 AS "E" UNION ALL SELECT 14 AS nid, 0.8108975542172234 AS "E") AS "Values"), 
"DT_Output_60" AS 
(SELECT "DT_node_lookup_60"."KEY" AS "KEY", "DT_node_lookup_60".node_id_2 AS node_id_2, "DT_node_data_60".nid AS nid, "DT_node_data_60"."E" AS "E" 
FROM "DT_node_lookup_60" LEFT OUTER JOIN "DT_node_data_60" ON "DT_node_lookup_60".node_id_2 = "DT_node_data_60".nid), 
"GB_Model_15_0" AS 
(SELECT "DT_Output_60"."KEY" AS "KEY", "DT_Output_60"."E" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_60"), 
"DT_node_lookup_61" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= 2.3754923343658447) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_40 <= -0.978162407875061) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= -0.6284947991371155) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_75 <= 1.6296749114990234) THEN 6 ELSE 7 END END ELSE 8 END AS node_id_2 
FROM "TMP_20180602143814_85R_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_61" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS FLOAT) AS "E" 
FROM (SELECT 3 AS nid, -0.8163121022316674 AS "E" UNION ALL SELECT 4 AS nid, 0.8295511301244447 AS "E" UNION ALL SELECT 6 AS nid, -0.3239308571460841 AS "E" UNION ALL SELECT 7 AS nid, 0.8353037945266004 AS "E" UNION ALL SELECT 8 AS nid, 1.4460829677793527 AS "E") AS "Values"), 
"DT_Output_61" AS 
(SELECT "DT_node_lookup_61"."KEY" AS "KEY", "DT_node_lookup_61".node_id_2 AS node_id_2, "DT_node_data_61".nid AS nid, "DT_node_data_61"."E" AS "E" 
FROM "DT_node_lookup_61" LEFT OUTER JOIN "DT_node_data_61" ON "DT_node_lookup_61".node_id_2 = "DT_node_data_61".nid), 
"GB_Model_15_1" AS 
(SELECT "DT_Output_61"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_61"."E" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_61"), 
"DT_node_lookup_62" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_52 <= -1.4946367740631104) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_23 <= -0.9389280080795288) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_95 <= -0.055493444204330444) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_78 <= 0.3016801178455353) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_55 <= 1.5899834632873535) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_15 <= -2.1169023513793945) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_95 <= -0.7746959924697876) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20180602143814_85R_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_62" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS FLOAT) AS "E" 
FROM (SELECT 3 AS nid, 1.4260596734488191 AS "E" UNION ALL SELECT 4 AS nid, 1.0924967826357697 AS "E" UNION ALL SELECT 6 AS nid, -0.7970724232099485 AS "E" UNION ALL SELECT 7 AS nid, 0.879492105495652 AS "E" UNION ALL SELECT 10 AS nid, 1.0890155966173647 AS "E" UNION ALL SELECT 11 AS nid, -0.29939059688470676 AS "E" UNION ALL SELECT 13 AS nid, 0.8597966362667975 AS "E" UNION ALL SELECT 14 AS nid, 1.0701193449280693 AS "E") AS "Values"), 
"DT_Output_62" AS 
(SELECT "DT_node_lookup_62"."KEY" AS "KEY", "DT_node_lookup_62".node_id_2 AS node_id_2, "DT_node_data_62".nid AS nid, "DT_node_data_62"."E" AS "E" 
FROM "DT_node_lookup_62" LEFT OUTER JOIN "DT_node_data_62" ON "DT_node_lookup_62".node_id_2 = "DT_node_data_62".nid), 
"GB_Model_15_2" AS 
(SELECT "DT_Output_62"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_62"."E" AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_62"), 
"DT_node_lookup_63" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_46 <= 0.9308550357818604) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_44 <= 1.5560245513916016) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_53 <= 1.564861536026001) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_43 <= 0.4594295024871826) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_101 <= -0.029002565890550613) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_28 <= -0.8794723749160767) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_36 <= 0.6920703649520874) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20180602143814_85R_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_63" AS 
(SELECT "Values".nid AS nid, CAST("Values"."E" AS FLOAT) AS "E" 
FROM (SELECT 3 AS nid, -0.46932795042702913 AS "E" UNION ALL SELECT 4 AS nid, 0.9369329250068097 AS "E" UNION ALL SELECT 6 AS nid, 0.6487812990823418 AS "E" UNION ALL SELECT 7 AS nid, 1.1775146723216734 AS "E" UNION ALL SELECT 10 AS nid, 1.0434750686832606 AS "E" UNION ALL SELECT 11 AS nid, 0.9367510031863395 AS "E" UNION ALL SELECT 13 AS nid, -0.8332205177222342 AS "E" UNION ALL SELECT 14 AS nid, 0.911408298760363 AS "E") AS "Values"), 
"DT_Output_63" AS 
(SELECT "DT_node_lookup_63"."KEY" AS "KEY", "DT_node_lookup_63".node_id_2 AS node_id_2, "DT_node_data_63".nid AS nid, "DT_node_data_63"."E" AS "E" 
FROM "DT_node_lookup_63" LEFT OUTER JOIN "DT_node_data_63" ON "DT_node_lookup_63".node_id_2 = "DT_node_data_63".nid), 
"GB_Model_15_3" AS 
(SELECT "DT_Output_63"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_63"."E" AS "Score_3" 
FROM "DT_Output_63")
 INSERT INTO "TMP_20180602143815_DX9_GB_B6" ("KEY", "Score_0", "Score_1", "Score_2", "Score_3") SELECT "GB_B6"."KEY", "GB_B6"."Score_0", "GB_B6"."Score_1", "GB_B6"."Score_2", "GB_B6"."Score_3" 
FROM (SELECT "GB_esu_6"."KEY" AS "KEY", "GB_esu_6"."Score_0" AS "Score_0", "GB_esu_6"."Score_1" AS "Score_1", "GB_esu_6"."Score_2" AS "Score_2", "GB_esu_6"."Score_3" AS "Score_3" 
FROM (SELECT "GB_Model_15_0"."KEY" AS "KEY", "GB_Model_15_0"."Score_0" AS "Score_0", "GB_Model_15_0"."Score_1" AS "Score_1", "GB_Model_15_0"."Score_2" AS "Score_2", "GB_Model_15_0"."Score_3" AS "Score_3" 
FROM "GB_Model_15_0" UNION ALL SELECT "GB_Model_15_1"."KEY" AS "KEY", "GB_Model_15_1"."Score_0" AS "Score_0", "GB_Model_15_1"."Score_1" AS "Score_1", "GB_Model_15_1"."Score_2" AS "Score_2", "GB_Model_15_1"."Score_3" AS "Score_3" 
FROM "GB_Model_15_1" UNION ALL SELECT "GB_Model_15_2"."KEY" AS "KEY", "GB_Model_15_2"."Score_0" AS "Score_0", "GB_Model_15_2"."Score_1" AS "Score_1", "GB_Model_15_2"."Score_2" AS "Score_2", "GB_Model_15_2"."Score_3" AS "Score_3" 
FROM "GB_Model_15_2" UNION ALL SELECT "GB_Model_15_3"."KEY" AS "KEY", "GB_Model_15_3"."Score_0" AS "Score_0", "GB_Model_15_3"."Score_1" AS "Score_1", "GB_Model_15_3"."Score_2" AS "Score_2", "GB_Model_15_3"."Score_3" AS "Score_3" 
FROM "GB_Model_15_3") AS "GB_esu_6") AS "GB_B6"

-- Code For temporary table TMP_20180602143815_22U_GB_sum part 1. Create 


CREATE TEMPORARY TABLE "TMP_20180602143815_22U_GB_sum" (
	"KEY" BIGINT NOT NULL, 
	"Score_0" FLOAT, 
	"Score_1" FLOAT, 
	"Score_2" FLOAT, 
	"Score_3" FLOAT, 
	PRIMARY KEY ("KEY")
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table TMP_20180602143815_22U_GB_sum part 2. Populate

WITH "GB_Union" AS 
(SELECT "GB_EnsembleUnion"."KEY" AS "KEY", "GB_EnsembleUnion"."Score_0" AS "Score_0", "GB_EnsembleUnion"."Score_1" AS "Score_1", "GB_EnsembleUnion"."Score_2" AS "Score_2", "GB_EnsembleUnion"."Score_3" AS "Score_3" 
FROM (SELECT "GB_B0"."KEY" AS "KEY", "GB_B0"."Score_0" AS "Score_0", "GB_B0"."Score_1" AS "Score_1", "GB_B0"."Score_2" AS "Score_2", "GB_B0"."Score_3" AS "Score_3" 
FROM "TMP_20180602143815_8TP_GB_B0" AS "GB_B0" UNION ALL SELECT "GB_B1"."KEY" AS "KEY", "GB_B1"."Score_0" AS "Score_0", "GB_B1"."Score_1" AS "Score_1", "GB_B1"."Score_2" AS "Score_2", "GB_B1"."Score_3" AS "Score_3" 
FROM "TMP_20180602143815_PDT_GB_B1" AS "GB_B1" UNION ALL SELECT "GB_B2"."KEY" AS "KEY", "GB_B2"."Score_0" AS "Score_0", "GB_B2"."Score_1" AS "Score_1", "GB_B2"."Score_2" AS "Score_2", "GB_B2"."Score_3" AS "Score_3" 
FROM "TMP_20180602143815_3RE_GB_B2" AS "GB_B2" UNION ALL SELECT "GB_B3"."KEY" AS "KEY", "GB_B3"."Score_0" AS "Score_0", "GB_B3"."Score_1" AS "Score_1", "GB_B3"."Score_2" AS "Score_2", "GB_B3"."Score_3" AS "Score_3" 
FROM "TMP_20180602143815_9E7_GB_B3" AS "GB_B3" UNION ALL SELECT "GB_B4"."KEY" AS "KEY", "GB_B4"."Score_0" AS "Score_0", "GB_B4"."Score_1" AS "Score_1", "GB_B4"."Score_2" AS "Score_2", "GB_B4"."Score_3" AS "Score_3" 
FROM "TMP_20180602143815_EP9_GB_B4" AS "GB_B4" UNION ALL SELECT "GB_B5"."KEY" AS "KEY", "GB_B5"."Score_0" AS "Score_0", "GB_B5"."Score_1" AS "Score_1", "GB_B5"."Score_2" AS "Score_2", "GB_B5"."Score_3" AS "Score_3" 
FROM "TMP_20180602143815_EPB_GB_B5" AS "GB_B5" UNION ALL SELECT "GB_B6"."KEY" AS "KEY", "GB_B6"."Score_0" AS "Score_0", "GB_B6"."Score_1" AS "Score_1", "GB_B6"."Score_2" AS "Score_2", "GB_B6"."Score_3" AS "Score_3" 
FROM "TMP_20180602143815_DX9_GB_B6" AS "GB_B6") AS "GB_EnsembleUnion")
 INSERT INTO "TMP_20180602143815_22U_GB_sum" ("KEY", "Score_0", "Score_1", "Score_2", "Score_3") SELECT "GB_sum"."KEY", "GB_sum"."Score_0", "GB_sum"."Score_1", "GB_sum"."Score_2", "GB_sum"."Score_3" 
FROM (SELECT "T"."KEY" AS "KEY", CAST("T"."Score_0" AS FLOAT) AS "Score_0", CAST("T"."Score_1" AS FLOAT) AS "Score_1", CAST("T"."Score_2" AS FLOAT) AS "Score_2", CAST("T"."Score_3" AS FLOAT) AS "Score_3" 
FROM (SELECT "GB_Union"."KEY" AS "KEY", sum("GB_Union"."Score_0") AS "Score_0", sum("GB_Union"."Score_1") AS "Score_1", sum("GB_Union"."Score_2") AS "Score_2", sum("GB_Union"."Score_3") AS "Score_3" 
FROM "GB_Union" GROUP BY "GB_Union"."KEY") AS "T") AS "GB_sum"

-- Code For temporary table TMP_20180602143815_22U_GB_sum part 3. Create Index 

CREATE INDEX "ix_TMP_20180602143815_22U_GB_sum_KEY" ON "TMP_20180602143815_22U_GB_sum" ("KEY")

-- Model deployment code

WITH orig_cte AS 
(SELECT "GB_sum"."KEY" AS "KEY", 0.25 + 0.1 * "GB_sum"."Score_0" AS "Score_0", 0.2604166666666667 + 0.1 * "GB_sum"."Score_1" AS "Score_1", 0.23958333333333334 + 0.1 * "GB_sum"."Score_2" AS "Score_2", 0.25 + 0.1 * "GB_sum"."Score_3" AS "Score_3", CAST(NULL AS FLOAT) AS "Proba_0", CAST(NULL AS FLOAT) AS "Proba_1", CAST(NULL AS FLOAT) AS "Proba_2", CAST(NULL AS FLOAT) AS "Proba_3", CAST(NULL AS FLOAT) AS "LogProba_0", CAST(NULL AS FLOAT) AS "LogProba_1", CAST(NULL AS FLOAT) AS "LogProba_2", CAST(NULL AS FLOAT) AS "LogProba_3", CAST(NULL AS BIGINT) AS "Decision", CAST(NULL AS FLOAT) AS "DecisionProba" 
FROM "TMP_20180602143815_22U_GB_sum" AS "GB_sum"), 
score_class_union AS 
(SELECT scu."KEY_u" AS "KEY_u", scu.class AS class, scu."LogProba" AS "LogProba", scu."Proba" AS "Proba", scu."Score" AS "Score" 
FROM (SELECT orig_cte."KEY" AS "KEY_u", 0 AS class, orig_cte."LogProba_0" AS "LogProba", orig_cte."Proba_0" AS "Proba", orig_cte."Score_0" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 1 AS class, orig_cte."LogProba_1" AS "LogProba", orig_cte."Proba_1" AS "Proba", orig_cte."Score_1" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 2 AS class, orig_cte."LogProba_2" AS "LogProba", orig_cte."Proba_2" AS "Proba", orig_cte."Score_2" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 3 AS class, orig_cte."LogProba_3" AS "LogProba", orig_cte."Proba_3" AS "Proba", orig_cte."Score_3" AS "Score" 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte."KEY" AS "KEY", orig_cte."Score_0" AS "Score_0", orig_cte."Score_1" AS "Score_1", orig_cte."Score_2" AS "Score_2", orig_cte."Score_3" AS "Score_3", orig_cte."Proba_0" AS "Proba_0", orig_cte."Proba_1" AS "Proba_1", orig_cte."Proba_2" AS "Proba_2", orig_cte."Proba_3" AS "Proba_3", orig_cte."LogProba_0" AS "LogProba_0", orig_cte."LogProba_1" AS "LogProba_1", orig_cte."LogProba_2" AS "LogProba_2", orig_cte."LogProba_3" AS "LogProba_3", orig_cte."Decision" AS "Decision", orig_cte."DecisionProba" AS "DecisionProba", max_select."KEY_m" AS "KEY_m", max_select."max_Score" AS "max_Score" 
FROM orig_cte LEFT OUTER JOIN (SELECT score_class_union."KEY_u" AS "KEY_m", max(score_class_union."Score") AS "max_Score" 
FROM score_class_union GROUP BY score_class_union."KEY_u") AS max_select ON orig_cte."KEY" = max_select."KEY_m"), 
score_soft_max_deltas AS 
(SELECT score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Score_2" AS "Score_2", score_max."Score_3" AS "Score_3", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."Proba_2" AS "Proba_2", score_max."Proba_3" AS "Proba_3", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."LogProba_2" AS "LogProba_2", score_max."LogProba_3" AS "LogProba_3", score_max."Decision" AS "Decision", score_max."DecisionProba" AS "DecisionProba", score_max."KEY_m" AS "KEY_m", score_max."max_Score" AS "max_Score", exp(greatest(-100.0, score_max."Score_0" - score_max."max_Score")) AS "exp_delta_Score_0", exp(greatest(-100.0, score_max."Score_1" - score_max."max_Score")) AS "exp_delta_Score_1", exp(greatest(-100.0, score_max."Score_2" - score_max."max_Score")) AS "exp_delta_Score_2", exp(greatest(-100.0, score_max."Score_3" - score_max."max_Score")) AS "exp_delta_Score_3" 
FROM score_max), 
score_class_union_soft AS 
(SELECT soft_scu."KEY" AS "KEY", soft_scu.class AS class, soft_scu."exp_delta_Score" AS "exp_delta_Score" 
FROM (SELECT score_soft_max_deltas."KEY" AS "KEY", 0 AS class, score_soft_max_deltas."exp_delta_Score_0" AS "exp_delta_Score" 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas."KEY" AS "KEY", 1 AS class, score_soft_max_deltas."exp_delta_Score_1" AS "exp_delta_Score" 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas."KEY" AS "KEY", 2 AS class, score_soft_max_deltas."exp_delta_Score_2" AS "exp_delta_Score" 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas."KEY" AS "KEY", 3 AS class, score_soft_max_deltas."exp_delta_Score_3" AS "exp_delta_Score" 
FROM score_soft_max_deltas) AS soft_scu), 
score_soft_max AS 
(SELECT score_soft_max_deltas."KEY" AS "KEY", score_soft_max_deltas."Score_0" AS "Score_0", score_soft_max_deltas."Score_1" AS "Score_1", score_soft_max_deltas."Score_2" AS "Score_2", score_soft_max_deltas."Score_3" AS "Score_3", score_soft_max_deltas."Proba_0" AS "Proba_0", score_soft_max_deltas."Proba_1" AS "Proba_1", score_soft_max_deltas."Proba_2" AS "Proba_2", score_soft_max_deltas."Proba_3" AS "Proba_3", score_soft_max_deltas."LogProba_0" AS "LogProba_0", score_soft_max_deltas."LogProba_1" AS "LogProba_1", score_soft_max_deltas."LogProba_2" AS "LogProba_2", score_soft_max_deltas."LogProba_3" AS "LogProba_3", score_soft_max_deltas."Decision" AS "Decision", score_soft_max_deltas."DecisionProba" AS "DecisionProba", score_soft_max_deltas."KEY_m" AS "KEY_m", score_soft_max_deltas."max_Score" AS "max_Score", score_soft_max_deltas."exp_delta_Score_0" AS "exp_delta_Score_0", score_soft_max_deltas."exp_delta_Score_1" AS "exp_delta_Score_1", score_soft_max_deltas."exp_delta_Score_2" AS "exp_delta_Score_2", score_soft_max_deltas."exp_delta_Score_3" AS "exp_delta_Score_3", sum_exp_t."KEY_sum" AS "KEY_sum", sum_exp_t."sum_ExpDeltaScore" AS "sum_ExpDeltaScore" 
FROM score_soft_max_deltas LEFT OUTER JOIN (SELECT score_class_union_soft."KEY" AS "KEY_sum", sum(score_class_union_soft."exp_delta_Score") AS "sum_ExpDeltaScore" 
FROM score_class_union_soft GROUP BY score_class_union_soft."KEY") AS sum_exp_t ON score_soft_max_deltas."KEY" = sum_exp_t."KEY_sum"), 
union_with_max AS 
(SELECT score_class_union."KEY_u" AS "KEY_u", score_class_union.class AS class, score_class_union."LogProba" AS "LogProba", score_class_union."Proba" AS "Proba", score_class_union."Score" AS "Score", score_soft_max."KEY" AS "KEY", score_soft_max."Score_0" AS "Score_0", score_soft_max."Score_1" AS "Score_1", score_soft_max."Score_2" AS "Score_2", score_soft_max."Score_3" AS "Score_3", score_soft_max."Proba_0" AS "Proba_0", score_soft_max."Proba_1" AS "Proba_1", score_soft_max."Proba_2" AS "Proba_2", score_soft_max."Proba_3" AS "Proba_3", score_soft_max."LogProba_0" AS "LogProba_0", score_soft_max."LogProba_1" AS "LogProba_1", score_soft_max."LogProba_2" AS "LogProba_2", score_soft_max."LogProba_3" AS "LogProba_3", score_soft_max."Decision" AS "Decision", score_soft_max."DecisionProba" AS "DecisionProba", score_soft_max."KEY_m" AS "KEY_m", score_soft_max."max_Score" AS "max_Score", score_soft_max."exp_delta_Score_0" AS "exp_delta_Score_0", score_soft_max."exp_delta_Score_1" AS "exp_delta_Score_1", score_soft_max."exp_delta_Score_2" AS "exp_delta_Score_2", score_soft_max."exp_delta_Score_3" AS "exp_delta_Score_3", score_soft_max."KEY_sum" AS "KEY_sum", score_soft_max."sum_ExpDeltaScore" AS "sum_ExpDeltaScore" 
FROM score_class_union LEFT OUTER JOIN score_soft_max ON score_class_union."KEY_u" = score_soft_max."KEY"), 
arg_max_cte AS 
(SELECT score_soft_max."KEY" AS "KEY", score_soft_max."Score_0" AS "Score_0", score_soft_max."Score_1" AS "Score_1", score_soft_max."Score_2" AS "Score_2", score_soft_max."Score_3" AS "Score_3", score_soft_max."Proba_0" AS "Proba_0", score_soft_max."Proba_1" AS "Proba_1", score_soft_max."Proba_2" AS "Proba_2", score_soft_max."Proba_3" AS "Proba_3", score_soft_max."LogProba_0" AS "LogProba_0", score_soft_max."LogProba_1" AS "LogProba_1", score_soft_max."LogProba_2" AS "LogProba_2", score_soft_max."LogProba_3" AS "LogProba_3", score_soft_max."Decision" AS "Decision", score_soft_max."DecisionProba" AS "DecisionProba", score_soft_max."KEY_m" AS "KEY_m", score_soft_max."max_Score" AS "max_Score", score_soft_max."exp_delta_Score_0" AS "exp_delta_Score_0", score_soft_max."exp_delta_Score_1" AS "exp_delta_Score_1", score_soft_max."exp_delta_Score_2" AS "exp_delta_Score_2", score_soft_max."exp_delta_Score_3" AS "exp_delta_Score_3", score_soft_max."KEY_sum" AS "KEY_sum", score_soft_max."sum_ExpDeltaScore" AS "sum_ExpDeltaScore", "arg_max_t_Score"."KEY_Score" AS "KEY_Score", "arg_max_t_Score"."arg_max_Score" AS "arg_max_Score", soft_max_comp."KEY_softmax" AS "KEY_softmax", soft_max_comp."SoftProba_0" AS "SoftProba_0", soft_max_comp."SoftProba_1" AS "SoftProba_1", soft_max_comp."SoftProba_2" AS "SoftProba_2", soft_max_comp."SoftProba_3" AS "SoftProba_3" 
FROM score_soft_max LEFT OUTER JOIN (SELECT union_with_max."KEY" AS "KEY_Score", min(union_with_max.class) AS "arg_max_Score" 
FROM union_with_max 
WHERE union_with_max."max_Score" <= union_with_max."Score" GROUP BY union_with_max."KEY") AS "arg_max_t_Score" ON score_soft_max."KEY" = "arg_max_t_Score"."KEY_Score" LEFT OUTER JOIN (SELECT score_soft_max."KEY" AS "KEY_softmax", score_soft_max."exp_delta_Score_0" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_0", score_soft_max."exp_delta_Score_1" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_1", score_soft_max."exp_delta_Score_2" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_2", score_soft_max."exp_delta_Score_3" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_3" 
FROM score_soft_max) AS soft_max_comp ON soft_max_comp."KEY_softmax" = "arg_max_t_Score"."KEY_Score")
 SELECT arg_max_cte."KEY" AS "KEY", arg_max_cte."Score_0" AS "Score_0", arg_max_cte."Score_1" AS "Score_1", arg_max_cte."Score_2" AS "Score_2", arg_max_cte."Score_3" AS "Score_3", arg_max_cte."SoftProba_0" AS "Proba_0", arg_max_cte."SoftProba_1" AS "Proba_1", arg_max_cte."SoftProba_2" AS "Proba_2", arg_max_cte."SoftProba_3" AS "Proba_3", CASE WHEN (arg_max_cte."SoftProba_0" IS NULL OR arg_max_cte."SoftProba_0" > 0.0) THEN ln(arg_max_cte."SoftProba_0") ELSE -1.79769313486231e+308 END AS "LogProba_0", CASE WHEN (arg_max_cte."SoftProba_1" IS NULL OR arg_max_cte."SoftProba_1" > 0.0) THEN ln(arg_max_cte."SoftProba_1") ELSE -1.79769313486231e+308 END AS "LogProba_1", CASE WHEN (arg_max_cte."SoftProba_2" IS NULL OR arg_max_cte."SoftProba_2" > 0.0) THEN ln(arg_max_cte."SoftProba_2") ELSE -1.79769313486231e+308 END AS "LogProba_2", CASE WHEN (arg_max_cte."SoftProba_3" IS NULL OR arg_max_cte."SoftProba_3" > 0.0) THEN ln(arg_max_cte."SoftProba_3") ELSE -1.79769313486231e+308 END AS "LogProba_3", arg_max_cte."arg_max_Score" AS "Decision", greatest(arg_max_cte."SoftProba_0", arg_max_cte."SoftProba_1", arg_max_cte."SoftProba_2", arg_max_cte."SoftProba_3") AS "DecisionProba" 
FROM arg_max_cte