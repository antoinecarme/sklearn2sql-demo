-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH "DT_node_data" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Proba_-1" AS "Proba_-1", "Values"."LogProba_-1" AS "LogProba_-1", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, 0.04458539932966232 AS threshold, 100 AS count, 0 AS depth, 0.45 AS "Proba_-1", -0.798507696218 AS "LogProba_-1", 0.55 AS "Proba_1", -0.597837000756 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 57 AS count, 1 AS depth, 0.29824561403508765 AS "Proba_-1", -1.20983792378 AS "LogProba_-1", 0.7017543859649124 AS "Proba_1", -0.354171813721 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 43 AS count, 1 AS depth, 0.6511627906976746 AS "Proba_-1", -0.428995605518 AS "LogProba_-1", 0.34883720930232553 AS "Proba_1", -1.05314991459 AS "LogProba_1", -1 AS "Decision") AS "Values"), 
"DT_node_lookup" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" <= 0.04458539932966232) THEN 1 ELSE 2 END AS node_id 
FROM "INPUT_DATA" AS "ADS"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", (SELECT "DT_node_data".node_id 
FROM "DT_node_data" 
WHERE "DT_node_data".node_id = "DT_node_lookup".node_id) AS node_id, (SELECT "DT_node_data".feature 
FROM "DT_node_data" 
WHERE "DT_node_data".node_id = "DT_node_lookup".node_id) AS feature, (SELECT "DT_node_data".threshold 
FROM "DT_node_data" 
WHERE "DT_node_data".node_id = "DT_node_lookup".node_id) AS threshold, (SELECT "DT_node_data".count 
FROM "DT_node_data" 
WHERE "DT_node_data".node_id = "DT_node_lookup".node_id) AS count, (SELECT "DT_node_data".depth 
FROM "DT_node_data" 
WHERE "DT_node_data".node_id = "DT_node_lookup".node_id) AS depth, (SELECT "DT_node_data"."Proba_-1" 
FROM "DT_node_data" 
WHERE "DT_node_data".node_id = "DT_node_lookup".node_id) AS "Proba_-1", (SELECT "DT_node_data"."LogProba_-1" 
FROM "DT_node_data" 
WHERE "DT_node_data".node_id = "DT_node_lookup".node_id) AS "LogProba_-1", (SELECT "DT_node_data"."Proba_1" 
FROM "DT_node_data" 
WHERE "DT_node_data".node_id = "DT_node_lookup".node_id) AS "Proba_1", (SELECT "DT_node_data"."LogProba_1" 
FROM "DT_node_data" 
WHERE "DT_node_data".node_id = "DT_node_lookup".node_id) AS "LogProba_1", (SELECT "DT_node_data"."Decision" 
FROM "DT_node_data" 
WHERE "DT_node_data".node_id = "DT_node_lookup".node_id) AS "Decision" 
FROM "DT_node_lookup"), 
"AdaBoost_Estim_0" AS 
(SELECT "DT_Output"."KEY" AS join_key_0, CAST(NULL AS FLOAT) AS "Score_0_-1", "DT_Output"."Proba_-1" AS "Proba_0_-1", "DT_Output"."LogProba_-1" AS "LogProba_0_-1", CAST(NULL AS FLOAT) AS "Score_0_1", "DT_Output"."Proba_1" AS "Proba_0_1", "DT_Output"."LogProba_1" AS "LogProba_0_1", "DT_Output"."Decision" AS "Decision_0" 
FROM "DT_Output"), 
"DT_node_data_1" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Proba_-1" AS "Proba_-1", "Values"."LogProba_-1" AS "LogProba_-1", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'Feature_0' AS feature, -1.6095068454742432 AS threshold, 100 AS count, 0 AS depth, 0.49999999999999983 AS "Proba_-1", -0.69314718056 AS "LogProba_-1", 0.5000000000000002 AS "Proba_1", -0.69314718056 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 1 AS depth, 0.10885187348045967 AS "Proba_-1", -2.21776727987 AS "LogProba_-1", 0.8911481265195403 AS "Proba_1", -0.115244617832 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 92 AS count, 1 AS depth, 0.5304348303843899 AS "Proba_-1", -0.634058174121 AS "LogProba_-1", 0.46956516961561007 AS "Proba_1", -0.755948183544 AS "LogProba_1", -1 AS "Decision") AS "Values"), 
"DT_node_lookup_1" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" <= -1.6095068454742432) THEN 1 ELSE 2 END AS node_id 
FROM "INPUT_DATA" AS "ADS"), 
"DT_Output_1" AS 
(SELECT "DT_node_lookup_1"."KEY" AS "KEY", (SELECT "DT_node_data_1".node_id 
FROM "DT_node_data_1" 
WHERE "DT_node_data_1".node_id = "DT_node_lookup_1".node_id) AS node_id, (SELECT "DT_node_data_1".feature 
FROM "DT_node_data_1" 
WHERE "DT_node_data_1".node_id = "DT_node_lookup_1".node_id) AS feature, (SELECT "DT_node_data_1".threshold 
FROM "DT_node_data_1" 
WHERE "DT_node_data_1".node_id = "DT_node_lookup_1".node_id) AS threshold, (SELECT "DT_node_data_1".count 
FROM "DT_node_data_1" 
WHERE "DT_node_data_1".node_id = "DT_node_lookup_1".node_id) AS count, (SELECT "DT_node_data_1".depth 
FROM "DT_node_data_1" 
WHERE "DT_node_data_1".node_id = "DT_node_lookup_1".node_id) AS depth, (SELECT "DT_node_data_1"."Proba_-1" 
FROM "DT_node_data_1" 
WHERE "DT_node_data_1".node_id = "DT_node_lookup_1".node_id) AS "Proba_-1", (SELECT "DT_node_data_1"."LogProba_-1" 
FROM "DT_node_data_1" 
WHERE "DT_node_data_1".node_id = "DT_node_lookup_1".node_id) AS "LogProba_-1", (SELECT "DT_node_data_1"."Proba_1" 
FROM "DT_node_data_1" 
WHERE "DT_node_data_1".node_id = "DT_node_lookup_1".node_id) AS "Proba_1", (SELECT "DT_node_data_1"."LogProba_1" 
FROM "DT_node_data_1" 
WHERE "DT_node_data_1".node_id = "DT_node_lookup_1".node_id) AS "LogProba_1", (SELECT "DT_node_data_1"."Decision" 
FROM "DT_node_data_1" 
WHERE "DT_node_data_1".node_id = "DT_node_lookup_1".node_id) AS "Decision" 
FROM "DT_node_lookup_1"), 
"AdaBoost_Estim_1" AS 
(SELECT "DT_Output_1"."KEY" AS join_key_1, CAST(NULL AS FLOAT) AS "Score_1_-1", "DT_Output_1"."Proba_-1" AS "Proba_1_-1", "DT_Output_1"."LogProba_-1" AS "LogProba_1_-1", CAST(NULL AS FLOAT) AS "Score_1_1", "DT_Output_1"."Proba_1" AS "Proba_1_1", "DT_Output_1"."LogProba_1" AS "LogProba_1_1", "DT_Output_1"."Decision" AS "Decision_1" 
FROM "DT_Output_1"), 
"DT_node_data_2" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Proba_-1" AS "Proba_-1", "Values"."LogProba_-1" AS "LogProba_-1", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, -0.7610960602760315 AS threshold, 100 AS count, 0 AS depth, 0.5000000000000001 AS "Proba_-1", -0.69314718056 AS "LogProba_-1", 0.4999999999999999 AS "Proba_1", -0.69314718056 AS "LogProba_1", -1 AS "Decision" UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 25 AS count, 1 AS depth, 0.3022840745072261 AS "Proba_-1", -1.19638805967 AS "LogProba_-1", 0.6977159254927738 AS "Proba_1", -0.359943242595 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 75 AS count, 1 AS depth, 0.560374680538914 AS "Proba_-1", -0.579149646591 AS "LogProba_-1", 0.43962531946108596 AS "Proba_1", -0.821832461521 AS "LogProba_1", -1 AS "Decision") AS "Values"), 
"DT_node_lookup_2" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_3" <= -0.7610960602760315) THEN 1 ELSE 2 END AS node_id 
FROM "INPUT_DATA" AS "ADS"), 
"DT_Output_2" AS 
(SELECT "DT_node_lookup_2"."KEY" AS "KEY", (SELECT "DT_node_data_2".node_id 
FROM "DT_node_data_2" 
WHERE "DT_node_data_2".node_id = "DT_node_lookup_2".node_id) AS node_id, (SELECT "DT_node_data_2".feature 
FROM "DT_node_data_2" 
WHERE "DT_node_data_2".node_id = "DT_node_lookup_2".node_id) AS feature, (SELECT "DT_node_data_2".threshold 
FROM "DT_node_data_2" 
WHERE "DT_node_data_2".node_id = "DT_node_lookup_2".node_id) AS threshold, (SELECT "DT_node_data_2".count 
FROM "DT_node_data_2" 
WHERE "DT_node_data_2".node_id = "DT_node_lookup_2".node_id) AS count, (SELECT "DT_node_data_2".depth 
FROM "DT_node_data_2" 
WHERE "DT_node_data_2".node_id = "DT_node_lookup_2".node_id) AS depth, (SELECT "DT_node_data_2"."Proba_-1" 
FROM "DT_node_data_2" 
WHERE "DT_node_data_2".node_id = "DT_node_lookup_2".node_id) AS "Proba_-1", (SELECT "DT_node_data_2"."LogProba_-1" 
FROM "DT_node_data_2" 
WHERE "DT_node_data_2".node_id = "DT_node_lookup_2".node_id) AS "LogProba_-1", (SELECT "DT_node_data_2"."Proba_1" 
FROM "DT_node_data_2" 
WHERE "DT_node_data_2".node_id = "DT_node_lookup_2".node_id) AS "Proba_1", (SELECT "DT_node_data_2"."LogProba_1" 
FROM "DT_node_data_2" 
WHERE "DT_node_data_2".node_id = "DT_node_lookup_2".node_id) AS "LogProba_1", (SELECT "DT_node_data_2"."Decision" 
FROM "DT_node_data_2" 
WHERE "DT_node_data_2".node_id = "DT_node_lookup_2".node_id) AS "Decision" 
FROM "DT_node_lookup_2"), 
"AdaBoost_Estim_2" AS 
(SELECT "DT_Output_2"."KEY" AS join_key_2, CAST(NULL AS FLOAT) AS "Score_2_-1", "DT_Output_2"."Proba_-1" AS "Proba_2_-1", "DT_Output_2"."LogProba_-1" AS "LogProba_2_-1", CAST(NULL AS FLOAT) AS "Score_2_1", "DT_Output_2"."Proba_1" AS "Proba_2_1", "DT_Output_2"."LogProba_1" AS "LogProba_2_1", "DT_Output_2"."Decision" AS "Decision_2" 
FROM "DT_Output_2"), 
"DT_node_data_3" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Proba_-1" AS "Proba_-1", "Values"."LogProba_-1" AS "LogProba_-1", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, 1.6307957172393799 AS threshold, 100 AS count, 0 AS depth, 0.5000000000000001 AS "Proba_-1", -0.69314718056 AS "LogProba_-1", 0.5 AS "Proba_1", -0.69314718056 AS "LogProba_1", -1 AS "Decision" UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 96 AS count, 1 AS depth, 0.4831486967775019 AS "Proba_-1", -0.727430811886 AS "LogProba_-1", 0.5168513032224982 AS "Proba_1", -0.660000060499 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 1 AS depth, 1.0 AS "Proba_-1", 0.0 AS "LogProba_-1", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", -1 AS "Decision") AS "Values"), 
"DT_node_lookup_3" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" <= 1.6307957172393799) THEN 1 ELSE 2 END AS node_id 
FROM "INPUT_DATA" AS "ADS"), 
"DT_Output_3" AS 
(SELECT "DT_node_lookup_3"."KEY" AS "KEY", (SELECT "DT_node_data_3".node_id 
FROM "DT_node_data_3" 
WHERE "DT_node_data_3".node_id = "DT_node_lookup_3".node_id) AS node_id, (SELECT "DT_node_data_3".feature 
FROM "DT_node_data_3" 
WHERE "DT_node_data_3".node_id = "DT_node_lookup_3".node_id) AS feature, (SELECT "DT_node_data_3".threshold 
FROM "DT_node_data_3" 
WHERE "DT_node_data_3".node_id = "DT_node_lookup_3".node_id) AS threshold, (SELECT "DT_node_data_3".count 
FROM "DT_node_data_3" 
WHERE "DT_node_data_3".node_id = "DT_node_lookup_3".node_id) AS count, (SELECT "DT_node_data_3".depth 
FROM "DT_node_data_3" 
WHERE "DT_node_data_3".node_id = "DT_node_lookup_3".node_id) AS depth, (SELECT "DT_node_data_3"."Proba_-1" 
FROM "DT_node_data_3" 
WHERE "DT_node_data_3".node_id = "DT_node_lookup_3".node_id) AS "Proba_-1", (SELECT "DT_node_data_3"."LogProba_-1" 
FROM "DT_node_data_3" 
WHERE "DT_node_data_3".node_id = "DT_node_lookup_3".node_id) AS "LogProba_-1", (SELECT "DT_node_data_3"."Proba_1" 
FROM "DT_node_data_3" 
WHERE "DT_node_data_3".node_id = "DT_node_lookup_3".node_id) AS "Proba_1", (SELECT "DT_node_data_3"."LogProba_1" 
FROM "DT_node_data_3" 
WHERE "DT_node_data_3".node_id = "DT_node_lookup_3".node_id) AS "LogProba_1", (SELECT "DT_node_data_3"."Decision" 
FROM "DT_node_data_3" 
WHERE "DT_node_data_3".node_id = "DT_node_lookup_3".node_id) AS "Decision" 
FROM "DT_node_lookup_3"), 
"AdaBoost_Estim_3" AS 
(SELECT "DT_Output_3"."KEY" AS join_key_3, CAST(NULL AS FLOAT) AS "Score_3_-1", "DT_Output_3"."Proba_-1" AS "Proba_3_-1", "DT_Output_3"."LogProba_-1" AS "LogProba_3_-1", CAST(NULL AS FLOAT) AS "Score_3_1", "DT_Output_3"."Proba_1" AS "Proba_3_1", "DT_Output_3"."LogProba_1" AS "LogProba_3_1", "DT_Output_3"."Decision" AS "Decision_3" 
FROM "DT_Output_3"), 
"DT_node_data_4" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Proba_-1" AS "Proba_-1", "Values"."LogProba_-1" AS "LogProba_-1", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'Feature_1' AS feature, -1.5352129936218262 AS threshold, 100 AS count, 0 AS depth, 0.5000000002512467 AS "Proba_-1", -0.693147180057 AS "LogProba_-1", 0.4999999997487534 AS "Proba_1", -0.693147181062 AS "LogProba_1", -1 AS "Decision" UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 1 AS depth, 2.2838748156227793e-09 AS "Proba_-1", -19.8973923559 AS "LogProba_-1", 0.9999999977161251 AS "Proba_1", -2.28387486961e-09 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 94 AS count, 1 AS depth, 0.524472321121912 AS "Proba_-1", -0.64536262447 AS "LogProba_-1", 0.47552767887808806 AS "Proba_1", -0.743330188642 AS "LogProba_1", -1 AS "Decision") AS "Values"), 
"DT_node_lookup_4" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_1" <= -1.5352129936218262) THEN 1 ELSE 2 END AS node_id 
FROM "INPUT_DATA" AS "ADS"), 
"DT_Output_4" AS 
(SELECT "DT_node_lookup_4"."KEY" AS "KEY", (SELECT "DT_node_data_4".node_id 
FROM "DT_node_data_4" 
WHERE "DT_node_data_4".node_id = "DT_node_lookup_4".node_id) AS node_id, (SELECT "DT_node_data_4".feature 
FROM "DT_node_data_4" 
WHERE "DT_node_data_4".node_id = "DT_node_lookup_4".node_id) AS feature, (SELECT "DT_node_data_4".threshold 
FROM "DT_node_data_4" 
WHERE "DT_node_data_4".node_id = "DT_node_lookup_4".node_id) AS threshold, (SELECT "DT_node_data_4".count 
FROM "DT_node_data_4" 
WHERE "DT_node_data_4".node_id = "DT_node_lookup_4".node_id) AS count, (SELECT "DT_node_data_4".depth 
FROM "DT_node_data_4" 
WHERE "DT_node_data_4".node_id = "DT_node_lookup_4".node_id) AS depth, (SELECT "DT_node_data_4"."Proba_-1" 
FROM "DT_node_data_4" 
WHERE "DT_node_data_4".node_id = "DT_node_lookup_4".node_id) AS "Proba_-1", (SELECT "DT_node_data_4"."LogProba_-1" 
FROM "DT_node_data_4" 
WHERE "DT_node_data_4".node_id = "DT_node_lookup_4".node_id) AS "LogProba_-1", (SELECT "DT_node_data_4"."Proba_1" 
FROM "DT_node_data_4" 
WHERE "DT_node_data_4".node_id = "DT_node_lookup_4".node_id) AS "Proba_1", (SELECT "DT_node_data_4"."LogProba_1" 
FROM "DT_node_data_4" 
WHERE "DT_node_data_4".node_id = "DT_node_lookup_4".node_id) AS "LogProba_1", (SELECT "DT_node_data_4"."Decision" 
FROM "DT_node_data_4" 
WHERE "DT_node_data_4".node_id = "DT_node_lookup_4".node_id) AS "Decision" 
FROM "DT_node_lookup_4"), 
"AdaBoost_Estim_4" AS 
(SELECT "DT_Output_4"."KEY" AS join_key_4, CAST(NULL AS FLOAT) AS "Score_4_-1", "DT_Output_4"."Proba_-1" AS "Proba_4_-1", "DT_Output_4"."LogProba_-1" AS "LogProba_4_-1", CAST(NULL AS FLOAT) AS "Score_4_1", "DT_Output_4"."Proba_1" AS "Proba_4_1", "DT_Output_4"."LogProba_1" AS "LogProba_4_1", "DT_Output_4"."Decision" AS "Decision_4" 
FROM "DT_Output_4"), 
"DT_node_data_5" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Proba_-1" AS "Proba_-1", "Values"."LogProba_-1" AS "LogProba_-1", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'Feature_1' AS feature, -1.1018919944763184 AS threshold, 100 AS count, 0 AS depth, 0.5000000000000001 AS "Proba_-1", -0.69314718056 AS "LogProba_-1", 0.49999999999999994 AS "Proba_1", -0.69314718056 AS "LogProba_1", -1 AS "Decision" UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 1 AS depth, 0.851487165525154 AS "Proba_-1", -0.160770851776 AS "LogProba_-1", 0.148512834474846 AS "Proba_1", -1.90708389703 AS "LogProba_1", -1 AS "Decision" UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 84 AS count, 1 AS depth, 0.45908509889950316 AS "Proba_-1", -0.778519685454 AS "LogProba_-1", 0.5409149011004969 AS "Proba_1", -0.614493311768 AS "LogProba_1", 1 AS "Decision") AS "Values"), 
"DT_node_lookup_5" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_1" <= -1.1018919944763184) THEN 1 ELSE 2 END AS node_id 
FROM "INPUT_DATA" AS "ADS"), 
"DT_Output_5" AS 
(SELECT "DT_node_lookup_5"."KEY" AS "KEY", (SELECT "DT_node_data_5".node_id 
FROM "DT_node_data_5" 
WHERE "DT_node_data_5".node_id = "DT_node_lookup_5".node_id) AS node_id, (SELECT "DT_node_data_5".feature 
FROM "DT_node_data_5" 
WHERE "DT_node_data_5".node_id = "DT_node_lookup_5".node_id) AS feature, (SELECT "DT_node_data_5".threshold 
FROM "DT_node_data_5" 
WHERE "DT_node_data_5".node_id = "DT_node_lookup_5".node_id) AS threshold, (SELECT "DT_node_data_5".count 
FROM "DT_node_data_5" 
WHERE "DT_node_data_5".node_id = "DT_node_lookup_5".node_id) AS count, (SELECT "DT_node_data_5".depth 
FROM "DT_node_data_5" 
WHERE "DT_node_data_5".node_id = "DT_node_lookup_5".node_id) AS depth, (SELECT "DT_node_data_5"."Proba_-1" 
FROM "DT_node_data_5" 
WHERE "DT_node_data_5".node_id = "DT_node_lookup_5".node_id) AS "Proba_-1", (SELECT "DT_node_data_5"."LogProba_-1" 
FROM "DT_node_data_5" 
WHERE "DT_node_data_5".node_id = "DT_node_lookup_5".node_id) AS "LogProba_-1", (SELECT "DT_node_data_5"."Proba_1" 
FROM "DT_node_data_5" 
WHERE "DT_node_data_5".node_id = "DT_node_lookup_5".node_id) AS "Proba_1", (SELECT "DT_node_data_5"."LogProba_1" 
FROM "DT_node_data_5" 
WHERE "DT_node_data_5".node_id = "DT_node_lookup_5".node_id) AS "LogProba_1", (SELECT "DT_node_data_5"."Decision" 
FROM "DT_node_data_5" 
WHERE "DT_node_data_5".node_id = "DT_node_lookup_5".node_id) AS "Decision" 
FROM "DT_node_lookup_5"), 
"AdaBoost_Estim_5" AS 
(SELECT "DT_Output_5"."KEY" AS join_key_5, CAST(NULL AS FLOAT) AS "Score_5_-1", "DT_Output_5"."Proba_-1" AS "Proba_5_-1", "DT_Output_5"."LogProba_-1" AS "LogProba_5_-1", CAST(NULL AS FLOAT) AS "Score_5_1", "DT_Output_5"."Proba_1" AS "Proba_5_1", "DT_Output_5"."LogProba_1" AS "LogProba_5_1", "DT_Output_5"."Decision" AS "Decision_5" 
FROM "DT_Output_5"), 
"DT_node_data_6" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Proba_-1" AS "Proba_-1", "Values"."LogProba_-1" AS "LogProba_-1", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'Feature_4' AS feature, -0.45125359296798706 AS threshold, 100 AS count, 0 AS depth, 0.4999999999999997 AS "Proba_-1", -0.69314718056 AS "LogProba_-1", 0.5000000000000003 AS "Proba_1", -0.69314718056 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 29 AS count, 1 AS depth, 0.31855922585902813 AS "Proba_-1", -1.1439468688 AS "LogProba_-1", 0.6814407741409719 AS "Proba_1", -0.383545936771 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 71 AS count, 1 AS depth, 0.580769578719691 AS "Proba_-1", -0.543401195081 AS "LogProba_-1", 0.4192304212803091 AS "Proba_1", -0.86933457876 AS "LogProba_1", -1 AS "Decision") AS "Values"), 
"DT_node_lookup_6" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_4" <= -0.45125359296798706) THEN 1 ELSE 2 END AS node_id 
FROM "INPUT_DATA" AS "ADS"), 
"DT_Output_6" AS 
(SELECT "DT_node_lookup_6"."KEY" AS "KEY", (SELECT "DT_node_data_6".node_id 
FROM "DT_node_data_6" 
WHERE "DT_node_data_6".node_id = "DT_node_lookup_6".node_id) AS node_id, (SELECT "DT_node_data_6".feature 
FROM "DT_node_data_6" 
WHERE "DT_node_data_6".node_id = "DT_node_lookup_6".node_id) AS feature, (SELECT "DT_node_data_6".threshold 
FROM "DT_node_data_6" 
WHERE "DT_node_data_6".node_id = "DT_node_lookup_6".node_id) AS threshold, (SELECT "DT_node_data_6".count 
FROM "DT_node_data_6" 
WHERE "DT_node_data_6".node_id = "DT_node_lookup_6".node_id) AS count, (SELECT "DT_node_data_6".depth 
FROM "DT_node_data_6" 
WHERE "DT_node_data_6".node_id = "DT_node_lookup_6".node_id) AS depth, (SELECT "DT_node_data_6"."Proba_-1" 
FROM "DT_node_data_6" 
WHERE "DT_node_data_6".node_id = "DT_node_lookup_6".node_id) AS "Proba_-1", (SELECT "DT_node_data_6"."LogProba_-1" 
FROM "DT_node_data_6" 
WHERE "DT_node_data_6".node_id = "DT_node_lookup_6".node_id) AS "LogProba_-1", (SELECT "DT_node_data_6"."Proba_1" 
FROM "DT_node_data_6" 
WHERE "DT_node_data_6".node_id = "DT_node_lookup_6".node_id) AS "Proba_1", (SELECT "DT_node_data_6"."LogProba_1" 
FROM "DT_node_data_6" 
WHERE "DT_node_data_6".node_id = "DT_node_lookup_6".node_id) AS "LogProba_1", (SELECT "DT_node_data_6"."Decision" 
FROM "DT_node_data_6" 
WHERE "DT_node_data_6".node_id = "DT_node_lookup_6".node_id) AS "Decision" 
FROM "DT_node_lookup_6"), 
"AdaBoost_Estim_6" AS 
(SELECT "DT_Output_6"."KEY" AS join_key_6, CAST(NULL AS FLOAT) AS "Score_6_-1", "DT_Output_6"."Proba_-1" AS "Proba_6_-1", "DT_Output_6"."LogProba_-1" AS "LogProba_6_-1", CAST(NULL AS FLOAT) AS "Score_6_1", "DT_Output_6"."Proba_1" AS "Proba_6_1", "DT_Output_6"."LogProba_1" AS "LogProba_6_1", "DT_Output_6"."Decision" AS "Decision_6" 
FROM "DT_Output_6"), 
"DT_node_data_7" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Proba_-1" AS "Proba_-1", "Values"."LogProba_-1" AS "LogProba_-1", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, -0.018538031727075577 AS threshold, 100 AS count, 0 AS depth, 0.5 AS "Proba_-1", -0.69314718056 AS "LogProba_-1", 0.49999999999999994 AS "Proba_1", -0.69314718056 AS "LogProba_1", -1 AS "Decision" UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 56 AS count, 1 AS depth, 0.5817160435198123 AS "Proba_-1", -0.541772848044 AS "LogProba_-1", 0.4182839564801877 AS "Proba_1", -0.871594755369 AS "LogProba_1", -1 AS "Decision" UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 44 AS count, 1 AS depth, 0.3823407606539902 AS "Proba_-1", -0.961443024413 AS "LogProba_-1", 0.6176592393460099 AS "Proba_1", -0.481818366241 AS "LogProba_1", 1 AS "Decision") AS "Values"), 
"DT_node_lookup_7" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_3" <= -0.018538031727075577) THEN 1 ELSE 2 END AS node_id 
FROM "INPUT_DATA" AS "ADS"), 
"DT_Output_7" AS 
(SELECT "DT_node_lookup_7"."KEY" AS "KEY", (SELECT "DT_node_data_7".node_id 
FROM "DT_node_data_7" 
WHERE "DT_node_data_7".node_id = "DT_node_lookup_7".node_id) AS node_id, (SELECT "DT_node_data_7".feature 
FROM "DT_node_data_7" 
WHERE "DT_node_data_7".node_id = "DT_node_lookup_7".node_id) AS feature, (SELECT "DT_node_data_7".threshold 
FROM "DT_node_data_7" 
WHERE "DT_node_data_7".node_id = "DT_node_lookup_7".node_id) AS threshold, (SELECT "DT_node_data_7".count 
FROM "DT_node_data_7" 
WHERE "DT_node_data_7".node_id = "DT_node_lookup_7".node_id) AS count, (SELECT "DT_node_data_7".depth 
FROM "DT_node_data_7" 
WHERE "DT_node_data_7".node_id = "DT_node_lookup_7".node_id) AS depth, (SELECT "DT_node_data_7"."Proba_-1" 
FROM "DT_node_data_7" 
WHERE "DT_node_data_7".node_id = "DT_node_lookup_7".node_id) AS "Proba_-1", (SELECT "DT_node_data_7"."LogProba_-1" 
FROM "DT_node_data_7" 
WHERE "DT_node_data_7".node_id = "DT_node_lookup_7".node_id) AS "LogProba_-1", (SELECT "DT_node_data_7"."Proba_1" 
FROM "DT_node_data_7" 
WHERE "DT_node_data_7".node_id = "DT_node_lookup_7".node_id) AS "Proba_1", (SELECT "DT_node_data_7"."LogProba_1" 
FROM "DT_node_data_7" 
WHERE "DT_node_data_7".node_id = "DT_node_lookup_7".node_id) AS "LogProba_1", (SELECT "DT_node_data_7"."Decision" 
FROM "DT_node_data_7" 
WHERE "DT_node_data_7".node_id = "DT_node_lookup_7".node_id) AS "Decision" 
FROM "DT_node_lookup_7"), 
"AdaBoost_Estim_7" AS 
(SELECT "DT_Output_7"."KEY" AS join_key_7, CAST(NULL AS FLOAT) AS "Score_7_-1", "DT_Output_7"."Proba_-1" AS "Proba_7_-1", "DT_Output_7"."LogProba_-1" AS "LogProba_7_-1", CAST(NULL AS FLOAT) AS "Score_7_1", "DT_Output_7"."Proba_1" AS "Proba_7_1", "DT_Output_7"."LogProba_1" AS "LogProba_7_1", "DT_Output_7"."Decision" AS "Decision_7" 
FROM "DT_Output_7"), 
"DT_node_data_8" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Proba_-1" AS "Proba_-1", "Values"."LogProba_-1" AS "LogProba_-1", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'Feature_1' AS feature, -0.5231354832649231 AS threshold, 100 AS count, 0 AS depth, 0.5 AS "Proba_-1", -0.69314718056 AS "LogProba_-1", 0.5 AS "Proba_1", -0.69314718056 AS "LogProba_1", -1 AS "Decision" UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 33 AS count, 1 AS depth, 0.3527795653058651 AS "Proba_-1", -1.041911878 AS "LogProba_-1", 0.647220434694135 AS "Proba_1", -0.435068339734 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 67 AS count, 1 AS depth, 0.5554430315937966 AS "Proba_-1", -0.587989228548 AS "LogProba_-1", 0.44455696840620335 AS "Proba_1", -0.810677069347 AS "LogProba_1", -1 AS "Decision") AS "Values"), 
"DT_node_lookup_8" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_1" <= -0.5231354832649231) THEN 1 ELSE 2 END AS node_id 
FROM "INPUT_DATA" AS "ADS"), 
"DT_Output_8" AS 
(SELECT "DT_node_lookup_8"."KEY" AS "KEY", (SELECT "DT_node_data_8".node_id 
FROM "DT_node_data_8" 
WHERE "DT_node_data_8".node_id = "DT_node_lookup_8".node_id) AS node_id, (SELECT "DT_node_data_8".feature 
FROM "DT_node_data_8" 
WHERE "DT_node_data_8".node_id = "DT_node_lookup_8".node_id) AS feature, (SELECT "DT_node_data_8".threshold 
FROM "DT_node_data_8" 
WHERE "DT_node_data_8".node_id = "DT_node_lookup_8".node_id) AS threshold, (SELECT "DT_node_data_8".count 
FROM "DT_node_data_8" 
WHERE "DT_node_data_8".node_id = "DT_node_lookup_8".node_id) AS count, (SELECT "DT_node_data_8".depth 
FROM "DT_node_data_8" 
WHERE "DT_node_data_8".node_id = "DT_node_lookup_8".node_id) AS depth, (SELECT "DT_node_data_8"."Proba_-1" 
FROM "DT_node_data_8" 
WHERE "DT_node_data_8".node_id = "DT_node_lookup_8".node_id) AS "Proba_-1", (SELECT "DT_node_data_8"."LogProba_-1" 
FROM "DT_node_data_8" 
WHERE "DT_node_data_8".node_id = "DT_node_lookup_8".node_id) AS "LogProba_-1", (SELECT "DT_node_data_8"."Proba_1" 
FROM "DT_node_data_8" 
WHERE "DT_node_data_8".node_id = "DT_node_lookup_8".node_id) AS "Proba_1", (SELECT "DT_node_data_8"."LogProba_1" 
FROM "DT_node_data_8" 
WHERE "DT_node_data_8".node_id = "DT_node_lookup_8".node_id) AS "LogProba_1", (SELECT "DT_node_data_8"."Decision" 
FROM "DT_node_data_8" 
WHERE "DT_node_data_8".node_id = "DT_node_lookup_8".node_id) AS "Decision" 
FROM "DT_node_lookup_8"), 
"AdaBoost_Estim_8" AS 
(SELECT "DT_Output_8"."KEY" AS join_key_8, CAST(NULL AS FLOAT) AS "Score_8_-1", "DT_Output_8"."Proba_-1" AS "Proba_8_-1", "DT_Output_8"."LogProba_-1" AS "LogProba_8_-1", CAST(NULL AS FLOAT) AS "Score_8_1", "DT_Output_8"."Proba_1" AS "Proba_8_1", "DT_Output_8"."LogProba_1" AS "LogProba_8_1", "DT_Output_8"."Decision" AS "Decision_8" 
FROM "DT_Output_8"), 
"DT_node_data_9" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Proba_-1" AS "Proba_-1", "Values"."LogProba_-1" AS "LogProba_-1", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'Feature_0' AS feature, 2.2167487144470215 AS threshold, 100 AS count, 0 AS depth, 0.5 AS "Proba_-1", -0.69314718056 AS "LogProba_-1", 0.5 AS "Proba_1", -0.69314718056 AS "LogProba_1", -1 AS "Decision" UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 99 AS count, 1 AS depth, 0.48392635367974157 AS "Proba_-1", -0.725822545662 AS "LogProba_-1", 0.5160736463202584 AS "Proba_1", -0.661505798258 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 1 AS depth, 1.0 AS "Proba_-1", 0.0 AS "LogProba_-1", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", -1 AS "Decision") AS "Values"), 
"DT_node_lookup_9" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" <= 2.2167487144470215) THEN 1 ELSE 2 END AS node_id 
FROM "INPUT_DATA" AS "ADS"), 
"DT_Output_9" AS 
(SELECT "DT_node_lookup_9"."KEY" AS "KEY", (SELECT "DT_node_data_9".node_id 
FROM "DT_node_data_9" 
WHERE "DT_node_data_9".node_id = "DT_node_lookup_9".node_id) AS node_id, (SELECT "DT_node_data_9".feature 
FROM "DT_node_data_9" 
WHERE "DT_node_data_9".node_id = "DT_node_lookup_9".node_id) AS feature, (SELECT "DT_node_data_9".threshold 
FROM "DT_node_data_9" 
WHERE "DT_node_data_9".node_id = "DT_node_lookup_9".node_id) AS threshold, (SELECT "DT_node_data_9".count 
FROM "DT_node_data_9" 
WHERE "DT_node_data_9".node_id = "DT_node_lookup_9".node_id) AS count, (SELECT "DT_node_data_9".depth 
FROM "DT_node_data_9" 
WHERE "DT_node_data_9".node_id = "DT_node_lookup_9".node_id) AS depth, (SELECT "DT_node_data_9"."Proba_-1" 
FROM "DT_node_data_9" 
WHERE "DT_node_data_9".node_id = "DT_node_lookup_9".node_id) AS "Proba_-1", (SELECT "DT_node_data_9"."LogProba_-1" 
FROM "DT_node_data_9" 
WHERE "DT_node_data_9".node_id = "DT_node_lookup_9".node_id) AS "LogProba_-1", (SELECT "DT_node_data_9"."Proba_1" 
FROM "DT_node_data_9" 
WHERE "DT_node_data_9".node_id = "DT_node_lookup_9".node_id) AS "Proba_1", (SELECT "DT_node_data_9"."LogProba_1" 
FROM "DT_node_data_9" 
WHERE "DT_node_data_9".node_id = "DT_node_lookup_9".node_id) AS "LogProba_1", (SELECT "DT_node_data_9"."Decision" 
FROM "DT_node_data_9" 
WHERE "DT_node_data_9".node_id = "DT_node_lookup_9".node_id) AS "Decision" 
FROM "DT_node_lookup_9"), 
"AdaBoost_Estim_9" AS 
(SELECT "DT_Output_9"."KEY" AS join_key_9, CAST(NULL AS FLOAT) AS "Score_9_-1", "DT_Output_9"."Proba_-1" AS "Proba_9_-1", "DT_Output_9"."LogProba_-1" AS "LogProba_9_-1", CAST(NULL AS FLOAT) AS "Score_9_1", "DT_Output_9"."Proba_1" AS "Proba_9_1", "DT_Output_9"."LogProba_1" AS "LogProba_9_1", "DT_Output_9"."Decision" AS "Decision_9" 
FROM "DT_Output_9"), 
"DT_node_data_10" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Proba_-1" AS "Proba_-1", "Values"."LogProba_-1" AS "LogProba_-1", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, -1.6990184783935547 AS threshold, 100 AS count, 0 AS depth, 0.5000000002396399 AS "Proba_-1", -0.693147180081 AS "LogProba_-1", 0.49999999976036014 AS "Proba_1", -0.693147181039 AS "LogProba_1", -1 AS "Decision" UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 1 AS depth, 8.044014216750605e-09 AS "Proba_-1", -18.6383375977 AS "LogProba_-1", 0.9999999919559859 AS "Proba_1", -8.04401415382e-09 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 94 AS count, 1 AS depth, 0.531678554246765 AS "Proba_-1", -0.631716193596 AS "LogProba_-1", 0.468321445753235 AS "Proba_1", -0.758600368938 AS "LogProba_1", -1 AS "Decision") AS "Values"), 
"DT_node_lookup_10" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_3" <= -1.6990184783935547) THEN 1 ELSE 2 END AS node_id 
FROM "INPUT_DATA" AS "ADS"), 
"DT_Output_10" AS 
(SELECT "DT_node_lookup_10"."KEY" AS "KEY", (SELECT "DT_node_data_10".node_id 
FROM "DT_node_data_10" 
WHERE "DT_node_data_10".node_id = "DT_node_lookup_10".node_id) AS node_id, (SELECT "DT_node_data_10".feature 
FROM "DT_node_data_10" 
WHERE "DT_node_data_10".node_id = "DT_node_lookup_10".node_id) AS feature, (SELECT "DT_node_data_10".threshold 
FROM "DT_node_data_10" 
WHERE "DT_node_data_10".node_id = "DT_node_lookup_10".node_id) AS threshold, (SELECT "DT_node_data_10".count 
FROM "DT_node_data_10" 
WHERE "DT_node_data_10".node_id = "DT_node_lookup_10".node_id) AS count, (SELECT "DT_node_data_10".depth 
FROM "DT_node_data_10" 
WHERE "DT_node_data_10".node_id = "DT_node_lookup_10".node_id) AS depth, (SELECT "DT_node_data_10"."Proba_-1" 
FROM "DT_node_data_10" 
WHERE "DT_node_data_10".node_id = "DT_node_lookup_10".node_id) AS "Proba_-1", (SELECT "DT_node_data_10"."LogProba_-1" 
FROM "DT_node_data_10" 
WHERE "DT_node_data_10".node_id = "DT_node_lookup_10".node_id) AS "LogProba_-1", (SELECT "DT_node_data_10"."Proba_1" 
FROM "DT_node_data_10" 
WHERE "DT_node_data_10".node_id = "DT_node_lookup_10".node_id) AS "Proba_1", (SELECT "DT_node_data_10"."LogProba_1" 
FROM "DT_node_data_10" 
WHERE "DT_node_data_10".node_id = "DT_node_lookup_10".node_id) AS "LogProba_1", (SELECT "DT_node_data_10"."Decision" 
FROM "DT_node_data_10" 
WHERE "DT_node_data_10".node_id = "DT_node_lookup_10".node_id) AS "Decision" 
FROM "DT_node_lookup_10"), 
"AdaBoost_Estim_10" AS 
(SELECT "DT_Output_10"."KEY" AS join_key_10, CAST(NULL AS FLOAT) AS "Score_10_-1", "DT_Output_10"."Proba_-1" AS "Proba_10_-1", "DT_Output_10"."LogProba_-1" AS "LogProba_10_-1", CAST(NULL AS FLOAT) AS "Score_10_1", "DT_Output_10"."Proba_1" AS "Proba_10_1", "DT_Output_10"."LogProba_1" AS "LogProba_10_1", "DT_Output_10"."Decision" AS "Decision_10" 
FROM "DT_Output_10"), 
"DT_node_data_11" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Proba_-1" AS "Proba_-1", "Values"."LogProba_-1" AS "LogProba_-1", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'Feature_0' AS feature, 1.2173686027526855 AS threshold, 100 AS count, 0 AS depth, 0.5000000000000001 AS "Proba_-1", -0.69314718056 AS "LogProba_-1", 0.4999999999999999 AS "Proba_1", -0.69314718056 AS "LogProba_1", -1 AS "Decision" UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 93 AS count, 1 AS depth, 0.5245491528312167 AS "Proba_-1", -0.645216141845 AS "LogProba_-1", 0.4754508471687833 AS "Proba_1", -0.743491773173 AS "LogProba_1", -1 AS "Decision" UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 1 AS depth, 0.00012163237698981772 AS "Proba_-1", -9.01450736573 AS "LogProba_-1", 0.9998783676230102 AS "Proba_1", -0.000121639774807 AS "LogProba_1", 1 AS "Decision") AS "Values"), 
"DT_node_lookup_11" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" <= 1.2173686027526855) THEN 1 ELSE 2 END AS node_id 
FROM "INPUT_DATA" AS "ADS"), 
"DT_Output_11" AS 
(SELECT "DT_node_lookup_11"."KEY" AS "KEY", (SELECT "DT_node_data_11".node_id 
FROM "DT_node_data_11" 
WHERE "DT_node_data_11".node_id = "DT_node_lookup_11".node_id) AS node_id, (SELECT "DT_node_data_11".feature 
FROM "DT_node_data_11" 
WHERE "DT_node_data_11".node_id = "DT_node_lookup_11".node_id) AS feature, (SELECT "DT_node_data_11".threshold 
FROM "DT_node_data_11" 
WHERE "DT_node_data_11".node_id = "DT_node_lookup_11".node_id) AS threshold, (SELECT "DT_node_data_11".count 
FROM "DT_node_data_11" 
WHERE "DT_node_data_11".node_id = "DT_node_lookup_11".node_id) AS count, (SELECT "DT_node_data_11".depth 
FROM "DT_node_data_11" 
WHERE "DT_node_data_11".node_id = "DT_node_lookup_11".node_id) AS depth, (SELECT "DT_node_data_11"."Proba_-1" 
FROM "DT_node_data_11" 
WHERE "DT_node_data_11".node_id = "DT_node_lookup_11".node_id) AS "Proba_-1", (SELECT "DT_node_data_11"."LogProba_-1" 
FROM "DT_node_data_11" 
WHERE "DT_node_data_11".node_id = "DT_node_lookup_11".node_id) AS "LogProba_-1", (SELECT "DT_node_data_11"."Proba_1" 
FROM "DT_node_data_11" 
WHERE "DT_node_data_11".node_id = "DT_node_lookup_11".node_id) AS "Proba_1", (SELECT "DT_node_data_11"."LogProba_1" 
FROM "DT_node_data_11" 
WHERE "DT_node_data_11".node_id = "DT_node_lookup_11".node_id) AS "LogProba_1", (SELECT "DT_node_data_11"."Decision" 
FROM "DT_node_data_11" 
WHERE "DT_node_data_11".node_id = "DT_node_lookup_11".node_id) AS "Decision" 
FROM "DT_node_lookup_11"), 
"AdaBoost_Estim_11" AS 
(SELECT "DT_Output_11"."KEY" AS join_key_11, CAST(NULL AS FLOAT) AS "Score_11_-1", "DT_Output_11"."Proba_-1" AS "Proba_11_-1", "DT_Output_11"."LogProba_-1" AS "LogProba_11_-1", CAST(NULL AS FLOAT) AS "Score_11_1", "DT_Output_11"."Proba_1" AS "Proba_11_1", "DT_Output_11"."LogProba_1" AS "LogProba_11_1", "DT_Output_11"."Decision" AS "Decision_11" 
FROM "DT_Output_11"), 
"AdaBoost_Join_CTE" AS 
(SELECT "AdaBoost_Estim_0".join_key_0 AS join_key_0, "AdaBoost_Estim_0"."Score_0_-1" AS "Score_0_-1", "AdaBoost_Estim_0"."Proba_0_-1" AS "Proba_0_-1", "AdaBoost_Estim_0"."LogProba_0_-1" AS "LogProba_0_-1", "AdaBoost_Estim_0"."Score_0_1" AS "Score_0_1", "AdaBoost_Estim_0"."Proba_0_1" AS "Proba_0_1", "AdaBoost_Estim_0"."LogProba_0_1" AS "LogProba_0_1", "AdaBoost_Estim_0"."Decision_0" AS "Decision_0", "AdaBoost_Estim_1".join_key_1 AS join_key_1, "AdaBoost_Estim_1"."Score_1_-1" AS "Score_1_-1", "AdaBoost_Estim_1"."Proba_1_-1" AS "Proba_1_-1", "AdaBoost_Estim_1"."LogProba_1_-1" AS "LogProba_1_-1", "AdaBoost_Estim_1"."Score_1_1" AS "Score_1_1", "AdaBoost_Estim_1"."Proba_1_1" AS "Proba_1_1", "AdaBoost_Estim_1"."LogProba_1_1" AS "LogProba_1_1", "AdaBoost_Estim_1"."Decision_1" AS "Decision_1", "AdaBoost_Estim_2".join_key_2 AS join_key_2, "AdaBoost_Estim_2"."Score_2_-1" AS "Score_2_-1", "AdaBoost_Estim_2"."Proba_2_-1" AS "Proba_2_-1", "AdaBoost_Estim_2"."LogProba_2_-1" AS "LogProba_2_-1", "AdaBoost_Estim_2"."Score_2_1" AS "Score_2_1", "AdaBoost_Estim_2"."Proba_2_1" AS "Proba_2_1", "AdaBoost_Estim_2"."LogProba_2_1" AS "LogProba_2_1", "AdaBoost_Estim_2"."Decision_2" AS "Decision_2", "AdaBoost_Estim_3".join_key_3 AS join_key_3, "AdaBoost_Estim_3"."Score_3_-1" AS "Score_3_-1", "AdaBoost_Estim_3"."Proba_3_-1" AS "Proba_3_-1", "AdaBoost_Estim_3"."LogProba_3_-1" AS "LogProba_3_-1", "AdaBoost_Estim_3"."Score_3_1" AS "Score_3_1", "AdaBoost_Estim_3"."Proba_3_1" AS "Proba_3_1", "AdaBoost_Estim_3"."LogProba_3_1" AS "LogProba_3_1", "AdaBoost_Estim_3"."Decision_3" AS "Decision_3", "AdaBoost_Estim_4".join_key_4 AS join_key_4, "AdaBoost_Estim_4"."Score_4_-1" AS "Score_4_-1", "AdaBoost_Estim_4"."Proba_4_-1" AS "Proba_4_-1", "AdaBoost_Estim_4"."LogProba_4_-1" AS "LogProba_4_-1", "AdaBoost_Estim_4"."Score_4_1" AS "Score_4_1", "AdaBoost_Estim_4"."Proba_4_1" AS "Proba_4_1", "AdaBoost_Estim_4"."LogProba_4_1" AS "LogProba_4_1", "AdaBoost_Estim_4"."Decision_4" AS "Decision_4", "AdaBoost_Estim_5".join_key_5 AS join_key_5, "AdaBoost_Estim_5"."Score_5_-1" AS "Score_5_-1", "AdaBoost_Estim_5"."Proba_5_-1" AS "Proba_5_-1", "AdaBoost_Estim_5"."LogProba_5_-1" AS "LogProba_5_-1", "AdaBoost_Estim_5"."Score_5_1" AS "Score_5_1", "AdaBoost_Estim_5"."Proba_5_1" AS "Proba_5_1", "AdaBoost_Estim_5"."LogProba_5_1" AS "LogProba_5_1", "AdaBoost_Estim_5"."Decision_5" AS "Decision_5", "AdaBoost_Estim_6".join_key_6 AS join_key_6, "AdaBoost_Estim_6"."Score_6_-1" AS "Score_6_-1", "AdaBoost_Estim_6"."Proba_6_-1" AS "Proba_6_-1", "AdaBoost_Estim_6"."LogProba_6_-1" AS "LogProba_6_-1", "AdaBoost_Estim_6"."Score_6_1" AS "Score_6_1", "AdaBoost_Estim_6"."Proba_6_1" AS "Proba_6_1", "AdaBoost_Estim_6"."LogProba_6_1" AS "LogProba_6_1", "AdaBoost_Estim_6"."Decision_6" AS "Decision_6", "AdaBoost_Estim_7".join_key_7 AS join_key_7, "AdaBoost_Estim_7"."Score_7_-1" AS "Score_7_-1", "AdaBoost_Estim_7"."Proba_7_-1" AS "Proba_7_-1", "AdaBoost_Estim_7"."LogProba_7_-1" AS "LogProba_7_-1", "AdaBoost_Estim_7"."Score_7_1" AS "Score_7_1", "AdaBoost_Estim_7"."Proba_7_1" AS "Proba_7_1", "AdaBoost_Estim_7"."LogProba_7_1" AS "LogProba_7_1", "AdaBoost_Estim_7"."Decision_7" AS "Decision_7", "AdaBoost_Estim_8".join_key_8 AS join_key_8, "AdaBoost_Estim_8"."Score_8_-1" AS "Score_8_-1", "AdaBoost_Estim_8"."Proba_8_-1" AS "Proba_8_-1", "AdaBoost_Estim_8"."LogProba_8_-1" AS "LogProba_8_-1", "AdaBoost_Estim_8"."Score_8_1" AS "Score_8_1", "AdaBoost_Estim_8"."Proba_8_1" AS "Proba_8_1", "AdaBoost_Estim_8"."LogProba_8_1" AS "LogProba_8_1", "AdaBoost_Estim_8"."Decision_8" AS "Decision_8", "AdaBoost_Estim_9".join_key_9 AS join_key_9, "AdaBoost_Estim_9"."Score_9_-1" AS "Score_9_-1", "AdaBoost_Estim_9"."Proba_9_-1" AS "Proba_9_-1", "AdaBoost_Estim_9"."LogProba_9_-1" AS "LogProba_9_-1", "AdaBoost_Estim_9"."Score_9_1" AS "Score_9_1", "AdaBoost_Estim_9"."Proba_9_1" AS "Proba_9_1", "AdaBoost_Estim_9"."LogProba_9_1" AS "LogProba_9_1", "AdaBoost_Estim_9"."Decision_9" AS "Decision_9", "AdaBoost_Estim_10".join_key_10 AS join_key_10, "AdaBoost_Estim_10"."Score_10_-1" AS "Score_10_-1", "AdaBoost_Estim_10"."Proba_10_-1" AS "Proba_10_-1", "AdaBoost_Estim_10"."LogProba_10_-1" AS "LogProba_10_-1", "AdaBoost_Estim_10"."Score_10_1" AS "Score_10_1", "AdaBoost_Estim_10"."Proba_10_1" AS "Proba_10_1", "AdaBoost_Estim_10"."LogProba_10_1" AS "LogProba_10_1", "AdaBoost_Estim_10"."Decision_10" AS "Decision_10", "AdaBoost_Estim_11".join_key_11 AS join_key_11, "AdaBoost_Estim_11"."Score_11_-1" AS "Score_11_-1", "AdaBoost_Estim_11"."Proba_11_-1" AS "Proba_11_-1", "AdaBoost_Estim_11"."LogProba_11_-1" AS "LogProba_11_-1", "AdaBoost_Estim_11"."Score_11_1" AS "Score_11_1", "AdaBoost_Estim_11"."Proba_11_1" AS "Proba_11_1", "AdaBoost_Estim_11"."LogProba_11_1" AS "LogProba_11_1", "AdaBoost_Estim_11"."Decision_11" AS "Decision_11" 
FROM "AdaBoost_Estim_0" LEFT OUTER JOIN "AdaBoost_Estim_1" ON "AdaBoost_Estim_0".join_key_0 = "AdaBoost_Estim_1".join_key_1 LEFT OUTER JOIN "AdaBoost_Estim_2" ON "AdaBoost_Estim_2".join_key_2 = "AdaBoost_Estim_1".join_key_1 LEFT OUTER JOIN "AdaBoost_Estim_3" ON "AdaBoost_Estim_3".join_key_3 = "AdaBoost_Estim_2".join_key_2 LEFT OUTER JOIN "AdaBoost_Estim_4" ON "AdaBoost_Estim_4".join_key_4 = "AdaBoost_Estim_3".join_key_3 LEFT OUTER JOIN "AdaBoost_Estim_5" ON "AdaBoost_Estim_5".join_key_5 = "AdaBoost_Estim_4".join_key_4 LEFT OUTER JOIN "AdaBoost_Estim_6" ON "AdaBoost_Estim_6".join_key_6 = "AdaBoost_Estim_5".join_key_5 LEFT OUTER JOIN "AdaBoost_Estim_7" ON "AdaBoost_Estim_7".join_key_7 = "AdaBoost_Estim_6".join_key_6 LEFT OUTER JOIN "AdaBoost_Estim_8" ON "AdaBoost_Estim_8".join_key_8 = "AdaBoost_Estim_7".join_key_7 LEFT OUTER JOIN "AdaBoost_Estim_9" ON "AdaBoost_Estim_9".join_key_9 = "AdaBoost_Estim_8".join_key_8 LEFT OUTER JOIN "AdaBoost_Estim_10" ON "AdaBoost_Estim_10".join_key_10 = "AdaBoost_Estim_9".join_key_9 LEFT OUTER JOIN "AdaBoost_Estim_11" ON "AdaBoost_Estim_11".join_key_11 = "AdaBoost_Estim_10".join_key_10), 
"AdaBoost_AVG_Scores_BN" AS 
(SELECT "AdaBoost_Join_CTE".join_key_0 AS "KEY", (1.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_-1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_-1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_1") ELSE -1.79769313486231e+308 END END) / 2)) / 12.0 + (1.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_-1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_-1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_1") ELSE -1.79769313486231e+308 END END) / 2)) / 12.0 + (1.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_-1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_-1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_1") ELSE -1.79769313486231e+308 END END) / 2)) / 12.0 + (1.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_-1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_-1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_1") ELSE -1.79769313486231e+308 END END) / 2)) / 12.0 + (1.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_-1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_-1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_1") ELSE -1.79769313486231e+308 END END) / 2)) / 12.0 + (1.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_-1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_-1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_1") ELSE -1.79769313486231e+308 END END) / 2)) / 12.0 + (1.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_6_-1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_6_-1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_6_1") ELSE -1.79769313486231e+308 END END) / 2)) / 12.0 + (1.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_7_-1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_7_-1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_7_1") ELSE -1.79769313486231e+308 END END) / 2)) / 12.0 + (1.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_8_-1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_8_-1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_8_1") ELSE -1.79769313486231e+308 END END) / 2)) / 12.0 + (1.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_9_-1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_9_-1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_9_1") ELSE -1.79769313486231e+308 END END) / 2)) / 12.0 + (1.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_10_-1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_10_-1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_10_1") ELSE -1.79769313486231e+308 END END) / 2)) / 12.0 + (1.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_11_-1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_11_-1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_11_1") ELSE -1.79769313486231e+308 END END) / 2)) / 12.0 AS "Score_-1", 1.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_-1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_-1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_1") ELSE -1.79769313486231e+308 END END) / 2) + 1.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_-1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_-1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_1") ELSE -1.79769313486231e+308 END END) / 2) + 1.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_-1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_-1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_1") ELSE -1.79769313486231e+308 END END) / 2) + 1.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_-1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_-1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_1") ELSE -1.79769313486231e+308 END END) / 2) + 1.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_-1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_-1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_1") ELSE -1.79769313486231e+308 END END) / 2) + 1.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_-1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_-1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_1") ELSE -1.79769313486231e+308 END END) / 2) + 1.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_6_-1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_6_-1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_6_1") ELSE -1.79769313486231e+308 END END) / 2) + 1.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_7_-1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_7_-1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_7_1") ELSE -1.79769313486231e+308 END END) / 2) + 1.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_8_-1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_8_-1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_8_1") ELSE -1.79769313486231e+308 END END) / 2) + 1.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_9_-1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_9_-1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_9_1") ELSE -1.79769313486231e+308 END END) / 2) + 1.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_10_-1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_10_-1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_10_1") ELSE -1.79769313486231e+308 END END) / 2) + 1.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_11_-1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_11_-1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_11_1") ELSE -1.79769313486231e+308 END END) / 2) AS "Proba_-1", (1.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_-1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_1") ELSE -1.79769313486231e+308 END END) / 2)) / 12.0 + (1.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_-1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_1") ELSE -1.79769313486231e+308 END END) / 2)) / 12.0 + (1.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_-1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_1") ELSE -1.79769313486231e+308 END END) / 2)) / 12.0 + (1.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_-1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_1") ELSE -1.79769313486231e+308 END END) / 2)) / 12.0 + (1.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_-1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_1") ELSE -1.79769313486231e+308 END END) / 2)) / 12.0 + (1.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_-1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_1") ELSE -1.79769313486231e+308 END END) / 2)) / 12.0 + (1.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_6_1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_6_-1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_6_1") ELSE -1.79769313486231e+308 END END) / 2)) / 12.0 + (1.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_7_1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_7_-1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_7_1") ELSE -1.79769313486231e+308 END END) / 2)) / 12.0 + (1.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_8_1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_8_-1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_8_1") ELSE -1.79769313486231e+308 END END) / 2)) / 12.0 + (1.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_9_1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_9_-1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_9_1") ELSE -1.79769313486231e+308 END END) / 2)) / 12.0 + (1.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_10_1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_10_-1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_10_1") ELSE -1.79769313486231e+308 END END) / 2)) / 12.0 + (1.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_11_1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_11_-1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_11_1") ELSE -1.79769313486231e+308 END END) / 2)) / 12.0 AS "Score_1", 1.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_-1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_1") ELSE -1.79769313486231e+308 END END) / 2) + 1.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_-1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_1") ELSE -1.79769313486231e+308 END END) / 2) + 1.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_-1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_1") ELSE -1.79769313486231e+308 END END) / 2) + 1.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_-1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_1") ELSE -1.79769313486231e+308 END END) / 2) + 1.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_-1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_1") ELSE -1.79769313486231e+308 END END) / 2) + 1.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_-1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_1") ELSE -1.79769313486231e+308 END END) / 2) + 1.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_6_1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_6_-1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_6_1") ELSE -1.79769313486231e+308 END END) / 2) + 1.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_7_1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_7_-1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_7_1") ELSE -1.79769313486231e+308 END END) / 2) + 1.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_8_1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_8_-1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_8_1") ELSE -1.79769313486231e+308 END END) / 2) + 1.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_9_1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_9_-1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_9_1") ELSE -1.79769313486231e+308 END END) / 2) + 1.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_10_1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_10_-1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_10_1") ELSE -1.79769313486231e+308 END END) / 2) + 1.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_11_1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_11_-1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_11_1") ELSE -1.79769313486231e+308 END END) / 2) AS "Proba_1" 
FROM "AdaBoost_Join_CTE"), 
"AdaBoost_AVG_Scores" AS 
(SELECT "AdaBoost_AVG_Scores_BN"."KEY" AS "KEY", "AdaBoost_AVG_Scores_BN"."Score_-1" AS "Score_-1", exp(("AdaBoost_AVG_Scores_BN"."Proba_-1" / 12.0) / 1) / (exp(("AdaBoost_AVG_Scores_BN"."Proba_-1" / 12.0) / 1) + exp(("AdaBoost_AVG_Scores_BN"."Proba_1" / 12.0) / 1)) AS "Proba_-1", CAST(NULL AS FLOAT) AS "LogProba_-1", "AdaBoost_AVG_Scores_BN"."Score_1" AS "Score_1", exp(("AdaBoost_AVG_Scores_BN"."Proba_1" / 12.0) / 1) / (exp(("AdaBoost_AVG_Scores_BN"."Proba_-1" / 12.0) / 1) + exp(("AdaBoost_AVG_Scores_BN"."Proba_1" / 12.0) / 1)) AS "Proba_1", CAST(NULL AS FLOAT) AS "LogProba_1" 
FROM "AdaBoost_AVG_Scores_BN"), 
orig_cte AS 
(SELECT "AdaBoost_AVG_Scores"."KEY" AS "KEY", "AdaBoost_AVG_Scores"."Score_-1" AS "Score_-1", "AdaBoost_AVG_Scores"."Score_1" AS "Score_1", "AdaBoost_AVG_Scores"."Proba_-1" AS "Proba_-1", "AdaBoost_AVG_Scores"."Proba_1" AS "Proba_1", "AdaBoost_AVG_Scores"."LogProba_-1" AS "LogProba_-1", "AdaBoost_AVG_Scores"."LogProba_1" AS "LogProba_1", CAST(NULL AS FLOAT) AS "Decision" 
FROM "AdaBoost_AVG_Scores"), 
score_class_union AS 
(SELECT scu."KEY" AS "KEY", scu.class AS class, scu."LogProba" AS "LogProba", scu."Proba" AS "Proba", scu."Score" AS "Score" 
FROM (SELECT orig_cte."KEY" AS "KEY", -1 AS class, orig_cte."LogProba_-1" AS "LogProba", orig_cte."Proba_-1" AS "Proba", orig_cte."Score_-1" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 1 AS class, orig_cte."LogProba_1" AS "LogProba", orig_cte."Proba_1" AS "Proba", orig_cte."Score_1" AS "Score" 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte."KEY" AS "KEY", orig_cte."Score_-1" AS "Score_-1", orig_cte."Score_1" AS "Score_1", orig_cte."Proba_-1" AS "Proba_-1", orig_cte."Proba_1" AS "Proba_1", orig_cte."LogProba_-1" AS "LogProba_-1", orig_cte."LogProba_1" AS "LogProba_1", orig_cte."Decision" AS "Decision", (SELECT max(score_class_union."LogProba") AS max_1 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_LogProba", (SELECT max(score_class_union."Proba") AS max_2 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_Proba", (SELECT max(score_class_union."Score") AS max_3 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_Score" 
FROM orig_cte), 
arg_max_cte AS 
(SELECT score_max."KEY" AS "KEY", score_max."Score_-1" AS "Score_-1", score_max."Score_1" AS "Score_1", score_max."Proba_-1" AS "Proba_-1", score_max."Proba_1" AS "Proba_1", score_max."LogProba_-1" AS "LogProba_-1", score_max."LogProba_1" AS "LogProba_1", score_max."Decision" AS "Decision", score_max."max_LogProba" AS "max_LogProba", score_max."max_Proba" AS "max_Proba", score_max."max_Score" AS "max_Score", (SELECT min(score_class_union.class) AS min_1 
FROM score_class_union 
WHERE score_max."max_LogProba" = score_class_union."LogProba" AND score_max."KEY" = score_class_union."KEY") AS "arg_max_LogProba", (SELECT min(score_class_union.class) AS min_2 
FROM score_class_union 
WHERE score_max."max_Proba" = score_class_union."Proba" AND score_max."KEY" = score_class_union."KEY") AS "arg_max_Proba", (SELECT min(score_class_union.class) AS min_3 
FROM score_class_union 
WHERE score_max."max_Score" = score_class_union."Score" AND score_max."KEY" = score_class_union."KEY") AS "arg_max_Score" 
FROM score_max)
 SELECT arg_max_cte."KEY" AS "KEY", arg_max_cte."Score_-1" AS "Score_-1", arg_max_cte."Score_1" AS "Score_1", arg_max_cte."Proba_-1" AS "Proba_-1", arg_max_cte."Proba_1" AS "Proba_1", CASE WHEN (arg_max_cte."Proba_-1" > 0.0) THEN ln(arg_max_cte."Proba_-1") ELSE -1.79769313486231e+308 END AS "LogProba_-1", CASE WHEN (arg_max_cte."Proba_1" > 0.0) THEN ln(arg_max_cte."Proba_1") ELSE -1.79769313486231e+308 END AS "LogProba_1", arg_max_cte."arg_max_Score" AS "Decision" 
FROM arg_max_cte