-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH "DT_node_data" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Proba_2" AS "Proba_2", "Values"."LogProba_2" AS "LogProba_2", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, 0.800000011920929 AS threshold, 150 AS count, 0 AS depth, 0.33333333333333337 AS "Proba_0", -1.09861228867 AS "LogProba_0", 0.33333333333333337 AS "Proba_1", -1.09861228867 AS "LogProba_1", 0.33333333333333337 AS "Proba_2", -1.09861228867 AS "LogProba_2", 0 AS "Decision" FROM DUAL UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 50 AS count, 1 AS depth, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_FLOAT_INFINITY AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_FLOAT_INFINITY AS "LogProba_2", 0 AS "Decision" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 100 AS count, 1 AS depth, 0.0 AS "Proba_0", -BINARY_FLOAT_INFINITY AS "LogProba_0", 0.5 AS "Proba_1", -0.69314718056 AS "LogProba_1", 0.5 AS "Proba_2", -0.69314718056 AS "LogProba_2", 1 AS "Decision" FROM DUAL) "Values"), 
"DT_node_lookup" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_3" <= 0.800000011920929) THEN 1 ELSE 2 END AS node_id 
FROM "INPUT_DATA" "ADS"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", (SELECT "DT_node_data".node_id 
FROM "DT_node_data" 
WHERE "DT_node_data".node_id = "DT_node_lookup".node_id) AS node_id, (SELECT "DT_node_data".feature 
FROM "DT_node_data" 
WHERE "DT_node_data".node_id = "DT_node_lookup".node_id) AS feature, (SELECT "DT_node_data".threshold 
FROM "DT_node_data" 
WHERE "DT_node_data".node_id = "DT_node_lookup".node_id) AS threshold, (SELECT "DT_node_data".count 
FROM "DT_node_data" 
WHERE "DT_node_data".node_id = "DT_node_lookup".node_id) AS count, (SELECT "DT_node_data".depth 
FROM "DT_node_data" 
WHERE "DT_node_data".node_id = "DT_node_lookup".node_id) AS depth, (SELECT "DT_node_data"."Proba_0" 
FROM "DT_node_data" 
WHERE "DT_node_data".node_id = "DT_node_lookup".node_id) AS "Proba_0", (SELECT "DT_node_data"."LogProba_0" 
FROM "DT_node_data" 
WHERE "DT_node_data".node_id = "DT_node_lookup".node_id) AS "LogProba_0", (SELECT "DT_node_data"."Proba_1" 
FROM "DT_node_data" 
WHERE "DT_node_data".node_id = "DT_node_lookup".node_id) AS "Proba_1", (SELECT "DT_node_data"."LogProba_1" 
FROM "DT_node_data" 
WHERE "DT_node_data".node_id = "DT_node_lookup".node_id) AS "LogProba_1", (SELECT "DT_node_data"."Proba_2" 
FROM "DT_node_data" 
WHERE "DT_node_data".node_id = "DT_node_lookup".node_id) AS "Proba_2", (SELECT "DT_node_data"."LogProba_2" 
FROM "DT_node_data" 
WHERE "DT_node_data".node_id = "DT_node_lookup".node_id) AS "LogProba_2", (SELECT "DT_node_data"."Decision" 
FROM "DT_node_data" 
WHERE "DT_node_data".node_id = "DT_node_lookup".node_id) AS "Decision" 
FROM "DT_node_lookup"), 
"AdaBoost_Estim_0" AS 
(SELECT "DT_Output"."KEY" AS join_key_0, CAST(NULL AS FLOAT) AS "Score_0_0", "DT_Output"."Proba_0" AS "Proba_0_0", "DT_Output"."LogProba_0" AS "LogProba_0_0", CAST(NULL AS FLOAT) AS "Score_0_1", "DT_Output"."Proba_1" AS "Proba_0_1", "DT_Output"."LogProba_1" AS "LogProba_0_1", CAST(NULL AS FLOAT) AS "Score_0_2", "DT_Output"."Proba_2" AS "Proba_0_2", "DT_Output"."LogProba_2" AS "LogProba_0_2", "DT_Output"."Decision" AS "Decision_0" 
FROM "DT_Output"), 
"DT_node_data_1" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Proba_2" AS "Proba_2", "Values"."LogProba_2" AS "LogProba_2", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, 1.75 AS threshold, 150 AS count, 0 AS depth, 2.4031029170511716e-06 AS "Proba_0", -12.9387497736 AS "LogProba_0", 0.4999987984485415 AS "Proba_1", -0.693149583666 AS "LogProba_1", 0.4999987984485415 AS "Proba_2", -0.693149583666 AS "LogProba_2", 1 AS "Decision" FROM DUAL UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 104 AS count, 1 AS depth, 4.450181477220168e-06 AS "Proba_0", -12.3225656812 AS "LogProba_0", 0.9074033692797708 AS "Proba_1", -0.097168198645 AS "LogProba_1", 0.09259218053875203 AS "Proba_2", -2.37955058432 AS "LogProba_2", 1 AS "Decision" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 46 AS count, 1 AS depth, 0.0 AS "Proba_0", -BINARY_FLOAT_INFINITY AS "LogProba_0", 0.021739130434782587 AS "Proba_1", -3.82864139649 AS "LogProba_1", 0.9782608695652174 AS "Proba_2", -0.0219789067188 AS "LogProba_2", 2 AS "Decision" FROM DUAL) "Values"), 
"DT_node_lookup_1" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_3" <= 1.75) THEN 1 ELSE 2 END AS node_id 
FROM "INPUT_DATA" "ADS"), 
"DT_Output_1" AS 
(SELECT "DT_node_lookup_1"."KEY" AS "KEY", (SELECT "DT_node_data_1".node_id 
FROM "DT_node_data_1" 
WHERE "DT_node_data_1".node_id = "DT_node_lookup_1".node_id) AS node_id, (SELECT "DT_node_data_1".feature 
FROM "DT_node_data_1" 
WHERE "DT_node_data_1".node_id = "DT_node_lookup_1".node_id) AS feature, (SELECT "DT_node_data_1".threshold 
FROM "DT_node_data_1" 
WHERE "DT_node_data_1".node_id = "DT_node_lookup_1".node_id) AS threshold, (SELECT "DT_node_data_1".count 
FROM "DT_node_data_1" 
WHERE "DT_node_data_1".node_id = "DT_node_lookup_1".node_id) AS count, (SELECT "DT_node_data_1".depth 
FROM "DT_node_data_1" 
WHERE "DT_node_data_1".node_id = "DT_node_lookup_1".node_id) AS depth, (SELECT "DT_node_data_1"."Proba_0" 
FROM "DT_node_data_1" 
WHERE "DT_node_data_1".node_id = "DT_node_lookup_1".node_id) AS "Proba_0", (SELECT "DT_node_data_1"."LogProba_0" 
FROM "DT_node_data_1" 
WHERE "DT_node_data_1".node_id = "DT_node_lookup_1".node_id) AS "LogProba_0", (SELECT "DT_node_data_1"."Proba_1" 
FROM "DT_node_data_1" 
WHERE "DT_node_data_1".node_id = "DT_node_lookup_1".node_id) AS "Proba_1", (SELECT "DT_node_data_1"."LogProba_1" 
FROM "DT_node_data_1" 
WHERE "DT_node_data_1".node_id = "DT_node_lookup_1".node_id) AS "LogProba_1", (SELECT "DT_node_data_1"."Proba_2" 
FROM "DT_node_data_1" 
WHERE "DT_node_data_1".node_id = "DT_node_lookup_1".node_id) AS "Proba_2", (SELECT "DT_node_data_1"."LogProba_2" 
FROM "DT_node_data_1" 
WHERE "DT_node_data_1".node_id = "DT_node_lookup_1".node_id) AS "LogProba_2", (SELECT "DT_node_data_1"."Decision" 
FROM "DT_node_data_1" 
WHERE "DT_node_data_1".node_id = "DT_node_lookup_1".node_id) AS "Decision" 
FROM "DT_node_lookup_1"), 
"AdaBoost_Estim_1" AS 
(SELECT "DT_Output_1"."KEY" AS join_key_1, CAST(NULL AS FLOAT) AS "Score_1_0", "DT_Output_1"."Proba_0" AS "Proba_1_0", "DT_Output_1"."LogProba_0" AS "LogProba_1_0", CAST(NULL AS FLOAT) AS "Score_1_1", "DT_Output_1"."Proba_1" AS "Proba_1_1", "DT_Output_1"."LogProba_1" AS "LogProba_1_1", CAST(NULL AS FLOAT) AS "Score_1_2", "DT_Output_1"."Proba_2" AS "Proba_1_2", "DT_Output_1"."LogProba_2" AS "LogProba_1_2", "DT_Output_1"."Decision" AS "Decision_1" 
FROM "DT_Output_1"), 
"DT_node_data_2" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Proba_2" AS "Proba_2", "Values"."LogProba_2" AS "LogProba_2", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, 0.800000011920929 AS threshold, 150 AS count, 0 AS depth, 0.33328925548242766 AS "Proba_0", -1.09874453096 AS "LogProba_0", 0.3333553722587858 AS "Proba_1", -1.09854617408 AS "LogProba_1", 0.3333553722587865 AS "Proba_2", -1.09854617408 AS "LogProba_2", 2 AS "Decision" FROM DUAL UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 50 AS count, 1 AS depth, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_FLOAT_INFINITY AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_FLOAT_INFINITY AS "LogProba_2", 0 AS "Decision" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 100 AS count, 1 AS depth, 0.0 AS "Proba_0", -BINARY_FLOAT_INFINITY AS "LogProba_0", 0.49999999999999944 AS "Proba_1", -0.69314718056 AS "LogProba_1", 0.5000000000000007 AS "Proba_2", -0.69314718056 AS "LogProba_2", 2 AS "Decision" FROM DUAL) "Values"), 
"DT_node_lookup_2" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_3" <= 0.800000011920929) THEN 1 ELSE 2 END AS node_id 
FROM "INPUT_DATA" "ADS"), 
"DT_Output_2" AS 
(SELECT "DT_node_lookup_2"."KEY" AS "KEY", (SELECT "DT_node_data_2".node_id 
FROM "DT_node_data_2" 
WHERE "DT_node_data_2".node_id = "DT_node_lookup_2".node_id) AS node_id, (SELECT "DT_node_data_2".feature 
FROM "DT_node_data_2" 
WHERE "DT_node_data_2".node_id = "DT_node_lookup_2".node_id) AS feature, (SELECT "DT_node_data_2".threshold 
FROM "DT_node_data_2" 
WHERE "DT_node_data_2".node_id = "DT_node_lookup_2".node_id) AS threshold, (SELECT "DT_node_data_2".count 
FROM "DT_node_data_2" 
WHERE "DT_node_data_2".node_id = "DT_node_lookup_2".node_id) AS count, (SELECT "DT_node_data_2".depth 
FROM "DT_node_data_2" 
WHERE "DT_node_data_2".node_id = "DT_node_lookup_2".node_id) AS depth, (SELECT "DT_node_data_2"."Proba_0" 
FROM "DT_node_data_2" 
WHERE "DT_node_data_2".node_id = "DT_node_lookup_2".node_id) AS "Proba_0", (SELECT "DT_node_data_2"."LogProba_0" 
FROM "DT_node_data_2" 
WHERE "DT_node_data_2".node_id = "DT_node_lookup_2".node_id) AS "LogProba_0", (SELECT "DT_node_data_2"."Proba_1" 
FROM "DT_node_data_2" 
WHERE "DT_node_data_2".node_id = "DT_node_lookup_2".node_id) AS "Proba_1", (SELECT "DT_node_data_2"."LogProba_1" 
FROM "DT_node_data_2" 
WHERE "DT_node_data_2".node_id = "DT_node_lookup_2".node_id) AS "LogProba_1", (SELECT "DT_node_data_2"."Proba_2" 
FROM "DT_node_data_2" 
WHERE "DT_node_data_2".node_id = "DT_node_lookup_2".node_id) AS "Proba_2", (SELECT "DT_node_data_2"."LogProba_2" 
FROM "DT_node_data_2" 
WHERE "DT_node_data_2".node_id = "DT_node_lookup_2".node_id) AS "LogProba_2", (SELECT "DT_node_data_2"."Decision" 
FROM "DT_node_data_2" 
WHERE "DT_node_data_2".node_id = "DT_node_lookup_2".node_id) AS "Decision" 
FROM "DT_node_lookup_2"), 
"AdaBoost_Estim_2" AS 
(SELECT "DT_Output_2"."KEY" AS join_key_2, CAST(NULL AS FLOAT) AS "Score_2_0", "DT_Output_2"."Proba_0" AS "Proba_2_0", "DT_Output_2"."LogProba_0" AS "LogProba_2_0", CAST(NULL AS FLOAT) AS "Score_2_1", "DT_Output_2"."Proba_1" AS "Proba_2_1", "DT_Output_2"."LogProba_1" AS "LogProba_2_1", CAST(NULL AS FLOAT) AS "Score_2_2", "DT_Output_2"."Proba_2" AS "Proba_2_2", "DT_Output_2"."LogProba_2" AS "LogProba_2_2", "DT_Output_2"."Decision" AS "Decision_2" 
FROM "DT_Output_2"), 
"DT_node_data_3" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Proba_2" AS "Proba_2", "Values"."LogProba_2" AS "LogProba_2", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, 4.949999809265137 AS threshold, 150 AS count, 0 AS depth, 2.4026262934548195e-06 AS "Proba_0", -12.93894813 AS "LogProba_0", 0.49999879868685365 AS "Proba_1", -0.693149583189 AS "LogProba_1", 0.499998798686853 AS "Proba_2", -0.693149583189 AS "LogProba_2", 1 AS "Decision" FROM DUAL UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 104 AS count, 1 AS depth, 4.145403223887052e-06 AS "Proba_0", -12.3935104945 AS "LogProba_0", 0.8274751484248796 AS "Proba_1", -0.189376204297 AS "LogProba_1", 0.17252070617189644 AS "Proba_2", -1.75723801394 AS "LogProba_2", 1 AS "Decision" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 46 AS count, 1 AS depth, 0.0 AS "Proba_0", -BINARY_FLOAT_INFINITY AS "LogProba_0", 0.04853351094629966 AS "Proba_1", -3.02550077229 AS "LogProba_1", 0.9514664890537002 AS "Proba_2", -0.0497508119374 AS "LogProba_2", 2 AS "Decision" FROM DUAL) "Values"), 
"DT_node_lookup_3" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" <= 4.949999809265137) THEN 1 ELSE 2 END AS node_id 
FROM "INPUT_DATA" "ADS"), 
"DT_Output_3" AS 
(SELECT "DT_node_lookup_3"."KEY" AS "KEY", (SELECT "DT_node_data_3".node_id 
FROM "DT_node_data_3" 
WHERE "DT_node_data_3".node_id = "DT_node_lookup_3".node_id) AS node_id, (SELECT "DT_node_data_3".feature 
FROM "DT_node_data_3" 
WHERE "DT_node_data_3".node_id = "DT_node_lookup_3".node_id) AS feature, (SELECT "DT_node_data_3".threshold 
FROM "DT_node_data_3" 
WHERE "DT_node_data_3".node_id = "DT_node_lookup_3".node_id) AS threshold, (SELECT "DT_node_data_3".count 
FROM "DT_node_data_3" 
WHERE "DT_node_data_3".node_id = "DT_node_lookup_3".node_id) AS count, (SELECT "DT_node_data_3".depth 
FROM "DT_node_data_3" 
WHERE "DT_node_data_3".node_id = "DT_node_lookup_3".node_id) AS depth, (SELECT "DT_node_data_3"."Proba_0" 
FROM "DT_node_data_3" 
WHERE "DT_node_data_3".node_id = "DT_node_lookup_3".node_id) AS "Proba_0", (SELECT "DT_node_data_3"."LogProba_0" 
FROM "DT_node_data_3" 
WHERE "DT_node_data_3".node_id = "DT_node_lookup_3".node_id) AS "LogProba_0", (SELECT "DT_node_data_3"."Proba_1" 
FROM "DT_node_data_3" 
WHERE "DT_node_data_3".node_id = "DT_node_lookup_3".node_id) AS "Proba_1", (SELECT "DT_node_data_3"."LogProba_1" 
FROM "DT_node_data_3" 
WHERE "DT_node_data_3".node_id = "DT_node_lookup_3".node_id) AS "LogProba_1", (SELECT "DT_node_data_3"."Proba_2" 
FROM "DT_node_data_3" 
WHERE "DT_node_data_3".node_id = "DT_node_lookup_3".node_id) AS "Proba_2", (SELECT "DT_node_data_3"."LogProba_2" 
FROM "DT_node_data_3" 
WHERE "DT_node_data_3".node_id = "DT_node_lookup_3".node_id) AS "LogProba_2", (SELECT "DT_node_data_3"."Decision" 
FROM "DT_node_data_3" 
WHERE "DT_node_data_3".node_id = "DT_node_lookup_3".node_id) AS "Decision" 
FROM "DT_node_lookup_3"), 
"AdaBoost_Estim_3" AS 
(SELECT "DT_Output_3"."KEY" AS join_key_3, CAST(NULL AS FLOAT) AS "Score_3_0", "DT_Output_3"."Proba_0" AS "Proba_3_0", "DT_Output_3"."LogProba_0" AS "LogProba_3_0", CAST(NULL AS FLOAT) AS "Score_3_1", "DT_Output_3"."Proba_1" AS "Proba_3_1", "DT_Output_3"."LogProba_1" AS "LogProba_3_1", CAST(NULL AS FLOAT) AS "Score_3_2", "DT_Output_3"."Proba_2" AS "Proba_3_2", "DT_Output_3"."LogProba_2" AS "LogProba_3_2", "DT_Output_3"."Decision" AS "Decision_3" 
FROM "DT_Output_3"), 
"DT_node_data_4" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Proba_2" AS "Proba_2", "Values"."LogProba_2" AS "LogProba_2", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, 0.800000011920929 AS threshold, 150 AS count, 0 AS depth, 0.33329162787702754 AS "Proba_0", -1.09873741286 AS "LogProba_0", 0.3333541860614859 AS "Proba_1", -1.09854973244 AS "LogProba_1", 0.33335418606148665 AS "Proba_2", -1.09854973244 AS "LogProba_2", 2 AS "Decision" FROM DUAL UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 50 AS count, 1 AS depth, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_FLOAT_INFINITY AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_FLOAT_INFINITY AS "LogProba_2", 0 AS "Decision" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 100 AS count, 1 AS depth, 0.0 AS "Proba_0", -BINARY_FLOAT_INFINITY AS "LogProba_0", 0.49999999999999944 AS "Proba_1", -0.69314718056 AS "LogProba_1", 0.5000000000000006 AS "Proba_2", -0.69314718056 AS "LogProba_2", 2 AS "Decision" FROM DUAL) "Values"), 
"DT_node_lookup_4" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_3" <= 0.800000011920929) THEN 1 ELSE 2 END AS node_id 
FROM "INPUT_DATA" "ADS"), 
"DT_Output_4" AS 
(SELECT "DT_node_lookup_4"."KEY" AS "KEY", (SELECT "DT_node_data_4".node_id 
FROM "DT_node_data_4" 
WHERE "DT_node_data_4".node_id = "DT_node_lookup_4".node_id) AS node_id, (SELECT "DT_node_data_4".feature 
FROM "DT_node_data_4" 
WHERE "DT_node_data_4".node_id = "DT_node_lookup_4".node_id) AS feature, (SELECT "DT_node_data_4".threshold 
FROM "DT_node_data_4" 
WHERE "DT_node_data_4".node_id = "DT_node_lookup_4".node_id) AS threshold, (SELECT "DT_node_data_4".count 
FROM "DT_node_data_4" 
WHERE "DT_node_data_4".node_id = "DT_node_lookup_4".node_id) AS count, (SELECT "DT_node_data_4".depth 
FROM "DT_node_data_4" 
WHERE "DT_node_data_4".node_id = "DT_node_lookup_4".node_id) AS depth, (SELECT "DT_node_data_4"."Proba_0" 
FROM "DT_node_data_4" 
WHERE "DT_node_data_4".node_id = "DT_node_lookup_4".node_id) AS "Proba_0", (SELECT "DT_node_data_4"."LogProba_0" 
FROM "DT_node_data_4" 
WHERE "DT_node_data_4".node_id = "DT_node_lookup_4".node_id) AS "LogProba_0", (SELECT "DT_node_data_4"."Proba_1" 
FROM "DT_node_data_4" 
WHERE "DT_node_data_4".node_id = "DT_node_lookup_4".node_id) AS "Proba_1", (SELECT "DT_node_data_4"."LogProba_1" 
FROM "DT_node_data_4" 
WHERE "DT_node_data_4".node_id = "DT_node_lookup_4".node_id) AS "LogProba_1", (SELECT "DT_node_data_4"."Proba_2" 
FROM "DT_node_data_4" 
WHERE "DT_node_data_4".node_id = "DT_node_lookup_4".node_id) AS "Proba_2", (SELECT "DT_node_data_4"."LogProba_2" 
FROM "DT_node_data_4" 
WHERE "DT_node_data_4".node_id = "DT_node_lookup_4".node_id) AS "LogProba_2", (SELECT "DT_node_data_4"."Decision" 
FROM "DT_node_data_4" 
WHERE "DT_node_data_4".node_id = "DT_node_lookup_4".node_id) AS "Decision" 
FROM "DT_node_lookup_4"), 
"AdaBoost_Estim_4" AS 
(SELECT "DT_Output_4"."KEY" AS join_key_4, CAST(NULL AS FLOAT) AS "Score_4_0", "DT_Output_4"."Proba_0" AS "Proba_4_0", "DT_Output_4"."LogProba_0" AS "LogProba_4_0", CAST(NULL AS FLOAT) AS "Score_4_1", "DT_Output_4"."Proba_1" AS "Proba_4_1", "DT_Output_4"."LogProba_1" AS "LogProba_4_1", CAST(NULL AS FLOAT) AS "Score_4_2", "DT_Output_4"."Proba_2" AS "Proba_4_2", "DT_Output_4"."LogProba_2" AS "LogProba_4_2", "DT_Output_4"."Decision" AS "Decision_4" 
FROM "DT_Output_4"), 
"DT_node_data_5" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Proba_2" AS "Proba_2", "Values"."LogProba_2" AS "LogProba_2", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, 1.6500000953674316 AS threshold, 150 AS count, 0 AS depth, 2.4026519450800844e-06 AS "Proba_0", -12.9389374535 AS "LogProba_0", 0.49999879867402774 AS "Proba_1", -0.693149583215 AS "LogProba_1", 0.4999987986740271 AS "Proba_2", -0.693149583215 AS "LogProba_2", 1 AS "Decision" FROM DUAL UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 102 AS count, 1 AS depth, 4.805835144348808e-06 AS "Proba_0", -12.2456797233 AS "LogProba_0", 0.9998075524147468 AS "Proba_1", -0.000192466105666 AS "LogProba_1", 0.00018764175010888744 AS "Proba_2", -8.5809759976 AS "LogProba_2", 1 AS "Decision" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 48 AS count, 1 AS depth, 0.0 AS "Proba_0", -BINARY_FLOAT_INFINITY AS "LogProba_0", 0.0003005340104729589 AS "Proba_1", -8.10994963078 AS "LogProba_1", 0.9996994659895272 AS "Proba_2", -0.000300579179869 AS "LogProba_2", 2 AS "Decision" FROM DUAL) "Values"), 
"DT_node_lookup_5" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_3" <= 1.6500000953674316) THEN 1 ELSE 2 END AS node_id 
FROM "INPUT_DATA" "ADS"), 
"DT_Output_5" AS 
(SELECT "DT_node_lookup_5"."KEY" AS "KEY", (SELECT "DT_node_data_5".node_id 
FROM "DT_node_data_5" 
WHERE "DT_node_data_5".node_id = "DT_node_lookup_5".node_id) AS node_id, (SELECT "DT_node_data_5".feature 
FROM "DT_node_data_5" 
WHERE "DT_node_data_5".node_id = "DT_node_lookup_5".node_id) AS feature, (SELECT "DT_node_data_5".threshold 
FROM "DT_node_data_5" 
WHERE "DT_node_data_5".node_id = "DT_node_lookup_5".node_id) AS threshold, (SELECT "DT_node_data_5".count 
FROM "DT_node_data_5" 
WHERE "DT_node_data_5".node_id = "DT_node_lookup_5".node_id) AS count, (SELECT "DT_node_data_5".depth 
FROM "DT_node_data_5" 
WHERE "DT_node_data_5".node_id = "DT_node_lookup_5".node_id) AS depth, (SELECT "DT_node_data_5"."Proba_0" 
FROM "DT_node_data_5" 
WHERE "DT_node_data_5".node_id = "DT_node_lookup_5".node_id) AS "Proba_0", (SELECT "DT_node_data_5"."LogProba_0" 
FROM "DT_node_data_5" 
WHERE "DT_node_data_5".node_id = "DT_node_lookup_5".node_id) AS "LogProba_0", (SELECT "DT_node_data_5"."Proba_1" 
FROM "DT_node_data_5" 
WHERE "DT_node_data_5".node_id = "DT_node_lookup_5".node_id) AS "Proba_1", (SELECT "DT_node_data_5"."LogProba_1" 
FROM "DT_node_data_5" 
WHERE "DT_node_data_5".node_id = "DT_node_lookup_5".node_id) AS "LogProba_1", (SELECT "DT_node_data_5"."Proba_2" 
FROM "DT_node_data_5" 
WHERE "DT_node_data_5".node_id = "DT_node_lookup_5".node_id) AS "Proba_2", (SELECT "DT_node_data_5"."LogProba_2" 
FROM "DT_node_data_5" 
WHERE "DT_node_data_5".node_id = "DT_node_lookup_5".node_id) AS "LogProba_2", (SELECT "DT_node_data_5"."Decision" 
FROM "DT_node_data_5" 
WHERE "DT_node_data_5".node_id = "DT_node_lookup_5".node_id) AS "Decision" 
FROM "DT_node_lookup_5"), 
"AdaBoost_Estim_5" AS 
(SELECT "DT_Output_5"."KEY" AS join_key_5, CAST(NULL AS FLOAT) AS "Score_5_0", "DT_Output_5"."Proba_0" AS "Proba_5_0", "DT_Output_5"."LogProba_0" AS "LogProba_5_0", CAST(NULL AS FLOAT) AS "Score_5_1", "DT_Output_5"."Proba_1" AS "Proba_5_1", "DT_Output_5"."LogProba_1" AS "LogProba_5_1", CAST(NULL AS FLOAT) AS "Score_5_2", "DT_Output_5"."Proba_2" AS "Proba_5_2", "DT_Output_5"."LogProba_2" AS "LogProba_5_2", "DT_Output_5"."Decision" AS "Decision_5" 
FROM "DT_Output_5"), 
"DT_node_data_6" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Proba_2" AS "Proba_2", "Values"."LogProba_2" AS "LogProba_2", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, 0.800000011920929 AS threshold, 150 AS count, 0 AS depth, 0.33324004554544906 AS "Proba_0", -1.0988921912 AS "LogProba_0", 0.3333799772272752 AS "Proba_1", -1.09847236678 AS "LogProba_1", 0.3333799772272757 AS "Proba_2", -1.09847236678 AS "LogProba_2", 2 AS "Decision" FROM DUAL UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 50 AS count, 1 AS depth, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_FLOAT_INFINITY AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_FLOAT_INFINITY AS "LogProba_2", 0 AS "Decision" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 100 AS count, 1 AS depth, 0.0 AS "Proba_0", -BINARY_FLOAT_INFINITY AS "LogProba_0", 0.4999999999999995 AS "Proba_1", -0.69314718056 AS "LogProba_1", 0.5000000000000004 AS "Proba_2", -0.69314718056 AS "LogProba_2", 2 AS "Decision" FROM DUAL) "Values"), 
"DT_node_lookup_6" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_3" <= 0.800000011920929) THEN 1 ELSE 2 END AS node_id 
FROM "INPUT_DATA" "ADS"), 
"DT_Output_6" AS 
(SELECT "DT_node_lookup_6"."KEY" AS "KEY", (SELECT "DT_node_data_6".node_id 
FROM "DT_node_data_6" 
WHERE "DT_node_data_6".node_id = "DT_node_lookup_6".node_id) AS node_id, (SELECT "DT_node_data_6".feature 
FROM "DT_node_data_6" 
WHERE "DT_node_data_6".node_id = "DT_node_lookup_6".node_id) AS feature, (SELECT "DT_node_data_6".threshold 
FROM "DT_node_data_6" 
WHERE "DT_node_data_6".node_id = "DT_node_lookup_6".node_id) AS threshold, (SELECT "DT_node_data_6".count 
FROM "DT_node_data_6" 
WHERE "DT_node_data_6".node_id = "DT_node_lookup_6".node_id) AS count, (SELECT "DT_node_data_6".depth 
FROM "DT_node_data_6" 
WHERE "DT_node_data_6".node_id = "DT_node_lookup_6".node_id) AS depth, (SELECT "DT_node_data_6"."Proba_0" 
FROM "DT_node_data_6" 
WHERE "DT_node_data_6".node_id = "DT_node_lookup_6".node_id) AS "Proba_0", (SELECT "DT_node_data_6"."LogProba_0" 
FROM "DT_node_data_6" 
WHERE "DT_node_data_6".node_id = "DT_node_lookup_6".node_id) AS "LogProba_0", (SELECT "DT_node_data_6"."Proba_1" 
FROM "DT_node_data_6" 
WHERE "DT_node_data_6".node_id = "DT_node_lookup_6".node_id) AS "Proba_1", (SELECT "DT_node_data_6"."LogProba_1" 
FROM "DT_node_data_6" 
WHERE "DT_node_data_6".node_id = "DT_node_lookup_6".node_id) AS "LogProba_1", (SELECT "DT_node_data_6"."Proba_2" 
FROM "DT_node_data_6" 
WHERE "DT_node_data_6".node_id = "DT_node_lookup_6".node_id) AS "Proba_2", (SELECT "DT_node_data_6"."LogProba_2" 
FROM "DT_node_data_6" 
WHERE "DT_node_data_6".node_id = "DT_node_lookup_6".node_id) AS "LogProba_2", (SELECT "DT_node_data_6"."Decision" 
FROM "DT_node_data_6" 
WHERE "DT_node_data_6".node_id = "DT_node_lookup_6".node_id) AS "Decision" 
FROM "DT_node_lookup_6"), 
"AdaBoost_Estim_6" AS 
(SELECT "DT_Output_6"."KEY" AS join_key_6, CAST(NULL AS FLOAT) AS "Score_6_0", "DT_Output_6"."Proba_0" AS "Proba_6_0", "DT_Output_6"."LogProba_0" AS "LogProba_6_0", CAST(NULL AS FLOAT) AS "Score_6_1", "DT_Output_6"."Proba_1" AS "Proba_6_1", "DT_Output_6"."LogProba_1" AS "LogProba_6_1", CAST(NULL AS FLOAT) AS "Score_6_2", "DT_Output_6"."Proba_2" AS "Proba_6_2", "DT_Output_6"."LogProba_2" AS "LogProba_6_2", "DT_Output_6"."Decision" AS "Decision_6" 
FROM "DT_Output_6"), 
"DT_node_data_7" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Proba_2" AS "Proba_2", "Values"."LogProba_2" AS "LogProba_2", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, 4.949999809265137 AS threshold, 150 AS count, 0 AS depth, 2.402094249920569e-06 AS "Proba_0", -12.939169597 AS "LogProba_0", 0.49999879895287536 AS "Proba_1", -0.693149582657 AS "LogProba_1", 0.49999879895287475 AS "Proba_2", -0.693149582657 AS "LogProba_2", 1 AS "Decision" FROM DUAL UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 104 AS count, 1 AS depth, 4.8032408959518895e-06 AS "Proba_0", -12.2462196812 AS "LogProba_0", 0.9995755442644791 AS "Proba_1", -0.000424545842355 AS "LogProba_1", 0.0004196524946249613 AS "Proba_2", -7.77608358292 AS "LogProba_2", 1 AS "Decision" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 46 AS count, 1 AS depth, 0.0 AS "Proba_0", -BINARY_FLOAT_INFINITY AS "LogProba_0", 0.00022489747522998904 AS "Proba_1", -8.39986592525 AS "LogProba_1", 0.9997751025247701 AS "Proba_2", -0.000224922768459 AS "LogProba_2", 2 AS "Decision" FROM DUAL) "Values"), 
"DT_node_lookup_7" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" <= 4.949999809265137) THEN 1 ELSE 2 END AS node_id 
FROM "INPUT_DATA" "ADS"), 
"DT_Output_7" AS 
(SELECT "DT_node_lookup_7"."KEY" AS "KEY", (SELECT "DT_node_data_7".node_id 
FROM "DT_node_data_7" 
WHERE "DT_node_data_7".node_id = "DT_node_lookup_7".node_id) AS node_id, (SELECT "DT_node_data_7".feature 
FROM "DT_node_data_7" 
WHERE "DT_node_data_7".node_id = "DT_node_lookup_7".node_id) AS feature, (SELECT "DT_node_data_7".threshold 
FROM "DT_node_data_7" 
WHERE "DT_node_data_7".node_id = "DT_node_lookup_7".node_id) AS threshold, (SELECT "DT_node_data_7".count 
FROM "DT_node_data_7" 
WHERE "DT_node_data_7".node_id = "DT_node_lookup_7".node_id) AS count, (SELECT "DT_node_data_7".depth 
FROM "DT_node_data_7" 
WHERE "DT_node_data_7".node_id = "DT_node_lookup_7".node_id) AS depth, (SELECT "DT_node_data_7"."Proba_0" 
FROM "DT_node_data_7" 
WHERE "DT_node_data_7".node_id = "DT_node_lookup_7".node_id) AS "Proba_0", (SELECT "DT_node_data_7"."LogProba_0" 
FROM "DT_node_data_7" 
WHERE "DT_node_data_7".node_id = "DT_node_lookup_7".node_id) AS "LogProba_0", (SELECT "DT_node_data_7"."Proba_1" 
FROM "DT_node_data_7" 
WHERE "DT_node_data_7".node_id = "DT_node_lookup_7".node_id) AS "Proba_1", (SELECT "DT_node_data_7"."LogProba_1" 
FROM "DT_node_data_7" 
WHERE "DT_node_data_7".node_id = "DT_node_lookup_7".node_id) AS "LogProba_1", (SELECT "DT_node_data_7"."Proba_2" 
FROM "DT_node_data_7" 
WHERE "DT_node_data_7".node_id = "DT_node_lookup_7".node_id) AS "Proba_2", (SELECT "DT_node_data_7"."LogProba_2" 
FROM "DT_node_data_7" 
WHERE "DT_node_data_7".node_id = "DT_node_lookup_7".node_id) AS "LogProba_2", (SELECT "DT_node_data_7"."Decision" 
FROM "DT_node_data_7" 
WHERE "DT_node_data_7".node_id = "DT_node_lookup_7".node_id) AS "Decision" 
FROM "DT_node_lookup_7"), 
"AdaBoost_Estim_7" AS 
(SELECT "DT_Output_7"."KEY" AS join_key_7, CAST(NULL AS FLOAT) AS "Score_7_0", "DT_Output_7"."Proba_0" AS "Proba_7_0", "DT_Output_7"."LogProba_0" AS "LogProba_7_0", CAST(NULL AS FLOAT) AS "Score_7_1", "DT_Output_7"."Proba_1" AS "Proba_7_1", "DT_Output_7"."LogProba_1" AS "LogProba_7_1", CAST(NULL AS FLOAT) AS "Score_7_2", "DT_Output_7"."Proba_2" AS "Proba_7_2", "DT_Output_7"."LogProba_2" AS "LogProba_7_2", "DT_Output_7"."Decision" AS "Decision_7" 
FROM "DT_Output_7"), 
"DT_node_data_8" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Proba_2" AS "Proba_2", "Values"."LogProba_2" AS "LogProba_2", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, 0.800000011920929 AS threshold, 150 AS count, 0 AS depth, 0.33326858515798696 AS "Proba_0", -1.09880655206 AS "LogProba_0", 0.33336570742100663 AS "Proba_1", -1.09851517112 AS "LogProba_1", 0.3333657074210064 AS "Proba_2", -1.09851517112 AS "LogProba_2", 1 AS "Decision" FROM DUAL UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 50 AS count, 1 AS depth, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_FLOAT_INFINITY AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_FLOAT_INFINITY AS "LogProba_2", 0 AS "Decision" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 100 AS count, 1 AS depth, 0.0 AS "Proba_0", -BINARY_FLOAT_INFINITY AS "LogProba_0", 0.5000000000000001 AS "Proba_1", -0.69314718056 AS "LogProba_1", 0.49999999999999983 AS "Proba_2", -0.69314718056 AS "LogProba_2", 1 AS "Decision" FROM DUAL) "Values"), 
"DT_node_lookup_8" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_3" <= 0.800000011920929) THEN 1 ELSE 2 END AS node_id 
FROM "INPUT_DATA" "ADS"), 
"DT_Output_8" AS 
(SELECT "DT_node_lookup_8"."KEY" AS "KEY", (SELECT "DT_node_data_8".node_id 
FROM "DT_node_data_8" 
WHERE "DT_node_data_8".node_id = "DT_node_lookup_8".node_id) AS node_id, (SELECT "DT_node_data_8".feature 
FROM "DT_node_data_8" 
WHERE "DT_node_data_8".node_id = "DT_node_lookup_8".node_id) AS feature, (SELECT "DT_node_data_8".threshold 
FROM "DT_node_data_8" 
WHERE "DT_node_data_8".node_id = "DT_node_lookup_8".node_id) AS threshold, (SELECT "DT_node_data_8".count 
FROM "DT_node_data_8" 
WHERE "DT_node_data_8".node_id = "DT_node_lookup_8".node_id) AS count, (SELECT "DT_node_data_8".depth 
FROM "DT_node_data_8" 
WHERE "DT_node_data_8".node_id = "DT_node_lookup_8".node_id) AS depth, (SELECT "DT_node_data_8"."Proba_0" 
FROM "DT_node_data_8" 
WHERE "DT_node_data_8".node_id = "DT_node_lookup_8".node_id) AS "Proba_0", (SELECT "DT_node_data_8"."LogProba_0" 
FROM "DT_node_data_8" 
WHERE "DT_node_data_8".node_id = "DT_node_lookup_8".node_id) AS "LogProba_0", (SELECT "DT_node_data_8"."Proba_1" 
FROM "DT_node_data_8" 
WHERE "DT_node_data_8".node_id = "DT_node_lookup_8".node_id) AS "Proba_1", (SELECT "DT_node_data_8"."LogProba_1" 
FROM "DT_node_data_8" 
WHERE "DT_node_data_8".node_id = "DT_node_lookup_8".node_id) AS "LogProba_1", (SELECT "DT_node_data_8"."Proba_2" 
FROM "DT_node_data_8" 
WHERE "DT_node_data_8".node_id = "DT_node_lookup_8".node_id) AS "Proba_2", (SELECT "DT_node_data_8"."LogProba_2" 
FROM "DT_node_data_8" 
WHERE "DT_node_data_8".node_id = "DT_node_lookup_8".node_id) AS "LogProba_2", (SELECT "DT_node_data_8"."Decision" 
FROM "DT_node_data_8" 
WHERE "DT_node_data_8".node_id = "DT_node_lookup_8".node_id) AS "Decision" 
FROM "DT_node_lookup_8"), 
"AdaBoost_Estim_8" AS 
(SELECT "DT_Output_8"."KEY" AS join_key_8, CAST(NULL AS FLOAT) AS "Score_8_0", "DT_Output_8"."Proba_0" AS "Proba_8_0", "DT_Output_8"."LogProba_0" AS "LogProba_8_0", CAST(NULL AS FLOAT) AS "Score_8_1", "DT_Output_8"."Proba_1" AS "Proba_8_1", "DT_Output_8"."LogProba_1" AS "LogProba_8_1", CAST(NULL AS FLOAT) AS "Score_8_2", "DT_Output_8"."Proba_2" AS "Proba_8_2", "DT_Output_8"."LogProba_2" AS "LogProba_8_2", "DT_Output_8"."Decision" AS "Decision_8" 
FROM "DT_Output_8"), 
"DT_node_data_9" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Proba_2" AS "Proba_2", "Values"."LogProba_2" AS "LogProba_2", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, 1.6500000953674316 AS threshold, 150 AS count, 0 AS depth, 2.4024028023493107e-06 AS "Proba_0", -12.9390411538 AS "LogProba_0", 0.49999879879859865 AS "Proba_1", -0.693149582966 AS "LogProba_1", 0.49999879879859904 AS "Proba_2", -0.693149582966 AS "LogProba_2", 2 AS "Decision" FROM DUAL UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 102 AS count, 1 AS depth, 4.8055971819357385e-06 AS "Proba_0", -12.2457292398 AS "LogProba_0", 0.9997038086121107 AS "Proba_1", -0.000296235261222 AS "LogProba_1", 0.00029138579070735876 AS "Proba_2", -8.14086242755 AS "LogProba_2", 1 AS "Decision" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 48 AS count, 1 AS depth, 0.0 AS "Proba_0", -BINARY_FLOAT_INFINITY AS "LogProba_0", 0.00045838453940450814 AS "Proba_1", -7.68780212044 AS "LogProba_1", 0.9995416154605955 AS "Proba_2", -0.000458489629713 AS "LogProba_2", 2 AS "Decision" FROM DUAL) "Values"), 
"DT_node_lookup_9" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_3" <= 1.6500000953674316) THEN 1 ELSE 2 END AS node_id 
FROM "INPUT_DATA" "ADS"), 
"DT_Output_9" AS 
(SELECT "DT_node_lookup_9"."KEY" AS "KEY", (SELECT "DT_node_data_9".node_id 
FROM "DT_node_data_9" 
WHERE "DT_node_data_9".node_id = "DT_node_lookup_9".node_id) AS node_id, (SELECT "DT_node_data_9".feature 
FROM "DT_node_data_9" 
WHERE "DT_node_data_9".node_id = "DT_node_lookup_9".node_id) AS feature, (SELECT "DT_node_data_9".threshold 
FROM "DT_node_data_9" 
WHERE "DT_node_data_9".node_id = "DT_node_lookup_9".node_id) AS threshold, (SELECT "DT_node_data_9".count 
FROM "DT_node_data_9" 
WHERE "DT_node_data_9".node_id = "DT_node_lookup_9".node_id) AS count, (SELECT "DT_node_data_9".depth 
FROM "DT_node_data_9" 
WHERE "DT_node_data_9".node_id = "DT_node_lookup_9".node_id) AS depth, (SELECT "DT_node_data_9"."Proba_0" 
FROM "DT_node_data_9" 
WHERE "DT_node_data_9".node_id = "DT_node_lookup_9".node_id) AS "Proba_0", (SELECT "DT_node_data_9"."LogProba_0" 
FROM "DT_node_data_9" 
WHERE "DT_node_data_9".node_id = "DT_node_lookup_9".node_id) AS "LogProba_0", (SELECT "DT_node_data_9"."Proba_1" 
FROM "DT_node_data_9" 
WHERE "DT_node_data_9".node_id = "DT_node_lookup_9".node_id) AS "Proba_1", (SELECT "DT_node_data_9"."LogProba_1" 
FROM "DT_node_data_9" 
WHERE "DT_node_data_9".node_id = "DT_node_lookup_9".node_id) AS "LogProba_1", (SELECT "DT_node_data_9"."Proba_2" 
FROM "DT_node_data_9" 
WHERE "DT_node_data_9".node_id = "DT_node_lookup_9".node_id) AS "Proba_2", (SELECT "DT_node_data_9"."LogProba_2" 
FROM "DT_node_data_9" 
WHERE "DT_node_data_9".node_id = "DT_node_lookup_9".node_id) AS "LogProba_2", (SELECT "DT_node_data_9"."Decision" 
FROM "DT_node_data_9" 
WHERE "DT_node_data_9".node_id = "DT_node_lookup_9".node_id) AS "Decision" 
FROM "DT_node_lookup_9"), 
"AdaBoost_Estim_9" AS 
(SELECT "DT_Output_9"."KEY" AS join_key_9, CAST(NULL AS FLOAT) AS "Score_9_0", "DT_Output_9"."Proba_0" AS "Proba_9_0", "DT_Output_9"."LogProba_0" AS "LogProba_9_0", CAST(NULL AS FLOAT) AS "Score_9_1", "DT_Output_9"."Proba_1" AS "Proba_9_1", "DT_Output_9"."LogProba_1" AS "LogProba_9_1", CAST(NULL AS FLOAT) AS "Score_9_2", "DT_Output_9"."Proba_2" AS "Proba_9_2", "DT_Output_9"."LogProba_2" AS "LogProba_9_2", "DT_Output_9"."Decision" AS "Decision_9" 
FROM "DT_Output_9"), 
"DT_node_data_10" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Proba_2" AS "Proba_2", "Values"."LogProba_2" AS "LogProba_2", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, 0.800000011920929 AS threshold, 150 AS count, 0 AS depth, 0.3332405924898437 AS "Proba_0", -1.09889054991 AS "LogProba_0", 0.3333797037550784 AS "Proba_1", -1.09847318708 AS "LogProba_1", 0.33337970375507786 AS "Proba_2", -1.09847318708 AS "LogProba_2", 1 AS "Decision" FROM DUAL UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 50 AS count, 1 AS depth, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_FLOAT_INFINITY AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_FLOAT_INFINITY AS "LogProba_2", 0 AS "Decision" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 100 AS count, 1 AS depth, 0.0 AS "Proba_0", -BINARY_FLOAT_INFINITY AS "LogProba_0", 0.5000000000000003 AS "Proba_1", -0.69314718056 AS "LogProba_1", 0.4999999999999996 AS "Proba_2", -0.69314718056 AS "LogProba_2", 1 AS "Decision" FROM DUAL) "Values"), 
"DT_node_lookup_10" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_3" <= 0.800000011920929) THEN 1 ELSE 2 END AS node_id 
FROM "INPUT_DATA" "ADS"), 
"DT_Output_10" AS 
(SELECT "DT_node_lookup_10"."KEY" AS "KEY", (SELECT "DT_node_data_10".node_id 
FROM "DT_node_data_10" 
WHERE "DT_node_data_10".node_id = "DT_node_lookup_10".node_id) AS node_id, (SELECT "DT_node_data_10".feature 
FROM "DT_node_data_10" 
WHERE "DT_node_data_10".node_id = "DT_node_lookup_10".node_id) AS feature, (SELECT "DT_node_data_10".threshold 
FROM "DT_node_data_10" 
WHERE "DT_node_data_10".node_id = "DT_node_lookup_10".node_id) AS threshold, (SELECT "DT_node_data_10".count 
FROM "DT_node_data_10" 
WHERE "DT_node_data_10".node_id = "DT_node_lookup_10".node_id) AS count, (SELECT "DT_node_data_10".depth 
FROM "DT_node_data_10" 
WHERE "DT_node_data_10".node_id = "DT_node_lookup_10".node_id) AS depth, (SELECT "DT_node_data_10"."Proba_0" 
FROM "DT_node_data_10" 
WHERE "DT_node_data_10".node_id = "DT_node_lookup_10".node_id) AS "Proba_0", (SELECT "DT_node_data_10"."LogProba_0" 
FROM "DT_node_data_10" 
WHERE "DT_node_data_10".node_id = "DT_node_lookup_10".node_id) AS "LogProba_0", (SELECT "DT_node_data_10"."Proba_1" 
FROM "DT_node_data_10" 
WHERE "DT_node_data_10".node_id = "DT_node_lookup_10".node_id) AS "Proba_1", (SELECT "DT_node_data_10"."LogProba_1" 
FROM "DT_node_data_10" 
WHERE "DT_node_data_10".node_id = "DT_node_lookup_10".node_id) AS "LogProba_1", (SELECT "DT_node_data_10"."Proba_2" 
FROM "DT_node_data_10" 
WHERE "DT_node_data_10".node_id = "DT_node_lookup_10".node_id) AS "Proba_2", (SELECT "DT_node_data_10"."LogProba_2" 
FROM "DT_node_data_10" 
WHERE "DT_node_data_10".node_id = "DT_node_lookup_10".node_id) AS "LogProba_2", (SELECT "DT_node_data_10"."Decision" 
FROM "DT_node_data_10" 
WHERE "DT_node_data_10".node_id = "DT_node_lookup_10".node_id) AS "Decision" 
FROM "DT_node_lookup_10"), 
"AdaBoost_Estim_10" AS 
(SELECT "DT_Output_10"."KEY" AS join_key_10, CAST(NULL AS FLOAT) AS "Score_10_0", "DT_Output_10"."Proba_0" AS "Proba_10_0", "DT_Output_10"."LogProba_0" AS "LogProba_10_0", CAST(NULL AS FLOAT) AS "Score_10_1", "DT_Output_10"."Proba_1" AS "Proba_10_1", "DT_Output_10"."LogProba_1" AS "LogProba_10_1", CAST(NULL AS FLOAT) AS "Score_10_2", "DT_Output_10"."Proba_2" AS "Proba_10_2", "DT_Output_10"."LogProba_2" AS "LogProba_10_2", "DT_Output_10"."Decision" AS "Decision_10" 
FROM "DT_Output_10"), 
"DT_node_data_11" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Proba_2" AS "Proba_2", "Values"."LogProba_2" AS "LogProba_2", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, 4.949999809265137 AS threshold, 150 AS count, 0 AS depth, 2.402100162892785e-06 AS "Proba_0", -12.9391671354 AS "LogProba_0", 0.4999987989499188 AS "Proba_1", -0.693149582663 AS "LogProba_1", 0.4999987989499182 AS "Proba_2", -0.693149582663 AS "LogProba_2", 1 AS "Decision" FROM DUAL UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 104 AS count, 1 AS depth, 4.803510609898351e-06 AS "Proba_0", -12.2461635303 AS "LogProba_0", 0.9995779816499069 AS "Proba_1", -0.000422107424899 AS "LogProba_1", 0.00041721483948329446 AS "Proba_2", -7.78190926624 AS "LogProba_2", 1 AS "Decision" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 46 AS count, 1 AS depth, 0.0 AS "Proba_0", -BINARY_FLOAT_INFINITY AS "LogProba_0", 0.00027613069973597985 AS "Proba_1", -8.19463625457 AS "LogProba_1", 0.999723869300264 AS "Proba_2", -0.000276168830837 AS "LogProba_2", 2 AS "Decision" FROM DUAL) "Values"), 
"DT_node_lookup_11" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" <= 4.949999809265137) THEN 1 ELSE 2 END AS node_id 
FROM "INPUT_DATA" "ADS"), 
"DT_Output_11" AS 
(SELECT "DT_node_lookup_11"."KEY" AS "KEY", (SELECT "DT_node_data_11".node_id 
FROM "DT_node_data_11" 
WHERE "DT_node_data_11".node_id = "DT_node_lookup_11".node_id) AS node_id, (SELECT "DT_node_data_11".feature 
FROM "DT_node_data_11" 
WHERE "DT_node_data_11".node_id = "DT_node_lookup_11".node_id) AS feature, (SELECT "DT_node_data_11".threshold 
FROM "DT_node_data_11" 
WHERE "DT_node_data_11".node_id = "DT_node_lookup_11".node_id) AS threshold, (SELECT "DT_node_data_11".count 
FROM "DT_node_data_11" 
WHERE "DT_node_data_11".node_id = "DT_node_lookup_11".node_id) AS count, (SELECT "DT_node_data_11".depth 
FROM "DT_node_data_11" 
WHERE "DT_node_data_11".node_id = "DT_node_lookup_11".node_id) AS depth, (SELECT "DT_node_data_11"."Proba_0" 
FROM "DT_node_data_11" 
WHERE "DT_node_data_11".node_id = "DT_node_lookup_11".node_id) AS "Proba_0", (SELECT "DT_node_data_11"."LogProba_0" 
FROM "DT_node_data_11" 
WHERE "DT_node_data_11".node_id = "DT_node_lookup_11".node_id) AS "LogProba_0", (SELECT "DT_node_data_11"."Proba_1" 
FROM "DT_node_data_11" 
WHERE "DT_node_data_11".node_id = "DT_node_lookup_11".node_id) AS "Proba_1", (SELECT "DT_node_data_11"."LogProba_1" 
FROM "DT_node_data_11" 
WHERE "DT_node_data_11".node_id = "DT_node_lookup_11".node_id) AS "LogProba_1", (SELECT "DT_node_data_11"."Proba_2" 
FROM "DT_node_data_11" 
WHERE "DT_node_data_11".node_id = "DT_node_lookup_11".node_id) AS "Proba_2", (SELECT "DT_node_data_11"."LogProba_2" 
FROM "DT_node_data_11" 
WHERE "DT_node_data_11".node_id = "DT_node_lookup_11".node_id) AS "LogProba_2", (SELECT "DT_node_data_11"."Decision" 
FROM "DT_node_data_11" 
WHERE "DT_node_data_11".node_id = "DT_node_lookup_11".node_id) AS "Decision" 
FROM "DT_node_lookup_11"), 
"AdaBoost_Estim_11" AS 
(SELECT "DT_Output_11"."KEY" AS join_key_11, CAST(NULL AS FLOAT) AS "Score_11_0", "DT_Output_11"."Proba_0" AS "Proba_11_0", "DT_Output_11"."LogProba_0" AS "LogProba_11_0", CAST(NULL AS FLOAT) AS "Score_11_1", "DT_Output_11"."Proba_1" AS "Proba_11_1", "DT_Output_11"."LogProba_1" AS "LogProba_11_1", CAST(NULL AS FLOAT) AS "Score_11_2", "DT_Output_11"."Proba_2" AS "Proba_11_2", "DT_Output_11"."LogProba_2" AS "LogProba_11_2", "DT_Output_11"."Decision" AS "Decision_11" 
FROM "DT_Output_11"), 
"AdaBoost_Join_CTE" AS 
(SELECT "AdaBoost_Estim_0".join_key_0 AS join_key_0, "AdaBoost_Estim_0"."Score_0_0" AS "Score_0_0", "AdaBoost_Estim_0"."Proba_0_0" AS "Proba_0_0", "AdaBoost_Estim_0"."LogProba_0_0" AS "LogProba_0_0", "AdaBoost_Estim_0"."Score_0_1" AS "Score_0_1", "AdaBoost_Estim_0"."Proba_0_1" AS "Proba_0_1", "AdaBoost_Estim_0"."LogProba_0_1" AS "LogProba_0_1", "AdaBoost_Estim_0"."Score_0_2" AS "Score_0_2", "AdaBoost_Estim_0"."Proba_0_2" AS "Proba_0_2", "AdaBoost_Estim_0"."LogProba_0_2" AS "LogProba_0_2", "AdaBoost_Estim_0"."Decision_0" AS "Decision_0", "AdaBoost_Estim_1".join_key_1 AS join_key_1, "AdaBoost_Estim_1"."Score_1_0" AS "Score_1_0", "AdaBoost_Estim_1"."Proba_1_0" AS "Proba_1_0", "AdaBoost_Estim_1"."LogProba_1_0" AS "LogProba_1_0", "AdaBoost_Estim_1"."Score_1_1" AS "Score_1_1", "AdaBoost_Estim_1"."Proba_1_1" AS "Proba_1_1", "AdaBoost_Estim_1"."LogProba_1_1" AS "LogProba_1_1", "AdaBoost_Estim_1"."Score_1_2" AS "Score_1_2", "AdaBoost_Estim_1"."Proba_1_2" AS "Proba_1_2", "AdaBoost_Estim_1"."LogProba_1_2" AS "LogProba_1_2", "AdaBoost_Estim_1"."Decision_1" AS "Decision_1", "AdaBoost_Estim_2".join_key_2 AS join_key_2, "AdaBoost_Estim_2"."Score_2_0" AS "Score_2_0", "AdaBoost_Estim_2"."Proba_2_0" AS "Proba_2_0", "AdaBoost_Estim_2"."LogProba_2_0" AS "LogProba_2_0", "AdaBoost_Estim_2"."Score_2_1" AS "Score_2_1", "AdaBoost_Estim_2"."Proba_2_1" AS "Proba_2_1", "AdaBoost_Estim_2"."LogProba_2_1" AS "LogProba_2_1", "AdaBoost_Estim_2"."Score_2_2" AS "Score_2_2", "AdaBoost_Estim_2"."Proba_2_2" AS "Proba_2_2", "AdaBoost_Estim_2"."LogProba_2_2" AS "LogProba_2_2", "AdaBoost_Estim_2"."Decision_2" AS "Decision_2", "AdaBoost_Estim_3".join_key_3 AS join_key_3, "AdaBoost_Estim_3"."Score_3_0" AS "Score_3_0", "AdaBoost_Estim_3"."Proba_3_0" AS "Proba_3_0", "AdaBoost_Estim_3"."LogProba_3_0" AS "LogProba_3_0", "AdaBoost_Estim_3"."Score_3_1" AS "Score_3_1", "AdaBoost_Estim_3"."Proba_3_1" AS "Proba_3_1", "AdaBoost_Estim_3"."LogProba_3_1" AS "LogProba_3_1", "AdaBoost_Estim_3"."Score_3_2" AS "Score_3_2", "AdaBoost_Estim_3"."Proba_3_2" AS "Proba_3_2", "AdaBoost_Estim_3"."LogProba_3_2" AS "LogProba_3_2", "AdaBoost_Estim_3"."Decision_3" AS "Decision_3", "AdaBoost_Estim_4".join_key_4 AS join_key_4, "AdaBoost_Estim_4"."Score_4_0" AS "Score_4_0", "AdaBoost_Estim_4"."Proba_4_0" AS "Proba_4_0", "AdaBoost_Estim_4"."LogProba_4_0" AS "LogProba_4_0", "AdaBoost_Estim_4"."Score_4_1" AS "Score_4_1", "AdaBoost_Estim_4"."Proba_4_1" AS "Proba_4_1", "AdaBoost_Estim_4"."LogProba_4_1" AS "LogProba_4_1", "AdaBoost_Estim_4"."Score_4_2" AS "Score_4_2", "AdaBoost_Estim_4"."Proba_4_2" AS "Proba_4_2", "AdaBoost_Estim_4"."LogProba_4_2" AS "LogProba_4_2", "AdaBoost_Estim_4"."Decision_4" AS "Decision_4", "AdaBoost_Estim_5".join_key_5 AS join_key_5, "AdaBoost_Estim_5"."Score_5_0" AS "Score_5_0", "AdaBoost_Estim_5"."Proba_5_0" AS "Proba_5_0", "AdaBoost_Estim_5"."LogProba_5_0" AS "LogProba_5_0", "AdaBoost_Estim_5"."Score_5_1" AS "Score_5_1", "AdaBoost_Estim_5"."Proba_5_1" AS "Proba_5_1", "AdaBoost_Estim_5"."LogProba_5_1" AS "LogProba_5_1", "AdaBoost_Estim_5"."Score_5_2" AS "Score_5_2", "AdaBoost_Estim_5"."Proba_5_2" AS "Proba_5_2", "AdaBoost_Estim_5"."LogProba_5_2" AS "LogProba_5_2", "AdaBoost_Estim_5"."Decision_5" AS "Decision_5", "AdaBoost_Estim_6".join_key_6 AS join_key_6, "AdaBoost_Estim_6"."Score_6_0" AS "Score_6_0", "AdaBoost_Estim_6"."Proba_6_0" AS "Proba_6_0", "AdaBoost_Estim_6"."LogProba_6_0" AS "LogProba_6_0", "AdaBoost_Estim_6"."Score_6_1" AS "Score_6_1", "AdaBoost_Estim_6"."Proba_6_1" AS "Proba_6_1", "AdaBoost_Estim_6"."LogProba_6_1" AS "LogProba_6_1", "AdaBoost_Estim_6"."Score_6_2" AS "Score_6_2", "AdaBoost_Estim_6"."Proba_6_2" AS "Proba_6_2", "AdaBoost_Estim_6"."LogProba_6_2" AS "LogProba_6_2", "AdaBoost_Estim_6"."Decision_6" AS "Decision_6", "AdaBoost_Estim_7".join_key_7 AS join_key_7, "AdaBoost_Estim_7"."Score_7_0" AS "Score_7_0", "AdaBoost_Estim_7"."Proba_7_0" AS "Proba_7_0", "AdaBoost_Estim_7"."LogProba_7_0" AS "LogProba_7_0", "AdaBoost_Estim_7"."Score_7_1" AS "Score_7_1", "AdaBoost_Estim_7"."Proba_7_1" AS "Proba_7_1", "AdaBoost_Estim_7"."LogProba_7_1" AS "LogProba_7_1", "AdaBoost_Estim_7"."Score_7_2" AS "Score_7_2", "AdaBoost_Estim_7"."Proba_7_2" AS "Proba_7_2", "AdaBoost_Estim_7"."LogProba_7_2" AS "LogProba_7_2", "AdaBoost_Estim_7"."Decision_7" AS "Decision_7", "AdaBoost_Estim_8".join_key_8 AS join_key_8, "AdaBoost_Estim_8"."Score_8_0" AS "Score_8_0", "AdaBoost_Estim_8"."Proba_8_0" AS "Proba_8_0", "AdaBoost_Estim_8"."LogProba_8_0" AS "LogProba_8_0", "AdaBoost_Estim_8"."Score_8_1" AS "Score_8_1", "AdaBoost_Estim_8"."Proba_8_1" AS "Proba_8_1", "AdaBoost_Estim_8"."LogProba_8_1" AS "LogProba_8_1", "AdaBoost_Estim_8"."Score_8_2" AS "Score_8_2", "AdaBoost_Estim_8"."Proba_8_2" AS "Proba_8_2", "AdaBoost_Estim_8"."LogProba_8_2" AS "LogProba_8_2", "AdaBoost_Estim_8"."Decision_8" AS "Decision_8", "AdaBoost_Estim_9".join_key_9 AS join_key_9, "AdaBoost_Estim_9"."Score_9_0" AS "Score_9_0", "AdaBoost_Estim_9"."Proba_9_0" AS "Proba_9_0", "AdaBoost_Estim_9"."LogProba_9_0" AS "LogProba_9_0", "AdaBoost_Estim_9"."Score_9_1" AS "Score_9_1", "AdaBoost_Estim_9"."Proba_9_1" AS "Proba_9_1", "AdaBoost_Estim_9"."LogProba_9_1" AS "LogProba_9_1", "AdaBoost_Estim_9"."Score_9_2" AS "Score_9_2", "AdaBoost_Estim_9"."Proba_9_2" AS "Proba_9_2", "AdaBoost_Estim_9"."LogProba_9_2" AS "LogProba_9_2", "AdaBoost_Estim_9"."Decision_9" AS "Decision_9", "AdaBoost_Estim_10".join_key_10 AS join_key_10, "AdaBoost_Estim_10"."Score_10_0" AS "Score_10_0", "AdaBoost_Estim_10"."Proba_10_0" AS "Proba_10_0", "AdaBoost_Estim_10"."LogProba_10_0" AS "LogProba_10_0", "AdaBoost_Estim_10"."Score_10_1" AS "Score_10_1", "AdaBoost_Estim_10"."Proba_10_1" AS "Proba_10_1", "AdaBoost_Estim_10"."LogProba_10_1" AS "LogProba_10_1", "AdaBoost_Estim_10"."Score_10_2" AS "Score_10_2", "AdaBoost_Estim_10"."Proba_10_2" AS "Proba_10_2", "AdaBoost_Estim_10"."LogProba_10_2" AS "LogProba_10_2", "AdaBoost_Estim_10"."Decision_10" AS "Decision_10", "AdaBoost_Estim_11".join_key_11 AS join_key_11, "AdaBoost_Estim_11"."Score_11_0" AS "Score_11_0", "AdaBoost_Estim_11"."Proba_11_0" AS "Proba_11_0", "AdaBoost_Estim_11"."LogProba_11_0" AS "LogProba_11_0", "AdaBoost_Estim_11"."Score_11_1" AS "Score_11_1", "AdaBoost_Estim_11"."Proba_11_1" AS "Proba_11_1", "AdaBoost_Estim_11"."LogProba_11_1" AS "LogProba_11_1", "AdaBoost_Estim_11"."Score_11_2" AS "Score_11_2", "AdaBoost_Estim_11"."Proba_11_2" AS "Proba_11_2", "AdaBoost_Estim_11"."LogProba_11_2" AS "LogProba_11_2", "AdaBoost_Estim_11"."Decision_11" AS "Decision_11" 
FROM "AdaBoost_Estim_0" LEFT OUTER JOIN "AdaBoost_Estim_1" ON "AdaBoost_Estim_0".join_key_0 = "AdaBoost_Estim_1".join_key_1 LEFT OUTER JOIN "AdaBoost_Estim_2" ON "AdaBoost_Estim_2".join_key_2 = "AdaBoost_Estim_1".join_key_1 LEFT OUTER JOIN "AdaBoost_Estim_3" ON "AdaBoost_Estim_3".join_key_3 = "AdaBoost_Estim_2".join_key_2 LEFT OUTER JOIN "AdaBoost_Estim_4" ON "AdaBoost_Estim_4".join_key_4 = "AdaBoost_Estim_3".join_key_3 LEFT OUTER JOIN "AdaBoost_Estim_5" ON "AdaBoost_Estim_5".join_key_5 = "AdaBoost_Estim_4".join_key_4 LEFT OUTER JOIN "AdaBoost_Estim_6" ON "AdaBoost_Estim_6".join_key_6 = "AdaBoost_Estim_5".join_key_5 LEFT OUTER JOIN "AdaBoost_Estim_7" ON "AdaBoost_Estim_7".join_key_7 = "AdaBoost_Estim_6".join_key_6 LEFT OUTER JOIN "AdaBoost_Estim_8" ON "AdaBoost_Estim_8".join_key_8 = "AdaBoost_Estim_7".join_key_7 LEFT OUTER JOIN "AdaBoost_Estim_9" ON "AdaBoost_Estim_9".join_key_9 = "AdaBoost_Estim_8".join_key_8 LEFT OUTER JOIN "AdaBoost_Estim_10" ON "AdaBoost_Estim_10".join_key_10 = "AdaBoost_Estim_9".join_key_9 LEFT OUTER JOIN "AdaBoost_Estim_11" ON "AdaBoost_Estim_11".join_key_11 = "AdaBoost_Estim_10".join_key_10), 
"AdaBoost_AVG_Scores_BN" AS 
(SELECT "AdaBoost_Join_CTE".join_key_0 AS "KEY", (2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_0") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3)) / 12.0 + (2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_0") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3)) / 12.0 + (2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_0") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3)) / 12.0 + (2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_0") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3)) / 12.0 + (2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_0") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3)) / 12.0 + (2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_0") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3)) / 12.0 + (2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_6_0") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_6_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_6_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_6_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3)) / 12.0 + (2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_7_0") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_7_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_7_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_7_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3)) / 12.0 + (2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_8_0") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_8_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_8_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_8_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3)) / 12.0 + (2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_9_0") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_9_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_9_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_9_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3)) / 12.0 + (2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_10_0") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_10_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_10_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_10_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3)) / 12.0 + (2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_11_0") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_11_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_11_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_11_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3)) / 12.0 AS "Score_0", 2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_0") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3) + 2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_0") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3) + 2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_0") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3) + 2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_0") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3) + 2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_0") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3) + 2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_0") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3) + 2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_6_0") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_6_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_6_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_6_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3) + 2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_7_0") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_7_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_7_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_7_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3) + 2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_8_0") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_8_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_8_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_8_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3) + 2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_9_0") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_9_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_9_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_9_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3) + 2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_10_0") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_10_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_10_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_10_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3) + 2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_11_0") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_11_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_11_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_11_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3) AS "Proba_0", (2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_1") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3)) / 12.0 + (2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_1") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3)) / 12.0 + (2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_1") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3)) / 12.0 + (2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_1") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3)) / 12.0 + (2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_1") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3)) / 12.0 + (2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_1") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3)) / 12.0 + (2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_6_1") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_6_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_6_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_6_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3)) / 12.0 + (2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_7_1") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_7_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_7_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_7_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3)) / 12.0 + (2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_8_1") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_8_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_8_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_8_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3)) / 12.0 + (2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_9_1") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_9_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_9_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_9_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3)) / 12.0 + (2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_10_1") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_10_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_10_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_10_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3)) / 12.0 + (2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_11_1") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_11_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_11_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_11_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3)) / 12.0 AS "Score_1", 2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_1") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3) + 2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_1") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3) + 2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_1") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3) + 2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_1") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3) + 2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_1") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3) + 2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_1") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3) + 2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_6_1") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_6_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_6_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_6_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3) + 2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_7_1") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_7_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_7_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_7_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3) + 2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_8_1") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_8_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_8_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_8_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3) + 2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_9_1") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_9_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_9_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_9_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3) + 2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_10_1") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_10_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_10_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_10_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3) + 2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_11_1") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_11_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_11_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_11_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3) AS "Proba_1", (2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_2") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3)) / 12.0 + (2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_2") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3)) / 12.0 + (2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_2") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3)) / 12.0 + (2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_2") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3)) / 12.0 + (2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_2") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3)) / 12.0 + (2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_2") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3)) / 12.0 + (2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_6_2") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_6_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_6_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_6_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3)) / 12.0 + (2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_7_2") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_7_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_7_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_7_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3)) / 12.0 + (2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_8_2") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_8_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_8_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_8_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3)) / 12.0 + (2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_9_2") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_9_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_9_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_9_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3)) / 12.0 + (2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_10_2") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_10_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_10_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_10_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3)) / 12.0 + (2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_11_2") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_11_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_11_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_11_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3)) / 12.0 AS "Score_2", 2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_2") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3) + 2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_2") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3) + 2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_2") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3) + 2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_2") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3) + 2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_2") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3) + 2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_2") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3) + 2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_6_2") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_6_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_6_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_6_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3) + 2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_7_2") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_7_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_7_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_7_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3) + 2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_8_2") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_8_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_8_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_8_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3) + 2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_9_2") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_9_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_9_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_9_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3) + 2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_10_2") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_10_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_10_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_10_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3) + 2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_11_2") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_11_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_11_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_11_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3) AS "Proba_2" 
FROM "AdaBoost_Join_CTE"), 
"AdaBoost_AVG_Scores" AS 
(SELECT "AdaBoost_AVG_Scores_BN"."KEY" AS "KEY", "AdaBoost_AVG_Scores_BN"."Score_0" AS "Score_0", exp(("AdaBoost_AVG_Scores_BN"."Proba_0" / 12.0) / 2) / (exp(("AdaBoost_AVG_Scores_BN"."Proba_0" / 12.0) / 2) + exp(("AdaBoost_AVG_Scores_BN"."Proba_1" / 12.0) / 2) + exp(("AdaBoost_AVG_Scores_BN"."Proba_2" / 12.0) / 2)) AS "Proba_0", CAST(NULL AS FLOAT) AS "LogProba_0", "AdaBoost_AVG_Scores_BN"."Score_1" AS "Score_1", exp(("AdaBoost_AVG_Scores_BN"."Proba_1" / 12.0) / 2) / (exp(("AdaBoost_AVG_Scores_BN"."Proba_0" / 12.0) / 2) + exp(("AdaBoost_AVG_Scores_BN"."Proba_1" / 12.0) / 2) + exp(("AdaBoost_AVG_Scores_BN"."Proba_2" / 12.0) / 2)) AS "Proba_1", CAST(NULL AS FLOAT) AS "LogProba_1", "AdaBoost_AVG_Scores_BN"."Score_2" AS "Score_2", exp(("AdaBoost_AVG_Scores_BN"."Proba_2" / 12.0) / 2) / (exp(("AdaBoost_AVG_Scores_BN"."Proba_0" / 12.0) / 2) + exp(("AdaBoost_AVG_Scores_BN"."Proba_1" / 12.0) / 2) + exp(("AdaBoost_AVG_Scores_BN"."Proba_2" / 12.0) / 2)) AS "Proba_2", CAST(NULL AS FLOAT) AS "LogProba_2" 
FROM "AdaBoost_AVG_Scores_BN"), 
orig_cte AS 
(SELECT "AdaBoost_AVG_Scores"."KEY" AS "KEY", "AdaBoost_AVG_Scores"."Score_0" AS "Score_0", "AdaBoost_AVG_Scores"."Score_1" AS "Score_1", "AdaBoost_AVG_Scores"."Score_2" AS "Score_2", "AdaBoost_AVG_Scores"."Proba_0" AS "Proba_0", "AdaBoost_AVG_Scores"."Proba_1" AS "Proba_1", "AdaBoost_AVG_Scores"."Proba_2" AS "Proba_2", "AdaBoost_AVG_Scores"."LogProba_0" AS "LogProba_0", "AdaBoost_AVG_Scores"."LogProba_1" AS "LogProba_1", "AdaBoost_AVG_Scores"."LogProba_2" AS "LogProba_2", CAST(NULL AS FLOAT) AS "Decision" 
FROM "AdaBoost_AVG_Scores"), 
score_class_union AS 
(SELECT scu."KEY" AS "KEY", scu.class AS class, scu."LogProba" AS "LogProba", scu."Proba" AS "Proba", scu."Score" AS "Score" 
FROM (SELECT orig_cte."KEY" AS "KEY", 0 AS class, orig_cte."LogProba_0" AS "LogProba", orig_cte."Proba_0" AS "Proba", orig_cte."Score_0" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 1 AS class, orig_cte."LogProba_1" AS "LogProba", orig_cte."Proba_1" AS "Proba", orig_cte."Score_1" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 2 AS class, orig_cte."LogProba_2" AS "LogProba", orig_cte."Proba_2" AS "Proba", orig_cte."Score_2" AS "Score" 
FROM orig_cte) scu), 
score_max AS 
(SELECT orig_cte."KEY" AS "KEY", orig_cte."Score_0" AS "Score_0", orig_cte."Score_1" AS "Score_1", orig_cte."Score_2" AS "Score_2", orig_cte."Proba_0" AS "Proba_0", orig_cte."Proba_1" AS "Proba_1", orig_cte."Proba_2" AS "Proba_2", orig_cte."LogProba_0" AS "LogProba_0", orig_cte."LogProba_1" AS "LogProba_1", orig_cte."LogProba_2" AS "LogProba_2", orig_cte."Decision" AS "Decision", (SELECT max(score_class_union."LogProba") AS max_1 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_LogProba", (SELECT max(score_class_union."Proba") AS max_2 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_Proba", (SELECT max(score_class_union."Score") AS max_3 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_Score" 
FROM orig_cte), 
arg_max_cte AS 
(SELECT score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Score_2" AS "Score_2", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."Proba_2" AS "Proba_2", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."LogProba_2" AS "LogProba_2", score_max."Decision" AS "Decision", score_max."max_LogProba" AS "max_LogProba", score_max."max_Proba" AS "max_Proba", score_max."max_Score" AS "max_Score", (SELECT min(score_class_union.class) AS min_1 
FROM score_class_union 
WHERE score_max."max_LogProba" = score_class_union."LogProba" AND score_max."KEY" = score_class_union."KEY") AS "arg_max_LogProba", (SELECT min(score_class_union.class) AS min_2 
FROM score_class_union 
WHERE score_max."max_Proba" = score_class_union."Proba" AND score_max."KEY" = score_class_union."KEY") AS "arg_max_Proba", (SELECT min(score_class_union.class) AS min_3 
FROM score_class_union 
WHERE score_max."max_Score" = score_class_union."Score" AND score_max."KEY" = score_class_union."KEY") AS "arg_max_Score" 
FROM score_max)
 SELECT arg_max_cte."KEY" AS "KEY", arg_max_cte."Score_0" AS "Score_0", arg_max_cte."Score_1" AS "Score_1", arg_max_cte."Score_2" AS "Score_2", arg_max_cte."Proba_0" AS "Proba_0", arg_max_cte."Proba_1" AS "Proba_1", arg_max_cte."Proba_2" AS "Proba_2", CASE WHEN (arg_max_cte."Proba_0" > 0.0) THEN ln(arg_max_cte."Proba_0") ELSE -BINARY_FLOAT_INFINITY END AS "LogProba_0", CASE WHEN (arg_max_cte."Proba_1" > 0.0) THEN ln(arg_max_cte."Proba_1") ELSE -BINARY_FLOAT_INFINITY END AS "LogProba_1", CASE WHEN (arg_max_cte."Proba_2" > 0.0) THEN ln(arg_max_cte."Proba_2") ELSE -BINARY_FLOAT_INFINITY END AS "LogProba_2", arg_max_cte."arg_max_Score" AS "Decision" 
FROM arg_max_cte