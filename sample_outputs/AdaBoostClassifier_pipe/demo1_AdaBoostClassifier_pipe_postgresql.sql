-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH "ADS_imp_1_OUT" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" IS NULL) THEN -0.0694906390703 ELSE "ADS"."Feature_0" END AS impute_output_2, CASE WHEN ("ADS"."Feature_1" IS NULL) THEN -0.119163503916 ELSE "ADS"."Feature_1" END AS impute_output_3, CASE WHEN ("ADS"."Feature_2" IS NULL) THEN -0.127896899745 ELSE "ADS"."Feature_2" END AS impute_output_4, CASE WHEN ("ADS"."Feature_3" IS NULL) THEN -0.114287346209 ELSE "ADS"."Feature_3" END AS impute_output_5, CASE WHEN ("ADS"."Feature_4" IS NULL) THEN 0.0413271968547 ELSE "ADS"."Feature_4" END AS impute_output_6 
FROM "INPUT_DATA" AS "ADS"), 
"ADS_ano_2_OUT" AS 
(SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", ("ADS_imp_1_OUT".impute_output_2 - -0.0694906390703) * -0.053647534364 + ("ADS_imp_1_OUT".impute_output_3 - -0.119163503916) * -0.452838029092 + ("ADS_imp_1_OUT".impute_output_4 - -0.127896899745) * 0.689918784888 + ("ADS_imp_1_OUT".impute_output_5 - -0.114287346209) * -0.33402126184 + ("ADS_imp_1_OUT".impute_output_6 - 0.0413271968547) * -0.452218452037 AS anova_output_2, ("ADS_imp_1_OUT".impute_output_2 - -0.0694906390703) * -0.620732053756 + ("ADS_imp_1_OUT".impute_output_3 - -0.119163503916) * 0.179006433042 + ("ADS_imp_1_OUT".impute_output_4 - -0.127896899745) * 0.520498333383 + ("ADS_imp_1_OUT".impute_output_5 - -0.114287346209) * 0.386172344142 + ("ADS_imp_1_OUT".impute_output_6 - 0.0413271968547) * 0.403237919763 AS anova_output_3, ("ADS_imp_1_OUT".impute_output_2 - -0.0694906390703) * 0.534948377585 + ("ADS_imp_1_OUT".impute_output_3 - -0.119163503916) * -0.502789475991 + ("ADS_imp_1_OUT".impute_output_4 - -0.127896899745) * 0.167923582168 + ("ADS_imp_1_OUT".impute_output_5 - -0.114287346209) * 0.610459612885 + ("ADS_imp_1_OUT".impute_output_6 - 0.0413271968547) * 0.245303297449 AS anova_output_4, ("ADS_imp_1_OUT".impute_output_2 - -0.0694906390703) * 0.119525555247 + ("ADS_imp_1_OUT".impute_output_3 - -0.119163503916) * -0.210071806412 + ("ADS_imp_1_OUT".impute_output_4 - -0.127896899745) * 0.0756568397014 + ("ADS_imp_1_OUT".impute_output_5 - -0.114287346209) * -0.602658142322 + ("ADS_imp_1_OUT".impute_output_6 - 0.0413271968547) * 0.756744794427 AS anova_output_5, ("ADS_imp_1_OUT".impute_output_2 - -0.0694906390703) * -0.557994206474 + ("ADS_imp_1_OUT".impute_output_3 - -0.119163503916) * -0.682617751982 + ("ADS_imp_1_OUT".impute_output_4 - -0.127896899745) * -0.468157311555 + ("ADS_imp_1_OUT".impute_output_5 - -0.114287346209) * 0.0586765863683 + ("ADS_imp_1_OUT".impute_output_6 - 0.0413271968547) * -0.0078268813005 AS anova_output_6 
FROM "ADS_imp_1_OUT"), 
"DT_node_lookup" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anova_output_3 <= 1.0217169523239136) THEN 1 ELSE 2 END AS node_id_2 
FROM "ADS_ano_2_OUT"), 
"DT_node_data" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Proba_-1" AS "Proba_-1", "Values"."LogProba_-1" AS "LogProba_-1", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'anova_output_3' AS feature, 1.0217169523239136 AS threshold, 100 AS count, 0 AS depth, 0.45 AS "Proba_-1", -0.798507696218 AS "LogProba_-1", 0.55 AS "Proba_1", -0.597837000756 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 82 AS count, 1 AS depth, 0.36585365853658536 AS "Proba_-1", -1.0055218656 AS "LogProba_-1", 0.6341463414634148 AS "Proba_1", -0.455475528683 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 1 AS depth, 0.8333333333333334 AS "Proba_-1", -0.182321556794 AS "LogProba_-1", 0.16666666666666666 AS "Proba_1", -1.79175946923 AS "LogProba_1", -1 AS "Decision") AS "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".node_id AS node_id, "DT_node_data".feature AS feature, "DT_node_data".threshold AS threshold, "DT_node_data".count AS count, "DT_node_data".depth AS depth, "DT_node_data"."Proba_-1" AS "Proba_-1", "DT_node_data"."LogProba_-1" AS "LogProba_-1", "DT_node_data"."Proba_1" AS "Proba_1", "DT_node_data"."LogProba_1" AS "LogProba_1", "DT_node_data"."Decision" AS "Decision" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".node_id), 
"AdaBoost_Estim_0" AS 
(SELECT "DT_Output"."KEY" AS join_key_0, CAST(NULL AS FLOAT) AS "Score_0_-1", "DT_Output"."Proba_-1" AS "Proba_0_-1", "DT_Output"."LogProba_-1" AS "LogProba_0_-1", CAST(NULL AS FLOAT) AS "Score_0_1", "DT_Output"."Proba_1" AS "Proba_0_1", "DT_Output"."LogProba_1" AS "LogProba_0_1", "DT_Output"."Decision" AS "Decision_0" 
FROM "DT_Output"), 
"DT_node_lookup_1" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anova_output_4 <= -0.4731309413909912) THEN 1 ELSE 2 END AS node_id_2 
FROM "ADS_ano_2_OUT"), 
"DT_node_data_1" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Proba_-1" AS "Proba_-1", "Values"."LogProba_-1" AS "LogProba_-1", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'anova_output_4' AS feature, -0.4731309413909912 AS threshold, 100 AS count, 0 AS depth, 0.5 AS "Proba_-1", -0.69314718056 AS "LogProba_-1", 0.5000000000000001 AS "Proba_1", -0.69314718056 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 29 AS count, 1 AS depth, 0.2799699588236021 AS "Proba_-1", -1.27307297148 AS "LogProba_-1", 0.720030041176398 AS "Proba_1", -0.328462343986 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 71 AS count, 1 AS depth, 0.5971503936709563 AS "Proba_-1", -0.515586281618 AS "LogProba_-1", 0.4028496063290437 AS "Proba_1", -0.909191971974 AS "LogProba_1", -1 AS "Decision") AS "Values"), 
"DT_Output_1" AS 
(SELECT "DT_node_lookup_1"."KEY" AS "KEY", "DT_node_lookup_1".node_id_2 AS node_id_2, "DT_node_data_1".node_id AS node_id, "DT_node_data_1".feature AS feature, "DT_node_data_1".threshold AS threshold, "DT_node_data_1".count AS count, "DT_node_data_1".depth AS depth, "DT_node_data_1"."Proba_-1" AS "Proba_-1", "DT_node_data_1"."LogProba_-1" AS "LogProba_-1", "DT_node_data_1"."Proba_1" AS "Proba_1", "DT_node_data_1"."LogProba_1" AS "LogProba_1", "DT_node_data_1"."Decision" AS "Decision" 
FROM "DT_node_lookup_1" LEFT OUTER JOIN "DT_node_data_1" ON "DT_node_lookup_1".node_id_2 = "DT_node_data_1".node_id), 
"AdaBoost_Estim_1" AS 
(SELECT "DT_Output_1"."KEY" AS join_key_1, CAST(NULL AS FLOAT) AS "Score_1_-1", "DT_Output_1"."Proba_-1" AS "Proba_1_-1", "DT_Output_1"."LogProba_-1" AS "LogProba_1_-1", CAST(NULL AS FLOAT) AS "Score_1_1", "DT_Output_1"."Proba_1" AS "Proba_1_1", "DT_Output_1"."LogProba_1" AS "LogProba_1_1", "DT_Output_1"."Decision" AS "Decision_1" 
FROM "DT_Output_1"), 
"DT_node_lookup_2" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anova_output_5 <= 0.751193642616272) THEN 1 ELSE 2 END AS node_id_2 
FROM "ADS_ano_2_OUT"), 
"DT_node_data_2" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Proba_-1" AS "Proba_-1", "Values"."LogProba_-1" AS "LogProba_-1", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'anova_output_5' AS feature, 0.751193642616272 AS threshold, 100 AS count, 0 AS depth, 0.4999999999999999 AS "Proba_-1", -0.69314718056 AS "LogProba_-1", 0.5000000000000001 AS "Proba_1", -0.69314718056 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 79 AS count, 1 AS depth, 0.5511900395656418 AS "Proba_-1", -0.5956756299 AS "LogProba_-1", 0.44880996043435817 AS "Proba_1", -0.801155731539 AS "LogProba_1", -1 AS "Decision" UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 21 AS count, 1 AS depth, 0.24568944919346494 AS "Proba_-1", -1.4036869422 AS "LogProba_-1", 0.754310550806535 AS "Proba_1", -0.281951124674 AS "LogProba_1", 1 AS "Decision") AS "Values"), 
"DT_Output_2" AS 
(SELECT "DT_node_lookup_2"."KEY" AS "KEY", "DT_node_lookup_2".node_id_2 AS node_id_2, "DT_node_data_2".node_id AS node_id, "DT_node_data_2".feature AS feature, "DT_node_data_2".threshold AS threshold, "DT_node_data_2".count AS count, "DT_node_data_2".depth AS depth, "DT_node_data_2"."Proba_-1" AS "Proba_-1", "DT_node_data_2"."LogProba_-1" AS "LogProba_-1", "DT_node_data_2"."Proba_1" AS "Proba_1", "DT_node_data_2"."LogProba_1" AS "LogProba_1", "DT_node_data_2"."Decision" AS "Decision" 
FROM "DT_node_lookup_2" LEFT OUTER JOIN "DT_node_data_2" ON "DT_node_lookup_2".node_id_2 = "DT_node_data_2".node_id), 
"AdaBoost_Estim_2" AS 
(SELECT "DT_Output_2"."KEY" AS join_key_2, CAST(NULL AS FLOAT) AS "Score_2_-1", "DT_Output_2"."Proba_-1" AS "Proba_2_-1", "DT_Output_2"."LogProba_-1" AS "LogProba_2_-1", CAST(NULL AS FLOAT) AS "Score_2_1", "DT_Output_2"."Proba_1" AS "Proba_2_1", "DT_Output_2"."LogProba_1" AS "LogProba_2_1", "DT_Output_2"."Decision" AS "Decision_2" 
FROM "DT_Output_2"), 
"DT_node_lookup_3" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anova_output_6 <= -1.229390263557434) THEN 1 ELSE 2 END AS node_id_2 
FROM "ADS_ano_2_OUT"), 
"DT_node_data_3" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Proba_-1" AS "Proba_-1", "Values"."LogProba_-1" AS "LogProba_-1", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'anova_output_6' AS feature, -1.229390263557434 AS threshold, 100 AS count, 0 AS depth, 0.4999999999999999 AS "Proba_-1", -0.69314718056 AS "LogProba_-1", 0.5 AS "Proba_1", -0.69314718056 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 1 AS depth, 0.0 AS "Proba_-1", -1.79769313486231e+308 AS "LogProba_-1", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 95 AS count, 1 AS depth, 0.5284623034003356 AS "Proba_-1", -0.637783803746 AS "LogProba_-1", 0.47153769659966444 AS "Proba_1", -0.751756229734 AS "LogProba_1", -1 AS "Decision") AS "Values"), 
"DT_Output_3" AS 
(SELECT "DT_node_lookup_3"."KEY" AS "KEY", "DT_node_lookup_3".node_id_2 AS node_id_2, "DT_node_data_3".node_id AS node_id, "DT_node_data_3".feature AS feature, "DT_node_data_3".threshold AS threshold, "DT_node_data_3".count AS count, "DT_node_data_3".depth AS depth, "DT_node_data_3"."Proba_-1" AS "Proba_-1", "DT_node_data_3"."LogProba_-1" AS "LogProba_-1", "DT_node_data_3"."Proba_1" AS "Proba_1", "DT_node_data_3"."LogProba_1" AS "LogProba_1", "DT_node_data_3"."Decision" AS "Decision" 
FROM "DT_node_lookup_3" LEFT OUTER JOIN "DT_node_data_3" ON "DT_node_lookup_3".node_id_2 = "DT_node_data_3".node_id), 
"AdaBoost_Estim_3" AS 
(SELECT "DT_Output_3"."KEY" AS join_key_3, CAST(NULL AS FLOAT) AS "Score_3_-1", "DT_Output_3"."Proba_-1" AS "Proba_3_-1", "DT_Output_3"."LogProba_-1" AS "LogProba_3_-1", CAST(NULL AS FLOAT) AS "Score_3_1", "DT_Output_3"."Proba_1" AS "Proba_3_1", "DT_Output_3"."LogProba_1" AS "LogProba_3_1", "DT_Output_3"."Decision" AS "Decision_3" 
FROM "DT_Output_3"), 
"DT_node_lookup_4" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anova_output_6 <= -0.1801726520061493) THEN 1 ELSE 2 END AS node_id_2 
FROM "ADS_ano_2_OUT"), 
"DT_node_data_4" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Proba_-1" AS "Proba_-1", "Values"."LogProba_-1" AS "LogProba_-1", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'anova_output_6' AS feature, -0.1801726520061493 AS threshold, 100 AS count, 0 AS depth, 0.49999999957518965 AS "Proba_-1", -0.69314718141 AS "LogProba_-1", 0.5000000004248104 AS "Proba_1", -0.69314717971 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 44 AS count, 1 AS depth, 0.6524116822349166 AS "Proba_-1", -0.427079501843 AS "LogProba_-1", 0.3475883177650833 AS "Proba_1", -1.05673649443 AS "LogProba_1", -1 AS "Decision" UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 56 AS count, 1 AS depth, 0.3990882355784266 AS "Proba_-1", -0.91857274474 AS "LogProba_-1", 0.6009117644215733 AS "Proba_1", -0.509307169832 AS "LogProba_1", 1 AS "Decision") AS "Values"), 
"DT_Output_4" AS 
(SELECT "DT_node_lookup_4"."KEY" AS "KEY", "DT_node_lookup_4".node_id_2 AS node_id_2, "DT_node_data_4".node_id AS node_id, "DT_node_data_4".feature AS feature, "DT_node_data_4".threshold AS threshold, "DT_node_data_4".count AS count, "DT_node_data_4".depth AS depth, "DT_node_data_4"."Proba_-1" AS "Proba_-1", "DT_node_data_4"."LogProba_-1" AS "LogProba_-1", "DT_node_data_4"."Proba_1" AS "Proba_1", "DT_node_data_4"."LogProba_1" AS "LogProba_1", "DT_node_data_4"."Decision" AS "Decision" 
FROM "DT_node_lookup_4" LEFT OUTER JOIN "DT_node_data_4" ON "DT_node_lookup_4".node_id_2 = "DT_node_data_4".node_id), 
"AdaBoost_Estim_4" AS 
(SELECT "DT_Output_4"."KEY" AS join_key_4, CAST(NULL AS FLOAT) AS "Score_4_-1", "DT_Output_4"."Proba_-1" AS "Proba_4_-1", "DT_Output_4"."LogProba_-1" AS "LogProba_4_-1", CAST(NULL AS FLOAT) AS "Score_4_1", "DT_Output_4"."Proba_1" AS "Proba_4_1", "DT_Output_4"."LogProba_1" AS "LogProba_4_1", "DT_Output_4"."Decision" AS "Decision_4" 
FROM "DT_Output_4"), 
"DT_node_lookup_5" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anova_output_2 <= 0.030657175928354263) THEN 1 ELSE 2 END AS node_id_2 
FROM "ADS_ano_2_OUT"), 
"DT_node_data_5" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Proba_-1" AS "Proba_-1", "Values"."LogProba_-1" AS "LogProba_-1", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'anova_output_2' AS feature, 0.030657175928354263 AS threshold, 100 AS count, 0 AS depth, 0.4999999999999999 AS "Proba_-1", -0.69314718056 AS "LogProba_-1", 0.5000000000000001 AS "Proba_1", -0.69314718056 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 50 AS count, 1 AS depth, 0.3704782461883407 AS "Proba_-1", -0.992960550711 AS "LogProba_-1", 0.6295217538116594 AS "Proba_1", -0.462794868809 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 50 AS count, 1 AS depth, 0.6341243199093464 AS "Proba_-1", -0.455510255583 AS "LogProba_-1", 0.3658756800906537 AS "Proba_1", -1.00546167517 AS "LogProba_1", -1 AS "Decision") AS "Values"), 
"DT_Output_5" AS 
(SELECT "DT_node_lookup_5"."KEY" AS "KEY", "DT_node_lookup_5".node_id_2 AS node_id_2, "DT_node_data_5".node_id AS node_id, "DT_node_data_5".feature AS feature, "DT_node_data_5".threshold AS threshold, "DT_node_data_5".count AS count, "DT_node_data_5".depth AS depth, "DT_node_data_5"."Proba_-1" AS "Proba_-1", "DT_node_data_5"."LogProba_-1" AS "LogProba_-1", "DT_node_data_5"."Proba_1" AS "Proba_1", "DT_node_data_5"."LogProba_1" AS "LogProba_1", "DT_node_data_5"."Decision" AS "Decision" 
FROM "DT_node_lookup_5" LEFT OUTER JOIN "DT_node_data_5" ON "DT_node_lookup_5".node_id_2 = "DT_node_data_5".node_id), 
"AdaBoost_Estim_5" AS 
(SELECT "DT_Output_5"."KEY" AS join_key_5, CAST(NULL AS FLOAT) AS "Score_5_-1", "DT_Output_5"."Proba_-1" AS "Proba_5_-1", "DT_Output_5"."LogProba_-1" AS "LogProba_5_-1", CAST(NULL AS FLOAT) AS "Score_5_1", "DT_Output_5"."Proba_1" AS "Proba_5_1", "DT_Output_5"."LogProba_1" AS "LogProba_5_1", "DT_Output_5"."Decision" AS "Decision_5" 
FROM "DT_Output_5"), 
"DT_node_lookup_6" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anova_output_2 <= -1.7915594577789307) THEN 1 ELSE 2 END AS node_id_2 
FROM "ADS_ano_2_OUT"), 
"DT_node_data_6" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Proba_-1" AS "Proba_-1", "Values"."LogProba_-1" AS "LogProba_-1", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'anova_output_2' AS feature, -1.7915594577789307 AS threshold, 100 AS count, 0 AS depth, 0.4999999999999998 AS "Proba_-1", -0.69314718056 AS "LogProba_-1", 0.5000000000000001 AS "Proba_1", -0.69314718056 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 1 AS depth, 0.930243996394428 AS "Proba_-1", -0.0723083655312 AS "LogProba_-1", 0.06975600360557194 AS "Proba_1", -2.66275178879 AS "LogProba_1", -1 AS "Decision" UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 96 AS count, 1 AS depth, 0.46973745552150237 AS "Proba_-1", -0.755581345629 AS "LogProba_-1", 0.5302625444784976 AS "Proba_1", -0.634383028149 AS "LogProba_1", 1 AS "Decision") AS "Values"), 
"DT_Output_6" AS 
(SELECT "DT_node_lookup_6"."KEY" AS "KEY", "DT_node_lookup_6".node_id_2 AS node_id_2, "DT_node_data_6".node_id AS node_id, "DT_node_data_6".feature AS feature, "DT_node_data_6".threshold AS threshold, "DT_node_data_6".count AS count, "DT_node_data_6".depth AS depth, "DT_node_data_6"."Proba_-1" AS "Proba_-1", "DT_node_data_6"."LogProba_-1" AS "LogProba_-1", "DT_node_data_6"."Proba_1" AS "Proba_1", "DT_node_data_6"."LogProba_1" AS "LogProba_1", "DT_node_data_6"."Decision" AS "Decision" 
FROM "DT_node_lookup_6" LEFT OUTER JOIN "DT_node_data_6" ON "DT_node_lookup_6".node_id_2 = "DT_node_data_6".node_id), 
"AdaBoost_Estim_6" AS 
(SELECT "DT_Output_6"."KEY" AS join_key_6, CAST(NULL AS FLOAT) AS "Score_6_-1", "DT_Output_6"."Proba_-1" AS "Proba_6_-1", "DT_Output_6"."LogProba_-1" AS "LogProba_6_-1", CAST(NULL AS FLOAT) AS "Score_6_1", "DT_Output_6"."Proba_1" AS "Proba_6_1", "DT_Output_6"."LogProba_1" AS "LogProba_6_1", "DT_Output_6"."Decision" AS "Decision_6" 
FROM "DT_Output_6"), 
"DT_node_lookup_7" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anova_output_3 <= 1.9003496170043945) THEN 1 ELSE 2 END AS node_id_2 
FROM "ADS_ano_2_OUT"), 
"DT_node_data_7" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Proba_-1" AS "Proba_-1", "Values"."LogProba_-1" AS "LogProba_-1", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'anova_output_3' AS feature, 1.9003496170043945 AS threshold, 100 AS count, 0 AS depth, 0.49999999999999994 AS "Proba_-1", -0.69314718056 AS "LogProba_-1", 0.5 AS "Proba_1", -0.69314718056 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 95 AS count, 1 AS depth, 0.47309374271452004 AS "Proba_-1", -0.74846172257 AS "LogProba_-1", 0.52690625728548 AS "Proba_1", -0.640732626177 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 1 AS depth, 1.0 AS "Proba_-1", 0.0 AS "LogProba_-1", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", -1 AS "Decision") AS "Values"), 
"DT_Output_7" AS 
(SELECT "DT_node_lookup_7"."KEY" AS "KEY", "DT_node_lookup_7".node_id_2 AS node_id_2, "DT_node_data_7".node_id AS node_id, "DT_node_data_7".feature AS feature, "DT_node_data_7".threshold AS threshold, "DT_node_data_7".count AS count, "DT_node_data_7".depth AS depth, "DT_node_data_7"."Proba_-1" AS "Proba_-1", "DT_node_data_7"."LogProba_-1" AS "LogProba_-1", "DT_node_data_7"."Proba_1" AS "Proba_1", "DT_node_data_7"."LogProba_1" AS "LogProba_1", "DT_node_data_7"."Decision" AS "Decision" 
FROM "DT_node_lookup_7" LEFT OUTER JOIN "DT_node_data_7" ON "DT_node_lookup_7".node_id_2 = "DT_node_data_7".node_id), 
"AdaBoost_Estim_7" AS 
(SELECT "DT_Output_7"."KEY" AS join_key_7, CAST(NULL AS FLOAT) AS "Score_7_-1", "DT_Output_7"."Proba_-1" AS "Proba_7_-1", "DT_Output_7"."LogProba_-1" AS "LogProba_7_-1", CAST(NULL AS FLOAT) AS "Score_7_1", "DT_Output_7"."Proba_1" AS "Proba_7_1", "DT_Output_7"."LogProba_1" AS "LogProba_7_1", "DT_Output_7"."Decision" AS "Decision_7" 
FROM "DT_Output_7"), 
"DT_node_lookup_8" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anova_output_4 <= -1.3217706680297852) THEN 1 ELSE 2 END AS node_id_2 
FROM "ADS_ano_2_OUT"), 
"DT_node_data_8" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Proba_-1" AS "Proba_-1", "Values"."LogProba_-1" AS "LogProba_-1", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'anova_output_4' AS feature, -1.3217706680297852 AS threshold, 100 AS count, 0 AS depth, 0.5000000004015162 AS "Proba_-1", -0.693147179757 AS "LogProba_-1", 0.49999999959848385 AS "Proba_1", -0.693147181363 AS "LogProba_1", -1 AS "Decision" UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 1 AS depth, 0.11843718027728807 AS "Proba_-1", -2.13337258321 AS "LogProba_-1", 0.8815628197227119 AS "Proba_1", -0.126059015109 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 90 AS count, 1 AS depth, 0.5329004896769016 AS "Proba_-1", -0.629420570789 AS "LogProba_-1", 0.4670995103230983 AS "Proba_1", -0.761212959809 AS "LogProba_1", -1 AS "Decision") AS "Values"), 
"DT_Output_8" AS 
(SELECT "DT_node_lookup_8"."KEY" AS "KEY", "DT_node_lookup_8".node_id_2 AS node_id_2, "DT_node_data_8".node_id AS node_id, "DT_node_data_8".feature AS feature, "DT_node_data_8".threshold AS threshold, "DT_node_data_8".count AS count, "DT_node_data_8".depth AS depth, "DT_node_data_8"."Proba_-1" AS "Proba_-1", "DT_node_data_8"."LogProba_-1" AS "LogProba_-1", "DT_node_data_8"."Proba_1" AS "Proba_1", "DT_node_data_8"."LogProba_1" AS "LogProba_1", "DT_node_data_8"."Decision" AS "Decision" 
FROM "DT_node_lookup_8" LEFT OUTER JOIN "DT_node_data_8" ON "DT_node_lookup_8".node_id_2 = "DT_node_data_8".node_id), 
"AdaBoost_Estim_8" AS 
(SELECT "DT_Output_8"."KEY" AS join_key_8, CAST(NULL AS FLOAT) AS "Score_8_-1", "DT_Output_8"."Proba_-1" AS "Proba_8_-1", "DT_Output_8"."LogProba_-1" AS "LogProba_8_-1", CAST(NULL AS FLOAT) AS "Score_8_1", "DT_Output_8"."Proba_1" AS "Proba_8_1", "DT_Output_8"."LogProba_1" AS "LogProba_8_1", "DT_Output_8"."Decision" AS "Decision_8" 
FROM "DT_Output_8"), 
"DT_node_lookup_9" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anova_output_4 <= -0.6154347658157349) THEN 1 ELSE 2 END AS node_id_2 
FROM "ADS_ano_2_OUT"), 
"DT_node_data_9" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Proba_-1" AS "Proba_-1", "Values"."LogProba_-1" AS "LogProba_-1", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'anova_output_4' AS feature, -0.6154347658157349 AS threshold, 100 AS count, 0 AS depth, 0.49999999999999994 AS "Proba_-1", -0.69314718056 AS "LogProba_-1", 0.5000000000000001 AS "Proba_1", -0.69314718056 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 24 AS count, 1 AS depth, 0.7118017848962838 AS "Proba_-1", -0.339955798328 AS "LogProba_-1", 0.2881982151037161 AS "Proba_1", -1.24410678869 AS "LogProba_1", -1 AS "Decision" UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 76 AS count, 1 AS depth, 0.4374562535947051 AS "Proba_-1", -0.826778569968 AS "LogProba_-1", 0.5625437464052949 AS "Proba_1", -0.57528637654 AS "LogProba_1", 1 AS "Decision") AS "Values"), 
"DT_Output_9" AS 
(SELECT "DT_node_lookup_9"."KEY" AS "KEY", "DT_node_lookup_9".node_id_2 AS node_id_2, "DT_node_data_9".node_id AS node_id, "DT_node_data_9".feature AS feature, "DT_node_data_9".threshold AS threshold, "DT_node_data_9".count AS count, "DT_node_data_9".depth AS depth, "DT_node_data_9"."Proba_-1" AS "Proba_-1", "DT_node_data_9"."LogProba_-1" AS "LogProba_-1", "DT_node_data_9"."Proba_1" AS "Proba_1", "DT_node_data_9"."LogProba_1" AS "LogProba_1", "DT_node_data_9"."Decision" AS "Decision" 
FROM "DT_node_lookup_9" LEFT OUTER JOIN "DT_node_data_9" ON "DT_node_lookup_9".node_id_2 = "DT_node_data_9".node_id), 
"AdaBoost_Estim_9" AS 
(SELECT "DT_Output_9"."KEY" AS join_key_9, CAST(NULL AS FLOAT) AS "Score_9_-1", "DT_Output_9"."Proba_-1" AS "Proba_9_-1", "DT_Output_9"."LogProba_-1" AS "LogProba_9_-1", CAST(NULL AS FLOAT) AS "Score_9_1", "DT_Output_9"."Proba_1" AS "Proba_9_1", "DT_Output_9"."LogProba_1" AS "LogProba_9_1", "DT_Output_9"."Decision" AS "Decision_9" 
FROM "DT_Output_9"), 
"DT_node_lookup_10" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anova_output_5 <= -1.630774974822998) THEN 1 ELSE 2 END AS node_id_2 
FROM "ADS_ano_2_OUT"), 
"DT_node_data_10" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Proba_-1" AS "Proba_-1", "Values"."LogProba_-1" AS "LogProba_-1", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'anova_output_5' AS feature, -1.630774974822998 AS threshold, 100 AS count, 0 AS depth, 0.4999999999999999 AS "Proba_-1", -0.69314718056 AS "LogProba_-1", 0.5000000000000002 AS "Proba_1", -0.69314718056 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 1 AS depth, 0.0 AS "Proba_-1", -1.79769313486231e+308 AS "LogProba_-1", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 97 AS count, 1 AS depth, 0.524047482390885 AS "Proba_-1", -0.646172983517 AS "LogProba_-1", 0.47595251760911494 AS "Proba_1", -0.742437182648 AS "LogProba_1", -1 AS "Decision") AS "Values"), 
"DT_Output_10" AS 
(SELECT "DT_node_lookup_10"."KEY" AS "KEY", "DT_node_lookup_10".node_id_2 AS node_id_2, "DT_node_data_10".node_id AS node_id, "DT_node_data_10".feature AS feature, "DT_node_data_10".threshold AS threshold, "DT_node_data_10".count AS count, "DT_node_data_10".depth AS depth, "DT_node_data_10"."Proba_-1" AS "Proba_-1", "DT_node_data_10"."LogProba_-1" AS "LogProba_-1", "DT_node_data_10"."Proba_1" AS "Proba_1", "DT_node_data_10"."LogProba_1" AS "LogProba_1", "DT_node_data_10"."Decision" AS "Decision" 
FROM "DT_node_lookup_10" LEFT OUTER JOIN "DT_node_data_10" ON "DT_node_lookup_10".node_id_2 = "DT_node_data_10".node_id), 
"AdaBoost_Estim_10" AS 
(SELECT "DT_Output_10"."KEY" AS join_key_10, CAST(NULL AS FLOAT) AS "Score_10_-1", "DT_Output_10"."Proba_-1" AS "Proba_10_-1", "DT_Output_10"."LogProba_-1" AS "LogProba_10_-1", CAST(NULL AS FLOAT) AS "Score_10_1", "DT_Output_10"."Proba_1" AS "Proba_10_1", "DT_Output_10"."LogProba_1" AS "LogProba_10_1", "DT_Output_10"."Decision" AS "Decision_10" 
FROM "DT_Output_10"), 
"DT_node_lookup_11" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anova_output_2 <= -0.13248534500598907) THEN 1 ELSE 2 END AS node_id_2 
FROM "ADS_ano_2_OUT"), 
"DT_node_data_11" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Proba_-1" AS "Proba_-1", "Values"."LogProba_-1" AS "LogProba_-1", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'anova_output_2' AS feature, -0.13248534500598907 AS threshold, 100 AS count, 0 AS depth, 0.4999999996412496 AS "Proba_-1", -0.693147181277 AS "LogProba_-1", 0.5000000003587504 AS "Proba_1", -0.693147179842 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 44 AS count, 1 AS depth, 0.36180823480340024 AS "Proba_-1", -1.01664094563 AS "LogProba_-1", 0.6381917651965997 AS "Proba_1", -0.449116468392 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 56 AS count, 1 AS depth, 0.5850118834784022 AS "Proba_-1", -0.536123118318 AS "LogProba_-1", 0.41498811652159795 AS "Proba_1", -0.879505394049 AS "LogProba_1", -1 AS "Decision") AS "Values"), 
"DT_Output_11" AS 
(SELECT "DT_node_lookup_11"."KEY" AS "KEY", "DT_node_lookup_11".node_id_2 AS node_id_2, "DT_node_data_11".node_id AS node_id, "DT_node_data_11".feature AS feature, "DT_node_data_11".threshold AS threshold, "DT_node_data_11".count AS count, "DT_node_data_11".depth AS depth, "DT_node_data_11"."Proba_-1" AS "Proba_-1", "DT_node_data_11"."LogProba_-1" AS "LogProba_-1", "DT_node_data_11"."Proba_1" AS "Proba_1", "DT_node_data_11"."LogProba_1" AS "LogProba_1", "DT_node_data_11"."Decision" AS "Decision" 
FROM "DT_node_lookup_11" LEFT OUTER JOIN "DT_node_data_11" ON "DT_node_lookup_11".node_id_2 = "DT_node_data_11".node_id), 
"AdaBoost_Estim_11" AS 
(SELECT "DT_Output_11"."KEY" AS join_key_11, CAST(NULL AS FLOAT) AS "Score_11_-1", "DT_Output_11"."Proba_-1" AS "Proba_11_-1", "DT_Output_11"."LogProba_-1" AS "LogProba_11_-1", CAST(NULL AS FLOAT) AS "Score_11_1", "DT_Output_11"."Proba_1" AS "Proba_11_1", "DT_Output_11"."LogProba_1" AS "LogProba_11_1", "DT_Output_11"."Decision" AS "Decision_11" 
FROM "DT_Output_11"), 
"AdaBoost_Join_CTE" AS 
(SELECT "AdaBoost_Estim_0".join_key_0 AS join_key_0, "AdaBoost_Estim_0"."Score_0_-1" AS "Score_0_-1", "AdaBoost_Estim_0"."Proba_0_-1" AS "Proba_0_-1", "AdaBoost_Estim_0"."LogProba_0_-1" AS "LogProba_0_-1", "AdaBoost_Estim_0"."Score_0_1" AS "Score_0_1", "AdaBoost_Estim_0"."Proba_0_1" AS "Proba_0_1", "AdaBoost_Estim_0"."LogProba_0_1" AS "LogProba_0_1", "AdaBoost_Estim_0"."Decision_0" AS "Decision_0", "AdaBoost_Estim_1".join_key_1 AS join_key_1, "AdaBoost_Estim_1"."Score_1_-1" AS "Score_1_-1", "AdaBoost_Estim_1"."Proba_1_-1" AS "Proba_1_-1", "AdaBoost_Estim_1"."LogProba_1_-1" AS "LogProba_1_-1", "AdaBoost_Estim_1"."Score_1_1" AS "Score_1_1", "AdaBoost_Estim_1"."Proba_1_1" AS "Proba_1_1", "AdaBoost_Estim_1"."LogProba_1_1" AS "LogProba_1_1", "AdaBoost_Estim_1"."Decision_1" AS "Decision_1", "AdaBoost_Estim_2".join_key_2 AS join_key_2, "AdaBoost_Estim_2"."Score_2_-1" AS "Score_2_-1", "AdaBoost_Estim_2"."Proba_2_-1" AS "Proba_2_-1", "AdaBoost_Estim_2"."LogProba_2_-1" AS "LogProba_2_-1", "AdaBoost_Estim_2"."Score_2_1" AS "Score_2_1", "AdaBoost_Estim_2"."Proba_2_1" AS "Proba_2_1", "AdaBoost_Estim_2"."LogProba_2_1" AS "LogProba_2_1", "AdaBoost_Estim_2"."Decision_2" AS "Decision_2", "AdaBoost_Estim_3".join_key_3 AS join_key_3, "AdaBoost_Estim_3"."Score_3_-1" AS "Score_3_-1", "AdaBoost_Estim_3"."Proba_3_-1" AS "Proba_3_-1", "AdaBoost_Estim_3"."LogProba_3_-1" AS "LogProba_3_-1", "AdaBoost_Estim_3"."Score_3_1" AS "Score_3_1", "AdaBoost_Estim_3"."Proba_3_1" AS "Proba_3_1", "AdaBoost_Estim_3"."LogProba_3_1" AS "LogProba_3_1", "AdaBoost_Estim_3"."Decision_3" AS "Decision_3", "AdaBoost_Estim_4".join_key_4 AS join_key_4, "AdaBoost_Estim_4"."Score_4_-1" AS "Score_4_-1", "AdaBoost_Estim_4"."Proba_4_-1" AS "Proba_4_-1", "AdaBoost_Estim_4"."LogProba_4_-1" AS "LogProba_4_-1", "AdaBoost_Estim_4"."Score_4_1" AS "Score_4_1", "AdaBoost_Estim_4"."Proba_4_1" AS "Proba_4_1", "AdaBoost_Estim_4"."LogProba_4_1" AS "LogProba_4_1", "AdaBoost_Estim_4"."Decision_4" AS "Decision_4", "AdaBoost_Estim_5".join_key_5 AS join_key_5, "AdaBoost_Estim_5"."Score_5_-1" AS "Score_5_-1", "AdaBoost_Estim_5"."Proba_5_-1" AS "Proba_5_-1", "AdaBoost_Estim_5"."LogProba_5_-1" AS "LogProba_5_-1", "AdaBoost_Estim_5"."Score_5_1" AS "Score_5_1", "AdaBoost_Estim_5"."Proba_5_1" AS "Proba_5_1", "AdaBoost_Estim_5"."LogProba_5_1" AS "LogProba_5_1", "AdaBoost_Estim_5"."Decision_5" AS "Decision_5", "AdaBoost_Estim_6".join_key_6 AS join_key_6, "AdaBoost_Estim_6"."Score_6_-1" AS "Score_6_-1", "AdaBoost_Estim_6"."Proba_6_-1" AS "Proba_6_-1", "AdaBoost_Estim_6"."LogProba_6_-1" AS "LogProba_6_-1", "AdaBoost_Estim_6"."Score_6_1" AS "Score_6_1", "AdaBoost_Estim_6"."Proba_6_1" AS "Proba_6_1", "AdaBoost_Estim_6"."LogProba_6_1" AS "LogProba_6_1", "AdaBoost_Estim_6"."Decision_6" AS "Decision_6", "AdaBoost_Estim_7".join_key_7 AS join_key_7, "AdaBoost_Estim_7"."Score_7_-1" AS "Score_7_-1", "AdaBoost_Estim_7"."Proba_7_-1" AS "Proba_7_-1", "AdaBoost_Estim_7"."LogProba_7_-1" AS "LogProba_7_-1", "AdaBoost_Estim_7"."Score_7_1" AS "Score_7_1", "AdaBoost_Estim_7"."Proba_7_1" AS "Proba_7_1", "AdaBoost_Estim_7"."LogProba_7_1" AS "LogProba_7_1", "AdaBoost_Estim_7"."Decision_7" AS "Decision_7", "AdaBoost_Estim_8".join_key_8 AS join_key_8, "AdaBoost_Estim_8"."Score_8_-1" AS "Score_8_-1", "AdaBoost_Estim_8"."Proba_8_-1" AS "Proba_8_-1", "AdaBoost_Estim_8"."LogProba_8_-1" AS "LogProba_8_-1", "AdaBoost_Estim_8"."Score_8_1" AS "Score_8_1", "AdaBoost_Estim_8"."Proba_8_1" AS "Proba_8_1", "AdaBoost_Estim_8"."LogProba_8_1" AS "LogProba_8_1", "AdaBoost_Estim_8"."Decision_8" AS "Decision_8", "AdaBoost_Estim_9".join_key_9 AS join_key_9, "AdaBoost_Estim_9"."Score_9_-1" AS "Score_9_-1", "AdaBoost_Estim_9"."Proba_9_-1" AS "Proba_9_-1", "AdaBoost_Estim_9"."LogProba_9_-1" AS "LogProba_9_-1", "AdaBoost_Estim_9"."Score_9_1" AS "Score_9_1", "AdaBoost_Estim_9"."Proba_9_1" AS "Proba_9_1", "AdaBoost_Estim_9"."LogProba_9_1" AS "LogProba_9_1", "AdaBoost_Estim_9"."Decision_9" AS "Decision_9", "AdaBoost_Estim_10".join_key_10 AS join_key_10, "AdaBoost_Estim_10"."Score_10_-1" AS "Score_10_-1", "AdaBoost_Estim_10"."Proba_10_-1" AS "Proba_10_-1", "AdaBoost_Estim_10"."LogProba_10_-1" AS "LogProba_10_-1", "AdaBoost_Estim_10"."Score_10_1" AS "Score_10_1", "AdaBoost_Estim_10"."Proba_10_1" AS "Proba_10_1", "AdaBoost_Estim_10"."LogProba_10_1" AS "LogProba_10_1", "AdaBoost_Estim_10"."Decision_10" AS "Decision_10", "AdaBoost_Estim_11".join_key_11 AS join_key_11, "AdaBoost_Estim_11"."Score_11_-1" AS "Score_11_-1", "AdaBoost_Estim_11"."Proba_11_-1" AS "Proba_11_-1", "AdaBoost_Estim_11"."LogProba_11_-1" AS "LogProba_11_-1", "AdaBoost_Estim_11"."Score_11_1" AS "Score_11_1", "AdaBoost_Estim_11"."Proba_11_1" AS "Proba_11_1", "AdaBoost_Estim_11"."LogProba_11_1" AS "LogProba_11_1", "AdaBoost_Estim_11"."Decision_11" AS "Decision_11" 
FROM "AdaBoost_Estim_0" LEFT OUTER JOIN "AdaBoost_Estim_1" ON "AdaBoost_Estim_0".join_key_0 = "AdaBoost_Estim_1".join_key_1 LEFT OUTER JOIN "AdaBoost_Estim_2" ON "AdaBoost_Estim_2".join_key_2 = "AdaBoost_Estim_1".join_key_1 LEFT OUTER JOIN "AdaBoost_Estim_3" ON "AdaBoost_Estim_3".join_key_3 = "AdaBoost_Estim_2".join_key_2 LEFT OUTER JOIN "AdaBoost_Estim_4" ON "AdaBoost_Estim_4".join_key_4 = "AdaBoost_Estim_3".join_key_3 LEFT OUTER JOIN "AdaBoost_Estim_5" ON "AdaBoost_Estim_5".join_key_5 = "AdaBoost_Estim_4".join_key_4 LEFT OUTER JOIN "AdaBoost_Estim_6" ON "AdaBoost_Estim_6".join_key_6 = "AdaBoost_Estim_5".join_key_5 LEFT OUTER JOIN "AdaBoost_Estim_7" ON "AdaBoost_Estim_7".join_key_7 = "AdaBoost_Estim_6".join_key_6 LEFT OUTER JOIN "AdaBoost_Estim_8" ON "AdaBoost_Estim_8".join_key_8 = "AdaBoost_Estim_7".join_key_7 LEFT OUTER JOIN "AdaBoost_Estim_9" ON "AdaBoost_Estim_9".join_key_9 = "AdaBoost_Estim_8".join_key_8 LEFT OUTER JOIN "AdaBoost_Estim_10" ON "AdaBoost_Estim_10".join_key_10 = "AdaBoost_Estim_9".join_key_9 LEFT OUTER JOIN "AdaBoost_Estim_11" ON "AdaBoost_Estim_11".join_key_11 = "AdaBoost_Estim_10".join_key_10), 
"AdaBoost_AVG_Scores_BN" AS 
(SELECT "AdaBoost_Join_CTE".join_key_0 AS "KEY", (1.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_-1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_-1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_1") ELSE -1.79769313486231e+308 END END) / 2)) / 12.0 + (1.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_-1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_-1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_1") ELSE -1.79769313486231e+308 END END) / 2)) / 12.0 + (1.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_-1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_-1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_1") ELSE -1.79769313486231e+308 END END) / 2)) / 12.0 + (1.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_-1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_-1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_1") ELSE -1.79769313486231e+308 END END) / 2)) / 12.0 + (1.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_-1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_-1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_1") ELSE -1.79769313486231e+308 END END) / 2)) / 12.0 + (1.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_-1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_-1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_1") ELSE -1.79769313486231e+308 END END) / 2)) / 12.0 + (1.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_6_-1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_6_-1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_6_1") ELSE -1.79769313486231e+308 END END) / 2)) / 12.0 + (1.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_7_-1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_7_-1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_7_1") ELSE -1.79769313486231e+308 END END) / 2)) / 12.0 + (1.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_8_-1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_8_-1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_8_1") ELSE -1.79769313486231e+308 END END) / 2)) / 12.0 + (1.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_9_-1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_9_-1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_9_1") ELSE -1.79769313486231e+308 END END) / 2)) / 12.0 + (1.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_10_-1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_10_-1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_10_1") ELSE -1.79769313486231e+308 END END) / 2)) / 12.0 + (1.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_11_-1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_11_-1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_11_1") ELSE -1.79769313486231e+308 END END) / 2)) / 12.0 AS "Score_-1", 1.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_-1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_-1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_1") ELSE -1.79769313486231e+308 END END) / 2) + 1.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_-1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_-1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_1") ELSE -1.79769313486231e+308 END END) / 2) + 1.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_-1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_-1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_1") ELSE -1.79769313486231e+308 END END) / 2) + 1.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_-1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_-1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_1") ELSE -1.79769313486231e+308 END END) / 2) + 1.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_-1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_-1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_1") ELSE -1.79769313486231e+308 END END) / 2) + 1.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_-1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_-1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_1") ELSE -1.79769313486231e+308 END END) / 2) + 1.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_6_-1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_6_-1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_6_1") ELSE -1.79769313486231e+308 END END) / 2) + 1.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_7_-1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_7_-1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_7_1") ELSE -1.79769313486231e+308 END END) / 2) + 1.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_8_-1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_8_-1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_8_1") ELSE -1.79769313486231e+308 END END) / 2) + 1.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_9_-1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_9_-1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_9_1") ELSE -1.79769313486231e+308 END END) / 2) + 1.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_10_-1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_10_-1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_10_1") ELSE -1.79769313486231e+308 END END) / 2) + 1.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_11_-1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_11_-1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_11_1") ELSE -1.79769313486231e+308 END END) / 2) AS "Proba_-1", (1.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_-1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_1") ELSE -1.79769313486231e+308 END END) / 2)) / 12.0 + (1.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_-1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_1") ELSE -1.79769313486231e+308 END END) / 2)) / 12.0 + (1.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_-1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_1") ELSE -1.79769313486231e+308 END END) / 2)) / 12.0 + (1.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_-1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_1") ELSE -1.79769313486231e+308 END END) / 2)) / 12.0 + (1.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_-1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_1") ELSE -1.79769313486231e+308 END END) / 2)) / 12.0 + (1.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_-1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_1") ELSE -1.79769313486231e+308 END END) / 2)) / 12.0 + (1.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_6_1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_6_-1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_6_1") ELSE -1.79769313486231e+308 END END) / 2)) / 12.0 + (1.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_7_1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_7_-1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_7_1") ELSE -1.79769313486231e+308 END END) / 2)) / 12.0 + (1.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_8_1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_8_-1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_8_1") ELSE -1.79769313486231e+308 END END) / 2)) / 12.0 + (1.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_9_1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_9_-1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_9_1") ELSE -1.79769313486231e+308 END END) / 2)) / 12.0 + (1.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_10_1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_10_-1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_10_1") ELSE -1.79769313486231e+308 END END) / 2)) / 12.0 + (1.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_11_1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_11_-1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_11_1") ELSE -1.79769313486231e+308 END END) / 2)) / 12.0 AS "Score_1", 1.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_-1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_1") ELSE -1.79769313486231e+308 END END) / 2) + 1.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_-1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_1") ELSE -1.79769313486231e+308 END END) / 2) + 1.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_-1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_1") ELSE -1.79769313486231e+308 END END) / 2) + 1.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_-1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_1") ELSE -1.79769313486231e+308 END END) / 2) + 1.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_-1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_1") ELSE -1.79769313486231e+308 END END) / 2) + 1.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_-1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_1") ELSE -1.79769313486231e+308 END END) / 2) + 1.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_6_1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_6_-1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_6_1") ELSE -1.79769313486231e+308 END END) / 2) + 1.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_7_1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_7_-1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_7_1") ELSE -1.79769313486231e+308 END END) / 2) + 1.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_8_1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_8_-1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_8_1") ELSE -1.79769313486231e+308 END END) / 2) + 1.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_9_1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_9_-1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_9_1") ELSE -1.79769313486231e+308 END END) / 2) + 1.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_10_1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_10_-1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_10_1") ELSE -1.79769313486231e+308 END END) / 2) + 1.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_11_1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_-1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_-1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_11_-1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_11_1") ELSE -1.79769313486231e+308 END END) / 2) AS "Proba_1" 
FROM "AdaBoost_Join_CTE"), 
"AdaBoost_AVG_Scores" AS 
(SELECT "AdaBoost_AVG_Scores_BN"."KEY" AS "KEY", "AdaBoost_AVG_Scores_BN"."Score_-1" AS "Score_-1", exp(("AdaBoost_AVG_Scores_BN"."Proba_-1" / 12.0) / 1) / (exp(("AdaBoost_AVG_Scores_BN"."Proba_-1" / 12.0) / 1) + exp(("AdaBoost_AVG_Scores_BN"."Proba_1" / 12.0) / 1)) AS "Proba_-1", CAST(NULL AS FLOAT) AS "LogProba_-1", "AdaBoost_AVG_Scores_BN"."Score_1" AS "Score_1", exp(("AdaBoost_AVG_Scores_BN"."Proba_1" / 12.0) / 1) / (exp(("AdaBoost_AVG_Scores_BN"."Proba_-1" / 12.0) / 1) + exp(("AdaBoost_AVG_Scores_BN"."Proba_1" / 12.0) / 1)) AS "Proba_1", CAST(NULL AS FLOAT) AS "LogProba_1" 
FROM "AdaBoost_AVG_Scores_BN"), 
orig_cte AS 
(SELECT "AdaBoost_AVG_Scores"."KEY" AS "KEY", "AdaBoost_AVG_Scores"."Score_-1" AS "Score_-1", "AdaBoost_AVG_Scores"."Score_1" AS "Score_1", "AdaBoost_AVG_Scores"."Proba_-1" AS "Proba_-1", "AdaBoost_AVG_Scores"."Proba_1" AS "Proba_1", "AdaBoost_AVG_Scores"."LogProba_-1" AS "LogProba_-1", "AdaBoost_AVG_Scores"."LogProba_1" AS "LogProba_1", CAST(NULL AS FLOAT(53)) AS "Decision" 
FROM "AdaBoost_AVG_Scores"), 
score_class_union AS 
(SELECT scu."KEY" AS "KEY", scu.class AS class, scu."LogProba" AS "LogProba", scu."Proba" AS "Proba", scu."Score" AS "Score" 
FROM (SELECT orig_cte."KEY" AS "KEY", -1 AS class, orig_cte."LogProba_-1" AS "LogProba", orig_cte."Proba_-1" AS "Proba", orig_cte."Score_-1" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 1 AS class, orig_cte."LogProba_1" AS "LogProba", orig_cte."Proba_1" AS "Proba", orig_cte."Score_1" AS "Score" 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte."KEY" AS "KEY", orig_cte."Score_-1" AS "Score_-1", orig_cte."Score_1" AS "Score_1", orig_cte."Proba_-1" AS "Proba_-1", orig_cte."Proba_1" AS "Proba_1", orig_cte."LogProba_-1" AS "LogProba_-1", orig_cte."LogProba_1" AS "LogProba_1", orig_cte."Decision" AS "Decision", (SELECT max(score_class_union."LogProba") AS max_1 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_LogProba", (SELECT max(score_class_union."Proba") AS max_2 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_Proba", (SELECT max(score_class_union."Score") AS max_3 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_Score" 
FROM orig_cte), 
arg_max_cte AS 
(SELECT score_max."KEY" AS "KEY", score_max."Score_-1" AS "Score_-1", score_max."Score_1" AS "Score_1", score_max."Proba_-1" AS "Proba_-1", score_max."Proba_1" AS "Proba_1", score_max."LogProba_-1" AS "LogProba_-1", score_max."LogProba_1" AS "LogProba_1", score_max."Decision" AS "Decision", score_max."max_LogProba" AS "max_LogProba", score_max."max_Proba" AS "max_Proba", score_max."max_Score" AS "max_Score", (SELECT min(score_class_union.class) AS min_1 
FROM score_class_union 
WHERE score_max."max_LogProba" = score_class_union."LogProba" AND score_max."KEY" = score_class_union."KEY") AS "arg_max_LogProba", (SELECT min(score_class_union.class) AS min_2 
FROM score_class_union 
WHERE score_max."max_Proba" = score_class_union."Proba" AND score_max."KEY" = score_class_union."KEY") AS "arg_max_Proba", (SELECT min(score_class_union.class) AS min_3 
FROM score_class_union 
WHERE score_max."max_Score" = score_class_union."Score" AND score_max."KEY" = score_class_union."KEY") AS "arg_max_Score" 
FROM score_max)
 SELECT arg_max_cte."KEY" AS "KEY", arg_max_cte."Score_-1" AS "Score_-1", arg_max_cte."Score_1" AS "Score_1", arg_max_cte."Proba_-1" AS "Proba_-1", arg_max_cte."Proba_1" AS "Proba_1", CASE WHEN (arg_max_cte."Proba_-1" > 0.0) THEN ln(arg_max_cte."Proba_-1") ELSE -1.79769313486231e+308 END AS "LogProba_-1", CASE WHEN (arg_max_cte."Proba_1" > 0.0) THEN ln(arg_max_cte."Proba_1") ELSE -1.79769313486231e+308 END AS "LogProba_1", arg_max_cte."arg_max_Score" AS "Decision" 
FROM arg_max_cte