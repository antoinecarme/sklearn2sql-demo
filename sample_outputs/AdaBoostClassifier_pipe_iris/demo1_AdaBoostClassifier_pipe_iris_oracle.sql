-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH "ADS_imp_1_OUT" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" IS NULL) THEN 5.84333333333 ELSE "ADS"."Feature_0" END AS impute_output_2, CASE WHEN ("ADS"."Feature_1" IS NULL) THEN 3.054 ELSE "ADS"."Feature_1" END AS impute_output_3, CASE WHEN ("ADS"."Feature_2" IS NULL) THEN 3.75866666667 ELSE "ADS"."Feature_2" END AS impute_output_4, CASE WHEN ("ADS"."Feature_3" IS NULL) THEN 1.19866666667 ELSE "ADS"."Feature_3" END AS impute_output_5 
FROM "INPUT_DATA" "ADS"), 
"ADS_ano_2_OUT" AS 
(SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", ("ADS_imp_1_OUT".impute_output_2 - 5.84333333333) * 0.361589677381 + ("ADS_imp_1_OUT".impute_output_3 - 3.054) * -0.0822688898922 + ("ADS_imp_1_OUT".impute_output_4 - 3.75866666667) * 0.856572105291 + ("ADS_imp_1_OUT".impute_output_5 - 1.19866666667) * 0.358843926248 AS anova_output_2, ("ADS_imp_1_OUT".impute_output_2 - 5.84333333333) * 0.656539883286 + ("ADS_imp_1_OUT".impute_output_3 - 3.054) * 0.729712371326 + ("ADS_imp_1_OUT".impute_output_4 - 3.75866666667) * -0.175767403429 + ("ADS_imp_1_OUT".impute_output_5 - 1.19866666667) * -0.074706470135 AS anova_output_3, ("ADS_imp_1_OUT".impute_output_2 - 5.84333333333) * -0.580997279828 + ("ADS_imp_1_OUT".impute_output_3 - 3.054) * 0.596418087938 + ("ADS_imp_1_OUT".impute_output_4 - 3.75866666667) * 0.072524075487 + ("ADS_imp_1_OUT".impute_output_5 - 1.19866666667) * 0.549060910727 AS anova_output_4, ("ADS_imp_1_OUT".impute_output_2 - 5.84333333333) * 0.317254547169 + ("ADS_imp_1_OUT".impute_output_3 - 3.054) * -0.324094352418 + ("ADS_imp_1_OUT".impute_output_4 - 3.75866666667) * -0.47971898733 + ("ADS_imp_1_OUT".impute_output_5 - 1.19866666667) * 0.751120560381 AS anova_output_5 
FROM "ADS_imp_1_OUT"), 
"DT_node_lookup" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anova_output_2 <= -1.5537705421447754) THEN 1 ELSE 2 END AS node_id_2 
FROM "ADS_ano_2_OUT"), 
"DT_node_data" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Proba_2" AS "Proba_2", "Values"."LogProba_2" AS "LogProba_2", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'anova_output_2' AS feature, -1.5537705421447754 AS threshold, 150 AS count, 0 AS depth, 0.33333333333333337 AS "Proba_0", -1.09861228867 AS "LogProba_0", 0.33333333333333337 AS "Proba_1", -1.09861228867 AS "LogProba_1", 0.33333333333333337 AS "Proba_2", -1.09861228867 AS "LogProba_2", 0 AS "Decision" FROM DUAL UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 50 AS count, 1 AS depth, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_FLOAT_INFINITY AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_FLOAT_INFINITY AS "LogProba_2", 0 AS "Decision" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 100 AS count, 1 AS depth, 0.0 AS "Proba_0", -BINARY_FLOAT_INFINITY AS "LogProba_0", 0.5 AS "Proba_1", -0.69314718056 AS "LogProba_1", 0.5 AS "Proba_2", -0.69314718056 AS "LogProba_2", 1 AS "Decision" FROM DUAL) "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".node_id AS node_id, "DT_node_data".feature AS feature, "DT_node_data".threshold AS threshold, "DT_node_data".count AS count, "DT_node_data".depth AS depth, "DT_node_data"."Proba_0" AS "Proba_0", "DT_node_data"."LogProba_0" AS "LogProba_0", "DT_node_data"."Proba_1" AS "Proba_1", "DT_node_data"."LogProba_1" AS "LogProba_1", "DT_node_data"."Proba_2" AS "Proba_2", "DT_node_data"."LogProba_2" AS "LogProba_2", "DT_node_data"."Decision" AS "Decision" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".node_id), 
"AdaBoost_Estim_0" AS 
(SELECT "DT_Output"."KEY" AS join_key_0, CAST(NULL AS FLOAT) AS "Score_0_0", "DT_Output"."Proba_0" AS "Proba_0_0", "DT_Output"."LogProba_0" AS "LogProba_0_0", CAST(NULL AS FLOAT) AS "Score_0_1", "DT_Output"."Proba_1" AS "Proba_0_1", "DT_Output"."LogProba_1" AS "LogProba_0_1", CAST(NULL AS FLOAT) AS "Score_0_2", "DT_Output"."Proba_2" AS "Proba_0_2", "DT_Output"."LogProba_2" AS "LogProba_0_2", "DT_Output"."Decision" AS "Decision_0" 
FROM "DT_Output"), 
"DT_node_lookup_1" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anova_output_2 <= 1.1425471305847168) THEN 1 ELSE 2 END AS node_id_2 
FROM "ADS_ano_2_OUT"), 
"DT_node_data_1" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Proba_2" AS "Proba_2", "Values"."LogProba_2" AS "LogProba_2", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'anova_output_2' AS feature, 1.1425471305847168 AS threshold, 150 AS count, 0 AS depth, 2.4031029170511716e-06 AS "Proba_0", -12.9387497736 AS "LogProba_0", 0.4999987984485415 AS "Proba_1", -0.693149583666 AS "LogProba_1", 0.4999987984485415 AS "Proba_2", -0.693149583666 AS "LogProba_2", 1 AS "Decision" FROM DUAL UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 94 AS count, 1 AS depth, 5.4615808345370545e-06 AS "Proba_0", -12.11777228 AS "LogProba_0", 0.9772673898187298 AS "Proba_1", -0.0229949798204 AS "LogProba_1", 0.022727148600435555 AS "Proba_2", -3.78419509551 AS "LogProba_2", 1 AS "Decision" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 56 AS count, 1 AS depth, 0.0 AS "Proba_0", -BINARY_FLOAT_INFINITY AS "LogProba_0", 0.12499999999999988 AS "Proba_1", -2.07944154168 AS "LogProba_1", 0.875 AS "Proba_2", -0.133531392625 AS "LogProba_2", 2 AS "Decision" FROM DUAL) "Values"), 
"DT_Output_1" AS 
(SELECT "DT_node_lookup_1"."KEY" AS "KEY", "DT_node_lookup_1".node_id_2 AS node_id_2, "DT_node_data_1".node_id AS node_id, "DT_node_data_1".feature AS feature, "DT_node_data_1".threshold AS threshold, "DT_node_data_1".count AS count, "DT_node_data_1".depth AS depth, "DT_node_data_1"."Proba_0" AS "Proba_0", "DT_node_data_1"."LogProba_0" AS "LogProba_0", "DT_node_data_1"."Proba_1" AS "Proba_1", "DT_node_data_1"."LogProba_1" AS "LogProba_1", "DT_node_data_1"."Proba_2" AS "Proba_2", "DT_node_data_1"."LogProba_2" AS "LogProba_2", "DT_node_data_1"."Decision" AS "Decision" 
FROM "DT_node_lookup_1" LEFT OUTER JOIN "DT_node_data_1" ON "DT_node_lookup_1".node_id_2 = "DT_node_data_1".node_id), 
"AdaBoost_Estim_1" AS 
(SELECT "DT_Output_1"."KEY" AS join_key_1, CAST(NULL AS FLOAT) AS "Score_1_0", "DT_Output_1"."Proba_0" AS "Proba_1_0", "DT_Output_1"."LogProba_0" AS "LogProba_1_0", CAST(NULL AS FLOAT) AS "Score_1_1", "DT_Output_1"."Proba_1" AS "Proba_1_1", "DT_Output_1"."LogProba_1" AS "LogProba_1_1", CAST(NULL AS FLOAT) AS "Score_1_2", "DT_Output_1"."Proba_2" AS "Proba_1_2", "DT_Output_1"."LogProba_2" AS "LogProba_1_2", "DT_Output_1"."Decision" AS "Decision_1" 
FROM "DT_Output_1"), 
"DT_node_lookup_2" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anova_output_2 <= -1.5537705421447754) THEN 1 ELSE 2 END AS node_id_2 
FROM "ADS_ano_2_OUT"), 
"DT_node_data_2" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Proba_2" AS "Proba_2", "Values"."LogProba_2" AS "LogProba_2", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'anova_output_2' AS feature, -1.5537705421447754 AS threshold, 150 AS count, 0 AS depth, 0.33316796000336274 AS "Proba_0", -1.09910853177 AS "LogProba_0", 0.33341601999831805 AS "Proba_1", -1.09836425943 AS "LogProba_1", 0.33341601999831944 AS "Proba_2", -1.09836425943 AS "LogProba_2", 2 AS "Decision" FROM DUAL UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 50 AS count, 1 AS depth, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_FLOAT_INFINITY AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_FLOAT_INFINITY AS "LogProba_2", 0 AS "Decision" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 100 AS count, 1 AS depth, 0.0 AS "Proba_0", -BINARY_FLOAT_INFINITY AS "LogProba_0", 0.49999999999999967 AS "Proba_1", -0.69314718056 AS "LogProba_1", 0.5000000000000003 AS "Proba_2", -0.69314718056 AS "LogProba_2", 2 AS "Decision" FROM DUAL) "Values"), 
"DT_Output_2" AS 
(SELECT "DT_node_lookup_2"."KEY" AS "KEY", "DT_node_lookup_2".node_id_2 AS node_id_2, "DT_node_data_2".node_id AS node_id, "DT_node_data_2".feature AS feature, "DT_node_data_2".threshold AS threshold, "DT_node_data_2".count AS count, "DT_node_data_2".depth AS depth, "DT_node_data_2"."Proba_0" AS "Proba_0", "DT_node_data_2"."LogProba_0" AS "LogProba_0", "DT_node_data_2"."Proba_1" AS "Proba_1", "DT_node_data_2"."LogProba_1" AS "LogProba_1", "DT_node_data_2"."Proba_2" AS "Proba_2", "DT_node_data_2"."LogProba_2" AS "LogProba_2", "DT_node_data_2"."Decision" AS "Decision" 
FROM "DT_node_lookup_2" LEFT OUTER JOIN "DT_node_data_2" ON "DT_node_lookup_2".node_id_2 = "DT_node_data_2".node_id), 
"AdaBoost_Estim_2" AS 
(SELECT "DT_Output_2"."KEY" AS join_key_2, CAST(NULL AS FLOAT) AS "Score_2_0", "DT_Output_2"."Proba_0" AS "Proba_2_0", "DT_Output_2"."LogProba_0" AS "LogProba_2_0", CAST(NULL AS FLOAT) AS "Score_2_1", "DT_Output_2"."Proba_1" AS "Proba_2_1", "DT_Output_2"."LogProba_1" AS "LogProba_2_1", CAST(NULL AS FLOAT) AS "Score_2_2", "DT_Output_2"."Proba_2" AS "Proba_2_2", "DT_Output_2"."LogProba_2" AS "LogProba_2_2", "DT_Output_2"."Decision" AS "Decision_2" 
FROM "DT_Output_2"), 
"DT_node_lookup_3" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anova_output_4 <= 0.46999114751815796) THEN 1 ELSE 2 END AS node_id_2 
FROM "ADS_ano_2_OUT"), 
"DT_node_data_3" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Proba_2" AS "Proba_2", "Values"."LogProba_2" AS "LogProba_2", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'anova_output_4' AS feature, 0.46999114751815796 AS threshold, 150 AS count, 0 AS depth, 2.401315023757898e-06 AS "Proba_0", -12.9394940441 AS "LogProba_0", 0.49999879934248836 AS "Proba_1", -0.693149581878 AS "LogProba_1", 0.49999879934248787 AS "Proba_2", -0.693149581878 AS "LogProba_2", 1 AS "Decision" FROM DUAL UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 142 AS count, 1 AS depth, 4.799557801843139e-06 AS "Proba_0", -12.2469867689 AS "LogProba_0", 0.9993578995482886 AS "Proba_1", -0.000642306686493 AS "LogProba_1", 0.0006373008939097845 AS "Proba_2", -7.35826865299 AS "LogProba_2", 1 AS "Decision" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 1 AS depth, 0.0 AS "Proba_0", -BINARY_FLOAT_INFINITY AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_FLOAT_INFINITY AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 2 AS "Decision" FROM DUAL) "Values"), 
"DT_Output_3" AS 
(SELECT "DT_node_lookup_3"."KEY" AS "KEY", "DT_node_lookup_3".node_id_2 AS node_id_2, "DT_node_data_3".node_id AS node_id, "DT_node_data_3".feature AS feature, "DT_node_data_3".threshold AS threshold, "DT_node_data_3".count AS count, "DT_node_data_3".depth AS depth, "DT_node_data_3"."Proba_0" AS "Proba_0", "DT_node_data_3"."LogProba_0" AS "LogProba_0", "DT_node_data_3"."Proba_1" AS "Proba_1", "DT_node_data_3"."LogProba_1" AS "LogProba_1", "DT_node_data_3"."Proba_2" AS "Proba_2", "DT_node_data_3"."LogProba_2" AS "LogProba_2", "DT_node_data_3"."Decision" AS "Decision" 
FROM "DT_node_lookup_3" LEFT OUTER JOIN "DT_node_data_3" ON "DT_node_lookup_3".node_id_2 = "DT_node_data_3".node_id), 
"AdaBoost_Estim_3" AS 
(SELECT "DT_Output_3"."KEY" AS join_key_3, CAST(NULL AS FLOAT) AS "Score_3_0", "DT_Output_3"."Proba_0" AS "Proba_3_0", "DT_Output_3"."LogProba_0" AS "LogProba_3_0", CAST(NULL AS FLOAT) AS "Score_3_1", "DT_Output_3"."Proba_1" AS "Proba_3_1", "DT_Output_3"."LogProba_1" AS "LogProba_3_1", CAST(NULL AS FLOAT) AS "Score_3_2", "DT_Output_3"."Proba_2" AS "Proba_3_2", "DT_Output_3"."LogProba_2" AS "LogProba_3_2", "DT_Output_3"."Decision" AS "Decision_3" 
FROM "DT_Output_3"), 
"DT_node_lookup_4" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anova_output_2 <= -1.5537705421447754) THEN 1 ELSE 2 END AS node_id_2 
FROM "ADS_ano_2_OUT"), 
"DT_node_data_4" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Proba_2" AS "Proba_2", "Values"."LogProba_2" AS "LogProba_2", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'anova_output_2' AS feature, -1.5537705421447754 AS threshold, 150 AS count, 0 AS depth, 0.3333333305295831 AS "Proba_0", -1.09861229708 AS "LogProba_0", 0.3333333305295822 AS "Proba_1", -1.09861229708 AS "LogProba_1", 0.33333333894083467 AS "Proba_2", -1.09861227185 AS "LogProba_2", 2 AS "Decision" FROM DUAL UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 50 AS count, 1 AS depth, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_FLOAT_INFINITY AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_FLOAT_INFINITY AS "LogProba_2", 0 AS "Decision" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 100 AS count, 1 AS depth, 0.0 AS "Proba_0", -BINARY_FLOAT_INFINITY AS "LogProba_0", 0.4999999936915607 AS "Proba_1", -0.693147193177 AS "LogProba_1", 0.5000000063084392 AS "Proba_2", -0.693147167943 AS "LogProba_2", 2 AS "Decision" FROM DUAL) "Values"), 
"DT_Output_4" AS 
(SELECT "DT_node_lookup_4"."KEY" AS "KEY", "DT_node_lookup_4".node_id_2 AS node_id_2, "DT_node_data_4".node_id AS node_id, "DT_node_data_4".feature AS feature, "DT_node_data_4".threshold AS threshold, "DT_node_data_4".count AS count, "DT_node_data_4".depth AS depth, "DT_node_data_4"."Proba_0" AS "Proba_0", "DT_node_data_4"."LogProba_0" AS "LogProba_0", "DT_node_data_4"."Proba_1" AS "Proba_1", "DT_node_data_4"."LogProba_1" AS "LogProba_1", "DT_node_data_4"."Proba_2" AS "Proba_2", "DT_node_data_4"."LogProba_2" AS "LogProba_2", "DT_node_data_4"."Decision" AS "Decision" 
FROM "DT_node_lookup_4" LEFT OUTER JOIN "DT_node_data_4" ON "DT_node_lookup_4".node_id_2 = "DT_node_data_4".node_id), 
"AdaBoost_Estim_4" AS 
(SELECT "DT_Output_4"."KEY" AS join_key_4, CAST(NULL AS FLOAT) AS "Score_4_0", "DT_Output_4"."Proba_0" AS "Proba_4_0", "DT_Output_4"."LogProba_0" AS "LogProba_4_0", CAST(NULL AS FLOAT) AS "Score_4_1", "DT_Output_4"."Proba_1" AS "Proba_4_1", "DT_Output_4"."LogProba_1" AS "LogProba_4_1", CAST(NULL AS FLOAT) AS "Score_4_2", "DT_Output_4"."Proba_2" AS "Proba_4_2", "DT_Output_4"."LogProba_2" AS "LogProba_4_2", "DT_Output_4"."Decision" AS "Decision_4" 
FROM "DT_Output_4"), 
"DT_node_lookup_5" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anova_output_2 <= 1.1425471305847168) THEN 1 ELSE 2 END AS node_id_2 
FROM "ADS_ano_2_OUT"), 
"DT_node_data_5" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Proba_2" AS "Proba_2", "Values"."LogProba_2" AS "LogProba_2", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'anova_output_2' AS feature, 1.1425471305847168 AS threshold, 150 AS count, 0 AS depth, 2.4031028867315925e-06 AS "Proba_0", -12.9387497862 AS "LogProba_0", 0.4999987984485567 AS "Proba_1", -0.693149583666 AS "LogProba_1", 0.4999987984485565 AS "Proba_2", -0.693149583666 AS "LogProba_2", 1 AS "Decision" FROM DUAL UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 94 AS count, 1 AS depth, 4.8097725339116254e-06 AS "Proba_0", -12.2448607652 AS "LogProba_0", 0.9999951649777312 AS "Proba_1", -4.83503395754e-06 AS "LogProba_1", 2.52497348188932e-08 AS "Proba_2", -17.4944501835 AS "LogProba_2", 1 AS "Decision" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 56 AS count, 1 AS depth, 0.0 AS "Proba_0", -BINARY_FLOAT_INFINITY AS "LogProba_0", 0.0007434423304246998 AS "Proba_1", -7.20421936007 AS "LogProba_1", 0.9992565576695752 AS "Proba_2", -0.000743718820719 AS "LogProba_2", 2 AS "Decision" FROM DUAL) "Values"), 
"DT_Output_5" AS 
(SELECT "DT_node_lookup_5"."KEY" AS "KEY", "DT_node_lookup_5".node_id_2 AS node_id_2, "DT_node_data_5".node_id AS node_id, "DT_node_data_5".feature AS feature, "DT_node_data_5".threshold AS threshold, "DT_node_data_5".count AS count, "DT_node_data_5".depth AS depth, "DT_node_data_5"."Proba_0" AS "Proba_0", "DT_node_data_5"."LogProba_0" AS "LogProba_0", "DT_node_data_5"."Proba_1" AS "Proba_1", "DT_node_data_5"."LogProba_1" AS "LogProba_1", "DT_node_data_5"."Proba_2" AS "Proba_2", "DT_node_data_5"."LogProba_2" AS "LogProba_2", "DT_node_data_5"."Decision" AS "Decision" 
FROM "DT_node_lookup_5" LEFT OUTER JOIN "DT_node_data_5" ON "DT_node_lookup_5".node_id_2 = "DT_node_data_5".node_id), 
"AdaBoost_Estim_5" AS 
(SELECT "DT_Output_5"."KEY" AS join_key_5, CAST(NULL AS FLOAT) AS "Score_5_0", "DT_Output_5"."Proba_0" AS "Proba_5_0", "DT_Output_5"."LogProba_0" AS "LogProba_5_0", CAST(NULL AS FLOAT) AS "Score_5_1", "DT_Output_5"."Proba_1" AS "Proba_5_1", "DT_Output_5"."LogProba_1" AS "LogProba_5_1", CAST(NULL AS FLOAT) AS "Score_5_2", "DT_Output_5"."Proba_2" AS "Proba_5_2", "DT_Output_5"."LogProba_2" AS "LogProba_5_2", "DT_Output_5"."Decision" AS "Decision_5" 
FROM "DT_Output_5"), 
"DT_node_lookup_6" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anova_output_2 <= -1.5537705421447754) THEN 1 ELSE 2 END AS node_id_2 
FROM "ADS_ano_2_OUT"), 
"DT_node_data_6" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Proba_2" AS "Proba_2", "Values"."LogProba_2" AS "LogProba_2", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'anova_output_2' AS feature, -1.5537705421447754 AS threshold, 150 AS count, 0 AS depth, 0.33088674642244525 AS "Proba_0", -1.10597911798 AS "LogProba_0", 0.33455662678877823 AS "Proba_1", -1.09494912588 AS "LogProba_1", 0.33455662678877646 AS "Proba_2", -1.09494912588 AS "LogProba_2", 1 AS "Decision" FROM DUAL UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 50 AS count, 1 AS depth, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_FLOAT_INFINITY AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_FLOAT_INFINITY AS "LogProba_2", 0 AS "Decision" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 100 AS count, 1 AS depth, 0.0 AS "Proba_0", -BINARY_FLOAT_INFINITY AS "LogProba_0", 0.5000000000000006 AS "Proba_1", -0.69314718056 AS "LogProba_1", 0.4999999999999995 AS "Proba_2", -0.69314718056 AS "LogProba_2", 1 AS "Decision" FROM DUAL) "Values"), 
"DT_Output_6" AS 
(SELECT "DT_node_lookup_6"."KEY" AS "KEY", "DT_node_lookup_6".node_id_2 AS node_id_2, "DT_node_data_6".node_id AS node_id, "DT_node_data_6".feature AS feature, "DT_node_data_6".threshold AS threshold, "DT_node_data_6".count AS count, "DT_node_data_6".depth AS depth, "DT_node_data_6"."Proba_0" AS "Proba_0", "DT_node_data_6"."LogProba_0" AS "LogProba_0", "DT_node_data_6"."Proba_1" AS "Proba_1", "DT_node_data_6"."LogProba_1" AS "LogProba_1", "DT_node_data_6"."Proba_2" AS "Proba_2", "DT_node_data_6"."LogProba_2" AS "LogProba_2", "DT_node_data_6"."Decision" AS "Decision" 
FROM "DT_node_lookup_6" LEFT OUTER JOIN "DT_node_data_6" ON "DT_node_lookup_6".node_id_2 = "DT_node_data_6".node_id), 
"AdaBoost_Estim_6" AS 
(SELECT "DT_Output_6"."KEY" AS join_key_6, CAST(NULL AS FLOAT) AS "Score_6_0", "DT_Output_6"."Proba_0" AS "Proba_6_0", "DT_Output_6"."LogProba_0" AS "LogProba_6_0", CAST(NULL AS FLOAT) AS "Score_6_1", "DT_Output_6"."Proba_1" AS "Proba_6_1", "DT_Output_6"."LogProba_1" AS "LogProba_6_1", CAST(NULL AS FLOAT) AS "Score_6_2", "DT_Output_6"."Proba_2" AS "Proba_6_2", "DT_Output_6"."LogProba_2" AS "LogProba_6_2", "DT_Output_6"."Decision" AS "Decision_6" 
FROM "DT_Output_6"), 
"DT_node_lookup_7" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anova_output_4 <= 0.46999114751815796) THEN 1 ELSE 2 END AS node_id_2 
FROM "ADS_ano_2_OUT"), 
"DT_node_data_7" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Proba_2" AS "Proba_2", "Values"."LogProba_2" AS "LogProba_2", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'anova_output_4' AS feature, 0.46999114751815796 AS threshold, 150 AS count, 0 AS depth, 2.3767424191663084e-06 AS "Proba_0", -12.9497797393 AS "LogProba_0", 0.4999988116287903 AS "Proba_1", -0.693149557305 AS "LogProba_1", 0.4999988116287906 AS "Proba_2", -0.693149557305 AS "LogProba_2", 2 AS "Decision" FROM DUAL UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 142 AS count, 1 AS depth, 4.701896869810008e-06 AS "Proba_0", -12.2675445413 AS "LogProba_0", 0.9891449861574712 AS "Proba_1", -0.0109143593603 AS "LogProba_1", 0.010850311945659177 AS "Proba_2", -4.52356144866 AS "LogProba_2", 1 AS "Decision" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 1 AS depth, 0.0 AS "Proba_0", -BINARY_FLOAT_INFINITY AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_FLOAT_INFINITY AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 2 AS "Decision" FROM DUAL) "Values"), 
"DT_Output_7" AS 
(SELECT "DT_node_lookup_7"."KEY" AS "KEY", "DT_node_lookup_7".node_id_2 AS node_id_2, "DT_node_data_7".node_id AS node_id, "DT_node_data_7".feature AS feature, "DT_node_data_7".threshold AS threshold, "DT_node_data_7".count AS count, "DT_node_data_7".depth AS depth, "DT_node_data_7"."Proba_0" AS "Proba_0", "DT_node_data_7"."LogProba_0" AS "LogProba_0", "DT_node_data_7"."Proba_1" AS "Proba_1", "DT_node_data_7"."LogProba_1" AS "LogProba_1", "DT_node_data_7"."Proba_2" AS "Proba_2", "DT_node_data_7"."LogProba_2" AS "LogProba_2", "DT_node_data_7"."Decision" AS "Decision" 
FROM "DT_node_lookup_7" LEFT OUTER JOIN "DT_node_data_7" ON "DT_node_lookup_7".node_id_2 = "DT_node_data_7".node_id), 
"AdaBoost_Estim_7" AS 
(SELECT "DT_Output_7"."KEY" AS join_key_7, CAST(NULL AS FLOAT) AS "Score_7_0", "DT_Output_7"."Proba_0" AS "Proba_7_0", "DT_Output_7"."LogProba_0" AS "LogProba_7_0", CAST(NULL AS FLOAT) AS "Score_7_1", "DT_Output_7"."Proba_1" AS "Proba_7_1", "DT_Output_7"."LogProba_1" AS "LogProba_7_1", CAST(NULL AS FLOAT) AS "Score_7_2", "DT_Output_7"."Proba_2" AS "Proba_7_2", "DT_Output_7"."LogProba_2" AS "LogProba_7_2", "DT_Output_7"."Decision" AS "Decision_7" 
FROM "DT_Output_7"), 
"DT_node_lookup_8" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anova_output_2 <= -1.5537705421447754) THEN 1 ELSE 2 END AS node_id_2 
FROM "ADS_ano_2_OUT"), 
"DT_node_data_8" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Proba_2" AS "Proba_2", "Values"."LogProba_2" AS "LogProba_2", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'anova_output_2' AS feature, -1.5537705421447754 AS threshold, 150 AS count, 0 AS depth, 0.33333333225472833 AS "Proba_0", -1.0986122919 AS "LogProba_0", 0.333333332254729 AS "Proba_1", -1.0986122919 AS "LogProba_1", 0.33333333549054284 AS "Proba_2", -1.0986122822 AS "LogProba_2", 2 AS "Decision" FROM DUAL UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 50 AS count, 1 AS depth, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_FLOAT_INFINITY AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_FLOAT_INFINITY AS "LogProba_2", 0 AS "Decision" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 100 AS count, 1 AS depth, 0.0 AS "Proba_0", -BINARY_FLOAT_INFINITY AS "LogProba_0", 0.4999999975731396 AS "Proba_1", -0.693147185414 AS "LogProba_1", 0.5000000024268604 AS "Proba_2", -0.693147175706 AS "LogProba_2", 2 AS "Decision" FROM DUAL) "Values"), 
"DT_Output_8" AS 
(SELECT "DT_node_lookup_8"."KEY" AS "KEY", "DT_node_lookup_8".node_id_2 AS node_id_2, "DT_node_data_8".node_id AS node_id, "DT_node_data_8".feature AS feature, "DT_node_data_8".threshold AS threshold, "DT_node_data_8".count AS count, "DT_node_data_8".depth AS depth, "DT_node_data_8"."Proba_0" AS "Proba_0", "DT_node_data_8"."LogProba_0" AS "LogProba_0", "DT_node_data_8"."Proba_1" AS "Proba_1", "DT_node_data_8"."LogProba_1" AS "LogProba_1", "DT_node_data_8"."Proba_2" AS "Proba_2", "DT_node_data_8"."LogProba_2" AS "LogProba_2", "DT_node_data_8"."Decision" AS "Decision" 
FROM "DT_node_lookup_8" LEFT OUTER JOIN "DT_node_data_8" ON "DT_node_lookup_8".node_id_2 = "DT_node_data_8".node_id), 
"AdaBoost_Estim_8" AS 
(SELECT "DT_Output_8"."KEY" AS join_key_8, CAST(NULL AS FLOAT) AS "Score_8_0", "DT_Output_8"."Proba_0" AS "Proba_8_0", "DT_Output_8"."LogProba_0" AS "LogProba_8_0", CAST(NULL AS FLOAT) AS "Score_8_1", "DT_Output_8"."Proba_1" AS "Proba_8_1", "DT_Output_8"."LogProba_1" AS "LogProba_8_1", CAST(NULL AS FLOAT) AS "Score_8_2", "DT_Output_8"."Proba_2" AS "Proba_8_2", "DT_Output_8"."LogProba_2" AS "LogProba_8_2", "DT_Output_8"."Decision" AS "Decision_8" 
FROM "DT_Output_8"), 
"DT_node_lookup_9" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anova_output_2 <= 1.1425471305847168) THEN 1 ELSE 2 END AS node_id_2 
FROM "ADS_ano_2_OUT"), 
"DT_node_data_9" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Proba_2" AS "Proba_2", "Values"."LogProba_2" AS "LogProba_2", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'anova_output_2' AS feature, 1.1425471305847168 AS threshold, 150 AS count, 0 AS depth, 2.403102905387205e-06 AS "Proba_0", -12.9387497784 AS "LogProba_0", 0.49999879844854617 AS "Proba_1", -0.693149583666 AS "LogProba_1", 0.4999987984485485 AS "Proba_2", -0.693149583666 AS "LogProba_2", 2 AS "Decision" FROM DUAL UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 94 AS count, 1 AS depth, 4.859499679393376e-06 AS "Proba_0", -12.234575072 AS "LogProba_0", 0.999995130685262 AS "Proba_1", -4.86932659313e-06 AS "LogProba_1", 9.815058509356115e-09 AS "Proba_2", -18.439348048 AS "LogProba_2", 1 AS "Decision" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 56 AS count, 1 AS depth, 0.0 AS "Proba_0", -BINARY_FLOAT_INFINITY AS "LogProba_0", 0.01085036306716197 AS "Proba_1", -4.52355673714 AS "LogProba_1", 0.989149636932838 AS "Proba_2", -0.0109096575578 AS "LogProba_2", 2 AS "Decision" FROM DUAL) "Values"), 
"DT_Output_9" AS 
(SELECT "DT_node_lookup_9"."KEY" AS "KEY", "DT_node_lookup_9".node_id_2 AS node_id_2, "DT_node_data_9".node_id AS node_id, "DT_node_data_9".feature AS feature, "DT_node_data_9".threshold AS threshold, "DT_node_data_9".count AS count, "DT_node_data_9".depth AS depth, "DT_node_data_9"."Proba_0" AS "Proba_0", "DT_node_data_9"."LogProba_0" AS "LogProba_0", "DT_node_data_9"."Proba_1" AS "Proba_1", "DT_node_data_9"."LogProba_1" AS "LogProba_1", "DT_node_data_9"."Proba_2" AS "Proba_2", "DT_node_data_9"."LogProba_2" AS "LogProba_2", "DT_node_data_9"."Decision" AS "Decision" 
FROM "DT_node_lookup_9" LEFT OUTER JOIN "DT_node_data_9" ON "DT_node_lookup_9".node_id_2 = "DT_node_data_9".node_id), 
"AdaBoost_Estim_9" AS 
(SELECT "DT_Output_9"."KEY" AS join_key_9, CAST(NULL AS FLOAT) AS "Score_9_0", "DT_Output_9"."Proba_0" AS "Proba_9_0", "DT_Output_9"."LogProba_0" AS "LogProba_9_0", CAST(NULL AS FLOAT) AS "Score_9_1", "DT_Output_9"."Proba_1" AS "Proba_9_1", "DT_Output_9"."LogProba_1" AS "LogProba_9_1", CAST(NULL AS FLOAT) AS "Score_9_2", "DT_Output_9"."Proba_2" AS "Proba_9_2", "DT_Output_9"."LogProba_2" AS "LogProba_9_2", "DT_Output_9"."Decision" AS "Decision_9" 
FROM "DT_Output_9"), 
"DT_node_lookup_10" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anova_output_2 <= -1.5537705421447754) THEN 1 ELSE 2 END AS node_id_2 
FROM "ADS_ano_2_OUT"), 
"DT_node_data_10" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Proba_2" AS "Proba_2", "Values"."LogProba_2" AS "LogProba_2", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'anova_output_2' AS feature, -1.5537705421447754 AS threshold, 150 AS count, 0 AS depth, 0.32517184780268266 AS "Proba_0", -1.12340147393 AS "LogProba_0", 0.33741407609865925 AS "Proba_1", -1.08644439042 AS "LogProba_1", 0.337414076098658 AS "Proba_2", -1.08644439042 AS "LogProba_2", 1 AS "Decision" FROM DUAL UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 50 AS count, 1 AS depth, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_FLOAT_INFINITY AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_FLOAT_INFINITY AS "LogProba_2", 0 AS "Decision" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 100 AS count, 1 AS depth, 0.0 AS "Proba_0", -BINARY_FLOAT_INFINITY AS "LogProba_0", 0.5000000000000004 AS "Proba_1", -0.69314718056 AS "LogProba_1", 0.49999999999999967 AS "Proba_2", -0.69314718056 AS "LogProba_2", 1 AS "Decision" FROM DUAL) "Values"), 
"DT_Output_10" AS 
(SELECT "DT_node_lookup_10"."KEY" AS "KEY", "DT_node_lookup_10".node_id_2 AS node_id_2, "DT_node_data_10".node_id AS node_id, "DT_node_data_10".feature AS feature, "DT_node_data_10".threshold AS threshold, "DT_node_data_10".count AS count, "DT_node_data_10".depth AS depth, "DT_node_data_10"."Proba_0" AS "Proba_0", "DT_node_data_10"."LogProba_0" AS "LogProba_0", "DT_node_data_10"."Proba_1" AS "Proba_1", "DT_node_data_10"."LogProba_1" AS "LogProba_1", "DT_node_data_10"."Proba_2" AS "Proba_2", "DT_node_data_10"."LogProba_2" AS "LogProba_2", "DT_node_data_10"."Decision" AS "Decision" 
FROM "DT_node_lookup_10" LEFT OUTER JOIN "DT_node_data_10" ON "DT_node_lookup_10".node_id_2 = "DT_node_data_10".node_id), 
"AdaBoost_Estim_10" AS 
(SELECT "DT_Output_10"."KEY" AS join_key_10, CAST(NULL AS FLOAT) AS "Score_10_0", "DT_Output_10"."Proba_0" AS "Proba_10_0", "DT_Output_10"."LogProba_0" AS "LogProba_10_0", CAST(NULL AS FLOAT) AS "Score_10_1", "DT_Output_10"."Proba_1" AS "Proba_10_1", "DT_Output_10"."LogProba_1" AS "LogProba_10_1", CAST(NULL AS FLOAT) AS "Score_10_2", "DT_Output_10"."Proba_2" AS "Proba_10_2", "DT_Output_10"."LogProba_2" AS "LogProba_10_2", "DT_Output_10"."Decision" AS "Decision_10" 
FROM "DT_Output_10"), 
"DT_node_lookup_11" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anova_output_4 <= 0.46999114751815796) THEN 1 ELSE 2 END AS node_id_2 
FROM "ADS_ano_2_OUT"), 
"DT_node_data_11" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Proba_2" AS "Proba_2", "Values"."LogProba_2" AS "LogProba_2", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'anova_output_4' AS feature, 0.46999114751815796 AS threshold, 150 AS count, 0 AS depth, 2.315912522575571e-06 AS "Proba_0", -12.9757067699 AS "LogProba_0", 0.4999988420437388 AS "Proba_1", -0.693149496475 AS "LogProba_1", 0.4999988420437387 AS "Proba_2", -0.693149496475 AS "LogProba_2", 1 AS "Decision" FROM DUAL UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 142 AS count, 1 AS depth, 4.469645141998487e-06 AS "Proba_0", -12.3182015391 AS "LogProba_0", 0.9649835101976486 AS "Proba_1", -0.0356442656672 AS "LogProba_1", 0.03501202015720933 AS "Proba_2", -3.35206384339 AS "LogProba_2", 1 AS "Decision" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 1 AS depth, 0.0 AS "Proba_0", -BINARY_FLOAT_INFINITY AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_FLOAT_INFINITY AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 2 AS "Decision" FROM DUAL) "Values"), 
"DT_Output_11" AS 
(SELECT "DT_node_lookup_11"."KEY" AS "KEY", "DT_node_lookup_11".node_id_2 AS node_id_2, "DT_node_data_11".node_id AS node_id, "DT_node_data_11".feature AS feature, "DT_node_data_11".threshold AS threshold, "DT_node_data_11".count AS count, "DT_node_data_11".depth AS depth, "DT_node_data_11"."Proba_0" AS "Proba_0", "DT_node_data_11"."LogProba_0" AS "LogProba_0", "DT_node_data_11"."Proba_1" AS "Proba_1", "DT_node_data_11"."LogProba_1" AS "LogProba_1", "DT_node_data_11"."Proba_2" AS "Proba_2", "DT_node_data_11"."LogProba_2" AS "LogProba_2", "DT_node_data_11"."Decision" AS "Decision" 
FROM "DT_node_lookup_11" LEFT OUTER JOIN "DT_node_data_11" ON "DT_node_lookup_11".node_id_2 = "DT_node_data_11".node_id), 
"AdaBoost_Estim_11" AS 
(SELECT "DT_Output_11"."KEY" AS join_key_11, CAST(NULL AS FLOAT) AS "Score_11_0", "DT_Output_11"."Proba_0" AS "Proba_11_0", "DT_Output_11"."LogProba_0" AS "LogProba_11_0", CAST(NULL AS FLOAT) AS "Score_11_1", "DT_Output_11"."Proba_1" AS "Proba_11_1", "DT_Output_11"."LogProba_1" AS "LogProba_11_1", CAST(NULL AS FLOAT) AS "Score_11_2", "DT_Output_11"."Proba_2" AS "Proba_11_2", "DT_Output_11"."LogProba_2" AS "LogProba_11_2", "DT_Output_11"."Decision" AS "Decision_11" 
FROM "DT_Output_11"), 
"AdaBoost_Join_CTE" AS 
(SELECT "AdaBoost_Estim_0".join_key_0 AS join_key_0, "AdaBoost_Estim_0"."Score_0_0" AS "Score_0_0", "AdaBoost_Estim_0"."Proba_0_0" AS "Proba_0_0", "AdaBoost_Estim_0"."LogProba_0_0" AS "LogProba_0_0", "AdaBoost_Estim_0"."Score_0_1" AS "Score_0_1", "AdaBoost_Estim_0"."Proba_0_1" AS "Proba_0_1", "AdaBoost_Estim_0"."LogProba_0_1" AS "LogProba_0_1", "AdaBoost_Estim_0"."Score_0_2" AS "Score_0_2", "AdaBoost_Estim_0"."Proba_0_2" AS "Proba_0_2", "AdaBoost_Estim_0"."LogProba_0_2" AS "LogProba_0_2", "AdaBoost_Estim_0"."Decision_0" AS "Decision_0", "AdaBoost_Estim_1".join_key_1 AS join_key_1, "AdaBoost_Estim_1"."Score_1_0" AS "Score_1_0", "AdaBoost_Estim_1"."Proba_1_0" AS "Proba_1_0", "AdaBoost_Estim_1"."LogProba_1_0" AS "LogProba_1_0", "AdaBoost_Estim_1"."Score_1_1" AS "Score_1_1", "AdaBoost_Estim_1"."Proba_1_1" AS "Proba_1_1", "AdaBoost_Estim_1"."LogProba_1_1" AS "LogProba_1_1", "AdaBoost_Estim_1"."Score_1_2" AS "Score_1_2", "AdaBoost_Estim_1"."Proba_1_2" AS "Proba_1_2", "AdaBoost_Estim_1"."LogProba_1_2" AS "LogProba_1_2", "AdaBoost_Estim_1"."Decision_1" AS "Decision_1", "AdaBoost_Estim_2".join_key_2 AS join_key_2, "AdaBoost_Estim_2"."Score_2_0" AS "Score_2_0", "AdaBoost_Estim_2"."Proba_2_0" AS "Proba_2_0", "AdaBoost_Estim_2"."LogProba_2_0" AS "LogProba_2_0", "AdaBoost_Estim_2"."Score_2_1" AS "Score_2_1", "AdaBoost_Estim_2"."Proba_2_1" AS "Proba_2_1", "AdaBoost_Estim_2"."LogProba_2_1" AS "LogProba_2_1", "AdaBoost_Estim_2"."Score_2_2" AS "Score_2_2", "AdaBoost_Estim_2"."Proba_2_2" AS "Proba_2_2", "AdaBoost_Estim_2"."LogProba_2_2" AS "LogProba_2_2", "AdaBoost_Estim_2"."Decision_2" AS "Decision_2", "AdaBoost_Estim_3".join_key_3 AS join_key_3, "AdaBoost_Estim_3"."Score_3_0" AS "Score_3_0", "AdaBoost_Estim_3"."Proba_3_0" AS "Proba_3_0", "AdaBoost_Estim_3"."LogProba_3_0" AS "LogProba_3_0", "AdaBoost_Estim_3"."Score_3_1" AS "Score_3_1", "AdaBoost_Estim_3"."Proba_3_1" AS "Proba_3_1", "AdaBoost_Estim_3"."LogProba_3_1" AS "LogProba_3_1", "AdaBoost_Estim_3"."Score_3_2" AS "Score_3_2", "AdaBoost_Estim_3"."Proba_3_2" AS "Proba_3_2", "AdaBoost_Estim_3"."LogProba_3_2" AS "LogProba_3_2", "AdaBoost_Estim_3"."Decision_3" AS "Decision_3", "AdaBoost_Estim_4".join_key_4 AS join_key_4, "AdaBoost_Estim_4"."Score_4_0" AS "Score_4_0", "AdaBoost_Estim_4"."Proba_4_0" AS "Proba_4_0", "AdaBoost_Estim_4"."LogProba_4_0" AS "LogProba_4_0", "AdaBoost_Estim_4"."Score_4_1" AS "Score_4_1", "AdaBoost_Estim_4"."Proba_4_1" AS "Proba_4_1", "AdaBoost_Estim_4"."LogProba_4_1" AS "LogProba_4_1", "AdaBoost_Estim_4"."Score_4_2" AS "Score_4_2", "AdaBoost_Estim_4"."Proba_4_2" AS "Proba_4_2", "AdaBoost_Estim_4"."LogProba_4_2" AS "LogProba_4_2", "AdaBoost_Estim_4"."Decision_4" AS "Decision_4", "AdaBoost_Estim_5".join_key_5 AS join_key_5, "AdaBoost_Estim_5"."Score_5_0" AS "Score_5_0", "AdaBoost_Estim_5"."Proba_5_0" AS "Proba_5_0", "AdaBoost_Estim_5"."LogProba_5_0" AS "LogProba_5_0", "AdaBoost_Estim_5"."Score_5_1" AS "Score_5_1", "AdaBoost_Estim_5"."Proba_5_1" AS "Proba_5_1", "AdaBoost_Estim_5"."LogProba_5_1" AS "LogProba_5_1", "AdaBoost_Estim_5"."Score_5_2" AS "Score_5_2", "AdaBoost_Estim_5"."Proba_5_2" AS "Proba_5_2", "AdaBoost_Estim_5"."LogProba_5_2" AS "LogProba_5_2", "AdaBoost_Estim_5"."Decision_5" AS "Decision_5", "AdaBoost_Estim_6".join_key_6 AS join_key_6, "AdaBoost_Estim_6"."Score_6_0" AS "Score_6_0", "AdaBoost_Estim_6"."Proba_6_0" AS "Proba_6_0", "AdaBoost_Estim_6"."LogProba_6_0" AS "LogProba_6_0", "AdaBoost_Estim_6"."Score_6_1" AS "Score_6_1", "AdaBoost_Estim_6"."Proba_6_1" AS "Proba_6_1", "AdaBoost_Estim_6"."LogProba_6_1" AS "LogProba_6_1", "AdaBoost_Estim_6"."Score_6_2" AS "Score_6_2", "AdaBoost_Estim_6"."Proba_6_2" AS "Proba_6_2", "AdaBoost_Estim_6"."LogProba_6_2" AS "LogProba_6_2", "AdaBoost_Estim_6"."Decision_6" AS "Decision_6", "AdaBoost_Estim_7".join_key_7 AS join_key_7, "AdaBoost_Estim_7"."Score_7_0" AS "Score_7_0", "AdaBoost_Estim_7"."Proba_7_0" AS "Proba_7_0", "AdaBoost_Estim_7"."LogProba_7_0" AS "LogProba_7_0", "AdaBoost_Estim_7"."Score_7_1" AS "Score_7_1", "AdaBoost_Estim_7"."Proba_7_1" AS "Proba_7_1", "AdaBoost_Estim_7"."LogProba_7_1" AS "LogProba_7_1", "AdaBoost_Estim_7"."Score_7_2" AS "Score_7_2", "AdaBoost_Estim_7"."Proba_7_2" AS "Proba_7_2", "AdaBoost_Estim_7"."LogProba_7_2" AS "LogProba_7_2", "AdaBoost_Estim_7"."Decision_7" AS "Decision_7", "AdaBoost_Estim_8".join_key_8 AS join_key_8, "AdaBoost_Estim_8"."Score_8_0" AS "Score_8_0", "AdaBoost_Estim_8"."Proba_8_0" AS "Proba_8_0", "AdaBoost_Estim_8"."LogProba_8_0" AS "LogProba_8_0", "AdaBoost_Estim_8"."Score_8_1" AS "Score_8_1", "AdaBoost_Estim_8"."Proba_8_1" AS "Proba_8_1", "AdaBoost_Estim_8"."LogProba_8_1" AS "LogProba_8_1", "AdaBoost_Estim_8"."Score_8_2" AS "Score_8_2", "AdaBoost_Estim_8"."Proba_8_2" AS "Proba_8_2", "AdaBoost_Estim_8"."LogProba_8_2" AS "LogProba_8_2", "AdaBoost_Estim_8"."Decision_8" AS "Decision_8", "AdaBoost_Estim_9".join_key_9 AS join_key_9, "AdaBoost_Estim_9"."Score_9_0" AS "Score_9_0", "AdaBoost_Estim_9"."Proba_9_0" AS "Proba_9_0", "AdaBoost_Estim_9"."LogProba_9_0" AS "LogProba_9_0", "AdaBoost_Estim_9"."Score_9_1" AS "Score_9_1", "AdaBoost_Estim_9"."Proba_9_1" AS "Proba_9_1", "AdaBoost_Estim_9"."LogProba_9_1" AS "LogProba_9_1", "AdaBoost_Estim_9"."Score_9_2" AS "Score_9_2", "AdaBoost_Estim_9"."Proba_9_2" AS "Proba_9_2", "AdaBoost_Estim_9"."LogProba_9_2" AS "LogProba_9_2", "AdaBoost_Estim_9"."Decision_9" AS "Decision_9", "AdaBoost_Estim_10".join_key_10 AS join_key_10, "AdaBoost_Estim_10"."Score_10_0" AS "Score_10_0", "AdaBoost_Estim_10"."Proba_10_0" AS "Proba_10_0", "AdaBoost_Estim_10"."LogProba_10_0" AS "LogProba_10_0", "AdaBoost_Estim_10"."Score_10_1" AS "Score_10_1", "AdaBoost_Estim_10"."Proba_10_1" AS "Proba_10_1", "AdaBoost_Estim_10"."LogProba_10_1" AS "LogProba_10_1", "AdaBoost_Estim_10"."Score_10_2" AS "Score_10_2", "AdaBoost_Estim_10"."Proba_10_2" AS "Proba_10_2", "AdaBoost_Estim_10"."LogProba_10_2" AS "LogProba_10_2", "AdaBoost_Estim_10"."Decision_10" AS "Decision_10", "AdaBoost_Estim_11".join_key_11 AS join_key_11, "AdaBoost_Estim_11"."Score_11_0" AS "Score_11_0", "AdaBoost_Estim_11"."Proba_11_0" AS "Proba_11_0", "AdaBoost_Estim_11"."LogProba_11_0" AS "LogProba_11_0", "AdaBoost_Estim_11"."Score_11_1" AS "Score_11_1", "AdaBoost_Estim_11"."Proba_11_1" AS "Proba_11_1", "AdaBoost_Estim_11"."LogProba_11_1" AS "LogProba_11_1", "AdaBoost_Estim_11"."Score_11_2" AS "Score_11_2", "AdaBoost_Estim_11"."Proba_11_2" AS "Proba_11_2", "AdaBoost_Estim_11"."LogProba_11_2" AS "LogProba_11_2", "AdaBoost_Estim_11"."Decision_11" AS "Decision_11" 
FROM "AdaBoost_Estim_0" LEFT OUTER JOIN "AdaBoost_Estim_1" ON "AdaBoost_Estim_0".join_key_0 = "AdaBoost_Estim_1".join_key_1 LEFT OUTER JOIN "AdaBoost_Estim_2" ON "AdaBoost_Estim_2".join_key_2 = "AdaBoost_Estim_1".join_key_1 LEFT OUTER JOIN "AdaBoost_Estim_3" ON "AdaBoost_Estim_3".join_key_3 = "AdaBoost_Estim_2".join_key_2 LEFT OUTER JOIN "AdaBoost_Estim_4" ON "AdaBoost_Estim_4".join_key_4 = "AdaBoost_Estim_3".join_key_3 LEFT OUTER JOIN "AdaBoost_Estim_5" ON "AdaBoost_Estim_5".join_key_5 = "AdaBoost_Estim_4".join_key_4 LEFT OUTER JOIN "AdaBoost_Estim_6" ON "AdaBoost_Estim_6".join_key_6 = "AdaBoost_Estim_5".join_key_5 LEFT OUTER JOIN "AdaBoost_Estim_7" ON "AdaBoost_Estim_7".join_key_7 = "AdaBoost_Estim_6".join_key_6 LEFT OUTER JOIN "AdaBoost_Estim_8" ON "AdaBoost_Estim_8".join_key_8 = "AdaBoost_Estim_7".join_key_7 LEFT OUTER JOIN "AdaBoost_Estim_9" ON "AdaBoost_Estim_9".join_key_9 = "AdaBoost_Estim_8".join_key_8 LEFT OUTER JOIN "AdaBoost_Estim_10" ON "AdaBoost_Estim_10".join_key_10 = "AdaBoost_Estim_9".join_key_9 LEFT OUTER JOIN "AdaBoost_Estim_11" ON "AdaBoost_Estim_11".join_key_11 = "AdaBoost_Estim_10".join_key_10), 
"AdaBoost_AVG_Scores_BN" AS 
(SELECT "AdaBoost_Join_CTE".join_key_0 AS "KEY", (2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_0") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3)) / 12.0 + (2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_0") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3)) / 12.0 + (2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_0") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3)) / 12.0 + (2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_0") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3)) / 12.0 + (2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_0") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3)) / 12.0 + (2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_0") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3)) / 12.0 + (2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_6_0") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_6_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_6_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_6_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3)) / 12.0 + (2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_7_0") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_7_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_7_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_7_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3)) / 12.0 + (2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_8_0") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_8_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_8_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_8_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3)) / 12.0 + (2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_9_0") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_9_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_9_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_9_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3)) / 12.0 + (2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_10_0") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_10_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_10_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_10_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3)) / 12.0 + (2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_11_0") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_11_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_11_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_11_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3)) / 12.0 AS "Score_0", 2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_0") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3) + 2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_0") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3) + 2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_0") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3) + 2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_0") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3) + 2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_0") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3) + 2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_0") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3) + 2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_6_0") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_6_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_6_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_6_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3) + 2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_7_0") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_7_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_7_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_7_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3) + 2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_8_0") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_8_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_8_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_8_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3) + 2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_9_0") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_9_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_9_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_9_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3) + 2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_10_0") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_10_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_10_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_10_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3) + 2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_11_0") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_11_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_11_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_11_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3) AS "Proba_0", (2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_1") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3)) / 12.0 + (2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_1") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3)) / 12.0 + (2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_1") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3)) / 12.0 + (2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_1") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3)) / 12.0 + (2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_1") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3)) / 12.0 + (2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_1") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3)) / 12.0 + (2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_6_1") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_6_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_6_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_6_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3)) / 12.0 + (2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_7_1") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_7_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_7_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_7_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3)) / 12.0 + (2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_8_1") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_8_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_8_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_8_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3)) / 12.0 + (2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_9_1") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_9_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_9_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_9_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3)) / 12.0 + (2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_10_1") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_10_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_10_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_10_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3)) / 12.0 + (2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_11_1") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_11_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_11_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_11_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3)) / 12.0 AS "Score_1", 2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_1") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3) + 2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_1") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3) + 2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_1") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3) + 2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_1") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3) + 2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_1") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3) + 2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_1") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3) + 2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_6_1") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_6_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_6_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_6_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3) + 2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_7_1") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_7_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_7_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_7_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3) + 2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_8_1") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_8_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_8_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_8_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3) + 2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_9_1") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_9_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_9_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_9_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3) + 2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_10_1") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_10_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_10_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_10_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3) + 2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_11_1") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_11_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_11_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_11_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3) AS "Proba_1", (2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_2") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3)) / 12.0 + (2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_2") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3)) / 12.0 + (2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_2") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3)) / 12.0 + (2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_2") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3)) / 12.0 + (2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_2") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3)) / 12.0 + (2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_2") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3)) / 12.0 + (2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_6_2") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_6_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_6_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_6_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3)) / 12.0 + (2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_7_2") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_7_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_7_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_7_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3)) / 12.0 + (2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_8_2") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_8_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_8_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_8_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3)) / 12.0 + (2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_9_2") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_9_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_9_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_9_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3)) / 12.0 + (2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_10_2") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_10_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_10_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_10_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3)) / 12.0 + (2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_11_2") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_11_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_11_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_11_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3)) / 12.0 AS "Score_2", 2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_2") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3) + 2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_2") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3) + 2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_2") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3) + 2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_2") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3) + 2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_2") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3) + 2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_2") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3) + 2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_6_2") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_6_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_6_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_6_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_6_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3) + 2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_7_2") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_7_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_7_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_7_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_7_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3) + 2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_8_2") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_8_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_8_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_8_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_8_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3) + 2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_9_2") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_9_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_9_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_9_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_9_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3) + 2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_10_2") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_10_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_10_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_10_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_10_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3) + 2.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_11_2") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_11_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_11_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_11_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_11_2") ELSE -BINARY_FLOAT_INFINITY END END) / 3) AS "Proba_2" 
FROM "AdaBoost_Join_CTE"), 
"AdaBoost_AVG_Scores" AS 
(SELECT "AdaBoost_AVG_Scores_BN"."KEY" AS "KEY", "AdaBoost_AVG_Scores_BN"."Score_0" AS "Score_0", exp(("AdaBoost_AVG_Scores_BN"."Proba_0" / 12.0) / 2) / (exp(("AdaBoost_AVG_Scores_BN"."Proba_0" / 12.0) / 2) + exp(("AdaBoost_AVG_Scores_BN"."Proba_1" / 12.0) / 2) + exp(("AdaBoost_AVG_Scores_BN"."Proba_2" / 12.0) / 2)) AS "Proba_0", CAST(NULL AS FLOAT) AS "LogProba_0", "AdaBoost_AVG_Scores_BN"."Score_1" AS "Score_1", exp(("AdaBoost_AVG_Scores_BN"."Proba_1" / 12.0) / 2) / (exp(("AdaBoost_AVG_Scores_BN"."Proba_0" / 12.0) / 2) + exp(("AdaBoost_AVG_Scores_BN"."Proba_1" / 12.0) / 2) + exp(("AdaBoost_AVG_Scores_BN"."Proba_2" / 12.0) / 2)) AS "Proba_1", CAST(NULL AS FLOAT) AS "LogProba_1", "AdaBoost_AVG_Scores_BN"."Score_2" AS "Score_2", exp(("AdaBoost_AVG_Scores_BN"."Proba_2" / 12.0) / 2) / (exp(("AdaBoost_AVG_Scores_BN"."Proba_0" / 12.0) / 2) + exp(("AdaBoost_AVG_Scores_BN"."Proba_1" / 12.0) / 2) + exp(("AdaBoost_AVG_Scores_BN"."Proba_2" / 12.0) / 2)) AS "Proba_2", CAST(NULL AS FLOAT) AS "LogProba_2" 
FROM "AdaBoost_AVG_Scores_BN"), 
orig_cte AS 
(SELECT "AdaBoost_AVG_Scores"."KEY" AS "KEY", "AdaBoost_AVG_Scores"."Score_0" AS "Score_0", "AdaBoost_AVG_Scores"."Score_1" AS "Score_1", "AdaBoost_AVG_Scores"."Score_2" AS "Score_2", "AdaBoost_AVG_Scores"."Proba_0" AS "Proba_0", "AdaBoost_AVG_Scores"."Proba_1" AS "Proba_1", "AdaBoost_AVG_Scores"."Proba_2" AS "Proba_2", "AdaBoost_AVG_Scores"."LogProba_0" AS "LogProba_0", "AdaBoost_AVG_Scores"."LogProba_1" AS "LogProba_1", "AdaBoost_AVG_Scores"."LogProba_2" AS "LogProba_2", CAST(NULL AS FLOAT) AS "Decision" 
FROM "AdaBoost_AVG_Scores"), 
score_class_union AS 
(SELECT scu."KEY" AS "KEY", scu.class AS class, scu."LogProba" AS "LogProba", scu."Proba" AS "Proba", scu."Score" AS "Score" 
FROM (SELECT orig_cte."KEY" AS "KEY", 0 AS class, orig_cte."LogProba_0" AS "LogProba", orig_cte."Proba_0" AS "Proba", orig_cte."Score_0" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 1 AS class, orig_cte."LogProba_1" AS "LogProba", orig_cte."Proba_1" AS "Proba", orig_cte."Score_1" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 2 AS class, orig_cte."LogProba_2" AS "LogProba", orig_cte."Proba_2" AS "Proba", orig_cte."Score_2" AS "Score" 
FROM orig_cte) scu), 
score_max AS 
(SELECT orig_cte."KEY" AS "KEY", orig_cte."Score_0" AS "Score_0", orig_cte."Score_1" AS "Score_1", orig_cte."Score_2" AS "Score_2", orig_cte."Proba_0" AS "Proba_0", orig_cte."Proba_1" AS "Proba_1", orig_cte."Proba_2" AS "Proba_2", orig_cte."LogProba_0" AS "LogProba_0", orig_cte."LogProba_1" AS "LogProba_1", orig_cte."LogProba_2" AS "LogProba_2", orig_cte."Decision" AS "Decision", (SELECT max(score_class_union."LogProba") AS max_1 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_LogProba", (SELECT max(score_class_union."Proba") AS max_2 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_Proba", (SELECT max(score_class_union."Score") AS max_3 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_Score" 
FROM orig_cte), 
arg_max_cte AS 
(SELECT score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Score_2" AS "Score_2", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."Proba_2" AS "Proba_2", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."LogProba_2" AS "LogProba_2", score_max."Decision" AS "Decision", score_max."max_LogProba" AS "max_LogProba", score_max."max_Proba" AS "max_Proba", score_max."max_Score" AS "max_Score", (SELECT min(score_class_union.class) AS min_1 
FROM score_class_union 
WHERE score_max."max_LogProba" = score_class_union."LogProba" AND score_max."KEY" = score_class_union."KEY") AS "arg_max_LogProba", (SELECT min(score_class_union.class) AS min_2 
FROM score_class_union 
WHERE score_max."max_Proba" = score_class_union."Proba" AND score_max."KEY" = score_class_union."KEY") AS "arg_max_Proba", (SELECT min(score_class_union.class) AS min_3 
FROM score_class_union 
WHERE score_max."max_Score" = score_class_union."Score" AND score_max."KEY" = score_class_union."KEY") AS "arg_max_Score" 
FROM score_max)
 SELECT arg_max_cte."KEY" AS "KEY", arg_max_cte."Score_0" AS "Score_0", arg_max_cte."Score_1" AS "Score_1", arg_max_cte."Score_2" AS "Score_2", arg_max_cte."Proba_0" AS "Proba_0", arg_max_cte."Proba_1" AS "Proba_1", arg_max_cte."Proba_2" AS "Proba_2", CASE WHEN (arg_max_cte."Proba_0" > 0.0) THEN ln(arg_max_cte."Proba_0") ELSE -BINARY_FLOAT_INFINITY END AS "LogProba_0", CASE WHEN (arg_max_cte."Proba_1" > 0.0) THEN ln(arg_max_cte."Proba_1") ELSE -BINARY_FLOAT_INFINITY END AS "LogProba_1", CASE WHEN (arg_max_cte."Proba_2" > 0.0) THEN ln(arg_max_cte."Proba_2") ELSE -BINARY_FLOAT_INFINITY END AS "LogProba_2", arg_max_cte."arg_max_Score" AS "Decision" 
FROM arg_max_cte