-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH "DT_node_lookup" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_3" <= -0.351637601852417) THEN CASE WHEN ("ADS"."Feature_4" <= -1.311889886856079) THEN CASE WHEN ("ADS"."Feature_3" <= -0.6028766632080078) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_1" <= -0.8629076480865479) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_2" <= 0.07367383688688278) THEN CASE WHEN ("ADS"."Feature_3" <= -0.22018516063690186) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_0" <= -0.6800730228424072) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "INPUT_DATA" AS "ADS"), 
"DT_node_data" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, -0.351637601852417 AS threshold, 100 AS count, 0 AS depth, 0.033133628468157365 AS "Estimator" UNION ALL SELECT 1 AS node_id, 'Feature_4' AS feature, -1.311889886856079 AS threshold, 46 AS count, 1 AS depth, 0.3542383471216881 AS "Estimator" UNION ALL SELECT 2 AS node_id, 'Feature_3' AS feature, -0.6028766632080078 AS threshold, 3 AS count, 2 AS depth, 1.6803665859039851 AS "Estimator" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 1.469358769900285 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 1.7858704939058352 AS "Estimator" UNION ALL SELECT 5 AS node_id, 'Feature_1' AS feature, -0.8629076480865479 AS threshold, 43 AS count, 2 AS depth, 0.2617177723229232 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 3 AS depth, 0.6588854194805647 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 25 AS count, 3 AS depth, -0.02424293363057849 AS "Estimator" UNION ALL SELECT 8 AS node_id, 'Feature_2' AS feature, 0.07367383688688278 AS threshold, 54 AS count, 1 AS depth, -0.24040002075522088 AS "Estimator" UNION ALL SELECT 9 AS node_id, 'Feature_3' AS feature, -0.22018516063690186 AS threshold, 37 AS count, 2 AS depth, 0.06957714175095604 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, -0.9050177575639435 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 33 AS count, 3 AS depth, 0.1877098568194287 AS "Estimator" UNION ALL SELECT 12 AS node_id, 'Feature_0' AS feature, -0.6800730228424072 AS threshold, 17 AS count, 2 AS depth, -0.9150561979745471 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 0.03349247215363482 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS count, 3 AS depth, -1.2069173272447566 AS "Estimator") AS "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".node_id AS node_id, "DT_node_data".feature AS feature, "DT_node_data".threshold AS threshold, "DT_node_data".count AS count, "DT_node_data".depth AS depth, "DT_node_data"."Estimator" AS "Estimator" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".node_id), 
"AdaBoost_Estim_0" AS 
(SELECT "DT_Output"."KEY" AS join_key_0, "DT_Output"."Estimator" AS "Estimator_0" 
FROM "DT_Output"), 
"DT_node_lookup_1" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" <= -0.4793761372566223) THEN CASE WHEN ("ADS"."Feature_4" <= -0.22248134016990662) THEN CASE WHEN ("ADS"."Feature_4" <= -1.738538384437561) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_3" <= -1.71480131149292) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_0" <= 0.24696087837219238) THEN CASE WHEN ("ADS"."Feature_3" <= -0.7566534280776978) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_3" <= 0.5201690196990967) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "INPUT_DATA" AS "ADS"), 
"DT_node_data_1" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_0' AS feature, -0.4793761372566223 AS threshold, 100 AS count, 0 AS depth, 0.04545236311747429 AS "Estimator" UNION ALL SELECT 1 AS node_id, 'Feature_4' AS feature, -0.22248134016990662 AS threshold, 32 AS count, 1 AS depth, 0.5604945170322183 AS "Estimator" UNION ALL SELECT 2 AS node_id, 'Feature_4' AS feature, -1.738538384437561 AS threshold, 14 AS count, 2 AS depth, 1.2051550625927203 AS "Estimator" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, -0.8877857476301128 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS count, 3 AS depth, 1.3661505095329385 AS "Estimator" UNION ALL SELECT 5 AS node_id, 'Feature_3' AS feature, -1.71480131149292 AS threshold, 18 AS count, 2 AS depth, 0.059091870485161485 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 1.8958891760305832 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 3 AS depth, -0.17050779270801614 AS "Estimator" UNION ALL SELECT 8 AS node_id, 'Feature_0' AS feature, 0.24696087837219238 AS threshold, 68 AS count, 1 AS depth, -0.19692041519534664 AS "Estimator" UNION ALL SELECT 9 AS node_id, 'Feature_3' AS feature, -0.7566534280776978 AS threshold, 31 AS count, 2 AS depth, -0.6343763712709801 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, 0.6844583585869165 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 24 AS count, 3 AS depth, -1.0190365008128663 AS "Estimator" UNION ALL SELECT 12 AS node_id, 'Feature_3' AS feature, 0.5201690196990967 AS threshold, 37 AS count, 2 AS depth, 0.16959673719234636 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 24 AS count, 3 AS depth, -0.17670682615380162 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS count, 3 AS depth, 0.8089263926006196 AS "Estimator") AS "Values"), 
"DT_Output_1" AS 
(SELECT "DT_node_lookup_1"."KEY" AS "KEY", "DT_node_lookup_1".node_id_2 AS node_id_2, "DT_node_data_1".node_id AS node_id, "DT_node_data_1".feature AS feature, "DT_node_data_1".threshold AS threshold, "DT_node_data_1".count AS count, "DT_node_data_1".depth AS depth, "DT_node_data_1"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_1" LEFT OUTER JOIN "DT_node_data_1" ON "DT_node_lookup_1".node_id_2 = "DT_node_data_1".node_id), 
"AdaBoost_Estim_1" AS 
(SELECT "DT_Output_1"."KEY" AS join_key_1, "DT_Output_1"."Estimator" AS "Estimator_1" 
FROM "DT_Output_1"), 
"DT_node_lookup_2" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" <= 0.508131206035614) THEN CASE WHEN ("ADS"."Feature_4" <= -0.47186964750289917) THEN CASE WHEN ("ADS"."Feature_0" <= -0.6185617446899414) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_3" <= 0.6644023060798645) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_1" <= 0.16049455106258392) THEN CASE WHEN ("ADS"."Feature_2" <= 1.0999720096588135) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_2" <= 1.1829862594604492) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "INPUT_DATA" AS "ADS"), 
"DT_node_data_2" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, 0.508131206035614 AS threshold, 100 AS count, 0 AS depth, 0.09695959291391353 AS "Estimator" UNION ALL SELECT 1 AS node_id, 'Feature_4' AS feature, -0.47186964750289917 AS threshold, 71 AS count, 1 AS depth, 0.34873442003617555 AS "Estimator" UNION ALL SELECT 2 AS node_id, 'Feature_0' AS feature, -0.6185617446899414 AS threshold, 20 AS count, 2 AS depth, 1.0548144685925651 AS "Estimator" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, -0.6987189646908831 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 3 AS depth, 1.4931978269134276 AS "Estimator" UNION ALL SELECT 5 AS node_id, 'Feature_3' AS feature, 0.6644023060798645 AS threshold, 51 AS count, 2 AS depth, 0.07184028334739502 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 40 AS count, 3 AS depth, 0.3204748696674558 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS count, 3 AS depth, -0.8322854850891896 AS "Estimator" UNION ALL SELECT 8 AS node_id, 'Feature_1' AS feature, 0.16049455106258392 AS threshold, 29 AS count, 1 AS depth, -0.5194546390061068 AS "Estimator" UNION ALL SELECT 9 AS node_id, 'Feature_2' AS feature, 1.0999720096588135 AS threshold, 19 AS count, 2 AS depth, -1.1364948529510606 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS count, 3 AS depth, -1.4176720912068843 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, -0.5272775033967759 AS "Estimator" UNION ALL SELECT 12 AS node_id, 'Feature_2' AS feature, 1.1829862594604492 AS threshold, 10 AS count, 2 AS depth, 0.6529217674893049 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, 0.22266567881031893 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 1.6568526410736055 AS "Estimator") AS "Values"), 
"DT_Output_2" AS 
(SELECT "DT_node_lookup_2"."KEY" AS "KEY", "DT_node_lookup_2".node_id_2 AS node_id_2, "DT_node_data_2".node_id AS node_id, "DT_node_data_2".feature AS feature, "DT_node_data_2".threshold AS threshold, "DT_node_data_2".count AS count, "DT_node_data_2".depth AS depth, "DT_node_data_2"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_2" LEFT OUTER JOIN "DT_node_data_2" ON "DT_node_lookup_2".node_id_2 = "DT_node_data_2".node_id), 
"AdaBoost_Estim_2" AS 
(SELECT "DT_Output_2"."KEY" AS join_key_2, "DT_Output_2"."Estimator" AS "Estimator_2" 
FROM "DT_Output_2"), 
"DT_node_lookup_3" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" <= 0.06271390616893768) THEN CASE WHEN ("ADS"."Feature_2" <= -0.6810851097106934) THEN CASE WHEN ("ADS"."Feature_4" <= -0.14484019577503204) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_0" <= -1.1244009733200073) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_2" <= 0.2652096152305603) THEN CASE WHEN ("ADS"."Feature_0" <= -0.10854674875736237) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_2" <= 0.4256851077079773) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "INPUT_DATA" AS "ADS"), 
"DT_node_data_3" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, 0.06271390616893768 AS threshold, 100 AS count, 0 AS depth, 0.22272835598208562 AS "Estimator" UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, -0.6810851097106934 AS threshold, 56 AS count, 1 AS depth, 0.5984821328030316 AS "Estimator" UNION ALL SELECT 2 AS node_id, 'Feature_4' AS feature, -0.14484019577503204 AS threshold, 29 AS count, 2 AS depth, 0.040024098397930974 AS "Estimator" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, -1.5169578923684632 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 25 AS count, 3 AS depth, 0.2891412169205541 AS "Estimator" UNION ALL SELECT 5 AS node_id, 'Feature_0' AS feature, -1.1244009733200073 AS threshold, 27 AS count, 2 AS depth, 1.198307429015917 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, -0.04832531752715001 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 22 AS count, 3 AS depth, 1.4816330532302509 AS "Estimator" UNION ALL SELECT 8 AS node_id, 'Feature_2' AS feature, 0.2652096152305603 AS threshold, 44 AS count, 1 AS depth, -0.2555037236082091 AS "Estimator" UNION ALL SELECT 9 AS node_id, 'Feature_0' AS feature, -0.10854674875736237 AS threshold, 10 AS count, 2 AS depth, -1.5170643722051917 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, -0.2127402802139687 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, -1.6619892713153273 AS "Estimator" UNION ALL SELECT 12 AS node_id, 'Feature_2' AS feature, 0.4256851077079773 AS threshold, 34 AS count, 2 AS depth, 0.11554352597913879 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 1.8675579901499677 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 31 AS count, 3 AS depth, -0.05400626087610272 AS "Estimator") AS "Values"), 
"DT_Output_3" AS 
(SELECT "DT_node_lookup_3"."KEY" AS "KEY", "DT_node_lookup_3".node_id_2 AS node_id_2, "DT_node_data_3".node_id AS node_id, "DT_node_data_3".feature AS feature, "DT_node_data_3".threshold AS threshold, "DT_node_data_3".count AS count, "DT_node_data_3".depth AS depth, "DT_node_data_3"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_3" LEFT OUTER JOIN "DT_node_data_3" ON "DT_node_lookup_3".node_id_2 = "DT_node_data_3".node_id), 
"AdaBoost_Estim_3" AS 
(SELECT "DT_Output_3"."KEY" AS join_key_3, "DT_Output_3"."Estimator" AS "Estimator_3" 
FROM "DT_Output_3"), 
"DT_node_lookup_4" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_3" <= 0.44876575469970703) THEN CASE WHEN ("ADS"."Feature_1" <= -0.42532879114151) THEN CASE WHEN ("ADS"."Feature_2" <= -0.9557145833969116) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_0" <= -0.43079549074172974) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_3" <= 0.6346715688705444) THEN CASE WHEN ("ADS"."Feature_3" <= 0.5477803945541382) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_3" <= 0.6810564398765564) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "INPUT_DATA" AS "ADS"), 
"DT_node_data_4" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, 0.44876575469970703 AS threshold, 100 AS count, 0 AS depth, 0.3657040082550306 AS "Estimator" UNION ALL SELECT 1 AS node_id, 'Feature_1' AS feature, -0.42532879114151 AS threshold, 64 AS count, 1 AS depth, 0.018031964738481312 AS "Estimator" UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.9557145833969116 AS threshold, 26 AS count, 2 AS depth, -0.5407442385586383 AS "Estimator" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 1.031883949647245 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 23 AS count, 3 AS depth, -0.7458696544115794 AS "Estimator" UNION ALL SELECT 5 AS node_id, 'Feature_0' AS feature, -0.43079549074172974 AS threshold, 38 AS count, 2 AS depth, 0.4003525248891421 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 14 AS count, 3 AS depth, 1.1863263558857964 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 24 AS count, 3 AS depth, -0.058132209858906235 AS "Estimator" UNION ALL SELECT 8 AS node_id, 'Feature_3' AS feature, 0.6346715688705444 AS threshold, 36 AS count, 1 AS depth, 0.9837876411733399 AS "Estimator" UNION ALL SELECT 9 AS node_id, 'Feature_3' AS feature, 0.5477803945541382 AS threshold, 6 AS count, 2 AS depth, 2.260134149058891 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 2.2697546239876076 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 2.240893199201458 AS "Estimator" UNION ALL SELECT 12 AS node_id, 'Feature_3' AS feature, 0.6810564398765564 AS threshold, 30 AS count, 2 AS depth, 0.7285183395962297 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, -1.7651338478552447 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 28 AS count, 3 AS depth, 0.9066363529856206 AS "Estimator") AS "Values"), 
"DT_Output_4" AS 
(SELECT "DT_node_lookup_4"."KEY" AS "KEY", "DT_node_lookup_4".node_id_2 AS node_id_2, "DT_node_data_4".node_id AS node_id, "DT_node_data_4".feature AS feature, "DT_node_data_4".threshold AS threshold, "DT_node_data_4".count AS count, "DT_node_data_4".depth AS depth, "DT_node_data_4"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_4" LEFT OUTER JOIN "DT_node_data_4" ON "DT_node_lookup_4".node_id_2 = "DT_node_data_4".node_id), 
"AdaBoost_Estim_4" AS 
(SELECT "DT_Output_4"."KEY" AS join_key_4, "DT_Output_4"."Estimator" AS "Estimator_4" 
FROM "DT_Output_4"), 
"DT_node_lookup_5" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_4" <= -1.1505672931671143) THEN CASE WHEN ("ADS"."Feature_3" <= -0.998622477054596) THEN 2 ELSE CASE WHEN ("ADS"."Feature_0" <= -1.0724021196365356) THEN 4 ELSE 5 END END ELSE CASE WHEN ("ADS"."Feature_1" <= 0.9451490640640259) THEN CASE WHEN ("ADS"."Feature_4" <= 1.6895700693130493) THEN 8 ELSE 9 END ELSE CASE WHEN ("ADS"."Feature_1" <= 1.2508000135421753) THEN 11 ELSE 12 END END END AS node_id_2 
FROM "INPUT_DATA" AS "ADS"), 
"DT_node_data_5" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_4' AS feature, -1.1505672931671143 AS threshold, 100 AS count, 0 AS depth, 0.24814626045059351 AS "Estimator" UNION ALL SELECT 1 AS node_id, 'Feature_3' AS feature, -0.998622477054596 AS threshold, 10 AS count, 1 AS depth, 1.2732184935910125 AS "Estimator" UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, -1.2527953600499262 AS "Estimator" UNION ALL SELECT 3 AS node_id, 'Feature_0' AS feature, -1.0724021196365356 AS threshold, 9 AS count, 2 AS depth, 1.5538866995511167 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 0.29078651113508613 AS "Estimator" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, 1.9147724676699824 AS "Estimator" UNION ALL SELECT 6 AS node_id, 'Feature_1' AS feature, 0.9451490640640259 AS threshold, 90 AS count, 1 AS depth, 0.1342493456572134 AS "Estimator" UNION ALL SELECT 7 AS node_id, 'Feature_4' AS feature, 1.6895700693130493 AS threshold, 77 AS count, 2 AS depth, -0.019471295399288543 AS "Estimator" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 70 AS count, 3 AS depth, 0.07814653456128519 AS "Estimator" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, -0.9956495950050257 AS "Estimator" UNION ALL SELECT 10 AS node_id, 'Feature_1' AS feature, 1.2508000135421753 AS threshold, 13 AS count, 2 AS depth, 1.0447485272995716 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 3 AS depth, 1.4020577809070183 AS "Estimator" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, -0.14628231805858494 AS "Estimator") AS "Values"), 
"DT_Output_5" AS 
(SELECT "DT_node_lookup_5"."KEY" AS "KEY", "DT_node_lookup_5".node_id_2 AS node_id_2, "DT_node_data_5".node_id AS node_id, "DT_node_data_5".feature AS feature, "DT_node_data_5".threshold AS threshold, "DT_node_data_5".count AS count, "DT_node_data_5".depth AS depth, "DT_node_data_5"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_5" LEFT OUTER JOIN "DT_node_data_5" ON "DT_node_lookup_5".node_id_2 = "DT_node_data_5".node_id), 
"AdaBoost_Estim_5" AS 
(SELECT "DT_Output_5"."KEY" AS join_key_5, "DT_Output_5"."Estimator" AS "Estimator_5" 
FROM "DT_Output_5"), 
"DT_node_lookup_6" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_4" <= -0.686296820640564) THEN CASE WHEN ("ADS"."Feature_3" <= 0.44876575469970703) THEN CASE WHEN ("ADS"."Feature_4" <= -2.8526577949523926) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_3" <= 0.7254390716552734) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_3" <= 0.6451475620269775) THEN CASE WHEN ("ADS"."Feature_3" <= -0.3043385148048401) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_1" <= 0.6384348273277283) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "INPUT_DATA" AS "ADS"), 
"DT_node_data_6" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_4' AS feature, -0.686296820640564 AS threshold, 100 AS count, 0 AS depth, 0.054485965480388546 AS "Estimator" UNION ALL SELECT 1 AS node_id, 'Feature_3' AS feature, 0.44876575469970703 AS threshold, 21 AS count, 1 AS depth, 0.7424366407300663 AS "Estimator" UNION ALL SELECT 2 AS node_id, 'Feature_4' AS feature, -2.8526577949523926 AS threshold, 16 AS count, 2 AS depth, 0.37863713494428297 AS "Estimator" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 1.7858704939058352 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 14 AS count, 3 AS depth, 0.1776037979497754 AS "Estimator" UNION ALL SELECT 5 AS node_id, 'Feature_3' AS feature, 0.7254390716552734 AS threshold, 5 AS count, 2 AS depth, 1.9065950592445742 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2.2697546239876076 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 1.8158051680588156 AS "Estimator" UNION ALL SELECT 8 AS node_id, 'Feature_3' AS feature, 0.6451475620269775 AS threshold, 79 AS count, 1 AS depth, -0.1283869988264879 AS "Estimator" UNION ALL SELECT 9 AS node_id, 'Feature_3' AS feature, -0.3043385148048401 AS threshold, 56 AS count, 2 AS depth, 0.1076537352894622 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 27 AS count, 3 AS depth, -0.4264909805457119 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 29 AS count, 3 AS depth, 0.604960884515314 AS "Estimator" UNION ALL SELECT 12 AS node_id, 'Feature_1' AS feature, 0.6384348273277283 AS threshold, 23 AS count, 2 AS depth, -0.7030948731957577 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 3 AS depth, -1.1054251518158915 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, 0.4368409162279547 AS "Estimator") AS "Values"), 
"DT_Output_6" AS 
(SELECT "DT_node_lookup_6"."KEY" AS "KEY", "DT_node_lookup_6".node_id_2 AS node_id_2, "DT_node_data_6".node_id AS node_id, "DT_node_data_6".feature AS feature, "DT_node_data_6".threshold AS threshold, "DT_node_data_6".count AS count, "DT_node_data_6".depth AS depth, "DT_node_data_6"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_6" LEFT OUTER JOIN "DT_node_data_6" ON "DT_node_lookup_6".node_id_2 = "DT_node_data_6".node_id), 
"AdaBoost_Estim_6" AS 
(SELECT "DT_Output_6"."KEY" AS join_key_6, "DT_Output_6"."Estimator" AS "Estimator_6" 
FROM "DT_Output_6"), 
"DT_node_lookup_7" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" <= -0.12552231550216675) THEN CASE WHEN ("ADS"."Feature_2" <= -0.3201594948768616) THEN CASE WHEN ("ADS"."Feature_0" <= -0.1781536191701889) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_4" <= -0.34682920575141907) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_4" <= -0.686296820640564) THEN CASE WHEN ("ADS"."Feature_3" <= -0.8521397113800049) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_2" <= 1.155402421951294) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "INPUT_DATA" AS "ADS"), 
"DT_node_data_7" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.12552231550216675 AS threshold, 100 AS count, 0 AS depth, -0.046802992557376744 AS "Estimator" UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, -0.3201594948768616 AS threshold, 44 AS count, 1 AS depth, 0.44937233506107793 AS "Estimator" UNION ALL SELECT 2 AS node_id, 'Feature_0' AS feature, -0.1781536191701889 AS threshold, 29 AS count, 2 AS depth, -0.07882646583386531 AS "Estimator" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 3 AS depth, 0.9612779840445975 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 3 AS depth, -0.6262498605067406 AS "Estimator" UNION ALL SELECT 5 AS node_id, 'Feature_4' AS feature, -0.34682920575141907 AS threshold, 15 AS count, 2 AS depth, 1.4705566834579684 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, -0.6110549149041202 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS count, 3 AS depth, 1.7908046216675209 AS "Estimator" UNION ALL SELECT 8 AS node_id, 'Feature_4' AS feature, -0.686296820640564 AS threshold, 56 AS count, 1 AS depth, -0.43665503568616265 AS "Estimator" UNION ALL SELECT 9 AS node_id, 'Feature_3' AS feature, -0.8521397113800049 AS threshold, 15 AS count, 2 AS depth, 0.7341613309508976 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, 0.02034858964916042 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, 1.3587474795899177 AS "Estimator" UNION ALL SELECT 12 AS node_id, 'Feature_2' AS feature, 1.155402421951294 AS threshold, 41 AS count, 2 AS depth, -0.8650024868948437 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 35 AS count, 3 AS depth, -1.2136198012484296 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, 1.1685985135010746 AS "Estimator") AS "Values"), 
"DT_Output_7" AS 
(SELECT "DT_node_lookup_7"."KEY" AS "KEY", "DT_node_lookup_7".node_id_2 AS node_id_2, "DT_node_data_7".node_id AS node_id, "DT_node_data_7".feature AS feature, "DT_node_data_7".threshold AS threshold, "DT_node_data_7".count AS count, "DT_node_data_7".depth AS depth, "DT_node_data_7"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_7" LEFT OUTER JOIN "DT_node_data_7" ON "DT_node_lookup_7".node_id_2 = "DT_node_data_7".node_id), 
"AdaBoost_Estim_7" AS 
(SELECT "DT_Output_7"."KEY" AS join_key_7, "DT_Output_7"."Estimator" AS "Estimator_7" 
FROM "DT_Output_7"), 
"DT_node_lookup_8" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" <= -0.10940567404031754) THEN CASE WHEN ("ADS"."Feature_3" <= -0.16697542369365692) THEN CASE WHEN ("ADS"."Feature_0" <= -0.1781536191701889) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_1" <= -0.37980037927627563) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_0" <= 0.19266799092292786) THEN CASE WHEN ("ADS"."Feature_0" <= -0.5474665760993958) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_0" <= 0.6466724872589111) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "INPUT_DATA" AS "ADS"), 
"DT_node_data_8" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.10940567404031754 AS threshold, 100 AS count, 0 AS depth, -0.13601781533986854 AS "Estimator" UNION ALL SELECT 1 AS node_id, 'Feature_3' AS feature, -0.16697542369365692 AS threshold, 52 AS count, 1 AS depth, 0.36208540503552505 AS "Estimator" UNION ALL SELECT 2 AS node_id, 'Feature_0' AS feature, -0.1781536191701889 AS threshold, 26 AS count, 2 AS depth, -0.356684405000182 AS "Estimator" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS count, 3 AS depth, 0.35361167298459795 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, -0.877568195522354 AS "Estimator" UNION ALL SELECT 5 AS node_id, 'Feature_1' AS feature, -0.37980037927627563 AS threshold, 26 AS count, 2 AS depth, 1.0808552150712325 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, -0.12030049133355197 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 20 AS count, 3 AS depth, 1.4412019269926677 AS "Estimator" UNION ALL SELECT 8 AS node_id, 'Feature_0' AS feature, 0.19266799092292786 AS threshold, 48 AS count, 1 AS depth, -0.6756296374132115 AS "Estimator" UNION ALL SELECT 9 AS node_id, 'Feature_0' AS feature, -0.5474665760993958 AS threshold, 26 AS count, 2 AS depth, -1.2393010879771116 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 3 AS depth, -0.40912936626426133 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 3 AS depth, -1.7581584140476438 AS "Estimator" UNION ALL SELECT 12 AS node_id, 'Feature_0' AS feature, 0.6466724872589111 AS threshold, 22 AS count, 2 AS depth, -0.00947246856496544 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS count, 3 AS depth, 0.7362747289535465 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, -1.0866628649805936 AS "Estimator") AS "Values"), 
"DT_Output_8" AS 
(SELECT "DT_node_lookup_8"."KEY" AS "KEY", "DT_node_lookup_8".node_id_2 AS node_id_2, "DT_node_data_8".node_id AS node_id, "DT_node_data_8".feature AS feature, "DT_node_data_8".threshold AS threshold, "DT_node_data_8".count AS count, "DT_node_data_8".depth AS depth, "DT_node_data_8"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_8" LEFT OUTER JOIN "DT_node_data_8" ON "DT_node_lookup_8".node_id_2 = "DT_node_data_8".node_id), 
"AdaBoost_Estim_8" AS 
(SELECT "DT_Output_8"."KEY" AS join_key_8, "DT_Output_8"."Estimator" AS "Estimator_8" 
FROM "DT_Output_8"), 
"DT_node_lookup_9" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_4" <= -0.033142827451229095) THEN CASE WHEN ("ADS"."Feature_1" <= -0.04338344186544418) THEN CASE WHEN ("ADS"."Feature_0" <= -0.678520679473877) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_1" <= -0.033248789608478546) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_3" <= -0.6820945739746094) THEN CASE WHEN ("ADS"."Feature_0" <= 1.5093865394592285) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_0" <= 0.19266799092292786) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "INPUT_DATA" AS "ADS"), 
"DT_node_data_9" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_4' AS feature, -0.033142827451229095 AS threshold, 100 AS count, 0 AS depth, 0.08845033948355739 AS "Estimator" UNION ALL SELECT 1 AS node_id, 'Feature_1' AS feature, -0.04338344186544418 AS threshold, 51 AS count, 1 AS depth, 0.7272170607540466 AS "Estimator" UNION ALL SELECT 2 AS node_id, 'Feature_0' AS feature, -0.678520679473877 AS threshold, 30 AS count, 2 AS depth, 0.33286804349066607 AS "Estimator" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, -0.6987189646908831 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 26 AS count, 3 AS depth, 0.49157373705705837 AS "Estimator" UNION ALL SELECT 5 AS node_id, 'Feature_1' AS feature, -0.033248789608478546 AS threshold, 21 AS count, 2 AS depth, 1.2905727997017329 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, 1.95077539523179 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 14 AS count, 3 AS depth, 0.9604715019367049 AS "Estimator" UNION ALL SELECT 8 AS node_id, 'Feature_3' AS feature, -0.6820945739746094 AS threshold, 49 AS count, 1 AS depth, -0.5763884928591966 AS "Estimator" UNION ALL SELECT 9 AS node_id, 'Feature_0' AS feature, 1.5093865394592285 AS threshold, 10 AS count, 2 AS depth, 0.5886665092554393 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, 1.0445395916577123 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, -1.2348258203536526 AS "Estimator" UNION ALL SELECT 12 AS node_id, 'Feature_0' AS feature, 0.19266799092292786 AS threshold, 39 AS count, 2 AS depth, -0.8751205446834623 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 28 AS count, 3 AS depth, -1.25497795273548 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS count, 3 AS depth, 0.09178922126712843 AS "Estimator") AS "Values"), 
"DT_Output_9" AS 
(SELECT "DT_node_lookup_9"."KEY" AS "KEY", "DT_node_lookup_9".node_id_2 AS node_id_2, "DT_node_data_9".node_id AS node_id, "DT_node_data_9".feature AS feature, "DT_node_data_9".threshold AS threshold, "DT_node_data_9".count AS count, "DT_node_data_9".depth AS depth, "DT_node_data_9"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_9" LEFT OUTER JOIN "DT_node_data_9" ON "DT_node_lookup_9".node_id_2 = "DT_node_data_9".node_id), 
"AdaBoost_Estim_9" AS 
(SELECT "DT_Output_9"."KEY" AS join_key_9, "DT_Output_9"."Estimator" AS "Estimator_9" 
FROM "DT_Output_9"), 
"DT_node_lookup_10" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" <= 0.04458539932966232) THEN CASE WHEN ("ADS"."Feature_4" <= -1.1330924034118652) THEN CASE WHEN ("ADS"."Feature_1" <= -0.8468704223632812) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_4" <= -0.10859403014183044) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_4" <= -0.5127382278442383) THEN CASE WHEN ("ADS"."Feature_1" <= -1.1076488494873047) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_2" <= 1.0980031490325928) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "INPUT_DATA" AS "ADS"), 
"DT_node_data_10" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, 0.04458539932966232 AS threshold, 100 AS count, 0 AS depth, 0.06027763273059701 AS "Estimator" UNION ALL SELECT 1 AS node_id, 'Feature_4' AS feature, -1.1330924034118652 AS threshold, 55 AS count, 1 AS depth, 0.5465441594930066 AS "Estimator" UNION ALL SELECT 2 AS node_id, 'Feature_1' AS feature, -0.8468704223632812 AS threshold, 8 AS count, 2 AS depth, 2.0801162697301288 AS "Estimator" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 1.764052345967664 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 2.2697546239876076 AS "Estimator" UNION ALL SELECT 5 AS node_id, 'Feature_4' AS feature, -0.10859403014183044 AS threshold, 47 AS count, 2 AS depth, 0.285510608814348 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 25 AS count, 3 AS depth, -0.19521647320780372 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 22 AS count, 3 AS depth, 0.8317913838395203 AS "Estimator" UNION ALL SELECT 8 AS node_id, 'Feature_4' AS feature, -0.5127382278442383 AS threshold, 45 AS count, 1 AS depth, -0.5340481222012368 AS "Estimator" UNION ALL SELECT 9 AS node_id, 'Feature_1' AS feature, -1.1076488494873047 AS threshold, 20 AS count, 2 AS depth, 0.1277315271800888 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, -1.1948148099476814 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS count, 3 AS depth, 0.8398718625565802 AS "Estimator" UNION ALL SELECT 12 AS node_id, 'Feature_2' AS feature, 1.0980031490325928 AS threshold, 25 AS count, 2 AS depth, -1.0634718417062976 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 20 AS count, 3 AS depth, -0.691092348174353 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, -2.5529898158340787 AS "Estimator") AS "Values"), 
"DT_Output_10" AS 
(SELECT "DT_node_lookup_10"."KEY" AS "KEY", "DT_node_lookup_10".node_id_2 AS node_id_2, "DT_node_data_10".node_id AS node_id, "DT_node_data_10".feature AS feature, "DT_node_data_10".threshold AS threshold, "DT_node_data_10".count AS count, "DT_node_data_10".depth AS depth, "DT_node_data_10"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_10" LEFT OUTER JOIN "DT_node_data_10" ON "DT_node_lookup_10".node_id_2 = "DT_node_data_10".node_id), 
"AdaBoost_Estim_10" AS 
(SELECT "DT_Output_10"."KEY" AS join_key_10, "DT_Output_10"."Estimator" AS "Estimator_10" 
FROM "DT_Output_10"), 
"DT_node_lookup_11" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_3" <= -2.329103469848633) THEN 1 ELSE CASE WHEN ("ADS"."Feature_0" <= 0.19266799092292786) THEN CASE WHEN ("ADS"."Feature_3" <= -1.084987759590149) THEN 4 ELSE 5 END ELSE CASE WHEN ("ADS"."Feature_3" <= 1.42232346534729) THEN 7 ELSE 8 END END END AS node_id_2 
FROM "INPUT_DATA" AS "ADS"), 
"DT_node_data_11" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, -2.329103469848633 AS threshold, 100 AS count, 0 AS depth, 0.011468617749495102 AS "Estimator" UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 1 AS depth, 1.8958891760305832 AS "Estimator" UNION ALL SELECT 2 AS node_id, 'Feature_0' AS feature, 0.19266799092292786 AS threshold, 94 AS count, 1 AS depth, -0.10881354554504256 AS "Estimator" UNION ALL SELECT 3 AS node_id, 'Feature_3' AS feature, -1.084987759590149 AS threshold, 52 AS count, 2 AS depth, -0.4992295086831817 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 1.4642248985116328 AS "Estimator" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 48 AS count, 3 AS depth, -0.6628507092827496 AS "Estimator" UNION ALL SELECT 6 AS node_id, 'Feature_3' AS feature, 1.42232346534729 AS threshold, 42 AS count, 2 AS depth, 0.37455859929265367 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 36 AS count, 3 AS depth, 0.6292126947761209 AS "Estimator" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, -1.1533659736081485 AS "Estimator") AS "Values"), 
"DT_Output_11" AS 
(SELECT "DT_node_lookup_11"."KEY" AS "KEY", "DT_node_lookup_11".node_id_2 AS node_id_2, "DT_node_data_11".node_id AS node_id, "DT_node_data_11".feature AS feature, "DT_node_data_11".threshold AS threshold, "DT_node_data_11".count AS count, "DT_node_data_11".depth AS depth, "DT_node_data_11"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_11" LEFT OUTER JOIN "DT_node_data_11" ON "DT_node_lookup_11".node_id_2 = "DT_node_data_11".node_id), 
"AdaBoost_Estim_11" AS 
(SELECT "DT_Output_11"."KEY" AS join_key_11, "DT_Output_11"."Estimator" AS "Estimator_11" 
FROM "DT_Output_11"), 
"AdaBoost_Join_CTE" AS 
(SELECT "AdaBoost_Estim_0".join_key_0 AS join_key_0, "AdaBoost_Estim_0"."Estimator_0" AS "Estimator_0", "AdaBoost_Estim_1".join_key_1 AS join_key_1, "AdaBoost_Estim_1"."Estimator_1" AS "Estimator_1", "AdaBoost_Estim_2".join_key_2 AS join_key_2, "AdaBoost_Estim_2"."Estimator_2" AS "Estimator_2", "AdaBoost_Estim_3".join_key_3 AS join_key_3, "AdaBoost_Estim_3"."Estimator_3" AS "Estimator_3", "AdaBoost_Estim_4".join_key_4 AS join_key_4, "AdaBoost_Estim_4"."Estimator_4" AS "Estimator_4", "AdaBoost_Estim_5".join_key_5 AS join_key_5, "AdaBoost_Estim_5"."Estimator_5" AS "Estimator_5", "AdaBoost_Estim_6".join_key_6 AS join_key_6, "AdaBoost_Estim_6"."Estimator_6" AS "Estimator_6", "AdaBoost_Estim_7".join_key_7 AS join_key_7, "AdaBoost_Estim_7"."Estimator_7" AS "Estimator_7", "AdaBoost_Estim_8".join_key_8 AS join_key_8, "AdaBoost_Estim_8"."Estimator_8" AS "Estimator_8", "AdaBoost_Estim_9".join_key_9 AS join_key_9, "AdaBoost_Estim_9"."Estimator_9" AS "Estimator_9", "AdaBoost_Estim_10".join_key_10 AS join_key_10, "AdaBoost_Estim_10"."Estimator_10" AS "Estimator_10", "AdaBoost_Estim_11".join_key_11 AS join_key_11, "AdaBoost_Estim_11"."Estimator_11" AS "Estimator_11" 
FROM "AdaBoost_Estim_0" LEFT OUTER JOIN "AdaBoost_Estim_1" ON "AdaBoost_Estim_0".join_key_0 = "AdaBoost_Estim_1".join_key_1 LEFT OUTER JOIN "AdaBoost_Estim_2" ON "AdaBoost_Estim_2".join_key_2 = "AdaBoost_Estim_1".join_key_1 LEFT OUTER JOIN "AdaBoost_Estim_3" ON "AdaBoost_Estim_3".join_key_3 = "AdaBoost_Estim_2".join_key_2 LEFT OUTER JOIN "AdaBoost_Estim_4" ON "AdaBoost_Estim_4".join_key_4 = "AdaBoost_Estim_3".join_key_3 LEFT OUTER JOIN "AdaBoost_Estim_5" ON "AdaBoost_Estim_5".join_key_5 = "AdaBoost_Estim_4".join_key_4 LEFT OUTER JOIN "AdaBoost_Estim_6" ON "AdaBoost_Estim_6".join_key_6 = "AdaBoost_Estim_5".join_key_5 LEFT OUTER JOIN "AdaBoost_Estim_7" ON "AdaBoost_Estim_7".join_key_7 = "AdaBoost_Estim_6".join_key_6 LEFT OUTER JOIN "AdaBoost_Estim_8" ON "AdaBoost_Estim_8".join_key_8 = "AdaBoost_Estim_7".join_key_7 LEFT OUTER JOIN "AdaBoost_Estim_9" ON "AdaBoost_Estim_9".join_key_9 = "AdaBoost_Estim_8".join_key_8 LEFT OUTER JOIN "AdaBoost_Estim_10" ON "AdaBoost_Estim_10".join_key_10 = "AdaBoost_Estim_9".join_key_9 LEFT OUTER JOIN "AdaBoost_Estim_11" ON "AdaBoost_Estim_11".join_key_11 = "AdaBoost_Estim_10".join_key_10), 
"WeightedEstimators" AS 
(SELECT "Values"."Key" AS "Key", "Values".sub_estimator AS sub_estimator, "Values"."Weight" AS "Weight", "Values"."Value" AS "Value" 
FROM (SELECT "AdaBoost_Join_CTE".join_key_0 AS "Key", 0 AS sub_estimator, 0.0514856517843 AS "Weight", "AdaBoost_Join_CTE"."Estimator_0" AS "Value" 
FROM "AdaBoost_Join_CTE" UNION ALL SELECT "AdaBoost_Join_CTE".join_key_0 AS "Key", 1 AS sub_estimator, 0.051738274727 AS "Weight", "AdaBoost_Join_CTE"."Estimator_1" AS "Value" 
FROM "AdaBoost_Join_CTE" UNION ALL SELECT "AdaBoost_Join_CTE".join_key_0 AS "Key", 2 AS sub_estimator, 0.0418551395807 AS "Weight", "AdaBoost_Join_CTE"."Estimator_2" AS "Value" 
FROM "AdaBoost_Join_CTE" UNION ALL SELECT "AdaBoost_Join_CTE".join_key_0 AS "Key", 3 AS sub_estimator, 0.0430097090934 AS "Weight", "AdaBoost_Join_CTE"."Estimator_3" AS "Value" 
FROM "AdaBoost_Join_CTE" UNION ALL SELECT "AdaBoost_Join_CTE".join_key_0 AS "Key", 4 AS sub_estimator, 0.038101135445 AS "Weight", "AdaBoost_Join_CTE"."Estimator_4" AS "Value" 
FROM "AdaBoost_Join_CTE" UNION ALL SELECT "AdaBoost_Join_CTE".join_key_0 AS "Key", 5 AS sub_estimator, 0.0392787725639 AS "Weight", "AdaBoost_Join_CTE"."Estimator_5" AS "Value" 
FROM "AdaBoost_Join_CTE" UNION ALL SELECT "AdaBoost_Join_CTE".join_key_0 AS "Key", 6 AS sub_estimator, 0.0190603466824 AS "Weight", "AdaBoost_Join_CTE"."Estimator_6" AS "Value" 
FROM "AdaBoost_Join_CTE" UNION ALL SELECT "AdaBoost_Join_CTE".join_key_0 AS "Key", 7 AS sub_estimator, 0.0409802632951 AS "Weight", "AdaBoost_Join_CTE"."Estimator_7" AS "Value" 
FROM "AdaBoost_Join_CTE" UNION ALL SELECT "AdaBoost_Join_CTE".join_key_0 AS "Key", 8 AS sub_estimator, 0.0563677492811 AS "Weight", "AdaBoost_Join_CTE"."Estimator_8" AS "Value" 
FROM "AdaBoost_Join_CTE" UNION ALL SELECT "AdaBoost_Join_CTE".join_key_0 AS "Key", 9 AS sub_estimator, 0.0336000764557 AS "Weight", "AdaBoost_Join_CTE"."Estimator_9" AS "Value" 
FROM "AdaBoost_Join_CTE" UNION ALL SELECT "AdaBoost_Join_CTE".join_key_0 AS "Key", 10 AS sub_estimator, 0.0551445592372 AS "Weight", "AdaBoost_Join_CTE"."Estimator_10" AS "Value" 
FROM "AdaBoost_Join_CTE" UNION ALL SELECT "AdaBoost_Join_CTE".join_key_0 AS "Key", 11 AS sub_estimator, 0.0293783218542 AS "Weight", "AdaBoost_Join_CTE"."Estimator_11" AS "Value" 
FROM "AdaBoost_Join_CTE") AS "Values"), 
"Cumulative_Frequencies" AS 
(SELECT u1."Key" AS "Key", u1.sub_estimator AS sub_estimator, u1."Weight" AS "Weight", u1."Value" AS "Value", (SELECT sum(u2."Weight") AS sum_1 
FROM "WeightedEstimators" AS u2 
WHERE u1."Key" = u2."Key" AND u1."Value" >= u2."Value") AS cum_weight 
FROM "WeightedEstimators" AS u1), 
"Quantiles" AS 
(SELECT "AdaBoost_Join_CTE".join_key_0 AS join_key_0, "AdaBoost_Join_CTE"."Estimator_0" AS "Estimator_0", "AdaBoost_Join_CTE".join_key_1 AS join_key_1, "AdaBoost_Join_CTE"."Estimator_1" AS "Estimator_1", "AdaBoost_Join_CTE".join_key_2 AS join_key_2, "AdaBoost_Join_CTE"."Estimator_2" AS "Estimator_2", "AdaBoost_Join_CTE".join_key_3 AS join_key_3, "AdaBoost_Join_CTE"."Estimator_3" AS "Estimator_3", "AdaBoost_Join_CTE".join_key_4 AS join_key_4, "AdaBoost_Join_CTE"."Estimator_4" AS "Estimator_4", "AdaBoost_Join_CTE".join_key_5 AS join_key_5, "AdaBoost_Join_CTE"."Estimator_5" AS "Estimator_5", "AdaBoost_Join_CTE".join_key_6 AS join_key_6, "AdaBoost_Join_CTE"."Estimator_6" AS "Estimator_6", "AdaBoost_Join_CTE".join_key_7 AS join_key_7, "AdaBoost_Join_CTE"."Estimator_7" AS "Estimator_7", "AdaBoost_Join_CTE".join_key_8 AS join_key_8, "AdaBoost_Join_CTE"."Estimator_8" AS "Estimator_8", "AdaBoost_Join_CTE".join_key_9 AS join_key_9, "AdaBoost_Join_CTE"."Estimator_9" AS "Estimator_9", "AdaBoost_Join_CTE".join_key_10 AS join_key_10, "AdaBoost_Join_CTE"."Estimator_10" AS "Estimator_10", "AdaBoost_Join_CTE".join_key_11 AS join_key_11, "AdaBoost_Join_CTE"."Estimator_11" AS "Estimator_11", (SELECT min("Cumulative_Frequencies"."Value") AS min_1 
FROM "Cumulative_Frequencies" 
WHERE "AdaBoost_Join_CTE".join_key_0 = "Cumulative_Frequencies"."Key" AND "Cumulative_Frequencies".cum_weight >= 0.5) AS "Median" 
FROM "AdaBoost_Join_CTE")
 SELECT "Quantiles".join_key_0 AS "KEY", "Quantiles"."Median" AS "Estimator" 
FROM "Quantiles"