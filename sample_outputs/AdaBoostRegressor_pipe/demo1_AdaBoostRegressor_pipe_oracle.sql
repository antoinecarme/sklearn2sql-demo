-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH "DT_node_data" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'anova_output_3' AS feature, 1.0217169523239136 AS threshold, 100 AS count, 0 AS depth, 0.033133628468157365 AS "Estimator" FROM DUAL UNION ALL SELECT 1 AS node_id, 'anova_output_5' AS feature, 0.6390423774719238 AS threshold, 84 AS count, 1 AS depth, 0.16642955541929574 AS "Estimator" FROM DUAL UNION ALL SELECT 2 AS node_id, 'anova_output_5' AS feature, -1.8871979713439941 AS threshold, 59 AS count, 2 AS depth, -0.05302611430801551 AS "Estimator" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 1.7858704939058352 AS "Estimator" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 57 AS count, 3 AS depth, -0.1175488023155191 AS "Estimator" FROM DUAL UNION ALL SELECT 5 AS node_id, 'anova_output_6' AS feature, 0.3674924373626709 AS threshold, 25 AS count, 2 AS depth, 0.6843449359757505 AS "Estimator" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, 0.07078425424323309 AS "Estimator" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 3 AS depth, 1.0294728194502916 AS "Estimator" FROM DUAL UNION ALL SELECT 8 AS node_id, 'anova_output_4' AS feature, 0.5971894264221191 AS threshold, 16 AS count, 1 AS depth, -0.6666699880253197 AS "Estimator" FROM DUAL UNION ALL SELECT 9 AS node_id, 'anova_output_5' AS feature, -0.9524213075637817 AS threshold, 11 AS count, 2 AS depth, -0.3384868325192468 AS "Estimator" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 1.1787795711596507 AS "Estimator" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 3 AS depth, -0.4902134728871365 AS "Estimator" FROM DUAL UNION ALL SELECT 12 AS node_id, 'anova_output_2' AS feature, 0.3494811952114105 AS threshold, 5 AS count, 2 AS depth, -1.3886729301386798 AS "Estimator" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, -1.6629362969801924 AS "Estimator" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, -0.977277879876411 AS "Estimator" FROM DUAL) "Values"), 
"ADS_imp_1_OUT" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" IS NULL) THEN -0.0694906390703 ELSE "ADS"."Feature_0" END AS impute_output_2, CASE WHEN ("ADS"."Feature_1" IS NULL) THEN -0.119163503916 ELSE "ADS"."Feature_1" END AS impute_output_3, CASE WHEN ("ADS"."Feature_2" IS NULL) THEN -0.127896899745 ELSE "ADS"."Feature_2" END AS impute_output_4, CASE WHEN ("ADS"."Feature_3" IS NULL) THEN -0.114287346209 ELSE "ADS"."Feature_3" END AS impute_output_5, CASE WHEN ("ADS"."Feature_4" IS NULL) THEN 0.0413271968547 ELSE "ADS"."Feature_4" END AS impute_output_6 
FROM "INPUT_DATA" "ADS"), 
"ADS_ano_2_OUT" AS 
(SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", ("ADS_imp_1_OUT".impute_output_2 - -0.0694906390703) * -0.053647534364 + ("ADS_imp_1_OUT".impute_output_3 - -0.119163503916) * -0.452838029092 + ("ADS_imp_1_OUT".impute_output_4 - -0.127896899745) * 0.689918784888 + ("ADS_imp_1_OUT".impute_output_5 - -0.114287346209) * -0.33402126184 + ("ADS_imp_1_OUT".impute_output_6 - 0.0413271968547) * -0.452218452037 AS anova_output_2, ("ADS_imp_1_OUT".impute_output_2 - -0.0694906390703) * -0.620732053756 + ("ADS_imp_1_OUT".impute_output_3 - -0.119163503916) * 0.179006433042 + ("ADS_imp_1_OUT".impute_output_4 - -0.127896899745) * 0.520498333383 + ("ADS_imp_1_OUT".impute_output_5 - -0.114287346209) * 0.386172344142 + ("ADS_imp_1_OUT".impute_output_6 - 0.0413271968547) * 0.403237919763 AS anova_output_3, ("ADS_imp_1_OUT".impute_output_2 - -0.0694906390703) * 0.534948377585 + ("ADS_imp_1_OUT".impute_output_3 - -0.119163503916) * -0.502789475991 + ("ADS_imp_1_OUT".impute_output_4 - -0.127896899745) * 0.167923582168 + ("ADS_imp_1_OUT".impute_output_5 - -0.114287346209) * 0.610459612885 + ("ADS_imp_1_OUT".impute_output_6 - 0.0413271968547) * 0.245303297449 AS anova_output_4, ("ADS_imp_1_OUT".impute_output_2 - -0.0694906390703) * 0.119525555247 + ("ADS_imp_1_OUT".impute_output_3 - -0.119163503916) * -0.210071806412 + ("ADS_imp_1_OUT".impute_output_4 - -0.127896899745) * 0.0756568397014 + ("ADS_imp_1_OUT".impute_output_5 - -0.114287346209) * -0.602658142322 + ("ADS_imp_1_OUT".impute_output_6 - 0.0413271968547) * 0.756744794427 AS anova_output_5, ("ADS_imp_1_OUT".impute_output_2 - -0.0694906390703) * -0.557994206474 + ("ADS_imp_1_OUT".impute_output_3 - -0.119163503916) * -0.682617751982 + ("ADS_imp_1_OUT".impute_output_4 - -0.127896899745) * -0.468157311555 + ("ADS_imp_1_OUT".impute_output_5 - -0.114287346209) * 0.0586765863683 + ("ADS_imp_1_OUT".impute_output_6 - 0.0413271968547) * -0.0078268813005 AS anova_output_6 
FROM "ADS_imp_1_OUT"), 
"DT_node_lookup" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anova_output_3 <= 1.0217169523239136) THEN CASE WHEN ("ADS_ano_2_OUT".anova_output_5 <= 0.6390423774719238) THEN CASE WHEN ("ADS_ano_2_OUT".anova_output_5 <= -1.8871979713439941) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_ano_2_OUT".anova_output_6 <= 0.3674924373626709) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_ano_2_OUT".anova_output_4 <= 0.5971894264221191) THEN CASE WHEN ("ADS_ano_2_OUT".anova_output_5 <= -0.9524213075637817) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_ano_2_OUT".anova_output_2 <= 0.3494811952114105) THEN 13 ELSE 14 END END END AS node_id 
FROM "ADS_ano_2_OUT"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", (SELECT "DT_node_data".node_id 
FROM "DT_node_data" 
WHERE "DT_node_data".node_id = "DT_node_lookup".node_id) AS node_id, (SELECT "DT_node_data".feature 
FROM "DT_node_data" 
WHERE "DT_node_data".node_id = "DT_node_lookup".node_id) AS feature, (SELECT "DT_node_data".threshold 
FROM "DT_node_data" 
WHERE "DT_node_data".node_id = "DT_node_lookup".node_id) AS threshold, (SELECT "DT_node_data".count 
FROM "DT_node_data" 
WHERE "DT_node_data".node_id = "DT_node_lookup".node_id) AS count, (SELECT "DT_node_data".depth 
FROM "DT_node_data" 
WHERE "DT_node_data".node_id = "DT_node_lookup".node_id) AS depth, (SELECT "DT_node_data"."Estimator" 
FROM "DT_node_data" 
WHERE "DT_node_data".node_id = "DT_node_lookup".node_id) AS "Estimator" 
FROM "DT_node_lookup"), 
"AdaBoost_Estim_0" AS 
(SELECT "DT_Output"."KEY" AS join_key_0, "DT_Output"."Estimator" AS "Estimator_0" 
FROM "DT_Output"), 
"DT_node_data_1" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'anova_output_5' AS feature, -1.0742406845092773 AS threshold, 100 AS count, 0 AS depth, 0.028741333509785475 AS "Estimator" FROM DUAL UNION ALL SELECT 1 AS node_id, 'anova_output_6' AS feature, 0.990790069103241 AS threshold, 15 AS count, 1 AS depth, 1.04401125777855 AS "Estimator" FROM DUAL UNION ALL SELECT 2 AS node_id, 'anova_output_6' AS feature, 0.27707210183143616 AS threshold, 12 AS count, 2 AS depth, 1.3743080063571744 AS "Estimator" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, 0.7642434186488855 AS "Estimator" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, 1.9843725940654637 AS "Estimator" FROM DUAL UNION ALL SELECT 5 AS node_id, 'anova_output_6' AS feature, 1.1868104934692383 AS threshold, 3 AS count, 2 AS depth, -0.27717573653594874 AS "Estimator" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, -0.8877857476301128 AS "Estimator" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 0.028129269011133273 AS "Estimator" FROM DUAL UNION ALL SELECT 8 AS node_id, 'anova_output_5' AS feature, 1.6645958423614502 AS threshold, 85 AS count, 1 AS depth, -0.15042394724352612 AS "Estimator" FROM DUAL UNION ALL SELECT 9 AS node_id, 'anova_output_3' AS feature, 0.9984962344169617 AS threshold, 83 AS count, 2 AS depth, -0.19973269720193823 AS "Estimator" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 64 AS count, 3 AS depth, -0.039370565147183074 AS "Estimator" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 3 AS depth, -0.7398998788600606 AS "Estimator" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 2 AS depth, 1.8958891760305832 AS "Estimator" FROM DUAL) "Values"), 
"DT_node_lookup_1" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anova_output_5 <= -1.0742406845092773) THEN CASE WHEN ("ADS_ano_2_OUT".anova_output_6 <= 0.990790069103241) THEN CASE WHEN ("ADS_ano_2_OUT".anova_output_6 <= 0.27707210183143616) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_ano_2_OUT".anova_output_6 <= 1.1868104934692383) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_ano_2_OUT".anova_output_5 <= 1.6645958423614502) THEN CASE WHEN ("ADS_ano_2_OUT".anova_output_3 <= 0.9984962344169617) THEN 10 ELSE 11 END ELSE 12 END END AS node_id 
FROM "ADS_ano_2_OUT"), 
"DT_Output_1" AS 
(SELECT "DT_node_lookup_1"."KEY" AS "KEY", (SELECT "DT_node_data_1".node_id 
FROM "DT_node_data_1" 
WHERE "DT_node_data_1".node_id = "DT_node_lookup_1".node_id) AS node_id, (SELECT "DT_node_data_1".feature 
FROM "DT_node_data_1" 
WHERE "DT_node_data_1".node_id = "DT_node_lookup_1".node_id) AS feature, (SELECT "DT_node_data_1".threshold 
FROM "DT_node_data_1" 
WHERE "DT_node_data_1".node_id = "DT_node_lookup_1".node_id) AS threshold, (SELECT "DT_node_data_1".count 
FROM "DT_node_data_1" 
WHERE "DT_node_data_1".node_id = "DT_node_lookup_1".node_id) AS count, (SELECT "DT_node_data_1".depth 
FROM "DT_node_data_1" 
WHERE "DT_node_data_1".node_id = "DT_node_lookup_1".node_id) AS depth, (SELECT "DT_node_data_1"."Estimator" 
FROM "DT_node_data_1" 
WHERE "DT_node_data_1".node_id = "DT_node_lookup_1".node_id) AS "Estimator" 
FROM "DT_node_lookup_1"), 
"AdaBoost_Estim_1" AS 
(SELECT "DT_Output_1"."KEY" AS join_key_1, "DT_Output_1"."Estimator" AS "Estimator_1" 
FROM "DT_Output_1"), 
"DT_node_data_2" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'anova_output_5' AS feature, -1.0698127746582031 AS threshold, 100 AS count, 0 AS depth, 0.07404640904543526 AS "Estimator" FROM DUAL UNION ALL SELECT 1 AS node_id, 'anova_output_6' AS feature, 0.8015549182891846 AS threshold, 14 AS count, 1 AS depth, 1.1523202232259582 AS "Estimator" FROM DUAL UNION ALL SELECT 2 AS node_id, 'anova_output_6' AS feature, -0.690369725227356 AS threshold, 11 AS count, 2 AS depth, 1.460520415129121 AS "Estimator" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 0.3048402584246478 AS "Estimator" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, 1.7173382277301152 AS "Estimator" FROM DUAL UNION ALL SELECT 5 AS node_id, 'anova_output_6' AS feature, 1.5982980728149414 AS threshold, 3 AS count, 2 AS depth, 0.022252852914362343 AS "Estimator" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 0.04575851730144607 AS "Estimator" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 0.010500020720820478 AS "Estimator" FROM DUAL UNION ALL SELECT 8 AS node_id, 'anova_output_4' AS feature, 0.5879766941070557 AS threshold, 86 AS count, 1 AS depth, -0.10148653744906848 AS "Estimator" FROM DUAL UNION ALL SELECT 9 AS node_id, 'anova_output_3' AS feature, -0.6702580451965332 AS threshold, 61 AS count, 2 AS depth, 0.22904689407587095 AS "Estimator" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 14 AS count, 3 AS depth, -0.8833357106547132 AS "Estimator" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 47 AS count, 3 AS depth, 0.5603949039956193 AS "Estimator" FROM DUAL UNION ALL SELECT 12 AS node_id, 'anova_output_4' AS feature, 0.9318726658821106 AS threshold, 25 AS count, 2 AS depth, -0.9079881103699204 AS "Estimator" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 3 AS depth, -1.3116649529547497 AS "Estimator" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, -0.05017481987715819 AS "Estimator" FROM DUAL) "Values"), 
"DT_node_lookup_2" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anova_output_5 <= -1.0698127746582031) THEN CASE WHEN ("ADS_ano_2_OUT".anova_output_6 <= 0.8015549182891846) THEN CASE WHEN ("ADS_ano_2_OUT".anova_output_6 <= -0.690369725227356) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_ano_2_OUT".anova_output_6 <= 1.5982980728149414) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_ano_2_OUT".anova_output_4 <= 0.5879766941070557) THEN CASE WHEN ("ADS_ano_2_OUT".anova_output_3 <= -0.6702580451965332) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_ano_2_OUT".anova_output_4 <= 0.9318726658821106) THEN 13 ELSE 14 END END END AS node_id 
FROM "ADS_ano_2_OUT"), 
"DT_Output_2" AS 
(SELECT "DT_node_lookup_2"."KEY" AS "KEY", (SELECT "DT_node_data_2".node_id 
FROM "DT_node_data_2" 
WHERE "DT_node_data_2".node_id = "DT_node_lookup_2".node_id) AS node_id, (SELECT "DT_node_data_2".feature 
FROM "DT_node_data_2" 
WHERE "DT_node_data_2".node_id = "DT_node_lookup_2".node_id) AS feature, (SELECT "DT_node_data_2".threshold 
FROM "DT_node_data_2" 
WHERE "DT_node_data_2".node_id = "DT_node_lookup_2".node_id) AS threshold, (SELECT "DT_node_data_2".count 
FROM "DT_node_data_2" 
WHERE "DT_node_data_2".node_id = "DT_node_lookup_2".node_id) AS count, (SELECT "DT_node_data_2".depth 
FROM "DT_node_data_2" 
WHERE "DT_node_data_2".node_id = "DT_node_lookup_2".node_id) AS depth, (SELECT "DT_node_data_2"."Estimator" 
FROM "DT_node_data_2" 
WHERE "DT_node_data_2".node_id = "DT_node_lookup_2".node_id) AS "Estimator" 
FROM "DT_node_lookup_2"), 
"AdaBoost_Estim_2" AS 
(SELECT "DT_Output_2"."KEY" AS join_key_2, "DT_Output_2"."Estimator" AS "Estimator_2" 
FROM "DT_Output_2"), 
"DT_node_data_3" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'anova_output_6' AS feature, -1.1594027280807495 AS threshold, 100 AS count, 0 AS depth, -0.09859482401234348 AS "Estimator" FROM DUAL UNION ALL SELECT 1 AS node_id, 'anova_output_2' AS feature, -0.457974910736084 AS threshold, 9 AS count, 1 AS depth, 1.5942174891695364 AS "Estimator" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 2 AS depth, 2.2408931992014582 AS "Estimator" FROM DUAL UNION ALL SELECT 3 AS node_id, 'anova_output_2' AS feature, 0.30902352929115295 AS threshold, 3 AS count, 2 AS depth, 0.3008660691056945 AS "Estimator" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, -0.30230275057533557 AS "Estimator" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 0.6024504789462095 AS "Estimator" FROM DUAL UNION ALL SELECT 6 AS node_id, 'anova_output_6' AS feature, 0.7961379289627075 AS threshold, 91 AS count, 1 AS depth, -0.2660158220193426 AS "Estimator" FROM DUAL UNION ALL SELECT 7 AS node_id, 'anova_output_3' AS feature, 0.028881153091788292 AS threshold, 84 AS count, 2 AS depth, -0.4203336898829757 AS "Estimator" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 37 AS count, 3 AS depth, -0.9151040434252085 AS "Estimator" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 47 AS count, 3 AS depth, -0.03083362432845226 AS "Estimator" FROM DUAL UNION ALL SELECT 10 AS node_id, 'anova_output_6' AS feature, 0.9915271997451782 AS threshold, 7 AS count, 2 AS depth, 1.585798592344253 AS "Estimator" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 2.2697546239876076 AS "Estimator" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 1.0728315686117371 AS "Estimator" FROM DUAL) "Values"), 
"DT_node_lookup_3" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anova_output_6 <= -1.1594027280807495) THEN CASE WHEN ("ADS_ano_2_OUT".anova_output_2 <= -0.457974910736084) THEN 2 ELSE CASE WHEN ("ADS_ano_2_OUT".anova_output_2 <= 0.30902352929115295) THEN 4 ELSE 5 END END ELSE CASE WHEN ("ADS_ano_2_OUT".anova_output_6 <= 0.7961379289627075) THEN CASE WHEN ("ADS_ano_2_OUT".anova_output_3 <= 0.028881153091788292) THEN 8 ELSE 9 END ELSE CASE WHEN ("ADS_ano_2_OUT".anova_output_6 <= 0.9915271997451782) THEN 11 ELSE 12 END END END AS node_id 
FROM "ADS_ano_2_OUT"), 
"DT_Output_3" AS 
(SELECT "DT_node_lookup_3"."KEY" AS "KEY", (SELECT "DT_node_data_3".node_id 
FROM "DT_node_data_3" 
WHERE "DT_node_data_3".node_id = "DT_node_lookup_3".node_id) AS node_id, (SELECT "DT_node_data_3".feature 
FROM "DT_node_data_3" 
WHERE "DT_node_data_3".node_id = "DT_node_lookup_3".node_id) AS feature, (SELECT "DT_node_data_3".threshold 
FROM "DT_node_data_3" 
WHERE "DT_node_data_3".node_id = "DT_node_lookup_3".node_id) AS threshold, (SELECT "DT_node_data_3".count 
FROM "DT_node_data_3" 
WHERE "DT_node_data_3".node_id = "DT_node_lookup_3".node_id) AS count, (SELECT "DT_node_data_3".depth 
FROM "DT_node_data_3" 
WHERE "DT_node_data_3".node_id = "DT_node_lookup_3".node_id) AS depth, (SELECT "DT_node_data_3"."Estimator" 
FROM "DT_node_data_3" 
WHERE "DT_node_data_3".node_id = "DT_node_lookup_3".node_id) AS "Estimator" 
FROM "DT_node_lookup_3"), 
"AdaBoost_Estim_3" AS 
(SELECT "DT_Output_3"."KEY" AS join_key_3, "DT_Output_3"."Estimator" AS "Estimator_3" 
FROM "DT_Output_3"), 
"DT_node_data_4" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'anova_output_4' AS feature, -0.33373215794563293 AS threshold, 100 AS count, 0 AS depth, 0.0012262203149307593 AS "Estimator" FROM DUAL UNION ALL SELECT 1 AS node_id, 'anova_output_5' AS feature, -1.630774974822998 AS threshold, 30 AS count, 1 AS depth, 0.7745942432355635 AS "Estimator" FROM DUAL UNION ALL SELECT 2 AS node_id, 'anova_output_2' AS feature, -0.9463610053062439 AS threshold, 5 AS count, 2 AS depth, 1.8331403925436045 AS "Estimator" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 1.0544517269311366 AS "Estimator" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 2.0278125589467213 AS "Estimator" FROM DUAL UNION ALL SELECT 5 AS node_id, 'anova_output_6' AS feature, 0.5564298629760742 AS threshold, 25 AS count, 2 AS depth, 0.5628850133739558 AS "Estimator" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 3 AS depth, 0.8836833657899178 AS "Estimator" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, -0.4529764359432573 AS "Estimator" FROM DUAL UNION ALL SELECT 8 AS node_id, 'anova_output_4' AS feature, -0.25084590911865234 AS threshold, 70 AS count, 1 AS depth, -0.3302172180796263 AS "Estimator" FROM DUAL UNION ALL SELECT 9 AS node_id, 'anova_output_5' AS feature, -0.011905796825885773 AS threshold, 10 AS count, 2 AS depth, -1.8007093049827696 AS "Estimator" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, -0.17992483581235091 AS "Estimator" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, -1.9807964682239272 AS "Estimator" FROM DUAL UNION ALL SELECT 12 AS node_id, 'anova_output_3' AS feature, 0.2740156650543213 AS threshold, 60 AS count, 2 AS depth, -0.08513520359576915 AS "Estimator" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 44 AS count, 3 AS depth, 0.2870887759795654 AS "Estimator" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 3 AS depth, -1.1087511474279395 AS "Estimator" FROM DUAL) "Values"), 
"DT_node_lookup_4" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anova_output_4 <= -0.33373215794563293) THEN CASE WHEN ("ADS_ano_2_OUT".anova_output_5 <= -1.630774974822998) THEN CASE WHEN ("ADS_ano_2_OUT".anova_output_2 <= -0.9463610053062439) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_ano_2_OUT".anova_output_6 <= 0.5564298629760742) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_ano_2_OUT".anova_output_4 <= -0.25084590911865234) THEN CASE WHEN ("ADS_ano_2_OUT".anova_output_5 <= -0.011905796825885773) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_ano_2_OUT".anova_output_3 <= 0.2740156650543213) THEN 13 ELSE 14 END END END AS node_id 
FROM "ADS_ano_2_OUT"), 
"DT_Output_4" AS 
(SELECT "DT_node_lookup_4"."KEY" AS "KEY", (SELECT "DT_node_data_4".node_id 
FROM "DT_node_data_4" 
WHERE "DT_node_data_4".node_id = "DT_node_lookup_4".node_id) AS node_id, (SELECT "DT_node_data_4".feature 
FROM "DT_node_data_4" 
WHERE "DT_node_data_4".node_id = "DT_node_lookup_4".node_id) AS feature, (SELECT "DT_node_data_4".threshold 
FROM "DT_node_data_4" 
WHERE "DT_node_data_4".node_id = "DT_node_lookup_4".node_id) AS threshold, (SELECT "DT_node_data_4".count 
FROM "DT_node_data_4" 
WHERE "DT_node_data_4".node_id = "DT_node_lookup_4".node_id) AS count, (SELECT "DT_node_data_4".depth 
FROM "DT_node_data_4" 
WHERE "DT_node_data_4".node_id = "DT_node_lookup_4".node_id) AS depth, (SELECT "DT_node_data_4"."Estimator" 
FROM "DT_node_data_4" 
WHERE "DT_node_data_4".node_id = "DT_node_lookup_4".node_id) AS "Estimator" 
FROM "DT_node_lookup_4"), 
"AdaBoost_Estim_4" AS 
(SELECT "DT_Output_4"."KEY" AS join_key_4, "DT_Output_4"."Estimator" AS "Estimator_4" 
FROM "DT_Output_4"), 
"DT_node_data_5" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'anova_output_6' AS feature, -1.1112778186798096 AS threshold, 100 AS count, 0 AS depth, 0.27692826565567763 AS "Estimator" FROM DUAL UNION ALL SELECT 1 AS node_id, 'anova_output_6' AS feature, -1.2257189750671387 AS threshold, 11 AS count, 1 AS depth, 1.6387664993833 AS "Estimator" FROM DUAL UNION ALL SELECT 2 AS node_id, 'anova_output_3' AS feature, -1.4040924310684204 AS threshold, 4 AS count, 2 AS depth, 0.7575467862869611 AS "Estimator" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 0.2082749780768603 AS "Estimator" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 0.9406373890236613 AS "Estimator" FROM DUAL UNION ALL SELECT 5 AS node_id, 'anova_output_6' AS feature, -1.1447267532348633 AS threshold, 7 AS count, 2 AS depth, 2.142320621152636 AS "Estimator" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 2.240893199201458 AS "Estimator" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 1.8958891760305832 AS "Estimator" FROM DUAL UNION ALL SELECT 8 AS node_id, 'anova_output_6' AS feature, -0.1801726520061493 AS threshold, 89 AS count, 1 AS depth, 0.1086111805882186 AS "Estimator" FROM DUAL UNION ALL SELECT 9 AS node_id, 'anova_output_6' AS feature, -0.3104209303855896 AS threshold, 25 AS count, 2 AS depth, -0.5996152821794337 AS "Estimator" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 21 AS count, 3 AS depth, -0.33417662929570513 AS "Estimator" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, -1.9931682098190087 AS "Estimator" FROM DUAL UNION ALL SELECT 12 AS node_id, 'anova_output_4' AS feature, 0.01933376118540764 AS threshold, 64 AS count, 2 AS depth, 0.38526214260683317 AS "Estimator" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 46 AS count, 3 AS depth, 0.6922921706226635 AS "Estimator" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 3 AS depth, -0.39937015121140085 AS "Estimator" FROM DUAL) "Values"), 
"DT_node_lookup_5" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anova_output_6 <= -1.1112778186798096) THEN CASE WHEN ("ADS_ano_2_OUT".anova_output_6 <= -1.2257189750671387) THEN CASE WHEN ("ADS_ano_2_OUT".anova_output_3 <= -1.4040924310684204) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_ano_2_OUT".anova_output_6 <= -1.1447267532348633) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_ano_2_OUT".anova_output_6 <= -0.1801726520061493) THEN CASE WHEN ("ADS_ano_2_OUT".anova_output_6 <= -0.3104209303855896) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_ano_2_OUT".anova_output_4 <= 0.01933376118540764) THEN 13 ELSE 14 END END END AS node_id 
FROM "ADS_ano_2_OUT"), 
"DT_Output_5" AS 
(SELECT "DT_node_lookup_5"."KEY" AS "KEY", (SELECT "DT_node_data_5".node_id 
FROM "DT_node_data_5" 
WHERE "DT_node_data_5".node_id = "DT_node_lookup_5".node_id) AS node_id, (SELECT "DT_node_data_5".feature 
FROM "DT_node_data_5" 
WHERE "DT_node_data_5".node_id = "DT_node_lookup_5".node_id) AS feature, (SELECT "DT_node_data_5".threshold 
FROM "DT_node_data_5" 
WHERE "DT_node_data_5".node_id = "DT_node_lookup_5".node_id) AS threshold, (SELECT "DT_node_data_5".count 
FROM "DT_node_data_5" 
WHERE "DT_node_data_5".node_id = "DT_node_lookup_5".node_id) AS count, (SELECT "DT_node_data_5".depth 
FROM "DT_node_data_5" 
WHERE "DT_node_data_5".node_id = "DT_node_lookup_5".node_id) AS depth, (SELECT "DT_node_data_5"."Estimator" 
FROM "DT_node_data_5" 
WHERE "DT_node_data_5".node_id = "DT_node_lookup_5".node_id) AS "Estimator" 
FROM "DT_node_lookup_5"), 
"AdaBoost_Estim_5" AS 
(SELECT "DT_Output_5"."KEY" AS join_key_5, "DT_Output_5"."Estimator" AS "Estimator_5" 
FROM "DT_Output_5"), 
"DT_node_data_6" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'anova_output_6' AS feature, -1.1112778186798096 AS threshold, 100 AS count, 0 AS depth, 0.19459889131777214 AS "Estimator" FROM DUAL UNION ALL SELECT 1 AS node_id, 'anova_output_6' AS feature, -1.1696300506591797 AS threshold, 15 AS count, 1 AS depth, 1.4114516873677372 AS "Estimator" FROM DUAL UNION ALL SELECT 2 AS node_id, 'anova_output_5' AS feature, -0.45365670323371887 AS threshold, 5 AS count, 2 AS depth, 0.16657349150534517 AS "Estimator" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 0.8698878546263663 AS "Estimator" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, -0.30230275057533557 AS "Estimator" FROM DUAL UNION ALL SELECT 5 AS node_id, 'anova_output_4' AS feature, -0.6495118737220764 AS threshold, 10 AS count, 2 AS depth, 2.033890785298933 AS "Estimator" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, 1.8958891760305832 AS "Estimator" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 2.240893199201458 AS "Estimator" FROM DUAL UNION ALL SELECT 8 AS node_id, 'anova_output_6' AS feature, -0.17511647939682007 AS threshold, 85 AS count, 1 AS depth, -0.020139837396927724 AS "Estimator" FROM DUAL UNION ALL SELECT 9 AS node_id, 'anova_output_3' AS feature, 0.27988892793655396 AS threshold, 37 AS count, 2 AS depth, -0.560153972308972 AS "Estimator" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 22 AS count, 3 AS depth, -1.0837284054718053 AS "Estimator" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, 0.20775519632985012 AS "Estimator" FROM DUAL UNION ALL SELECT 12 AS node_id, 'anova_output_3' AS feature, 0.022652652114629745 AS threshold, 48 AS count, 2 AS depth, 0.3961210582644399 AS "Estimator" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 30 AS count, 3 AS depth, 0.9301245275988202 AS "Estimator" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 3 AS depth, -0.4938847239595272 AS "Estimator" FROM DUAL) "Values"), 
"DT_node_lookup_6" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anova_output_6 <= -1.1112778186798096) THEN CASE WHEN ("ADS_ano_2_OUT".anova_output_6 <= -1.1696300506591797) THEN CASE WHEN ("ADS_ano_2_OUT".anova_output_5 <= -0.45365670323371887) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_ano_2_OUT".anova_output_4 <= -0.6495118737220764) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_ano_2_OUT".anova_output_6 <= -0.17511647939682007) THEN CASE WHEN ("ADS_ano_2_OUT".anova_output_3 <= 0.27988892793655396) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_ano_2_OUT".anova_output_3 <= 0.022652652114629745) THEN 13 ELSE 14 END END END AS node_id 
FROM "ADS_ano_2_OUT"), 
"DT_Output_6" AS 
(SELECT "DT_node_lookup_6"."KEY" AS "KEY", (SELECT "DT_node_data_6".node_id 
FROM "DT_node_data_6" 
WHERE "DT_node_data_6".node_id = "DT_node_lookup_6".node_id) AS node_id, (SELECT "DT_node_data_6".feature 
FROM "DT_node_data_6" 
WHERE "DT_node_data_6".node_id = "DT_node_lookup_6".node_id) AS feature, (SELECT "DT_node_data_6".threshold 
FROM "DT_node_data_6" 
WHERE "DT_node_data_6".node_id = "DT_node_lookup_6".node_id) AS threshold, (SELECT "DT_node_data_6".count 
FROM "DT_node_data_6" 
WHERE "DT_node_data_6".node_id = "DT_node_lookup_6".node_id) AS count, (SELECT "DT_node_data_6".depth 
FROM "DT_node_data_6" 
WHERE "DT_node_data_6".node_id = "DT_node_lookup_6".node_id) AS depth, (SELECT "DT_node_data_6"."Estimator" 
FROM "DT_node_data_6" 
WHERE "DT_node_data_6".node_id = "DT_node_lookup_6".node_id) AS "Estimator" 
FROM "DT_node_lookup_6"), 
"AdaBoost_Estim_6" AS 
(SELECT "DT_Output_6"."KEY" AS join_key_6, "DT_Output_6"."Estimator" AS "Estimator_6" 
FROM "DT_Output_6"), 
"DT_node_data_7" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'anova_output_6' AS feature, -0.1925564706325531 AS threshold, 100 AS count, 0 AS depth, 0.13814468346848213 AS "Estimator" FROM DUAL UNION ALL SELECT 1 AS node_id, 'anova_output_5' AS feature, 0.08942630887031555 AS threshold, 47 AS count, 1 AS depth, -0.5819725618724582 AS "Estimator" FROM DUAL UNION ALL SELECT 2 AS node_id, 'anova_output_5' AS feature, -0.10058332979679108 AS threshold, 28 AS count, 2 AS depth, -1.0774268675416427 AS "Estimator" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 14 AS count, 3 AS depth, -0.20556755297906124 AS "Estimator" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 14 AS count, 3 AS depth, -1.9492861821042236 AS "Estimator" FROM DUAL UNION ALL SELECT 5 AS node_id, 'anova_output_3' AS feature, 1.0199803113937378 AS threshold, 19 AS count, 2 AS depth, 0.14817062542949752 AS "Estimator" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS count, 3 AS depth, 0.7621850530410972 AS "Estimator" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, -1.1821939677289681 AS "Estimator" FROM DUAL UNION ALL SELECT 8 AS node_id, 'anova_output_3' AS feature, 0.29076361656188965 AS threshold, 53 AS count, 1 AS depth, 0.7767392217896937 AS "Estimator" FROM DUAL UNION ALL SELECT 9 AS node_id, 'anova_output_6' AS feature, 1.4874424934387207 AS threshold, 42 AS count, 2 AS depth, 1.121301381554145 AS "Estimator" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 40 AS count, 3 AS depth, 1.248367347490801 AS "Estimator" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, -1.4200179371789752 AS "Estimator" FROM DUAL UNION ALL SELECT 12 AS node_id, 'anova_output_5' AS feature, 0.8419481515884399 AS threshold, 11 AS count, 2 AS depth, -0.5388617518563931 AS "Estimator" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, -0.713713870086603 AS "Estimator" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, -0.232870544953526 AS "Estimator" FROM DUAL) "Values"), 
"DT_node_lookup_7" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anova_output_6 <= -0.1925564706325531) THEN CASE WHEN ("ADS_ano_2_OUT".anova_output_5 <= 0.08942630887031555) THEN CASE WHEN ("ADS_ano_2_OUT".anova_output_5 <= -0.10058332979679108) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_ano_2_OUT".anova_output_3 <= 1.0199803113937378) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_ano_2_OUT".anova_output_3 <= 0.29076361656188965) THEN CASE WHEN ("ADS_ano_2_OUT".anova_output_6 <= 1.4874424934387207) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_ano_2_OUT".anova_output_5 <= 0.8419481515884399) THEN 13 ELSE 14 END END END AS node_id 
FROM "ADS_ano_2_OUT"), 
"DT_Output_7" AS 
(SELECT "DT_node_lookup_7"."KEY" AS "KEY", (SELECT "DT_node_data_7".node_id 
FROM "DT_node_data_7" 
WHERE "DT_node_data_7".node_id = "DT_node_lookup_7".node_id) AS node_id, (SELECT "DT_node_data_7".feature 
FROM "DT_node_data_7" 
WHERE "DT_node_data_7".node_id = "DT_node_lookup_7".node_id) AS feature, (SELECT "DT_node_data_7".threshold 
FROM "DT_node_data_7" 
WHERE "DT_node_data_7".node_id = "DT_node_lookup_7".node_id) AS threshold, (SELECT "DT_node_data_7".count 
FROM "DT_node_data_7" 
WHERE "DT_node_data_7".node_id = "DT_node_lookup_7".node_id) AS count, (SELECT "DT_node_data_7".depth 
FROM "DT_node_data_7" 
WHERE "DT_node_data_7".node_id = "DT_node_lookup_7".node_id) AS depth, (SELECT "DT_node_data_7"."Estimator" 
FROM "DT_node_data_7" 
WHERE "DT_node_data_7".node_id = "DT_node_lookup_7".node_id) AS "Estimator" 
FROM "DT_node_lookup_7"), 
"AdaBoost_Estim_7" AS 
(SELECT "DT_Output_7"."KEY" AS join_key_7, "DT_Output_7"."Estimator" AS "Estimator_7" 
FROM "DT_Output_7"), 
"DT_node_data_8" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'anova_output_3' AS feature, 1.0217169523239136 AS threshold, 100 AS count, 0 AS depth, -0.2789206088782373 AS "Estimator" FROM DUAL UNION ALL SELECT 1 AS node_id, 'anova_output_6' AS feature, -1.1594027280807495 AS threshold, 86 AS count, 1 AS depth, -0.04850177774367394 AS "Estimator" FROM DUAL UNION ALL SELECT 2 AS node_id, 'anova_output_6' AS feature, -1.2410650253295898 AS threshold, 6 AS count, 2 AS depth, 1.7838914176764273 AS "Estimator" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 0.8698878546263663 AS "Estimator" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 2.240893199201458 AS "Estimator" FROM DUAL UNION ALL SELECT 5 AS node_id, 'anova_output_6' AS feature, -0.1801726520061493 AS threshold, 80 AS count, 2 AS depth, -0.18593126740018145 AS "Estimator" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 30 AS count, 3 AS depth, -0.8989947633004773 AS "Estimator" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 50 AS count, 3 AS depth, 0.24190683013999595 AS "Estimator" FROM DUAL UNION ALL SELECT 8 AS node_id, 'anova_output_6' AS feature, -0.45342403650283813 AS threshold, 14 AS count, 1 AS depth, -1.6943505715619842 AS "Estimator" FROM DUAL UNION ALL SELECT 9 AS node_id, 'anova_output_6' AS feature, -0.7936736941337585 AS threshold, 9 AS count, 2 AS depth, -1.217328769188599 AS "Estimator" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, -1.6502670359098957 AS "Estimator" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, -0.6761559357869781 AS "Estimator" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 2 AS depth, -2.5529898158340787 AS "Estimator" FROM DUAL) "Values"), 
"DT_node_lookup_8" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anova_output_3 <= 1.0217169523239136) THEN CASE WHEN ("ADS_ano_2_OUT".anova_output_6 <= -1.1594027280807495) THEN CASE WHEN ("ADS_ano_2_OUT".anova_output_6 <= -1.2410650253295898) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_ano_2_OUT".anova_output_6 <= -0.1801726520061493) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_ano_2_OUT".anova_output_6 <= -0.45342403650283813) THEN CASE WHEN ("ADS_ano_2_OUT".anova_output_6 <= -0.7936736941337585) THEN 10 ELSE 11 END ELSE 12 END END AS node_id 
FROM "ADS_ano_2_OUT"), 
"DT_Output_8" AS 
(SELECT "DT_node_lookup_8"."KEY" AS "KEY", (SELECT "DT_node_data_8".node_id 
FROM "DT_node_data_8" 
WHERE "DT_node_data_8".node_id = "DT_node_lookup_8".node_id) AS node_id, (SELECT "DT_node_data_8".feature 
FROM "DT_node_data_8" 
WHERE "DT_node_data_8".node_id = "DT_node_lookup_8".node_id) AS feature, (SELECT "DT_node_data_8".threshold 
FROM "DT_node_data_8" 
WHERE "DT_node_data_8".node_id = "DT_node_lookup_8".node_id) AS threshold, (SELECT "DT_node_data_8".count 
FROM "DT_node_data_8" 
WHERE "DT_node_data_8".node_id = "DT_node_lookup_8".node_id) AS count, (SELECT "DT_node_data_8".depth 
FROM "DT_node_data_8" 
WHERE "DT_node_data_8".node_id = "DT_node_lookup_8".node_id) AS depth, (SELECT "DT_node_data_8"."Estimator" 
FROM "DT_node_data_8" 
WHERE "DT_node_data_8".node_id = "DT_node_lookup_8".node_id) AS "Estimator" 
FROM "DT_node_lookup_8"), 
"AdaBoost_Estim_8" AS 
(SELECT "DT_Output_8"."KEY" AS join_key_8, "DT_Output_8"."Estimator" AS "Estimator_8" 
FROM "DT_Output_8"), 
"DT_node_data_9" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'anova_output_5' AS feature, -1.0698127746582031 AS threshold, 100 AS count, 0 AS depth, 0.17142391351349173 AS "Estimator" FROM DUAL UNION ALL SELECT 1 AS node_id, 'anova_output_6' AS feature, 0.990790069103241 AS threshold, 26 AS count, 1 AS depth, 1.1750667814684532 AS "Estimator" FROM DUAL UNION ALL SELECT 2 AS node_id, 'anova_output_2' AS feature, 1.5548436641693115 AS threshold, 21 AS count, 2 AS depth, 1.6662221455395405 AS "Estimator" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 20 AS count, 3 AS depth, 1.7831562752053152 AS "Estimator" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, -0.672460447775951 AS "Estimator" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 2 AS depth, -0.8877857476301128 AS "Estimator" FROM DUAL UNION ALL SELECT 6 AS node_id, 'anova_output_4' AS feature, 0.5879766941070557 AS threshold, 74 AS count, 1 AS depth, -0.18120736441662985 AS "Estimator" FROM DUAL UNION ALL SELECT 7 AS node_id, 'anova_output_5' AS feature, -0.2840039134025574 AS threshold, 54 AS count, 2 AS depth, 0.25981373874167335 AS "Estimator" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS count, 3 AS depth, -1.1305771463314327 AS "Estimator" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 43 AS count, 3 AS depth, 0.6154951279464216 AS "Estimator" FROM DUAL UNION ALL SELECT 10 AS node_id, 'anova_output_4' AS feature, 1.7064225673675537 AS threshold, 20 AS count, 2 AS depth, -1.3719643429440482 AS "Estimator" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 3 AS depth, -1.611001839157765 AS "Estimator" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 0.7793731229794065 AS "Estimator" FROM DUAL) "Values"), 
"DT_node_lookup_9" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anova_output_5 <= -1.0698127746582031) THEN CASE WHEN ("ADS_ano_2_OUT".anova_output_6 <= 0.990790069103241) THEN CASE WHEN ("ADS_ano_2_OUT".anova_output_2 <= 1.5548436641693115) THEN 3 ELSE 4 END ELSE 5 END ELSE CASE WHEN ("ADS_ano_2_OUT".anova_output_4 <= 0.5879766941070557) THEN CASE WHEN ("ADS_ano_2_OUT".anova_output_5 <= -0.2840039134025574) THEN 8 ELSE 9 END ELSE CASE WHEN ("ADS_ano_2_OUT".anova_output_4 <= 1.7064225673675537) THEN 11 ELSE 12 END END END AS node_id 
FROM "ADS_ano_2_OUT"), 
"DT_Output_9" AS 
(SELECT "DT_node_lookup_9"."KEY" AS "KEY", (SELECT "DT_node_data_9".node_id 
FROM "DT_node_data_9" 
WHERE "DT_node_data_9".node_id = "DT_node_lookup_9".node_id) AS node_id, (SELECT "DT_node_data_9".feature 
FROM "DT_node_data_9" 
WHERE "DT_node_data_9".node_id = "DT_node_lookup_9".node_id) AS feature, (SELECT "DT_node_data_9".threshold 
FROM "DT_node_data_9" 
WHERE "DT_node_data_9".node_id = "DT_node_lookup_9".node_id) AS threshold, (SELECT "DT_node_data_9".count 
FROM "DT_node_data_9" 
WHERE "DT_node_data_9".node_id = "DT_node_lookup_9".node_id) AS count, (SELECT "DT_node_data_9".depth 
FROM "DT_node_data_9" 
WHERE "DT_node_data_9".node_id = "DT_node_lookup_9".node_id) AS depth, (SELECT "DT_node_data_9"."Estimator" 
FROM "DT_node_data_9" 
WHERE "DT_node_data_9".node_id = "DT_node_lookup_9".node_id) AS "Estimator" 
FROM "DT_node_lookup_9"), 
"AdaBoost_Estim_9" AS 
(SELECT "DT_Output_9"."KEY" AS join_key_9, "DT_Output_9"."Estimator" AS "Estimator_9" 
FROM "DT_Output_9"), 
"DT_node_data_10" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'anova_output_5' AS feature, -1.630774974822998 AS threshold, 100 AS count, 0 AS depth, 0.17529236546663962 AS "Estimator" FROM DUAL UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 1 AS depth, 2.2697546239876076 AS "Estimator" FROM DUAL UNION ALL SELECT 2 AS node_id, 'anova_output_6' AS feature, -1.1112778186798096 AS threshold, 95 AS count, 1 AS depth, 0.06505750975500979 AS "Estimator" FROM DUAL UNION ALL SELECT 3 AS node_id, 'anova_output_5' AS feature, -0.1418939232826233 AS threshold, 10 AS count, 2 AS depth, 1.5268551538364346 AS "Estimator" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 0.6283000973743376 AS "Estimator" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, 2.125891858144499 AS "Estimator" FROM DUAL UNION ALL SELECT 6 AS node_id, 'anova_output_6' AS feature, -0.1271236091852188 AS threshold, 85 AS count, 2 AS depth, -0.10691868366633434 AS "Estimator" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 34 AS count, 3 AS depth, -0.8062021303532704 AS "Estimator" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 51 AS count, 3 AS depth, 0.359270280791623 AS "Estimator" FROM DUAL) "Values"), 
"DT_node_lookup_10" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anova_output_5 <= -1.630774974822998) THEN 1 ELSE CASE WHEN ("ADS_ano_2_OUT".anova_output_6 <= -1.1112778186798096) THEN CASE WHEN ("ADS_ano_2_OUT".anova_output_5 <= -0.1418939232826233) THEN 4 ELSE 5 END ELSE CASE WHEN ("ADS_ano_2_OUT".anova_output_6 <= -0.1271236091852188) THEN 7 ELSE 8 END END END AS node_id 
FROM "ADS_ano_2_OUT"), 
"DT_Output_10" AS 
(SELECT "DT_node_lookup_10"."KEY" AS "KEY", (SELECT "DT_node_data_10".node_id 
FROM "DT_node_data_10" 
WHERE "DT_node_data_10".node_id = "DT_node_lookup_10".node_id) AS node_id, (SELECT "DT_node_data_10".feature 
FROM "DT_node_data_10" 
WHERE "DT_node_data_10".node_id = "DT_node_lookup_10".node_id) AS feature, (SELECT "DT_node_data_10".threshold 
FROM "DT_node_data_10" 
WHERE "DT_node_data_10".node_id = "DT_node_lookup_10".node_id) AS threshold, (SELECT "DT_node_data_10".count 
FROM "DT_node_data_10" 
WHERE "DT_node_data_10".node_id = "DT_node_lookup_10".node_id) AS count, (SELECT "DT_node_data_10".depth 
FROM "DT_node_data_10" 
WHERE "DT_node_data_10".node_id = "DT_node_lookup_10".node_id) AS depth, (SELECT "DT_node_data_10"."Estimator" 
FROM "DT_node_data_10" 
WHERE "DT_node_data_10".node_id = "DT_node_lookup_10".node_id) AS "Estimator" 
FROM "DT_node_lookup_10"), 
"AdaBoost_Estim_10" AS 
(SELECT "DT_Output_10"."KEY" AS join_key_10, "DT_Output_10"."Estimator" AS "Estimator_10" 
FROM "DT_Output_10"), 
"DT_node_data_11" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'anova_output_6' AS feature, -0.18842995166778564 AS threshold, 100 AS count, 0 AS depth, 0.11222996499010614 AS "Estimator" FROM DUAL UNION ALL SELECT 1 AS node_id, 'anova_output_5' AS feature, -0.6510190367698669 AS threshold, 45 AS count, 1 AS depth, -0.4465805038158572 AS "Estimator" FROM DUAL UNION ALL SELECT 2 AS node_id, 'anova_output_5' AS feature, -0.8762272000312805 AS threshold, 10 AS count, 2 AS depth, 1.2001049952970972 AS "Estimator" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, 1.2820297441605775 AS "Estimator" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 0.4627822555257742 AS "Estimator" FROM DUAL UNION ALL SELECT 5 AS node_id, 'anova_output_5' AS feature, 0.08942630887031555 AS threshold, 35 AS count, 2 AS depth, -0.9170620749909868 AS "Estimator" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 14 AS count, 3 AS depth, -1.7222000982540975 AS "Estimator" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 21 AS count, 3 AS depth, -0.3803033928155801 AS "Estimator" FROM DUAL UNION ALL SELECT 8 AS node_id, 'anova_output_5' AS feature, -0.2524641156196594 AS threshold, 55 AS count, 1 AS depth, 0.5694385303768034 AS "Estimator" FROM DUAL UNION ALL SELECT 9 AS node_id, 'anova_output_5' AS feature, -1.630774974822998 AS threshold, 23 AS count, 2 AS depth, -0.1949929969454931 AS "Estimator" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 1.9471652039330927 AS "Estimator" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 20 AS count, 3 AS depth, -0.516316727077281 AS "Estimator" FROM DUAL UNION ALL SELECT 12 AS node_id, 'anova_output_5' AS feature, -0.10127592086791992 AS threshold, 32 AS count, 2 AS depth, 1.1188736906397043 AS "Estimator" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 14 AS count, 3 AS depth, 1.624168941966737 AS "Estimator" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 3 AS depth, 0.7258662729409004 AS "Estimator" FROM DUAL) "Values"), 
"DT_node_lookup_11" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anova_output_6 <= -0.18842995166778564) THEN CASE WHEN ("ADS_ano_2_OUT".anova_output_5 <= -0.6510190367698669) THEN CASE WHEN ("ADS_ano_2_OUT".anova_output_5 <= -0.8762272000312805) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_ano_2_OUT".anova_output_5 <= 0.08942630887031555) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_ano_2_OUT".anova_output_5 <= -0.2524641156196594) THEN CASE WHEN ("ADS_ano_2_OUT".anova_output_5 <= -1.630774974822998) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_ano_2_OUT".anova_output_5 <= -0.10127592086791992) THEN 13 ELSE 14 END END END AS node_id 
FROM "ADS_ano_2_OUT"), 
"DT_Output_11" AS 
(SELECT "DT_node_lookup_11"."KEY" AS "KEY", (SELECT "DT_node_data_11".node_id 
FROM "DT_node_data_11" 
WHERE "DT_node_data_11".node_id = "DT_node_lookup_11".node_id) AS node_id, (SELECT "DT_node_data_11".feature 
FROM "DT_node_data_11" 
WHERE "DT_node_data_11".node_id = "DT_node_lookup_11".node_id) AS feature, (SELECT "DT_node_data_11".threshold 
FROM "DT_node_data_11" 
WHERE "DT_node_data_11".node_id = "DT_node_lookup_11".node_id) AS threshold, (SELECT "DT_node_data_11".count 
FROM "DT_node_data_11" 
WHERE "DT_node_data_11".node_id = "DT_node_lookup_11".node_id) AS count, (SELECT "DT_node_data_11".depth 
FROM "DT_node_data_11" 
WHERE "DT_node_data_11".node_id = "DT_node_lookup_11".node_id) AS depth, (SELECT "DT_node_data_11"."Estimator" 
FROM "DT_node_data_11" 
WHERE "DT_node_data_11".node_id = "DT_node_lookup_11".node_id) AS "Estimator" 
FROM "DT_node_lookup_11"), 
"AdaBoost_Estim_11" AS 
(SELECT "DT_Output_11"."KEY" AS join_key_11, "DT_Output_11"."Estimator" AS "Estimator_11" 
FROM "DT_Output_11"), 
"AdaBoost_Join_CTE" AS 
(SELECT "AdaBoost_Estim_0".join_key_0 AS join_key_0, "AdaBoost_Estim_0"."Estimator_0" AS "Estimator_0", "AdaBoost_Estim_1".join_key_1 AS join_key_1, "AdaBoost_Estim_1"."Estimator_1" AS "Estimator_1", "AdaBoost_Estim_2".join_key_2 AS join_key_2, "AdaBoost_Estim_2"."Estimator_2" AS "Estimator_2", "AdaBoost_Estim_3".join_key_3 AS join_key_3, "AdaBoost_Estim_3"."Estimator_3" AS "Estimator_3", "AdaBoost_Estim_4".join_key_4 AS join_key_4, "AdaBoost_Estim_4"."Estimator_4" AS "Estimator_4", "AdaBoost_Estim_5".join_key_5 AS join_key_5, "AdaBoost_Estim_5"."Estimator_5" AS "Estimator_5", "AdaBoost_Estim_6".join_key_6 AS join_key_6, "AdaBoost_Estim_6"."Estimator_6" AS "Estimator_6", "AdaBoost_Estim_7".join_key_7 AS join_key_7, "AdaBoost_Estim_7"."Estimator_7" AS "Estimator_7", "AdaBoost_Estim_8".join_key_8 AS join_key_8, "AdaBoost_Estim_8"."Estimator_8" AS "Estimator_8", "AdaBoost_Estim_9".join_key_9 AS join_key_9, "AdaBoost_Estim_9"."Estimator_9" AS "Estimator_9", "AdaBoost_Estim_10".join_key_10 AS join_key_10, "AdaBoost_Estim_10"."Estimator_10" AS "Estimator_10", "AdaBoost_Estim_11".join_key_11 AS join_key_11, "AdaBoost_Estim_11"."Estimator_11" AS "Estimator_11" 
FROM "AdaBoost_Estim_0" LEFT OUTER JOIN "AdaBoost_Estim_1" ON "AdaBoost_Estim_0".join_key_0 = "AdaBoost_Estim_1".join_key_1 LEFT OUTER JOIN "AdaBoost_Estim_2" ON "AdaBoost_Estim_2".join_key_2 = "AdaBoost_Estim_1".join_key_1 LEFT OUTER JOIN "AdaBoost_Estim_3" ON "AdaBoost_Estim_3".join_key_3 = "AdaBoost_Estim_2".join_key_2 LEFT OUTER JOIN "AdaBoost_Estim_4" ON "AdaBoost_Estim_4".join_key_4 = "AdaBoost_Estim_3".join_key_3 LEFT OUTER JOIN "AdaBoost_Estim_5" ON "AdaBoost_Estim_5".join_key_5 = "AdaBoost_Estim_4".join_key_4 LEFT OUTER JOIN "AdaBoost_Estim_6" ON "AdaBoost_Estim_6".join_key_6 = "AdaBoost_Estim_5".join_key_5 LEFT OUTER JOIN "AdaBoost_Estim_7" ON "AdaBoost_Estim_7".join_key_7 = "AdaBoost_Estim_6".join_key_6 LEFT OUTER JOIN "AdaBoost_Estim_8" ON "AdaBoost_Estim_8".join_key_8 = "AdaBoost_Estim_7".join_key_7 LEFT OUTER JOIN "AdaBoost_Estim_9" ON "AdaBoost_Estim_9".join_key_9 = "AdaBoost_Estim_8".join_key_8 LEFT OUTER JOIN "AdaBoost_Estim_10" ON "AdaBoost_Estim_10".join_key_10 = "AdaBoost_Estim_9".join_key_9 LEFT OUTER JOIN "AdaBoost_Estim_11" ON "AdaBoost_Estim_11".join_key_11 = "AdaBoost_Estim_10".join_key_10), 
"WeightedEstimators" AS 
(SELECT "Values"."Key" AS "Key", "Values".sub_estimator AS sub_estimator, "Values"."Weight" AS "Weight", "Values"."Value" AS "Value" 
FROM (SELECT "AdaBoost_Join_CTE".join_key_0 AS "Key", 0 AS sub_estimator, 0.047522685891 AS "Weight", "AdaBoost_Join_CTE"."Estimator_0" AS "Value" 
FROM "AdaBoost_Join_CTE" UNION ALL SELECT "AdaBoost_Join_CTE".join_key_0 AS "Key", 1 AS sub_estimator, 0.058215536259 AS "Weight", "AdaBoost_Join_CTE"."Estimator_1" AS "Value" 
FROM "AdaBoost_Join_CTE" UNION ALL SELECT "AdaBoost_Join_CTE".join_key_0 AS "Key", 2 AS sub_estimator, 0.0337617548177 AS "Weight", "AdaBoost_Join_CTE"."Estimator_2" AS "Value" 
FROM "AdaBoost_Join_CTE" UNION ALL SELECT "AdaBoost_Join_CTE".join_key_0 AS "Key", 3 AS sub_estimator, 0.0427330144012 AS "Weight", "AdaBoost_Join_CTE"."Estimator_3" AS "Value" 
FROM "AdaBoost_Join_CTE" UNION ALL SELECT "AdaBoost_Join_CTE".join_key_0 AS "Key", 4 AS sub_estimator, 0.0281502575124 AS "Weight", "AdaBoost_Join_CTE"."Estimator_4" AS "Value" 
FROM "AdaBoost_Join_CTE" UNION ALL SELECT "AdaBoost_Join_CTE".join_key_0 AS "Key", 5 AS sub_estimator, 0.0472673772106 AS "Weight", "AdaBoost_Join_CTE"."Estimator_5" AS "Value" 
FROM "AdaBoost_Join_CTE" UNION ALL SELECT "AdaBoost_Join_CTE".join_key_0 AS "Key", 6 AS sub_estimator, 0.045156100737 AS "Weight", "AdaBoost_Join_CTE"."Estimator_6" AS "Value" 
FROM "AdaBoost_Join_CTE" UNION ALL SELECT "AdaBoost_Join_CTE".join_key_0 AS "Key", 7 AS sub_estimator, 0.0478608545687 AS "Weight", "AdaBoost_Join_CTE"."Estimator_7" AS "Value" 
FROM "AdaBoost_Join_CTE" UNION ALL SELECT "AdaBoost_Join_CTE".join_key_0 AS "Key", 8 AS sub_estimator, 0.0494137381781 AS "Weight", "AdaBoost_Join_CTE"."Estimator_8" AS "Value" 
FROM "AdaBoost_Join_CTE" UNION ALL SELECT "AdaBoost_Join_CTE".join_key_0 AS "Key", 9 AS sub_estimator, 0.0447529566687 AS "Weight", "AdaBoost_Join_CTE"."Estimator_9" AS "Value" 
FROM "AdaBoost_Join_CTE" UNION ALL SELECT "AdaBoost_Join_CTE".join_key_0 AS "Key", 10 AS sub_estimator, 0.0143080071953 AS "Weight", "AdaBoost_Join_CTE"."Estimator_10" AS "Value" 
FROM "AdaBoost_Join_CTE" UNION ALL SELECT "AdaBoost_Join_CTE".join_key_0 AS "Key", 11 AS sub_estimator, 0.0408577165604 AS "Weight", "AdaBoost_Join_CTE"."Estimator_11" AS "Value" 
FROM "AdaBoost_Join_CTE") "Values"), 
"Cumulative_Frequencies" AS 
(SELECT u1."Key" AS "Key", u1.sub_estimator AS sub_estimator, u1."Weight" AS "Weight", u1."Value" AS "Value", (SELECT sum(u2."Weight") AS sum_1 
FROM "WeightedEstimators" u2 
WHERE u1."Key" = u2."Key" AND u1."Value" >= u2."Value") AS cum_weight 
FROM "WeightedEstimators" u1), 
"Quantiles" AS 
(SELECT "AdaBoost_Join_CTE".join_key_0 AS join_key_0, "AdaBoost_Join_CTE"."Estimator_0" AS "Estimator_0", "AdaBoost_Join_CTE".join_key_1 AS join_key_1, "AdaBoost_Join_CTE"."Estimator_1" AS "Estimator_1", "AdaBoost_Join_CTE".join_key_2 AS join_key_2, "AdaBoost_Join_CTE"."Estimator_2" AS "Estimator_2", "AdaBoost_Join_CTE".join_key_3 AS join_key_3, "AdaBoost_Join_CTE"."Estimator_3" AS "Estimator_3", "AdaBoost_Join_CTE".join_key_4 AS join_key_4, "AdaBoost_Join_CTE"."Estimator_4" AS "Estimator_4", "AdaBoost_Join_CTE".join_key_5 AS join_key_5, "AdaBoost_Join_CTE"."Estimator_5" AS "Estimator_5", "AdaBoost_Join_CTE".join_key_6 AS join_key_6, "AdaBoost_Join_CTE"."Estimator_6" AS "Estimator_6", "AdaBoost_Join_CTE".join_key_7 AS join_key_7, "AdaBoost_Join_CTE"."Estimator_7" AS "Estimator_7", "AdaBoost_Join_CTE".join_key_8 AS join_key_8, "AdaBoost_Join_CTE"."Estimator_8" AS "Estimator_8", "AdaBoost_Join_CTE".join_key_9 AS join_key_9, "AdaBoost_Join_CTE"."Estimator_9" AS "Estimator_9", "AdaBoost_Join_CTE".join_key_10 AS join_key_10, "AdaBoost_Join_CTE"."Estimator_10" AS "Estimator_10", "AdaBoost_Join_CTE".join_key_11 AS join_key_11, "AdaBoost_Join_CTE"."Estimator_11" AS "Estimator_11", (SELECT min("Cumulative_Frequencies"."Value") AS min_1 
FROM "Cumulative_Frequencies" 
WHERE "AdaBoost_Join_CTE".join_key_0 = "Cumulative_Frequencies"."Key" AND "Cumulative_Frequencies".cum_weight >= 0.5) AS "Median" 
FROM "AdaBoost_Join_CTE")
 SELECT "Quantiles".join_key_0 AS "KEY", "Quantiles"."Median" AS "Estimator" 
FROM "Quantiles"