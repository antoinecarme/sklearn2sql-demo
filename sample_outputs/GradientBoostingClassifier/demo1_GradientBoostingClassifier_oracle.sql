-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH "DT_node_data" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, 0.04458539932966232 AS threshold, 100 AS count, 0 AS depth, 1.0436096431476471e-16 AS "Estimator" FROM DUAL UNION ALL SELECT 1 AS node_id, 'Feature_1' AS feature, 1.0248057842254639 AS threshold, 57 AS count, 1 AS depth, 0.15175438596491234 AS "Estimator" FROM DUAL UNION ALL SELECT 2 AS node_id, 'Feature_4' AS feature, -0.10859403014183044 AS threshold, 48 AS count, 2 AS depth, 0.20000000000000004 AS "Estimator" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 20 AS count, 3 AS depth, 0.2020202020202019 AS "Estimator" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 28 AS count, 3 AS depth, 1.240981240981241 AS "Estimator" FROM DUAL UNION ALL SELECT 5 AS node_id, 'Feature_4' AS feature, 0.19877421855926514 AS threshold, 9 AS count, 2 AS depth, -0.1055555555555556 AS "Estimator" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 1.01010101010101 AS "Estimator" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, -2.2222222222222223 AS "Estimator" FROM DUAL UNION ALL SELECT 8 AS node_id, 'Feature_3' AS feature, -1.2498940229415894 AS threshold, 43 AS count, 1 AS depth, -0.2011627906976744 AS "Estimator" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 2 AS depth, 1.8181818181818181 AS "Estimator" FROM DUAL UNION ALL SELECT 10 AS node_id, 'Feature_4' AS feature, -0.686296820640564 AS threshold, 40 AS count, 2 AS depth, -0.2500000000000001 AS "Estimator" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 3 AS depth, 0.13468013468013448 AS "Estimator" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 28 AS count, 3 AS depth, -1.5007215007215018 AS "Estimator" FROM DUAL) "Values"), 
"DT_node_lookup" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" <= 0.04458539932966232) THEN CASE WHEN ("ADS"."Feature_1" <= 1.0248057842254639) THEN CASE WHEN ("ADS"."Feature_4" <= -0.10859403014183044) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_4" <= 0.19877421855926514) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_3" <= -1.2498940229415894) THEN 9 ELSE CASE WHEN ("ADS"."Feature_4" <= -0.686296820640564) THEN 11 ELSE 12 END END END AS node_id 
FROM "INPUT_DATA" "ADS"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", (SELECT "DT_node_data".node_id 
FROM "DT_node_data" 
WHERE "DT_node_data".node_id = "DT_node_lookup".node_id) AS node_id, (SELECT "DT_node_data".feature 
FROM "DT_node_data" 
WHERE "DT_node_data".node_id = "DT_node_lookup".node_id) AS feature, (SELECT "DT_node_data".threshold 
FROM "DT_node_data" 
WHERE "DT_node_data".node_id = "DT_node_lookup".node_id) AS threshold, (SELECT "DT_node_data".count 
FROM "DT_node_data" 
WHERE "DT_node_data".node_id = "DT_node_lookup".node_id) AS count, (SELECT "DT_node_data".depth 
FROM "DT_node_data" 
WHERE "DT_node_data".node_id = "DT_node_lookup".node_id) AS depth, (SELECT "DT_node_data"."Estimator" 
FROM "DT_node_data" 
WHERE "DT_node_data".node_id = "DT_node_lookup".node_id) AS "Estimator" 
FROM "DT_node_lookup"), 
"RF_Tree_0_0" AS 
(SELECT "DT_Output"."KEY" AS join_key_0_0, "DT_Output"."Estimator" AS "Estimator_0_0" 
FROM "DT_Output"), 
"DT_node_data_1" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, 0.04458539932966232 AS threshold, 100 AS count, 0 AS depth, 0.0001627351464814364 AS "Estimator" FROM DUAL UNION ALL SELECT 1 AS node_id, 'Feature_1' AS feature, 1.0248057842254639 AS threshold, 57 AS count, 1 AS depth, 0.1367329826539423 AS "Estimator" FROM DUAL UNION ALL SELECT 2 AS node_id, 'Feature_4' AS feature, -0.10859403014183044 AS threshold, 48 AS count, 2 AS depth, 0.180135334761126 AS "Estimator" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 20 AS count, 3 AS depth, 0.18222536928270472 AS "Estimator" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 28 AS count, 3 AS depth, 1.1360651029579327 AS "Estimator" FROM DUAL UNION ALL SELECT 5 AS node_id, 'Feature_4' AS feature, -0.41134992241859436 AS threshold, 9 AS count, 2 AS depth, -0.0947462285843712 AS "Estimator" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 1.739574101877958 AS "Estimator" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, -1.429561147857809 AS "Estimator" FROM DUAL UNION ALL SELECT 8 AS node_id, 'Feature_0' AS feature, 0.4600555896759033 AS threshold, 43 AS count, 1 AS depth, -0.18087224410759462 AS "Estimator" FROM DUAL UNION ALL SELECT 9 AS node_id, 'Feature_4' AS feature, -1.1913954019546509 AS threshold, 32 AS count, 2 AS depth, -0.27664641403172885 AS "Estimator" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 0.9980302301400638 AS "Estimator" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 27 AS count, 3 AS depth, -1.499518482558548 AS "Estimator" FROM DUAL UNION ALL SELECT 12 AS node_id, 'Feature_0' AS feature, 0.6466724872589111 AS threshold, 11 AS count, 2 AS depth, 0.09774352294443224 AS "Estimator" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 1.9506602408719569 AS "Estimator" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, -0.19607376400044194 AS "Estimator" FROM DUAL) "Values"), 
"DT_node_lookup_1" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" <= 0.04458539932966232) THEN CASE WHEN ("ADS"."Feature_1" <= 1.0248057842254639) THEN CASE WHEN ("ADS"."Feature_4" <= -0.10859403014183044) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_4" <= -0.41134992241859436) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_0" <= 0.4600555896759033) THEN CASE WHEN ("ADS"."Feature_4" <= -1.1913954019546509) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_0" <= 0.6466724872589111) THEN 13 ELSE 14 END END END AS node_id 
FROM "INPUT_DATA" "ADS"), 
"DT_Output_1" AS 
(SELECT "DT_node_lookup_1"."KEY" AS "KEY", (SELECT "DT_node_data_1".node_id 
FROM "DT_node_data_1" 
WHERE "DT_node_data_1".node_id = "DT_node_lookup_1".node_id) AS node_id, (SELECT "DT_node_data_1".feature 
FROM "DT_node_data_1" 
WHERE "DT_node_data_1".node_id = "DT_node_lookup_1".node_id) AS feature, (SELECT "DT_node_data_1".threshold 
FROM "DT_node_data_1" 
WHERE "DT_node_data_1".node_id = "DT_node_lookup_1".node_id) AS threshold, (SELECT "DT_node_data_1".count 
FROM "DT_node_data_1" 
WHERE "DT_node_data_1".node_id = "DT_node_lookup_1".node_id) AS count, (SELECT "DT_node_data_1".depth 
FROM "DT_node_data_1" 
WHERE "DT_node_data_1".node_id = "DT_node_lookup_1".node_id) AS depth, (SELECT "DT_node_data_1"."Estimator" 
FROM "DT_node_data_1" 
WHERE "DT_node_data_1".node_id = "DT_node_lookup_1".node_id) AS "Estimator" 
FROM "DT_node_lookup_1"), 
"RF_Tree_1_0" AS 
(SELECT "DT_Output_1"."KEY" AS join_key_1_0, "DT_Output_1"."Estimator" AS "Estimator_1_0" 
FROM "DT_Output_1"), 
"DT_node_data_2" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.4170195162296295 AS threshold, 100 AS count, 0 AS depth, 0.0002779992518563046 AS "Estimator" FROM DUAL UNION ALL SELECT 1 AS node_id, 'Feature_1' AS feature, 0.924545407295227 AS threshold, 38 AS count, 1 AS depth, 0.18521509992806803 AS "Estimator" FROM DUAL UNION ALL SELECT 2 AS node_id, 'Feature_0' AS feature, 2.2167487144470215 AS threshold, 28 AS count, 2 AS depth, 0.2700058035989161 AS "Estimator" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 27 AS count, 3 AS depth, 1.2502759368122576 AS "Estimator" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, -2.5501866295683895 AS "Estimator" FROM DUAL UNION ALL SELECT 5 AS node_id, 'Feature_3' AS feature, -0.7785581350326538 AS threshold, 10 AS count, 2 AS depth, -0.052198870350306924 AS "Estimator" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 1.7013183959914728 AS "Estimator" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, -1.024887986473716 AS "Estimator" FROM DUAL UNION ALL SELECT 8 AS node_id, 'Feature_0' AS feature, 0.7748223543167114 AS threshold, 62 AS count, 1 AS depth, -0.11307054632388641 AS "Estimator" FROM DUAL UNION ALL SELECT 9 AS node_id, 'Feature_3' AS feature, -0.28276222944259644 AS threshold, 55 AS count, 2 AS depth, -0.16470597319638278 AS "Estimator" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 21 AS count, 3 AS depth, -0.062055471885380305 AS "Estimator" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 34 AS count, 3 AS depth, -1.0409176381042924 AS "Estimator" FROM DUAL UNION ALL SELECT 12 AS node_id, 'Feature_4' AS feature, -0.04576435685157776 AS threshold, 7 AS count, 2 AS depth, 0.2926363791028713 AS "Estimator" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 1.7656473993871584 AS "Estimator" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, -0.23677686817224994 AS "Estimator" FROM DUAL) "Values"), 
"DT_node_lookup_2" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" <= -0.4170195162296295) THEN CASE WHEN ("ADS"."Feature_1" <= 0.924545407295227) THEN CASE WHEN ("ADS"."Feature_0" <= 2.2167487144470215) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_3" <= -0.7785581350326538) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_0" <= 0.7748223543167114) THEN CASE WHEN ("ADS"."Feature_3" <= -0.28276222944259644) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_4" <= -0.04576435685157776) THEN 13 ELSE 14 END END END AS node_id 
FROM "INPUT_DATA" "ADS"), 
"DT_Output_2" AS 
(SELECT "DT_node_lookup_2"."KEY" AS "KEY", (SELECT "DT_node_data_2".node_id 
FROM "DT_node_data_2" 
WHERE "DT_node_data_2".node_id = "DT_node_lookup_2".node_id) AS node_id, (SELECT "DT_node_data_2".feature 
FROM "DT_node_data_2" 
WHERE "DT_node_data_2".node_id = "DT_node_lookup_2".node_id) AS feature, (SELECT "DT_node_data_2".threshold 
FROM "DT_node_data_2" 
WHERE "DT_node_data_2".node_id = "DT_node_lookup_2".node_id) AS threshold, (SELECT "DT_node_data_2".count 
FROM "DT_node_data_2" 
WHERE "DT_node_data_2".node_id = "DT_node_lookup_2".node_id) AS count, (SELECT "DT_node_data_2".depth 
FROM "DT_node_data_2" 
WHERE "DT_node_data_2".node_id = "DT_node_lookup_2".node_id) AS depth, (SELECT "DT_node_data_2"."Estimator" 
FROM "DT_node_data_2" 
WHERE "DT_node_data_2".node_id = "DT_node_lookup_2".node_id) AS "Estimator" 
FROM "DT_node_lookup_2"), 
"RF_Tree_2_0" AS 
(SELECT "DT_Output_2"."KEY" AS join_key_2_0, "DT_Output_2"."Estimator" AS "Estimator_2_0" 
FROM "DT_Output_2"), 
"DT_node_data_3" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, 0.04458539932966232 AS threshold, 100 AS count, 0 AS depth, 0.0004295928890797829 AS "Estimator" FROM DUAL UNION ALL SELECT 1 AS node_id, 'Feature_4' AS feature, -1.738538384437561 AS threshold, 57 AS count, 1 AS depth, 0.11469677905665891 AS "Estimator" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, -2.439251009921915 AS "Estimator" FROM DUAL UNION ALL SELECT 3 AS node_id, 'Feature_2' AS feature, -2.649430751800537 AS threshold, 56 AS count, 2 AS depth, 0.12728133031175393 AS "Estimator" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, -2.3991802525111825 AS "Estimator" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 55 AS count, 3 AS depth, 0.5852664206591134 AS "Estimator" FROM DUAL UNION ALL SELECT 6 AS node_id, 'Feature_3' AS feature, -1.2498940229415894 AS threshold, 43 AS count, 1 AS depth, -0.1510408631935251 AS "Estimator" FROM DUAL UNION ALL SELECT 7 AS node_id, 'Feature_2' AS feature, 1.264672040939331 AS threshold, 3 AS count, 2 AS depth, 0.39343008716072164 AS "Estimator" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 1.5830710439350972 AS "Estimator" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 1.7974537164266442 AS "Estimator" FROM DUAL UNION ALL SELECT 10 AS node_id, 'Feature_4' AS feature, -0.686296820640564 AS threshold, 40 AS count, 2 AS depth, -0.19187618447009366 AS "Estimator" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 3 AS depth, 0.16063082003132437 AS "Estimator" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 28 AS count, 3 AS depth, -1.1734753429563434 AS "Estimator" FROM DUAL) "Values"), 
"DT_node_lookup_3" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" <= 0.04458539932966232) THEN CASE WHEN ("ADS"."Feature_4" <= -1.738538384437561) THEN 2 ELSE CASE WHEN ("ADS"."Feature_2" <= -2.649430751800537) THEN 4 ELSE 5 END END ELSE CASE WHEN ("ADS"."Feature_3" <= -1.2498940229415894) THEN CASE WHEN ("ADS"."Feature_2" <= 1.264672040939331) THEN 8 ELSE 9 END ELSE CASE WHEN ("ADS"."Feature_4" <= -0.686296820640564) THEN 11 ELSE 12 END END END AS node_id 
FROM "INPUT_DATA" "ADS"), 
"DT_Output_3" AS 
(SELECT "DT_node_lookup_3"."KEY" AS "KEY", (SELECT "DT_node_data_3".node_id 
FROM "DT_node_data_3" 
WHERE "DT_node_data_3".node_id = "DT_node_lookup_3".node_id) AS node_id, (SELECT "DT_node_data_3".feature 
FROM "DT_node_data_3" 
WHERE "DT_node_data_3".node_id = "DT_node_lookup_3".node_id) AS feature, (SELECT "DT_node_data_3".threshold 
FROM "DT_node_data_3" 
WHERE "DT_node_data_3".node_id = "DT_node_lookup_3".node_id) AS threshold, (SELECT "DT_node_data_3".count 
FROM "DT_node_data_3" 
WHERE "DT_node_data_3".node_id = "DT_node_lookup_3".node_id) AS count, (SELECT "DT_node_data_3".depth 
FROM "DT_node_data_3" 
WHERE "DT_node_data_3".node_id = "DT_node_lookup_3".node_id) AS depth, (SELECT "DT_node_data_3"."Estimator" 
FROM "DT_node_data_3" 
WHERE "DT_node_data_3".node_id = "DT_node_lookup_3".node_id) AS "Estimator" 
FROM "DT_node_lookup_3"), 
"RF_Tree_3_0" AS 
(SELECT "DT_Output_3"."KEY" AS join_key_3_0, "DT_Output_3"."Estimator" AS "Estimator_3_0" 
FROM "DT_Output_3"), 
"DT_node_data_4" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.4170195162296295 AS threshold, 100 AS count, 0 AS depth, 0.0004308949077802837 AS "Estimator" FROM DUAL UNION ALL SELECT 1 AS node_id, 'Feature_1' AS feature, 0.924545407295227 AS threshold, 38 AS count, 1 AS depth, 0.15711229626309145 AS "Estimator" FROM DUAL UNION ALL SELECT 2 AS node_id, 'Feature_0' AS feature, 2.2167487144470215 AS threshold, 28 AS count, 2 AS depth, 0.23230936047336542 AS "Estimator" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 27 AS count, 3 AS depth, 1.123294738727259 AS "Estimator" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, -2.2736455611257993 AS "Estimator" FROM DUAL UNION ALL SELECT 5 AS node_id, 'Feature_3' AS feature, -0.7785581350326538 AS threshold, 10 AS count, 2 AS depth, -0.05343948352567569 AS "Estimator" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 1.5594131236403814 AS "Estimator" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, -0.9306402674714294 AS "Estimator" FROM DUAL UNION ALL SELECT 8 AS node_id, 'Feature_0' AS feature, 0.7748223543167114 AS threshold, 62 AS count, 1 AS depth, -0.0955996414067653 AS "Estimator" FROM DUAL UNION ALL SELECT 9 AS node_id, 'Feature_1' AS feature, 0.8173838257789612 AS threshold, 55 AS count, 2 AS depth, -0.13991930050395962 AS "Estimator" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 47 AS count, 3 AS depth, -0.7498744236484804 AS "Estimator" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, 0.47815110394563515 AS "Estimator" FROM DUAL UNION ALL SELECT 12 AS node_id, 'Feature_4' AS feature, -0.04576435685157776 AS threshold, 7 AS count, 2 AS depth, 0.25262625149976153 AS "Estimator" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 1.598232832293733 AS "Estimator" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, -0.18253207353510753 AS "Estimator" FROM DUAL) "Values"), 
"DT_node_lookup_4" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" <= -0.4170195162296295) THEN CASE WHEN ("ADS"."Feature_1" <= 0.924545407295227) THEN CASE WHEN ("ADS"."Feature_0" <= 2.2167487144470215) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_3" <= -0.7785581350326538) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_0" <= 0.7748223543167114) THEN CASE WHEN ("ADS"."Feature_1" <= 0.8173838257789612) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_4" <= -0.04576435685157776) THEN 13 ELSE 14 END END END AS node_id 
FROM "INPUT_DATA" "ADS"), 
"DT_Output_4" AS 
(SELECT "DT_node_lookup_4"."KEY" AS "KEY", (SELECT "DT_node_data_4".node_id 
FROM "DT_node_data_4" 
WHERE "DT_node_data_4".node_id = "DT_node_lookup_4".node_id) AS node_id, (SELECT "DT_node_data_4".feature 
FROM "DT_node_data_4" 
WHERE "DT_node_data_4".node_id = "DT_node_lookup_4".node_id) AS feature, (SELECT "DT_node_data_4".threshold 
FROM "DT_node_data_4" 
WHERE "DT_node_data_4".node_id = "DT_node_lookup_4".node_id) AS threshold, (SELECT "DT_node_data_4".count 
FROM "DT_node_data_4" 
WHERE "DT_node_data_4".node_id = "DT_node_lookup_4".node_id) AS count, (SELECT "DT_node_data_4".depth 
FROM "DT_node_data_4" 
WHERE "DT_node_data_4".node_id = "DT_node_lookup_4".node_id) AS depth, (SELECT "DT_node_data_4"."Estimator" 
FROM "DT_node_data_4" 
WHERE "DT_node_data_4".node_id = "DT_node_lookup_4".node_id) AS "Estimator" 
FROM "DT_node_lookup_4"), 
"RF_Tree_4_0" AS 
(SELECT "DT_Output_4"."KEY" AS join_key_4_0, "DT_Output_4"."Estimator" AS "Estimator_4_0" 
FROM "DT_Output_4"), 
"DT_node_data_5" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, 0.04458539932966232 AS threshold, 100 AS count, 0 AS depth, 0.0005644931896219175 AS "Estimator" FROM DUAL UNION ALL SELECT 1 AS node_id, 'Feature_4' AS feature, -1.738538384437561 AS threshold, 57 AS count, 1 AS depth, 0.09691874819254682 AS "Estimator" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, -2.2617847906063586 AS "Estimator" FROM DUAL UNION ALL SELECT 3 AS node_id, 'Feature_1' AS feature, 1.0248057842254639 AS threshold, 56 AS count, 2 AS depth, 0.10861142738099552 AS "Estimator" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 47 AS count, 3 AS depth, 0.6354760537243557 AS "Estimator" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, -0.4170705399184574 AS "Estimator" FROM DUAL UNION ALL SELECT 6 AS node_id, 'Feature_0' AS feature, 0.4600555896759033 AS threshold, 43 AS count, 1 AS depth, -0.12716091460495293 AS "Estimator" FROM DUAL UNION ALL SELECT 7 AS node_id, 'Feature_4' AS feature, -1.1913954019546509 AS threshold, 32 AS count, 2 AS depth, -0.200548046606032 AS "Estimator" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 0.9777826761308985 AS "Estimator" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 27 AS count, 3 AS depth, -1.1607534786569862 AS "Estimator" FROM DUAL UNION ALL SELECT 10 AS node_id, 'Feature_0' AS feature, 0.6466724872589111 AS threshold, 11 AS count, 2 AS depth, 0.08632892394364078 AS "Estimator" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 1.9866683125634457 AS "Estimator" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, -0.288218786078767 AS "Estimator" FROM DUAL) "Values"), 
"DT_node_lookup_5" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" <= 0.04458539932966232) THEN CASE WHEN ("ADS"."Feature_4" <= -1.738538384437561) THEN 2 ELSE CASE WHEN ("ADS"."Feature_1" <= 1.0248057842254639) THEN 4 ELSE 5 END END ELSE CASE WHEN ("ADS"."Feature_0" <= 0.4600555896759033) THEN CASE WHEN ("ADS"."Feature_4" <= -1.1913954019546509) THEN 8 ELSE 9 END ELSE CASE WHEN ("ADS"."Feature_0" <= 0.6466724872589111) THEN 11 ELSE 12 END END END AS node_id 
FROM "INPUT_DATA" "ADS"), 
"DT_Output_5" AS 
(SELECT "DT_node_lookup_5"."KEY" AS "KEY", (SELECT "DT_node_data_5".node_id 
FROM "DT_node_data_5" 
WHERE "DT_node_data_5".node_id = "DT_node_lookup_5".node_id) AS node_id, (SELECT "DT_node_data_5".feature 
FROM "DT_node_data_5" 
WHERE "DT_node_data_5".node_id = "DT_node_lookup_5".node_id) AS feature, (SELECT "DT_node_data_5".threshold 
FROM "DT_node_data_5" 
WHERE "DT_node_data_5".node_id = "DT_node_lookup_5".node_id) AS threshold, (SELECT "DT_node_data_5".count 
FROM "DT_node_data_5" 
WHERE "DT_node_data_5".node_id = "DT_node_lookup_5".node_id) AS count, (SELECT "DT_node_data_5".depth 
FROM "DT_node_data_5" 
WHERE "DT_node_data_5".node_id = "DT_node_lookup_5".node_id) AS depth, (SELECT "DT_node_data_5"."Estimator" 
FROM "DT_node_data_5" 
WHERE "DT_node_data_5".node_id = "DT_node_lookup_5".node_id) AS "Estimator" 
FROM "DT_node_lookup_5"), 
"RF_Tree_5_0" AS 
(SELECT "DT_Output_5"."KEY" AS join_key_5_0, "DT_Output_5"."Estimator" AS "Estimator_5_0" 
FROM "DT_Output_5"), 
"DT_node_data_6" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.4170195162296295 AS threshold, 100 AS count, 0 AS depth, 0.0005127385798012796 AS "Estimator" FROM DUAL UNION ALL SELECT 1 AS node_id, 'Feature_0' AS feature, 2.2167487144470215 AS threshold, 38 AS count, 1 AS depth, 0.13438283123269637 AS "Estimator" FROM DUAL UNION ALL SELECT 2 AS node_id, 'Feature_1' AS feature, 0.924545407295227 AS threshold, 37 AS count, 2 AS depth, 0.1520555208292264 AS "Estimator" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 27 AS count, 3 AS depth, 1.0130966599677125 AS "Estimator" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 3 AS depth, -0.18165203662263835 AS "Estimator" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, -2.081194402431084 AS "Estimator" FROM DUAL UNION ALL SELECT 6 AS node_id, 'Feature_3' AS feature, -0.28276222944259644 AS threshold, 62 AS count, 1 AS depth, -0.08153667304616673 AS "Estimator" FROM DUAL UNION ALL SELECT 7 AS node_id, 'Feature_2' AS feature, 1.8345255851745605 AS threshold, 27 AS count, 2 AS depth, 0.04751402159731428 AS "Estimator" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 25 AS count, 3 AS depth, 0.3486405340824501 AS "Estimator" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, -1.6610213272115242 AS "Estimator" FROM DUAL UNION ALL SELECT 10 AS node_id, 'Feature_1' AS feature, 0.8173838257789612 AS threshold, 35 AS count, 2 AS depth, -0.18109006605685213 AS "Estimator" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 29 AS count, 3 AS depth, -1.0444762958724358 AS "Estimator" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, 0.6604202074846205 AS "Estimator" FROM DUAL) "Values"), 
"DT_node_lookup_6" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" <= -0.4170195162296295) THEN CASE WHEN ("ADS"."Feature_0" <= 2.2167487144470215) THEN CASE WHEN ("ADS"."Feature_1" <= 0.924545407295227) THEN 3 ELSE 4 END ELSE 5 END ELSE CASE WHEN ("ADS"."Feature_3" <= -0.28276222944259644) THEN CASE WHEN ("ADS"."Feature_2" <= 1.8345255851745605) THEN 8 ELSE 9 END ELSE CASE WHEN ("ADS"."Feature_1" <= 0.8173838257789612) THEN 11 ELSE 12 END END END AS node_id 
FROM "INPUT_DATA" "ADS"), 
"DT_Output_6" AS 
(SELECT "DT_node_lookup_6"."KEY" AS "KEY", (SELECT "DT_node_data_6".node_id 
FROM "DT_node_data_6" 
WHERE "DT_node_data_6".node_id = "DT_node_lookup_6".node_id) AS node_id, (SELECT "DT_node_data_6".feature 
FROM "DT_node_data_6" 
WHERE "DT_node_data_6".node_id = "DT_node_lookup_6".node_id) AS feature, (SELECT "DT_node_data_6".threshold 
FROM "DT_node_data_6" 
WHERE "DT_node_data_6".node_id = "DT_node_lookup_6".node_id) AS threshold, (SELECT "DT_node_data_6".count 
FROM "DT_node_data_6" 
WHERE "DT_node_data_6".node_id = "DT_node_lookup_6".node_id) AS count, (SELECT "DT_node_data_6".depth 
FROM "DT_node_data_6" 
WHERE "DT_node_data_6".node_id = "DT_node_lookup_6".node_id) AS depth, (SELECT "DT_node_data_6"."Estimator" 
FROM "DT_node_data_6" 
WHERE "DT_node_data_6".node_id = "DT_node_lookup_6".node_id) AS "Estimator" 
FROM "DT_node_lookup_6"), 
"RF_Tree_6_0" AS 
(SELECT "DT_Output_6"."KEY" AS join_key_6_0, "DT_Output_6"."Estimator" AS "Estimator_6_0" 
FROM "DT_Output_6"), 
"DT_node_data_7" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.4170195162296295 AS threshold, 100 AS count, 0 AS depth, 0.0005187119039529953 AS "Estimator" FROM DUAL UNION ALL SELECT 1 AS node_id, 'Feature_4' AS feature, -1.738538384437561 AS threshold, 38 AS count, 1 AS depth, 0.12121788923065072 AS "Estimator" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, -2.1136672584512803 AS "Estimator" FROM DUAL UNION ALL SELECT 3 AS node_id, 'Feature_0' AS feature, 0.012855812907218933 AS threshold, 37 AS count, 2 AS depth, 0.1387342818004629 AS "Estimator" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 21 AS count, 3 AS depth, 1.083239052659814 AS "Estimator" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 3 AS depth, 0.04531364161272634 AS "Estimator" FROM DUAL UNION ALL SELECT 6 AS node_id, 'Feature_2' AS feature, -0.2980008125305176 AS threshold, 62 AS count, 1 AS depth, -0.07345820323176491 AS "Estimator" FROM DUAL UNION ALL SELECT 7 AS node_id, 'Feature_4' AS feature, -0.7099243402481079 AS threshold, 3 AS count, 2 AS depth, -0.5554196329431802 AS "Estimator" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, -2.0807364039291754 AS "Estimator" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, -2.3444816889337208 AS "Estimator" FROM DUAL UNION ALL SELECT 10 AS node_id, 'Feature_3' AS feature, -1.2498940229415894 AS threshold, 59 AS count, 2 AS depth, -0.04895168985660822 AS "Estimator" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 1.5284613915771803 AS "Estimator" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 54 AS count, 3 AS depth, -0.35633288405138114 AS "Estimator" FROM DUAL) "Values"), 
"DT_node_lookup_7" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" <= -0.4170195162296295) THEN CASE WHEN ("ADS"."Feature_4" <= -1.738538384437561) THEN 2 ELSE CASE WHEN ("ADS"."Feature_0" <= 0.012855812907218933) THEN 4 ELSE 5 END END ELSE CASE WHEN ("ADS"."Feature_2" <= -0.2980008125305176) THEN CASE WHEN ("ADS"."Feature_4" <= -0.7099243402481079) THEN 8 ELSE 9 END ELSE CASE WHEN ("ADS"."Feature_3" <= -1.2498940229415894) THEN 11 ELSE 12 END END END AS node_id 
FROM "INPUT_DATA" "ADS"), 
"DT_Output_7" AS 
(SELECT "DT_node_lookup_7"."KEY" AS "KEY", (SELECT "DT_node_data_7".node_id 
FROM "DT_node_data_7" 
WHERE "DT_node_data_7".node_id = "DT_node_lookup_7".node_id) AS node_id, (SELECT "DT_node_data_7".feature 
FROM "DT_node_data_7" 
WHERE "DT_node_data_7".node_id = "DT_node_lookup_7".node_id) AS feature, (SELECT "DT_node_data_7".threshold 
FROM "DT_node_data_7" 
WHERE "DT_node_data_7".node_id = "DT_node_lookup_7".node_id) AS threshold, (SELECT "DT_node_data_7".count 
FROM "DT_node_data_7" 
WHERE "DT_node_data_7".node_id = "DT_node_lookup_7".node_id) AS count, (SELECT "DT_node_data_7".depth 
FROM "DT_node_data_7" 
WHERE "DT_node_data_7".node_id = "DT_node_lookup_7".node_id) AS depth, (SELECT "DT_node_data_7"."Estimator" 
FROM "DT_node_data_7" 
WHERE "DT_node_data_7".node_id = "DT_node_lookup_7".node_id) AS "Estimator" 
FROM "DT_node_lookup_7"), 
"RF_Tree_7_0" AS 
(SELECT "DT_Output_7"."KEY" AS join_key_7_0, "DT_Output_7"."Estimator" AS "Estimator_7_0" 
FROM "DT_Output_7"), 
"DT_node_data_8" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, 0.04458539932966232 AS threshold, 100 AS count, 0 AS depth, 0.0006129256210232603 AS "Estimator" FROM DUAL UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, -0.06260678917169571 AS threshold, 57 AS count, 1 AS depth, 0.0762774428199542 AS "Estimator" FROM DUAL UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.4170195162296295 AS threshold, 53 AS count, 2 AS depth, 0.05403207468603598 AS "Estimator" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 38 AS count, 3 AS depth, 0.5052676184798476 AS "Estimator" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, -0.3528683194334164 AS "Estimator" FROM DUAL UNION ALL SELECT 5 AS node_id, 'Feature_4' AS feature, -0.3416565954685211 AS threshold, 4 AS count, 2 AS depth, 0.37102857059437067 AS "Estimator" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 1.4126036979771392 AS "Estimator" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 1.6658376258482022 AS "Estimator" FROM DUAL UNION ALL SELECT 8 AS node_id, 'Feature_0' AS feature, 0.19266799092292786 AS threshold, 43 AS count, 1 AS depth, -0.0996865506659317 AS "Estimator" FROM DUAL UNION ALL SELECT 9 AS node_id, 'Feature_4' AS feature, -1.1913954019546509 AS threshold, 26 AS count, 2 AS depth, -0.19133596789408586 AS "Estimator" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 0.9407297524372715 AS "Estimator" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 21 AS count, 3 AS depth, -1.2511928623739184 AS "Estimator" FROM DUAL UNION ALL SELECT 12 AS node_id, 'Feature_4' AS feature, 0.44853001832962036 AS threshold, 17 AS count, 2 AS depth, 0.04048314627124511 AS "Estimator" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 3 AS depth, -0.34568186931940625 AS "Estimator" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 1.359889091593264 AS "Estimator" FROM DUAL) "Values"), 
"DT_node_lookup_8" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" <= 0.04458539932966232) THEN CASE WHEN ("ADS"."Feature_2" <= -0.06260678917169571) THEN CASE WHEN ("ADS"."Feature_2" <= -0.4170195162296295) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_4" <= -0.3416565954685211) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_0" <= 0.19266799092292786) THEN CASE WHEN ("ADS"."Feature_4" <= -1.1913954019546509) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_4" <= 0.44853001832962036) THEN 13 ELSE 14 END END END AS node_id 
FROM "INPUT_DATA" "ADS"), 
"DT_Output_8" AS 
(SELECT "DT_node_lookup_8"."KEY" AS "KEY", (SELECT "DT_node_data_8".node_id 
FROM "DT_node_data_8" 
WHERE "DT_node_data_8".node_id = "DT_node_lookup_8".node_id) AS node_id, (SELECT "DT_node_data_8".feature 
FROM "DT_node_data_8" 
WHERE "DT_node_data_8".node_id = "DT_node_lookup_8".node_id) AS feature, (SELECT "DT_node_data_8".threshold 
FROM "DT_node_data_8" 
WHERE "DT_node_data_8".node_id = "DT_node_lookup_8".node_id) AS threshold, (SELECT "DT_node_data_8".count 
FROM "DT_node_data_8" 
WHERE "DT_node_data_8".node_id = "DT_node_lookup_8".node_id) AS count, (SELECT "DT_node_data_8".depth 
FROM "DT_node_data_8" 
WHERE "DT_node_data_8".node_id = "DT_node_lookup_8".node_id) AS depth, (SELECT "DT_node_data_8"."Estimator" 
FROM "DT_node_data_8" 
WHERE "DT_node_data_8".node_id = "DT_node_lookup_8".node_id) AS "Estimator" 
FROM "DT_node_lookup_8"), 
"RF_Tree_8_0" AS 
(SELECT "DT_Output_8"."KEY" AS join_key_8_0, "DT_Output_8"."Estimator" AS "Estimator_8_0" 
FROM "DT_Output_8"), 
"DT_node_data_9" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, 0.04458539932966232 AS threshold, 100 AS count, 0 AS depth, 0.0005289939766253004 AS "Estimator" FROM DUAL UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, -2.649430751800537 AS threshold, 57 AS count, 1 AS depth, 0.06876331975037797 AS "Estimator" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, -2.108873912273167 AS "Estimator" FROM DUAL UNION ALL SELECT 3 AS node_id, 'Feature_1' AS feature, 1.0248057842254639 AS threshold, 56 AS count, 2 AS depth, 0.07938075906003832 AS "Estimator" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 47 AS count, 3 AS depth, 0.5243633520149383 AS "Estimator" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, -0.4534798070916506 AS "Estimator" FROM DUAL UNION ALL SELECT 6 AS node_id, 'Feature_3' AS feature, -1.2498940229415894 AS threshold, 43 AS count, 1 AS depth, -0.08992115879323287 AS "Estimator" FROM DUAL UNION ALL SELECT 7 AS node_id, 'Feature_3' AS feature, -2.0755748748779297 AS threshold, 3 AS count, 2 AS depth, 0.31541520278916707 AS "Estimator" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 1.6700469312985415 AS "Estimator" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 1.3745999001706548 AS "Estimator" FROM DUAL UNION ALL SELECT 10 AS node_id, 'Feature_4' AS feature, -0.686296820640564 AS threshold, 40 AS count, 2 AS depth, -0.12032138591191288 AS "Estimator" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 3 AS depth, 0.22513842098188303 AS "Estimator" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 28 AS count, 3 AS depth, -0.856246424179646 AS "Estimator" FROM DUAL) "Values"), 
"DT_node_lookup_9" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" <= 0.04458539932966232) THEN CASE WHEN ("ADS"."Feature_2" <= -2.649430751800537) THEN 2 ELSE CASE WHEN ("ADS"."Feature_1" <= 1.0248057842254639) THEN 4 ELSE 5 END END ELSE CASE WHEN ("ADS"."Feature_3" <= -1.2498940229415894) THEN CASE WHEN ("ADS"."Feature_3" <= -2.0755748748779297) THEN 8 ELSE 9 END ELSE CASE WHEN ("ADS"."Feature_4" <= -0.686296820640564) THEN 11 ELSE 12 END END END AS node_id 
FROM "INPUT_DATA" "ADS"), 
"DT_Output_9" AS 
(SELECT "DT_node_lookup_9"."KEY" AS "KEY", (SELECT "DT_node_data_9".node_id 
FROM "DT_node_data_9" 
WHERE "DT_node_data_9".node_id = "DT_node_lookup_9".node_id) AS node_id, (SELECT "DT_node_data_9".feature 
FROM "DT_node_data_9" 
WHERE "DT_node_data_9".node_id = "DT_node_lookup_9".node_id) AS feature, (SELECT "DT_node_data_9".threshold 
FROM "DT_node_data_9" 
WHERE "DT_node_data_9".node_id = "DT_node_lookup_9".node_id) AS threshold, (SELECT "DT_node_data_9".count 
FROM "DT_node_data_9" 
WHERE "DT_node_data_9".node_id = "DT_node_lookup_9".node_id) AS count, (SELECT "DT_node_data_9".depth 
FROM "DT_node_data_9" 
WHERE "DT_node_data_9".node_id = "DT_node_lookup_9".node_id) AS depth, (SELECT "DT_node_data_9"."Estimator" 
FROM "DT_node_data_9" 
WHERE "DT_node_data_9".node_id = "DT_node_lookup_9".node_id) AS "Estimator" 
FROM "DT_node_lookup_9"), 
"RF_Tree_9_0" AS 
(SELECT "DT_Output_9"."KEY" AS join_key_9_0, "DT_Output_9"."Estimator" AS "Estimator_9_0" 
FROM "DT_Output_9"), 
"DT_node_data_10" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.4170195162296295 AS threshold, 100 AS count, 0 AS depth, 0.00048499127807051013 AS "Estimator" FROM DUAL UNION ALL SELECT 1 AS node_id, 'Feature_4' AS feature, -1.738538384437561 AS threshold, 38 AS count, 1 AS depth, 0.09390810374769022 AS "Estimator" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, -1.9992550549041637 AS "Estimator" FROM DUAL UNION ALL SELECT 3 AS node_id, 'Feature_0' AS feature, -0.48911941051483154 AS threshold, 37 AS count, 2 AS depth, 0.10995463883093301 AS "Estimator" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS count, 3 AS depth, 1.3706080676146402 AS "Estimator" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 26 AS count, 3 AS depth, 0.19899875921998453 AS "Estimator" FROM DUAL UNION ALL SELECT 6 AS node_id, 'Feature_2' AS feature, -0.2980008125305176 AS threshold, 62 AS count, 1 AS depth, -0.05677433571943835 AS "Estimator" FROM DUAL UNION ALL SELECT 7 AS node_id, 'Feature_4' AS feature, -0.7099243402481079 AS threshold, 3 AS count, 2 AS depth, -0.503659213860011 AS "Estimator" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, -1.8928992978169916 AS "Estimator" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, -2.0819322714874446 AS "Estimator" FROM DUAL UNION ALL SELECT 10 AS node_id, 'Feature_3' AS feature, 1.396482229232788 AS threshold, 59 AS count, 2 AS depth, -0.03405137581398551 AS "Estimator" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 54 AS count, 3 AS depth, -0.010862070367755106 AS "Estimator" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, -1.6461212301989554 AS "Estimator" FROM DUAL) "Values"), 
"DT_node_lookup_10" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" <= -0.4170195162296295) THEN CASE WHEN ("ADS"."Feature_4" <= -1.738538384437561) THEN 2 ELSE CASE WHEN ("ADS"."Feature_0" <= -0.48911941051483154) THEN 4 ELSE 5 END END ELSE CASE WHEN ("ADS"."Feature_2" <= -0.2980008125305176) THEN CASE WHEN ("ADS"."Feature_4" <= -0.7099243402481079) THEN 8 ELSE 9 END ELSE CASE WHEN ("ADS"."Feature_3" <= 1.396482229232788) THEN 11 ELSE 12 END END END AS node_id 
FROM "INPUT_DATA" "ADS"), 
"DT_Output_10" AS 
(SELECT "DT_node_lookup_10"."KEY" AS "KEY", (SELECT "DT_node_data_10".node_id 
FROM "DT_node_data_10" 
WHERE "DT_node_data_10".node_id = "DT_node_lookup_10".node_id) AS node_id, (SELECT "DT_node_data_10".feature 
FROM "DT_node_data_10" 
WHERE "DT_node_data_10".node_id = "DT_node_lookup_10".node_id) AS feature, (SELECT "DT_node_data_10".threshold 
FROM "DT_node_data_10" 
WHERE "DT_node_data_10".node_id = "DT_node_lookup_10".node_id) AS threshold, (SELECT "DT_node_data_10".count 
FROM "DT_node_data_10" 
WHERE "DT_node_data_10".node_id = "DT_node_lookup_10".node_id) AS count, (SELECT "DT_node_data_10".depth 
FROM "DT_node_data_10" 
WHERE "DT_node_data_10".node_id = "DT_node_lookup_10".node_id) AS depth, (SELECT "DT_node_data_10"."Estimator" 
FROM "DT_node_data_10" 
WHERE "DT_node_data_10".node_id = "DT_node_lookup_10".node_id) AS "Estimator" 
FROM "DT_node_lookup_10"), 
"RF_Tree_10_0" AS 
(SELECT "DT_Output_10"."KEY" AS join_key_10_0, "DT_Output_10"."Estimator" AS "Estimator_10_0" 
FROM "DT_Output_10"), 
"DT_node_data_11" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, 0.04458539932966232 AS threshold, 100 AS count, 0 AS depth, 0.0004894203197364888 AS "Estimator" FROM DUAL UNION ALL SELECT 1 AS node_id, 'Feature_3' AS feature, -2.256011486053467 AS threshold, 57 AS count, 1 AS depth, 0.059305425427888823 AS "Estimator" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, -1.9973447864464904 AS "Estimator" FROM DUAL UNION ALL SELECT 3 AS node_id, 'Feature_3' AS feature, -0.7566534280776978 AS threshold, 56 AS count, 2 AS depth, 0.06928115292071203 AS "Estimator" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 3 AS depth, 0.9127330735902389 AS "Estimator" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 39 AS count, 3 AS depth, 0.07959711100573087 AS "Estimator" FROM DUAL UNION ALL SELECT 6 AS node_id, 'Feature_1' AS feature, 0.23686237633228302 AS threshold, 43 AS count, 1 AS depth, -0.07747598180037239 AS "Estimator" FROM DUAL UNION ALL SELECT 7 AS node_id, 'Feature_0' AS feature, 0.328433632850647 AS threshold, 27 AS count, 2 AS depth, -0.1571030066437213 AS "Estimator" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 3 AS depth, -1.3377569592697187 AS "Estimator" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS count, 3 AS depth, 0.18913693242885718 AS "Estimator" FROM DUAL UNION ALL SELECT 10 AS node_id, 'Feature_3' AS feature, 0.28168773651123047 AS threshold, 16 AS count, 2 AS depth, 0.056894622622778765 AS "Estimator" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS count, 3 AS depth, 0.9562640781652522 AS "Estimator" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, -1.4561171405154107 AS "Estimator" FROM DUAL) "Values"), 
"DT_node_lookup_11" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" <= 0.04458539932966232) THEN CASE WHEN ("ADS"."Feature_3" <= -2.256011486053467) THEN 2 ELSE CASE WHEN ("ADS"."Feature_3" <= -0.7566534280776978) THEN 4 ELSE 5 END END ELSE CASE WHEN ("ADS"."Feature_1" <= 0.23686237633228302) THEN CASE WHEN ("ADS"."Feature_0" <= 0.328433632850647) THEN 8 ELSE 9 END ELSE CASE WHEN ("ADS"."Feature_3" <= 0.28168773651123047) THEN 11 ELSE 12 END END END AS node_id 
FROM "INPUT_DATA" "ADS"), 
"DT_Output_11" AS 
(SELECT "DT_node_lookup_11"."KEY" AS "KEY", (SELECT "DT_node_data_11".node_id 
FROM "DT_node_data_11" 
WHERE "DT_node_data_11".node_id = "DT_node_lookup_11".node_id) AS node_id, (SELECT "DT_node_data_11".feature 
FROM "DT_node_data_11" 
WHERE "DT_node_data_11".node_id = "DT_node_lookup_11".node_id) AS feature, (SELECT "DT_node_data_11".threshold 
FROM "DT_node_data_11" 
WHERE "DT_node_data_11".node_id = "DT_node_lookup_11".node_id) AS threshold, (SELECT "DT_node_data_11".count 
FROM "DT_node_data_11" 
WHERE "DT_node_data_11".node_id = "DT_node_lookup_11".node_id) AS count, (SELECT "DT_node_data_11".depth 
FROM "DT_node_data_11" 
WHERE "DT_node_data_11".node_id = "DT_node_lookup_11".node_id) AS depth, (SELECT "DT_node_data_11"."Estimator" 
FROM "DT_node_data_11" 
WHERE "DT_node_data_11".node_id = "DT_node_lookup_11".node_id) AS "Estimator" 
FROM "DT_node_lookup_11"), 
"RF_Tree_11_0" AS 
(SELECT "DT_Output_11"."KEY" AS join_key_11_0, "DT_Output_11"."Estimator" AS "Estimator_11_0" 
FROM "DT_Output_11"), 
"RF_Join_CTE" AS 
(SELECT "RF_Tree_0_0".join_key_0_0 AS join_key_0_0, "RF_Tree_0_0"."Estimator_0_0" AS "Estimator_0_0", "RF_Tree_1_0".join_key_1_0 AS join_key_1_0, "RF_Tree_1_0"."Estimator_1_0" AS "Estimator_1_0", "RF_Tree_2_0".join_key_2_0 AS join_key_2_0, "RF_Tree_2_0"."Estimator_2_0" AS "Estimator_2_0", "RF_Tree_3_0".join_key_3_0 AS join_key_3_0, "RF_Tree_3_0"."Estimator_3_0" AS "Estimator_3_0", "RF_Tree_4_0".join_key_4_0 AS join_key_4_0, "RF_Tree_4_0"."Estimator_4_0" AS "Estimator_4_0", "RF_Tree_5_0".join_key_5_0 AS join_key_5_0, "RF_Tree_5_0"."Estimator_5_0" AS "Estimator_5_0", "RF_Tree_6_0".join_key_6_0 AS join_key_6_0, "RF_Tree_6_0"."Estimator_6_0" AS "Estimator_6_0", "RF_Tree_7_0".join_key_7_0 AS join_key_7_0, "RF_Tree_7_0"."Estimator_7_0" AS "Estimator_7_0", "RF_Tree_8_0".join_key_8_0 AS join_key_8_0, "RF_Tree_8_0"."Estimator_8_0" AS "Estimator_8_0", "RF_Tree_9_0".join_key_9_0 AS join_key_9_0, "RF_Tree_9_0"."Estimator_9_0" AS "Estimator_9_0", "RF_Tree_10_0".join_key_10_0 AS join_key_10_0, "RF_Tree_10_0"."Estimator_10_0" AS "Estimator_10_0", "RF_Tree_11_0".join_key_11_0 AS join_key_11_0, "RF_Tree_11_0"."Estimator_11_0" AS "Estimator_11_0" 
FROM "RF_Tree_0_0" LEFT OUTER JOIN "RF_Tree_1_0" ON "RF_Tree_0_0".join_key_0_0 = "RF_Tree_1_0".join_key_1_0 LEFT OUTER JOIN "RF_Tree_2_0" ON "RF_Tree_2_0".join_key_2_0 = "RF_Tree_1_0".join_key_1_0 LEFT OUTER JOIN "RF_Tree_3_0" ON "RF_Tree_3_0".join_key_3_0 = "RF_Tree_2_0".join_key_2_0 LEFT OUTER JOIN "RF_Tree_4_0" ON "RF_Tree_4_0".join_key_4_0 = "RF_Tree_3_0".join_key_3_0 LEFT OUTER JOIN "RF_Tree_5_0" ON "RF_Tree_5_0".join_key_5_0 = "RF_Tree_4_0".join_key_4_0 LEFT OUTER JOIN "RF_Tree_6_0" ON "RF_Tree_6_0".join_key_6_0 = "RF_Tree_5_0".join_key_5_0 LEFT OUTER JOIN "RF_Tree_7_0" ON "RF_Tree_7_0".join_key_7_0 = "RF_Tree_6_0".join_key_6_0 LEFT OUTER JOIN "RF_Tree_8_0" ON "RF_Tree_8_0".join_key_8_0 = "RF_Tree_7_0".join_key_7_0 LEFT OUTER JOIN "RF_Tree_9_0" ON "RF_Tree_9_0".join_key_9_0 = "RF_Tree_8_0".join_key_8_0 LEFT OUTER JOIN "RF_Tree_10_0" ON "RF_Tree_10_0".join_key_10_0 = "RF_Tree_9_0".join_key_9_0 LEFT OUTER JOIN "RF_Tree_11_0" ON "RF_Tree_11_0".join_key_11_0 = "RF_Tree_10_0".join_key_10_0), 
"RF_AVG_Scores" AS 
(SELECT "RF_Join_CTE".join_key_0_0 AS "KEY", 0.799329304538 + 0.1 * "RF_Join_CTE"."Estimator_0_0" + 0.1 * "RF_Join_CTE"."Estimator_1_0" + 0.1 * "RF_Join_CTE"."Estimator_2_0" + 0.1 * "RF_Join_CTE"."Estimator_3_0" + 0.1 * "RF_Join_CTE"."Estimator_4_0" + 0.1 * "RF_Join_CTE"."Estimator_5_0" + 0.1 * "RF_Join_CTE"."Estimator_6_0" + 0.1 * "RF_Join_CTE"."Estimator_7_0" + 0.1 * "RF_Join_CTE"."Estimator_8_0" + 0.1 * "RF_Join_CTE"."Estimator_9_0" + 0.1 * "RF_Join_CTE"."Estimator_10_0" + 0.1 * "RF_Join_CTE"."Estimator_11_0" AS "Score_-1", CAST(NULL AS FLOAT) AS "Proba_-1", CAST(NULL AS FLOAT) AS "LogProba_-1", 0.200670695462 AS "Score_1", CAST(NULL AS FLOAT) AS "Proba_1", CAST(NULL AS FLOAT) AS "LogProba_1" 
FROM "RF_Join_CTE"), 
orig_cte AS 
(SELECT "RF_AVG_Scores"."KEY" AS "KEY", "RF_AVG_Scores"."Score_-1" AS "Score_-1", "RF_AVG_Scores"."Score_1" AS "Score_1", "RF_AVG_Scores"."Proba_-1" AS "Proba_-1", "RF_AVG_Scores"."Proba_1" AS "Proba_1", "RF_AVG_Scores"."LogProba_-1" AS "LogProba_-1", "RF_AVG_Scores"."LogProba_1" AS "LogProba_1", CAST(NULL AS FLOAT) AS "Decision" 
FROM "RF_AVG_Scores"), 
score_class_union AS 
(SELECT scu."KEY" AS "KEY", scu.class AS class, scu."LogProba" AS "LogProba", scu."Proba" AS "Proba", scu."Score" AS "Score" 
FROM (SELECT orig_cte."KEY" AS "KEY", -1 AS class, orig_cte."LogProba_-1" AS "LogProba", orig_cte."Proba_-1" AS "Proba", orig_cte."Score_-1" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 1 AS class, orig_cte."LogProba_1" AS "LogProba", orig_cte."Proba_1" AS "Proba", orig_cte."Score_1" AS "Score" 
FROM orig_cte) scu), 
score_max AS 
(SELECT orig_cte."KEY" AS "KEY", orig_cte."Score_-1" AS "Score_-1", orig_cte."Score_1" AS "Score_1", orig_cte."Proba_-1" AS "Proba_-1", orig_cte."Proba_1" AS "Proba_1", orig_cte."LogProba_-1" AS "LogProba_-1", orig_cte."LogProba_1" AS "LogProba_1", orig_cte."Decision" AS "Decision", (SELECT max(score_class_union."LogProba") AS max_1 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_LogProba", (SELECT max(score_class_union."Proba") AS max_2 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_Proba", (SELECT max(score_class_union."Score") AS max_3 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_Score" 
FROM orig_cte), 
score_soft_max_comp AS 
(SELECT score_max."KEY" AS "KEY", score_max."Score_-1" AS "Score_-1", score_max."Score_1" AS "Score_1", score_max."Proba_-1" AS "Proba_-1", score_max."Proba_1" AS "Proba_1", score_max."LogProba_-1" AS "LogProba_-1", score_max."LogProba_1" AS "LogProba_1", score_max."Decision" AS "Decision", score_max."max_LogProba" AS "max_LogProba", score_max."max_Proba" AS "max_Proba", score_max."max_Score" AS "max_Score", exp(score_max."Score_-1" - score_max."max_Score") AS "exp_delta_Score_-1", exp(score_max."Score_1" - score_max."max_Score") AS "exp_delta_Score_1" 
FROM score_max), 
score_class_union_soft AS 
(SELECT soft_scu."KEY" AS "KEY", soft_scu.class AS class, soft_scu."LogProba" AS "LogProba", soft_scu."Proba" AS "Proba", soft_scu."Score" AS "Score", soft_scu."exp_delta_Score" AS "exp_delta_Score" 
FROM (SELECT score_soft_max_comp."KEY" AS "KEY", -1 AS class, score_soft_max_comp."LogProba_-1" AS "LogProba", score_soft_max_comp."Proba_-1" AS "Proba", score_soft_max_comp."Score_-1" AS "Score", score_soft_max_comp."exp_delta_Score_-1" AS "exp_delta_Score" 
FROM score_soft_max_comp UNION ALL SELECT score_soft_max_comp."KEY" AS "KEY", 1 AS class, score_soft_max_comp."LogProba_1" AS "LogProba", score_soft_max_comp."Proba_1" AS "Proba", score_soft_max_comp."Score_1" AS "Score", score_soft_max_comp."exp_delta_Score_1" AS "exp_delta_Score" 
FROM score_soft_max_comp) soft_scu), 
score_soft_max AS 
(SELECT score_soft_max_comp."KEY" AS "KEY", score_soft_max_comp."Score_-1" AS "Score_-1", score_soft_max_comp."Score_1" AS "Score_1", score_soft_max_comp."Proba_-1" AS "Proba_-1", score_soft_max_comp."Proba_1" AS "Proba_1", score_soft_max_comp."LogProba_-1" AS "LogProba_-1", score_soft_max_comp."LogProba_1" AS "LogProba_1", score_soft_max_comp."Decision" AS "Decision", score_soft_max_comp."max_LogProba" AS "max_LogProba", score_soft_max_comp."max_Proba" AS "max_Proba", score_soft_max_comp."max_Score" AS "max_Score", score_soft_max_comp."exp_delta_Score_-1" AS "exp_delta_Score_-1", score_soft_max_comp."exp_delta_Score_1" AS "exp_delta_Score_1", (SELECT sum(score_class_union_soft."exp_delta_Score") AS sum_1 
FROM score_class_union_soft 
WHERE score_soft_max_comp."KEY" = score_class_union_soft."KEY") AS "sum_ExpDeltaScore" 
FROM score_soft_max_comp), 
arg_max_cte AS 
(SELECT score_soft_max."KEY" AS "KEY", score_soft_max."Score_-1" AS "Score_-1", score_soft_max."Score_1" AS "Score_1", score_soft_max."Proba_-1" AS "Proba_-1", score_soft_max."Proba_1" AS "Proba_1", score_soft_max."LogProba_-1" AS "LogProba_-1", score_soft_max."LogProba_1" AS "LogProba_1", score_soft_max."Decision" AS "Decision", score_soft_max."max_LogProba" AS "max_LogProba", score_soft_max."max_Proba" AS "max_Proba", score_soft_max."max_Score" AS "max_Score", score_soft_max."exp_delta_Score_-1" AS "exp_delta_Score_-1", score_soft_max."exp_delta_Score_1" AS "exp_delta_Score_1", score_soft_max."sum_ExpDeltaScore" AS "sum_ExpDeltaScore", (SELECT min(score_class_union.class) AS min_1 
FROM score_class_union 
WHERE score_soft_max."max_LogProba" = score_class_union."LogProba" AND score_soft_max."KEY" = score_class_union."KEY") AS "arg_max_LogProba", (SELECT min(score_class_union.class) AS min_2 
FROM score_class_union 
WHERE score_soft_max."max_Proba" = score_class_union."Proba" AND score_soft_max."KEY" = score_class_union."KEY") AS "arg_max_Proba", (SELECT min(score_class_union.class) AS min_3 
FROM score_class_union 
WHERE score_soft_max."max_Score" = score_class_union."Score" AND score_soft_max."KEY" = score_class_union."KEY") AS "arg_max_Score", score_soft_max."exp_delta_Score_-1" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_-1", score_soft_max."exp_delta_Score_1" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_1" 
FROM score_soft_max)
 SELECT arg_max_cte."KEY" AS "KEY", arg_max_cte."Score_-1" AS "Score_-1", arg_max_cte."Score_1" AS "Score_1", arg_max_cte."SoftProba_-1" AS "Proba_-1", arg_max_cte."SoftProba_1" AS "Proba_1", CASE WHEN (arg_max_cte."SoftProba_-1" > 0.0) THEN ln(arg_max_cte."SoftProba_-1") ELSE -BINARY_FLOAT_INFINITY END AS "LogProba_-1", CASE WHEN (arg_max_cte."SoftProba_1" > 0.0) THEN ln(arg_max_cte."SoftProba_1") ELSE -BINARY_FLOAT_INFINITY END AS "LogProba_1", arg_max_cte."arg_max_Score" AS "Decision" 
FROM arg_max_cte