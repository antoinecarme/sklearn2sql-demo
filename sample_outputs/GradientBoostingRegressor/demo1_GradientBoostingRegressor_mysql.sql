-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

SELECT `RF_AVG_Scores`.`KEY` AS `KEY`, `RF_AVG_Scores`.`Estimator` AS `Estimator` 
FROM (SELECT `RF_Join_CTE`.join_key_0_0 AS `KEY`, 0.0598080155345 + 0.1 * `RF_Join_CTE`.`Estimator_0_0` + 0.1 * `RF_Join_CTE`.`Estimator_1_0` + 0.1 * `RF_Join_CTE`.`Estimator_2_0` + 0.1 * `RF_Join_CTE`.`Estimator_3_0` + 0.1 * `RF_Join_CTE`.`Estimator_4_0` + 0.1 * `RF_Join_CTE`.`Estimator_5_0` + 0.1 * `RF_Join_CTE`.`Estimator_6_0` + 0.1 * `RF_Join_CTE`.`Estimator_7_0` + 0.1 * `RF_Join_CTE`.`Estimator_8_0` + 0.1 * `RF_Join_CTE`.`Estimator_9_0` + 0.1 * `RF_Join_CTE`.`Estimator_10_0` + 0.1 * `RF_Join_CTE`.`Estimator_11_0` AS `Estimator` 
FROM (SELECT `RF_Tree_0_0`.join_key_0_0 AS join_key_0_0, `RF_Tree_0_0`.`Estimator_0_0` AS `Estimator_0_0`, `RF_Tree_1_0`.join_key_1_0 AS join_key_1_0, `RF_Tree_1_0`.`Estimator_1_0` AS `Estimator_1_0`, `RF_Tree_2_0`.join_key_2_0 AS join_key_2_0, `RF_Tree_2_0`.`Estimator_2_0` AS `Estimator_2_0`, `RF_Tree_3_0`.join_key_3_0 AS join_key_3_0, `RF_Tree_3_0`.`Estimator_3_0` AS `Estimator_3_0`, `RF_Tree_4_0`.join_key_4_0 AS join_key_4_0, `RF_Tree_4_0`.`Estimator_4_0` AS `Estimator_4_0`, `RF_Tree_5_0`.join_key_5_0 AS join_key_5_0, `RF_Tree_5_0`.`Estimator_5_0` AS `Estimator_5_0`, `RF_Tree_6_0`.join_key_6_0 AS join_key_6_0, `RF_Tree_6_0`.`Estimator_6_0` AS `Estimator_6_0`, `RF_Tree_7_0`.join_key_7_0 AS join_key_7_0, `RF_Tree_7_0`.`Estimator_7_0` AS `Estimator_7_0`, `RF_Tree_8_0`.join_key_8_0 AS join_key_8_0, `RF_Tree_8_0`.`Estimator_8_0` AS `Estimator_8_0`, `RF_Tree_9_0`.join_key_9_0 AS join_key_9_0, `RF_Tree_9_0`.`Estimator_9_0` AS `Estimator_9_0`, `RF_Tree_10_0`.join_key_10_0 AS join_key_10_0, `RF_Tree_10_0`.`Estimator_10_0` AS `Estimator_10_0`, `RF_Tree_11_0`.join_key_11_0 AS join_key_11_0, `RF_Tree_11_0`.`Estimator_11_0` AS `Estimator_11_0` 
FROM (SELECT `DT_Output`.`KEY` AS join_key_0_0, `DT_Output`.`Estimator` AS `Estimator_0_0` 
FROM (SELECT `DT_node_lookup`.`KEY` AS `KEY`, `DT_node_lookup`.node_id_2 AS node_id_2, `DT_node_data`.node_id AS node_id, `DT_node_data`.feature AS feature, `DT_node_data`.threshold AS threshold, `DT_node_data`.count AS count, `DT_node_data`.depth AS depth, `DT_node_data`.`Estimator` AS `Estimator` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= 0.04458539932966232) THEN CASE WHEN (`ADS`.`Feature_1` <= -1.3410086631774902) THEN CASE WHEN (`ADS`.`Feature_1` <= -1.5037928819656372) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS`.`Feature_1` <= -1.0798178911209106) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS`.`Feature_1` <= 0.8973332047462463) THEN CASE WHEN (`ADS`.`Feature_4` <= -2.8526577949523926) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS`.`Feature_0` <= -2.165811538696289) THEN 13 ELSE 14 END END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, 0.04458539932966232 AS threshold, 100 AS count, 0 AS depth, 4.6074255521943994e-17 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'Feature_1' AS feature, -1.3410086631774902 AS threshold, 57 AS count, 1 AS depth, 0.18152745049929608 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'Feature_1' AS feature, -1.5037928819656372 AS threshold, 6 AS count, 2 AS depth, 0.9609706297147732 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 4 AS count, 3 AS depth, 0.6568270975580847 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS count, 3 AS depth, 1.5692576940281502 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'Feature_1' AS feature, -1.0798178911209106 AS threshold, 51 AS count, 2 AS depth, 0.08982825294453403 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS count, 3 AS depth, -1.1924976565587382 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 48 AS count, 3 AS depth, 0.16997362228848853 AS `Estimator` UNION ALL SELECT 8 AS node_id, 'Feature_1' AS feature, 0.8973332047462463 AS threshold, 43 AS count, 1 AS depth, -0.24062941112697375 AS `Estimator` UNION ALL SELECT 9 AS node_id, 'Feature_4' AS feature, -2.8526577949523926 AS threshold, 39 AS count, 2 AS depth, -0.3501350928880866 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 3 AS depth, 1.7260624783713503 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 38 AS count, 3 AS depth, -0.40477187107912443 AS `Estimator` UNION ALL SELECT 12 AS node_id, 'Feature_0' AS feature, -2.165811538696289 AS threshold, 4 AS count, 2 AS depth, 0.8270509860438766 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 3 AS depth, -0.6386576802989005 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS count, 3 AS depth, 1.3156205414914688 AS `Estimator`) AS `Values`) AS `DT_node_data` ON `DT_node_lookup`.node_id_2 = `DT_node_data`.node_id) AS `DT_Output`) AS `RF_Tree_0_0` LEFT OUTER JOIN (SELECT `DT_Output_1`.`KEY` AS join_key_1_0, `DT_Output_1`.`Estimator` AS `Estimator_1_0` 
FROM (SELECT `DT_node_lookup_1`.`KEY` AS `KEY`, `DT_node_lookup_1`.node_id_2 AS node_id_2, `DT_node_data_1`.node_id AS node_id, `DT_node_data_1`.feature AS feature, `DT_node_data_1`.threshold AS threshold, `DT_node_data_1`.count AS count, `DT_node_data_1`.depth AS depth, `DT_node_data_1`.`Estimator` AS `Estimator` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= 0.04458539932966232) THEN CASE WHEN (`ADS`.`Feature_1` <= -1.3410086631774902) THEN CASE WHEN (`ADS`.`Feature_1` <= -1.5037928819656372) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS`.`Feature_1` <= -1.0798178911209106) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS`.`Feature_0` <= -0.8264321088790894) THEN CASE WHEN (`ADS`.`Feature_3` <= -0.7764636278152466) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS`.`Feature_0` <= 0.19266799092292786) THEN 13 ELSE 14 END END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_1` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, 0.04458539932966232 AS threshold, 100 AS count, 0 AS depth, -2.7755575615628915e-18 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'Feature_1' AS feature, -1.3410086631774902 AS threshold, 57 AS count, 1 AS depth, 0.1633747054493664 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'Feature_1' AS feature, -1.5037928819656372 AS threshold, 6 AS count, 2 AS depth, 0.8648735667432957 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 4 AS count, 3 AS depth, 0.5911443878022762 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS count, 3 AS depth, 1.412331924625335 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'Feature_1' AS feature, -1.0798178911209106 AS threshold, 51 AS count, 2 AS depth, 0.08084542765008058 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS count, 3 AS depth, -1.0732478909028644 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 48 AS count, 3 AS depth, 0.15297626005963966 AS `Estimator` UNION ALL SELECT 8 AS node_id, 'Feature_0' AS feature, -0.8264321088790894 AS threshold, 43 AS count, 1 AS depth, -0.2165664700142764 AS `Estimator` UNION ALL SELECT 9 AS node_id, 'Feature_3' AS feature, -0.7764636278152466 AS threshold, 8 AS count, 2 AS depth, 0.44987527972652347 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS count, 3 AS depth, 1.4912539032818022 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 6 AS count, 3 AS depth, 0.10274907187476386 AS `Estimator` UNION ALL SELECT 12 AS node_id, 'Feature_0' AS feature, 0.19266799092292786 AS threshold, 35 AS count, 2 AS depth, -0.3688960128121736 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 18 AS count, 3 AS depth, -0.7664411501792726 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 17 AS count, 3 AS depth, 0.05203413263534308 AS `Estimator`) AS `Values`) AS `DT_node_data_1` ON `DT_node_lookup_1`.node_id_2 = `DT_node_data_1`.node_id) AS `DT_Output_1`) AS `RF_Tree_1_0` ON `RF_Tree_0_0`.join_key_0_0 = `RF_Tree_1_0`.join_key_1_0 LEFT OUTER JOIN (SELECT `DT_Output_2`.`KEY` AS join_key_2_0, `DT_Output_2`.`Estimator` AS `Estimator_2_0` 
FROM (SELECT `DT_node_lookup_2`.`KEY` AS `KEY`, `DT_node_lookup_2`.node_id_2 AS node_id_2, `DT_node_data_2`.node_id AS node_id, `DT_node_data_2`.feature AS feature, `DT_node_data_2`.threshold AS threshold, `DT_node_data_2`.count AS count, `DT_node_data_2`.depth AS depth, `DT_node_data_2`.`Estimator` AS `Estimator` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_4` <= -1.1652393341064453) THEN CASE WHEN (`ADS`.`Feature_1` <= -0.4263990521430969) THEN CASE WHEN (`ADS`.`Feature_4` <= -1.4708309173583984) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS`.`Feature_1` <= 0.0922747477889061) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS`.`Feature_2` <= 0.8628970384597778) THEN CASE WHEN (`ADS`.`Feature_1` <= -1.3546048402786255) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS`.`Feature_2` <= 1.0999720096588135) THEN 13 ELSE 14 END END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_2` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'Feature_4' AS feature, -1.1652393341064453 AS threshold, 100 AS count, 0 AS depth, 3.885780586188048e-18 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'Feature_1' AS feature, -0.4263990521430969 AS threshold, 9 AS count, 1 AS depth, 0.5850911928810674 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'Feature_4' AS feature, -1.4708309173583984 AS threshold, 4 AS count, 2 AS depth, -0.3665700364390524 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS count, 3 AS depth, -0.9574551714413467 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 3 AS depth, 1.4060853685678305 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'Feature_1' AS feature, 0.0922747477889061 AS threshold, 5 AS count, 2 AS depth, 1.346420176337163 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS count, 3 AS depth, 1.9038759828852259 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS count, 3 AS depth, 0.9747829719717879 AS `Estimator` UNION ALL SELECT 8 AS node_id, 'Feature_2' AS feature, 0.8628970384597778 AS threshold, 91 AS count, 1 AS depth, -0.0578661619332924 AS `Estimator` UNION ALL SELECT 9 AS node_id, 'Feature_1' AS feature, -1.3546048402786255 AS threshold, 75 AS count, 2 AS depth, 0.03628239658671832 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 6 AS count, 3 AS depth, 0.6695313343312949 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 69 AS count, 3 AS depth, -0.01878272843454921 AS `Estimator` UNION ALL SELECT 12 AS node_id, 'Feature_2' AS feature, 1.0999720096588135 AS threshold, 16 AS count, 2 AS depth, -0.4991875299958426 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 6 AS count, 3 AS depth, -1.2697298519029252 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 10 AS count, 3 AS depth, -0.03686213685159304 AS `Estimator`) AS `Values`) AS `DT_node_data_2` ON `DT_node_lookup_2`.node_id_2 = `DT_node_data_2`.node_id) AS `DT_Output_2`) AS `RF_Tree_2_0` ON `RF_Tree_2_0`.join_key_2_0 = `RF_Tree_1_0`.join_key_1_0 LEFT OUTER JOIN (SELECT `DT_Output_3`.`KEY` AS join_key_3_0, `DT_Output_3`.`Estimator` AS `Estimator_3_0` 
FROM (SELECT `DT_node_lookup_3`.`KEY` AS `KEY`, `DT_node_lookup_3`.node_id_2 AS node_id_2, `DT_node_data_3`.node_id AS node_id, `DT_node_data_3`.feature AS feature, `DT_node_data_3`.threshold AS threshold, `DT_node_data_3`.count AS count, `DT_node_data_3`.depth AS depth, `DT_node_data_3`.`Estimator` AS `Estimator` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_0` <= -0.46874159574508667) THEN CASE WHEN (`ADS`.`Feature_0` <= -0.9929401278495789) THEN CASE WHEN (`ADS`.`Feature_1` <= 1.3328298330307007) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS`.`Feature_1` <= -0.4391494691371918) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS`.`Feature_2` <= 0.8628970384597778) THEN CASE WHEN (`ADS`.`Feature_1` <= -1.3410086631774902) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS`.`Feature_0` <= 0.39088937640190125) THEN 13 ELSE 14 END END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_3` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'Feature_0' AS feature, -0.46874159574508667 AS threshold, 100 AS count, 0 AS depth, -4.163336342344337e-17 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'Feature_0' AS feature, -0.9929401278495789 AS threshold, 33 AS count, 1 AS depth, 0.24451391303670486 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'Feature_1' AS feature, 1.3328298330307007 AS threshold, 17 AS count, 2 AS depth, -0.015508144388739 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 3 AS depth, 0.0972218525331603 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS count, 3 AS depth, -0.8609831213029837 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'Feature_1' AS feature, -0.4391494691371918 AS threshold, 16 AS count, 2 AS depth, 0.5207873490512389 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 7 AS count, 3 AS depth, -0.04240975728318563 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 9 AS count, 3 AS depth, 0.9588295428669026 AS `Estimator` UNION ALL SELECT 8 AS node_id, 'Feature_2' AS feature, 0.8628970384597778 AS threshold, 67 AS count, 1 AS depth, -0.12043222582404862 AS `Estimator` UNION ALL SELECT 9 AS node_id, 'Feature_1' AS feature, -1.3410086631774902 AS threshold, 56 AS count, 2 AS depth, -0.020028336899690743 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 5 AS count, 3 AS depth, 0.8192667294587785 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 51 AS count, 3 AS depth, -0.10231216693483479 AS `Estimator` UNION ALL SELECT 12 AS node_id, 'Feature_0' AS feature, 0.39088937640190125 AS threshold, 11 AS count, 2 AS depth, -0.6315792967116888 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 7 AS count, 3 AS depth, -1.1059325695916684 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 4 AS count, 3 AS depth, 0.19853893082827528 AS `Estimator`) AS `Values`) AS `DT_node_data_3` ON `DT_node_lookup_3`.node_id_2 = `DT_node_data_3`.node_id) AS `DT_Output_3`) AS `RF_Tree_3_0` ON `RF_Tree_3_0`.join_key_3_0 = `RF_Tree_2_0`.join_key_2_0 LEFT OUTER JOIN (SELECT `DT_Output_4`.`KEY` AS join_key_4_0, `DT_Output_4`.`Estimator` AS `Estimator_4_0` 
FROM (SELECT `DT_node_lookup_4`.`KEY` AS `KEY`, `DT_node_lookup_4`.node_id_2 AS node_id_2, `DT_node_data_4`.node_id AS node_id, `DT_node_data_4`.feature AS feature, `DT_node_data_4`.threshold AS threshold, `DT_node_data_4`.count AS count, `DT_node_data_4`.depth AS depth, `DT_node_data_4`.`Estimator` AS `Estimator` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_4` <= 1.6895700693130493) THEN CASE WHEN (`ADS`.`Feature_0` <= -0.46874159574508667) THEN CASE WHEN (`ADS`.`Feature_1` <= -0.4391494691371918) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS`.`Feature_0` <= -0.36652034521102905) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS`.`Feature_0` <= -0.1075672060251236) THEN CASE WHEN (`ADS`.`Feature_1` <= 0.6470198631286621) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS`.`Feature_4` <= 1.7311290502548218) THEN 13 ELSE 14 END END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_4` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'Feature_4' AS feature, 1.6895700693130493 AS threshold, 100 AS count, 0 AS depth, 4.274358644806853e-17 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'Feature_0' AS feature, -0.46874159574508667 AS threshold, 93 AS count, 1 AS depth, 0.043035239457009725 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'Feature_1' AS feature, -0.4391494691371918 AS threshold, 29 AS count, 2 AS depth, 0.28829739412215183 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 12 AS count, 3 AS depth, -0.11206375957981675 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 17 AS count, 3 AS depth, 0.5709052673235415 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'Feature_0' AS feature, -0.36652034521102905 AS threshold, 64 AS count, 2 AS depth, -0.06809917437563283 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 6 AS count, 3 AS depth, -0.8768795634938095 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 58 AS count, 3 AS depth, 0.015567762429695785 AS `Estimator` UNION ALL SELECT 8 AS node_id, 'Feature_0' AS feature, -0.1075672060251236 AS threshold, 7 AS count, 1 AS depth, -0.5717538956431291 AS `Estimator` UNION ALL SELECT 9 AS node_id, 'Feature_1' AS feature, 0.6470198631286621 AS threshold, 5 AS count, 2 AS depth, -0.20444115149612974 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 4 AS count, 3 AS depth, -0.027278139814258872 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 3 AS depth, -0.913093198223613 AS `Estimator` UNION ALL SELECT 12 AS node_id, 'Feature_4' AS feature, 1.7311290502548218 AS threshold, 2 AS count, 2 AS depth, -1.4900357560106274 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 3 AS depth, -1.7387073544848453 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 3 AS depth, -1.2413641575364096 AS `Estimator`) AS `Values`) AS `DT_node_data_4` ON `DT_node_lookup_4`.node_id_2 = `DT_node_data_4`.node_id) AS `DT_Output_4`) AS `RF_Tree_4_0` ON `RF_Tree_4_0`.join_key_4_0 = `RF_Tree_3_0`.join_key_3_0 LEFT OUTER JOIN (SELECT `DT_Output_5`.`KEY` AS join_key_5_0, `DT_Output_5`.`Estimator` AS `Estimator_5_0` 
FROM (SELECT `DT_node_lookup_5`.`KEY` AS `KEY`, `DT_node_lookup_5`.node_id_2 AS node_id_2, `DT_node_data_5`.node_id AS node_id, `DT_node_data_5`.feature AS feature, `DT_node_data_5`.threshold AS threshold, `DT_node_data_5`.count AS count, `DT_node_data_5`.depth AS depth, `DT_node_data_5`.`Estimator` AS `Estimator` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_4` <= -0.45125359296798706) THEN CASE WHEN (`ADS`.`Feature_3` <= 0.44876575469970703) THEN CASE WHEN (`ADS`.`Feature_1` <= -1.0473634004592896) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS`.`Feature_0` <= -1.4538745880126953) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.12552231550216675) THEN CASE WHEN (`ADS`.`Feature_2` <= -0.16862744092941284) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS`.`Feature_3` <= -2.2001357078552246) THEN 13 ELSE 14 END END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_5` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'Feature_4' AS feature, -0.45125359296798706 AS threshold, 100 AS count, 0 AS depth, 3.1086244689504386e-17 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'Feature_3' AS feature, 0.44876575469970703 AS threshold, 29 AS count, 1 AS depth, 0.23789656841711368 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'Feature_1' AS feature, -1.0473634004592896 AS threshold, 24 AS count, 2 AS depth, 0.043551435390071745 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 6 AS count, 3 AS depth, -0.5410470050955375 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 18 AS count, 3 AS depth, 0.2384175822186082 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'Feature_0' AS feature, -1.4538745880126953 AS threshold, 5 AS count, 2 AS depth, 1.1707532069469146 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 3 AS depth, -0.07824051950035676 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 4 AS count, 3 AS depth, 1.4830016385587326 AS `Estimator` UNION ALL SELECT 8 AS node_id, 'Feature_2' AS feature, -0.12552231550216675 AS threshold, 71 AS count, 1 AS depth, -0.09716902090276472 AS `Estimator` UNION ALL SELECT 9 AS node_id, 'Feature_2' AS feature, -0.16862744092941284 AS threshold, 39 AS count, 2 AS depth, 0.09809621374450628 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 37 AS count, 3 AS depth, 0.010184552024217435 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS count, 3 AS depth, 1.7244619555698495 AS `Estimator` UNION ALL SELECT 12 AS node_id, 'Feature_3' AS feature, -2.2001357078552246 AS threshold, 32 AS count, 2 AS depth, -0.33514852562912617 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 3 AS depth, 1.406106448684886 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 31 AS count, 3 AS depth, -0.3913180409295781 AS `Estimator`) AS `Values`) AS `DT_node_data_5` ON `DT_node_lookup_5`.node_id_2 = `DT_node_data_5`.node_id) AS `DT_Output_5`) AS `RF_Tree_5_0` ON `RF_Tree_5_0`.join_key_5_0 = `RF_Tree_4_0`.join_key_4_0 LEFT OUTER JOIN (SELECT `DT_Output_6`.`KEY` AS join_key_6_0, `DT_Output_6`.`Estimator` AS `Estimator_6_0` 
FROM (SELECT `DT_node_lookup_6`.`KEY` AS `KEY`, `DT_node_lookup_6`.node_id_2 AS node_id_2, `DT_node_data_6`.node_id AS node_id, `DT_node_data_6`.feature AS feature, `DT_node_data_6`.threshold AS threshold, `DT_node_data_6`.count AS count, `DT_node_data_6`.depth AS depth, `DT_node_data_6`.`Estimator` AS `Estimator` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_4` <= -0.45125359296798706) THEN CASE WHEN (`ADS`.`Feature_3` <= 0.44876575469970703) THEN CASE WHEN (`ADS`.`Feature_1` <= 0.20676979422569275) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS`.`Feature_0` <= -1.4538745880126953) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS`.`Feature_4` <= -0.3282318115234375) THEN CASE WHEN (`ADS`.`Feature_0` <= -0.39858993887901306) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.12552231550216675) THEN 13 ELSE 14 END END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_6` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'Feature_4' AS feature, -0.45125359296798706 AS threshold, 100 AS count, 0 AS depth, -3.3861802251067274e-17 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'Feature_3' AS feature, 0.44876575469970703 AS threshold, 29 AS count, 1 AS depth, 0.2141069115754023 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'Feature_1' AS feature, 0.20676979422569275 AS threshold, 24 AS count, 2 AS depth, 0.03919629185106457 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 3 AS depth, -0.1969949887899952 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 9 AS count, 3 AS depth, 0.43284842625283076 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'Feature_0' AS feature, -1.4538745880126953 AS threshold, 5 AS count, 2 AS depth, 1.0536778862522234 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 3 AS depth, -0.0704164675503211 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 4 AS count, 3 AS depth, 1.3347014747028592 AS `Estimator` UNION ALL SELECT 8 AS node_id, 'Feature_4' AS feature, -0.3282318115234375 AS threshold, 71 AS count, 1 AS depth, -0.08745211881248827 AS `Estimator` UNION ALL SELECT 9 AS node_id, 'Feature_0' AS feature, -0.39858993887901306 AS threshold, 5 AS count, 2 AS depth, -0.8168486652808273 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 3 AS depth, 1.2100568398156661 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 4 AS count, 3 AS depth, -1.3235750415549505 AS `Estimator` UNION ALL SELECT 12 AS node_id, 'Feature_2' AS feature, -0.12552231550216675 AS threshold, 66 AS count, 2 AS depth, -0.032194804686098984 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 35 AS count, 3 AS depth, 0.18893936046749393 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 31 AS count, 3 AS depth, -0.2818624105046717 AS `Estimator`) AS `Values`) AS `DT_node_data_6` ON `DT_node_lookup_6`.node_id_2 = `DT_node_data_6`.node_id) AS `DT_Output_6`) AS `RF_Tree_6_0` ON `RF_Tree_6_0`.join_key_6_0 = `RF_Tree_5_0`.join_key_5_0 LEFT OUTER JOIN (SELECT `DT_Output_7`.`KEY` AS join_key_7_0, `DT_Output_7`.`Estimator` AS `Estimator_7_0` 
FROM (SELECT `DT_node_lookup_7`.`KEY` AS `KEY`, `DT_node_lookup_7`.node_id_2 AS node_id_2, `DT_node_data_7`.node_id AS node_id, `DT_node_data_7`.feature AS feature, `DT_node_data_7`.threshold AS threshold, `DT_node_data_7`.count AS count, `DT_node_data_7`.depth AS depth, `DT_node_data_7`.`Estimator` AS `Estimator` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_0` <= 2.2167487144470215) THEN CASE WHEN (`ADS`.`Feature_3` <= -2.1270437240600586) THEN CASE WHEN (`ADS`.`Feature_4` <= 0.744641900062561) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS`.`Feature_2` <= 0.04458539932966232) THEN 6 ELSE 7 END END ELSE 8 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_7` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'Feature_0' AS feature, 2.2167487144470215 AS threshold, 100 AS count, 0 AS depth, -1.609823385706477e-17 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'Feature_3' AS feature, -2.1270437240600586 AS threshold, 99 AS count, 1 AS depth, 0.013497863657355065 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'Feature_4' AS feature, 0.744641900062561 AS threshold, 2 AS count, 2 AS depth, 1.1297225833767446 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 3 AS depth, 0.9657631218866246 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 3 AS depth, 1.2936820448668644 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'Feature_2' AS feature, 0.04458539932966232 AS threshold, 97 AS count, 2 AS depth, -0.009517079017271527 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 55 AS count, 3 AS depth, 0.11577187844998003 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 42 AS count, 3 AS depth, -0.17358595189105339 AS `Estimator` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 1 AS depth, -1.3362885020781528 AS `Estimator`) AS `Values`) AS `DT_node_data_7` ON `DT_node_lookup_7`.node_id_2 = `DT_node_data_7`.node_id) AS `DT_Output_7`) AS `RF_Tree_7_0` ON `RF_Tree_7_0`.join_key_7_0 = `RF_Tree_6_0`.join_key_6_0 LEFT OUTER JOIN (SELECT `DT_Output_8`.`KEY` AS join_key_8_0, `DT_Output_8`.`Estimator` AS `Estimator_8_0` 
FROM (SELECT `DT_node_lookup_8`.`KEY` AS `KEY`, `DT_node_lookup_8`.node_id_2 AS node_id_2, `DT_node_data_8`.node_id AS node_id, `DT_node_data_8`.feature AS feature, `DT_node_data_8`.threshold AS threshold, `DT_node_data_8`.count AS count, `DT_node_data_8`.depth AS depth, `DT_node_data_8`.`Estimator` AS `Estimator` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_4` <= -2.8526577949523926) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_4` <= -1.8524091243743896) THEN CASE WHEN (`ADS`.`Feature_0` <= -0.22083544731140137) THEN 4 ELSE 5 END ELSE CASE WHEN (`ADS`.`Feature_4` <= -1.1652393341064453) THEN 7 ELSE 8 END END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_8` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'Feature_4' AS feature, -2.8526577949523926 AS threshold, 100 AS count, 0 AS depth, 2.2759572004815708e-17 AS `Estimator` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 1 AS depth, 1.2999556020908194 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'Feature_4' AS feature, -1.8524091243743896 AS threshold, 99 AS count, 1 AS depth, -0.013130864667584024 AS `Estimator` UNION ALL SELECT 3 AS node_id, 'Feature_0' AS feature, -0.22083544731140137 AS threshold, 2 AS count, 2 AS depth, -0.9900626701530977 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 3 AS depth, -0.8983784907384695 AS `Estimator` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 3 AS depth, -1.0817468495677258 AS `Estimator` UNION ALL SELECT 6 AS node_id, 'Feature_4' AS feature, -1.1652393341064453 AS threshold, 97 AS count, 2 AS depth, 0.0070120591568595585 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 6 AS count, 3 AS depth, 0.7021347549455753 AS `Estimator` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 91 AS count, 3 AS depth, -0.038820206499539274 AS `Estimator`) AS `Values`) AS `DT_node_data_8` ON `DT_node_lookup_8`.node_id_2 = `DT_node_data_8`.node_id) AS `DT_Output_8`) AS `RF_Tree_8_0` ON `RF_Tree_8_0`.join_key_8_0 = `RF_Tree_7_0`.join_key_7_0 LEFT OUTER JOIN (SELECT `DT_Output_9`.`KEY` AS join_key_9_0, `DT_Output_9`.`Estimator` AS `Estimator_9_0` 
FROM (SELECT `DT_node_lookup_9`.`KEY` AS `KEY`, `DT_node_lookup_9`.node_id_2 AS node_id_2, `DT_node_data_9`.node_id AS node_id, `DT_node_data_9`.feature AS feature, `DT_node_data_9`.threshold AS threshold, `DT_node_data_9`.count AS count, `DT_node_data_9`.depth AS depth, `DT_node_data_9`.`Estimator` AS `Estimator` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_4` <= 1.6895700693130493) THEN CASE WHEN (`ADS`.`Feature_4` <= 0.8633241653442383) THEN CASE WHEN (`ADS`.`Feature_4` <= 0.6326814889907837) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS`.`Feature_1` <= 0.8542665243148804) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS`.`Feature_0` <= -0.1075672060251236) THEN CASE WHEN (`ADS`.`Feature_2` <= -0.2923924922943115) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS`.`Feature_0` <= 0.4301600456237793) THEN 13 ELSE 14 END END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_9` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'Feature_4' AS feature, 1.6895700693130493 AS threshold, 100 AS count, 0 AS depth, -3.2751579226442116e-17 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'Feature_4' AS feature, 0.8633241653442383 AS threshold, 93 AS count, 1 AS depth, 0.034875345565180925 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'Feature_4' AS feature, 0.6326814889907837 AS threshold, 81 AS count, 2 AS depth, -0.025536369223477504 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 75 AS count, 3 AS depth, 0.033019912264227444 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 6 AS count, 3 AS depth, -0.7574898878197892 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'Feature_1' AS feature, 0.8542665243148804 AS threshold, 12 AS count, 2 AS depth, 0.4426544203886252 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 10 AS count, 3 AS depth, 0.218334957370602 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS count, 3 AS depth, 1.564251735478741 AS `Estimator` UNION ALL SELECT 8 AS node_id, 'Feature_0' AS feature, -0.1075672060251236 AS threshold, 7 AS count, 1 AS depth, -0.46334387679454647 AS `Estimator` UNION ALL SELECT 9 AS node_id, 'Feature_2' AS feature, -0.2923924922943115 AS threshold, 5 AS count, 2 AS depth, -0.14769201974153293 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 3 AS depth, -0.8493914368454669 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 4 AS count, 3 AS depth, 0.027732834534450565 AS `Estimator` UNION ALL SELECT 12 AS node_id, 'Feature_0' AS feature, 0.4301600456237793 AS threshold, 2 AS count, 2 AS depth, -1.2524735194270806 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 3 AS depth, -1.0286690808002845 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 3 AS depth, -1.4762779580538765 AS `Estimator`) AS `Values`) AS `DT_node_data_9` ON `DT_node_lookup_9`.node_id_2 = `DT_node_data_9`.node_id) AS `DT_Output_9`) AS `RF_Tree_9_0` ON `RF_Tree_9_0`.join_key_9_0 = `RF_Tree_8_0`.join_key_8_0 LEFT OUTER JOIN (SELECT `DT_Output_10`.`KEY` AS join_key_10_0, `DT_Output_10`.`Estimator` AS `Estimator_10_0` 
FROM (SELECT `DT_node_lookup_10`.`KEY` AS `KEY`, `DT_node_lookup_10`.node_id_2 AS node_id_2, `DT_node_data_10`.node_id AS node_id, `DT_node_data_10`.feature AS feature, `DT_node_data_10`.threshold AS threshold, `DT_node_data_10`.count AS count, `DT_node_data_10`.depth AS depth, `DT_node_data_10`.`Estimator` AS `Estimator` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_0` <= -0.46874159574508667) THEN CASE WHEN (`ADS`.`Feature_0` <= -0.5193542242050171) THEN CASE WHEN (`ADS`.`Feature_3` <= -1.103742241859436) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS`.`Feature_2` <= 0.6974070072174072) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS`.`Feature_0` <= -0.36652034521102905) THEN CASE WHEN (`ADS`.`Feature_1` <= 0.2383606880903244) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS`.`Feature_1` <= -0.4694485366344452) THEN 13 ELSE 14 END END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_10` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'Feature_0' AS feature, -0.46874159574508667 AS threshold, 100 AS count, 0 AS depth, -3.3306690738754695e-17 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'Feature_0' AS feature, -0.5193542242050171 AS threshold, 33 AS count, 1 AS depth, 0.17277277986124273 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'Feature_3' AS feature, -1.103742241859436 AS threshold, 30 AS count, 2 AS depth, 0.10709277591134062 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 4 AS count, 3 AS depth, 0.7293625793279496 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 26 AS count, 3 AS depth, 0.01135896000109309 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'Feature_2' AS feature, 0.6974070072174072 AS threshold, 3 AS count, 2 AS depth, 0.8295728193602638 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS count, 3 AS depth, 1.1080709690973722 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 3 AS depth, 0.2725765198860468 AS `Estimator` UNION ALL SELECT 8 AS node_id, 'Feature_0' AS feature, -0.36652034521102905 AS threshold, 67 AS count, 1 AS depth, -0.08509704082717924 AS `Estimator` UNION ALL SELECT 9 AS node_id, 'Feature_1' AS feature, 0.2383606880903244 AS threshold, 7 AS count, 2 AS depth, -0.6491138961719739 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 5 AS count, 3 AS depth, -1.0898217671704664 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS count, 3 AS depth, 0.4526557813242573 AS `Estimator` UNION ALL SELECT 12 AS node_id, 'Feature_1' AS feature, -0.4694485366344452 AS threshold, 60 AS count, 2 AS depth, -0.01929507437028655 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 21 AS count, 3 AS depth, 0.3028266591555558 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 39 AS count, 3 AS depth, -0.19274523857650935 AS `Estimator`) AS `Values`) AS `DT_node_data_10` ON `DT_node_lookup_10`.node_id_2 = `DT_node_data_10`.node_id) AS `DT_Output_10`) AS `RF_Tree_10_0` ON `RF_Tree_10_0`.join_key_10_0 = `RF_Tree_9_0`.join_key_9_0 LEFT OUTER JOIN (SELECT `DT_Output_11`.`KEY` AS join_key_11_0, `DT_Output_11`.`Estimator` AS `Estimator_11_0` 
FROM (SELECT `DT_node_lookup_11`.`KEY` AS `KEY`, `DT_node_lookup_11`.node_id_2 AS node_id_2, `DT_node_data_11`.node_id AS node_id, `DT_node_data_11`.feature AS feature, `DT_node_data_11`.threshold AS threshold, `DT_node_data_11`.count AS count, `DT_node_data_11`.depth AS depth, `DT_node_data_11`.`Estimator` AS `Estimator` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_0` <= 2.2167487144470215) THEN CASE WHEN (`ADS`.`Feature_0` <= 1.2173686027526855) THEN CASE WHEN (`ADS`.`Feature_0` <= 0.9694368839263916) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS`.`Feature_0` <= 1.9133858680725098) THEN 6 ELSE 7 END END ELSE 8 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_11` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'Feature_0' AS feature, 2.2167487144470215 AS threshold, 100 AS count, 0 AS depth, -2.886579864025407e-17 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'Feature_0' AS feature, 1.2173686027526855 AS threshold, 99 AS count, 1 AS depth, 0.012448103922852102 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'Feature_0' AS feature, 0.9694368839263916 AS threshold, 93 AS count, 2 AS depth, -0.020532990857597203 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 90 AS count, 3 AS depth, 0.0070668007385985615 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS count, 3 AS depth, -0.8485267387434711 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'Feature_0' AS feature, 1.9133858680725098 AS threshold, 6 AS count, 2 AS depth, 0.5236550730198172 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS count, 3 AS depth, 0.8634427057577968 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS count, 3 AS depth, 0.18386744028183766 AS `Estimator` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 1 AS depth, -1.232362288362362 AS `Estimator`) AS `Values`) AS `DT_node_data_11` ON `DT_node_lookup_11`.node_id_2 = `DT_node_data_11`.node_id) AS `DT_Output_11`) AS `RF_Tree_11_0` ON `RF_Tree_11_0`.join_key_11_0 = `RF_Tree_10_0`.join_key_10_0) AS `RF_Join_CTE`) AS `RF_AVG_Scores`