-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH "IL" AS 
(SELECT "ADS"."KEY" AS "KEY", "ADS"."Feature_0" AS "Feature_0", "ADS"."Feature_1" AS "Feature_1", "ADS"."Feature_2" AS "Feature_2", "ADS"."Feature_3" AS "Feature_3" 
FROM "INPUT_DATA" AS "ADS"), 
"HL_BA_1" AS 
(SELECT "IL"."KEY" AS "KEY", -0.0357450296065 * "IL"."Feature_0" + 0.0204348754682 * "IL"."Feature_1" + -0.0131588512463 * "IL"."Feature_2" + 0.343309102118 * "IL"."Feature_3" + -0.147809307204 AS "NEUR_1_1", 0.0654425494403 * "IL"."Feature_0" + -0.14649127406 * "IL"."Feature_1" + 0.118943125358 * "IL"."Feature_2" + 0.221684362324 * "IL"."Feature_3" + 0.134737085429 AS "NEUR_1_2", 0.0883904334263 * "IL"."Feature_0" + 0.210095952886 * "IL"."Feature_1" + -0.181800767923 * "IL"."Feature_2" + -0.201508920934 * "IL"."Feature_3" + -0.105156432621 AS "NEUR_1_3", 0.058272398419 * "IL"."Feature_0" + 0.343853037595 * "IL"."Feature_1" + -0.287917516728 * "IL"."Feature_2" + -0.339749675901 * "IL"."Feature_3" + 0.310709693184 AS "NEUR_1_4", -0.00176582188376 * "IL"."Feature_0" + -0.0286241510422 * "IL"."Feature_1" + -0.0995867133099 * "IL"."Feature_2" + -0.00280662808412 * "IL"."Feature_3" + 0.177496548746 AS "NEUR_1_5", 0.136233775207 * "IL"."Feature_0" + 0.125368548172 * "IL"."Feature_1" + -0.233348558079 * "IL"."Feature_2" + -0.200920049753 * "IL"."Feature_3" + 0.0567803902714 AS "NEUR_1_6", 0.0420490918502 * "IL"."Feature_0" + 0.12809261709 * "IL"."Feature_1" + 0.0207003484344 * "IL"."Feature_2" + -0.317491020949 * "IL"."Feature_3" + 0.0460546050646 AS "NEUR_1_7", 0.15845251026 * "IL"."Feature_0" + 0.00683197526963 * "IL"."Feature_1" + -0.00441426521048 * "IL"."Feature_2" + -0.145861792122 * "IL"."Feature_3" + -0.180730481434 AS "NEUR_1_8", 0.189321304473 * "IL"."Feature_0" + -0.208418794598 * "IL"."Feature_1" + 0.112273664974 * "IL"."Feature_2" + 0.219033769675 * "IL"."Feature_3" + -0.0147422579534 AS "NEUR_1_9", -0.0256450965252 * "IL"."Feature_0" + 0.316468784569 * "IL"."Feature_1" + 0.0893001445996 * "IL"."Feature_2" + -0.329099861182 * "IL"."Feature_3" + -0.144532269658 AS "NEUR_1_10", 0.102655239912 * "IL"."Feature_0" + -0.0988478987767 * "IL"."Feature_1" + 0.324477007004 * "IL"."Feature_2" + 0.243189631894 * "IL"."Feature_3" + -0.308463444179 AS "NEUR_1_11", 0.123228351536 * "IL"."Feature_0" + 0.285571616781 * "IL"."Feature_1" + -0.188196501719 * "IL"."Feature_2" + -0.294048111365 * "IL"."Feature_3" + 0.0991159830036 AS "NEUR_1_12", 0.0621385256018 * "IL"."Feature_0" + 0.0245036060665 * "IL"."Feature_1" + 0.168710694899 * "IL"."Feature_2" + -0.17359284178 * "IL"."Feature_3" + -0.18710671754 AS "NEUR_1_13", 0.213785764093 * "IL"."Feature_0" + 0.0124118152296 * "IL"."Feature_1" + -0.221786155686 * "IL"."Feature_2" + -0.310761124224 * "IL"."Feature_3" + -0.0342996441608 AS "NEUR_1_14", -0.0828636600687 * "IL"."Feature_0" + 0.0454796643959 * "IL"."Feature_1" + -0.101075213094 * "IL"."Feature_2" + 0.0122453092945 * "IL"."Feature_3" + -0.133949963503 AS "NEUR_1_15", -0.0772513308613 * "IL"."Feature_0" + -0.00365066580561 * "IL"."Feature_1" + 0.030390741037 * "IL"."Feature_2" + -0.0294574684794 * "IL"."Feature_3" + -0.118563115476 AS "NEUR_1_16", -0.101235401341 * "IL"."Feature_0" + 0.0665067798465 * "IL"."Feature_1" + -0.0135931694225 * "IL"."Feature_2" + -0.00194091649344 * "IL"."Feature_3" + -0.177235334045 AS "NEUR_1_17", 0.131319619921 * "IL"."Feature_0" + -0.0277006587901 * "IL"."Feature_1" + 0.0314206451737 * "IL"."Feature_2" + 0.127136322587 * "IL"."Feature_3" + -0.293230772133 AS "NEUR_1_18", 0.16754247955 * "IL"."Feature_0" + 0.271636563359 * "IL"."Feature_1" + -0.0601769328795 * "IL"."Feature_2" + 0.0758037632578 * "IL"."Feature_3" + -0.111334868981 AS "NEUR_1_19", 0.143870671003 * "IL"."Feature_0" + 0.0272684586264 * "IL"."Feature_1" + 0.238561946716 * "IL"."Feature_2" + 0.21505089162 * "IL"."Feature_3" + -0.0108624246886 AS "NEUR_1_20", 0.196983551425 * "IL"."Feature_0" + 0.0846245011379 * "IL"."Feature_1" + 0.0727592180504 * "IL"."Feature_2" + -0.0390706371585 * "IL"."Feature_3" + 0.169607253555 AS "NEUR_1_21", 0.112057924711 * "IL"."Feature_0" + -0.00338899996803 * "IL"."Feature_1" + 0.165639149834 * "IL"."Feature_2" + -0.134003535241 * "IL"."Feature_3" + 0.183288955053 AS "NEUR_1_22", -0.0628463632216 * "IL"."Feature_0" + 0.174393575106 * "IL"."Feature_1" + -0.152702570743 * "IL"."Feature_2" + -0.256957292621 * "IL"."Feature_3" + -0.0879572560828 AS "NEUR_1_23", 0.170575765773 * "IL"."Feature_0" + 0.120626604109 * "IL"."Feature_1" + 0.0888467610765 * "IL"."Feature_2" + -0.192343978942 * "IL"."Feature_3" + -0.0932309247564 AS "NEUR_1_24", -0.0667127263125 * "IL"."Feature_0" + -0.00175491670827 * "IL"."Feature_1" + -0.0456452113137 * "IL"."Feature_2" + -0.025432835717 * "IL"."Feature_3" + 0.0666589920776 AS "NEUR_1_25", 0.0311303555614 * "IL"."Feature_0" + -0.000287086792035 * "IL"."Feature_1" + 0.269916603456 * "IL"."Feature_2" + 0.0798351042927 * "IL"."Feature_3" + -0.0742197147421 AS "NEUR_1_26", -0.0585705032252 * "IL"."Feature_0" + -0.10161526422 * "IL"."Feature_1" + 0.0149321202986 * "IL"."Feature_2" + 0.0141740163851 * "IL"."Feature_3" + 0.235104852272 AS "NEUR_1_27", 0.255779333509 * "IL"."Feature_0" + -0.0244400509795 * "IL"."Feature_1" + -0.218988038894 * "IL"."Feature_2" + -0.0226543485142 * "IL"."Feature_3" + -0.125285112789 AS "NEUR_1_28", 0.0456086596568 * "IL"."Feature_0" + 0.142230996299 * "IL"."Feature_1" + 0.136546844946 * "IL"."Feature_2" + -0.204766658955 * "IL"."Feature_3" + 0.205353442136 AS "NEUR_1_29", -0.0492305497993 * "IL"."Feature_0" + -0.120858233444 * "IL"."Feature_1" + 0.202063093932 * "IL"."Feature_2" + 0.138630307476 * "IL"."Feature_3" + -0.2126224877 AS "NEUR_1_30", -0.0248681025168 * "IL"."Feature_0" + 0.00500624280201 * "IL"."Feature_1" + -0.0273664571068 * "IL"."Feature_2" + -0.0469638963931 * "IL"."Feature_3" + -0.124218476927 AS "NEUR_1_31", 0.0998478081661 * "IL"."Feature_0" + -0.0658377781697 * "IL"."Feature_1" + -0.113840240604 * "IL"."Feature_2" + 0.216358936934 * "IL"."Feature_3" + 0.0208181204303 AS "NEUR_1_32", -0.000503437765437 * "IL"."Feature_0" + -0.0610931958485 * "IL"."Feature_1" + 9.28567460152e-05 * "IL"."Feature_2" + -0.0878978607568 * "IL"."Feature_3" + -0.121987300112 AS "NEUR_1_33", 0.00136640017057 * "IL"."Feature_0" + -0.0176369395137 * "IL"."Feature_1" + -0.0992238769565 * "IL"."Feature_2" + 0.0167159131927 * "IL"."Feature_3" + 0.0796761428595 AS "NEUR_1_34", -0.101764826596 * "IL"."Feature_0" + 0.00143873366023 * "IL"."Feature_1" + -0.0394201654015 * "IL"."Feature_2" + 0.035653062744 * "IL"."Feature_3" + 0.00831474271412 AS "NEUR_1_35", 0.105336366204 * "IL"."Feature_0" + 0.138189384847 * "IL"."Feature_1" + -0.146698270409 * "IL"."Feature_2" + 0.000180618594117 * "IL"."Feature_3" + 0.0622301880959 AS "NEUR_1_36", 0.0992050141958 * "IL"."Feature_0" + 0.182353825904 * "IL"."Feature_1" + -0.218914000227 * "IL"."Feature_2" + -0.276208714188 * "IL"."Feature_3" + 0.153619295268 AS "NEUR_1_37", 0.0969150707049 * "IL"."Feature_0" + 0.10595766946 * "IL"."Feature_1" + -0.0385797555438 * "IL"."Feature_2" + -0.152135528397 * "IL"."Feature_3" + -0.0255725289667 AS "NEUR_1_38", 0.185830854941 * "IL"."Feature_0" + 0.0212801366616 * "IL"."Feature_1" + -0.0451345244551 * "IL"."Feature_2" + 0.126067427123 * "IL"."Feature_3" + 0.0467018371441 AS "NEUR_1_39", 0.0550903763347 * "IL"."Feature_0" + -0.0684547215678 * "IL"."Feature_1" + 0.0695591761799 * "IL"."Feature_2" + -0.0264847574678 * "IL"."Feature_3" + -0.100397583764 AS "NEUR_1_40", -0.106061105764 * "IL"."Feature_0" + 0.0894791559994 * "IL"."Feature_1" + 0.299107732403 * "IL"."Feature_2" + 0.0627536855118 * "IL"."Feature_3" + -0.158927807407 AS "NEUR_1_41", -0.0154673615217 * "IL"."Feature_0" + -0.0253491499966 * "IL"."Feature_1" + -0.0990673530262 * "IL"."Feature_2" + -0.0614913667688 * "IL"."Feature_3" + 0.145763530584 AS "NEUR_1_42", 0.136322967667 * "IL"."Feature_0" + 0.0327589193303 * "IL"."Feature_1" + -0.0623880035737 * "IL"."Feature_2" + -0.131769093791 * "IL"."Feature_3" + 0.28539051927 AS "NEUR_1_43", -0.0866924299897 * "IL"."Feature_0" + 0.0701139300495 * "IL"."Feature_1" + -0.0621939289989 * "IL"."Feature_2" + -0.092300531826 * "IL"."Feature_3" + -0.218091033446 AS "NEUR_1_44", 0.0429640256379 * "IL"."Feature_0" + 0.0821920776919 * "IL"."Feature_1" + 0.182063899785 * "IL"."Feature_2" + 0.257865723515 * "IL"."Feature_3" + -0.202018660479 AS "NEUR_1_45", 0.151254482013 * "IL"."Feature_0" + 0.19144780477 * "IL"."Feature_1" + -0.146338626205 * "IL"."Feature_2" + -0.316188771458 * "IL"."Feature_3" + 0.0251199371393 AS "NEUR_1_46", -0.0386152712374 * "IL"."Feature_0" + -0.0727654109739 * "IL"."Feature_1" + 0.00123083649512 * "IL"."Feature_2" + 9.84548388939e-05 * "IL"."Feature_3" + 0.151305002556 AS "NEUR_1_47", -0.00704691673473 * "IL"."Feature_0" + 0.34962667256 * "IL"."Feature_1" + -0.161789820872 * "IL"."Feature_2" + -0.167316118292 * "IL"."Feature_3" + 0.423988551734 AS "NEUR_1_48", -0.0988245521876 * "IL"."Feature_0" + 0.092659344124 * "IL"."Feature_1" + -0.180427983132 * "IL"."Feature_2" + 0.0267863282072 * "IL"."Feature_3" + 0.215086566131 AS "NEUR_1_49", -0.029349144061 * "IL"."Feature_0" + 0.288206349448 * "IL"."Feature_1" + -0.0526491424169 * "IL"."Feature_2" + 0.12448430643 * "IL"."Feature_3" + 0.264130349724 AS "NEUR_1_50", 0.00144989304242 * "IL"."Feature_0" + -0.0566423530847 * "IL"."Feature_1" + -0.00810944115224 * "IL"."Feature_2" + 0.0082680401992 * "IL"."Feature_3" + -0.0977312090355 AS "NEUR_1_51", 0.00937301796492 * "IL"."Feature_0" + 0.193132628712 * "IL"."Feature_1" + 0.209309404942 * "IL"."Feature_2" + -0.296520322719 * "IL"."Feature_3" + 0.306637433653 AS "NEUR_1_52", 0.197765760517 * "IL"."Feature_0" + -0.176686105084 * "IL"."Feature_1" + 0.125701627645 * "IL"."Feature_2" + 0.0251494687025 * "IL"."Feature_3" + -0.186829577615 AS "NEUR_1_53", -0.0721488303938 * "IL"."Feature_0" + 0.00475946626184 * "IL"."Feature_1" + 0.0279950373376 * "IL"."Feature_2" + 3.63851146768e-05 * "IL"."Feature_3" + -0.189316559534 AS "NEUR_1_54", -0.0727271675533 * "IL"."Feature_0" + -0.134025435347 * "IL"."Feature_1" + 0.325488949971 * "IL"."Feature_2" + 0.17911491088 * "IL"."Feature_3" + 0.227101424154 AS "NEUR_1_55", -0.0529505749181 * "IL"."Feature_0" + 0.0558438870358 * "IL"."Feature_1" + -0.0785344791766 * "IL"."Feature_2" + 0.0138399382781 * "IL"."Feature_3" + -0.128060767001 AS "NEUR_1_56", 0.117705408424 * "IL"."Feature_0" + 0.220005097226 * "IL"."Feature_1" + -0.0561640614039 * "IL"."Feature_2" + -0.225870385642 * "IL"."Feature_3" + 0.178940578902 AS "NEUR_1_57", -0.0275227365249 * "IL"."Feature_0" + 0.00139761624159 * "IL"."Feature_1" + 0.0022446168716 * "IL"."Feature_2" + -0.0632360742202 * "IL"."Feature_3" + -0.212158742629 AS "NEUR_1_58", -0.0624160715006 * "IL"."Feature_0" + -0.0362907802392 * "IL"."Feature_1" + 0.241708833397 * "IL"."Feature_2" + 0.000443009955127 * "IL"."Feature_3" + 0.0494741472516 AS "NEUR_1_59", -0.0296909527568 * "IL"."Feature_0" + -0.0835223358756 * "IL"."Feature_1" + -0.0188683961113 * "IL"."Feature_2" + 0.0926692920601 * "IL"."Feature_3" + 0.183372458613 AS "NEUR_1_60", -0.0536723996658 * "IL"."Feature_0" + 0.0167991427258 * "IL"."Feature_1" + -0.0305897217227 * "IL"."Feature_2" + -0.0452086026197 * "IL"."Feature_3" + -0.10931777941 AS "NEUR_1_61", -0.0693429830086 * "IL"."Feature_0" + -0.000570335630481 * "IL"."Feature_1" + -0.072742641383 * "IL"."Feature_2" + 0.0741993359016 * "IL"."Feature_3" + -0.0580991878397 AS "NEUR_1_62", 0.118256863438 * "IL"."Feature_0" + 0.171348873812 * "IL"."Feature_1" + -0.271671230003 * "IL"."Feature_2" + -0.0803736538713 * "IL"."Feature_3" + -0.00570602941531 AS "NEUR_1_63", -0.141731987696 * "IL"."Feature_0" + 0.167569826647 * "IL"."Feature_1" + 0.231342042188 * "IL"."Feature_2" + -0.0532040464382 * "IL"."Feature_3" + 0.170327450291 AS "NEUR_1_64", -0.211896507359 * "IL"."Feature_0" + 0.109041512196 * "IL"."Feature_1" + 0.219299495333 * "IL"."Feature_2" + 0.373383173459 * "IL"."Feature_3" + -0.295101468765 AS "NEUR_1_65", -0.0305474138475 * "IL"."Feature_0" + 0.230273713571 * "IL"."Feature_1" + 0.0683767644452 * "IL"."Feature_2" + -0.114234062421 * "IL"."Feature_3" + -0.0929533169187 AS "NEUR_1_66", 0.23616268442 * "IL"."Feature_0" + -0.202883438886 * "IL"."Feature_1" + -0.101870225115 * "IL"."Feature_2" + -0.00926085986239 * "IL"."Feature_3" + 0.105128351883 AS "NEUR_1_67", -0.0738290184966 * "IL"."Feature_0" + -0.00753854195346 * "IL"."Feature_1" + 0.00236904056359 * "IL"."Feature_2" + -0.00344064760715 * "IL"."Feature_3" + -0.0939303388117 AS "NEUR_1_68", 0.149790055088 * "IL"."Feature_0" + 0.162894588351 * "IL"."Feature_1" + -0.292566264718 * "IL"."Feature_2" + 0.101850561065 * "IL"."Feature_3" + 0.170407477607 AS "NEUR_1_69", -0.0741712124768 * "IL"."Feature_0" + -0.0498062333432 * "IL"."Feature_1" + -6.29568892381e-05 * "IL"."Feature_2" + 0.0153985259107 * "IL"."Feature_3" + -0.125984751661 AS "NEUR_1_70", 0.194961422626 * "IL"."Feature_0" + -0.0621441104664 * "IL"."Feature_1" + 0.31916906079 * "IL"."Feature_2" + 0.204220983758 * "IL"."Feature_3" + -0.0683284995501 AS "NEUR_1_71", -0.0256474290468 * "IL"."Feature_0" + -0.225420576872 * "IL"."Feature_1" + 0.174704172523 * "IL"."Feature_2" + -0.0877858293457 * "IL"."Feature_3" + 0.198714456404 AS "NEUR_1_72", 0.275469660057 * "IL"."Feature_0" + -0.0981047917546 * "IL"."Feature_1" + -0.118682288481 * "IL"."Feature_2" + 0.013944837628 * "IL"."Feature_3" + 0.153643293343 AS "NEUR_1_73", 0.0536617785222 * "IL"."Feature_0" + -0.274248620657 * "IL"."Feature_1" + 0.325750495808 * "IL"."Feature_2" + 0.201554811521 * "IL"."Feature_3" + 0.11126264931 AS "NEUR_1_74", 0.166430912711 * "IL"."Feature_0" + 0.0957433274593 * "IL"."Feature_1" + -0.0854940240074 * "IL"."Feature_2" + -0.137174431041 * "IL"."Feature_3" + 0.286100346864 AS "NEUR_1_75", -0.0942697025957 * "IL"."Feature_0" + -0.0349559712623 * "IL"."Feature_1" + 0.090109953362 * "IL"."Feature_2" + -0.0531879624019 * "IL"."Feature_3" + 0.120463543119 AS "NEUR_1_76", -0.145063871479 * "IL"."Feature_0" + -0.125213050138 * "IL"."Feature_1" + 0.232162490232 * "IL"."Feature_2" + 0.221818837226 * "IL"."Feature_3" + 0.0174714009831 AS "NEUR_1_77", -0.169860677026 * "IL"."Feature_0" + 0.208866914429 * "IL"."Feature_1" + 0.159852721404 * "IL"."Feature_2" + 0.224326593892 * "IL"."Feature_3" + 0.237504581092 AS "NEUR_1_78", -0.0556186387752 * "IL"."Feature_0" + 0.153361881973 * "IL"."Feature_1" + 0.00962804792901 * "IL"."Feature_2" + -0.132119177494 * "IL"."Feature_3" + 0.321131064113 AS "NEUR_1_79", -0.0665627113857 * "IL"."Feature_0" + -0.0969538356912 * "IL"."Feature_1" + 0.0642641959979 * "IL"."Feature_2" + 0.00267976584808 * "IL"."Feature_3" + -0.0231441150226 AS "NEUR_1_80", -0.0139499268138 * "IL"."Feature_0" + -0.0519122372515 * "IL"."Feature_1" + -0.0186908537868 * "IL"."Feature_2" + 0.0589130037125 * "IL"."Feature_3" + -0.206147490484 AS "NEUR_1_81", -0.0101528193341 * "IL"."Feature_0" + 0.0498209420683 * "IL"."Feature_1" + 0.193853715577 * "IL"."Feature_2" + -0.0513769249567 * "IL"."Feature_3" + -0.0513957007336 AS "NEUR_1_82", -0.0852980952614 * "IL"."Feature_0" + 0.00181443141434 * "IL"."Feature_1" + 0.00499211074665 * "IL"."Feature_2" + 0.0910307942281 * "IL"."Feature_3" + -0.167003397472 AS "NEUR_1_83", 0.0158550045951 * "IL"."Feature_0" + -0.0313313828666 * "IL"."Feature_1" + -0.103828902997 * "IL"."Feature_2" + 0.00173359402652 * "IL"."Feature_3" + -0.039638263403 AS "NEUR_1_84", 0.0691043220556 * "IL"."Feature_0" + 0.283354709098 * "IL"."Feature_1" + -0.161938912207 * "IL"."Feature_2" + 0.0441053642527 * "IL"."Feature_3" + -0.101219327693 AS "NEUR_1_85", -0.0246761530294 * "IL"."Feature_0" + 0.00460316506929 * "IL"."Feature_1" + -0.0570542172447 * "IL"."Feature_2" + 0.0758640577429 * "IL"."Feature_3" + 0.0500165752083 AS "NEUR_1_86", -0.0272505055143 * "IL"."Feature_0" + -0.0462802685566 * "IL"."Feature_1" + 0.302810971693 * "IL"."Feature_2" + 0.262083679263 * "IL"."Feature_3" + -0.132235352499 AS "NEUR_1_87", -0.0749090388537 * "IL"."Feature_0" + 0.00260469712964 * "IL"."Feature_1" + -0.000125433347881 * "IL"."Feature_2" + -0.0535349141777 * "IL"."Feature_3" + 0.189937235075 AS "NEUR_1_88", 0.0218981656925 * "IL"."Feature_0" + 0.0766645543217 * "IL"."Feature_1" + 0.0397818804545 * "IL"."Feature_2" + 0.108459952136 * "IL"."Feature_3" + 0.201271217557 AS "NEUR_1_89", 0.201104096829 * "IL"."Feature_0" + -0.182509929004 * "IL"."Feature_1" + 0.169153077554 * "IL"."Feature_2" + 0.0372733548802 * "IL"."Feature_3" + -0.030199277349 AS "NEUR_1_90", -0.0138467151463 * "IL"."Feature_0" + -0.00350688524143 * "IL"."Feature_1" + -0.00647936899877 * "IL"."Feature_2" + -0.0858074070811 * "IL"."Feature_3" + -0.108171258113 AS "NEUR_1_91", 0.0114903666439 * "IL"."Feature_0" + -0.038763709314 * "IL"."Feature_1" + -0.0606340958074 * "IL"."Feature_2" + -0.00174530155248 * "IL"."Feature_3" + 0.044306060043 AS "NEUR_1_92", -0.0622815264851 * "IL"."Feature_0" + -0.0454823449731 * "IL"."Feature_1" + 0.0479331868658 * "IL"."Feature_2" + -0.0262376419635 * "IL"."Feature_3" + 0.190597895304 AS "NEUR_1_93", 0.112746842143 * "IL"."Feature_0" + 0.31647856922 * "IL"."Feature_1" + -0.251571365255 * "IL"."Feature_2" + 0.0721007898076 * "IL"."Feature_3" + 0.0375753118291 AS "NEUR_1_94", 0.042934627271 * "IL"."Feature_0" + 0.170297130348 * "IL"."Feature_1" + -0.0483649094054 * "IL"."Feature_2" + -0.241369345683 * "IL"."Feature_3" + 0.161280076688 AS "NEUR_1_95", -0.0463623425801 * "IL"."Feature_0" + -3.39223270501e-05 * "IL"."Feature_1" + -0.0348520452612 * "IL"."Feature_2" + 0.0936044108173 * "IL"."Feature_3" + -0.109694462249 AS "NEUR_1_96", 0.00237576694023 * "IL"."Feature_0" + -0.0340357663915 * "IL"."Feature_1" + -0.0735757148018 * "IL"."Feature_2" + -0.00814200323923 * "IL"."Feature_3" + -0.0214039382693 AS "NEUR_1_97", -0.101276458221 * "IL"."Feature_0" + -0.027266918205 * "IL"."Feature_1" + 0.0603423048518 * "IL"."Feature_2" + -0.00796422558011 * "IL"."Feature_3" + -0.0472152903711 AS "NEUR_1_98", 0.192987289287 * "IL"."Feature_0" + -0.169713579768 * "IL"."Feature_1" + 0.183843320087 * "IL"."Feature_2" + -0.32311885422 * "IL"."Feature_3" + -0.0560123998584 AS "NEUR_1_99", -0.107022675998 * "IL"."Feature_0" + -0.00123790294254 * "IL"."Feature_1" + 0.0942778739433 * "IL"."Feature_2" + -0.0457633442235 * "IL"."Feature_3" + 0.00281811963438 AS "NEUR_1_100" 
FROM "IL"), 
"HL_1" AS 
(SELECT "HL_BA_1"."KEY" AS "KEY", CASE WHEN ("HL_BA_1"."NEUR_1_1" >= 0.0) THEN "HL_BA_1"."NEUR_1_1" ELSE 0.0 END AS "NEUR_1_1", CASE WHEN ("HL_BA_1"."NEUR_1_2" >= 0.0) THEN "HL_BA_1"."NEUR_1_2" ELSE 0.0 END AS "NEUR_1_2", CASE WHEN ("HL_BA_1"."NEUR_1_3" >= 0.0) THEN "HL_BA_1"."NEUR_1_3" ELSE 0.0 END AS "NEUR_1_3", CASE WHEN ("HL_BA_1"."NEUR_1_4" >= 0.0) THEN "HL_BA_1"."NEUR_1_4" ELSE 0.0 END AS "NEUR_1_4", CASE WHEN ("HL_BA_1"."NEUR_1_5" >= 0.0) THEN "HL_BA_1"."NEUR_1_5" ELSE 0.0 END AS "NEUR_1_5", CASE WHEN ("HL_BA_1"."NEUR_1_6" >= 0.0) THEN "HL_BA_1"."NEUR_1_6" ELSE 0.0 END AS "NEUR_1_6", CASE WHEN ("HL_BA_1"."NEUR_1_7" >= 0.0) THEN "HL_BA_1"."NEUR_1_7" ELSE 0.0 END AS "NEUR_1_7", CASE WHEN ("HL_BA_1"."NEUR_1_8" >= 0.0) THEN "HL_BA_1"."NEUR_1_8" ELSE 0.0 END AS "NEUR_1_8", CASE WHEN ("HL_BA_1"."NEUR_1_9" >= 0.0) THEN "HL_BA_1"."NEUR_1_9" ELSE 0.0 END AS "NEUR_1_9", CASE WHEN ("HL_BA_1"."NEUR_1_10" >= 0.0) THEN "HL_BA_1"."NEUR_1_10" ELSE 0.0 END AS "NEUR_1_10", CASE WHEN ("HL_BA_1"."NEUR_1_11" >= 0.0) THEN "HL_BA_1"."NEUR_1_11" ELSE 0.0 END AS "NEUR_1_11", CASE WHEN ("HL_BA_1"."NEUR_1_12" >= 0.0) THEN "HL_BA_1"."NEUR_1_12" ELSE 0.0 END AS "NEUR_1_12", CASE WHEN ("HL_BA_1"."NEUR_1_13" >= 0.0) THEN "HL_BA_1"."NEUR_1_13" ELSE 0.0 END AS "NEUR_1_13", CASE WHEN ("HL_BA_1"."NEUR_1_14" >= 0.0) THEN "HL_BA_1"."NEUR_1_14" ELSE 0.0 END AS "NEUR_1_14", CASE WHEN ("HL_BA_1"."NEUR_1_15" >= 0.0) THEN "HL_BA_1"."NEUR_1_15" ELSE 0.0 END AS "NEUR_1_15", CASE WHEN ("HL_BA_1"."NEUR_1_16" >= 0.0) THEN "HL_BA_1"."NEUR_1_16" ELSE 0.0 END AS "NEUR_1_16", CASE WHEN ("HL_BA_1"."NEUR_1_17" >= 0.0) THEN "HL_BA_1"."NEUR_1_17" ELSE 0.0 END AS "NEUR_1_17", CASE WHEN ("HL_BA_1"."NEUR_1_18" >= 0.0) THEN "HL_BA_1"."NEUR_1_18" ELSE 0.0 END AS "NEUR_1_18", CASE WHEN ("HL_BA_1"."NEUR_1_19" >= 0.0) THEN "HL_BA_1"."NEUR_1_19" ELSE 0.0 END AS "NEUR_1_19", CASE WHEN ("HL_BA_1"."NEUR_1_20" >= 0.0) THEN "HL_BA_1"."NEUR_1_20" ELSE 0.0 END AS "NEUR_1_20", CASE WHEN ("HL_BA_1"."NEUR_1_21" >= 0.0) THEN "HL_BA_1"."NEUR_1_21" ELSE 0.0 END AS "NEUR_1_21", CASE WHEN ("HL_BA_1"."NEUR_1_22" >= 0.0) THEN "HL_BA_1"."NEUR_1_22" ELSE 0.0 END AS "NEUR_1_22", CASE WHEN ("HL_BA_1"."NEUR_1_23" >= 0.0) THEN "HL_BA_1"."NEUR_1_23" ELSE 0.0 END AS "NEUR_1_23", CASE WHEN ("HL_BA_1"."NEUR_1_24" >= 0.0) THEN "HL_BA_1"."NEUR_1_24" ELSE 0.0 END AS "NEUR_1_24", CASE WHEN ("HL_BA_1"."NEUR_1_25" >= 0.0) THEN "HL_BA_1"."NEUR_1_25" ELSE 0.0 END AS "NEUR_1_25", CASE WHEN ("HL_BA_1"."NEUR_1_26" >= 0.0) THEN "HL_BA_1"."NEUR_1_26" ELSE 0.0 END AS "NEUR_1_26", CASE WHEN ("HL_BA_1"."NEUR_1_27" >= 0.0) THEN "HL_BA_1"."NEUR_1_27" ELSE 0.0 END AS "NEUR_1_27", CASE WHEN ("HL_BA_1"."NEUR_1_28" >= 0.0) THEN "HL_BA_1"."NEUR_1_28" ELSE 0.0 END AS "NEUR_1_28", CASE WHEN ("HL_BA_1"."NEUR_1_29" >= 0.0) THEN "HL_BA_1"."NEUR_1_29" ELSE 0.0 END AS "NEUR_1_29", CASE WHEN ("HL_BA_1"."NEUR_1_30" >= 0.0) THEN "HL_BA_1"."NEUR_1_30" ELSE 0.0 END AS "NEUR_1_30", CASE WHEN ("HL_BA_1"."NEUR_1_31" >= 0.0) THEN "HL_BA_1"."NEUR_1_31" ELSE 0.0 END AS "NEUR_1_31", CASE WHEN ("HL_BA_1"."NEUR_1_32" >= 0.0) THEN "HL_BA_1"."NEUR_1_32" ELSE 0.0 END AS "NEUR_1_32", CASE WHEN ("HL_BA_1"."NEUR_1_33" >= 0.0) THEN "HL_BA_1"."NEUR_1_33" ELSE 0.0 END AS "NEUR_1_33", CASE WHEN ("HL_BA_1"."NEUR_1_34" >= 0.0) THEN "HL_BA_1"."NEUR_1_34" ELSE 0.0 END AS "NEUR_1_34", CASE WHEN ("HL_BA_1"."NEUR_1_35" >= 0.0) THEN "HL_BA_1"."NEUR_1_35" ELSE 0.0 END AS "NEUR_1_35", CASE WHEN ("HL_BA_1"."NEUR_1_36" >= 0.0) THEN "HL_BA_1"."NEUR_1_36" ELSE 0.0 END AS "NEUR_1_36", CASE WHEN ("HL_BA_1"."NEUR_1_37" >= 0.0) THEN "HL_BA_1"."NEUR_1_37" ELSE 0.0 END AS "NEUR_1_37", CASE WHEN ("HL_BA_1"."NEUR_1_38" >= 0.0) THEN "HL_BA_1"."NEUR_1_38" ELSE 0.0 END AS "NEUR_1_38", CASE WHEN ("HL_BA_1"."NEUR_1_39" >= 0.0) THEN "HL_BA_1"."NEUR_1_39" ELSE 0.0 END AS "NEUR_1_39", CASE WHEN ("HL_BA_1"."NEUR_1_40" >= 0.0) THEN "HL_BA_1"."NEUR_1_40" ELSE 0.0 END AS "NEUR_1_40", CASE WHEN ("HL_BA_1"."NEUR_1_41" >= 0.0) THEN "HL_BA_1"."NEUR_1_41" ELSE 0.0 END AS "NEUR_1_41", CASE WHEN ("HL_BA_1"."NEUR_1_42" >= 0.0) THEN "HL_BA_1"."NEUR_1_42" ELSE 0.0 END AS "NEUR_1_42", CASE WHEN ("HL_BA_1"."NEUR_1_43" >= 0.0) THEN "HL_BA_1"."NEUR_1_43" ELSE 0.0 END AS "NEUR_1_43", CASE WHEN ("HL_BA_1"."NEUR_1_44" >= 0.0) THEN "HL_BA_1"."NEUR_1_44" ELSE 0.0 END AS "NEUR_1_44", CASE WHEN ("HL_BA_1"."NEUR_1_45" >= 0.0) THEN "HL_BA_1"."NEUR_1_45" ELSE 0.0 END AS "NEUR_1_45", CASE WHEN ("HL_BA_1"."NEUR_1_46" >= 0.0) THEN "HL_BA_1"."NEUR_1_46" ELSE 0.0 END AS "NEUR_1_46", CASE WHEN ("HL_BA_1"."NEUR_1_47" >= 0.0) THEN "HL_BA_1"."NEUR_1_47" ELSE 0.0 END AS "NEUR_1_47", CASE WHEN ("HL_BA_1"."NEUR_1_48" >= 0.0) THEN "HL_BA_1"."NEUR_1_48" ELSE 0.0 END AS "NEUR_1_48", CASE WHEN ("HL_BA_1"."NEUR_1_49" >= 0.0) THEN "HL_BA_1"."NEUR_1_49" ELSE 0.0 END AS "NEUR_1_49", CASE WHEN ("HL_BA_1"."NEUR_1_50" >= 0.0) THEN "HL_BA_1"."NEUR_1_50" ELSE 0.0 END AS "NEUR_1_50", CASE WHEN ("HL_BA_1"."NEUR_1_51" >= 0.0) THEN "HL_BA_1"."NEUR_1_51" ELSE 0.0 END AS "NEUR_1_51", CASE WHEN ("HL_BA_1"."NEUR_1_52" >= 0.0) THEN "HL_BA_1"."NEUR_1_52" ELSE 0.0 END AS "NEUR_1_52", CASE WHEN ("HL_BA_1"."NEUR_1_53" >= 0.0) THEN "HL_BA_1"."NEUR_1_53" ELSE 0.0 END AS "NEUR_1_53", CASE WHEN ("HL_BA_1"."NEUR_1_54" >= 0.0) THEN "HL_BA_1"."NEUR_1_54" ELSE 0.0 END AS "NEUR_1_54", CASE WHEN ("HL_BA_1"."NEUR_1_55" >= 0.0) THEN "HL_BA_1"."NEUR_1_55" ELSE 0.0 END AS "NEUR_1_55", CASE WHEN ("HL_BA_1"."NEUR_1_56" >= 0.0) THEN "HL_BA_1"."NEUR_1_56" ELSE 0.0 END AS "NEUR_1_56", CASE WHEN ("HL_BA_1"."NEUR_1_57" >= 0.0) THEN "HL_BA_1"."NEUR_1_57" ELSE 0.0 END AS "NEUR_1_57", CASE WHEN ("HL_BA_1"."NEUR_1_58" >= 0.0) THEN "HL_BA_1"."NEUR_1_58" ELSE 0.0 END AS "NEUR_1_58", CASE WHEN ("HL_BA_1"."NEUR_1_59" >= 0.0) THEN "HL_BA_1"."NEUR_1_59" ELSE 0.0 END AS "NEUR_1_59", CASE WHEN ("HL_BA_1"."NEUR_1_60" >= 0.0) THEN "HL_BA_1"."NEUR_1_60" ELSE 0.0 END AS "NEUR_1_60", CASE WHEN ("HL_BA_1"."NEUR_1_61" >= 0.0) THEN "HL_BA_1"."NEUR_1_61" ELSE 0.0 END AS "NEUR_1_61", CASE WHEN ("HL_BA_1"."NEUR_1_62" >= 0.0) THEN "HL_BA_1"."NEUR_1_62" ELSE 0.0 END AS "NEUR_1_62", CASE WHEN ("HL_BA_1"."NEUR_1_63" >= 0.0) THEN "HL_BA_1"."NEUR_1_63" ELSE 0.0 END AS "NEUR_1_63", CASE WHEN ("HL_BA_1"."NEUR_1_64" >= 0.0) THEN "HL_BA_1"."NEUR_1_64" ELSE 0.0 END AS "NEUR_1_64", CASE WHEN ("HL_BA_1"."NEUR_1_65" >= 0.0) THEN "HL_BA_1"."NEUR_1_65" ELSE 0.0 END AS "NEUR_1_65", CASE WHEN ("HL_BA_1"."NEUR_1_66" >= 0.0) THEN "HL_BA_1"."NEUR_1_66" ELSE 0.0 END AS "NEUR_1_66", CASE WHEN ("HL_BA_1"."NEUR_1_67" >= 0.0) THEN "HL_BA_1"."NEUR_1_67" ELSE 0.0 END AS "NEUR_1_67", CASE WHEN ("HL_BA_1"."NEUR_1_68" >= 0.0) THEN "HL_BA_1"."NEUR_1_68" ELSE 0.0 END AS "NEUR_1_68", CASE WHEN ("HL_BA_1"."NEUR_1_69" >= 0.0) THEN "HL_BA_1"."NEUR_1_69" ELSE 0.0 END AS "NEUR_1_69", CASE WHEN ("HL_BA_1"."NEUR_1_70" >= 0.0) THEN "HL_BA_1"."NEUR_1_70" ELSE 0.0 END AS "NEUR_1_70", CASE WHEN ("HL_BA_1"."NEUR_1_71" >= 0.0) THEN "HL_BA_1"."NEUR_1_71" ELSE 0.0 END AS "NEUR_1_71", CASE WHEN ("HL_BA_1"."NEUR_1_72" >= 0.0) THEN "HL_BA_1"."NEUR_1_72" ELSE 0.0 END AS "NEUR_1_72", CASE WHEN ("HL_BA_1"."NEUR_1_73" >= 0.0) THEN "HL_BA_1"."NEUR_1_73" ELSE 0.0 END AS "NEUR_1_73", CASE WHEN ("HL_BA_1"."NEUR_1_74" >= 0.0) THEN "HL_BA_1"."NEUR_1_74" ELSE 0.0 END AS "NEUR_1_74", CASE WHEN ("HL_BA_1"."NEUR_1_75" >= 0.0) THEN "HL_BA_1"."NEUR_1_75" ELSE 0.0 END AS "NEUR_1_75", CASE WHEN ("HL_BA_1"."NEUR_1_76" >= 0.0) THEN "HL_BA_1"."NEUR_1_76" ELSE 0.0 END AS "NEUR_1_76", CASE WHEN ("HL_BA_1"."NEUR_1_77" >= 0.0) THEN "HL_BA_1"."NEUR_1_77" ELSE 0.0 END AS "NEUR_1_77", CASE WHEN ("HL_BA_1"."NEUR_1_78" >= 0.0) THEN "HL_BA_1"."NEUR_1_78" ELSE 0.0 END AS "NEUR_1_78", CASE WHEN ("HL_BA_1"."NEUR_1_79" >= 0.0) THEN "HL_BA_1"."NEUR_1_79" ELSE 0.0 END AS "NEUR_1_79", CASE WHEN ("HL_BA_1"."NEUR_1_80" >= 0.0) THEN "HL_BA_1"."NEUR_1_80" ELSE 0.0 END AS "NEUR_1_80", CASE WHEN ("HL_BA_1"."NEUR_1_81" >= 0.0) THEN "HL_BA_1"."NEUR_1_81" ELSE 0.0 END AS "NEUR_1_81", CASE WHEN ("HL_BA_1"."NEUR_1_82" >= 0.0) THEN "HL_BA_1"."NEUR_1_82" ELSE 0.0 END AS "NEUR_1_82", CASE WHEN ("HL_BA_1"."NEUR_1_83" >= 0.0) THEN "HL_BA_1"."NEUR_1_83" ELSE 0.0 END AS "NEUR_1_83", CASE WHEN ("HL_BA_1"."NEUR_1_84" >= 0.0) THEN "HL_BA_1"."NEUR_1_84" ELSE 0.0 END AS "NEUR_1_84", CASE WHEN ("HL_BA_1"."NEUR_1_85" >= 0.0) THEN "HL_BA_1"."NEUR_1_85" ELSE 0.0 END AS "NEUR_1_85", CASE WHEN ("HL_BA_1"."NEUR_1_86" >= 0.0) THEN "HL_BA_1"."NEUR_1_86" ELSE 0.0 END AS "NEUR_1_86", CASE WHEN ("HL_BA_1"."NEUR_1_87" >= 0.0) THEN "HL_BA_1"."NEUR_1_87" ELSE 0.0 END AS "NEUR_1_87", CASE WHEN ("HL_BA_1"."NEUR_1_88" >= 0.0) THEN "HL_BA_1"."NEUR_1_88" ELSE 0.0 END AS "NEUR_1_88", CASE WHEN ("HL_BA_1"."NEUR_1_89" >= 0.0) THEN "HL_BA_1"."NEUR_1_89" ELSE 0.0 END AS "NEUR_1_89", CASE WHEN ("HL_BA_1"."NEUR_1_90" >= 0.0) THEN "HL_BA_1"."NEUR_1_90" ELSE 0.0 END AS "NEUR_1_90", CASE WHEN ("HL_BA_1"."NEUR_1_91" >= 0.0) THEN "HL_BA_1"."NEUR_1_91" ELSE 0.0 END AS "NEUR_1_91", CASE WHEN ("HL_BA_1"."NEUR_1_92" >= 0.0) THEN "HL_BA_1"."NEUR_1_92" ELSE 0.0 END AS "NEUR_1_92", CASE WHEN ("HL_BA_1"."NEUR_1_93" >= 0.0) THEN "HL_BA_1"."NEUR_1_93" ELSE 0.0 END AS "NEUR_1_93", CASE WHEN ("HL_BA_1"."NEUR_1_94" >= 0.0) THEN "HL_BA_1"."NEUR_1_94" ELSE 0.0 END AS "NEUR_1_94", CASE WHEN ("HL_BA_1"."NEUR_1_95" >= 0.0) THEN "HL_BA_1"."NEUR_1_95" ELSE 0.0 END AS "NEUR_1_95", CASE WHEN ("HL_BA_1"."NEUR_1_96" >= 0.0) THEN "HL_BA_1"."NEUR_1_96" ELSE 0.0 END AS "NEUR_1_96", CASE WHEN ("HL_BA_1"."NEUR_1_97" >= 0.0) THEN "HL_BA_1"."NEUR_1_97" ELSE 0.0 END AS "NEUR_1_97", CASE WHEN ("HL_BA_1"."NEUR_1_98" >= 0.0) THEN "HL_BA_1"."NEUR_1_98" ELSE 0.0 END AS "NEUR_1_98", CASE WHEN ("HL_BA_1"."NEUR_1_99" >= 0.0) THEN "HL_BA_1"."NEUR_1_99" ELSE 0.0 END AS "NEUR_1_99", CASE WHEN ("HL_BA_1"."NEUR_1_100" >= 0.0) THEN "HL_BA_1"."NEUR_1_100" ELSE 0.0 END AS "NEUR_1_100" 
FROM "HL_BA_1"), 
"OL_BA" AS 
(SELECT "HL_1"."KEY" AS "KEY", -0.0762409526104 * "HL_1"."NEUR_1_1" + 0.0244426308345 * "HL_1"."NEUR_1_2" + 0.292669636145 * "HL_1"."NEUR_1_3" + 0.081605693734 * "HL_1"."NEUR_1_4" + 0.0262245030953 * "HL_1"."NEUR_1_5" + 0.24166961701 * "HL_1"."NEUR_1_6" + 0.299625434627 * "HL_1"."NEUR_1_7" + -0.03909338743 * "HL_1"."NEUR_1_8" + -0.332881748643 * "HL_1"."NEUR_1_9" + 0.322243202601 * "HL_1"."NEUR_1_10" + -0.331919373481 * "HL_1"."NEUR_1_11" + 0.0132296754978 * "HL_1"."NEUR_1_12" + 0.00762724662549 * "HL_1"."NEUR_1_13" + 0.334794015076 * "HL_1"."NEUR_1_14" + 0.00343276857405 * "HL_1"."NEUR_1_15" + -0.103346591105 * "HL_1"."NEUR_1_16" + 3.55362552164e-05 * "HL_1"."NEUR_1_17" + -0.202422378824 * "HL_1"."NEUR_1_18" + 0.15367644442 * "HL_1"."NEUR_1_19" + -0.105322477691 * "HL_1"."NEUR_1_20" + 0.0979901933808 * "HL_1"."NEUR_1_21" + 0.165864903476 * "HL_1"."NEUR_1_22" + 0.0525937834296 * "HL_1"."NEUR_1_23" + 0.233232689095 * "HL_1"."NEUR_1_24" + -0.0493344019961 * "HL_1"."NEUR_1_25" + -0.187730029096 * "HL_1"."NEUR_1_26" + -0.000790560346583 * "HL_1"."NEUR_1_27" + 0.198400972814 * "HL_1"."NEUR_1_28" + 0.0831952270824 * "HL_1"."NEUR_1_29" + -0.340826134797 * "HL_1"."NEUR_1_30" + 0.0261738987453 * "HL_1"."NEUR_1_31" + 0.0692598995246 * "HL_1"."NEUR_1_32" + -0.00734208121868 * "HL_1"."NEUR_1_33" + 0.102001812914 * "HL_1"."NEUR_1_34" + 0.0138099782882 * "HL_1"."NEUR_1_35" + 0.117537893404 * "HL_1"."NEUR_1_36" + 0.136973126412 * "HL_1"."NEUR_1_37" + 0.0157303736912 * "HL_1"."NEUR_1_38" + -0.145103334939 * "HL_1"."NEUR_1_39" + 0.0227750256656 * "HL_1"."NEUR_1_40" + -0.182910757846 * "HL_1"."NEUR_1_41" + 0.0495819704328 * "HL_1"."NEUR_1_42" + 0.213362238278 * "HL_1"."NEUR_1_43" + -0.0577371920877 * "HL_1"."NEUR_1_44" + -0.107990176542 * "HL_1"."NEUR_1_45" + 0.331510544775 * "HL_1"."NEUR_1_46" + 0.00261990421017 * "HL_1"."NEUR_1_47" + 0.400326058363 * "HL_1"."NEUR_1_48" + -0.0485842653076 * "HL_1"."NEUR_1_49" + 0.155789798772 * "HL_1"."NEUR_1_50" + -5.55156808956e-06 * "HL_1"."NEUR_1_51" + -0.134127818954 * "HL_1"."NEUR_1_52" + -0.0973363829179 * "HL_1"."NEUR_1_53" + 0.102164169916 * "HL_1"."NEUR_1_54" + -0.377354138113 * "HL_1"."NEUR_1_55" + -0.00341599787112 * "HL_1"."NEUR_1_56" + 0.194675013068 * "HL_1"."NEUR_1_57" + -0.00137274908161 * "HL_1"."NEUR_1_58" + 0.0591471828215 * "HL_1"."NEUR_1_59" + 0.000354149283723 * "HL_1"."NEUR_1_60" + -0.00297828366969 * "HL_1"."NEUR_1_61" + 0.0255543259508 * "HL_1"."NEUR_1_62" + 0.21584957977 * "HL_1"."NEUR_1_63" + -0.288650592497 * "HL_1"."NEUR_1_64" + -0.104526602746 * "HL_1"."NEUR_1_65" + -0.0412276066468 * "HL_1"."NEUR_1_66" + -0.0893549366063 * "HL_1"."NEUR_1_67" + -0.0355950886945 * "HL_1"."NEUR_1_68" + -0.0437836141601 * "HL_1"."NEUR_1_69" + -0.0853332242161 * "HL_1"."NEUR_1_70" + -0.244354194545 * "HL_1"."NEUR_1_71" + -0.0474479583987 * "HL_1"."NEUR_1_72" + -0.00576101837632 * "HL_1"."NEUR_1_73" + 0.0212125733911 * "HL_1"."NEUR_1_74" + -0.150852016166 * "HL_1"."NEUR_1_75" + 0.066209840177 * "HL_1"."NEUR_1_76" + 0.0670931871061 * "HL_1"."NEUR_1_77" + -0.138204801222 * "HL_1"."NEUR_1_78" + 0.131730195002 * "HL_1"."NEUR_1_79" + 0.000157266321021 * "HL_1"."NEUR_1_80" + -0.0923007496811 * "HL_1"."NEUR_1_81" + -0.255826097029 * "HL_1"."NEUR_1_82" + 0.0673825642104 * "HL_1"."NEUR_1_83" + 2.50240912967e-05 * "HL_1"."NEUR_1_84" + 0.315240892405 * "HL_1"."NEUR_1_85" + 0.0658868981417 * "HL_1"."NEUR_1_86" + -0.229882500009 * "HL_1"."NEUR_1_87" + -0.000452182876906 * "HL_1"."NEUR_1_88" + 0.207565993307 * "HL_1"."NEUR_1_89" + -0.14565517322 * "HL_1"."NEUR_1_90" + 0.0129997209218 * "HL_1"."NEUR_1_91" + -0.0519928404925 * "HL_1"."NEUR_1_92" + -0.000588544237025 * "HL_1"."NEUR_1_93" + 0.266757903563 * "HL_1"."NEUR_1_94" + 0.277150990946 * "HL_1"."NEUR_1_95" + -0.0549917227531 * "HL_1"."NEUR_1_96" + -0.00173093409624 * "HL_1"."NEUR_1_97" + -0.029466778433 * "HL_1"."NEUR_1_98" + 0.143373182736 * "HL_1"."NEUR_1_99" + -0.0305642659165 * "HL_1"."NEUR_1_100" + -0.15836490544 AS "NEUR_2_1", -0.206623606701 * "HL_1"."NEUR_1_1" + -0.0593684760066 * "HL_1"."NEUR_1_2" + -0.396918301983 * "HL_1"."NEUR_1_3" + -0.333714956621 * "HL_1"."NEUR_1_4" + 0.0138392591836 * "HL_1"."NEUR_1_5" + -0.307689786518 * "HL_1"."NEUR_1_6" + 0.369950267026 * "HL_1"."NEUR_1_7" + -0.166812467029 * "HL_1"."NEUR_1_8" + -0.035361336919 * "HL_1"."NEUR_1_9" + -0.163806021123 * "HL_1"."NEUR_1_10" + -0.0696454565052 * "HL_1"."NEUR_1_11" + -0.114774888979 * "HL_1"."NEUR_1_12" + 0.133508294677 * "HL_1"."NEUR_1_13" + -0.401689842658 * "HL_1"."NEUR_1_14" + 0.00255369079538 * "HL_1"."NEUR_1_15" + 0.0168001375544 * "HL_1"."NEUR_1_16" + -0.0113990687466 * "HL_1"."NEUR_1_17" + -0.0264365967844 * "HL_1"."NEUR_1_18" + -0.183992895339 * "HL_1"."NEUR_1_19" + 0.0746161661452 * "HL_1"."NEUR_1_20" + -0.14193090362 * "HL_1"."NEUR_1_21" + 0.0430656271607 * "HL_1"."NEUR_1_22" + 0.166114519322 * "HL_1"."NEUR_1_23" + 0.238020846663 * "HL_1"."NEUR_1_24" + -0.00435802599488 * "HL_1"."NEUR_1_25" + -0.149455224347 * "HL_1"."NEUR_1_26" + 0.0762103293365 * "HL_1"."NEUR_1_27" + 0.0462266654123 * "HL_1"."NEUR_1_28" + -0.0841857228459 * "HL_1"."NEUR_1_29" + -0.385371591827 * "HL_1"."NEUR_1_30" + 0.0728390831481 * "HL_1"."NEUR_1_31" + -0.0846477213654 * "HL_1"."NEUR_1_32" + -0.000223586869328 * "HL_1"."NEUR_1_33" + -0.049368719108 * "HL_1"."NEUR_1_34" + -0.0863837187962 * "HL_1"."NEUR_1_35" + -0.0772154370358 * "HL_1"."NEUR_1_36" + -0.237257799841 * "HL_1"."NEUR_1_37" + 0.282196775637 * "HL_1"."NEUR_1_38" + -0.0484066845165 * "HL_1"."NEUR_1_39" + -0.00242825312694 * "HL_1"."NEUR_1_40" + 0.0826000670079 * "HL_1"."NEUR_1_41" + 0.0994174687626 * "HL_1"."NEUR_1_42" + 0.159730367558 * "HL_1"."NEUR_1_43" + -0.0865882258939 * "HL_1"."NEUR_1_44" + 0.00517928438305 * "HL_1"."NEUR_1_45" + -0.0680223690227 * "HL_1"."NEUR_1_46" + 0.0274933900036 * "HL_1"."NEUR_1_47" + 0.232830813301 * "HL_1"."NEUR_1_48" + -0.172322506272 * "HL_1"."NEUR_1_49" + 0.163981512861 * "HL_1"."NEUR_1_50" + 0.00205960935724 * "HL_1"."NEUR_1_51" + 0.214112243229 * "HL_1"."NEUR_1_52" + -0.148949962811 * "HL_1"."NEUR_1_53" + -0.00178322085045 * "HL_1"."NEUR_1_54" + -0.240751712605 * "HL_1"."NEUR_1_55" + 0.0122727211873 * "HL_1"."NEUR_1_56" + 0.115000905641 * "HL_1"."NEUR_1_57" + 0.0047123417324 * "HL_1"."NEUR_1_58" + 0.0947861029491 * "HL_1"."NEUR_1_59" + -0.069941262191 * "HL_1"."NEUR_1_60" + -0.013565436011 * "HL_1"."NEUR_1_61" + -0.0701750352155 * "HL_1"."NEUR_1_62" + -0.107600093659 * "HL_1"."NEUR_1_63" + 0.161882417229 * "HL_1"."NEUR_1_64" + -0.227323983007 * "HL_1"."NEUR_1_65" + -0.149816149274 * "HL_1"."NEUR_1_66" + 0.371847438412 * "HL_1"."NEUR_1_67" + -0.0802471238024 * "HL_1"."NEUR_1_68" + -0.169613218219 * "HL_1"."NEUR_1_69" + -0.0855274370508 * "HL_1"."NEUR_1_70" + 0.0474319639242 * "HL_1"."NEUR_1_71" + -0.186876406758 * "HL_1"."NEUR_1_72" + 0.0684049589121 * "HL_1"."NEUR_1_73" + 0.144356701646 * "HL_1"."NEUR_1_74" + 0.25626691025 * "HL_1"."NEUR_1_75" + 0.0157119053781 * "HL_1"."NEUR_1_76" + -0.207321858728 * "HL_1"."NEUR_1_77" + -0.102923386456 * "HL_1"."NEUR_1_78" + 0.137060858325 * "HL_1"."NEUR_1_79" + -0.0676239907192 * "HL_1"."NEUR_1_80" + 0.0987353413628 * "HL_1"."NEUR_1_81" + 0.0624769780968 * "HL_1"."NEUR_1_82" + 0.021566717637 * "HL_1"."NEUR_1_83" + -0.0174094763012 * "HL_1"."NEUR_1_84" + -0.00457469558117 * "HL_1"."NEUR_1_85" + -0.00616370563442 * "HL_1"."NEUR_1_86" + -0.0932797406894 * "HL_1"."NEUR_1_87" + -0.000851685500444 * "HL_1"."NEUR_1_88" + 0.226636155274 * "HL_1"."NEUR_1_89" + 0.26034603633 * "HL_1"."NEUR_1_90" + -0.0298828207897 * "HL_1"."NEUR_1_91" + 0.0814026498693 * "HL_1"."NEUR_1_92" + -1.83408991904e-05 * "HL_1"."NEUR_1_93" + -0.16616766628 * "HL_1"."NEUR_1_94" + 0.206854887418 * "HL_1"."NEUR_1_95" + -0.0166682205696 * "HL_1"."NEUR_1_96" + -0.0709077879427 * "HL_1"."NEUR_1_97" + 0.00311654639738 * "HL_1"."NEUR_1_98" + 0.276153905183 * "HL_1"."NEUR_1_99" + -0.0285174807438 * "HL_1"."NEUR_1_100" + 0.129631498628 AS "NEUR_2_2", 0.0966628109397 * "HL_1"."NEUR_1_1" + 0.244468302115 * "HL_1"."NEUR_1_2" + -0.200960180306 * "HL_1"."NEUR_1_3" + -0.146578344501 * "HL_1"."NEUR_1_4" + 0.00552672083168 * "HL_1"."NEUR_1_5" + -0.188470413627 * "HL_1"."NEUR_1_6" + -0.180994474125 * "HL_1"."NEUR_1_7" + 0.03259199325 * "HL_1"."NEUR_1_8" + 0.0397545896343 * "HL_1"."NEUR_1_9" + -0.123159321646 * "HL_1"."NEUR_1_10" + 0.118184774682 * "HL_1"."NEUR_1_11" + -0.349598049096 * "HL_1"."NEUR_1_12" + 0.0784467869218 * "HL_1"."NEUR_1_13" + -0.00068148645617 * "HL_1"."NEUR_1_14" + 0.0958011381172 * "HL_1"."NEUR_1_15" + 0.0458893191378 * "HL_1"."NEUR_1_16" + 0.0393421481125 * "HL_1"."NEUR_1_17" + 0.0132410024578 * "HL_1"."NEUR_1_18" + -0.161333462357 * "HL_1"."NEUR_1_19" + 0.19869193788 * "HL_1"."NEUR_1_20" + 0.193643375912 * "HL_1"."NEUR_1_21" + 0.178551902863 * "HL_1"."NEUR_1_22" + 0.131031494735 * "HL_1"."NEUR_1_23" + -0.251359318545 * "HL_1"."NEUR_1_24" + 0.0919186119688 * "HL_1"."NEUR_1_25" + 0.219041262604 * "HL_1"."NEUR_1_26" + -0.0537913190651 * "HL_1"."NEUR_1_27" + -0.312090751531 * "HL_1"."NEUR_1_28" + -0.246712339955 * "HL_1"."NEUR_1_29" + 0.360253943286 * "HL_1"."NEUR_1_30" + 0.0124730307242 * "HL_1"."NEUR_1_31" + 0.197568457196 * "HL_1"."NEUR_1_32" + -0.00545872302211 * "HL_1"."NEUR_1_33" + -0.0123775352201 * "HL_1"."NEUR_1_34" + 0.00402389774177 * "HL_1"."NEUR_1_35" + -0.203047474835 * "HL_1"."NEUR_1_36" + -0.111653030135 * "HL_1"."NEUR_1_37" + -0.268773849577 * "HL_1"."NEUR_1_38" + 0.00213815352847 * "HL_1"."NEUR_1_39" + 0.227928325249 * "HL_1"."NEUR_1_40" + 0.138300057102 * "HL_1"."NEUR_1_41" + 0.069894261407 * "HL_1"."NEUR_1_42" + -0.152893645771 * "HL_1"."NEUR_1_43" + -0.0306342192817 * "HL_1"."NEUR_1_44" + 0.163989797343 * "HL_1"."NEUR_1_45" + -0.32402195483 * "HL_1"."NEUR_1_46" + 0.0564174153696 * "HL_1"."NEUR_1_47" + -0.293394720506 * "HL_1"."NEUR_1_48" + 0.0796312140199 * "HL_1"."NEUR_1_49" + -0.225444110091 * "HL_1"."NEUR_1_50" + -0.0307213854612 * "HL_1"."NEUR_1_51" + -0.249059344764 * "HL_1"."NEUR_1_52" + -0.00828883497713 * "HL_1"."NEUR_1_53" + 0.0592739392135 * "HL_1"."NEUR_1_54" + 0.139358224486 * "HL_1"."NEUR_1_55" + -0.00974260250036 * "HL_1"."NEUR_1_56" + -0.126134154955 * "HL_1"."NEUR_1_57" + -0.0839484106852 * "HL_1"."NEUR_1_58" + 0.161916427314 * "HL_1"."NEUR_1_59" + -0.0030038623913 * "HL_1"."NEUR_1_60" + -0.0984832203105 * "HL_1"."NEUR_1_61" + 0.00393947092709 * "HL_1"."NEUR_1_62" + 0.162074318557 * "HL_1"."NEUR_1_63" + -0.159984346611 * "HL_1"."NEUR_1_64" + 0.185391390578 * "HL_1"."NEUR_1_65" + -0.240346545847 * "HL_1"."NEUR_1_66" + -0.177450823359 * "HL_1"."NEUR_1_67" + -0.0785760123645 * "HL_1"."NEUR_1_68" + -0.194113225984 * "HL_1"."NEUR_1_69" + 0.0590018742703 * "HL_1"."NEUR_1_70" + 0.153251793759 * "HL_1"."NEUR_1_71" + -0.102686166632 * "HL_1"."NEUR_1_72" + -0.119609049315 * "HL_1"."NEUR_1_73" + 0.303277487323 * "HL_1"."NEUR_1_74" + -0.139014859183 * "HL_1"."NEUR_1_75" + 0.104927787584 * "HL_1"."NEUR_1_76" + 0.143387206482 * "HL_1"."NEUR_1_77" + -0.0519834500213 * "HL_1"."NEUR_1_78" + -0.203519702215 * "HL_1"."NEUR_1_79" + -0.0539111130699 * "HL_1"."NEUR_1_80" + -0.108239167111 * "HL_1"."NEUR_1_81" + -0.140006306233 * "HL_1"."NEUR_1_82" + 0.0971325333614 * "HL_1"."NEUR_1_83" + 0.000662290146768 * "HL_1"."NEUR_1_84" + -0.186169927575 * "HL_1"."NEUR_1_85" + -0.109176475664 * "HL_1"."NEUR_1_86" + 0.251737724748 * "HL_1"."NEUR_1_87" + -0.0110591178999 * "HL_1"."NEUR_1_88" + 0.219822381847 * "HL_1"."NEUR_1_89" + 0.153235820092 * "HL_1"."NEUR_1_90" + -0.0373291341862 * "HL_1"."NEUR_1_91" + -0.0186788461847 * "HL_1"."NEUR_1_92" + 0.0358731985361 * "HL_1"."NEUR_1_93" + -0.121518483272 * "HL_1"."NEUR_1_94" + -0.299873000527 * "HL_1"."NEUR_1_95" + -0.0820667574017 * "HL_1"."NEUR_1_96" + 0.00137170568618 * "HL_1"."NEUR_1_97" + -0.0675754483976 * "HL_1"."NEUR_1_98" + -0.0495942779279 * "HL_1"."NEUR_1_99" + -8.02532675614e-05 * "HL_1"."NEUR_1_100" + -0.110562372751 AS "NEUR_2_3" 
FROM "HL_1"), 
"OL" AS 
(SELECT "OL_BA"."KEY" AS "KEY", "OL_BA"."NEUR_2_1" AS "NEUR_2_1", "OL_BA"."NEUR_2_2" AS "NEUR_2_2", "OL_BA"."NEUR_2_3" AS "NEUR_2_3" 
FROM "OL_BA"), 
orig_cte AS 
(SELECT "OL"."KEY" AS "KEY", CAST(NULL AS FLOAT(53)) AS "Score_0", CAST(NULL AS FLOAT(53)) AS "Score_1", CAST(NULL AS FLOAT(53)) AS "Score_2", "OL"."NEUR_2_1" AS "Proba_0", "OL"."NEUR_2_2" AS "Proba_1", "OL"."NEUR_2_3" AS "Proba_2", CAST(NULL AS FLOAT(53)) AS "LogProba_0", CAST(NULL AS FLOAT(53)) AS "LogProba_1", CAST(NULL AS FLOAT(53)) AS "LogProba_2", CAST(NULL AS FLOAT(53)) AS "Decision" 
FROM "OL"), 
score_class_union AS 
(SELECT scu."KEY" AS "KEY", scu.class AS class, scu."LogProba" AS "LogProba", scu."Proba" AS "Proba", scu."Score" AS "Score" 
FROM (SELECT orig_cte."KEY" AS "KEY", 0 AS class, orig_cte."LogProba_0" AS "LogProba", orig_cte."Proba_0" AS "Proba", orig_cte."Score_0" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 1 AS class, orig_cte."LogProba_1" AS "LogProba", orig_cte."Proba_1" AS "Proba", orig_cte."Score_1" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 2 AS class, orig_cte."LogProba_2" AS "LogProba", orig_cte."Proba_2" AS "Proba", orig_cte."Score_2" AS "Score" 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte."KEY" AS "KEY", orig_cte."Score_0" AS "Score_0", orig_cte."Score_1" AS "Score_1", orig_cte."Score_2" AS "Score_2", orig_cte."Proba_0" AS "Proba_0", orig_cte."Proba_1" AS "Proba_1", orig_cte."Proba_2" AS "Proba_2", orig_cte."LogProba_0" AS "LogProba_0", orig_cte."LogProba_1" AS "LogProba_1", orig_cte."LogProba_2" AS "LogProba_2", orig_cte."Decision" AS "Decision", (SELECT max(score_class_union."LogProba") AS max_1 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_LogProba", (SELECT max(score_class_union."Proba") AS max_2 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_Proba", (SELECT max(score_class_union."Score") AS max_3 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_Score" 
FROM orig_cte), 
score_soft_max_comp AS 
(SELECT score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Score_2" AS "Score_2", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."Proba_2" AS "Proba_2", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."LogProba_2" AS "LogProba_2", score_max."Decision" AS "Decision", score_max."max_LogProba" AS "max_LogProba", score_max."max_Proba" AS "max_Proba", score_max."max_Score" AS "max_Score", exp(score_max."Score_0" - score_max."max_Score") AS "exp_delta_Score_0", exp(score_max."Score_1" - score_max."max_Score") AS "exp_delta_Score_1", exp(score_max."Score_2" - score_max."max_Score") AS "exp_delta_Score_2" 
FROM score_max), 
score_class_union_soft AS 
(SELECT soft_scu."KEY" AS "KEY", soft_scu.class AS class, soft_scu."LogProba" AS "LogProba", soft_scu."Proba" AS "Proba", soft_scu."Score" AS "Score", soft_scu."exp_delta_Score" AS "exp_delta_Score" 
FROM (SELECT score_soft_max_comp."KEY" AS "KEY", 0 AS class, score_soft_max_comp."LogProba_0" AS "LogProba", score_soft_max_comp."Proba_0" AS "Proba", score_soft_max_comp."Score_0" AS "Score", score_soft_max_comp."exp_delta_Score_0" AS "exp_delta_Score" 
FROM score_soft_max_comp UNION ALL SELECT score_soft_max_comp."KEY" AS "KEY", 1 AS class, score_soft_max_comp."LogProba_1" AS "LogProba", score_soft_max_comp."Proba_1" AS "Proba", score_soft_max_comp."Score_1" AS "Score", score_soft_max_comp."exp_delta_Score_1" AS "exp_delta_Score" 
FROM score_soft_max_comp UNION ALL SELECT score_soft_max_comp."KEY" AS "KEY", 2 AS class, score_soft_max_comp."LogProba_2" AS "LogProba", score_soft_max_comp."Proba_2" AS "Proba", score_soft_max_comp."Score_2" AS "Score", score_soft_max_comp."exp_delta_Score_2" AS "exp_delta_Score" 
FROM score_soft_max_comp) AS soft_scu), 
score_soft_max AS 
(SELECT score_soft_max_comp."KEY" AS "KEY", score_soft_max_comp."Score_0" AS "Score_0", score_soft_max_comp."Score_1" AS "Score_1", score_soft_max_comp."Score_2" AS "Score_2", score_soft_max_comp."Proba_0" AS "Proba_0", score_soft_max_comp."Proba_1" AS "Proba_1", score_soft_max_comp."Proba_2" AS "Proba_2", score_soft_max_comp."LogProba_0" AS "LogProba_0", score_soft_max_comp."LogProba_1" AS "LogProba_1", score_soft_max_comp."LogProba_2" AS "LogProba_2", score_soft_max_comp."Decision" AS "Decision", score_soft_max_comp."max_LogProba" AS "max_LogProba", score_soft_max_comp."max_Proba" AS "max_Proba", score_soft_max_comp."max_Score" AS "max_Score", score_soft_max_comp."exp_delta_Score_0" AS "exp_delta_Score_0", score_soft_max_comp."exp_delta_Score_1" AS "exp_delta_Score_1", score_soft_max_comp."exp_delta_Score_2" AS "exp_delta_Score_2", (SELECT sum(score_class_union_soft."exp_delta_Score") AS sum_1 
FROM score_class_union_soft 
WHERE score_soft_max_comp."KEY" = score_class_union_soft."KEY") AS "sum_ExpDeltaScore" 
FROM score_soft_max_comp), 
arg_max_cte AS 
(SELECT score_soft_max."KEY" AS "KEY", score_soft_max."Score_0" AS "Score_0", score_soft_max."Score_1" AS "Score_1", score_soft_max."Score_2" AS "Score_2", score_soft_max."Proba_0" AS "Proba_0", score_soft_max."Proba_1" AS "Proba_1", score_soft_max."Proba_2" AS "Proba_2", score_soft_max."LogProba_0" AS "LogProba_0", score_soft_max."LogProba_1" AS "LogProba_1", score_soft_max."LogProba_2" AS "LogProba_2", score_soft_max."Decision" AS "Decision", score_soft_max."max_LogProba" AS "max_LogProba", score_soft_max."max_Proba" AS "max_Proba", score_soft_max."max_Score" AS "max_Score", score_soft_max."exp_delta_Score_0" AS "exp_delta_Score_0", score_soft_max."exp_delta_Score_1" AS "exp_delta_Score_1", score_soft_max."exp_delta_Score_2" AS "exp_delta_Score_2", score_soft_max."sum_ExpDeltaScore" AS "sum_ExpDeltaScore", (SELECT min(score_class_union.class) AS min_1 
FROM score_class_union 
WHERE score_soft_max."max_LogProba" = score_class_union."LogProba" AND score_soft_max."KEY" = score_class_union."KEY") AS "arg_max_LogProba", (SELECT min(score_class_union.class) AS min_2 
FROM score_class_union 
WHERE score_soft_max."max_Proba" = score_class_union."Proba" AND score_soft_max."KEY" = score_class_union."KEY") AS "arg_max_Proba", (SELECT min(score_class_union.class) AS min_3 
FROM score_class_union 
WHERE score_soft_max."max_Score" = score_class_union."Score" AND score_soft_max."KEY" = score_class_union."KEY") AS "arg_max_Score", score_soft_max."exp_delta_Score_0" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_0", score_soft_max."exp_delta_Score_1" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_1", score_soft_max."exp_delta_Score_2" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_2" 
FROM score_soft_max)
 SELECT arg_max_cte."KEY" AS "KEY", arg_max_cte."Score_0" AS "Score_0", arg_max_cte."Score_1" AS "Score_1", arg_max_cte."Score_2" AS "Score_2", arg_max_cte."SoftProba_0" AS "Proba_0", arg_max_cte."SoftProba_1" AS "Proba_1", arg_max_cte."SoftProba_2" AS "Proba_2", CASE WHEN (arg_max_cte."SoftProba_0" > 0.0) THEN ln(arg_max_cte."SoftProba_0") ELSE -1.79769313486231e+308 END AS "LogProba_0", CASE WHEN (arg_max_cte."SoftProba_1" > 0.0) THEN ln(arg_max_cte."SoftProba_1") ELSE -1.79769313486231e+308 END AS "LogProba_1", CASE WHEN (arg_max_cte."SoftProba_2" > 0.0) THEN ln(arg_max_cte."SoftProba_2") ELSE -1.79769313486231e+308 END AS "LogProba_2", arg_max_cte."arg_max_Proba" AS "Decision" 
FROM arg_max_cte