-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH "ADS_imp_1_OUT" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" IS NULL) THEN -0.0694906390703 ELSE "ADS"."Feature_0" END AS impute_output_2, CASE WHEN ("ADS"."Feature_1" IS NULL) THEN -0.119163503916 ELSE "ADS"."Feature_1" END AS impute_output_3, CASE WHEN ("ADS"."Feature_2" IS NULL) THEN -0.127896899745 ELSE "ADS"."Feature_2" END AS impute_output_4, CASE WHEN ("ADS"."Feature_3" IS NULL) THEN -0.114287346209 ELSE "ADS"."Feature_3" END AS impute_output_5, CASE WHEN ("ADS"."Feature_4" IS NULL) THEN 0.0413271968547 ELSE "ADS"."Feature_4" END AS impute_output_6 
FROM "INPUT_DATA" "ADS"), 
"ADS_ano_2_OUT" AS 
(SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", ("ADS_imp_1_OUT".impute_output_2 - -0.0694906390703) * -0.053647534364 + ("ADS_imp_1_OUT".impute_output_3 - -0.119163503916) * -0.452838029092 + ("ADS_imp_1_OUT".impute_output_4 - -0.127896899745) * 0.689918784888 + ("ADS_imp_1_OUT".impute_output_5 - -0.114287346209) * -0.33402126184 + ("ADS_imp_1_OUT".impute_output_6 - 0.0413271968547) * -0.452218452037 AS anova_output_2, ("ADS_imp_1_OUT".impute_output_2 - -0.0694906390703) * -0.620732053756 + ("ADS_imp_1_OUT".impute_output_3 - -0.119163503916) * 0.179006433042 + ("ADS_imp_1_OUT".impute_output_4 - -0.127896899745) * 0.520498333383 + ("ADS_imp_1_OUT".impute_output_5 - -0.114287346209) * 0.386172344142 + ("ADS_imp_1_OUT".impute_output_6 - 0.0413271968547) * 0.403237919763 AS anova_output_3, ("ADS_imp_1_OUT".impute_output_2 - -0.0694906390703) * 0.534948377585 + ("ADS_imp_1_OUT".impute_output_3 - -0.119163503916) * -0.502789475991 + ("ADS_imp_1_OUT".impute_output_4 - -0.127896899745) * 0.167923582168 + ("ADS_imp_1_OUT".impute_output_5 - -0.114287346209) * 0.610459612885 + ("ADS_imp_1_OUT".impute_output_6 - 0.0413271968547) * 0.245303297449 AS anova_output_4, ("ADS_imp_1_OUT".impute_output_2 - -0.0694906390703) * 0.119525555247 + ("ADS_imp_1_OUT".impute_output_3 - -0.119163503916) * -0.210071806412 + ("ADS_imp_1_OUT".impute_output_4 - -0.127896899745) * 0.0756568397014 + ("ADS_imp_1_OUT".impute_output_5 - -0.114287346209) * -0.602658142322 + ("ADS_imp_1_OUT".impute_output_6 - 0.0413271968547) * 0.756744794427 AS anova_output_5, ("ADS_imp_1_OUT".impute_output_2 - -0.0694906390703) * -0.557994206474 + ("ADS_imp_1_OUT".impute_output_3 - -0.119163503916) * -0.682617751982 + ("ADS_imp_1_OUT".impute_output_4 - -0.127896899745) * -0.468157311555 + ("ADS_imp_1_OUT".impute_output_5 - -0.114287346209) * 0.0586765863683 + ("ADS_imp_1_OUT".impute_output_6 - 0.0413271968547) * -0.0078268813005 AS anova_output_6 
FROM "ADS_imp_1_OUT"), 
"IL" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", "ADS_ano_2_OUT".anova_output_2 AS anova_output_2, "ADS_ano_2_OUT".anova_output_3 AS anova_output_3, "ADS_ano_2_OUT".anova_output_4 AS anova_output_4, "ADS_ano_2_OUT".anova_output_5 AS anova_output_5, "ADS_ano_2_OUT".anova_output_6 AS anova_output_6 
FROM "ADS_ano_2_OUT"), 
"HL_BA_1" AS 
(SELECT "IL"."KEY" AS "KEY", -0.111308244503 * "IL".anova_output_2 + 0.254057279304 * "IL".anova_output_3 + -0.0582036348107 * "IL".anova_output_4 + 0.127272404517 * "IL".anova_output_5 + -0.000172084802657 * "IL".anova_output_6 + -0.183626348134 AS "NEUR_1_1", 0.229901198105 * "IL".anova_output_2 + -0.201724931036 * "IL".anova_output_3 + -0.0205374427781 * "IL".anova_output_4 + 0.0496779555069 * "IL".anova_output_5 + 0.263305274845 * "IL".anova_output_6 + -0.0192751801898 AS "NEUR_1_2", 0.0898527028783 * "IL".anova_output_2 + 0.0654530250085 * "IL".anova_output_3 + -0.202473973725 * "IL".anova_output_4 + -0.170501039856 * "IL".anova_output_5 + -0.388639295614 * "IL".anova_output_6 + -0.072249405547 AS "NEUR_1_3", 0.146361974056 * "IL".anova_output_2 + 0.302903814721 * "IL".anova_output_3 + -0.0488490927416 * "IL".anova_output_4 + -0.16543419101 * "IL".anova_output_5 + 0.193213146706 * "IL".anova_output_6 + 0.241987072692 AS "NEUR_1_4", -0.00561973743843 * "IL".anova_output_2 + 0.124260932507 * "IL".anova_output_3 + -0.416792384744 * "IL".anova_output_4 + -0.257763431508 * "IL".anova_output_5 + 0.139596218296 * "IL".anova_output_6 + -0.0752893808996 AS "NEUR_1_5", 0.170874427723 * "IL".anova_output_2 + 0.135336907022 * "IL".anova_output_3 + -0.365845557662 * "IL".anova_output_4 + -0.319810243273 * "IL".anova_output_5 + -0.0628590605859 * "IL".anova_output_6 + 0.27284175133 AS "NEUR_1_6", 0.0516947855172 * "IL".anova_output_2 + 0.156800230232 * "IL".anova_output_3 + 0.0178613325075 * "IL".anova_output_4 + -0.143702091286 * "IL".anova_output_5 + 0.0866117962789 * "IL".anova_output_6 + 0.187968082446 AS "NEUR_1_7", 0.282745121855 * "IL".anova_output_2 + 0.115430080036 * "IL".anova_output_3 + 0.0663971124516 * "IL".anova_output_4 + -0.311438225078 * "IL".anova_output_5 + -0.0357247581028 * "IL".anova_output_6 + -0.0857847394712 AS "NEUR_1_8", 0.0529821066391 * "IL".anova_output_2 + -0.358625474904 * "IL".anova_output_3 + 0.222363136701 * "IL".anova_output_4 + 0.374611694056 * "IL".anova_output_5 + -0.132024343049 * "IL".anova_output_6 + 0.110771112115 AS "NEUR_1_9", 0.0488034807336 * "IL".anova_output_2 + 0.381984410349 * "IL".anova_output_3 + 0.163583712177 * "IL".anova_output_4 + -0.0699833204651 * "IL".anova_output_5 + -0.168879547808 * "IL".anova_output_6 + 0.111602420407 AS "NEUR_1_10", 0.242812680866 * "IL".anova_output_2 + 0.172579074609 * "IL".anova_output_3 + 0.162870002528 * "IL".anova_output_4 + -0.0140293609185 * "IL".anova_output_5 + -0.156981189455 * "IL".anova_output_6 + -0.262134540365 AS "NEUR_1_11", 0.0956008019008 * "IL".anova_output_2 + 0.234486541561 * "IL".anova_output_3 + -0.0629666301295 * "IL".anova_output_4 + -0.0934273434936 * "IL".anova_output_5 + -0.0534913451179 * "IL".anova_output_6 + -0.0667661395717 AS "NEUR_1_12", -0.031575500673 * "IL".anova_output_2 + -0.0347624363916 * "IL".anova_output_3 + -0.0254724324432 * "IL".anova_output_4 + -0.313684809695 * "IL".anova_output_5 + -0.426355226773 * "IL".anova_output_6 + 0.029270631885 AS "NEUR_1_13", 0.318755440642 * "IL".anova_output_2 + -0.23054838496 * "IL".anova_output_3 + 0.00327713226555 * "IL".anova_output_4 + -0.10819380499 * "IL".anova_output_5 + -0.12623402284 * "IL".anova_output_6 + 0.0959915291438 AS "NEUR_1_14", -0.338539540603 * "IL".anova_output_2 + 0.301909344325 * "IL".anova_output_3 + -0.13689689611 * "IL".anova_output_4 + 0.226281147813 * "IL".anova_output_5 + 0.00905105922576 * "IL".anova_output_6 + -0.0699002584559 AS "NEUR_1_15", -0.267605756033 * "IL".anova_output_2 + 0.0534255888536 * "IL".anova_output_3 + 0.00266410354127 * "IL".anova_output_4 + -0.0991973979885 * "IL".anova_output_5 + -0.107648810049 * "IL".anova_output_6 + 0.118147845843 AS "NEUR_1_16", -0.351243438583 * "IL".anova_output_2 + 0.166504777629 * "IL".anova_output_3 + -0.150265878294 * "IL".anova_output_4 + 0.044753938576 * "IL".anova_output_5 + -0.0928745777231 * "IL".anova_output_6 + -0.272131091773 AS "NEUR_1_17", 0.184535224036 * "IL".anova_output_2 + 0.0132217073682 * "IL".anova_output_3 + -0.178885836274 * "IL".anova_output_4 + -0.114897841115 * "IL".anova_output_5 + -0.451832176218 * "IL".anova_output_6 + -0.181507405093 AS "NEUR_1_18", 0.218035264228 * "IL".anova_output_2 + 0.351946006283 * "IL".anova_output_3 + 0.21015480183 * "IL".anova_output_4 + 0.0432236137191 * "IL".anova_output_5 + 0.00989126319667 * "IL".anova_output_6 + -0.000883284495464 AS "NEUR_1_19", 0.040116644092 * "IL".anova_output_2 + 0.0307342358964 * "IL".anova_output_3 + 0.121032652108 * "IL".anova_output_4 + 0.272780463964 * "IL".anova_output_5 + 0.132247576628 * "IL".anova_output_6 + 0.205415745868 AS "NEUR_1_20", 0.346905266088 * "IL".anova_output_2 + 0.281245986168 * "IL".anova_output_3 + 0.194173864674 * "IL".anova_output_4 + -0.263781107336 * "IL".anova_output_5 + 0.331528889901 * "IL".anova_output_6 + 0.12840355528 AS "NEUR_1_21", 0.0786249672047 * "IL".anova_output_2 + -0.0360420763229 * "IL".anova_output_3 + 0.128811834822 * "IL".anova_output_4 + -0.208608090254 * "IL".anova_output_5 + 0.286663092271 * "IL".anova_output_6 + -0.139999309053 AS "NEUR_1_22", -0.108732972991 * "IL".anova_output_2 + 0.393339414174 * "IL".anova_output_3 + -0.307439489791 * "IL".anova_output_4 + -0.396672695935 * "IL".anova_output_5 + 0.125169031375 * "IL".anova_output_6 + -0.11894142276 AS "NEUR_1_23", 0.0543646643822 * "IL".anova_output_2 + 0.0281462698969 * "IL".anova_output_3 + 0.156673982941 * "IL".anova_output_4 + -0.187652308008 * "IL".anova_output_5 + -0.309101979452 * "IL".anova_output_6 + 0.15877704278 AS "NEUR_1_24", -0.0506018032068 * "IL".anova_output_2 + 0.0622184768344 * "IL".anova_output_3 + -0.211128849937 * "IL".anova_output_4 + -0.293982013343 * "IL".anova_output_5 + 0.101510388778 * "IL".anova_output_6 + -0.201651105725 AS "NEUR_1_25", 0.0704065599959 * "IL".anova_output_2 + -0.0606130702977 * "IL".anova_output_3 + 0.409526499946 * "IL".anova_output_4 + 0.151170857712 * "IL".anova_output_5 + 0.10127356815 * "IL".anova_output_6 + -0.202923602547 AS "NEUR_1_26", -0.044209978429 * "IL".anova_output_2 + -0.183169584863 * "IL".anova_output_3 + 0.279123939962 * "IL".anova_output_4 + 0.208171086739 * "IL".anova_output_5 + 0.332796109901 * "IL".anova_output_6 + 0.125965346293 AS "NEUR_1_27", 0.178744845939 * "IL".anova_output_2 + 0.0146678846653 * "IL".anova_output_3 + -0.205655717803 * "IL".anova_output_4 + 0.231622290351 * "IL".anova_output_5 + -0.330513612099 * "IL".anova_output_6 + 0.220874021587 AS "NEUR_1_28", 0.158567995229 * "IL".anova_output_2 + 0.259614778761 * "IL".anova_output_3 + 0.375862593737 * "IL".anova_output_4 + -0.0563227022211 * "IL".anova_output_5 + 0.112927016145 * "IL".anova_output_6 + -0.0731499192351 AS "NEUR_1_29", -0.115896040618 * "IL".anova_output_2 + -0.14629453794 * "IL".anova_output_3 + 0.00711614013943 * "IL".anova_output_4 + 0.0880623978728 * "IL".anova_output_5 + -0.143189919237 * "IL".anova_output_6 + -0.0690145491996 AS "NEUR_1_30", -0.297901213524 * "IL".anova_output_2 + 0.0879424565024 * "IL".anova_output_3 + -0.209646868191 * "IL".anova_output_4 + -0.0202682322795 * "IL".anova_output_5 + -0.0500083174275 * "IL".anova_output_6 + -0.313108021154 AS "NEUR_1_31", 0.232014106935 * "IL".anova_output_2 + -0.15998150796 * "IL".anova_output_3 + -0.0570056401216 * "IL".anova_output_4 + 0.0728978397269 * "IL".anova_output_5 + 0.207339460533 * "IL".anova_output_6 + -0.107058104796 AS "NEUR_1_32", 0.0109167276925 * "IL".anova_output_2 + -0.158539973059 * "IL".anova_output_3 + 0.0366288457249 * "IL".anova_output_4 + -0.181871197467 * "IL".anova_output_5 + -0.087346051363 * "IL".anova_output_6 + 0.039324645847 AS "NEUR_1_33", 0.207125126937 * "IL".anova_output_2 + 0.0333958806856 * "IL".anova_output_3 + -0.457556302125 * "IL".anova_output_4 + 0.0950588704514 * "IL".anova_output_5 + -0.17619941751 * "IL".anova_output_6 + -0.117276682308 AS "NEUR_1_34", -0.084961688492 * "IL".anova_output_2 + 0.00944490152515 * "IL".anova_output_3 + -0.176907578296 * "IL".anova_output_4 + 0.210590164397 * "IL".anova_output_5 + 0.20004343813 * "IL".anova_output_6 + -0.145926722752 AS "NEUR_1_35", 0.0331501965669 * "IL".anova_output_2 + 0.0310933149739 * "IL".anova_output_3 + -0.149223810669 * "IL".anova_output_4 + 0.256930920326 * "IL".anova_output_5 + 0.191890412725 * "IL".anova_output_6 + -0.235763952737 AS "NEUR_1_36", 0.151963031623 * "IL".anova_output_2 + 0.204965666513 * "IL".anova_output_3 + 0.00616579404631 * "IL".anova_output_4 + -0.159573361212 * "IL".anova_output_5 + 0.182044729251 * "IL".anova_output_6 + 0.149900409037 AS "NEUR_1_37", 0.17295123821 * "IL".anova_output_2 + 0.191166215363 * "IL".anova_output_3 + 0.0301001157853 * "IL".anova_output_4 + -0.0428980370215 * "IL".anova_output_5 + -0.0384568883413 * "IL".anova_output_6 + 0.0963181928618 AS "NEUR_1_38", 0.172087302992 * "IL".anova_output_2 + 0.0576956971654 * "IL".anova_output_3 + -0.287719978066 * "IL".anova_output_4 + 0.0387370003242 * "IL".anova_output_5 + 0.0236520779837 * "IL".anova_output_6 + 0.135274993798 AS "NEUR_1_39", 0.0420689038264 * "IL".anova_output_2 + -0.0248292679366 * "IL".anova_output_3 + 0.0477332118099 * "IL".anova_output_4 + -0.155522148263 * "IL".anova_output_5 + 0.0145537696629 * "IL".anova_output_6 + 0.257628233667 AS "NEUR_1_40", -0.109996991227 * "IL".anova_output_2 + 0.0741331919619 * "IL".anova_output_3 + 0.416595763191 * "IL".anova_output_4 + -0.110813336625 * "IL".anova_output_5 + -0.0864939945999 * "IL".anova_output_6 + -0.206866837519 AS "NEUR_1_41", -0.0682886436241 * "IL".anova_output_2 + 0.0898372628406 * "IL".anova_output_3 + -0.343867743479 * "IL".anova_output_4 + -0.168885667836 * "IL".anova_output_5 + 0.228410029219 * "IL".anova_output_6 + 0.0517527146128 AS "NEUR_1_42", 0.00883292714914 * "IL".anova_output_2 + -0.0458584025175 * "IL".anova_output_3 + -0.0161763768769 * "IL".anova_output_4 + -0.00908531709478 * "IL".anova_output_5 + 0.283360519763 * "IL".anova_output_6 + 0.069487799329 AS "NEUR_1_43", -0.416701259658 * "IL".anova_output_2 + 0.251614146532 * "IL".anova_output_3 + -0.0468517654123 * "IL".anova_output_4 + -0.152123850975 * "IL".anova_output_5 + -0.376952807148 * "IL".anova_output_6 + -0.0392942990519 AS "NEUR_1_44", 0.188380688015 * "IL".anova_output_2 + 0.329431638937 * "IL".anova_output_3 + 0.143403357236 * "IL".anova_output_4 + 0.0560383072637 * "IL".anova_output_5 + 0.0159770000378 * "IL".anova_output_6 + 0.0638065739384 AS "NEUR_1_45", -0.0348139150674 * "IL".anova_output_2 + 0.249161732876 * "IL".anova_output_3 + 0.0610950939559 * "IL".anova_output_4 + -0.0701305708932 * "IL".anova_output_5 + -0.0198615403075 * "IL".anova_output_6 + -0.323913084083 AS "NEUR_1_46", -0.0971445753877 * "IL".anova_output_2 + -0.137862866319 * "IL".anova_output_3 + 0.238236935816 * "IL".anova_output_4 + 0.137551490003 * "IL".anova_output_5 + 0.255936918091 * "IL".anova_output_6 + 0.178324312943 AS "NEUR_1_47", -0.0638946936934 * "IL".anova_output_2 + 0.225598603061 * "IL".anova_output_3 + -0.308757201252 * "IL".anova_output_4 + -0.193496690676 * "IL".anova_output_5 + 0.135351715439 * "IL".anova_output_6 + 0.034462985697 AS "NEUR_1_48", -0.0368801906563 * "IL".anova_output_2 + 0.186246101376 * "IL".anova_output_3 + -0.324843557606 * "IL".anova_output_4 + -0.0687333026956 * "IL".anova_output_5 + 0.137807838914 * "IL".anova_output_6 + 0.0413167379235 AS "NEUR_1_49", -0.181541268657 * "IL".anova_output_2 + 0.385892621313 * "IL".anova_output_3 + 0.0296058316597 * "IL".anova_output_4 + 0.120708539073 * "IL".anova_output_5 + 0.11056859184 * "IL".anova_output_6 + -0.22247435039 AS "NEUR_1_50", 0.0232290583508 * "IL".anova_output_2 + -0.189602176926 * "IL".anova_output_3 + 0.0922210895971 * "IL".anova_output_4 + 0.333421790861 * "IL".anova_output_5 + -0.0498352310752 * "IL".anova_output_6 + 0.133664492527 AS "NEUR_1_51", -0.0944583064945 * "IL".anova_output_2 + 0.0447617989943 * "IL".anova_output_3 + 0.112406237359 * "IL".anova_output_4 + -0.431187793444 * "IL".anova_output_5 + 0.273413442286 * "IL".anova_output_6 + -0.110784578478 AS "NEUR_1_52", 0.353215605662 * "IL".anova_output_2 + -0.281627458638 * "IL".anova_output_3 + 0.0582362758464 * "IL".anova_output_4 + -0.105752565102 * "IL".anova_output_5 + -0.211704932096 * "IL".anova_output_6 + 0.00513941647044 AS "NEUR_1_53", -0.300768625626 * "IL".anova_output_2 + 0.179372037937 * "IL".anova_output_3 + -0.00813606759413 * "IL".anova_output_4 + -0.107555069363 * "IL".anova_output_5 + -0.278251227833 * "IL".anova_output_6 + -0.0130526779418 AS "NEUR_1_54", -0.19989345335 * "IL".anova_output_2 + -0.100073470239 * "IL".anova_output_3 + 0.372272879693 * "IL".anova_output_4 + 0.0424293240394 * "IL".anova_output_5 + 0.328465511153 * "IL".anova_output_6 + 0.174407837556 AS "NEUR_1_55", -0.332350295489 * "IL".anova_output_2 + 0.204035858546 * "IL".anova_output_3 + -0.143853052309 * "IL".anova_output_4 + 0.178919091607 * "IL".anova_output_5 + -0.0801191438805 * "IL".anova_output_6 + -0.203868902392 AS "NEUR_1_56", 0.186061423521 * "IL".anova_output_2 + 0.377077776294 * "IL".anova_output_3 + 0.212386112489 * "IL".anova_output_4 + -0.0148043374238 * "IL".anova_output_5 + 0.0177584995024 * "IL".anova_output_6 + -0.0755278542492 AS "NEUR_1_57", -0.229404319357 * "IL".anova_output_2 + 0.141928173597 * "IL".anova_output_3 + -0.00752519075517 * "IL".anova_output_4 + -0.084211469287 * "IL".anova_output_5 + -0.212719518143 * "IL".anova_output_6 + -0.0110133473075 AS "NEUR_1_58", -0.146511200555 * "IL".anova_output_2 + -0.0532342199645 * "IL".anova_output_3 + 0.460358249777 * "IL".anova_output_4 + -0.0976951029063 * "IL".anova_output_5 + 0.22509458575 * "IL".anova_output_6 + 0.0721520993194 AS "NEUR_1_59", -0.0360401820181 * "IL".anova_output_2 + -0.179506836065 * "IL".anova_output_3 + 0.0320450635392 * "IL".anova_output_4 + 0.390866800101 * "IL".anova_output_5 + 0.19473374889 * "IL".anova_output_6 + 0.220825390446 AS "NEUR_1_60", -0.3570026408 * "IL".anova_output_2 + 0.231831888107 * "IL".anova_output_3 + -0.0155110333491 * "IL".anova_output_4 + -0.125143571315 * "IL".anova_output_5 + -0.316226017692 * "IL".anova_output_6 + -0.0219204013599 AS "NEUR_1_61", -0.0668399792231 * "IL".anova_output_2 + 0.0356369650601 * "IL".anova_output_3 + -0.24225348585 * "IL".anova_output_4 + 0.262467183265 * "IL".anova_output_5 + 0.0432784327012 * "IL".anova_output_6 + -0.252624487816 AS "NEUR_1_62", 0.191048176281 * "IL".anova_output_2 + 0.175573689271 * "IL".anova_output_3 + -0.154740738571 * "IL".anova_output_4 + -0.0569984869894 * "IL".anova_output_5 + -0.0233486012103 * "IL".anova_output_6 + 0.167733592544 AS "NEUR_1_63", -0.0779162301512 * "IL".anova_output_2 + 0.283708143959 * "IL".anova_output_3 + 0.135357069481 * "IL".anova_output_4 + 0.087900200609 * "IL".anova_output_5 + 0.0058221409116 * "IL".anova_output_6 + 0.133857161423 AS "NEUR_1_64", -0.0148940285484 * "IL".anova_output_2 + 0.374589148277 * "IL".anova_output_3 + 0.109648093648 * "IL".anova_output_4 + 0.131877789498 * "IL".anova_output_5 + -0.136158803334 * "IL".anova_output_6 + 0.106838284623 AS "NEUR_1_65", -0.0569107889291 * "IL".anova_output_2 + 0.299018169252 * "IL".anova_output_3 + 0.235477070318 * "IL".anova_output_4 + -0.0406352976772 * "IL".anova_output_5 + -0.14090497264 * "IL".anova_output_6 + 0.203814462151 AS "NEUR_1_66", 0.0802845972437 * "IL".anova_output_2 + -0.258102973256 * "IL".anova_output_3 + -0.144160893794 * "IL".anova_output_4 + 0.244339098774 * "IL".anova_output_5 + 0.042264544222 * "IL".anova_output_6 + 0.0501196262175 AS "NEUR_1_67", -0.253355138558 * "IL".anova_output_2 + -0.061948417424 * "IL".anova_output_3 + -0.0198755692576 * "IL".anova_output_4 + -0.0297123963631 * "IL".anova_output_5 + -0.123247803952 * "IL".anova_output_6 + 0.196680398041 AS "NEUR_1_68", 0.100035384503 * "IL".anova_output_2 + 0.17592855369 * "IL".anova_output_3 + -0.331519081213 * "IL".anova_output_4 + 0.292686508265 * "IL".anova_output_5 + 0.19980219774 * "IL".anova_output_6 + 0.142613630588 AS "NEUR_1_69", -0.0693556452781 * "IL".anova_output_2 + -0.134717957521 * "IL".anova_output_3 + 0.182349339726 * "IL".anova_output_4 + 0.262419761504 * "IL".anova_output_5 + -0.202315483619 * "IL".anova_output_6 + 0.27483178336 AS "NEUR_1_70", 0.380102499992 * "IL".anova_output_2 + -0.020536754439 * "IL".anova_output_3 + 0.31784721542 * "IL".anova_output_4 + -0.0236473860809 * "IL".anova_output_5 + 0.0741384558662 * "IL".anova_output_6 + 0.360623840168 AS "NEUR_1_71", -0.0752864046872 * "IL".anova_output_2 + -0.181174534428 * "IL".anova_output_3 + 0.256983548428 * "IL".anova_output_4 + -0.124702095915 * "IL".anova_output_5 + 0.193764748635 * "IL".anova_output_6 + -0.193210465757 AS "NEUR_1_72", 0.2083506602 * "IL".anova_output_2 + -0.161357385408 * "IL".anova_output_3 + -0.259945251812 * "IL".anova_output_4 + 0.263232807058 * "IL".anova_output_5 + 0.00907095051137 * "IL".anova_output_6 + -0.054482298498 AS "NEUR_1_73", 0.146619014847 * "IL".anova_output_2 + -0.25421436015 * "IL".anova_output_3 + 0.113526674257 * "IL".anova_output_4 + -0.0187209462241 * "IL".anova_output_5 + 0.230068629431 * "IL".anova_output_6 + -0.093827496957 AS "NEUR_1_74", -0.0332110185589 * "IL".anova_output_2 + 0.157393198911 * "IL".anova_output_3 + -0.241169669298 * "IL".anova_output_4 + -0.317537347572 * "IL".anova_output_5 + 0.212128889633 * "IL".anova_output_6 + 0.0529285913204 AS "NEUR_1_75", -0.220033453974 * "IL".anova_output_2 + -0.0836149014242 * "IL".anova_output_3 + 0.421939545494 * "IL".anova_output_4 + -0.0999920317801 * "IL".anova_output_5 + 0.26237957083 * "IL".anova_output_6 + 0.0594179545192 AS "NEUR_1_76", -0.137776857547 * "IL".anova_output_2 + -0.109297965895 * "IL".anova_output_3 + 0.38156082751 * "IL".anova_output_4 + 0.163686757682 * "IL".anova_output_5 + 0.126712125387 * "IL".anova_output_6 + -0.153750702087 AS "NEUR_1_77", -0.175544024086 * "IL".anova_output_2 + 0.129792151107 * "IL".anova_output_3 + 0.26132732941 * "IL".anova_output_4 + 0.243279508446 * "IL".anova_output_5 + 0.435550377498 * "IL".anova_output_6 + 0.34365527693 AS "NEUR_1_78", 0.0115242521805 * "IL".anova_output_2 + 0.249419462262 * "IL".anova_output_3 + 0.194162250655 * "IL".anova_output_4 + 0.0926142610457 * "IL".anova_output_5 + 0.20340433421 * "IL".anova_output_6 + -0.0411323099569 AS "NEUR_1_79", -0.188374011896 * "IL".anova_output_2 + -0.211830122882 * "IL".anova_output_3 + 0.0648011929812 * "IL".anova_output_4 + -0.0385598683733 * "IL".anova_output_5 + -0.0814804485347 * "IL".anova_output_6 + 0.153227111002 AS "NEUR_1_80", -0.204852182599 * "IL".anova_output_2 + -0.377367457102 * "IL".anova_output_3 + -0.106676795336 * "IL".anova_output_4 + 0.217977602013 * "IL".anova_output_5 + -0.238988144519 * "IL".anova_output_6 + -0.288901714982 AS "NEUR_1_81", -0.0344669384431 * "IL".anova_output_2 + 0.174282250843 * "IL".anova_output_3 + 0.138521973015 * "IL".anova_output_4 + -0.0236045108872 * "IL".anova_output_5 + -0.0826399404094 * "IL".anova_output_6 + 0.119636709342 AS "NEUR_1_82", -0.344173236306 * "IL".anova_output_2 + 0.13753512179 * "IL".anova_output_3 + -0.0832680985232 * "IL".anova_output_4 + 0.164279860727 * "IL".anova_output_5 + -0.0393401803266 * "IL".anova_output_6 + -0.182590601072 AS "NEUR_1_83", 0.21334867172 * "IL".anova_output_2 + 0.0171584848502 * "IL".anova_output_3 + -0.380103178354 * "IL".anova_output_4 + 0.0639173317001 * "IL".anova_output_5 + -0.220027108187 * "IL".anova_output_6 + -0.163164665285 AS "NEUR_1_84", 0.12048058002 * "IL".anova_output_2 + 0.333694198116 * "IL".anova_output_3 + 0.0073120160326 * "IL".anova_output_4 + 0.107451528228 * "IL".anova_output_5 + -0.0579276344241 * "IL".anova_output_6 + 0.0541462507891 AS "NEUR_1_85", 0.00865810678564 * "IL".anova_output_2 + -0.0383900413909 * "IL".anova_output_3 + -0.208198762001 * "IL".anova_output_4 + 0.325995964642 * "IL".anova_output_5 + 0.185180065162 * "IL".anova_output_6 + -0.170861802342 AS "NEUR_1_86", -0.0617236081835 * "IL".anova_output_2 + -0.0669629010863 * "IL".anova_output_3 + 0.436564937861 * "IL".anova_output_4 + 0.169124451708 * "IL".anova_output_5 + 0.0304038061881 * "IL".anova_output_6 + -0.237328779678 AS "NEUR_1_87", -0.230672715882 * "IL".anova_output_2 + -0.0883685745847 * "IL".anova_output_3 + 0.125059535624 * "IL".anova_output_4 + -0.209417357631 * "IL".anova_output_5 + 0.308795377738 * "IL".anova_output_6 + -0.115757250721 AS "NEUR_1_88", 0.0381333703919 * "IL".anova_output_2 + 0.0301672542001 * "IL".anova_output_3 + -0.089897894886 * "IL".anova_output_4 + 0.236055720151 * "IL".anova_output_5 + 0.355182530061 * "IL".anova_output_6 + -0.119222714034 AS "NEUR_1_89", 0.318298103882 * "IL".anova_output_2 + -0.135064855451 * "IL".anova_output_3 + 0.122221929668 * "IL".anova_output_4 + -0.0643550877635 * "IL".anova_output_5 + 0.0942216215775 * "IL".anova_output_6 + 0.253212857637 AS "NEUR_1_90", -0.138196329419 * "IL".anova_output_2 + -0.0241840978985 * "IL".anova_output_3 + -0.118146462786 * "IL".anova_output_4 + -0.359654089409 * "IL".anova_output_5 + -0.180046636059 * "IL".anova_output_6 + 0.115776872588 AS "NEUR_1_91", 0.180971946747 * "IL".anova_output_2 + -0.195808018789 * "IL".anova_output_3 + -0.0594738263262 * "IL".anova_output_4 + -0.0240227516024 * "IL".anova_output_5 + 0.0937596785753 * "IL".anova_output_6 + 0.200017386741 AS "NEUR_1_92", -0.295585188643 * "IL".anova_output_2 + -0.0158482698983 * "IL".anova_output_3 + 0.368287630304 * "IL".anova_output_4 + -0.00925927952898 * "IL".anova_output_5 + 0.347336214473 * "IL".anova_output_6 + 0.215775183192 AS "NEUR_1_93", 0.1844949609 * "IL".anova_output_2 + 0.419009669709 * "IL".anova_output_3 + -0.033884254644 * "IL".anova_output_4 + 0.107084653147 * "IL".anova_output_5 + -0.0395269472984 * "IL".anova_output_6 + 0.0678801140076 AS "NEUR_1_94", -0.0438858719542 * "IL".anova_output_2 + 0.288392199796 * "IL".anova_output_3 + -0.177910518478 * "IL".anova_output_4 + -0.478512856539 * "IL".anova_output_5 + 0.0702376221399 * "IL".anova_output_6 + -0.163329857124 AS "NEUR_1_95", -0.188499607765 * "IL".anova_output_2 + 0.0456650209851 * "IL".anova_output_3 + -0.113494313978 * "IL".anova_output_4 + 0.246432381867 * "IL".anova_output_5 + -0.170835681358 * "IL".anova_output_6 + 0.178863039737 AS "NEUR_1_96", -0.154343432773 * "IL".anova_output_2 + -0.306266030054 * "IL".anova_output_3 + -0.209479088486 * "IL".anova_output_4 + -0.0448394050305 * "IL".anova_output_5 + -0.0876998585487 * "IL".anova_output_6 + -0.0428977648952 AS "NEUR_1_97", -0.22999285567 * "IL".anova_output_2 + -0.201643725018 * "IL".anova_output_3 + 0.0858407890428 * "IL".anova_output_4 + -0.0298521691703 * "IL".anova_output_5 + -0.0763754816315 * "IL".anova_output_6 + 0.0282023495998 AS "NEUR_1_98", 0.0851021687974 * "IL".anova_output_2 + -0.121919552274 * "IL".anova_output_3 + 0.469433161602 * "IL".anova_output_4 + -0.372239476385 * "IL".anova_output_5 + -0.291458774228 * "IL".anova_output_6 + -0.0159892845814 AS "NEUR_1_99", -0.259455674283 * "IL".anova_output_2 + -0.0820475498429 * "IL".anova_output_3 + 0.182909388834 * "IL".anova_output_4 + -0.240179597088 * "IL".anova_output_5 + 0.0925102029054 * "IL".anova_output_6 + 0.326166809147 AS "NEUR_1_100" 
FROM "IL"), 
"HL_1" AS 
(SELECT "HL_BA_1"."KEY" AS "KEY", CASE WHEN ("HL_BA_1"."NEUR_1_1" >= 0.0) THEN "HL_BA_1"."NEUR_1_1" ELSE 0.0 END AS "NEUR_1_1", CASE WHEN ("HL_BA_1"."NEUR_1_2" >= 0.0) THEN "HL_BA_1"."NEUR_1_2" ELSE 0.0 END AS "NEUR_1_2", CASE WHEN ("HL_BA_1"."NEUR_1_3" >= 0.0) THEN "HL_BA_1"."NEUR_1_3" ELSE 0.0 END AS "NEUR_1_3", CASE WHEN ("HL_BA_1"."NEUR_1_4" >= 0.0) THEN "HL_BA_1"."NEUR_1_4" ELSE 0.0 END AS "NEUR_1_4", CASE WHEN ("HL_BA_1"."NEUR_1_5" >= 0.0) THEN "HL_BA_1"."NEUR_1_5" ELSE 0.0 END AS "NEUR_1_5", CASE WHEN ("HL_BA_1"."NEUR_1_6" >= 0.0) THEN "HL_BA_1"."NEUR_1_6" ELSE 0.0 END AS "NEUR_1_6", CASE WHEN ("HL_BA_1"."NEUR_1_7" >= 0.0) THEN "HL_BA_1"."NEUR_1_7" ELSE 0.0 END AS "NEUR_1_7", CASE WHEN ("HL_BA_1"."NEUR_1_8" >= 0.0) THEN "HL_BA_1"."NEUR_1_8" ELSE 0.0 END AS "NEUR_1_8", CASE WHEN ("HL_BA_1"."NEUR_1_9" >= 0.0) THEN "HL_BA_1"."NEUR_1_9" ELSE 0.0 END AS "NEUR_1_9", CASE WHEN ("HL_BA_1"."NEUR_1_10" >= 0.0) THEN "HL_BA_1"."NEUR_1_10" ELSE 0.0 END AS "NEUR_1_10", CASE WHEN ("HL_BA_1"."NEUR_1_11" >= 0.0) THEN "HL_BA_1"."NEUR_1_11" ELSE 0.0 END AS "NEUR_1_11", CASE WHEN ("HL_BA_1"."NEUR_1_12" >= 0.0) THEN "HL_BA_1"."NEUR_1_12" ELSE 0.0 END AS "NEUR_1_12", CASE WHEN ("HL_BA_1"."NEUR_1_13" >= 0.0) THEN "HL_BA_1"."NEUR_1_13" ELSE 0.0 END AS "NEUR_1_13", CASE WHEN ("HL_BA_1"."NEUR_1_14" >= 0.0) THEN "HL_BA_1"."NEUR_1_14" ELSE 0.0 END AS "NEUR_1_14", CASE WHEN ("HL_BA_1"."NEUR_1_15" >= 0.0) THEN "HL_BA_1"."NEUR_1_15" ELSE 0.0 END AS "NEUR_1_15", CASE WHEN ("HL_BA_1"."NEUR_1_16" >= 0.0) THEN "HL_BA_1"."NEUR_1_16" ELSE 0.0 END AS "NEUR_1_16", CASE WHEN ("HL_BA_1"."NEUR_1_17" >= 0.0) THEN "HL_BA_1"."NEUR_1_17" ELSE 0.0 END AS "NEUR_1_17", CASE WHEN ("HL_BA_1"."NEUR_1_18" >= 0.0) THEN "HL_BA_1"."NEUR_1_18" ELSE 0.0 END AS "NEUR_1_18", CASE WHEN ("HL_BA_1"."NEUR_1_19" >= 0.0) THEN "HL_BA_1"."NEUR_1_19" ELSE 0.0 END AS "NEUR_1_19", CASE WHEN ("HL_BA_1"."NEUR_1_20" >= 0.0) THEN "HL_BA_1"."NEUR_1_20" ELSE 0.0 END AS "NEUR_1_20", CASE WHEN ("HL_BA_1"."NEUR_1_21" >= 0.0) THEN "HL_BA_1"."NEUR_1_21" ELSE 0.0 END AS "NEUR_1_21", CASE WHEN ("HL_BA_1"."NEUR_1_22" >= 0.0) THEN "HL_BA_1"."NEUR_1_22" ELSE 0.0 END AS "NEUR_1_22", CASE WHEN ("HL_BA_1"."NEUR_1_23" >= 0.0) THEN "HL_BA_1"."NEUR_1_23" ELSE 0.0 END AS "NEUR_1_23", CASE WHEN ("HL_BA_1"."NEUR_1_24" >= 0.0) THEN "HL_BA_1"."NEUR_1_24" ELSE 0.0 END AS "NEUR_1_24", CASE WHEN ("HL_BA_1"."NEUR_1_25" >= 0.0) THEN "HL_BA_1"."NEUR_1_25" ELSE 0.0 END AS "NEUR_1_25", CASE WHEN ("HL_BA_1"."NEUR_1_26" >= 0.0) THEN "HL_BA_1"."NEUR_1_26" ELSE 0.0 END AS "NEUR_1_26", CASE WHEN ("HL_BA_1"."NEUR_1_27" >= 0.0) THEN "HL_BA_1"."NEUR_1_27" ELSE 0.0 END AS "NEUR_1_27", CASE WHEN ("HL_BA_1"."NEUR_1_28" >= 0.0) THEN "HL_BA_1"."NEUR_1_28" ELSE 0.0 END AS "NEUR_1_28", CASE WHEN ("HL_BA_1"."NEUR_1_29" >= 0.0) THEN "HL_BA_1"."NEUR_1_29" ELSE 0.0 END AS "NEUR_1_29", CASE WHEN ("HL_BA_1"."NEUR_1_30" >= 0.0) THEN "HL_BA_1"."NEUR_1_30" ELSE 0.0 END AS "NEUR_1_30", CASE WHEN ("HL_BA_1"."NEUR_1_31" >= 0.0) THEN "HL_BA_1"."NEUR_1_31" ELSE 0.0 END AS "NEUR_1_31", CASE WHEN ("HL_BA_1"."NEUR_1_32" >= 0.0) THEN "HL_BA_1"."NEUR_1_32" ELSE 0.0 END AS "NEUR_1_32", CASE WHEN ("HL_BA_1"."NEUR_1_33" >= 0.0) THEN "HL_BA_1"."NEUR_1_33" ELSE 0.0 END AS "NEUR_1_33", CASE WHEN ("HL_BA_1"."NEUR_1_34" >= 0.0) THEN "HL_BA_1"."NEUR_1_34" ELSE 0.0 END AS "NEUR_1_34", CASE WHEN ("HL_BA_1"."NEUR_1_35" >= 0.0) THEN "HL_BA_1"."NEUR_1_35" ELSE 0.0 END AS "NEUR_1_35", CASE WHEN ("HL_BA_1"."NEUR_1_36" >= 0.0) THEN "HL_BA_1"."NEUR_1_36" ELSE 0.0 END AS "NEUR_1_36", CASE WHEN ("HL_BA_1"."NEUR_1_37" >= 0.0) THEN "HL_BA_1"."NEUR_1_37" ELSE 0.0 END AS "NEUR_1_37", CASE WHEN ("HL_BA_1"."NEUR_1_38" >= 0.0) THEN "HL_BA_1"."NEUR_1_38" ELSE 0.0 END AS "NEUR_1_38", CASE WHEN ("HL_BA_1"."NEUR_1_39" >= 0.0) THEN "HL_BA_1"."NEUR_1_39" ELSE 0.0 END AS "NEUR_1_39", CASE WHEN ("HL_BA_1"."NEUR_1_40" >= 0.0) THEN "HL_BA_1"."NEUR_1_40" ELSE 0.0 END AS "NEUR_1_40", CASE WHEN ("HL_BA_1"."NEUR_1_41" >= 0.0) THEN "HL_BA_1"."NEUR_1_41" ELSE 0.0 END AS "NEUR_1_41", CASE WHEN ("HL_BA_1"."NEUR_1_42" >= 0.0) THEN "HL_BA_1"."NEUR_1_42" ELSE 0.0 END AS "NEUR_1_42", CASE WHEN ("HL_BA_1"."NEUR_1_43" >= 0.0) THEN "HL_BA_1"."NEUR_1_43" ELSE 0.0 END AS "NEUR_1_43", CASE WHEN ("HL_BA_1"."NEUR_1_44" >= 0.0) THEN "HL_BA_1"."NEUR_1_44" ELSE 0.0 END AS "NEUR_1_44", CASE WHEN ("HL_BA_1"."NEUR_1_45" >= 0.0) THEN "HL_BA_1"."NEUR_1_45" ELSE 0.0 END AS "NEUR_1_45", CASE WHEN ("HL_BA_1"."NEUR_1_46" >= 0.0) THEN "HL_BA_1"."NEUR_1_46" ELSE 0.0 END AS "NEUR_1_46", CASE WHEN ("HL_BA_1"."NEUR_1_47" >= 0.0) THEN "HL_BA_1"."NEUR_1_47" ELSE 0.0 END AS "NEUR_1_47", CASE WHEN ("HL_BA_1"."NEUR_1_48" >= 0.0) THEN "HL_BA_1"."NEUR_1_48" ELSE 0.0 END AS "NEUR_1_48", CASE WHEN ("HL_BA_1"."NEUR_1_49" >= 0.0) THEN "HL_BA_1"."NEUR_1_49" ELSE 0.0 END AS "NEUR_1_49", CASE WHEN ("HL_BA_1"."NEUR_1_50" >= 0.0) THEN "HL_BA_1"."NEUR_1_50" ELSE 0.0 END AS "NEUR_1_50", CASE WHEN ("HL_BA_1"."NEUR_1_51" >= 0.0) THEN "HL_BA_1"."NEUR_1_51" ELSE 0.0 END AS "NEUR_1_51", CASE WHEN ("HL_BA_1"."NEUR_1_52" >= 0.0) THEN "HL_BA_1"."NEUR_1_52" ELSE 0.0 END AS "NEUR_1_52", CASE WHEN ("HL_BA_1"."NEUR_1_53" >= 0.0) THEN "HL_BA_1"."NEUR_1_53" ELSE 0.0 END AS "NEUR_1_53", CASE WHEN ("HL_BA_1"."NEUR_1_54" >= 0.0) THEN "HL_BA_1"."NEUR_1_54" ELSE 0.0 END AS "NEUR_1_54", CASE WHEN ("HL_BA_1"."NEUR_1_55" >= 0.0) THEN "HL_BA_1"."NEUR_1_55" ELSE 0.0 END AS "NEUR_1_55", CASE WHEN ("HL_BA_1"."NEUR_1_56" >= 0.0) THEN "HL_BA_1"."NEUR_1_56" ELSE 0.0 END AS "NEUR_1_56", CASE WHEN ("HL_BA_1"."NEUR_1_57" >= 0.0) THEN "HL_BA_1"."NEUR_1_57" ELSE 0.0 END AS "NEUR_1_57", CASE WHEN ("HL_BA_1"."NEUR_1_58" >= 0.0) THEN "HL_BA_1"."NEUR_1_58" ELSE 0.0 END AS "NEUR_1_58", CASE WHEN ("HL_BA_1"."NEUR_1_59" >= 0.0) THEN "HL_BA_1"."NEUR_1_59" ELSE 0.0 END AS "NEUR_1_59", CASE WHEN ("HL_BA_1"."NEUR_1_60" >= 0.0) THEN "HL_BA_1"."NEUR_1_60" ELSE 0.0 END AS "NEUR_1_60", CASE WHEN ("HL_BA_1"."NEUR_1_61" >= 0.0) THEN "HL_BA_1"."NEUR_1_61" ELSE 0.0 END AS "NEUR_1_61", CASE WHEN ("HL_BA_1"."NEUR_1_62" >= 0.0) THEN "HL_BA_1"."NEUR_1_62" ELSE 0.0 END AS "NEUR_1_62", CASE WHEN ("HL_BA_1"."NEUR_1_63" >= 0.0) THEN "HL_BA_1"."NEUR_1_63" ELSE 0.0 END AS "NEUR_1_63", CASE WHEN ("HL_BA_1"."NEUR_1_64" >= 0.0) THEN "HL_BA_1"."NEUR_1_64" ELSE 0.0 END AS "NEUR_1_64", CASE WHEN ("HL_BA_1"."NEUR_1_65" >= 0.0) THEN "HL_BA_1"."NEUR_1_65" ELSE 0.0 END AS "NEUR_1_65", CASE WHEN ("HL_BA_1"."NEUR_1_66" >= 0.0) THEN "HL_BA_1"."NEUR_1_66" ELSE 0.0 END AS "NEUR_1_66", CASE WHEN ("HL_BA_1"."NEUR_1_67" >= 0.0) THEN "HL_BA_1"."NEUR_1_67" ELSE 0.0 END AS "NEUR_1_67", CASE WHEN ("HL_BA_1"."NEUR_1_68" >= 0.0) THEN "HL_BA_1"."NEUR_1_68" ELSE 0.0 END AS "NEUR_1_68", CASE WHEN ("HL_BA_1"."NEUR_1_69" >= 0.0) THEN "HL_BA_1"."NEUR_1_69" ELSE 0.0 END AS "NEUR_1_69", CASE WHEN ("HL_BA_1"."NEUR_1_70" >= 0.0) THEN "HL_BA_1"."NEUR_1_70" ELSE 0.0 END AS "NEUR_1_70", CASE WHEN ("HL_BA_1"."NEUR_1_71" >= 0.0) THEN "HL_BA_1"."NEUR_1_71" ELSE 0.0 END AS "NEUR_1_71", CASE WHEN ("HL_BA_1"."NEUR_1_72" >= 0.0) THEN "HL_BA_1"."NEUR_1_72" ELSE 0.0 END AS "NEUR_1_72", CASE WHEN ("HL_BA_1"."NEUR_1_73" >= 0.0) THEN "HL_BA_1"."NEUR_1_73" ELSE 0.0 END AS "NEUR_1_73", CASE WHEN ("HL_BA_1"."NEUR_1_74" >= 0.0) THEN "HL_BA_1"."NEUR_1_74" ELSE 0.0 END AS "NEUR_1_74", CASE WHEN ("HL_BA_1"."NEUR_1_75" >= 0.0) THEN "HL_BA_1"."NEUR_1_75" ELSE 0.0 END AS "NEUR_1_75", CASE WHEN ("HL_BA_1"."NEUR_1_76" >= 0.0) THEN "HL_BA_1"."NEUR_1_76" ELSE 0.0 END AS "NEUR_1_76", CASE WHEN ("HL_BA_1"."NEUR_1_77" >= 0.0) THEN "HL_BA_1"."NEUR_1_77" ELSE 0.0 END AS "NEUR_1_77", CASE WHEN ("HL_BA_1"."NEUR_1_78" >= 0.0) THEN "HL_BA_1"."NEUR_1_78" ELSE 0.0 END AS "NEUR_1_78", CASE WHEN ("HL_BA_1"."NEUR_1_79" >= 0.0) THEN "HL_BA_1"."NEUR_1_79" ELSE 0.0 END AS "NEUR_1_79", CASE WHEN ("HL_BA_1"."NEUR_1_80" >= 0.0) THEN "HL_BA_1"."NEUR_1_80" ELSE 0.0 END AS "NEUR_1_80", CASE WHEN ("HL_BA_1"."NEUR_1_81" >= 0.0) THEN "HL_BA_1"."NEUR_1_81" ELSE 0.0 END AS "NEUR_1_81", CASE WHEN ("HL_BA_1"."NEUR_1_82" >= 0.0) THEN "HL_BA_1"."NEUR_1_82" ELSE 0.0 END AS "NEUR_1_82", CASE WHEN ("HL_BA_1"."NEUR_1_83" >= 0.0) THEN "HL_BA_1"."NEUR_1_83" ELSE 0.0 END AS "NEUR_1_83", CASE WHEN ("HL_BA_1"."NEUR_1_84" >= 0.0) THEN "HL_BA_1"."NEUR_1_84" ELSE 0.0 END AS "NEUR_1_84", CASE WHEN ("HL_BA_1"."NEUR_1_85" >= 0.0) THEN "HL_BA_1"."NEUR_1_85" ELSE 0.0 END AS "NEUR_1_85", CASE WHEN ("HL_BA_1"."NEUR_1_86" >= 0.0) THEN "HL_BA_1"."NEUR_1_86" ELSE 0.0 END AS "NEUR_1_86", CASE WHEN ("HL_BA_1"."NEUR_1_87" >= 0.0) THEN "HL_BA_1"."NEUR_1_87" ELSE 0.0 END AS "NEUR_1_87", CASE WHEN ("HL_BA_1"."NEUR_1_88" >= 0.0) THEN "HL_BA_1"."NEUR_1_88" ELSE 0.0 END AS "NEUR_1_88", CASE WHEN ("HL_BA_1"."NEUR_1_89" >= 0.0) THEN "HL_BA_1"."NEUR_1_89" ELSE 0.0 END AS "NEUR_1_89", CASE WHEN ("HL_BA_1"."NEUR_1_90" >= 0.0) THEN "HL_BA_1"."NEUR_1_90" ELSE 0.0 END AS "NEUR_1_90", CASE WHEN ("HL_BA_1"."NEUR_1_91" >= 0.0) THEN "HL_BA_1"."NEUR_1_91" ELSE 0.0 END AS "NEUR_1_91", CASE WHEN ("HL_BA_1"."NEUR_1_92" >= 0.0) THEN "HL_BA_1"."NEUR_1_92" ELSE 0.0 END AS "NEUR_1_92", CASE WHEN ("HL_BA_1"."NEUR_1_93" >= 0.0) THEN "HL_BA_1"."NEUR_1_93" ELSE 0.0 END AS "NEUR_1_93", CASE WHEN ("HL_BA_1"."NEUR_1_94" >= 0.0) THEN "HL_BA_1"."NEUR_1_94" ELSE 0.0 END AS "NEUR_1_94", CASE WHEN ("HL_BA_1"."NEUR_1_95" >= 0.0) THEN "HL_BA_1"."NEUR_1_95" ELSE 0.0 END AS "NEUR_1_95", CASE WHEN ("HL_BA_1"."NEUR_1_96" >= 0.0) THEN "HL_BA_1"."NEUR_1_96" ELSE 0.0 END AS "NEUR_1_96", CASE WHEN ("HL_BA_1"."NEUR_1_97" >= 0.0) THEN "HL_BA_1"."NEUR_1_97" ELSE 0.0 END AS "NEUR_1_97", CASE WHEN ("HL_BA_1"."NEUR_1_98" >= 0.0) THEN "HL_BA_1"."NEUR_1_98" ELSE 0.0 END AS "NEUR_1_98", CASE WHEN ("HL_BA_1"."NEUR_1_99" >= 0.0) THEN "HL_BA_1"."NEUR_1_99" ELSE 0.0 END AS "NEUR_1_99", CASE WHEN ("HL_BA_1"."NEUR_1_100" >= 0.0) THEN "HL_BA_1"."NEUR_1_100" ELSE 0.0 END AS "NEUR_1_100" 
FROM "HL_BA_1"), 
"OL_BA" AS 
(SELECT "HL_1"."KEY" AS "KEY", -0.329963886496 * "HL_1"."NEUR_1_1" + -0.188622922675 * "HL_1"."NEUR_1_2" + 0.28508539376 * "HL_1"."NEUR_1_3" + -0.274985077111 * "HL_1"."NEUR_1_4" + 0.199309961145 * "HL_1"."NEUR_1_5" + 0.117348378341 * "HL_1"."NEUR_1_6" + -0.180970081953 * "HL_1"."NEUR_1_7" + -0.265097830867 * "HL_1"."NEUR_1_8" + 0.290225604337 * "HL_1"."NEUR_1_9" + -0.196187780154 * "HL_1"."NEUR_1_10" + -0.187092824559 * "HL_1"."NEUR_1_11" + -0.00503717968033 * "HL_1"."NEUR_1_12" + 0.44914087718 * "HL_1"."NEUR_1_13" + -0.298215015922 * "HL_1"."NEUR_1_14" + -0.286639149228 * "HL_1"."NEUR_1_15" + -0.0964047325776 * "HL_1"."NEUR_1_16" + -0.180095796581 * "HL_1"."NEUR_1_17" + 0.28070748507 * "HL_1"."NEUR_1_18" + -0.213520091729 * "HL_1"."NEUR_1_19" + 0.251105857385 * "HL_1"."NEUR_1_20" + -0.24826112139 * "HL_1"."NEUR_1_21" + -0.0614510406551 * "HL_1"."NEUR_1_22" + 0.281547944197 * "HL_1"."NEUR_1_23" + 0.222742821671 * "HL_1"."NEUR_1_24" + 0.3371703704 * "HL_1"."NEUR_1_25" + 0.355407977661 * "HL_1"."NEUR_1_26" + 0.230434519502 * "HL_1"."NEUR_1_27" + 0.200017691313 * "HL_1"."NEUR_1_28" + -0.311074398384 * "HL_1"."NEUR_1_29" + -0.190573177617 * "HL_1"."NEUR_1_30" + -0.39040064407 * "HL_1"."NEUR_1_31" + -0.182338047318 * "HL_1"."NEUR_1_32" + -0.00846973804668 * "HL_1"."NEUR_1_33" + 0.182455742409 * "HL_1"."NEUR_1_34" + 0.190723975619 * "HL_1"."NEUR_1_35" + 0.431105159127 * "HL_1"."NEUR_1_36" + -0.343695993084 * "HL_1"."NEUR_1_37" + -0.328534969574 * "HL_1"."NEUR_1_38" + 0.227868043034 * "HL_1"."NEUR_1_39" + 0.159308202041 * "HL_1"."NEUR_1_40" + 0.249754194149 * "HL_1"."NEUR_1_41" + 0.323885872337 * "HL_1"."NEUR_1_42" + 0.312068306085 * "HL_1"."NEUR_1_43" + -0.12153508467 * "HL_1"."NEUR_1_44" + -0.193892709333 * "HL_1"."NEUR_1_45" + -0.186677245741 * "HL_1"."NEUR_1_46" + 0.179855030822 * "HL_1"."NEUR_1_47" + 0.187817488207 * "HL_1"."NEUR_1_48" + 0.30086547408 * "HL_1"."NEUR_1_49" + -0.379338156523 * "HL_1"."NEUR_1_50" + 0.0913998619155 * "HL_1"."NEUR_1_51" + 0.25306302906 * "HL_1"."NEUR_1_52" + -0.31665321389 * "HL_1"."NEUR_1_53" + -0.331647846435 * "HL_1"."NEUR_1_54" + 0.289626052174 * "HL_1"."NEUR_1_55" + -0.405257223883 * "HL_1"."NEUR_1_56" + -0.220462577384 * "HL_1"."NEUR_1_57" + -0.266955953676 * "HL_1"."NEUR_1_58" + 0.161741504333 * "HL_1"."NEUR_1_59" + 0.314719781742 * "HL_1"."NEUR_1_60" + -0.120369523618 * "HL_1"."NEUR_1_61" + 0.257268994935 * "HL_1"."NEUR_1_62" + -0.142535233551 * "HL_1"."NEUR_1_63" + -0.188177434303 * "HL_1"."NEUR_1_64" + -0.180138075444 * "HL_1"."NEUR_1_65" + -0.178882403571 * "HL_1"."NEUR_1_66" + 0.18111511896 * "HL_1"."NEUR_1_67" + -0.0965205993303 * "HL_1"."NEUR_1_68" + 0.219886301807 * "HL_1"."NEUR_1_69" + 0.141165028113 * "HL_1"."NEUR_1_70" + -0.196611699945 * "HL_1"."NEUR_1_71" + 0.0706608513747 * "HL_1"."NEUR_1_72" + 0.270872038096 * "HL_1"."NEUR_1_73" + -0.201056167362 * "HL_1"."NEUR_1_74" + 0.267688195421 * "HL_1"."NEUR_1_75" + 0.217371378261 * "HL_1"."NEUR_1_76" + 0.2647159246 * "HL_1"."NEUR_1_77" + 0.187563113424 * "HL_1"."NEUR_1_78" + -0.330232359286 * "HL_1"."NEUR_1_79" + -0.0220772911994 * "HL_1"."NEUR_1_80" + -0.215369051732 * "HL_1"."NEUR_1_81" + -0.225099075337 * "HL_1"."NEUR_1_82" + -0.400857970341 * "HL_1"."NEUR_1_83" + 0.303865073453 * "HL_1"."NEUR_1_84" + -0.350635631496 * "HL_1"."NEUR_1_85" + 0.178560960607 * "HL_1"."NEUR_1_86" + 0.316929162556 * "HL_1"."NEUR_1_87" + 0.169456087446 * "HL_1"."NEUR_1_88" + 0.441447397056 * "HL_1"."NEUR_1_89" + -0.356039028194 * "HL_1"."NEUR_1_90" + 0.287253067815 * "HL_1"."NEUR_1_91" + -0.224844153192 * "HL_1"."NEUR_1_92" + 0.142614296795 * "HL_1"."NEUR_1_93" + -0.237303840824 * "HL_1"."NEUR_1_94" + 0.222588519999 * "HL_1"."NEUR_1_95" + -0.0549460388447 * "HL_1"."NEUR_1_96" + -0.280161210976 * "HL_1"."NEUR_1_97" + -0.243196601035 * "HL_1"."NEUR_1_98" + 0.190093830681 * "HL_1"."NEUR_1_99" + 0.234656203161 * "HL_1"."NEUR_1_100" + -0.0304475399857 AS "NEUR_2_1" 
FROM "HL_1"), 
"OL" AS 
(SELECT "OL_BA"."KEY" AS "KEY", 1.0 / (1.0 + exp(-"OL_BA"."NEUR_2_1")) AS "NEUR_2_1" 
FROM "OL_BA"), 
orig_cte AS 
(SELECT "OL"."KEY" AS "KEY", CAST(NULL AS FLOAT) AS "Score_-1", CAST(NULL AS FLOAT) AS "Score_1", 1.0 - "OL"."NEUR_2_1" AS "Proba_-1", "OL"."NEUR_2_1" AS "Proba_1", CAST(NULL AS FLOAT) AS "LogProba_-1", CAST(NULL AS FLOAT) AS "LogProba_1", CAST(NULL AS FLOAT) AS "Decision" 
FROM "OL"), 
score_class_union AS 
(SELECT scu."KEY" AS "KEY", scu.class AS class, scu."LogProba" AS "LogProba", scu."Proba" AS "Proba", scu."Score" AS "Score" 
FROM (SELECT orig_cte."KEY" AS "KEY", -1 AS class, orig_cte."LogProba_-1" AS "LogProba", orig_cte."Proba_-1" AS "Proba", orig_cte."Score_-1" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 1 AS class, orig_cte."LogProba_1" AS "LogProba", orig_cte."Proba_1" AS "Proba", orig_cte."Score_1" AS "Score" 
FROM orig_cte) scu), 
score_max AS 
(SELECT orig_cte."KEY" AS "KEY", orig_cte."Score_-1" AS "Score_-1", orig_cte."Score_1" AS "Score_1", orig_cte."Proba_-1" AS "Proba_-1", orig_cte."Proba_1" AS "Proba_1", orig_cte."LogProba_-1" AS "LogProba_-1", orig_cte."LogProba_1" AS "LogProba_1", orig_cte."Decision" AS "Decision", (SELECT max(score_class_union."LogProba") AS max_1 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_LogProba", (SELECT max(score_class_union."Proba") AS max_2 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_Proba", (SELECT max(score_class_union."Score") AS max_3 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_Score" 
FROM orig_cte), 
arg_max_cte AS 
(SELECT score_max."KEY" AS "KEY", score_max."Score_-1" AS "Score_-1", score_max."Score_1" AS "Score_1", score_max."Proba_-1" AS "Proba_-1", score_max."Proba_1" AS "Proba_1", score_max."LogProba_-1" AS "LogProba_-1", score_max."LogProba_1" AS "LogProba_1", score_max."Decision" AS "Decision", score_max."max_LogProba" AS "max_LogProba", score_max."max_Proba" AS "max_Proba", score_max."max_Score" AS "max_Score", (SELECT min(score_class_union.class) AS min_1 
FROM score_class_union 
WHERE score_max."max_LogProba" = score_class_union."LogProba" AND score_max."KEY" = score_class_union."KEY") AS "arg_max_LogProba", (SELECT min(score_class_union.class) AS min_2 
FROM score_class_union 
WHERE score_max."max_Proba" = score_class_union."Proba" AND score_max."KEY" = score_class_union."KEY") AS "arg_max_Proba", (SELECT min(score_class_union.class) AS min_3 
FROM score_class_union 
WHERE score_max."max_Score" = score_class_union."Score" AND score_max."KEY" = score_class_union."KEY") AS "arg_max_Score" 
FROM score_max)
 SELECT arg_max_cte."KEY" AS "KEY", arg_max_cte."Score_-1" AS "Score_-1", arg_max_cte."Score_1" AS "Score_1", arg_max_cte."Proba_-1" AS "Proba_-1", arg_max_cte."Proba_1" AS "Proba_1", CASE WHEN (arg_max_cte."Proba_-1" > 0.0) THEN ln(arg_max_cte."Proba_-1") ELSE -BINARY_FLOAT_INFINITY END AS "LogProba_-1", CASE WHEN (arg_max_cte."Proba_1" > 0.0) THEN ln(arg_max_cte."Proba_1") ELSE -BINARY_FLOAT_INFINITY END AS "LogProba_1", arg_max_cte."arg_max_Proba" AS "Decision" 
FROM arg_max_cte