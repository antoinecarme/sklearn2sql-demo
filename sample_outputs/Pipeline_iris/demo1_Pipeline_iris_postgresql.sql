-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH "SV_data" AS 
(SELECT "Values".sv_idx AS sv_idx, "Values".dual_coeff AS dual_coeff, "Values".sv_0 AS sv_0, "Values".sv_1 AS sv_1, "Values".sv_2 AS sv_2, "Values".sv_3 AS sv_3 
FROM (SELECT 0 AS sv_idx, 0.0 AS dual_coeff, 4.3 AS sv_0, 3.0 AS sv_1, 1.1 AS sv_2, 0.1 AS sv_3 UNION ALL SELECT 1 AS sv_idx, 0.438624410446 AS dual_coeff, 5.7 AS sv_0, 4.4 AS sv_1, 1.5 AS sv_2, 0.4 AS sv_3 UNION ALL SELECT 2 AS sv_idx, 0.0666311583128 AS dual_coeff, 5.7 AS sv_0, 3.8 AS sv_1, 1.7 AS sv_2, 0.3 AS sv_3 UNION ALL SELECT 3 AS sv_idx, 0.00227702074997 AS dual_coeff, 5.1 AS sv_0, 3.3 AS sv_1, 1.7 AS sv_2, 0.5 AS sv_3 UNION ALL SELECT 4 AS sv_idx, 0.358431125728 AS dual_coeff, 4.8 AS sv_0, 3.4 AS sv_1, 1.9 AS sv_2, 0.2 AS sv_3 UNION ALL SELECT 5 AS sv_idx, 1.0 AS dual_coeff, 4.5 AS sv_0, 2.3 AS sv_1, 1.3 AS sv_2, 0.3 AS sv_3 UNION ALL SELECT 6 AS sv_idx, 0.458858234397 AS dual_coeff, 5.1 AS sv_0, 3.8 AS sv_1, 1.9 AS sv_2, 0.4 AS sv_3 UNION ALL SELECT 7 AS sv_idx, -0.551710082049 AS dual_coeff, 7.0 AS sv_0, 3.2 AS sv_1, 4.7 AS sv_2, 1.4 AS sv_3 UNION ALL SELECT 8 AS sv_idx, -0.0 AS dual_coeff, 6.9 AS sv_0, 3.1 AS sv_1, 4.9 AS sv_2, 1.5 AS sv_3 UNION ALL SELECT 9 AS sv_idx, -0.0 AS dual_coeff, 6.5 AS sv_0, 2.8 AS sv_1, 4.6 AS sv_2, 1.5 AS sv_3 UNION ALL SELECT 10 AS sv_idx, -0.0 AS dual_coeff, 6.3 AS sv_0, 3.3 AS sv_1, 4.7 AS sv_2, 1.6 AS sv_3 UNION ALL SELECT 11 AS sv_idx, -0.54282930661 AS dual_coeff, 4.9 AS sv_0, 2.4 AS sv_1, 3.3 AS sv_2, 1.0 AS sv_3 UNION ALL SELECT 12 AS sv_idx, -0.0 AS dual_coeff, 5.0 AS sv_0, 2.0 AS sv_1, 3.5 AS sv_2, 1.0 AS sv_3 UNION ALL SELECT 13 AS sv_idx, -0.0 AS dual_coeff, 6.1 AS sv_0, 2.9 AS sv_1, 4.7 AS sv_2, 1.4 AS sv_3 UNION ALL SELECT 14 AS sv_idx, -0.0 AS dual_coeff, 5.6 AS sv_0, 3.0 AS sv_1, 4.5 AS sv_2, 1.5 AS sv_3 UNION ALL SELECT 15 AS sv_idx, -0.0 AS dual_coeff, 6.2 AS sv_0, 2.2 AS sv_1, 4.5 AS sv_2, 1.5 AS sv_3 UNION ALL SELECT 16 AS sv_idx, -0.0 AS dual_coeff, 5.9 AS sv_0, 3.2 AS sv_1, 4.8 AS sv_2, 1.8 AS sv_3 UNION ALL SELECT 17 AS sv_idx, -0.0 AS dual_coeff, 6.3 AS sv_0, 2.5 AS sv_1, 4.9 AS sv_2, 1.5 AS sv_3 UNION ALL SELECT 18 AS sv_idx, -0.0 AS dual_coeff, 6.8 AS sv_0, 2.8 AS sv_1, 4.8 AS sv_2, 1.4 AS sv_3 UNION ALL SELECT 19 AS sv_idx, -0.166490971815 AS dual_coeff, 6.7 AS sv_0, 3.0 AS sv_1, 5.0 AS sv_2, 1.7 AS sv_3 UNION ALL SELECT 20 AS sv_idx, -0.0 AS dual_coeff, 6.0 AS sv_0, 2.9 AS sv_1, 4.5 AS sv_2, 1.5 AS sv_3 UNION ALL SELECT 21 AS sv_idx, -0.0637915891609 AS dual_coeff, 6.0 AS sv_0, 2.7 AS sv_1, 5.1 AS sv_2, 1.6 AS sv_3 UNION ALL SELECT 22 AS sv_idx, -0.0 AS dual_coeff, 5.4 AS sv_0, 3.0 AS sv_1, 4.5 AS sv_2, 1.5 AS sv_3 UNION ALL SELECT 23 AS sv_idx, -0.0 AS dual_coeff, 6.0 AS sv_0, 3.4 AS sv_1, 4.5 AS sv_2, 1.6 AS sv_3 UNION ALL SELECT 24 AS sv_idx, -0.0 AS dual_coeff, 6.7 AS sv_0, 3.1 AS sv_1, 4.7 AS sv_2, 1.5 AS sv_3 UNION ALL SELECT 25 AS sv_idx, -1.0 AS dual_coeff, 5.1 AS sv_0, 2.5 AS sv_1, 3.0 AS sv_2, 1.1 AS sv_3 UNION ALL SELECT 26 AS sv_idx, -0.117576081311 AS dual_coeff, 6.3 AS sv_0, 3.3 AS sv_1, 6.0 AS sv_2, 2.5 AS sv_3 UNION ALL SELECT 27 AS sv_idx, -0.733765504934 AS dual_coeff, 4.9 AS sv_0, 2.5 AS sv_1, 4.5 AS sv_2, 1.7 AS sv_3 UNION ALL SELECT 28 AS sv_idx, -0.0 AS dual_coeff, 6.5 AS sv_0, 3.2 AS sv_1, 5.1 AS sv_2, 2.0 AS sv_3 UNION ALL SELECT 29 AS sv_idx, -0.427235940618 AS dual_coeff, 7.7 AS sv_0, 2.6 AS sv_1, 6.9 AS sv_2, 2.3 AS sv_3 UNION ALL SELECT 30 AS sv_idx, -0.0999300175851 AS dual_coeff, 6.0 AS sv_0, 2.2 AS sv_1, 5.0 AS sv_2, 1.5 AS sv_3 UNION ALL SELECT 31 AS sv_idx, -0.0 AS dual_coeff, 5.6 AS sv_0, 2.8 AS sv_1, 4.9 AS sv_2, 2.0 AS sv_3 UNION ALL SELECT 32 AS sv_idx, -0.0 AS dual_coeff, 6.3 AS sv_0, 2.7 AS sv_1, 4.9 AS sv_2, 1.8 AS sv_3 UNION ALL SELECT 33 AS sv_idx, -0.0 AS dual_coeff, 6.2 AS sv_0, 2.8 AS sv_1, 4.8 AS sv_2, 1.8 AS sv_3 UNION ALL SELECT 34 AS sv_idx, -0.0 AS dual_coeff, 6.1 AS sv_0, 3.0 AS sv_1, 4.9 AS sv_2, 1.8 AS sv_3 UNION ALL SELECT 35 AS sv_idx, -0.0 AS dual_coeff, 7.2 AS sv_0, 3.0 AS sv_1, 5.8 AS sv_2, 1.6 AS sv_3 UNION ALL SELECT 36 AS sv_idx, -0.405339510491 AS dual_coeff, 7.9 AS sv_0, 3.8 AS sv_1, 6.4 AS sv_2, 2.0 AS sv_3 UNION ALL SELECT 37 AS sv_idx, -0.0 AS dual_coeff, 6.3 AS sv_0, 2.8 AS sv_1, 5.1 AS sv_2, 1.5 AS sv_3 UNION ALL SELECT 38 AS sv_idx, -0.0 AS dual_coeff, 6.1 AS sv_0, 2.6 AS sv_1, 5.6 AS sv_2, 1.4 AS sv_3 UNION ALL SELECT 39 AS sv_idx, -0.0 AS dual_coeff, 6.0 AS sv_0, 3.0 AS sv_1, 4.8 AS sv_2, 1.8 AS sv_3 UNION ALL SELECT 40 AS sv_idx, -0.161408417348 AS dual_coeff, 6.9 AS sv_0, 3.1 AS sv_1, 5.1 AS sv_2, 2.3 AS sv_3 UNION ALL SELECT 41 AS sv_idx, -0.0 AS dual_coeff, 5.8 AS sv_0, 2.7 AS sv_1, 5.1 AS sv_2, 1.9 AS sv_3 UNION ALL SELECT 42 AS sv_idx, -0.0 AS dual_coeff, 6.3 AS sv_0, 2.5 AS sv_1, 5.0 AS sv_2, 1.9 AS sv_3 UNION ALL SELECT 43 AS sv_idx, -0.0 AS dual_coeff, 6.5 AS sv_0, 3.0 AS sv_1, 5.2 AS sv_2, 2.0 AS sv_3 UNION ALL SELECT 44 AS sv_idx, -0.0 AS dual_coeff, 5.9 AS sv_0, 3.0 AS sv_1, 5.1 AS sv_2, 1.8 AS sv_3) AS "Values"), 
linear_kernel_cte AS 
(SELECT "ADS"."KEY" AS "KEY", (SELECT sum("SV_data".dual_coeff * exp(CASE WHEN (-0.25 * (power("ADS"."Feature_0" - "SV_data".sv_0, 2) + power("ADS"."Feature_1" - "SV_data".sv_1, 2) + power("ADS"."Feature_2" - "SV_data".sv_2, 2) + power("ADS"."Feature_3" - "SV_data".sv_3, 2)) <= -100.0) THEN -100.0 ELSE -0.25 * (power("ADS"."Feature_0" - "SV_data".sv_0, 2) + power("ADS"."Feature_1" - "SV_data".sv_1, 2) + power("ADS"."Feature_2" - "SV_data".sv_2, 2) + power("ADS"."Feature_3" - "SV_data".sv_3, 2)) END)) AS sum_1 
FROM "SV_data") + -0.0398569105121 AS dot_product 
FROM "INPUT_DATA" AS "ADS")
 SELECT linear_kernel_cte."KEY" AS "KEY", -linear_kernel_cte.dot_product AS "Score_0", linear_kernel_cte.dot_product AS "Score_1", CAST(NULL AS FLOAT(53)) AS "Score_2", CAST(NULL AS FLOAT(53)) AS "Proba_0", CAST(NULL AS FLOAT(53)) AS "Proba_1", CAST(NULL AS FLOAT(53)) AS "Proba_2", CAST(NULL AS FLOAT(53)) AS "LogProba_0", CAST(NULL AS FLOAT(53)) AS "LogProba_1", CAST(NULL AS FLOAT(53)) AS "LogProba_2", CASE WHEN (linear_kernel_cte.dot_product >= 0.0) THEN 1 ELSE 0 END AS "Decision" 
FROM linear_kernel_cte