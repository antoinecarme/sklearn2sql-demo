-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH "DT_node_data" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Proba_0.0" AS "Proba_0.0", "Values"."LogProba_0.0" AS "LogProba_0.0", "Values"."Proba_1.0" AS "Proba_1.0", "Values"."LogProba_1.0" AS "LogProba_1.0", "Values"."Proba_2.0" AS "Proba_2.0", "Values"."LogProba_2.0" AS "LogProba_2.0", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'anova_output_2' AS feature, 1.1571691036224365 AS threshold, 94 AS count, 0 AS depth, 0.31333333333333335 AS "Proba_0.0", -1.16048769239 AS "LogProba_0.0", 0.29333333333333333 AS "Proba_1.0", -1.22644566018 AS "LogProba_1.0", 0.3933333333333333 AS "Proba_2.0", -0.933097850191 AS "LogProba_2.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 1 AS node_id, 'anova_output_3' AS feature, -0.3215230703353882 AS threshold, 61 AS count, 1 AS depth, 0.5222222222222223 AS "Proba_0.0", -0.64966206862 AS "LogProba_0.0", 0.4666666666666667 AS "Proba_1.0", -0.762140052047 AS "LogProba_1.0", 0.011111111111111112 AS "Proba_2.0", -4.49980967033 AS "LogProba_2.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 2 AS node_id, 'anova_output_2' AS feature, -1.8018391132354736 AS threshold, 20 AS count, 2 AS depth, 0.06896551724137931 AS "Proba_0.0", -2.67414864943 AS "LogProba_0.0", 0.896551724137931 AS "Proba_1.0", -0.109199291965 AS "LogProba_1.0", 0.034482758620689655 AS "Proba_2.0", -3.36729582999 AS "LogProba_2.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 4 AS node_id, 'anova_output_4' AS feature, 0.49563461542129517 AS threshold, 18 AS count, 3 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.9629629629629629 AS "Proba_1.0", -0.0377403279828 AS "LogProba_1.0", 0.037037037037037035 AS "Proba_2.0", -3.295836866 AS "LogProba_2.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 4 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 7 AS node_id, 'anova_output_2' AS feature, -1.2273807525634766 AS threshold, 41 AS count, 2 AS depth, 0.7377049180327869 AS "Proba_0.0", -0.304211374403 AS "LogProba_0.0", 0.26229508196721313 AS "Proba_1.0", -1.33828514193 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 29 AS count, 3 AS depth, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 3 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 10 AS node_id, 'anova_output_4' AS feature, -0.5191078186035156 AS threshold, 33 AS count, 1 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.03333333333333333 AS "Proba_1.0", -3.40119738166 AS "LogProba_1.0", 0.9666666666666667 AS "Proba_2.0", -0.0339015516757 AS "LogProba_2.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 11 AS node_id, 'anova_output_5' AS feature, -0.05012727528810501 AS threshold, 2 AS count, 2 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.3333333333333333 AS "Proba_1.0", -1.09861228867 AS "LogProba_1.0", 0.6666666666666666 AS "Proba_2.0", -0.405465108108 AS "LogProba_2.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 14 AS node_id, 'anova_output_2' AS feature, 1.5713317394256592 AS threshold, 31 AS count, 2 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.017543859649122806 AS "Proba_1.0", -4.04305126783 AS "LogProba_1.0", 0.9824561403508771 AS "Proba_2.0", -0.0176995770994 AS "LogProba_2.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 15 AS node_id, 'anova_output_4' AS feature, -0.15936073660850525 AS threshold, 6 AS count, 3 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.1111111111111111 AS "Proba_1.0", -2.19722457734 AS "LogProba_1.0", 0.8888888888888888 AS "Proba_2.0", -0.117783035656 AS "LogProba_2.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 16 AS node_id, 'anova_output_3' AS feature, -0.2468106746673584 AS threshold, 2 AS count, 4 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.5 AS "Proba_1.0", -0.69314718056 AS "LogProba_1.0", 0.5 AS "Proba_2.0", -0.69314718056 AS "LogProba_2.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 4 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 25 AS count, 3 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 2 AS "Decision" FROM DUAL) "Values"), 
"ADS_imp_1_OUT" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" IS NULL) THEN 5.84333333333 ELSE "ADS"."Feature_0" END AS impute_output_2, CASE WHEN ("ADS"."Feature_1" IS NULL) THEN 3.054 ELSE "ADS"."Feature_1" END AS impute_output_3, CASE WHEN ("ADS"."Feature_2" IS NULL) THEN 3.75866666667 ELSE "ADS"."Feature_2" END AS impute_output_4, CASE WHEN ("ADS"."Feature_3" IS NULL) THEN 1.19866666667 ELSE "ADS"."Feature_3" END AS impute_output_5 
FROM "INPUT_DATA" "ADS"), 
"ADS_ano_2_OUT" AS 
(SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", ("ADS_imp_1_OUT".impute_output_2 - 5.84333333333) * 0.361589677381 + ("ADS_imp_1_OUT".impute_output_3 - 3.054) * -0.0822688898922 + ("ADS_imp_1_OUT".impute_output_4 - 3.75866666667) * 0.856572105291 + ("ADS_imp_1_OUT".impute_output_5 - 1.19866666667) * 0.358843926248 AS anova_output_2, ("ADS_imp_1_OUT".impute_output_2 - 5.84333333333) * 0.656539883286 + ("ADS_imp_1_OUT".impute_output_3 - 3.054) * 0.729712371326 + ("ADS_imp_1_OUT".impute_output_4 - 3.75866666667) * -0.175767403429 + ("ADS_imp_1_OUT".impute_output_5 - 1.19866666667) * -0.074706470135 AS anova_output_3, ("ADS_imp_1_OUT".impute_output_2 - 5.84333333333) * -0.580997279828 + ("ADS_imp_1_OUT".impute_output_3 - 3.054) * 0.596418087938 + ("ADS_imp_1_OUT".impute_output_4 - 3.75866666667) * 0.072524075487 + ("ADS_imp_1_OUT".impute_output_5 - 1.19866666667) * 0.549060910727 AS anova_output_4, ("ADS_imp_1_OUT".impute_output_2 - 5.84333333333) * 0.317254547169 + ("ADS_imp_1_OUT".impute_output_3 - 3.054) * -0.324094352418 + ("ADS_imp_1_OUT".impute_output_4 - 3.75866666667) * -0.47971898733 + ("ADS_imp_1_OUT".impute_output_5 - 1.19866666667) * 0.751120560381 AS anova_output_5 
FROM "ADS_imp_1_OUT"), 
"DT_node_lookup" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anova_output_2 <= 1.1571691036224365) THEN CASE WHEN ("ADS_ano_2_OUT".anova_output_3 <= -0.3215230703353882) THEN CASE WHEN ("ADS_ano_2_OUT".anova_output_2 <= -1.8018391132354736) THEN 3 ELSE CASE WHEN ("ADS_ano_2_OUT".anova_output_4 <= 0.49563461542129517) THEN 5 ELSE 6 END END ELSE CASE WHEN ("ADS_ano_2_OUT".anova_output_2 <= -1.2273807525634766) THEN 8 ELSE 9 END END ELSE CASE WHEN ("ADS_ano_2_OUT".anova_output_4 <= -0.5191078186035156) THEN CASE WHEN ("ADS_ano_2_OUT".anova_output_5 <= -0.05012727528810501) THEN 12 ELSE 13 END ELSE CASE WHEN ("ADS_ano_2_OUT".anova_output_2 <= 1.5713317394256592) THEN CASE WHEN ("ADS_ano_2_OUT".anova_output_4 <= -0.15936073660850525) THEN CASE WHEN ("ADS_ano_2_OUT".anova_output_3 <= -0.2468106746673584) THEN 17 ELSE 18 END ELSE 19 END ELSE 20 END END END AS node_id 
FROM "ADS_ano_2_OUT"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", (SELECT "DT_node_data".node_id 
FROM "DT_node_data" 
WHERE "DT_node_data".node_id = "DT_node_lookup".node_id) AS node_id, (SELECT "DT_node_data".feature 
FROM "DT_node_data" 
WHERE "DT_node_data".node_id = "DT_node_lookup".node_id) AS feature, (SELECT "DT_node_data".threshold 
FROM "DT_node_data" 
WHERE "DT_node_data".node_id = "DT_node_lookup".node_id) AS threshold, (SELECT "DT_node_data".count 
FROM "DT_node_data" 
WHERE "DT_node_data".node_id = "DT_node_lookup".node_id) AS count, (SELECT "DT_node_data".depth 
FROM "DT_node_data" 
WHERE "DT_node_data".node_id = "DT_node_lookup".node_id) AS depth, (SELECT "DT_node_data"."Proba_0.0" 
FROM "DT_node_data" 
WHERE "DT_node_data".node_id = "DT_node_lookup".node_id) AS "Proba_0.0", (SELECT "DT_node_data"."LogProba_0.0" 
FROM "DT_node_data" 
WHERE "DT_node_data".node_id = "DT_node_lookup".node_id) AS "LogProba_0.0", (SELECT "DT_node_data"."Proba_1.0" 
FROM "DT_node_data" 
WHERE "DT_node_data".node_id = "DT_node_lookup".node_id) AS "Proba_1.0", (SELECT "DT_node_data"."LogProba_1.0" 
FROM "DT_node_data" 
WHERE "DT_node_data".node_id = "DT_node_lookup".node_id) AS "LogProba_1.0", (SELECT "DT_node_data"."Proba_2.0" 
FROM "DT_node_data" 
WHERE "DT_node_data".node_id = "DT_node_lookup".node_id) AS "Proba_2.0", (SELECT "DT_node_data"."LogProba_2.0" 
FROM "DT_node_data" 
WHERE "DT_node_data".node_id = "DT_node_lookup".node_id) AS "LogProba_2.0", (SELECT "DT_node_data"."Decision" 
FROM "DT_node_data" 
WHERE "DT_node_data".node_id = "DT_node_lookup".node_id) AS "Decision" 
FROM "DT_node_lookup"), 
"RF_Tree_0" AS 
(SELECT "DT_Output"."KEY" AS join_key_0, CAST(NULL AS FLOAT) AS "Score_0_0", "DT_Output"."Proba_0.0" AS "Proba_0_0", "DT_Output"."LogProba_0.0" AS "LogProba_0_0", CAST(NULL AS FLOAT) AS "Score_0_1", "DT_Output"."Proba_1.0" AS "Proba_0_1", "DT_Output"."LogProba_1.0" AS "LogProba_0_1", CAST(NULL AS FLOAT) AS "Score_0_2", "DT_Output"."Proba_2.0" AS "Proba_0_2", "DT_Output"."LogProba_2.0" AS "LogProba_0_2" 
FROM "DT_Output"), 
"DT_node_data_1" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Proba_0.0" AS "Proba_0.0", "Values"."LogProba_0.0" AS "LogProba_0.0", "Values"."Proba_1.0" AS "Proba_1.0", "Values"."LogProba_1.0" AS "LogProba_1.0", "Values"."Proba_2.0" AS "Proba_2.0", "Values"."LogProba_2.0" AS "LogProba_2.0", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'anova_output_2' AS feature, -1.5537705421447754 AS threshold, 100 AS count, 0 AS depth, 0.30666666666666664 AS "Proba_0.0", -1.18199389761 AS "LogProba_0.0", 0.41333333333333333 AS "Proba_1.0", -0.883500909051 AS "LogProba_1.0", 0.28 AS "Proba_2.0", -1.27296567581 AS "LogProba_2.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 33 AS count, 1 AS depth, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 2 AS node_id, 'anova_output_2' AS feature, 1.6096656322479248 AS threshold, 67 AS count, 1 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.5961538461538461 AS "Proba_1.0", -0.517256514096 AS "LogProba_1.0", 0.40384615384615385 AS "Proba_2.0", -0.906721280858 AS "LogProba_2.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 3 AS node_id, 'anova_output_4' AS feature, 0.1819707155227661 AS threshold, 43 AS count, 2 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.8985507246376812 AS "Proba_1.0", -0.106972119552 AS "LogProba_1.0", 0.10144927536231885 AS "Proba_2.0", -2.28819635554 AS "LogProba_2.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 4 AS node_id, 'anova_output_3' AS feature, -0.7562913298606873 AS threshold, 35 AS count, 3 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.9649122807017544 AS "Proba_1.0", -0.0357180826021 AS "LogProba_1.0", 0.03508771929824561 AS "Proba_2.0", -3.34990408727 AS "LogProba_2.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 5 AS node_id, 'anova_output_3' AS feature, -0.7933089733123779 AS threshold, 5 AS count, 4 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.7777777777777778 AS "Proba_1.0", -0.251314428281 AS "LogProba_1.0", 0.2222222222222222 AS "Proba_2.0", -1.50407739678 AS "LogProba_2.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 5 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 30 AS count, 4 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 9 AS node_id, 'anova_output_5' AS feature, -0.0014306902885437012 AS threshold, 8 AS count, 3 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.5833333333333334 AS "Proba_1.0", -0.538996500733 AS "LogProba_1.0", 0.4166666666666667 AS "Proba_2.0", -0.875468737354 AS "LogProba_2.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 10 AS node_id, 'anova_output_2' AS feature, 1.2529534101486206 AS threshold, 5 AS count, 4 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.875 AS "Proba_1.0", -0.133531392625 AS "LogProba_1.0", 0.125 AS "Proba_2.0", -2.07944154168 AS "LogProba_2.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 5 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 4 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 24 AS count, 2 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 2 AS "Decision" FROM DUAL) "Values"), 
"DT_node_lookup_1" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anova_output_2 <= -1.5537705421447754) THEN 1 ELSE CASE WHEN ("ADS_ano_2_OUT".anova_output_2 <= 1.6096656322479248) THEN CASE WHEN ("ADS_ano_2_OUT".anova_output_4 <= 0.1819707155227661) THEN CASE WHEN ("ADS_ano_2_OUT".anova_output_3 <= -0.7562913298606873) THEN CASE WHEN ("ADS_ano_2_OUT".anova_output_3 <= -0.7933089733123779) THEN 6 ELSE 7 END ELSE 8 END ELSE CASE WHEN ("ADS_ano_2_OUT".anova_output_5 <= -0.0014306902885437012) THEN CASE WHEN ("ADS_ano_2_OUT".anova_output_2 <= 1.2529534101486206) THEN 11 ELSE 12 END ELSE 13 END END ELSE 14 END END AS node_id 
FROM "ADS_ano_2_OUT"), 
"DT_Output_1" AS 
(SELECT "DT_node_lookup_1"."KEY" AS "KEY", (SELECT "DT_node_data_1".node_id 
FROM "DT_node_data_1" 
WHERE "DT_node_data_1".node_id = "DT_node_lookup_1".node_id) AS node_id, (SELECT "DT_node_data_1".feature 
FROM "DT_node_data_1" 
WHERE "DT_node_data_1".node_id = "DT_node_lookup_1".node_id) AS feature, (SELECT "DT_node_data_1".threshold 
FROM "DT_node_data_1" 
WHERE "DT_node_data_1".node_id = "DT_node_lookup_1".node_id) AS threshold, (SELECT "DT_node_data_1".count 
FROM "DT_node_data_1" 
WHERE "DT_node_data_1".node_id = "DT_node_lookup_1".node_id) AS count, (SELECT "DT_node_data_1".depth 
FROM "DT_node_data_1" 
WHERE "DT_node_data_1".node_id = "DT_node_lookup_1".node_id) AS depth, (SELECT "DT_node_data_1"."Proba_0.0" 
FROM "DT_node_data_1" 
WHERE "DT_node_data_1".node_id = "DT_node_lookup_1".node_id) AS "Proba_0.0", (SELECT "DT_node_data_1"."LogProba_0.0" 
FROM "DT_node_data_1" 
WHERE "DT_node_data_1".node_id = "DT_node_lookup_1".node_id) AS "LogProba_0.0", (SELECT "DT_node_data_1"."Proba_1.0" 
FROM "DT_node_data_1" 
WHERE "DT_node_data_1".node_id = "DT_node_lookup_1".node_id) AS "Proba_1.0", (SELECT "DT_node_data_1"."LogProba_1.0" 
FROM "DT_node_data_1" 
WHERE "DT_node_data_1".node_id = "DT_node_lookup_1".node_id) AS "LogProba_1.0", (SELECT "DT_node_data_1"."Proba_2.0" 
FROM "DT_node_data_1" 
WHERE "DT_node_data_1".node_id = "DT_node_lookup_1".node_id) AS "Proba_2.0", (SELECT "DT_node_data_1"."LogProba_2.0" 
FROM "DT_node_data_1" 
WHERE "DT_node_data_1".node_id = "DT_node_lookup_1".node_id) AS "LogProba_2.0", (SELECT "DT_node_data_1"."Decision" 
FROM "DT_node_data_1" 
WHERE "DT_node_data_1".node_id = "DT_node_lookup_1".node_id) AS "Decision" 
FROM "DT_node_lookup_1"), 
"RF_Tree_1" AS 
(SELECT "DT_Output_1"."KEY" AS join_key_1, CAST(NULL AS FLOAT) AS "Score_1_0", "DT_Output_1"."Proba_0.0" AS "Proba_1_0", "DT_Output_1"."LogProba_0.0" AS "LogProba_1_0", CAST(NULL AS FLOAT) AS "Score_1_1", "DT_Output_1"."Proba_1.0" AS "Proba_1_1", "DT_Output_1"."LogProba_1.0" AS "LogProba_1_1", CAST(NULL AS FLOAT) AS "Score_1_2", "DT_Output_1"."Proba_2.0" AS "Proba_1_2", "DT_Output_1"."LogProba_2.0" AS "LogProba_1_2" 
FROM "DT_Output_1"), 
"DT_node_data_2" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Proba_0.0" AS "Proba_0.0", "Values"."LogProba_0.0" AS "LogProba_0.0", "Values"."Proba_1.0" AS "Proba_1.0", "Values"."LogProba_1.0" AS "LogProba_1.0", "Values"."Proba_2.0" AS "Proba_2.0", "Values"."LogProba_2.0" AS "LogProba_2.0", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'anova_output_2' AS feature, -1.6057958602905273 AS threshold, 98 AS count, 0 AS depth, 0.34 AS "Proba_0.0", -1.07880966137 AS "LogProba_0.0", 0.30666666666666664 AS "Proba_1.0", -1.18199389761 AS "LogProba_1.0", 0.35333333333333333 AS "Proba_2.0", -1.04034338054 AS "LogProba_2.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 31 AS count, 1 AS depth, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 2 AS node_id, 'anova_output_2' AS feature, 1.3832025527954102 AS threshold, 67 AS count, 1 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.46464646464646464 AS "Proba_1.0", -0.766478453645 AS "LogProba_1.0", 0.5353535353535354 AS "Proba_2.0", -0.624827936582 AS "LogProba_2.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 3 AS node_id, 'anova_output_4' AS feature, 0.04408328980207443 AS threshold, 38 AS count, 2 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.8823529411764706 AS "Proba_1.0", -0.125163142954 AS "LogProba_1.0", 0.11764705882352941 AS "Proba_2.0", -2.1400661635 AS "LogProba_2.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 25 AS count, 3 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 5 AS node_id, 'anova_output_5' AS feature, -0.0014306902885437012 AS threshold, 13 AS count, 3 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.5714285714285714 AS "Proba_1.0", -0.559615787935 AS "LogProba_1.0", 0.42857142857142855 AS "Proba_2.0", -0.847297860387 AS "LogProba_2.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 6 AS node_id, 'anova_output_4' AS feature, 0.49563461542129517 AS threshold, 7 AS count, 4 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.875 AS "Proba_1.0", -0.133531392625 AS "LogProba_1.0", 0.125 AS "Proba_2.0", -2.07944154168 AS "LogProba_2.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 5 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 9 AS node_id, 'anova_output_4' AS feature, 0.16263610124588013 AS threshold, 6 AS count, 4 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.16666666666666666 AS "Proba_1.0", -1.79175946923 AS "LogProba_1.0", 0.8333333333333334 AS "Proba_2.0", -0.182321556794 AS "LogProba_2.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 10 AS node_id, 'anova_output_3' AS feature, -0.21547627449035645 AS threshold, 2 AS count, 5 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.5 AS "Proba_1.0", -0.69314718056 AS "LogProba_1.0", 0.5 AS "Proba_2.0", -0.69314718056 AS "LogProba_2.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 5 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 14 AS node_id, 'anova_output_2' AS feature, 1.4948625564575195 AS threshold, 29 AS count, 2 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.020833333333333332 AS "Proba_1.0", -3.87120101091 AS "LogProba_1.0", 0.9791666666666666 AS "Proba_2.0", -0.0210534091978 AS "LogProba_2.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 15 AS node_id, 'anova_output_4' AS feature, -0.24617186188697815 AS threshold, 5 AS count, 3 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.125 AS "Proba_1.0", -2.07944154168 AS "LogProba_1.0", 0.875 AS "Proba_2.0", -0.133531392625 AS "LogProba_2.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 4 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 24 AS count, 3 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 2 AS "Decision" FROM DUAL) "Values"), 
"DT_node_lookup_2" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anova_output_2 <= -1.6057958602905273) THEN 1 ELSE CASE WHEN ("ADS_ano_2_OUT".anova_output_2 <= 1.3832025527954102) THEN CASE WHEN ("ADS_ano_2_OUT".anova_output_4 <= 0.04408328980207443) THEN 4 ELSE CASE WHEN ("ADS_ano_2_OUT".anova_output_5 <= -0.0014306902885437012) THEN CASE WHEN ("ADS_ano_2_OUT".anova_output_4 <= 0.49563461542129517) THEN 7 ELSE 8 END ELSE CASE WHEN ("ADS_ano_2_OUT".anova_output_4 <= 0.16263610124588013) THEN CASE WHEN ("ADS_ano_2_OUT".anova_output_3 <= -0.21547627449035645) THEN 11 ELSE 12 END ELSE 13 END END END ELSE CASE WHEN ("ADS_ano_2_OUT".anova_output_2 <= 1.4948625564575195) THEN CASE WHEN ("ADS_ano_2_OUT".anova_output_4 <= -0.24617186188697815) THEN 16 ELSE 17 END ELSE 18 END END END AS node_id 
FROM "ADS_ano_2_OUT"), 
"DT_Output_2" AS 
(SELECT "DT_node_lookup_2"."KEY" AS "KEY", (SELECT "DT_node_data_2".node_id 
FROM "DT_node_data_2" 
WHERE "DT_node_data_2".node_id = "DT_node_lookup_2".node_id) AS node_id, (SELECT "DT_node_data_2".feature 
FROM "DT_node_data_2" 
WHERE "DT_node_data_2".node_id = "DT_node_lookup_2".node_id) AS feature, (SELECT "DT_node_data_2".threshold 
FROM "DT_node_data_2" 
WHERE "DT_node_data_2".node_id = "DT_node_lookup_2".node_id) AS threshold, (SELECT "DT_node_data_2".count 
FROM "DT_node_data_2" 
WHERE "DT_node_data_2".node_id = "DT_node_lookup_2".node_id) AS count, (SELECT "DT_node_data_2".depth 
FROM "DT_node_data_2" 
WHERE "DT_node_data_2".node_id = "DT_node_lookup_2".node_id) AS depth, (SELECT "DT_node_data_2"."Proba_0.0" 
FROM "DT_node_data_2" 
WHERE "DT_node_data_2".node_id = "DT_node_lookup_2".node_id) AS "Proba_0.0", (SELECT "DT_node_data_2"."LogProba_0.0" 
FROM "DT_node_data_2" 
WHERE "DT_node_data_2".node_id = "DT_node_lookup_2".node_id) AS "LogProba_0.0", (SELECT "DT_node_data_2"."Proba_1.0" 
FROM "DT_node_data_2" 
WHERE "DT_node_data_2".node_id = "DT_node_lookup_2".node_id) AS "Proba_1.0", (SELECT "DT_node_data_2"."LogProba_1.0" 
FROM "DT_node_data_2" 
WHERE "DT_node_data_2".node_id = "DT_node_lookup_2".node_id) AS "LogProba_1.0", (SELECT "DT_node_data_2"."Proba_2.0" 
FROM "DT_node_data_2" 
WHERE "DT_node_data_2".node_id = "DT_node_lookup_2".node_id) AS "Proba_2.0", (SELECT "DT_node_data_2"."LogProba_2.0" 
FROM "DT_node_data_2" 
WHERE "DT_node_data_2".node_id = "DT_node_lookup_2".node_id) AS "LogProba_2.0", (SELECT "DT_node_data_2"."Decision" 
FROM "DT_node_data_2" 
WHERE "DT_node_data_2".node_id = "DT_node_lookup_2".node_id) AS "Decision" 
FROM "DT_node_lookup_2"), 
"RF_Tree_2" AS 
(SELECT "DT_Output_2"."KEY" AS join_key_2, CAST(NULL AS FLOAT) AS "Score_2_0", "DT_Output_2"."Proba_0.0" AS "Proba_2_0", "DT_Output_2"."LogProba_0.0" AS "LogProba_2_0", CAST(NULL AS FLOAT) AS "Score_2_1", "DT_Output_2"."Proba_1.0" AS "Proba_2_1", "DT_Output_2"."LogProba_1.0" AS "LogProba_2_1", CAST(NULL AS FLOAT) AS "Score_2_2", "DT_Output_2"."Proba_2.0" AS "Proba_2_2", "DT_Output_2"."LogProba_2.0" AS "LogProba_2_2" 
FROM "DT_Output_2"), 
"DT_node_data_3" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Proba_0.0" AS "Proba_0.0", "Values"."LogProba_0.0" AS "LogProba_0.0", "Values"."Proba_1.0" AS "Proba_1.0", "Values"."LogProba_1.0" AS "LogProba_1.0", "Values"."Proba_2.0" AS "Proba_2.0", "Values"."LogProba_2.0" AS "LogProba_2.0", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'anova_output_2' AS feature, -1.5586481094360352 AS threshold, 96 AS count, 0 AS depth, 0.29333333333333333 AS "Proba_0.0", -1.22644566018 AS "LogProba_0.0", 0.3933333333333333 AS "Proba_1.0", -0.933097850191 AS "LogProba_1.0", 0.31333333333333335 AS "Proba_2.0", -1.16048769239 AS "LogProba_2.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 32 AS count, 1 AS depth, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 2 AS node_id, 'anova_output_2' AS feature, 1.3842015266418457 AS threshold, 64 AS count, 1 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.5566037735849056 AS "Proba_1.0", -0.585901650206 AS "LogProba_1.0", 0.44339622641509435 AS "Proba_2.0", -0.813291492402 AS "LogProba_2.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 3 AS node_id, 'anova_output_3' AS feature, -1.0962295532226562 AS threshold, 39 AS count, 2 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.8923076923076924 AS "Proba_1.0", -0.113944259349 AS "LogProba_1.0", 0.1076923076923077 AS "Proba_2.0", -2.22847712084 AS "LogProba_2.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 4 AS node_id, 'anova_output_3' AS feature, -1.226921796798706 AS threshold, 2 AS count, 3 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.25 AS "Proba_1.0", -1.38629436112 AS "LogProba_1.0", 0.75 AS "Proba_2.0", -0.287682072452 AS "LogProba_2.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 7 AS node_id, 'anova_output_2' AS feature, 1.1279940605163574 AS threshold, 37 AS count, 3 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.9344262295081968 AS "Proba_1.0", -0.0678225963388 AS "LogProba_1.0", 0.06557377049180328 AS "Proba_2.0", -2.72457950305 AS "LogProba_2.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 29 AS count, 4 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 9 AS node_id, 'anova_output_3' AS feature, 0.06412214040756226 AS threshold, 8 AS count, 4 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.5555555555555556 AS "Proba_1.0", -0.587786664902 AS "LogProba_1.0", 0.4444444444444444 AS "Proba_2.0", -0.810930216216 AS "LogProba_2.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 10 AS node_id, 'anova_output_5' AS feature, -0.11012723296880722 AS threshold, 6 AS count, 5 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.3333333333333333 AS "Proba_1.0", -1.09861228867 AS "LogProba_1.0", 0.6666666666666666 AS "Proba_2.0", -0.405465108108 AS "LogProba_2.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 12 AS node_id, 'anova_output_3' AS feature, -0.5442877411842346 AS threshold, 5 AS count, 6 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.2 AS "Proba_1.0", -1.60943791243 AS "LogProba_1.0", 0.8 AS "Proba_2.0", -0.223143551314 AS "LogProba_2.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 7 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 14 AS node_id, 'anova_output_3' AS feature, -0.2460320144891739 AS threshold, 3 AS count, 7 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.3333333333333333 AS "Proba_1.0", -1.09861228867 AS "LogProba_1.0", 0.6666666666666666 AS "Proba_2.0", -0.405465108108 AS "LogProba_2.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 8 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 18 AS node_id, 'anova_output_2' AS feature, 1.4948625564575195 AS threshold, 25 AS count, 2 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.024390243902439025 AS "Proba_1.0", -3.7135720667 AS "LogProba_1.0", 0.975609756097561 AS "Proba_2.0", -0.0246926125904 AS "LogProba_2.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 19 AS node_id, 'anova_output_3' AS feature, 0.11065156757831573 AS threshold, 4 AS count, 3 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.2 AS "Proba_1.0", -1.60943791243 AS "LogProba_1.0", 0.8 AS "Proba_2.0", -0.223143551314 AS "LogProba_2.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 4 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 21 AS count, 3 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 2 AS "Decision" FROM DUAL) "Values"), 
"DT_node_lookup_3" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anova_output_2 <= -1.5586481094360352) THEN 1 ELSE CASE WHEN ("ADS_ano_2_OUT".anova_output_2 <= 1.3842015266418457) THEN CASE WHEN ("ADS_ano_2_OUT".anova_output_3 <= -1.0962295532226562) THEN CASE WHEN ("ADS_ano_2_OUT".anova_output_3 <= -1.226921796798706) THEN 5 ELSE 6 END ELSE CASE WHEN ("ADS_ano_2_OUT".anova_output_2 <= 1.1279940605163574) THEN 8 ELSE CASE WHEN ("ADS_ano_2_OUT".anova_output_3 <= 0.06412214040756226) THEN CASE WHEN ("ADS_ano_2_OUT".anova_output_5 <= -0.11012723296880722) THEN 11 ELSE CASE WHEN ("ADS_ano_2_OUT".anova_output_3 <= -0.5442877411842346) THEN 13 ELSE CASE WHEN ("ADS_ano_2_OUT".anova_output_3 <= -0.2460320144891739) THEN 15 ELSE 16 END END END ELSE 17 END END END ELSE CASE WHEN ("ADS_ano_2_OUT".anova_output_2 <= 1.4948625564575195) THEN CASE WHEN ("ADS_ano_2_OUT".anova_output_3 <= 0.11065156757831573) THEN 20 ELSE 21 END ELSE 22 END END END AS node_id 
FROM "ADS_ano_2_OUT"), 
"DT_Output_3" AS 
(SELECT "DT_node_lookup_3"."KEY" AS "KEY", (SELECT "DT_node_data_3".node_id 
FROM "DT_node_data_3" 
WHERE "DT_node_data_3".node_id = "DT_node_lookup_3".node_id) AS node_id, (SELECT "DT_node_data_3".feature 
FROM "DT_node_data_3" 
WHERE "DT_node_data_3".node_id = "DT_node_lookup_3".node_id) AS feature, (SELECT "DT_node_data_3".threshold 
FROM "DT_node_data_3" 
WHERE "DT_node_data_3".node_id = "DT_node_lookup_3".node_id) AS threshold, (SELECT "DT_node_data_3".count 
FROM "DT_node_data_3" 
WHERE "DT_node_data_3".node_id = "DT_node_lookup_3".node_id) AS count, (SELECT "DT_node_data_3".depth 
FROM "DT_node_data_3" 
WHERE "DT_node_data_3".node_id = "DT_node_lookup_3".node_id) AS depth, (SELECT "DT_node_data_3"."Proba_0.0" 
FROM "DT_node_data_3" 
WHERE "DT_node_data_3".node_id = "DT_node_lookup_3".node_id) AS "Proba_0.0", (SELECT "DT_node_data_3"."LogProba_0.0" 
FROM "DT_node_data_3" 
WHERE "DT_node_data_3".node_id = "DT_node_lookup_3".node_id) AS "LogProba_0.0", (SELECT "DT_node_data_3"."Proba_1.0" 
FROM "DT_node_data_3" 
WHERE "DT_node_data_3".node_id = "DT_node_lookup_3".node_id) AS "Proba_1.0", (SELECT "DT_node_data_3"."LogProba_1.0" 
FROM "DT_node_data_3" 
WHERE "DT_node_data_3".node_id = "DT_node_lookup_3".node_id) AS "LogProba_1.0", (SELECT "DT_node_data_3"."Proba_2.0" 
FROM "DT_node_data_3" 
WHERE "DT_node_data_3".node_id = "DT_node_lookup_3".node_id) AS "Proba_2.0", (SELECT "DT_node_data_3"."LogProba_2.0" 
FROM "DT_node_data_3" 
WHERE "DT_node_data_3".node_id = "DT_node_lookup_3".node_id) AS "LogProba_2.0", (SELECT "DT_node_data_3"."Decision" 
FROM "DT_node_data_3" 
WHERE "DT_node_data_3".node_id = "DT_node_lookup_3".node_id) AS "Decision" 
FROM "DT_node_lookup_3"), 
"RF_Tree_3" AS 
(SELECT "DT_Output_3"."KEY" AS join_key_3, CAST(NULL AS FLOAT) AS "Score_3_0", "DT_Output_3"."Proba_0.0" AS "Proba_3_0", "DT_Output_3"."LogProba_0.0" AS "LogProba_3_0", CAST(NULL AS FLOAT) AS "Score_3_1", "DT_Output_3"."Proba_1.0" AS "Proba_3_1", "DT_Output_3"."LogProba_1.0" AS "LogProba_3_1", CAST(NULL AS FLOAT) AS "Score_3_2", "DT_Output_3"."Proba_2.0" AS "Proba_3_2", "DT_Output_3"."LogProba_2.0" AS "LogProba_3_2" 
FROM "DT_Output_3"), 
"DT_node_data_4" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Proba_0.0" AS "Proba_0.0", "Values"."LogProba_0.0" AS "LogProba_0.0", "Values"."Proba_1.0" AS "Proba_1.0", "Values"."LogProba_1.0" AS "LogProba_1.0", "Values"."Proba_2.0" AS "Proba_2.0", "Values"."LogProba_2.0" AS "LogProba_2.0", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'anova_output_2' AS feature, -1.5537705421447754 AS threshold, 95 AS count, 0 AS depth, 0.3333333333333333 AS "Proba_0.0", -1.09861228867 AS "LogProba_0.0", 0.4066666666666667 AS "Proba_1.0", -0.899761429923 AS "LogProba_1.0", 0.26 AS "Proba_2.0", -1.34707364797 AS "LogProba_2.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 31 AS count, 1 AS depth, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 2 AS node_id, 'anova_output_2' AS feature, 1.2390270233154297 AS threshold, 64 AS count, 1 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.61 AS "Proba_1.0", -0.494296321815 AS "LogProba_1.0", 0.39 AS "Proba_2.0", -0.941608539858 AS "LogProba_2.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 32 AS count, 2 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 4 AS node_id, 'anova_output_4' AS feature, 0.021459175273776054 AS threshold, 32 AS count, 2 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.22 AS "Proba_1.0", -1.51412773263 AS "LogProba_1.0", 0.78 AS "Proba_2.0", -0.248461359298 AS "LogProba_2.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 5 AS node_id, 'anova_output_5' AS feature, -0.021765680983662605 AS threshold, 16 AS count, 3 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.3793103448275862 AS "Proba_1.0", -0.969400557188 AS "LogProba_1.0", 0.6206896551724138 AS "Proba_2.0", -0.47692407209 AS "LogProba_2.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 6 AS node_id, 'anova_output_4' AS feature, -0.06930124014616013 AS threshold, 8 AS count, 4 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.14285714285714285 AS "Proba_1.0", -1.94591014906 AS "LogProba_1.0", 0.8571428571428571 AS "Proba_2.0", -0.154150679827 AS "LogProba_2.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 5 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 9 AS node_id, 'anova_output_2' AS feature, 1.679868459701538 AS threshold, 8 AS count, 4 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.6 AS "Proba_1.0", -0.510825623766 AS "LogProba_1.0", 0.4 AS "Proba_2.0", -0.916290731874 AS "LogProba_2.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 10 AS node_id, 'anova_output_3' AS feature, 0.020319268107414246 AS threshold, 5 AS count, 5 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.9 AS "Proba_1.0", -0.105360515658 AS "LogProba_1.0", 0.1 AS "Proba_2.0", -2.30258509299 AS "LogProba_2.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 11 AS node_id, 'anova_output_5' AS feature, 0.08350488543510437 AS threshold, 2 AS count, 6 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.5 AS "Proba_1.0", -0.69314718056 AS "LogProba_1.0", 0.5 AS "Proba_2.0", -0.69314718056 AS "LogProba_2.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 6 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 3 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 2 AS "Decision" FROM DUAL) "Values"), 
"DT_node_lookup_4" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anova_output_2 <= -1.5537705421447754) THEN 1 ELSE CASE WHEN ("ADS_ano_2_OUT".anova_output_2 <= 1.2390270233154297) THEN 3 ELSE CASE WHEN ("ADS_ano_2_OUT".anova_output_4 <= 0.021459175273776054) THEN CASE WHEN ("ADS_ano_2_OUT".anova_output_5 <= -0.021765680983662605) THEN CASE WHEN ("ADS_ano_2_OUT".anova_output_4 <= -0.06930124014616013) THEN 7 ELSE 8 END ELSE CASE WHEN ("ADS_ano_2_OUT".anova_output_2 <= 1.679868459701538) THEN CASE WHEN ("ADS_ano_2_OUT".anova_output_3 <= 0.020319268107414246) THEN CASE WHEN ("ADS_ano_2_OUT".anova_output_5 <= 0.08350488543510437) THEN 12 ELSE 13 END ELSE 14 END ELSE 15 END END ELSE 16 END END END AS node_id 
FROM "ADS_ano_2_OUT"), 
"DT_Output_4" AS 
(SELECT "DT_node_lookup_4"."KEY" AS "KEY", (SELECT "DT_node_data_4".node_id 
FROM "DT_node_data_4" 
WHERE "DT_node_data_4".node_id = "DT_node_lookup_4".node_id) AS node_id, (SELECT "DT_node_data_4".feature 
FROM "DT_node_data_4" 
WHERE "DT_node_data_4".node_id = "DT_node_lookup_4".node_id) AS feature, (SELECT "DT_node_data_4".threshold 
FROM "DT_node_data_4" 
WHERE "DT_node_data_4".node_id = "DT_node_lookup_4".node_id) AS threshold, (SELECT "DT_node_data_4".count 
FROM "DT_node_data_4" 
WHERE "DT_node_data_4".node_id = "DT_node_lookup_4".node_id) AS count, (SELECT "DT_node_data_4".depth 
FROM "DT_node_data_4" 
WHERE "DT_node_data_4".node_id = "DT_node_lookup_4".node_id) AS depth, (SELECT "DT_node_data_4"."Proba_0.0" 
FROM "DT_node_data_4" 
WHERE "DT_node_data_4".node_id = "DT_node_lookup_4".node_id) AS "Proba_0.0", (SELECT "DT_node_data_4"."LogProba_0.0" 
FROM "DT_node_data_4" 
WHERE "DT_node_data_4".node_id = "DT_node_lookup_4".node_id) AS "LogProba_0.0", (SELECT "DT_node_data_4"."Proba_1.0" 
FROM "DT_node_data_4" 
WHERE "DT_node_data_4".node_id = "DT_node_lookup_4".node_id) AS "Proba_1.0", (SELECT "DT_node_data_4"."LogProba_1.0" 
FROM "DT_node_data_4" 
WHERE "DT_node_data_4".node_id = "DT_node_lookup_4".node_id) AS "LogProba_1.0", (SELECT "DT_node_data_4"."Proba_2.0" 
FROM "DT_node_data_4" 
WHERE "DT_node_data_4".node_id = "DT_node_lookup_4".node_id) AS "Proba_2.0", (SELECT "DT_node_data_4"."LogProba_2.0" 
FROM "DT_node_data_4" 
WHERE "DT_node_data_4".node_id = "DT_node_lookup_4".node_id) AS "LogProba_2.0", (SELECT "DT_node_data_4"."Decision" 
FROM "DT_node_data_4" 
WHERE "DT_node_data_4".node_id = "DT_node_lookup_4".node_id) AS "Decision" 
FROM "DT_node_lookup_4"), 
"RF_Tree_4" AS 
(SELECT "DT_Output_4"."KEY" AS join_key_4, CAST(NULL AS FLOAT) AS "Score_4_0", "DT_Output_4"."Proba_0.0" AS "Proba_4_0", "DT_Output_4"."LogProba_0.0" AS "LogProba_4_0", CAST(NULL AS FLOAT) AS "Score_4_1", "DT_Output_4"."Proba_1.0" AS "Proba_4_1", "DT_Output_4"."LogProba_1.0" AS "LogProba_4_1", CAST(NULL AS FLOAT) AS "Score_4_2", "DT_Output_4"."Proba_2.0" AS "Proba_4_2", "DT_Output_4"."LogProba_2.0" AS "LogProba_4_2" 
FROM "DT_Output_4"), 
"DT_node_data_5" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Proba_0.0" AS "Proba_0.0", "Values"."LogProba_0.0" AS "LogProba_0.0", "Values"."Proba_1.0" AS "Proba_1.0", "Values"."LogProba_1.0" AS "LogProba_1.0", "Values"."Proba_2.0" AS "Proba_2.0", "Values"."LogProba_2.0" AS "LogProba_2.0", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'anova_output_3' AS feature, -0.24724853038787842 AS threshold, 94 AS count, 0 AS depth, 0.32666666666666666 AS "Proba_0.0", -1.11881499599 AS "LogProba_0.0", 0.35333333333333333 AS "Proba_1.0", -1.04034338054 AS "LogProba_1.0", 0.32 AS "Proba_2.0", -1.13943428319 AS "LogProba_2.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 1 AS node_id, 'anova_output_4' AS feature, 0.4375349283218384 AS threshold, 29 AS count, 1 AS depth, 0.1 AS "Proba_0.0", -2.30258509299 AS "LogProba_0.0", 0.72 AS "Proba_1.0", -0.328504066972 AS "LogProba_1.0", 0.18 AS "Proba_2.0", -1.71479842809 AS "LogProba_2.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 2 AS node_id, 'anova_output_2' AS feature, 1.2973992824554443 AS threshold, 27 AS count, 2 AS depth, 0.10638297872340426 AS "Proba_0.0", -2.24070968928 AS "LogProba_0.0", 0.7659574468085106 AS "Proba_1.0", -0.266628663254 AS "LogProba_1.0", 0.1276595744680851 AS "Proba_2.0", -2.05838813248 AS "LogProba_2.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 3 AS node_id, 'anova_output_5' AS feature, 0.2916436493396759 AS threshold, 23 AS count, 3 AS depth, 0.12195121951219512 AS "Proba_0.0", -2.10413415427 AS "LogProba_0.0", 0.8780487804878049 AS "Proba_1.0", -0.130053128248 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 4 AS node_id, 'anova_output_2' AS feature, -1.8274502754211426 AS threshold, 22 AS count, 4 AS depth, 0.1 AS "Proba_0.0", -2.30258509299 AS "LogProba_0.0", 0.9 AS "Proba_1.0", -0.105360515658 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 20 AS count, 5 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 2 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 10 AS node_id, 'anova_output_4' AS feature, -0.20384715497493744 AS threshold, 65 AS count, 1 AS depth, 0.44 AS "Proba_0.0", -0.82098055207 AS "LogProba_0.0", 0.17 AS "Proba_1.0", -1.77195684193 AS "LogProba_1.0", 0.39 AS "Proba_2.0", -0.941608539858 AS "LogProba_2.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 11 AS node_id, 'anova_output_2' AS feature, 1.8593029975891113 AS threshold, 14 AS count, 2 AS depth, 0.08695652173913043 AS "Proba_0.0", -2.44234703537 AS "LogProba_0.0", 0.5217391304347826 AS "Proba_1.0", -0.650587566141 AS "LogProba_1.0", 0.391304347826087 AS "Proba_2.0", -0.938269638593 AS "LogProba_2.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 12 AS node_id, 'anova_output_5' AS feature, 0.1499849408864975 AS threshold, 8 AS count, 3 AS depth, 0.14285714285714285 AS "Proba_0.0", -1.94591014906 AS "LogProba_0.0", 0.8571428571428571 AS "Proba_1.0", -0.154150679827 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 4 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 16 AS node_id, 'anova_output_2' AS feature, -0.9388530254364014 AS threshold, 51 AS count, 2 AS depth, 0.5454545454545454 AS "Proba_0.0", -0.60613580357 AS "LogProba_0.0", 0.06493506493506493 AS "Proba_1.0", -2.73436750942 AS "LogProba_1.0", 0.38961038961038963 AS "Proba_2.0", -0.942608040192 AS "LogProba_2.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 24 AS count, 3 AS depth, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 18 AS node_id, 'anova_output_2' AS feature, 1.1869330406188965 AS threshold, 27 AS count, 3 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.14285714285714285 AS "Proba_1.0", -1.94591014906 AS "LogProba_1.0", 0.8571428571428571 AS "Proba_2.0", -0.154150679827 AS "LogProba_2.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 4 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 22 AS count, 4 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 2 AS "Decision" FROM DUAL) "Values"), 
"DT_node_lookup_5" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anova_output_3 <= -0.24724853038787842) THEN CASE WHEN ("ADS_ano_2_OUT".anova_output_4 <= 0.4375349283218384) THEN CASE WHEN ("ADS_ano_2_OUT".anova_output_2 <= 1.2973992824554443) THEN CASE WHEN ("ADS_ano_2_OUT".anova_output_5 <= 0.2916436493396759) THEN CASE WHEN ("ADS_ano_2_OUT".anova_output_2 <= -1.8274502754211426) THEN 5 ELSE 6 END ELSE 7 END ELSE 8 END ELSE 9 END ELSE CASE WHEN ("ADS_ano_2_OUT".anova_output_4 <= -0.20384715497493744) THEN CASE WHEN ("ADS_ano_2_OUT".anova_output_2 <= 1.8593029975891113) THEN CASE WHEN ("ADS_ano_2_OUT".anova_output_5 <= 0.1499849408864975) THEN 13 ELSE 14 END ELSE 15 END ELSE CASE WHEN ("ADS_ano_2_OUT".anova_output_2 <= -0.9388530254364014) THEN 17 ELSE CASE WHEN ("ADS_ano_2_OUT".anova_output_2 <= 1.1869330406188965) THEN 19 ELSE 20 END END END END AS node_id 
FROM "ADS_ano_2_OUT"), 
"DT_Output_5" AS 
(SELECT "DT_node_lookup_5"."KEY" AS "KEY", (SELECT "DT_node_data_5".node_id 
FROM "DT_node_data_5" 
WHERE "DT_node_data_5".node_id = "DT_node_lookup_5".node_id) AS node_id, (SELECT "DT_node_data_5".feature 
FROM "DT_node_data_5" 
WHERE "DT_node_data_5".node_id = "DT_node_lookup_5".node_id) AS feature, (SELECT "DT_node_data_5".threshold 
FROM "DT_node_data_5" 
WHERE "DT_node_data_5".node_id = "DT_node_lookup_5".node_id) AS threshold, (SELECT "DT_node_data_5".count 
FROM "DT_node_data_5" 
WHERE "DT_node_data_5".node_id = "DT_node_lookup_5".node_id) AS count, (SELECT "DT_node_data_5".depth 
FROM "DT_node_data_5" 
WHERE "DT_node_data_5".node_id = "DT_node_lookup_5".node_id) AS depth, (SELECT "DT_node_data_5"."Proba_0.0" 
FROM "DT_node_data_5" 
WHERE "DT_node_data_5".node_id = "DT_node_lookup_5".node_id) AS "Proba_0.0", (SELECT "DT_node_data_5"."LogProba_0.0" 
FROM "DT_node_data_5" 
WHERE "DT_node_data_5".node_id = "DT_node_lookup_5".node_id) AS "LogProba_0.0", (SELECT "DT_node_data_5"."Proba_1.0" 
FROM "DT_node_data_5" 
WHERE "DT_node_data_5".node_id = "DT_node_lookup_5".node_id) AS "Proba_1.0", (SELECT "DT_node_data_5"."LogProba_1.0" 
FROM "DT_node_data_5" 
WHERE "DT_node_data_5".node_id = "DT_node_lookup_5".node_id) AS "LogProba_1.0", (SELECT "DT_node_data_5"."Proba_2.0" 
FROM "DT_node_data_5" 
WHERE "DT_node_data_5".node_id = "DT_node_lookup_5".node_id) AS "Proba_2.0", (SELECT "DT_node_data_5"."LogProba_2.0" 
FROM "DT_node_data_5" 
WHERE "DT_node_data_5".node_id = "DT_node_lookup_5".node_id) AS "LogProba_2.0", (SELECT "DT_node_data_5"."Decision" 
FROM "DT_node_data_5" 
WHERE "DT_node_data_5".node_id = "DT_node_lookup_5".node_id) AS "Decision" 
FROM "DT_node_lookup_5"), 
"RF_Tree_5" AS 
(SELECT "DT_Output_5"."KEY" AS join_key_5, CAST(NULL AS FLOAT) AS "Score_5_0", "DT_Output_5"."Proba_0.0" AS "Proba_5_0", "DT_Output_5"."LogProba_0.0" AS "LogProba_5_0", CAST(NULL AS FLOAT) AS "Score_5_1", "DT_Output_5"."Proba_1.0" AS "Proba_5_1", "DT_Output_5"."LogProba_1.0" AS "LogProba_5_1", CAST(NULL AS FLOAT) AS "Score_5_2", "DT_Output_5"."Proba_2.0" AS "Proba_5_2", "DT_Output_5"."LogProba_2.0" AS "LogProba_5_2" 
FROM "DT_Output_5"), 
"DT_node_data_6" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Proba_0.0" AS "Proba_0.0", "Values"."LogProba_0.0" AS "LogProba_0.0", "Values"."Proba_1.0" AS "Proba_1.0", "Values"."LogProba_1.0" AS "LogProba_1.0", "Values"."Proba_2.0" AS "Proba_2.0", "Values"."LogProba_2.0" AS "LogProba_2.0", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'anova_output_3' AS feature, 0.3192440867424011 AS threshold, 95 AS count, 0 AS depth, 0.30666666666666664 AS "Proba_0.0", -1.18199389761 AS "LogProba_0.0", 0.2866666666666667 AS "Proba_1.0", -1.2494351784 AS "LogProba_1.0", 0.4066666666666667 AS "Proba_2.0", -0.899761429923 AS "LogProba_2.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 1 AS node_id, 'anova_output_2' AS feature, 1.1320385932922363 AS threshold, 72 AS count, 1 AS depth, 0.23893805309734514 AS "Proba_0.0", -1.43155095271 AS "LogProba_0.0", 0.37168141592920356 AS "Proba_1.0", -0.989718200429 AS "LogProba_1.0", 0.3893805309734513 AS "Proba_2.0", -0.943198184794 AS "LogProba_2.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 2 AS node_id, 'anova_output_2' AS feature, -1.6887595653533936 AS threshold, 43 AS count, 2 AS depth, 0.40298507462686567 AS "Proba_0.0", -0.908855753387 AS "LogProba_0.0", 0.5671641791044776 AS "Proba_1.0", -0.567106459665 AS "LogProba_1.0", 0.029850746268656716 AS "Proba_2.0", -3.51154543883 AS "LogProba_2.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 3 AS depth, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 4 AS node_id, 'anova_output_4' AS feature, 0.4680721163749695 AS threshold, 27 AS count, 3 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.95 AS "Proba_1.0", -0.0512932943876 AS "LogProba_1.0", 0.05 AS "Proba_2.0", -2.99573227355 AS "LogProba_2.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 26 AS count, 4 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 7 AS node_id, 'anova_output_2' AS feature, 1.5713317394256592 AS threshold, 29 AS count, 2 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.08695652173913043 AS "Proba_1.0", -2.44234703537 AS "LogProba_1.0", 0.9130434782608695 AS "Proba_2.0", -0.0909717782057 AS "LogProba_2.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 8 AS node_id, 'anova_output_2' AS feature, 1.541529893875122 AS threshold, 15 AS count, 3 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.18181818181818182 AS "Proba_1.0", -1.70474809224 AS "LogProba_1.0", 0.8181818181818182 AS "Proba_2.0", -0.200670695462 AS "LogProba_2.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 9 AS node_id, 'anova_output_4' AS feature, -0.4330660104751587 AS threshold, 14 AS count, 4 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.1 AS "Proba_1.0", -2.30258509299 AS "LogProba_1.0", 0.9 AS "Proba_2.0", -0.105360515658 AS "LogProba_2.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 11 AS node_id, 'anova_output_5' AS feature, -0.16694556176662445 AS threshold, 13 AS count, 5 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.05263157894736842 AS "Proba_1.0", -2.94443897917 AS "LogProba_1.0", 0.9473684210526315 AS "Proba_2.0", -0.0540672212703 AS "LogProba_2.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 12 AS node_id, 'anova_output_5' AS feature, -0.18375331163406372 AS threshold, 2 AS count, 6 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.5 AS "Proba_1.0", -0.69314718056 AS "LogProba_1.0", 0.5 AS "Proba_2.0", -0.69314718056 AS "LogProba_2.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS count, 6 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 14 AS count, 3 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 18 AS node_id, 'anova_output_5' AS feature, -0.10508901625871658 AS threshold, 23 AS count, 1 AS depth, 0.5135135135135135 AS "Proba_0.0", -0.666478933478 AS "LogProba_0.0", 0.02702702702702703 AS "Proba_1.0", -3.61091791264 AS "LogProba_1.0", 0.4594594594594595 AS "Proba_2.0", -0.777704568588 AS "LogProba_2.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 19 AS node_id, 'anova_output_2' AS feature, -0.1300361156463623 AS threshold, 7 AS count, 2 AS depth, 0.08333333333333333 AS "Proba_0.0", -2.48490664979 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.9166666666666666 AS "Proba_2.0", -0.0870113769896 AS "LogProba_2.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 22 AS node_id, 'anova_output_2' AS feature, -0.6761622428894043 AS threshold, 16 AS count, 2 AS depth, 0.72 AS "Proba_0.0", -0.328504066972 AS "LogProba_0.0", 0.04 AS "Proba_1.0", -3.21887582487 AS "LogProba_1.0", 0.24 AS "Proba_2.0", -1.42711635564 AS "LogProba_2.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 3 AS depth, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 24 AS node_id, 'anova_output_4' AS feature, -0.21268539130687714 AS threshold, 6 AS count, 3 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.14285714285714285 AS "Proba_1.0", -1.94591014906 AS "LogProba_1.0", 0.8571428571428571 AS "Proba_2.0", -0.154150679827 AS "LogProba_2.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 25 AS node_id, 'anova_output_2' AS feature, 1.884266972541809 AS threshold, 3 AS count, 4 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.3333333333333333 AS "Proba_1.0", -1.09861228867 AS "LogProba_1.0", 0.6666666666666666 AS "Proba_2.0", -0.405465108108 AS "LogProba_2.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 28 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 4 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 2 AS "Decision" FROM DUAL) "Values"), 
"DT_node_lookup_6" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anova_output_3 <= 0.3192440867424011) THEN CASE WHEN ("ADS_ano_2_OUT".anova_output_2 <= 1.1320385932922363) THEN CASE WHEN ("ADS_ano_2_OUT".anova_output_2 <= -1.6887595653533936) THEN 3 ELSE CASE WHEN ("ADS_ano_2_OUT".anova_output_4 <= 0.4680721163749695) THEN 5 ELSE 6 END END ELSE CASE WHEN ("ADS_ano_2_OUT".anova_output_2 <= 1.5713317394256592) THEN CASE WHEN ("ADS_ano_2_OUT".anova_output_2 <= 1.541529893875122) THEN CASE WHEN ("ADS_ano_2_OUT".anova_output_4 <= -0.4330660104751587) THEN 10 ELSE CASE WHEN ("ADS_ano_2_OUT".anova_output_5 <= -0.16694556176662445) THEN CASE WHEN ("ADS_ano_2_OUT".anova_output_5 <= -0.18375331163406372) THEN 13 ELSE 14 END ELSE 15 END END ELSE 16 END ELSE 17 END END ELSE CASE WHEN ("ADS_ano_2_OUT".anova_output_5 <= -0.10508901625871658) THEN CASE WHEN ("ADS_ano_2_OUT".anova_output_2 <= -0.1300361156463623) THEN 20 ELSE 21 END ELSE CASE WHEN ("ADS_ano_2_OUT".anova_output_2 <= -0.6761622428894043) THEN 23 ELSE CASE WHEN ("ADS_ano_2_OUT".anova_output_4 <= -0.21268539130687714) THEN CASE WHEN ("ADS_ano_2_OUT".anova_output_2 <= 1.884266972541809) THEN 26 ELSE 27 END ELSE 28 END END END END AS node_id 
FROM "ADS_ano_2_OUT"), 
"DT_Output_6" AS 
(SELECT "DT_node_lookup_6"."KEY" AS "KEY", (SELECT "DT_node_data_6".node_id 
FROM "DT_node_data_6" 
WHERE "DT_node_data_6".node_id = "DT_node_lookup_6".node_id) AS node_id, (SELECT "DT_node_data_6".feature 
FROM "DT_node_data_6" 
WHERE "DT_node_data_6".node_id = "DT_node_lookup_6".node_id) AS feature, (SELECT "DT_node_data_6".threshold 
FROM "DT_node_data_6" 
WHERE "DT_node_data_6".node_id = "DT_node_lookup_6".node_id) AS threshold, (SELECT "DT_node_data_6".count 
FROM "DT_node_data_6" 
WHERE "DT_node_data_6".node_id = "DT_node_lookup_6".node_id) AS count, (SELECT "DT_node_data_6".depth 
FROM "DT_node_data_6" 
WHERE "DT_node_data_6".node_id = "DT_node_lookup_6".node_id) AS depth, (SELECT "DT_node_data_6"."Proba_0.0" 
FROM "DT_node_data_6" 
WHERE "DT_node_data_6".node_id = "DT_node_lookup_6".node_id) AS "Proba_0.0", (SELECT "DT_node_data_6"."LogProba_0.0" 
FROM "DT_node_data_6" 
WHERE "DT_node_data_6".node_id = "DT_node_lookup_6".node_id) AS "LogProba_0.0", (SELECT "DT_node_data_6"."Proba_1.0" 
FROM "DT_node_data_6" 
WHERE "DT_node_data_6".node_id = "DT_node_lookup_6".node_id) AS "Proba_1.0", (SELECT "DT_node_data_6"."LogProba_1.0" 
FROM "DT_node_data_6" 
WHERE "DT_node_data_6".node_id = "DT_node_lookup_6".node_id) AS "LogProba_1.0", (SELECT "DT_node_data_6"."Proba_2.0" 
FROM "DT_node_data_6" 
WHERE "DT_node_data_6".node_id = "DT_node_lookup_6".node_id) AS "Proba_2.0", (SELECT "DT_node_data_6"."LogProba_2.0" 
FROM "DT_node_data_6" 
WHERE "DT_node_data_6".node_id = "DT_node_lookup_6".node_id) AS "LogProba_2.0", (SELECT "DT_node_data_6"."Decision" 
FROM "DT_node_data_6" 
WHERE "DT_node_data_6".node_id = "DT_node_lookup_6".node_id) AS "Decision" 
FROM "DT_node_lookup_6"), 
"RF_Tree_6" AS 
(SELECT "DT_Output_6"."KEY" AS join_key_6, CAST(NULL AS FLOAT) AS "Score_6_0", "DT_Output_6"."Proba_0.0" AS "Proba_6_0", "DT_Output_6"."LogProba_0.0" AS "LogProba_6_0", CAST(NULL AS FLOAT) AS "Score_6_1", "DT_Output_6"."Proba_1.0" AS "Proba_6_1", "DT_Output_6"."LogProba_1.0" AS "LogProba_6_1", CAST(NULL AS FLOAT) AS "Score_6_2", "DT_Output_6"."Proba_2.0" AS "Proba_6_2", "DT_Output_6"."LogProba_2.0" AS "LogProba_6_2" 
FROM "DT_Output_6"), 
"DT_node_data_7" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Proba_0.0" AS "Proba_0.0", "Values"."LogProba_0.0" AS "LogProba_0.0", "Values"."Proba_1.0" AS "Proba_1.0", "Values"."LogProba_1.0" AS "LogProba_1.0", "Values"."Proba_2.0" AS "Proba_2.0", "Values"."LogProba_2.0" AS "LogProba_2.0", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'anova_output_2' AS feature, -1.4530795812606812 AS threshold, 101 AS count, 0 AS depth, 0.38666666666666666 AS "Proba_0.0", -0.95019228355 AS "LogProba_0.0", 0.2733333333333333 AS "Proba_1.0", -1.29706322739 AS "LogProba_1.0", 0.34 AS "Proba_2.0", -1.07880966137 AS "LogProba_2.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 37 AS count, 1 AS depth, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 2 AS node_id, 'anova_output_4' AS feature, 0.02551882527768612 AS threshold, 64 AS count, 1 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.44565217391304346 AS "Proba_1.0", -0.808216510345 AS "LogProba_1.0", 0.5543478260869565 AS "Proba_2.0", -0.589962944325 AS "LogProba_2.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 3 AS node_id, 'anova_output_2' AS feature, 1.2973992824554443 AS threshold, 38 AS count, 2 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.6538461538461539 AS "Proba_1.0", -0.424883193965 AS "LogProba_1.0", 0.34615384615384615 AS "Proba_2.0", -1.06087196069 AS "LogProba_2.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 23 AS count, 3 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 5 AS node_id, 'anova_output_4' AS feature, -0.5191078186035156 AS threshold, 15 AS count, 3 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.14285714285714285 AS "Proba_1.0", -1.94591014906 AS "LogProba_1.0", 0.8571428571428571 AS "Proba_2.0", -0.154150679827 AS "LogProba_2.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 7 AS node_id, 'anova_output_2' AS feature, 1.6685181856155396 AS threshold, 14 AS count, 4 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.1 AS "Proba_1.0", -2.30258509299 AS "LogProba_1.0", 0.9 AS "Proba_2.0", -0.105360515658 AS "LogProba_2.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 8 AS node_id, 'anova_output_4' AS feature, -0.024015411734580994 AS threshold, 6 AS count, 5 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.25 AS "Proba_1.0", -1.38629436112 AS "LogProba_1.0", 0.75 AS "Proba_2.0", -0.287682072452 AS "LogProba_2.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 9 AS node_id, 'anova_output_2' AS feature, 1.541529893875122 AS threshold, 5 AS count, 6 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.14285714285714285 AS "Proba_1.0", -1.94591014906 AS "LogProba_1.0", 0.8571428571428571 AS "Proba_2.0", -0.154150679827 AS "LogProba_2.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 7 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 5 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 14 AS node_id, 'anova_output_2' AS feature, 1.146660566329956 AS threshold, 26 AS count, 2 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.175 AS "Proba_1.0", -1.74296930506 AS "LogProba_1.0", 0.825 AS "Proba_2.0", -0.192371892647 AS "LogProba_2.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 20 AS count, 3 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 2 AS "Decision" FROM DUAL) "Values"), 
"DT_node_lookup_7" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anova_output_2 <= -1.4530795812606812) THEN 1 ELSE CASE WHEN ("ADS_ano_2_OUT".anova_output_4 <= 0.02551882527768612) THEN CASE WHEN ("ADS_ano_2_OUT".anova_output_2 <= 1.2973992824554443) THEN 4 ELSE CASE WHEN ("ADS_ano_2_OUT".anova_output_4 <= -0.5191078186035156) THEN 6 ELSE CASE WHEN ("ADS_ano_2_OUT".anova_output_2 <= 1.6685181856155396) THEN CASE WHEN ("ADS_ano_2_OUT".anova_output_4 <= -0.024015411734580994) THEN CASE WHEN ("ADS_ano_2_OUT".anova_output_2 <= 1.541529893875122) THEN 10 ELSE 11 END ELSE 12 END ELSE 13 END END END ELSE CASE WHEN ("ADS_ano_2_OUT".anova_output_2 <= 1.146660566329956) THEN 15 ELSE 16 END END END AS node_id 
FROM "ADS_ano_2_OUT"), 
"DT_Output_7" AS 
(SELECT "DT_node_lookup_7"."KEY" AS "KEY", (SELECT "DT_node_data_7".node_id 
FROM "DT_node_data_7" 
WHERE "DT_node_data_7".node_id = "DT_node_lookup_7".node_id) AS node_id, (SELECT "DT_node_data_7".feature 
FROM "DT_node_data_7" 
WHERE "DT_node_data_7".node_id = "DT_node_lookup_7".node_id) AS feature, (SELECT "DT_node_data_7".threshold 
FROM "DT_node_data_7" 
WHERE "DT_node_data_7".node_id = "DT_node_lookup_7".node_id) AS threshold, (SELECT "DT_node_data_7".count 
FROM "DT_node_data_7" 
WHERE "DT_node_data_7".node_id = "DT_node_lookup_7".node_id) AS count, (SELECT "DT_node_data_7".depth 
FROM "DT_node_data_7" 
WHERE "DT_node_data_7".node_id = "DT_node_lookup_7".node_id) AS depth, (SELECT "DT_node_data_7"."Proba_0.0" 
FROM "DT_node_data_7" 
WHERE "DT_node_data_7".node_id = "DT_node_lookup_7".node_id) AS "Proba_0.0", (SELECT "DT_node_data_7"."LogProba_0.0" 
FROM "DT_node_data_7" 
WHERE "DT_node_data_7".node_id = "DT_node_lookup_7".node_id) AS "LogProba_0.0", (SELECT "DT_node_data_7"."Proba_1.0" 
FROM "DT_node_data_7" 
WHERE "DT_node_data_7".node_id = "DT_node_lookup_7".node_id) AS "Proba_1.0", (SELECT "DT_node_data_7"."LogProba_1.0" 
FROM "DT_node_data_7" 
WHERE "DT_node_data_7".node_id = "DT_node_lookup_7".node_id) AS "LogProba_1.0", (SELECT "DT_node_data_7"."Proba_2.0" 
FROM "DT_node_data_7" 
WHERE "DT_node_data_7".node_id = "DT_node_lookup_7".node_id) AS "Proba_2.0", (SELECT "DT_node_data_7"."LogProba_2.0" 
FROM "DT_node_data_7" 
WHERE "DT_node_data_7".node_id = "DT_node_lookup_7".node_id) AS "LogProba_2.0", (SELECT "DT_node_data_7"."Decision" 
FROM "DT_node_data_7" 
WHERE "DT_node_data_7".node_id = "DT_node_lookup_7".node_id) AS "Decision" 
FROM "DT_node_lookup_7"), 
"RF_Tree_7" AS 
(SELECT "DT_Output_7"."KEY" AS join_key_7, CAST(NULL AS FLOAT) AS "Score_7_0", "DT_Output_7"."Proba_0.0" AS "Proba_7_0", "DT_Output_7"."LogProba_0.0" AS "LogProba_7_0", CAST(NULL AS FLOAT) AS "Score_7_1", "DT_Output_7"."Proba_1.0" AS "Proba_7_1", "DT_Output_7"."LogProba_1.0" AS "LogProba_7_1", CAST(NULL AS FLOAT) AS "Score_7_2", "DT_Output_7"."Proba_2.0" AS "Proba_7_2", "DT_Output_7"."LogProba_2.0" AS "LogProba_7_2" 
FROM "DT_Output_7"), 
"DT_node_data_8" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Proba_0.0" AS "Proba_0.0", "Values"."LogProba_0.0" AS "LogProba_0.0", "Values"."Proba_1.0" AS "Proba_1.0", "Values"."LogProba_1.0" AS "LogProba_1.0", "Values"."Proba_2.0" AS "Proba_2.0", "Values"."LogProba_2.0" AS "LogProba_2.0", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'anova_output_3' AS feature, -0.23977786302566528 AS threshold, 91 AS count, 0 AS depth, 0.28 AS "Proba_0.0", -1.27296567581 AS "LogProba_0.0", 0.36 AS "Proba_1.0", -1.02165124753 AS "LogProba_1.0", 0.36 AS "Proba_2.0", -1.02165124753 AS "LogProba_2.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 1 AS node_id, 'anova_output_2' AS feature, 1.3842015266418457 AS threshold, 23 AS count, 1 AS depth, 0.023255813953488372 AS "Proba_0.0", -3.76120011569 AS "LogProba_0.0", 0.7209302325581395 AS "Proba_1.0", -0.327212911208 AS "LogProba_1.0", 0.2558139534883721 AS "Proba_2.0", -1.3633048429 AS "LogProba_2.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 2 AS node_id, 'anova_output_4' AS feature, 0.4375349283218384 AS threshold, 19 AS count, 2 AS depth, 0.02702702702702703 AS "Proba_0.0", -3.61091791264 AS "LogProba_0.0", 0.8378378378378378 AS "Proba_1.0", -0.176930708159 AS "LogProba_1.0", 0.13513513513513514 AS "Proba_2.0", -2.00148000021 AS "LogProba_2.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 3 AS node_id, 'anova_output_4' AS feature, -0.32814934849739075 AS threshold, 18 AS count, 3 AS depth, 0.029411764705882353 AS "Proba_0.0", -3.52636052462 AS "LogProba_0.0", 0.9117647058823529 AS "Proba_1.0", -0.092373320131 AS "LogProba_1.0", 0.058823529411764705 AS "Proba_2.0", -2.83321334406 AS "LogProba_2.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 4 AS node_id, 'anova_output_3' AS feature, -0.5442877411842346 AS threshold, 3 AS count, 4 AS depth, 0.16666666666666666 AS "Proba_0.0", -1.79175946923 AS "LogProba_0.0", 0.5 AS "Proba_1.0", -0.69314718056 AS "LogProba_1.0", 0.3333333333333333 AS "Proba_2.0", -1.09861228867 AS "LogProba_2.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 5 AS node_id, 'anova_output_2' AS feature, -0.7769405841827393 AS threshold, 2 AS count, 5 AS depth, 0.3333333333333333 AS "Proba_0.0", -1.09861228867 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.6666666666666666 AS "Proba_2.0", -0.405465108108 AS "LogProba_2.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 4 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 2 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 12 AS node_id, 'anova_output_2' AS feature, -0.9339754581451416 AS threshold, 68 AS count, 1 AS depth, 0.38317757009345793 AS "Proba_0.0", -0.959256767758 AS "LogProba_0.0", 0.21495327102803738 AS "Proba_1.0", -1.53733461853 AS "LogProba_1.0", 0.40186915887850466 AS "Proba_2.0", -0.911628718768 AS "LogProba_2.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 28 AS count, 2 AS depth, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 14 AS node_id, 'anova_output_2' AS feature, 1.7295126914978027 AS threshold, 40 AS count, 2 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.3484848484848485 AS "Proba_1.0", -1.0541605261 AS "LogProba_1.0", 0.6515151515151515 AS "Proba_2.0", -0.428454626333 AS "LogProba_2.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 15 AS node_id, 'anova_output_5' AS feature, 0.13244320452213287 AS threshold, 16 AS count, 3 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.8518518518518519 AS "Proba_1.0", -0.160342650075 AS "LogProba_1.0", 0.14814814814814814 AS "Proba_2.0", -1.90954250488 AS "LogProba_2.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 16 AS node_id, 'anova_output_3' AS feature, -0.07511884719133377 AS threshold, 15 AS count, 4 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.8846153846153846 AS "Proba_1.0", -0.122602322092 AS "LogProba_1.0", 0.11538461538461539 AS "Proba_2.0", -2.15948424935 AS "LogProba_2.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 17 AS node_id, 'anova_output_5' AS feature, -0.21430620551109314 AS threshold, 6 AS count, 5 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.625 AS "Proba_1.0", -0.470003629246 AS "LogProba_1.0", 0.375 AS "Proba_2.0", -0.980829253012 AS "LogProba_2.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 6 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 19 AS node_id, 'anova_output_4' AS feature, -0.10812019556760788 AS threshold, 4 AS count, 6 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.4 AS "Proba_1.0", -0.916290731874 AS "LogProba_1.0", 0.6 AS "Proba_2.0", -0.510825623766 AS "LogProba_2.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 21 AS node_id, 'anova_output_5' AS feature, -0.013297975063323975 AS threshold, 3 AS count, 7 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.6666666666666666 AS "Proba_1.0", -0.405465108108 AS "LogProba_1.0", 0.3333333333333333 AS "Proba_2.0", -1.09861228867 AS "LogProba_2.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 8 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 5 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 24 AS count, 3 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 2 AS "Decision" FROM DUAL) "Values"), 
"DT_node_lookup_8" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anova_output_3 <= -0.23977786302566528) THEN CASE WHEN ("ADS_ano_2_OUT".anova_output_2 <= 1.3842015266418457) THEN CASE WHEN ("ADS_ano_2_OUT".anova_output_4 <= 0.4375349283218384) THEN CASE WHEN ("ADS_ano_2_OUT".anova_output_4 <= -0.32814934849739075) THEN CASE WHEN ("ADS_ano_2_OUT".anova_output_3 <= -0.5442877411842346) THEN CASE WHEN ("ADS_ano_2_OUT".anova_output_2 <= -0.7769405841827393) THEN 6 ELSE 7 END ELSE 8 END ELSE 9 END ELSE 10 END ELSE 11 END ELSE CASE WHEN ("ADS_ano_2_OUT".anova_output_2 <= -0.9339754581451416) THEN 13 ELSE CASE WHEN ("ADS_ano_2_OUT".anova_output_2 <= 1.7295126914978027) THEN CASE WHEN ("ADS_ano_2_OUT".anova_output_5 <= 0.13244320452213287) THEN CASE WHEN ("ADS_ano_2_OUT".anova_output_3 <= -0.07511884719133377) THEN CASE WHEN ("ADS_ano_2_OUT".anova_output_5 <= -0.21430620551109314) THEN 18 ELSE CASE WHEN ("ADS_ano_2_OUT".anova_output_4 <= -0.10812019556760788) THEN 20 ELSE CASE WHEN ("ADS_ano_2_OUT".anova_output_5 <= -0.013297975063323975) THEN 22 ELSE 23 END END END ELSE 24 END ELSE 25 END ELSE 26 END END END AS node_id 
FROM "ADS_ano_2_OUT"), 
"DT_Output_8" AS 
(SELECT "DT_node_lookup_8"."KEY" AS "KEY", (SELECT "DT_node_data_8".node_id 
FROM "DT_node_data_8" 
WHERE "DT_node_data_8".node_id = "DT_node_lookup_8".node_id) AS node_id, (SELECT "DT_node_data_8".feature 
FROM "DT_node_data_8" 
WHERE "DT_node_data_8".node_id = "DT_node_lookup_8".node_id) AS feature, (SELECT "DT_node_data_8".threshold 
FROM "DT_node_data_8" 
WHERE "DT_node_data_8".node_id = "DT_node_lookup_8".node_id) AS threshold, (SELECT "DT_node_data_8".count 
FROM "DT_node_data_8" 
WHERE "DT_node_data_8".node_id = "DT_node_lookup_8".node_id) AS count, (SELECT "DT_node_data_8".depth 
FROM "DT_node_data_8" 
WHERE "DT_node_data_8".node_id = "DT_node_lookup_8".node_id) AS depth, (SELECT "DT_node_data_8"."Proba_0.0" 
FROM "DT_node_data_8" 
WHERE "DT_node_data_8".node_id = "DT_node_lookup_8".node_id) AS "Proba_0.0", (SELECT "DT_node_data_8"."LogProba_0.0" 
FROM "DT_node_data_8" 
WHERE "DT_node_data_8".node_id = "DT_node_lookup_8".node_id) AS "LogProba_0.0", (SELECT "DT_node_data_8"."Proba_1.0" 
FROM "DT_node_data_8" 
WHERE "DT_node_data_8".node_id = "DT_node_lookup_8".node_id) AS "Proba_1.0", (SELECT "DT_node_data_8"."LogProba_1.0" 
FROM "DT_node_data_8" 
WHERE "DT_node_data_8".node_id = "DT_node_lookup_8".node_id) AS "LogProba_1.0", (SELECT "DT_node_data_8"."Proba_2.0" 
FROM "DT_node_data_8" 
WHERE "DT_node_data_8".node_id = "DT_node_lookup_8".node_id) AS "Proba_2.0", (SELECT "DT_node_data_8"."LogProba_2.0" 
FROM "DT_node_data_8" 
WHERE "DT_node_data_8".node_id = "DT_node_lookup_8".node_id) AS "LogProba_2.0", (SELECT "DT_node_data_8"."Decision" 
FROM "DT_node_data_8" 
WHERE "DT_node_data_8".node_id = "DT_node_lookup_8".node_id) AS "Decision" 
FROM "DT_node_lookup_8"), 
"RF_Tree_8" AS 
(SELECT "DT_Output_8"."KEY" AS join_key_8, CAST(NULL AS FLOAT) AS "Score_8_0", "DT_Output_8"."Proba_0.0" AS "Proba_8_0", "DT_Output_8"."LogProba_0.0" AS "LogProba_8_0", CAST(NULL AS FLOAT) AS "Score_8_1", "DT_Output_8"."Proba_1.0" AS "Proba_8_1", "DT_Output_8"."LogProba_1.0" AS "LogProba_8_1", CAST(NULL AS FLOAT) AS "Score_8_2", "DT_Output_8"."Proba_2.0" AS "Proba_8_2", "DT_Output_8"."LogProba_2.0" AS "LogProba_8_2" 
FROM "DT_Output_8"), 
"DT_node_data_9" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Proba_0.0" AS "Proba_0.0", "Values"."LogProba_0.0" AS "LogProba_0.0", "Values"."Proba_1.0" AS "Proba_1.0", "Values"."LogProba_1.0" AS "LogProba_1.0", "Values"."Proba_2.0" AS "Proba_2.0", "Values"."LogProba_2.0" AS "LogProba_2.0", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'anova_output_2' AS feature, -1.4801501035690308 AS threshold, 96 AS count, 0 AS depth, 0.36666666666666664 AS "Proba_0.0", -1.00330210886 AS "LogProba_0.0", 0.26666666666666666 AS "Proba_1.0", -1.32175583998 AS "LogProba_1.0", 0.36666666666666664 AS "Proba_2.0", -1.00330210886 AS "LogProba_2.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 36 AS count, 1 AS depth, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 2 AS node_id, 'anova_output_4' AS feature, 0.10457572340965271 AS threshold, 60 AS count, 1 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.42105263157894735 AS "Proba_1.0", -0.864997437487 AS "LogProba_1.0", 0.5789473684210527 AS "Proba_2.0", -0.546543706368 AS "LogProba_2.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 3 AS node_id, 'anova_output_2' AS feature, 1.2390270233154297 AS threshold, 37 AS count, 2 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.6 AS "Proba_1.0", -0.510825623766 AS "LogProba_1.0", 0.4 AS "Proba_2.0", -0.916290731874 AS "LogProba_2.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 20 AS count, 3 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 5 AS node_id, 'anova_output_2' AS feature, 1.4948625564575195 AS threshold, 17 AS count, 3 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.18518518518518517 AS "Proba_1.0", -1.68639895357 AS "LogProba_1.0", 0.8148148148148148 AS "Proba_2.0", -0.204794412646 AS "LogProba_2.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 6 AS node_id, 'anova_output_3' AS feature, 0.03276626765727997 AS threshold, 5 AS count, 4 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.4444444444444444 AS "Proba_1.0", -0.810930216216 AS "LogProba_1.0", 0.5555555555555556 AS "Proba_2.0", -0.587786664902 AS "LogProba_2.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 9 AS node_id, 'anova_output_2' AS feature, 1.6685181856155396 AS threshold, 12 AS count, 4 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.05555555555555555 AS "Proba_1.0", -2.8903717579 AS "LogProba_1.0", 0.9444444444444444 AS "Proba_2.0", -0.0571584138399 AS "LogProba_2.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 10 AS node_id, 'anova_output_3' AS feature, -0.05381414294242859 AS threshold, 2 AS count, 5 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.16666666666666666 AS "Proba_1.0", -1.79175946923 AS "LogProba_1.0", 0.8333333333333334 AS "Proba_2.0", -0.182321556794 AS "LogProba_2.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 5 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 14 AS node_id, 'anova_output_2' AS feature, 1.1425471305847168 AS threshold, 23 AS count, 2 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.175 AS "Proba_1.0", -1.74296930506 AS "LogProba_1.0", 0.825 AS "Proba_2.0", -0.192371892647 AS "LogProba_2.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 3 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 2 AS "Decision" FROM DUAL) "Values"), 
"DT_node_lookup_9" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anova_output_2 <= -1.4801501035690308) THEN 1 ELSE CASE WHEN ("ADS_ano_2_OUT".anova_output_4 <= 0.10457572340965271) THEN CASE WHEN ("ADS_ano_2_OUT".anova_output_2 <= 1.2390270233154297) THEN 4 ELSE CASE WHEN ("ADS_ano_2_OUT".anova_output_2 <= 1.4948625564575195) THEN CASE WHEN ("ADS_ano_2_OUT".anova_output_3 <= 0.03276626765727997) THEN 7 ELSE 8 END ELSE CASE WHEN ("ADS_ano_2_OUT".anova_output_2 <= 1.6685181856155396) THEN CASE WHEN ("ADS_ano_2_OUT".anova_output_3 <= -0.05381414294242859) THEN 11 ELSE 12 END ELSE 13 END END END ELSE CASE WHEN ("ADS_ano_2_OUT".anova_output_2 <= 1.1425471305847168) THEN 15 ELSE 16 END END END AS node_id 
FROM "ADS_ano_2_OUT"), 
"DT_Output_9" AS 
(SELECT "DT_node_lookup_9"."KEY" AS "KEY", (SELECT "DT_node_data_9".node_id 
FROM "DT_node_data_9" 
WHERE "DT_node_data_9".node_id = "DT_node_lookup_9".node_id) AS node_id, (SELECT "DT_node_data_9".feature 
FROM "DT_node_data_9" 
WHERE "DT_node_data_9".node_id = "DT_node_lookup_9".node_id) AS feature, (SELECT "DT_node_data_9".threshold 
FROM "DT_node_data_9" 
WHERE "DT_node_data_9".node_id = "DT_node_lookup_9".node_id) AS threshold, (SELECT "DT_node_data_9".count 
FROM "DT_node_data_9" 
WHERE "DT_node_data_9".node_id = "DT_node_lookup_9".node_id) AS count, (SELECT "DT_node_data_9".depth 
FROM "DT_node_data_9" 
WHERE "DT_node_data_9".node_id = "DT_node_lookup_9".node_id) AS depth, (SELECT "DT_node_data_9"."Proba_0.0" 
FROM "DT_node_data_9" 
WHERE "DT_node_data_9".node_id = "DT_node_lookup_9".node_id) AS "Proba_0.0", (SELECT "DT_node_data_9"."LogProba_0.0" 
FROM "DT_node_data_9" 
WHERE "DT_node_data_9".node_id = "DT_node_lookup_9".node_id) AS "LogProba_0.0", (SELECT "DT_node_data_9"."Proba_1.0" 
FROM "DT_node_data_9" 
WHERE "DT_node_data_9".node_id = "DT_node_lookup_9".node_id) AS "Proba_1.0", (SELECT "DT_node_data_9"."LogProba_1.0" 
FROM "DT_node_data_9" 
WHERE "DT_node_data_9".node_id = "DT_node_lookup_9".node_id) AS "LogProba_1.0", (SELECT "DT_node_data_9"."Proba_2.0" 
FROM "DT_node_data_9" 
WHERE "DT_node_data_9".node_id = "DT_node_lookup_9".node_id) AS "Proba_2.0", (SELECT "DT_node_data_9"."LogProba_2.0" 
FROM "DT_node_data_9" 
WHERE "DT_node_data_9".node_id = "DT_node_lookup_9".node_id) AS "LogProba_2.0", (SELECT "DT_node_data_9"."Decision" 
FROM "DT_node_data_9" 
WHERE "DT_node_data_9".node_id = "DT_node_lookup_9".node_id) AS "Decision" 
FROM "DT_node_lookup_9"), 
"RF_Tree_9" AS 
(SELECT "DT_Output_9"."KEY" AS join_key_9, CAST(NULL AS FLOAT) AS "Score_9_0", "DT_Output_9"."Proba_0.0" AS "Proba_9_0", "DT_Output_9"."LogProba_0.0" AS "LogProba_9_0", CAST(NULL AS FLOAT) AS "Score_9_1", "DT_Output_9"."Proba_1.0" AS "Proba_9_1", "DT_Output_9"."LogProba_1.0" AS "LogProba_9_1", CAST(NULL AS FLOAT) AS "Score_9_2", "DT_Output_9"."Proba_2.0" AS "Proba_9_2", "DT_Output_9"."LogProba_2.0" AS "LogProba_9_2" 
FROM "DT_Output_9"), 
"RF_Join_CTE" AS 
(SELECT "RF_Tree_0".join_key_0 AS join_key_0, "RF_Tree_0"."Score_0_0" AS "Score_0_0", "RF_Tree_0"."Proba_0_0" AS "Proba_0_0", "RF_Tree_0"."LogProba_0_0" AS "LogProba_0_0", "RF_Tree_0"."Score_0_1" AS "Score_0_1", "RF_Tree_0"."Proba_0_1" AS "Proba_0_1", "RF_Tree_0"."LogProba_0_1" AS "LogProba_0_1", "RF_Tree_0"."Score_0_2" AS "Score_0_2", "RF_Tree_0"."Proba_0_2" AS "Proba_0_2", "RF_Tree_0"."LogProba_0_2" AS "LogProba_0_2", "RF_Tree_1".join_key_1 AS join_key_1, "RF_Tree_1"."Score_1_0" AS "Score_1_0", "RF_Tree_1"."Proba_1_0" AS "Proba_1_0", "RF_Tree_1"."LogProba_1_0" AS "LogProba_1_0", "RF_Tree_1"."Score_1_1" AS "Score_1_1", "RF_Tree_1"."Proba_1_1" AS "Proba_1_1", "RF_Tree_1"."LogProba_1_1" AS "LogProba_1_1", "RF_Tree_1"."Score_1_2" AS "Score_1_2", "RF_Tree_1"."Proba_1_2" AS "Proba_1_2", "RF_Tree_1"."LogProba_1_2" AS "LogProba_1_2", "RF_Tree_2".join_key_2 AS join_key_2, "RF_Tree_2"."Score_2_0" AS "Score_2_0", "RF_Tree_2"."Proba_2_0" AS "Proba_2_0", "RF_Tree_2"."LogProba_2_0" AS "LogProba_2_0", "RF_Tree_2"."Score_2_1" AS "Score_2_1", "RF_Tree_2"."Proba_2_1" AS "Proba_2_1", "RF_Tree_2"."LogProba_2_1" AS "LogProba_2_1", "RF_Tree_2"."Score_2_2" AS "Score_2_2", "RF_Tree_2"."Proba_2_2" AS "Proba_2_2", "RF_Tree_2"."LogProba_2_2" AS "LogProba_2_2", "RF_Tree_3".join_key_3 AS join_key_3, "RF_Tree_3"."Score_3_0" AS "Score_3_0", "RF_Tree_3"."Proba_3_0" AS "Proba_3_0", "RF_Tree_3"."LogProba_3_0" AS "LogProba_3_0", "RF_Tree_3"."Score_3_1" AS "Score_3_1", "RF_Tree_3"."Proba_3_1" AS "Proba_3_1", "RF_Tree_3"."LogProba_3_1" AS "LogProba_3_1", "RF_Tree_3"."Score_3_2" AS "Score_3_2", "RF_Tree_3"."Proba_3_2" AS "Proba_3_2", "RF_Tree_3"."LogProba_3_2" AS "LogProba_3_2", "RF_Tree_4".join_key_4 AS join_key_4, "RF_Tree_4"."Score_4_0" AS "Score_4_0", "RF_Tree_4"."Proba_4_0" AS "Proba_4_0", "RF_Tree_4"."LogProba_4_0" AS "LogProba_4_0", "RF_Tree_4"."Score_4_1" AS "Score_4_1", "RF_Tree_4"."Proba_4_1" AS "Proba_4_1", "RF_Tree_4"."LogProba_4_1" AS "LogProba_4_1", "RF_Tree_4"."Score_4_2" AS "Score_4_2", "RF_Tree_4"."Proba_4_2" AS "Proba_4_2", "RF_Tree_4"."LogProba_4_2" AS "LogProba_4_2", "RF_Tree_5".join_key_5 AS join_key_5, "RF_Tree_5"."Score_5_0" AS "Score_5_0", "RF_Tree_5"."Proba_5_0" AS "Proba_5_0", "RF_Tree_5"."LogProba_5_0" AS "LogProba_5_0", "RF_Tree_5"."Score_5_1" AS "Score_5_1", "RF_Tree_5"."Proba_5_1" AS "Proba_5_1", "RF_Tree_5"."LogProba_5_1" AS "LogProba_5_1", "RF_Tree_5"."Score_5_2" AS "Score_5_2", "RF_Tree_5"."Proba_5_2" AS "Proba_5_2", "RF_Tree_5"."LogProba_5_2" AS "LogProba_5_2", "RF_Tree_6".join_key_6 AS join_key_6, "RF_Tree_6"."Score_6_0" AS "Score_6_0", "RF_Tree_6"."Proba_6_0" AS "Proba_6_0", "RF_Tree_6"."LogProba_6_0" AS "LogProba_6_0", "RF_Tree_6"."Score_6_1" AS "Score_6_1", "RF_Tree_6"."Proba_6_1" AS "Proba_6_1", "RF_Tree_6"."LogProba_6_1" AS "LogProba_6_1", "RF_Tree_6"."Score_6_2" AS "Score_6_2", "RF_Tree_6"."Proba_6_2" AS "Proba_6_2", "RF_Tree_6"."LogProba_6_2" AS "LogProba_6_2", "RF_Tree_7".join_key_7 AS join_key_7, "RF_Tree_7"."Score_7_0" AS "Score_7_0", "RF_Tree_7"."Proba_7_0" AS "Proba_7_0", "RF_Tree_7"."LogProba_7_0" AS "LogProba_7_0", "RF_Tree_7"."Score_7_1" AS "Score_7_1", "RF_Tree_7"."Proba_7_1" AS "Proba_7_1", "RF_Tree_7"."LogProba_7_1" AS "LogProba_7_1", "RF_Tree_7"."Score_7_2" AS "Score_7_2", "RF_Tree_7"."Proba_7_2" AS "Proba_7_2", "RF_Tree_7"."LogProba_7_2" AS "LogProba_7_2", "RF_Tree_8".join_key_8 AS join_key_8, "RF_Tree_8"."Score_8_0" AS "Score_8_0", "RF_Tree_8"."Proba_8_0" AS "Proba_8_0", "RF_Tree_8"."LogProba_8_0" AS "LogProba_8_0", "RF_Tree_8"."Score_8_1" AS "Score_8_1", "RF_Tree_8"."Proba_8_1" AS "Proba_8_1", "RF_Tree_8"."LogProba_8_1" AS "LogProba_8_1", "RF_Tree_8"."Score_8_2" AS "Score_8_2", "RF_Tree_8"."Proba_8_2" AS "Proba_8_2", "RF_Tree_8"."LogProba_8_2" AS "LogProba_8_2", "RF_Tree_9".join_key_9 AS join_key_9, "RF_Tree_9"."Score_9_0" AS "Score_9_0", "RF_Tree_9"."Proba_9_0" AS "Proba_9_0", "RF_Tree_9"."LogProba_9_0" AS "LogProba_9_0", "RF_Tree_9"."Score_9_1" AS "Score_9_1", "RF_Tree_9"."Proba_9_1" AS "Proba_9_1", "RF_Tree_9"."LogProba_9_1" AS "LogProba_9_1", "RF_Tree_9"."Score_9_2" AS "Score_9_2", "RF_Tree_9"."Proba_9_2" AS "Proba_9_2", "RF_Tree_9"."LogProba_9_2" AS "LogProba_9_2" 
FROM "RF_Tree_0" LEFT OUTER JOIN "RF_Tree_1" ON "RF_Tree_0".join_key_0 = "RF_Tree_1".join_key_1 LEFT OUTER JOIN "RF_Tree_2" ON "RF_Tree_2".join_key_2 = "RF_Tree_1".join_key_1 LEFT OUTER JOIN "RF_Tree_3" ON "RF_Tree_3".join_key_3 = "RF_Tree_2".join_key_2 LEFT OUTER JOIN "RF_Tree_4" ON "RF_Tree_4".join_key_4 = "RF_Tree_3".join_key_3 LEFT OUTER JOIN "RF_Tree_5" ON "RF_Tree_5".join_key_5 = "RF_Tree_4".join_key_4 LEFT OUTER JOIN "RF_Tree_6" ON "RF_Tree_6".join_key_6 = "RF_Tree_5".join_key_5 LEFT OUTER JOIN "RF_Tree_7" ON "RF_Tree_7".join_key_7 = "RF_Tree_6".join_key_6 LEFT OUTER JOIN "RF_Tree_8" ON "RF_Tree_8".join_key_8 = "RF_Tree_7".join_key_7 LEFT OUTER JOIN "RF_Tree_9" ON "RF_Tree_9".join_key_9 = "RF_Tree_8".join_key_8), 
"RF_AVG_Scores" AS 
(SELECT "RF_Join_CTE".join_key_0 AS "KEY", "RF_Join_CTE"."Score_0_0" / 10 + "RF_Join_CTE"."Score_1_0" / 10 + "RF_Join_CTE"."Score_2_0" / 10 + "RF_Join_CTE"."Score_3_0" / 10 + "RF_Join_CTE"."Score_4_0" / 10 + "RF_Join_CTE"."Score_5_0" / 10 + "RF_Join_CTE"."Score_6_0" / 10 + "RF_Join_CTE"."Score_7_0" / 10 + "RF_Join_CTE"."Score_8_0" / 10 + "RF_Join_CTE"."Score_9_0" / 10 AS "Score_0", "RF_Join_CTE"."Proba_0_0" / 10 + "RF_Join_CTE"."Proba_1_0" / 10 + "RF_Join_CTE"."Proba_2_0" / 10 + "RF_Join_CTE"."Proba_3_0" / 10 + "RF_Join_CTE"."Proba_4_0" / 10 + "RF_Join_CTE"."Proba_5_0" / 10 + "RF_Join_CTE"."Proba_6_0" / 10 + "RF_Join_CTE"."Proba_7_0" / 10 + "RF_Join_CTE"."Proba_8_0" / 10 + "RF_Join_CTE"."Proba_9_0" / 10 AS "Proba_0", "RF_Join_CTE"."LogProba_0_0" / 10 + "RF_Join_CTE"."LogProba_1_0" / 10 + "RF_Join_CTE"."LogProba_2_0" / 10 + "RF_Join_CTE"."LogProba_3_0" / 10 + "RF_Join_CTE"."LogProba_4_0" / 10 + "RF_Join_CTE"."LogProba_5_0" / 10 + "RF_Join_CTE"."LogProba_6_0" / 10 + "RF_Join_CTE"."LogProba_7_0" / 10 + "RF_Join_CTE"."LogProba_8_0" / 10 + "RF_Join_CTE"."LogProba_9_0" / 10 AS "LogProba_0", "RF_Join_CTE"."Score_0_1" / 10 + "RF_Join_CTE"."Score_1_1" / 10 + "RF_Join_CTE"."Score_2_1" / 10 + "RF_Join_CTE"."Score_3_1" / 10 + "RF_Join_CTE"."Score_4_1" / 10 + "RF_Join_CTE"."Score_5_1" / 10 + "RF_Join_CTE"."Score_6_1" / 10 + "RF_Join_CTE"."Score_7_1" / 10 + "RF_Join_CTE"."Score_8_1" / 10 + "RF_Join_CTE"."Score_9_1" / 10 AS "Score_1", "RF_Join_CTE"."Proba_0_1" / 10 + "RF_Join_CTE"."Proba_1_1" / 10 + "RF_Join_CTE"."Proba_2_1" / 10 + "RF_Join_CTE"."Proba_3_1" / 10 + "RF_Join_CTE"."Proba_4_1" / 10 + "RF_Join_CTE"."Proba_5_1" / 10 + "RF_Join_CTE"."Proba_6_1" / 10 + "RF_Join_CTE"."Proba_7_1" / 10 + "RF_Join_CTE"."Proba_8_1" / 10 + "RF_Join_CTE"."Proba_9_1" / 10 AS "Proba_1", "RF_Join_CTE"."LogProba_0_1" / 10 + "RF_Join_CTE"."LogProba_1_1" / 10 + "RF_Join_CTE"."LogProba_2_1" / 10 + "RF_Join_CTE"."LogProba_3_1" / 10 + "RF_Join_CTE"."LogProba_4_1" / 10 + "RF_Join_CTE"."LogProba_5_1" / 10 + "RF_Join_CTE"."LogProba_6_1" / 10 + "RF_Join_CTE"."LogProba_7_1" / 10 + "RF_Join_CTE"."LogProba_8_1" / 10 + "RF_Join_CTE"."LogProba_9_1" / 10 AS "LogProba_1", "RF_Join_CTE"."Score_0_2" / 10 + "RF_Join_CTE"."Score_1_2" / 10 + "RF_Join_CTE"."Score_2_2" / 10 + "RF_Join_CTE"."Score_3_2" / 10 + "RF_Join_CTE"."Score_4_2" / 10 + "RF_Join_CTE"."Score_5_2" / 10 + "RF_Join_CTE"."Score_6_2" / 10 + "RF_Join_CTE"."Score_7_2" / 10 + "RF_Join_CTE"."Score_8_2" / 10 + "RF_Join_CTE"."Score_9_2" / 10 AS "Score_2", "RF_Join_CTE"."Proba_0_2" / 10 + "RF_Join_CTE"."Proba_1_2" / 10 + "RF_Join_CTE"."Proba_2_2" / 10 + "RF_Join_CTE"."Proba_3_2" / 10 + "RF_Join_CTE"."Proba_4_2" / 10 + "RF_Join_CTE"."Proba_5_2" / 10 + "RF_Join_CTE"."Proba_6_2" / 10 + "RF_Join_CTE"."Proba_7_2" / 10 + "RF_Join_CTE"."Proba_8_2" / 10 + "RF_Join_CTE"."Proba_9_2" / 10 AS "Proba_2", "RF_Join_CTE"."LogProba_0_2" / 10 + "RF_Join_CTE"."LogProba_1_2" / 10 + "RF_Join_CTE"."LogProba_2_2" / 10 + "RF_Join_CTE"."LogProba_3_2" / 10 + "RF_Join_CTE"."LogProba_4_2" / 10 + "RF_Join_CTE"."LogProba_5_2" / 10 + "RF_Join_CTE"."LogProba_6_2" / 10 + "RF_Join_CTE"."LogProba_7_2" / 10 + "RF_Join_CTE"."LogProba_8_2" / 10 + "RF_Join_CTE"."LogProba_9_2" / 10 AS "LogProba_2" 
FROM "RF_Join_CTE"), 
orig_cte AS 
(SELECT "RF_AVG_Scores"."KEY" AS "KEY", "RF_AVG_Scores"."Score_0" AS "Score_0", "RF_AVG_Scores"."Score_1" AS "Score_1", "RF_AVG_Scores"."Score_2" AS "Score_2", "RF_AVG_Scores"."Proba_0" AS "Proba_0", "RF_AVG_Scores"."Proba_1" AS "Proba_1", "RF_AVG_Scores"."Proba_2" AS "Proba_2", "RF_AVG_Scores"."LogProba_0" AS "LogProba_0", "RF_AVG_Scores"."LogProba_1" AS "LogProba_1", "RF_AVG_Scores"."LogProba_2" AS "LogProba_2", CAST(NULL AS FLOAT) AS "Decision" 
FROM "RF_AVG_Scores"), 
score_class_union AS 
(SELECT scu."KEY" AS "KEY", scu.class AS class, scu."LogProba" AS "LogProba", scu."Proba" AS "Proba", scu."Score" AS "Score" 
FROM (SELECT orig_cte."KEY" AS "KEY", 0 AS class, orig_cte."LogProba_0" AS "LogProba", orig_cte."Proba_0" AS "Proba", orig_cte."Score_0" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 1 AS class, orig_cte."LogProba_1" AS "LogProba", orig_cte."Proba_1" AS "Proba", orig_cte."Score_1" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 2 AS class, orig_cte."LogProba_2" AS "LogProba", orig_cte."Proba_2" AS "Proba", orig_cte."Score_2" AS "Score" 
FROM orig_cte) scu), 
score_max AS 
(SELECT orig_cte."KEY" AS "KEY", orig_cte."Score_0" AS "Score_0", orig_cte."Score_1" AS "Score_1", orig_cte."Score_2" AS "Score_2", orig_cte."Proba_0" AS "Proba_0", orig_cte."Proba_1" AS "Proba_1", orig_cte."Proba_2" AS "Proba_2", orig_cte."LogProba_0" AS "LogProba_0", orig_cte."LogProba_1" AS "LogProba_1", orig_cte."LogProba_2" AS "LogProba_2", orig_cte."Decision" AS "Decision", (SELECT max(score_class_union."LogProba") AS max_1 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_LogProba", (SELECT max(score_class_union."Proba") AS max_2 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_Proba", (SELECT max(score_class_union."Score") AS max_3 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_Score" 
FROM orig_cte), 
arg_max_cte AS 
(SELECT score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Score_2" AS "Score_2", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."Proba_2" AS "Proba_2", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."LogProba_2" AS "LogProba_2", score_max."Decision" AS "Decision", score_max."max_LogProba" AS "max_LogProba", score_max."max_Proba" AS "max_Proba", score_max."max_Score" AS "max_Score", (SELECT min(score_class_union.class) AS min_1 
FROM score_class_union 
WHERE score_max."max_LogProba" = score_class_union."LogProba" AND score_max."KEY" = score_class_union."KEY") AS "arg_max_LogProba", (SELECT min(score_class_union.class) AS min_2 
FROM score_class_union 
WHERE score_max."max_Proba" = score_class_union."Proba" AND score_max."KEY" = score_class_union."KEY") AS "arg_max_Proba", (SELECT min(score_class_union.class) AS min_3 
FROM score_class_union 
WHERE score_max."max_Score" = score_class_union."Score" AND score_max."KEY" = score_class_union."KEY") AS "arg_max_Score" 
FROM score_max)
 SELECT arg_max_cte."KEY" AS "KEY", arg_max_cte."Score_0" AS "Score_0", arg_max_cte."Score_1" AS "Score_1", arg_max_cte."Score_2" AS "Score_2", arg_max_cte."Proba_0" AS "Proba_0", arg_max_cte."Proba_1" AS "Proba_1", arg_max_cte."Proba_2" AS "Proba_2", CASE WHEN (arg_max_cte."Proba_0" > 0.0) THEN ln(arg_max_cte."Proba_0") ELSE -BINARY_FLOAT_INFINITY END AS "LogProba_0", CASE WHEN (arg_max_cte."Proba_1" > 0.0) THEN ln(arg_max_cte."Proba_1") ELSE -BINARY_FLOAT_INFINITY END AS "LogProba_1", CASE WHEN (arg_max_cte."Proba_2" > 0.0) THEN ln(arg_max_cte."Proba_2") ELSE -BINARY_FLOAT_INFINITY END AS "LogProba_2", arg_max_cte."arg_max_Proba" AS "Decision" 
FROM arg_max_cte