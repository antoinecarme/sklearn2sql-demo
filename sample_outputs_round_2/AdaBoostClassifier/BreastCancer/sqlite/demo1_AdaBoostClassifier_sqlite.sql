-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH "DT_node_lookup" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_20" <= 16.795000076293945) THEN CASE WHEN ("ADS"."Feature_27" <= 0.13580000400543213) THEN CASE WHEN ("ADS"."Feature_12" <= 6.597499847412109) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_21" <= 25.670000076293945) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_21" <= 19.90999984741211) THEN CASE WHEN ("ADS"."Feature_16" <= 0.03371500223875046) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_24" <= 0.0879800021648407) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "INPUT_DATA" AS "ADS"), 
"DT_node_data" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'Feature_20' AS feature, 16.795000076293945 AS threshold, 569 AS count, 0 AS depth, 0.37258347978910394 AS "Proba_0", -0.987294159454 AS "LogProba_0", 0.627416520210896 AS "Proba_1", -0.466144652347 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 1 AS node_id, 'Feature_27' AS feature, 0.13580000400543213 AS threshold, 379 AS count, 1 AS depth, 0.08707124010554138 AS "Proba_0", -2.44102864362 AS "LogProba_0", 0.9129287598944587 AS "Proba_1", -0.0910974300247 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 2 AS node_id, 'Feature_12' AS feature, 6.597499847412109 AS threshold, 333 AS count, 2 AS depth, 0.015015015015015093 AS "Proba_0", -4.19870457755 AS "LogProba_0", 0.9849849849849848 AS "Proba_1", -0.0151288815963 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 332 AS count, 3 AS depth, 0.012048192771084402 AS "Proba_0", -4.4188406078 AS "LogProba_0", 0.9879518072289157 AS "Proba_1", -0.0121213605323 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0 AS "Decision" UNION ALL SELECT 5 AS node_id, 'Feature_21' AS feature, 25.670000076293945 AS threshold, 46 AS count, 2 AS depth, 0.6086956521739131 AS "Proba_0", -0.496436886314 AS "LogProba_0", 0.3913043478260869 AS "Proba_1", -0.938269638593 AS "LogProba_1", 0 AS "Decision" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 3 AS depth, 0.21052631578947367 AS "Proba_0", -1.55814461805 AS "LogProba_0", 0.7894736842105264 AS "Proba_1", -0.236388778064 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 27 AS count, 3 AS depth, 0.8888888888888888 AS "Proba_0", -0.117783035656 AS "LogProba_0", 0.11111111111111108 AS "Proba_1", -2.19722457734 AS "LogProba_1", 0 AS "Decision" UNION ALL SELECT 8 AS node_id, 'Feature_21' AS feature, 19.90999984741211 AS threshold, 190 AS count, 1 AS depth, 0.9421052631578946 AS "Proba_0", -0.0596382663197 AS "LogProba_0", 0.057894736842105485 AS "Proba_1", -2.84912879936 AS "LogProba_1", 0 AS "Decision" UNION ALL SELECT 9 AS node_id, 'Feature_16' AS feature, 0.03371500223875046 AS threshold, 17 AS count, 2 AS depth, 0.4705882352941177 AS "Proba_0", -0.753771802376 AS "LogProba_0", 0.5294117647058824 AS "Proba_1", -0.63598876672 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0 AS "Decision" UNION ALL SELECT 12 AS node_id, 'Feature_24' AS feature, 0.0879800021648407 AS threshold, 173 AS count, 2 AS depth, 0.9884393063583815 AS "Proba_0", -0.0116280379951 AS "LogProba_0", 0.011560693641618542 AS "Proba_1", -4.46014441394 AS "LogProba_1", 0 AS "Decision" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 172 AS count, 3 AS depth, 0.9941860465116279 AS "Proba_0", -0.00583092031079 AS "LogProba_0", 0.0058139534883721155 AS "Proba_1", -5.14749447681 AS "LogProba_1", 0 AS "Decision") AS "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".node_id AS node_id, "DT_node_data".feature AS feature, "DT_node_data".threshold AS threshold, "DT_node_data".count AS count, "DT_node_data".depth AS depth, "DT_node_data"."Proba_0" AS "Proba_0", "DT_node_data"."LogProba_0" AS "LogProba_0", "DT_node_data"."Proba_1" AS "Proba_1", "DT_node_data"."LogProba_1" AS "LogProba_1", "DT_node_data"."Decision" AS "Decision" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".node_id), 
"AdaBoost_Estim_0" AS 
(SELECT "DT_Output"."KEY" AS join_key_0, CAST(NULL AS FLOAT) AS "Score_0_0", "DT_Output"."Proba_0" AS "Proba_0_0", "DT_Output"."LogProba_0" AS "LogProba_0_0", CAST(NULL AS FLOAT) AS "Score_0_1", "DT_Output"."Proba_1" AS "Proba_0_1", "DT_Output"."LogProba_1" AS "LogProba_0_1", "DT_Output"."Decision" AS "Decision_0" 
FROM "DT_Output"), 
"DT_node_lookup_1" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_21" <= 29.225000381469727) THEN CASE WHEN ("ADS"."Feature_13" <= 34.63999938964844) THEN CASE WHEN ("ADS"."Feature_27" <= 0.171750009059906) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_21" <= 20.875) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_27" <= 0.092289999127388) THEN CASE WHEN ("ADS"."Feature_22" <= 106.30000305175781) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_22" <= 86.66999816894531) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "INPUT_DATA" AS "ADS"), 
"DT_node_data_1" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'Feature_21' AS feature, 29.225000381469727 AS threshold, 569 AS count, 0 AS depth, 0.4999999999431488 AS "Proba_0", -0.693147180674 AS "LogProba_0", 0.5000000000568513 AS "Proba_1", -0.693147180446 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 1 AS node_id, 'Feature_13' AS feature, 34.63999938964844 AS threshold, 417 AS count, 1 AS depth, 0.30218763618877426 AS "Proba_0", -1.19670714266 AS "LogProba_0", 0.6978123638112258 AS "Proba_1", -0.359805032113 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 2 AS node_id, 'Feature_27' AS feature, 0.171750009059906 AS threshold, 309 AS count, 2 AS depth, 0.11702069956982805 AS "Proba_0", -2.14540444043 AS "LogProba_0", 0.8829793004301719 AS "Proba_1", -0.124453520974 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 295 AS count, 3 AS depth, 0.05092299239976125 AS "Proba_0", -2.97744074033 AS "LogProba_0", 0.9490770076002387 AS "Proba_1", -0.0522653376156 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 14 AS count, 3 AS depth, 0.8973984610063975 AS "Proba_0", -0.108255300389 AS "LogProba_0", 0.10260153899360236 AS "Proba_1", -2.27690234642 AS "LogProba_1", 0 AS "Decision" UNION ALL SELECT 5 AS node_id, 'Feature_21' AS feature, 20.875 AS threshold, 108 AS count, 2 AS depth, 0.8443464419023172 AS "Proba_0", -0.169192392421 AS "LogProba_0", 0.15565355809768272 AS "Proba_1", -1.86012252275 AS "LogProba_1", 0 AS "Decision" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 3 AS depth, 5.1334322154606606e-08 AS "Proba_0", -16.7849062606 AS "LogProba_0", 0.9999999486656779 AS "Proba_1", -5.13343234441e-08 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 89 AS count, 3 AS depth, 0.9439194893533562 AS "Proba_0", -0.0577144031757 AS "LogProba_0", 0.05608051064664379 AS "Proba_1", -2.88096693062 AS "LogProba_1", 0 AS "Decision" UNION ALL SELECT 8 AS node_id, 'Feature_27' AS feature, 0.092289999127388 AS threshold, 152 AS count, 1 AS depth, 0.8835995472736937 AS "Proba_0", -0.123751319802 AS "LogProba_0", 0.11640045272630625 AS "Proba_1", -2.15071885429 AS "LogProba_1", 0 AS "Decision" UNION ALL SELECT 9 AS node_id, 'Feature_22' AS feature, 106.30000305175781 AS threshold, 39 AS count, 2 AS depth, 0.05455848397161274 AS "Proba_0", -2.90848205228 AS "LogProba_0", 0.9454415160283871 AS "Proba_1", -0.0561032478698 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 36 AS count, 3 AS depth, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0 AS "Decision" UNION ALL SELECT 12 AS node_id, 'Feature_22' AS feature, 86.66999816894531 AS threshold, 113 AS count, 2 AS depth, 0.9699207864275603 AS "Proba_0", -0.0305408742961 AS "LogProba_0", 0.030079213572439693 AS "Proba_1", -3.50392092478 AS "LogProba_1", 0 AS "Decision" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 109 AS count, 3 AS depth, 0.9806470011867856 AS "Proba_0", -0.0195427198645 AS "LogProba_0", 0.019352998813214277 AS "Proba_1", -3.94490789409 AS "LogProba_1", 0 AS "Decision") AS "Values"), 
"DT_Output_1" AS 
(SELECT "DT_node_lookup_1"."KEY" AS "KEY", "DT_node_lookup_1".node_id_2 AS node_id_2, "DT_node_data_1".node_id AS node_id, "DT_node_data_1".feature AS feature, "DT_node_data_1".threshold AS threshold, "DT_node_data_1".count AS count, "DT_node_data_1".depth AS depth, "DT_node_data_1"."Proba_0" AS "Proba_0", "DT_node_data_1"."LogProba_0" AS "LogProba_0", "DT_node_data_1"."Proba_1" AS "Proba_1", "DT_node_data_1"."LogProba_1" AS "LogProba_1", "DT_node_data_1"."Decision" AS "Decision" 
FROM "DT_node_lookup_1" LEFT OUTER JOIN "DT_node_data_1" ON "DT_node_lookup_1".node_id_2 = "DT_node_data_1".node_id), 
"AdaBoost_Estim_1" AS 
(SELECT "DT_Output_1"."KEY" AS join_key_1, CAST(NULL AS FLOAT) AS "Score_1_0", "DT_Output_1"."Proba_0" AS "Proba_1_0", "DT_Output_1"."LogProba_0" AS "LogProba_1_0", CAST(NULL AS FLOAT) AS "Score_1_1", "DT_Output_1"."Proba_1" AS "Proba_1_1", "DT_Output_1"."LogProba_1" AS "LogProba_1_1", "DT_Output_1"."Decision" AS "Decision_1" 
FROM "DT_Output_1"), 
"DT_node_lookup_2" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_7" <= 0.049230001866817474) THEN CASE WHEN ("ADS"."Feature_5" <= 0.060419999063014984) THEN CASE WHEN ("ADS"."Feature_5" <= 0.057520002126693726) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_22" <= 117.44999694824219) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_22" <= 101.94999694824219) THEN CASE WHEN ("ADS"."Feature_27" <= 0.17864999175071716) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_21" <= 20.645000457763672) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "INPUT_DATA" AS "ADS"), 
"DT_node_data_2" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.049230001866817474 AS threshold, 569 AS count, 0 AS depth, 0.4999999993664453 AS "Proba_0", -0.693147181827 AS "LogProba_0", 0.5000000006335548 AS "Proba_1", -0.693147179293 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 1 AS node_id, 'Feature_5' AS feature, 0.060419999063014984 AS threshold, 344 AS count, 1 AS depth, 0.2104644650746918 AS "Proba_0", -1.55843845211 AS "LogProba_0", 0.7895355349253083 AS "Proba_1", -0.236310436894 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 2 AS node_id, 'Feature_5' AS feature, 0.057520002126693726 AS threshold, 120 AS count, 2 AS depth, 0.6308088461905441 AS "Proba_0", -0.460752400227 AS "LogProba_0", 0.36919115380945594 AS "Proba_1", -0.99644073707 AS "LogProba_1", 0 AS "Decision" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 101 AS count, 3 AS depth, 2.414370581439031e-09 AS "Proba_0", -19.8418272126 AS "LogProba_0", 0.9999999975856294 AS "Proba_1", -2.41437059526e-09 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 3 AS depth, 0.9345907793932348 AS "Proba_0", -0.0676465145967 AS "LogProba_0", 0.06540922060676532 AS "Proba_1", -2.72709204259 AS "LogProba_1", 0 AS "Decision" UNION ALL SELECT 5 AS node_id, 'Feature_22' AS feature, 117.44999694824219 AS threshold, 224 AS count, 2 AS depth, 0.055110900368440754 AS "Proba_0", -2.89840775356 AS "LogProba_0", 0.9448890996315592 AS "Proba_1", -0.0566877132623 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 216 AS count, 3 AS depth, 0.021875134015522123 AS "Proba_0", -3.82240472033 AS "LogProba_0", 0.9781248659844779 AS "Proba_1", -0.0221179422663 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, 0.999999911715853 AS "Proba_0", -8.828415089e-08 AS "LogProba_0", 8.828414699914627e-08 AS "Proba_1", -16.2427052811 AS "LogProba_1", 0 AS "Decision" UNION ALL SELECT 8 AS node_id, 'Feature_22' AS feature, 101.94999694824219 AS threshold, 225 AS count, 1 AS depth, 0.8787790818369242 AS "Proba_0", -0.129221741854 AS "LogProba_0", 0.12122091816307581 AS "Proba_1", -2.11014062813 AS "LogProba_1", 0 AS "Decision" UNION ALL SELECT 9 AS node_id, 'Feature_27' AS feature, 0.17864999175071716 AS threshold, 24 AS count, 2 AS depth, 0.14599815285565032 AS "Proba_0", -1.92416130903 AS "LogProba_0", 0.8540018471443498 AS "Proba_1", -0.157821922263 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 20 AS count, 3 AS depth, 0.02141024903298849 AS "Proba_0", -3.84388554483 AS "LogProba_0", 0.9785897509670115 AS "Proba_1", -0.0216427733405 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0 AS "Decision" UNION ALL SELECT 12 AS node_id, 'Feature_21' AS feature, 20.645000457763672 AS threshold, 201 AS count, 2 AS depth, 0.9830679205582812 AS "Proba_0", -0.0170770660457 AS "LogProba_0", 0.016932079441718775 AS "Proba_1", -4.07854526452 AS "LogProba_1", 0 AS "Decision" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 3 AS depth, 0.0030663608801756756 AS "Proba_0", -5.78726380155 AS "LogProba_0", 0.9969336391198242 AS "Proba_1", -0.00307107179741 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 183 AS count, 3 AS depth, 0.9921542513189513 AS "Proba_0", -0.0078766885042 AS "LogProba_0", 0.00784574868104873 AS "Proba_1", -4.84778346318 AS "LogProba_1", 0 AS "Decision") AS "Values"), 
"DT_Output_2" AS 
(SELECT "DT_node_lookup_2"."KEY" AS "KEY", "DT_node_lookup_2".node_id_2 AS node_id_2, "DT_node_data_2".node_id AS node_id, "DT_node_data_2".feature AS feature, "DT_node_data_2".threshold AS threshold, "DT_node_data_2".count AS count, "DT_node_data_2".depth AS depth, "DT_node_data_2"."Proba_0" AS "Proba_0", "DT_node_data_2"."LogProba_0" AS "LogProba_0", "DT_node_data_2"."Proba_1" AS "Proba_1", "DT_node_data_2"."LogProba_1" AS "LogProba_1", "DT_node_data_2"."Decision" AS "Decision" 
FROM "DT_node_lookup_2" LEFT OUTER JOIN "DT_node_data_2" ON "DT_node_lookup_2".node_id_2 = "DT_node_data_2".node_id), 
"AdaBoost_Estim_2" AS 
(SELECT "DT_Output_2"."KEY" AS join_key_2, CAST(NULL AS FLOAT) AS "Score_2_0", "DT_Output_2"."Proba_0" AS "Proba_2_0", "DT_Output_2"."LogProba_0" AS "LogProba_2_0", CAST(NULL AS FLOAT) AS "Score_2_1", "DT_Output_2"."Proba_1" AS "Proba_2_1", "DT_Output_2"."LogProba_1" AS "LogProba_2_1", "DT_Output_2"."Decision" AS "Decision_2" 
FROM "DT_Output_2"), 
"DT_node_lookup_3" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_18" <= 0.016905000433325768) THEN CASE WHEN ("ADS"."Feature_4" <= 0.09044000506401062) THEN CASE WHEN ("ADS"."Feature_14" <= 0.0032939999364316463) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_16" <= 0.031109999865293503) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_25" <= 0.43674999475479126) THEN CASE WHEN ("ADS"."Feature_22" <= 107.44999694824219) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_13" <= 17.799999237060547) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "INPUT_DATA" AS "ADS"), 
"DT_node_data_3" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'Feature_18' AS feature, 0.016905000433325768 AS threshold, 569 AS count, 0 AS depth, 0.5000000002061663 AS "Proba_0", -0.693147180148 AS "LogProba_0", 0.4999999997938337 AS "Proba_1", -0.693147180972 AS "LogProba_1", 0 AS "Decision" UNION ALL SELECT 1 AS node_id, 'Feature_4' AS feature, 0.09044000506401062 AS threshold, 215 AS count, 1 AS depth, 0.8474375284226273 AS "Proba_0", -0.16553815522 AS "LogProba_0", 0.15256247157737274 AS "Proba_1", -1.88018111713 AS "LogProba_1", 0 AS "Decision" UNION ALL SELECT 2 AS node_id, 'Feature_14' AS feature, 0.0032939999364316463 AS threshold, 88 AS count, 2 AS depth, 0.36714696158665094 AS "Proba_0", -1.00199307079 AS "LogProba_0", 0.6328530384133491 AS "Proba_1", -0.457517050596 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, 0.9896505377547191 AS "Proba_0", -0.0104033903369 AS "LogProba_0", 0.010349462245280924 AS "Proba_1", -4.5708207176 AS "LogProba_1", 0 AS "Decision" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 82 AS count, 3 AS depth, 0.018500432520674192 AS "Proba_0", -3.98996116768 AS "LogProba_0", 0.9814995674793259 AS "Proba_1", -0.0186737059388 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 5 AS node_id, 'Feature_16' AS feature, 0.031109999865293503 AS threshold, 127 AS count, 2 AS depth, 0.9468935736297664 AS "Proba_0", -0.0545685747622 AS "LogProba_0", 0.05310642637023358 AS "Proba_1", -2.93545733414 AS "LogProba_1", 0 AS "Decision" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 83 AS count, 3 AS depth, 0.975933493633451 AS "Proba_0", -0.0243608366598 AS "LogProba_0", 0.024066506366548977 AS "Proba_1", -3.72693418244 AS "LogProba_1", 0 AS "Decision" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 44 AS count, 3 AS depth, 0.41210764979972514 AS "Proba_0", -0.88647067784 AS "LogProba_0", 0.5878923502002749 AS "Proba_1", -0.531211425735 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 8 AS node_id, 'Feature_25' AS feature, 0.43674999475479126 AS threshold, 354 AS count, 1 AS depth, 0.16502148029276562 AS "Proba_0", -1.80167962996 AS "LogProba_0", 0.8349785197072344 AS "Proba_1", -0.180349279364 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 9 AS node_id, 'Feature_22' AS feature, 107.44999694824219 AS threshold, 311 AS count, 2 AS depth, 0.0783577646096376 AS "Proba_0", -2.5464702135 AS "LogProba_0", 0.9216422353903624 AS "Proba_1", -0.081598161759 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 229 AS count, 3 AS depth, 0.004337471505327471 AS "Proba_0", -5.44046370311 AS "LogProba_0", 0.9956625284946725 AS "Proba_1", -0.00434690562489 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 82 AS count, 3 AS depth, 0.3732400992516027 AS "Proba_0", -0.985533368697 AS "LogProba_0", 0.6267599007483974 AS "Proba_1", -0.467191745103 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 12 AS node_id, 'Feature_13' AS feature, 17.799999237060547 AS threshold, 43 AS count, 2 AS depth, 0.9587227665689975 AS "Proba_0", -0.0421533318473 AS "LogProba_0", 0.041277233431002584 AS "Proba_1", -3.18744417965 AS "LogProba_1", 0 AS "Decision" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 2.9250782788355278e-08 AS "Proba_0", -17.3473595016 AS "LogProba_0", 0.9999999707492172 AS "Proba_1", -2.92507832237e-08 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 39 AS count, 3 AS depth, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0 AS "Decision") AS "Values"), 
"DT_Output_3" AS 
(SELECT "DT_node_lookup_3"."KEY" AS "KEY", "DT_node_lookup_3".node_id_2 AS node_id_2, "DT_node_data_3".node_id AS node_id, "DT_node_data_3".feature AS feature, "DT_node_data_3".threshold AS threshold, "DT_node_data_3".count AS count, "DT_node_data_3".depth AS depth, "DT_node_data_3"."Proba_0" AS "Proba_0", "DT_node_data_3"."LogProba_0" AS "LogProba_0", "DT_node_data_3"."Proba_1" AS "Proba_1", "DT_node_data_3"."LogProba_1" AS "LogProba_1", "DT_node_data_3"."Decision" AS "Decision" 
FROM "DT_node_lookup_3" LEFT OUTER JOIN "DT_node_data_3" ON "DT_node_lookup_3".node_id_2 = "DT_node_data_3".node_id), 
"AdaBoost_Estim_3" AS 
(SELECT "DT_Output_3"."KEY" AS join_key_3, CAST(NULL AS FLOAT) AS "Score_3_0", "DT_Output_3"."Proba_0" AS "Proba_3_0", "DT_Output_3"."LogProba_0" AS "LogProba_3_0", CAST(NULL AS FLOAT) AS "Score_3_1", "DT_Output_3"."Proba_1" AS "Proba_3_1", "DT_Output_3"."LogProba_1" AS "LogProba_3_1", "DT_Output_3"."Decision" AS "Decision_3" 
FROM "DT_Output_3"), 
"DT_node_lookup_4" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_27" <= 0.12105000019073486) THEN CASE WHEN ("ADS"."Feature_13" <= 38.415000915527344) THEN CASE WHEN ("ADS"."Feature_21" <= 33.269996643066406) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_18" <= 0.024459999054670334) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_23" <= 724.0499877929688) THEN CASE WHEN ("ADS"."Feature_24" <= 0.1772499978542328) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_24" <= 0.10869999974966049) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "INPUT_DATA" AS "ADS"), 
"DT_node_data_4" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'Feature_27' AS feature, 0.12105000019073486 AS threshold, 569 AS count, 0 AS depth, 0.5000000012060921 AS "Proba_0", -0.693147178148 AS "LogProba_0", 0.4999999987939079 AS "Proba_1", -0.693147182972 AS "LogProba_1", 0 AS "Decision" UNION ALL SELECT 1 AS node_id, 'Feature_13' AS feature, 38.415000915527344 AS threshold, 339 AS count, 1 AS depth, 0.15035467932944827 AS "Proba_0", -1.89475824712 AS "LogProba_0", 0.8496453206705517 AS "Proba_1", -0.162936286378 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 2 AS node_id, 'Feature_21' AS feature, 33.269996643066406 AS threshold, 312 AS count, 2 AS depth, 0.06459578502394893 AS "Proba_0", -2.73960611763 AS "LogProba_0", 0.935404214976051 AS "Proba_1", -0.0667765276325 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 292 AS count, 3 AS depth, 0.02751973491788657 AS "Proba_0", -3.59285189831 AS "LogProba_0", 0.9724802650821134 AS "Proba_1", -0.0279054966701 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 20 AS count, 3 AS depth, 0.9999999565024892 AS "Proba_0", -4.34975117615e-08 AS "LogProba_0", 4.349751082649636e-08 AS "Proba_1", -16.9505621229 AS "LogProba_1", 0 AS "Decision" UNION ALL SELECT 5 AS node_id, 'Feature_18' AS feature, 0.024459999054670334 AS threshold, 27 AS count, 2 AS depth, 0.8436179305643223 AS "Proba_0", -0.170055575786 AS "LogProba_0", 0.15638206943567762 AS "Proba_1", -1.855453103 AS "LogProba_1", 0 AS "Decision" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 3 AS depth, 0.9997764267971259 AS "Proba_0", -0.000223598199088 AS "LogProba_0", 0.0002235732028740943 AS "Proba_1", -8.4057716679 AS "LogProba_1", 0 AS "Decision" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS count, 3 AS depth, 0.13905341255884604 AS "Proba_0", -1.97289715665 AS "LogProba_0", 0.860946587441154 AS "Proba_1", -0.149722811971 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 8 AS node_id, 'Feature_23' AS feature, 724.0499877929688 AS threshold, 230 AS count, 1 AS depth, 0.7627607489627164 AS "Proba_0", -0.270810863105 AS "LogProba_0", 0.23723925103728363 AS "Proba_1", -1.438686149 AS "LogProba_1", 0 AS "Decision" UNION ALL SELECT 9 AS node_id, 'Feature_24' AS feature, 0.1772499978542328 AS threshold, 29 AS count, 2 AS depth, 0.13726837366269065 AS "Proba_0", -1.98581733751 AS "LogProba_0", 0.8627316263373094 AS "Proba_1", -0.147651613855 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 23 AS count, 3 AS depth, 7.444612692024677e-08 AS "Proba_0", -16.4131901017 AS "LogProba_0", 0.9999999255538731 AS "Proba_1", -7.44461297009e-08 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, 0.9802663753736043 AS "Proba_0", -0.0199309326459 AS "LogProba_0", 0.019733624626395826 AS "Proba_1", -3.9254312644 AS "LogProba_1", 0 AS "Decision" UNION ALL SELECT 12 AS node_id, 'Feature_24' AS feature, 0.10869999974966049 AS threshold, 201 AS count, 2 AS depth, 0.9229534699123714 AS "Proba_0", -0.0801764575459 AS "LogProba_0", 0.07704653008762855 AS "Proba_1", -2.56334575278 AS "LogProba_1", 0 AS "Decision" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 0.05749304435408342 AS "Proba_0", -2.85609130625 AS "LogProba_0", 0.9425069556459166 AS "Proba_1", -0.0592119796915 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 197 AS count, 3 AS depth, 0.9765642443583523 AS "Proba_0", -0.023714740396 AS "LogProba_0", 0.0234357556416476 AS "Proba_1", -3.75349240398 AS "LogProba_1", 0 AS "Decision") AS "Values"), 
"DT_Output_4" AS 
(SELECT "DT_node_lookup_4"."KEY" AS "KEY", "DT_node_lookup_4".node_id_2 AS node_id_2, "DT_node_data_4".node_id AS node_id, "DT_node_data_4".feature AS feature, "DT_node_data_4".threshold AS threshold, "DT_node_data_4".count AS count, "DT_node_data_4".depth AS depth, "DT_node_data_4"."Proba_0" AS "Proba_0", "DT_node_data_4"."LogProba_0" AS "LogProba_0", "DT_node_data_4"."Proba_1" AS "Proba_1", "DT_node_data_4"."LogProba_1" AS "LogProba_1", "DT_node_data_4"."Decision" AS "Decision" 
FROM "DT_node_lookup_4" LEFT OUTER JOIN "DT_node_data_4" ON "DT_node_lookup_4".node_id_2 = "DT_node_data_4".node_id), 
"AdaBoost_Estim_4" AS 
(SELECT "DT_Output_4"."KEY" AS join_key_4, CAST(NULL AS FLOAT) AS "Score_4_0", "DT_Output_4"."Proba_0" AS "Proba_4_0", "DT_Output_4"."LogProba_0" AS "LogProba_4_0", CAST(NULL AS FLOAT) AS "Score_4_1", "DT_Output_4"."Proba_1" AS "Proba_4_1", "DT_Output_4"."LogProba_1" AS "LogProba_4_1", "DT_Output_4"."Decision" AS "Decision_4" 
FROM "DT_Output_4"), 
"DT_node_lookup_5" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_1" <= 19.610000610351562) THEN CASE WHEN ("ADS"."Feature_5" <= 0.11765000224113464) THEN CASE WHEN ("ADS"."Feature_13" <= 48.87000274658203) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_23" <= 714.0999755859375) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_19" <= 0.0034020000603049994) THEN CASE WHEN ("ADS"."Feature_27" <= 0.10954999923706055) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_7" <= 0.05201999843120575) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "INPUT_DATA" AS "ADS"), 
"DT_node_data_5" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'Feature_1' AS feature, 19.610000610351562 AS threshold, 569 AS count, 0 AS depth, 0.5000000000000002 AS "Proba_0", -0.69314718056 AS "LogProba_0", 0.49999999999999983 AS "Proba_1", -0.69314718056 AS "LogProba_1", 0 AS "Decision" UNION ALL SELECT 1 AS node_id, 'Feature_5' AS feature, 0.11765000224113464 AS threshold, 323 AS count, 1 AS depth, 0.16521886692917234 AS "Proba_0", -1.80048421782 AS "LogProba_0", 0.8347811330708277 AS "Proba_1", -0.180585704573 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 2 AS node_id, 'Feature_13' AS feature, 48.87000274658203 AS threshold, 252 AS count, 2 AS depth, 0.03469782668562757 AS "Proba_0", -3.36107822553 AS "LogProba_0", 0.9653021733143725 AS "Proba_1", -0.0353140936908 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 240 AS count, 3 AS depth, 0.002310480550869309 AS "Proba_0", -6.0702997454 AS "LogProba_0", 0.9976895194491308 AS "Proba_1", -0.00231315382956 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 3 AS depth, 0.9999923453722306 AS "Proba_0", -7.65465706623e-06 AS "LogProba_0", 7.654627769461302e-06 AS "Proba_1", -11.7802001558 AS "LogProba_1", 0 AS "Decision" UNION ALL SELECT 5 AS node_id, 'Feature_23' AS feature, 714.0999755859375 AS threshold, 71 AS count, 2 AS depth, 0.8407093748360126 AS "Proba_0", -0.173509249677 AS "LogProba_0", 0.1592906251639875 AS "Proba_1", -1.83702491399 AS "LogProba_1", 0 AS "Decision" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 25 AS count, 3 AS depth, 0.00766571662548916 AS "Proba_0", -4.87099727781 AS "LogProba_0", 0.9923342833745108 AS "Proba_1", -0.00769524925383 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 46 AS count, 3 AS depth, 0.9994568565775704 AS "Proba_0", -0.00054329097825 AS "LogProba_0", 0.0005431434224296797 AS "Proba_1", -7.5181371432 AS "LogProba_1", 0 AS "Decision" UNION ALL SELECT 8 AS node_id, 'Feature_19' AS feature, 0.0034020000603049994 AS threshold, 246 AS count, 1 AS depth, 0.840404945908252 AS "Proba_0", -0.173871424845 AS "LogProba_0", 0.15959505409174798 AS "Proba_1", -1.83511558385 AS "LogProba_1", 0 AS "Decision" UNION ALL SELECT 9 AS node_id, 'Feature_27' AS feature, 0.10954999923706055 AS threshold, 117 AS count, 2 AS depth, 0.9584478805266669 AS "Proba_0", -0.0424400940556 AS "LogProba_0", 0.041552119473333204 AS "Proba_1", -3.18080674879 AS "LogProba_1", 0 AS "Decision" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 51 AS count, 3 AS depth, 0.06256370684440445 AS "Proba_0", -2.77156993187 AS "LogProba_0", 0.9374362931555956 AS "Proba_1", -0.0646064774139 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 66 AS count, 3 AS depth, 0.9906864794987664 AS "Proba_0", -0.00935716251854 AS "LogProba_0", 0.009313520501233588 AS "Proba_1", -4.67628811726 AS "LogProba_1", 0 AS "Decision" UNION ALL SELECT 12 AS node_id, 'Feature_7' AS feature, 0.05201999843120575 AS threshold, 129 AS count, 2 AS depth, 0.40579956304548054 AS "Proba_0", -0.901895928364 AS "LogProba_0", 0.5942004369545194 AS "Proba_1", -0.520538580588 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 40 AS count, 3 AS depth, 1.2791338750720775e-08 AS "Proba_0", -18.1744975552 AS "LogProba_0", 0.9999999872086612 AS "Proba_1", -1.27913388478e-08 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 89 AS count, 3 AS depth, 0.9427760541405313 AS "Proba_0", -0.0589265069057 AS "LogProba_0", 0.057223945859468765 AS "Proba_1", -2.86078283429 AS "LogProba_1", 0 AS "Decision") AS "Values"), 
"DT_Output_5" AS 
(SELECT "DT_node_lookup_5"."KEY" AS "KEY", "DT_node_lookup_5".node_id_2 AS node_id_2, "DT_node_data_5".node_id AS node_id, "DT_node_data_5".feature AS feature, "DT_node_data_5".threshold AS threshold, "DT_node_data_5".count AS count, "DT_node_data_5".depth AS depth, "DT_node_data_5"."Proba_0" AS "Proba_0", "DT_node_data_5"."LogProba_0" AS "LogProba_0", "DT_node_data_5"."Proba_1" AS "Proba_1", "DT_node_data_5"."LogProba_1" AS "LogProba_1", "DT_node_data_5"."Decision" AS "Decision" 
FROM "DT_node_lookup_5" LEFT OUTER JOIN "DT_node_data_5" ON "DT_node_lookup_5".node_id_2 = "DT_node_data_5".node_id), 
"AdaBoost_Estim_5" AS 
(SELECT "DT_Output_5"."KEY" AS join_key_5, CAST(NULL AS FLOAT) AS "Score_5_0", "DT_Output_5"."Proba_0" AS "Proba_5_0", "DT_Output_5"."LogProba_0" AS "LogProba_5_0", CAST(NULL AS FLOAT) AS "Score_5_1", "DT_Output_5"."Proba_1" AS "Proba_5_1", "DT_Output_5"."LogProba_1" AS "LogProba_5_1", "DT_Output_5"."Decision" AS "Decision_5" 
FROM "DT_Output_5"), 
"AdaBoost_Join_CTE" AS 
(SELECT "AdaBoost_Estim_0".join_key_0 AS join_key_0, "AdaBoost_Estim_0"."Score_0_0" AS "Score_0_0", "AdaBoost_Estim_0"."Proba_0_0" AS "Proba_0_0", "AdaBoost_Estim_0"."LogProba_0_0" AS "LogProba_0_0", "AdaBoost_Estim_0"."Score_0_1" AS "Score_0_1", "AdaBoost_Estim_0"."Proba_0_1" AS "Proba_0_1", "AdaBoost_Estim_0"."LogProba_0_1" AS "LogProba_0_1", "AdaBoost_Estim_0"."Decision_0" AS "Decision_0", "AdaBoost_Estim_1".join_key_1 AS join_key_1, "AdaBoost_Estim_1"."Score_1_0" AS "Score_1_0", "AdaBoost_Estim_1"."Proba_1_0" AS "Proba_1_0", "AdaBoost_Estim_1"."LogProba_1_0" AS "LogProba_1_0", "AdaBoost_Estim_1"."Score_1_1" AS "Score_1_1", "AdaBoost_Estim_1"."Proba_1_1" AS "Proba_1_1", "AdaBoost_Estim_1"."LogProba_1_1" AS "LogProba_1_1", "AdaBoost_Estim_1"."Decision_1" AS "Decision_1", "AdaBoost_Estim_2".join_key_2 AS join_key_2, "AdaBoost_Estim_2"."Score_2_0" AS "Score_2_0", "AdaBoost_Estim_2"."Proba_2_0" AS "Proba_2_0", "AdaBoost_Estim_2"."LogProba_2_0" AS "LogProba_2_0", "AdaBoost_Estim_2"."Score_2_1" AS "Score_2_1", "AdaBoost_Estim_2"."Proba_2_1" AS "Proba_2_1", "AdaBoost_Estim_2"."LogProba_2_1" AS "LogProba_2_1", "AdaBoost_Estim_2"."Decision_2" AS "Decision_2", "AdaBoost_Estim_3".join_key_3 AS join_key_3, "AdaBoost_Estim_3"."Score_3_0" AS "Score_3_0", "AdaBoost_Estim_3"."Proba_3_0" AS "Proba_3_0", "AdaBoost_Estim_3"."LogProba_3_0" AS "LogProba_3_0", "AdaBoost_Estim_3"."Score_3_1" AS "Score_3_1", "AdaBoost_Estim_3"."Proba_3_1" AS "Proba_3_1", "AdaBoost_Estim_3"."LogProba_3_1" AS "LogProba_3_1", "AdaBoost_Estim_3"."Decision_3" AS "Decision_3", "AdaBoost_Estim_4".join_key_4 AS join_key_4, "AdaBoost_Estim_4"."Score_4_0" AS "Score_4_0", "AdaBoost_Estim_4"."Proba_4_0" AS "Proba_4_0", "AdaBoost_Estim_4"."LogProba_4_0" AS "LogProba_4_0", "AdaBoost_Estim_4"."Score_4_1" AS "Score_4_1", "AdaBoost_Estim_4"."Proba_4_1" AS "Proba_4_1", "AdaBoost_Estim_4"."LogProba_4_1" AS "LogProba_4_1", "AdaBoost_Estim_4"."Decision_4" AS "Decision_4", "AdaBoost_Estim_5".join_key_5 AS join_key_5, "AdaBoost_Estim_5"."Score_5_0" AS "Score_5_0", "AdaBoost_Estim_5"."Proba_5_0" AS "Proba_5_0", "AdaBoost_Estim_5"."LogProba_5_0" AS "LogProba_5_0", "AdaBoost_Estim_5"."Score_5_1" AS "Score_5_1", "AdaBoost_Estim_5"."Proba_5_1" AS "Proba_5_1", "AdaBoost_Estim_5"."LogProba_5_1" AS "LogProba_5_1", "AdaBoost_Estim_5"."Decision_5" AS "Decision_5" 
FROM "AdaBoost_Estim_0" LEFT OUTER JOIN "AdaBoost_Estim_1" ON "AdaBoost_Estim_0".join_key_0 = "AdaBoost_Estim_1".join_key_1 LEFT OUTER JOIN "AdaBoost_Estim_2" ON "AdaBoost_Estim_2".join_key_2 = "AdaBoost_Estim_1".join_key_1 LEFT OUTER JOIN "AdaBoost_Estim_3" ON "AdaBoost_Estim_3".join_key_3 = "AdaBoost_Estim_2".join_key_2 LEFT OUTER JOIN "AdaBoost_Estim_4" ON "AdaBoost_Estim_4".join_key_4 = "AdaBoost_Estim_3".join_key_3 LEFT OUTER JOIN "AdaBoost_Estim_5" ON "AdaBoost_Estim_5".join_key_5 = "AdaBoost_Estim_4".join_key_4), 
"AdaBoost_AVG_Scores_BN" AS 
(SELECT "AdaBoost_Join_CTE".join_key_0 AS "KEY", (1.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_0_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_0") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_0_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_0_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_1") ELSE -1.79769313486231e+308 END END) / 2)) / 6.0 + (1.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_1_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_0") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_1_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_1_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_1") ELSE -1.79769313486231e+308 END END) / 2)) / 6.0 + (1.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_2_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_0") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_2_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_2_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_1") ELSE -1.79769313486231e+308 END END) / 2)) / 6.0 + (1.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_3_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_0") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_3_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_3_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_1") ELSE -1.79769313486231e+308 END END) / 2)) / 6.0 + (1.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_4_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_0") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_4_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_4_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_1") ELSE -1.79769313486231e+308 END END) / 2)) / 6.0 + (1.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_5_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_0") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_5_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_5_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_1") ELSE -1.79769313486231e+308 END END) / 2)) / 6.0 AS "Score_0", 1.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_0_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_0") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_0_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_0_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_1") ELSE -1.79769313486231e+308 END END) / 2) + 1.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_1_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_0") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_1_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_1_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_1") ELSE -1.79769313486231e+308 END END) / 2) + 1.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_2_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_0") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_2_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_2_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_1") ELSE -1.79769313486231e+308 END END) / 2) + 1.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_3_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_0") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_3_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_3_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_1") ELSE -1.79769313486231e+308 END END) / 2) + 1.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_4_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_0") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_4_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_4_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_1") ELSE -1.79769313486231e+308 END END) / 2) + 1.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_5_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_0") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_5_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_5_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_1") ELSE -1.79769313486231e+308 END END) / 2) AS "Proba_0", (1.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_0_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_0_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_0_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_1") ELSE -1.79769313486231e+308 END END) / 2)) / 6.0 + (1.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_1_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_1_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_1_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_1") ELSE -1.79769313486231e+308 END END) / 2)) / 6.0 + (1.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_2_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_2_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_2_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_1") ELSE -1.79769313486231e+308 END END) / 2)) / 6.0 + (1.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_3_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_3_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_3_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_1") ELSE -1.79769313486231e+308 END END) / 2)) / 6.0 + (1.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_4_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_4_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_4_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_1") ELSE -1.79769313486231e+308 END END) / 2)) / 6.0 + (1.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_5_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_5_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_5_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_1") ELSE -1.79769313486231e+308 END END) / 2)) / 6.0 AS "Score_1", 1.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_0_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_0_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_0_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_1") ELSE -1.79769313486231e+308 END END) / 2) + 1.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_1_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_1_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_1_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_1") ELSE -1.79769313486231e+308 END END) / 2) + 1.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_2_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_2_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_2_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_1") ELSE -1.79769313486231e+308 END END) / 2) + 1.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_3_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_3_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_3_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_1") ELSE -1.79769313486231e+308 END END) / 2) + 1.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_4_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_4_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_4_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_1") ELSE -1.79769313486231e+308 END END) / 2) + 1.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_5_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_5_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_5_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_1") ELSE -1.79769313486231e+308 END END) / 2) AS "Proba_1" 
FROM "AdaBoost_Join_CTE"), 
"AdaBoost_AVG_Scores" AS 
(SELECT "AdaBoost_AVG_Scores_BN"."KEY" AS "KEY", "AdaBoost_AVG_Scores_BN"."Score_0" AS "Score_0", exp(("AdaBoost_AVG_Scores_BN"."Proba_0" / 6.0) / 1) / (exp(("AdaBoost_AVG_Scores_BN"."Proba_0" / 6.0) / 1) + exp(("AdaBoost_AVG_Scores_BN"."Proba_1" / 6.0) / 1)) AS "Proba_0", CAST(NULL AS FLOAT) AS "LogProba_0", "AdaBoost_AVG_Scores_BN"."Score_1" AS "Score_1", exp(("AdaBoost_AVG_Scores_BN"."Proba_1" / 6.0) / 1) / (exp(("AdaBoost_AVG_Scores_BN"."Proba_0" / 6.0) / 1) + exp(("AdaBoost_AVG_Scores_BN"."Proba_1" / 6.0) / 1)) AS "Proba_1", CAST(NULL AS FLOAT) AS "LogProba_1" 
FROM "AdaBoost_AVG_Scores_BN"), 
orig_cte AS 
(SELECT "AdaBoost_AVG_Scores"."KEY" AS "KEY", "AdaBoost_AVG_Scores"."Score_0" AS "Score_0", "AdaBoost_AVG_Scores"."Score_1" AS "Score_1", "AdaBoost_AVG_Scores"."Proba_0" AS "Proba_0", "AdaBoost_AVG_Scores"."Proba_1" AS "Proba_1", "AdaBoost_AVG_Scores"."LogProba_0" AS "LogProba_0", "AdaBoost_AVG_Scores"."LogProba_1" AS "LogProba_1", CAST(NULL AS FLOAT) AS "Decision" 
FROM "AdaBoost_AVG_Scores"), 
score_class_union AS 
(SELECT scu."KEY" AS "KEY", scu.class AS class, scu."LogProba" AS "LogProba", scu."Proba" AS "Proba", scu."Score" AS "Score" 
FROM (SELECT orig_cte."KEY" AS "KEY", 0 AS class, orig_cte."LogProba_0" AS "LogProba", orig_cte."Proba_0" AS "Proba", orig_cte."Score_0" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 1 AS class, orig_cte."LogProba_1" AS "LogProba", orig_cte."Proba_1" AS "Proba", orig_cte."Score_1" AS "Score" 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte."KEY" AS "KEY", orig_cte."Score_0" AS "Score_0", orig_cte."Score_1" AS "Score_1", orig_cte."Proba_0" AS "Proba_0", orig_cte."Proba_1" AS "Proba_1", orig_cte."LogProba_0" AS "LogProba_0", orig_cte."LogProba_1" AS "LogProba_1", orig_cte."Decision" AS "Decision", (SELECT max(score_class_union."LogProba") AS max_1 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_LogProba", (SELECT max(score_class_union."Proba") AS max_2 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_Proba", (SELECT max(score_class_union."Score") AS max_3 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_Score" 
FROM orig_cte), 
arg_max_cte AS 
(SELECT score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."Decision" AS "Decision", score_max."max_LogProba" AS "max_LogProba", score_max."max_Proba" AS "max_Proba", score_max."max_Score" AS "max_Score", (SELECT min(score_class_union.class) AS min_1 
FROM score_class_union 
WHERE score_max."max_LogProba" = score_class_union."LogProba" AND score_max."KEY" = score_class_union."KEY") AS "arg_max_LogProba", (SELECT min(score_class_union.class) AS min_2 
FROM score_class_union 
WHERE score_max."max_Proba" = score_class_union."Proba" AND score_max."KEY" = score_class_union."KEY") AS "arg_max_Proba", (SELECT min(score_class_union.class) AS min_3 
FROM score_class_union 
WHERE score_max."max_Score" = score_class_union."Score" AND score_max."KEY" = score_class_union."KEY") AS "arg_max_Score" 
FROM score_max)
 SELECT arg_max_cte."KEY" AS "KEY", arg_max_cte."Score_0" AS "Score_0", arg_max_cte."Score_1" AS "Score_1", arg_max_cte."Proba_0" AS "Proba_0", arg_max_cte."Proba_1" AS "Proba_1", CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN ln(arg_max_cte."Proba_0") ELSE -1.79769313486231e+308 END AS "LogProba_0", CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN ln(arg_max_cte."Proba_1") ELSE -1.79769313486231e+308 END AS "LogProba_1", arg_max_cte."arg_max_Score" AS "Decision" 
FROM arg_max_cte