-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH [DT_node_lookup] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_13] <= 0.6876624226570129) THEN CASE WHEN ([ADS].[Feature_16] <= -0.34447866678237915) THEN CASE WHEN ([ADS].[Feature_14] <= -0.050374627113342285) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_6] <= -2.4471044540405273) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_6] <= 0.5200575590133667) THEN CASE WHEN ([ADS].[Feature_4] <= -2.3434300422668457) THEN 10 ELSE 11 END ELSE 12 END END AS node_id_2 
FROM [INPUT_DATA] AS [ADS]), 
[DT_node_data] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].[Proba_0] AS [Proba_0], [Values].[LogProba_0] AS [LogProba_0], [Values].[Proba_1] AS [Proba_1], [Values].[LogProba_1] AS [LogProba_1], [Values].[Proba_2] AS [Proba_2], [Values].[LogProba_2] AS [LogProba_2], [Values].[Proba_3] AS [Proba_3], [Values].[LogProba_3] AS [LogProba_3], [Values].[Decision] AS [Decision] 
FROM (SELECT 0 AS node_id, 'Feature_13' AS feature, 0.6876624226570129 AS threshold, 100 AS count, 0 AS depth, 0.25 AS [Proba_0], -1.38629436112 AS [LogProba_0], 0.26 AS [Proba_1], -1.34707364797 AS [LogProba_1], 0.24000000000000002 AS [Proba_2], -1.42711635564 AS [LogProba_2], 0.25 AS [Proba_3], -1.38629436112 AS [LogProba_3], 1 AS [Decision] UNION ALL SELECT 1 AS node_id, 'Feature_16' AS feature, -0.34447866678237915 AS threshold, 71 AS count, 1 AS depth, 0.35211267605633806 AS [Proba_0], -1.04380405217 AS [LogProba_0], 0.1408450704225352 AS [Proba_1], -1.96009478405 AS [LogProba_1], 0.33802816901408456 AS [Proba_2], -1.08462604669 AS [LogProba_2], 0.16901408450704222 AS [Proba_3], -1.77777322725 AS [LogProba_3], 0 AS [Decision] UNION ALL SELECT 2 AS node_id, 'Feature_14' AS feature, -0.050374627113342285 AS threshold, 26 AS count, 2 AS depth, 0.6153846153846154 AS [Proba_0], -0.485507815782 AS [LogProba_0], 0.15384615384615385 AS [Proba_1], -1.8718021769 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.23076923076923078 AS [Proba_3], -1.46633706879 AS [LogProba_3], 0 AS [Decision] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 20 AS count, 3 AS depth, 0.7999999999999999 AS [Proba_0], -0.223143551314 AS [LogProba_0], 0.15 AS [Proba_1], -1.89711998489 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.049999999999999996 AS [Proba_3], -2.99573227355 AS [LogProba_3], 0 AS [Decision] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.16666666666666666 AS [Proba_1], -1.79175946923 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.8333333333333333 AS [Proba_3], -0.182321556794 AS [LogProba_3], 3 AS [Decision] UNION ALL SELECT 5 AS node_id, 'Feature_6' AS feature, -2.4471044540405273 AS threshold, 45 AS count, 2 AS depth, 0.19999999999999996 AS [Proba_0], -1.60943791243 AS [LogProba_0], 0.13333333333333333 AS [Proba_1], -2.01490302054 AS [LogProba_1], 0.5333333333333334 AS [Proba_2], -0.628608659422 AS [LogProba_2], 0.13333333333333333 AS [Proba_3], -2.01490302054 AS [LogProba_3], 2 AS [Decision] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 1.0 AS [Proba_1], 0.0 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 1 AS [Decision] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 42 AS count, 3 AS depth, 0.21428571428571422 AS [Proba_0], -1.54044504095 AS [LogProba_0], 0.07142857142857141 AS [Proba_1], -2.63905732962 AS [LogProba_1], 0.5714285714285715 AS [Proba_2], -0.559615787935 AS [LogProba_2], 0.14285714285714285 AS [Proba_3], -1.94591014906 AS [LogProba_3], 2 AS [Decision] UNION ALL SELECT 8 AS node_id, 'Feature_6' AS feature, 0.5200575590133667 AS threshold, 29 AS count, 1 AS depth, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.5517241379310346 AS [Proba_1], -0.594707107747 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.44827586206896547 AS [Proba_3], -0.802346472525 AS [LogProba_3], 1 AS [Decision] UNION ALL SELECT 9 AS node_id, 'Feature_4' AS feature, -2.3434300422668457 AS threshold, 17 AS count, 2 AS depth, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.9411764705882353 AS [Proba_1], -0.0606246218164 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.058823529411764705 AS [Proba_3], -2.83321334406 AS [LogProba_3], 1 AS [Decision] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 1.0 AS [Proba_3], 0.0 AS [LogProba_3], 3 AS [Decision] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 3 AS depth, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 1.0 AS [Proba_1], 0.0 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 1 AS [Decision] UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 2 AS depth, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 1.0 AS [Proba_3], 0.0 AS [LogProba_3], 3 AS [Decision]) AS [Values]), 
[DT_Output] AS 
(SELECT [DT_node_lookup].[KEY] AS [KEY], [DT_node_lookup].node_id_2 AS node_id_2, [DT_node_data].node_id AS node_id, [DT_node_data].feature AS feature, [DT_node_data].threshold AS threshold, [DT_node_data].count AS count, [DT_node_data].depth AS depth, [DT_node_data].[Proba_0] AS [Proba_0], [DT_node_data].[LogProba_0] AS [LogProba_0], [DT_node_data].[Proba_1] AS [Proba_1], [DT_node_data].[LogProba_1] AS [LogProba_1], [DT_node_data].[Proba_2] AS [Proba_2], [DT_node_data].[LogProba_2] AS [LogProba_2], [DT_node_data].[Proba_3] AS [Proba_3], [DT_node_data].[LogProba_3] AS [LogProba_3], [DT_node_data].[Decision] AS [Decision] 
FROM [DT_node_lookup] LEFT OUTER JOIN [DT_node_data] ON [DT_node_lookup].node_id_2 = [DT_node_data].node_id), 
[AdaBoost_Estim_0] AS 
(SELECT [DT_Output].[KEY] AS join_key_0, CAST(NULL AS FLOAT) AS [Score_0_0], [DT_Output].[Proba_0] AS [Proba_0_0], [DT_Output].[LogProba_0] AS [LogProba_0_0], CAST(NULL AS FLOAT) AS [Score_0_1], [DT_Output].[Proba_1] AS [Proba_0_1], [DT_Output].[LogProba_1] AS [LogProba_0_1], CAST(NULL AS FLOAT) AS [Score_0_2], [DT_Output].[Proba_2] AS [Proba_0_2], [DT_Output].[LogProba_2] AS [LogProba_0_2], CAST(NULL AS FLOAT) AS [Score_0_3], [DT_Output].[Proba_3] AS [Proba_0_3], [DT_Output].[LogProba_3] AS [LogProba_0_3], [DT_Output].[Decision] AS [Decision_0] 
FROM [DT_Output]), 
[DT_node_lookup_1] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_7] <= -0.3530421257019043) THEN CASE WHEN ([ADS].[Feature_13] <= -0.30798065662384033) THEN CASE WHEN ([ADS].[Feature_6] <= 0.9128806591033936) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_0] <= -0.8153052926063538) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_3] <= 0.44567692279815674) THEN CASE WHEN ([ADS].[Feature_3] <= 0.23406265676021576) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_8] <= 0.059281207621097565) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [INPUT_DATA] AS [ADS]), 
[DT_node_data_1] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].[Proba_0] AS [Proba_0], [Values].[LogProba_0] AS [LogProba_0], [Values].[Proba_1] AS [Proba_1], [Values].[LogProba_1] AS [LogProba_1], [Values].[Proba_2] AS [Proba_2], [Values].[LogProba_2] AS [LogProba_2], [Values].[Proba_3] AS [Proba_3], [Values].[LogProba_3] AS [LogProba_3], [Values].[Decision] AS [Decision] 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, -0.3530421257019043 AS threshold, 100 AS count, 0 AS depth, 0.25000537685686625 AS [Proba_0], -1.38627285392 AS [LogProba_0], 0.25000537858586036 AS [Proba_1], -1.38627284701 AS [LogProba_1], 0.24998386597175845 AS [Proba_2], -1.38635889932 AS [LogProba_2], 0.25000537858551497 AS [Proba_3], -1.38627284701 AS [LogProba_3], 1 AS [Decision] UNION ALL SELECT 1 AS node_id, 'Feature_13' AS feature, -0.30798065662384033 AS threshold, 38 AS count, 1 AS depth, 0.19049106710074257 AS [Proba_0], -1.65814997737 AS [LogProba_0], 1.6388675213744966e-05 AS [Proba_1], -11.0189199974 AS [LogProba_1], 0.23807158182298205 AS [Proba_2], -1.43518388657 AS [LogProba_2], 0.5714209624010617 AS [Proba_3], -0.559629103822 AS [LogProba_3], 3 AS [Decision] UNION ALL SELECT 2 AS node_id, 'Feature_6' AS feature, 0.9128806591033936 AS threshold, 21 AS count, 2 AS depth, 0.39997203915730706 AS [Proba_0], -0.916360636424 AS [LogProba_0], 3.4413344852875366e-05 AS [Proba_1], -10.277066137 AS [LogProba_1], 0.3999268716421876 AS [Proba_2], -0.916473569482 AS [LogProba_2], 0.20006667585565246 AS [Proba_3], -1.60910458871 AS [LogProba_3], 0 AS [Decision] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS count, 3 AS depth, 6.452710340551186e-05 AS [Proba_0], -9.64842521459 AS [LogProba_0], 8.603613787401574e-05 AS [Proba_1], -9.36074314214 AS [LogProba_1], 0.9998494367587205 AS [Proba_2], -0.000150574577062 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 2 AS [Decision] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, 0.6665627119233176 AS [Proba_0], -0.405621052382 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.3334372880766824 AS [Proba_3], -1.09830047306 AS [LogProba_3], 0 AS [Decision] UNION ALL SELECT 5 AS node_id, 'Feature_0' AS feature, -0.8153052926063538 AS threshold, 17 AS count, 2 AS depth, 2.3467383915607032e-05 AS [Proba_0], -10.6598990193 AS [LogProba_0], 2.5129102283400174e-13 AS [Proba_1], -29.0121646739 AS [LogProba_1], 0.09090695751041604 AS [Proba_2], -2.39791874046 AS [LogProba_2], 0.9090695751054171 AS [Proba_3], -0.0953336474637 AS [LogProba_3], 3 AS [Decision] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 6.453265554560502e-05 AS [Proba_0], -9.64833917475 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.9999354673389261 AS [Proba_2], -6.45347433956e-05 AS [LogProba_2], 5.528175471647557e-12 AS [Proba_3], -25.9211632876 AS [LogProba_3], 2 AS [Decision] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 3 AS depth, 1.936067124063694e-05 AS [Proba_0], -10.8522668052 AS [LogProba_0], 2.764212603221848e-13 AS [Proba_1], -28.9168503873 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.999980639328483 AS [Proba_3], -1.93608589372e-05 AS [LogProba_3], 3 AS [Decision] UNION ALL SELECT 8 AS node_id, 'Feature_3' AS feature, 0.44567692279815674 AS threshold, 62 AS count, 1 AS depth, 0.2962971502125191 AS [Proba_0], -1.21639244236 AS [LogProba_0], 0.4444532972422903 AS [Proba_1], -0.81091029762 AS [LogProba_1], 0.25924954947246565 AS [Proba_2], -1.34996416969 AS [LogProba_2], 3.0727247927384668e-09 AS [Proba_3], -19.6007011144 AS [LogProba_3], 1 AS [Decision] UNION ALL SELECT 9 AS node_id, 'Feature_3' AS feature, 0.23406265676021576 AS threshold, 39 AS count, 2 AS depth, 0.5423818832525172 AS [Proba_0], -0.611784943997 AS [LogProba_0], 8.438528436379487e-09 AS [Proba_1], -18.5904578994 AS [LogProba_1], 0.4576181015596495 AS [Proba_2], -0.781720282095 AS [LogProba_2], 6.749304775246048e-09 AS [Proba_3], -18.8138263336 AS [LogProba_3], 0 AS [Decision] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 30 AS count, 3 AS depth, 0.22859702651535363 AS [Proba_0], -1.47579453508 AS [LogProba_0], 1.4223334205595885e-08 AS [Proba_1], -18.0683819671 AS [LogProba_1], 0.7714029507287332 AS [Proba_2], -0.259544408055 AS [LogProba_2], 8.532578947995837e-09 AS [Proba_3], -18.5793741826 AS [LogProba_3], 2 AS [Decision] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, 0.9999999958493166 AS [Proba_0], -4.15068336119e-09 AS [LogProba_0], 2.0731995823491797e-12 AS [Proba_1], -26.90192801 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 4.1486102431324904e-09 AS [Proba_3], -19.30049244 AS [LogProba_3], 0 AS [Decision] UNION ALL SELECT 12 AS node_id, 'Feature_8' AS feature, 0.059281207621097565 AS threshold, 23 AS count, 2 AS depth, 0.15533992733343013 AS [Proba_0], -1.86213948378 AS [LogProba_0], 0.6990359384135861 AS [Proba_1], -0.358053124031 AS [LogProba_1], 0.14562413328620216 AS [Proba_2], -1.92672640636 AS [LogProba_2], 9.667814551528558e-10 AS [Proba_3], -20.757048649 AS [LogProba_3], 1 AS [Decision] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.9230809961907253 AS [Proba_1], -0.0800382951433 AS [LogProba_1], 0.07691900380884949 AS [Proba_2], -2.56500230935 AS [LogProba_2], 4.252491926216661e-13 AS [Proba_3], -28.4861010622 AS [LogProba_3], 1 AS [Decision] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 14 AS count, 3 AS depth, 0.640011149066523 AS [Proba_0], -0.446269682364 AS [LogProba_0], 3.317016578850281e-12 AS [Proba_1], -26.4319553578 AS [LogProba_1], 0.35998884694828087 AS [Proba_2], -1.02168222871 AS [LogProba_2], 3.981879060849417e-09 AS [Proba_3], -19.3415120032 AS [LogProba_3], 0 AS [Decision]) AS [Values]), 
[DT_Output_1] AS 
(SELECT [DT_node_lookup_1].[KEY] AS [KEY], [DT_node_lookup_1].node_id_2 AS node_id_2, [DT_node_data_1].node_id AS node_id, [DT_node_data_1].feature AS feature, [DT_node_data_1].threshold AS threshold, [DT_node_data_1].count AS count, [DT_node_data_1].depth AS depth, [DT_node_data_1].[Proba_0] AS [Proba_0], [DT_node_data_1].[LogProba_0] AS [LogProba_0], [DT_node_data_1].[Proba_1] AS [Proba_1], [DT_node_data_1].[LogProba_1] AS [LogProba_1], [DT_node_data_1].[Proba_2] AS [Proba_2], [DT_node_data_1].[LogProba_2] AS [LogProba_2], [DT_node_data_1].[Proba_3] AS [Proba_3], [DT_node_data_1].[LogProba_3] AS [LogProba_3], [DT_node_data_1].[Decision] AS [Decision] 
FROM [DT_node_lookup_1] LEFT OUTER JOIN [DT_node_data_1] ON [DT_node_lookup_1].node_id_2 = [DT_node_data_1].node_id), 
[AdaBoost_Estim_1] AS 
(SELECT [DT_Output_1].[KEY] AS join_key_1, CAST(NULL AS FLOAT) AS [Score_1_0], [DT_Output_1].[Proba_0] AS [Proba_1_0], [DT_Output_1].[LogProba_0] AS [LogProba_1_0], CAST(NULL AS FLOAT) AS [Score_1_1], [DT_Output_1].[Proba_1] AS [Proba_1_1], [DT_Output_1].[LogProba_1] AS [LogProba_1_1], CAST(NULL AS FLOAT) AS [Score_1_2], [DT_Output_1].[Proba_2] AS [Proba_1_2], [DT_Output_1].[LogProba_2] AS [LogProba_1_2], CAST(NULL AS FLOAT) AS [Score_1_3], [DT_Output_1].[Proba_3] AS [Proba_1_3], [DT_Output_1].[LogProba_3] AS [LogProba_1_3], [DT_Output_1].[Decision] AS [Decision_1] 
FROM [DT_Output_1]), 
[DT_node_lookup_2] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_16] <= -0.3496605157852173) THEN CASE WHEN ([ADS].[Feature_6] <= -0.371550977230072) THEN CASE WHEN ([ADS].[Feature_10] <= 0.735087513923645) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_14] <= -0.11754447221755981) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_8] <= -1.2658607959747314) THEN CASE WHEN ([ADS].[Feature_16] <= 0.9528459906578064) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_13] <= 0.11179757863283157) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [INPUT_DATA] AS [ADS]), 
[DT_node_data_2] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].[Proba_0] AS [Proba_0], [Values].[LogProba_0] AS [LogProba_0], [Values].[Proba_1] AS [Proba_1], [Values].[LogProba_1] AS [LogProba_1], [Values].[Proba_2] AS [Proba_2], [Values].[LogProba_2] AS [LogProba_2], [Values].[Proba_3] AS [Proba_3], [Values].[LogProba_3] AS [LogProba_3], [Values].[Decision] AS [Decision] 
FROM (SELECT 0 AS node_id, 'Feature_16' AS feature, -0.3496605157852173 AS threshold, 100 AS count, 0 AS depth, 0.2503525243034091 AS [Proba_0], -1.38488525716 AS [LogProba_0], 0.25069053464179664 AS [Proba_1], -1.38353603025 AS [LogProba_1], 0.25066351133483866 AS [Proba_2], -1.38364383154 AS [LogProba_2], 0.2482934297199556 AS [Proba_3], -1.39314404787 AS [LogProba_3], 1 AS [Decision] UNION ALL SELECT 1 AS node_id, 'Feature_6' AS feature, -0.371550977230072 AS threshold, 36 AS count, 1 AS depth, 0.0051569152322696035 AS [Proba_0], -5.26741670146 AS [LogProba_0], 0.4847845385815526 AS [Proba_1], -0.7240507371 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.5100585461861777 AS [Proba_3], -0.673229763409 AS [LogProba_3], 3 AS [Decision] UNION ALL SELECT 2 AS node_id, 'Feature_10' AS feature, 0.735087513923645 AS threshold, 18 AS count, 2 AS depth, 0.005295055213944861 AS [Proba_0], -5.24098187242 AS [LogProba_0], 0.9946934592378364 AS [Proba_1], -0.0053206704583 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 1.1485548218885267e-05 AS [Proba_3], -11.3744209895 AS [LogProba_3], 1 AS [Decision] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS count, 3 AS depth, 9.523273123287839e-05 AS [Proba_0], -9.25918685979 AS [LogProba_0], 0.9998932216798174 AS [Proba_1], -0.000106784021393 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 1.1545588949724981e-05 AS [Proba_3], -11.3692071031 AS [LogProba_3], 1 AS [Decision] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 1.0 AS [Proba_0], 0.0 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0 AS [Decision] UNION ALL SELECT 5 AS node_id, 'Feature_14' AS feature, -0.11754447221755981 AS threshold, 18 AS count, 2 AS depth, 0.0050255900426010025 AS [Proba_0], -5.29321241052 AS [LogProba_0], 3.070477609905114e-05 AS [Proba_1], -10.3910923422 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.9949437051812999 AS [Proba_3], -0.00506912113136 AS [LogProba_3], 3 AS [Decision] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, 0.9999853555532724 AS [Proba_0], -1.46445539586e-05 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 1.4644446727580574e-05 AS [Proba_3], -11.1314493573 AS [LogProba_3], 0 AS [Decision] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 3.0859867412662684e-05 AS [Proba_1], -10.3860540075 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.9999691401325873 AS [Proba_3], -3.08603435882e-05 AS [LogProba_3], 3 AS [Decision] UNION ALL SELECT 8 AS node_id, 'Feature_8' AS feature, -1.2658607959747314 AS threshold, 64 AS count, 1 AS depth, 0.48273247789028967 AS [Proba_0], -0.728292654779 AS [LogProba_0], 0.02883193783998894 AS [Proba_1], -3.5462715535 AS [LogProba_1], 0.48822557596795496 AS [Proba_2], -0.716977734096 AS [LogProba_2], 0.00021000830176635883 AS [Proba_3], -8.46836349581 AS [LogProba_3], 2 AS [Decision] UNION ALL SELECT 9 AS node_id, 'Feature_16' AS feature, 0.9528459906578064 AS threshold, 6 AS count, 2 AS depth, 0.9998519581098188 AS [Proba_0], -0.000148052849464 AS [LogProba_0], 3.3315472583842795e-05 AS [Proba_1], -10.3094886267 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.00011472641759736286 AS [Proba_3], -9.07296024128 AS [LogProba_3], 0 AS [Decision] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.22504084852654427 AS [Proba_1], -1.49147334425 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.7749591514734557 AS [Proba_3], -0.254944958794 AS [LogProba_3], 3 AS [Decision] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 1.0 AS [Proba_0], 0.0 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 4.0911237522380804e-17 AS [Proba_3], -37.7351268925 AS [LogProba_3], 0 AS [Decision] UNION ALL SELECT 12 AS node_id, 'Feature_13' AS feature, 0.11179757863283157 AS threshold, 58 AS count, 2 AS depth, 0.06341803664670805 AS [Proba_0], -2.7580069683 AS [LogProba_0], 0.05218375247564526 AS [Proba_1], -2.9529840878 AS [LogProba_1], 0.884110941765663 AS [Proba_2], -0.123172724484 AS [LogProba_2], 0.00028726911198375245 AS [Proba_3], -8.15509110913 AS [LogProba_3], 2 AS [Decision] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 37 AS count, 3 AS depth, 0.034674863931715864 AS [Proba_0], -3.36174023689 AS [LogProba_0], 0.0010452637182608064 AS [Proba_1], -6.86348606343 AS [LogProba_1], 0.9641169294168772 AS [Proba_2], -0.0365426956518 AS [LogProba_2], 0.00016294293314627345 AS [Proba_3], -8.72211052186 AS [LogProba_3], 2 AS [Decision] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 21 AS count, 3 AS depth, 0.38089780657750066 AS [Proba_0], -0.96522416404 AS [LogProba_0], 0.6170286916995806 AS [Proba_1], -0.482839754214 AS [LogProba_1], 0.00041300053787619715 AS [Proba_2], -7.79206166264 AS [LogProba_2], 0.0016605011850426064 AS [Proba_3], -6.40063580348 AS [LogProba_3], 1 AS [Decision]) AS [Values]), 
[DT_Output_2] AS 
(SELECT [DT_node_lookup_2].[KEY] AS [KEY], [DT_node_lookup_2].node_id_2 AS node_id_2, [DT_node_data_2].node_id AS node_id, [DT_node_data_2].feature AS feature, [DT_node_data_2].threshold AS threshold, [DT_node_data_2].count AS count, [DT_node_data_2].depth AS depth, [DT_node_data_2].[Proba_0] AS [Proba_0], [DT_node_data_2].[LogProba_0] AS [LogProba_0], [DT_node_data_2].[Proba_1] AS [Proba_1], [DT_node_data_2].[LogProba_1] AS [LogProba_1], [DT_node_data_2].[Proba_2] AS [Proba_2], [DT_node_data_2].[LogProba_2] AS [LogProba_2], [DT_node_data_2].[Proba_3] AS [Proba_3], [DT_node_data_2].[LogProba_3] AS [LogProba_3], [DT_node_data_2].[Decision] AS [Decision] 
FROM [DT_node_lookup_2] LEFT OUTER JOIN [DT_node_data_2] ON [DT_node_lookup_2].node_id_2 = [DT_node_data_2].node_id), 
[AdaBoost_Estim_2] AS 
(SELECT [DT_Output_2].[KEY] AS join_key_2, CAST(NULL AS FLOAT) AS [Score_2_0], [DT_Output_2].[Proba_0] AS [Proba_2_0], [DT_Output_2].[LogProba_0] AS [LogProba_2_0], CAST(NULL AS FLOAT) AS [Score_2_1], [DT_Output_2].[Proba_1] AS [Proba_2_1], [DT_Output_2].[LogProba_1] AS [LogProba_2_1], CAST(NULL AS FLOAT) AS [Score_2_2], [DT_Output_2].[Proba_2] AS [Proba_2_2], [DT_Output_2].[LogProba_2] AS [LogProba_2_2], CAST(NULL AS FLOAT) AS [Score_2_3], [DT_Output_2].[Proba_3] AS [Proba_2_3], [DT_Output_2].[LogProba_3] AS [LogProba_2_3], [DT_Output_2].[Decision] AS [Decision_2] 
FROM [DT_Output_2]), 
[DT_node_lookup_3] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_3] <= 1.036461591720581) THEN CASE WHEN ([ADS].[Feature_7] <= -0.7231387495994568) THEN CASE WHEN ([ADS].[Feature_14] <= -0.7553997039794922) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_3] <= 0.11703120917081833) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_1] <= -0.1391570270061493) THEN CASE WHEN ([ADS].[Feature_5] <= -1.6288673877716064) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_3] <= 1.332531452178955) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [INPUT_DATA] AS [ADS]), 
[DT_node_data_3] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].[Proba_0] AS [Proba_0], [Values].[LogProba_0] AS [LogProba_0], [Values].[Proba_1] AS [Proba_1], [Values].[LogProba_1] AS [LogProba_1], [Values].[Proba_2] AS [Proba_2], [Values].[LogProba_2] AS [LogProba_2], [Values].[Proba_3] AS [Proba_3], [Values].[LogProba_3] AS [LogProba_3], [Values].[Decision] AS [Decision] 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, 1.036461591720581 AS threshold, 100 AS count, 0 AS depth, 0.2500037835261612 AS [Proba_0], -1.38627922713 AS [LogProba_0], 0.25000380865302446 AS [Proba_1], -1.38627912662 AS [LogProba_1], 0.24998859905491672 AS [Proba_2], -1.38633996594 AS [LogProba_2], 0.2500038087658975 AS [Proba_3], -1.38627912617 AS [LogProba_3], 3 AS [Decision] UNION ALL SELECT 1 AS node_id, 'Feature_7' AS feature, -0.7231387495994568 AS threshold, 85 AS count, 1 AS depth, 0.001211433400168042 AS [Proba_0], -6.71595099225 AS [LogProba_0], 0.3300911063619595 AS [Proba_1], -1.10838658274 AS [LogProba_1], 0.33829551497535854 AS [Proba_2], -1.08383546082 AS [LogProba_2], 0.3304019452625139 AS [Proba_3], -1.10744534975 AS [LogProba_3], 2 AS [Decision] UNION ALL SELECT 2 AS node_id, 'Feature_14' AS feature, -0.7553997039794922 AS threshold, 28 AS count, 2 AS depth, 0.0025456195842364082 AS [Proba_0], -5.97338120704 AS [LogProba_0], 0.00046674487353802794 AS [Proba_1], -7.66972775892 AS [LogProba_1], 0.008135314685786255 AS [Proba_2], -4.81154085611 AS [LogProba_2], 0.9888523208564394 AS [Proba_3], -0.0112102801911 AS [LogProba_3], 3 AS [Decision] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS count, 3 AS depth, 0.26743219194875484 AS [Proba_0], -1.31888923282 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.7325678080512451 AS [Proba_2], -0.311199371657 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 2 AS [Decision] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, 4.884699582516895e-10 AS [Proba_0], -21.4397431443 AS [LogProba_0], 0.00047123039597249264 AS [Proba_1], -7.66016342013 AS [LogProba_1], 0.0011733566965868188 AS [Proba_2], -6.74788666637 AS [LogProba_2], 0.9983554124189707 AS [Proba_3], -0.0016459413997 AS [LogProba_3], 3 AS [Decision] UNION ALL SELECT 5 AS node_id, 'Feature_3' AS feature, 0.11703120917081833 AS threshold, 57 AS count, 2 AS depth, 0.0006412919008404455 AS [Proba_0], -7.35202582117 AS [LogProba_0], 0.47095040315129005 AS [Proba_1], -0.753002491675 AS [LogProba_1], 0.4793837932525309 AS [Proba_2], -0.735253763868 AS [LogProba_2], 0.04902451169533877 AS [Proba_3], -3.01543486727 AS [LogProba_3], 2 AS [Decision] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 32 AS count, 3 AS depth, 0.0009931988430480008 AS [Proba_0], -6.9145796692 AS [LogProba_0], 0.044206299550986025 AS [Proba_1], -3.11888797628 AS [LogProba_1], 0.8811733495711938 AS [Proba_2], -0.126500907849 AS [LogProba_2], 0.07362715203477228 AS [Proba_3], -2.60874140776 AS [LogProba_3], 2 AS [Decision] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 25 AS count, 3 AS depth, 0.0002575982119042018 AS [Proba_0], -8.26410950512 AS [LogProba_0], 0.9362410800417095 AS [Proba_1], -0.0658822715214 AS [LogProba_1], 0.041301736465375535 AS [Proba_2], -3.18685073473 AS [LogProba_2], 0.02219958528101068 AS [Proba_3], -3.80768167131 AS [LogProba_3], 1 AS [Decision] UNION ALL SELECT 8 AS node_id, 'Feature_1' AS feature, -0.1391570270061493 AS threshold, 15 AS count, 1 AS depth, 0.9023722742945044 AS [Proba_0], -0.102728123118 AS [LogProba_0], 0.04000366391531731 AS [Proba_1], -3.21878423118 AS [LogProba_1], 0.01843546072790836 AS [Proba_2], -3.99347925559 AS [LogProba_2], 0.039188601062270005 AS [Proba_3], -3.2393693637 AS [LogProba_3], 0 AS [Decision] UNION ALL SELECT 9 AS node_id, 'Feature_5' AS feature, -1.6288673877716064 AS threshold, 6 AS count, 2 AS depth, 0.9993649952929329 AS [Proba_0], -0.000635206407948 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0006350046287484314 AS [Proba_2], -7.36187826973 AS [LogProba_2], 7.831866307668373e-11 AS [Proba_3], -23.2702351879 AS [LogProba_3], 0 AS [Decision] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.999999876730151 AS [Proba_2], -1.23269856593e-07 AS [LogProba_2], 1.2326984896413427e-07 AS [Proba_3], -15.9088899906 AS [LogProba_3], 2 AS [Decision] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 0.9999999999999583 AS [Proba_0], -4.17443857259e-14 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 4.175526494235493e-14 AS [Proba_3], -30.8069508452 AS [LogProba_3], 0 AS [Decision] UNION ALL SELECT 12 AS node_id, 'Feature_3' AS feature, 1.332531452178955 AS threshold, 9 AS count, 2 AS depth, 0.01005032823014893 AS [Proba_0], -4.60014998529 AS [LogProba_0], 0.4080327991655667 AS [Proba_1], -0.896407717697 AS [LogProba_1], 0.18219762209146936 AS [Proba_2], -1.70266334533 AS [LogProba_2], 0.39971925051281504 AS [Proba_3], -0.916992852021 AS [LogProba_3], 1 AS [Decision] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 1.0 AS [Proba_1], 0.0 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 1 AS [Decision] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, 0.016977846434704572 AS [Proba_0], -4.07584593567 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.3077833059579056 AS [Proba_2], -1.1783592957 AS [LogProba_2], 0.6752388476073898 AS [Proba_3], -0.392688802392 AS [LogProba_3], 3 AS [Decision]) AS [Values]), 
[DT_Output_3] AS 
(SELECT [DT_node_lookup_3].[KEY] AS [KEY], [DT_node_lookup_3].node_id_2 AS node_id_2, [DT_node_data_3].node_id AS node_id, [DT_node_data_3].feature AS feature, [DT_node_data_3].threshold AS threshold, [DT_node_data_3].count AS count, [DT_node_data_3].depth AS depth, [DT_node_data_3].[Proba_0] AS [Proba_0], [DT_node_data_3].[LogProba_0] AS [LogProba_0], [DT_node_data_3].[Proba_1] AS [Proba_1], [DT_node_data_3].[LogProba_1] AS [LogProba_1], [DT_node_data_3].[Proba_2] AS [Proba_2], [DT_node_data_3].[LogProba_2] AS [LogProba_2], [DT_node_data_3].[Proba_3] AS [Proba_3], [DT_node_data_3].[LogProba_3] AS [LogProba_3], [DT_node_data_3].[Decision] AS [Decision] 
FROM [DT_node_lookup_3] LEFT OUTER JOIN [DT_node_data_3] ON [DT_node_lookup_3].node_id_2 = [DT_node_data_3].node_id), 
[AdaBoost_Estim_3] AS 
(SELECT [DT_Output_3].[KEY] AS join_key_3, CAST(NULL AS FLOAT) AS [Score_3_0], [DT_Output_3].[Proba_0] AS [Proba_3_0], [DT_Output_3].[LogProba_0] AS [LogProba_3_0], CAST(NULL AS FLOAT) AS [Score_3_1], [DT_Output_3].[Proba_1] AS [Proba_3_1], [DT_Output_3].[LogProba_1] AS [LogProba_3_1], CAST(NULL AS FLOAT) AS [Score_3_2], [DT_Output_3].[Proba_2] AS [Proba_3_2], [DT_Output_3].[LogProba_2] AS [LogProba_3_2], CAST(NULL AS FLOAT) AS [Score_3_3], [DT_Output_3].[Proba_3] AS [Proba_3_3], [DT_Output_3].[LogProba_3] AS [LogProba_3_3], [DT_Output_3].[Decision] AS [Decision_3] 
FROM [DT_Output_3]), 
[DT_node_lookup_4] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_13] <= 0.7312982082366943) THEN CASE WHEN ([ADS].[Feature_16] <= -0.21220499277114868) THEN CASE WHEN ([ADS].[Feature_2] <= 0.13249361515045166) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_6] <= 0.15172363817691803) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_6] <= 0.5200575590133667) THEN 9 ELSE 10 END END AS node_id_2 
FROM [INPUT_DATA] AS [ADS]), 
[DT_node_data_4] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].[Proba_0] AS [Proba_0], [Values].[LogProba_0] AS [LogProba_0], [Values].[Proba_1] AS [Proba_1], [Values].[LogProba_1] AS [LogProba_1], [Values].[Proba_2] AS [Proba_2], [Values].[LogProba_2] AS [LogProba_2], [Values].[Proba_3] AS [Proba_3], [Values].[LogProba_3] AS [LogProba_3], [Values].[Decision] AS [Decision] 
FROM (SELECT 0 AS node_id, 'Feature_13' AS feature, 0.7312982082366943 AS threshold, 100 AS count, 0 AS depth, 0.25000184409496123 AS [Proba_0], -1.38628698477 AS [LogProba_0], 0.24999446805613698 AS [Proba_1], -1.38631648914 AS [LogProba_1], 0.25000184406970843 AS [Proba_2], -1.38628698487 AS [LogProba_2], 0.25000184377919343 AS [Proba_3], -1.38628698603 AS [LogProba_3], 0 AS [Decision] UNION ALL SELECT 1 AS node_id, 'Feature_16' AS feature, -0.21220499277114868 AS threshold, 72 AS count, 1 AS depth, 0.33855836028973235 AS [Proba_0], -1.08305879295 AS [LogProba_0], 0.32198887856608177 AS [Proba_1], -1.13323827265 AS [LogProba_1], 0.33855836025553443 AS [Proba_2], -1.08305879305 AS [LogProba_2], 0.0008944008886514004 AS [Proba_3], -7.01935646199 AS [LogProba_3], 0 AS [Decision] UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, 0.13249361515045166 AS threshold, 31 AS count, 2 AS depth, 0.9955468032364742 AS [Proba_0], -0.00446314177996 AS [LogProba_0], 0.001082330303448637 AS [Proba_1], -6.82863887393 AS [LogProba_1], 0.0022025098887028965 AS [Proba_2], -6.1181577104 AS [LogProba_2], 0.0011683565713741903 AS [Proba_3], -6.75215715745 AS [LogProba_3], 0 AS [Decision] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 3 AS depth, 0.9988281915556391 AS [Proba_0], -0.0011724955487 AS [LogProba_0], 2.8754510036411423e-07 AS [Proba_1], -15.0618861182 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.001171520899260666 AS [Proba_3], -6.74945246043 AS [LogProba_3], 0 AS [Decision] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 14 AS count, 3 AS depth, 6.109558678566903e-07 AS [Proba_0], -14.3082411098 AS [LogProba_0], 0.329365192062597 AS [Proba_1], -1.11058813755 AS [LogProba_1], 0.6704258714312108 AS [Proba_2], -0.399842139522 AS [LogProba_2], 0.00020832555032445282 AS [Proba_3], -8.47640855604 AS [LogProba_3], 2 AS [Decision] UNION ALL SELECT 5 AS node_id, 'Feature_6' AS feature, 0.15172363817691803 AS threshold, 41 AS count, 2 AS depth, 0.10017839922923982 AS [Proba_0], -2.30080269013 AS [LogProba_0], 0.43842576767754643 AS [Proba_1], -0.824564768439 AS [LogProba_1], 0.46060083356493764 AS [Proba_2], -0.77522348186 AS [LogProba_2], 0.0007949995282760956 AS [Proba_3], -7.13716903667 AS [LogProba_3], 2 AS [Decision] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 24 AS count, 3 AS depth, 0.15307102729881966 AS [Proba_0], -1.8768532346 AS [LogProba_0], 0.6699987593149122 AS [Proba_1], -0.400479418368 AS [LogProba_1], 0.17670205701060032 AS [Proba_2], -1.73329025846 AS [LogProba_2], 0.00022815637566786924 AS [Proba_3], -8.38547930591 AS [LogProba_3], 1 AS [Decision] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 3 AS depth, 3.938516752098307e-05 AS [Proba_0], -10.1421212714 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.998092439012884 AS [Proba_2], -0.00190938269863 AS [LogProba_2], 0.001868175819595045 AS [Proba_3], -6.28279282177 AS [LogProba_3], 2 AS [Decision] UNION ALL SELECT 8 AS node_id, 'Feature_6' AS feature, 0.5200575590133667 AS threshold, 28 AS count, 1 AS depth, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.046748719855863756 AS [Proba_1], -3.06296840638 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.9532512801441363 AS [Proba_3], -0.0478767373194 AS [LogProba_3], 3 AS [Decision] UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 2 AS depth, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.9999999999999983 AS [Proba_1], -1.66533453694e-15 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 1.6876081210090396e-15 AS [Proba_3], -34.0154641815 AS [LogProba_3], 1 AS [Decision] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 2 AS depth, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 1.0 AS [Proba_3], 0.0 AS [LogProba_3], 3 AS [Decision]) AS [Values]), 
[DT_Output_4] AS 
(SELECT [DT_node_lookup_4].[KEY] AS [KEY], [DT_node_lookup_4].node_id_2 AS node_id_2, [DT_node_data_4].node_id AS node_id, [DT_node_data_4].feature AS feature, [DT_node_data_4].threshold AS threshold, [DT_node_data_4].count AS count, [DT_node_data_4].depth AS depth, [DT_node_data_4].[Proba_0] AS [Proba_0], [DT_node_data_4].[LogProba_0] AS [LogProba_0], [DT_node_data_4].[Proba_1] AS [Proba_1], [DT_node_data_4].[LogProba_1] AS [LogProba_1], [DT_node_data_4].[Proba_2] AS [Proba_2], [DT_node_data_4].[LogProba_2] AS [LogProba_2], [DT_node_data_4].[Proba_3] AS [Proba_3], [DT_node_data_4].[LogProba_3] AS [LogProba_3], [DT_node_data_4].[Decision] AS [Decision] 
FROM [DT_node_lookup_4] LEFT OUTER JOIN [DT_node_data_4] ON [DT_node_lookup_4].node_id_2 = [DT_node_data_4].node_id), 
[AdaBoost_Estim_4] AS 
(SELECT [DT_Output_4].[KEY] AS join_key_4, CAST(NULL AS FLOAT) AS [Score_4_0], [DT_Output_4].[Proba_0] AS [Proba_4_0], [DT_Output_4].[LogProba_0] AS [LogProba_4_0], CAST(NULL AS FLOAT) AS [Score_4_1], [DT_Output_4].[Proba_1] AS [Proba_4_1], [DT_Output_4].[LogProba_1] AS [LogProba_4_1], CAST(NULL AS FLOAT) AS [Score_4_2], [DT_Output_4].[Proba_2] AS [Proba_4_2], [DT_Output_4].[LogProba_2] AS [LogProba_4_2], CAST(NULL AS FLOAT) AS [Score_4_3], [DT_Output_4].[Proba_3] AS [Proba_4_3], [DT_Output_4].[LogProba_3] AS [LogProba_4_3], [DT_Output_4].[Decision] AS [Decision_4] 
FROM [DT_Output_4]), 
[DT_node_lookup_5] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_7] <= -0.8323206305503845) THEN CASE WHEN ([ADS].[Feature_16] <= 0.09501519054174423) THEN CASE WHEN ([ADS].[Feature_5] <= -0.04399172216653824) THEN 3 ELSE 4 END ELSE 5 END ELSE CASE WHEN ([ADS].[Feature_6] <= -0.7077018618583679) THEN CASE WHEN ([ADS].[Feature_6] <= -2.4621098041534424) THEN 8 ELSE 9 END ELSE CASE WHEN ([ADS].[Feature_18] <= -0.959419846534729) THEN 11 ELSE 12 END END END AS node_id_2 
FROM [INPUT_DATA] AS [ADS]), 
[DT_node_data_5] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].[Proba_0] AS [Proba_0], [Values].[LogProba_0] AS [LogProba_0], [Values].[Proba_1] AS [Proba_1], [Values].[LogProba_1] AS [LogProba_1], [Values].[Proba_2] AS [Proba_2], [Values].[LogProba_2] AS [LogProba_2], [Values].[Proba_3] AS [Proba_3], [Values].[LogProba_3] AS [LogProba_3], [Values].[Decision] AS [Decision] 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, -0.8323206305503845 AS threshold, 100 AS count, 0 AS depth, 0.2500018713914935 AS [Proba_0], -1.38628687558 AS [LogProba_0], 0.24999598753988192 AS [Proba_1], -1.38631041109 AS [LogProba_1], 0.2500002696694624 AS [Proba_2], -1.38629328244 AS [LogProba_2], 0.2500018713991622 AS [Proba_3], -1.38628687555 AS [LogProba_3], 3 AS [Decision] UNION ALL SELECT 1 AS node_id, 'Feature_16' AS feature, 0.09501519054174423 AS threshold, 29 AS count, 1 AS depth, 9.270605048670839e-05 AS [Proba_0], -9.28607681798 AS [LogProba_0], 8.038665977911321e-14 AS [Proba_1], -30.1519281556 AS [LogProba_1], 9.141267324913983e-05 AS [Proba_2], -9.30012643212 AS [LogProba_2], 0.9998158812761838 AS [Proba_3], -0.000184135675749 AS [LogProba_3], 3 AS [Decision] UNION ALL SELECT 2 AS node_id, 'Feature_5' AS feature, -0.04399172216653824 AS threshold, 15 AS count, 2 AS depth, 0.5035198131153538 AS [Proba_0], -0.686132216822 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.4964793980085661 AS [Proba_2], -0.700213290802 AS [LogProba_2], 7.888760801813722e-07 AS [Proba_3], -14.0526565878 AS [LogProba_3], 0 AS [Decision] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, 5.586988734591158e-11 AS [Proba_0], -23.6079955688 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.9999984110064426 AS [Proba_2], -1.58899481985e-06 AS [LogProba_2], 1.5889376876998876e-06 AS [Proba_3], -13.352444886 AS [LogProba_3], 2 AS [Decision] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, 1.0 AS [Proba_0], 0.0 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0 AS [Decision] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 14 AS count, 2 AS depth, 4.979096711741292e-10 AS [Proba_0], -21.4206024385 AS [LogProba_0], 8.040146289481765e-14 AS [Proba_1], -30.1517440237 AS [LogProba_1], 3.3672596168028028e-09 AS [Proba_2], -19.5091665935 AS [LogProba_2], 0.9999999961347503 AS [Proba_3], -3.86524968335e-09 AS [LogProba_3], 3 AS [Decision] UNION ALL SELECT 6 AS node_id, 'Feature_6' AS feature, -0.7077018618583679 AS threshold, 71 AS count, 1 AS depth, 0.33331516894511276 AS [Proba_0], -1.09866678332 AS [LogProba_0], 0.3333382293848104 AS [Proba_1], -1.09859760062 AS [LogProba_1], 0.3333134644288466 AS [Proba_2], -1.09867189716 AS [LogProba_2], 3.3137241230314076e-05 AS [Proba_3], -10.3148527953 AS [LogProba_3], 1 AS [Decision] UNION ALL SELECT 7 AS node_id, 'Feature_6' AS feature, -2.4621098041534424 AS threshold, 31 AS count, 2 AS depth, 3.6669676760763226e-06 AS [Proba_0], -12.5161454837 AS [LogProba_0], 0.4140874911156788 AS [Proba_1], -0.881677996287 AS [LogProba_1], 0.585905088755033 AS [Proba_2], -0.534597467105 AS [LogProba_2], 3.753161612105806e-06 AS [Proba_3], -12.4929119766 AS [LogProba_3], 2 AS [Decision] UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 1.0 AS [Proba_1], 0.0 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 1 AS [Decision] UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 27 AS count, 3 AS depth, 6.257976373916282e-06 AS [Proba_0], -11.9816536881 AS [LogProba_0], 9.300280950180167e-05 AS [Proba_1], -9.28288085557 AS [LogProba_1], 0.9998943341408401 AS [Proba_2], -0.00010567144219 AS [LogProba_2], 6.405073284196254e-06 AS [Proba_3], -11.958420181 AS [LogProba_3], 2 AS [Decision] UNION ALL SELECT 10 AS node_id, 'Feature_18' AS feature, -0.959419846534729 AS threshold, 40 AS count, 2 AS depth, 0.7731188960670288 AS [Proba_0], -0.25732243101 AS [LogProba_0], 0.2267897722782114 AS [Proba_1], -1.48373180392 AS [LogProba_1], 1.9422190976605625e-05 AS [Proba_2], -10.8490942808 AS [LogProba_2], 7.190946378328782e-05 AS [Proba_3], -9.54010267765 AS [LogProba_3], 0 AS [Decision] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 3 AS depth, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.9997980450882215 AS [Proba_1], -0.000201975307418 AS [LogProba_1], 4.3453910658054985e-05 AS [Proba_2], -10.0438097067 AS [LogProba_2], 0.000158501001120321 AS [Proba_3], -8.74974964845 AS [LogProba_3], 1 AS [Decision] UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 28 AS count, 3 AS depth, 0.9999411236546993 AS [Proba_0], -5.88780785807e-05 AS [LogProba_0], 7.23497091680591e-13 AS [Proba_1], -27.9546798686 AS [LogProba_1], 1.2371621887376916e-05 AS [Proba_2], -11.3001052656 AS [LogProba_2], 4.6504722689850665e-05 AS [Proba_3], -9.97595668731 AS [LogProba_3], 0 AS [Decision]) AS [Values]), 
[DT_Output_5] AS 
(SELECT [DT_node_lookup_5].[KEY] AS [KEY], [DT_node_lookup_5].node_id_2 AS node_id_2, [DT_node_data_5].node_id AS node_id, [DT_node_data_5].feature AS feature, [DT_node_data_5].threshold AS threshold, [DT_node_data_5].count AS count, [DT_node_data_5].depth AS depth, [DT_node_data_5].[Proba_0] AS [Proba_0], [DT_node_data_5].[LogProba_0] AS [LogProba_0], [DT_node_data_5].[Proba_1] AS [Proba_1], [DT_node_data_5].[LogProba_1] AS [LogProba_1], [DT_node_data_5].[Proba_2] AS [Proba_2], [DT_node_data_5].[LogProba_2] AS [LogProba_2], [DT_node_data_5].[Proba_3] AS [Proba_3], [DT_node_data_5].[LogProba_3] AS [LogProba_3], [DT_node_data_5].[Decision] AS [Decision] 
FROM [DT_node_lookup_5] LEFT OUTER JOIN [DT_node_data_5] ON [DT_node_lookup_5].node_id_2 = [DT_node_data_5].node_id), 
[AdaBoost_Estim_5] AS 
(SELECT [DT_Output_5].[KEY] AS join_key_5, CAST(NULL AS FLOAT) AS [Score_5_0], [DT_Output_5].[Proba_0] AS [Proba_5_0], [DT_Output_5].[LogProba_0] AS [LogProba_5_0], CAST(NULL AS FLOAT) AS [Score_5_1], [DT_Output_5].[Proba_1] AS [Proba_5_1], [DT_Output_5].[LogProba_1] AS [LogProba_5_1], CAST(NULL AS FLOAT) AS [Score_5_2], [DT_Output_5].[Proba_2] AS [Proba_5_2], [DT_Output_5].[LogProba_2] AS [LogProba_5_2], CAST(NULL AS FLOAT) AS [Score_5_3], [DT_Output_5].[Proba_3] AS [Proba_5_3], [DT_Output_5].[LogProba_3] AS [LogProba_5_3], [DT_Output_5].[Decision] AS [Decision_5] 
FROM [DT_Output_5]), 
[AdaBoost_Join_CTE] AS 
(SELECT [AdaBoost_Estim_0].join_key_0 AS join_key_0, [AdaBoost_Estim_0].[Score_0_0] AS [Score_0_0], [AdaBoost_Estim_0].[Proba_0_0] AS [Proba_0_0], [AdaBoost_Estim_0].[LogProba_0_0] AS [LogProba_0_0], [AdaBoost_Estim_0].[Score_0_1] AS [Score_0_1], [AdaBoost_Estim_0].[Proba_0_1] AS [Proba_0_1], [AdaBoost_Estim_0].[LogProba_0_1] AS [LogProba_0_1], [AdaBoost_Estim_0].[Score_0_2] AS [Score_0_2], [AdaBoost_Estim_0].[Proba_0_2] AS [Proba_0_2], [AdaBoost_Estim_0].[LogProba_0_2] AS [LogProba_0_2], [AdaBoost_Estim_0].[Score_0_3] AS [Score_0_3], [AdaBoost_Estim_0].[Proba_0_3] AS [Proba_0_3], [AdaBoost_Estim_0].[LogProba_0_3] AS [LogProba_0_3], [AdaBoost_Estim_0].[Decision_0] AS [Decision_0], [AdaBoost_Estim_1].join_key_1 AS join_key_1, [AdaBoost_Estim_1].[Score_1_0] AS [Score_1_0], [AdaBoost_Estim_1].[Proba_1_0] AS [Proba_1_0], [AdaBoost_Estim_1].[LogProba_1_0] AS [LogProba_1_0], [AdaBoost_Estim_1].[Score_1_1] AS [Score_1_1], [AdaBoost_Estim_1].[Proba_1_1] AS [Proba_1_1], [AdaBoost_Estim_1].[LogProba_1_1] AS [LogProba_1_1], [AdaBoost_Estim_1].[Score_1_2] AS [Score_1_2], [AdaBoost_Estim_1].[Proba_1_2] AS [Proba_1_2], [AdaBoost_Estim_1].[LogProba_1_2] AS [LogProba_1_2], [AdaBoost_Estim_1].[Score_1_3] AS [Score_1_3], [AdaBoost_Estim_1].[Proba_1_3] AS [Proba_1_3], [AdaBoost_Estim_1].[LogProba_1_3] AS [LogProba_1_3], [AdaBoost_Estim_1].[Decision_1] AS [Decision_1], [AdaBoost_Estim_2].join_key_2 AS join_key_2, [AdaBoost_Estim_2].[Score_2_0] AS [Score_2_0], [AdaBoost_Estim_2].[Proba_2_0] AS [Proba_2_0], [AdaBoost_Estim_2].[LogProba_2_0] AS [LogProba_2_0], [AdaBoost_Estim_2].[Score_2_1] AS [Score_2_1], [AdaBoost_Estim_2].[Proba_2_1] AS [Proba_2_1], [AdaBoost_Estim_2].[LogProba_2_1] AS [LogProba_2_1], [AdaBoost_Estim_2].[Score_2_2] AS [Score_2_2], [AdaBoost_Estim_2].[Proba_2_2] AS [Proba_2_2], [AdaBoost_Estim_2].[LogProba_2_2] AS [LogProba_2_2], [AdaBoost_Estim_2].[Score_2_3] AS [Score_2_3], [AdaBoost_Estim_2].[Proba_2_3] AS [Proba_2_3], [AdaBoost_Estim_2].[LogProba_2_3] AS [LogProba_2_3], [AdaBoost_Estim_2].[Decision_2] AS [Decision_2], [AdaBoost_Estim_3].join_key_3 AS join_key_3, [AdaBoost_Estim_3].[Score_3_0] AS [Score_3_0], [AdaBoost_Estim_3].[Proba_3_0] AS [Proba_3_0], [AdaBoost_Estim_3].[LogProba_3_0] AS [LogProba_3_0], [AdaBoost_Estim_3].[Score_3_1] AS [Score_3_1], [AdaBoost_Estim_3].[Proba_3_1] AS [Proba_3_1], [AdaBoost_Estim_3].[LogProba_3_1] AS [LogProba_3_1], [AdaBoost_Estim_3].[Score_3_2] AS [Score_3_2], [AdaBoost_Estim_3].[Proba_3_2] AS [Proba_3_2], [AdaBoost_Estim_3].[LogProba_3_2] AS [LogProba_3_2], [AdaBoost_Estim_3].[Score_3_3] AS [Score_3_3], [AdaBoost_Estim_3].[Proba_3_3] AS [Proba_3_3], [AdaBoost_Estim_3].[LogProba_3_3] AS [LogProba_3_3], [AdaBoost_Estim_3].[Decision_3] AS [Decision_3], [AdaBoost_Estim_4].join_key_4 AS join_key_4, [AdaBoost_Estim_4].[Score_4_0] AS [Score_4_0], [AdaBoost_Estim_4].[Proba_4_0] AS [Proba_4_0], [AdaBoost_Estim_4].[LogProba_4_0] AS [LogProba_4_0], [AdaBoost_Estim_4].[Score_4_1] AS [Score_4_1], [AdaBoost_Estim_4].[Proba_4_1] AS [Proba_4_1], [AdaBoost_Estim_4].[LogProba_4_1] AS [LogProba_4_1], [AdaBoost_Estim_4].[Score_4_2] AS [Score_4_2], [AdaBoost_Estim_4].[Proba_4_2] AS [Proba_4_2], [AdaBoost_Estim_4].[LogProba_4_2] AS [LogProba_4_2], [AdaBoost_Estim_4].[Score_4_3] AS [Score_4_3], [AdaBoost_Estim_4].[Proba_4_3] AS [Proba_4_3], [AdaBoost_Estim_4].[LogProba_4_3] AS [LogProba_4_3], [AdaBoost_Estim_4].[Decision_4] AS [Decision_4], [AdaBoost_Estim_5].join_key_5 AS join_key_5, [AdaBoost_Estim_5].[Score_5_0] AS [Score_5_0], [AdaBoost_Estim_5].[Proba_5_0] AS [Proba_5_0], [AdaBoost_Estim_5].[LogProba_5_0] AS [LogProba_5_0], [AdaBoost_Estim_5].[Score_5_1] AS [Score_5_1], [AdaBoost_Estim_5].[Proba_5_1] AS [Proba_5_1], [AdaBoost_Estim_5].[LogProba_5_1] AS [LogProba_5_1], [AdaBoost_Estim_5].[Score_5_2] AS [Score_5_2], [AdaBoost_Estim_5].[Proba_5_2] AS [Proba_5_2], [AdaBoost_Estim_5].[LogProba_5_2] AS [LogProba_5_2], [AdaBoost_Estim_5].[Score_5_3] AS [Score_5_3], [AdaBoost_Estim_5].[Proba_5_3] AS [Proba_5_3], [AdaBoost_Estim_5].[LogProba_5_3] AS [LogProba_5_3], [AdaBoost_Estim_5].[Decision_5] AS [Decision_5] 
FROM [AdaBoost_Estim_0] LEFT OUTER JOIN [AdaBoost_Estim_1] ON [AdaBoost_Estim_0].join_key_0 = [AdaBoost_Estim_1].join_key_1 LEFT OUTER JOIN [AdaBoost_Estim_2] ON [AdaBoost_Estim_2].join_key_2 = [AdaBoost_Estim_1].join_key_1 LEFT OUTER JOIN [AdaBoost_Estim_3] ON [AdaBoost_Estim_3].join_key_3 = [AdaBoost_Estim_2].join_key_2 LEFT OUTER JOIN [AdaBoost_Estim_4] ON [AdaBoost_Estim_4].join_key_4 = [AdaBoost_Estim_3].join_key_3 LEFT OUTER JOIN [AdaBoost_Estim_5] ON [AdaBoost_Estim_5].join_key_5 = [AdaBoost_Estim_4].join_key_4), 
[AdaBoost_AVG_Scores_BN] AS 
(SELECT [AdaBoost_Join_CTE].join_key_0 AS [KEY], (3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 6.0 + (3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 6.0 + (3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 6.0 + (3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 6.0 + (3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 6.0 + (3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 6.0 AS [Score_0], 3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_3]) ELSE -1.79769313486231e+308 END END) / 4) + 3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_3]) ELSE -1.79769313486231e+308 END END) / 4) + 3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_3]) ELSE -1.79769313486231e+308 END END) / 4) + 3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_3]) ELSE -1.79769313486231e+308 END END) / 4) + 3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_3]) ELSE -1.79769313486231e+308 END END) / 4) + 3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_3]) ELSE -1.79769313486231e+308 END END) / 4) AS [Proba_0], (3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 6.0 + (3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 6.0 + (3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 6.0 + (3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 6.0 + (3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 6.0 + (3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 6.0 AS [Score_1], 3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_3]) ELSE -1.79769313486231e+308 END END) / 4) + 3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_3]) ELSE -1.79769313486231e+308 END END) / 4) + 3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_3]) ELSE -1.79769313486231e+308 END END) / 4) + 3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_3]) ELSE -1.79769313486231e+308 END END) / 4) + 3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_3]) ELSE -1.79769313486231e+308 END END) / 4) + 3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_3]) ELSE -1.79769313486231e+308 END END) / 4) AS [Proba_1], (3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_2]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 6.0 + (3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_2]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 6.0 + (3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_2]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 6.0 + (3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_2]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 6.0 + (3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_2]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 6.0 + (3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_2]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 6.0 AS [Score_2], 3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_2]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_3]) ELSE -1.79769313486231e+308 END END) / 4) + 3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_2]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_3]) ELSE -1.79769313486231e+308 END END) / 4) + 3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_2]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_3]) ELSE -1.79769313486231e+308 END END) / 4) + 3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_2]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_3]) ELSE -1.79769313486231e+308 END END) / 4) + 3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_2]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_3]) ELSE -1.79769313486231e+308 END END) / 4) + 3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_2]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_3]) ELSE -1.79769313486231e+308 END END) / 4) AS [Proba_2], (3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_3]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 6.0 + (3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_3]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 6.0 + (3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_3]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 6.0 + (3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_3]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 6.0 + (3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_3]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 6.0 + (3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_3]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 6.0 AS [Score_3], 3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_3]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_3]) ELSE -1.79769313486231e+308 END END) / 4) + 3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_3]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_3]) ELSE -1.79769313486231e+308 END END) / 4) + 3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_3]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_3]) ELSE -1.79769313486231e+308 END END) / 4) + 3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_3]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_3]) ELSE -1.79769313486231e+308 END END) / 4) + 3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_3]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_3]) ELSE -1.79769313486231e+308 END END) / 4) + 3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_3]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_3]) ELSE -1.79769313486231e+308 END END) / 4) AS [Proba_3] 
FROM [AdaBoost_Join_CTE]), 
[AdaBoost_AVG_Scores] AS 
(SELECT [AdaBoost_AVG_Scores_BN].[KEY] AS [KEY], [AdaBoost_AVG_Scores_BN].[Score_0] AS [Score_0], exp(([AdaBoost_AVG_Scores_BN].[Proba_0] / 6.0) / 3) / (exp(([AdaBoost_AVG_Scores_BN].[Proba_0] / 6.0) / 3) + exp(([AdaBoost_AVG_Scores_BN].[Proba_1] / 6.0) / 3) + exp(([AdaBoost_AVG_Scores_BN].[Proba_2] / 6.0) / 3) + exp(([AdaBoost_AVG_Scores_BN].[Proba_3] / 6.0) / 3)) AS [Proba_0], CAST(NULL AS FLOAT) AS [LogProba_0], [AdaBoost_AVG_Scores_BN].[Score_1] AS [Score_1], exp(([AdaBoost_AVG_Scores_BN].[Proba_1] / 6.0) / 3) / (exp(([AdaBoost_AVG_Scores_BN].[Proba_0] / 6.0) / 3) + exp(([AdaBoost_AVG_Scores_BN].[Proba_1] / 6.0) / 3) + exp(([AdaBoost_AVG_Scores_BN].[Proba_2] / 6.0) / 3) + exp(([AdaBoost_AVG_Scores_BN].[Proba_3] / 6.0) / 3)) AS [Proba_1], CAST(NULL AS FLOAT) AS [LogProba_1], [AdaBoost_AVG_Scores_BN].[Score_2] AS [Score_2], exp(([AdaBoost_AVG_Scores_BN].[Proba_2] / 6.0) / 3) / (exp(([AdaBoost_AVG_Scores_BN].[Proba_0] / 6.0) / 3) + exp(([AdaBoost_AVG_Scores_BN].[Proba_1] / 6.0) / 3) + exp(([AdaBoost_AVG_Scores_BN].[Proba_2] / 6.0) / 3) + exp(([AdaBoost_AVG_Scores_BN].[Proba_3] / 6.0) / 3)) AS [Proba_2], CAST(NULL AS FLOAT) AS [LogProba_2], [AdaBoost_AVG_Scores_BN].[Score_3] AS [Score_3], exp(([AdaBoost_AVG_Scores_BN].[Proba_3] / 6.0) / 3) / (exp(([AdaBoost_AVG_Scores_BN].[Proba_0] / 6.0) / 3) + exp(([AdaBoost_AVG_Scores_BN].[Proba_1] / 6.0) / 3) + exp(([AdaBoost_AVG_Scores_BN].[Proba_2] / 6.0) / 3) + exp(([AdaBoost_AVG_Scores_BN].[Proba_3] / 6.0) / 3)) AS [Proba_3], CAST(NULL AS FLOAT) AS [LogProba_3] 
FROM [AdaBoost_AVG_Scores_BN]), 
orig_cte AS 
(SELECT [AdaBoost_AVG_Scores].[KEY] AS [KEY], [AdaBoost_AVG_Scores].[Score_0] AS [Score_0], [AdaBoost_AVG_Scores].[Score_1] AS [Score_1], [AdaBoost_AVG_Scores].[Score_2] AS [Score_2], [AdaBoost_AVG_Scores].[Score_3] AS [Score_3], [AdaBoost_AVG_Scores].[Proba_0] AS [Proba_0], [AdaBoost_AVG_Scores].[Proba_1] AS [Proba_1], [AdaBoost_AVG_Scores].[Proba_2] AS [Proba_2], [AdaBoost_AVG_Scores].[Proba_3] AS [Proba_3], [AdaBoost_AVG_Scores].[LogProba_0] AS [LogProba_0], [AdaBoost_AVG_Scores].[LogProba_1] AS [LogProba_1], [AdaBoost_AVG_Scores].[LogProba_2] AS [LogProba_2], [AdaBoost_AVG_Scores].[LogProba_3] AS [LogProba_3], CAST(NULL AS FLOAT(53)) AS [Decision] 
FROM [AdaBoost_AVG_Scores]), 
score_class_union AS 
(SELECT scu.[KEY] AS [KEY], scu.class AS class, scu.[LogProba] AS [LogProba], scu.[Proba] AS [Proba], scu.[Score] AS [Score] 
FROM (SELECT orig_cte.[KEY] AS [KEY], 0 AS class, orig_cte.[LogProba_0] AS [LogProba], orig_cte.[Proba_0] AS [Proba], orig_cte.[Score_0] AS [Score] 
FROM orig_cte UNION ALL SELECT orig_cte.[KEY] AS [KEY], 1 AS class, orig_cte.[LogProba_1] AS [LogProba], orig_cte.[Proba_1] AS [Proba], orig_cte.[Score_1] AS [Score] 
FROM orig_cte UNION ALL SELECT orig_cte.[KEY] AS [KEY], 2 AS class, orig_cte.[LogProba_2] AS [LogProba], orig_cte.[Proba_2] AS [Proba], orig_cte.[Score_2] AS [Score] 
FROM orig_cte UNION ALL SELECT orig_cte.[KEY] AS [KEY], 3 AS class, orig_cte.[LogProba_3] AS [LogProba], orig_cte.[Proba_3] AS [Proba], orig_cte.[Score_3] AS [Score] 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte.[KEY] AS [KEY], orig_cte.[Score_0] AS [Score_0], orig_cte.[Score_1] AS [Score_1], orig_cte.[Score_2] AS [Score_2], orig_cte.[Score_3] AS [Score_3], orig_cte.[Proba_0] AS [Proba_0], orig_cte.[Proba_1] AS [Proba_1], orig_cte.[Proba_2] AS [Proba_2], orig_cte.[Proba_3] AS [Proba_3], orig_cte.[LogProba_0] AS [LogProba_0], orig_cte.[LogProba_1] AS [LogProba_1], orig_cte.[LogProba_2] AS [LogProba_2], orig_cte.[LogProba_3] AS [LogProba_3], orig_cte.[Decision] AS [Decision], (SELECT max(score_class_union.[LogProba]) AS max_1 
FROM score_class_union 
WHERE orig_cte.[KEY] = score_class_union.[KEY]) AS [max_LogProba], (SELECT max(score_class_union.[Proba]) AS max_2 
FROM score_class_union 
WHERE orig_cte.[KEY] = score_class_union.[KEY]) AS [max_Proba], (SELECT max(score_class_union.[Score]) AS max_3 
FROM score_class_union 
WHERE orig_cte.[KEY] = score_class_union.[KEY]) AS [max_Score] 
FROM orig_cte), 
arg_max_cte AS 
(SELECT score_max.[KEY] AS [KEY], score_max.[Score_0] AS [Score_0], score_max.[Score_1] AS [Score_1], score_max.[Score_2] AS [Score_2], score_max.[Score_3] AS [Score_3], score_max.[Proba_0] AS [Proba_0], score_max.[Proba_1] AS [Proba_1], score_max.[Proba_2] AS [Proba_2], score_max.[Proba_3] AS [Proba_3], score_max.[LogProba_0] AS [LogProba_0], score_max.[LogProba_1] AS [LogProba_1], score_max.[LogProba_2] AS [LogProba_2], score_max.[LogProba_3] AS [LogProba_3], score_max.[Decision] AS [Decision], score_max.[max_LogProba] AS [max_LogProba], score_max.[max_Proba] AS [max_Proba], score_max.[max_Score] AS [max_Score], (SELECT min(score_class_union.class) AS min_1 
FROM score_class_union 
WHERE score_max.[max_LogProba] = score_class_union.[LogProba] AND score_max.[KEY] = score_class_union.[KEY]) AS [arg_max_LogProba], (SELECT min(score_class_union.class) AS min_2 
FROM score_class_union 
WHERE score_max.[max_Proba] = score_class_union.[Proba] AND score_max.[KEY] = score_class_union.[KEY]) AS [arg_max_Proba], (SELECT min(score_class_union.class) AS min_3 
FROM score_class_union 
WHERE score_max.[max_Score] = score_class_union.[Score] AND score_max.[KEY] = score_class_union.[KEY]) AS [arg_max_Score] 
FROM score_max)
 SELECT arg_max_cte.[KEY] AS [KEY], arg_max_cte.[Score_0] AS [Score_0], arg_max_cte.[Score_1] AS [Score_1], arg_max_cte.[Score_2] AS [Score_2], arg_max_cte.[Score_3] AS [Score_3], arg_max_cte.[Proba_0] AS [Proba_0], arg_max_cte.[Proba_1] AS [Proba_1], arg_max_cte.[Proba_2] AS [Proba_2], arg_max_cte.[Proba_3] AS [Proba_3], CASE WHEN (arg_max_cte.[Proba_0] IS NULL OR arg_max_cte.[Proba_0] > 0.0) THEN log(arg_max_cte.[Proba_0]) ELSE -1.79769313486231e+308 END AS [LogProba_0], CASE WHEN (arg_max_cte.[Proba_1] IS NULL OR arg_max_cte.[Proba_1] > 0.0) THEN log(arg_max_cte.[Proba_1]) ELSE -1.79769313486231e+308 END AS [LogProba_1], CASE WHEN (arg_max_cte.[Proba_2] IS NULL OR arg_max_cte.[Proba_2] > 0.0) THEN log(arg_max_cte.[Proba_2]) ELSE -1.79769313486231e+308 END AS [LogProba_2], CASE WHEN (arg_max_cte.[Proba_3] IS NULL OR arg_max_cte.[Proba_3] > 0.0) THEN log(arg_max_cte.[Proba_3]) ELSE -1.79769313486231e+308 END AS [LogProba_3], arg_max_cte.[arg_max_Score] AS [Decision] 
FROM arg_max_cte