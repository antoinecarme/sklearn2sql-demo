-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH [ADS_imp_1_OUT] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_0] IS NULL) THEN 5.84333333333 ELSE [ADS].[Feature_0] END AS impute_output_2, CASE WHEN ([ADS].[Feature_1] IS NULL) THEN 3.054 ELSE [ADS].[Feature_1] END AS impute_output_3, CASE WHEN ([ADS].[Feature_2] IS NULL) THEN 3.75866666667 ELSE [ADS].[Feature_2] END AS impute_output_4, CASE WHEN ([ADS].[Feature_3] IS NULL) THEN 1.19866666667 ELSE [ADS].[Feature_3] END AS impute_output_5 
FROM [INPUT_DATA] AS [ADS]), 
[CenteredDataForPCA] AS 
(SELECT [ADS_imp_1_OUT].[KEY] AS [KEY], [ADS_imp_1_OUT].impute_output_2 - 5.84333333333 AS impute_output_2, [ADS_imp_1_OUT].impute_output_3 - 3.054 AS impute_output_3, [ADS_imp_1_OUT].impute_output_4 - 3.75866666667 AS impute_output_4, [ADS_imp_1_OUT].impute_output_5 - 1.19866666667 AS impute_output_5 
FROM [ADS_imp_1_OUT]), 
[ADS_ano_2_OUT] AS 
(SELECT [CenteredDataForPCA].[KEY] AS [KEY], [CenteredDataForPCA].impute_output_2 * 0.361589677381 + [CenteredDataForPCA].impute_output_3 * -0.0822688898922 + [CenteredDataForPCA].impute_output_4 * 0.856572105291 + [CenteredDataForPCA].impute_output_5 * 0.358843926248 AS anova_output_2, [CenteredDataForPCA].impute_output_2 * 0.656539883286 + [CenteredDataForPCA].impute_output_3 * 0.729712371326 + [CenteredDataForPCA].impute_output_4 * -0.175767403429 + [CenteredDataForPCA].impute_output_5 * -0.074706470135 AS anova_output_3, [CenteredDataForPCA].impute_output_2 * -0.580997279828 + [CenteredDataForPCA].impute_output_3 * 0.596418087938 + [CenteredDataForPCA].impute_output_4 * 0.072524075487 + [CenteredDataForPCA].impute_output_5 * 0.549060910727 AS anova_output_4, [CenteredDataForPCA].impute_output_2 * 0.317254547169 + [CenteredDataForPCA].impute_output_3 * -0.324094352418 + [CenteredDataForPCA].impute_output_4 * -0.47971898733 + [CenteredDataForPCA].impute_output_5 * 0.751120560381 AS anova_output_5 
FROM [CenteredDataForPCA]), 
[DT_node_lookup] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anova_output_2 <= -1.5537705421447754) THEN 1 ELSE CASE WHEN ([ADS_ano_2_OUT].anova_output_2 <= 1.1425471305847168) THEN CASE WHEN ([ADS_ano_2_OUT].anova_output_4 <= 0.5032649040222168) THEN 4 ELSE 5 END ELSE CASE WHEN ([ADS_ano_2_OUT].anova_output_2 <= 1.5713317394256592) THEN 7 ELSE 8 END END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].[Proba_0] AS [Proba_0], [Values].[LogProba_0] AS [LogProba_0], [Values].[Proba_1] AS [Proba_1], [Values].[LogProba_1] AS [LogProba_1], [Values].[Proba_2] AS [Proba_2], [Values].[LogProba_2] AS [LogProba_2], [Values].[Decision] AS [Decision] 
FROM (SELECT 0 AS node_id, 'anova_output_2' AS feature, -1.5537705421447754 AS threshold, 150 AS count, 0 AS depth, 0.33333333333333337 AS [Proba_0], -1.09861228867 AS [LogProba_0], 0.33333333333333337 AS [Proba_1], -1.09861228867 AS [LogProba_1], 0.33333333333333337 AS [Proba_2], -1.09861228867 AS [LogProba_2], 0 AS [Decision] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 50 AS count, 1 AS depth, 1.0 AS [Proba_0], 0.0 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0 AS [Decision] UNION ALL SELECT 2 AS node_id, 'anova_output_2' AS feature, 1.1425471305847168 AS threshold, 100 AS count, 1 AS depth, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.5 AS [Proba_1], -0.69314718056 AS [LogProba_1], 0.5 AS [Proba_2], -0.69314718056 AS [LogProba_2], 1 AS [Decision] UNION ALL SELECT 3 AS node_id, 'anova_output_4' AS feature, 0.5032649040222168 AS threshold, 44 AS count, 2 AS depth, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.9772727272727273 AS [Proba_1], -0.0229895182247 AS [LogProba_1], 0.02272727272727275 AS [Proba_2], -3.78418963392 AS [LogProba_2], 1 AS [Decision] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 43 AS count, 3 AS depth, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 1.0 AS [Proba_1], 0.0 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 1 AS [Decision] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 1.0 AS [Proba_2], 0.0 AS [LogProba_2], 2 AS [Decision] UNION ALL SELECT 6 AS node_id, 'anova_output_2' AS feature, 1.5713317394256592 AS threshold, 56 AS count, 2 AS depth, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.1250000000000001 AS [Proba_1], -2.07944154168 AS [LogProba_1], 0.8749999999999998 AS [Proba_2], -0.133531392625 AS [LogProba_2], 2 AS [Decision] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 3 AS depth, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.3684210526315789 AS [Proba_1], -0.998528830111 AS [LogProba_1], 0.631578947368421 AS [Proba_2], -0.459532329378 AS [LogProba_2], 2 AS [Decision] UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 37 AS count, 3 AS depth, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 1.0 AS [Proba_2], 0.0 AS [LogProba_2], 2 AS [Decision]) AS [Values]), 
[DT_Output] AS 
(SELECT [DT_node_lookup].[KEY] AS [KEY], [DT_node_lookup].node_id_2 AS node_id_2, [DT_node_data].node_id AS node_id, [DT_node_data].feature AS feature, [DT_node_data].threshold AS threshold, [DT_node_data].count AS count, [DT_node_data].depth AS depth, [DT_node_data].[Proba_0] AS [Proba_0], [DT_node_data].[LogProba_0] AS [LogProba_0], [DT_node_data].[Proba_1] AS [Proba_1], [DT_node_data].[LogProba_1] AS [LogProba_1], [DT_node_data].[Proba_2] AS [Proba_2], [DT_node_data].[LogProba_2] AS [LogProba_2], [DT_node_data].[Decision] AS [Decision] 
FROM [DT_node_lookup] LEFT OUTER JOIN [DT_node_data] ON [DT_node_lookup].node_id_2 = [DT_node_data].node_id), 
[AdaBoost_Estim_0] AS 
(SELECT [DT_Output].[KEY] AS join_key_0, CAST(NULL AS FLOAT) AS [Score_0_0], [DT_Output].[Proba_0] AS [Proba_0_0], [DT_Output].[LogProba_0] AS [LogProba_0_0], CAST(NULL AS FLOAT) AS [Score_0_1], [DT_Output].[Proba_1] AS [Proba_0_1], [DT_Output].[LogProba_1] AS [LogProba_0_1], CAST(NULL AS FLOAT) AS [Score_0_2], [DT_Output].[Proba_2] AS [Proba_0_2], [DT_Output].[LogProba_2] AS [LogProba_0_2], [DT_Output].[Decision] AS [Decision_0] 
FROM [DT_Output]), 
[DT_node_lookup_1] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anova_output_4 <= -0.1607404202222824) THEN CASE WHEN ([ADS_ano_2_OUT].anova_output_5 <= -0.04111745208501816) THEN CASE WHEN ([ADS_ano_2_OUT].anova_output_2 <= 1.1094162464141846) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS_ano_2_OUT].anova_output_2 <= -1.4108089208602905) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS_ano_2_OUT].anova_output_5 <= -0.16342796385288239) THEN CASE WHEN ([ADS_ano_2_OUT].anova_output_2 <= 1.4109197854995728) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS_ano_2_OUT].anova_output_2 <= 1.1425471305847168) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_1] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].[Proba_0] AS [Proba_0], [Values].[LogProba_0] AS [LogProba_0], [Values].[Proba_1] AS [Proba_1], [Values].[LogProba_1] AS [LogProba_1], [Values].[Proba_2] AS [Proba_2], [Values].[LogProba_2] AS [LogProba_2], [Values].[Decision] AS [Decision] 
FROM (SELECT 0 AS node_id, 'anova_output_4' AS feature, -0.1607404202222824 AS threshold, 150 AS count, 0 AS depth, 1.295371631547331e-05 AS [Proba_0], -11.2541278368 AS [LogProba_0], 0.49999417082765785 AS [Proba_1], -0.693158838973 AS [LogProba_1], 0.49999287545602666 AS [Proba_2], -0.693161429749 AS [LogProba_2], 1 AS [Decision] UNION ALL SELECT 1 AS node_id, 'anova_output_5' AS feature, -0.04111745208501816 AS threshold, 46 AS count, 1 AS depth, 4.958547583911902e-06 AS [Proba_0], -12.2143976859 AS [LogProba_0], 0.9113838409332868 AS [Proba_1], -0.0927911302489 AS [LogProba_1], 0.08861120051912924 AS [Proba_2], -2.42349701267 AS [LogProba_2], 1 AS [Decision] UNION ALL SELECT 2 AS node_id, 'anova_output_2' AS feature, 1.1094162464141846 AS threshold, 13 AS count, 2 AS depth, 1.865259280623889e-05 AS [Proba_0], -10.8895253971 AS [LogProba_0], 1.2435061870825929e-05 AS [Proba_1], -11.2949905052 AS [LogProba_1], 0.9999689123453228 AS [Proba_2], -3.10881379083e-05 AS [LogProba_2], 2 AS [Decision] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 0.6 AS [Proba_0], -0.510825623766 AS [LogProba_0], 0.4 AS [Proba_1], -0.916290731874 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0 AS [Decision] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 1.0 AS [Proba_2], 0.0 AS [LogProba_2], 2 AS [Decision] UNION ALL SELECT 5 AS node_id, 'anova_output_2' AS feature, -1.4108089208602905 AS threshold, 33 AS count, 2 AS depth, 3.6271044672284805e-06 AS [Proba_0], -12.5270758954 AS [LogProba_0], 0.9999945593432992 AS [Proba_1], -5.44067150125e-06 AS [LogProba_1], 1.81355223361424e-06 AS [Proba_2], -13.220223076 AS [LogProba_2], 1 AS [Decision] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, 1.0 AS [Proba_0], 0.0 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0 AS [Decision] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 27 AS count, 3 AS depth, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.9999981864411884 AS [Proba_1], -1.81356045607e-06 AS [LogProba_1], 1.813558811581507e-06 AS [Proba_2], -13.2202194489 AS [LogProba_2], 1 AS [Decision] UNION ALL SELECT 8 AS node_id, 'anova_output_5' AS feature, -0.16342796385288239 AS threshold, 104 AS count, 1 AS depth, 2.005038467361345e-05 AS [Proba_0], -10.8172622187 AS [LogProba_0], 0.1348366422342415 AS [Proba_1], -2.00369129078 AS [LogProba_1], 0.8651433073810849 AS [Proba_2], -0.1448601125 AS [LogProba_2], 2 AS [Decision] UNION ALL SELECT 9 AS node_id, 'anova_output_2' AS feature, 1.4109197854995728 AS threshold, 16 AS count, 2 AS depth, 9.163066974019563e-06 AS [Proba_0], -11.6003296128 AS [LogProba_0], 0.6315724367682026 AS [Proba_1], -0.459542637882 AS [LogProba_1], 0.36841840016482336 AS [Proba_2], -0.99853602969 AS [LogProba_2], 1 AS [Decision] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS count, 3 AS depth, 1.45081284451777e-05 AS [Proba_0], -11.1408014832 AS [LogProba_0], 0.9999854918715549 AS [Proba_1], -1.4508233689e-05 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 1 AS [Decision] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 1.0 AS [Proba_2], 0.0 AS [LogProba_2], 2 AS [Decision] UNION ALL SELECT 12 AS node_id, 'anova_output_2' AS feature, 1.1425471305847168 AS threshold, 88 AS count, 2 AS depth, 2.3005465217232956e-05 AS [Proba_0], -10.6797787521 AS [LogProba_0], 1.0570078613323257e-05 AS [Proba_1], -11.4574833207 AS [LogProba_1], 0.9999664244561693 AS [Proba_2], -3.35761075018e-05 AS [LogProba_2], 2 AS [Decision] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 55 AS count, 3 AS depth, 0.6727272727272726 AS [Proba_0], -0.396415272588 AS [LogProba_0], 0.3090909090909092 AS [Proba_1], -1.17411984118 AS [LogProba_1], 0.01818181818181819 AS [Proba_2], -4.00733318523 AS [LogProba_2], 0 AS [Decision] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 33 AS count, 3 AS depth, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 1.0 AS [Proba_2], 0.0 AS [LogProba_2], 2 AS [Decision]) AS [Values]), 
[DT_Output_1] AS 
(SELECT [DT_node_lookup_1].[KEY] AS [KEY], [DT_node_lookup_1].node_id_2 AS node_id_2, [DT_node_data_1].node_id AS node_id, [DT_node_data_1].feature AS feature, [DT_node_data_1].threshold AS threshold, [DT_node_data_1].count AS count, [DT_node_data_1].depth AS depth, [DT_node_data_1].[Proba_0] AS [Proba_0], [DT_node_data_1].[LogProba_0] AS [LogProba_0], [DT_node_data_1].[Proba_1] AS [Proba_1], [DT_node_data_1].[LogProba_1] AS [LogProba_1], [DT_node_data_1].[Proba_2] AS [Proba_2], [DT_node_data_1].[LogProba_2] AS [LogProba_2], [DT_node_data_1].[Decision] AS [Decision] 
FROM [DT_node_lookup_1] LEFT OUTER JOIN [DT_node_data_1] ON [DT_node_lookup_1].node_id_2 = [DT_node_data_1].node_id), 
[AdaBoost_Estim_1] AS 
(SELECT [DT_Output_1].[KEY] AS join_key_1, CAST(NULL AS FLOAT) AS [Score_1_0], [DT_Output_1].[Proba_0] AS [Proba_1_0], [DT_Output_1].[LogProba_0] AS [LogProba_1_0], CAST(NULL AS FLOAT) AS [Score_1_1], [DT_Output_1].[Proba_1] AS [Proba_1_1], [DT_Output_1].[LogProba_1] AS [LogProba_1_1], CAST(NULL AS FLOAT) AS [Score_1_2], [DT_Output_1].[Proba_2] AS [Proba_1_2], [DT_Output_1].[LogProba_2] AS [LogProba_1_2], [DT_Output_1].[Decision] AS [Decision_1] 
FROM [DT_Output_1]), 
[DT_node_lookup_2] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anova_output_2 <= -1.5537705421447754) THEN 1 ELSE CASE WHEN ([ADS_ano_2_OUT].anova_output_4 <= 0.46999114751815796) THEN CASE WHEN ([ADS_ano_2_OUT].anova_output_2 <= 1.6096656322479248) THEN 4 ELSE 5 END ELSE 6 END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_2] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].[Proba_0] AS [Proba_0], [Values].[LogProba_0] AS [LogProba_0], [Values].[Proba_1] AS [Proba_1], [Values].[LogProba_1] AS [LogProba_1], [Values].[Proba_2] AS [Proba_2], [Values].[LogProba_2] AS [LogProba_2], [Values].[Decision] AS [Decision] 
FROM (SELECT 0 AS node_id, 'anova_output_2' AS feature, -1.5537705421447754 AS threshold, 150 AS count, 0 AS depth, 0.33072553035477614 AS [Proba_0], -1.10646646102 AS [LogProba_0], 0.3354183890037697 AS [Proba_1], -1.09237660401 AS [LogProba_1], 0.33385608064145406 AS [Proba_2], -1.09704527515 AS [LogProba_2], 1 AS [Decision] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 50 AS count, 1 AS depth, 1.0 AS [Proba_0], 0.0 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0 AS [Decision] UNION ALL SELECT 2 AS node_id, 'anova_output_4' AS feature, 0.46999114751815796 AS threshold, 100 AS count, 1 AS depth, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.501167165664592 AS [Proba_1], -0.69081556955 AS [LogProba_1], 0.498832834335408 AS [Proba_2], -0.695484240688 AS [LogProba_2], 1 AS [Decision] UNION ALL SELECT 3 AS node_id, 'anova_output_2' AS feature, 1.6096656322479248 AS threshold, 92 AS count, 2 AS depth, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.9861947630560401 AS [Proba_1], -0.0139014154313 AS [LogProba_1], 0.013805236943959805 AS [Proba_2], -4.28270727011 AS [LogProba_2], 1 AS [Decision] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 61 AS count, 3 AS depth, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.9999925703238508 AS [Proba_1], -7.42970374938e-06 AS [LogProba_1], 7.4296761491891145e-06 AS [Proba_2], -11.8100282871 AS [LogProba_2], 1 AS [Decision] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 31 AS count, 3 AS depth, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 1.0 AS [Proba_2], 0.0 AS [LogProba_2], 2 AS [Decision] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 2 AS depth, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 1.0 AS [Proba_2], 0.0 AS [LogProba_2], 2 AS [Decision]) AS [Values]), 
[DT_Output_2] AS 
(SELECT [DT_node_lookup_2].[KEY] AS [KEY], [DT_node_lookup_2].node_id_2 AS node_id_2, [DT_node_data_2].node_id AS node_id, [DT_node_data_2].feature AS feature, [DT_node_data_2].threshold AS threshold, [DT_node_data_2].count AS count, [DT_node_data_2].depth AS depth, [DT_node_data_2].[Proba_0] AS [Proba_0], [DT_node_data_2].[LogProba_0] AS [LogProba_0], [DT_node_data_2].[Proba_1] AS [Proba_1], [DT_node_data_2].[LogProba_1] AS [LogProba_1], [DT_node_data_2].[Proba_2] AS [Proba_2], [DT_node_data_2].[LogProba_2] AS [LogProba_2], [DT_node_data_2].[Decision] AS [Decision] 
FROM [DT_node_lookup_2] LEFT OUTER JOIN [DT_node_data_2] ON [DT_node_lookup_2].node_id_2 = [DT_node_data_2].node_id), 
[AdaBoost_Estim_2] AS 
(SELECT [DT_Output_2].[KEY] AS join_key_2, CAST(NULL AS FLOAT) AS [Score_2_0], [DT_Output_2].[Proba_0] AS [Proba_2_0], [DT_Output_2].[LogProba_0] AS [LogProba_2_0], CAST(NULL AS FLOAT) AS [Score_2_1], [DT_Output_2].[Proba_1] AS [Proba_2_1], [DT_Output_2].[LogProba_1] AS [LogProba_2_1], CAST(NULL AS FLOAT) AS [Score_2_2], [DT_Output_2].[Proba_2] AS [Proba_2_2], [DT_Output_2].[LogProba_2] AS [LogProba_2_2], [DT_Output_2].[Decision] AS [Decision_2] 
FROM [DT_Output_2]), 
[DT_node_lookup_3] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anova_output_2 <= 1.1425471305847168) THEN CASE WHEN ([ADS_ano_2_OUT].anova_output_2 <= -1.5537705421447754) THEN 2 ELSE CASE WHEN ([ADS_ano_2_OUT].anova_output_4 <= 0.5032649040222168) THEN 4 ELSE 5 END END ELSE CASE WHEN ([ADS_ano_2_OUT].anova_output_3 <= 0.2433539628982544) THEN CASE WHEN ([ADS_ano_2_OUT].anova_output_4 <= -0.3462001085281372) THEN 8 ELSE 9 END ELSE CASE WHEN ([ADS_ano_2_OUT].anova_output_2 <= 1.7399235963821411) THEN 11 ELSE 12 END END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_3] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].[Proba_0] AS [Proba_0], [Values].[LogProba_0] AS [LogProba_0], [Values].[Proba_1] AS [Proba_1], [Values].[LogProba_1] AS [LogProba_1], [Values].[Proba_2] AS [Proba_2], [Values].[LogProba_2] AS [LogProba_2], [Values].[Decision] AS [Decision] 
FROM (SELECT 0 AS node_id, 'anova_output_2' AS feature, 1.1425471305847168 AS threshold, 150 AS count, 0 AS depth, 0.00015294618799084985 AS [Proba_0], -8.78542441092 AS [LogProba_0], 0.49984633051650207 AS [Proba_1], -0.693454566765 AS [LogProba_1], 0.500000723295507 AS [Proba_2], -0.69314573397 AS [LogProba_2], 2 AS [Decision] UNION ALL SELECT 1 AS node_id, 'anova_output_2' AS feature, -1.5537705421447754 AS threshold, 94 AS count, 1 AS depth, 0.000311609098660926 AS [Proba_0], -8.07376104458 AS [LogProba_0], 0.999378256368807 AS [Proba_1], -0.000621936993917 AS [LogProba_1], 0.00031013453253221374 AS [Proba_2], -8.07850437872 AS [LogProba_2], 1 AS [Decision] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 50 AS count, 2 AS depth, 1.0 AS [Proba_0], 0.0 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0 AS [Decision] UNION ALL SELECT 3 AS node_id, 'anova_output_4' AS feature, 0.5032649040222168 AS threshold, 44 AS count, 2 AS depth, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.9996897687966021 AS [Proba_1], -0.000310279335053 AS [LogProba_1], 0.000310231203397881 AS [Proba_2], -8.07819272106 AS [LogProba_2], 1 AS [Decision] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 43 AS count, 3 AS depth, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 1.0 AS [Proba_1], 0.0 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 1 AS [Decision] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 1.0 AS [Proba_2], 0.0 AS [LogProba_2], 2 AS [Decision] UNION ALL SELECT 6 AS node_id, 'anova_output_3' AS feature, 0.2433539628982544 AS threshold, 56 AS count, 1 AS depth, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.01831284851888964 AS [Proba_1], -4.00015236064 AS [LogProba_1], 0.9816871514811103 AS [Proba_2], -0.0184826043991 AS [LogProba_2], 2 AS [Decision] UNION ALL SELECT 7 AS node_id, 'anova_output_4' AS feature, -0.3462001085281372 AS threshold, 33 AS count, 2 AS depth, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.006946860018684238 AS [Proba_1], -4.96946551737 AS [LogProba_1], 0.9930531399813158 AS [Proba_2], -0.00697110178542 AS [LogProba_2], 2 AS [Decision] UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.9999999999994411 AS [Proba_1], -5.58886270596e-13 AS [LogProba_1], 5.589300392894317e-13 AS [Proba_2], -28.2127520829 AS [LogProba_2], 1 AS [Decision] UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 31 AS count, 3 AS depth, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.004641990026220688 AS [Proba_1], -5.37261211973 AS [LogProba_1], 0.9953580099737793 AS [Proba_2], -0.00465279752041 AS [LogProba_2], 2 AS [Decision] UNION ALL SELECT 10 AS node_id, 'anova_output_2' AS feature, 1.7399235963821411 AS threshold, 23 AS count, 2 AS depth, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.999627740688656 AS [Proba_1], -0.000372328617042 AS [LogProba_1], 0.00037225931134392466 AS [Proba_2], -7.89591987303 AS [LogProba_2], 1 AS [Decision] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 1.0 AS [Proba_1], 0.0 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 1 AS [Decision] UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 3 AS depth, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 1.0 AS [Proba_2], 0.0 AS [LogProba_2], 2 AS [Decision]) AS [Values]), 
[DT_Output_3] AS 
(SELECT [DT_node_lookup_3].[KEY] AS [KEY], [DT_node_lookup_3].node_id_2 AS node_id_2, [DT_node_data_3].node_id AS node_id, [DT_node_data_3].feature AS feature, [DT_node_data_3].threshold AS threshold, [DT_node_data_3].count AS count, [DT_node_data_3].depth AS depth, [DT_node_data_3].[Proba_0] AS [Proba_0], [DT_node_data_3].[LogProba_0] AS [LogProba_0], [DT_node_data_3].[Proba_1] AS [Proba_1], [DT_node_data_3].[LogProba_1] AS [LogProba_1], [DT_node_data_3].[Proba_2] AS [Proba_2], [DT_node_data_3].[LogProba_2] AS [LogProba_2], [DT_node_data_3].[Decision] AS [Decision] 
FROM [DT_node_lookup_3] LEFT OUTER JOIN [DT_node_data_3] ON [DT_node_lookup_3].node_id_2 = [DT_node_data_3].node_id), 
[AdaBoost_Estim_3] AS 
(SELECT [DT_Output_3].[KEY] AS join_key_3, CAST(NULL AS FLOAT) AS [Score_3_0], [DT_Output_3].[Proba_0] AS [Proba_3_0], [DT_Output_3].[LogProba_0] AS [LogProba_3_0], CAST(NULL AS FLOAT) AS [Score_3_1], [DT_Output_3].[Proba_1] AS [Proba_3_1], [DT_Output_3].[LogProba_1] AS [LogProba_3_1], CAST(NULL AS FLOAT) AS [Score_3_2], [DT_Output_3].[Proba_2] AS [Proba_3_2], [DT_Output_3].[LogProba_2] AS [LogProba_3_2], [DT_Output_3].[Decision] AS [Decision_3] 
FROM [DT_Output_3]), 
[DT_node_lookup_4] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anova_output_5 <= -0.15700747072696686) THEN CASE WHEN ([ADS_ano_2_OUT].anova_output_2 <= 1.4109197854995728) THEN 2 ELSE 3 END ELSE CASE WHEN ([ADS_ano_2_OUT].anova_output_2 <= 1.1425471305847168) THEN CASE WHEN ([ADS_ano_2_OUT].anova_output_4 <= 0.5032649040222168) THEN 6 ELSE 7 END ELSE CASE WHEN ([ADS_ano_2_OUT].anova_output_4 <= -0.3462001085281372) THEN 9 ELSE 10 END END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_4] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].[Proba_0] AS [Proba_0], [Values].[LogProba_0] AS [LogProba_0], [Values].[Proba_1] AS [Proba_1], [Values].[LogProba_1] AS [LogProba_1], [Values].[Proba_2] AS [Proba_2], [Values].[LogProba_2] AS [LogProba_2], [Values].[Decision] AS [Decision] 
FROM (SELECT 0 AS node_id, 'anova_output_5' AS feature, -0.15700747072696686 AS threshold, 150 AS count, 0 AS depth, 5.5364162082671005e-09 AS [Proba_0], -19.0119184393 AS [LogProba_0], 0.5000089779839508 AS [Proba_1], -0.693129224753 AS [LogProba_1], 0.49999101647963307 AS [Proba_2], -0.693165147762 AS [LogProba_2], 1 AS [Decision] UNION ALL SELECT 1 AS node_id, 'anova_output_2' AS feature, 1.4109197854995728 AS threshold, 24 AS count, 1 AS depth, 3.210440360233217e-10 AS [Proba_0], -21.8594428183 AS [LogProba_0], 0.916666666394623 AS [Proba_1], -0.0870113772864 AS [LogProba_1], 0.0833333332843329 AS [Proba_2], -2.48490665038 AS [LogProba_2], 1 AS [Decision] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 14 AS count, 2 AS depth, 3.5022985746126585e-10 AS [Proba_0], -21.7724314414 AS [LogProba_0], 0.9999999996497702 AS [Proba_1], -3.50229845187e-10 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 1 AS [Decision] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 2 AS depth, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 1.0 AS [Proba_2], 0.0 AS [LogProba_2], 2 AS [Decision] UNION ALL SELECT 4 AS node_id, 'anova_output_2' AS feature, 1.1425471305847168 AS threshold, 126 AS count, 1 AS depth, 1.1794599487176648e-08 AS [Proba_0], -18.2556240808 AS [LogProba_0], 4.0789228793146726e-05 AS [Proba_1], -10.1070925116 AS [LogProba_1], 0.9999591989766073 AS [Proba_2], -4.08018557771e-05 AS [LogProba_2], 2 AS [Decision] UNION ALL SELECT 5 AS node_id, 'anova_output_4' AS feature, 0.5032649040222168 AS threshold, 81 AS count, 2 AS depth, 0.0003017568667363941 AS [Proba_0], -8.10588894187 AS [LogProba_0], 0.9993881048313379 AS [Proba_1], -0.000612082452914 AS [LogProba_1], 0.00031013830192575453 AS [Proba_2], -8.07849222473 AS [LogProba_2], 1 AS [Decision] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 80 AS count, 3 AS depth, 0.00030185048213235817 AS [Proba_0], -8.10557875547 AS [LogProba_0], 0.9996981495178676 AS [Proba_1], -0.000301896048159 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 1 AS [Decision] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 1.0 AS [Proba_2], 0.0 AS [LogProba_2], 2 AS [Decision] UNION ALL SELECT 8 AS node_id, 'anova_output_4' AS feature, -0.3462001085281372 AS threshold, 45 AS count, 2 AS depth, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 1.726780307594622e-06 AS [Proba_1], -13.2692519773 AS [LogProba_1], 0.9999982732196924 AS [Proba_2], -1.72678179852e-06 AS [LogProba_2], 2 AS [Decision] UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.5342165130660393 AS [Proba_1], -0.626954067017 AS [LogProba_1], 0.4657834869339608 AS [Proba_2], -0.764034373139 AS [LogProba_2], 1 AS [Decision] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 37 AS count, 3 AS depth, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 2.7846674132769403e-07 AS [Proba_1], -15.0939672054 AS [LogProba_1], 0.9999997215332587 AS [Proba_2], -2.78466780104e-07 AS [LogProba_2], 2 AS [Decision]) AS [Values]), 
[DT_Output_4] AS 
(SELECT [DT_node_lookup_4].[KEY] AS [KEY], [DT_node_lookup_4].node_id_2 AS node_id_2, [DT_node_data_4].node_id AS node_id, [DT_node_data_4].feature AS feature, [DT_node_data_4].threshold AS threshold, [DT_node_data_4].count AS count, [DT_node_data_4].depth AS depth, [DT_node_data_4].[Proba_0] AS [Proba_0], [DT_node_data_4].[LogProba_0] AS [LogProba_0], [DT_node_data_4].[Proba_1] AS [Proba_1], [DT_node_data_4].[LogProba_1] AS [LogProba_1], [DT_node_data_4].[Proba_2] AS [Proba_2], [DT_node_data_4].[LogProba_2] AS [LogProba_2], [DT_node_data_4].[Decision] AS [Decision] 
FROM [DT_node_lookup_4] LEFT OUTER JOIN [DT_node_data_4] ON [DT_node_lookup_4].node_id_2 = [DT_node_data_4].node_id), 
[AdaBoost_Estim_4] AS 
(SELECT [DT_Output_4].[KEY] AS join_key_4, CAST(NULL AS FLOAT) AS [Score_4_0], [DT_Output_4].[Proba_0] AS [Proba_4_0], [DT_Output_4].[LogProba_0] AS [LogProba_4_0], CAST(NULL AS FLOAT) AS [Score_4_1], [DT_Output_4].[Proba_1] AS [Proba_4_1], [DT_Output_4].[LogProba_1] AS [LogProba_4_1], CAST(NULL AS FLOAT) AS [Score_4_2], [DT_Output_4].[Proba_2] AS [Proba_4_2], [DT_Output_4].[LogProba_2] AS [LogProba_4_2], [DT_Output_4].[Decision] AS [Decision_4] 
FROM [DT_Output_4]), 
[DT_node_lookup_5] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anova_output_3 <= 0.19123458862304688) THEN CASE WHEN ([ADS_ano_2_OUT].anova_output_5 <= -0.15700747072696686) THEN CASE WHEN ([ADS_ano_2_OUT].anova_output_3 <= -0.18175803124904633) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS_ano_2_OUT].anova_output_2 <= 1.1425471305847168) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS_ano_2_OUT].anova_output_2 <= -0.6959362030029297) THEN 9 ELSE 10 END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_5] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].[Proba_0] AS [Proba_0], [Values].[LogProba_0] AS [LogProba_0], [Values].[Proba_1] AS [Proba_1], [Values].[LogProba_1] AS [LogProba_1], [Values].[Proba_2] AS [Proba_2], [Values].[LogProba_2] AS [LogProba_2], [Values].[Decision] AS [Decision] 
FROM (SELECT 0 AS node_id, 'anova_output_3' AS feature, 0.19123458862304688 AS threshold, 150 AS count, 0 AS depth, 0.05321307729701933 AS [Proba_0], -2.93345109899 AS [LogProba_0], 0.4999792909963789 AS [Proba_1], -0.693188599425 AS [LogProba_1], 0.44680763170660176 AS [Proba_2], -0.805627131121 AS [LogProba_2], 1 AS [Decision] UNION ALL SELECT 1 AS node_id, 'anova_output_5' AS feature, -0.15700747072696686 AS threshold, 95 AS count, 1 AS depth, 0.08619345097725079 AS [Proba_0], -2.45116107894 AS [LogProba_0], 0.0973632664745735 AS [Proba_1], -2.32930628039 AS [LogProba_1], 0.8164432825481758 AS [Proba_2], -0.202797833102 AS [LogProba_2], 2 AS [Decision] UNION ALL SELECT 2 AS node_id, 'anova_output_3' AS feature, -0.18175803124904633 AS threshold, 16 AS count, 2 AS depth, 0.47010029900330197 AS [Proba_0], -0.75480920491 AS [LogProba_0], 0.5294861862820003 AS [Proba_1], -0.635848202511 AS [LogProba_1], 0.00041351471469775706 AS [Proba_2], -7.79081745841 AS [LogProba_2], 1 AS [Decision] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 1.0 AS [Proba_1], 0.0 AS [LogProba_1], 1.1196469449343681e-17 AS [Proba_2], -39.030933173 AS [LogProba_2], 1 AS [Decision] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, 0.9991211422428727 AS [Proba_0], -0.000879244179029 AS [LogProba_0], 6.8887302787402e-13 AS [Proba_1], -28.0037194255 AS [LogProba_1], 0.0008788577564383782 AS [Proba_2], -7.03688749768 AS [LogProba_2], 0 AS [Decision] UNION ALL SELECT 5 AS node_id, 'anova_output_2' AS feature, 1.1425471305847168 AS threshold, 79 AS count, 2 AS depth, 0.0001893425696729608 AS [Proba_0], -8.57195264562 AS [LogProba_0], 0.0005576308585214645 AS [Proba_1], -7.49181335837 AS [LogProba_1], 0.9992530265718056 AS [Proba_2], -0.000747252551853 AS [LogProba_2], 2 AS [Decision] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 54 AS count, 3 AS depth, 0.3644394158265614 AS [Proba_0], -1.00939495307 AS [LogProba_0], 0.6355605625581472 AS [Proba_1], -0.453247893825 AS [LogProba_1], 2.1615291517784827e-08 AS [Proba_2], -17.6498648321 AS [LogProba_2], 1 AS [Decision] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 25 AS count, 3 AS depth, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.0002275469528057449 AS [Proba_1], -8.38815395491 AS [LogProba_1], 0.9997724530471943 AS [Proba_2], -0.000227572845542 AS [LogProba_2], 2 AS [Decision] UNION ALL SELECT 8 AS node_id, 'anova_output_2' AS feature, -0.6959362030029297 AS threshold, 55 AS count, 1 AS depth, 0.013347112403765977 AS [Proba_0], -4.31645521688 AS [LogProba_0], 0.9866528640331916 AS [Proba_1], -0.0134370095855 AS [LogProba_1], 2.356304244893043e-08 AS [Proba_2], -17.5635863503 AS [LogProba_2], 1 AS [Decision] UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 24 AS count, 2 AS depth, 1.0 AS [Proba_0], 0.0 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0 AS [Decision] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 31 AS count, 2 AS depth, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.9999999761182046 AS [Proba_1], -2.38817957153e-08 AS [LogProba_1], 2.388179545730279e-08 AS [Proba_2], -17.5501493646 AS [LogProba_2], 1 AS [Decision]) AS [Values]), 
[DT_Output_5] AS 
(SELECT [DT_node_lookup_5].[KEY] AS [KEY], [DT_node_lookup_5].node_id_2 AS node_id_2, [DT_node_data_5].node_id AS node_id, [DT_node_data_5].feature AS feature, [DT_node_data_5].threshold AS threshold, [DT_node_data_5].count AS count, [DT_node_data_5].depth AS depth, [DT_node_data_5].[Proba_0] AS [Proba_0], [DT_node_data_5].[LogProba_0] AS [LogProba_0], [DT_node_data_5].[Proba_1] AS [Proba_1], [DT_node_data_5].[LogProba_1] AS [LogProba_1], [DT_node_data_5].[Proba_2] AS [Proba_2], [DT_node_data_5].[LogProba_2] AS [LogProba_2], [DT_node_data_5].[Decision] AS [Decision] 
FROM [DT_node_lookup_5] LEFT OUTER JOIN [DT_node_data_5] ON [DT_node_lookup_5].node_id_2 = [DT_node_data_5].node_id), 
[AdaBoost_Estim_5] AS 
(SELECT [DT_Output_5].[KEY] AS join_key_5, CAST(NULL AS FLOAT) AS [Score_5_0], [DT_Output_5].[Proba_0] AS [Proba_5_0], [DT_Output_5].[LogProba_0] AS [LogProba_5_0], CAST(NULL AS FLOAT) AS [Score_5_1], [DT_Output_5].[Proba_1] AS [Proba_5_1], [DT_Output_5].[LogProba_1] AS [LogProba_5_1], CAST(NULL AS FLOAT) AS [Score_5_2], [DT_Output_5].[Proba_2] AS [Proba_5_2], [DT_Output_5].[LogProba_2] AS [LogProba_5_2], [DT_Output_5].[Decision] AS [Decision_5] 
FROM [DT_Output_5]), 
[AdaBoost_Join_CTE] AS 
(SELECT [AdaBoost_Estim_0].join_key_0 AS join_key_0, [AdaBoost_Estim_0].[Score_0_0] AS [Score_0_0], [AdaBoost_Estim_0].[Proba_0_0] AS [Proba_0_0], [AdaBoost_Estim_0].[LogProba_0_0] AS [LogProba_0_0], [AdaBoost_Estim_0].[Score_0_1] AS [Score_0_1], [AdaBoost_Estim_0].[Proba_0_1] AS [Proba_0_1], [AdaBoost_Estim_0].[LogProba_0_1] AS [LogProba_0_1], [AdaBoost_Estim_0].[Score_0_2] AS [Score_0_2], [AdaBoost_Estim_0].[Proba_0_2] AS [Proba_0_2], [AdaBoost_Estim_0].[LogProba_0_2] AS [LogProba_0_2], [AdaBoost_Estim_0].[Decision_0] AS [Decision_0], [AdaBoost_Estim_1].join_key_1 AS join_key_1, [AdaBoost_Estim_1].[Score_1_0] AS [Score_1_0], [AdaBoost_Estim_1].[Proba_1_0] AS [Proba_1_0], [AdaBoost_Estim_1].[LogProba_1_0] AS [LogProba_1_0], [AdaBoost_Estim_1].[Score_1_1] AS [Score_1_1], [AdaBoost_Estim_1].[Proba_1_1] AS [Proba_1_1], [AdaBoost_Estim_1].[LogProba_1_1] AS [LogProba_1_1], [AdaBoost_Estim_1].[Score_1_2] AS [Score_1_2], [AdaBoost_Estim_1].[Proba_1_2] AS [Proba_1_2], [AdaBoost_Estim_1].[LogProba_1_2] AS [LogProba_1_2], [AdaBoost_Estim_1].[Decision_1] AS [Decision_1], [AdaBoost_Estim_2].join_key_2 AS join_key_2, [AdaBoost_Estim_2].[Score_2_0] AS [Score_2_0], [AdaBoost_Estim_2].[Proba_2_0] AS [Proba_2_0], [AdaBoost_Estim_2].[LogProba_2_0] AS [LogProba_2_0], [AdaBoost_Estim_2].[Score_2_1] AS [Score_2_1], [AdaBoost_Estim_2].[Proba_2_1] AS [Proba_2_1], [AdaBoost_Estim_2].[LogProba_2_1] AS [LogProba_2_1], [AdaBoost_Estim_2].[Score_2_2] AS [Score_2_2], [AdaBoost_Estim_2].[Proba_2_2] AS [Proba_2_2], [AdaBoost_Estim_2].[LogProba_2_2] AS [LogProba_2_2], [AdaBoost_Estim_2].[Decision_2] AS [Decision_2], [AdaBoost_Estim_3].join_key_3 AS join_key_3, [AdaBoost_Estim_3].[Score_3_0] AS [Score_3_0], [AdaBoost_Estim_3].[Proba_3_0] AS [Proba_3_0], [AdaBoost_Estim_3].[LogProba_3_0] AS [LogProba_3_0], [AdaBoost_Estim_3].[Score_3_1] AS [Score_3_1], [AdaBoost_Estim_3].[Proba_3_1] AS [Proba_3_1], [AdaBoost_Estim_3].[LogProba_3_1] AS [LogProba_3_1], [AdaBoost_Estim_3].[Score_3_2] AS [Score_3_2], [AdaBoost_Estim_3].[Proba_3_2] AS [Proba_3_2], [AdaBoost_Estim_3].[LogProba_3_2] AS [LogProba_3_2], [AdaBoost_Estim_3].[Decision_3] AS [Decision_3], [AdaBoost_Estim_4].join_key_4 AS join_key_4, [AdaBoost_Estim_4].[Score_4_0] AS [Score_4_0], [AdaBoost_Estim_4].[Proba_4_0] AS [Proba_4_0], [AdaBoost_Estim_4].[LogProba_4_0] AS [LogProba_4_0], [AdaBoost_Estim_4].[Score_4_1] AS [Score_4_1], [AdaBoost_Estim_4].[Proba_4_1] AS [Proba_4_1], [AdaBoost_Estim_4].[LogProba_4_1] AS [LogProba_4_1], [AdaBoost_Estim_4].[Score_4_2] AS [Score_4_2], [AdaBoost_Estim_4].[Proba_4_2] AS [Proba_4_2], [AdaBoost_Estim_4].[LogProba_4_2] AS [LogProba_4_2], [AdaBoost_Estim_4].[Decision_4] AS [Decision_4], [AdaBoost_Estim_5].join_key_5 AS join_key_5, [AdaBoost_Estim_5].[Score_5_0] AS [Score_5_0], [AdaBoost_Estim_5].[Proba_5_0] AS [Proba_5_0], [AdaBoost_Estim_5].[LogProba_5_0] AS [LogProba_5_0], [AdaBoost_Estim_5].[Score_5_1] AS [Score_5_1], [AdaBoost_Estim_5].[Proba_5_1] AS [Proba_5_1], [AdaBoost_Estim_5].[LogProba_5_1] AS [LogProba_5_1], [AdaBoost_Estim_5].[Score_5_2] AS [Score_5_2], [AdaBoost_Estim_5].[Proba_5_2] AS [Proba_5_2], [AdaBoost_Estim_5].[LogProba_5_2] AS [LogProba_5_2], [AdaBoost_Estim_5].[Decision_5] AS [Decision_5] 
FROM [AdaBoost_Estim_0] LEFT OUTER JOIN [AdaBoost_Estim_1] ON [AdaBoost_Estim_0].join_key_0 = [AdaBoost_Estim_1].join_key_1 LEFT OUTER JOIN [AdaBoost_Estim_2] ON [AdaBoost_Estim_2].join_key_2 = [AdaBoost_Estim_1].join_key_1 LEFT OUTER JOIN [AdaBoost_Estim_3] ON [AdaBoost_Estim_3].join_key_3 = [AdaBoost_Estim_2].join_key_2 LEFT OUTER JOIN [AdaBoost_Estim_4] ON [AdaBoost_Estim_4].join_key_4 = [AdaBoost_Estim_3].join_key_3 LEFT OUTER JOIN [AdaBoost_Estim_5] ON [AdaBoost_Estim_5].join_key_5 = [AdaBoost_Estim_4].join_key_4), 
[AdaBoost_AVG_Scores_BN] AS 
(SELECT [AdaBoost_Join_CTE].join_key_0 AS [KEY], (2.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_2]) ELSE -1.79769313486231e+308 END END) / 3)) / 6.0 + (2.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_2]) ELSE -1.79769313486231e+308 END END) / 3)) / 6.0 + (2.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_2]) ELSE -1.79769313486231e+308 END END) / 3)) / 6.0 + (2.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_2]) ELSE -1.79769313486231e+308 END END) / 3)) / 6.0 + (2.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_2]) ELSE -1.79769313486231e+308 END END) / 3)) / 6.0 + (2.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_2]) ELSE -1.79769313486231e+308 END END) / 3)) / 6.0 AS [Score_0], 2.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_2]) ELSE -1.79769313486231e+308 END END) / 3) + 2.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_2]) ELSE -1.79769313486231e+308 END END) / 3) + 2.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_2]) ELSE -1.79769313486231e+308 END END) / 3) + 2.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_2]) ELSE -1.79769313486231e+308 END END) / 3) + 2.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_2]) ELSE -1.79769313486231e+308 END END) / 3) + 2.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_2]) ELSE -1.79769313486231e+308 END END) / 3) AS [Proba_0], (2.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_2]) ELSE -1.79769313486231e+308 END END) / 3)) / 6.0 + (2.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_2]) ELSE -1.79769313486231e+308 END END) / 3)) / 6.0 + (2.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_2]) ELSE -1.79769313486231e+308 END END) / 3)) / 6.0 + (2.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_2]) ELSE -1.79769313486231e+308 END END) / 3)) / 6.0 + (2.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_2]) ELSE -1.79769313486231e+308 END END) / 3)) / 6.0 + (2.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_2]) ELSE -1.79769313486231e+308 END END) / 3)) / 6.0 AS [Score_1], 2.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_2]) ELSE -1.79769313486231e+308 END END) / 3) + 2.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_2]) ELSE -1.79769313486231e+308 END END) / 3) + 2.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_2]) ELSE -1.79769313486231e+308 END END) / 3) + 2.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_2]) ELSE -1.79769313486231e+308 END END) / 3) + 2.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_2]) ELSE -1.79769313486231e+308 END END) / 3) + 2.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_2]) ELSE -1.79769313486231e+308 END END) / 3) AS [Proba_1], (2.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_2]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_2]) ELSE -1.79769313486231e+308 END END) / 3)) / 6.0 + (2.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_2]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_2]) ELSE -1.79769313486231e+308 END END) / 3)) / 6.0 + (2.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_2]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_2]) ELSE -1.79769313486231e+308 END END) / 3)) / 6.0 + (2.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_2]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_2]) ELSE -1.79769313486231e+308 END END) / 3)) / 6.0 + (2.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_2]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_2]) ELSE -1.79769313486231e+308 END END) / 3)) / 6.0 + (2.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_2]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_2]) ELSE -1.79769313486231e+308 END END) / 3)) / 6.0 AS [Score_2], 2.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_2]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_2]) ELSE -1.79769313486231e+308 END END) / 3) + 2.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_2]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_2]) ELSE -1.79769313486231e+308 END END) / 3) + 2.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_2]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_2]) ELSE -1.79769313486231e+308 END END) / 3) + 2.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_2]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_2]) ELSE -1.79769313486231e+308 END END) / 3) + 2.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_2]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_2]) ELSE -1.79769313486231e+308 END END) / 3) + 2.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_2]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_2]) ELSE -1.79769313486231e+308 END END) / 3) AS [Proba_2] 
FROM [AdaBoost_Join_CTE]), 
[AdaBoost_AVG_Scores] AS 
(SELECT [AdaBoost_AVG_Scores_BN].[KEY] AS [KEY], [AdaBoost_AVG_Scores_BN].[Score_0] AS [Score_0], exp(([AdaBoost_AVG_Scores_BN].[Proba_0] / 6.0) / 2) / (exp(([AdaBoost_AVG_Scores_BN].[Proba_0] / 6.0) / 2) + exp(([AdaBoost_AVG_Scores_BN].[Proba_1] / 6.0) / 2) + exp(([AdaBoost_AVG_Scores_BN].[Proba_2] / 6.0) / 2)) AS [Proba_0], CAST(NULL AS FLOAT) AS [LogProba_0], [AdaBoost_AVG_Scores_BN].[Score_1] AS [Score_1], exp(([AdaBoost_AVG_Scores_BN].[Proba_1] / 6.0) / 2) / (exp(([AdaBoost_AVG_Scores_BN].[Proba_0] / 6.0) / 2) + exp(([AdaBoost_AVG_Scores_BN].[Proba_1] / 6.0) / 2) + exp(([AdaBoost_AVG_Scores_BN].[Proba_2] / 6.0) / 2)) AS [Proba_1], CAST(NULL AS FLOAT) AS [LogProba_1], [AdaBoost_AVG_Scores_BN].[Score_2] AS [Score_2], exp(([AdaBoost_AVG_Scores_BN].[Proba_2] / 6.0) / 2) / (exp(([AdaBoost_AVG_Scores_BN].[Proba_0] / 6.0) / 2) + exp(([AdaBoost_AVG_Scores_BN].[Proba_1] / 6.0) / 2) + exp(([AdaBoost_AVG_Scores_BN].[Proba_2] / 6.0) / 2)) AS [Proba_2], CAST(NULL AS FLOAT) AS [LogProba_2] 
FROM [AdaBoost_AVG_Scores_BN]), 
orig_cte AS 
(SELECT [AdaBoost_AVG_Scores].[KEY] AS [KEY], [AdaBoost_AVG_Scores].[Score_0] AS [Score_0], [AdaBoost_AVG_Scores].[Score_1] AS [Score_1], [AdaBoost_AVG_Scores].[Score_2] AS [Score_2], [AdaBoost_AVG_Scores].[Proba_0] AS [Proba_0], [AdaBoost_AVG_Scores].[Proba_1] AS [Proba_1], [AdaBoost_AVG_Scores].[Proba_2] AS [Proba_2], [AdaBoost_AVG_Scores].[LogProba_0] AS [LogProba_0], [AdaBoost_AVG_Scores].[LogProba_1] AS [LogProba_1], [AdaBoost_AVG_Scores].[LogProba_2] AS [LogProba_2], CAST(NULL AS FLOAT(53)) AS [Decision] 
FROM [AdaBoost_AVG_Scores]), 
score_class_union AS 
(SELECT scu.[KEY] AS [KEY], scu.class AS class, scu.[LogProba] AS [LogProba], scu.[Proba] AS [Proba], scu.[Score] AS [Score] 
FROM (SELECT orig_cte.[KEY] AS [KEY], 0 AS class, orig_cte.[LogProba_0] AS [LogProba], orig_cte.[Proba_0] AS [Proba], orig_cte.[Score_0] AS [Score] 
FROM orig_cte UNION ALL SELECT orig_cte.[KEY] AS [KEY], 1 AS class, orig_cte.[LogProba_1] AS [LogProba], orig_cte.[Proba_1] AS [Proba], orig_cte.[Score_1] AS [Score] 
FROM orig_cte UNION ALL SELECT orig_cte.[KEY] AS [KEY], 2 AS class, orig_cte.[LogProba_2] AS [LogProba], orig_cte.[Proba_2] AS [Proba], orig_cte.[Score_2] AS [Score] 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte.[KEY] AS [KEY], orig_cte.[Score_0] AS [Score_0], orig_cte.[Score_1] AS [Score_1], orig_cte.[Score_2] AS [Score_2], orig_cte.[Proba_0] AS [Proba_0], orig_cte.[Proba_1] AS [Proba_1], orig_cte.[Proba_2] AS [Proba_2], orig_cte.[LogProba_0] AS [LogProba_0], orig_cte.[LogProba_1] AS [LogProba_1], orig_cte.[LogProba_2] AS [LogProba_2], orig_cte.[Decision] AS [Decision], (SELECT max(score_class_union.[LogProba]) AS max_1 
FROM score_class_union 
WHERE orig_cte.[KEY] = score_class_union.[KEY]) AS [max_LogProba], (SELECT max(score_class_union.[Proba]) AS max_2 
FROM score_class_union 
WHERE orig_cte.[KEY] = score_class_union.[KEY]) AS [max_Proba], (SELECT max(score_class_union.[Score]) AS max_3 
FROM score_class_union 
WHERE orig_cte.[KEY] = score_class_union.[KEY]) AS [max_Score] 
FROM orig_cte), 
arg_max_cte AS 
(SELECT score_max.[KEY] AS [KEY], score_max.[Score_0] AS [Score_0], score_max.[Score_1] AS [Score_1], score_max.[Score_2] AS [Score_2], score_max.[Proba_0] AS [Proba_0], score_max.[Proba_1] AS [Proba_1], score_max.[Proba_2] AS [Proba_2], score_max.[LogProba_0] AS [LogProba_0], score_max.[LogProba_1] AS [LogProba_1], score_max.[LogProba_2] AS [LogProba_2], score_max.[Decision] AS [Decision], score_max.[max_LogProba] AS [max_LogProba], score_max.[max_Proba] AS [max_Proba], score_max.[max_Score] AS [max_Score], (SELECT min(score_class_union.class) AS min_1 
FROM score_class_union 
WHERE score_max.[max_LogProba] = score_class_union.[LogProba] AND score_max.[KEY] = score_class_union.[KEY]) AS [arg_max_LogProba], (SELECT min(score_class_union.class) AS min_2 
FROM score_class_union 
WHERE score_max.[max_Proba] = score_class_union.[Proba] AND score_max.[KEY] = score_class_union.[KEY]) AS [arg_max_Proba], (SELECT min(score_class_union.class) AS min_3 
FROM score_class_union 
WHERE score_max.[max_Score] = score_class_union.[Score] AND score_max.[KEY] = score_class_union.[KEY]) AS [arg_max_Score] 
FROM score_max)
 SELECT arg_max_cte.[KEY] AS [KEY], arg_max_cte.[Score_0] AS [Score_0], arg_max_cte.[Score_1] AS [Score_1], arg_max_cte.[Score_2] AS [Score_2], arg_max_cte.[Proba_0] AS [Proba_0], arg_max_cte.[Proba_1] AS [Proba_1], arg_max_cte.[Proba_2] AS [Proba_2], CASE WHEN (arg_max_cte.[Proba_0] IS NULL OR arg_max_cte.[Proba_0] > 0.0) THEN log(arg_max_cte.[Proba_0]) ELSE -1.79769313486231e+308 END AS [LogProba_0], CASE WHEN (arg_max_cte.[Proba_1] IS NULL OR arg_max_cte.[Proba_1] > 0.0) THEN log(arg_max_cte.[Proba_1]) ELSE -1.79769313486231e+308 END AS [LogProba_1], CASE WHEN (arg_max_cte.[Proba_2] IS NULL OR arg_max_cte.[Proba_2] > 0.0) THEN log(arg_max_cte.[Proba_2]) ELSE -1.79769313486231e+308 END AS [LogProba_2], arg_max_cte.[arg_max_Score] AS [Decision] 
FROM arg_max_cte