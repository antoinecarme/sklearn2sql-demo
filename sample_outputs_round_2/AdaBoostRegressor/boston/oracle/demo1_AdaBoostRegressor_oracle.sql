-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH "DT_node_lookup" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_12" <= 6.965000152587891) THEN CASE WHEN ("ADS"."Feature_5" <= 7.515000343322754) THEN CASE WHEN ("ADS"."Feature_9" <= 534.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_10" <= 19.650001525878906) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_12" <= 14.399999618530273) THEN CASE WHEN ("ADS"."Feature_7" <= 1.2229499816894531) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_7" <= 2.103799819946289) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "INPUT_DATA" "ADS"), 
"DT_node_data" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_12' AS feature, 6.965000152587891 AS threshold, 506 AS count, 0 AS depth, 22.284189723320164 AS "Estimator" FROM DUAL UNION ALL SELECT 1 AS node_id, 'Feature_5' AS feature, 7.515000343322754 AS threshold, 126 AS count, 1 AS depth, 33.152380952380945 AS "Estimator" FROM DUAL UNION ALL SELECT 2 AS node_id, 'Feature_9' AS feature, 534.5 AS threshold, 100 AS count, 2 AS depth, 30.14799999999999 AS "Estimator" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 96 AS count, 3 AS depth, 29.320833333333336 AS "Estimator" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 50.0 AS "Estimator" FROM DUAL UNION ALL SELECT 5 AS node_id, 'Feature_10' AS feature, 19.650001525878906 AS threshold, 26 AS count, 2 AS depth, 44.707692307692305 AS "Estimator" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 25 AS count, 3 AS depth, 45.62 AS "Estimator" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 21.9 AS "Estimator" FROM DUAL UNION ALL SELECT 8 AS node_id, 'Feature_12' AS feature, 14.399999618530273 AS threshold, 380 AS count, 1 AS depth, 18.680526315789468 AS "Estimator" FROM DUAL UNION ALL SELECT 9 AS node_id, 'Feature_7' AS feature, 1.2229499816894531 AS threshold, 211 AS count, 2 AS depth, 22.03459715639809 AS "Estimator" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 50.0 AS "Estimator" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 210 AS count, 3 AS depth, 21.901428571428568 AS "Estimator" FROM DUAL UNION ALL SELECT 12 AS node_id, 'Feature_7' AS feature, 2.103799819946289 AS threshold, 169 AS count, 2 AS depth, 14.49289940828402 AS "Estimator" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 99 AS count, 3 AS depth, 11.952525252525254 AS "Estimator" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 70 AS count, 3 AS depth, 18.085714285714285 AS "Estimator" FROM DUAL) "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".node_id AS node_id, "DT_node_data".feature AS feature, "DT_node_data".threshold AS threshold, "DT_node_data".count AS count, "DT_node_data".depth AS depth, "DT_node_data"."Estimator" AS "Estimator" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".node_id), 
"AdaBoost_Estim_0" AS 
(SELECT "DT_Output"."KEY" AS join_key_0, "DT_Output"."Estimator" AS "Estimator_0" 
FROM "DT_Output"), 
"DT_node_lookup_1" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_5" <= 6.920000076293945) THEN CASE WHEN ("ADS"."Feature_12" <= 14.399999618530273) THEN CASE WHEN ("ADS"."Feature_5" <= 6.543000221252441) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_4" <= 0.6069999933242798) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_5" <= 7.437000274658203) THEN CASE WHEN ("ADS"."Feature_7" <= 1.8859500885009766) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_7" <= 1.9378000497817993) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "INPUT_DATA" "ADS"), 
"DT_node_data_1" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_5' AS feature, 6.920000076293945 AS threshold, 506 AS count, 0 AS depth, 23.889525691699625 AS "Estimator" FROM DUAL UNION ALL SELECT 1 AS node_id, 'Feature_12' AS feature, 14.399999618530273 AS threshold, 412 AS count, 1 AS depth, 20.253398058252436 AS "Estimator" FROM DUAL UNION ALL SELECT 2 AS node_id, 'Feature_5' AS feature, 6.543000221252441 AS threshold, 248 AS count, 2 AS depth, 23.406854838709698 AS "Estimator" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 189 AS count, 3 AS depth, 22.014814814814798 AS "Estimator" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 59 AS count, 3 AS depth, 27.86610169491525 AS "Estimator" FROM DUAL UNION ALL SELECT 5 AS node_id, 'Feature_4' AS feature, 0.6069999933242798 AS threshold, 164 AS count, 2 AS depth, 15.484756097560965 AS "Estimator" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 70 AS count, 3 AS depth, 18.39428571428572 AS "Estimator" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 94 AS count, 3 AS depth, 13.318085106382982 AS "Estimator" FROM DUAL UNION ALL SELECT 8 AS node_id, 'Feature_5' AS feature, 7.437000274658203 AS threshold, 94 AS count, 1 AS depth, 39.82659574468083 AS "Estimator" FROM DUAL UNION ALL SELECT 9 AS node_id, 'Feature_7' AS feature, 1.8859500885009766 AS threshold, 44 AS count, 2 AS depth, 34.52954545454546 AS "Estimator" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 47.1 AS "Estimator" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 41 AS count, 3 AS depth, 33.60975609756099 AS "Estimator" FROM DUAL UNION ALL SELECT 12 AS node_id, 'Feature_7' AS feature, 1.9378000497817993 AS threshold, 50 AS count, 2 AS depth, 44.48799999999999 AS "Estimator" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 21.9 AS "Estimator" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 48 AS count, 3 AS depth, 45.42916666666665 AS "Estimator" FROM DUAL) "Values"), 
"DT_Output_1" AS 
(SELECT "DT_node_lookup_1"."KEY" AS "KEY", "DT_node_lookup_1".node_id_2 AS node_id_2, "DT_node_data_1".node_id AS node_id, "DT_node_data_1".feature AS feature, "DT_node_data_1".threshold AS threshold, "DT_node_data_1".count AS count, "DT_node_data_1".depth AS depth, "DT_node_data_1"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_1" LEFT OUTER JOIN "DT_node_data_1" ON "DT_node_lookup_1".node_id_2 = "DT_node_data_1".node_id), 
"AdaBoost_Estim_1" AS 
(SELECT "DT_Output_1"."KEY" AS join_key_1, "DT_Output_1"."Estimator" AS "Estimator_1" 
FROM "DT_Output_1"), 
"DT_node_lookup_2" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_12" <= 9.539999961853027) THEN CASE WHEN ("ADS"."Feature_5" <= 7.393500328063965) THEN CASE WHEN ("ADS"."Feature_7" <= 1.4849499464035034) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_10" <= 17.899999618530273) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_0" <= 6.054610252380371) THEN CASE WHEN ("ADS"."Feature_2" <= 3.9850001335144043) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_12" <= 20.46500015258789) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "INPUT_DATA" "ADS"), 
"DT_node_data_2" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_12' AS feature, 9.539999961853027 AS threshold, 506 AS count, 0 AS depth, 23.16561264822138 AS "Estimator" FROM DUAL UNION ALL SELECT 1 AS node_id, 'Feature_5' AS feature, 7.393500328063965 AS threshold, 214 AS count, 1 AS depth, 31.837383177570107 AS "Estimator" FROM DUAL UNION ALL SELECT 2 AS node_id, 'Feature_7' AS feature, 1.4849499464035034 AS threshold, 173 AS count, 2 AS depth, 28.36705202312138 AS "Estimator" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS count, 3 AS depth, 50.0 AS "Estimator" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 160 AS count, 3 AS depth, 26.609374999999982 AS "Estimator" FROM DUAL UNION ALL SELECT 5 AS node_id, 'Feature_10' AS feature, 17.899999618530273 AS threshold, 41 AS count, 2 AS depth, 46.48048780487805 AS "Estimator" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 38 AS count, 3 AS depth, 47.27894736842105 AS "Estimator" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 36.36666666666667 AS "Estimator" FROM DUAL UNION ALL SELECT 8 AS node_id, 'Feature_0' AS feature, 6.054610252380371 AS threshold, 292 AS count, 1 AS depth, 16.810273972602733 AS "Estimator" FROM DUAL UNION ALL SELECT 9 AS node_id, 'Feature_2' AS feature, 3.9850001335144043 AS threshold, 197 AS count, 2 AS depth, 18.921827411167488 AS "Estimator" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 3 AS depth, 28.57 AS "Estimator" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 187 AS count, 3 AS depth, 18.40588235294116 AS "Estimator" FROM DUAL UNION ALL SELECT 12 AS node_id, 'Feature_12' AS feature, 20.46500015258789 AS threshold, 95 AS count, 2 AS depth, 12.431578947368433 AS "Estimator" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 57 AS count, 3 AS depth, 14.482456140350877 AS "Estimator" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 38 AS count, 3 AS depth, 9.355263157894736 AS "Estimator" FROM DUAL) "Values"), 
"DT_Output_2" AS 
(SELECT "DT_node_lookup_2"."KEY" AS "KEY", "DT_node_lookup_2".node_id_2 AS node_id_2, "DT_node_data_2".node_id AS node_id, "DT_node_data_2".feature AS feature, "DT_node_data_2".threshold AS threshold, "DT_node_data_2".count AS count, "DT_node_data_2".depth AS depth, "DT_node_data_2"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_2" LEFT OUTER JOIN "DT_node_data_2" ON "DT_node_lookup_2".node_id_2 = "DT_node_data_2".node_id), 
"AdaBoost_Estim_2" AS 
(SELECT "DT_Output_2"."KEY" AS join_key_2, "DT_Output_2"."Estimator" AS "Estimator_2" 
FROM "DT_Output_2"), 
"DT_node_lookup_3" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_12" <= 9.950000762939453) THEN CASE WHEN ("ADS"."Feature_5" <= 7.437000274658203) THEN CASE WHEN ("ADS"."Feature_0" <= 4.727045059204102) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_11" <= 364.489990234375) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_12" <= 19.829999923706055) THEN CASE WHEN ("ADS"."Feature_4" <= 0.6649999618530273) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_4" <= 0.6030000448226929) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "INPUT_DATA" "ADS"), 
"DT_node_data_3" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_12' AS feature, 9.950000762939453 AS threshold, 506 AS count, 0 AS depth, 24.421146245059283 AS "Estimator" FROM DUAL UNION ALL SELECT 1 AS node_id, 'Feature_5' AS feature, 7.437000274658203 AS threshold, 251 AS count, 1 AS depth, 32.21155378486054 AS "Estimator" FROM DUAL UNION ALL SELECT 2 AS node_id, 'Feature_0' AS feature, 4.727045059204102 AS threshold, 199 AS count, 2 AS depth, 28.962311557788958 AS "Estimator" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 186 AS count, 3 AS depth, 27.491935483870957 AS "Estimator" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS count, 3 AS depth, 50.0 AS "Estimator" FROM DUAL UNION ALL SELECT 5 AS node_id, 'Feature_11' AS feature, 364.489990234375 AS threshold, 52 AS count, 2 AS depth, 44.64615384615385 AS "Estimator" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 21.9 AS "Estimator" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 50 AS count, 3 AS depth, 45.556 AS "Estimator" FROM DUAL UNION ALL SELECT 8 AS node_id, 'Feature_12' AS feature, 19.829999923706055 AS threshold, 255 AS count, 1 AS depth, 16.752941176470582 AS "Estimator" FROM DUAL UNION ALL SELECT 9 AS node_id, 'Feature_4' AS feature, 0.6649999618530273 AS threshold, 183 AS count, 2 AS depth, 19.13551912568306 AS "Estimator" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 130 AS count, 3 AS depth, 20.839230769230774 AS "Estimator" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 53 AS count, 3 AS depth, 14.956603773584906 AS "Estimator" FROM DUAL UNION ALL SELECT 12 AS node_id, 'Feature_4' AS feature, 0.6030000448226929 AS threshold, 72 AS count, 2 AS depth, 10.697222222222223 AS "Estimator" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS count, 3 AS depth, 16.646153846153844 AS "Estimator" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 59 AS count, 3 AS depth, 9.386440677966101 AS "Estimator" FROM DUAL) "Values"), 
"DT_Output_3" AS 
(SELECT "DT_node_lookup_3"."KEY" AS "KEY", "DT_node_lookup_3".node_id_2 AS node_id_2, "DT_node_data_3".node_id AS node_id, "DT_node_data_3".feature AS feature, "DT_node_data_3".threshold AS threshold, "DT_node_data_3".count AS count, "DT_node_data_3".depth AS depth, "DT_node_data_3"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_3" LEFT OUTER JOIN "DT_node_data_3" ON "DT_node_lookup_3".node_id_2 = "DT_node_data_3".node_id), 
"AdaBoost_Estim_3" AS 
(SELECT "DT_Output_3"."KEY" AS join_key_3, "DT_Output_3"."Estimator" AS "Estimator_3" 
FROM "DT_Output_3"), 
"DT_node_lookup_4" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_12" <= 7.809999942779541) THEN CASE WHEN ("ADS"."Feature_5" <= 7.140999794006348) THEN CASE WHEN ("ADS"."Feature_12" <= 4.914999961853027) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_5" <= 7.437000274658203) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_12" <= 19.829999923706055) THEN CASE WHEN ("ADS"."Feature_7" <= 1.2271499633789062) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_4" <= 0.6030000448226929) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "INPUT_DATA" "ADS"), 
"DT_node_data_4" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_12' AS feature, 7.809999942779541 AS threshold, 506 AS count, 0 AS depth, 24.270948616600784 AS "Estimator" FROM DUAL UNION ALL SELECT 1 AS node_id, 'Feature_5' AS feature, 7.140999794006348 AS threshold, 181 AS count, 1 AS depth, 32.591712707182346 AS "Estimator" FROM DUAL UNION ALL SELECT 2 AS node_id, 'Feature_12' AS feature, 4.914999961853027 AS threshold, 113 AS count, 2 AS depth, 28.050442477876093 AS "Estimator" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 37 AS count, 3 AS depth, 34.970270270270255 AS "Estimator" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 76 AS count, 3 AS depth, 24.681578947368426 AS "Estimator" FROM DUAL UNION ALL SELECT 5 AS node_id, 'Feature_5' AS feature, 7.437000274658203 AS threshold, 68 AS count, 2 AS depth, 40.13823529411764 AS "Estimator" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 33 AS count, 3 AS depth, 35.63030303030303 AS "Estimator" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 35 AS count, 3 AS depth, 44.38857142857144 AS "Estimator" FROM DUAL UNION ALL SELECT 8 AS node_id, 'Feature_12' AS feature, 19.829999923706055 AS threshold, 325 AS count, 1 AS depth, 19.636923076923072 AS "Estimator" FROM DUAL UNION ALL SELECT 9 AS node_id, 'Feature_7' AS feature, 1.2271499633789062 AS threshold, 263 AS count, 2 AS depth, 21.467300380228153 AS "Estimator" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 50.0 AS "Estimator" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 259 AS count, 3 AS depth, 21.026640926640912 AS "Estimator" FROM DUAL UNION ALL SELECT 12 AS node_id, 'Feature_4' AS feature, 0.6030000448226929 AS threshold, 62 AS count, 2 AS depth, 11.872580645161289 AS "Estimator" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 3 AS depth, 16.623529411764704 AS "Estimator" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 45 AS count, 3 AS depth, 10.07777777777778 AS "Estimator" FROM DUAL) "Values"), 
"DT_Output_4" AS 
(SELECT "DT_node_lookup_4"."KEY" AS "KEY", "DT_node_lookup_4".node_id_2 AS node_id_2, "DT_node_data_4".node_id AS node_id, "DT_node_data_4".feature AS feature, "DT_node_data_4".threshold AS threshold, "DT_node_data_4".count AS count, "DT_node_data_4".depth AS depth, "DT_node_data_4"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_4" LEFT OUTER JOIN "DT_node_data_4" ON "DT_node_lookup_4".node_id_2 = "DT_node_data_4".node_id), 
"AdaBoost_Estim_4" AS 
(SELECT "DT_Output_4"."KEY" AS join_key_4, "DT_Output_4"."Estimator" AS "Estimator_4" 
FROM "DT_Output_4"), 
"DT_node_lookup_5" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_12" <= 9.71500015258789) THEN CASE WHEN ("ADS"."Feature_5" <= 6.908499717712402) THEN CASE WHEN ("ADS"."Feature_7" <= 1.47284996509552) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_10" <= 14.799999237060547) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_4" <= 0.6649999618530273) THEN CASE WHEN ("ADS"."Feature_5" <= 6.84250020980835) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_0" <= 10.328845024108887) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "INPUT_DATA" "ADS"), 
"DT_node_data_5" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_12' AS feature, 9.71500015258789 AS threshold, 506 AS count, 0 AS depth, 25.35395256916998 AS "Estimator" FROM DUAL UNION ALL SELECT 1 AS node_id, 'Feature_5' AS feature, 6.908499717712402 AS threshold, 277 AS count, 1 AS depth, 31.684115523465703 AS "Estimator" FROM DUAL UNION ALL SELECT 2 AS node_id, 'Feature_7' AS feature, 1.47284996509552 AS threshold, 147 AS count, 2 AS depth, 26.9442176870748 AS "Estimator" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, 50.0 AS "Estimator" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 138 AS count, 3 AS depth, 25.440579710144952 AS "Estimator" FROM DUAL UNION ALL SELECT 5 AS node_id, 'Feature_10' AS feature, 14.799999237060547 AS threshold, 130 AS count, 2 AS depth, 37.04384615384619 AS "Estimator" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 48 AS count, 3 AS depth, 41.96666666666666 AS "Estimator" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 82 AS count, 3 AS depth, 34.16219512195121 AS "Estimator" FROM DUAL UNION ALL SELECT 8 AS node_id, 'Feature_4' AS feature, 0.6649999618530273 AS threshold, 229 AS count, 1 AS depth, 17.696943231441047 AS "Estimator" FROM DUAL UNION ALL SELECT 9 AS node_id, 'Feature_5' AS feature, 6.84250020980835 AS threshold, 151 AS count, 2 AS depth, 20.496688741721844 AS "Estimator" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 133 AS count, 3 AS depth, 19.40300751879698 AS "Estimator" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 3 AS depth, 28.577777777777783 AS "Estimator" FROM DUAL UNION ALL SELECT 12 AS node_id, 'Feature_0' AS feature, 10.328845024108887 AS threshold, 78 AS count, 2 AS depth, 12.276923076923067 AS "Estimator" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 39 AS count, 3 AS depth, 15.312820512820513 AS "Estimator" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 39 AS count, 3 AS depth, 9.241025641025638 AS "Estimator" FROM DUAL) "Values"), 
"DT_Output_5" AS 
(SELECT "DT_node_lookup_5"."KEY" AS "KEY", "DT_node_lookup_5".node_id_2 AS node_id_2, "DT_node_data_5".node_id AS node_id, "DT_node_data_5".feature AS feature, "DT_node_data_5".threshold AS threshold, "DT_node_data_5".count AS count, "DT_node_data_5".depth AS depth, "DT_node_data_5"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_5" LEFT OUTER JOIN "DT_node_data_5" ON "DT_node_lookup_5".node_id_2 = "DT_node_data_5".node_id), 
"AdaBoost_Estim_5" AS 
(SELECT "DT_Output_5"."KEY" AS join_key_5, "DT_Output_5"."Estimator" AS "Estimator_5" 
FROM "DT_Output_5"), 
"AdaBoost_Join_CTE" AS 
(SELECT "AdaBoost_Estim_0".join_key_0 AS join_key_0, "AdaBoost_Estim_0"."Estimator_0" AS "Estimator_0", "AdaBoost_Estim_1".join_key_1 AS join_key_1, "AdaBoost_Estim_1"."Estimator_1" AS "Estimator_1", "AdaBoost_Estim_2".join_key_2 AS join_key_2, "AdaBoost_Estim_2"."Estimator_2" AS "Estimator_2", "AdaBoost_Estim_3".join_key_3 AS join_key_3, "AdaBoost_Estim_3"."Estimator_3" AS "Estimator_3", "AdaBoost_Estim_4".join_key_4 AS join_key_4, "AdaBoost_Estim_4"."Estimator_4" AS "Estimator_4", "AdaBoost_Estim_5".join_key_5 AS join_key_5, "AdaBoost_Estim_5"."Estimator_5" AS "Estimator_5" 
FROM "AdaBoost_Estim_0" LEFT OUTER JOIN "AdaBoost_Estim_1" ON "AdaBoost_Estim_0".join_key_0 = "AdaBoost_Estim_1".join_key_1 LEFT OUTER JOIN "AdaBoost_Estim_2" ON "AdaBoost_Estim_2".join_key_2 = "AdaBoost_Estim_1".join_key_1 LEFT OUTER JOIN "AdaBoost_Estim_3" ON "AdaBoost_Estim_3".join_key_3 = "AdaBoost_Estim_2".join_key_2 LEFT OUTER JOIN "AdaBoost_Estim_4" ON "AdaBoost_Estim_4".join_key_4 = "AdaBoost_Estim_3".join_key_3 LEFT OUTER JOIN "AdaBoost_Estim_5" ON "AdaBoost_Estim_5".join_key_5 = "AdaBoost_Estim_4".join_key_4), 
"WeightedEstimators" AS 
(SELECT "Values"."Key" AS "Key", "Values".sub_estimator AS sub_estimator, "Values"."Weight" AS "Weight", "Values"."Value" AS "Value" 
FROM (SELECT "AdaBoost_Join_CTE".join_key_0 AS "Key", 0 AS sub_estimator, 0.204217652399 AS "Weight", "AdaBoost_Join_CTE"."Estimator_0" AS "Value" 
FROM "AdaBoost_Join_CTE" UNION ALL SELECT "AdaBoost_Join_CTE".join_key_0 AS "Key", 1 AS sub_estimator, 0.242028247048 AS "Weight", "AdaBoost_Join_CTE"."Estimator_1" AS "Value" 
FROM "AdaBoost_Join_CTE" UNION ALL SELECT "AdaBoost_Join_CTE".join_key_0 AS "Key", 2 AS sub_estimator, 0.123902086408 AS "Weight", "AdaBoost_Join_CTE"."Estimator_2" AS "Value" 
FROM "AdaBoost_Join_CTE" UNION ALL SELECT "AdaBoost_Join_CTE".join_key_0 AS "Key", 3 AS sub_estimator, 0.172691671169 AS "Weight", "AdaBoost_Join_CTE"."Estimator_3" AS "Value" 
FROM "AdaBoost_Join_CTE" UNION ALL SELECT "AdaBoost_Join_CTE".join_key_0 AS "Key", 4 AS sub_estimator, 0.152700570094 AS "Weight", "AdaBoost_Join_CTE"."Estimator_4" AS "Value" 
FROM "AdaBoost_Join_CTE" UNION ALL SELECT "AdaBoost_Join_CTE".join_key_0 AS "Key", 5 AS sub_estimator, 0.10445977288 AS "Weight", "AdaBoost_Join_CTE"."Estimator_5" AS "Value" 
FROM "AdaBoost_Join_CTE") "Values"), 
"Cumulative_Frequencies" AS 
(SELECT u1."Key" AS "Key", u1.sub_estimator AS sub_estimator, u1."Weight" AS "Weight", u1."Value" AS "Value", (SELECT sum(u2."Weight") AS sum_1 
FROM "WeightedEstimators" u2 
WHERE u1."Key" = u2."Key" AND u1."Value" >= u2."Value") AS cum_weight 
FROM "WeightedEstimators" u1), 
"Quantiles" AS 
(SELECT "AdaBoost_Join_CTE".join_key_0 AS join_key_0, "AdaBoost_Join_CTE"."Estimator_0" AS "Estimator_0", "AdaBoost_Join_CTE".join_key_1 AS join_key_1, "AdaBoost_Join_CTE"."Estimator_1" AS "Estimator_1", "AdaBoost_Join_CTE".join_key_2 AS join_key_2, "AdaBoost_Join_CTE"."Estimator_2" AS "Estimator_2", "AdaBoost_Join_CTE".join_key_3 AS join_key_3, "AdaBoost_Join_CTE"."Estimator_3" AS "Estimator_3", "AdaBoost_Join_CTE".join_key_4 AS join_key_4, "AdaBoost_Join_CTE"."Estimator_4" AS "Estimator_4", "AdaBoost_Join_CTE".join_key_5 AS join_key_5, "AdaBoost_Join_CTE"."Estimator_5" AS "Estimator_5", (SELECT min("Cumulative_Frequencies"."Value") AS min_1 
FROM "Cumulative_Frequencies" 
WHERE "AdaBoost_Join_CTE".join_key_0 = "Cumulative_Frequencies"."Key" AND "Cumulative_Frequencies".cum_weight >= 0.5) AS "Median" 
FROM "AdaBoost_Join_CTE")
 SELECT "Quantiles".join_key_0 AS "KEY", "Quantiles"."Median" AS "Estimator" 
FROM "Quantiles"