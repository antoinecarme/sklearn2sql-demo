-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH "DT_node_lookup" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_3" <= 0.6279277801513672) THEN CASE WHEN ("ADS"."Feature_0" <= 0.39298149943351746) THEN CASE WHEN ("ADS"."Feature_3" <= 0.2746317386627197) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_1" <= 0.35968971252441406) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_1" <= 0.4381249248981476) THEN CASE WHEN ("ADS"."Feature_9" <= 0.8664327263832092) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_7" <= 0.05729176476597786) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "INPUT_DATA" "ADS"), 
"DT_node_data" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, 0.6279277801513672 AS threshold, 100 AS count, 0 AS depth, 14.453709833306283 AS "Estimator" FROM DUAL UNION ALL SELECT 1 AS node_id, 'Feature_0' AS feature, 0.39298149943351746 AS threshold, 56 AS count, 1 AS depth, 11.456626821963251 AS "Estimator" FROM DUAL UNION ALL SELECT 2 AS node_id, 'Feature_3' AS feature, 0.2746317386627197 AS threshold, 26 AS count, 2 AS depth, 8.773367293779554 AS "Estimator" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 14 AS count, 3 AS depth, 7.098455558667571 AS "Estimator" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 3 AS depth, 10.727430984743535 AS "Estimator" FROM DUAL UNION ALL SELECT 5 AS node_id, 'Feature_1' AS feature, 0.35968971252441406 AS threshold, 30 AS count, 2 AS depth, 13.782118413055791 AS "Estimator" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS count, 3 AS depth, 10.745348991922716 AS "Estimator" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 3 AS depth, 16.104353852745774 AS "Estimator" FROM DUAL UNION ALL SELECT 8 AS node_id, 'Feature_1' AS feature, 0.4381249248981476 AS threshold, 44 AS count, 1 AS depth, 18.268179120470123 AS "Estimator" FROM DUAL UNION ALL SELECT 9 AS node_id, 'Feature_9' AS feature, 0.8664327263832092 AS threshold, 13 AS count, 2 AS depth, 14.844177514819977 AS "Estimator" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS count, 3 AS depth, 14.287621286717183 AS "Estimator" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 17.90523676938534 AS "Estimator" FROM DUAL UNION ALL SELECT 12 AS node_id, 'Feature_7' AS feature, 0.05729176476597786 AS threshold, 31 AS count, 2 AS depth, 19.70405076154923 AS "Estimator" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 10.47252263349822 AS "Estimator" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 29 AS count, 3 AS depth, 20.340707873828602 AS "Estimator" FROM DUAL) "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".node_id AS node_id, "DT_node_data".feature AS feature, "DT_node_data".threshold AS threshold, "DT_node_data".count AS count, "DT_node_data".depth AS depth, "DT_node_data"."Estimator" AS "Estimator" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".node_id), 
"AdaBoost_Estim_0" AS 
(SELECT "DT_Output"."KEY" AS join_key_0, "DT_Output"."Estimator" AS "Estimator_0" 
FROM "DT_Output"), 
"DT_node_lookup_1" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_3" <= 0.46250689029693604) THEN CASE WHEN ("ADS"."Feature_0" <= 0.3906497359275818) THEN CASE WHEN ("ADS"."Feature_1" <= 0.8738019466400146) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_4" <= 0.6289718151092529) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_0" <= 0.37465932965278625) THEN CASE WHEN ("ADS"."Feature_0" <= 0.11275497078895569) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_2" <= 0.9081076383590698) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "INPUT_DATA" "ADS"), 
"DT_node_data_1" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, 0.46250689029693604 AS threshold, 100 AS count, 0 AS depth, 13.809843289147148 AS "Estimator" FROM DUAL UNION ALL SELECT 1 AS node_id, 'Feature_0' AS feature, 0.3906497359275818 AS threshold, 53 AS count, 1 AS depth, 10.788087445866267 AS "Estimator" FROM DUAL UNION ALL SELECT 2 AS node_id, 'Feature_1' AS feature, 0.8738019466400146 AS threshold, 21 AS count, 2 AS depth, 7.753560735987677 AS "Estimator" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 20 AS count, 3 AS depth, 7.470684284347952 AS "Estimator" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 13.411089768782267 AS "Estimator" FROM DUAL UNION ALL SELECT 5 AS node_id, 'Feature_4' AS feature, 0.6289718151092529 AS threshold, 32 AS count, 2 AS depth, 12.779495599224092 AS "Estimator" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 24 AS count, 3 AS depth, 11.591180422903205 AS "Estimator" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, 16.344441128186745 AS "Estimator" FROM DUAL UNION ALL SELECT 8 AS node_id, 'Feature_0' AS feature, 0.37465932965278625 AS threshold, 47 AS count, 1 AS depth, 17.2173551975277 AS "Estimator" FROM DUAL UNION ALL SELECT 9 AS node_id, 'Feature_0' AS feature, 0.11275497078895569 AS threshold, 21 AS count, 2 AS depth, 13.705254665846796 AS "Estimator" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 10.78146018594583 AS "Estimator" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 3 AS depth, 14.618940440815846 AS "Estimator" FROM DUAL UNION ALL SELECT 12 AS node_id, 'Feature_2' AS feature, 0.9081076383590698 AS threshold, 26 AS count, 2 AS depth, 20.05405178080843 AS "Estimator" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 3 AS depth, 18.262669930470427 AS "Estimator" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, 24.08466094406894 AS "Estimator" FROM DUAL) "Values"), 
"DT_Output_1" AS 
(SELECT "DT_node_lookup_1"."KEY" AS "KEY", "DT_node_lookup_1".node_id_2 AS node_id_2, "DT_node_data_1".node_id AS node_id, "DT_node_data_1".feature AS feature, "DT_node_data_1".threshold AS threshold, "DT_node_data_1".count AS count, "DT_node_data_1".depth AS depth, "DT_node_data_1"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_1" LEFT OUTER JOIN "DT_node_data_1" ON "DT_node_lookup_1".node_id_2 = "DT_node_data_1".node_id), 
"AdaBoost_Estim_1" AS 
(SELECT "DT_Output_1"."KEY" AS join_key_1, "DT_Output_1"."Estimator" AS "Estimator_1" 
FROM "DT_Output_1"), 
"DT_node_lookup_2" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" <= 0.9360734224319458) THEN CASE WHEN ("ADS"."Feature_3" <= 0.4894873797893524) THEN CASE WHEN ("ADS"."Feature_0" <= 0.3906497359275818) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_7" <= 0.39694875478744507) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_8" <= 0.6204527616500854) THEN CASE WHEN ("ADS"."Feature_4" <= 0.8776962757110596) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_8" <= 0.900273323059082) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "INPUT_DATA" "ADS"), 
"DT_node_data_2" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, 0.9360734224319458 AS threshold, 100 AS count, 0 AS depth, 15.045805152628413 AS "Estimator" FROM DUAL UNION ALL SELECT 1 AS node_id, 'Feature_3' AS feature, 0.4894873797893524 AS threshold, 80 AS count, 1 AS depth, 13.387324899382572 AS "Estimator" FROM DUAL UNION ALL SELECT 2 AS node_id, 'Feature_0' AS feature, 0.3906497359275818 AS threshold, 37 AS count, 2 AS depth, 10.89786261780792 AS "Estimator" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 3 AS depth, 7.7390514836777315 AS "Estimator" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 20 AS count, 3 AS depth, 13.582852081818581 AS "Estimator" FROM DUAL UNION ALL SELECT 5 AS node_id, 'Feature_7' AS feature, 0.39694875478744507 AS threshold, 43 AS count, 2 AS depth, 15.529420350970076 AS "Estimator" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 23 AS count, 3 AS depth, 13.760271975864983 AS "Estimator" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 20 AS count, 3 AS depth, 17.563940982340924 AS "Estimator" FROM DUAL UNION ALL SELECT 8 AS node_id, 'Feature_8' AS feature, 0.6204527616500854 AS threshold, 20 AS count, 1 AS depth, 21.679726165611775 AS "Estimator" FROM DUAL UNION ALL SELECT 9 AS node_id, 'Feature_4' AS feature, 0.8776962757110596 AS threshold, 9 AS count, 2 AS depth, 26.065787102913283 AS "Estimator" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 24.684588449787555 AS "Estimator" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 27.17074602541387 AS "Estimator" FROM DUAL UNION ALL SELECT 12 AS node_id, 'Feature_8' AS feature, 0.900273323059082 AS threshold, 11 AS count, 2 AS depth, 18.09113085327418 AS "Estimator" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, 19.05426834177006 AS "Estimator" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 15.522764217285152 AS "Estimator" FROM DUAL) "Values"), 
"DT_Output_2" AS 
(SELECT "DT_node_lookup_2"."KEY" AS "KEY", "DT_node_lookup_2".node_id_2 AS node_id_2, "DT_node_data_2".node_id AS node_id, "DT_node_data_2".feature AS feature, "DT_node_data_2".threshold AS threshold, "DT_node_data_2".count AS count, "DT_node_data_2".depth AS depth, "DT_node_data_2"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_2" LEFT OUTER JOIN "DT_node_data_2" ON "DT_node_lookup_2".node_id_2 = "DT_node_data_2".node_id), 
"AdaBoost_Estim_2" AS 
(SELECT "DT_Output_2"."KEY" AS join_key_2, "DT_Output_2"."Estimator" AS "Estimator_2" 
FROM "DT_Output_2"), 
"DT_node_lookup_3" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_1" <= 0.3551706075668335) THEN CASE WHEN ("ADS"."Feature_3" <= 0.6389868259429932) THEN CASE WHEN ("ADS"."Feature_0" <= 0.5920661091804504) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_3" <= 0.6896394491195679) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_2" <= 0.589197039604187) THEN CASE WHEN ("ADS"."Feature_2" <= 0.2444668710231781) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_0" <= 0.4603811502456665) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "INPUT_DATA" "ADS"), 
"DT_node_data_3" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_1' AS feature, 0.3551706075668335 AS threshold, 100 AS count, 0 AS depth, 15.069137777035303 AS "Estimator" FROM DUAL UNION ALL SELECT 1 AS node_id, 'Feature_3' AS feature, 0.6389868259429932 AS threshold, 41 AS count, 1 AS depth, 11.50524259322371 AS "Estimator" FROM DUAL UNION ALL SELECT 2 AS node_id, 'Feature_0' AS feature, 0.5920661091804504 AS threshold, 29 AS count, 2 AS depth, 9.81528571197229 AS "Estimator" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 3 AS depth, 8.376447605774935 AS "Estimator" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS count, 3 AS depth, 11.586163381138267 AS "Estimator" FROM DUAL UNION ALL SELECT 5 AS node_id, 'Feature_3' AS feature, 0.6896394491195679 AS threshold, 12 AS count, 2 AS depth, 15.589305056247978 AS "Estimator" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, 14.054583872111317 AS "Estimator" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, 17.124026240384634 AS "Estimator" FROM DUAL UNION ALL SELECT 8 AS node_id, 'Feature_2' AS feature, 0.589197039604187 AS threshold, 59 AS count, 1 AS depth, 17.545742904768783 AS "Estimator" FROM DUAL UNION ALL SELECT 9 AS node_id, 'Feature_2' AS feature, 0.2444668710231781 AS threshold, 20 AS count, 2 AS depth, 13.956944017128382 AS "Estimator" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, 17.743364834786277 AS "Estimator" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS count, 3 AS depth, 10.858963348135557 AS "Estimator" FROM DUAL UNION ALL SELECT 12 AS node_id, 'Feature_0' AS feature, 0.4603811502456665 AS threshold, 39 AS count, 2 AS depth, 19.386152590738206 AS "Estimator" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 3 AS depth, 17.26969960660105 AS "Estimator" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 22 AS count, 3 AS depth, 21.021593533026042 AS "Estimator" FROM DUAL) "Values"), 
"DT_Output_3" AS 
(SELECT "DT_node_lookup_3"."KEY" AS "KEY", "DT_node_lookup_3".node_id_2 AS node_id_2, "DT_node_data_3".node_id AS node_id, "DT_node_data_3".feature AS feature, "DT_node_data_3".threshold AS threshold, "DT_node_data_3".count AS count, "DT_node_data_3".depth AS depth, "DT_node_data_3"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_3" LEFT OUTER JOIN "DT_node_data_3" ON "DT_node_lookup_3".node_id_2 = "DT_node_data_3".node_id), 
"AdaBoost_Estim_3" AS 
(SELECT "DT_Output_3"."KEY" AS join_key_3, "DT_Output_3"."Estimator" AS "Estimator_3" 
FROM "DT_Output_3"), 
"DT_node_lookup_4" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_3" <= 0.6279277801513672) THEN CASE WHEN ("ADS"."Feature_0" <= 0.3064996600151062) THEN CASE WHEN ("ADS"."Feature_9" <= 0.43522727489471436) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_8" <= 0.42753416299819946) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_2" <= 0.9360734224319458) THEN CASE WHEN ("ADS"."Feature_0" <= 0.26173844933509827) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_8" <= 0.3733813166618347) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "INPUT_DATA" "ADS"), 
"DT_node_data_4" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, 0.6279277801513672 AS threshold, 100 AS count, 0 AS depth, 14.489187968502009 AS "Estimator" FROM DUAL UNION ALL SELECT 1 AS node_id, 'Feature_0' AS feature, 0.3064996600151062 AS threshold, 59 AS count, 1 AS depth, 11.85931653447819 AS "Estimator" FROM DUAL UNION ALL SELECT 2 AS node_id, 'Feature_9' AS feature, 0.43522727489471436 AS threshold, 24 AS count, 2 AS depth, 8.280764235359934 AS "Estimator" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 5.2140238306287285 AS "Estimator" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 20 AS count, 3 AS depth, 8.894112316306174 AS "Estimator" FROM DUAL UNION ALL SELECT 5 AS node_id, 'Feature_8' AS feature, 0.42753416299819946 AS threshold, 35 AS count, 2 AS depth, 14.313180968159287 AS "Estimator" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 14 AS count, 3 AS depth, 11.392358306399233 AS "Estimator" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 21 AS count, 3 AS depth, 16.260396075999328 AS "Estimator" FROM DUAL UNION ALL SELECT 8 AS node_id, 'Feature_2' AS feature, 0.9360734224319458 AS threshold, 41 AS count, 1 AS depth, 18.27363710526799 AS "Estimator" FROM DUAL UNION ALL SELECT 9 AS node_id, 'Feature_0' AS feature, 0.26173844933509827 AS threshold, 35 AS count, 2 AS depth, 16.975695519220295 AS "Estimator" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 3 AS depth, 13.858999446143612 AS "Estimator" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 23 AS count, 3 AS depth, 18.60179781821682 AS "Estimator" FROM DUAL UNION ALL SELECT 12 AS node_id, 'Feature_8' AS feature, 0.3733813166618347 AS threshold, 6 AS count, 2 AS depth, 25.84496302387953 AS "Estimator" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 24.519180022345182 AS "Estimator" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 27.170746025413866 AS "Estimator" FROM DUAL) "Values"), 
"DT_Output_4" AS 
(SELECT "DT_node_lookup_4"."KEY" AS "KEY", "DT_node_lookup_4".node_id_2 AS node_id_2, "DT_node_data_4".node_id AS node_id, "DT_node_data_4".feature AS feature, "DT_node_data_4".threshold AS threshold, "DT_node_data_4".count AS count, "DT_node_data_4".depth AS depth, "DT_node_data_4"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_4" LEFT OUTER JOIN "DT_node_data_4" ON "DT_node_lookup_4".node_id_2 = "DT_node_data_4".node_id), 
"AdaBoost_Estim_4" AS 
(SELECT "DT_Output_4"."KEY" AS join_key_4, "DT_Output_4"."Estimator" AS "Estimator_4" 
FROM "DT_Output_4"), 
"DT_node_lookup_5" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_1" <= 0.2987525463104248) THEN CASE WHEN ("ADS"."Feature_7" <= 0.5136902332305908) THEN CASE WHEN ("ADS"."Feature_1" <= 0.22140219807624817) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_5" <= 0.3322587013244629) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_0" <= 0.21735313534736633) THEN CASE WHEN ("ADS"."Feature_9" <= 0.6481865644454956) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_2" <= 0.9525867700576782) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "INPUT_DATA" "ADS"), 
"DT_node_data_5" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_1' AS feature, 0.2987525463104248 AS threshold, 100 AS count, 0 AS depth, 14.569949973990408 AS "Estimator" FROM DUAL UNION ALL SELECT 1 AS node_id, 'Feature_7' AS feature, 0.5136902332305908 AS threshold, 38 AS count, 1 AS depth, 11.101117693443852 AS "Estimator" FROM DUAL UNION ALL SELECT 2 AS node_id, 'Feature_1' AS feature, 0.22140219807624817 AS threshold, 18 AS count, 2 AS depth, 14.047671932272173 AS "Estimator" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 14 AS count, 3 AS depth, 12.609375887422171 AS "Estimator" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 19.081708089247186 AS "Estimator" FROM DUAL UNION ALL SELECT 5 AS node_id, 'Feature_5' AS feature, 0.3322587013244629 AS threshold, 20 AS count, 2 AS depth, 8.449218878498362 AS "Estimator" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, 5.851802085345462 AS "Estimator" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS count, 3 AS depth, 9.84782792096531 AS "Estimator" FROM DUAL UNION ALL SELECT 8 AS node_id, 'Feature_0' AS feature, 0.21735313534736633 AS threshold, 62 AS count, 1 AS depth, 16.696008468518933 AS "Estimator" FROM DUAL UNION ALL SELECT 9 AS node_id, 'Feature_9' AS feature, 0.6481865644454956 AS threshold, 15 AS count, 2 AS depth, 12.998567900749043 AS "Estimator" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, 15.616027707072668 AS "Estimator" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, 9.072378191263606 AS "Estimator" FROM DUAL UNION ALL SELECT 12 AS node_id, 'Feature_2' AS feature, 0.9525867700576782 AS threshold, 47 AS count, 2 AS depth, 17.87604269227528 AS "Estimator" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 37 AS count, 3 AS depth, 16.92878422804772 AS "Estimator" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 3 AS depth, 21.380899009917265 AS "Estimator" FROM DUAL) "Values"), 
"DT_Output_5" AS 
(SELECT "DT_node_lookup_5"."KEY" AS "KEY", "DT_node_lookup_5".node_id_2 AS node_id_2, "DT_node_data_5".node_id AS node_id, "DT_node_data_5".feature AS feature, "DT_node_data_5".threshold AS threshold, "DT_node_data_5".count AS count, "DT_node_data_5".depth AS depth, "DT_node_data_5"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_5" LEFT OUTER JOIN "DT_node_data_5" ON "DT_node_lookup_5".node_id_2 = "DT_node_data_5".node_id), 
"AdaBoost_Estim_5" AS 
(SELECT "DT_Output_5"."KEY" AS join_key_5, "DT_Output_5"."Estimator" AS "Estimator_5" 
FROM "DT_Output_5"), 
"AdaBoost_Join_CTE" AS 
(SELECT "AdaBoost_Estim_0".join_key_0 AS join_key_0, "AdaBoost_Estim_0"."Estimator_0" AS "Estimator_0", "AdaBoost_Estim_1".join_key_1 AS join_key_1, "AdaBoost_Estim_1"."Estimator_1" AS "Estimator_1", "AdaBoost_Estim_2".join_key_2 AS join_key_2, "AdaBoost_Estim_2"."Estimator_2" AS "Estimator_2", "AdaBoost_Estim_3".join_key_3 AS join_key_3, "AdaBoost_Estim_3"."Estimator_3" AS "Estimator_3", "AdaBoost_Estim_4".join_key_4 AS join_key_4, "AdaBoost_Estim_4"."Estimator_4" AS "Estimator_4", "AdaBoost_Estim_5".join_key_5 AS join_key_5, "AdaBoost_Estim_5"."Estimator_5" AS "Estimator_5" 
FROM "AdaBoost_Estim_0" LEFT OUTER JOIN "AdaBoost_Estim_1" ON "AdaBoost_Estim_0".join_key_0 = "AdaBoost_Estim_1".join_key_1 LEFT OUTER JOIN "AdaBoost_Estim_2" ON "AdaBoost_Estim_2".join_key_2 = "AdaBoost_Estim_1".join_key_1 LEFT OUTER JOIN "AdaBoost_Estim_3" ON "AdaBoost_Estim_3".join_key_3 = "AdaBoost_Estim_2".join_key_2 LEFT OUTER JOIN "AdaBoost_Estim_4" ON "AdaBoost_Estim_4".join_key_4 = "AdaBoost_Estim_3".join_key_3 LEFT OUTER JOIN "AdaBoost_Estim_5" ON "AdaBoost_Estim_5".join_key_5 = "AdaBoost_Estim_4".join_key_4), 
"WeightedEstimators" AS 
(SELECT "Values"."Key" AS "Key", "Values".sub_estimator AS sub_estimator, "Values"."Weight" AS "Weight", "Values"."Value" AS "Value" 
FROM (SELECT "AdaBoost_Join_CTE".join_key_0 AS "Key", 0 AS sub_estimator, 0.19485232567 AS "Weight", "AdaBoost_Join_CTE"."Estimator_0" AS "Value" 
FROM "AdaBoost_Join_CTE" UNION ALL SELECT "AdaBoost_Join_CTE".join_key_0 AS "Key", 1 AS sub_estimator, 0.172654228675 AS "Weight", "AdaBoost_Join_CTE"."Estimator_1" AS "Value" 
FROM "AdaBoost_Join_CTE" UNION ALL SELECT "AdaBoost_Join_CTE".join_key_0 AS "Key", 2 AS sub_estimator, 0.162992741403 AS "Weight", "AdaBoost_Join_CTE"."Estimator_2" AS "Value" 
FROM "AdaBoost_Join_CTE" UNION ALL SELECT "AdaBoost_Join_CTE".join_key_0 AS "Key", 3 AS sub_estimator, 0.1367891393 AS "Weight", "AdaBoost_Join_CTE"."Estimator_3" AS "Value" 
FROM "AdaBoost_Join_CTE" UNION ALL SELECT "AdaBoost_Join_CTE".join_key_0 AS "Key", 4 AS sub_estimator, 0.198433334554 AS "Weight", "AdaBoost_Join_CTE"."Estimator_4" AS "Value" 
FROM "AdaBoost_Join_CTE" UNION ALL SELECT "AdaBoost_Join_CTE".join_key_0 AS "Key", 5 AS sub_estimator, 0.134278230397 AS "Weight", "AdaBoost_Join_CTE"."Estimator_5" AS "Value" 
FROM "AdaBoost_Join_CTE") "Values"), 
"Cumulative_Frequencies" AS 
(SELECT u1."Key" AS "Key", u1.sub_estimator AS sub_estimator, u1."Weight" AS "Weight", u1."Value" AS "Value", (SELECT sum(u2."Weight") AS sum_1 
FROM "WeightedEstimators" u2 
WHERE u1."Key" = u2."Key" AND u1."Value" >= u2."Value") AS cum_weight 
FROM "WeightedEstimators" u1), 
"Quantiles" AS 
(SELECT "AdaBoost_Join_CTE".join_key_0 AS join_key_0, "AdaBoost_Join_CTE"."Estimator_0" AS "Estimator_0", "AdaBoost_Join_CTE".join_key_1 AS join_key_1, "AdaBoost_Join_CTE"."Estimator_1" AS "Estimator_1", "AdaBoost_Join_CTE".join_key_2 AS join_key_2, "AdaBoost_Join_CTE"."Estimator_2" AS "Estimator_2", "AdaBoost_Join_CTE".join_key_3 AS join_key_3, "AdaBoost_Join_CTE"."Estimator_3" AS "Estimator_3", "AdaBoost_Join_CTE".join_key_4 AS join_key_4, "AdaBoost_Join_CTE"."Estimator_4" AS "Estimator_4", "AdaBoost_Join_CTE".join_key_5 AS join_key_5, "AdaBoost_Join_CTE"."Estimator_5" AS "Estimator_5", (SELECT min("Cumulative_Frequencies"."Value") AS min_1 
FROM "Cumulative_Frequencies" 
WHERE "AdaBoost_Join_CTE".join_key_0 = "Cumulative_Frequencies"."Key" AND "Cumulative_Frequencies".cum_weight >= 0.5) AS "Median" 
FROM "AdaBoost_Join_CTE")
 SELECT "Quantiles".join_key_0 AS "KEY", "Quantiles"."Median" AS "Estimator" 
FROM "Quantiles"