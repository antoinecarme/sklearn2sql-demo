-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH "ADS_imp_1_OUT" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" IS NULL) THEN 3.59376071146 ELSE "ADS"."Feature_0" END AS impute_2, CASE WHEN ("ADS"."Feature_1" IS NULL) THEN 11.3636363636 ELSE "ADS"."Feature_1" END AS impute_3, CASE WHEN ("ADS"."Feature_2" IS NULL) THEN 11.1367786561 ELSE "ADS"."Feature_2" END AS impute_4, CASE WHEN ("ADS"."Feature_3" IS NULL) THEN 0.0691699604743 ELSE "ADS"."Feature_3" END AS impute_5, CASE WHEN ("ADS"."Feature_4" IS NULL) THEN 0.554695059289 ELSE "ADS"."Feature_4" END AS impute_6, CASE WHEN ("ADS"."Feature_5" IS NULL) THEN 6.28463438735 ELSE "ADS"."Feature_5" END AS impute_7, CASE WHEN ("ADS"."Feature_6" IS NULL) THEN 68.5749011858 ELSE "ADS"."Feature_6" END AS impute_8, CASE WHEN ("ADS"."Feature_7" IS NULL) THEN 3.79504268775 ELSE "ADS"."Feature_7" END AS impute_9, CASE WHEN ("ADS"."Feature_8" IS NULL) THEN 9.54940711462 ELSE "ADS"."Feature_8" END AS impute_10, CASE WHEN ("ADS"."Feature_9" IS NULL) THEN 408.23715415 ELSE "ADS"."Feature_9" END AS impute_11, CASE WHEN ("ADS"."Feature_10" IS NULL) THEN 18.4555335968 ELSE "ADS"."Feature_10" END AS impute_12, CASE WHEN ("ADS"."Feature_11" IS NULL) THEN 356.674031621 ELSE "ADS"."Feature_11" END AS impute_13, CASE WHEN ("ADS"."Feature_12" IS NULL) THEN 12.6530632411 ELSE "ADS"."Feature_12" END AS impute_14 
FROM "INPUT_DATA" "ADS"), 
"CenteredDataForPCA" AS 
(SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", "ADS_imp_1_OUT".impute_2 - 3.59376071146 AS impute_2, "ADS_imp_1_OUT".impute_3 - 11.3636363636 AS impute_3, "ADS_imp_1_OUT".impute_4 - 11.1367786561 AS impute_4, "ADS_imp_1_OUT".impute_5 - 0.0691699604743 AS impute_5, "ADS_imp_1_OUT".impute_6 - 0.554695059289 AS impute_6, "ADS_imp_1_OUT".impute_7 - 6.28463438735 AS impute_7, "ADS_imp_1_OUT".impute_8 - 68.5749011858 AS impute_8, "ADS_imp_1_OUT".impute_9 - 3.79504268775 AS impute_9, "ADS_imp_1_OUT".impute_10 - 9.54940711462 AS impute_10, "ADS_imp_1_OUT".impute_11 - 408.23715415 AS impute_11, "ADS_imp_1_OUT".impute_12 - 18.4555335968 AS impute_12, "ADS_imp_1_OUT".impute_13 - 356.674031621 AS impute_13, "ADS_imp_1_OUT".impute_14 - 12.6530632411 AS impute_14 
FROM "ADS_imp_1_OUT"), 
"ADS_ano_2_OUT" AS 
(SELECT "CenteredDataForPCA"."KEY" AS "KEY", "CenteredDataForPCA".impute_2 * 0.0290793418705 + "CenteredDataForPCA".impute_3 * -0.0435901379884 + "CenteredDataForPCA".impute_4 * 0.0283311854744 + "CenteredDataForPCA".impute_5 * -5.55834284791e-05 + "CenteredDataForPCA".impute_6 * 0.000449723983032 + "CenteredDataForPCA".impute_7 * -0.00116817520949 + "CenteredDataForPCA".impute_8 * 0.0836340850971 + "CenteredDataForPCA".impute_9 * -0.00656167700943 + "CenteredDataForPCA".impute_10 * 0.0450056440522 + "CenteredDataForPCA".impute_11 * 0.949748861684 + "CenteredDataForPCA".impute_12 * 0.00560015635568 + "CenteredDataForPCA".impute_13 * -0.291215007119 + "CenteredDataForPCA".impute_14 * 0.0229433981219 AS anoova_2, "CenteredDataForPCA".impute_2 * 0.00595358533578 + "CenteredDataForPCA".impute_3 * 0.00117454545239 + "CenteredDataForPCA".impute_4 * -0.00494881025195 + "CenteredDataForPCA".impute_5 * -0.00010267276141 + "CenteredDataForPCA".impute_6 * 1.83085404137e-06 + "CenteredDataForPCA".impute_7 * 0.000365743217289 + "CenteredDataForPCA".impute_8 * -0.00572142591607 + "CenteredDataForPCA".impute_9 * 0.000353613792575 + "CenteredDataForPCA".impute_10 * -0.00861821318903 + "CenteredDataForPCA".impute_11 * -0.292380996231 + "CenteredDataForPCA".impute_12 * -0.00252890004647 + "CenteredDataForPCA".impute_13 * -0.95619302773 + "CenteredDataForPCA".impute_14 * 0.00576700106093 AS anoova_3, "CenteredDataForPCA".impute_2 * -0.0115545557501 + "CenteredDataForPCA".impute_3 * 0.632896918644 + "CenteredDataForPCA".impute_4 * -0.088340421489 + "CenteredDataForPCA".impute_5 * -0.000975318528256 + "CenteredDataForPCA".impute_6 * -0.00180719024026 + "CenteredDataForPCA".impute_7 * 0.00473411946642 + "CenteredDataForPCA".impute_8 * -0.7558624017 + "CenteredDataForPCA".impute_9 * 0.0450884909145 + "CenteredDataForPCA".impute_10 * 0.00284762033646 + "CenteredDataForPCA".impute_11 * 0.0938666635186 + "CenteredDataForPCA".impute_12 * -0.0111591438347 + "CenteredDataForPCA".impute_13 * -0.023554219456 + "CenteredDataForPCA".impute_14 * -0.0928331511404 AS anoova_4, "CenteredDataForPCA".impute_2 * 0.0270010188326 + "CenteredDataForPCA".impute_3 * 0.768061561807 + "CenteredDataForPCA".impute_4 * -0.0127967831999 + "CenteredDataForPCA".impute_5 * 0.000854486449613 + "CenteredDataForPCA".impute_6 * 0.000679594076936 + "CenteredDataForPCA".impute_7 * 0.00570054720395 + "CenteredDataForPCA".impute_8 * 0.636611733776 + "CenteredDataForPCA".impute_9 * 0.00257396992201 + "CenteredDataForPCA".impute_10 * -0.0195657921452 + "CenteredDataForPCA".impute_11 * -0.0199759769684 + "CenteredDataForPCA".impute_12 * -0.0320122564453 + "CenteredDataForPCA".impute_13 * 0.0040139802958 + "CenteredDataForPCA".impute_14 * 0.0452885745068 AS anoova_5, "CenteredDataForPCA".impute_2 * 0.953871800695 + "CenteredDataForPCA".impute_3 * -0.00565379160917 + "CenteredDataForPCA".impute_4 * -0.0562384399835 + "CenteredDataForPCA".impute_5 * -0.00213578787488 + "CenteredDataForPCA".impute_6 * -0.000179163492751 + "CenteredDataForPCA".impute_7 * -0.0132180033155 + "CenteredDataForPCA".impute_8 * -0.0459165992573 + "CenteredDataForPCA".impute_9 * -0.00667171091971 + "CenteredDataForPCA".impute_10 * 0.17058785538 + "CenteredDataForPCA".impute_11 * -0.0326258446098 + "CenteredDataForPCA".impute_12 * 0.0213376088824 + "CenteredDataForPCA".impute_13 * 0.0162708060102 + "CenteredDataForPCA".impute_14 * 0.231769304291 AS anoova_6, "CenteredDataForPCA".impute_2 * -0.166034349246 + "CenteredDataForPCA".impute_3 * 0.0467338831346 + "CenteredDataForPCA".impute_4 * 0.341930158111 + "CenteredDataForPCA".impute_5 * -0.00351936887193 + "CenteredDataForPCA".impute_6 * 0.00187779954519 + "CenteredDataForPCA".impute_7 * -0.0726614168834 + "CenteredDataForPCA".impute_8 * -0.109563953631 + "CenteredDataForPCA".impute_9 * 0.0073890536197 + "CenteredDataForPCA".impute_10 * -0.207176649927 + "CenteredDataForPCA".impute_11 * -0.00342146728837 + "CenteredDataForPCA".impute_12 * 0.0412943586628 + "CenteredDataForPCA".impute_13 * 0.0060542050517 + "CenteredDataForPCA".impute_14 * 0.889551632117 AS anoova_7, "CenteredDataForPCA".impute_2 * 0.212852802248 + "CenteredDataForPCA".impute_3 * 0.035176546336 + "CenteredDataForPCA".impute_4 * 0.785689931958 + "CenteredDataForPCA".impute_5 * 0.00509255441973 + "CenteredDataForPCA".impute_6 * 0.00385766581269 + "CenteredDataForPCA".impute_7 * 0.00787523138869 + "CenteredDataForPCA".impute_8 * -0.0263745768272 + "CenteredDataForPCA".impute_9 * -0.0889173024929 + "CenteredDataForPCA".impute_10 * -0.435623734582 + "CenteredDataForPCA".impute_11 * 0.00277590025712 + "CenteredDataForPCA".impute_12 * -0.0713658865352 + "CenteredDataForPCA".impute_13 * -0.00150020771634 + "CenteredDataForPCA".impute_14 * -0.364104108592 AS anoova_8, "CenteredDataForPCA".impute_2 * 0.122652780398 + "CenteredDataForPCA".impute_3 * -0.0514137942919 + "CenteredDataForPCA".impute_4 * -0.492499395662 + "CenteredDataForPCA".impute_5 * -0.0113553130638 + "CenteredDataForPCA".impute_6 * -0.0044543901623 + "CenteredDataForPCA".impute_7 * -0.0151387973731 + "CenteredDataForPCA".impute_8 * 0.0176803007577 + "CenteredDataForPCA".impute_9 * 0.0657533681177 + "CenteredDataForPCA".impute_10 * -0.853570768015 + "CenteredDataForPCA".impute_11 * 0.0468119918264 + "CenteredDataForPCA".impute_12 * -0.0598374746853 + "CenteredDataForPCA".impute_13 * -0.00318176205366 + "CenteredDataForPCA".impute_14 * 0.0194455791662 AS anoova_9, "CenteredDataForPCA".impute_2 * 0.0137295009078 + "CenteredDataForPCA".impute_3 * 0.0235097341661 + "CenteredDataForPCA".impute_4 * 0.0352709234238 + "CenteredDataForPCA".impute_5 * -0.0178059044254 + "CenteredDataForPCA".impute_6 * -0.0139018168355 + "CenteredDataForPCA".impute_7 * -0.0529937903518 + "CenteredDataForPCA".impute_8 * 0.0231883052927 + "CenteredDataForPCA".impute_9 * 0.224532665334 + "CenteredDataForPCA".impute_10 * -0.070331864193 + "CenteredDataForPCA".impute_11 * -0.00203423468159 + "CenteredDataForPCA".impute_12 * 0.96586112087 + "CenteredDataForPCA".impute_13 * -0.0019041485606 + "CenteredDataForPCA".impute_14 * -0.0768208791925 AS anoova_10, "CenteredDataForPCA".impute_2 * 0.0164239950024 + "CenteredDataForPCA".impute_3 * -0.0306822646896 + "CenteredDataForPCA".impute_4 * 0.0980506613801 + "CenteredDataForPCA".impute_5 * -0.00156368116258 + "CenteredDataForPCA".impute_6 * -0.0106223819107 + "CenteredDataForPCA".impute_7 * -0.0512068200773 + "CenteredDataForPCA".impute_8 * 0.0260681878414 + "CenteredDataForPCA".impute_9 * 0.964823647455 + "CenteredDataForPCA".impute_10 * 0.0390661641493 + "CenteredDataForPCA".impute_11 * -0.000480480028877 + "CenteredDataForPCA".impute_12 * -0.229898826892 + "CenteredDataForPCA".impute_13 * 7.36484057084e-06 + "CenteredDataForPCA".impute_14 * -0.0222128903555 AS anoova_11, "CenteredDataForPCA".impute_2 * -0.00226717797688 + "CenteredDataForPCA".impute_3 * 0.00552239680166 + "CenteredDataForPCA".impute_4 * -0.0178836079801 + "CenteredDataForPCA".impute_5 * -0.0157986253619 + "CenteredDataForPCA".impute_6 * 0.0115661438829 + "CenteredDataForPCA".impute_7 * -0.994165624979 + "CenteredDataForPCA".impute_8 * 0.00551780566759 + "CenteredDataForPCA".impute_9 * -0.0635307633029 + "CenteredDataForPCA".impute_10 * 0.0241265968226 + "CenteredDataForPCA".impute_11 * -0.000774619844149 + "CenteredDataForPCA".impute_12 * -0.0430041587914 + "CenteredDataForPCA".impute_13 * -0.000616615255131 + "CenteredDataForPCA".impute_14 * -0.0663086932677 AS anoova_12, "CenteredDataForPCA".impute_2 * 0.00196895828586 + "CenteredDataForPCA".impute_3 * -0.000193077157234 + "CenteredDataForPCA".impute_4 * -0.00812264862898 + "CenteredDataForPCA".impute_5 * 0.999597129178 + "CenteredDataForPCA".impute_6 * 0.00778846475673 + "CenteredDataForPCA".impute_7 * -0.0171507849184 + "CenteredDataForPCA".impute_8 * -0.000892510155887 + "CenteredDataForPCA".impute_9 * 0.005875198507 + "CenteredDataForPCA".impute_10 * -0.0086510290719 + "CenteredDataForPCA".impute_11 * 0.00051750984589 + "CenteredDataForPCA".impute_12 * 0.0161466468914 + "CenteredDataForPCA".impute_13 * -0.000156477757414 + "CenteredDataForPCA".impute_14 * 0.00311719313324 AS anoova_13, "CenteredDataForPCA".impute_2 * 0.000531945671707 + "CenteredDataForPCA".impute_3 * 0.000126484701586 + "CenteredDataForPCA".impute_4 * -0.00423973116962 + "CenteredDataForPCA".impute_5 * -0.00793521441916 + "CenteredDataForPCA".impute_6 * 0.999728591757 + "CenteredDataForPCA".impute_7 * 0.0103958814617 + "CenteredDataForPCA".impute_8 * -0.000916065930923 + "CenteredDataForPCA".impute_9 * 0.0147667106543 + "CenteredDataForPCA".impute_10 * -0.00247893969767 + "CenteredDataForPCA".impute_11 * -7.34637920241e-05 + "CenteredDataForPCA".impute_12 * 0.0112939726501 + "CenteredDataForPCA".impute_13 * 5.25551852109e-05 + "CenteredDataForPCA".impute_14 * -0.000908030955549 AS anoova_14 
FROM "CenteredDataForPCA"), 
"DT_node_lookup" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anoova_2 <= -0.9434347748756409) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_12 <= -0.522445559501648) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_10 <= -0.3389684557914734) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_7 <= -2.648451328277588) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_9 <= -2.481372594833374) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_10 <= 0.7677978277206421) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_2 <= 39.96140670776367) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_ano_2_OUT"), 
"DT_node_data" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'anoova_2' AS feature, -0.9434347748756409 AS threshold, 506 AS count, 0 AS depth, 22.284189723320164 AS "Estimator" FROM DUAL UNION ALL SELECT 1 AS node_id, 'anoova_12' AS feature, -0.522445559501648 AS threshold, 325 AS count, 1 AS depth, 25.767692307692307 AS "Estimator" FROM DUAL UNION ALL SELECT 2 AS node_id, 'anoova_10' AS feature, -0.3389684557914734 AS threshold, 30 AS count, 2 AS depth, 43.830000000000005 AS "Estimator" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 20 AS count, 3 AS depth, 47.364999999999995 AS "Estimator" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 3 AS depth, 36.760000000000005 AS "Estimator" FROM DUAL UNION ALL SELECT 5 AS node_id, 'anoova_7' AS feature, -2.648451328277588 AS threshold, 295 AS count, 2 AS depth, 23.930847457627088 AS "Estimator" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 66 AS count, 3 AS depth, 29.112121212121192 AS "Estimator" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 229 AS count, 3 AS depth, 22.437554585152828 AS "Estimator" FROM DUAL UNION ALL SELECT 8 AS node_id, 'anoova_9' AS feature, -2.481372594833374 AS threshold, 181 AS count, 1 AS depth, 16.029281767955798 AS "Estimator" FROM DUAL UNION ALL SELECT 9 AS node_id, 'anoova_10' AS feature, 0.7677978277206421 AS threshold, 34 AS count, 2 AS depth, 25.626470588235307 AS "Estimator" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 30 AS count, 3 AS depth, 22.37666666666666 AS "Estimator" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 50.0 AS "Estimator" FROM DUAL UNION ALL SELECT 12 AS node_id, 'anoova_2' AS feature, 39.96140670776367 AS threshold, 147 AS count, 2 AS depth, 13.809523809523807 AS "Estimator" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 36 AS count, 3 AS depth, 18.208333333333332 AS "Estimator" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 111 AS count, 3 AS depth, 12.382882882882887 AS "Estimator" FROM DUAL) "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".node_id AS node_id, "DT_node_data".feature AS feature, "DT_node_data".threshold AS threshold, "DT_node_data".count AS count, "DT_node_data".depth AS depth, "DT_node_data"."Estimator" AS "Estimator" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".node_id), 
"AdaBoost_Estim_0" AS 
(SELECT "DT_Output"."KEY" AS join_key_0, "DT_Output"."Estimator" AS "Estimator_0" 
FROM "DT_Output"), 
"DT_node_lookup_1" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anoova_7 <= -6.757258415222168) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_9 <= 0.3210822343826294) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_5 <= -1.631986141204834) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_4 <= -5.108085632324219) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_4 <= 40.92115020751953) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_2 <= -106.48560333251953) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_13 <= -0.10479473322629929) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_ano_2_OUT"), 
"DT_node_data_1" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'anoova_7' AS feature, -6.757258415222168 AS threshold, 506 AS count, 0 AS depth, 24.281225296442674 AS "Estimator" FROM DUAL UNION ALL SELECT 1 AS node_id, 'anoova_9' AS feature, 0.3210822343826294 AS threshold, 64 AS count, 1 AS depth, 38.860937499999984 AS "Estimator" FROM DUAL UNION ALL SELECT 2 AS node_id, 'anoova_5' AS feature, -1.631986141204834 AS threshold, 53 AS count, 2 AS depth, 42.16792452830189 AS "Estimator" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, 26.849999999999998 AS "Estimator" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 47 AS count, 3 AS depth, 44.12340425531915 AS "Estimator" FROM DUAL UNION ALL SELECT 5 AS node_id, 'anoova_4' AS feature, -5.108085632324219 AS threshold, 11 AS count, 2 AS depth, 22.927272727272722 AS "Estimator" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, 25.655555555555555 AS "Estimator" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 10.65 AS "Estimator" FROM DUAL UNION ALL SELECT 8 AS node_id, 'anoova_4' AS feature, 40.92115020751953 AS threshold, 442 AS count, 1 AS depth, 22.17013574660632 AS "Estimator" FROM DUAL UNION ALL SELECT 9 AS node_id, 'anoova_2' AS feature, -106.48560333251953 AS threshold, 373 AS count, 2 AS depth, 20.11313672922252 AS "Estimator" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 140 AS count, 3 AS depth, 24.53428571428572 AS "Estimator" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 233 AS count, 3 AS depth, 17.456652360515015 AS "Estimator" FROM DUAL UNION ALL SELECT 12 AS node_id, 'anoova_13' AS feature, -0.10479473322629929 AS threshold, 69 AS count, 2 AS depth, 33.289855072463766 AS "Estimator" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 3 AS depth, 47.625 AS "Estimator" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 57 AS count, 3 AS depth, 30.271929824561422 AS "Estimator" FROM DUAL) "Values"), 
"DT_Output_1" AS 
(SELECT "DT_node_lookup_1"."KEY" AS "KEY", "DT_node_lookup_1".node_id_2 AS node_id_2, "DT_node_data_1".node_id AS node_id, "DT_node_data_1".feature AS feature, "DT_node_data_1".threshold AS threshold, "DT_node_data_1".count AS count, "DT_node_data_1".depth AS depth, "DT_node_data_1"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_1" LEFT OUTER JOIN "DT_node_data_1" ON "DT_node_lookup_1".node_id_2 = "DT_node_data_1".node_id), 
"AdaBoost_Estim_1" AS 
(SELECT "DT_Output_1"."KEY" AS join_key_1, "DT_Output_1"."Estimator" AS "Estimator_1" 
FROM "DT_Output_1"), 
"DT_node_lookup_2" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anoova_7 <= 0.5049166679382324) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_13 <= -0.11692746728658676) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_14 <= -0.06313085556030273) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_2 <= -17.9653377532959) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_2 <= 75.39708709716797) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_4 <= -13.492561340332031) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_5 <= -3.5286407470703125) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_ano_2_OUT"), 
"DT_node_data_2" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'anoova_7' AS feature, 0.5049166679382324 AS threshold, 506 AS count, 0 AS depth, 23.242490118577066 AS "Estimator" FROM DUAL UNION ALL SELECT 1 AS node_id, 'anoova_13' AS feature, -0.11692746728658676 AS threshold, 287 AS count, 1 AS depth, 27.92369337979095 AS "Estimator" FROM DUAL UNION ALL SELECT 2 AS node_id, 'anoova_14' AS feature, -0.06313085556030273 AS threshold, 58 AS count, 2 AS depth, 39.67241379310344 AS "Estimator" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, 23.283333333333335 AS "Estimator" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 52 AS count, 3 AS depth, 41.56346153846154 AS "Estimator" FROM DUAL UNION ALL SELECT 5 AS node_id, 'anoova_2' AS feature, -17.9653377532959 AS threshold, 229 AS count, 2 AS depth, 24.948034934497826 AS "Estimator" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 145 AS count, 3 AS depth, 28.274482758620678 AS "Estimator" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 84 AS count, 3 AS depth, 19.205952380952372 AS "Estimator" FROM DUAL UNION ALL SELECT 8 AS node_id, 'anoova_2' AS feature, 75.39708709716797 AS threshold, 219 AS count, 1 AS depth, 17.107762557077624 AS "Estimator" FROM DUAL UNION ALL SELECT 9 AS node_id, 'anoova_4' AS feature, -13.492561340332031 AS threshold, 159 AS count, 2 AS depth, 19.319496855345914 AS "Estimator" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 82 AS count, 3 AS depth, 16.551219512195118 AS "Estimator" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 77 AS count, 3 AS depth, 22.26753246753248 AS "Estimator" FROM DUAL UNION ALL SELECT 12 AS node_id, 'anoova_5' AS feature, -3.5286407470703125 AS threshold, 60 AS count, 2 AS depth, 11.24666666666667 AS "Estimator" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, 18.066666666666666 AS "Estimator" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 51 AS count, 3 AS depth, 10.043137254901962 AS "Estimator" FROM DUAL) "Values"), 
"DT_Output_2" AS 
(SELECT "DT_node_lookup_2"."KEY" AS "KEY", "DT_node_lookup_2".node_id_2 AS node_id_2, "DT_node_data_2".node_id AS node_id, "DT_node_data_2".feature AS feature, "DT_node_data_2".threshold AS threshold, "DT_node_data_2".count AS count, "DT_node_data_2".depth AS depth, "DT_node_data_2"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_2" LEFT OUTER JOIN "DT_node_data_2" ON "DT_node_lookup_2".node_id_2 = "DT_node_data_2".node_id), 
"AdaBoost_Estim_2" AS 
(SELECT "DT_Output_2"."KEY" AS join_key_2, "DT_Output_2"."Estimator" AS "Estimator_2" 
FROM "DT_Output_2"), 
"DT_node_lookup_3" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anoova_7 <= -7.504458427429199) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_3 <= 83.36913299560547) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_4 <= 1.5691299438476562) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_5 <= 5.25734806060791) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_2 <= -3.1699275970458984) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_12 <= -0.2427942156791687) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_13 <= -0.04999227821826935) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_ano_2_OUT"), 
"DT_node_data_3" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'anoova_7' AS feature, -7.504458427429199 AS threshold, 506 AS count, 0 AS depth, 25.890513833992113 AS "Estimator" FROM DUAL UNION ALL SELECT 1 AS node_id, 'anoova_3' AS feature, 83.36913299560547 AS threshold, 70 AS count, 1 AS depth, 42.33714285714285 AS "Estimator" FROM DUAL UNION ALL SELECT 2 AS node_id, 'anoova_4' AS feature, 1.5691299438476562 AS threshold, 62 AS count, 2 AS depth, 45.18064516129033 AS "Estimator" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 58 AS count, 3 AS depth, 46.58275862068965 AS "Estimator" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 24.85 AS "Estimator" FROM DUAL UNION ALL SELECT 5 AS node_id, 'anoova_5' AS feature, 5.25734806060791 AS threshold, 8 AS count, 2 AS depth, 20.3 AS "Estimator" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, 23.099999999999998 AS "Estimator" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 11.9 AS "Estimator" FROM DUAL UNION ALL SELECT 8 AS node_id, 'anoova_2' AS feature, -3.1699275970458984 AS threshold, 436 AS count, 1 AS depth, 23.24999999999997 AS "Estimator" FROM DUAL UNION ALL SELECT 9 AS node_id, 'anoova_12' AS feature, -0.2427942156791687 AS threshold, 289 AS count, 2 AS depth, 27.4757785467128 AS "Estimator" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 82 AS count, 3 AS depth, 37.24024390243903 AS "Estimator" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 207 AS count, 3 AS depth, 23.607729468599057 AS "Estimator" FROM DUAL UNION ALL SELECT 12 AS node_id, 'anoova_13' AS feature, -0.04999227821826935 AS threshold, 147 AS count, 2 AS depth, 14.942176870748305 AS "Estimator" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 77 AS count, 3 AS depth, 18.45974025974027 AS "Estimator" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 70 AS count, 3 AS depth, 11.07285714285714 AS "Estimator" FROM DUAL) "Values"), 
"DT_Output_3" AS 
(SELECT "DT_node_lookup_3"."KEY" AS "KEY", "DT_node_lookup_3".node_id_2 AS node_id_2, "DT_node_data_3".node_id AS node_id, "DT_node_data_3".feature AS feature, "DT_node_data_3".threshold AS threshold, "DT_node_data_3".count AS count, "DT_node_data_3".depth AS depth, "DT_node_data_3"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_3" LEFT OUTER JOIN "DT_node_data_3" ON "DT_node_lookup_3".node_id_2 = "DT_node_data_3".node_id), 
"AdaBoost_Estim_3" AS 
(SELECT "DT_Output_3"."KEY" AS join_key_3, "DT_Output_3"."Estimator" AS "Estimator_3" 
FROM "DT_Output_3"), 
"DT_node_lookup_4" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anoova_7 <= -6.699812889099121) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_6 <= 4.955042362213135) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_9 <= -2.913661003112793) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_14 <= 0.008613896556198597) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_11 <= -1.4451308250427246) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_7 <= 0.06563118100166321) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_2 <= 16.772193908691406) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_ano_2_OUT"), 
"DT_node_data_4" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'anoova_7' AS feature, -6.699812889099121 AS threshold, 506 AS count, 0 AS depth, 26.07648221343873 AS "Estimator" FROM DUAL UNION ALL SELECT 1 AS node_id, 'anoova_6' AS feature, 4.955042362213135 AS threshold, 98 AS count, 1 AS depth, 39.15102040816326 AS "Estimator" FROM DUAL UNION ALL SELECT 2 AS node_id, 'anoova_9' AS feature, -2.913661003112793 AS threshold, 87 AS count, 2 AS depth, 42.55287356321839 AS "Estimator" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, 23.428571428571434 AS "Estimator" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 80 AS count, 3 AS depth, 44.22625000000001 AS "Estimator" FROM DUAL UNION ALL SELECT 5 AS node_id, 'anoova_14' AS feature, 0.008613896556198597 AS threshold, 11 AS count, 2 AS depth, 12.245454545454544 AS "Estimator" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 15.0 AS "Estimator" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, 9.950000000000001 AS "Estimator" FROM DUAL UNION ALL SELECT 8 AS node_id, 'anoova_11' AS feature, -1.4451308250427246 AS threshold, 408 AS count, 1 AS depth, 22.936029411764693 AS "Estimator" FROM DUAL UNION ALL SELECT 9 AS node_id, 'anoova_7' AS feature, 0.06563118100166321 AS threshold, 53 AS count, 2 AS depth, 36.62641509433962 AS "Estimator" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 42 AS count, 3 AS depth, 40.333333333333336 AS "Estimator" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS count, 3 AS depth, 22.47272727272727 AS "Estimator" FROM DUAL UNION ALL SELECT 12 AS node_id, 'anoova_2' AS feature, 16.772193908691406 AS threshold, 355 AS count, 2 AS depth, 20.89211267605634 AS "Estimator" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 238 AS count, 3 AS depth, 23.56218487394957 AS "Estimator" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 117 AS count, 3 AS depth, 15.46068376068375 AS "Estimator" FROM DUAL) "Values"), 
"DT_Output_4" AS 
(SELECT "DT_node_lookup_4"."KEY" AS "KEY", "DT_node_lookup_4".node_id_2 AS node_id_2, "DT_node_data_4".node_id AS node_id, "DT_node_data_4".feature AS feature, "DT_node_data_4".threshold AS threshold, "DT_node_data_4".count AS count, "DT_node_data_4".depth AS depth, "DT_node_data_4"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_4" LEFT OUTER JOIN "DT_node_data_4" ON "DT_node_lookup_4".node_id_2 = "DT_node_data_4".node_id), 
"AdaBoost_Estim_4" AS 
(SELECT "DT_Output_4"."KEY" AS join_key_4, "DT_Output_4"."Estimator" AS "Estimator_4" 
FROM "DT_Output_4"), 
"DT_node_lookup_5" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anoova_7 <= 0.2948818802833557) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_12 <= -0.23331084847450256) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_2 <= 115.75145721435547) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_13 <= 0.8067445755004883) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_4 <= 18.626419067382812) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_2 <= 135.4652557373047) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_12 <= -0.042379796504974365) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_ano_2_OUT"), 
"DT_node_data_5" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'anoova_7' AS feature, 0.2948818802833557 AS threshold, 506 AS count, 0 AS depth, 27.149604743082993 AS "Estimator" FROM DUAL UNION ALL SELECT 1 AS node_id, 'anoova_12' AS feature, -0.23331084847450256 AS threshold, 332 AS count, 1 AS depth, 32.236746987951825 AS "Estimator" FROM DUAL UNION ALL SELECT 2 AS node_id, 'anoova_2' AS feature, 115.75145721435547 AS threshold, 130 AS count, 2 AS depth, 39.64461538461539 AS "Estimator" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 113 AS count, 3 AS depth, 42.495575221238916 AS "Estimator" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 3 AS depth, 20.694117647058825 AS "Estimator" FROM DUAL UNION ALL SELECT 5 AS node_id, 'anoova_13' AS feature, 0.8067445755004883 AS threshold, 202 AS count, 2 AS depth, 27.46930693069307 AS "Estimator" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 177 AS count, 3 AS depth, 24.98135593220341 AS "Estimator" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 25 AS count, 3 AS depth, 45.083999999999996 AS "Estimator" FROM DUAL UNION ALL SELECT 8 AS node_id, 'anoova_4' AS feature, 18.626419067382812 AS threshold, 174 AS count, 1 AS depth, 17.443103448275885 AS "Estimator" FROM DUAL UNION ALL SELECT 9 AS node_id, 'anoova_2' AS feature, 135.4652557373047 AS threshold, 132 AS count, 2 AS depth, 14.371212121212121 AS "Estimator" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 80 AS count, 3 AS depth, 17.232499999999995 AS "Estimator" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 52 AS count, 3 AS depth, 9.969230769230766 AS "Estimator" FROM DUAL UNION ALL SELECT 12 AS node_id, 'anoova_12' AS feature, -0.042379796504974365 AS threshold, 42 AS count, 2 AS depth, 27.09761904761905 AS "Estimator" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 3 AS depth, 31.499999999999993 AS "Estimator" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 23 AS count, 3 AS depth, 23.460869565217394 AS "Estimator" FROM DUAL) "Values"), 
"DT_Output_5" AS 
(SELECT "DT_node_lookup_5"."KEY" AS "KEY", "DT_node_lookup_5".node_id_2 AS node_id_2, "DT_node_data_5".node_id AS node_id, "DT_node_data_5".feature AS feature, "DT_node_data_5".threshold AS threshold, "DT_node_data_5".count AS count, "DT_node_data_5".depth AS depth, "DT_node_data_5"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_5" LEFT OUTER JOIN "DT_node_data_5" ON "DT_node_lookup_5".node_id_2 = "DT_node_data_5".node_id), 
"AdaBoost_Estim_5" AS 
(SELECT "DT_Output_5"."KEY" AS join_key_5, "DT_Output_5"."Estimator" AS "Estimator_5" 
FROM "DT_Output_5"), 
"AdaBoost_Join_CTE" AS 
(SELECT "AdaBoost_Estim_0".join_key_0 AS join_key_0, "AdaBoost_Estim_0"."Estimator_0" AS "Estimator_0", "AdaBoost_Estim_1".join_key_1 AS join_key_1, "AdaBoost_Estim_1"."Estimator_1" AS "Estimator_1", "AdaBoost_Estim_2".join_key_2 AS join_key_2, "AdaBoost_Estim_2"."Estimator_2" AS "Estimator_2", "AdaBoost_Estim_3".join_key_3 AS join_key_3, "AdaBoost_Estim_3"."Estimator_3" AS "Estimator_3", "AdaBoost_Estim_4".join_key_4 AS join_key_4, "AdaBoost_Estim_4"."Estimator_4" AS "Estimator_4", "AdaBoost_Estim_5".join_key_5 AS join_key_5, "AdaBoost_Estim_5"."Estimator_5" AS "Estimator_5" 
FROM "AdaBoost_Estim_0" LEFT OUTER JOIN "AdaBoost_Estim_1" ON "AdaBoost_Estim_0".join_key_0 = "AdaBoost_Estim_1".join_key_1 LEFT OUTER JOIN "AdaBoost_Estim_2" ON "AdaBoost_Estim_2".join_key_2 = "AdaBoost_Estim_1".join_key_1 LEFT OUTER JOIN "AdaBoost_Estim_3" ON "AdaBoost_Estim_3".join_key_3 = "AdaBoost_Estim_2".join_key_2 LEFT OUTER JOIN "AdaBoost_Estim_4" ON "AdaBoost_Estim_4".join_key_4 = "AdaBoost_Estim_3".join_key_3 LEFT OUTER JOIN "AdaBoost_Estim_5" ON "AdaBoost_Estim_5".join_key_5 = "AdaBoost_Estim_4".join_key_4), 
"WeightedEstimators" AS 
(SELECT "Values"."Key" AS "Key", "Values".sub_estimator AS sub_estimator, "Values"."Weight" AS "Weight", "Values"."Value" AS "Value" 
FROM (SELECT "AdaBoost_Join_CTE".join_key_0 AS "Key", 0 AS sub_estimator, 0.227130499724 AS "Weight", "AdaBoost_Join_CTE"."Estimator_0" AS "Value" 
FROM "AdaBoost_Join_CTE" UNION ALL SELECT "AdaBoost_Join_CTE".join_key_0 AS "Key", 1 AS sub_estimator, 0.173506381595 AS "Weight", "AdaBoost_Join_CTE"."Estimator_1" AS "Value" 
FROM "AdaBoost_Join_CTE" UNION ALL SELECT "AdaBoost_Join_CTE".join_key_0 AS "Key", 2 AS sub_estimator, 0.161851293218 AS "Weight", "AdaBoost_Join_CTE"."Estimator_2" AS "Value" 
FROM "AdaBoost_Join_CTE" UNION ALL SELECT "AdaBoost_Join_CTE".join_key_0 AS "Key", 3 AS sub_estimator, 0.180485995066 AS "Weight", "AdaBoost_Join_CTE"."Estimator_3" AS "Value" 
FROM "AdaBoost_Join_CTE" UNION ALL SELECT "AdaBoost_Join_CTE".join_key_0 AS "Key", 4 AS sub_estimator, 0.121512219591 AS "Weight", "AdaBoost_Join_CTE"."Estimator_4" AS "Value" 
FROM "AdaBoost_Join_CTE" UNION ALL SELECT "AdaBoost_Join_CTE".join_key_0 AS "Key", 5 AS sub_estimator, 0.135513610806 AS "Weight", "AdaBoost_Join_CTE"."Estimator_5" AS "Value" 
FROM "AdaBoost_Join_CTE") "Values"), 
"Cumulative_Frequencies" AS 
(SELECT u1."Key" AS "Key", u1.sub_estimator AS sub_estimator, u1."Weight" AS "Weight", u1."Value" AS "Value", (SELECT sum(u2."Weight") AS sum_1 
FROM "WeightedEstimators" u2 
WHERE u1."Key" = u2."Key" AND u1."Value" >= u2."Value") AS cum_weight 
FROM "WeightedEstimators" u1), 
"Quantiles" AS 
(SELECT "AdaBoost_Join_CTE".join_key_0 AS join_key_0, "AdaBoost_Join_CTE"."Estimator_0" AS "Estimator_0", "AdaBoost_Join_CTE".join_key_1 AS join_key_1, "AdaBoost_Join_CTE"."Estimator_1" AS "Estimator_1", "AdaBoost_Join_CTE".join_key_2 AS join_key_2, "AdaBoost_Join_CTE"."Estimator_2" AS "Estimator_2", "AdaBoost_Join_CTE".join_key_3 AS join_key_3, "AdaBoost_Join_CTE"."Estimator_3" AS "Estimator_3", "AdaBoost_Join_CTE".join_key_4 AS join_key_4, "AdaBoost_Join_CTE"."Estimator_4" AS "Estimator_4", "AdaBoost_Join_CTE".join_key_5 AS join_key_5, "AdaBoost_Join_CTE"."Estimator_5" AS "Estimator_5", (SELECT min("Cumulative_Frequencies"."Value") AS min_1 
FROM "Cumulative_Frequencies" 
WHERE "AdaBoost_Join_CTE".join_key_0 = "Cumulative_Frequencies"."Key" AND "Cumulative_Frequencies".cum_weight >= 0.5) AS "Median" 
FROM "AdaBoost_Join_CTE")
 SELECT "Quantiles".join_key_0 AS "KEY", "Quantiles"."Median" AS "Estimator" 
FROM "Quantiles"